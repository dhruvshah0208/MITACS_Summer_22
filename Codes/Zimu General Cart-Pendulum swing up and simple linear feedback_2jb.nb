(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    231292,       4471]
NotebookOptionsPosition[    229171,       4434]
NotebookOutlinePosition[    229624,       4452]
CellTagsIndexPosition[    229581,       4449]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ffCartPendulumGeneral", "[", 
   RowBox[{"n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "xdot", ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", 
      ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", 
      "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
      "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
      ",", "\[Theta]dotff", ",", "uff"}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      FractionBox["\[Tau]", "n"]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{"xdot", ",", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
             ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", 
        "\[Theta]dot", ",", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "0", ",", 
        RowBox[{"-", "\[Lambda]1"}], ",", 
        RowBox[{
         FractionBox["2", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}], "3"]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  SuperscriptBox["\[Lambda]4", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                 RowBox[{"4", " ", "A", " ", 
                  SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"A", "+", "2"}], ")"}], " ", 
                  SuperscriptBox["\[Lambda]4", "2"]}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
                 RowBox[{"3", " ", "A"}], "+", "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
                 "2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                 "-", "\[Lambda]4"}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"A", "-", "2"}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A"}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}]}], "-", 
           RowBox[{"4", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
              RowBox[{"3", " ", "A"}], "+", "2"}], ")"}]}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"4", " "}], 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}]], 
          RowBox[{"(", 
           RowBox[{"A", " ", "\[Theta]dot", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
         "-", "\[Lambda]3"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "0"], "\[Equal]", 
         SubscriptBox["xdot", "0"], "\[Equal]", 
         SubscriptBox["x", "n"], "\[Equal]", 
         SubscriptBox["xdot", "n"], "\[Equal]", 
         SubscriptBox["\[Theta]", "0"], "\[Equal]", 
         SubscriptBox["\[Theta]dot", "0"], "\[Equal]", 
         SubscriptBox["\[Theta]dot", "n"], "\[Equal]", "0"}], ",", 
        RowBox[{
         SubscriptBox["\[Theta]", "n"], "\[Equal]", "\[Pi]"}]}], "}"}]}], ";", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "i"], ",", 
               SubscriptBox["xdot", "i"], ",", 
               SubscriptBox["\[Theta]", "i"], ",", 
               SubscriptBox["\[Theta]dot", "i"], ",", 
               SubscriptBox["\[Lambda]1", "i"], ",", 
               SubscriptBox["\[Lambda]2", "i"], ",", 
               SubscriptBox["\[Lambda]3", "i"], ",", 
               SubscriptBox["\[Lambda]4", "i"]}], "}"}], "\[Equal]", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                ")"}]}], "+", 
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["xdot", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Theta]", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Theta]dot", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]1", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]2", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]3", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]4", 
                 RowBox[{"i", "-", "1"}]]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", 
     RowBox[{"sv", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["x", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["xdot", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Theta]", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Theta]dot", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]1", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]2", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]3", "i"], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]4", "i"], ",", "0"}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", 
     RowBox[{"froot", "=", 
      RowBox[{"FindRoot", "[", 
       RowBox[{"eqns", ",", "sv"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["x", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
         "\[VeryThinSpace]", "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["xdot", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
         "\[VeryThinSpace]", "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
         "\[VeryThinSpace]", "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Theta]dot", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
         "\[VeryThinSpace]", "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
         "\[VeryThinSpace]", "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff"}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.847315752742555*^9, 3.847315753847568*^9}, {
  3.8473157938483944`*^9, 3.8473159015697536`*^9}, {3.847431662895845*^9, 
  3.847431709065241*^9}, {3.8474318028315053`*^9, 3.847431895441939*^9}, {
  3.847431945039482*^9, 3.847431957199132*^9}, {3.8474322756435733`*^9, 
  3.847432290767656*^9}, {3.8474326674177647`*^9, 3.8474326698622293`*^9}, {
  3.847432865792571*^9, 3.847432870851078*^9}, {3.8474329265860815`*^9, 
  3.8474329281340303`*^9}, {3.847433011691191*^9, 3.847433014963825*^9}, {
  3.8474336025939693`*^9, 3.84743361233008*^9}, {3.847433649868322*^9, 
  3.8474336501597157`*^9}, {3.847433694086319*^9, 3.8474336984878674`*^9}, {
  3.8474343988259664`*^9, 3.847434399069317*^9}, {3.861294753623957*^9, 
  3.8612947541167994`*^9}},
 CellLabel->
  "In[2017]:=",ExpressionUUID->"f1c573d6-66a6-443e-a536-78c2a7ddcebb"],

Cell["Test the approximate solution on the open-loop dynamics", "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
   3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
   3.7166267858131742`*^9}, 3.845482883460244*^9, 3.8454853041527863`*^9},
 FontSize->16,
 Background->GrayLevel[
  0.85],ExpressionUUID->"9064276b-1fef-4a94-baca-71c953dfb3ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TestSwingUpGeneral", "[", 
   RowBox[{"\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
      "\[Theta]dots", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"uff0", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", "0"}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xs", ",", "\[Theta]s"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.847432177105632*^9, 3.847432191792672*^9}, {
  3.847432227303192*^9, 3.8474322510192895`*^9}, {3.847432297525694*^9, 
  3.847432298632705*^9}, {3.8474323527213573`*^9, 3.847432415875557*^9}, {
  3.8474326801642494`*^9, 3.84743268179489*^9}, {3.847433214299324*^9, 
  3.847433249104309*^9}, {3.848285200264236*^9, 3.8482852134434357`*^9}},
 CellLabel->
  "In[2019]:=",ExpressionUUID->"93693239-7e2a-4f89-8cf7-a8f2b46766e2"],

Cell["\<\
Show that linear feedback can stabilize against \[OpenCurlyDoubleQuote]bad\
\[CloseCurlyDoubleQuote] numerics\
\>", "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
  3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
  3.7166267858131742`*^9}, {3.716631401415011*^9, 3.716631413565827*^9}},
 FontSize->16,
 Background->GrayLevel[
  0.85],ExpressionUUID->"5ad487c6-1d01-4bb4-8677-158c0fdc7a46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TestSwingUpGeneralFB", "[", 
   RowBox[{
   "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", ",", 
    "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{"uff", "[", "t", "]"}], "+", 
       RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", "0"}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{"uff", "[", "t", "]"}], "+", 
       RowBox[{"\[Kappa]1", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{"\[Kappa]2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{"\[Kappa]3", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"xff", "[", "t", "]"}], "-", 
          RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{"\[Kappa]4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"xdotff", "[", "t", "]"}], "-", 
          RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"xs", ",", "\[Theta]s", ",", "us"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8478517379388494`*^9, 3.847851752075812*^9}, 
   3.847851813122394*^9, {3.847851944474966*^9, 3.8478519581402545`*^9}, {
   3.847852070532321*^9, 3.847852120587901*^9}, {3.847852172636479*^9, 
   3.8478521950335903`*^9}, {3.847852252955641*^9, 3.847852298857153*^9}, {
   3.8478523552461233`*^9, 3.8478523610991964`*^9}, {3.847852488458049*^9, 
   3.84785262961858*^9}, {3.8478527884153085`*^9, 3.8478528838911724`*^9}, {
   3.8478529224244995`*^9, 3.8478529646315303`*^9}, {3.847853020161805*^9, 
   3.847853022380752*^9}, 3.8478532239841413`*^9, {3.847853428714581*^9, 
   3.847853525939581*^9}, {3.8478535563657465`*^9, 3.847853578817807*^9}, {
   3.8478536213438377`*^9, 3.8478536412170115`*^9}, {3.8478537916572657`*^9, 
   3.8478539245561676`*^9}, {3.847854001162655*^9, 3.847854005007567*^9}, {
   3.847854222502963*^9, 3.84785426131371*^9}, {3.847854291737336*^9, 
   3.847854325648571*^9}, 3.8478543850394273`*^9, 3.8478545025479116`*^9, {
   3.8478545370165124`*^9, 3.8478545518986883`*^9}, 3.847854591645032*^9, {
   3.8478546300943804`*^9, 3.847854635377248*^9}, {3.8478547341074843`*^9, 
   3.847854737590539*^9}, {3.8478548345213757`*^9, 3.847854907962556*^9}, {
   3.847855051388082*^9, 3.847855330296096*^9}, {3.8478553677987213`*^9, 
   3.847855372657921*^9}, {3.847855453653699*^9, 3.847855457544405*^9}, {
   3.847855600419648*^9, 3.8478556364733057`*^9}, {3.847855668936566*^9, 
   3.8478556745691566`*^9}, {3.8478559381246843`*^9, 3.847855952708763*^9}, {
   3.847856029643019*^9, 3.847856042165248*^9}, {3.847939980955227*^9, 
   3.8479400323626356`*^9}, {3.8479400815521574`*^9, 
   3.8479400847994795`*^9}, {3.847940173940426*^9, 3.8479402311035585`*^9}, {
   3.8479403156813807`*^9, 3.8479403865209236`*^9}, {3.847940520243255*^9, 
   3.847940523326828*^9}, {3.847956180698263*^9, 3.847956201518607*^9}, {
   3.847956682776015*^9, 3.847956699011285*^9}, {3.8479578937325544`*^9, 
   3.8479578973070107`*^9}, {3.847995700898568*^9, 3.8479957059066153`*^9}, {
   3.8480001411363993`*^9, 3.848000160227478*^9}, {3.8480833500048523`*^9, 
   3.848083353228476*^9}, {3.848083393786998*^9, 3.848083396258761*^9}, {
   3.8480834916112137`*^9, 3.848083501037628*^9}, {3.848084843059586*^9, 
   3.848084866547575*^9}, {3.848084969118318*^9, 3.8480849948039*^9}, {
   3.848284074270567*^9, 3.8482840795660563`*^9}, {3.848284656105207*^9, 
   3.8482846882527*^9}, {3.8482847703982*^9, 3.8482847739735003`*^9}, {
   3.848284812761745*^9, 3.84828481726508*^9}, {3.848284886710032*^9, 
   3.848284902301626*^9}, {3.848284940693275*^9, 3.8482849619159193`*^9}, {
   3.848285006396286*^9, 3.848285082533411*^9}, {3.848285235385049*^9, 
   3.848285239529561*^9}, {3.861906211904728*^9, 3.861906245844887*^9}},
 CellLabel->
  "In[2020]:=",ExpressionUUID->"bc2dd642-d8d4-420f-9e33-32c9a25fbf5c"],

Cell["Add Feedback Numerically", "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
   3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
   3.7166267858131742`*^9}, 3.845482883460244*^9, {3.8454833355827293`*^9, 
   3.845483336286716*^9}, {3.847433954599126*^9, 3.847433968468281*^9}, {
   3.8474344191285405`*^9, 3.847434424821303*^9}, {3.861906844509654*^9, 
   3.8619068494620705`*^9}},
 FontSize->16,
 Background->GrayLevel[
  0.85],ExpressionUUID->"683abb58-10c3-4348-b198-7d7ca8753749"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "xff0_", ",", "xdotff0_", ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",",
     "uff0_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "s11", ",", "s12", 
      ",", "s13", ",", "s14", ",", "s22", ",", "s23", ",", "s24", ",", "s33", 
      ",", "s34", ",", "s44", ",", "Af", ",", "Bf", ",", "Q", ",", "fx", ",", 
      "xState", ",", "ric", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"1", "-", 
         RowBox[{"A", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          SuperscriptBox["\[Theta]dot", "2"], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"1", "-", 
         RowBox[{"A", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             SuperscriptBox["\[Theta]dot", "2"], 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"(", GridBox[{
         {"s11", "s12", "s13", "s14"},
         {"s12", "s22", "s23", "s24"},
         {"s13", "s23", "s33", "s34"},
         {"s14", "s24", "s34", "s44"}
        }], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ric", " ", "=", " ", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", "  ", 
       RowBox[{
        RowBox[{"Af", "\[Transpose]"}], ".", "S"}], " ", "+", 
       RowBox[{"S", ".", "Af"}], " ", "-", 
       RowBox[{"Outer", "[", 
        RowBox[{"Times", ",", 
         RowBox[{"S", ".", "Bf"}], ",", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", "S"}]}], " ", "]"}]}]}], " ", 
     ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "This", " ", "is", " ", "the", " ", "Syntax", " ", "for", " ", 
       "calculating", " ", "Outer", " ", "Products"}], " ", "*)"}], 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Q", " ", "=", " ", "I"}], ",", " ", 
       RowBox[{"M", " ", "=", " ", "0"}], ",", " ", 
       RowBox[{"R", " ", "=", " ", "1"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"RHS", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", " ", "=", " ", "xff0"}], ";", 
     RowBox[{"xdot", " ", "=", " ", "xdotff0"}], ";", 
     RowBox[{"\[Theta]", " ", "=", "\[Theta]ff0"}], ";", 
     RowBox[{"\[Theta]dot", " ", "=", " ", "\[Theta]dotff0"}], ";", 
     RowBox[{"u", " ", "=", " ", "uff0"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Entering", " ", "State", " ", "Values"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "s11", ",", "s12", ",", "s13", ",", "s14", ",", "s22", ",", "s23", ",",
         "s24", ",", "s33", ",", "s34", ",", "s44"}], "}"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"NSolveValues", "[", 
        RowBox[{
         RowBox[{"ric", "==", "RHS"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "s11", ",", "s12", ",", "s13", ",", "s14", ",", "s22", ",", "s23", 
           ",", "s24", ",", "s33", ",", "s34", ",", "s44"}], "}"}], ",", 
         "Reals"}], "]"}], " ", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"(", GridBox[{
         {"s11", "s12", "s13", "s14"},
         {"s12", "s22", "s23", "s24"},
         {"s13", "s23", "s33", "s34"},
         {"s14", "s24", "s34", "s44"}
        }], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"Bf", "\[Transpose]"}], ".", "S"}]}], " ", ";", 
     "\[IndentingNewLine]", "K"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TestSwingUpGeneralFBNumeric", "[", 
    RowBox[{
    "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", ",", 
     "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "K", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "ufb", ",", "u", ",", 
       "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"K", " ", "=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff0", ",", "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", 
         ",", "uff0", ",", "A"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"K", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"K", "[", 
            RowBox[{"[", "4", "]"}], "]"}], " ", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"K", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"K", "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", "*", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", "0"}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{
         RowBox[{"K", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"K", "[", 
          RowBox[{"[", "4", "]"}], "]"}], " ", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"K", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xff", "[", "t", "]"}], "-", 
           RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"K", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xdotff", "[", "t", "]"}], "-", 
           RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"xs", ",", "\[Theta]s", ",", "us"}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8619068761555443`*^9, 3.861907190631092*^9}, {
  3.861907223980438*^9, 3.861907240664109*^9}, {3.8619072707784877`*^9, 
  3.8619073033600807`*^9}, {3.8619074099980183`*^9, 3.861907410504856*^9}, {
  3.861907443131433*^9, 3.861907446920226*^9}, {3.861907525190222*^9, 
  3.8619075259699726`*^9}, {3.8619076140928235`*^9, 3.861907639155817*^9}, {
  3.861907671563464*^9, 3.861907701586875*^9}, {3.861908101353174*^9, 
  3.861908116621297*^9}, {3.8619085519852276`*^9, 3.8619085570636063`*^9}, {
  3.8619087959183073`*^9, 3.861908796968972*^9}, {3.8619088799824533`*^9, 
  3.8619089096339827`*^9}},
 CellLabel->
  "In[2021]:=",ExpressionUUID->"46ab8ae2-6dd0-439e-b933-38d15d959713"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8619077497175007`*^9, 3.8619079336757364`*^9}, {
   3.861908583035309*^9, 3.861908625073884*^9}, {3.8619086697785997`*^9, 
   3.861908742402403*^9}, {3.861908774107274*^9, 3.8619087760576525`*^9}, 
   3.8619088783219843`*^9},
 CellLabel->
  "In[2023]:=",ExpressionUUID->"0af177f1-d4b4-4d4f-b572-871ec619b57c"],

Cell["Test example", "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
  3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
  3.7166267858131742`*^9}, {3.716631401415011*^9, 3.716631413565827*^9}, {
  3.847958278702722*^9, 3.847958285232273*^9}},
 FontSize->16,
 Background->GrayLevel[
  0.85],ExpressionUUID->"4bf8405d-f174-4744-b89e-d9a99d7ce373"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "5"}], ";", 
  RowBox[{"\[Tau]", "=", "5"}], ";", 
  RowBox[{"\[Tau]1", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", "0.2"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
      "u1a"}], "}"}], "=", 
    RowBox[{"ffCartPendulumGeneral", "[", 
     RowBox[{"n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A"}], "]"}]}], ";"}], 
  "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1b", ",", "\[Theta]1b"}], "}"}], "=", 
    RowBox[{"TestSwingUpGeneral", "[", 
     RowBox[{"\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], "]"}]}], ";"}],
   " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1c", ",", "\[Theta]1c", ",", "u1c"}], "}"}], "=", 
   RowBox[{"TestSwingUpGeneralFBNumeric", "[", 
    RowBox[{
    "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", "\[Theta]1a", 
     ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Linear feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1a", ",", "p1b", ",", "p1c"}], "}"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.847957894930352*^9, 3.847957895217608*^9}, {
   3.8479582145796533`*^9, 3.847958263924788*^9}, 3.8479589821668615`*^9, {
   3.847979696070838*^9, 3.847979696197056*^9}, 3.848086065814939*^9, {
   3.848284094112486*^9, 3.848284094228133*^9}, 3.848284728851212*^9, 
   3.848284790872182*^9, 3.848284985455407*^9, 3.8482852570120163`*^9, 
   3.8607683225782323`*^9, {3.860768452659197*^9, 3.8607685097197566`*^9}, {
   3.860772062935492*^9, 3.8607720902606606`*^9}, 3.860772250065019*^9, {
   3.8607723472286196`*^9, 3.8607723484572225`*^9}, {3.86077241551655*^9, 
   3.8607724602151055`*^9}, {3.8607725783389335`*^9, 3.8607725793216143`*^9}, 
   3.8607726194626436`*^9, {3.8607726806808605`*^9, 3.8607726809807653`*^9}, {
   3.860851791470311*^9, 3.860851797034525*^9}, 3.860851837867416*^9, {
   3.8608520790030003`*^9, 3.8608520810003595`*^9}, 3.8608521308243637`*^9, {
   3.861906278936318*^9, 3.8619062790012956`*^9}, {3.8619063106981716`*^9, 
   3.8619063401257715`*^9}, {3.861906384671542*^9, 3.861906401854052*^9}, {
   3.8619088247401*^9, 3.861908825734782*^9}, {3.861908944632802*^9, 
   3.861908958020527*^9}, 3.8619109244413853`*^9},
 CellLabel->
  "In[2024]:=",ExpressionUUID->"bf40c848-fe53-419b-adfb-b3a4c1314970"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 2026, 350, 
   17514589560804102364, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.861906385530267*^9, 3.861906402593816*^9}, 
   3.861908843248188*^9, 3.8619089224908752`*^9, 3.8619089598759336`*^9, 
   3.8619106898583183`*^9, 3.8619109375152073`*^9},
 CellLabel->
  "During evaluation of \
In[2024]:=",ExpressionUUID->"45d92540-a385-46f2-a2bb-976977094fcd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "10"}], ";", 
  RowBox[{"\[Tau]", "=", "5"}], ";", 
  RowBox[{"\[Tau]1", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", "0.2"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
      "u1a"}], "}"}], "=", 
    RowBox[{"ffCartPendulumGeneral", "[", 
     RowBox[{"n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A"}], "]"}]}], ";"}], 
  "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1b", ",", "\[Theta]1b"}], "}"}], "=", 
    RowBox[{"TestSwingUpGeneral", "[", 
     RowBox[{"\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], "]"}]}], ";"}],
   " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1c", ",", "\[Theta]1c", ",", "u1c"}], "}"}], "=", 
   RowBox[{"TestSwingUpGeneralFBNumeric", "[", 
    RowBox[{
    "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", "\[Theta]1a", 
     ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Linear feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1a", ",", "p1b", ",", "p1c"}], "}"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8619106690899534`*^9, 3.8619106691739244`*^9}, {
  3.8619109190371103`*^9, 
  3.8619109191390796`*^9}},ExpressionUUID->"82475b9e-2d27-4047-ab55-\
c47f77b59be9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "20"}], ";", 
  RowBox[{"\[Tau]", "=", "5"}], ";", 
  RowBox[{"\[Tau]1", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", "0.2"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
      "u1a"}], "}"}], "=", 
    RowBox[{"ffCartPendulumGeneral", "[", 
     RowBox[{"n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A"}], "]"}]}], ";"}], 
  "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1b", ",", "\[Theta]1b"}], "}"}], "=", 
    RowBox[{"TestSwingUpGeneral", "[", 
     RowBox[{"\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], "]"}]}], ";"}],
   " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1c", ",", "\[Theta]1c", ",", "u1c"}], "}"}], "=", 
   RowBox[{"TestSwingUpGeneralFBNumeric", "[", 
    RowBox[{
    "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", "\[Theta]1a", 
     ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Linear feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1a", ",", "p1b", ",", "p1c"}], "}"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8619106732526236`*^9, 3.861910673298608*^9}, {
  3.861910928914956*^9, 
  3.8619109289999275`*^9}},ExpressionUUID->"9c43b115-c629-4ecc-87ce-\
df2b309c3c26"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.861910681607955*^9, 3.86191068171592*^9}, 
   3.861910933229578*^9},ExpressionUUID->"03c7efac-8cca-4322-b499-\
6cd17b5b4aa5"],

Cell["Animation with General Cart-Pendulum swing up", "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
   3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
   3.7166267858131742`*^9}, 3.845482883460244*^9, {3.8454833355827293`*^9, 
   3.845483336286716*^9}, {3.847433954599126*^9, 3.847433968468281*^9}, {
   3.8474344191285405`*^9, 3.847434424821303*^9}},
 FontSize->16,
 Background->GrayLevel[
  0.85],ExpressionUUID->"09e0bf8d-0fbb-4418-b194-8ee43d4c5bc0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AnimatePendulum", "[", "rules_", "]"}], ":=", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"DrawSinglePendulum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], "/.", "rules"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "rules"}], ",", "1", ",",
          "1"}], "}"}], ",", "t"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
    RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
    RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DrawSinglePendulum", "[", 
    RowBox[{"cart_", ",", 
     RowBox[{"{", 
      RowBox[{"angle1_", ",", "length1_", ",", "mass1_"}], "}"}], ",", "t_"}],
     "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"width1", ",", 
       RowBox[{"density", "=", "30"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"width1", "=", 
       RowBox[{
        RowBox[{"mass1", "/", "length1"}], "/", "density"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"cart", "-", 
                 RowBox[{"1", "/", "4"}]}], ",", 
                RowBox[{
                 RowBox[{"-", "1"}], "/", "15"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"cart", "+", 
                 RowBox[{"1", "/", "4"}]}], ",", 
                RowBox[{"1", "/", "15"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", 
            RowBox[{"Translate", "[", 
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "width1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"length1", ",", 
                    RowBox[{"-", "width1"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"angle1", "-", 
                 RowBox[{"\[Pi]", "/", "2"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"cart", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "2"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "280"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "Dashed"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<t\>\"", "\[Equal]", 
          RowBox[{"NumberForm", "[", 
           RowBox[{"t", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "2"}], "}"}]}], "]"}]}]}]}], "]"}]}]}], 
    "]"}]}], "    "}], "\[IndentingNewLine]", 
 RowBox[{"anim", "=", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"DrawSinglePendulum", "[", 
      RowBox[{
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", "1", ",", "1"}], "}"}], 
       ",", "t"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
    RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
    RowBox[{"AnimationRunning", "\[Rule]", "False"}], ",", 
    RowBox[{"AnimationRepetitions", "\[Rule]", "1"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8474334026753283`*^9, 3.847433403008462*^9}, {
   3.847433433543202*^9, 3.8474334675097246`*^9}, {3.8474337748561916`*^9, 
   3.8474337809669757`*^9}, 3.8474338451570363`*^9, {3.8474340570191107`*^9, 
   3.847434108373478*^9}, {3.847434153821231*^9, 3.8474341562594447`*^9}, {
   3.847434207216559*^9, 3.8474342224532022`*^9}, 3.847434288455736*^9, {
   3.8474343381485023`*^9, 3.847434344353918*^9}, {3.8474344879581165`*^9, 
   3.847434533952104*^9}, 3.84750202915766*^9, {3.847502087246366*^9, 
   3.847502135130405*^9}, 3.8475031178075657`*^9, 3.847503350830954*^9, {
   3.847842090655676*^9, 3.8478421364550157`*^9}, {3.847854024328363*^9, 
   3.8478540348261814`*^9}, {3.847854073711717*^9, 3.847854088482562*^9}, {
   3.8478546533550863`*^9, 3.8478546738614874`*^9}, {3.8478560553610106`*^9, 
   3.8478560562905273`*^9}, {3.847856717812004*^9, 3.8478567193832455`*^9}, {
   3.8479401050604453`*^9, 3.8479401074002285`*^9}, {3.847956073175027*^9, 
   3.847956075358217*^9}, {3.86076842114338*^9, 3.8607684235106163`*^9}, {
   3.8607726570355015`*^9, 3.8607726600105405`*^9}, {3.8619063673990593`*^9, 
   3.861906369481393*^9}},
 CellLabel->
  "In[1733]:=",ExpressionUUID->"3c0ffa17-1538-4b36-838e-10c6b32685c8"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 18.75, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 18.75}}, Typeset`size$$ = {
    336., {174., 180.17832031250003`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{{
          RGBColor[0, 0, 1], 
          
          Rectangle[{
           Rational[-1, 4] + 
            InterpolatingFunction[{{0., 18.75}}, {
              5, 7, 1, {1160}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
               False}, CompressedData["
1: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
inwK8OJKk/tDWQVY4CQ9ZNFTAPn8u23XzBTAzOprX+45BdDRF77X5acAMiqW
hsuRCsCFi6YTTVeAy2/iiuVLFeC95wMr3ToFUBF7tMOkUwHiWjMK7T4rwIpb
rqXbTwVo6mFkMVxXgATnfCYrpOvmIUZHpF78L3pPJI98DF0Q8kejCu095N05
760CpKp43Xor8tMhurVRpOOuyuG1DQX4/dm1aeeWAigwinLhkK6KnccVkT+C
FBcOIe37YsJdkEMyS5LByL17gy7eRxac5Hz5GOkbRzKvQxq93TszhBSmPRn8
Z9v264t/t43OOLWGFLFq6f63rfik7sa2P1iLNpFfyzNebJt5W6ttWzLBdXTb
Z00PNrbVPtMuuLX9nMWD25Y8biO7rci56d3bss74Gm27dontxLZSV26e2tbQ
Z9V526RbE1e2nYjsD9pWPakpalu7Lp+4bUPoqcnb9rs/zN6W8IX56bZXDK/W
bLtS2tuwrQ+/ctu2gWO/3m17+0nh523DA1wmtj337+HM/819N78ty1Wt9W2d
jg9ubNuEeW9te3gg7D/73B/850mWgv8cf/zyP9203v5n0PmZ/4x9yEFDQ0OB
rE7Kf1pU+e7YliGzlXbbn521XNu+/1suum0Vvkj2P3vMC7etDPgnv2NbucyS
bctmFF8xIotLarrZkPnuht+4t/OVP8zxIa+1WiYcRBoc79f2Qwr9shgpRk4H
9YV8Q9bwWcjz7kBzPx3J5KCjgHDGIWFmBgoYuhjE0DJRwJuyj3mDmQK5S3rX
/7BSINvcNkpHkAIZZT6pQdIUSONJLGpVpkCqe3k1G1Agufvdm6PGFEii/B6M
P06BltKiPjp3CixQXbsvB1NAooz45msyBYxVfjQbP6GAb3nGq+oWlK/m8FL2
EwUELSvNChcpEH6F86c8uyKs3Xe8VUJQBNdnNSJUXUX49J63/KmlIhxecD2s
ckkRangav5eHKEJr8NnVW1mK0LPKyGneqAiDF/OlpL4pwtjIIY35DUVYkfsj
/Y2DCv/OHnzSJkoFmrQHWqVkKqi0Fgvt16WC82zD3wETKiTv+vDxogMVOrWn
K2g9UN+ZzfjEW6jvzs6r8vFUcHoqY9GQQ4WklQdRtlVUeKPN0f6nnQrrN27Q
3f9EBUrroi5llgoObM7e7ZtUiD06VHaWWwmMOne/VyIpAa3Rg/lNTAletv7l
7rBSAo991tQHbkogV195xClUCUZ1BNxU0pTgwYtrUTSVSpCgqtQl3acE90t/
chyaV4J7cjnG7pzKcDfbITKerAxhkiKdLw8qQ3BKP/s3R2UI4o8+zHBLGb4Y
PTvk/lgZ3LIHpaueKMN/Pw3VK8P/AzEq1IE=
              "], {Developer`PackedArrayForm, CompressedData["
1:eJwd12FEKGCyBuDu2bbbJkmSJOkmSZIkSZIkSZIkSZIkSdImSY4kSbpJkiTJ
kSRJkiRJkiRJkiRJkiRJkiRJss/Zj4fv/ztjZv6v4d8Vbf8TEBDw/4EB/32/
+PsNIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskjnwIKKaKY
Ekopo5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKb3/TQSx/9DDDIEMOMMMoY
40wwyRTTzPCHWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaEU84454JL
rrjmhlvuuOeBR5545oVX3njng0+++OaHAIXwi0CCCCaEUMIIJ4JIoogmhlji
iCeBRJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa6qingUaa
aKaFVv4WeTsddNJFN7/poZc++hlgkCGGGWGUMcaZYJIpppnhD7PMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND3+b/xeBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZZJFN
DrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRzW966KWP
fgYYZIhhRhhljHEmmGSKaWb4wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8Ah
RxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzQ8A/5E8gQQQTQihh
hBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVV
VFNDLXXU00AjTTTTQitttNNBJ11085seeumjnwEGGWKYEUYZY5wJJplimhn+
MMsc8yywyBLLrLDKGutssMkW2+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc8
8MgTz7zwyhvvfPDJF9/88Hfw/yKQIIIJIZQwwokgkiiiiSGWOOJJIJEkkkkh
lTTSySCTLLLJIZc88imgkCKKKaGUMsqpoJIqqqmhljrqaaCRJpppoZU22umg
ky66+U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQx/mGWOeRZYZIllVlhljXU22GSL
bXbYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ1545Y13Pvjki29+CPin
/AkkiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10Msgki2xyyCWPfAoopIhi
SiiljHIqqKSKamqopY56GmikiWZaaKWNdjropItuftNDL330M8AgQwwzwihj
jDPBJFNMM8MfZpljngUWWWKZFVZZY50NNtlimx122WOfAw454pgTTjnjnAsu
ueKaG265454HHnnimRdeeeOdDz754psf/i79vwgkiGBCCCWMcCKIJIpoYogl
jngSSCSJZFJIJY10Msgki2xyyCWPfAoopIhiSiiljHIqqKSKamqopY56Gmik
iWZaaKWNdjropItuftNDL330M8AgQwwzwihjjDPBJFNMM8MfZpljngUWWWKZ
FVZZY50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOd
Dz754psfAv5X/gQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSSRTY5
5JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3v+mhlz76
GWCQIYYZYZQxxplgkimmmeEPs8wxzwKLLLHMCqussc4Gm2yxzQ677LHPAYcc
ccwJp5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0Pfw/+XwQSRDAhhBJG
OBFEEkU0McQSRzwJJJJEMimkkkY6GWSSRTY55JJHPgUUUkQxJZRSRjkVVFJF
NTXUUkc9DTTSRDMttNJGOx100kU3v+mhlz76GWCQIYYZYZQxxplgkimmmeEP
s8wxzwKLLLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8D
jzzxzAuvvPHOB5988c0PAf+SP4EEEUwIoYQRzn8AIvlQeA==
               "], CompressedData["
1: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
t0dXSdofhuBOzoCSkO0KLB1+0Er7bgh0hekoFl+tgOT9j2HRL4bg4vlWUlD3
CnD269nx4fuhrKT9tsjJVfh0c3dtJr7flJNd/rz+vAo+y3Fi2qWDoH5pUef7
xCoIBlzqy3EZhFMau7qNVddA6bmfFfH4INRFfWLhr1iDzNPUlMU5A9D6n1bc
yfPrwKVV0f9BbgACFVfXDEvWYah8dTAhqh9ac0cUhU5tQERYkpcnbT/Yf/wv
RyVpA4ZN7zRr5pCgfWzz7GW+Tbgg7224X6sXhn7kaNhhv39AL5So2QscXuuX
PmFPMh/6q4hdngpXUrEj3BrSqy72gj4zg2Ejtl4lh5MRNn9I2/VZ7KSWKYWR
C73Qxf/c7Oj+Tch2rP9DjW1qKHPXDpttL430IY1e8Dq2cC8Vu+Hz529nzvfC
xqIwz1GBTYCg6Ozbyr0gKvCCPuXQJgxssrK7yfWCiEPUCWnhTVDbuBIdJtkL
IZe1whMOb8Lo/SGbbMFecHYTyLVEm5CT50HdX9UDy+zco7rnNmHZ4aBZblYP
vIqWWztxcRPi2ivd30X3gPVD0tQ+nU3Q+jBkffZLD/SuzNgyXd6EK6TSnGmv
HnjzteXxzhU83/1T/t/deuDwV/OFOb1NoGQV3Tn7sgfEDWqftBrh+BODwrys
e4DLxWs+y2QTRE+IsFWa9kD51PKDr7c2QcNIWnNFtwdC1O/2OFhsgi4vuy7f
2R44ua32fuz9Jpyciz5OkdYNvtLDH0ITN2GGyp7Hc383MPUxq3wibAKB3udz
khv+7uk4NPBndhPCPFbNHo10Qs3DxjfO+7eAPvSV/mvWTjAWu3q2/PwWaF5q
WxiT7YAN5polX9styLmV/TIOf7/t72J7VfF1C57KqmRUmLXBR/lXteb5W1AV
2Rp15VEr3ElutVKd3YKQfHUTqXUiUOUfobY7uA3vH5rW2D9rBv3tpGNll7aB
oe6Rzq/RRnj0SIqb13EbonmvfuP9TADjgd0dOt+34aRTMtfayVow0qQWUM3Z
hnJo/nCkohIUytcTVtu3wT3D/KpYXSkUx10Lp57bhgUnZr46RwA2S3aXIYod
8FMSULvXmQ1Ir119HFt3H7t4XFs2mLuvMs9gS6svsowTs6F+1bF1Eful3tKc
eFM2tKboBq9jx2ZxNT8gZENj3LvbFJQ7sH/QICWxNhuu8CdMMWLPC3Hfka7A
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
yz7MP5cgq9SU4wFAAcFbI1QAyj/rhClW
               "]}, {Automatic}][$CellContext`t$$], 
            Rational[-1, 15]}, {
           Rational[1, 4] + 
            InterpolatingFunction[{{0., 18.75}}, {
              5, 7, 1, {1160}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
               False}, CompressedData["
1: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
inwK8OJKk/tDWQVY4CQ9ZNFTAPn8u23XzBTAzOprX+45BdDRF77X5acAMiqW
hsuRCsCFi6YTTVeAy2/iiuVLFeC95wMr3ToFUBF7tMOkUwHiWjMK7T4rwIpb
rqXbTwVo6mFkMVxXgATnfCYrpOvmIUZHpF78L3pPJI98DF0Q8kejCu095N05
760CpKp43Xor8tMhurVRpOOuyuG1DQX4/dm1aeeWAigwinLhkK6KnccVkT+C
FBcOIe37YsJdkEMyS5LByL17gy7eRxac5Hz5GOkbRzKvQxq93TszhBSmPRn8
Z9v264t/t43OOLWGFLFq6f63rfik7sa2P1iLNpFfyzNebJt5W6ttWzLBdXTb
Z00PNrbVPtMuuLX9nMWD25Y8biO7rci56d3bss74Gm27dontxLZSV26e2tbQ
Z9V526RbE1e2nYjsD9pWPakpalu7Lp+4bUPoqcnb9rs/zN6W8IX56bZXDK/W
bLtS2tuwrQ+/ctu2gWO/3m17+0nh523DA1wmtj337+HM/819N78ty1Wt9W2d
jg9ubNuEeW9te3gg7D/73B/850mWgv8cf/zyP9203v5n0PmZ/4x9yEFDQ0OB
rE7Kf1pU+e7YliGzlXbbn521XNu+/1suum0Vvkj2P3vMC7etDPgnv2NbucyS
bctmFF8xIotLarrZkPnuht+4t/OVP8zxIa+1WiYcRBoc79f2Qwr9shgpRk4H
9YV8Q9bwWcjz7kBzPx3J5KCjgHDGIWFmBgoYuhjE0DJRwJuyj3mDmQK5S3rX
/7BSINvcNkpHkAIZZT6pQdIUSONJLGpVpkCqe3k1G1Agufvdm6PGFEii/B6M
P06BltKiPjp3CixQXbsvB1NAooz45msyBYxVfjQbP6GAb3nGq+oWlK/m8FL2
EwUELSvNChcpEH6F86c8uyKs3Xe8VUJQBNdnNSJUXUX49J63/KmlIhxecD2s
ckkRangav5eHKEJr8NnVW1mK0LPKyGneqAiDF/OlpL4pwtjIIY35DUVYkfsj
/Y2DCv/OHnzSJkoFmrQHWqVkKqi0Fgvt16WC82zD3wETKiTv+vDxogMVOrWn
K2g9UN+ZzfjEW6jvzs6r8vFUcHoqY9GQQ4WklQdRtlVUeKPN0f6nnQrrN27Q
3f9EBUrroi5llgoObM7e7ZtUiD06VHaWWwmMOne/VyIpAa3Rg/lNTAletv7l
7rBSAo991tQHbkogV195xClUCUZ1BNxU0pTgwYtrUTSVSpCgqtQl3acE90t/
chyaV4J7cjnG7pzKcDfbITKerAxhkiKdLw8qQ3BKP/s3R2UI4o8+zHBLGb4Y
PTvk/lgZ3LIHpaueKMN/Pw3VK8P/AzEq1IE=
              "], {Developer`PackedArrayForm, CompressedData["
1:eJwd12FEKGCyBuDu2bbbJkmSJOkmSZIkSZIkSZIkSZIkSdImSY4kSbpJkiTJ
kSRJkiRJkiRJkiRJkiRJkiRJss/Zj4fv/ztjZv6v4d8Vbf8TEBDw/4EB/32/
+PsNIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskjnwIKKaKY
Ekopo5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKb3/TQSx/9DDDIEMOMMMoY
40wwyRTTzPCHWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaEU84454JL
rrjmhlvuuOeBR5545oVX3njng0+++OaHAIXwi0CCCCaEUMIIJ4JIoogmhlji
iCeBRJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa6qingUaa
aKaFVv4WeTsddNJFN7/poZc++hlgkCGGGWGUMcaZYJIpppnhD7PMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND3+b/xeBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZZJFN
DrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRzW966KWP
fgYYZIhhRhhljHEmmGSKaWb4wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8Ah
RxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzQ8A/5E8gQQQTQihh
hBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVV
VFNDLXXU00AjTTTTQitttNNBJ11085seeumjnwEGGWKYEUYZY5wJJplimhn+
MMsc8yywyBLLrLDKGutssMkW2+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc8
8MgTz7zwyhvvfPDJF9/88Hfw/yKQIIIJIZQwwokgkiiiiSGWOOJJIJEkkkkh
lTTSySCTLLLJIZc88imgkCKKKaGUMsqpoJIqqqmhljrqaaCRJpppoZU22umg
ky66+U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQx/mGWOeRZYZIllVlhljXU22GSL
bXbYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ1545Y13Pvjki29+CPin
/AkkiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10Msgki2xyyCWPfAoopIhi
SiiljHIqqKSKamqopY56GmikiWZaaKWNdjropItuftNDL330M8AgQwwzwihj
jDPBJFNMM8MfZpljngUWWWKZFVZZY50NNtlimx122WOfAw454pgTTjnjnAsu
ueKaG265454HHnnimRdeeeOdDz754psf/i79vwgkiGBCCCWMcCKIJIpoYogl
jngSSCSJZFJIJY10Msgki2xyyCWPfAoopIhiSiiljHIqqKSKamqopY56Gmik
iWZaaKWNdjropItuftNDL330M8AgQwwzwihjjDPBJFNMM8MfZpljngUWWWKZ
FVZZY50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOd
Dz754psfAv5X/gQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSSRTY5
5JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3v+mhlz76
GWCQIYYZYZQxxplgkimmmeEPs8wxzwKLLLHMCqussc4Gm2yxzQ677LHPAYcc
ccwJp5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0Pfw/+XwQSRDAhhBJG
OBFEEkU0McQSRzwJJJJEMimkkkY6GWSSRTY55JJHPgUUUkQxJZRSRjkVVFJF
NTXUUkc9DTTSRDMttNJGOx100kU3v+mhlz76GWCQIYYZYZQxxplgkimmmeEP
s8wxzwKLLLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8D
jzzxzAuvvPHOB5988c0PAf+SP4EEEUwIoYQRzn8AIvlQeA==
               "], CompressedData["
1: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
t0dXSdofhuBOzoCSkO0KLB1+0Er7bgh0hekoFl+tgOT9j2HRL4bg4vlWUlD3
CnD269nx4fuhrKT9tsjJVfh0c3dtJr7flJNd/rz+vAo+y3Fi2qWDoH5pUef7
xCoIBlzqy3EZhFMau7qNVddA6bmfFfH4INRFfWLhr1iDzNPUlMU5A9D6n1bc
yfPrwKVV0f9BbgACFVfXDEvWYah8dTAhqh9ac0cUhU5tQERYkpcnbT/Yf/wv
RyVpA4ZN7zRr5pCgfWzz7GW+Tbgg7224X6sXhn7kaNhhv39AL5So2QscXuuX
PmFPMh/6q4hdngpXUrEj3BrSqy72gj4zg2Ejtl4lh5MRNn9I2/VZ7KSWKYWR
C73Qxf/c7Oj+Tch2rP9DjW1qKHPXDpttL430IY1e8Dq2cC8Vu+Hz529nzvfC
xqIwz1GBTYCg6Ozbyr0gKvCCPuXQJgxssrK7yfWCiEPUCWnhTVDbuBIdJtkL
IZe1whMOb8Lo/SGbbMFecHYTyLVEm5CT50HdX9UDy+zco7rnNmHZ4aBZblYP
vIqWWztxcRPi2ivd30X3gPVD0tQ+nU3Q+jBkffZLD/SuzNgyXd6EK6TSnGmv
HnjzteXxzhU83/1T/t/deuDwV/OFOb1NoGQV3Tn7sgfEDWqftBrh+BODwrys
e4DLxWs+y2QTRE+IsFWa9kD51PKDr7c2QcNIWnNFtwdC1O/2OFhsgi4vuy7f
2R44ua32fuz9Jpyciz5OkdYNvtLDH0ITN2GGyp7Hc383MPUxq3wibAKB3udz
khv+7uk4NPBndhPCPFbNHo10Qs3DxjfO+7eAPvSV/mvWTjAWu3q2/PwWaF5q
WxiT7YAN5polX9styLmV/TIOf7/t72J7VfF1C57KqmRUmLXBR/lXteb5W1AV
2Rp15VEr3ElutVKd3YKQfHUTqXUiUOUfobY7uA3vH5rW2D9rBv3tpGNll7aB
oe6Rzq/RRnj0SIqb13EbonmvfuP9TADjgd0dOt+34aRTMtfayVow0qQWUM3Z
hnJo/nCkohIUytcTVtu3wT3D/KpYXSkUx10Lp57bhgUnZr46RwA2S3aXIYod
8FMSULvXmQ1Ir119HFt3H7t4XFs2mLuvMs9gS6svsowTs6F+1bF1Eful3tKc
eFM2tKboBq9jx2ZxNT8gZENj3LvbFJQ7sH/QICWxNhuu8CdMMWLPC3Hfka7A
4/ujp9zYpwtMmFOKsuEs/flNQWxtC9HEo3nZkPasKjEAe8ZXzPyMezaEjhia
0FHtQOLm20QN7WwYmOvZ/Qw7w+nyt0t7s8Hd8nzuKHa/Z+kJ7b4/UJQc6cJM
twP0TDsh9tmZUFv20m0PdvCPiqPX/mTCkrfSf2zYo3oypcpZmXCCZvADB7aX
+QkDocxMeCtt7c+FLV7XPUKfkQnNdKTv3NiPfxx6Np2eCfcOeEfzYevy/v2e
k5oJpauEZAHsaw5yue7JmRD6NT5bCPszeb1D91cmKL8LpLmEXXuRNvfM10zw
D74v+gSbSfTGLunXmXCWYv+hYGyB0xk0fA8yIbgqba4U2+ANkyuDfiaE3RV0
5KbfgZy7w3ecRDJB1PbZ2QfYxgmzZuPLGXBlq9QwH3uS1Vz/VlUGuCVzZjIz
7ABLetaFzu8ZILVGo52MPWhxwLhTKQN+va1muLR7BxpjrQbG+37D9N/hyRHs
4Dk2SUa338Aj17PwinEHXIxL3JQP43pdhUhqZt2BW9xVMmqcKXB+uIGDiQvn
Y7jaf2MyFo78vXtCet8OPLxjScfSFg4KpNFzirw7UCL/pZcY7weu3dlRx/l2
YO+BG/s2jZyAQ/IBKsXt2mrhFxKtvBFX2VPro7j/i4LvEUkW4ehv1cVT/3Hg
9dsYbGdJiEcppMeCvUw7cOIdUSlGLw3Zj7xYVKLZAQv7/KWehEw0PUeRkLu2
DXuFkiJPd+Qg3isBRlYT23DT3eXAxZxCdM5+/xuPjm3Q+ko8u51QjBL5fwae
LNuGh4pZuTZtpejpu/1vIpO2wffNFHM3qRwNv+sc++u/DSh2rai6rBI9+2/Q
7/TzbTAxLda78V81Wh559DrNeBvWPhyiNDeqRVmLetR7Fbchdk3m3ChlPTLk
fHX7M9c2ZE7fUHT0IaCJEZr/3mL7PfejY/UlIKvnKikO2J/sttoSsLmbjrbe
wb40ABHqHwhIfqp13QC7hrP7Xj82Q9ORgxrYtHq64i8+ElColPYDcWz2gonI
1E8ExJOj/JsRO6z/L8PIZwLy9aTcmOLcBjLHNVM+PwK6IMXrWcaxDWar20lS
YQQUn0IbHsSOz/99qzL5RALiamNSs2PbhojL5gmKfwio0cj+sTrrNpgOF94/
UUpAV6+FPp5m3ga6TtZv3N0EVLPXLTKAcRustwP9eucJ6J7RjI/H7m24eNHN
0XOLgFCngFAPA76fPquanaRpQHseh/sfw36Y5dA4sLsB6Qt7DXjQb8OxtZfh
79kaUDsXI8sxum3wUKO3Kj/QgKgTzOK7dm3DAZaSqlnJBvRtQj/DjWYbCFLv
GxgUG1BfxhXv26tb0JPh+PxNYgPSdg7U2/t3C6z3hncfY2pE4uMi4hF9W/DQ
XUF2BjWigJ74fbuIWzBVpcrI+rgRHWs85iNWtAXeF97cW8poRDu5edmUSVvA
//N0S8JCIxLzsL7+9fsWXIimJL6QbkKWPddbJ99tgXj6M53ft5vQJ1rZM3T2
W7DCsC7/w68J9e+wbOjpbQGDrnfw07Ym5LekqiAntwXMlvds51ibEZOc2a9M
zi2w+vY6b1WtGXGZzbkML27CO0ot+0d2zWjNL9+ktmUTxNk8V/kDm5GCc89X
h4xNEGOsu9CQ3YzWA+gin3hugu26aWZAXzMS6HsbLHhjEz4HOZ5joCCih/4s
+V5HNsGyhCzhwkdENwka1/5QbcJFpltRbMeJyOfIh1uprRvgUZPjkaVBREGU
nmUv4jbg3mEaOxljIqos5Rrmf7EBu5tKD7I/JCJnhtnonecbEEnmWtiPTe2Y
c3cA+/TxqjJRbHE6+8Ol2F/TNwJksdOKeEajsddcUy2Vsc0jU2M9sKP/jMhf
wA76ky+miS172bDtJvY3h3fxzNgxoXUODtive3ZLNDlvwA9PzT3/YZMUGw4+
cdqAsP/8ssweEZHjVfOtvY4bMLPXP/ikNRHtvdUBOfYbICkbUsZsQ0RZmlr3
b9htwMni+WND2GrV/z1Lu7YBZgHKGxxORLTkqbhphF16itVOFvuuwU3XbaMN
iM93GbiMvam8RBmD/ZLis64tNt9VSnct7CKeS7m+2Psi3uyaN9yAfbxph35h
3yA+oEPYQ3tbx8ew5R+K0PkYbICKZ0a0yDMiMhxMo+nU34ClnVtXb2OXPot/
0qW9ARPdElcLnxOR+7DCXDa20SFxv2psx8UM60DsB/eziS3YhvH8E47YK8Ht
HP3YY9QOlvrYzB0eepPYf2kyB2Wx/8hWfFnGNjJg7565tAEH7e+yMr8gIi91
QeIv7D2C532EsN27h2ussIWZrGhPYedwvM0Z0tqAd4zOS5bYfyQmft7E1j/1
o9cPu56O369dcwNO7OokFmH78b2cWrq4AaHnB/uZXhIRq/a9c5zYr66LP7uO
3WbcESh7YQPirIq//8R2PVTMZY424EVlY0qlK46vemD/B3m83idEuQXciKgo
McM/R3oDeq7GMyR5EJG095s7Q8Ib0Ef+lP3Yi4iUkymWVqg3wPnvZxqjICLq
b3itMTO4Dol0mftPJhHR/QC+62XF6zClnOzEWkpEFO+NZOzD1+HMS4n7Pd1E
9IZiqWvh1To8/XvS5uMKEV2g+k1U1lqHDCZ+vteiLcjwbNg4Nfc6WEoxyTTd
bEGnZE8KyQ+uQex/YsYiQS1o8uOf/8p/rYHWgYNn9vS0IBfniavRT9fATzSc
k1OoFbFJTO+UozXg2X9hPsmmFZ10lmeWW1iF3d0mtJ09rahAIFqJLWYVfikn
9rJcaUPZsfPbmgarQCuTt5RR3Ya+S4qlHMY2aDRj+YtNO7TrFhV2sfsVMaGa
NsRb781C0l+F9cBmVWPs6bGcghzs3sGhm5+xQ058ehSArXLmnXMV9oiMb/Ul
bK/w0TT52jZkPywhQoPNMez5NxqbV9fKNU9vFUJK7olz1LWh04+Nc4cvr8J/
X67Q3G5sQzUzCw+ZdVYh4SBNblpLGyIt8/qf0FqFhfd56lSdbUhfJlP25oVV
iKNNjtTrbUMrjd4ltZKrsHLcY18CfTu6dvkIZwE25/gx4yJs+fCyu8nYoXxT
P9qw3xVp/QnDptHK7v2LrZRWRv8Zu+iJnwA1Qzu6an/E+C22ztdX5jzYIgFj
m3ewHYufkNWxD6zdD9PA5s9MsLLH/huSelYC+9SNg9Oh2Kt/tHxoJFYh85mR
2A3GdtRSnVtEEluF1+48L3iY29F3iw1StugqxJw5d6idpR0V0dCNfjm8CofN
NV4HsLYjJnuvEm7hVTiUOTpuwtmOivUXTwQfWoVhGcZokX3tqPPbuMpBgVV4
+CwscZ6vHfWonJk/RrsKqibSu+JU21H4w25DnqkVCAn9YhT0oB2Zk7MPtRJX
IHElNLzArx29mr/Ddid3BViPqlfvKmxHDmaXG2SerIDlyHXRr/IdiCFpNN9X
agVqC2PWrmZ1oA8OJZrWQ8ugcbW/TF2pE+UWuCTnf8P1efCF206VnahF58Gy
9aVl8B9+zDdr2IXO0hwMLOtagh9SV8lpUt3IP1P5+7u7S7Bi6RBoT9uD7LTj
9X7+XQTmo6y8igM9qPlTfpGY3SLsPV6gwpjbi7znxQhLtovg7O/41xz7Xh1F
dwl2lo1rYDZ2pcC50Y/Y0fp5Z/fk9SKm6fn5G9g6nOKTd7G/KTBvi2PDiyq/
fGzK6n0cZTaLcJXmwZBVfi8KNGgWMcW+8KDxCHdBL7IdV5RftV4Ec+b1Z2XY
P6PSjTetFqFsTinCs6wXDYQbBu7cXYQqKXpXrdpexHPt6l/K24tA63qRibm5
FzWrEK9Tmy6C7O0x1fqOXsQlP8DSf2IRBC53elPsJyExu7YHtdhn4lrrBLE5
jmRUZGH3ZMQyq2Mv2D8XjMSer9DVuYc9fFr8lS/2he76D/9hU3sVdT7DTp8+
1JCI3X606JMuNu/up7qz2JpT5hqHsbl2CTbI8ZOQalHM1qbcIuwpF9Fxxu74
KkBvdnwRpsXZDh4+SEIfpGamSo4tQuhC5+tmQRJ6N7I/ReToIngJR7C+EiGh
gfEMLU+ZRSDaTv8REyOh7hFVtaOCePyUD3l3lfD4dQk7DVyL0Fc5QGlzmYQO
p4d+vcewCLfCZvpU7pAQP7XbtMLYAlQeptq7FUhCG6/X25orFoCwanhDuoaE
3nyS2pGPWQAZzV23ytdJ6OwHYYl7bgtgk2YXmS3eh2jHzrTLogXo3Bd13PVt
H3piWEajvj4PX8gNfAda+pDA5Y30pIx52Bm/FcOzpx/J96+mudjMw2uF3k6Z
o/3IduBsTIXoPBR4sJcc0O5HDcJeOgLpc/DklZHJFYd+FB78wfTL6Tn45Egh
POnTjyZfVO13KZsFcInlPPy9H6XGzyiqas/C8UMXtTQC+1F/ry35y68ZOPFw
8r9Ij370sH9bZhumQdfqREioZT8qiJ6kTccOzprM/oytpcfZdxe7e6mkyR27
ZuHZHx5sPt25MSfsGV+eT/WF0+Ba+HT7Abad+PL9N9jiKnrspth+9qJ84wXT
8PRGrvw57PrtC4TL2NciXPQl/o3HaPI2O38aRqeCH7Jie9LOFJZnTQM55w2Z
8S4e38rVmJg6Dfu3Wipo7vSjGxSvJiNTpiHxOHNrg0U/KnEyeG2fPA39x87l
BmGHiTDwqCZNw4RXwKO72DqlXIYDCdNwxPqNwvrtfqToC5Gv46YhPrtC4QO2
OZvwjsDPabCONLY+hF0fTsd188M0PILN5MybOL7Btw3hT6fhjunq0fVr/Uj4
5lzEpOk0lMaWVk/r9aOfzpYUZzSm4dzWhK6fTj9iuOSe7lo+BXUZhvpPJPuR
0X3GUxTqUyDH8ei901Yfulc58oup4i/8d+BGR8SnPhQwHtszf+Ev3MqmrlRk
7UPuDEMXKQmTEDodz7H3JQlVJera+Z2dhNFkzeGpzF5UOOf4gDJnAujU7MXe
tPQgiZm7CTVyE0Cx1uiR1d6N2nnoR2wyx6GvwbzHG7pQog9bkPXpcfDpyv67
36cTXZNKeaReOQZyGzevJSp3oOMntR4rXhwDRenHNOw/2pCob0KiQcsoJNVp
Mp9sa0ELrcWmOlajkMM9v5Q024x4tNjT6ulHQSjGYzjxbyNKC9aYi8Pmz4/N
b51sRCQWnePu2FYeTp93JhqRRaKI0y3ssMYqc3FsqpeE/FPYtcQf0nrjjeil
1wWavdjU1bOLL8caUbx839c6ulHoUA173jjSiDTF8o66YctmGk0LkRuRaVJP
kyI21RTfZach7LlbSTdpRiGGv0Ejs7kR8RuZmbtTjoKCSLfa3+JGdEOPcSZp
ewQG9LS09qc1Ij2rD0ZdGyNQEn72rnp4I/LK/Gkn1z8CT+M/mxH/NqB+50q2
k7UjwF0lMvC0l4CEjYkfW2tG4JCGLd+jDgIi2jTyP8GeNWphNScS0LvPkMeO
vUhxp9iAgOu/HxFWadX4eRtJac1qAnK3dBK9jC3YcFL/TBkB/T7CVOpbNQKb
XFQ8h3MJSK/0aWht5Qi8rzCrZUolIObRghwGbLqtwofzMQQ0PKdWPVYxAqIC
1v+diiYg/eHIrkpspH487G0kAXVXdE39xP4ywZZUE05AaxGTVB7YjAEMv9lx
PSr1qpXnLnZwDW+acQgBjZw30RLCbqHaEz7xHdenF9XdB8pHwLVz3un5VwIq
SvcrC8N+VsmptBvXt59p75P2lI6ApqL0ryg7AnpJLdHztmgE1GkNn53QIaBx
CZfC1QKcr8GUdJAkoD133E/SJ41AlN20IuvZemQ9ZNgVEjwCuTU3jQ8Y1CFG
lmHDXJ8RMHL376W8X4sQ27XLpi54PvEcZUTnGhSvLectazECzhSjhxjqq9BB
j9TKAs0RKO/Ozyjlr0Ttk4byVHIjsNZu1v7rUTkadrx0jVIA56t8IvxZbimy
/3B9No9xBJpCbEbJdCWo2DJqO3+eDHc0r/y2PgBI+hu7g1UvGWx77Nq2j+ei
287z3UAgwy0Zk0ha5SzElvrC07mEDJ7Pj+Au6ehAZXnuh2wymOY2KzeN/kIH
Gr7VL6WSQepoVTXH5Rh0Qi/wWFQiGU5SmlTdKP2BZPgVLxvFkeE/0zCq39/f
o+8L/DsJsWQosWjQqJGyBn7eySGPeDJI6ttKfXb/Al6nPoo1JZGBfiawfMgs
HGp6W9KtM8iQYZDsIi8WC4I//KzOFJChVMqLJfdLEpT8+jMXXkMG/dpdVW2W
6VBaRvegoYsM1Mnc3Jm5meDy9jDBd4oMlfslmm6VZoP557lrYVQjULjnJeHz
6zygfyn4tZJnBOoecTgZLRTAaSFR61rZEfgo+P0wxZ4iuHS9z9Hs8gjIZMfY
7vAUw3ev2HPJtiNQxPiQn2m7GGj2TgTmYNOxrB82xPZQMJksw6Y6nSkVjn1j
Zv1MI7bJ7G6ZCezik9VfurH/Gm9IyO0UwyxLxcgI9udYD6FX2Cat+z9uYUd5
ExnZKUqgsUhagdMOPx/gOxiDLZu3OiCBLaGYFatIWQJ6kvWJzI9H4NV/yl83
aEvgnPJswSy28TZ9chZTCQRcY9rXYj8CVpwBiw/YSyCIUJvzx2EEdv25b7tv
XwnQT/5sdnUcgWMiDXy3hEpAv5Gd9qLTCKho7u/xkikBVdt3FlTPRmDsW0oe
/fESyKI5FOuEHecsYtFzogRiLpE3/2Kz9CYI/FIoge4D2XduO49AsTlFnNPp
EnCO2fNA+/kIjPwuOEh1tgR0Zm5kKbwYARpr3tYX50uA+2jVBeGXIxDidr1+
WKsE9t0R/qL7bgTq+e3E11xK4LfBU6UvH/D5e0etWRlfArxvvsmOB+L5l0xN
2jbg+WVHPboSMQIUjG9zOWdKYOf71/0RqSPAnxj7qY2rFISmZ2h24/NZInti
plm6FFqqo169bhiBX/tsosNPlgKfib/xGgnnY4+FcMfxUiBtRpGtpkfAbDI+
g12oFJQrc4R48P268JDfV2e6BK4xsrrbCeD7+blCyuiPEpAIn5PROjkK173Y
Ws/jfO2fsjR9rzMKN1uqQyC2GPZ29iLau6Mw7uWZ57W7GLqLuQiJz0fhm/CZ
9uJrRdC7ueAV+XUUuPkkQr98LoQzXiE+IamjYOQ3mut7Ih/2KPFbPawaBRpL
q6TAmBzY80DcaaB3FNp4O0gtY1nQGdMx3TU7CtVLD+bsd2XAAe1lTgXKMWjc
pNmVSZEG1++q2veyjMH2vt+cuwoTYTPXjy+HbwzUREa6JxqjQPXRd7dTwmNw
+OG9dqtzgaDHE3tNRWwMctaH+kxqnCFX2vrrL9ExoObOdyj2e4fSKFKRheAY
lCSd+hHxMBix5ih7FB8cA9bKyxWG22Fo/8mnGtMHxkC5cLbOrSYCFWubkbyw
T/vFfwg7HIm0yT5OItiT69ulDW8jkTjRi72Qfwz4OO7ZcfZFIoY948n62G1M
ua7Wp6OQrKejuR728n+iFB+VopDAvWmOq9hL3j9dU5Wj0ECiXsVl7KPnTm43
nYlCnoYxz3Sxn/3ufLGAopDwvSEJHezILt9VzrNR6J6+wkctbNYgnlkjtShE
2XVm4QL2IaW/Q0HqUch+ddnwPPZa7a6WXo0o5PTwsqQU9nqAxv3nplHoIDAO
sGH/7LvuyeUYhS6OSzxb2T8GtK8N5VK8o1DFQMpsD/Y+X6NHGpFR6ObLx5z1
ON/U/NJV427RqMHh/qU03jHoctivuXEnBvU8PR3+H88YWMj4mb9U/4lsZL25
DfeNwY0fX9ysRWJRyfpczl7uMVh1iZJooIlDDsO0OjYMYyC7ZnNBdDkF7Tb0
sp9bGYXL+0SPL/b8Rill19oyB0fBUetTsGz8HxQTbvO3oXoUpDUNt6XM81CN
/MX8q0mjwF53WdSaFpDpoSN5ur6jUOnz6sZl7WKU+Lz9d4vJKLAytZ0ayyhF
qZa37m4KjYLl3p6/IawV6FyovewQeQTWM5Ifbd+uQjs02R9D8fnjjZzgjk+u
QW8S7/QrGY2AQCdQayzXIY3E05bltCPgIfI5002pATktvFVTwP8XICNtS13S
iGbfG9dzSJLBov+njpBFM+LtobXtkiCDpseza43YJbcCWSKwm+IPWbjcaUaj
LEy/7mHrCXLYStxtRp7kOxoy2J+OaL9sx47ui+hfFCeDGlujl7tlM6phH2Z5
i12rdD+BdK8ZFf/OktuD3b4o0qBg1YzuRPJcDRYjg70249qXB82I+LQnll+Y
DATRozk8z5qRyo/HaT8EyOD6+867yHfNaHbmms1ePjJ8rbO4K+3XjBjG9pB8
95IBrU+Z5YY3Iz4B1aNvx4YhuH2gKEuMiILX7RbFc4bho4fF0M80IpKe2zZj
w6YJ61Obwl7iOlG/mj0M9VnR0cfTiej7fQ7Ffuz2t2m7nmMXj32PrsTeS0d7
rwib42vVnhRsJ43IKtrfRHRN8ynZBVvv0gMfP2zn1LKcS9jcd69cOZhBRPHl
v334sMPSjbiTsK06v7w6kjUMzxOtv0rlEtGRMI1R1YxhCGILn0sAIqq5tVRh
kD4MLsmSuaLlRMT5sZT/fuowDLLqUEbVEFGr4rwiVcgwsBykVDxE2YJOitq5
3vtvGPJe0vDuPtmC6E21Xb85DkNLalme6aMWxG7jWR1gPgzvv/HJHoxoQVm/
Tac2dobAIzl7X5xfK3qomefEHzQEKrvsisud29Dy1kaX7NEhmImx2OrTa0fK
ZkZl9iWDkPD4yhMjwQ4kNL0szX5lEPauKdd4kDsQ0y3N8StfB0DlukJiAU0X
GtrtEZdN7If+u7RGYQzdqEEy9RX17n6gawv3Vl3qRm+PHq1rcCCB+7YOfXhV
D9K/q6AuXtUDg69+tfu79+L6dZHmLns38NavWA6LkxCZV5T6Nls3nJUojDsj
QUKWU1e3TVm7wSWnafAb9s8Lz5ZN9nRDnqgp1wL2BevAyWss3SAYYKGiLUlC
f3+k9howd0PHoUGLWGynD+15uozdoNbV9MNEioQok8d8LzJ0w7hmbOYeaRJy
2CHrqdF1Q8ZTi7RSbELJaWeqhS4ofXKYtVyOhKI+ec7kk7qg6Of1tNzTJBTc
H1loX9MFpI3Ob9GqJBS0YjktlNUF4uff1ry9iOv5ghDNfROdAF3XxlK8SSi9
VyI0dbwTEh3VlBuxj5/XnLuAnfCM9vMsdur6htrAWCesESKGWH1IiGMHfXXG
vvec68Qx7AtGe8fYsMtemr+7gn3kz6iX6mgnEOQShL5g57+jknIY6YT3xvoF
zdgXBy1ro8id4Lx56yqHLwlNGJyK/a+3E06JNR/+9pGEQp9c7rBp7QSXM4HS
fF9IiEZA6JZefSe8Mxu1DPYnoZroE0onyzuBuJX0hi+QhA4NiBNE8jvB7ZO+
zOB3ElKilPzA8bsTTGMNuKODSYj2QbQLRUIncHwPuWEeRkISRkshf8M7oTlZ
ZpsnEsenQvZdV+8Eh1PBElfySUjg94XnBRMdcKLw24fsFhJi8XQtPvWxA+hS
mHUuT+L1e/em2Ol4B8htB3jto+hDhTQXtOaq22Dy27sjXCp9yMToMq2IaSuw
35gx1r3Thx78EpM0mCNCnJxoVe2jPjSzUltW6t4Mmv8VTvte70N9pXfz03ma
IL/Wce83iT7ks37WfuE2AU6WygW/KiQhQUWxb8uRNeCmObpwWYCEbBfb/XLW
KuA7vaoLg3YvMtZ8x+FpXQopQQ/KgzV6UOULrqAUmiJI4T1ttcrSjUzqf9x8
Rl0E76L8F19iJ/smHz5LVQS3uY45U2IbMeosMVAWwZT36vI75m7ULb70JWYH
IHbXpPVubNb5++dPbgFwvKEnfWDqRuTD70uNVwFan35PDWTsRpo8XNavFgAC
HNruhe/uRinp3GqR0wDXLIE6Hp+3nVjzo+yFAJcTi06v7XQh24hHn/x8AdpP
5VacWe5CjP76Tw/fBKClcol2/tuF9qlqLtVIAVzV62yJH+xCV5xmuC/WFcLW
nIvUBKELXVd6+mg+qhB8pyxXAytwe3dp5yOPQjA+9dr1eREeT8zbY9yhEOxv
tT6NyO9Cm4lcpPvmhcBsRk0sz+5C2aeODU7oFEKuCLX/aEYXKpzNXl4WL4TQ
uGvnhJK6EEHpGZF5VyG0Vnx8rx/ThcI/fvY40l8AFs/u33wR0oXCEp8cuJFX
ACYPIsoDA7qQibBgqIt2PrhZrLM/PdeF7rLu/3hgOBd+Rpk4q8x0Ig4pkUdO
rjlAMa1AtRzQiS59NSwoEsgGmuq5vACFTrSSEp/YeDQDRp9teMkyd6AcC8Nj
r5+kwoMbr7f5C9uQr6WgG+1APDDtG3RU1WpFQwIGYoIGUcB4hDnDG9/fTbxt
yx8jgkDXs0tvdK0JscS9paTJ8wHG+TrHhykNKCFrMMrQ0wlS7rfmhnPXIVWz
yUzjimvIO6KKbvB8FQq//M1UyMkVsX+8PXRUuQyZWts2yNl5oquRZBJjdhEq
sh3fbeHwEXVH2Hd/5M5FlqkeDSbXvyBOSXcqqsfpSEwmd2aa2R/dVHuo6boW
jaQTy8e1CP4o/EulbXXnG3xfHTu2/MwfcVkXDBjahEB1e/RNUWzfBxfVmj6E
wKerhJ9GTv4oSeBL3KWUEPjAGMv0/qk/0pz+wVHdEAIq3aIfMx390V/aO+7n
Z0PgdNBFmaEn/uj599H1MtZQOBBXFKPk4I9y0c2F0iuhMKXw9uOXx/7o949o
qsovoXCbw2By2NYfXd8fK0YghkKV3BniNVN/9GVhUvFFSji0UCrp3dfyR+28
TaHdSxGw56NQlKWmP2pNmm7zoY0E0tJtmjsX/REp4WrgGe5ICD/zdvyGhj8a
LosUi1KIhEXmMo6r6v7InbzZxWAcCYffTb5VU/NHLW/0k+1fREJye+ulU6r+
qKDLX1zcJxK2HxWKHj3rj4ptBKT7gyOBMPRyhwf5I3PjsnO6hXj81yu8FMr+
aPS/ty5FfZFgeWvOefCUP9K7rt1+nDIKzuShi5XYvMYm4v1UURDlIr73F/YD
nYqXPjRREBmd3P8Je+jEhyYF2ii4INMQ54gtwPpblEyH2/d52xhj/+6Rc/3M
EAX9ZaUPr2MfllWyjMBe+rZx/xp2NtU57TTsuk9WFob/+gfp8zVhb4m23NTH
pjlwb3wW+73p6WtXsa0+vPjDujsKbrV65V7B/sG0fo8Xe2Wjc/8/v81+tk8Y
OzbOaUAXO//hU+eT2IacnD91sOtbn3RpYu9CKQ+0sTOXHU6bYldHf525hN2V
llh7Fzuu0+XJP3d6DplYY38f0Hqlhe1to/fyJfaiCI+nJnZ0aWmwN3bOT/Ln
i//m5ylXEIQdPy4o8s/ZUd0PI7BtaM2yL2AztL7ljcOOXugkafx73qLJKRNb
5oLern9WuHCwtQSbmaZO8jy2irutbCM2SeFTuTr2cZEbz9v+zVdL/9Y/3+y8
UNLz7/0yPV/OYfPdF7w6jv3Ny6JCDfuX2ubAEnbArYk1VWy2R22PqRij4GBQ
7dd/LtmX70mPvZbx6/g/v2mPCGPBPp9oY3323/o7W9fzYu+K+qzzz6PFTen7
sdMCM478sxyL/LcD2Ds+z2T++b5zeOI/a71Vkv7n3sHd8M9fnSik/lnvkmPz
P/c/KpP455rMPvI/i9/2FP9nVQHNtX/+c4lV9J+Pzx84KICtdvKb8D+3fyKw
/XPLoYOC/3xu4xrh3/P7dW0Z/tlAqFjyX3wNroWzKthBV8T/48EOYWtfQ//y
WXj6yA7OB8faLNU/W93UbR3GlpVnYjqDfUz2zosabEcKy3ty2HvonFZL8P6T
VFEvlcD2qqd6mkcfBdxL8QKH/uX/Hd3ib7zf3SjVO4oU/RGdqez6/a1IGCZQ
lJthE12DjhxYiIQNmx4yBbYWJfInjkXCx/m2UxEK/kh89YDYf6RI2GfjWDgj
54+UPnVzJDpFQov5oaCrx/xRHMOwTR9rJNx/c6KmWhrnp/3nicMJEVB2nFnL
QMIfpT7y+18A5QMa/GR/Q6G/nZQEGfUmlD9IOhr46tygvxRJmpeMCZQ/wCbO
lx6+mb80B6qmAvSTPywktHen0JG/0gf3Oknmkz9o/497quKDvzUgJGRS4JM/
Jd4oI2cAYb/EXGlMEOKTP9Ej6zgxjXY/ognYtPOwlD/TWKLwViqsP5MUc+lw
yJY/lsuE1V8tuj9kBmdDiRmaP/J2nMMu3MI/m3zvXe+Vnj+fg7K1SF7IPzOf
nw79F6I/9jBF6vifzT9YoVlzTG2lP5nsSxgCUtE/c1gbikffqz+9LfDz+yDV
Pz5Xgh/CxbE/F+DH99qn2D+Si8rATy22PwV5w9cP69s/nJBt508buz8ifDiC
nO7eP0l8ZMW0QsA/4TUQxRLb4D9wILKA7DDDP5Ppy4aAIuI/yzfo0wDLxj8i
wJd0LXjjP5VuKVxQo8o/cu6o+e6s5D+6diC6vrPOP+txpEa/wuU/yM2vlUZ7
0T/nklb5d7vmPxRoFXUqs9M/qYXzOteY5z8DBRIlAf/VP6nOwmODXOg/5+p9
N2hc2D+1ZqbjDQjpP2GLQIZCUds/GRenxla66T/hxN/xC1nePwhnYyCuTeo/
4+zCMie44D+OP0DNfcTqP798iNzsSeI/XLqWFg0h6z+YmLbaX+DjPw5MtWiB
Zes/CsEdFSh65T9vWSTJ3pPrP0RQ9IcKFuc/ZiuPMQiu6z/JttphFf3oPwFt
a2dPtes/KHcuO9Lj6j8/zOxGlaXrP++6h1DCyOw/5jFBFUiB6z+V8FKfj6ru
Px0VKtScSus/oE3viARE8D/zNipfkgPrP5b4JXMPMPE/uk8uD/Wt6j95rWqs
7xjyP6kSvZxiS+o/zrfv/ov+8j8vj+JwJN3pP06Xjd8v4PM/B3Ig7alk6T+r
Wddvhr30P4XrPkoe4+g/CfFkkESW9T8lK/fCjVnoP6jHCOAnavY/iQmDJ+nI
5z8oPOXY9Tj3PzEhbxwJMuc/DpV9rRhI+D80qtfegl3mP0pVIjwnTfk/Q6NJ
3amA5T9RIrh1x0f6PxYFkFn4nOQ/Y9jT0q83+z/YSVp7vbPjP8momYSlHPw/
rNlZfSTG4j9IhQHtevb8P9PAyWk61eE/Wx7MUw7F/T+jFt3N8uHgP04SkOiN
sv4/xM1UICts3z9R4K0V9I7/P/LUCjzSEt0/PnDqWR8tAECIZ+ZNdbraP/k0
ZNQ+igBAxG91lm9l2D98FlCa6N4AQI0EOd7jFdY/mvWnNDQrAUBT/ol4wc3T
P8EMAeE/bwFAVHqi7MeO0T9MbeQln60BQFdlgIpXhM4/VLuRA67JAUA8wTTx
yz7MP5cgq9SU4wFAAcFbI1QAyj/rhClW
               "]}, {Automatic}][$CellContext`t$$], 
            Rational[1, 15]}]}, {
          RGBColor[1, 0.5, 0], 
          Translate[
           Rotate[
            Rectangle[{0, 
              Rational[1, 30]}, {1, 
              Rational[-1, 30]}], Rational[-1, 2] Pi + 
            InterpolatingFunction[{{0., 18.75}}, {
              5, 7, 1, {1160}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
               False}, CompressedData["
1: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
inwK8OJKk/tDWQVY4CQ9ZNFTAPn8u23XzBTAzOprX+45BdDRF77X5acAMiqW
hsuRCsCFi6YTTVeAy2/iiuVLFeC95wMr3ToFUBF7tMOkUwHiWjMK7T4rwIpb
rqXbTwVo6mFkMVxXgATnfCYrpOvmIUZHpF78L3pPJI98DF0Q8kejCu095N05
760CpKp43Xor8tMhurVRpOOuyuG1DQX4/dm1aeeWAigwinLhkK6KnccVkT+C
FBcOIe37YsJdkEMyS5LByL17gy7eRxac5Hz5GOkbRzKvQxq93TszhBSmPRn8
Z9v264t/t43OOLWGFLFq6f63rfik7sa2P1iLNpFfyzNebJt5W6ttWzLBdXTb
Z00PNrbVPtMuuLX9nMWD25Y8biO7rci56d3bss74Gm27dontxLZSV26e2tbQ
Z9V526RbE1e2nYjsD9pWPakpalu7Lp+4bUPoqcnb9rs/zN6W8IX56bZXDK/W
bLtS2tuwrQ+/ctu2gWO/3m17+0nh523DA1wmtj337+HM/819N78ty1Wt9W2d
jg9ubNuEeW9te3gg7D/73B/850mWgv8cf/zyP9203v5n0PmZ/4x9yEFDQ0OB
rE7Kf1pU+e7YliGzlXbbn521XNu+/1suum0Vvkj2P3vMC7etDPgnv2NbucyS
bctmFF8xIotLarrZkPnuht+4t/OVP8zxIa+1WiYcRBoc79f2Qwr9shgpRk4H
9YV8Q9bwWcjz7kBzPx3J5KCjgHDGIWFmBgoYuhjE0DJRwJuyj3mDmQK5S3rX
/7BSINvcNkpHkAIZZT6pQdIUSONJLGpVpkCqe3k1G1Agufvdm6PGFEii/B6M
P06BltKiPjp3CixQXbsvB1NAooz45msyBYxVfjQbP6GAb3nGq+oWlK/m8FL2
EwUELSvNChcpEH6F86c8uyKs3Xe8VUJQBNdnNSJUXUX49J63/KmlIhxecD2s
ckkRangav5eHKEJr8NnVW1mK0LPKyGneqAiDF/OlpL4pwtjIIY35DUVYkfsj
/Y2DCv/OHnzSJkoFmrQHWqVkKqi0Fgvt16WC82zD3wETKiTv+vDxogMVOrWn
K2g9UN+ZzfjEW6jvzs6r8vFUcHoqY9GQQ4WklQdRtlVUeKPN0f6nnQrrN27Q
3f9EBUrroi5llgoObM7e7ZtUiD06VHaWWwmMOne/VyIpAa3Rg/lNTAletv7l
7rBSAo991tQHbkogV195xClUCUZ1BNxU0pTgwYtrUTSVSpCgqtQl3acE90t/
chyaV4J7cjnG7pzKcDfbITKerAxhkiKdLw8qQ3BKP/s3R2UI4o8+zHBLGb4Y
PTvk/lgZ3LIHpaueKMN/Pw3VK8P/AzEq1IE=
              "], {Developer`PackedArrayForm, CompressedData["
1:eJwd12FEKGCyBuDu2bbbJkmSJOkmSZIkSZIkSZIkSZIkSdImSY4kSbpJkiTJ
kSRJkiRJkiRJkiRJkiRJkiRJss/Zj4fv/ztjZv6v4d8Vbf8TEBDw/4EB/32/
+PsNIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskjnwIKKaKY
Ekopo5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKb3/TQSx/9DDDIEMOMMMoY
40wwyRTTzPCHWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaEU84454JL
rrjmhlvuuOeBR5545oVX3njng0+++OaHAIXwi0CCCCaEUMIIJ4JIoogmhlji
iCeBRJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa6qingUaa
aKaFVv4WeTsddNJFN7/poZc++hlgkCGGGWGUMcaZYJIpppnhD7PMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND3+b/xeBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZZJFN
DrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRzW966KWP
fgYYZIhhRhhljHEmmGSKaWb4wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8Ah
RxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzQ8A/5E8gQQQTQihh
hBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVV
VFNDLXXU00AjTTTTQitttNNBJ11085seeumjnwEGGWKYEUYZY5wJJplimhn+
MMsc8yywyBLLrLDKGutssMkW2+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc8
8MgTz7zwyhvvfPDJF9/88Hfw/yKQIIIJIZQwwokgkiiiiSGWOOJJIJEkkkkh
lTTSySCTLLLJIZc88imgkCKKKaGUMsqpoJIqqqmhljrqaaCRJpppoZU22umg
ky66+U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQx/mGWOeRZYZIllVlhljXU22GSL
bXbYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ1545Y13Pvjki29+CPin
/AkkiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10Msgki2xyyCWPfAoopIhi
SiiljHIqqKSKamqopY56GmikiWZaaKWNdjropItuftNDL330M8AgQwwzwihj
jDPBJFNMM8MfZpljngUWWWKZFVZZY50NNtlimx122WOfAw454pgTTjnjnAsu
ueKaG265454HHnnimRdeeeOdDz754psf/i79vwgkiGBCCCWMcCKIJIpoYogl
jngSSCSJZFJIJY10Msgki2xyyCWPfAoopIhiSiiljHIqqKSKamqopY56Gmik
iWZaaKWNdjropItuftNDL330M8AgQwwzwihjjDPBJFNMM8MfZpljngUWWWKZ
FVZZY50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOd
Dz754psfAv5X/gQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSSRTY5
5JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3v+mhlz76
GWCQIYYZYZQxxplgkimmmeEPs8wxzwKLLLHMCqussc4Gm2yxzQ677LHPAYcc
ccwJp5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0Pfw/+XwQSRDAhhBJG
OBFEEkU0McQSRzwJJJJEMimkkkY6GWSSRTY55JJHPgUUUkQxJZRSRjkVVFJF
NTXUUkc9DTTSRDMttNJGOx100kU3v+mhlz76GWCQIYYZYZQxxplgkimmmeEP
s8wxzwKLLLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8D
jzzxzAuvvPHOB5988c0PAf+SP4EEEUwIoYQRzn8AIvlQeA==
               "], CompressedData["
1:eJxk13c8188fAHBkr4REGSUVkZGKiNcnIUIlCVEiK0QqMyJFoikZ2WRE9krh
7C3jY5W99977d77//j7/PR+fu3vfvW697oih9Q1jUhISEiYakv/79VH9DUqX
vC5r4Wzrut26H7b7YwPTbprJxh/RGH/Vegxo2Nf6T4K7LPvpLs8/LWfBhTql
67zcZ9mEUPe0DH0CHO5+84E1N0JW6kD/E8pmBbjRm+RD3d0uu3JRwFB+330g
V36fNSgxL/shgiao+vojKFCnT8kgkAFNCguaZ7aH8hG9s1KvGaHk915dlnoX
qDU1GgwXk4fMU/yZUUsBsKIvuTkXrQehES3/PkxGA/Xm04zuQ5bQ0GWSVuKT
CKwDL+IjOe1hnD/tRpB5GkhTevt0c72AotHpvr7+TNAtrNvUy/EB3zMeYyPT
uSDYxHdTH/zg3sP4QQnPAmD4dv8pS3gw/Pzd/IrkRhHMjcvefjATCfaHGEKX
j5TA68vv7TsfxcJ0bbzq/rRSUCZ9YkGrkAg0d7m8fm2VQc+tgn2GV1KAZZ7l
64OWcqiZX953XyUF2I7aiQdhz4lcZjVSTQE+rqDqSmymuWR2Y7UUcOjg1V/F
nmAX5jG5mgLX9VjmTrSWg5x36QnTaykwFGrupoVtVsYj80A9BWRDh4OysV9c
aLttoZECdz9vxe9vK4ePFONuDzVT4NqjlKSn2DSLrpWvHqTAYENXBH9HOVS8
abgW7pICUmHqr9q7y0HskhpL/qcU+HKjWetVfzmYht7f2x2TAmrOIoeEhstB
YZ/FzrhEKgSqKbD9o6mARqkcLbfQVHBPrd43L1gBHwiuh+P3pEGT3Iiwo2oF
OEeet2SiSIPKwpW6UWyJztQCB8o0IHs+oKOtVgG2lQMH+qjSQGY5pqkCe1ym
0V6ZJg346UBS4moFKLE6dKfRpoF9WLJ3LLb46XO57gxpcMBUisbjWgVIfWpI
1mBKA1ldHun71yugeFoG8bGkAd8DvcMX1SugsJeJR1MkDQzJBoI7dCogn1e3
8YNKGsQm1R3RNqyAnv696c2maXBv7E1ytnkFNJushBx9lQb6fr6yK48rgLoh
pf5iZDqc5tL8TY0q4NXl/OmUogz4+zJe5NYOrp/WGtgzmAmpUDjRIl4J0a2y
1HK02dCc/TrLTa8SvN8GCSuJ5UDXhXsN6o6VoK5G5faO/Bd4X83K6npXCbXz
LTuHW/Mg8Up66JxuJaj+jn83EYpAkiuoimQQj1+LeXJBoAh2ckKnG49XwJ1X
jXRsDsXw647UnmfHyuGVspCVY1YJXN0vrqjXVwog/46RXbAM/O1tQllHisGq
SzYoFZtXkdqJb7gY/ry7w6ksVAZssUsXzwwVw+f80YA+bB1r1pVLg8Ww0NxD
53SqDMxXjYI0BorhxAU5B2bhMvgTMMJ/v78Y0p06L14SKYMOyhu87r3F4CTF
M/VEtAxa1V43RHQXg0c+hdM3sTJYt/QWR53FcGZOyualTBk8rRGY7K4qBnqL
NftbymVwcm7oel92MaT2/X3GpVkGR4y0LMuji8GG0cy8/V4ZWP4SVn7/sRiy
TUbvuhDLoLRiuoyrugjShP68zsAO45KV/F1VBGf+vk4Zwz5tsx2nja1gtL+V
p7kMbm/y7F+uLIKxMrsNTWzS0ijXz9jHlxN53mIz13mOiGL3DOQbr2LXP9qX
blFRBIK13HFGLWWgLnvkcWx5EUhZ/xlowNY0yD7RV1YEcjr6BNp/ZSB59vqO
QEERcO0PK7/YXQYMj74jq+wi8IzytbXvL4NDfroPUpJxfzjlVROHy8CVgnRr
IrYIvpHes2SYKQMHn5/7dAKKIN6Jd0N5sQyKyeJufnxXBLcqK8JerpUBdWvJ
fPHLIhhvmNL8tV0G59LOTc06FoGyYeIaN005vH6mtSFrUgQki+H/7FnK4ab6
Xy8nfD7dFiGbLuUqBzummrBo2SLwFSTyU/KXQ2KgreKvk0Ug4ZzgveVTDiK1
0oIp+oUQzbmWdWyiHGKkJFZOH0Iw+JuRT1OhAu7rGv2QeZAPqUJnRe5/rYBf
Dy6cr/n+G05w7+PgH6+AQ17xzQJduXCbU0pRObkSZM65aLM/z4RbUl6fLC5V
QeZ6i1GGSxJIjq2fco+tgtIziZEkVyMhg7Jbtqi5Cl5s3TUZmX8B2Zr3BsNr
qsCOnfz14dpPaHlChOSfVxVQxc5Z9VfFIm89u/RN6iqIGNwXIxSRjsx19bay
sOXvpflYR6ejqqF+aWvsuatrz9Jj05FbG40VP3ZRd6Xt0vd0ZEHf+LmPqgr6
L/E4Sibh+vckk75iu6VveDxLTUea24oV9NjiUJBOmpOOfqw0pzynrIJRp88U
XvnpKEGwz2SWogq8xZ4+ZyxNRzE0XmO3SKqA1Vb7rhZFBpIZi2FKWK+ESI/z
O8mKGehe9Z72scVKYE5Tlmf1ykC/DK2GGrAlNimPCr/JQElUNnM52EXTNqRK
3hkoOpduMwzbi9W7x8AnA1E4ylJ4Yn80vpb/7C1uX5GG4SF219+ir1/eZSDh
rT8c0rvtz5FoVn3IQBXTi4dpsFnvLjJsfcpAWtzPeNsWKqGjPbhM1C8D3WV9
sNk3Vwl2q+EJZxMy0ELgVvT4TCXE0AzTSxVmoPgsBY65qUqwDLGdkGnNQONf
r+otTVRCsaimwsXJDHTOJEUqrq0SCp6VWitUZqKpJ38zXIorwZAQ67fvWxbK
EQoldfxRCX0DWQORrtnop5ivQdAX3N+QBJ/52zlo//sj+3tcKsHMWfTXztmf
SEg3ML3UvwK2U9frrqkhdF5oZYvZthwORvInEvhKUAn/sah2jjKIPJr+xvBD
OXJXWVt46FkC3K/U0oMHqtB3jqR3tnlFIEsMlX7MWYf49jy2zn2GgEZlkSbz
YAOaDQuKmmT/Bb5W7Fzhg41o4sNvrTGBTCAkn4sN+EBEYX3moYEnMqHMoXpK
9CMRyQUsN1w+lgmPrz0Tq8Z+Iq8/v8ybCUrTqo/ufyKiZucY0tjDmUDDCwmb
2AzNVds3uTPBLke954svEX0aqW9O58iENbocqPxMRLSsGoZM+zMhxzTk7bof
EV1Z0Yp7yJQJ4xQk5UL+RPRFQLmarD8Dntj/aOSOIqK3av9SnmVkgEp3qQRN
MhG1U3KYt7/KgBUV5vmJXCKaMwoSefEsA8JOeX5SySMi4wafFv7HGcAfmFue
UEBEBAEBvXqzDHiXMGRLU4TL/3an57iVAS6V84SyMiI64fBS7u6lDDixtjz3
vJqIJDf4ScJFMyBCzsvrXD0RPbz0Tur003RQe7Dn/vQWEekY5TLvzU6D4cGS
o02CzWjjzri+zHIqKNbqSPRqN6N4/iimsjOpEL3exXjAoxldMPxEpHieAO0S
iXPLx1vQxej94Zom38CZNCGXMq8F3bQ69U5dNQTcSL7HrV5qRYst3zUYKD7A
K20vZY+CVpTwsEyjNuc+XHTew2Mp2IZogpDPnMRntMqdWVBf0IbEClSGB5K/
IQHe+nok1I6O3OP80jKRgqbq7OhTn7ajamW7wi8RWaipNCj5hn87OnU4Wyzg
6m80FnZL/uundtREwjHp86wQSbBfzMs1aUdn/93UG3EuRCSlXpPB2H55I9Vy
zwuRTRUz63Psm4KNEmGuhYhg1nn6Hnbbd6boNbdCFJI6pCSH/fJ3DL2meyHK
The+xYe9SefUSedRiMh0Cfqjxu3oemlETPHrQnTURl3hBzba2W/m6F2IGN0M
qR9hiwZdehccU4jOaTvyMt5vR2ULN8h/FxYiec8S37B77ejSA96Cto5CNPJH
UffI3XY0ZeSOA1uIzpuzPPfXbUcxXZo7ahTFiFLn+yEZaEdEMm3VP9j80gq6
wti8LPRBVymL0cb7tCAe7AvUj4f+YNsrTbQyYVd3vBG7RlWMIszmmcmw7V5r
uNRj28+Wqy3ItiM99yusDdTF6FMTbVELNnUidUIDTTEq1X0l8hO74s872Uba
YlTsJx70FZv5863KVtZiFG4anG4j047oardbO7iLUTQJz5TihXaUf7voQS9/
MUoU6FY6KN2OFG+3uw6eLkZJS6tlE+fbEYHOA4bOFON9aLuTjH3fSWB96Fwx
+spEwfsY+0lxScqwZDE6/Cru1Fnss9vq90akipGz9B3eVcl25KDURDd6Abfn
dpzkN3aySIb2GKEYEcn73hGwE0+ofRqXL0Z/BSdRmQQeL9WnrAmlYjRqfcX/
CvaX1O3M+UfFSF+0RsH0NI4v85MXc4HFiFltWOTeqXZ0w5ixd6SwGJUPjN45
y9+OBkyKvrSMFqM1Vp2/w7ztiIM+h7jXrhRdZ/RcPT3chhqeqcLkdhmiEvVj
/x3cho6bDuV5uVeg1keqNCmX2tCZr0W2lCRV6FGHmK18dysavuR53tuuGi1t
zrplW7Qi7sMm5jeJteiHl63n1McWdPVNq2E5Wz3KerFvqvZzM5pjcHgaGdaA
SPg236TZEpHU9Pfw75GN6JuJPTujZBNyZPBIb/ZtQly8ek1GnQ3oZ2Fc+sdH
RLTnIFn/y8o/aFxI9fvLu83I8i6JVP1mNTp3/PftPuwAC9m0YxvV6NgFI0rQ
b0ZBdn0czmvV6Jbc5R8h2B2NebZNK9XInN5IdR27erChlH+5GpFZ/RrWuteM
6ti4qVwXq9Erqn97WQyakcSM4GPBuWokEdJ95A/2MYUjCW1T1Ui1qpzzjWEz
4vlBmvJyvBrJfPOba3zQjFLHNkdFq6rRgfM3cvfZNKMIyl8XquNwXOYirJQc
mtHfpMrsa57VSHOQh97OtRkxKZXdLzKqRre5xl0VyprR15OHxzaYqtDvLJOg
2qZm9KWrZ5y7thJ5Pl8iCPc2o6w339uXPCtRrV29mvlUM4ry0ELuFytRm8u5
QLf1ZvReoG5/xUYFGg7isVeia0G2FG1HSyIqkMuFg3saDrUgzjNP1hQUKlAx
PckIm1AL+kr/0/r6WDkSv1NTE67TgtgsTqgadZUhaeonl6dcWlCkg+BPwkYp
utqmpJ8b0YJ6HLsOv2IrRUF7nTN3ilpQ6/uLJ6VEShBladbW774WxHQx+66V
QjG67B0V68GJz0UBZhFX80LEMXHl89L1ViRQbOVylD4fdZGwn5183opM4pTd
ScRyUfzF+eMqsa0oSjaw87J8Fnr4L/L0UnkrUqvWpk5QTEMSKgInviy2ol9y
dIYvCiORRftleEnehi7/PXv05Wc1JN8pzTuz1IpCs7j+VSpEQubeo/mfmlqR
9I+mn+ysqfAlpP5WVlArGov4PFr3LQf2qlyWJldpRRPnfKra1RHQHTzVJjbc
gsySPpSTvi2BX/ddD8C3FtT5pKS7/3cZuNA1nR6KbkEuKzc1cgvKYMXxgZwP
dupYfu2HojJIDlJQFMNWJNNRMSktA0FNE9m2qBb0KuxY/YWKMlj1rznpgp14
6Kg2S3UZqG5yT1ZGtqCXMy5PC+vLQKP+5XNWbCJTYMxDnKcHG6316eN4U6Rb
TBzsKIOvEcHJl4NakHXspf2DOE92HIqT+ReA5+9DlhOBpxx0qFqYLP1b0JM8
kWOhJ8sh7B4P/5Yf3ncU7zbWzuL37wDZUS7fFnR+ZYMxU7UcsjZBWOpDC/qz
czHA6j7Ow0krlW++bUFxpsLBAk7lsLbibWvxpgXp8FlzDH0sh27Ljq9pFi3I
YzROSP1pBQwVLLU1qraggms9N0e0KkFqonqtBq+nXt0orSjpKvAkP94cjtdf
WQ3jtDNPNeR72jhPfmhGxOPiV/+cqQPpveJBVpTNiEImsEb6WAPoGvlmH7cm
otHw74vlKY0gu8LuxlHdhLJUFq6/P0+EjFB28usHmlD+23fUzMXNQLJZXaPa
2IBcjg+sJ1xug1TeTpprtX9Q4YWEFGLZX5CaX24u/VGDLnnOZdad7wQu2vZ6
DYVK9IcmhzoyohtsJo1PpAaUIu0xc4t3z3pBIFRi7yy+z67Sn+8bCemDTWOG
b1bfCpG/QXn+9dA+ONY7KTIVVYjeUiUH5mL7CremW0QWokPbmza8YX0g/rRK
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

               "]}, {Automatic}][$CellContext`t$$], {0, 0}], {
            
            InterpolatingFunction[{{0., 18.75}}, {
             5, 7, 1, {1160}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
              False}, CompressedData["
1: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
inwK8OJKk/tDWQVY4CQ9ZNFTAPn8u23XzBTAzOprX+45BdDRF77X5acAMiqW
hsuRCsCFi6YTTVeAy2/iiuVLFeC95wMr3ToFUBF7tMOkUwHiWjMK7T4rwIpb
rqXbTwVo6mFkMVxXgATnfCYrpOvmIUZHpF78L3pPJI98DF0Q8kejCu095N05
760CpKp43Xor8tMhurVRpOOuyuG1DQX4/dm1aeeWAigwinLhkK6KnccVkT+C
FBcOIe37YsJdkEMyS5LByL17gy7eRxac5Hz5GOkbRzKvQxq93TszhBSmPRn8
Z9v264t/t43OOLWGFLFq6f63rfik7sa2P1iLNpFfyzNebJt5W6ttWzLBdXTb
Z00PNrbVPtMuuLX9nMWD25Y8biO7rci56d3bss74Gm27dontxLZSV26e2tbQ
Z9V526RbE1e2nYjsD9pWPakpalu7Lp+4bUPoqcnb9rs/zN6W8IX56bZXDK/W
bLtS2tuwrQ+/ctu2gWO/3m17+0nh523DA1wmtj337+HM/819N78ty1Wt9W2d
jg9ubNuEeW9te3gg7D/73B/850mWgv8cf/zyP9203v5n0PmZ/4x9yEFDQ0OB
rE7Kf1pU+e7YliGzlXbbn521XNu+/1suum0Vvkj2P3vMC7etDPgnv2NbucyS
bctmFF8xIotLarrZkPnuht+4t/OVP8zxIa+1WiYcRBoc79f2Qwr9shgpRk4H
9YV8Q9bwWcjz7kBzPx3J5KCjgHDGIWFmBgoYuhjE0DJRwJuyj3mDmQK5S3rX
/7BSINvcNkpHkAIZZT6pQdIUSONJLGpVpkCqe3k1G1Agufvdm6PGFEii/B6M
P06BltKiPjp3CixQXbsvB1NAooz45msyBYxVfjQbP6GAb3nGq+oWlK/m8FL2
EwUELSvNChcpEH6F86c8uyKs3Xe8VUJQBNdnNSJUXUX49J63/KmlIhxecD2s
ckkRangav5eHKEJr8NnVW1mK0LPKyGneqAiDF/OlpL4pwtjIIY35DUVYkfsj
/Y2DCv/OHnzSJkoFmrQHWqVkKqi0Fgvt16WC82zD3wETKiTv+vDxogMVOrWn
K2g9UN+ZzfjEW6jvzs6r8vFUcHoqY9GQQ4WklQdRtlVUeKPN0f6nnQrrN27Q
3f9EBUrroi5llgoObM7e7ZtUiD06VHaWWwmMOne/VyIpAa3Rg/lNTAletv7l
7rBSAo991tQHbkogV195xClUCUZ1BNxU0pTgwYtrUTSVSpCgqtQl3acE90t/
chyaV4J7cjnG7pzKcDfbITKerAxhkiKdLw8qQ3BKP/s3R2UI4o8+zHBLGb4Y
PTvk/lgZ3LIHpaueKMN/Pw3VK8P/AzEq1IE=
             "], {Developer`PackedArrayForm, CompressedData["
1:eJwd12FEKGCyBuDu2bbbJkmSJOkmSZIkSZIkSZIkSZIkSdImSY4kSbpJkiTJ
kSRJkiRJkiRJkiRJkiRJkiRJss/Zj4fv/ztjZv6v4d8Vbf8TEBDw/4EB/32/
+PsNIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskjnwIKKaKY
Ekopo5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKb3/TQSx/9DDDIEMOMMMoY
40wwyRTTzPCHWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaEU84454JL
rrjmhlvuuOeBR5545oVX3njng0+++OaHAIXwi0CCCCaEUMIIJ4JIoogmhlji
iCeBRJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa6qingUaa
aKaFVv4WeTsddNJFN7/poZc++hlgkCGGGWGUMcaZYJIpppnhD7PMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND3+b/xeBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZZJFN
DrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRzW966KWP
fgYYZIhhRhhljHEmmGSKaWb4wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8Ah
RxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzQ8A/5E8gQQQTQihh
hBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVV
VFNDLXXU00AjTTTTQitttNNBJ11085seeumjnwEGGWKYEUYZY5wJJplimhn+
MMsc8yywyBLLrLDKGutssMkW2+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc8
8MgTz7zwyhvvfPDJF9/88Hfw/yKQIIIJIZQwwokgkiiiiSGWOOJJIJEkkkkh
lTTSySCTLLLJIZc88imgkCKKKaGUMsqpoJIqqqmhljrqaaCRJpppoZU22umg
ky66+U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQx/mGWOeRZYZIllVlhljXU22GSL
bXbYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ1545Y13Pvjki29+CPin
/AkkiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10Msgki2xyyCWPfAoopIhi
SiiljHIqqKSKamqopY56GmikiWZaaKWNdjropItuftNDL330M8AgQwwzwihj
jDPBJFNMM8MfZpljngUWWWKZFVZZY50NNtlimx122WOfAw454pgTTjnjnAsu
ueKaG265454HHnnimRdeeeOdDz754psf/i79vwgkiGBCCCWMcCKIJIpoYogl
jngSSCSJZFJIJY10Msgki2xyyCWPfAoopIhiSiiljHIqqKSKamqopY56Gmik
iWZaaKWNdjropItuftNDL330M8AgQwwzwihjjDPBJFNMM8MfZpljngUWWWKZ
FVZZY50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOd
Dz754psfAv5X/gQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSSRTY5
5JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3v+mhlz76
GWCQIYYZYZQxxplgkimmmeEPs8wxzwKLLLHMCqussc4Gm2yxzQ677LHPAYcc
ccwJp5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0Pfw/+XwQSRDAhhBJG
OBFEEkU0McQSRzwJJJJEMimkkkY6GWSSRTY55JJHPgUUUkQxJZRSRjkVVFJF
NTXUUkc9DTTSRDMttNJGOx100kU3v+mhlz76GWCQIYYZYZQxxplgkimmmeEP
s8wxzwKLLLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8D
jzzxzAuvvPHOB5988c0PAf+SP4EEEUwIoYQRzn8AIvlQeA==
              "], CompressedData["
1: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
t0dXSdofhuBOzoCSkO0KLB1+0Er7bgh0hekoFl+tgOT9j2HRL4bg4vlWUlD3
CnD269nx4fuhrKT9tsjJVfh0c3dtJr7flJNd/rz+vAo+y3Fi2qWDoH5pUef7
xCoIBlzqy3EZhFMau7qNVddA6bmfFfH4INRFfWLhr1iDzNPUlMU5A9D6n1bc
yfPrwKVV0f9BbgACFVfXDEvWYah8dTAhqh9ac0cUhU5tQERYkpcnbT/Yf/wv
RyVpA4ZN7zRr5pCgfWzz7GW+Tbgg7224X6sXhn7kaNhhv39AL5So2QscXuuX
PmFPMh/6q4hdngpXUrEj3BrSqy72gj4zg2Ejtl4lh5MRNn9I2/VZ7KSWKYWR
C73Qxf/c7Oj+Tch2rP9DjW1qKHPXDpttL430IY1e8Dq2cC8Vu+Hz529nzvfC
xqIwz1GBTYCg6Ozbyr0gKvCCPuXQJgxssrK7yfWCiEPUCWnhTVDbuBIdJtkL
IZe1whMOb8Lo/SGbbMFecHYTyLVEm5CT50HdX9UDy+zco7rnNmHZ4aBZblYP
vIqWWztxcRPi2ivd30X3gPVD0tQ+nU3Q+jBkffZLD/SuzNgyXd6EK6TSnGmv
HnjzteXxzhU83/1T/t/deuDwV/OFOb1NoGQV3Tn7sgfEDWqftBrh+BODwrys
e4DLxWs+y2QTRE+IsFWa9kD51PKDr7c2QcNIWnNFtwdC1O/2OFhsgi4vuy7f
2R44ua32fuz9Jpyciz5OkdYNvtLDH0ITN2GGyp7Hc383MPUxq3wibAKB3udz
khv+7uk4NPBndhPCPFbNHo10Qs3DxjfO+7eAPvSV/mvWTjAWu3q2/PwWaF5q
WxiT7YAN5polX9styLmV/TIOf7/t72J7VfF1C57KqmRUmLXBR/lXteb5W1AV
2Rp15VEr3ElutVKd3YKQfHUTqXUiUOUfobY7uA3vH5rW2D9rBv3tpGNll7aB
oe6Rzq/RRnj0SIqb13EbonmvfuP9TADjgd0dOt+34aRTMtfayVow0qQWUM3Z
hnJo/nCkohIUytcTVtu3wT3D/KpYXSkUx10Lp57bhgUnZr46RwA2S3aXIYod
8FMSULvXmQ1Ir119HFt3H7t4XFs2mLuvMs9gS6svsowTs6F+1bF1Eful3tKc
eFM2tKboBq9jx2ZxNT8gZENj3LvbFJQ7sH/QICWxNhuu8CdMMWLPC3Hfka7A
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
yz7MP5cgq9SU4wFAAcFbI1QAyj/rhClW
              "]}, {Automatic}][$CellContext`t$$], 0}]}}, PlotRange -> 2, 
        ImageSize -> 280, Frame -> True, Axes -> True, AxesStyle -> 
        Dashing[{Small, Small}], PlotLabel -> 
        "t" == NumberForm[$CellContext`t$$, {4, 2}]], 
      "Specifications" :> {{$CellContext`t$$, 0, 18.75, DefaultDuration -> 5, 
         AnimationRunning -> False, AnimationRepetitions -> 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{394., {215.06083996989764`, 221.93916003010236`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.847433480322504*^9, 3.8474337850994763`*^9, 3.847433848333333*^9, 
   3.847433901589203*^9, {3.8474339999663086`*^9, 3.8474340113723564`*^9}, 
   3.8474341316483016`*^9, {3.8474341880074*^9, 3.8474342804585104`*^9}, 
   3.847434347506673*^9, 3.84743441126062*^9, 3.8474344914155383`*^9, {
   3.8474345251047897`*^9, 3.84743453678154*^9}, 3.8474346381023307`*^9, 
   3.8474346990494113`*^9, 3.8475014202304773`*^9, 3.847501775421412*^9, {
   3.847501849363008*^9, 3.847501863807088*^9}, 3.847501903978651*^9, 
   3.847501953517728*^9, 3.84750203430855*^9, {3.847502090524619*^9, 
   3.847502176848399*^9}, {3.8475022174800663`*^9, 3.847502226686206*^9}, {
   3.847502271583479*^9, 3.847502313821563*^9}, 3.847502456926992*^9, 
   3.8475031208237977`*^9, 3.847503354734557*^9, 3.847841633627068*^9, {
   3.847841748287282*^9, 3.8478417740958014`*^9}, 3.8478418366045628`*^9, {
   3.847841970196323*^9, 3.847842013925067*^9}, 3.8478420572949524`*^9, {
   3.847842101922344*^9, 3.8478421431564054`*^9}, 3.8478424412757063`*^9, 
   3.847842481737465*^9, 3.8478516170738597`*^9, {3.847851836655625*^9, 
   3.8478518535055304`*^9}, 3.8478519621804814`*^9, 3.84785208276624*^9, 
   3.847852124346649*^9, 3.8478522043125954`*^9, {3.84785225985118*^9, 
   3.8478523021952972`*^9}, 3.8478523657597485`*^9, 3.8478528966564875`*^9, 
   3.847852939817425*^9, 3.847853060849557*^9, 3.8478532300808325`*^9, {
   3.8478535229564323`*^9, 3.847853529333849*^9}, 3.8478535829213743`*^9, {
   3.8478536312189484`*^9, 3.8478536455204916`*^9}, 3.847853929671974*^9, 
   3.847854007886502*^9, 3.8478540379256535`*^9, {3.847854077463707*^9, 
   3.847854091791974*^9}, {3.847854497211898*^9, 3.847854506562147*^9}, {
   3.847854542118281*^9, 3.8478545558611603`*^9}, 3.847854595859212*^9, {
   3.847854639326253*^9, 3.8478546635814333`*^9}, 3.847854742543559*^9, 
   3.8478548863809953`*^9, 3.847855377366303*^9, 3.8478554608714323`*^9, 
   3.84785557578249*^9, 3.84785563965324*^9, 3.8478556898053465`*^9, 
   3.8478559564722977`*^9, {3.8478560333300533`*^9, 3.847856059016578*^9}, 
   3.84785672214949*^9, {3.847940061895616*^9, 3.8479401104859467`*^9}, {
   3.8479401804209647`*^9, 3.8479402261141443`*^9}, {3.847940306836896*^9, 
   3.847940390627516*^9}, 3.8479405269991207`*^9, {3.84795602866823*^9, 
   3.8479560410174656`*^9}, 3.8479560820535073`*^9, 3.847956113914726*^9, {
   3.847956167859581*^9, 3.8479562550759563`*^9}, {3.847956286827216*^9, 
   3.8479563205501394`*^9}, 3.8479566336092463`*^9, 3.847956664179693*^9, {
   3.847957323727208*^9, 3.847957350453846*^9}, {3.847957418302535*^9, 
   3.8479574312946157`*^9}, 3.8479575640404024`*^9, 3.84795768032559*^9, {
   3.8479577456845865`*^9, 3.847957767251273*^9}, 3.847957835699912*^9, 
   3.8479579056743736`*^9, {3.8479582199054403`*^9, 3.847958248157957*^9}, 
   3.8479796774014807`*^9, 3.848000164518021*^9, 3.8480833047283297`*^9, 
   3.848083358333102*^9, 3.848083477564786*^9, 3.8480835353037577`*^9, {
   3.848084835722597*^9, 3.848084851468354*^9}, 3.848084905119177*^9, {
   3.8480849773545837`*^9, 3.8480849992035933`*^9}, 3.848086070795807*^9, {
   3.848284086351359*^9, 3.848284098458041*^9}, 3.8482846750512037`*^9, 
   3.8482847066861134`*^9, 3.84828473991366*^9, {3.848284779183134*^9, 
   3.848284795032816*^9}, 3.848284845857038*^9, 3.8482849280495157`*^9, {
   3.848284977138186*^9, 3.848284997134636*^9}, 3.848285105470495*^9, {
   3.8482852281179256`*^9, 3.84828524990379*^9}, 3.848285281299542*^9, 
   3.850654447302698*^9, 3.8607683530553827`*^9, 3.8607685649908934`*^9, 
   3.860772274809021*^9, 3.860772368502743*^9, 3.8607724786321535`*^9, 
   3.8607725920994854`*^9, {3.860772644171657*^9, 3.860772673819076*^9}, 
   3.8608518172620287`*^9, 3.860851919016361*^9, 3.860852099728345*^9, {
   3.8619063721915274`*^9, 3.8619064098484983`*^9}},
 CellLabel->
  "Out[1735]=",ExpressionUUID->"2f2ff144-f508-426d-ac2e-a08c94ed7042"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"SetDirectory", "[", "\"\<D:\\\\\>\"", "]"}], ";", "\n", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<General_anim.avi\>\"", ",", "anim"}], "]"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8474346255483975`*^9, 3.847434634778217*^9}, {
  3.8474347407728615`*^9, 3.847434742041478*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"f06f50d6-7373-4bb5-bcfd-8266288ecad3"]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
DockedCells->{},
Magnification:>1.2 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9225d114-8260-4293-a454-552d9342e297"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 18060, 447, 919, "Input",ExpressionUUID->"f1c573d6-66a6-443e-a536-78c2a7ddcebb"],
Cell[18621, 469, 390, 6, 62, "Text",ExpressionUUID->"9064276b-1fef-4a94-baca-71c953dfb3ed"],
Cell[19014, 477, 4264, 106, 238, "Input",ExpressionUUID->"93693239-7e2a-4f89-8cf7-a8f2b46766e2"],
Cell[23281, 585, 450, 9, 62, "Text",ExpressionUUID->"5ad487c6-1d01-4bb4-8677-158c0fdc7a46"],
Cell[23734, 596, 11563, 267, 491, "Input",ExpressionUUID->"bc2dd642-d8d4-420f-9e33-32c9a25fbf5c"],
Cell[35300, 865, 537, 9, 62, "Text",ExpressionUUID->"683abb58-10c3-4348-b198-7d7ca8753749"],
Cell[35840, 876, 16422, 414, 1212, "Input",ExpressionUUID->"46ab8ae2-6dd0-439e-b933-38d15d959713"],
Cell[52265, 1292, 358, 6, 48, "Input",ExpressionUUID->"0af177f1-d4b4-4d4f-b572-871ec619b57c"],
Cell[52626, 1300, 394, 7, 62, "Text",ExpressionUUID->"4bf8405d-f174-4744-b89e-d9a99d7ce373"],
Cell[CellGroupData[{
Cell[53045, 1311, 5822, 147, 301, "Input",ExpressionUUID->"bf40c848-fe53-419b-adfb-b3a4c1314970"],
Cell[58870, 1460, 565, 12, 33, "Message",ExpressionUUID->"45d92540-a385-46f2-a2bb-976977094fcd"]
}, Open  ]],
Cell[59450, 1475, 4757, 133, 286, "Input",ExpressionUUID->"82475b9e-2d27-4047-ab55-c47f77b59be9"],
Cell[64210, 1610, 4753, 133, 286, "Input",ExpressionUUID->"9c43b115-c629-4ecc-87ce-df2b309c3c26"],
Cell[68966, 1745, 174, 3, 33, "Input",ExpressionUUID->"03c7efac-8cca-4322-b499-6cd17b5b4aa5"],
Cell[69143, 1750, 506, 8, 62, "Text",ExpressionUUID->"09e0bf8d-0fbb-4418-b194-8ee43d4c5bc0"],
Cell[CellGroupData[{
Cell[69674, 1762, 5282, 123, 324, "Input",ExpressionUUID->"3c0ffa17-1538-4b36-838e-10c6b32685c8"],
Cell[74959, 1887, 153769, 2533, 473, "Output",ExpressionUUID->"2f2ff144-f508-426d-ac2e-a08c94ed7042"]
}, Open  ]],
Cell[228743, 4423, 424, 9, 57, "Input",ExpressionUUID->"f06f50d6-7373-4bb5-bcfd-8266288ecad3"]
}
]
*)

