(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1643956,      31668]
NotebookOptionsPosition[   1632244,      31473]
NotebookOutlinePosition[   1632608,      31489]
CellTagsIndexPosition[   1632565,      31486]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Function definitions", "Section",
 CellChangeTimes->{{3.867678969674955*^9, 3.8676789747553387`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"218715c9-e13d-4d05-9367-f46b46dc3c30"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix2", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_", ",", "nGrid_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "y", ",", "x", ",", "L", ",", "RHS", ",", "RHS2", ",", "xdot", ",", 
      "\[Theta]", ",", "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", 
      "soltn", ",", "Af", ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", 
      "R", ",", "Mf", ",", "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", 
      "sol2", ",", "t", ",", "sTable", ",", "s", ",", "time1", ",", "dT", ",",
       "time2"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "i_", "]"}], " ", ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          SubscriptBox["s", "i"]}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["s", "i"], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "i"], ".", "Bf"}], ",", 
           RowBox[{"Bf", ".", 
            SubscriptBox["s", "i"]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}]}], "}"}]}]}], ";", 
     " ", "\n", 
     RowBox[{
      SubscriptBox["s", "0"], " ", "=", " ", "S0"}], ";", "\n", 
     RowBox[{"dT", " ", "=", " ", 
      RowBox[{"\[Tau]", "/", "nGrid"}]}], ";", "\n", 
     RowBox[{"sTable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["s", 
          RowBox[{"i", "+", "1"}]], " ", "=", " ", 
         RowBox[{
          SubscriptBox["s", "i"], " ", "+", " ", 
          RowBox[{"dT", "*", 
           RowBox[{"RHS", "[", "i", "]"}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "nGrid"}], "}"}]}], "]"}]}], ";", "\n", 
     "sTable"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"xState", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", 
     RowBox[{"x2dot", "=", 
      FractionBox[
       RowBox[{"u", "+", 
        RowBox[{"A", " ", 
         SuperscriptBox["\[Theta]dot", "2"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"A", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"\[Theta]2dot", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"u", "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"fx", "=", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", 
     RowBox[{"L", "=", 
      FractionBox[
       SuperscriptBox["u", "2"], "2"]}], ";", 
     RowBox[{"Af", "=", 
      TemplateBox[{"fx","xState"},
       "Grad"]}], ";", 
     RowBox[{"Bf", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", "u"], "fx"}]}], ";", 
     RowBox[{"Q", "=", 
      TemplateBox[{
       TemplateBox[{"L", "xState"}, "Grad", SyntaxForm -> Del],"xState"},
       "Grad"]}], ";", 
     RowBox[{"Mf", "=", 
      TemplateBox[{RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"u"}]], "L"}],"xState"},
       "Grad"]}], ";", 
     RowBox[{"R", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]], "L"}]}], ";", 
     RowBox[{"S0", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"Transpose", "[", "Af", "]"}], ".", 
         RowBox[{"S", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"S", "[", "t", "]"}], ".", "Af"}], "-", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
          RowBox[{"Bf", ".", 
           RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"xdot", "\[Rule]", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]dot", "\[Rule]", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"u", "\[Rule]", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     RowBox[{"sol2", "=", 
      RowBox[{"S", "/.", "\[VeryThinSpace]", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["S", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "\[Equal]", "S0"}]}], "}"}], ",", 
         "S", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
     RowBox[{"S", "=", 
      RowBox[{
      "sol2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
   "]"}]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"CalculateGains2", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "sTable_", ",", 
     "nGrid_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "index", ",", "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", 
       ",", "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q",
        ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"index", " ", "=", " ", 
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], ",", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Tau]", "/", "nGrid"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Bf", ".", 
          RowBox[{"Indexed", "[", 
           RowBox[{"sTable", ",", 
            RowBox[{"1", "+", "index"}]}], "]"}]}], ")"}], "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateGains", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",",
        "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Bf", ".", 
          RowBox[{"S", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ffCartPendulum", "[", 
   RowBox[{"ICs_", ",", 
    RowBox[{"n_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Tau]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Tau]1_", "?", "NumericQ"}], ",", 
    RowBox[{"A_", "?", "NumericQ"}], ",", 
    RowBox[{"order_", "?", "NumericQ"}], ",", 
    RowBox[{"maxIter_", "?", "NumericQ"}], ",", 
    RowBox[{"maxError_", "?", "NumericQ"}], ",", 
    RowBox[{"uMax_", "?", "NumericQ"}], ",", 
    RowBox[{"maxCount_", "?", "NumericQ"}], ",", "initGuess_", ",", 
    RowBox[{"maxJ_", "?", "NumericQ"}]}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "frootNew", ",", "errorNew", ",", "InitGuess", ",", "J", ",", "S", ",", 
      "K", ",", "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", 
      ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
      "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
      ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
      "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
      ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
      "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
      ",", 
      RowBox[{"xGuess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["xGuess", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{"xdot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
             ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "\[Theta]dot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"A", " ", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                ")"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
             ")"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "0", ",", "\n", "\t", 
        RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
         
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", "A", "+", 
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Lambda]2"}], "+", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
              RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "A", " ", 
                  SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                 SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["A", "2"], " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
              RowBox[{"2", " ", "\[Lambda]4"}], "+", 
              RowBox[{
               SuperscriptBox["\[Lambda]4", "2"], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"2", " ", "A", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                 "-", "\[Lambda]4"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
              RowBox[{"A", " ", 
               RowBox[{"(", 
                RowBox[{"\[Lambda]2", "-", 
                 RowBox[{
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"A", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}],
         ",", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"4", " ", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"A", " ", "\[Theta]dot", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
         "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], "\n", 
     RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      StyleBox["xGuess",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["Table",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["If",
          FontWeight->"Plain"], 
         StyleBox["[",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"i", " ", "!=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]],
            FontWeight->"Plain"], 
           StyleBox[" ",
            FontWeight->"Plain"], 
           StyleBox["=",
            FontWeight->"Plain"], 
           StyleBox[" ",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "i"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["+",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"\[CapitalDelta]t", "*", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}],
             FontWeight->"Plain"]}]}], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "0"], " ", "=", " ", 
           RowBox[{"{", 
            StyleBox[
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}],
             FontWeight->"Plain"], 
            StyleBox["}",
             FontWeight->"Plain"]}]}]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "0"], "\[Equal]", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         SubscriptBox["xdot", "0"], "\[Equal]", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         SubscriptBox["x", "n"], "\[Equal]", 
         SubscriptBox["xdot", "n"], "\[Equal]", "0"}], ",", 
        RowBox[{
         SubscriptBox["\[Theta]", "0"], "\[Equal]", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         SubscriptBox["\[Theta]dot", "0"], "\[Equal]", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         SubscriptBox["\[Theta]dot", "n"], "\[Equal]", "0"}], ",", 
        RowBox[{
         SubscriptBox["\[Theta]", "n"], "\[Equal]", "\[Pi]"}]}], "}"}]}], ";", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "i"], ",", 
               SubscriptBox["xdot", "i"], ",", 
               SubscriptBox["\[Theta]", "i"], ",", 
               SubscriptBox["\[Theta]dot", "i"], ",", 
               SubscriptBox["\[Lambda]1", "i"], ",", 
               SubscriptBox["\[Lambda]2", "i"], ",", 
               SubscriptBox["\[Lambda]3", "i"], ",", 
               SubscriptBox["\[Lambda]4", "i"]}], "}"}], "\[Equal]", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                ")"}]}], "+", 
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["xdot", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Theta]", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Theta]dot", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]1", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]2", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]3", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]4", 
                 RowBox[{"i", "-", "1"}]]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\n", "\n", 
     RowBox[{"sv", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["x", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["xdot", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Theta]", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Theta]dot", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]1", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]2", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]3", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]4", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\n", "\[IndentingNewLine]", 
     RowBox[{"froot", "=", 
      RowBox[{"FindRoot", "[", 
       RowBox[{"eqns", ",", "sv", ",", 
        RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "n"], ",", 
               SubscriptBox["xdot", "n"], ",", 
               SubscriptBox["\[Theta]", "n"], ",", 
               SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "0"], ",", 
               SubscriptBox["xdot", "0"], ",", 
               SubscriptBox["\[Theta]", "0"], ",", 
               SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
             "ICs"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "i"], ",", 
                  SubscriptBox["xdot", "i"], ",", 
                  SubscriptBox["\[Theta]", "i"], ",", 
                  SubscriptBox["\[Theta]dot", "i"], ",", 
                  SubscriptBox["\[Lambda]1", "i"], ",", 
                  SubscriptBox["\[Lambda]2", "i"], ",", 
                  SubscriptBox["\[Lambda]3", "i"], ",", 
                  SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                  RowBox[{"{", 
                   RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
          "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", 
     RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";"}], 
      "*)"}], "\n", "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "i"], "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
     "\n", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
          " ", 
          RowBox[{"(", 
           RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
        " ", 
        RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
       RowBox[{
        RowBox[{"InitGuess", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         StyleBox["xGuess",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["=",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["Table",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           RowBox[{
            StyleBox["If",
             FontWeight->"Plain"], 
            StyleBox["[",
             FontWeight->"Plain"], 
            RowBox[{
             StyleBox[
              RowBox[{"i", " ", "!=", " ", 
               RowBox[{"-", "1"}]}],
              FontWeight->"Plain"], 
             StyleBox[",",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               SubscriptBox["xGuess", 
                RowBox[{"i", "+", "1"}]],
               FontWeight->"Plain"], 
              StyleBox[" ",
               FontWeight->"Plain"], 
              StyleBox["=",
               FontWeight->"Plain"], 
              StyleBox[" ",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "i"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["+",
                FontWeight->"Plain"], 
               StyleBox[
                RowBox[{"\[CapitalDelta]t", "*", 
                 RowBox[{"f", "[", 
                  SubscriptBox["xGuess", "i"], "]"}]}],
                FontWeight->"Plain"]}]}], 
             StyleBox[",",
              FontWeight->"Plain"], 
             RowBox[{
              SubscriptBox[
               StyleBox["xGuess",
                FontWeight->"Plain"], "0"], " ", "=", " ", 
              RowBox[{"{", 
               StyleBox[
                RowBox[{
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}],
                FontWeight->"Plain"], 
               StyleBox["}",
                FontWeight->"Plain"]}]}]}], 
            StyleBox["]",
             FontWeight->"Plain"]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           StyleBox[
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"n", "-", "1"}]}], "}"}],
            FontWeight->"Plain"]}], 
          StyleBox["]",
           FontWeight->"Plain"]}]}], 
        StyleBox[";",
         FontWeight->"Plain"], "\[IndentingNewLine]", 
        RowBox[{"sv", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["x", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["xdot", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["\[Theta]", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["\[Theta]dot", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
               "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["\[Lambda]1", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["\[Lambda]2", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["\[Lambda]3", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["\[Lambda]4", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"frootNew", "=", 
         RowBox[{"FindRoot", "[", 
          RowBox[{"eqns", ",", "sv", ",", 
           RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"errorNew", " ", "=", " ", 
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "n"], ",", 
                  SubscriptBox["xdot", "n"], ",", 
                  SubscriptBox["\[Theta]", "n"], ",", 
                  SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
               ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "0"], ",", 
                  SubscriptBox["xdot", "0"], ",", 
                  SubscriptBox["\[Theta]", "0"], ",", 
                  SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                "ICs"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Thread", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
             "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
          RowBox[{
           RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
           RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
           RowBox[{"uff0", "=", 
            RowBox[{"ListInterpolation", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}], "^", "2"}]}]}], 
                    ")"}]}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[Lambda]4", "i"], 
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
                    SubscriptBox["\[Lambda]2", "i"]}], ")"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
               " ", "froot"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
              RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
           "\n", 
           RowBox[{"J", " ", "=", " ", 
            RowBox[{"0.5", "*", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], 
           ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
        RowBox[{"count", " ", "=", " ", 
         RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Count Shooting= \>\"", ",", "count", ",", 
          "\"\<    Error New = \>\"", ",", "errorNew", ",", 
          "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}], "*)"}], 
      "\n", "\n", "]"}], ";", "\n", "\n", "\n", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["x", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["xdot", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Theta]dot", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]1", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]2", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]3", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]3", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "i"], "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
     "\n", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"CalculateSMatrix", "[", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"K", "[", "time_", "]"}], " ", ":=", " ", 
      RowBox[{"CalculateGains", "[", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";",
      "\n", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}]}]}],
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum2", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_", ",", "initGuess_", ",", "maxJ_", ",", 
     StyleBox["nGrid_",
      FontWeight->"Plain"]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "time1", ",", "time2", ",", "sTable", ",", "frootNew", ",", "errorNew", 
       ",", "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", 
       "error", ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]",
        ",", "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", 
       "\[Lambda]3", ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", 
       ",", "eqns", ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", 
       "xff0", ",", "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",",
        "uff0", ",", "\n", "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", 
       ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", 
       "\[Lambda]4ff0", ",", "i", ",", 
       RowBox[{"xGuess", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       FractionBox["\[Tau]", "n"]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", 
        RowBox[{"xdot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"\[Lambda]4", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
         "\[Theta]dot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "\n", "0",
          ",", 
         RowBox[{"-", "\[Lambda]1"}], ",", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"A", " ", "\[Theta]dot", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{"\[Lambda]4", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
           
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}]], 
          "-", "\[Lambda]3"}]}], "}"}]}], ";", "\n", 
      RowBox[{"InitGuess", "=", "initGuess"}], ";", "\n", 
      RowBox[{"xGuess", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[NotEqual]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]], "=", 
            RowBox[{
             SubscriptBox["xGuess", "i"], "+", 
             RowBox[{"\[CapitalDelta]t", " ", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}]}]}], ",", "\n", 
           RowBox[{
            SubscriptBox["xGuess", "0"], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}]}], "}"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["xdot", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["x", "n"], "\[Equal]", 
          SubscriptBox["xdot", "n"], "\[Equal]", "0"}], ",", 
         RowBox[{
          SubscriptBox["\[Theta]", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["\[Theta]dot", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["\[Theta]dot", "n"], "\[Equal]", "0"}], ",", 
         RowBox[{
          SubscriptBox["\[Theta]", "n"], "\[Equal]", "\[Pi]"}]}], "}"}]}], 
      ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "i"], ",", 
                SubscriptBox["xdot", "i"], ",", 
                SubscriptBox["\[Theta]", "i"], ",", 
                SubscriptBox["\[Theta]dot", "i"], ",", 
                SubscriptBox["\[Lambda]1", "i"], ",", 
                SubscriptBox["\[Lambda]2", "i"], ",", 
                SubscriptBox["\[Lambda]3", "i"], ",", 
                SubscriptBox["\[Lambda]4", "i"]}], "}"}], "\[Equal]", 
              RowBox[{
               RowBox[{
                FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                 ")"}]}], "+", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["x", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["xdot", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Theta]", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Theta]dot", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]1", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]2", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]3", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]4", 
                  RowBox[{"i", "-", "1"}]]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["xdot", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Theta]", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Theta]dot", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]1", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]2", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]3", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
              "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time1", ",", "froot"}], "}"}], "=", 
       RowBox[{"Timing", "[", 
        RowBox[{"FindRoot", "[", 
         RowBox[{"eqns", ",", "sv", ",", 
          RowBox[{"MaxIterations", "\[Rule]", "maxIter"}]}], "]"}], "]"}]}], 
      ";", "\n", 
      RowBox[{"error", "=", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], "-", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], "-", "ICs"}], ",", 
             
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "\[VeryThinSpace]", "froot"}], ",", 
         "\"\<Frobenius\>\""}], "]"}]}], ";", "\n", 
      RowBox[{"count", "=", "0"}], ";", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], " ", 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"J", "=", 
       RowBox[{"0.5", "*", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
      "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"error", ">", "maxError"}], "||", 
           RowBox[{"J", ">", "maxJ"}]}], ")"}], "&&", 
         RowBox[{"count", "\[LessEqual]", "maxCount"}]}], ",", "\n", 
        RowBox[{
         RowBox[{"InitGuess", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\n", 
         RowBox[{"xGuess", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[NotEqual]", 
               RowBox[{"-", "1"}]}], ",", 
              RowBox[{
               SubscriptBox["xGuess", 
                RowBox[{"i", "+", "1"}]], "=", 
               RowBox[{
                SubscriptBox["xGuess", "i"], "+", 
                RowBox[{"\[CapitalDelta]t", " ", 
                 RowBox[{"f", "[", 
                  SubscriptBox["xGuess", "i"], "]"}]}]}]}], ",", 
              RowBox[{
               SubscriptBox["xGuess", "0"], "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "4", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "4", 
                  "\[RightDoubleBracket]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
         RowBox[{"sv", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["xdot", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Theta]dot", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]1", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]2", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]3", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]4", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "\[Rule]", "maxIter"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"errorNew", "=", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], "-", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], "-", "ICs"}], 
                ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "\[VeryThinSpace]", "frootNew"}], ",", 
            "\"\<Frobenius\>\""}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", "\[LessEqual]", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", "=", "frootNew"}], ";", 
            RowBox[{"error", "=", "errorNew"}], ";", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[Lambda]4", "i"], " ", 
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
                    SubscriptBox["\[Lambda]2", "i"]}], 
                   RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                "\[VeryThinSpace]", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], 
            ";", "\n", 
            RowBox[{"J", "=", 
             RowBox[{"0.5", "*", 
              RowBox[{"NIntegrate", "[", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], 
            ";"}], ",", "_"}], "]"}], ";", "\n", 
         RowBox[{"count", "=", 
          RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}], "*)"}], 
       "\n", "]"}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["x", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["xdot", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Theta]dot", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Lambda]1ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]1", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Lambda]2ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]2", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Lambda]3ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]3", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Lambda]4ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]3", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], " ", 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", "=", 
       RowBox[{"0.5", "*", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
      "\n", 
      RowBox[{"sTable", "=", 
       RowBox[{"CalculateSMatrix2", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A", ",", "nGrid"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"K", "[", "time_", "]"}], ":=", 
       RowBox[{"CalculateGains2", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "sTable", ",", 
         "nGrid"}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["xdot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]dot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"uff0", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
        "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"0.5", "*", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", 
      RowBox[{"\[Kappa]3", "=", 
       RowBox[{"-", "0.1`"}]}], ";", 
      RowBox[{"\[Kappa]4", "=", 
       RowBox[{"-", "0.65`"}]}], ";", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["xdot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]dot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
        "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
            "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"0.5", "*", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"us", "[", "t", "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFBClipped", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "uBound_", ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", 
      RowBox[{"\[Kappa]3", "=", 
       RowBox[{"-", "0.1`"}]}], ";", 
      RowBox[{"\[Kappa]4", "=", 
       RowBox[{"-", "0.65`"}]}], ";", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff", "[", "t", "]"}], "+", 
          RowBox[{"ufb", "[", "t", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["xdot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]dot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
        "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff", "[", "t", "]"}], "+", 
          RowBox[{"Piecewise", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"K", "[", "t", "]"}], ".", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"xff", "[", "t", "]"}], "-", 
                   RowBox[{"xs", "[", "t", "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"xdotff", "[", "t", "]"}], "-", 
                   RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
               
               RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}],
               "}"}], "}"}], ",", 
            RowBox[{
             RowBox[{"\[Kappa]1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
             RowBox[{"\[Kappa]2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
             RowBox[{"\[Kappa]3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
             RowBox[{"\[Kappa]4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"0.5", "*", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"us", "[", "t", "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.865967298267394*^9, 3.8659673001198*^9}, {
   3.866571893798601*^9, 3.866571940716648*^9}, {3.8665719967138014`*^9, 
   3.86657200493918*^9}, 3.8665721461421776`*^9, {3.8665731331726017`*^9, 
   3.8665731928485823`*^9}, {3.866573291140256*^9, 3.8665733048578844`*^9}, {
   3.866573636752106*^9, 3.866573657335546*^9}, {3.86657481838451*^9, 
   3.8665748273656473`*^9}, {3.866574870351947*^9, 3.8665748910333557`*^9}, {
   3.8665788373566265`*^9, 3.8665788400997524`*^9}, {3.866579031902623*^9, 
   3.8665790413156233`*^9}, {3.8665801062232275`*^9, 3.866580141002143*^9}, {
   3.866664127693946*^9, 3.8666641298202667`*^9}, {3.8667356182927976`*^9, 
   3.86673568611979*^9}, {3.866735735976613*^9, 3.866735746106326*^9}, {
   3.8667357917795067`*^9, 3.8667357922973385`*^9}, {3.8667369179510965`*^9, 
   3.8667371366351404`*^9}, {3.866737410171386*^9, 3.8667375163569317`*^9}, {
   3.866737646330759*^9, 3.8667376465136995`*^9}, {3.8667376988837075`*^9, 
   3.8667377777961025`*^9}, {3.8667386986753044`*^9, 
   3.8667387105614476`*^9}, {3.8667389141044035`*^9, 
   3.8667389332601886`*^9}, {3.8667389783395615`*^9, 
   3.8667389806728044`*^9}, {3.866739043478426*^9, 3.8667390512579017`*^9}, {
   3.8667390870272956`*^9, 3.8667391318757434`*^9}, {3.86674040926027*^9, 
   3.8667404968818393`*^9}, 3.866740531578581*^9, {3.8667406439541187`*^9, 
   3.866740650558975*^9}, {3.8667406893863773`*^9, 3.866740713276625*^9}, {
   3.8673532212089357`*^9, 3.867353262241763*^9}, {3.8673533765330715`*^9, 
   3.8673533879534054`*^9}, {3.867353479603982*^9, 3.867353730198533*^9}, {
   3.8673537746842513`*^9, 3.867353800998803*^9}, {3.8674250653573227`*^9, 
   3.867425103219036*^9}, {3.867425211775809*^9, 3.867425260810897*^9}, {
   3.86742535854918*^9, 3.8674253968377547`*^9}, {3.8674265266621175`*^9, 
   3.8674266199138565`*^9}, {3.8674271804199677`*^9, 
   3.8674271965717263`*^9}, {3.867427267981553*^9, 3.8674273052754507`*^9}, {
   3.8674273491782045`*^9, 3.867427384921605*^9}, {3.867427420566038*^9, 
   3.8674275576965384`*^9}, 3.867427676198084*^9, {3.8674281649544783`*^9, 
   3.867428175713987*^9}, {3.8674282062290845`*^9, 3.8674282201715593`*^9}, {
   3.8674282835409956`*^9, 3.8674283269169197`*^9}, {3.867428359760262*^9, 
   3.8674283772535853`*^9}, {3.8674284114824777`*^9, 3.867428418922064*^9}, {
   3.8675202937626505`*^9, 3.8675202960968914`*^9}, {3.8675203413861585`*^9, 
   3.8675205018799486`*^9}, 3.8676789938102727`*^9, {3.867780002056323*^9, 
   3.8677800113232975`*^9}, {3.867780053106656*^9, 3.8677801854064646`*^9}, {
   3.8677803657595863`*^9, 3.867780435219909*^9}, 3.875452546341834*^9, {
   3.875452597520071*^9, 3.875452599979909*^9}, {3.87545271543027*^9, 
   3.875452722618288*^9}},
 FontWeight->"Plain",
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[13]:=",ExpressionUUID->"930db826-3cbc-4bb3-97a6-3a010efa3e76"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rough Work", "Section",
 CellChangeTimes->{{3.8676786482972174`*^9, 3.8676786887393475`*^9}, {
  3.8754509951593113`*^9, 3.8754509965808153`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b20a9559-6b24-4fe0-9460-185a4a16c94f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"n", "=", "20"}], ";", 
    RowBox[{"\[Tau]", "=", "5"}], ";", 
    RowBox[{"\[Tau]1", "=", 
     RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
    RowBox[{"A", "=", "0.2"}], ";", 
    RowBox[{"order", " ", "=", " ", "4"}], ";", 
    RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
    RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
    RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
    RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
    RowBox[{"nGrid", " ", "=", " ", "60"}], ";", 
    RowBox[{"maxJ", " ", "=", " ", 
     RowBox[{
      RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ICs = \>\"", ",", "ICs"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Energy Initial = \>\"", ",", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellLabel->
  "In[362]:=",ExpressionUUID->"2813e843-89ef-428d-baf0-8a20a3946b77"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ICs = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["ICs = ", {0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8754509988915586`*^9, 3.875451080945383*^9, 3.875451182805112*^9, {
   3.87545133759269*^9, 3.875451360731513*^9}, 3.875451445174214*^9, 
   3.8754516400645037`*^9, 3.875451697562894*^9, 3.875451826741313*^9},
 CellLabel->
  "During evaluation of \
In[362]:=",ExpressionUUID->"e44cf76e-9f8e-4499-b78f-bf1b08af318d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy Initial = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2`"}]}],
  SequenceForm["Energy Initial = ", -0.2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8754509988915586`*^9, 3.875451080945383*^9, 3.875451182805112*^9, {
   3.87545133759269*^9, 3.875451360731513*^9}, 3.875451445174214*^9, 
   3.8754516400645037`*^9, 3.875451697562894*^9, 3.875451826744529*^9},
 CellLabel->
  "During evaluation of \
In[362]:=",ExpressionUUID->"d61cf789-2c0c-491a-a027-32594c83a54e"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalDelta]t", "=", 
     RowBox[{"\[Tau]", "/", "n"}]}], ";"}], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{
       "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
        "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
        "\[Lambda]4_"}], "}"}], "]"}], ":=", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{"xdot", ",", "\n", "\t", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Lambda]4", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
            ")"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
       "\t", "\[Theta]dot", ",", "\n", "\t", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], ")"}]}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[Lambda]2"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{"\[Lambda]4", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           "-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
       "\t", "0", ",", "\n", "\t", 
       RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["A", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
             "\[Lambda]4"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
          RowBox[{
           SuperscriptBox["A", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]2", "-", 
             RowBox[{
              SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
            ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox["A", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]2", "-", 
             RowBox[{
              SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
            ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", "A", "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
          RowBox[{"A", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Lambda]2"}], "+", 
             RowBox[{
              SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
             RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
             "\[Lambda]4", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "A", " ", 
                 SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["A", "2"], " ", 
              SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
          
          RowBox[{"A", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "A", " ", 
              SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
             RowBox[{"2", " ", "\[Lambda]4"}], "+", 
             RowBox[{
              SuperscriptBox["\[Lambda]4", "2"], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{"2", " ", "A", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"A", " ", 
                 SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-",
                 "\[Lambda]4"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
          
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
             RowBox[{"A", " ", 
              RowBox[{"(", 
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{
                 SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
               ")"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{"A", " ", "\[Lambda]4", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
       ",", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"4", " ", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
           ")"}]}], " ", 
         RowBox[{"(", 
          RowBox[{"A", " ", "\[Theta]dot", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]2", "-", 
             RowBox[{"\[Lambda]4", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
        "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";"}], "\n", 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    RowBox[{
     StyleBox["xGuess",
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox["=",
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["Table",
       FontWeight->"Plain"], 
      StyleBox["[",
       FontWeight->"Plain"], 
      RowBox[{
       RowBox[{
        StyleBox["If",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         StyleBox[
          RowBox[{"i", " ", "!=", " ", 
           RowBox[{"-", "1"}]}],
          FontWeight->"Plain"], 
         StyleBox[",",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           SubscriptBox["xGuess", 
            RowBox[{"i", "+", "1"}]],
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "i"], 
           StyleBox[" ",
            FontWeight->"Plain"], 
           StyleBox["+",
            FontWeight->"Plain"], 
           StyleBox[
            RowBox[{"\[CapitalDelta]t", "*", 
             RowBox[{"f", "[", 
              SubscriptBox["xGuess", "i"], "]"}]}],
            FontWeight->"Plain"]}]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         RowBox[{
          SubscriptBox[
           StyleBox["xGuess",
            FontWeight->"Plain"], "0"], " ", "=", " ", 
          RowBox[{"{", 
           StyleBox[
            RowBox[{
             RowBox[{"ICs", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"ICs", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"ICs", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"ICs", "[", 
              RowBox[{"[", "4", "]"}], "]"}], ",", 
             RowBox[{"InitGuess", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"InitGuess", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"InitGuess", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"InitGuess", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}],
            FontWeight->"Plain"], 
           StyleBox["}",
            FontWeight->"Plain"]}]}]}], 
        StyleBox["]",
         FontWeight->"Plain"]}], 
       StyleBox[",",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"-", "1"}], ",", 
          RowBox[{"n", "-", "1"}]}], "}"}],
        FontWeight->"Plain"]}], 
      StyleBox["]",
       FontWeight->"Plain"]}]}], 
    StyleBox[";",
     FontWeight->"Plain"]}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bcs", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "0"], "\[Equal]", 
        RowBox[{"ICs", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        SubscriptBox["xdot", "0"], "\[Equal]", 
        RowBox[{"ICs", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{
        SubscriptBox["x", "n"], "\[Equal]", 
        SubscriptBox["xdot", "n"], "\[Equal]", "0"}], ",", 
       RowBox[{
        SubscriptBox["\[Theta]", "0"], "\[Equal]", 
        RowBox[{"ICs", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ",", 
       RowBox[{
        SubscriptBox["\[Theta]dot", "0"], "\[Equal]", 
        RowBox[{"ICs", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], ",", 
       RowBox[{
        SubscriptBox["\[Theta]dot", "n"], "\[Equal]", "0"}], ",", 
       RowBox[{
        SubscriptBox["\[Theta]", "n"], "\[Equal]", "\[Pi]"}]}], "}"}]}], ";", 
    
    RowBox[{"eqns", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Join", "[", 
       RowBox[{"bcs", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["x", "i"], ",", 
              SubscriptBox["xdot", "i"], ",", 
              SubscriptBox["\[Theta]", "i"], ",", 
              SubscriptBox["\[Theta]dot", "i"], ",", 
              SubscriptBox["\[Lambda]1", "i"], ",", 
              SubscriptBox["\[Lambda]2", "i"], ",", 
              SubscriptBox["\[Lambda]3", "i"], ",", 
              SubscriptBox["\[Lambda]4", "i"]}], "}"}], "\[Equal]", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                RowBox[{"f", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], ")"}]}],
              "+", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", 
                RowBox[{"i", "-", "1"}]], ",", 
               SubscriptBox["xdot", 
                RowBox[{"i", "-", "1"}]], ",", 
               SubscriptBox["\[Theta]", 
                RowBox[{"i", "-", "1"}]], ",", 
               SubscriptBox["\[Theta]dot", 
                RowBox[{"i", "-", "1"}]], ",", 
               SubscriptBox["\[Lambda]1", 
                RowBox[{"i", "-", "1"}]], ",", 
               SubscriptBox["\[Lambda]2", 
                RowBox[{"i", "-", "1"}]], ",", 
               SubscriptBox["\[Lambda]3", 
                RowBox[{"i", "-", "1"}]], ",", 
               SubscriptBox["\[Lambda]4", 
                RowBox[{"i", "-", "1"}]]}], "}"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"sv", " ", "=", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["x", "i"], ",", 
             RowBox[{
              RowBox[{"xGuess", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["xdot", "i"], ",", 
             RowBox[{
              RowBox[{"xGuess", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["\[Theta]", "i"], ",", 
             RowBox[{
              RowBox[{"xGuess", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["\[Theta]dot", "i"], ",", 
             RowBox[{
              RowBox[{"xGuess", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
           "\t\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["\[Lambda]1", "i"], ",", 
             RowBox[{
              RowBox[{"xGuess", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["\[Lambda]2", "i"], ",", 
             RowBox[{
              RowBox[{"xGuess", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["\[Lambda]3", "i"], ",", 
             RowBox[{
              RowBox[{"xGuess", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["\[Lambda]4", "i"], ",", 
             RowBox[{
              RowBox[{"xGuess", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"froot", "=", 
     RowBox[{"FindRoot", "[", 
      RowBox[{"eqns", ",", "sv", ",", 
       RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"error", " ", "=", " ", 
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["x", "n"], ",", 
              SubscriptBox["xdot", "n"], ",", 
              SubscriptBox["\[Theta]", "n"], ",", 
              SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["x", "0"], ",", 
              SubscriptBox["xdot", "0"], ",", 
              SubscriptBox["\[Theta]", "0"], ",", 
              SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
            "ICs"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["x", "i"], ",", 
                 SubscriptBox["xdot", "i"], ",", 
                 SubscriptBox["\[Theta]", "i"], ",", 
                 SubscriptBox["\[Theta]dot", "i"], ",", 
                 SubscriptBox["\[Lambda]1", "i"], ",", 
                 SubscriptBox["\[Lambda]2", "i"], ",", 
                 SubscriptBox["\[Lambda]3", "i"], ",", 
                 SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                   ")"}]}], "+", 
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                   SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
         "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"count", " ", "=", " ", "0"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";"}], 
    "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"uff0", "=", 
     RowBox[{"ListInterpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Lambda]4", "i"], 
              RowBox[{"Cos", "[", 
               SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
             SubscriptBox["\[Lambda]2", "i"]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
        "froot"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
       RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"J", " ", "=", " ", 
     RowBox[{"0.5", "*", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xff0", "=", 
     RowBox[{"ListInterpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["x", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
        "froot"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
       RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"xdotff0", "=", 
     RowBox[{"ListInterpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xdot", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
        "froot"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
       RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"\[Theta]ff0", "=", 
     RowBox[{"ListInterpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
        "froot"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
       RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"\[Theta]dotff0", "=", 
     RowBox[{"ListInterpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["\[Theta]dot", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
        "froot"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
       RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
     RowBox[{"ListInterpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["\[Lambda]1", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
        "froot"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
       RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
     RowBox[{"ListInterpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["\[Lambda]2", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
        "froot"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
       RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
     RowBox[{"ListInterpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["\[Lambda]3", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
        "froot"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
       RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
     RowBox[{"ListInterpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["\[Lambda]3", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
        "froot"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
       RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"uff0", "=", 
     RowBox[{"ListInterpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Lambda]4", "i"], 
              RowBox[{"Cos", "[", 
               SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
             SubscriptBox["\[Lambda]2", "i"]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
        "froot"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
       RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"xff", "[", "t_", "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xff0", "[", "t", "]"}], ",", 
          RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
       "0"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xdotff0", "[", "t", "]"}], ",", 
          RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
       "0"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
          RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
       "\[Pi]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
          RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
       "0"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"uff", "[", "t_", "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], ",", 
          RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
       "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J", "=", 
     RowBox[{"0.5", "*", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"xState", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"x2dot", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"A", " ", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
      " ", 
      RowBox[{"(", 
       RowBox[{"u", "+", 
        RowBox[{"A", " ", 
         RowBox[{"\[Theta]dot", "^", "2"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"A", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Theta]2dot", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"A", " ", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
      " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"u", "+", 
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"fx", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}],
       "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"L", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"u", "^", "2"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Af", " ", "=", " ", 
     RowBox[{"Grad", "[", 
      RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
     "*)"}], "\n", 
    RowBox[{"Bf", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
    RowBox[{"(*", 
     RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
     "*)"}], "\n", 
    RowBox[{"Q", " ", "=", " ", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"Grad", "[", 
        RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
    " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
    RowBox[{"Mf", " ", "=", " ", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"R", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{"L", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S0", " ", "=", " ", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"},
         {"0", "0", "0", "0"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RHS", "[", "i_", "]"}], " ", ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"Af", "\[Transpose]"}], ".", 
         SubscriptBox["s", "i"]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["s", "i"], ".", "Af"}], " ", "-", " ", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["s", "i"], ".", "Bf"}], ",", 
          RowBox[{"Bf", ".", 
           SubscriptBox["s", "i"]}]}], "]"}]}], ")"}], " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "->", " ", 
         RowBox[{"xff", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", 
           RowBox[{"i", "*", 
            RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
        RowBox[{"xdot", " ", "->", " ", 
         RowBox[{"xdotff", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", 
           RowBox[{"i", "*", 
            RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
        RowBox[{"\[Theta]", " ", "->", 
         RowBox[{"\[Theta]ff", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", 
           RowBox[{"i", "*", 
            RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
        RowBox[{"\[Theta]dot", " ", "->", " ", 
         RowBox[{"\[Theta]dotff", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", 
           RowBox[{"i", "*", 
            RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
        RowBox[{"u", " ", "->", " ", 
         RowBox[{"uff", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", 
           RowBox[{"i", "*", 
            RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}]}], "}"}]}]}], ";", 
    "  ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Bf", "^", "Transpose"}], " ", "has", " ", "been", " ", 
      "replaced", " ", "by", " ", "Bf", " ", "in", " ", "the", " ", "second", 
      " ", "term"}], " ", "*)"}], "\n", 
    RowBox[{
     SubscriptBox["s", "0"], " ", "=", " ", "S0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dT", " ", "=", " ", 
     RowBox[{"\[Tau]", "/", "nGrid"}]}], ";"}], "\n"}]}]], "Input",
 CellChangeTimes->{
  3.8754510728385487`*^9, {3.875451176738274*^9, 3.875451204184599*^9}, {
   3.875451275269451*^9, 3.8754512969427757`*^9}, {3.875451330789476*^9, 
   3.875451354858715*^9}, {3.875451439270524*^9, 3.875451480520729*^9}, {
   3.8754515206301317`*^9, 3.87545152124548*^9}, {3.87545163176215*^9, 
   3.875451632969244*^9}, {3.875451674209454*^9, 3.875451680199891*^9}, {
   3.8754517893422813`*^9, 3.875451893918087*^9}, {3.8754522994211597`*^9, 
   3.875452304710124*^9}, {3.875452478527938*^9, 3.8754525201104*^9}},
 CellLabel->
  "In[637]:=",ExpressionUUID->"c82fcb85-5b73-4f32-a2d0-0ff8c95722b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sTable", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["s", 
       RowBox[{"i", "+", "1"}]], " ", "=", " ", 
      RowBox[{
       SubscriptBox["s", "i"], " ", "+", " ", 
       RowBox[{"dT", "*", 
        RowBox[{"RHS", "[", "i", "]"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "nGrid"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{3.8754518926907377`*^9},
 CellLabel->
  "In[672]:=",ExpressionUUID->"5e2a0a79-2ec3-4160-b387-29867fa8795f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.875451473784544*^9},ExpressionUUID->"210a458a-178a-4bcb-8435-\
79f581fb5e4d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"n", "=", "20"}], ";", 
    RowBox[{"\[Tau]", "=", "5"}], ";", 
    RowBox[{"\[Tau]1", "=", 
     RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
    RowBox[{"A", "=", "0.2"}], ";", 
    RowBox[{"order", " ", "=", " ", "4"}], ";", 
    RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
    RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
    RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
    RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
    RowBox[{"nGrid", " ", "=", " ", "60"}], ";", 
    RowBox[{"maxJ", " ", "=", " ", 
     RowBox[{
      RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ICs = \>\"", ",", "ICs"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Energy Initial = \>\"", ",", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time1", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K1"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time2", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a2", ",", "xdot1a2", ",", "\[Theta]1a2", ",", "\[Theta]dot1a2", 
         ",", "u1a2", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K2"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum2", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
      "u1b", ",", "J1"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K1"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J2"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a2", ",", "xdot1a2", ",", 
      "\[Theta]1a2", ",", "\[Theta]dot1a2", ",", "u1a2", ",", "A", ",", 
      "uMax", ",", "K2"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ff computation time case 1 = \>\"", ",", "time1"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ff computation time case 2 = \>\"", ",", "time2"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Cost case 1 = \>\"", ",", "J1"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Cost case 2 = \>\"", ",", "J2"}], "]"}], ";"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution 1\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   StyleBox["p1a2",
    FontWeight->"Plain"], " ", "=", " ", 
   StyleBox[
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a2", "[", "t", "]"}], ",", 
        RowBox[{"u1a2", "[", "t", "]"}], ",", 
        RowBox[{"x1a2", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a2", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a2", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution 2\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}],
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1b", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<feedback solution with backward integration \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<feedback solution with discrete integrator\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1a", ",", "p1a2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p1b", ",", "p1c"}], "}"}]}], "}"}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}, {3.8648376392630434`*^9, 
   3.8648376724073963`*^9}, {3.864837714278944*^9, 3.864837730198832*^9}, {
   3.8648378000064077`*^9, 3.8648378125593743`*^9}, {3.8649192769420185`*^9, 
   3.8649193477849746`*^9}, {3.864919494855133*^9, 3.8649194949211097`*^9}, {
   3.8649195280303416`*^9, 3.8649195281572976`*^9}, {3.8653430179727*^9, 
   3.865343036098905*^9}, 3.865343126059147*^9, {3.8653475497269955`*^9, 
   3.8653475530049467`*^9}, {3.8653477236523952`*^9, 3.865347782090714*^9}, {
   3.8653478250659747`*^9, 3.8653479145413723`*^9}, {3.865347947982681*^9, 
   3.8653479716121283`*^9}, {3.8653525506493053`*^9, 3.865352599733616*^9}, {
   3.865352652578721*^9, 3.865352654559091*^9}, {3.865353691929463*^9, 
   3.8653537130737047`*^9}, {3.8653538376038947`*^9, 
   3.8653538378768077`*^9}, {3.86535394844846*^9, 3.8653539491322412`*^9}, {
   3.865356726928239*^9, 3.86535675400958*^9}, {3.8653568966909695`*^9, 
   3.8653569073245697`*^9}, {3.8653569602766423`*^9, 3.865356975731701*^9}, {
   3.865357167158506*^9, 3.865357170606405*^9}, {3.865357223946353*^9, 
   3.8653572240363226`*^9}, {3.8653573936860905`*^9, 3.8653574653461814`*^9}, 
   3.8653581484318137`*^9, {3.8653592129605074`*^9, 3.86535921807887*^9}, {
   3.865449250153057*^9, 3.8654493036779404`*^9}, {3.8659655743007927`*^9, 
   3.8659655800469513`*^9}, {3.865965617846839*^9, 3.865965644481305*^9}, {
   3.865965768794471*^9, 3.8659657912472773`*^9}, {3.865965935003215*^9, 
   3.865965935326112*^9}, {3.8659659868356075`*^9, 3.865966006077441*^9}, 
   3.865966083507631*^9, 3.8659664582355595`*^9, {3.86596655432277*^9, 
   3.865966563962682*^9}, 3.8659666064800587`*^9, {3.8659666379409776`*^9, 
   3.865966662002268*^9}, {3.865966724901114*^9, 3.865966734984883*^9}, {
   3.8659667752089934`*^9, 3.8659667994792185`*^9}, {3.8659670983784432`*^9, 
   3.865967114308339*^9}, {3.865967415398863*^9, 3.865967415558814*^9}, 
   3.86596806058513*^9, {3.8659697572814713`*^9, 3.865969792480193*^9}, {
   3.865969847631523*^9, 3.8659698777298765`*^9}, {3.8659699125237284`*^9, 
   3.8659699227194633`*^9}, {3.8660520784155097`*^9, 3.866052078606448*^9}, {
   3.866299038992057*^9, 3.866299063807024*^9}, {3.8662991135359306`*^9, 
   3.866299117442664*^9}, {3.866299188589633*^9, 3.86629919001517*^9}, {
   3.866299354438949*^9, 3.866299364496692*^9}, 3.8662994378149586`*^9, 
   3.8662994758636427`*^9, 3.8662995455700784`*^9, {3.866309716236847*^9, 
   3.86630980613275*^9}, {3.8663098363239756`*^9, 3.8663098541502047`*^9}, 
   3.8663105182622347`*^9, 3.866310619892336*^9, 3.8663117939323*^9, {
   3.8665656447826576`*^9, 3.8665656490393023`*^9}, {3.86666037409522*^9, 
   3.8666605929433*^9}, {3.8666606653571625`*^9, 3.8666608053664308`*^9}, {
   3.866660839553507*^9, 3.8666608737455826`*^9}, {3.866661162186427*^9, 
   3.8666611737737226`*^9}, {3.8666653738348045`*^9, 3.866665397429268*^9}, {
   3.8667344208606143`*^9, 3.8667344797394304`*^9}, {3.8667353231215725`*^9, 
   3.866735333097335*^9}, {3.866735385339385*^9, 3.866735418014782*^9}, {
   3.866735702678417*^9, 3.8667357070869875`*^9}, {3.8667358235761895`*^9, 
   3.86673582400605*^9}, {3.866735896269603*^9, 3.866735924112569*^9}, {
   3.8667361218833976`*^9, 3.8667361220503435`*^9}, {3.866737159880598*^9, 
   3.8667371629755936`*^9}, 3.8667373705322485`*^9, {3.8667375563659506`*^9, 
   3.8667375763234744`*^9}, 3.866739987559099*^9, {3.8667402825863724`*^9, 
   3.866740283643031*^9}, {3.8667403886539574`*^9, 3.8667403924007425`*^9}, {
   3.8667405674789343`*^9, 3.8667405865157566`*^9}, {3.8667407977972016`*^9, 
   3.866740821291578*^9}, {3.8671630011884055`*^9, 3.867163020098357*^9}, {
   3.867352977485181*^9, 3.8673529973358107`*^9}, {3.8673530973936853`*^9, 
   3.8673531264093695`*^9}, {3.8673532479253597`*^9, 
   3.8673532480693145`*^9}, {3.867353394522298*^9, 3.867353424387709*^9}, {
   3.8673538177504263`*^9, 3.867353991042793*^9}, {3.86735409649494*^9, 
   3.867354178349663*^9}, {3.8673553380933447`*^9, 3.8673553396948304`*^9}, {
   3.867423858690897*^9, 3.8674239583605523`*^9}, 3.867424003139022*^9, {
   3.867424050904522*^9, 3.867424125774227*^9}, {3.8674241562363405`*^9, 
   3.8674242324536085`*^9}, {3.8674242665505433`*^9, 
   3.8674242818535786`*^9}, {3.867424314162092*^9, 3.8674243698710146`*^9}, {
   3.867424420135703*^9, 3.8674244202186756`*^9}, {3.867424456268978*^9, 
   3.8674244741041913`*^9}, 3.8674246173657007`*^9, {3.8674246693478317`*^9, 
   3.8674246877288685`*^9}, {3.8674247403247986`*^9, 
   3.8674247408206377`*^9}, {3.8674247893518896`*^9, 
   3.8674248932321787`*^9}, {3.867425936549614*^9, 3.867426049116087*^9}, 
   3.8674261141789722`*^9, {3.867426149856395*^9, 3.8674261956245418`*^9}, {
   3.8674262312599783`*^9, 3.867426231496904*^9}, {3.867426262045988*^9, 
   3.8674262624308643`*^9}, {3.8674263520347853`*^9, 
   3.8674263565563188`*^9}, {3.8676860111383543`*^9, 3.8676860173133893`*^9}, 
   3.875452751915073*^9, {3.875452791647418*^9, 3.875452841540835*^9}, {
   3.875678045519475*^9, 3.8756780798325987`*^9}, {3.8756781295516157`*^9, 
   3.875678188555214*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[105]:=",ExpressionUUID->"87f7985a-6d8f-46b0-a5ac-b087f3daf85b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ICs = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["ICs = ", {0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{3.875678189279217*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"195bfef4-e51c-4137-bb10-ecfd40482e2e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy Initial = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2`"}]}],
  SequenceForm["Energy Initial = ", -0.2],
  Editable->False]], "Print",
 CellChangeTimes->{3.875678189281012*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"44b7ed8d-3642-49d4-8556-ae0f08d7f99d"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,124,7,17326021023033294795,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.875678190967081*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"6e70e6e1-ee4f-4f6c-8f56-d4315235064e"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$69672\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$69672\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"2.294844166797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.445414935480899`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.0014733203917722483`\\\"}]\\) for the integral and \
error estimates.\"",2,124,8,17326021023033294795,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8756781910189753`*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"3cacdfff-9317-49c8-99a8-4fae03c5bfed"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ff computation time case 1 = \"\>", "\[InvisibleSpace]", 
   "0.488047`"}],
  SequenceForm["ff computation time case 1 = ", 0.488047],
  Editable->False]], "Print",
 CellChangeTimes->{3.8756781910243597`*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"5f847320-eef9-4cfc-b6e0-0c49960d6400"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ff computation time case 2 = \"\>", "\[InvisibleSpace]", 
   "0.343684`"}],
  SequenceForm["ff computation time case 2 = ", 0.343684],
  Editable->False]], "Print",
 CellChangeTimes->{3.8756781910253067`*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"4d269c3d-962d-4dce-b1f5-5cfd66c02e78"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Cost case 1 = \"\>", "\[InvisibleSpace]", 
   "3.2094322770572696`"}],
  SequenceForm["Cost case 1 = ", 3.2094322770572696`],
  Editable->False]], "Print",
 CellChangeTimes->{3.875678191026393*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"6ef3eaa2-1ddd-471e-90ba-39f4d3f611a0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Cost case 2 = \"\>", "\[InvisibleSpace]", 
   "3.2227074677404497`"}],
  SequenceForm["Cost case 2 = ", 3.2227074677404497`],
  Editable->False]], "Print",
 CellChangeTimes->{3.87567819102731*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"f05b9fe3-72d4-466b-a1ea-034a05d53aaa"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
          
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{901, 2748, 2746, 422, 423, 424, 425, 812, 708, 
                622, 552, 499, 466, 834, 730, 644, 574, 520, 851, 747, 661, 
                591, 426, 813, 709, 623, 871, 767, 553, 857, 753, 892, 667, 
                880, 776}}], 
               PolygonBox[CompressedData["
1:eJwV0slLVWEYB+Bj0sKMypyHzP6BBoeGpUGBRQWBlWWTEBSREY0mGRQ0WalN
uigocFfZYMO1eV40u6zUJoeVLRIabHy+xcPvfX/fOfdyzz3jKtbPrxwSRVEc
7bQNi6IYI5RvlDHy46PoqX0T4/mh20+y/qy9lJG81bVRoH9m38wEfuoOkKI/
Z1/AKN7pblDLQVKdn9cvJIkO3U0OkeasRbeI0XTqblGof27fwkQGdYdJ11+w
l5FMl+42dWQ4u6hbTArvdXeoJ9PZJd0SUvmgu0sDWc4u68pJ46PuHkX6F/at
TOKX7gjZ+lb7UtL5pLvPZP1L+zby+a2bo+sx11HCUV2O7op5GRnhOdv7ZSOf
nc+wd5r3stYcT3G4Xn6TNfK03CgTeeCeKfJV+G5ZJVfLiF0UhGciv8od8qTc
IBPYwx/3z5W9+ipZL9fJoexmlr1CDsqdsjm8M3I4x9w7Rl7VLWdV+DyZGd4H
8xfZRLfrZtq7zPuYHq63f5dneOh8qv21eTtrzHEUhv9MDshT/HXdPHufuYHZ
HNfl6q6ZV5BFj+4R0/Tt9mqK+Kc7wVj9dftKsunVPaaRPGex8JvJoU/3hP9P
hmz4
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{387, 2747, 2744, 596, 682, 786, 392, 503, 557, 
                627, 713, 817, 439, 472, 525, 595, 681, 785, 391, 502, 556, 
                626, 712, 816, 438, 471, 524, 594, 680, 784, 390, 389, 388, 
                437, 470, 523, 593, 679, 783}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVWEABuDj1QyEfkLDda72VtokaZaZlBtbFKSWlppCEIGV2gBR6SZd
pFaW5Y/QJrXABm2wyVZNG7VBjYIiiJ5v8fC+33vuwDn3xisbyxpiURQl8ICB
lCgapN9wkxu84AdZXniI+6xMjKI+23PmybTVM8IK167bnjFHhq2OYZa7ds22
UF/Had6Rb39qnyXduZYhsu29tmR9LaeYZKN93F6kt/OZbbbvtjT9IPfIsl21
leqdzFBmWyB7+cUe5zx5krdscB4L967/ocJ5s0yS9bTpnyjWv4V7kY10247J
OblLpobPlP9ktTwgj8q7MlNe8d6zchFH6Le3yr+ySm6XZ2QyDXQ4N8lpuVMm
yRR5ONyj/pPdeq6MyVpa9Tes15/4vj79N3udC+UFPrLV+avrXfos5c5xWcMd
Mpwvu16iX2SKHbZEuYYWXoff1PbY6wr083xgi+2LbVl4Dtwm3dZji+mraeZV
+I3tj+yb9HO8p8g2Y1uq7+cWaeF52xL0VZzgJXn2h/ZpljjvY5BUe1f4k+s5
HGeCXPuofYrF4bkzQNx+yfYftkRk1Q==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03ecz3UcwPHL3tzZ2xmHqBRJRpnhKCESJTMJnWwyKntUPDSMJqFklJHd
IDsNIqOByMgolArl+X48+uN5r/fnfb/73fe+v+8ld0lr9eQNCQkJfX2JlvZl
n8Zypj6qeRlCT+eWmpH+bHPuoUUZThPnBnpZn9K12lULMsncXnPxjbmXlqSq
+XY9pYsYTlvnbOyKn6GZ+T/dyHTSUcbuO53FEzSlod1fuo7JVKO63WldzAg6
kJ6y9vt1dlwLqXEdZCAjmchMOa87oK/RO64l3pM77H/VJYzkYbKQYn9QX6cP
zeO11LA/o0sZxSNkpbz9IX0j7jn3xmu50/6sfsAzdCQbFey/1zdJ4z4a2f2t
65kSP0tNu3P6Ic/yoHN2vozPNK4rPmw2yUtx/eY87DFnp6L5B32LTuZ89DW3
0kxsNz+uxWhhvkf/0X66QbtpIZ7m+bjvmptB7I57qaUYSU3nWnr+/+dwmXbR
AgzjOed2moOBfBWfuZagU9yzeHb53NxdC/Ny3GNN5FtzDm40/6hvx/NJa+fM
7DDfT2PzFf2YF+KaqG33my5nNJ3jntulY7P5FXJSyfknnRP3IP5PaGJ3VT/h
xXgv6tj9risYE38nuahsf1jn0j/uc7yWu+wv6ErG0pXc3GR/RN9hQPwt8Vru
tr+oHzEuPgfycLP9UZ3HQB6I15LILb73s85nEG2oSxJ5yUd+ClCQQhSmCEUp
RnFKUJJSJFOaMpSlit9xTBcwmLbUoxy3+t5xfZch8axSP67B/pKuYnx8tqRw
m/0v+h5D49mgqd01/ZSpNIj3t/tDVzOBx2hhl54t5lcpT1XnE7qQYXFvnLOw
0/wQqeZ/9TOm0TCuz+5PXcPEeJ1zTr4294jnyZyBrfF7tQgzzB01icHsde6j
yYyignM1Palp+n48b5qfofG/FJ+NZmUAXzj31OKM4DoBYZ5S
               "]], 
              
              LineBox[{146, 69, 104, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$69797#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jnUcBuDXkZGRvfemKHtTFELI0aDS0FJCKZV2jj0yi4wyM9oDxyaU
vSqr7Owyyyy6vp/+uM79+96/53nPeZ9xSnTqntwtTSKR2OVHCtnSJhIzkhKJ
tmRmm24OfehLP7I7Zqa9ZLKwXTeXyvrV5h5U5LyuPzn0s8ztyMoO3Tyq6NeY
X6QSF3QDyKmfbb6H1EyJxA1ypz6VqvbWml/iZi7qBpJL/6n5XrIl/f995lNN
v87ck1u4pBtEbv1n5vvIzq+6BQxmCHnsf66/nxz8plvIUPLa+0LXnpzs1i2i
un69+WUqc1n3Hvn0X5o7kIs9usUMI7+9r3QPkJu9uiUMp4C9r3UPkod9uqWM
oKC9b3QPkZf9umXU0G8wv0IVruhGUkj/rbkj+TigW05N/Ubzq1TlH10r3SHr
YTRnlK6w7jvrh8kf19n8pxzDQftNzLut+9PFOi2N4nh5Xr4lJ8W9lpn53jm1
5Kb43bKX7CwT9KZaXBN5Vr4pJ8gX5PX041/nt5aH9b3kcNlVpiOFFuZO8rJ8
W06LZ0ZmYbRzi8g5ukd4Mj5PFojnwfqkHMvvjmtq3mM9gMZxvPmCnMwK+7XN
m61f4xnrNFSPeybPyYlcdVwb8xHrEbTkfV1R3VzrRynIId1K6ui3mF+nBtd0
H1BMP8/8GIU4rFvFGIrbS43vTGGO6H6Id8D7M1aWsD9f/zhFOKr7kbr6reY3
qEmCD/Ul9Qusn6Aox3Srqaf/Ke4JtUjDOH0p/cK4lhTjuK6Zbq/1QG5nja6+
7ud4HqhNEuP1pfWLrJ+iOCd0d+r2WQ/iDtbqGuh+iXtKHdJyt+6oHMldTHBc
Gd1i66cpEe+x+VR8N/6w39y833owTeIemC/KKayz39C8zfodnrVOom68b/Iv
+RE9rDNxnXVbeSyeAzlKdpPp6UOruO7ySnyenC57yqz0Z6LfV1YuifdWdo7r
IK/Kd2VJ2V6ejmdCjpPdZYZ4B53bQh7QDeG5+HtoGs+JvCSnst5xt5q3x2dS
j47mv+XHpCPZfFyOpnV8R+eU0y2NZ5tSnNS11B20HkozNuhu0+2w7k190sfn
6svrl8U1pDSndBtppN9pTqEBGZikr6Bfbt2FMpzWbWIyN8b/jfiOlOWMbjNT
uMneCl1XynFWt4WpTGN6/H/3LnwiZzCTWVR03sq4X5TnnG4rjfW7zH1oSEba
6U7Eu0sbZjuukm5V3I941qyvyQp0sD4T75UcL5+XGenLfzCQ8T8=
               "]], 
              
              LineBox[{844, 740, 654, 584, 467, 835, 731, 645, 575, 521, 427, 
               814, 710, 624, 554, 500, 468, 428, 429, 430, 431, 432, 433, 
               434, 435, 815, 711, 625, 555, 501, 469, 836, 732, 646, 576, 
               522, 852, 748, 662, 592, 868, 764, 678, 886, 782, 904, 436}]}, 
             Annotation[#, "Charting`Private`Tag$69797#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUYBdADl1ZJpUNaQRpplEZBGqSV7hDFxsLAQDokpLvBQEWlW0Cl
DFIBpfNRBEHX+2M97/72fHPPuXNmJn+Xgc0HJEskEknJE4nhSYlEiZSJxOcp
EonZZmvzA/MeVnKX9XNmgkXMtP7ILBDn8KvzO5mn9fPN983RZi5qyEPNO1kq
f2wW5VvnNDD36gZTjFesU7NA/tvxfvJf8kQa8aGupG613Ib0HNJ11p2J70xN
1uoa6vbJz1Kc67oRlNJ/Yd2WDBzWrWMkoxjNGMYyjtL2f2lfOzJyRLee8ZRx
7CtdezJxVLeBx/T745rxAP/oJlBWv8a6A5k5pttII/0B6+cpwQ3dRMrpv7bu
SBaO67rozsrDqcUmXWPdQfkFSnJT11/3d/xONI6pK6/7Rn6Cu+PzrJMxS/7N
8a7yubjOjJFzU1t+M+4Blsmb7Wsi/yS/yEg5B6XkV800LGGh9RSzcFxv/nXe
APO6foE5yRxv5uNTmlgPMzPF57DKerp5f1zj2O/8B+O+0c8xn4xrYGaN+zT+
dzM5s+VJZkF+d04387xuBGPlPNSR3zLTs1zeYl9T+Wf5JUpzSzdQ9488maYx
dRV0a+VOZOWErrvuQlwL6rJV10z3i/wyZbitm0JF/TrrzmTjpG4bzeM5sh5C
Wf7TTaWSfr11F7JzSredFvpD8cxQjkQ8W/rK+g1yV3Lwh24H05jODGYyiyr2
brSnGzn5U7eT2VR1bJOuO7k4rfuOlvrD8VtTnmTxe+ir6TfLPcjNGd0uWumP
WL/GgyRnrr66fovckzyc1fXQXZRHUY/dusd1R+XXqUAS8/QP6bfKvcjLOV1P
3SV5NPXZo2utOya/QcX4HtZp4z0mp+Ap+UbcqzRjvnMe1m2Te5Mv7nPrJObI
5x3vJV+OZ4Rxcl4ekd82M7BCnmbex/f2tzGPx/c2h8b/Z+bkEyrF/2ami/cj
i62nmkXivUNK60HmTXOhOdWcYN7LZzS3ftfMHPdy/E3rGWaxeI/67Brmdl2f
eK7lbHFu3OdmCubKF+zrLV+JZ4RHecc6IyvlHxxvK/8W7wIqk4qn47mO+44W
8f3sq6nbIfclPxd1fXRX41rRgB917eL5jOeQKqRmkb6WfqfcjwJc0u1lMbUd
+07Xn4Jc1u1jCUtZxnJWUMfeXfYMoBBXdPtprz8RvxVVScNKfV39bnkghbmq
O0AH/cm4HlQjLc/obsVvTEtW2VdPtyfuJ4rEcx+/HfPka473la/J42nIQV1H
3Sl5GNXjHrW+I96fcjoGy7fN6UyU89NKfs/MEvdZvDutZ5rFWRO/v79bP+67
eM7MQeYIM3u8UylqPcRMFfca860nm4VYzf8lrQ4i
               "]], 
              
              LineBox[{1269, 1174, 1100, 984, 1374, 1255, 1160, 1086, 1035, 
               948, 1352, 1233, 1138, 1064, 1013, 985, 949, 950, 951, 952, 
               953, 954, 955, 956, 1353, 1234, 1139, 1065, 1014, 986, 1375, 
               1256, 1161, 1087, 1036, 1397, 1279, 1184, 1110, 1418, 1300, 
               1205, 1442, 1324, 1468, 957}]}, 
             Annotation[#, "Charting`Private`Tag$69797#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8zlUYxvHH3mTvsiMzMxQKEZUtIWUUSkZGoaGsSslIJUQhIyNCGdmU
WZS9s0MhZKR63398Xtd13ed8f9/nOefc5/kV7NCjafckiURiQNJEYnWKRGJR
qkTiLsxImUg8jqy4rL5LrRZ+lHugAtaoL1YrgJlyI2TDX+q71R7EJrknKmKt
+hK1gpglN0Z2XJTb4Dj/Lq6Yt0d+CJvlXqiEROpEopvaFX4C1pn3rVwIs+Um
SG/OK3ICOeRLtC1O8CNw1TN75drYIr8Un9kzg+TUqCwnkV/kr/L38dP4iXxh
/gM+J+ryC+izdL2/+R1fGPXlr8wtST+WW9GmcgbaX25Mk9DqdAZ9huaMNeaf
wqPyyVgvOiU+O31Pzk/fkZvTzLE2dB695t37aB1sNa+c+kS+d6wt/yafBlXk
pHL3eIafhCLyKDkXNvg7S2kRzDHWDLliL+V2OMW/j7/N2x/fH9vkPrFG2Ki+
TK0o5srNkRvX1X/AcvVimKfWAnlwQ/1HbMJmbMFWbMN2/ISfscJzd2O+Z1oi
L26qH1B7GNvlvqiKHerfqxXH1/ITyIdb6gfV6uEnuR+qYaf6SrUSWCC3irWO
Myg/jdP8SPxj3qHYX/wsv4wc1u8tOW3sp5xM7sH/zX+GovJoOTd+8fwqeg8W
Gitl7BP+ST4jP4BvQpPS++lM2p7eGWc2zgkek89EL9DP47zEeZTvpO/KLWiW
ONt0Pu1Ib3vvYf4RNJB3mH8vnSS3jl6Rc9LBcrp4t5xc7slf5yejmDxGzoNf
/b3VtCS+MdYad+FafF6c5UfhX/OOxDuxU+6PB7BLfY1aKSyS26AA/os7I/oe
a42VxmL1tigYvY+9xtapl8ES+SkUin7FUbWGsc78ANTAPvPXq5XFt3K76OHo
AxyLXovvww9ETew3f4NaOXwnPx09Emde7oDf+dGxz/gt9gO7+FdRCwc8v1Ht
XiyVn4kzED0Qe4Fz/JhYXxyXH8du/rXoNWs8RE4f96acQu7F3+Cn4GD0kVwe
y+T2yGTOQDlZ9Fb0E+2E8/zY2BfjI+SsSCGfoI2why9v7DP+9ehTfiifAbX4
OXG/qKfkX4pn6M3oLzo9+iLOn3w3HSs/QfNGL9KF9Dl6KHqbrxBnT15ufmk6
Ps487SDfQV+Vm9Lk9AE6K3o9+jvuVlzgK6t/wX8YZyXuQz4bUsonaWPs5d9A
baQyp7faLf4LHI47Rq6IFXJHFI95OBJ3j3olfC93Qom4L+J74A9+HFLjVPQo
9vGD4g7znmFyRtSJOXIf/h9+arxD/lDOh6Nxv9HKWGmsjLFP4zvymfnXYo9Q
g58d90TcObRznBO1P+UqdKrcjn4UfUHfl1vS7PEZ6NdxBmga46djbaMv5P1y
BTpZbhO/C3GP0uFyM5opzh2dS+saS8P35W/HPcl/yU+LteHH8flxLO5rWgWr
jJU1NiHWjc/Cvx57FHeFfJt2wUX+4+hb4yPlHEgrn4nPgQP8W8hn/G35jjhX
clq5H/8vPz36L34n5PuwWu4cd2rcO3JXXOI/QTqclZvjID8Y9aL/4jdGrSrW
yF3ifMY9JD+Py/x4pMfvcgsc4oegfvRS/D6pVcNauWvsKTLgXOwJDvND8Uic
0/gtU6uOdfLzsV7IiPPRQzjCD0ODOGvm71C7H+vlF1Aueh4X1FrFmeKHo2Hs
tfk7o4ewQe6GrNbsDTkVasb/JXGP0f8BU6RDsg==
               "]], 
              
              LineBox[{1899, 1779, 1690, 1552, 2030, 1881, 1761, 1672, 1612, 
               1512, 2003, 1854, 1734, 1645, 1585, 1553, 1513, 1514, 1515, 
               1516, 1517, 1518, 1519, 1520, 2004, 1855, 1735, 1646, 1586, 
               1554, 2031, 1882, 1762, 1673, 1613, 2059, 1911, 1791, 1702, 
               2090, 1942, 1822, 2119, 1971, 2151, 1521}]}, 
             Annotation[#, "Charting`Private`Tag$69797#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFGUUBuAhlFBCQlIBpVMaVLo7BJTukO4O6U5FFOnuklBBkQZJwSAk
lMagpEG83x/3dc7zzM6y3+zMkqFFl9qdY0RRlDZmFHWIG0Xp4kfR/HhR9A43
5a3Mpph+u64+CTip60h6/QL5XW7J25hDcf33ugYk5JSuExn0C+Vi3Ja/pY7u
F7krGZmrK6HbYW9IIk7rOvOGfpFcnDvyd9TV/Sp3IxPzdCV1O+2NSEx3+Z45
mTOON5Mv2geRlyFyTGbZuzj+pn2xvQR35fby3/bRbJfrySfD+zLenpDM9n7m
U/NT5ntdKXmXvXE41x6fV+w9zPvmInOKOd1MyVp+c15z81J4D3OwOSmcx0ry
yR+ZsVjCbPkzMw3r6er8jOGYfpZZ0hxhxuFfxzqY/+jGMNWeLHxX+vfNU+Gz
McGeiCz2/uYzcwYLvK60vNvehCT0lB+E9+Ks4y3ky+Gakj98L7pMuqX2UtyT
d7CQMvo9uqYk5ZyuO5n1y+TS3Jd3sogeZHFsub4MD+RdLKYnvehNVq9Z4XhZ
Hsq7WUIfsoXrqC/HI3kPS+lLdsdW6cvzWN7LMvrRnwEMJIfXrfaaCjyR97Gc
svq9umYk47xuEDn1a+SKPJX384HudLh+ZGWFrpxun705ybmga6m7Er5zCjBY
lyvcK/ZKPAvPonzTPpYDcn35jL0X2Rgg/xfuE1Y6Xl7eH541s0W4F8yXwjXj
1XCe+dBcbE4L97OZinX87vxW5tVwP5hDw3NlJgnXjoLyUDN2+M6ZI39upmUD
Q5yfO7yXfrZZ2Rxpxg2fMfxOmLd045hmT84P+gbh2dD1JjsD5efhvVnleAX5
gL0lKcLr5Efmx/zheGv5mn0YhcL11OUJz4y9Cs/lgzTUnZX7kIPVuorhM9hb
kZKLuqG8Ff4muSoRh3RrGMZwRjCSUYxmDGPJ67wvvb4aMTisW0sl/UG5Nam4
pBtHPv1GuToxOaJbR2X9IbkNqbmsG09+/Sa5BrE4qmukO2fvS07W66roDtvb
koYruja66/bhFA6/BboCus32msSms3zbHM8xxxvL5+39yMUgOWKmfYPjVe1H
7O3CPWp/OdwP4Rqbj81PuOp1beUb9hFMsSelSPjOzBfCbwJz5Znma+EaMtF5
Bc0t+jlmLXOUGS/8ToTz5C7mHXOhOSHcE+E+D88wPzq/iXlBP8/sb040E5M7
PG9mDL6wzzBTh3/XOdXMo7oPw71qTxA+U7i+5hNzOte8rp38Z7jHKcokXSHd
V/bavEhX+W74dznueNPwnIXnljxs1FXXHbO353Wu6yZTWP+1/B5xOKHbRI3w
t8kdSMcN3RSK6L+R6xCXn3Sbqak/LnckPX/qplJUv1WuSzx+1m2hlv6E3IkM
/KWbxtv6bXI94tMt/L8T/u7wPdtThN9C/gd1diWA
               "]], 
              
              LineBox[{2530, 2428, 2352, 2232, 2642, 2516, 2414, 2338, 2285, 
               2195, 2619, 2493, 2391, 2315, 2262, 2233, 2196, 2197, 2198, 
               2199, 2200, 2201, 2202, 2203, 2620, 2494, 2392, 2316, 2263, 
               2234, 2643, 2517, 2415, 2339, 2286, 2665, 2540, 2438, 2362, 
               2691, 2566, 2464, 2715, 2590, 2740, 2204}]}, 
             Annotation[#, "Charting`Private`Tag$69797#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{385, 386, 384}], 
             LineBox[{906, 907, 905}], 
             LineBox[{1470, 1471, 1469}], 
             LineBox[{2153, 2154, 2152}], 
             
             LineBox[{2742, 2743, 
              
              2741}]}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution 1\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4, 4}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
          
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{901, 2748, 2746, 422, 423, 424, 425, 812, 708, 
                622, 552, 499, 466, 834, 730, 644, 574, 520, 851, 747, 661, 
                591, 426, 813, 709, 623, 871, 767, 553, 857, 753, 892, 667, 
                880, 776}}], 
               PolygonBox[CompressedData["
1:eJwV0slLVWEYB+Bj0sKMypyHzP6BBoeGpUGBRQWBlWWTEBSREY0mGRQ0WalN
uigocFfZYMO1eV40u6zUJoeVLRIabHy+xcPvfX/fOfdyzz3jKtbPrxwSRVEc
7bQNi6IYI5RvlDHy46PoqX0T4/mh20+y/qy9lJG81bVRoH9m38wEfuoOkKI/
Z1/AKN7pblDLQVKdn9cvJIkO3U0OkeasRbeI0XTqblGof27fwkQGdYdJ11+w
l5FMl+42dWQ4u6hbTArvdXeoJ9PZJd0SUvmgu0sDWc4u68pJ46PuHkX6F/at
TOKX7gjZ+lb7UtL5pLvPZP1L+zby+a2bo+sx11HCUV2O7op5GRnhOdv7ZSOf
nc+wd5r3stYcT3G4Xn6TNfK03CgTeeCeKfJV+G5ZJVfLiF0UhGciv8od8qTc
IBPYwx/3z5W9+ipZL9fJoexmlr1CDsqdsjm8M3I4x9w7Rl7VLWdV+DyZGd4H
8xfZRLfrZtq7zPuYHq63f5dneOh8qv21eTtrzHEUhv9MDshT/HXdPHufuYHZ
HNfl6q6ZV5BFj+4R0/Tt9mqK+Kc7wVj9dftKsunVPaaRPGex8JvJoU/3hP9P
hmz4
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{387, 2747, 2744, 596, 682, 786, 392, 503, 557, 
                627, 713, 817, 439, 472, 525, 595, 681, 785, 391, 502, 556, 
                626, 712, 816, 438, 471, 524, 594, 680, 784, 390, 389, 388, 
                437, 470, 523, 593, 679, 783}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVWEABuDj1QyEfkLDda72VtokaZaZlBtbFKSWlppCEIGV2gBR6SZd
pFaW5Y/QJrXABm2wyVZNG7VBjYIiiJ5v8fC+33vuwDn3xisbyxpiURQl8ICB
lCgapN9wkxu84AdZXniI+6xMjKI+23PmybTVM8IK167bnjFHhq2OYZa7ds22
UF/Had6Rb39qnyXduZYhsu29tmR9LaeYZKN93F6kt/OZbbbvtjT9IPfIsl21
leqdzFBmWyB7+cUe5zx5krdscB4L967/ocJ5s0yS9bTpnyjWv4V7kY10247J
OblLpobPlP9ktTwgj8q7MlNe8d6zchFH6Le3yr+ySm6XZ2QyDXQ4N8lpuVMm
yRR5ONyj/pPdeq6MyVpa9Tes15/4vj79N3udC+UFPrLV+avrXfos5c5xWcMd
Mpwvu16iX2SKHbZEuYYWXoff1PbY6wr083xgi+2LbVl4Dtwm3dZji+mraeZV
+I3tj+yb9HO8p8g2Y1uq7+cWaeF52xL0VZzgJXn2h/ZpljjvY5BUe1f4k+s5
HGeCXPuofYrF4bkzQNx+yfYftkRk1Q==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03ecz3UcwPHL3tzZ2xmHqBRJRpnhKCESJTMJnWwyKntUPDSMJqFklJHd
IDsNIqOByMgolArl+X48+uN5r/fnfb/73fe+v+8ld0lr9eQNCQkJfX2JlvZl
n8Zypj6qeRlCT+eWmpH+bHPuoUUZThPnBnpZn9K12lULMsncXnPxjbmXlqSq
+XY9pYsYTlvnbOyKn6GZ+T/dyHTSUcbuO53FEzSlod1fuo7JVKO63WldzAg6
kJ6y9vt1dlwLqXEdZCAjmchMOa87oK/RO64l3pM77H/VJYzkYbKQYn9QX6cP
zeO11LA/o0sZxSNkpbz9IX0j7jn3xmu50/6sfsAzdCQbFey/1zdJ4z4a2f2t
65kSP0tNu3P6Ic/yoHN2vozPNK4rPmw2yUtx/eY87DFnp6L5B32LTuZ89DW3
0kxsNz+uxWhhvkf/0X66QbtpIZ7m+bjvmptB7I57qaUYSU3nWnr+/+dwmXbR
AgzjOed2moOBfBWfuZagU9yzeHb53NxdC/Ny3GNN5FtzDm40/6hvx/NJa+fM
7DDfT2PzFf2YF+KaqG33my5nNJ3jntulY7P5FXJSyfknnRP3IP5PaGJ3VT/h
xXgv6tj9risYE38nuahsf1jn0j/uc7yWu+wv6ErG0pXc3GR/RN9hQPwt8Vru
tr+oHzEuPgfycLP9UZ3HQB6I15LILb73s85nEG2oSxJ5yUd+ClCQQhSmCEUp
RnFKUJJSJFOaMpSlit9xTBcwmLbUoxy3+t5xfZch8axSP67B/pKuYnx8tqRw
m/0v+h5D49mgqd01/ZSpNIj3t/tDVzOBx2hhl54t5lcpT1XnE7qQYXFvnLOw
0/wQqeZ/9TOm0TCuz+5PXcPEeJ1zTr4294jnyZyBrfF7tQgzzB01icHsde6j
yYyignM1Palp+n48b5qfofG/FJ+NZmUAXzj31OKM4DoBYZ5S
               "]], 
              
              LineBox[{146, 69, 104, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$69874#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jnUcBuDXkZGRvfemKHtTFELI0aDS0FJCKZV2jj0yi4wyM9oDxyaU
vSqr7Owyyyy6vp/+uM79+96/53nPeZ9xSnTqntwtTSKR2OVHCtnSJhIzkhKJ
tmRmm24OfehLP7I7Zqa9ZLKwXTeXyvrV5h5U5LyuPzn0s8ztyMoO3Tyq6NeY
X6QSF3QDyKmfbb6H1EyJxA1ypz6VqvbWml/iZi7qBpJL/6n5XrIl/f995lNN
v87ck1u4pBtEbv1n5vvIzq+6BQxmCHnsf66/nxz8plvIUPLa+0LXnpzs1i2i
un69+WUqc1n3Hvn0X5o7kIs9usUMI7+9r3QPkJu9uiUMp4C9r3UPkod9uqWM
oKC9b3QPkZf9umXU0G8wv0IVruhGUkj/rbkj+TigW05N/Ubzq1TlH10r3SHr
YTRnlK6w7jvrh8kf19n8pxzDQftNzLut+9PFOi2N4nh5Xr4lJ8W9lpn53jm1
5Kb43bKX7CwT9KZaXBN5Vr4pJ8gX5PX041/nt5aH9b3kcNlVpiOFFuZO8rJ8
W06LZ0ZmYbRzi8g5ukd4Mj5PFojnwfqkHMvvjmtq3mM9gMZxvPmCnMwK+7XN
m61f4xnrNFSPeybPyYlcdVwb8xHrEbTkfV1R3VzrRynIId1K6ui3mF+nBtd0
H1BMP8/8GIU4rFvFGIrbS43vTGGO6H6Id8D7M1aWsD9f/zhFOKr7kbr6reY3
qEmCD/Ul9Qusn6Aox3Srqaf/Ke4JtUjDOH0p/cK4lhTjuK6Zbq/1QG5nja6+
7ud4HqhNEuP1pfWLrJ+iOCd0d+r2WQ/iDtbqGuh+iXtKHdJyt+6oHMldTHBc
Gd1i66cpEe+x+VR8N/6w39y833owTeIemC/KKayz39C8zfodnrVOom68b/Iv
+RE9rDNxnXVbeSyeAzlKdpPp6UOruO7ySnyenC57yqz0Z6LfV1YuifdWdo7r
IK/Kd2VJ2V6ejmdCjpPdZYZ4B53bQh7QDeG5+HtoGs+JvCSnst5xt5q3x2dS
j47mv+XHpCPZfFyOpnV8R+eU0y2NZ5tSnNS11B20HkozNuhu0+2w7k190sfn
6svrl8U1pDSndBtppN9pTqEBGZikr6Bfbt2FMpzWbWIyN8b/jfiOlOWMbjNT
uMneCl1XynFWt4WpTGN6/H/3LnwiZzCTWVR03sq4X5TnnG4rjfW7zH1oSEba
6U7Eu0sbZjuukm5V3I941qyvyQp0sD4T75UcL5+XGenLfzCQ8T8=
               "]], 
              
              LineBox[{844, 740, 654, 584, 467, 835, 731, 645, 575, 521, 427, 
               814, 710, 624, 554, 500, 468, 428, 429, 430, 431, 432, 433, 
               434, 435, 815, 711, 625, 555, 501, 469, 836, 732, 646, 576, 
               522, 852, 748, 662, 592, 868, 764, 678, 886, 782, 904, 436}]}, 
             Annotation[#, "Charting`Private`Tag$69874#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUYBdADl1ZJpUNaQRpplEZBGqSV7hDFxsLAQDokpLvBQEWlW0Cl
DFIBpfNRBEHX+2M97/72fHPPuXNmJn+Xgc0HJEskEknJE4nhSYlEiZSJxOcp
EonZZmvzA/MeVnKX9XNmgkXMtP7ILBDn8KvzO5mn9fPN983RZi5qyEPNO1kq
f2wW5VvnNDD36gZTjFesU7NA/tvxfvJf8kQa8aGupG613Ib0HNJ11p2J70xN
1uoa6vbJz1Kc67oRlNJ/Yd2WDBzWrWMkoxjNGMYyjtL2f2lfOzJyRLee8ZRx
7CtdezJxVLeBx/T745rxAP/oJlBWv8a6A5k5pttII/0B6+cpwQ3dRMrpv7bu
SBaO67rozsrDqcUmXWPdQfkFSnJT11/3d/xONI6pK6/7Rn6Cu+PzrJMxS/7N
8a7yubjOjJFzU1t+M+4Blsmb7Wsi/yS/yEg5B6XkV800LGGh9RSzcFxv/nXe
APO6foE5yRxv5uNTmlgPMzPF57DKerp5f1zj2O/8B+O+0c8xn4xrYGaN+zT+
dzM5s+VJZkF+d04387xuBGPlPNSR3zLTs1zeYl9T+Wf5JUpzSzdQ9488maYx
dRV0a+VOZOWErrvuQlwL6rJV10z3i/wyZbitm0JF/TrrzmTjpG4bzeM5sh5C
Wf7TTaWSfr11F7JzSredFvpD8cxQjkQ8W/rK+g1yV3Lwh24H05jODGYyiyr2
brSnGzn5U7eT2VR1bJOuO7k4rfuOlvrD8VtTnmTxe+ir6TfLPcjNGd0uWumP
WL/GgyRnrr66fovckzyc1fXQXZRHUY/dusd1R+XXqUAS8/QP6bfKvcjLOV1P
3SV5NPXZo2utOya/QcX4HtZp4z0mp+Ap+UbcqzRjvnMe1m2Te5Mv7nPrJObI
5x3vJV+OZ4Rxcl4ekd82M7BCnmbex/f2tzGPx/c2h8b/Z+bkEyrF/2ami/cj
i62nmkXivUNK60HmTXOhOdWcYN7LZzS3ftfMHPdy/E3rGWaxeI/67Brmdl2f
eK7lbHFu3OdmCubKF+zrLV+JZ4RHecc6IyvlHxxvK/8W7wIqk4qn47mO+44W
8f3sq6nbIfclPxd1fXRX41rRgB917eL5jOeQKqRmkb6WfqfcjwJc0u1lMbUd
+07Xn4Jc1u1jCUtZxnJWUMfeXfYMoBBXdPtprz8RvxVVScNKfV39bnkghbmq
O0AH/cm4HlQjLc/obsVvTEtW2VdPtyfuJ4rEcx+/HfPka473la/J42nIQV1H
3Sl5GNXjHrW+I96fcjoGy7fN6UyU89NKfs/MEvdZvDutZ5rFWRO/v79bP+67
eM7MQeYIM3u8UylqPcRMFfca860nm4VYzf8lrQ4i
               "]], 
              
              LineBox[{1269, 1174, 1100, 984, 1374, 1255, 1160, 1086, 1035, 
               948, 1352, 1233, 1138, 1064, 1013, 985, 949, 950, 951, 952, 
               953, 954, 955, 956, 1353, 1234, 1139, 1065, 1014, 986, 1375, 
               1256, 1161, 1087, 1036, 1397, 1279, 1184, 1110, 1418, 1300, 
               1205, 1442, 1324, 1468, 957}]}, 
             Annotation[#, "Charting`Private`Tag$69874#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8zlUYxvHH3mTvsiMzMxQKEZUtIWUUSkZGoaGsSslIJUQhIyNCGdmU
WZS9s0MhZKR63398Xtd13ed8f9/nOefc5/kV7NCjafckiURiQNJEYnWKRGJR
qkTiLsxImUg8jqy4rL5LrRZ+lHugAtaoL1YrgJlyI2TDX+q71R7EJrknKmKt
+hK1gpglN0Z2XJTb4Dj/Lq6Yt0d+CJvlXqiEROpEopvaFX4C1pn3rVwIs+Um
SG/OK3ICOeRLtC1O8CNw1TN75drYIr8Un9kzg+TUqCwnkV/kr/L38dP4iXxh
/gM+J+ryC+izdL2/+R1fGPXlr8wtST+WW9GmcgbaX25Mk9DqdAZ9huaMNeaf
wqPyyVgvOiU+O31Pzk/fkZvTzLE2dB695t37aB1sNa+c+kS+d6wt/yafBlXk
pHL3eIafhCLyKDkXNvg7S2kRzDHWDLliL+V2OMW/j7/N2x/fH9vkPrFG2Ki+
TK0o5srNkRvX1X/AcvVimKfWAnlwQ/1HbMJmbMFWbMN2/ISfscJzd2O+Z1oi
L26qH1B7GNvlvqiKHerfqxXH1/ITyIdb6gfV6uEnuR+qYaf6SrUSWCC3irWO
Myg/jdP8SPxj3qHYX/wsv4wc1u8tOW3sp5xM7sH/zX+GovJoOTd+8fwqeg8W
Gitl7BP+ST4jP4BvQpPS++lM2p7eGWc2zgkek89EL9DP47zEeZTvpO/KLWiW
ONt0Pu1Ib3vvYf4RNJB3mH8vnSS3jl6Rc9LBcrp4t5xc7slf5yejmDxGzoNf
/b3VtCS+MdYad+FafF6c5UfhX/OOxDuxU+6PB7BLfY1aKSyS26AA/os7I/oe
a42VxmL1tigYvY+9xtapl8ES+SkUin7FUbWGsc78ANTAPvPXq5XFt3K76OHo
AxyLXovvww9ETew3f4NaOXwnPx09Emde7oDf+dGxz/gt9gO7+FdRCwc8v1Ht
XiyVn4kzED0Qe4Fz/JhYXxyXH8du/rXoNWs8RE4f96acQu7F3+Cn4GD0kVwe
y+T2yGTOQDlZ9Fb0E+2E8/zY2BfjI+SsSCGfoI2why9v7DP+9ehTfiifAbX4
OXG/qKfkX4pn6M3oLzo9+iLOn3w3HSs/QfNGL9KF9Dl6KHqbrxBnT15ufmk6
Ps487SDfQV+Vm9Lk9AE6K3o9+jvuVlzgK6t/wX8YZyXuQz4bUsonaWPs5d9A
baQyp7faLf4LHI47Rq6IFXJHFI95OBJ3j3olfC93Qom4L+J74A9+HFLjVPQo
9vGD4g7znmFyRtSJOXIf/h9+arxD/lDOh6Nxv9HKWGmsjLFP4zvymfnXYo9Q
g58d90TcObRznBO1P+UqdKrcjn4UfUHfl1vS7PEZ6NdxBmga46djbaMv5P1y
BTpZbhO/C3GP0uFyM5opzh2dS+saS8P35W/HPcl/yU+LteHH8flxLO5rWgWr
jJU1NiHWjc/Cvx57FHeFfJt2wUX+4+hb4yPlHEgrn4nPgQP8W8hn/G35jjhX
clq5H/8vPz36L34n5PuwWu4cd2rcO3JXXOI/QTqclZvjID8Y9aL/4jdGrSrW
yF3ifMY9JD+Py/x4pMfvcgsc4oegfvRS/D6pVcNauWvsKTLgXOwJDvND8Uic
0/gtU6uOdfLzsV7IiPPRQzjCD0ODOGvm71C7H+vlF1Aueh4X1FrFmeKHo2Hs
tfk7o4ewQe6GrNbsDTkVasb/JXGP0f8BU6RDsg==
               "]], 
              
              LineBox[{1899, 1779, 1690, 1552, 2030, 1881, 1761, 1672, 1612, 
               1512, 2003, 1854, 1734, 1645, 1585, 1553, 1513, 1514, 1515, 
               1516, 1517, 1518, 1519, 1520, 2004, 1855, 1735, 1646, 1586, 
               1554, 2031, 1882, 1762, 1673, 1613, 2059, 1911, 1791, 1702, 
               2090, 1942, 1822, 2119, 1971, 2151, 1521}]}, 
             Annotation[#, "Charting`Private`Tag$69874#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFGUUBuAhlFBCQlIBpVMaVLo7BJTukO4O6U5FFOnuklBBkQZJwSAk
lMagpEG83x/3dc7zzM6y3+zMkqFFl9qdY0RRlDZmFHWIG0Xp4kfR/HhR9A43
5a3Mpph+u64+CTip60h6/QL5XW7J25hDcf33ugYk5JSuExn0C+Vi3Ja/pY7u
F7krGZmrK6HbYW9IIk7rOvOGfpFcnDvyd9TV/Sp3IxPzdCV1O+2NSEx3+Z45
mTOON5Mv2geRlyFyTGbZuzj+pn2xvQR35fby3/bRbJfrySfD+zLenpDM9n7m
U/NT5ntdKXmXvXE41x6fV+w9zPvmInOKOd1MyVp+c15z81J4D3OwOSmcx0ry
yR+ZsVjCbPkzMw3r6er8jOGYfpZZ0hxhxuFfxzqY/+jGMNWeLHxX+vfNU+Gz
McGeiCz2/uYzcwYLvK60vNvehCT0lB+E9+Ks4y3ky+Gakj98L7pMuqX2UtyT
d7CQMvo9uqYk5ZyuO5n1y+TS3Jd3sogeZHFsub4MD+RdLKYnvehNVq9Z4XhZ
Hsq7WUIfsoXrqC/HI3kPS+lLdsdW6cvzWN7LMvrRnwEMJIfXrfaaCjyR97Gc
svq9umYk47xuEDn1a+SKPJX384HudLh+ZGWFrpxun705ybmga6m7Er5zCjBY
lyvcK/ZKPAvPonzTPpYDcn35jL0X2Rgg/xfuE1Y6Xl7eH541s0W4F8yXwjXj
1XCe+dBcbE4L97OZinX87vxW5tVwP5hDw3NlJgnXjoLyUDN2+M6ZI39upmUD
Q5yfO7yXfrZZ2Rxpxg2fMfxOmLd045hmT84P+gbh2dD1JjsD5efhvVnleAX5
gL0lKcLr5Efmx/zheGv5mn0YhcL11OUJz4y9Cs/lgzTUnZX7kIPVuorhM9hb
kZKLuqG8Ff4muSoRh3RrGMZwRjCSUYxmDGPJ67wvvb4aMTisW0sl/UG5Nam4
pBtHPv1GuToxOaJbR2X9IbkNqbmsG09+/Sa5BrE4qmukO2fvS07W66roDtvb
koYruja66/bhFA6/BboCus32msSms3zbHM8xxxvL5+39yMUgOWKmfYPjVe1H
7O3CPWp/OdwP4Rqbj81PuOp1beUb9hFMsSelSPjOzBfCbwJz5Znma+EaMtF5
Bc0t+jlmLXOUGS/8ToTz5C7mHXOhOSHcE+E+D88wPzq/iXlBP8/sb040E5M7
PG9mDL6wzzBTh3/XOdXMo7oPw71qTxA+U7i+5hNzOte8rp38Z7jHKcokXSHd
V/bavEhX+W74dznueNPwnIXnljxs1FXXHbO353Wu6yZTWP+1/B5xOKHbRI3w
t8kdSMcN3RSK6L+R6xCXn3Sbqak/LnckPX/qplJUv1WuSzx+1m2hlv6E3IkM
/KWbxtv6bXI94tMt/L8T/u7wPdtThN9C/gd1diWA
               "]], 
              
              LineBox[{2530, 2428, 2352, 2232, 2642, 2516, 2414, 2338, 2285, 
               2195, 2619, 2493, 2391, 2315, 2262, 2233, 2196, 2197, 2198, 
               2199, 2200, 2201, 2202, 2203, 2620, 2494, 2392, 2316, 2263, 
               2234, 2643, 2517, 2415, 2339, 2286, 2665, 2540, 2438, 2362, 
               2691, 2566, 2464, 2715, 2590, 2740, 2204}]}, 
             Annotation[#, "Charting`Private`Tag$69874#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{385, 386, 384}], 
             LineBox[{906, 907, 905}], 
             LineBox[{1470, 1471, 1469}], 
             LineBox[{2153, 2154, 2152}], 
             
             LineBox[{2742, 2743, 
              2741}]}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution 2\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4, 4}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
Q41VnwQ8VGJcfayHJBbm9k53X07d/6zF7gPU+YXHxXYeCqdDxXiVNy3U/RG3
3xi47u0Cacs9HPZQ499qUu9UYkSD5vqPT+6j5re4SZyGxi3U+ak2JHCp8+Mv
u21IBNChdbivgio13mvlyk6ocDpB28ZsesgxHsjT+Sx3Up4GU4pNfEup9V1z
8+4fDAcGfLzpyPQZ1P0i27Lnkv45OmSY6hfFU3k5/EKAzs2FDGjNpc0Lpj6/
jJk+mjjYBW5fXu3mT83HNMu68xIbabDli9/L7O/UfLvGf+3NtXQYlzZvgRSV
1zPoT5u6dtFh5I2jj1PkhCAzw3XAe0ICqvxaWzKFWq+J2+lMLLP6v8c3bNOn
/v+ynCMr1sfQYazPJzEVaSHQmet/czC7C3Cl6g3uUOf/443L/i5rGvx52tEj
hPr+Jt7JZ1NC6PA932T1V2r+Q/vj8yX2pDOjHwFh0Vh77oIuoKRh6/6cut5V
2RsWZ2rQoOmWscxz1Pjl7Lvb9XM9A2ayJfruUePvqvl4VrgRA3p6HT7kSR3v
jmjasngpB9zVdJ9eGs7D++PJfBVjEckEt/RHJrmNcMCkvz9896wdOuqSEB1H
RMw0fk+tl9Ax3k//98fvidx50bgi/n21YtCmuR4MfHxtw8DBadT7FR2j/cfo
+H9GC13l
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{564, 3247, 3245, 563, 967, 859, 769, 696, 639, 
                602, 986, 878, 788, 715, 658, 1002, 894, 804, 731, 1019, 911, 
                821, 1037, 929, 1056}}], 
               
               PolygonBox[{{1053, 3244, 3242, 550, 551, 552, 553, 957, 849, 
                759, 686, 630, 592, 984, 876, 786, 713, 656, 1001, 893, 803, 
                730, 554, 958, 850, 760, 1022, 914, 687, 1008, 900, 1044, 810,
                 1032, 924}}], 
               PolygonBox[CompressedData["
1:eJwV0s8v13EcB/A3oUikfCVbmUNd2tpyK79//gH9AeFLoba4VaeaElsd2phJ
ETr4UUiXDv08F7mkiy5CEZc2mw42PT6Hx57P5+u9fb/fw7cg3nbxemIIIYE3
TKSHME6d43k+7wvhEkm8tTtIZcwuYlnvp54LfHGrI5l39l3SGLeL+ak/poEi
DpLOhLcSVvQB4hRziEn3Ulb1JzRSQgYv3MtY05/SRCmZvHQv55c+yGXKOMyU
ewW/9SGuUE4W0+6VrOvPaKaCObd6Unhv3+MIM3YVG/owLVQy79bAfvboITcp
hA/eOlmxb3CCb/aOfMA5jtqvZDV/9F35iBF9U97mVPRbfN6AbHVfkm1kucVk
ouyTeXLO+7beTY59VqbJIXlSVnn/qsfJtA/IIHvlcfnR+1+9k5h9RqbKQXnf
26q8GX1W9F9x75eL7v/kQwrJtmdlDZv6KFv6HU5z1f4h26PfyLxdzYLeGH0f
n+wu1vRb5PPdjvFar2VLf841asjhGP8BQulXpg==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{515, 3243, 3240, 663, 736, 826, 934, 520, 641, 
                698, 771, 861, 969, 568, 606, 662, 735, 825, 933, 519, 640, 
                697, 770, 860, 968, 567, 605, 661, 734, 824, 932, 518, 566, 
                604, 660, 733, 823, 931, 517, 516, 565, 603, 659, 732, 822, 
                930}}], 
               
               PolygonBox[{{994, 3246, 3245, 601, 638, 695, 768, 858, 966, 
                562, 600, 637, 694, 767, 857, 965, 561, 599, 636, 693, 766, 
                856, 964, 560, 598, 635, 692, 765, 855, 963, 559, 597, 634, 
                691, 764, 854, 962, 558, 596, 633, 690, 763, 853, 961, 557, 
                595, 632, 689, 762, 852, 960, 556, 594, 631, 688, 761, 851, 
                959, 555, 657, 714, 787, 877, 985, 593, 723, 796, 886}}], 
               PolygonBox[CompressedData["
1:eJwV0ttPznEcB/BvxdrqkegiHagnGm01Nv6GzmH+BMsxnesm3WBDUa2LZuaC
C6fClUNRNw7hyiEUF6gbuqkotWmzef0uXnu/35/f0/arnvjBxgMNiSGEBMYZ
jIUwRKHjNrayj3buscL+pBDGKND30sZdlqPPuo8S1/t4zQa7jilq7Fbu8Cf6
ebcn5Ou9vCLdPs4k1XYLQyxR4/aYPL2Hl6y3j/GJKnuCHL2dGZrtInmGBQbt
Rar1Ebboe2Qvq3yxC2Qns1y0S+Q5lhi3B2TCmhDSZLo8Kj9S6VmefVVPlbtk
puyWK7yP3s2+pCfJbLlRtslpmjzPta/oyXKHzJCn5Ty3Pe+X//itp3lWpQ+z
2b4mY267ZQ9/+ex+Wa51j8uT/OSCe7E8yyIv7HXyCB+osHfKLpZ5Z2fJVr7T
aG+Xp5jjlv2LSv0RufoU+XoHP+i2nxPTDzNBuf2WTXoL34i+lDdZoMJ+SI7e
xTNS7UPR35My+w2Z0f+ar9TbN5in3H5Atn6ep6TYtdHvRKl9guvMUeZ2n6zo
nfgPfE1k7w==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1mW4VVUUBdBHh9LdHUo3SIOkdJfSISkhoGIHGIRiIkpZSIp0d3d3Gigq
qIiBimN9/hjMufZ73z33nL0PUKDXsDZDEyUkJCROnJAQ+Zg/UnOVpeYDsge3
eNS8UjbhOr+az8n4gAf0ObIi5/Xjsj8z9G2yQ3w4FcTrsiB79Yls0Fvxl96b
RXodvtfnxXfjcfNdLNNH04yPzJW4oM+kIm+YC7FPn0QfkvCEtbtZro+hOZVI
SjKSk4JxficNK/SxtKAyU60VZr8+mb6k5ElraVkZz46WVOFNa0U4oE+hH6l4
ylo6VsU90YqPzZW5qM+iKm+Zi3Iwnhf9Sc3T1tKzOu6J1nxirsIlfTbVeNtc
jEPxTNiot+a2PoDFel2u6afkQObru2QXksbzNj8jM7BGPyh7Mk5fJZtyg5vm
83IYf9PG/Kmsyg9cNp+QA2KPmWPeLjvGGSIRX8X54g73+fk7snicAQ6bj8g+
/MFU86a4TlxPvyRH8LD+hawX19VPy0Es0HfLriSLc2B+VmZkbewhq+MM85ve
ls/0alyJc0Z13jXfw5HYXwayxFyfH/WFpOE5cybWxX7TjrlxX3Gfsd/U4D3z
vRyN/WYQaXneWmbWx37TnppMs1aCY7G/DCYdL1jLwobYLzpQi/etleR4PE+G
kJ4XrWVlYzwHOlKbDLxkPRub4j7oRB0ykonMZCEr2chODnKSi9zkIS/5yE8B
ClKIwoz3+dnZHPdKZ+pShAnWc7Al7osu1GO6tVKciH1gKEV52VpOtsZ90ZXP
zdX5Ot4N6vOBuTQn47kzjC/N9/OTvohivGLOxbZ4FqzRm3FL78Y8vQbfxBln
h96JxPFZ5g9lGU7pR2VfpumbZVv+0S/LkTyiL5UN4jtw3XxGDmaxvkd2izNJ
8rgmY+J98RdicT9/Vc/Nd2w3H5K9+J3x5rWyOT/HmvlCXDO+Aw+a58uafBvn
nQbMMJfldJwftujt+FcfzjK9ITfiXWNvfBYp4t0wvybzsEM/LHszQV8nW8T7
q1+Uw3lIXyBrxfvDVfPJeI+5zVzzTtmZmySJPWU08Y9CQzFTL8c1zpiPyX78
yXTzVtmeX7hjviJHxf0wwrxcNopnpJ+VQ1ii74vvR8p4R80TZV52xpljvd4y
rqN3Z6FeO/Yizh+NmGUuz9k4f4ykBJOs5WNXnDd60JiSTLaen92xv/SkCaUo
TRnKUo4pfq8Ae+K504umzLZWgXNxHhnFCnPjeA5x7tmvdydV7D9jE/3/f4Dy
fvYfmh4B0A==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$69952#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GWUVWUUBuADM8AAw8AgQwwoDEjaRXdLy1/JIRUEJGyXpJQgSjc2JraS
tg5KS6mktHSjy3r2j4d3v/vA5ax7vnNzcod2HZIvSZI8f6TkT5KXU5KkNnvM
M7mfe0ilAK+4Voe95ll0ozYFedW+LvvMs+lOHfLsupGflfpoCvGaXo/95jn0
oC7r7bqTwip9DGm8rtfngHkuy9OTpKesx4/2PUhltT6WwryhN+CgeR69qM9P
dj0pwBp9HEXiM/WG/G6eT28aUJR03nStEYfMC8ilIcV4y74xh80L6UMjMnjb
vglHzIvoS2OK8459U46aF9OPJpTgXftmHDMvoT9NyeQ9++YcNy9lAM3YYNeL
gqzVx1OSFXoLTpiXMZDmbLTrTSH+YyZlU5NknWsTOKQ/yvVs16/KqdzBdfr7
siV/mP+WM3jJfFI+Q9W4F5+3QD5g/5scSqZdVpwLOUdmyw2uXzJPorR+qywi
l8gbZAvXN5lzKa6nyUTOkuXkF66fN08gS79JFpaL5bOuHZaPxWfFWbGfJ3fY
X5PPcSel9A9kK07GO8Ep82iq8aC+Rw6Le2Sj3pLN5j7x//GlPpEj5sepyE49
iw/NrTkV7xODaEVpysQZc67LynJ85O+14XS8XwymNVvs+sZ3w1f6JLL5WG/L
mXi/eIi9+sOUYZPehq3mfhTla30y5flEv5ez8b4xhH368DgTbNbbss3cn3S+
0adw1PwEldilV+BTczvOxbvIafMYqscZ0PfLEfHs2KJflpO5Le5D/1kOoBjf
6hfiOXJznEH9mHySnHiXPc/5crf9n3Iad8U92i+L82v/mWxPht15/R/zCyw3
n5Fj40y7ViPeB7lQVpDDXD9gHklJPVumyLmyvNzq+hXzlPie9dvju5VL49nL
dq5vNw+khJ4h88nZ8jvXLsqJ3BLnUD8un6Iyv+h/yencHWdX/1x24EKcF86a
x1EznrV+UI6Ke2Ob3p4d8f7Fe8P3+jQqslLvyMX4DWM4HdgZZz3ulx/06VRi
ld6JS/G7xgg6sstuEJnk6c+Tw2q9M5fjt46RdKIya+y7cCV+6xhFZ6pwI1Xj
nrwP1WR1alCTtf7NfVyN30EeoQu77QbHM2K9PoMT5qepwq96LdaZu3LN/K98
kRXmc3I8pTybWjJNLoqzI/8HA2Dc/Q==
               "]], 
              LineBox[CompressedData["
1:eJwNybkygwEUBeAblFRSKpjRiYjtQWTPn04vOmvEIxjewAOYsQUdsc5QqtAp
vQEJ8hXf3HPOnVhezTdSEZHwORixxhivAxFLvMkrjPKs7zPFtV7gWz5mnTwZ
buxFfuQTNigwTcdeoiufskmRLLf2Mj35jC1KzHBnr/Arn7NNmRz39ip/cpsm
FWZ5sNf4ly/Yococj/aE4FJvUeNoOGLefbLXSXGl75LwrjdI86If8CW3mORD
77p7LDIyFHHojrsLfn007jDx
               "]]}, 
             Annotation[#, "Charting`Private`Tag$69952#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4VFUYBtChO6S7pLs7pBskFASUBqVDUgEllBSQUFoExaRUursblFa6
u9O1f6zn/d6995w798yZydyme8NuUSKRSOGokUjW6JHInhiRyLtUihmJPNTz
yeV6Xfmznkp+r1eXFWUpuVl+bC+KeYw5N0XMa+UZ61nNC8M1wrX1a+E8Sdmu
Z7D/U7gmX+sJ9W/NJbiuZ2OvuQmPzL/Qh6jOjbWWh7N6E66b+5CMHfoksrNP
b8pj86/0pSk5yEkucpOHvOx39j2emH+jH++F+8EB6814av6d/jTjhrW+JGen
Ppn8HNSb88y8kAE056a1fqRglz6FAhzSW/DcvIiBRPO/jrOWl3/1Ftwy9ycl
u/WpJHJuml6SG3pBDpvf54V5MamdmRc+Yz7Ro+tfmfPxX7jf+iJzvfA6/bYc
QCoK2Vst91jPGJ4Jc01ZQ5aV22RD+Y39xHK6XlWWksXlBllf3gz3XP6h15YN
ZQW5UzaWhewfMX9AZf1luJdyhb7EnMY8P+xR2rxFfmo9hnm8OT9FzevkufAM
mBeHvx2uqd+RA0nNXj2T/V/C/8K3+hv6jHBtbumFOWpuySvzUgYR07kJ1gpw
Xm/J3XBfScM+fRpFOKa34rX5DwbTinvhvZOW/fp0ivK33poIf+pDaM19fRDp
OKDPoBj/6G2Iwl/6Z7ShOCUoSSlKc9yZtkRlmf45bSnDCWvtiMZyfSjteKAP
Jj0H9ZmU5aTenuis0IfRnof6EDJwSJ9FOU7pHYjBSn04sdzHiXpBLugdeGT+
jIwc1mdTntN6R2KySh9BbK//OjyfXNQ78tj8OZk4omd25ldzLeboSfSZ5jLc
1itwxvwhsVitp3XmB3MVvtDj6JPMhSlmXi8vhd8R8xLz25Q37wjXsf5EDg2v
t5Y5vE6uCd8tedR+FvlbeE+ytiwnt8tG8jv7SeUsvZosK0vIjeHvyDvhN0v+
qdeRjeRbcldIe2flR8QOz6f1lXKN9XTmH8P3ki/1uPpkcxEuh99Dfam5QXi9
/lQOIwvH9Lkkc2Z2eL/c1Svyr7kTcVirjySec1PCd5EreieemYfzJn/r31OJ
//TOxGWdPorOVOactS7EY70+mi5UoSrVqE4NzjvTlfhs0MfQlef6CLLyjz6P
mlzQu5GAjfpYuvEifOZk47g+n1pc1LuTkE36OOL7P6eGZ4KrendehvtLdk7o
bzrze/is+EFPrs8JzwslzZvkPet5zH+ZG1NbvyR7kCh8P+ytkputpzcvMNeQ
1cJzLLeGzy38nttPEH6H9eJc03vwyjySHJzUfyRFeNb0CtzX63DZ3JPEbNHH
05PX+ihyckpfQF2u6L14g636BHpRj/q8TQMa0ojGXHW2N0nYpk+kNxHvZ7S1
XJzWfyKltbnhueaBnldfZn6HiubdYZbv2PsfAx0XPA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$69952#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nccjWUYxvFjkxVFZvbeMiO0tUuRRGSXnb33prJ3oTTMEKEQUlnZe4aU
IiGE1vf+4/e5r+v3PC/Oe973OfI17VCnfZJEItEkWSJRL2UisS11IpEG7VMl
En/rn2EErnLlMJkviEPcy9jO3YEO3D/6UozEn1x5TOEL4TBXHzu4tOjI/asv
wz1pEom63BquNkZx1/T7MFUvjCNcKfvacLv01/AK94OeDp30//QH7Omtn9KX
69n0evqX+hOoq0/Q/5JHW78uV8A0vUjssT5cvyAftV5ab6vv1rvJn8uN4++X
Z8pzzCTmCPNbs4FrdprpMZZ7y96W5of6h2ZCr2H2ic9m/qj3Nlfri+LPd312
82V9vPmV9U7mEv1T80m9njlRf8+8qQ8xN+pjXHvDrIjpfFt+vlxUflIeIV+U
j9lXRm+n79Gb4FVul54BnfUkWMHlsK8+t1Z/CmO5v/RKmKEXw3GuIXZzGdGF
S4qV3NtohD38nejKJ8MX3Dt4DY3RBK+jKZqhOVqgJfa6LhO6uS45VnHv4iZX
GTO54jjBtcI+LjO6cymwmsvpc7zCrdOfxjjull4Fs/QSOMmVta89t1d/Ha25
/fpd6KGnRE17+uqn5TXWc+kN9PX6M3hZn6Tfksdbvy1Xje9Lb2dtgVwy7qc8
Uv5dPmVfOb2Dvk/vLq+Qm8qN5VnyXDOpOdL8zlxuvuG6A/LdeFvvaX8rc54+
z0yl1zL7xTNuntH7mGv0xeaXrs9tvqpPML+2/pb5mf6sXF+eLN+Wh8qbYp9r
/jbvx/t8qbin1kbpl+QfrZfXO+r79WZ4kzuoZ0EvPTW+4ibiH64aZnOlcZpr
g0NcVvTm0mAtNwlt0Q6Hrd2DPtbuwDpuMtrjCJ8Nffm0WM9Nwb9c9XhvuTI4
w3XAUS47+nHp8DU3Ff9xD8S958riLNcRx7gc6M+lxwbuXp+5IbdBfw7TuARX
g/tAL4efuE44zuXEAC4DNnJ57G3EbdSfx3QuCVczzg69fDxf+mj9D/mc9fv0
TvoBvXl8d9wJPRcG6hnxoD399bPyJut59df0TfoLcY7qU/S/5RnWk+q14vnR
28sL4yyWn5XHyJflgfJ6+Wf7K8Q5F78N5kFrPcyV+kKzRZwv5ntxD8xk5ijz
e/Nzs7PrT8q58Y4+KN458yP9I/NO/SFzQJxp5k9633hu9W9cm09uHJnvLC+V
68gN5KnyP/JM+5LpD8afqVeI70cfq1+Rf7FeMf4t+qE4r9GFO6Xfi8F6Jmzm
ZiG5vQ/xH3MVcZ7rih+5PBjCZca3XH57m3Cb9RfxHpeCe5j7RK8U37X+tn5V
/tV6Jb2Lfjje5TiH9Pf15HEGWj9t5sVQa29Y+zjOJ/lheaB8Tu4Xvx3yd/YX
kF+XJ8ZvVHw2c5k+33wpzn5zWrzL5r/6MPMbfWn8va5PaT6iv2t+ar2DuSg+
v1k5niHznTiHzT/1QXGO6J+Zv7m+stlVn2Iesd7T/EJvLTeVZ8spMFreEue2
a86Y+TAszg7+kzjj5EfiGYnnTv7evoJ60/icel001Kfr/8mzrafSH43PqldB
Hf1d/Zp8wXoVvZt+NO5lPLvcWT0/hutZsIUrZF8z7nu9HuZwqbnHuAV6VVzk
euInrgBGcFmxlStsb3NuS/w+YC6Xhns83hP9fvzO9cI5rmCc89w92MZ9gDvs
r80v4qrhEtcbP3OF4r3ismE79yHS2v9EnPNcdfzB9cEvXOG431x27ODmIV38
/4Jfwj2Ay1xfnOeKYAyXA4/aN1j/Re4vr41rzB/sLRLvvL41fjvwEZeeeyqe
B70GrnD98CtXFGO5nNjJfYwM9j8dzx9XE1e5/viNKxa/c1wu7OI+QUb7n+GX
cbXwJzcAF7jica5wubGb+xR32v8svzzORlzjBuIiVyKec+5e7OGK2tuS2xbn
JOZzmbjn4vyKswnXuUH4nSuJcVwe7OWK2duK2x5nEhZwmbnnuRXxzuIGV5Xr
zh2L5x2DuUt6KYzX8+Ixe4bo5+V91ovrrfUd8Q5jIXcX9wK3Mt6VOHP0cfp1
+S/r9+s99ON6GzTT5+gp49yy/odZGhNiPd73eA/lx+Wh8gzzV32AuU7f75oS
8f8QeVI8A9a6msvjvYjfQ72ROUOfbSbivTI3x/cV54jr7zbrxH2Lc8H+jubi
OB/j3dVfMsfrs8wbcW/MDfpN11aTe8on+F7yKrmt3FyeK6eKc9K+y2aZOAOt
5Udt68P03+QD1kvqb+o749+LxVwW7kVuVdx73OKG4QpXNj4vVwAHuSXIGucp
vzruF25z1ble3Em9HVroH+ip432St8ZzYA63939a38wY
               "]]}, 
             Annotation[#, "Charting`Private`Tag$69952#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
5KbyMr4s+vOH47ymx9z7f45VlyY=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$69952#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             
             LineBox[{1058, 1059, 
              1057}]}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution with backward integration \"", 
           TraditionalForm], PlotRange -> {{0., 6.24999987244898}, {-4, 4}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
b0z/VyOA/THcfJWnOV/HAftjYu7o9vH6TFD+l9f/r6s7j4vpex8ALiVZqhnR
QpIkJSlLRDgnlIo2pCQt0qIo0iISUiElKSRCm1YlRaK6LVMo7WhPU81MNW1U
MxH53Q/fc+b34r/zunPnTveec89zvJ73c1J9zxgoD+P9X9LVdddsIddfyD+E
RM2V588ewPu/sAa2ipqQ8X200oTBqSFR6NZU2ODvPAjEl+pe0vCkwNAJgy33
yPnqZnfK8JoxCjz2oe64zMNBYO41d8PVM1Q4tvHqoTeXBoCO7Qajud+p0NBz
7NGypf3YU+hUe42GfoonihL357qJisP3IZ+0K5YlAmmay/nRSHFoc/3BhTeO
ycDQx29glZgELGoW9DggmAoye54MW9+SIOeLSjEKeb9tZGsrhsUl4U6KjvJq
w1TQP3DY9r37Z/De8aXUtRPdhIKDt2uHTgfQu3PY+rItg3gtLkkJ1OsGb1U0
KYsBA+9PE3k7sFox8CdA+9NcsMzaoHl6CqD9aRyyRQT2L5kCyGvkjp9/fJx/
EO8nY5F69eR5Mv7VWDdNaKmtCDznLLf5CLlectEVOBq6gQInNn32aI0l38dG
nqMG2RQooG0U1UfGDyX6aoNhG8n1z5zRXZbryHhnT6OA/UdxeOx5o56ldQqo
nxRRsjaRgJpxjHbHY6nA9PHN3JZPEjBFpZgx7Woq9iDRQUFKS8uTgbv8ynEl
p2aQs3iwVMW1hwjePG5rmtgJQsYnYx6Q/WnXVTkXqQvToUBg6orYq78A2q/m
UZfzjf/yZZAHgYpjW3eVDOD9ZVJK/OPZ5Dx461O+fLY9BZreVm3XJednmp7u
SYtuChwIbP++O2MQ7z+T7NL1ks/Onsgwtzj8mJ+Mj7ZabnrcnQLKPNO3Xrok
AX9HLv/qeSMVbAjhW3bFoB3Y729KfK3FIPxyU/fplnSB7V+niO3WDOKBznHj
a7+mw4C08qUssymA9qfR8dEykNg1hfeT2XlMcL3/kkHAgMKSS7TI+FXuafDO
2wPgsmbJ+lcKFCja3iETf3sQxPH333kXT65PNJPFQ8n3EedZ9YlXClSYrDgh
JGo6CNa29t+r1yLj+Ybjp0wOpAKXNXdm/KRJwIe+YXksMr7f37QgpMmiFaxZ
vn6TGRkvCHyvaanOpgOpkp8lsVcZhLvj28MmhdOh2Kz180amTQG0f42NrEd6
OBn/Ia9SqENZmfaEXH8IBA/o8YtAzQN+S32iyPF2vKG9IIACfz2zdma/GwSW
5+e4zZpBhceJ8sNCwYPg3r7Y2G3xEvBH1kw/MTK+l4SDeerwC5itHLZbw4dB
lC+n7ijewg91gxY8cQuaAmi/GiJIpMx85Bfeb0a7bYHXOnL+T42eZtxQQoGX
I5Tz8koGgbv0uldsG3L+K6Q/HTyTCoDo9WN5TAloZOw2i3o+FfuY4yY2Zi13
k8FAcCF/rm0nqO2duut/g0HwZUb11J3gh4c+D0fPIvsT2l/GbssH1z7yeh2+
d58NtVBgyIJB16mcQWCyLbOH6iMBc32ed+0MTgWdMz3GU/zI+H7bpidBxxl4
v5nFTXtf7taeAvXDT05aqAnDbeNrDB6R96vzcELvjAcUaKKu83WCfJ7c71Hp
IfkSkDMe8PApGe866N3zVTtJB69WbN3+I5SB95NpCFVutgueAro/H897Mkr2
F+VamEH2l6byUNVJXwrsMvqWKU6OT3npBN2aaAmYOfXioD8Zz8rsWzs/uLQD
XDU+L3zYlUH8HHTUGV3FD/nTf8RVkeu3JeuhyInT5Pfpb7kwmxwvvWOvYylv
KPBetaDik7JBIDc39uTygxLQm6+2KvpUKlDsVy4a7e0EGtJW7CAyvkf7x5Sq
29VcipwCdwaqraw+CsPq95qBR8n4HHmdtnce0XViUcTmpyl3Rq5JwPqf5Ute
hafi/V9KL/HHvXCYAt/DTxPdJsLw96matLBbA+Boiqr29TQK7FN/MXyNjO87
nSKsXKrI/hTn7GIWkgrikgU3neDSwf3SFjq4xCAs50mFXAyhwMYzEkCOvL/C
1x/+eJomAWdm7BB+R94PikqyNT3/C7Ba3jdH2p9BhB9+DcL28EOpgqNP5EOn
ANrvZXoiGBgj4/vjUGfqdgUF+lCeH5UhBvH+L2G2Nx8uv5gMpNfFf2SBTrDx
THmRLLke47KbPmrZk+vVlVrC1eR6h2MuVLjzqTDU43iV3ib707Trl8Lloyhw
l0cll0v+vq1WC6eZviLXo8nfQGlEKrjz9byBrSEdfOJkFtLJ9edOgca9JSn8
8HbbkNBZcv0xMercJOVDgZtCn1QwyefjfHH5g7t3JOAy1fx4Bjm/3J4T+nq2
izA8caJo5zPyeQrJRemr5lKgy2RlbFs5Od/dooTLv+0EiT8rl5mRz09molHM
/wo/rLhx/+lpsv8nO7WcCvkgDDOkJl3vkfPDRapy/6tACdgXER61/mYqcDtW
5HJJTxje/3Lu1idyvg34PHcoJYkCVRXeVMiQf0+9MXvWw0908Ng76OiaQAbh
CzjrH12lwFVHf6jcJZ/fvuElhl5JEnDe1ouis8j3QeTLipDrfl/ApIt7eu95
cr1YbK+VvJMfxpj5hM4k+3v+04OzIkOE4WbvRQf5yPv3uqt5bdDlTsAwslY6
cJNBzHE3H7P14oetEsYX/vv/nlqbr3d784Xhl89XLx8i//4StbeA9YgC4zaF
hH0if9/62Jy03+F0ECziWxN2nZxf7z0LartIgekrBp4uId9fX3LlxgUfkb8v
T+8tk+wvKZajtjXnhOFkfHH2dfL6E1q7hktm08Gd5UkKKuT9W+Nnti4uih/m
ReV2C5LPG3mpE1Ibd5x3jyXGdRV3KN6QgHQ+U0k+8vnq+O59cDyTAjOX3n1X
RV5vG0Oz2/YmBeqsntt9nfx97xQWJzEyJWCgeZeQCXl9r+8i27z288PIlW7e
b8OmQM0U8cw8RhiuD15aJEz+HuSrRl9tlFb0SOb5qrb7//mqbchXsfPpp25e
rsf1g3/RtMMP+Xbi+sHZRWIrZpf24PrBjzfcvbV/hInrB/c6yb7ZdY6F6wer
1pZtZ75i4vrBCquyiJecHlw/2DA8IO5rFK9+8H6RBgt39hdcPzgszet6u24z
rh8s4//VSlCsHvsqxc3SMzRcS7Gv+mjlkVC5OoJAvipffbBm/vZKAvmqXbYR
kbuG2wnkq46YZ/0iZHsJ5KvWe3f+/Oo7QiBfFWPo1z0aOEYgX5Wlr+Fpn80h
kK86v18w+Y4Cl0C+StZWIPETfRzXD4YrGxVUc0dx/WB+7xdFLmkjuH7w/uK6
m99p/bh+8FetN+u2d3fj+sF1rhtnNHo14frBRv5EBP99Gq4f/G7Lhsmqvizs
q7wH+oMM5tRjXzX0uiHokl879lWyO1eZQqke7KtOWjHNZOf2Yl81IgEqBV/0
Y1+1o32Tz/QxNvZVKftmtE9ZsLGv4ju2c3jPw17sq3K2RlJW/+7Gvir8vddx
tS8t2FclzF6mbqpJYF+1fUm5afYFXv3gNzMWxmyPzsO+6ld4wviySwSvfnCo
z4dltGLsq9aNzmOH7inFvuqUfYVzvSYN+6qka0olV8po2FfNTtLe82h6GfZV
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
OATyCMRXhsJWeXL+/59H+EbJsChrGSfQfgENHiHGuumjuH6/Nxj0l3najr2A
W/LKO8uVe7AXEFP8ytWT6sVegD3nUfldcr2JvMDRtdxD4uR6FHkBraweZcf9
bOwFVioMF1aH9WIvMNpSUD7a2429gMrWxD3zYlqwF6CrPlGw4xRgL+B80ovJ
TuDV/683nvcr/EUe9gJ+02RdWyII7AUoEvusLlcWYy9wXduWudKkFHuBaCO7
xSnbaNgL1B406ZR/S8Ne4ESoOhgg3394f4G+F9qnuDTsBSKGVblxZjS8v0C0
9IEQu8wWgLyAELhgVzbRBZAXmD3z4QELaSZAXuBG9veOR8dZAHmBM+yt2ns2
kuM5YfPv38f7wbPQkYbGPgb2Ai1JB/Xu5H8jkBeY8T3jHGgfJ5AXWK8aa0tZ
xSWQFxicPPVmWTqHkMoYONQ0MQOe7o+4crZ1jED5/Tur8nJWxtFxfv/rjjM+
rjpMnN8vnz73x/XbfTi/f9xiY8mlSDbO779+ZfyJWgcb5/fPO/d0ZNWmfpzf
H+gaJhx4nonz+7PO/hqf9aUT5/fvsCtY+yWrDuf3N1x+rVu6OBXvN+AnpzAU
NPECoPx+ybLl5+CXfJzfv7twy6b6jiKc369YYq7Pji3B+f07nu3e/uRTKc7v
Hykd+hETSsP5/W67dasshmk4v//lkuC8i+T7COX3/9LxrHRspuH8foWT8S9Y
jXSA8vtfSKgsVwtkAJTfr5sTMO8oYAGU36/5tvfCM3L9jPL5be4VnH6/Y5xA
+fy2bHeFjwJcImAgaLIzSwCGxopZdH3jECgfXwaePUij9+J8/LXVi99QN7Jx
Pr6P7rn+ajLeQ/n43lx+yYNNvHz86SlGh1wWJOJ8ezf34A0TTjScbz8rreod
t52G8+35T1S6PSbf9x9yJzpKosj5eUVQwyFyPYPy7bdZmaTfvcMEKN9egzEo
fY2cr4PmXn24bA8LeEQLzGD/ZOJ8e+XVEt7eBzkEyrfXqrGhTJLzBcqXLzvw
a7/4+n6cL9+kzIjV/cgGca9ifh3JpcK2gcUVgslsnC9fWfnQlp5Ow/nyk7un
uu6Q87tMLs2SZSoJjWkHRvLJeA/lzzdzvH5U0mgA5csn9Qu9OSjDAk6xE3Pm
f+oBjdscNM1OsnC+fL7N+wK/Lg6hYDduC28KQPti/S8GIlwC5cOnHqBUV/7q
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
lUA=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{1323, 3688, 3686}}], 
               
               PolygonBox[{{1327, 3707, 3708, 609, 570}, {1328, 3709, 3710, 
                611, 572}}], 
               PolygonBox[{{1324, 3689, 3690, 547, 548, 549}}], 
               PolygonBox[{{1320, 3664, 3665, 871, 1227, 1051, 532}}], 
               
               PolygonBox[{{1341, 3737, 3738, 1065, 889, 760, 671, 612}, {
                1340, 3735, 3736, 1063, 887, 758, 669, 610}, {1354, 3654, 
                3655, 573, 526, 1066, 890, 761}, {1357, 3704, 3702, 605, 566, 
                1095, 919, 790}}], 
               
               PolygonBox[{{1347, 3705, 3706, 567, 1096, 920, 791, 702, 
                642}, {1342, 3691, 3692, 550, 1082, 906, 777, 688, 629}, {
                1348, 3652, 3653, 571, 524, 1064, 888, 759, 670}}], 
               
               PolygonBox[{{1339, 3648, 3649, 520, 521, 1061, 885, 756, 667, 
                608}, {1326, 3646, 3647, 519, 1060, 884, 755, 666, 607, 
                568}, {606, 3644, 3645, 701, 641, 518, 1059, 883, 754, 665}, {
                1351, 3711, 3712, 672, 613, 574, 1098, 922, 793, 704}}], 
               
               PolygonBox[{{1353, 3733, 3734, 590, 1111, 935, 806, 717, 657, 
                1141, 965, 836, 747}, {668, 3650, 3651, 569, 1097, 921, 792, 
                703, 643, 522, 1062, 886, 757}}], 
               
               PolygonBox[{{1271, 3741, 3742, 1083, 907, 778, 1190, 1014, 689,
                 1154, 978, 1251, 849, 1216, 1040}}], 
               
               PolygonBox[{{1262, 3656, 3657, 644, 527, 1067, 891, 762, 673, 
                1143, 967, 838, 614, 1114, 938, 1236, 809, 1196, 1020}, {528, 
                3713, 3714, 575, 1099, 923, 794, 705, 645, 1129, 953, 824, 
                735, 1173, 997, 868, 1225, 1049, 1277}}], 
               
               PolygonBox[{{1157, 3660, 3661, 1278, 530, 1070, 894, 765, 676, 
                617, 1117, 941, 812, 723, 578, 1102, 926, 797, 1192, 1016, 
                1261, 708}}], 
               
               PolygonBox[{{1239, 3662, 3663, 1253, 852, 1218, 1042, 648, 
                1132, 956, 827, 738, 531, 1071, 895, 766, 677, 1146, 970, 841,
                 1210, 1034, 618, 1118, 942}}], 
               
               PolygonBox[{{1258, 3719, 3720, 813, 1199, 1023, 724, 1167, 991,
                 862, 579, 1103, 927, 798, 709, 1158, 982, 853, 649, 1133, 
                957, 828, 1205, 1029, 739, 1176, 1000}}], 
               PolygonBox[{{561, 3695, 3693, 599, 560, 1092, 916, 787, 1356, 
                698, 638, 600, 1113, 937, 808, 719, 1352, 659, 1142, 966, 837,
                 748, 1182, 1006, 877, 1229, 1053, 1279}, {1050, 3717, 3718, 
                1263, 722, 1166, 990, 861, 577, 1101, 925, 796, 707, 1156, 
                980, 851, 647, 1131, 955, 826, 1204, 1028, 737, 1175, 999, 
                1257, 870, 1226}}], 
               
               PolygonBox[{{1022, 3658, 3659, 1041, 1272, 646, 1130, 954, 
                1242, 825, 1203, 1027, 736, 1174, 998, 869, 529, 1069, 893, 
                764, 675, 1145, 969, 840, 616, 1116, 940, 1238, 811, 1198}}], 
               
               
               PolygonBox[{{850, 3715, 3716, 892, 1230, 763, 1183, 1007, 674, 
                1144, 968, 839, 1209, 1033, 615, 1115, 939, 1237, 810, 1197, 
                1021, 721, 1165, 989, 1254, 860, 1221, 1045, 1274, 576, 1100, 
                924, 1232, 795, 1191, 1015, 1260, 706, 1155, 979, 1252}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{545, 3687, 3686, 546}, {563, 3696, 3697, 1325}, {
                544, 3684, 3685, 1322}}], 
               PolygonBox[{{1058, 3703, 3702, 664, 753, 882}}], 
               PolygonBox[{{733, 3731, 3732, 543, 589, 867, 996, 1172}}], 
               
               PolygonBox[{{565, 3700, 3701, 1346, 640, 700, 789, 918, 
                1094}, {512, 3638, 3639, 1335, 601, 660, 749, 878, 1054}}], 
               
               PolygonBox[{{1269, 3721, 3722, 1329, 580, 725, 814, 943, 1119, 
                619}, {534, 3666, 3667, 1104, 581, 620, 679, 768, 897, 
                1073}, {639, 3642, 3643, 1337, 604, 663, 752, 881, 1057, 
                516}}], 
               
               PolygonBox[{{562, 3640, 3641, 1336, 602, 661, 750, 879, 1055, 
                514, 513}}], 
               
               PolygonBox[{{1072, 3739, 3740, 1211, 842, 1246, 971, 1147, 678,
                 1008, 1184, 767, 896}, {1056, 3698, 3699, 1350, 699, 788, 
                917, 1093, 564, 603, 662, 751, 880}}], 
               
               PolygonBox[{{542, 3682, 3683, 1266, 1026, 1202, 822, 1241, 951,
                 1127, 628, 687, 776, 905, 1081}}], 
               
               PolygonBox[{{775, 3729, 3730, 1330, 588, 732, 821, 950, 1126, 
                627, 848, 977, 1153, 686, 1013, 1189}}], 
               
               PolygonBox[{{843, 3723, 3724, 1206, 830, 1243, 959, 1135, 651, 
                855, 984, 1160, 711, 800, 929, 1105, 582, 726, 815, 944, 1120,
                 621, 1036, 1212}, {1267, 3670, 3671, 583, 1275, 1046, 1222, 
                863, 992, 1168, 727, 816, 945, 1121, 622, 681, 770, 899, 1075,
                 536, 872, 1001, 1177, 741}}], 
               PolygonBox[CompressedData["
1:eJwVzMErw3EcxvEv25mLshVpxT+Awy5ycKMcZGtyYTlqiCMXKazV9g+sUMTO
zjgsKT8tLiIHjaSVAzdOXju8e97P8/32SeVXZgqdIYQ4kniLhbDQFcIi9nja
Q78PfTLCsu0LVd6yT/A6NvSKHmFIP0HWNqUn5A3ytk/5gJz7c3jld/YtWfP3
hx/xmNzBKE/aPzCuX2HVVtJz/An77fv6H6/xlDzArPsZRHzTfurPNz/kHXIb
w7zX/o4x/QIFW1HP8kfs6tf6Lz/jA/JeNmTZ/QrW9XL7j+xBHfPeX1Dit94G
+TEy+qT+jBH9HEu2Nb1bXmLa1pT/GNE4xg==
                "]], 
               
               PolygonBox[{{844, 3725, 3726, 832, 1244, 961, 1137, 653, 857, 
                986, 1162, 713, 802, 931, 1107, 584, 864, 993, 1169, 728, 817,
                 946, 1122, 623, 1037, 1213}}], 
               
               PolygonBox[{{963, 3678, 3679, 1171, 731, 1265, 1025, 1201, 820,
                 949, 1125, 626, 847, 976, 1152, 685, 774, 903, 1079, 540, 
                875, 1004, 1180, 745, 1032, 1208, 834, 1245}}], 
               
               PolygonBox[{{585, 3676, 3677, 1151, 684, 1259, 1012, 1188, 773,
                 902, 1078, 539, 874, 1003, 1179, 744, 833, 962, 1138, 654, 
                1043, 1219, 858, 987, 1163, 714, 1019, 1195, 803, 1235, 932, 
                1108}}], 
               
               PolygonBox[{{1207, 3674, 3675, 1047, 1223, 865, 1255, 994, 
                1170, 729, 1264, 1024, 1200, 818, 1240, 947, 1123, 624, 1270, 
                1038, 1214, 845, 1249, 974, 1150, 683, 1011, 1187, 772, 901, 
                1077, 538, 873, 1002, 1178, 743, 1268, 1031}}], 
               PolygonBox[CompressedData["
1:eJwNyzlSAmEQgNFWJFIRvYGR4BqImqgDUkYWLrgUsRGJkCG43AC34RLGgoqX
8AiexRe86un+/lm8btdbkxExQY3mVEQrF3FDJRvxKP6wkIkYUNU37NvalfnA
mHkt5UBft19S9ube/CavvVHR1+xb2oV5xxdH9jn9lbI3q27nJO4985Oc9kKi
r9hLWt3scuh7ZM7qz+x7s2w/45YhM+5P7GlF+6Z/Ts0OH0xrfXb1gj3ll2Pv
ltzfaWgnbn/s2Mf8Awo9H1Y=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwd1AW4VUUUBtBLd3fzSJWWlgaRkO5SOqQbAxUTVELFBBQQCwFFpLu7u8PA
ADvBXNvvY/HvPXPufXPOnLlJfUa0G54skUiUSp5IRN7vv/RcZbn+oOzFz4zT
r5LNuB5j+vMyvuBu9VuyChfVJ+RA5qq3y07x5VQWz8ti7FdPY6O6DTfVfflQ
XZ9v1IuwtMQD+gysUI+nBQv0VbmknkcVXtAX54B6OoVTJRL9ZAoeNJ6RleoJ
tCSb+aoyk0wpE6n+/5dIHctVpJEP+UwmVsXzoRXZzVWTLxovwUH1DPqTx1xa
OdF4ZlbH+mlNdWYaK8mheBYMIB0PG8vCmlgrBXxPG/m2sWpcVs+nBi/pS3E4
7pmB5HV9evmI8aysjbXTlnf01bkS+0SSa2vKl42V5kjcC5vUbflTPYiP1A24
pj4tB7NYvVt2I2Xsi/5RmY116kOyNxPVq2VzvuUX/QU5ghu0078ra8Re86n+
pBzE7yzQ75Cd+YFkcQ1j+Ys7zL8ib+ErjuqPyn78ykz95vg7cb36shzNfeql
smE8Q8/huv6MeghL1Htkd1LF+6KfJLOzPvaINfG+x99Qt+c9dU0+i72imO+s
JV81divHYr8YzMf6RvE84j2P947H9DnYEHtHQZ/vIN+Pe+Tz2D9q85r+No7H
3jGEfK7PLB83npONsR90JIe5OvJ142U4Ec+MoWThCWO52KQu7tpJshN1mWW8
LCfjXihifpjMypPGc7M51k9ncpqvF2eKp8zlYUusiy7UJ7Nrsse64lyrc8pc
cT7VuePskFKdN+4rjqM6f5yFOJPqgrIQadSFY00UJa0+Kc6RLBb3Qnp1Cfm0
deRla9wvXWkQ92++pJxsLh/b4r7oFmsy11DONl6OU/HsGU5+c6XkFOP52R73
S3cW6mvxRbzbNGKOvjynYx8YwTL9nXwXZ4zSPKMvwI5YM2vVLfhN3YMP1LW5
Gu8cO9VdSB7fpX9DVuCM+pjszyz1Ftmev9Uj+UTdmO/VZ+VQlqr3yh78ROp4
7xjPP3HGzD8rC/IlO/WHZZ8410zWr5Mt457i/OovypHc5B79IlknPh/vNo15
U1+Rs+qSnutsuVXfIf6uehTL1XfFb0CcH/bF95Emzpf+OVmIXeojsi9T1Otl
K/5QX5KjuFe9WNblWvxu6E/Fb0Jcx0L9LtmVH0kR55px8fxiHebnykp8zTn9
cTkg9ok5+m2yYzxf/tVfkWP4k9H6FbJJfL/6nBzGMvX+WB9p44zrp8rC7I53
gw3q1txQ92SJul6sI94NmjBPfzvn431gDGWYZqwIe2If4wx51r1k0zjP6rJy
uvmi7I1nSm9ym2smy1GeDPoKsiIZ1ZXkDJ9JYp+6hLGpsg/NmW+8Mhdir+Os
mh8rVxprGu9avI8cUPckXZwdJsSzi3sx9x9pJAWT
               "]]}, 
             Annotation[#, "Charting`Private`Tag$70486#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[{512, 1054, 878, 749, 660, 601, 1335}], 
              LineBox[{562, 513, 514, 1055, 879, 750, 661, 602, 1336}], 
              LineBox[{639, 516, 1057, 881, 752, 663, 604, 1337}], 
              LineBox[{701, 641, 518, 1059, 883, 754, 665, 606}], 
              LineBox[{519, 1060, 884, 755, 666, 607, 568, 1326}], 
              LineBox[{520, 521, 1061, 885, 756, 667, 608, 1339}], 
              
              LineBox[{569, 1097, 921, 792, 703, 643, 522, 1062, 886, 757, 
               668}], 
              LineBox[{571, 524, 1064, 888, 759, 670, 1348}], 
              LineBox[{573, 526, 1066, 890, 761, 1354}], 
              
              LineBox[{644, 527, 1067, 891, 762, 673, 1143, 967, 838, 614, 
               1114, 938, 1236, 809, 1196, 1020, 1262}], 
              
              LineBox[{1041, 1272, 646, 1130, 954, 1242, 825, 1203, 1027, 736,
                1174, 998, 869, 529, 1069, 893, 764, 675, 1145, 969, 840, 616,
                1116, 940, 1238, 811, 1198, 1022}], 
              
              LineBox[{1278, 530, 1070, 894, 765, 676, 617, 1117, 941, 812, 
               723, 578, 1102, 926, 797, 1192, 1016, 1261, 708, 1157}], 
              
              LineBox[{1253, 852, 1218, 1042, 648, 1132, 956, 827, 738, 531, 
               1071, 895, 766, 677, 1146, 970, 841, 1210, 1034, 618, 1118, 
               942, 1239}], 
              LineBox[{871, 1227, 1051, 532, 1320}], 
              LineBox[{534, 1073, 897, 768, 679, 620, 581, 1104}], 
              
              LineBox[{928, 1233, 799, 1193, 1017, 710, 1159, 983, 854, 650, 
               1134, 958, 829, 740, 535, 1074, 898, 769, 1185, 1009, 680, 
               1148, 972}], 
              
              LineBox[{1267, 741, 1177, 1001, 872, 536, 1075, 899, 770, 681, 
               622, 1121, 945, 816, 727, 1168, 992, 863, 1222, 1046, 1275, 
               583}], 
              
              LineBox[{1234, 801, 1194, 1018, 712, 1161, 985, 856, 652, 1136, 
               960, 831, 742, 537, 1076, 900, 771, 1186, 1010, 682, 1149, 973,
                1248}], 
              
              LineBox[{1207, 1031, 1268, 743, 1178, 1002, 873, 538, 1077, 901,
                772, 1187, 1011, 683, 1150, 974, 1249, 845, 1214, 1038, 1270, 
               624, 1123, 947, 1240, 818, 1200, 1024, 1264, 729, 1170, 994, 
               1255, 865, 1223, 1047}], 
              
              LineBox[{585, 1108, 932, 1235, 803, 1195, 1019, 714, 1163, 987, 
               858, 1219, 1043, 654, 1138, 962, 833, 744, 1179, 1003, 874, 
               539, 1078, 902, 773, 1188, 1012, 1259, 684, 1151}], 
              
              LineBox[{963, 1245, 834, 1208, 1032, 745, 1180, 1004, 875, 540, 
               1079, 903, 774, 685, 1152, 976, 847, 626, 1125, 949, 820, 1201,
                1025, 1265, 731, 1171}], 
              
              LineBox[{995, 1256, 866, 1224, 1048, 587, 1110, 934, 805, 716, 
               656, 1140, 964, 835, 746, 1181, 1005, 876, 1228, 1052, 541, 
               1080, 904}], 
              
              LineBox[{542, 1081, 905, 776, 687, 628, 1127, 951, 1241, 822, 
               1202, 1026, 1266}], 
              LineBox[{544, 1322}], 
              LineBox[{545, 546, 3686, 1323}], 
              LineBox[{547, 548, 549, 1324}], 
              LineBox[{550, 1082, 906, 777, 688, 629, 1342}], 
              LineBox[CompressedData["
1:eJwV0LcyhHEUhvEjVVipVqiszEiNHGbMMMLKrcJolk7mCsRdtZpW5gJ0uANX
YNwCv6945pz3fc7/K766ta3MZkFErGOjOOKlKKIX34URM1jR3cj1mC6J+NTl
kEYfd6IvxZ28jVl0umsw+/lTrgz38g7m0IgB7kxfjgd53JtdM4Mue5M56Oac
T+FR3ks6bt5sxhB/wVVgUv+k28cCuuUWc9jNJV+JZ/kgecctmq0Y4XNcFV7k
Qyyhx02bOcrnuWq8ykfJN7lsKmLZ3o4xN1d8Daa4N91x8u+wyt3q0/iSJ/h8
8q/077px/MjX8q89iw97Lf7Qwf0DZswr4w==
               "]], 
              LineBox[{563, 1325}], 
              
              LineBox[{1056, 880, 751, 662, 603, 564, 1093, 917, 788, 699, 
               1350}], 
              LineBox[{565, 1094, 918, 789, 700, 640, 1346}], 
              LineBox[{1058, 882, 753, 664, 3702, 605, 566, 1095, 919, 790, 
               1357}], 
              LineBox[{567, 1096, 920, 791, 702, 642, 1347}], 
              LineBox[{609, 570, 1327}], 
              LineBox[{611, 572, 1328}], 
              LineBox[{672, 613, 574, 1098, 922, 793, 704, 1351}], 
              
              LineBox[{575, 1099, 923, 794, 705, 645, 1129, 953, 824, 735, 
               1173, 997, 868, 1225, 1049, 1277, 528}], 
              
              LineBox[{892, 1230, 763, 1183, 1007, 674, 1144, 968, 839, 1209, 
               1033, 615, 1115, 939, 1237, 810, 1197, 1021, 721, 1165, 989, 
               1254, 860, 1221, 1045, 1274, 576, 1100, 924, 1232, 795, 1191, 
               1015, 1260, 706, 1155, 979, 1252, 850}], 
              
              LineBox[{1263, 722, 1166, 990, 861, 577, 1101, 925, 796, 707, 
               1156, 980, 851, 647, 1131, 955, 826, 1204, 1028, 737, 1175, 
               999, 1257, 870, 1226, 1050}], 
              
              LineBox[{813, 1199, 1023, 724, 1167, 991, 862, 579, 1103, 927, 
               798, 709, 1158, 982, 853, 649, 1133, 957, 828, 1205, 1029, 739,
                1176, 1000, 1258}], 
              LineBox[{1269, 619, 1119, 943, 814, 725, 580, 1329}], 
              
              LineBox[{843, 1212, 1036, 621, 1120, 944, 815, 726, 582, 1105, 
               929, 800, 711, 1160, 984, 855, 651, 1135, 959, 1243, 830, 
               1206}], 
              
              LineBox[{844, 1213, 1037, 623, 1122, 946, 817, 728, 1169, 993, 
               864, 584, 1107, 931, 802, 713, 1162, 986, 857, 653, 1137, 961, 
               1244, 832}], 
              
              LineBox[{975, 1250, 846, 1215, 1039, 625, 1124, 948, 819, 730, 
               586, 1109, 933, 804, 715, 1164, 988, 859, 1220, 1044, 1273, 
               655, 1139}], 
              
              LineBox[{775, 1189, 1013, 686, 1153, 977, 848, 627, 1126, 950, 
               821, 732, 588, 1330}], 
              LineBox[{733, 1172, 996, 867, 589, 543}], 
              
              LineBox[{590, 1111, 935, 806, 717, 657, 1141, 965, 836, 747, 
               1353}], 
              LineBox[{1063, 887, 758, 669, 610, 1340}], 
              LineBox[{1065, 889, 760, 671, 612, 1341}], 
              LineBox[{1072, 896, 767, 1184, 1008, 678, 1147, 971, 1246, 842, 
               1211}], 
              
              LineBox[{1083, 907, 778, 1190, 1014, 689, 1154, 978, 1251, 849, 
               1216, 1040, 1271}]}, 
             Annotation[#, "Charting`Private`Tag$70486#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFVUYBdALSHcpXRKCdJc00kgjEhKSktIp3Y1goIh0g4FgENJId3en
NEjpOj/W8+595tw7w9yZj4wtu9TpHCUSieSOGokcih6J9I4ZiUTlNnNiRCLH
zJY840P9L7M698Me/ZLZmbflZWYRjslnzHZMkPeEz4bvkKMzXc7ARrkX2+U6
PJDLslYuzyX5aw67rj56NObqjcjMcr0ox+WJxGCGnpG/5N6U44jP97X2BvP0
j8hCTI46dozjnOAkp+hnb3Tm29OYrMTitGP9rcdggd6EbMTmS2uZ2CT3oXy4
D/YPsBaThXpT3iEOX4X7xma5LxU4a/9Aa7FYpDcjOyv0YpyQJxE33Bs9M1vk
flTkN70Cl+VvOOf7BumxWax/zCa5BnfkHKyUi3NSnsxeuRH/yvHC98hZ2Cqf
MtvQX95h1uVhoF81u/GK9/XfzYr8wxX9vPkpz5mpHzSb8iR8Rr9h9uA/zrvu
z8044TpZ4vhxsxXN5c1mTe7Kl80uvCuvMktwKtxLsz1T5H3mR+HccnxmylnZ
Jg9gp1yPR3Il/gj/Bq7K33LB9QzW47JUb0FOftRLclqeSoKwX8/Gdnkglbno
80OsxWOZ3pJcJOQ7a++wQx5ElfBe2T/UWnyW663ITSJmWcvOTvlzqoZ7YP8w
awlYoX9CHhJzxbGrXOM6NxhuX0JWOt6avCThpmMjrCdild6GfCTle2s5+Fse
TDVu2T/SWmJ+1NuSn2TMDr8Ju+QhVOe2/aOsJeEnvR0F+El/jzPyNJLzg56T
3fJQanDH50dbS8rPensK8rNeirPyF7zJHD0Xe+Rh/C3X57Fckz/lSlwLvwGH
5Ga8lu86zxg5Gb/oHdgifxCeZ7kQv8ilORfeM7MD0+X9ZuNwHl7o183uvCXP
NXOH55a9+mmzbXjXGK7vMhuE5zC8F/o187NwTeHc+jqzMve4Hp5Ls2M4D7P0
w+bHPA3vUfg9zZ7hmv17xprJWW39hPlJeB/lrWat8J1yYVbLZcI7KM/ggNyE
l3IK5sl52CePoBbr9SrcCM8J95xvnP4mv+odKUJK5lvLy355JLW5b//4cI9Y
o3eiKKl44NgE6ylYq3emGKl56NgjHvOEp0y0LyW/Od6F4qRhgbV8HJBHUYdn
9k+ylorf9a6UIC0LreXnoDyauvxr/2RrqflD70ZJftXLckH+knQs0gtwSB7D
brlh+G3kemyQq3Iz/H0wOzFbPmI2J8Jz55tipuFPx06arcMzIW8za/OA++E9
N7uG3ym8S/oasxwX5a9Iz2K9IIflsdTnhXNMtZaWdXp3SpGBJdYKcUQeRwNe
2j/NWjrW6z0oTUZeOfaa/4joUYhKtPBe2p+eDXJPypCJpdYKc1QeT0M26tW4
Ff4OcFRuQZSwRq9wf2L5P92x/wGZ6zfR
               "]]}, 
             Annotation[#, "Charting`Private`Tag$70486#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
9n80rK3u
               "]]}, 
             Annotation[#, "Charting`Private`Tag$70486#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfclnMcxfG7jNAyIioU2SNkr1ChbKEh7Snt7D1SNBGVUUIqDaOM9t57
y6hsZWQUhfA+f3xe33PO77qe53ru6/c791OpWccbOxQpFAqbihYKdYsXCneW
LBTWlSgUbsZ2/m08hZfk/8juRzmsldXDXfL1/C3Ywb+Dp/GyfLfsAZTHOll9
3C3/mK+LP/h3MUlWHi/KzkMv2Sv8v/SDqID1sga4R76Br4c/+fcwWVYBL8nO
R2/ZEP4/+iEcji/4yzCT/tj6IvokvMXXwq2ye/lP6PrYya/jz8EH/Hh+Cn04
Xub/NRvjAnqLWRsL6eKlCoU76D6uH2oWUFb2sLVddAMcQX9pVkcla7P4fc3b
+dPMDe5dTJ+c38ePtl7UbJ5nNmvz2+jrUZlfzpc2O/FVzYbuv4/+VF6Gb5DP
mq+LXdbWm+fiQ/kEfmqeCa/wF2IrfRUW0X2tv0oXwSP8kfhEtoQ/BWP4q3Cb
7H7+s3yW+It/H/0wTF4Uj8or4lNZIzwg+5xviL/5D9AfjfGgtY35ufiH/xDP
oAmaohkecs0m642wm/8Iz6I5Hra2Wd4474qfiOfQAo9Y+0LeBP9l/2EAWuJR
a1/Km6KAybLn0Qqt0QaPueYra81QBFNkL+A1+R54TFYJn8na4nHZ13zzvEdM
lU2THYkh/EUYKHud3xOP80fhK7oGZtOfW19Kn4qx/NW4XfYE/w3dAntkb/Pn
4SN6mvXpdEWUsw+G5u+lm+Bi+gfzaiymS1hvTw9yzxvmXjhU9kTeJX0rjueP
5r+ma+Iofg6/n9mOP93c6P5ldJXsKX5cnstskf1sXsP/Qt+AY/gV/P5mZ76d
e7ub38paYk9s4M/HRHq69Rk5M3iVr4bBsuH83ujOV8Ym2R14UvYd3wp7YYbs
RbwpL4YnZcdgs6w9esi+51tjb8xM76EDOqITOqMLuqJb+hI93bfF9W1QDLPS
fxgh3wc9ZMemg9KX6VPZVr4t9sHs9B1GyvdFT9lx6Yj0ZfpU9kPed3oCc2Qz
8/ljGH8JhshG8fvhKf747B/Z8nQK3uavxT2yXvyPdLu8u5zn9Bgm0XOtz6KP
xmv8pfiRvgZL6KHW36KL4+mcW7MhTqC/MS/H3OwR163InsA7eZfecUv6OvpX
80YcK1vJH2B24c8073Vfb/on+cHp0vQ8Xw/H8cXTH/SFOT/85Lwrs3X6yJzn
/tnpRZTnX885NpvmGc3L+J/oa7GULinrkP3kvtFmCfRK55i34UT6W/MKzMvf
6LqV9Bl4l78ev9F1sIq+z3of+me6fc5VeoC/CFPo+dbnZO/jDb46hsnG8CXR
mz8pvzN9ir6ybXyHPCsWpGcwVl4KfWQn47v0afpW9gvfEaWwML2CcfLS6Cs7
Bd+nY9O3sl/5TiiNRTn/+d6X749+slOxJX2bDpb9xnfOuU0vpUswNXvfZ9km
HWUudu3cvGMMt1YDw/P/AX8A+vNVsDVdnd6W/c53yX7AkpzT/H8gPxDPyE5L
Z6W/0+Wy7XxXHIilOW/5f0B+EJ6VnZ69m05Pv8t28N1wEJblvGG8vAyek52R
vZF+T+fL/uDvRBksz/nCBPnBGCCrip/T7+l/2Z/8Xdm3WJFzku9A+SF4XnYm
tqWzMVC2k78bh2ClbF72ON7ka2J0vhP5sniBPyvdKVvFV8V7/A3oLhvE78r5
Rlls5KthGr3K+vz0N0bwl2NMvlPT8RjIn509RF+J+Tmj1lfnTGJ8+tM7bZVz
S/9u3oTV+ezlXdOlrh9s/pW/J+fY3MnXz++gN5mXoKK16ek9sy1fxVzt3gU5
n6jAj7RexGyW82dekc853ZFe4pdlb5sdcw7Nsfnupw8L/CDru+lGOCd73ayF
BTmrrl1Dn4UJfB1sp2/GGrpHviPov3OWcRg285diBr3G+sI8F0bxV2Jc/r/g
y2Ewf24+I9la/my8z9+EHfQtWJs96Dm75TnMnq79H+dvm1U=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$70486#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{1372, 1439, 1371}], 
             LineBox[{1374, 1440, 1373}], 
             LineBox[{1376, 1441, 1375}], 
             LineBox[{1377, 1442, 720}], 
             LineBox[{1379, 1443, 1378}], 
             LineBox[{1380, 1444, 1247}], 
             LineBox[{1106, 1445, 930}], 
             LineBox[{1382, 1446, 1381}], 
             LineBox[{1384, 1447, 1383}], 
             LineBox[{1385, 1448, 1030}], 
             LineBox[{1319, 1449, 1068}], 
             LineBox[{1386, 533}], 
             LineBox[{1387, 1450, 1321}], 
             LineBox[{1389, 1451, 1388}], 
             LineBox[{1391, 1452, 1390}], 
             LineBox[{1393, 1453, 1392}], 
             LineBox[{1394, 1454, 515}], 
             LineBox[{1396, 1455, 1395}], 
             LineBox[{1397, 1456, 523}], 
             LineBox[{1398, 1457, 525}], 
             LineBox[{1400, 1458, 1399}], 
             LineBox[{1402, 1459, 1401}], 
             LineBox[{1404, 1460, 1403}], 
             LineBox[{1406, 1461, 1405}], 
             LineBox[{1408, 1462, 1407}], 
             LineBox[{1409, 1463, 1338}], 
             LineBox[{1411, 1464, 1410}], 
             LineBox[{1413, 1465, 1412}], 
             LineBox[{1415, 1466, 1414}], 
             LineBox[{1417, 1467, 1416}], 
             LineBox[{1418, 1468, 517}], 
             LineBox[{1420, 1469, 1419}], 
             LineBox[{1422, 1470, 1421}], 
             LineBox[{1424, 1471, 1423}], 
             LineBox[{1426, 1472, 1425}], 
             LineBox[{1427, 1473, 551}], 
             LineBox[{1429, 1474, 1428}], 
             LineBox[{1431, 1475, 1430}], 
             LineBox[{1359, 1476, 1217}], 
             LineBox[{1360, 1477, 1231}], 
             LineBox[{1432, 1478, 1361}], 
             LineBox[{1362, 1479, 1276}], 
             LineBox[{1433, 1480, 1363}], 
             LineBox[{1434, 1481, 1364}], 
             LineBox[{1365, 1482, 981}], 
             LineBox[{1435, 1483, 1366}], 
             LineBox[{1367, 1484, 1035}], 
             LineBox[{1436, 1485, 1368}], 
             LineBox[{1437, 1486, 1369}], 
             LineBox[{1438, 1487, 1370}], 
             
             LineBox[{1489, 1490, 
              1488}]}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution with discrete integrator\"", 
           TraditionalForm], PlotRange -> {{0., 6.24999987244898}, {-4, 4}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.875678192389933*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"4791b6de-dd9c-492f-8615-675f403fac2a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Feed Forward solution with feedback for any initial condition ( unconstrained)\
\>", "Section",
 CellChangeTimes->{{3.8676786482972174`*^9, 3.8676786887393475`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a964257c-e879-4ee8-960c-c24d2796eb82"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"n", "=", "200"}], ";", 
    RowBox[{"\[Tau]", "=", "5"}], ";", 
    RowBox[{"\[Tau]1", "=", 
     RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
    RowBox[{"A", "=", "0.2"}], ";", 
    RowBox[{"order", " ", "=", " ", "4"}], ";", 
    RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
    RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
    RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
    RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
    RowBox[{"nGrid", " ", "=", " ", "60"}], ";", 
    RowBox[{"maxJ", " ", "=", " ", 
     RowBox[{
      RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ICs = \>\"", ",", "ICs"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Energy Initial = \>\"", ",", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time1", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K1"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time2", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a2", ",", "xdot1a2", ",", "\[Theta]1a2", ",", "\[Theta]dot1a2", 
         ",", "u1a2", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K2"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum2", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
      "u1b", ",", "J1"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K1"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J2"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a2", ",", "xdot1a2", ",", 
      "\[Theta]1a2", ",", "\[Theta]dot1a2", ",", "u1a2", ",", "A", ",", 
      "uMax", ",", "K2"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ff computation time case 1 = \>\"", ",", "time1"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ff computation time case 2 = \>\"", ",", "time2"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Cost case 1 = \>\"", ",", "J1"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Cost case 2 = \>\"", ",", "J2"}], "]"}], ";"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution 1\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   StyleBox["p1a2",
    FontWeight->"Plain"], " ", "=", " ", 
   StyleBox[
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a2", "[", "t", "]"}], ",", 
        RowBox[{"u1a2", "[", "t", "]"}], ",", 
        RowBox[{"x1a2", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a2", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a2", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution 2\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}],
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1b", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<feedback solution with backward integration \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<feedback solution with discrete integrator\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1a", ",", "p1a2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p1b", ",", "p1c"}], "}"}]}], "}"}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}, {3.8648376392630434`*^9, 
   3.8648376724073963`*^9}, {3.864837714278944*^9, 3.864837730198832*^9}, {
   3.8648378000064077`*^9, 3.8648378125593743`*^9}, {3.8649192769420185`*^9, 
   3.8649193477849746`*^9}, {3.864919494855133*^9, 3.8649194949211097`*^9}, {
   3.8649195280303416`*^9, 3.8649195281572976`*^9}, {3.8653430179727*^9, 
   3.865343036098905*^9}, 3.865343126059147*^9, {3.8653475497269955`*^9, 
   3.8653475530049467`*^9}, {3.8653477236523952`*^9, 3.865347782090714*^9}, {
   3.8653478250659747`*^9, 3.8653479145413723`*^9}, {3.865347947982681*^9, 
   3.8653479716121283`*^9}, {3.8653525506493053`*^9, 3.865352599733616*^9}, {
   3.865352652578721*^9, 3.865352654559091*^9}, {3.865353691929463*^9, 
   3.8653537130737047`*^9}, {3.8653538376038947`*^9, 
   3.8653538378768077`*^9}, {3.86535394844846*^9, 3.8653539491322412`*^9}, {
   3.865356726928239*^9, 3.86535675400958*^9}, {3.8653568966909695`*^9, 
   3.8653569073245697`*^9}, {3.8653569602766423`*^9, 3.865356975731701*^9}, {
   3.865357167158506*^9, 3.865357170606405*^9}, {3.865357223946353*^9, 
   3.8653572240363226`*^9}, {3.8653573936860905`*^9, 3.8653574653461814`*^9}, 
   3.8653581484318137`*^9, {3.8653592129605074`*^9, 3.86535921807887*^9}, {
   3.865449250153057*^9, 3.8654493036779404`*^9}, {3.8659655743007927`*^9, 
   3.8659655800469513`*^9}, {3.865965617846839*^9, 3.865965644481305*^9}, {
   3.865965768794471*^9, 3.8659657912472773`*^9}, {3.865965935003215*^9, 
   3.865965935326112*^9}, {3.8659659868356075`*^9, 3.865966006077441*^9}, 
   3.865966083507631*^9, 3.8659664582355595`*^9, {3.86596655432277*^9, 
   3.865966563962682*^9}, 3.8659666064800587`*^9, {3.8659666379409776`*^9, 
   3.865966662002268*^9}, {3.865966724901114*^9, 3.865966734984883*^9}, {
   3.8659667752089934`*^9, 3.8659667994792185`*^9}, {3.8659670983784432`*^9, 
   3.865967114308339*^9}, {3.865967415398863*^9, 3.865967415558814*^9}, 
   3.86596806058513*^9, {3.8659697572814713`*^9, 3.865969792480193*^9}, {
   3.865969847631523*^9, 3.8659698777298765`*^9}, {3.8659699125237284`*^9, 
   3.8659699227194633`*^9}, {3.8660520784155097`*^9, 3.866052078606448*^9}, {
   3.866299038992057*^9, 3.866299063807024*^9}, {3.8662991135359306`*^9, 
   3.866299117442664*^9}, {3.866299188589633*^9, 3.86629919001517*^9}, {
   3.866299354438949*^9, 3.866299364496692*^9}, 3.8662994378149586`*^9, 
   3.8662994758636427`*^9, 3.8662995455700784`*^9, {3.866309716236847*^9, 
   3.86630980613275*^9}, {3.8663098363239756`*^9, 3.8663098541502047`*^9}, 
   3.8663105182622347`*^9, 3.866310619892336*^9, 3.8663117939323*^9, {
   3.8665656447826576`*^9, 3.8665656490393023`*^9}, {3.86666037409522*^9, 
   3.8666605929433*^9}, {3.8666606653571625`*^9, 3.8666608053664308`*^9}, {
   3.866660839553507*^9, 3.8666608737455826`*^9}, {3.866661162186427*^9, 
   3.8666611737737226`*^9}, {3.8666653738348045`*^9, 3.866665397429268*^9}, {
   3.8667344208606143`*^9, 3.8667344797394304`*^9}, {3.8667353231215725`*^9, 
   3.866735333097335*^9}, {3.866735385339385*^9, 3.866735418014782*^9}, {
   3.866735702678417*^9, 3.8667357070869875`*^9}, {3.8667358235761895`*^9, 
   3.86673582400605*^9}, {3.866735896269603*^9, 3.866735924112569*^9}, {
   3.8667361218833976`*^9, 3.8667361220503435`*^9}, {3.866737159880598*^9, 
   3.8667371629755936`*^9}, 3.8667373705322485`*^9, {3.8667375563659506`*^9, 
   3.8667375763234744`*^9}, 3.866739987559099*^9, {3.8667402825863724`*^9, 
   3.866740283643031*^9}, {3.8667403886539574`*^9, 3.8667403924007425`*^9}, {
   3.8667405674789343`*^9, 3.8667405865157566`*^9}, {3.8667407977972016`*^9, 
   3.866740821291578*^9}, {3.8671630011884055`*^9, 3.867163020098357*^9}, {
   3.867352977485181*^9, 3.8673529973358107`*^9}, {3.8673530973936853`*^9, 
   3.8673531264093695`*^9}, {3.8673532479253597`*^9, 
   3.8673532480693145`*^9}, {3.867353394522298*^9, 3.867353424387709*^9}, {
   3.8673538177504263`*^9, 3.867353991042793*^9}, {3.86735409649494*^9, 
   3.867354178349663*^9}, {3.8673553380933447`*^9, 3.8673553396948304`*^9}, {
   3.867423858690897*^9, 3.8674239583605523`*^9}, 3.867424003139022*^9, {
   3.867424050904522*^9, 3.867424125774227*^9}, {3.8674241562363405`*^9, 
   3.8674242324536085`*^9}, {3.8674242665505433`*^9, 
   3.8674242818535786`*^9}, {3.867424314162092*^9, 3.8674243698710146`*^9}, {
   3.867424420135703*^9, 3.8674244202186756`*^9}, {3.867424456268978*^9, 
   3.8674244741041913`*^9}, 3.8674246173657007`*^9, {3.8674246693478317`*^9, 
   3.8674246877288685`*^9}, {3.8674247403247986`*^9, 
   3.8674247408206377`*^9}, {3.8674247893518896`*^9, 
   3.8674248932321787`*^9}, {3.867425936549614*^9, 3.867426049116087*^9}, 
   3.8674261141789722`*^9, {3.867426149856395*^9, 3.8674261956245418`*^9}, {
   3.8674262312599783`*^9, 3.867426231496904*^9}, {3.867426262045988*^9, 
   3.8674262624308643`*^9}, {3.8674263520347853`*^9, 
   3.8674263565563188`*^9}, {3.8676860111383543`*^9, 3.8676860173133893`*^9}, 
   3.875452751915073*^9, {3.875452791647418*^9, 3.875452841540835*^9}, {
   3.875678045519475*^9, 3.8756780798325987`*^9}, {3.8756781295516157`*^9, 
   3.875678173139428*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[134]:=",ExpressionUUID->"cdb5bb39-2bd5-427d-9b7c-b452e9e4ae48"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ICs = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["ICs = ", {0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8676786240369353`*^9, {3.8676860011365366`*^9, 3.867686017550314*^9}, 
   3.8676865665926085`*^9, 3.867868708103756*^9, 3.874734239935595*^9, 
   3.875452563106812*^9, 3.8754526282472553`*^9, {3.8754527334177217`*^9, 
   3.875452773122517*^9}, 3.8754528425415087`*^9, {3.875678029424159*^9, 
   3.875678080664383*^9}, 3.875678192479046*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"572b0fe3-abce-4996-8dd5-767522f5545c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy Initial = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2`"}]}],
  SequenceForm["Energy Initial = ", -0.2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8676786240369353`*^9, {3.8676860011365366`*^9, 3.867686017550314*^9}, 
   3.8676865665926085`*^9, 3.867868708103756*^9, 3.874734239935595*^9, 
   3.875452563106812*^9, 3.8754526282472553`*^9, {3.8754527334177217`*^9, 
   3.875452773122517*^9}, 3.8754528425415087`*^9, {3.875678029424159*^9, 
   3.875678080664383*^9}, 3.8756781924808702`*^9},
 CellLabel->
  "During evaluation of \
In[134]:=",ExpressionUUID->"df960ce5-7b89-4eec-a511-f22c09a73ed6"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8676787080462055`*^9, 
  3.867678709339792*^9}},ExpressionUUID->"cf1b83ea-ecb3-4982-abee-\
0ea8327b6be7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation Studies (Distribution of Computation Times)", "Section",
 CellChangeTimes->{{3.8676787559189715`*^9, 3.8676787864822464`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"4a6cc590-f442-4cf2-ba2b-04683823857f"],

Cell[CellGroupData[{

Cell["Define Computation Time function", "Subsection",
 CellChangeTimes->{{3.8672557229786463`*^9, 3.8672557272082777`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"78fba3b7-04b9-4905-84eb-8345b4ac27e1"],

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"ComputationTime", "[", "ICs_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "time", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EInitial", " ", "=", " ", 
        RowBox[{"Energy", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ICs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"time", ",", 
          RowBox[{"{", 
           RowBox[{
           "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",",
             "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
            "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], 
           "}"}]}], "}"}], "=", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Timing", "[", 
          RowBox[{"ffCartPendulum2", "[", 
           RowBox[{
           "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
            "order", ",", "maxIter", ",", "maxError", ",", "uMax", ",", 
            "maxCount", ",", "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], 
          "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Time Taken = \>\"", ",", "time"}], "]"}], ";", 
       "\[IndentingNewLine]", "time"}]}], "\[IndentingNewLine]", "]"}]}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<ICDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<EDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.867184370452484*^9, 3.867184448677465*^9}, {
   3.8671844902671623`*^9, 3.867184495244571*^9}, 3.867184528106059*^9, {
   3.8671862887189293`*^9, 3.8671862925896935`*^9}, {3.867253140769041*^9, 
   3.867253141246888*^9}, {3.8672578912201786`*^9, 3.8672578913411407`*^9}, {
   3.8672595919409623`*^9, 3.867259592079918*^9}, {3.8673405812868757`*^9, 
   3.867340603445762*^9}, 3.8676861679184675`*^9, {3.8676862008239994`*^9, 
   3.86768621012204*^9}, {3.867687507289279*^9, 3.867687529503213*^9}, {
   3.867778587879006*^9, 3.867778594823739*^9}, 3.8677802874741454`*^9, {
   3.867794826980481*^9, 3.867794839563376*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[324]:=",ExpressionUUID->"04eaf6d0-1f9a-4a18-ad3e-f67206cf68a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use the above 200 ICData points for all simulations", "Subsection",
 CellChangeTimes->{{3.867255702607237*^9, 3.86725571325979*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d0d51fee-e20d-49b0-966d-d552bbc9389a"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"numberTests", " ", "=", " ", "200"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "20"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "10"}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"xdotMin", " ", "=", " ", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"xdotMax", " ", "=", " ", "2"}], ";", 
    RowBox[{"\[Theta]Min", " ", "=", " ", 
     RowBox[{"-", "\[Pi]"}]}], ";", 
    RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";", 
    RowBox[{"\[Theta]dotMin", " ", "=", " ", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"TimingData", " ", "=", " ", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"ComputationTime", "[", 
        RowBox[{"ICData", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<TimingDataComputation100.mx\>\"", ",", "TimingData"}], "]"}],
    ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.867184586779293*^9, 3.8671845895114202`*^9}, {
   3.8671846846809797`*^9, 3.8671847053273783`*^9}, 3.8671851118983345`*^9, {
   3.867185164337563*^9, 3.8671852257009335`*^9}, {3.8671852939810944`*^9, 
   3.8671853209264803`*^9}, {3.8671853661800013`*^9, 
   3.8671854973450503`*^9}, {3.867185536305588*^9, 3.867185536836419*^9}, {
   3.867185611716468*^9, 3.86718573374044*^9}, {3.8671857668468494`*^9, 
   3.867185778752042*^9}, {3.867185965776222*^9, 3.8671859904993143`*^9}, {
   3.867186040244404*^9, 3.8671860631090903`*^9}, 3.8671863132360897`*^9, {
   3.867186408939479*^9, 3.867186409331354*^9}, {3.867187144095339*^9, 
   3.8671871689134026`*^9}, {3.8672541096625853`*^9, 3.867254118498727*^9}, {
   3.8672556291819906`*^9, 3.8672556530212784`*^9}, 3.8672556986765084`*^9, {
   3.8672558861018724`*^9, 3.8672558947070885`*^9}, {3.867259675646882*^9, 
   3.8672596869992075`*^9}, {3.867686673047736*^9, 3.8676867391327085`*^9}, {
   3.867687576893133*^9, 3.86768758748676*^9}, {3.867688358085556*^9, 
   3.867688364530505*^9}, {3.8677779882047787`*^9, 3.8677780277068825`*^9}, {
   3.867778600368929*^9, 3.8677786297023516`*^9}, {3.867779644357101*^9, 
   3.8677796488936195`*^9}, {3.8677806992627087`*^9, 3.86778070425708*^9}, {
   3.8677947142482877`*^9, 3.867794718428921*^9}, {3.8677968217382593`*^9, 
   3.8677968252671075`*^9}, {3.8678687260450535`*^9, 3.867868726138022*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"9301bae7-6304-4fff-a5c9-eb3a735b1304"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clean up Bad data points", "Subsection",
 CellChangeTimes->{{3.8677788411723137`*^9, 3.8677788572220745`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d324d000-5ccb-46ff-a97e-cf3e5a7c888d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"TimingData", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ">", "20"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"TimingData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"ComputationTime", "[", 
           RowBox[{"ICData", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<i = \>\"", ",", "i", ",", "\"\<    TimingData = \>\"", ",", 
           RowBox[{"TimingData", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "_"}], "]"}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "162", ",", "numberTests"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.867778872187188*^9, 3.8677789708289843`*^9}, {
   3.8677790138729315`*^9, 3.8677790313552246`*^9}, 3.8677796898612432`*^9, {
   3.8677803277519956`*^9, 3.867780333863999*^9}, {3.867781044592972*^9, 
   3.867781044790907*^9}, 3.8677813440592036`*^9, {3.8677817535775127`*^9, 
   3.8677817539703817`*^9}, {3.8677963806512613`*^9, 3.867796383029484*^9}, {
   3.8677977087186947`*^9, 3.867797709050582*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"8b005441-b926-4a17-a4be-427c8122a419"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Print Final Data", "Subsection",
 CellChangeTimes->{{3.867686784611235*^9, 3.8676867894376993`*^9}, {
  3.8678687378023157`*^9, 3.8678687399966183`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"706d50eb-15aa-4398-b300-5226b2026de9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimingData20", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataComputation20.mx\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8677786526888485`*^9, 3.8677786546012216`*^9}, {
  3.8677796558143606`*^9, 3.8677796795126247`*^9}},
 CellLabel->
  "In[407]:=",ExpressionUUID->"ea9590aa-5d61-4644-b8ea-162b9785801e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.703125`", ",", "0.40625`", ",", "0.453125`", ",", "0.40625`", ",", 
   "0.4375`", ",", "0.390625`", ",", "0.453125`", ",", "0.46875`", ",", 
   "0.421875`", ",", "1.609375`", ",", "0.46875`", ",", "0.421875`", ",", 
   "0.53125`", ",", "1.828125`", ",", "0.421875`", ",", "1.84375`", ",", 
   "2.15625`", ",", "0.5`", ",", "0.921875`", ",", "1.625`", ",", "0.453125`",
    ",", "0.46875`", ",", "0.5`", ",", "0.453125`", ",", "1.65625`", ",", 
   "0.4375`", ",", "0.609375`", ",", "0.484375`", ",", "0.421875`", ",", 
   "0.453125`", ",", "1.1875`", ",", "0.4375`", ",", "0.390625`", ",", 
   "0.328125`", ",", "1.796875`", ",", "1.921875`", ",", "1.9375`", ",", 
   "0.46875`", ",", "1.84375`", ",", "0.390625`", ",", "1.390625`", ",", 
   "1.171875`", ",", "1.53125`", ",", "0.46875`", ",", "0.390625`", ",", 
   "0.515625`", ",", "0.625`", ",", "0.890625`", ",", "0.40625`", ",", 
   "0.328125`", ",", "1.78125`", ",", "0.4375`", ",", "0.546875`", ",", 
   "1.671875`", ",", "0.515625`", ",", "1.75`", ",", "1.890625`", ",", 
   "2.015625`", ",", "0.40625`", ",", "0.65625`", ",", "1.96875`", ",", 
   "0.46875`", ",", "0.421875`", ",", "0.46875`", ",", "0.421875`", ",", 
   "1.59375`", ",", "0.484375`", ",", "1.8125`", ",", "1.8125`", ",", 
   "0.53125`", ",", "2.078125`", ",", "0.390625`", ",", "0.40625`", ",", 
   "0.421875`", ",", "0.453125`", ",", "1.1875`", ",", "0.46875`", ",", 
   "0.4375`", ",", "1.234375`", ",", "0.390625`", ",", "2.015625`", ",", 
   "0.546875`", ",", "0.484375`", ",", "0.484375`", ",", "0.484375`", ",", 
   "0.421875`", ",", "0.46875`", ",", "1.015625`", ",", "0.765625`", ",", 
   "1.75`", ",", "1.9375`", ",", "0.4375`", ",", "1.78125`", ",", "1.984375`",
    ",", "1.90625`", ",", "0.46875`", ",", "1.546875`", ",", "0.453125`", ",",
    "0.46875`", ",", "2.`", ",", "0.453125`", ",", "1.828125`", ",", 
   "0.515625`", ",", "2.015625`", ",", "1.640625`", ",", "0.609375`", ",", 
   "0.453125`", ",", "1.765625`", ",", "0.4375`", ",", "0.4375`", ",", 
   "1.8125`", ",", "0.4375`", ",", "1.890625`", ",", "0.40625`", ",", 
   "1.96875`", ",", "1.78125`", ",", "0.46875`", ",", "1.28125`", ",", 
   "0.390625`", ",", "0.421875`", ",", "0.4375`", ",", "0.375`", ",", 
   "0.71875`", ",", "1.875`", ",", "0.515625`", ",", "1.15625`", ",", 
   "0.46875`", ",", "0.453125`", ",", "1.140625`", ",", "0.4375`", ",", 
   "0.453125`", ",", "0.453125`", ",", "0.5`", ",", "0.46875`", ",", 
   "0.453125`", ",", "1.78125`", ",", "2.015625`", ",", "1.265625`", ",", 
   "0.453125`", ",", "0.84375`", ",", "0.4375`", ",", "1.765625`", ",", 
   "1.921875`", ",", "0.40625`", ",", "0.46875`", ",", "0.46875`", ",", 
   "1.46875`", ",", "0.9375`", ",", "1.6875`", ",", "1.953125`", ",", 
   "0.359375`", ",", "0.515625`", ",", "0.484375`", ",", "0.421875`", ",", 
   "0.421875`", ",", "0.90625`", ",", "1.65625`", ",", "0.59375`", ",", 
   "1.671875`", ",", "0.46875`", ",", "1.9375`", ",", "1.453125`", ",", 
   "0.40625`", ",", "1.359375`", ",", "0.4375`", ",", "0.390625`", ",", 
   "0.453125`", ",", "0.46875`", ",", "1.90625`", ",", "0.53125`", ",", 
   "0.515625`", ",", "0.40625`", ",", "1.828125`", ",", "1.59375`", ",", 
   "0.46875`", ",", "0.46875`", ",", "0.5`", ",", "0.453125`", ",", 
   "1.78125`", ",", "0.453125`", ",", "0.4375`", ",", "0.453125`", ",", 
   "0.421875`", ",", "0.515625`", ",", "0.421875`", ",", "1.796875`", ",", 
   "0.453125`", ",", "1.8125`", ",", "1.796875`", ",", "0.609375`", ",", 
   "0.375`", ",", "1.875`", ",", "0.3125`", ",", "0.640625`", ",", "0.53125`",
    ",", "0.3125`", ",", "0.328125`", ",", "0.71875`", ",", "1.96875`", ",", 
   "0.3125`"}], "}"}]], "Output",
 CellChangeTimes->{3.8677786554659395`*^9, 3.8677796802433834`*^9, 
  3.867779711295246*^9, 3.867782187116974*^9, 3.8677946785049543`*^9, 
  3.867868685136058*^9, 3.8678693904958043`*^9},
 CellLabel->
  "Out[407]=",ExpressionUUID->"d82de120-dde1-4c45-8460-9de9bc816adc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimingData30", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataComputation30.mx\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.867778660333352*^9, 3.8677786633863535`*^9}, {
  3.8677806887441444`*^9, 3.8677806919351025`*^9}},
 CellLabel->
  "In[408]:=",ExpressionUUID->"76513fc9-4bd8-4283-87b2-4644ce9ab7f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.03125`", ",", "0.765625`", ",", "0.78125`", ",", "0.765625`", ",", 
   "0.828125`", ",", "0.734375`", ",", "0.6875`", ",", "0.75`", ",", 
   "0.671875`", ",", "0.734375`", ",", "0.75`", ",", "0.78125`", ",", 
   "0.765625`", ",", "2.78125`", ",", "0.734375`", ",", "3.21875`", ",", 
   "3.1875`", ",", "0.703125`", ",", "0.765625`", ",", "0.734375`", ",", 
   "0.765625`", ",", "0.734375`", ",", "0.765625`", ",", "0.71875`", ",", 
   "1.265625`", ",", "0.703125`", ",", "1.03125`", ",", "0.734375`", ",", 
   "0.75`", ",", "0.765625`", ",", "0.71875`", ",", "0.703125`", ",", "0.75`",
    ",", "0.71875`", ",", "2.75`", ",", "2.71875`", ",", "3.046875`", ",", 
   "0.6875`", ",", "2.890625`", ",", "0.625`", ",", "2.5`", ",", "1.296875`", 
   ",", "3.078125`", ",", "0.75`", ",", "0.734375`", ",", "0.78125`", ",", 
   "0.71875`", ",", "0.65625`", ",", "0.796875`", ",", "0.71875`", ",", 
   "3.46875`", ",", "0.671875`", ",", "0.703125`", ",", "3.0625`", ",", 
   "1.5`", ",", "3.`", ",", "2.734375`", ",", "3.421875`", ",", "0.765625`", 
   ",", "1.40625`", ",", "3.296875`", ",", "0.78125`", ",", "0.75`", ",", 
   "0.78125`", ",", "0.78125`", ",", "3.21875`", ",", "0.765625`", ",", 
   "3.296875`", ",", "3.125`", ",", "0.8125`", ",", "3.3125`", ",", 
   "0.734375`", ",", "0.75`", ",", "0.6875`", ",", "0.71875`", ",", 
   "0.734375`", ",", "0.75`", ",", "0.71875`", ",", "0.8125`", ",", "0.75`", 
   ",", "3.15625`", ",", "0.75`", ",", "2.828125`", ",", "0.765625`", ",", 
   "0.734375`", ",", "0.609375`", ",", "0.609375`", ",", "1.890625`", ",", 
   "2.`", ",", "2.875`", ",", "3.203125`", ",", "0.828125`", ",", "3.203125`",
    ",", "3.4375`", ",", "2.921875`", ",", "0.78125`", ",", "1.484375`", ",", 
   "2.796875`", ",", "0.75`", ",", "2.890625`", ",", "0.703125`", ",", 
   "3.0625`", ",", "0.53125`", ",", "3.125`", ",", "2.890625`", ",", 
   "1.34375`", ",", "0.734375`", ",", "3.`", ",", "0.75`", ",", "0.65625`", 
   ",", "3.140625`", ",", "0.65625`", ",", "3.015625`", ",", "0.703125`", ",",
    "2.796875`", ",", "3.265625`", ",", "0.78125`", ",", "1.5625`", ",", 
   "0.75`", ",", "0.796875`", ",", "0.765625`", ",", "0.703125`", ",", 
   "2.265625`", ",", "3.`", ",", "0.640625`", ",", "1.375`", ",", "0.71875`", 
   ",", "0.703125`", ",", "0.71875`", ",", "0.796875`", ",", "0.734375`", ",",
    "0.703125`", ",", "0.71875`", ",", "0.71875`", ",", "0.765625`", ",", 
   "2.890625`", ",", "2.859375`", ",", "1.34375`", ",", "0.6875`", ",", 
   "1.375`", ",", "0.703125`", ",", "3.328125`", ",", "3.046875`", ",", 
   "0.65625`", ",", "0.703125`", ",", "0.71875`", ",", "2.921875`", ",", 
   "3.75`", ",", "1.828125`", ",", "3.453125`", ",", "1.25`", ",", 
   "0.640625`", ",", "0.6875`", ",", "0.6875`", ",", "0.71875`", ",", 
   "2.015625`", ",", "3.09375`", ",", "2.25`", ",", "3.21875`", ",", 
   "0.65625`", ",", "2.875`", ",", "0.703125`", ",", "3.53125`", ",", 
   "0.6875`", ",", "0.734375`", ",", "1.984375`", ",", "0.71875`", ",", 
   "2.796875`", ",", "2.9375`", ",", "0.65625`", ",", "0.71875`", ",", 
   "0.703125`", ",", "2.9375`", ",", "2.84375`", ",", "0.671875`", ",", 
   "0.703125`", ",", "0.71875`", ",", "0.65625`", ",", "2.734375`", ",", 
   "0.640625`", ",", "0.734375`", ",", "0.734375`", ",", "0.671875`", ",", 
   "0.671875`", ",", "0.703125`", ",", "3.015625`", ",", "2.875`", ",", 
   "3.03125`", ",", "2.84375`", ",", "2.015625`", ",", "0.65625`", ",", 
   "3.03125`", ",", "0.640625`", ",", "1.703125`", ",", "1.75`", ",", 
   "0.640625`", ",", "0.671875`", ",", "0.609375`", ",", "3.171875`", ",", 
   "0.546875`"}], "}"}]], "Output",
 CellChangeTimes->{3.8677786639801598`*^9, 3.8677806927278414`*^9, 
  3.8677821890433445`*^9, 3.8677946803143625`*^9, 3.8678693913545313`*^9},
 CellLabel->
  "Out[408]=",ExpressionUUID->"30c82eac-5c56-464c-beb6-18e0e67d13c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimingData40", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataComputation40.mx\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8677786654696736`*^9, 3.867778668068825*^9}, {
  3.8677821920783567`*^9, 3.867782197349635*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"e88ae3ac-396d-42d2-9a18-12053c7ddc61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.46875`", ",", "1.`", ",", "1.03125`", ",", "3.796875`", ",", "1.046875`",
    ",", "1.`", ",", "1.03125`", ",", "1.0625`", ",", "1.03125`", ",", 
   "0.984375`", ",", "0.953125`", ",", "1.046875`", ",", "1.03125`", ",", 
   "1.09375`", ",", "1.046875`", ",", "4.828125`", ",", "4.6875`", ",", 
   "1.078125`", ",", "1.4375`", ",", "1.0625`", ",", "0.984375`", ",", "1.`", 
   ",", "1.03125`", ",", "1.0625`", ",", "4.65625`", ",", "1.015625`", ",", 
   "4.625`", ",", "1.078125`", ",", "1.`", ",", "1.015625`", ",", "1.125`", 
   ",", "1.046875`", ",", "1.0625`", ",", "0.96875`", ",", "4.515625`", ",", 
   "4.765625`", ",", "4.578125`", ",", "1.046875`", ",", "4.390625`", ",", 
   "0.9375`", ",", "3.5`", ",", "4.53125`", ",", "1.703125`", ",", 
   "0.953125`", ",", "3.625`", ",", "0.953125`", ",", "1.03125`", ",", "1.`", 
   ",", "0.953125`", ",", "1.046875`", ",", "2.875`", ",", "1.`", ",", "1.`", 
   ",", "4.65625`", ",", "4.1875`", ",", "4.671875`", ",", "4.640625`", ",", 
   "4.578125`", ",", "1.03125`", ",", "2.78125`", ",", "4.953125`", ",", 
   "1.`", ",", "0.90625`", ",", "1.015625`", ",", "1.015625`", ",", 
   "4.765625`", ",", "1.078125`", ",", "4.546875`", ",", "4.640625`", ",", 
   "1.`", ",", "4.953125`", ",", "0.984375`", ",", "1.046875`", ",", 
   "1.03125`", ",", "0.984375`", ",", "1.015625`", ",", "1.0625`", ",", 
   "1.046875`", ",", "0.84375`", ",", "1.`", ",", "4.921875`", ",", 
   "0.953125`", ",", "0.96875`", ",", "0.984375`", ",", "0.96875`", ",", 
   "1.015625`", ",", "0.984375`", ",", "3.734375`", ",", "2.125`", ",", 
   "4.765625`", ",", "4.59375`", ",", "1.0625`", ",", "4.875`", ",", 
   "5.328125`", ",", "4.71875`", ",", "1.015625`", ",", "1.859375`", ",", 
   "1.921875`", ",", "1.015625`", ",", "5.`", ",", "1.03125`", ",", 
   "4.640625`", ",", "1.03125`", ",", "4.6875`", ",", "4.609375`", ",", 
   "3.671875`", ",", "1.078125`", ",", "5.0625`", ",", "1.015625`", ",", 
   "0.953125`", ",", "4.578125`", ",", "1.015625`", ",", "5.0625`", ",", 
   "0.96875`", ",", "4.5625`", ",", "4.84375`", ",", "1.03125`", ",", 
   "2.015625`", ",", "1.0625`", ",", "0.953125`", ",", "0.96875`", ",", 
   "0.953125`", ",", "1.`", ",", "4.578125`", ",", "0.984375`", ",", 
   "3.859375`", ",", "1.015625`", ",", "1.078125`", ",", "1.`", ",", "1.`", 
   ",", "1.03125`", ",", "1.015625`", ",", "0.9375`", ",", "0.96875`", ",", 
   "1.078125`", ",", "4.390625`", ",", "4.984375`", ",", "2.953125`", ",", 
   "1.`", ",", "1.96875`", ",", "1.03125`", ",", "4.734375`", ",", 
   "4.609375`", ",", "1.03125`", ",", "1.09375`", ",", "0.984375`", ",", 
   "4.75`", ",", "1.484375`", ",", "3.984375`", ",", "5.25`", ",", "3.15625`",
    ",", "1.015625`", ",", "0.96875`", ",", "0.96875`", ",", "0.984375`", ",",
    "3.734375`", ",", "4.546875`", ",", "4.625`", ",", "4.890625`", ",", 
   "1.0625`", ",", "4.75`", ",", "1.03125`", ",", "1.9375`", ",", "1.03125`", 
   ",", "1.015625`", ",", "2.875`", ",", "1.03125`", ",", "4.96875`", ",", 
   "4.5`", ",", "1.`", ",", "1.125`", ",", "1.015625`", ",", "4.359375`", ",",
    "4.515625`", ",", "1.015625`", ",", "0.90625`", ",", "1.03125`", ",", 
   "0.96875`", ",", "4.3125`", ",", "0.875`", ",", "0.921875`", ",", 
   "0.953125`", ",", "0.9375`", ",", "0.984375`", ",", "0.953125`", ",", 
   "4.6875`", ",", "1.96875`", ",", "4.609375`", ",", "4.65625`", ",", 
   "1.578125`", ",", "0.765625`", ",", "4.890625`", ",", "0.765625`", ",", 
   "1.515625`", ",", "2.1875`", ",", "0.765625`", ",", "0.765625`", ",", 
   "0.765625`", ",", "4.828125`", ",", "0.796875`"}], "}"}]], "Output",
 CellChangeTimes->{3.8677821979414396`*^9, 3.8677946824056797`*^9, 
  3.8678693925221605`*^9},
 CellLabel->
  "Out[409]=",ExpressionUUID->"a4757381-ce03-43a6-9c35-f38f7135b6c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimingData60", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataComputation60.mx\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.867796805928421*^9, 3.867796809217347*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"46a9c4be-7bc5-470c-b546-e937448ddafd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "14.75`", ",", "2.109375`", ",", "2.015625`", ",", "16.4375`", ",", 
   "2.171875`", ",", "2.140625`", ",", "2.1875`", ",", "2.09375`", ",", 
   "2.046875`", ",", "2.125`", ",", "1.96875`", ",", "1.96875`", ",", 
   "2.1875`", ",", "2.140625`", ",", "2.078125`", ",", "16.234375`", ",", 
   "15.53125`", ",", "2.265625`", ",", "4.4375`", ",", "4.453125`", ",", 
   "2.03125`", ",", "2.03125`", ",", "2.015625`", ",", "2.15625`", ",", 
   "2.09375`", ",", "9.65625`", ",", "2.09375`", ",", "2.03125`", ",", 
   "2.078125`", ",", "1.953125`", ",", "1.90625`", ",", "1.984375`", ",", 
   "1.953125`", ",", "1.953125`", ",", "15.515625`", ",", "15.453125`", ",", 
   "19.328125`", ",", "1.8125`", ",", "15.828125`", ",", "2.09375`", ",", 
   "9.625`", ",", "15.9375`", ",", "3.953125`", ",", "2.109375`", ",", 
   "2.046875`", ",", "2.078125`", ",", "2.015625`", ",", "1.90625`", ",", 
   "1.828125`", ",", "2.015625`", ",", "3.546875`", ",", "1.953125`", ",", 
   "1.984375`", ",", "15.4375`", ",", "9.078125`", ",", "14.8125`", ",", 
   "19.703125`", ",", "18.265625`", ",", "1.96875`", ",", "12.984375`", ",", 
   "16.375`", ",", "2.078125`", ",", "2.015625`", ",", "2.`", ",", "2.03125`",
    ",", "15.90625`", ",", "2.`", ",", "15.421875`", ",", "16.25`", ",", 
   "2.`", ",", "16.53125`", ",", "2.`", ",", "1.859375`", ",", "1.90625`", 
   ",", "2.046875`", ",", "2.28125`", ",", "2.0625`", ",", "1.8125`", ",", 
   "2.078125`", ",", "2.109375`", ",", "15.75`", ",", "2.015625`", ",", 
   "1.96875`", ",", "1.875`", ",", "1.875`", ",", "2.015625`", ",", 
   "1.96875`", ",", "5.8125`", ",", "2.03125`", ",", "16.234375`", ",", 
   "16.171875`", ",", "2.140625`", ",", "15.859375`", ",", "17.109375`", ",", 
   "15.046875`", ",", "2.03125`", ",", "2.125`", ",", "8.109375`", ",", 
   "2.15625`", ",", "15.9375`", ",", "1.953125`", ",", "18.296875`", ",", 
   "1.96875`", ",", "24.8125`", ",", "17.53125`", ",", "12.65625`", ",", 
   "1.84375`", ",", "15.890625`", ",", "2.03125`", ",", "2.046875`", ",", 
   "15.921875`", ",", "2.09375`", ",", "15.90625`", ",", "2.40625`", ",", 
   "16.078125`", ",", "15.71875`", ",", "1.84375`", ",", "1.65625`", ",", 
   "1.703125`", ",", "1.609375`", ",", "1.609375`", ",", "1.6875`", ",", 
   "1.578125`", ",", "18.390625`", ",", "2.140625`", ",", "3.859375`", ",", 
   "2.03125`", ",", "1.8125`", ",", "2.046875`", ",", "2.109375`", ",", 
   "2.09375`", ",", "2.0625`", ",", "2.234375`", ",", "2.203125`", ",", 
   "2.078125`", ",", "14.953125`", ",", "17.75`", ",", "10.25`", ",", 
   "1.90625`", ",", "3.859375`", ",", "1.640625`", ",", "18.4375`", ",", 
   "16.078125`", ",", "7.515625`", ",", "2.171875`", ",", "2.03125`", ",", 
   "4.078125`", ",", "4.046875`", ",", "5.9375`", ",", "16.75`", ",", 
   "3.984375`", ",", "2.03125`", ",", "2.078125`", ",", "1.984375`", ",", 
   "2.125`", ",", "15.890625`", ",", "33.703125`", ",", "19.890625`", ",", 
   "15.921875`", ",", "1.890625`", ",", "23.96875`", ",", "1.71875`", ",", 
   "1.71875`", ",", "1.828125`", ",", "1.71875`", ",", "1.71875`", ",", 
   "3.59375`", ",", "18.28125`", ",", "19.34375`", ",", "1.8125`", ",", "2.`",
    ",", "2.0625`", ",", "16.359375`", ",", "14.984375`", ",", "2.078125`", 
   ",", "2.09375`", ",", "2.125`", ",", "2.`", ",", "15.71875`", ",", 
   "1.9375`", ",", "2.`", ",", "1.953125`", ",", "1.96875`", ",", "7.578125`",
    ",", "2.015625`", ",", "18.859375`", ",", "5.9375`", ",", "16.796875`", 
   ",", "16.0625`", ",", "2.015625`", ",", "2.03125`", ",", "22.171875`", ",",
    "1.75`", ",", "3.671875`", ",", "3.546875`", ",", "1.75`", ",", 
   "1.46875`", ",", "1.484375`", ",", "17.03125`", ",", "1.5625`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8677978635881305`*^9, 3.867869393566828*^9},
 CellLabel->
  "Out[410]=",ExpressionUUID->"9f75a363-83e3-4ab2-aada-090322a5e508"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting BoxPlots", "Subsection",
 CellChangeTimes->{{3.8677818146615705`*^9, 3.8677818258179274`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"1d6ef86c-66d7-4e03-9bcd-0f20f629f4f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "TimingData20", ",", "TimingData30", ",", "TimingData40", ",", 
     "TimingData60"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"BoxWhiskerChart", "[", "data2", "]"}]}], "Input",
 CellChangeTimes->{{3.867781986052616*^9, 3.8677819863965063`*^9}, {
  3.8677820222767906`*^9, 3.8677820436078253`*^9}, {3.8677821135220013`*^9, 
  3.867782144434909*^9}, {3.867797867605819*^9, 3.867797870590845*^9}, {
  3.867869399338993*^9, 
  3.8678694007625403`*^9}},ExpressionUUID->"3a24882d-ab46-4c1e-a425-\
fa8927a8b118"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.5097251739635205, -1.3570312500000001`}, {
     4.4902748260364795`, 35.37265625}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             
             PolygonBox[{{0.7312248802544821, 1.6484375}, {1.268775119745518, 
              1.6484375}, {1.268775119745518, 0.4375}, {0.7312248802544821, 
              0.4375}}], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              
              LineBox[{{1.268775119745518, 0.5}, {0.7312248802544821, 
               0.5}}]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{1., 0.4375}, {1., 0.3125}}, {{1., 1.6484375}, {1., 
               2.15625}}}]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{1.134387559872759, 0.3125}, {0.865612440127241, 
               0.3125}}, {{1.134387559872759, 2.15625}, {0.865612440127241, 
               2.15625}}}]}, {}}]},
          
          ImageSizeCache->{{47.274488851979385`, 92.07996244416509}, {
           73.537350936474, 86.0092411753885}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "2.15625`"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "1.6484375`"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], "0.5`"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.4375`"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], "0.3125`"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 2.15625}, {
            Style["75%", Bold], 1.6484375}, {
            Style["median", Bold], 0.5}, {
            Style["25%", Bold], 0.4375}, {
            Style["min", Bold], 0.3125}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             
             PolygonBox[{{1.731224880254482, 2.8359375}, {2.268775119745518, 
              2.8359375}, {2.268775119745518, 0.71875}, {1.731224880254482, 
              0.71875}}], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              
              LineBox[{{2.268775119745518, 0.765625}, {1.7312248802544818`, 
               0.765625}}]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{2., 0.71875}, {2., 0.53125}}, {{2., 2.8359375}, {2., 
               3.75}}}]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{2.134387559872759, 0.53125}, {1.865612440127241, 
               0.53125}}, {{2.134387559872759, 3.75}, {1.865612440127241, 
               3.75}}}]}, {}}]},
          
          ImageSizeCache->{{125.36402055265216`, 170.16949414483793`}, {
           65.20147604117595, 84.86510148387701}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "3.75`"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "2.8359375`"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             "0.765625`"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.71875`"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], "0.53125`"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 3.75}, {
            Style["75%", Bold], 2.8359375}, {
            Style["median", Bold], 0.765625}, {
            Style["25%", Bold], 0.71875}, {
            Style["min", Bold], 0.53125}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             
             PolygonBox[{{2.7312248802544823`, 4.484375}, {3.268775119745518, 
              4.484375}, {3.268775119745518, 1.}, {2.7312248802544823`, 
              1.}}], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              
              LineBox[{{3.268775119745518, 1.0546875}, {2.731224880254482, 
               1.0546875}}]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{3., 1.}, {3., 0.765625}}, {{3., 4.484375}, {3., 
               5.328125}}}]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{3.134387559872759, 0.765625}, {2.865612440127241, 
               0.765625}}, {{3.134387559872759, 5.328125}, {2.865612440127241,
                5.328125}}}]}, {}}]},
          
          ImageSizeCache->{{203.453552253325, 248.25902584551073`}, {
           56.947325409557315`, 83.63923752868612}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "5.328125`"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "4.484375`"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             "1.0546875`"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "1.`"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], "0.765625`"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 5.328125}, {
            Style["75%", Bold], 4.484375}, {
            Style["median", Bold], 1.0546875}, {
            Style["25%", Bold], 1.}, {
            Style["min", Bold], 0.765625}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             
             PolygonBox[{{3.7312248802544823`, 15.015625}, {4.268775119745518,
               15.015625}, {4.268775119745518, 2.}, {3.7312248802544823`, 
              2.}}], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              
              LineBox[{{4.268775119745518, 2.109375}, {3.731224880254482, 
               2.109375}}]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{4., 2.}, {4., 1.46875}}, {{4., 15.015625}, {4., 
               33.703125}}}]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{4.134387559872759, 1.46875}, {3.865612440127241, 
               1.46875}}, {{4.134387559872759, 33.703125}, {3.865612440127241,
                33.703125}}}]}, {}}]},
          
          ImageSizeCache->{{281.54308395399784`, 
           326.3485575461836}, {-91.46393743221927, 79.96164566311347}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "33.703125`"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "15.015625`"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             "2.109375`"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "2.`"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], "1.46875`"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 33.703125}, {
            Style["75%", Bold], 15.015625}, {
            Style["median", Bold], 2.109375}, {
            Style["25%", Bold], 2.}, {
            Style["min", Bold], 1.46875}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], 
        "Tooltip"]& ]}}, {}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.5543473682799303, -1.3570312500000001`},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.7312248802544821, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      4.268775119745518, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.7312248802544821, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      4.268775119745518, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.7312248802544821, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     4.268775119745518, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{
  3.867781986777377*^9, {3.8677820380646343`*^9, 3.867782044168641*^9}, {
   3.8677821227129993`*^9, 3.867782145059704*^9}, 3.867782210477347*^9, 
   3.8677946877509356`*^9, 3.8677978715365353`*^9, 3.867869394987376*^9},
 CellLabel->
  "Out[412]=",ExpressionUUID->"ef9c906c-7271-4586-842d-ec92547ce20a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Periodic Recomputation Code with parameter mismatch", "Section",
 CellChangeTimes->{{3.867678820449437*^9, 3.8676788349908113`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"6fbbeffa-94d3-4819-b3d6-3bc2457a08fa"],

Cell[CellGroupData[{

Cell["Evaluate Robustness of MPC Variant wrt Model Mismatch", "Subsection",
 CellChangeTimes->{{3.866046972536893*^9, 
  3.866046989974267*^9}},ExpressionUUID->"d4cd1662-0739-4366-903a-\
6c25f7b7413f"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
   RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
   RowBox[{"\[Tau]1", " ", "=", " ", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
   RowBox[{"order", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "10"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"M", " ", "=", "3"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", 
     "the", " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", 
     "in", " ", "time", " ", "\[Tau]"}], "  ", "*)"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A1", " ", "=", " ", "0"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"AError", " ", "=", " ", "0.2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A2", " ", "=", " ", 
    RowBox[{"A1", " ", "+", " ", "AError"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxErrorInitial", " ", "=", " ", "0.5"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"MyAppend", "[", 
     RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f1", "[", "t", "]"}], ",", " ", 
             RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], 
            "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f2", "[", 
              RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
             RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
              RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], 
         "]"}]}], ";", "\n", "    ", "f"}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["While",
    FontWeight->"Plain"], 
   StyleBox["[",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"EInitial", " ", ">", " ", "1.5"}], " ", "||", " ", 
      RowBox[{"EInitial", " ", "<", " ", "0.5"}]}],
     FontWeight->"Plain"], 
    StyleBox[",",
     FontWeight->"Plain"], "\[IndentingNewLine]", 
    RowBox[{
     StyleBox[
      RowBox[{"xdotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Min", " ", "=", " ", 
       RowBox[{"-", "\[Pi]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], ";", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Init", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"ICs", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
        "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"EInitial", " ", "=", " ", 
       RowBox[{"Energy", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ICs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"]}]}], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox["]",
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.4424950922207964`"}], ",", "0.6052619340238472`", ",", 
      RowBox[{"-", "0.36481243427277565`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Initial Conditions = \>\"", ",", "ICs"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Energy = \>\"", ",", " ", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xdotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]f", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]dotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"Js", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"count", " ", "=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxcountAlgo", " ", "=", " ", "20"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"timeData", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
     " ", 
     RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"time", ",", 
        RowBox[{"{", 
         RowBox[{
         "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
          "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
          "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
         "}"}]}], "}"}], "=", 
      RowBox[{"Timing", "[", 
       RowBox[{"ffCartPendulum2", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
         "order", ",", "maxIter", ",", "maxError", ",", "uBound", ",", 
         "maxCount", ",", "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"testWithFBClipped", "[", 
       RowBox[{
       "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
        "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
        "uBound", ",", "K"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ICs", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"xdot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]dot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"errorInitial", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{"ICs", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"initGuess", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Lambda]1ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]2ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]3ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]4ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xf", ",", " ", "x1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xdotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xdotf", ",", " ", "xdot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"\[Theta]f", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]f", ",", " ", "\[Theta]1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]dotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]dotf", ",", " ", "\[Theta]dot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"uf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"uf", ",", " ", "u1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Js", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"Js", ",", "J"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"timeData", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"timeData", ",", "time"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"count", " ", "=", " ", 
      RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Count = \>\"", ",", "count"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Error = \>\"", ",", "errorInitial"}], "]"}], ";"}]}], "\t",
    "\[IndentingNewLine]", "]"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]f", "[", "t", "]"}], ",", " ", 
        RowBox[{"uf", "[", "t", "]"}], ",", " ", 
        RowBox[{"xf", "[", "t", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6"}], ",", " ", "6"}], "}"}]}], ",", " ", 
      RowBox[{"Filling", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", 
         "\"\<x1b\>\""}], "}"}]}], ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
      " ", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
      RowBox[{"GridLines", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"Js", ",", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<J vs time\>\""}]}], "]"}]}], ";", 
   RowBox[{"p1c", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"timeData", ",", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Time of Computations vs time\>\""}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Total Time for Convergence = \>\"", ",", 
     RowBox[{"\[Tau]", "*", 
      RowBox[{"1", "/", "M"}], "*", "count"}]}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Max Computation Time = \>\"", ",", 
     RowBox[{"Max", "[", "timeData", "]"}]}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1b", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}, {3.8654474644860983`*^9, 3.86544746739017*^9}, {
   3.865447584859602*^9, 3.865447593586812*^9}, {3.865952499809149*^9, 
   3.8659525292967024`*^9}, {3.8659525819378333`*^9, 
   3.8659525893724527`*^9}, {3.865971536327427*^9, 3.865971615231144*^9}, {
   3.8659716506068087`*^9, 3.8659716545185547`*^9}, {3.865971738635604*^9, 
   3.8659717394583387`*^9}, {3.865971771360116*^9, 3.865971773325487*^9}, 
   3.8659718432830696`*^9, {3.865971878869669*^9, 3.865971881703761*^9}, {
   3.865972099999814*^9, 3.8659721093028316`*^9}, {3.8659724284015865`*^9, 
   3.8659724335579348`*^9}, {3.865972467781967*^9, 3.8659724678729377`*^9}, 
   3.865972527892706*^9, {3.865972575741376*^9, 3.8659725758223476`*^9}, {
   3.8659727852052574`*^9, 3.8659727853102245`*^9}, 3.8659729110299406`*^9, {
   3.865973909258086*^9, 3.865973915857973*^9}, {3.866046878808134*^9, 
   3.866046926929607*^9}, {3.866047001093678*^9, 3.866047039702221*^9}, {
   3.8660471109532323`*^9, 3.8660471110941877`*^9}, {3.8660471705050197`*^9, 
   3.866047173520045*^9}, 3.8661406529053097`*^9, {3.8661406905133476`*^9, 
   3.8661406905993204`*^9}, {3.866140819599299*^9, 3.8661408196882687`*^9}, {
   3.8665711649558916`*^9, 3.866571165889593*^9}, {3.866571417989247*^9, 
   3.8665714182851543`*^9}, {3.866572132358571*^9, 3.866572174133257*^9}, 
   3.8665722152271605`*^9, {3.866572708667897*^9, 3.866572725315591*^9}, {
   3.8665728020321393`*^9, 3.8665728154188747`*^9}, {3.8665728560299296`*^9, 
   3.8665728724307027`*^9}, {3.8665729695007653`*^9, 
   3.8665729789747458`*^9}, {3.866573043115304*^9, 3.866573053395028*^9}, 
   3.8665735494869184`*^9, {3.866573703021986*^9, 3.8665737072086515`*^9}, {
   3.866573789133541*^9, 3.8665737977058096`*^9}, {3.8665738824937863`*^9, 
   3.866573891690858*^9}, {3.8665752456343412`*^9, 3.866575271422123*^9}, {
   3.866575497520063*^9, 3.8665755162530923`*^9}, {3.866575560451006*^9, 
   3.866575588098196*^9}, {3.8665756738178754`*^9, 3.86657570879373*^9}, 
   3.8665757657245836`*^9, {3.8665764184045687`*^9, 3.8665764350932503`*^9}, 
   3.866576476534042*^9, 3.866576542813918*^9, {3.8665766740420947`*^9, 
   3.866576692525204*^9}, {3.8665778195290174`*^9, 3.866577843192477*^9}, {
   3.8666641527149525`*^9, 3.866664193861807*^9}, 3.8666649366484857`*^9, {
   3.8666650025004454`*^9, 3.866665006550152*^9}, {3.8671675349242973`*^9, 
   3.8671675350712523`*^9}, {3.8671683251655407`*^9, 3.867168325420459*^9}, {
   3.86716836190279*^9, 3.8671683619377785`*^9}, {3.8671684189625406`*^9, 
   3.867168526768058*^9}, {3.867168609091727*^9, 3.867168609125716*^9}, {
   3.8671687123626957`*^9, 3.8671687125066504`*^9}, {3.8671688521659803`*^9, 
   3.8671688554009476`*^9}, {3.867168905295987*^9, 3.8671689053339744`*^9}, {
   3.867169679170464*^9, 3.8671696792024536`*^9}, {3.86716974093071*^9, 
   3.8671697691686783`*^9}, {3.867517978678768*^9, 3.8675180117730026`*^9}, {
   3.8675181522033186`*^9, 3.8675181561960225`*^9}, {3.8675182492707415`*^9, 
   3.867518249471678*^9}, 3.8675182867785397`*^9, {3.867518319760811*^9, 
   3.8675183200537167`*^9}, 3.8675184225923586`*^9, {3.867519084541021*^9, 
   3.8675191050623465`*^9}, {3.8675195807276073`*^9, 3.8675195857729697`*^9}, 
   3.8676887550002565`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[327]:=",ExpressionUUID->"0f3183bc-66bf-4493-80a1-5286a3b12336"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial Conditions = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.4424950922207964`"}], ",", "0.6052619340238472`", ",", 
     RowBox[{"-", "0.36481243427277565`"}]}], "}"}]}],
  SequenceForm[
  "Initial Conditions = ", {
   0, -0.4424950922207964, 0.6052619340238472, -0.36481243427277565`}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.867868750032426*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"29550a06-5960-442c-8963-e5c7322aa671"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.026710738161455097`"}]}],
  SequenceForm["Energy = ", -0.026710738161455097`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.867868750037424*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"9c86267b-3bc4-4e89-af5b-be55e5d1133b"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 350, 58, 
   17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687507801876`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"f1ee7137-99b9-4710-927f-c0d654d8ca55"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$183369\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$183369\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"0.17128524806410372`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"28.545281606149974`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.0107402823639182`\\\"}]\\) for the integral and error \
estimates.\"", 2, 350, 59, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.867868750843168*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"854eb72e-c35a-4c46-9fa0-e35aa971d235"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Count = ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687508531647`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"20981147-b50a-4005-97eb-acfa9980c474"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "4.049156003936977`"}],
  SequenceForm["Error = ", 4.049156003936977],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687508561635`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"fbee8f3f-ad53-481a-8c36-5cd387ce868e"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 350, 60, 
   17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687515219517`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"130805eb-4738-4889-9f60-52443b742373"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$183588\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$183588\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"1.962812916797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.0806850574311797`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.0017761679343249277`\\\"}]\\) for the integral and \
error estimates.\"", 2, 350, 61, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687516629076`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"dab08db2-72c1-4f5e-9688-57d72fbb8da1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Count = ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687516719046`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"3b427bcf-02df-4831-aa29-83400d4dc655"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.594231717382712`"}],
  SequenceForm["Error = ", 3.594231717382712],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687516759033`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"fbac5be5-2923-403b-8227-4608ac5f2be2"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 350, 62, 17553589391743266455, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.867868751752879*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"c2d8eda8-b5f9-44b8-935a-feedc0f05fab"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 350, 63, 
   17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687524856453`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"996db027-0683-45ff-aa5c-4d683d25a236"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 350, 64, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687524946427`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"e72564d6-4b34-4c8b-b9b5-33e00dd9211d"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$183861\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$183861\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"1.630781666797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.1297485521995685`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.00652902662202709`\\\"}]\\) for the integral and error \
estimates.\"", 2, 350, 65, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687525546236`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"00c476d7-1ef2-4a2d-aea7-38a4bf13e63f"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 350, 66, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.86786875256562*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"1b9a749b-8acd-4d1f-8cd3-523dd5eca867"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Count = ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687525746174`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"1a18b33a-7b75-4843-9f9c-4832d70afc80"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "1.511288766043186`"}],
  SequenceForm["Error = ", 1.511288766043186],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.867868752578616*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"c9e49ef8-1c7f-4622-9fae-b631110b7708"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 350, 67, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.867868752632599*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"d4d75c44-1df8-4adf-a881-58388e10df8d"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 350, 68, 17553589391743266455, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687527885494`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"213fc6b3-44ee-4adf-85d7-e225bfd33ec5"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Count = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687536522746`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"4a5456eb-1fe0-497e-9576-66e5a9e50d49"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.9678262944461032`"}],
  SequenceForm["Error = ", 0.9678262944461032],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.867868753656273*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"549576b7-229b-4ba1-972d-2348bcbea774"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 350, 69, 17553589391743266455, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687537432456`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"21c3d358-dc22-45c6-838b-9149a4ea526a"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FindRoot\\\", \
\\\"::\\\", \\\"cvmit\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 350, 70, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.867868753765239*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"225b4c3d-1b5f-4451-b6a2-f36d9601d278"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Count = ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687544500217`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"1583928f-6486-49c3-9264-2e7aa57954b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.4453023974547345`"}],
  SequenceForm["Error = ", 0.4453023974547345],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.86786875445402*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"5837f9cc-a220-491b-8177-2c4fe6dd7b26"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Time for Convergence = \"\>", "\[InvisibleSpace]", 
   FractionBox["25", "3"]}],
  SequenceForm["Total Time for Convergence = ", 
   Rational[25, 3]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.867868756659319*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"c83cf3bf-3158-4f1a-affc-e8cab1565118"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Max Computation Time = \"\>", "\[InvisibleSpace]", 
   "0.421875`"}],
  SequenceForm["Max Computation Time = ", 0.421875],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.867868756663317*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"c567314e-3942-426e-b2c6-e74ae26579ef"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
40VhDVpMzeSdfv/hvAeu/weWnjzB
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{2764, 2763, 1510, 1149, 1802}}], 
               PolygonBox[{{2762, 2761, 1182, 1814, 939, 1720, 1360, 800}}], 
               
               PolygonBox[{{2758, 2757, 657, 1542, 1181, 938, 799, 536, 1439, 
                1078}}], 
               
               PolygonBox[{{2760, 2759, 1509, 1148, 1801, 904, 1701, 1341, 
                765, 1627, 1266, 1023}}], 
               PolygonBox[CompressedData["
1:eJwV0UlsjGEcgPG3eyJB0Eo3GhedmR61U3VzEgf7ic4gDmjRxc2WaLXlODPt
VXGyHShJLbEWF4m2UwS1JK5NE/RALE38vsM/3/95nvf9JjOzal/n9o7CEEKB
eWnGFoTw1KTIdyUhdBSHcLwohG+40Yxym7id3DhOlobwCq8uC2Gay+M2Zzpx
n/7bntHPa0vNQT1wC7kiPWOvt6/RTmuV+DJfab/B13rPA20M79L247T+PvoM
/YQ2rCXxd36HfYb/xX+1H+Ob+Duem/n56D1axjPGbfC+Cb0Zj+v1+KM+hdv1
Ltyv/7Fn9SV4WB/RN3IpvAy34QLcghc5N4v7cLG7Wc8Y1+hcD1+Fr/BV9pv8
Cnceas9wq3YA79Y/RJ+vn9R+RL+1uctt4Vq5rPNxPMmvtU/wMXc/aa/xIa0b
D+h/7Tn9glZuSrgcF+eacK/z1fgqX20f4Ve6+0h7jlPanuh3MvfsW/WUltMS
OM+32Cf5uHuftTf4sHYUn9X/2Qf1i1qFKeUGuQSXxNdwjTu3cJ07j7kXOO3M
Xm06+j7aKX4u+s7mPreNS0f/GV7nfB4n3P/CvcVHnDmnzXsOaZf45aZdK+QW
c2X6kL3B/pNv1s941nDrveu6Xotv60+0/0M7Zao=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0slTz3Ecx/Fv0sLFUjJjLcuJEcVYSpujvRmKGSFKGNLYy8VWDraTfd+d
7LKNrbT8AZLMWCpcEBdrjMf38Onzer6e7+97+v1+36TC0tzVXYIgiHCS/Knt
HgQ1Tg9lT6eXcygqCJK7BkFaZBBcwYOjg+A2rsFF+DW/Hm/FJ7nx+Lt+jvxJ
PyYmCH5xrbicm8w9dM/hFuubcAb3HLfi3TgCH8Ln8Q15qvkF9vTDq3AUnoR7
m/mMd+LenjvsHq1LN3cVJ3LVuBYX4zf8BrwNn+Im4Fn2/ODm4s9cCv7Nt+EK
PoN75J7LFepf4EyuCbfhPbgLPowv4JvyNPMF9vTHq3E0TsNxZr7gShznuSPu
MbrJ5ir1g/A1fZJ8R/9MXycX6Jfp37o36qPs2s6d5ibqZuOffB7+wqfiP3w7
3sKX40z+sZzHR+Al/AF+lG4qbuaz8At+BG4PPysu5dfivXwkPsLH4Yv8LTyd
X4gH4FIcg9NxvLkOXIXjPXvUnaLLMFelH4yv64fId/V1+hL8Tr8JR9uxQ3eG
n6TLDd8jPh938J1cFn7C5eOl+CXO5pvxe9wsr+H36bvKR/Xx9lzibuMZ3EB5
jRwr9+H7mD0mp8qZ4fuHh/L3cD2ulxfyy/Wt7s36GDt3cme5NN1vbp78lfur
z8YJznFurC4rfE/wMDP3cQNukBfxK/Rt4W+mj7W3kjvHpev+cPPlb9w/fQ5+
qp+Hi3ALzuFf4g/h9yGX8evs2c9F4WPhZ8SX+Wo8kx8kl8nd5AS+r9kT8jg5
m9vFJeJb+uHyA32iHY1cI17MleCVfLtcwVdxnXiKU6ObryvWHTSfjF+FTm7R
j/Tsx/D/x/8BB3OScw==
                "]], 
               PolygonBox[CompressedData["
1:eJwV1FlwjmcYBuCvZCEliHRaM9XKTC0liZYZdYLaa7LKylkWKWomUa0kUrTM
oJYZo9RWupihstBWN1pa2sbSWlK0PW+EBIOgQ3Hgeg+efO9138/7/xm/Pyll
VXmVXaIoesJk+3E2IYrOmBeEe2OjaFxMFGV0jaKfeaHJMgNNve5V3aO4KMrU
H5VVm2zzh65MFxMfRZW6Vtk2M8g06MbrsuTHuMbckK2QbZDFmRzZaVm5rIov
8XaT6L12yw7IBoeRNdqbIMvm9frB/Is83blZPtDvcF7XwnN0lVyrv+m8Uv+B
Lt7kys7IZsnmcxt/ZIaYJvlEeY78V15kppuz8gr5m/LLvMP08j57ZF/Lhpga
7mVvjPd9Vt7Jq3kpv2h/n/Mkea7d37jO3JKtkm2U1dsfz92cS5zvyUe5G+PZ
zu/p8tw55/m6bIG9K5yh+5dv8k7uzZ/zN/yDc579kvA7cC335rHc385tXsND
3dvvOVk23V4zD9cd5wv8Dnfq3+dN3KCbwIVepzuX8n3dKxzr2cHL9PnutXjO
lr1lr50zda18iz/mPryXv+UfnfPD7+O8yLlP+H/pNZ/T3+G1PMydLzynyPLs
HeeXdCf4Ii/m2/rV/CE36iZykddJ4DL+Xzea4zyv8nJ9gXt/es6RvW2vI3wH
dJfCZ8mfcBLX89Pufic7zAXulPIwruMkft5Oqv0vnac65+tO8Mv6k/wXL+E7
+jXcw/3Nsib9JFkxP8nl/EAfbwrtn9fNdV6ouxq+g/q28Dnyp9yXG/gZ97+X
HeHC8B3l1PA5cl8eYCfN/lfOrzkX6E7yCP0p/puX8l39Wu7p/hbZPv1k2Qzu
wbP4ob6bKbJ/QfeGc7XuGufoL4fPjj/jZG7kg/yTc1H47nuttPC5cXL4W8Mp
du7yOk5374DntPBvYO8Uj9T9zv/wu/yffh0nurtVtl8/RTaTe3IFP9J3N8X2
L+rmOdfornOu/kp4T97FT3ET93P/UPibyMXhbwY/Bo+BqsQ=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{2756, 2757, 1909, 1394}}], 
               
               PolygonBox[{{2758, 2759, 620, 1897, 1378, 1738, 970, 1213, 
                1574, 694, 834}}], 
               
               PolygonBox[{{2760, 2761, 1543, 658, 1910, 1395, 1755, 1000, 
                1243, 1604, 732, 871, 1115, 1476, 580}}], 
               
               PolygonBox[{{2762, 2763, 621, 1898, 1379, 1739, 971, 1214, 
                1575, 695, 835, 1079, 1440, 537, 1047, 1290, 1650}}], 
               
               PolygonBox[{{512, 2767, 2753, 678, 818, 1062, 1423, 514, 785, 
                924, 1167, 1528, 643, 717, 856, 1100, 1461, 563, 603, 677, 
                817, 1061, 1422, 513, 1917, 1411, 1771, 1036, 1279, 784, 923, 
                642, 716, 562, 602}}], 
               PolygonBox[CompressedData["
1:eJwV0DsvwwEUhvHj2qQStSCpyWXWSvgMRCcdaLWTBIvLWgPlA7CzsrokTCys
KmIhbEYGttZE/P7DSd7nfc5ZzvDSZnGjPSLaTNU8piOezISynorY74podkeM
dUYMynU53xFRlu/kG3nI3lni8Ym7LVzj33GL/+SK8nfi8Dp+4cu4R/4zq3yG
q7id4S7wEe7DB/yPbs/+m+4BT/ENvIAL+IrP41F5QN7hc9yy+xK+xdc4i0+T
HXxsv6n7wHP4C9fwGn52U8Jp+des8L3covtp7hwf4kzyI76l27X/qmvgSf4e
z+NZfMnn8IjcL2/z49w/EFIwuA==
                "]], 
               PolygonBox[CompressedData["
1:eJwNzLsvg2EYhvGXOp+CBQkSs9as1MJCxzI7b6QShxUDA0ZaO0YMwoRB/QeU
BcFsRHRq/YY7733d1/N9PbNLqXR5CKFM1iRXF8K9NBkbpUHqJSHzci4DkRD6
KkI4rAyhDrfoFfpiVQgdXFK/0E/01mp3fMB7btPcs/7J5e1D+pM96S7GZfA0
F/AEf2sb5Au2LzzB/+JNvIrf+Dmcw1e4mz/DI77v4rZxnCt4Y3zWVsu3244l
ayvZdm0f+BEn3ObxmH9EuQM8xZW84/yNbYD/kQ37iu3VNovv8CXucnuKh/2j
k9vC/dyfN8pnbDV8sx7RF+xt/JFkbEXbDv+OH/Ag/4hH/a+X28eTXNGb4q9t
cf5b1u3LthfbDP4Hf+o7Ng==
                "]], 
               PolygonBox[CompressedData["
1:eJwV00dMFWEYheGh2EBd2xUvEHsnsetCqi2WpT12QKxoYi8LuyY2bLGDC+vO
3ntAdC8gJhawxMSSqIn6/Ivv/uc97zcz3FwmZUbR+AXxURTFmfY+ypOiqMLE
lB1NihllGiRE0W6zKTGKPjeIoqW6l/gB7t4wim7hrEZRlM7txHncH+dQvkzX
gW8tN5eL9en8ZXNa1wyX8F9wLc7Db/BY98uwfxQXcgl4Ov9MN5JP1O0yG3Wf
dEt0N02uboiuVNcetwrPkJe5Txp3yZzSNcUH+OVcjfxZ/1qfK9fqx3heP+4I
LuDi8TT+qS6PX4XXyu/5BH0G/umcGtj+RDycP4t34mS8gf+oW+z6QjxHruRf
8Kn4Pt8N3+AzcRq/A+fwv52D+TO6dvxm51ddy/Bdwm8ip9obJ1+VL8onuWR5
v/1PuJd71uhydK91o3Ff+4dxPj+Ve4JzuTXOd/p4XT97P5xTAtubgIfxZXgH
Xs/V40Wuq8T3cFfuOh5hN5XbjrO5X85B/GldW75F+BvD76eP8RfMCV0S3scX
c9XyR31P96rmsnFN+N/EffhDeD4/hXuMc7g4vN2s09XpFupmO5/bfa6PufYu
1wVf42LcNjmLG6g/hduE9wCfN8d1Tfi9uhWuXcZX4XquB67is3A135s7KM/j
Jusf4ezwouFtZq3ug65IV+DaWXKF/QquI77Dd8ZXw/O5rXImN0B/ErcO75tZ
aXc1fsvHcd/NZPkft9X+GvyeDy95vt2ZcjlfzqXg23wnfCW869wWeQTXX38C
two9PmeO6Rrze8I749ql/Ctcx3XHr/hMXMX34krkudwk/UOcGb6//M1M4v7i
ofpSeYu9/+D3jOs=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1VXUVQUQBlA6le7u7k7pUrpROpRupZEGCztRSQtbUbq7u1tCRAQ7Edyz
fNj/zDcHLjBn7iJ/72FthyZMkCDBXT+iPuFHAXbpp3NAP4D0tJLXqh25o19O
Rd6R7+Oqfj6D2C73JAUb5UQ8qS/Ibv0MWlOJd83q8K1+AYNJzFNmhdijn0kb
KvOeWV2u6RcyhCQ8bVaYvfpZtKUK75vV4zv9IoaSlGfMirBPP5t2VOUDs/pc
1y9mGMmYa1aU/fo5tKcaS80a8L1+CcNJzrNmxTgQe6UD1fnQrCE3YneMIAXP
mRXnYOyKjtTgI7NG/BC7YiQped6sBIdiV3RindyJu/oV1ORjuTE3Y3eMIhUv
mJXkcOyOzqyXO8chsFKpxSf6JtyKXTKaHXIvUrJJTs2L+lIcid3ShQ1yl7gt
Vsm1+VTflB9j1xzVxxFm4VF5p9qbVHETTGGz+Zl4Tu7YBbO4x/wltXR8Hkfl
i+p4/mSufFAdyK9kiDtgGrd50PONUfmZRFxhMn+z2vOT6kh+J0e8Z2bEzXv2
mdqMn/SX1Iks1R9Th5GVx+Rdah9Ss0U+G3PycK/8slqGY3E3HNIPIiMPyZui
kpg1ch0+198ff++4KcawW+4be2GrnIZX9GU5HjdGVzbLXUnCWrkuX+gf4Je4
OcaSllfNynEibo5u1ONLs+ax17gxxpGO18zKczJujO7UZ5lZC36Lm2I86Xnd
rAKn4oboQQO+MmsZe4+bYQIZeMOsIqfj3dOThnxt1oo/4r0wkYzMM6vEmdgz
vWhEJt40r8zZ2BO9aUxmspCVbGQnBznJRW7ykJd85KcABSlEYYrwls+uwrnY
I31ownKz1nGj8R6ZRFHeNqvK+dgjfWnKCrM2/BXvickUY75ZNS7EHunHFrkb
SVknN2Olvm3cdLw3juuHk43H5T1qv7hFtsnn1DHkpbi8QK3Oxdg/h/WDycTD
8la1O8m4Gp/JevNT6ihycoOZcbPmq9R28b3hH/myOin+fSyTT6gj4lbIznWm
8y9TPN8bf27cKmm4xtT4LLZ7fl4dG7dAPm4ymzuU8HyhWoNv9N+oE5inP6IO
ITOPyNvUHiRng3xaHU2u+K7Iq9X23I57ZSr74veSlh1ySRbpa3Ipbo7+NKcU
i81rcTnuhQG0oDRlKEs5yrPEr6vNlbgVBtKSNWYdYj/xPWAa++X+pGOnfEEd
R35uMSfh///vV/DsP/0ZAsM=
               "]]}, Annotation[#, "Charting`Private`Tag$184546#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
YVk999rMl8Jb+f3xW8eXuDH4VbyEqxnnIr1JcWf8Z5zTg2MtwSPjjGTerljv
Zb31vSWvhJvpO8M1xKe58vhK7C9xvpAtkq3GG9UP6S+sHqBOF2cV7qp6YqxD
+t+J/UN2U9Yw9lfXIrIH498/fGm8jS+MD/D78eP8M7gff1k9lk8bexa/lK8V
5yucDD+Gr/NVgl3P41GxLuDG5u9Wd5EnjXVD/xy+sqw5Pss3wmfi3MGdVg/m
ZsYZSr1YvkZexBiI03O5ZPn5d+Pso27EfYL7G1dk42Svy5IbTWRfyrrKksXv
XjbXfarIWuBzfGN8Ns4R8ZuOcxt+G6/FRY1B+E79uWON5pfEGUZ9K86G/Guu
RWX14980fJlYc/mD8Z3gn7nxeDJOYTSN80js07EPGnutO4Vdl+qrqa+Jnk/x
QKNZ7A/GMq5W7NFxFuI/kw0ymsc6xnXjksf6EOesOLfF2m0s52pzzeSf48HG
L7IXZFNkKY0Wsj2y7rK+ccaJc1ScXf2td2TrZMViyN7TV0fWHL/OF8Nb5WXV
O+RFvIavuQP4Ca4PHsL/qn6Rn8qlMlrG+5b1kD2Lf4zzTKx9xgp5XXkL+TY8
1HjI2CfvKX9O/lOcKYwM/s67svdlxY3BOEM8F3F+kl/DL8V6iUvoXxm/X3lL
vdvxMOOqbIJsmmyZ/tr4DnUX9V/yquYmjz0Kj45zkzn7XXvJ+uk7j5tw5+J8
Fs8XzoiX4A/wJnWr+A3Ea8BDcMZ4hnBePb/hl3FJ81bF71L2kL4duBz3BT6E
n8fX+Il4Ol7O1cGt3Sc17or/5u7BKVwv4jGxBpl3IM67sv76LuCm3PexTuB5
OBNeitfjzeqH4/Woh6ozxXPpnvn43/EkXMqc1fHMy1rFmRqX53biw3g4/o1/
Cc/A73F1cRv3SYO74RtcNZzS9RIeG2uKeQfj7CMboO9i/Aa4H+K7xPNxZrws
zlTmfij7GD8Sv3FcCg/DmXH+OAfpX6NuoH44zpq4Ar8LH8Ej8O/8yzid+W/I
VvD1ZG1xWtwd34wzqdFa/9dxBlIP5C7Fb5D/Mb5HvABnwctxTvM/irUJt47f
KC4d3yPOEmeYOC/oX6tuqH4kzkm4Ypx78Dd4JP6Dn4TTmz9TtpJ/UNYOp8M9
8K042xpt9B+KM456EHcZt+B/iu8OL8RZ8Xt4A96ibhO/ffcqE98bzhprDS6g
5w/8Ci5r3rrYr+IziDMqrsR9ib/Fo/Cf/Cv4TnPflK3i68dZGqfHPfE/cVY0
2uo/HGca9WDuCm7Jn4+/iRfhbHhFnOvM3xhrIm4ba0acC6yZZeP7k2WTFYw9
3pz31Y3jc4jzIa7Mf4WP4tH4Ov8qzuAes2SrY2+Ps3T8vzXcC/8b50Gjnf4j
cR5SD+F+jnWIv4D/xItxdrwS5zJ/U6zLuF2sU7hcfH84Oy4Ue7j+D9RN4v3H
eRRX4ffgY3gM/ot/DWc0f7ZsTezZcWbGGfDj+L/Yi432+r+JfVo9lPsFt+Iv
4uv4jHoIPzT+XwaXA6/icsf5JfYD3J4vH9+fOkecI+K9qV+Ns5++Cub9Dxs+
wpo=
               "]]}, Annotation[#, "Charting`Private`Tag$184546#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
AfXlSXKW+O3g/4jPGPfD9f8D2iTFMQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$184546#3"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 8.333333163265307}, {-6., 6.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Theta]1b\"", "\"u1b\"", "\"x1b\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 14.272640803074987`}, {2., 1.5403425287155899`}, {3., 
          1.0648742760997842`}, {4., 2.0033808095603005`}, {5., 
          0.5512978782806927}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"J vs time\"", TraditionalForm],
      PlotRange->{{0., 5.}, {0, 14.272640803074987`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.125}, {2., 0.125}, {3., 0.25}, {4., 0.421875}, {5., 
          0.296875}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Time of Computations vs time\"", TraditionalForm],
      PlotRange->{{0., 5.}, {0, 0.421875}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8676887579033327`*^9, 3.8676887724756947`*^9}, 
   3.8678687567192993`*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"43504c43-f197-44aa-b865-2f91abfe78e8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Script for collecting Model Mismatch Testing Data", "Subsection",
 CellChangeTimes->{{3.866576800487796*^9, 
  3.866576812032118*^9}},ExpressionUUID->"b464e18c-79d7-4626-91b5-\
860fe36810d2"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ICData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<ICDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<EDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"MyAppend", "[", 
      RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], 
      "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"f1", "[", "t", "]"}], ",", " ", 
              RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], 
             "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"f2", "[", 
               RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
              RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
               RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\n", "    ", "f"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], " "}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"MPCVariant", "[", 
    RowBox[{
    "A1_", ",", "A2_", ",", "n_", ",", "M_", ",", "uBound_", ",", "ICs_", ",",
      "nGrid_"}], "]"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"], 
  StyleBox[":=",
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["Module",
    FontWeight->"Plain"], 
   StyleBox["[",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{
      "totalTime", ",", "\[Tau]", ",", "\[Tau]1", ",", "order", ",", 
       "maxCount", ",", "maxJ", ",", "maxError", ",", "maxErrorInitial", ",", 
       "EInitial", ",", "xdotMin", ",", "xdotMax", ",", "\[IndentingNewLine]",
        "\[Theta]Min", ",", "\[Theta]Max", ",", "\[Theta]dotMin", ",", 
       "\[Theta]dotMax", ",", "xdotInit", ",", "\[Theta]Init", ",", 
       "\[Theta]dotInit", ",", "maxIter", ",", "errorInitial", ",", 
       "initGuess", ",", "count", ",", "maxcountAlgo", ",", "x1a", ",", 
       "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", 
       "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", 
       "\[Lambda]4ff0", ",", "J", ",", "K", ",", "\[IndentingNewLine]", "x1b",
        ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", "u1b", 
       ",", "ICinit", ",", "time", ",", "timeData", ",", "InitGuess"}], "}"}],
     FontWeight->"Plain"], 
    StyleBox[",",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox[
      RowBox[{"\[Tau]", " ", "=", " ", "5"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"\[Tau]1", " ", "=", " ", 
       RowBox[{"\[Tau]", "*", "1.25"}]}],
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"order", " ", "=", " ", "5"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxIter", " ", "=", " ", "100"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxCount", " ", "=", " ", "10"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxJ", " ", "=", " ", 
       RowBox[{
        RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxError", " ", "=", " ", "0.01"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxErrorInitial", " ", "=", " ", "0.5"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"ICinit", " ", "=", " ", "ICs"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"EInitial", " ", "=", " ", 
       RowBox[{"Energy", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ICs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"errorInitial", " ", "=", " ", "10"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"InitGuess", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"count", " ", "=", " ", "0"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxcountAlgo", " ", "=", " ", "20"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"timeData", " ", "=", " ", 
       RowBox[{"{", "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&",
          " ", 
         RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"time", ",", 
            RowBox[{"{", 
             RowBox[{
             "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", 
              ",", "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
              "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
             "}"}]}], "}"}], "=", 
          RowBox[{"Timing", "[", 
           RowBox[{"Quiet", "[", 
            RowBox[{"ffCartPendulum2", "[", 
             RowBox[{
             "ICinit", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", 
              ",", "order", ",", "maxIter", ",", "maxError", ",", "uBound", 
              ",", "maxCount", ",", "InitGuess", ",", "maxJ", ",", "nGrid"}], 
             "]"}], "]"}], "]"}]}], ";", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",",
             "u1b", ",", "J"}], "}"}], "=", 
          RowBox[{"Quiet", "[", 
           RowBox[{"testWithFBClipped", "[", 
            RowBox[{
            "ICinit", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", 
             "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", 
             ",", "A2", ",", "uBound", ",", "K"}], "]"}], "]"}]}], ";", 
         RowBox[{"ICinit", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x1b", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
            RowBox[{"xdot1b", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
            RowBox[{"\[Theta]1b", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
            RowBox[{"\[Theta]dot1b", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"timeData", " ", "=", " ", 
          RowBox[{"Append", "[", 
           RowBox[{"timeData", ",", "time"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errorInitial", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{"ICinit", " ", "-", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Lambda]1ff0", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", 
            RowBox[{"\[Lambda]2ff0", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", 
            RowBox[{"\[Lambda]3ff0", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", 
            RowBox[{"\[Lambda]4ff0", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", " ", "+", " ", "1"}]}], ";"}]}], "\t", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     RowBox[{"{", 
      StyleBox[
       RowBox[{
        RowBox[{"totalTime", " ", "=", " ", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}], "*", "count"}]}], ",", 
        RowBox[{"Median", "[", "timeData", "]"}]}],
       FontWeight->"Plain"], 
      StyleBox["}",
       FontWeight->"Plain"]}]}]}], 
   StyleBox["]",
    FontWeight->"Plain"]}]}]}], "Input",
 CellChangeTimes->{{3.8675254327139063`*^9, 3.867525435116126*^9}, {
  3.8676781071584063`*^9, 3.8676781084629908`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[1712]:=",ExpressionUUID->"78579b75-f127-47b2-8fa5-c8f1e6e8418b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Simulation Studies (Distribution of Computation and Convergence Times with M \
varying)\
\>", "Section",
 CellChangeTimes->{{3.867678840120178*^9, 3.8676788702495904`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"ca28de38-e961-4a59-bd58-c5f545e91684"],

Cell[CellGroupData[{

Cell["Collect Data for all ICData with m varying", "Subsection",
 CellChangeTimes->{{3.867524935309718*^9, 3.867524969144709*^9}, {
  3.8675251197927027`*^9, 3.867525126210615*^9}, {3.8677895874740057`*^9, 
  3.8677895914547067`*^9}},ExpressionUUID->"d9271ff2-d137-4b8e-ab55-\
960ccfcbc370"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ICData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<ICDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<EDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"numberTests", " ", "=", " ", "50"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "20"}], ";", 
   RowBox[{"M", " ", "=", " ", "10"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "5"}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"A1", " ", "=", " ", "0.2"}], ";", 
    RowBox[{"A2", " ", "=", " ", "0.2"}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"SetSharedVariable", "[", "TimingDataConv", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"SetSharedVariable", "[", "MedianData", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"timeConvergence", ",", "ICs"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ICs", " ", "=", " ", 
          RowBox[{"ICData", "[", 
           RowBox[{"[", "iter", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"timeConvergence", " ", "=", 
          RowBox[{"MPCVariant", "[", 
           RowBox[{
           "A1", ",", "A2", ",", "n", ",", "M", ",", "uBound", ",", "ICs", 
            ",", "nGrid"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"TimingDataConv", ",", "timeConvergence"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{"\"\<TimingDataConv10.mx\>\"", ",", "TimingDataConv"}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"iter", ",", "45", ",", "numberTests"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8665777734597015`*^9, 3.8665777929105053`*^9}, {
   3.8665779568602486`*^9, 3.866578201950136*^9}, {3.8665782362332106`*^9, 
   3.8665784799645324`*^9}, {3.866578563917774*^9, 3.866578588424964*^9}, {
   3.866578656668214*^9, 3.866578666525072*^9}, {3.8665787041740737`*^9, 
   3.866578727443657*^9}, {3.8665791504628367`*^9, 3.8665791609974794`*^9}, 
   3.86657924552254*^9, {3.866579793054037*^9, 3.866579799548968*^9}, 
   3.8665798389863987`*^9, {3.866579962581007*^9, 3.866580046157374*^9}, {
   3.866580203154334*^9, 3.866580206696206*^9}, {3.8665803063554435`*^9, 
   3.8665803106150866`*^9}, {3.866580355575756*^9, 3.866580364610879*^9}, {
   3.8665804397299376`*^9, 3.8665804444854207`*^9}, 3.866580527180066*^9, {
   3.8665806021731634`*^9, 3.866580613129674*^9}, {3.8665806585541954`*^9, 
   3.866580660718505*^9}, {3.866580759118144*^9, 3.8665807638636312`*^9}, {
   3.866580794250947*^9, 3.8665807944188957`*^9}, 3.866581490078181*^9, {
   3.8665815332164316`*^9, 3.8665815386916876`*^9}, {3.866581585509765*^9, 
   3.8665816031021585`*^9}, 3.8665817396226482`*^9, {3.8665819016899977`*^9, 
   3.866581927066908*^9}, {3.86658200079641*^9, 3.8665820089328184`*^9}, {
   3.866582187104032*^9, 3.8665822251599035`*^9}, {3.86658229131382*^9, 
   3.8665822954754934`*^9}, {3.866582405143541*^9, 3.866582405543414*^9}, {
   3.866582478361206*^9, 3.866582478732089*^9}, {3.8671676055617037`*^9, 
   3.867167605893598*^9}, {3.867518791217442*^9, 3.867518812246601*^9}, {
   3.8675188528054066`*^9, 3.867518858443572*^9}, {3.8675189327324066`*^9, 
   3.8675189638013*^9}, {3.8675189947552295`*^9, 3.8675190607287693`*^9}, {
   3.8675191560387635`*^9, 3.8675193675639524`*^9}, {3.8675194469241347`*^9, 
   3.8675194685081153`*^9}, {3.8675195314176483`*^9, 
   3.8675195317335453`*^9}, {3.8675196724117813`*^9, 3.8675197167893467`*^9}, 
   3.86751979858174*^9, {3.867519842638406*^9, 3.8675198573966055`*^9}, {
   3.8675199227523437`*^9, 3.867519923999938*^9}, {3.8675199905172997`*^9, 
   3.867520020047693*^9}, 3.8675202162298727`*^9, 3.867520275434613*^9, {
   3.867520664930907*^9, 3.867520669942277*^9}, {3.86752071100292*^9, 
   3.8675207487636366`*^9}, {3.8675209234458103`*^9, 3.867520923856676*^9}, {
   3.867522242265787*^9, 3.8675222515887537`*^9}, {3.86752358639653*^9, 
   3.8675235944639053`*^9}, 3.867525070382777*^9, 3.867525148363408*^9, {
   3.8677811847682066`*^9, 3.867781184880171*^9}, {3.867781223304626*^9, 
   3.867781226567561*^9}, {3.8677812923500853`*^9, 3.8677812953860936`*^9}, {
   3.8677814000769157`*^9, 3.8677814622636137`*^9}, {3.867781501784712*^9, 
   3.86778150935524*^9}, {3.8677816352321453`*^9, 3.867781656955054*^9}, 
   3.8677823382996187`*^9, {3.867782780513251*^9, 3.8677827949405417`*^9}, 
   3.8677828473784204`*^9, {3.8677829197557917`*^9, 3.86778292653358*^9}, {
   3.8677829930308714`*^9, 3.8677829930988474`*^9}, 3.8677835223530655`*^9, {
   3.867783631736354*^9, 3.867783632297171*^9}, {3.8677838207266545`*^9, 
   3.8677838323898487`*^9}, {3.8677839885238743`*^9, 3.86778399879852*^9}, {
   3.867784057984206*^9, 3.8677841023817034`*^9}, {3.8677867574109263`*^9, 
   3.8677867574839015`*^9}, {3.8677867922905393`*^9, 
   3.8677868163736773`*^9}, {3.867786857273326*^9, 3.8677868789002647`*^9}, {
   3.8677869747319794`*^9, 3.8677869935468364`*^9}, 3.8677870312195377`*^9, {
   3.8677870929943695`*^9, 3.8677870963172846`*^9}, {3.867788121197696*^9, 
   3.86778812596414*^9}, {3.8677882631873417`*^9, 3.867788278174448*^9}, {
   3.8677891782656*^9, 3.8677891832459717`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[117]:=",ExpressionUUID->"70d1aa85-bb91-4114-88b7-c9c00ca5537e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TimingDataConv3", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<TimingDataConv3.mx\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TimingDataConv5", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<TimingDataConv5.mx\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TimingDataConv10", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<TimingDataConv10.mx\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8677862673069305`*^9, 3.86778627042491*^9}, {
  3.867786890879354*^9, 3.867786900599181*^9}, {3.867788217862139*^9, 
  3.8677882238301916`*^9}, {3.8677895171019793`*^9, 3.8677895252383223`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"79ee67f8-5dae-4b65-8d31-6a6eb3359b45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoxWhiskerChart", "[", 
  RowBox[{"{", 
   RowBox[{
   "TimingDataConv3", ",", "TimingDataConv5", ",", "TimingDataConv10"}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.867786317781452*^9, 3.867786335328721*^9}, {
  3.867788229049487*^9, 3.8677882352004776`*^9}, {3.867789531506276*^9, 
  3.8677895334546423`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"0e222575-b62b-4929-85de-4896faef13cf"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.4756035092865898, 0.575}, {3.52439649071341, 20.925}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              NCache[{{0.7509076238812251, 
                 Rational[25, 3]}, {1.2490923761187749`, 
                 Rational[25, 3]}, {1.2490923761187749`, 5}, {
                0.7509076238812251, 5}}, {{0.7509076238812251, 
                8.333333333333334}, {1.2490923761187749`, 
                8.333333333333334}, {1.2490923761187749`, 5}, {
                0.7509076238812251, 5}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{1.2490923761187749`, 
                  Rational[20, 3]}, {0.7509076238812251, 
                  Rational[20, 3]}}, {{1.2490923761187749`, 
                6.666666666666667}, {0.7509076238812251, 
                6.666666666666667}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{1., 5}, {1., 
                   Rational[5, 3]}}, {{1., 
                   Rational[25, 3]}, {1., 20}}}, {{{1., 5}, {1., 
                  1.6666666666666667`}}, {{1., 8.333333333333334}, {
                  1., 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{1.1245461880593874`, 
                   Rational[5, 3]}, {0.8754538119406126, 
                   Rational[5, 3]}}, {{1.1245461880593874`, 20}, {
                  0.8754538119406126, 20}}}, {{{1.1245461880593874`, 
                 1.6666666666666667`}, {0.8754538119406126, 
                 1.6666666666666667`}}, {{1.1245461880593874`, 20}, {
                  0.8754538119406126, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{58.04627267441603, 
           111.66705592048544`}, {-91.4639374322192, 84.43586503590323}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             FractionBox["25", "3"]}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["20", "3"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["5", "3"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 
            Rational[25, 3]}, {
            Style["median", Bold], 
            Rational[20, 3]}, {
            Style["25%", Bold], 5}, {
            Style["min", Bold], 
            Rational[5, 3]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             
             PolygonBox[{{1.7509076238812251`, 11}, {2.249092376118775, 11}, {
               2.249092376118775, 4}, {
               1.7509076238812251`, 4}}], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              
              LineBox[{{2.249092376118775, 5}, {
                1.7509076238812251`, 5}}]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[{{{2., 4}, {2., 2}}, {{2., 11}, {2., 20}}}]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{2.124546188059387, 2}, {1.8754538119406126`, 2}}, {{
                 2.124546188059387, 20}, {1.8754538119406126`, 20}}}]}, {}}]},
          
          ImageSizeCache->{{160.0011315760467, 
           213.62191482211614`}, {-91.46393743221921, 81.28911275693278}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "11"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "4"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], "2"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 11}, {
            Style["median", Bold], 5}, {
            Style["25%", Bold], 4}, {
            Style["min", Bold], 2}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              
              NCache[{{2.750907623881225, 11}, {3.249092376118775, 11}, {
                3.249092376118775, 
                 Rational[9, 2]}, {2.750907623881225, 
                 Rational[9, 2]}}, {{2.750907623881225, 11}, {
                3.249092376118775, 11}, {3.249092376118775, 4.5}, {
                2.750907623881225, 4.5}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{3.249092376118775, 
                  Rational[29, 4]}, {2.750907623881225, 
                  Rational[29, 4]}}, {{3.249092376118775, 7.25}, {
                2.750907623881225, 7.25}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{3., 
                   Rational[9, 2]}, {3., 
                   Rational[3, 2]}}, {{3., 11}, {3., 20}}}, {{{3., 4.5}, {3., 
                 1.5}}, {{3., 11}, {3., 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{3.124546188059387, 
                   Rational[3, 2]}, {2.875453811940613, 
                   Rational[3, 2]}}, {{3.124546188059387, 20}, {
                  2.875453811940613, 20}}}, {{{3.124546188059387, 1.5}, {
                 2.875453811940613, 
                 1.5}}, {{3.124546188059387, 20}, {
                  2.875453811940613, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{261.9559904776774, 
           315.57677372374684`}, {-91.46393743221921, 86.0092411753885}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "11"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["29", "4"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], 
             FractionBox["9", "2"]}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["3", "2"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 11}, {
            Style["median", Bold], 
            Rational[29, 4]}, {
            Style["25%", Bold], 
            Rational[9, 2]}, {
            Style["min", Bold], 
            Rational[3, 2]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], 
        "Tooltip"]& ]}}, {}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}}, {}}, {}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.6259983862693477, 0.575},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.7509076238812251, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      3.249092376118775, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.7509076238812251, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      3.249092376118775, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.7509076238812251, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     3.249092376118775, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{3.867786335865546*^9, 3.8677869088474865`*^9, 
  3.867788235872257*^9, 3.867789534467309*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"188aa874-27de-4955-81a7-94adebf46e86"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Simulation Studies ( Convergence time for Random Initial Conditions with n \
varying)\
\>", "Section",
 CellChangeTimes->{{3.8676788914828353`*^9, 3.8676789484357133`*^9}, {
  3.8678688322602844`*^9, 3.867868837448635*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"61406ec8-6194-4a6e-87fe-11c6e69e71b8"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ICData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<ICDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<EDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"numberTests", " ", "=", " ", "200"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "10"}], ";", 
   RowBox[{"M", " ", "=", " ", "3"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "5"}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A1", " ", "=", " ", "0.2"}], ";", 
   RowBox[{"A2", " ", "=", " ", "0.2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"TimingDataConv", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"SetSharedVariable", "[", "TimingDataConv", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"timeConvergence", ",", "ICs"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ICs", " ", "=", " ", 
          RowBox[{"ICData", "[", 
           RowBox[{"[", "iter", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"timeConvergence", " ", "=", 
          RowBox[{"MPCVariant", "[", 
           RowBox[{
           "A1", ",", "A2", ",", "n", ",", "M", ",", "uBound", ",", "ICs", 
            ",", "nGrid"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"TimingDataConv", ",", "timeConvergence"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Iter = \>\"", ",", "iter", ",", 
           "\"\<   Time of Convergence = \>\"", ",", "timeConvergence"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{"\"\<TimingDataConvN10.mx\>\"", ",", "TimingDataConv"}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"iter", ",", "1", ",", "numberTests"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8665777734597015`*^9, 3.8665777929105053`*^9}, {
   3.8665779568602486`*^9, 3.866578201950136*^9}, {3.8665782362332106`*^9, 
   3.8665784799645324`*^9}, {3.866578563917774*^9, 3.866578588424964*^9}, {
   3.866578656668214*^9, 3.866578666525072*^9}, {3.8665787041740737`*^9, 
   3.866578727443657*^9}, {3.8665791504628367`*^9, 3.8665791609974794`*^9}, 
   3.86657924552254*^9, {3.866579793054037*^9, 3.866579799548968*^9}, 
   3.8665798389863987`*^9, {3.866579962581007*^9, 3.866580046157374*^9}, {
   3.866580203154334*^9, 3.866580206696206*^9}, {3.8665803063554435`*^9, 
   3.8665803106150866`*^9}, {3.866580355575756*^9, 3.866580364610879*^9}, {
   3.8665804397299376`*^9, 3.8665804444854207`*^9}, 3.866580527180066*^9, {
   3.8665806021731634`*^9, 3.866580613129674*^9}, {3.8665806585541954`*^9, 
   3.866580660718505*^9}, {3.866580759118144*^9, 3.8665807638636312`*^9}, {
   3.866580794250947*^9, 3.8665807944188957`*^9}, 3.866581490078181*^9, {
   3.8665815332164316`*^9, 3.8665815386916876`*^9}, {3.866581585509765*^9, 
   3.8665816031021585`*^9}, 3.8665817396226482`*^9, {3.8665819016899977`*^9, 
   3.866581927066908*^9}, {3.86658200079641*^9, 3.8665820089328184`*^9}, {
   3.866582187104032*^9, 3.8665822251599035`*^9}, {3.86658229131382*^9, 
   3.8665822954754934`*^9}, {3.866582405143541*^9, 3.866582405543414*^9}, {
   3.866582478361206*^9, 3.866582478732089*^9}, {3.8671676055617037`*^9, 
   3.867167605893598*^9}, {3.867518791217442*^9, 3.867518812246601*^9}, {
   3.8675188528054066`*^9, 3.867518858443572*^9}, {3.8675189327324066`*^9, 
   3.8675189638013*^9}, {3.8675189947552295`*^9, 3.8675190607287693`*^9}, {
   3.8675191560387635`*^9, 3.8675193675639524`*^9}, {3.8675194469241347`*^9, 
   3.8675194685081153`*^9}, {3.8675195314176483`*^9, 
   3.8675195317335453`*^9}, {3.8675196724117813`*^9, 3.8675197167893467`*^9}, 
   3.86751979858174*^9, {3.867519842638406*^9, 3.8675198573966055`*^9}, {
   3.8675199227523437`*^9, 3.867519923999938*^9}, {3.8675199905172997`*^9, 
   3.867520020047693*^9}, 3.8675202162298727`*^9, 3.867520275434613*^9, {
   3.867520664930907*^9, 3.867520669942277*^9}, {3.86752071100292*^9, 
   3.8675207487636366`*^9}, {3.8675209234458103`*^9, 3.867520923856676*^9}, {
   3.867522242265787*^9, 3.8675222515887537`*^9}, {3.86752358639653*^9, 
   3.8675235944639053`*^9}, 3.867525070382777*^9, 3.867525148363408*^9, {
   3.8677811847682066`*^9, 3.867781184880171*^9}, {3.867781223304626*^9, 
   3.867781226567561*^9}, {3.8677812923500853`*^9, 3.8677812953860936`*^9}, {
   3.8677814000769157`*^9, 3.8677814622636137`*^9}, {3.867781501784712*^9, 
   3.86778150935524*^9}, {3.8677816352321453`*^9, 3.867781656955054*^9}, 
   3.8677823382996187`*^9, {3.867782780513251*^9, 3.8677827949405417`*^9}, 
   3.8677828473784204`*^9, {3.8677829197557917`*^9, 3.86778292653358*^9}, {
   3.8677829930308714`*^9, 3.8677829930988474`*^9}, 3.8677835223530655`*^9, {
   3.867783631736354*^9, 3.867783632297171*^9}, {3.8677838207266545`*^9, 
   3.8677838323898487`*^9}, {3.8677839885238743`*^9, 3.86778399879852*^9}, {
   3.867784057984206*^9, 3.8677841023817034`*^9}, {3.8677867574109263`*^9, 
   3.8677867574839015`*^9}, {3.8677867922905393`*^9, 
   3.8677868163736773`*^9}, {3.867786857273326*^9, 3.8677868789002647`*^9}, {
   3.8677869747319794`*^9, 3.8677869935468364`*^9}, 3.8677870312195377`*^9, {
   3.8677870929943695`*^9, 3.8677870963172846`*^9}, {3.867788121197696*^9, 
   3.86778812596414*^9}, {3.8677882631873417`*^9, 3.867788278174448*^9}, {
   3.8677891782656*^9, 3.8677891832459717`*^9}, {3.8677896933854294`*^9, 
   3.8677897062172413`*^9}, {3.867789757005659*^9, 3.867789759975689*^9}, {
   3.8677900437180586`*^9, 3.8677900591110325`*^9}, {3.867790140356509*^9, 
   3.8677901405794363`*^9}, {3.867791977438761*^9, 3.867791996339593*^9}, {
   3.867792127519765*^9, 3.8677921280236015`*^9}, {3.867792192338605*^9, 
   3.867792202603255*^9}, 3.8677922336991005`*^9, {3.86779450756376*^9, 
   3.8677945079086475`*^9}, {3.8677946112089252`*^9, 3.867794643769294*^9}, {
   3.867797962395877*^9, 3.867797962723768*^9}, {3.8678488565920997`*^9, 
   3.867848867413661*^9}, {3.867849373718691*^9, 3.867849392465731*^9}, {
   3.8678502501600475`*^9, 3.8678502825947356`*^9}, {3.867865281464179*^9, 
   3.86786528741229*^9}, {3.867867802431696*^9, 3.8678678099922915`*^9}, 
   3.8678685496491346`*^9, {3.867869559717007*^9, 3.867869579544702*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"c0243094-1ab3-47dd-9666-1cc41d658619"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TimingDataConvN10", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataConvN10.mx\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TimingDataConvN20", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataConvN20.mx\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TimingDataConvN30", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataConvN30.mx\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TimingDataConvN50", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataConvN50.mx\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TimingDataConvN80", " ", "=", " ", 
  RowBox[{"Import", "[", "\"\<TimingDataConvN80.mx\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.867790064003435*^9, 3.8677901034455614`*^9}, {
   3.86779214475014*^9, 3.8677921536022496`*^9}, 3.867792209940857*^9, {
   3.8677942104457593`*^9, 3.8677942199016724`*^9}, {3.8677978168813787`*^9, 
   3.8677978189367075`*^9}, {3.867848800033083*^9, 3.867848801027766*^9}, {
   3.86786519638023*^9, 3.8678652366844177`*^9}, {3.8678684511594467`*^9, 
   3.8678684584161406`*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"f72fd471-ddb3-48c2-916d-9962d4c485e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "5", ",", 
   FractionBox["25", "3"], ",", "20", ",", "20", ",", "15", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["5", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "5", ",", "20", ",", 
   "5", ",", 
   FractionBox["55", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["35", "3"], ",", "10", ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["35", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["55", "3"], ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", "20", ",", "20", ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["40", "3"], ",", "20", ",", "20", ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "5", ",", "20", ",", 
   "20", ",", "20", ",", "20", ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["25", "3"], ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", "20", ",", "5", ",", "15", ",", "20", ",", 
   "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "10", ",", "20", ",", 
   "10", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", "20", ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", 
   FractionBox["25", "3"], ",", "20", ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["40", "3"], ",", "15", ",", "20", ",", "10", ",", "20", ",", 
   "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "10", ",", 
   FractionBox["55", "3"], ",", 
   FractionBox["55", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "20", ",", "20", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "10", ",", "15", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", "15", ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", "20", ",", "5", ",", 
   FractionBox["55", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", "20", ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["40", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.867797837834538*^9, 3.8677980383720703`*^9, 
  3.8678488027142286`*^9, 3.867850161425257*^9, 3.86786523855882*^9, 
  3.8678684595467787`*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"6d3ea12b-e911-45d2-8cbe-af1d357da5f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "5", ",", "5", ",", 
   FractionBox["35", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["10", "3"], ",", "10", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "10", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", "15", ",", "5", ",", 
   FractionBox["5", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["40", "3"], ",", "5", ",", 
   FractionBox["9", "2"], ",", "4", ",", "11", ",", "4", ",", "7", ",", "6", 
   ",", "3", ",", "10", ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["29", "2"], ",", "18", ",", 
   FractionBox["25", "2"], ",", "5", ",", "2", ",", "9", ",", 
   FractionBox["3", "2"], ",", "20", ",", "6", ",", 
   FractionBox["13", "2"], ",", "11", ",", 
   FractionBox["37", "2"], ",", 
   FractionBox["13", "2"], ",", "8", ",", "20", ",", "3", ",", 
   FractionBox["17", "2"], ",", "20", ",", "8", ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["31", "2"], ",", "4", ",", 
   FractionBox["11", "2"], ",", "11", ",", "20", ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["33", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["7", "2"], ",", "20", ",", "4", ",", 
   FractionBox["7", "2"], ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["37", "2"], ",", 
   FractionBox["3", "2"], ",", 
   FractionBox["21", "2"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "15", ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["40", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["10", "3"], ",", "10", ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["25", "3"], ",", "20", ",", "15", ",", 
   FractionBox["35", "3"], ",", "20", ",", "5", ",", 
   FractionBox["55", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["40", "3"], ",", "10", ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["10", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "20", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.867797837834538*^9, 3.8677980383720703`*^9, 
  3.8678488027142286`*^9, 3.867850161425257*^9, 3.86786523855882*^9, 
  3.867868459557776*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"3d0a5caf-791d-464d-9a8f-38fec2d013b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", "10", ",", 
   FractionBox["35", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", "10", ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", "10", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", "10", ",", 
   FractionBox["20", "3"], ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["40", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", 
   FractionBox["25", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["10", "3"], ",", "20", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "10", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["40", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "20", ",", "5", ",", "20", ",", 
   FractionBox["40", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.867797837834538*^9, 3.8677980383720703`*^9, 
  3.8678488027142286`*^9, 3.867850161425257*^9, 3.86786523855882*^9, 
  3.8678684596287527`*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"207b8f13-d65a-4482-9b45-bcfe77ac5880"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", "5", ",", "10", ",", 
   FractionBox["25", "3"], ",", "5", ",", "10", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "10", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "15", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["35", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", "10", ",", "10", ",", "5", ",", 
   "10", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "10", ",", "5", ",", 
   FractionBox["40", "3"], ",", "5", ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "10", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["35", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "20", ",", "5", ",", "20", ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", "10", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["40", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "10", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "10", ",", 
   FractionBox["25", "3"], ",", "5", ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["55", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["10", "3"], ",", "10", ",", "5", ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", "15", ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.867797837834538*^9, 3.8677980383720703`*^9, 
  3.8678488027142286`*^9, 3.867850161425257*^9, 3.86786523855882*^9, 
  3.8678684596377497`*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"752ec303-8d06-45ed-92e3-9229e352483b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "10", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["55", "3"], ",", "5", ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "20", ",", "5", ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["50", "3"], ",", "20", ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", "20", ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "10", ",", 
   FractionBox["25", "3"], ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["55", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["55", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["40", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["35", "3"], ",", "10", ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", "10", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "20", ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", "20", ",", "15", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["55", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "10", ",", "10", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["55", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", "15", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["40", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["35", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.867797837834538*^9, 3.8677980383720703`*^9, 
  3.8678488027142286`*^9, 3.867850161425257*^9, 3.86786523855882*^9, 
  3.867868459647747*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"2cf4d200-3d13-45bf-b975-0fb4ff3ca15c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoxWhiskerChart", "[", 
  RowBox[{"{", 
   RowBox[{
   "TimingDataConvN10", ",", "TimingDataConvN20", ",", "TimingDataConvN30", 
    ",", "TimingDataConvN50", ",", "TimingDataConvN80"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.867792172746001*^9, 3.8677921757940073`*^9}, {
  3.867794203838917*^9, 3.8677942059362316`*^9}, {3.867848816403878*^9, 
  3.8678488185881824`*^9}, {3.8678652432713213`*^9, 3.8678652495123386`*^9}, {
  3.8678684648820868`*^9, 3.8678684706062665`*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"2981b7ba-90e5-406f-8849-120a9e61ff56"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.5259215553003982, 0.575}, {5.474078444699601, 20.925}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              
              NCache[{{0.7150371318512823, 20}, {1.2849628681487175`, 20}, {
                1.2849628681487175`, 
                 Rational[20, 3]}, {0.7150371318512823, 
                 Rational[20, 3]}}, {{0.7150371318512823, 20}, {
                1.2849628681487175`, 20}, {1.2849628681487175`, 
                6.666666666666667}, {0.7150371318512823, 
                6.666666666666667}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{1.2849628681487175`, 
                  Rational[65, 6]}, {0.7150371318512823, 
                  Rational[65, 6]}}, {{1.2849628681487175`, 
                10.833333333333334`}, {0.7150371318512823, 
                10.833333333333334`}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{0.9999999999999999, 
                   Rational[20, 3]}, {0.9999999999999999, 
                   Rational[5, 3]}}, {{0.9999999999999999, 20}, {
                  0.9999999999999999, 20}}}, {{{0.9999999999999999, 
                 6.666666666666667}, {0.9999999999999999, 
                 1.6666666666666667`}}, {{0.9999999999999999, 20}, {
                  0.9999999999999999, 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{1.1424814340743588`, 
                   Rational[5, 3]}, {0.857518565925641, 
                   Rational[5, 3]}}, {{1.1424814340743588`, 20}, {
                  0.857518565925641, 20}}}, {{{1.1424814340743588`, 
                 1.6666666666666667`}, {0.857518565925641, 
                 1.6666666666666667`}}, {{1.1424814340743588`, 20}, {
                  0.857518565925641, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{41.85776977961491, 
           80.48847583028919}, {-91.46393743221921, 84.43586503590325}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["65", "6"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], 
             FractionBox["20", "3"]}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["5", "3"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 20}, {
            Style["median", Bold], 
            Rational[65, 6]}, {
            Style["25%", Bold], 
            Rational[20, 3]}, {
            Style["min", Bold], 
            Rational[5, 3]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              NCache[{{1.715037131851282, 
                 Rational[155, 12]}, {2.2849628681487175`, 
                 Rational[155, 12]}, {2.2849628681487175`, 5}, {
                1.715037131851282, 5}}, {{1.715037131851282, 
                12.916666666666666`}, {2.2849628681487175`, 
                12.916666666666666`}, {2.2849628681487175`, 5}, {
                1.715037131851282, 5}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{2.2849628681487175`, 
                  Rational[20, 3]}, {1.715037131851282, 
                  Rational[20, 3]}}, {{2.2849628681487175`, 
                6.666666666666667}, {1.715037131851282, 
                6.666666666666667}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{1.9999999999999998`, 5}, {1.9999999999999998`, 
                   Rational[3, 2]}}, {{1.9999999999999998`, 
                   Rational[155, 12]}, {1.9999999999999998`, 20}}}, {{{
                  1.9999999999999998`, 5}, {1.9999999999999998`, 1.5}}, {{
                  1.9999999999999998`, 12.916666666666666`}, {
                  1.9999999999999998`, 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{2.1424814340743588`, 
                   Rational[3, 2]}, {1.8575185659256408`, 
                   Rational[3, 2]}}, {{2.1424814340743588`, 20}, {
                  1.8575185659256408`, 20}}}, {{{2.1424814340743588`, 1.5}, {
                 1.8575185659256408`, 
                 1.5}}, {{2.1424814340743588`, 20}, {
                  1.8575185659256408`, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{104.67696997667959`, 
           143.3076760273539}, {-91.46393743221923, 86.00924117538851}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             FractionBox["155", "12"]}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["20", "3"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["3", "2"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 
            Rational[155, 12]}, {
            Style["median", Bold], 
            Rational[20, 3]}, {
            Style["25%", Bold], 5}, {
            Style["min", Bold], 
            Rational[3, 2]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              NCache[{{2.715037131851282, 
                 Rational[25, 3]}, {3.2849628681487175`, 
                 Rational[25, 3]}, {3.2849628681487175`, 5}, {
                2.715037131851282, 5}}, {{2.715037131851282, 
                8.333333333333334}, {3.2849628681487175`, 
                8.333333333333334}, {3.2849628681487175`, 5}, {
                2.715037131851282, 5}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{3.2849628681487175`, 
                  Rational[20, 3]}, {2.7150371318512825`, 
                  Rational[20, 3]}}, {{3.2849628681487175`, 
                6.666666666666667}, {2.7150371318512825`, 
                6.666666666666667}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{3., 5}, {3., 
                   Rational[5, 3]}}, {{3., 
                   Rational[25, 3]}, {3., 20}}}, {{{3., 5}, {3., 
                  1.6666666666666667`}}, {{3., 8.333333333333334}, {
                  3., 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{3.1424814340743588`, 
                   Rational[5, 3]}, {2.8575185659256412`, 
                   Rational[5, 3]}}, {{3.1424814340743588`, 20}, {
                  2.8575185659256412`, 20}}}, {{{3.1424814340743588`, 
                 1.6666666666666667`}, {2.8575185659256412`, 
                 1.6666666666666667`}}, {{3.1424814340743588`, 20}, {
                  2.8575185659256412`, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{167.49617017374428`, 
           206.1268762244186}, {-91.46393743221923, 84.43586503590326}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             FractionBox["25", "3"]}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["20", "3"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["5", "3"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 
            Rational[25, 3]}, {
            Style["median", Bold], 
            Rational[20, 3]}, {
            Style["25%", Bold], 5}, {
            Style["min", Bold], 
            Rational[5, 3]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              NCache[{{3.715037131851282, 
                 Rational[25, 3]}, {4.2849628681487175`, 
                 Rational[25, 3]}, {4.2849628681487175`, 5}, {
                3.715037131851282, 5}}, {{3.715037131851282, 
                8.333333333333334}, {4.2849628681487175`, 
                8.333333333333334}, {4.2849628681487175`, 5}, {
                3.715037131851282, 5}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{4.2849628681487175`, 
                  Rational[20, 3]}, {3.7150371318512825`, 
                  Rational[20, 3]}}, {{4.2849628681487175`, 
                6.666666666666667}, {3.7150371318512825`, 
                6.666666666666667}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{4., 5}, {4., 
                   Rational[5, 3]}}, {{4., 
                   Rational[25, 3]}, {4., 20}}}, {{{4., 5}, {4., 
                  1.6666666666666667`}}, {{4., 8.333333333333334}, {
                  4., 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{4.142481434074359, 
                   Rational[5, 3]}, {3.8575185659256412`, 
                   Rational[5, 3]}}, {{4.142481434074359, 20}, {
                  3.8575185659256412`, 20}}}, {{{4.142481434074359, 
                 1.6666666666666667`}, {3.8575185659256412`, 
                 1.6666666666666667`}}, {{4.142481434074359, 20}, {
                  3.8575185659256412`, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{230.31537037080898`, 
           268.94607642148327`}, {-91.46393743221923, 84.43586503590326}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             FractionBox["25", "3"]}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["20", "3"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["5", "3"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 
            Rational[25, 3]}, {
            Style["median", Bold], 
            Rational[20, 3]}, {
            Style["25%", Bold], 5}, {
            Style["min", Bold], 
            Rational[5, 3]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              NCache[{{4.7150371318512825`, 
                 Rational[25, 3]}, {5.2849628681487175`, 
                 Rational[25, 3]}, {5.2849628681487175`, 5}, {
                4.7150371318512825`, 5}}, {{4.7150371318512825`, 
                8.333333333333334}, {5.2849628681487175`, 
                8.333333333333334}, {5.2849628681487175`, 5}, {
                4.7150371318512825`, 5}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{5.2849628681487175`, 
                  Rational[20, 3]}, {4.7150371318512825`, 
                  Rational[20, 3]}}, {{5.2849628681487175`, 
                6.666666666666667}, {4.7150371318512825`, 
                6.666666666666667}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{5., 5}, {5., 
                   Rational[5, 3]}}, {{5., 
                   Rational[25, 3]}, {5., 20}}}, {{{5., 5}, {5., 
                  1.6666666666666667`}}, {{5., 8.333333333333334}, {
                  5., 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{5.142481434074359, 
                   Rational[5, 3]}, {4.857518565925641, 
                   Rational[5, 3]}}, {{5.142481434074359, 20}, {
                  4.857518565925641, 20}}}, {{{5.142481434074359, 
                 1.6666666666666667`}, {4.857518565925641, 
                 1.6666666666666667`}}, {{5.142481434074359, 20}, {
                  4.857518565925641, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{293.1345705678737, 
           331.765276618548}, {-91.46393743221923, 84.43586503590326}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             FractionBox["25", "3"]}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["20", "3"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["5", "3"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 
            Rational[25, 3]}, {
            Style["median", Bold], 
            Rational[20, 3]}, {
            Style["25%", Bold], 5}, {
            Style["min", Bold], 
            Rational[5, 3]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], 
        "Tooltip"]& ]}}, {}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.4865408450364105, 0.575},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{0.9999999999999999, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      1.9999999999999998`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.7150371318512823, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      5.2849628681487175`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{
      0.9999999999999999, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      1.9999999999999998`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.7150371318512823, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      5.2849628681487175`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0.9999999999999999, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     1.9999999999999998`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.7150371318512823, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     5.2849628681487175`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{3.8677921772945147`*^9, 3.867794591840247*^9, 
  3.8677946342643967`*^9, 3.867798042511718*^9, 3.867848819924758*^9, 
  3.8678501764874687`*^9, 3.867865250736948*^9, 3.8678684714779854`*^9},
 CellLabel->
  "Out[242]=",ExpressionUUID->"bbda76f0-4f1b-4049-bb6e-2eb2af07a5ec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hammer Perturbations and Animations", "Section",
 CellChangeTimes->{{3.8678689190506916`*^9, 3.867868925798546*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d4b294f2-e9f3-4630-85ef-216511cd56b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomPerturbCartPendulum", "[", 
    RowBox[{
    "xPrev_", ",", "uPrev_", ",", "systemData_", ",", "Tperturb_", ",", 
     "xPerturb_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
       "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
       "InitGuess", ",", "maxJ", ",", "x1b", ",", "xdot1b", ",", "\[Theta]1b",
        ",", "\[Theta]dot1b", ",", "u1b", ",", "u1a", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "Jff", ",", "K", ",", "ICnew", ",", "xoverall", ",", "uoverall", ",", 
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
       "u1c", ",", "J", ",", "nGrid"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
         "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
         "InitGuess", ",", "maxJ", ",", "nGrid"}], "}"}], "  ", "=", 
       "systemData"}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a"}], 
        "}"}], " ", "=", " ", "xPrev"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ICnew", " ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1a", "[", "Tperturb", "]"}], ",", 
          RowBox[{"xdot1a", "[", "Tperturb", "]"}], ",", 
          RowBox[{"\[Theta]1a", "[", "Tperturb", "]"}], ",", 
          RowBox[{"\[Theta]dot1a", "[", "Tperturb", "]"}]}], "}"}], " ", "+", 
        " ", "xPerturb"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
         "u1b", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}],
        "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"ffCartPendulum2", "[", 
         RowBox[{
         "ICnew", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
          "order", ",", "maxIter", ",", "maxError", ",", "uMax", ",", 
          "maxCount", ",", "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], 
        "]"}]}], ";", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
         "u1c", ",", "J"}], "}"}], "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"testWithFBClipped", "[", 
         RowBox[{
         "ICnew", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1b", ",", "xdot1b", 
          ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", "u1b", ",", "A", ",", 
          "uMax", ",", "K"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x1overall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x1a", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdot1overall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdot1a", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdot1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]1overall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dot1overall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dot1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uoverall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uPrev", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xoverall", " ", "=", 
       RowBox[{"{", 
        RowBox[{
        "x1overall", ",", "xdot1overall", ",", "\[Theta]1overall", ",", 
         "\[Theta]dot1overall"}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"xoverall", ",", "uoverall"}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.867163464849106*^9, 3.8671634794564323`*^9}, {
  3.8671635127337894`*^9, 3.867163605654069*^9}, {3.8671645657589817`*^9, 
  3.8671645986694565`*^9}, {3.867164634306057*^9, 3.867164663989561*^9}, {
  3.8671647961932783`*^9, 3.867164841244866*^9}, {3.867164966531794*^9, 
  3.8671649911409225`*^9}, {3.8671651042407475`*^9, 3.8671651646904125`*^9}, {
  3.867165261517443*^9, 3.8671653980147867`*^9}, {3.8671654378460464`*^9, 
  3.8671656708705115`*^9}, {3.8671663097541685`*^9, 3.867166317098817*^9}, {
  3.8678690198446455`*^9, 3.867869117528589*^9}, {3.8678691858578663`*^9, 
  3.8678691899155755`*^9}},
 FontWeight->"Plain",
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"318ed81e-1971-4107-b548-43cc2fe9c527"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "20"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";", 
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"xdotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";", 
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";", 
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";", 
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Initial Energy = \>\"", ",", " ", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["systemData",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    StyleBox["=",
     FontWeight->"Plain"], " ", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{
      "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
       "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
       "InitGuess", ",", "maxJ", ",", "nGrid"}], "}"}],
     FontWeight->"Plain"]}], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"]}], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Tperturb", " ", "=", " ", "3"}], ";", 
   RowBox[{"xPerturb", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"Pi", "/", "6"}], ",", "1"}], "}"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ffCartPendulum2", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"Quiet", "[", 
     RowBox[{"testWithFBClipped", "[", 
      RowBox[{
      "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
       "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
       ",", "K"}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xPrev", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"uPrev", " ", "=", " ", "u1c"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xoverall", ",", "uoverall"}], "}"}], " ", "=", " ", 
    RowBox[{"RandomPerturbCartPendulum", "[", 
     RowBox[{
     "xPrev", ",", "uPrev", ",", "systemData", ",", "Tperturb", ",", 
      "xPerturb"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1overall", ",", "xdot1overall", ",", "\[Theta]1overall", ",", 
       "\[Theta]dot1overall"}], "}"}], " ", "=", " ", "xoverall"}], ";"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]1overall", "[", "t", "]"}], ",", 
      RowBox[{"uoverall", "[", "t", "]"}], ",", 
      RowBox[{"x1overall", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]dot1overall", "[", "t", "]"}], ",", 
      RowBox[{"xdot1overall", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"Tperturb", "+", "\[Tau]1"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
    RowBox[{"Filling", "->", 
     RowBox[{"{", 
      RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
       "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<feedback solution \>\""}], ",", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "3"}]}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"GridLines", "->", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.8671657195039587`*^9, 3.8671659098890643`*^9}, {
   3.8671659551945715`*^9, 3.8671660470182037`*^9}, {3.867166339021806*^9, 
   3.8671663687872868`*^9}, {3.8671664100121*^9, 3.867166474775386*^9}, {
   3.8671666029993734`*^9, 3.867166621694394*^9}, {3.867166668870304*^9, 
   3.867166672623105*^9}, {3.8671667093373604`*^9, 3.8671667121004763`*^9}, {
   3.867869089128619*^9, 3.86786909582049*^9}, {3.867869141151079*^9, 
   3.867869156754119*^9}, {3.8678691955257907`*^9, 3.8678692005561934`*^9}, 
   3.8678692335287094`*^9, 3.8678694693257437`*^9},
 CellLabel->
  "In[444]:=",ExpressionUUID->"02084527-fabf-4ad0-a1fe-44f3ffcfd921"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial Energy = \"\>", "\[InvisibleSpace]", 
   "0.39833802984915345`"}],
  SequenceForm["Initial Energy = ", 0.39833802984915345`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8671660592063036`*^9, {3.8671663222171793`*^9, 3.8671663699259205`*^9}, {
   3.867166410951798*^9, 3.867166475435173*^9}, {3.8671665897526093`*^9, 
   3.867166622428158*^9}, 3.8671666735278144`*^9, 3.867166712939208*^9, 
   3.8678691668828974`*^9, 3.8678692012529697`*^9, 3.8678692364517794`*^9, 
   3.8678695116722794`*^9},
 CellLabel->
  "During evaluation of \
In[444]:=",ExpressionUUID->"a2a83e85-d48e-4609-98ad-cbd6d748642d"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 455, 82, 
   17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8678691679845476`*^9, 3.867869203829151*^9, 
  3.8678692389409885`*^9, 3.8678695140125356`*^9},
 CellLabel->
  "During evaluation of \
In[444]:=",ExpressionUUID->"0abf0870-5c84-4099-be39-f9c620506284"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$197858\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$197858\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"2.548750416797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"23.04747388009643`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.006255432018367706`\\\"}]\\) for the integral and \
error estimates.\"", 2, 455, 83, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8678691679845476`*^9, 3.867869203829151*^9, 
  3.8678692389409885`*^9, 3.867869514073516*^9},
 CellLabel->
  "During evaluation of \
In[444]:=",ExpressionUUID->"a8d966a5-97c7-460b-b20f-9dc3237b0b4a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJyUvHlYTd8XP95w7+3WbZ7nbqEyU8nQsFfSKEqGQiRJZIiQoVGozEoUElJE
KY0iObdBswaaKDTPoTmN3/OuTvdxP7/v83u+/eNZ9j777rP2Gvd6raO419nS
gYONjW2TOBvbf//KJyf1Gm67rNvrdFpTSCITOa4mL32+h4GcfIa7l6dUo9RQ
n+DNy6rRUdhIWpLZiVxU3PTOj9ejoid1Skbqfajs+uZL9zNa0Tq97/PseofQ
20pp7lKOX6jsjUvp8MUxJKe9V/ROVw9qfZD5ZUSGDb5tunoLS+lH5rvkI33C
2OH82AotJ7s+1N6780N6NxvwJIdJlYqPosmL6WVDi0nQHWWQZ7uTDQzjWjz9
AsgQsvmPCw+FDE9LtfVWxlFAf+K+XPJrdti6TvPKIDsFwncP+/ff5gT5zKSD
9ico/zN/ej0KkIWtK6SqKRC8Wio5SpUK84Oda0k2NAidms8NL7SEy3458sLu
qfW5YdSexAUmfGDqDPdSPz9FbDN/BP8Ieu3UfAGYpgRh8fFIN07Tgtn5B2b4
S9CP4nU1KlsbZ2klr083dlQLzz6f8FRc0etI/ez4ECXo8kKd9lma5+8h1/LM
Fpbn5UHoyeUFQ9w8wL7gzGryBfHZ9T5bK0h39vXMzt+9MaNwvmQX832mnpec
nZ87/7/npWbpkqnnB2bnu5YrNcUtlpkdX/a8rlmUt3d2PM1YifdpuCycC414
nmQuAD6pySYdTnLgXOs6rOvMBzYnPkpXzpOH6+/yBc7cpwHr/i+5fI/Xf6MA
E8vHdoRUUaFQOEHPfhUd+OeG6s57SwX3HSePDobS4delpY8131HhTW5/U80I
HU7U7Jh7LoMKOx/2fWrbpgi2yxqf9BdSQcWu51zuO0V4w12xRP0rFTxMXx0f
llCCp9sqLee1UEH/6Mu/k15KwElX69zdT4XJY+sX+uu8QTUlkzEbZcoRq7wu
nnrfQXQ3RCNkBDhA2ybnFi3iL9LVZhfkSOQEN86C7DthY8jhou7RP49JM/LI
DmwSGjW3P5Fn5JcMx3Xp5rSPFEjaJfHeqogDap1pRfNMKRDxcmv7io0kCL1m
zNtym/I/810go/XkXi7QjSuPsuuhQKlHt9j5eipQBEYUD63mBY1Kv5wRd6Y8
nZ46L5FZunTqPMdnz2vJ1PuMzNJFU+cvNjt/+ryZ8lSVeKbNwIYDiPmFU/Ml
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
X7/568q0v+jWuU0ScmmcEMDFdngsYwyZjTx//eAlCYZNBK3i8ydRLtdulda9
ZHBxeqKrZ80OrjaFz1NbyZB1pNm/rJoDPDZYX/1jRuRjJKDU337OdpcCnmW3
vUd+kKFoSPLDqQLcnjLuzq0+ygXoVMySc72Ev2f6r51T9ytNs/wIn7rv6Zyl
E6fud5j3OcqxJ53BZGiWjo4WXesSIA9hjebClmE8kBOQd5G2QwH0QyutCtS5
cX2/G9LGSweVt6DbjNufBuOzx8uO0IGvTfx5GK4vF4MObK0uxvPnTxcGfXD7
6fmx87i2uRJ4cHP75eD5sUtWh84HGhcU5Aq0eLVTZu8z/m/yUDoTnxLjX2fy
ZYL+MWMfvG53vH/pzg0NWwrdj3UqQEdxsO9CBh7vphg/i9lCB96CJKFL+P40
zuYN7X5DBz+luY9y8f3ffb+W1luGx09DfH84Rol8gpnPpk/lC6z5K9csnbNw
vWjWVQXINOjZrTpKBU2r3F7JuXSo0N2yfg4uP8XfXmgP+tJBzfZV/lpcvo7x
d27WPagEN7otlSx6mPaPWI/IxwmasFcH3DwaEvLw/z/6GqSN6SCYnz0cj7/P
xg9dEg6PueDMgibFwkHcfk7F48znp+NzHuZ+f1w2a3VRAIlTetYnxbiB1BX7
0VuSDmkrY5q68f1WBwhV2Z+jww92e786fP3fU/thPj+dXzLzTcIe6vyad5qC
n3fXZB0N2dFh97E/jl7480S+rxtxlfvDCtoMf2nM/ZzhrQ2LUAC+pHWv5zZT
YX/mT4X4pXTw/BDAcwHnV/acteH+t3F+Pn7smIXTbQkd65CrEhh2i4UL9hH8
Y+Zv5iI+A8/zFGCRUtP+HZ9weTRp4ivTo8MuKa+eKnw/d6f2w5xvc8QgQvok
HSJvBzmm/ScfU/6Zmc+JMhpfUIcUQPy5Pxs37o+P1Yh+HdiB5w9/Vrn9F4+/
T+u+mNqBy7Nd+lrxccpMPMl8vvjaZu7m+XTYK1dILsb3P+3PmPlOQnuCefVP
3N9jVXUnsqhwLtD9hP1GOmhwup66m0rMZ/pTy5Tv3K+88fXmS3zgw9fbP/eV
rr8jHSYiGm5cweeT3umfMZDF/Vje3gvLNtJm4ivmfiaGDml6rKDDkf0Ogv/J
49xLTumYuxLsLNqf8Bvnp9uusO0dOo7o8O7GVYofM1HZzP1tpbVprSGdDTTd
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
7JmHdhjerZEZQ9gr/XE1fyGXmwVir/O8sUrNo6O4P6F9LQkfCkWZzNxiItGu
P7y54r1eLH+wgbODDdJ6JNj7zdKTz+hyw/6WNPQ1llC53PUT/b2+clBu+pki
f2YpwH62We722VyvMYQ90P1XDt4+cpmeRFsPTVv/Sbt+l7b+jbaeCXvGTqvp
n6ct3wW062lo19/R9qe09e+08STt+gjaegTa/p52PIA2n6Otz6atZ6GNr2jn
a2nHS2jrX2nXR9DWN9HO79DGg7Tjw7Tjl7TjQ7T16rTjB7T1b7TxLq23QBt/
0M4H0a5PoW3PaL1E2vaKdr6V1qOj9eVofUDa9ovWv6Ntv2g9N1pPi7Y9o11/
8P9rr2jn3/9/7Retf0bbHtH6ZrReEG17ROs50bZPtOtDaT0Q2vaJtj2iHf+l
9SVo2yda34e2vaL1S2jbK1q/g7b9oh2/oK2vo62voq0noV0/T7semna9Ie36
Ndr1H7Tjx7TjB7T5D208+NdbloB8bfR5NowspL++sQQMuxO8f78qC+nv/wvC
0jevmgxyVtzqa+IwO1NNfbyCifQ3PuKGPFJ8i4bzi+ivnywI07en7C4o5vgb
z7TwQ3/Wss7dVSv7kl2TgDWdD4x/G6z8fUseOHHF7ZiL2fLf/uSaIJyjW8U1
4oO/TwjGdHCcOHyG82/8qCYOt2xmZhI/y7hyfOIw3il/P1s689/jUROCHxkk
hR8lr/QPapJQa71zV4IHMwn7zcciv0zfuNW54kazQxLXmndBhnjfO15o0VnD
c0MeH48AlF3j+njk3kp8d00E9lfnvbNPWwB/z08a/in9zLn0vejv9bSknLdK
+rTy3Rb09/+l4GE/lrzi9BmEfem9BVt9521W4hc6Tuh+WifAk3Fw5f1iMGLb
5ieCF+lJf19LQo0Th1N/rWck/f1+KUh+xb1YYLn09/jouKHRyP0lZcf5lePl
hw5rLOzfSvX9jd/VpKHzW5FDt/pHEfavT2p2PonTWom/1figt7CYWuOb2ZX/
F4OXi33fEV8srryWhPsdyzbohTCtHI8AtMq6sm/b2Mr+AS3CMHPjQWvIx0r1
zteJ2G65Lj2xcr+lYT332TN09j//xjcpnLBCuWAyO3ns72s1KTjsYbF2nwv9
yvkJw5pugfLGs+xU3/xWXNjCy0OlK9dbFKYu+3jLSP9ZeX75oPSotM9bnf6V
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
7Ae6fUmWEAj/ArAfmI4i5N2GegH2A0803BmUaBgESzkBBmW3KfGHn7f62HEy
wH6g4CiTztRoP9h7MZ3J+LYM5ButnO/cWQKwH2hr/sZ5b3o0wn7gTboeDk5r
IsJ+oFZa4c/DFUSE/cDfDaX7/PJyEPYA+ThrCV87E9GL3sBZdOcP6LqToOX7
oRok+QnVppSMAb0jG4TrEmsB9v6K+vzfSVDi6a4VTyngcm5aMG8taF28+boz
jA3GchZM0ldkIgs7992dTBwwO8FTg+0kAWHv78rto8yhm3Ko3h/36syGoORi
hL2++xks6ST9eYTruXKaXKvTRBcR9vp41tW4nvNeWBkfFocv7VIcyu1+Auzp
3YmNrWSQGwTY0xPfe/iI/U0ywJ5ew8C7i3w1A0Clbs8VXWVZmFJVIH4p/wrA
vt7p92srpJJzUFvqw8MSB+Tgql3WC//LN655D5/sz6bk719MrB+JEpGGzdsg
r22jQGs06tmVzzXgdcycfeihCbBBxQ4douRjmnLcWpNe0+AcfftdldRaqq83
Frx5uP9GGuLZfpw9awc77InyVdGn5BufA3doW9dywJOrps4klBIQ9vfEuub6
F2MLEPbzbCI9Qhqu4vESIaiio84rLb6IsJ8nb/Hc55ja/Mr/S8B7J9a7rfvZ
B7B/96TFSey0ERkk9b++2FkkCb/RD+vMMJGBCsOBZ69CZeG+iJHX50NTUYOJ
0u9EBTm4eVfAosdzInrXOPXHLlgOqu5J86OPJyLs5/3y6ve81/YSOU5KOF04
PgY0HjW1bvGtBdjDS3Lv175LiTdxfV/a/O18v7FBsL5zq3lhEztMC+jYIEtp
j2z5j54ds+WE50/e1kk7no2wZ7c8IaXLwbCIsGeXsq9uWCR94Z/4lO68yQUV
Y0n4517LNW9KvoH9uUffWPXtH2ajHvvF8RtGcpD7TnS6JCUedhahXzYfHwdi
zyuBDiU+v6H+8PAjwWmw2laHIaqhFtBpqo76CbPDh+7P2LxuEVDuPM9m3Wcc
MO+qTc6ZYAJauJLSLyDJBekbXh8sGc2j+nGeTGeWa/UXEPbjPBsG3ywpLSLs
uxkuEoo9BcjAov5hp3mSJOT+YWTQvIly/bMjm6tdZWHvq+5D+elJKKabk8Qt
Kge3POjYdtqPiPJCj4c1+sjB+u6jzVtziaiPmUf7++px0BGbyfKlqhZg743B
872EClMd+MmDSPx5bPDJ68e159dQ4tehRMO5jRww8aVDFxMl38D1Ystnz5El
x3MQ9ttIqzcxzSovIuyraW5UYN57dZDyfLu+0vOWhB0ar+LW+ZKp9QE6z+tM
muWJqHZqHXprKwd7u28E8TYRV7y1CVBt6/Z4HyXfxPUB/Fm9ubPH0pHUgfvy
ZHd2eP0cl3X5AwK1HrDnswtnqUQW1VMreZPK55qzgLCnFrXqyVr55QWE/TNC
5oQbhwvl+u0TsguMk4XuLV2FB15lILrsrRL66+Ug+fP2DR5ZRJQoccdyKlIO
Zly/kDEUTETYS0vSPVZ2tjkehXteCj97cBIUK5yW76LEd9B+S1DYTjbI0rov
hbsnA2EPTVfhkpLZ+AJq7QEqJ7dKQkF6m9EzlPYlYEaP/OGjLLx+TL7SqDWL
Wj88kq18ZS0lfjS2YDLLJo0DE/aoU/JTtcBxpX6T9Hi0UOwKAb0mThSsDuCA
Z0+N8x92JyDskaVEJ+wnrF5EtL+f1Tsiboc/lYSv2o/XdZmRgb79PetQDzm4
nbk9TfADkeqHSfsF6Y9T4uejIQlZU3Fs8LJptXX0UiY69Sq8nCzNATvbHsJP
lHwDe2BywhdzPOQWkb+A4xGvs5KQ7mnMHdNAMsCeV7Jk8onl+Rxk0XQywu6w
HLQSaLz2v3i94tS0qFL4BOD4/ubIGUo+8KDKR7j+CDss4uOfTYwioF/lx9Id
+zjgI1O9RKNRyvO34m8xvG+c5uRaREI8F/ToOCVhjsLTbww2ZOB8NZ3RYzUl
Px2UPbEvmUj1s9ydvx5JoOQzUNa6tnqIHdZM3FlX7ExA2L/iveEofZlnEanN
WZCGDkjCVa5KWp4R5H/yu6M3K1UazeTguf3+/guUfCn082LGL+UJYO8ZRHpO
yc9C8nYsRq1lh5FVs4fKHxJQFVDN2ZXFAauqVj0cfkGg+lVaDcT78zKL6Mzj
jpq1DWzwCo+Ygdk+AipcqZfdM5ivt+8ogepF/WxWStOg5Bu06yWMJedGJx3k
oLf6Vn2WOiJiGxrxsxmZAMx3n7mHUJ7H+M7Udcw32eHWDLNQ59sEhP0l8u+o
iIBLZBBFrtDg2CAHb8Sb+v8sIiLsMZnXnY3qN49HJ31sWu7rTYK7cnzBDpT4
/4NkwVX/jZKwscQwvyiEDFatr14lsU0OevaMMh2pJKKN9vS2LWNssOJr6Zys
FwHFPHRafHGRA355MPv+y2kC1VuqagtSTqecz5HgJTY7fg5Y2v85gPf4v+d/
xqyHcN9BEl6z6W3PpXxfmit/qNWwLMx2NEJb2nKQEGl+TN9KDp5cLRQwTXme
cuku6be6T4Au3pOlj4TrgEXI2TsG+9hh940RGydKf8lxujl1LGYSGMVPKNVJ
1gGRDXXi7Hsl4cL30/FtlPuN/Y8nV+uP36XkYzLedrfemsjBGVg/+JHSPhle
3OjNKc8OR60ayo3uERBJ+vk0esUBSYXqelqU19gLShG3HDSi5N+rD9QYxZay
we9tW7PO6xPQFW5txoAdHNBy9RzjK0p7iv2fJFPOjO5Vi4iD/cGhxlNykMtF
pw00ENFMqEcCd9sEUJ4Srj0lUwdOPH7xytuPHZJgQUFnJAHtzlv3YUBaEsbv
VdPXvUAG/4+wO4+H6nsfAG7fIlvZR0ZRad+k9ZxSWihS2iQJrZaSUlosSahU
KHtMiCTKVkQH2feElJKthCHMjH3Mb37fz5zb63U/f3z+nBfD3LnnPvd5zjnP
+2acC96kb88C014Ebevh/j49vrBSf7MqXL7q6sm93Po5xjT4sLW+BrS4d8pz
kjteHvP6w08fSBOq8EpDr754uL7yl4AHpFXK3VzTEPZ34q+f+qjJ/Xx2ZUre
TjoS0PL3/A1O3M+P/RzXHd0v3WazUVBTD9+h86rwZI0IW82N+33yvJxNVqFf
d3Hzn/udJVo+RzRgXuqhWc7c6+effhEm6LkktHC3SjVomu4dfuSEOJRQ6R6T
49brMO/ziepDqhAsuPBkF/fzh4YvyWMZa8A3DgtQHvd8l7NNbmrricNn0iI7
Zf8/XpDmm7EfE8UyGunnjjelXY4HnouzQPtVU/p67ngmn2/svZinuy26I/0U
Yd8l5RBy3NNYAp7/ryGxDhi+7xwz8epBrTx/5WNB2sUTd+gI+y1XJXRG1CvL
AfZSeob2Waaeywex/3tdDhTmj2odsetF2EPRXxWrFp5RCLDHoi0WcgCFN6CR
/73+DApXy3yaUdmNsHdiza+5etWhFoT9lbs7jt1berwAYW8lwa965L5qDq+f
jg6SO3265bQ7EfZgfh9u/im59BPCPs36mY05/TVV/+xvNOsG2Y+OJzY6/USb
eD6LVIrxybbyPvSPv9IGxGS+Joi6/0bYa+lsjA1SHa1F7P/9vQ6wvOp4iN7L
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
KH3RMc1ZPhR47/pBa8W5TDQRkOJ+bas6NJgrVrR5PoPopzj9UydHyrwSDelP
hNw8QYUFTssXmJ+JBhG5N6gHyqjwtqHlcZd0GpjRRH+yZp4mvHdo5oaJdzRQ
v9H5Xb77e3Ax5o+CpwgH7H5PV7SNFoVHi1I7LolnEv7YjrnZ1LY0JsD+GMvq
Wm7MzGFePqAIJaWrbFKWsJGOlq+hXJssFL5xs+SpNh/cdWPErO6EAjy20/pK
eOYk8fzmNp1zYX1buPU3K6hHeI4KVDny7EPnzT7CJytYWJfm84KOFCTuVMpq
U6D5ltCyE3cYiDrtt8SjnxSok1XMX6HIRE1arn+cQqhQIrY3J1OfBranfov4
M8KNp4G6YVMNNODOWr6O05YK9AJPnUxDU+CDOp9+d04taFPYYsrHvd9ij8wx
urX8FTd+FdW7e+0xkILJ02ec5Ofm40c2X7GVS5WFJVb8abZqfNAnR2l0+qgC
PN16vnFr2l+f7OawXLE+Nx8/qxar8DWTAmdyJp7rr2aioTeLLGNaqdz85qLB
liru91/4lVIgXQQ2VD043TX77/MEmfVv9/icHQTYI9tVeH1h0x68v2QatHLY
VJolOQy0tdPnX7shCU/7D+l8dWOBNLUqn5my0+HmXw4z1vuzwKho6DI5GTlY
QKUH7ZnggFXfN+dQHinAlZr72l+7cK/XiG+KvqYq0C95sN9KuI/wyzo9xpsu
Mbn3x19/wmcfpEDtTVu/j9G59+OxBRzjGepw7SbVG+8KGKjycVbYmddU+MBx
kZGJDw1EJt35uk5aE25vyW4zqeXm4zzPbOK9b7D5EhrwrqfHrQorA6/s1zzt
nsUBmvNOpw4gcWjuMmI5mcACH+d+5A8ukYSFb0+mppxhgW8nft4ydZGFqbV7
B5Ofc8CzuIibY8vl4CBnlNl3gQMkl72L3JWlAPXjt4xcKGAjA+2A6vZLKtDZ
a9WnnA90JLLc2PbcNQpMK3COu6DGRKIcOTmvD1T4bsepq34vaKBJ2F47i6oJ
zy0QmhHKjcdudGtV2dB3IEHbqbp2dApg/+zifemNF+S58dSRImIeIAW9O5nj
n7j1EO7PbYk8RZnPrYdEvpsszqQoQmbpLNFUq78+2pSWwnNVGp1XL1Ngfbmu
V6oWE6Uyzt1TG6LCRvbEhrXc8ZltPqmV9qsGxHU7y5SMTAHsof2Oz1WZy2SB
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
QQHIb9tURqlM+NCG/ba2+c3lAicHsN8296hNFlOXgf22pakeLUTErN/2vNqe
kiXbjv02kVWp9dPHw7HflmgiJpDn5YX9NnnzjnqXO0+x3ya7zcly4cV47Lft
7w600TyejP223nW5iUsupWK/zXWL0JaRt2nYb9sRJbZ4z9gH7Lfps4Vx8iW/
J3Y+OBQy6NNFPMyPdgKMQly/0DcvqCiKUgm39TrLUV0owOhwqsevp9XwcLOq
SeYUFcyb5iE099Eh8t92nakdEVOohsh/M29ye3TpZzlE/puAp07VnbI0iPy3
c9Fcd9iOeszU8wkCU52jOYd3TELku1WqR5+WPcaEyHebt9Jko3rYOES+m74S
rD70iw0g3819z1WodJgKwiPCNnJEiwBbPX/jCUgByGsz2KKwaK5mH/baAoRO
0l4ODmGv7eD39Ra6frNe2+8gF12L17Ne25sI/6riWgiRt7b0StlLD1oq9tbU
icHmdvc07K11RHE4Fb+ow97azpClz1IjqmbqcdjB9fUat028qqBWn3n/Y20q
+JDeb1ijQ4d2i68lTbzmAEdP3ggKnq6GyGdLZGYHZTwphchnsznNwdlVtB4i
n21+Mu/AS8oLiLy1VolC6RhBJkTemqZW/w2PzchPEwbfDTVSrvtQAPLV7nMV
c244TQXIS1vDaevPuDKIvbTjvlcvnTKd9dI8hTpkv+0dgMg/41LsVnIeS8P1
PXZtllMH99UQAgna/eKbKOCcvGFb/GHW+nN14ahSNRXwvKi512hDx/XM1VvP
zZH7ngORjzZn+jVPQYo/7k922PJZ60fOHeybBT7LlT28kQq04zn87waKgMgB
nd5lExSAPLPHVyyqHicPYc+stnXXwksfh3D9o6+khlfp2Sq4t3UuVelHHdEo
/X7rskPVxHSCZE4GDxWId8YMpC+mw8O1Zy3s/TlAm6u9/gFZOkR+2dfbonRC
uwwivyxEgDdbMPYaRH7Z+kOxg8t3PIGFZlP6F2VoQD4g5URT/hT2y4iLA61v
X01B5Jf5r6zPuLSCAlA99d3T19avZe0XkU8WlL133RK2QeyT9dXl5jTuZMBb
1prL3sVLAZ2jNzY4cg1Cv2UJ5r+eUUCHQpv5UCNrvKrqxW5ZygEy3vARt03o
cE5KkU9THhdYofDyaZJxPEQ+mWKGyLmedEuIPDLTfRG7z+gxIfLIhtOXBbW7
UgHyx7L3d7+NlGOtf2NDu2VcpcA2V9HtSZJD0GX5DTk/1n3UFbA/PGwXqnfh
Aol3bsmlmZdA5I9dtM4O9lvlSVTIL5tbu5MGvp7vnS+4hQmRL7aycHcsR8Ek
RL7YMekL5TsqWffrsUT/8/tEQMgvzZ9dJlSA/DCjbzpfxDcyIPLBvLiSCqUE
03H9m8rnLI2wA3SIfDAFIWfB9PEA7IG1CJSIqTgxIfK/gncmPxhVoAJUzx6j
PbRbkBVf+2dKXa9bKwXsbxkllE8OwTalo0vlHDmAyeTFWuMVdEi+X1H9/JLE
sEJzGVa8OON5fdGsn/pwhfpXfrfNe+1FdiEO0CPiwtO2mw6R18VTRtO8ufsk
9rmSNaxCpCyZEPlcTAvZxCcOVIA8rmzXCxnqfAzscb3cHhKm3JQKLfiH/G+b
U8HnGP466+10iPyt365zNJ13lMLXJy833bXhBqJJx6J/X3Qkyvq/79Y2oIH3
FYPRfv/r7814WtUyXaFztzJg6wpZecd2Kqjc+LvKj/X+6iU/eikwxA2sp7QF
LISvELp7el1rb9AAj++CQ2GOTIjq8Veu3UBp2UUFEtWZ5i/lqeDnidKMPg06
jNu79e0BdW7wwD7iTeCOCxB5WO2Rjf2BblSA/CsnF5qMJWt/0tZgUhesywG+
cV6ZY2BAh8i30jV9Oz6qzITIt/p5mVek5TIVIM/K9tTe1G4NBvasOvcp7pYW
eAxvG6vkuPlRQV7lvTEfKzpEftWLz52G9+rewXfu6QMVN7jBOcvNmmuuXSGq
LS68OXqABjx2HLwgsJ8Jr/zWzvkjLQUmpzanPl7GgMirWmmhOz4ulo69qmSP
5KPOPz5iryrnto7azyW1uH7vl/yW9dXelbj+8ancSI3a3jJiON527+OPP4lf
lxI1tTcVEcA9zFFZrI84OeT0vqQqD3tW872VG87IQoieJ10iqMC2rLnor/o1
5FllbZXm6RauhsizKj0bYHVoPx0iz+rpvVCNwy+qIfKs+oMHSz0HKiDyrN4r
qgRZfS+AyLPKNuST99fyJ0Jn/AvpIvvxy9VpEHlWvUWvxQelmnG9/4aMJ/kC
bxgQ+VVaOnwnds2bgMivGhnIui7GigeQXwVf/QaCayYh8quS7BsGfPkYuH79
65nHJXHPGLhfItrw94KDpn8I5FfV+eTfNWGnAuRXBTbdenJwBRqPEsCwQe2K
pGAfDOE91N7SIw5C13OycU9+xP7U0nliCcOUbuxPKRxRCLxoPvTXeEf+lEEC
ET6aMetPiV57v1jw56w/BfrndyQp+GB/SobyftpELhT7U4E61h53zZ5hf4qw
7zkjnpeA/alLr55WJgSnYH/q4FUK96hSGvaneqIaJVUKG7A/9XuhuVW5DR3X
v55hqIpfbi4hjpkYSGpN/iKk249MMkML8PPiP/Fpl5pKF0JyPZmRqZuz1052
YHzH3KervBIiv+o0h9XuZGY1RPW/Y3F3v1gBOkR+lde6h21vgqog8qtWhV5r
dWwrg8ivesEtvI8/9AlEfpXBQzNnhsU1iJ7nJfTqXmFtZMlf9WHIp8roUttA
M5mCyKeSPeMWTsxn/lW/iHyq/u3ewqu4JgjkU/0e8ImuecsOkE/FPG1Td8iH
Cmo7B+oZdBHwSkfoWbABBSBfKsC4fQ1PSCv2pSbWf+IL3DOAfSmRxWYa3wgG
9qWUEl522yTN+lIbHfR+bHCY9aVyPpcvps5/hH2pKblH2z64e2Jfqn5wgf2r
40+xL3XOwPFX3P547Etph9n0elknY19qf2RdpIJLKval1v6UspDKTSP4Zup/
/fZJGxaZN2FfSi01ar5n4Xsi7Z/5p4vQ/mR0j4frHfEnj6vWd4QNDH4jUr0m
KqBe+zzt4tMU0LDEvfbJg2rI0a+s93OECvyfhZZoseYP5FO9t7QaXbGsGte7
vzz5/ePlkXLYyAyI+3SNCzSsitj3NjUdIp/KYLnZcu1WTyKdXyajrkYQ6LqE
nLhhNAmRP7Vu7Ko89QQTIn9qTHBg5dP0cYj8qY1L6lQNPrIB5E9ZTm5IGLah
AkG2kqPCT0XAR7fzSu4llL/GO/KkFrUmfTr2awh7Upp5201aQmY9KYndKUsP
/5r1pIC8mr+Pdz5EHpSNcNhOO55U7EFtCC+xM7rwdz0d8qAiTB5mV72qwvX8
HfJU+j05OlTv6OM6pEkFTL+41PcbWfHber9opRQOYL7gqOM6DjpEflTpnRxe
r/RSiPyoSi2LsInv+yDyoxYKfZs0DXkOkQdllrZuTJyLCZEH5bw0t87TYgoi
/0kx6o5ZyiUKQP7TcxAq6uFIBchzokntLOY7N4g9J6ULg0du75z1nIriJG8m
nx2AyGcas0pgGv9O+6vemiumgeubNgW80Im593Afa/0Jn9+zu5QKjFrMwppZ
+wOdmeeFye99br4gLAD7TcltUTe5tANw/1ZUrpeajG0Y9pfWPMj23raWCpJ5
1VNiA0SA8s0nj5XZUb3KbP008pY2LPrBtuvHEPaWwsMfh3QyqqCc3VyRd8l1
RISjzM4U9+q/Ph+OToft9705AMPVnM7D2i8gX2lsN+FnZ1IG2VYqD7ov5AYL
1+fbvr18AyJf6Xx0T/vYmghYYNDVbC5JA9P1XhGbX09BcryJfKXaet6MGnkK
QL7Sja1GW7ex4kfkJ3lWF/U79A1gP+kt/dj5YtZ+TUOptj8sVgpsKdh58rjE
IPRcbOCQ8IQCWju9zOrfs8arrk74+cUcoH16eFWoKR228cO3tEwukHonTOtD
4wuI/CTBm1ZJpeNLIfKS1suqpSzeyoTIS/KObh0qO0cFyEc6VPa+5LgkAx4v
uLFoxFkKNF27bS6hOoT7B/hjHiyjy8XB04pLtLceo4I14mbXC3bSIeoPOBFF
S1GTKoXIR+pVe3k+bb47US4s9vClCQ10+Ekx1Tax5vMZ/8guPGSOfv0kRP6R
bk5/m8471v2bray3y1IENJ/z6ZZmxZvIN3rx492Ajw4DIr8oZ2pkpfG89L/y
m8gvqkwQddDrDcBekURSyY4HrHgW+URbxOgdy6SoAPUb/jrx3FlOkgpUfbKM
nq+WAmoRwTa6VAb03XhYZscJDuCeqq14UZ0Oyfcv6pddq7HjxOPeKYi8oQVR
+h3JrM+bHD/73l99ZgU/B/AsLQ04tocOkSd0bHh7fUfUWewHsV+NEbNjxafI
D+KTfvp95CRrPZvxgv7YplwZ4mRgL6gzvHyLvtRruGPO9cjdrH3Wq09RWxhb
6BD5QGzZrS+SD5fCO+WuC+lW3MCwVuzFoaX2RGlr1S/hTTTWfp7/kZESE3s/
bh+IpUbbGdBbX0r08TcqGPnV/oGXNb6BtEVVRTc3+EUUvtuvcZUQtgp0a71O
A9nFCk8kWfsx5P0oeTlXRrL+joXFOx0cWO/r0SvjAXtW0uHVzE3M+6rcgOfT
1oU32y9D5PW0Zlds3O3O2k/N+Dwr9wvtsWXtF3y7t5dCbQ6Qm6D6sXQzHSJ/
J3GHwWO5lUyI/B2hyxL81h5UgLwdvzfn2PLUGNjboacKPPTLegwDDQobNnhR
wdd+STqwpEPk69glF1ny+xTByE8JyzgDuIH3qcWlf+x8iaqtdtt099HAWOAm
augeJnzweoxvgaQU8MxubFBVZ0Dk6dCPpPjvFE3H/Vp8a5XYvK3/ng/NTxZc
8z5NA1Grqmovn2JCu126cUKuIsBmm5vW48VU0FlfYLNdSATsPJ0u1uJLBcjP
qd822fRBnwHfFa6wuk7hAMWbNF/S9tKh1ZU/XIdoPABw3R1ZUuBGyJvUnvF+
RAN3DZ24fh5mwmM6xhpfpyWB41hp37QJAxacEaVM1lFBobiKfhrr81zLLOPX
+8YNpq2yr2yi+GO//lZIPPO5CxMi/+bqm5f6O/So2K+xujlZbu7Nep1bVbM8
OyVB53KFoSdmrP388Ufa6pPC4KZrOc8X1v4PeTTEi37DsCUM7NGcnT9xXKXh
Cbyk+ZvrnTMViIVwxm5j7Z+RPyPErvdpuKsY2oQ+iT3vzg12r6g8UpLtRVSq
AadRcxp4FWwees+YCQvXnklcLyIFCg4kF9hrMaBuCV9jag4VMLacCvJgvT7F
zKRgjWJukBmaeFDtewDBfcTAV9eNtT85EON1xJn51/i1u9ZwtllGBLxQ2cNe
j/P/rP3n1KX0pm0M7M3whmr6LRZLgsiX8a45MCWmXQqFNxwYDOSVApcSVWIu
GLL+HjGF5Zu6qUBx9GHoD9b9sFmn7brZGDcYPKBwsrnOh3DYbXy+IJgG3Mfe
3c1zYP61v8rS33B+xbAkiAjjmcvNGg/HpJON4VwRsOzeLcu1rPv4we7gyDdB
rH3Rg4rNkaz7oUM6Oy3kDjd4VLnNlhp4lag+HCgfZEsDnyTOX1A9yITIf9Gg
QRAqmT7Tj7oAuH69fq13qBV7L8WJki78czNm+jnZgY2jMtfHI7UzX6cC5cs7
5r64XjHzdSqgDSS5j+aUEM/+ua4lfn3KnHsn4w9RM+OlbEsCfef4prGPolcW
vpDW/2rGd+EAYrzFAfSz74jEGX9lw7bmtdni09iLCXG6aceZOIR9mLfKdi9F
fk/O/P4OYoQiv3bYYxx7MY8v7ZWKV2kiTGe8mLxvDF8Ofib2YtoVX9cWF0zM
/H/ThLGJt8saj08zv48ddPUU3W2Wa8A+zeQa0133Y/Nn+mHngJMeIQzVnqyZ
awoYa7jYurmNPvP6OMH0xXbZwvg8gvLPzzexXn9c1Tm2P9h/MdAsSfQM/0Gs
nvFnyjt29Rxy+jPTzyoEpuadv+i2oQr3V/ao7PWNHE7G/fX5r0s6UzwZM+ff
4iDXwvPlV61s3G+pG9aufduljHD/pz9ogEhL9rdfcO8NMb37Xw/CY/yrEV9u
G/YVlidsOdBZ3/LX9dUZn2B83e0ChuQU7seEu1wOWXaV4/7LktT3yfSREtxv
KchT6TNPshSi/vz31qtEw64UQ+Q1+B26v5Tn5AhEHsPSfAaVna0X+wsB8lkx
T+aNE8hbSKAsd9hmhDwQCeCXtHC/okTrv/2Lb2UA5eF03JPIx/j5K19M3W9M
hcXhftOurdr9pRuKiZp/3k8mce90n/Pq+CKI+k1HNQpV/bXLIerv3MOfs4Tt
eSXuz49rU9P2majDvkP6q+NbToiMz5xPzwflFVnWO+IZ2Hew7pr/h/mHSSCv
4UxQioTAjk7szRRv+Xah6uYd7M1oSAlMtd+IJpCfXnX6BZhYlEZsnenvdOZx
dR592TQTP/OBVRrS6X5qX2f6iWRBrs/0OqOficTgTL8v59jbzji3eiLqn8+n
mzhqajwxkZWPfZo7njtWfb4269NcqfX+ovKjCvsz6sKB2+c8TMP9qNH39jc4
x1bi/ti9Lyf2rMuvhkdnvA8DoaDW9WtSocE/73cfEb1u27kXFbm4f1Wcy6y6
qAZiv8BT9nWKeiDybmRAVUyh7TNBd+w16Jgqu77jYwfIX5i/zVSkuqUfexYC
A9lBnJ+mZj4fHiCTESaxtPP8X/WCyF9IFE+r95WZ/Kueh1z/Qq4HQV6M7il1
viWTaQS5/gJ5LCePKX5kcg1Ccr6a3B9J7u8h51PI/QXk/D25PoqcjyOvz+T8
BLn+nxz/ktd/cj8CeT0k17v91/xE7nclz0fkfDC5/4/cX0qen8jnTf/f+Yfc
T0iej8j9guT5iXy+RJ6vyPMJub+XPL+Q+3nJ8w35vPS/5h9yfxx5PiH3C5Hn
C/L5MHn8k8c3eTyT66XJ45vcX0Ue7+R+U/L4J/djkuuRyPMBub6TXE9Azi+T
87Hk/CR5PiDXv5DPu/9d70XBr31+Vr4c7AB5LarzaYqNP3qx1/IrdIdUGjUP
exgSA3kqN2QDsFeiUW3Pe/cg8jVEwNgfXWqJDxUgr4MRatgyKEwFyGNxWSvb
8qF1Cnsu2pr6K8+KMSDyV9gZf9qdXJjY9+ihJL3yEgiFyFuxu5vheXAL8kqE
wb74Opv5llSAPBHvNRoN3x8ysOeRKrZCWGhBJoG8GKtanxrFoTaI/Jfp/RaG
lc2j2GfhHxQcDzzVgn2UM0rVPyOmJ7EvIsfT3rtaqAQiv2X1zW0O3ldGIPJa
5LsvUCwezXgxngtB1K1jmR+0xwnktUSXfef8unKaQF6L8GX3raIWrdgPUdQv
9DtlWo/9FsPhIL23y8ZnvJL5QLMvSN/ZgwGR5xIiyhGwQgn5KxLAyXloGvp2
Yo8GDDpsbAr5CpHPEjDqzSW5pgV7NsU9k71fKGnYH1laNnBf796Mz6IiDIr5
j52/J8EOkJfydKPKkZ2p/dh/cdn9Iyi/bQoiX2eX5xKnE9Ye2HtxSsryURkb
hMhPgVkLjJ5yT868vyLggpTA5TmaFIA8lR6jiqZs5y6I/JRilQcLbwdRAPJS
opJ7+Xd8rMA+UIebhE3yokHspRS5mr+638T4Kx9B7lcnn1eT+4/J58/k/mBy
fQa5X5Tcn0XOL5P36+R+UXJ9J7kemlx/Q66vIudTyPUW5H5IcrxPzif+V3xP
9gTI8To5f/Rf8Ts5fibnJ/+/8TQ5f0GOb/8rfiX7BOT4lZyP/a/4ldxPSo5f
yf2l5HiW3N9Orm8mn3eQz1ORx6K1r7xi6iLyWYQAx71luvvsT/1Vj0E+b0Ue
yxyJmq7BzBK48lSAoGkC77/zPpsg+B0jZFFsIoGvUXzFNvMP+WzoGsWr6Bqt
j//3+2e/XjkTD6Fr5KGha+Sto2vk2f3fn5+9/nd+GCPQte8/7/8ovv4felgA
Iw==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{143, 145, 1452}, {248, 249, 725}}], 
           PolygonBox[{{1922, 65, 66, 695}, {1934, 499, 494, 786}}], 
           PolygonBox[{{1921, 32, 33, 691, 692}, {69, 91, 696, 697, 698}}], 
           PolygonBox[{{1932, 472, 474, 884, 808, 767}}], 
           
           PolygonBox[{{1960, 241, 247, 843, 724, 1515, 1210, 1009}, {1951, 
            466, 468, 766, 1550, 1245, 1044, 919}, {1941, 5706, 5707, 1544, 
            1239, 1038, 913, 837}, {807, 238, 240, 723, 1514, 1209, 1008, 
            883}, {1942, 5710, 5711, 1548, 1243, 1042, 917, 841}, {1947, 20, 
            21, 686, 1483, 1178, 977, 852}}], 
           PolygonBox[{{1940, 344, 348, 745, 1530, 1225, 1024, 899, 823}}], 
           PolygonBox[{{1308, 5712, 5713, 1489, 1184, 983, 1686, 1380, 858, 
            1613}, {1948, 116, 118, 1087, 962, 705, 1495, 1190, 989, 864}, {
            1943, 458, 463, 954, 765, 1549, 1244, 1043, 918, 842}}], 
           
           PolygonBox[{{1963, 618, 620, 1513, 1208, 1007, 882, 806, 1585, 
            1280, 1079}, {1288, 349, 353, 936, 746, 1531, 1226, 1025, 900, 
            824, 1593}, {1962, 502, 604, 1494, 1189, 988, 863, 787, 1567, 
            1262, 1061}}], 
           
           PolygonBox[{{1954, 614, 615, 1508, 1203, 1002, 877, 801, 1580, 
            1275, 1074, 949}, {1955, 616, 617, 1512, 1207, 1006, 881, 805, 
            1584, 1279, 1078, 953}, {1693, 209, 207, 971, 1680, 1374, 1173, 
            717, 1507, 1202, 1792, 1001}}], 
           
           PolygonBox[{{1926, 314, 322, 1057, 1713, 1407, 932, 1653, 1348, 
            1146, 1766, 1460, 1883, 740}, {1124, 287, 288, 776, 735, 1524, 
            1219, 1018, 1696, 1390, 893, 1630, 1325, 1826}}], 
           
           PolygonBox[{{1258, 36, 38, 693, 1488, 1183, 982, 857, 1612, 1307, 
            1106, 1742, 1436, 781, 1563}}], 
           
           PolygonBox[{{1636, 358, 361, 788, 1568, 1263, 1062, 937, 747, 1532,
             1227, 1026, 1699, 1393, 1852, 901}, {1299, 443, 444, 950, 761, 
            1545, 1240, 1039, 914, 1646, 1341, 1140, 1761, 1455, 838, 1604}, {
            1266, 141, 142, 965, 708, 1498, 1193, 992, 867, 1618, 1313, 1112, 
            1746, 1440, 791, 1571}}], 
           
           PolygonBox[{{853, 23, 24, 1448, 1878, 817, 1587, 1282, 1081, 956, 
            687, 1484, 1179, 978, 1685, 1379, 1848}, {1925, 312, 313, 1562, 
            1257, 1801, 1056, 1712, 1406, 931, 1652, 1347, 1145, 1765, 1459, 
            1882, 739}}], 
           
           PolygonBox[{{1862, 210, 226, 718, 1509, 1204, 1003, 878, 1626, 
            1321, 1120, 802, 1581, 1276, 1808, 1075, 1723, 1417}, {1927, 324, 
            325, 1107, 1743, 1437, 782, 1564, 1259, 1058, 933, 1654, 1349, 
            1147, 1767, 1461, 1884, 741}, {1446, 227, 228, 1814, 1098, 973, 
            719, 1510, 1205, 1004, 1694, 1388, 879, 1627, 1322, 1823, 1121, 
            1752}}], 
           PolygonBox[CompressedData["
1:eJwNzr1LAlAUhvHThwWCEEThJDQEtTRFo9EiCYrY0F4QTWoWRVRTBLbb4NDi
4GaNttbYUA1NLk5BTf4BRthveLnP8557Lndpv7ZTnYyIaZmXU/A8EfEiazMR
f3xdnqYirnk5EdHgI0tJ3sdz0sUXZk33ajiLD2YjCosRRXnQXeruzI/wJj6z
t81zfIEX+Adv8j3e4r/4FQ+cdX86l5R3V816uhuzrp2h/4zxuz4hHbMTfmt2
iDfwsr2K2Yrzyzs/8qa/1326tyt5d9O6ki7J0/wbZ+QRX5m19cd4C/8D1IEo
Mg==
            "]], 
           PolygonBox[CompressedData["
1:eJwVzq1Lg3EUxfGrbq5YBJNsoKAiGFR8GcxmEixTEDSpC7OIhhWbrsyi/gOC
wWYdYnNb2dowzWJS7GsbDAU/hsPzPefc333udOF892w4IhI0QbWRiJmhiFn6
Ho2oJiM+DfR8m4Z+9Jd0pFuUFWUr/Bqf4Df4Or7FW6mIcZqzK0uP5kq6Td2F
uS97+7iFf3VXdKxfkp3IPvATXpWv4yQew2l3Zqghu5PVZdd4D994V7X3DT/g
jm6ftvWTsh1ZG9/jvNve+We3vVCOPzV7oJ/XH+qm+AV+gJf/Z/kyn9dX+C5+
xX3/TOE/kg8pqQ==
            "]], 
           
           PolygonBox[{{1794, 289, 291, 1303, 1816, 1102, 1740, 1434, 777, 
            1559, 1254, 1053, 928, 1649, 1344, 1143, 1763, 1457, 736, 1525, 
            1220}, {1471, 624, 625, 1697, 1391, 894, 1631, 1326, 1125, 818, 
            1588, 1283, 1082, 1726, 1420, 957, 1669, 1363, 1840, 1162, 
            1777}, {939, 139, 140, 1168, 1781, 1475, 707, 1497, 1192, 991, 
            866, 1617, 1312, 1111, 790, 1570, 1265, 1064, 1717, 1411, 1859}}], 
           PolygonBox[CompressedData["
1:eJwV0K1LQ3EYxfFH73TiTSIIF4MKtgURXXEWbTPJEMQ62IriQBCTGAQV17Zs
E4xiWzAYpklNFv0LRFhZFYefhcNzzvd5+XHvQrVRORyNiBzNUHssYn8kokFl
vpCPONP8GY/oyD3DA/UNy9FlElHXK2IHcklel1N52u4m9ixPDaubL1TQm9er
Yp96d/KivSV+gBXpkb/GO/g5X+Gv8F/vp/IXn3djhY6xE/oz84onWKLemjvC
Ltyo8avDb8PX5JI8KW/IXb7Fd/Emv8efUuZ/zNIOv+xm02xf/0l+8N67eoN9
2NulLb0M28ZSOZO/+Qm7c+q9/A+JLSps
            "]], 
           
           PolygonBox[{{990, 119, 138, 1828, 1130, 1757, 1451, 825, 1594, 
            1289, 1088, 1731, 1425, 963, 1674, 1368, 1167, 1780, 1474, 706, 
            1496, 1191, 1789}, {1891, 5704, 5705, 1037, 1707, 1401, 912, 1645,
             1340, 1139, 836, 1603, 1298, 1097, 1738, 1432, 972, 1681, 1375, 
            1846, 1174, 1785, 1479}}], 
           
           PolygonBox[{{880, 229, 230, 1456, 1881, 839, 1605, 1300, 1815, 
            1099, 1739, 1433, 1871, 974, 1682, 1376, 1847, 1175, 1786, 1480, 
            1892, 720, 1511, 1206, 1793, 1005, 1695, 1389, 1851}, {748, 605, 
            606, 1381, 1849, 865, 1616, 1311, 1818, 1110, 1745, 1439, 1874, 
            789, 1569, 1264, 1804, 1063, 1716, 1410, 1858, 938, 1657, 1352, 
            1834, 1150, 1769, 1463, 1885}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{248, 254, 1924}}], 
           PolygonBox[{{987, 495, 494, 862}, {69, 92, 1923, 699}}], 
           PolygonBox[{{703, 99, 115, 1188, 1493}}], 
           PolygonBox[{{861, 339, 343, 1928, 744, 785}}], 
           
           PolygonBox[{{905, 162, 163, 1790, 1195, 1500, 710, 829}, {792, 391,
             392, 1702, 1030, 1231, 1536, 751}, {768, 477, 481, 1952, 920, 
            1045, 1246, 1551}}], 
           
           PolygonBox[{{726, 259, 260, 1936, 809, 885, 1010, 1211, 1516}, {
            143, 146, 868, 993, 1194, 1499, 709, 828, 1879}}], 
           
           PolygonBox[{{844, 264, 265, 1324, 1629, 886, 1011, 1212, 1517, 
            727}, {1831, 208, 207, 1096, 1297, 1602, 835, 1454, 1760, 1138}, {
            994, 607, 610, 752, 941, 1066, 1267, 1572, 793, 869}}], 
           
           PolygonBox[{{1232, 5702, 5703, 1957, 966, 1091, 1292, 1597, 830, 
            906, 1031}}], 
           
           PolygonBox[{{1861, 419, 427, 1931, 757, 1888, 1467, 1773, 1156, 
            1358, 1663, 946}, {1367, 97, 98, 1959, 986, 1187, 1492, 702, 1473,
             1779, 1166, 1842}, {1123, 621, 623, 1668, 955, 1863, 1419, 1725, 
            1080, 1281, 1586, 810}}], 
           
           PolygonBox[{{1756, 626, 627, 1673, 961, 1866, 1424, 1730, 1086, 
            1287, 1592, 822, 1450}}], 
           
           PolygonBox[{{716, 205, 206, 1445, 1751, 1118, 1822, 1319, 1624, 
            875, 1386, 1692, 1000, 1201, 1506}}], 
           
           PolygonBox[{{1152, 393, 394, 1734, 1092, 1812, 1293, 1598, 831, 
            1134, 1335, 1640, 907, 1397, 1703, 1032, 1233, 1538, 753}, {700, 
            93, 94, 1655, 934, 1857, 1408, 1714, 1059, 1260, 1565, 783, 1108, 
            1309, 1614, 859, 984, 1185, 1490}, {1833, 331, 332, 1085, 1810, 
            1286, 1591, 821, 1128, 1329, 1634, 897, 1022, 1223, 1528, 742, 
            1462, 1768, 1148}}], 
           
           PolygonBox[{{1115, 399, 416, 1399, 1705, 1034, 1797, 1235, 1540, 
            755, 1154, 1356, 1661, 944, 1069, 1270, 1575, 796, 1443, 1749}, {
            1423, 95, 96, 784, 1873, 1438, 1744, 1109, 1310, 1615, 860, 985, 
            1186, 1491, 701, 1165, 1366, 1672, 960, 1865}}], 
           
           PolygonBox[{{1772, 417, 418, 970, 1870, 1431, 1737, 1095, 1296, 
            1601, 834, 1137, 1338, 1643, 910, 1035, 1236, 1541, 756, 1887, 
            1466}, {1599, 176, 177, 1821, 1316, 1621, 872, 1384, 1690, 997, 
            1198, 1503, 713, 1170, 1371, 1677, 968, 1429, 1735, 1093, 1294}, {
            711, 164, 166, 1659, 942, 1067, 1268, 1573, 794, 1441, 1747, 1113,
             1819, 1314, 1619, 870, 1382, 1688, 995, 1196, 1501}}], 
           
           PolygonBox[{{1566, 333, 338, 1827, 1330, 1635, 898, 1392, 1698, 
            1023, 1224, 1529, 743, 1149, 1351, 1656, 935, 1409, 1715, 1060, 
            1803, 1261}, {1679, 203, 204, 1721, 1071, 1807, 1272, 1577, 798, 
            1117, 1318, 1623, 874, 999, 1200, 1505, 715, 1478, 1784, 1172, 
            1845, 1373}}], 
           
           PolygonBox[{{1199, 611, 613, 1155, 1837, 1357, 1662, 945, 1414, 
            1720, 1070, 1271, 1576, 797, 1444, 1750, 1116, 1317, 1622, 873, 
            1385, 1691, 998, 1791}}], 
           
           PolygonBox[{{1855, 184, 185, 1504, 714, 1890, 1477, 1783, 1171, 
            1844, 1372, 1678, 969, 1869, 1430, 1736, 1094, 1813, 1295, 1600, 
            833, 1136, 1337, 1642, 909}, {1876, 429, 430, 1339, 1644, 911, 
            1400, 1706, 1036, 1237, 1542, 758, 1468, 1774, 1157, 1838, 1359, 
            1664, 947, 1416, 1722, 1072, 1273, 1578, 799}}], 
           
           PolygonBox[{{1428, 174, 175, 1574, 795, 1875, 1442, 1748, 1114, 
            1820, 1315, 1620, 871, 1383, 1689, 996, 1197, 1502, 712, 1476, 
            1782, 1169, 1370, 1676, 967, 1868}}], 
           
           PolygonBox[{{1068, 397, 398, 1453, 1759, 1135, 1830, 1336, 1641, 
            908, 1854, 1398, 1704, 1033, 1796, 1234, 1539, 754, 1886, 1465, 
            1771, 1153, 1836, 1355, 1660, 943, 1860, 1413, 1719}}], 
           PolygonBox[CompressedData["
1:eJwVzDdOg2EQhOHPuUIi/kQhURPMLahMMDdwgaigJF6AklDwm1RTcgBiSUVJ
zrRgMkgUPC5e7c7MznaVJosTyRBCAuPI50KoITpxLRijjzMh/GVDiNMhlOwr
9pNUCAV6Rx7xBnijvC108J8Q8XL0spt+cx6/OJK961z5X5YVeZto5z+iSS9L
5zGHHxzy33QudUboDbTxHtDoPkP3Vf/4N2t+40D2qnOhM0yvo5V3jwadNL3k
vtecwRf2ZRWdc51YNsRbQwv/DvV6KXpR1mNO4xN7she9M71V2SCvjGb+Ler0
knQ3prDt5sPclT3rneoV6BgR7wa1Oonqb3nFvsD7B4gFOMI=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[{1, 379, 274, 190, 126, 536}], 
          LineBox[{2, 504}], 
          LineBox[{3, 4, 5, 6, 7, 380}], 
          LineBox[{8, 381, 276, 192, 128, 81, 518}], 
          LineBox[{107, 10, 383, 278, 194, 541}], 
          LineBox[{13, 386, 281, 197, 133, 538}], 
          LineBox[{111, 14, 387, 282, 198}], 
          LineBox[{15, 388, 283, 199, 135, 88, 521}], 
          LineBox[{16, 389, 284, 200, 136, 89}], 
          LineBox[{352, 493, 268, 480, 375, 17, 390, 285, 201, 137}], 
          LineBox[{18, 505}], 
          LineBox[{19, 5700}], 
          LineBox[{5701, 39, 40, 41, 400}], 
          LineBox[{42, 401, 296, 212, 148, 101, 431, 326}], 
          
          LineBox[{121, 439, 334, 250, 186, 459, 354, 270, 43, 402, 297, 213, 
           464, 359, 149, 445, 340}], 
          LineBox[CompressedData["
1:eJwV0csrpXEYB/D3SKYoh9WsFZsZ9z1j6TZmTNlQlEuOU5iaKLfyP+DgH3AZ
NiPKfcPCAiV1OCWKJJfN1EwWKJ938en7fZ7fr/N23jevvf9HXyQIgnFalUxq
9TlZwb2+yJ7eTAbD5nX5jRc9JX+ypR/KDqJcM0Sh/YT8RFI/kTES+q5s4pEI
F/ziH93O/8hq7sKdOSl7+cuq+UC28UQWVwzynzrn87KSWx7MpzLOb31ftvCB
SwYYsd+Q33nVtznSOylIC4IcWWQ3KT9zpk8TY8VcEz5bX6OeBfOX8P/pS4zy
0e8Uy6nw3XCuz9BDtrOvMl2WyFJe3SmTifDZpPRZ4kTdawi/kX1V+B70ZcbY
NDeS786beYdjcxe53ITfkmfKnb0D9ONGbg==
           "]], 
          LineBox[{79, 51, 509}], 
          LineBox[{52, 510}], 
          LineBox[{53, 511}], 
          LineBox[{82, 54, 407, 302, 218, 154}], 
          LineBox[{86, 58, 411, 306, 222, 158}], 
          LineBox[{134, 87, 59, 412}], 
          LineBox[{60, 413, 308, 224, 160, 113, 531}], 
          
          LineBox[{426, 321, 237, 173, 61, 414, 309, 225, 161, 447, 342, 
           258}], 
          LineBox[{90, 62, 512}], 
          LineBox[{72, 420, 315, 231, 167, 120, 534}], 
          LineBox[{242, 178, 73, 421, 316, 232, 168, 450, 345, 261, 545}], 
          LineBox[{275, 191, 127, 80, 517}], 
          LineBox[{130, 83, 55}], 
          LineBox[{384, 279, 195, 131, 84, 519}], 
          LineBox[{385, 280, 196, 132, 85, 520}], 
          LineBox[{295, 211, 147, 100, 525}], 
          
          LineBox[{475, 370, 102, 432, 327, 486, 243, 469, 364, 496, 179, 
           455}], 
          LineBox[{408, 303, 219, 155, 108, 528}], 
          LineBox[{409, 304, 220, 156, 109, 529}], 
          LineBox[{307, 223, 159, 112, 530}], 
          LineBox[{114, 435, 330, 246, 471, 366, 498, 182, 457}], 
          LineBox[{382, 277, 193, 129, 537}], 
          LineBox[{410, 305, 221, 157, 110}]}, 
         Annotation[#, "Charting`Private`Tag$198010#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[{686, 1483, 1178, 977, 852, 1947}], 
          
          LineBox[{1448, 1878, 817, 1587, 1282, 1081, 956, 687, 1484, 1179, 
           978, 1685, 1379, 1848, 853}], 
          
          LineBox[{1364, 1841, 1163, 1778, 1472, 689, 1486, 1181, 980, 855, 
           1610, 1305, 1104, 779, 1561, 1256, 1800, 1055, 1711, 1405}], 
          
          LineBox[{1728, 1422, 959, 1671, 1365, 1164, 690, 1487, 1182, 981, 
           856, 1611, 1306, 1105, 1741, 1435, 1872, 780}], 
          LineBox[{691, 692, 1921}], 
          
          LineBox[{693, 1488, 1183, 982, 857, 1612, 1307, 1106, 1742, 1436, 
           781, 1563, 1258}], 
          LineBox[{695, 1922}], 
          LineBox[{696, 697, 698, 69, 699, 1923}], 
          
          LineBox[{700, 1490, 1185, 984, 859, 1614, 1309, 1108, 783, 1565, 
           1260, 1059, 1714, 1408, 1857, 934, 1655}], 
          
          LineBox[{1423, 1865, 960, 1672, 1366, 1165, 701, 1491, 1186, 985, 
           860, 1615, 1310, 1109, 1744, 1438, 1873, 784}], 
          LineBox[{1367, 1842, 1166, 1779, 1473, 702, 1492, 1187, 986, 1959}], 
          LineBox[{703, 1493, 1188}], 
          LineBox[{1087, 962, 705, 1495, 1190, 989, 864, 1948}], 
          
          LineBox[{1828, 1130, 1757, 1451, 825, 1594, 1289, 1088, 1731, 1425, 
           963, 1674, 1368, 1167, 1780, 1474, 706, 1496, 1191, 1789, 990}], 
          
          LineBox[{1168, 1781, 1475, 707, 1497, 1192, 991, 866, 1617, 1312, 
           1111, 790, 1570, 1265, 1064, 1717, 1411, 1859, 939}], 
          
          LineBox[{965, 708, 1498, 1193, 992, 867, 1618, 1313, 1112, 1746, 
           1440, 791, 1571, 1266}], 
          LineBox[{1452, 143, 1879, 828, 709, 1499, 1194, 993, 868}], 
          LineBox[{905, 829, 710, 1500, 1195, 1790}], 
          
          LineBox[{711, 1501, 1196, 995, 1688, 1382, 870, 1619, 1314, 1819, 
           1113, 1747, 1441, 794, 1573, 1268, 1067, 942, 1659}], 
          
          LineBox[{1428, 1868, 967, 1676, 1370, 1169, 1782, 1476, 712, 1502, 
           1197, 996, 1689, 1383, 871, 1620, 1315, 1820, 1114, 1748, 1442, 
           1875, 795, 1574}], 
          
          LineBox[{1599, 1294, 1093, 1735, 1429, 968, 1677, 1371, 1170, 713, 
           1503, 1198, 997, 1690, 1384, 872, 1621, 1316, 1821}], 
          
          LineBox[{1855, 909, 1642, 1337, 1136, 833, 1600, 1295, 1813, 1094, 
           1736, 1430, 1869, 969, 1678, 1372, 1844, 1171, 1783, 1477, 1890, 
           714, 1504}], 
          
          LineBox[{1679, 1373, 1845, 1172, 1784, 1478, 715, 1505, 1200, 999, 
           874, 1623, 1318, 1117, 798, 1577, 1272, 1807, 1071, 1721}], 
          
          LineBox[{716, 1506, 1201, 1000, 1692, 1386, 875, 1624, 1319, 1822, 
           1118, 1751, 1445}], 
          
          LineBox[{1831, 1138, 1760, 1454, 835, 1602, 1297, 1096, 207, 971, 
           1680, 1374, 1173, 717, 1507, 1202, 1792, 1001, 1693}], 
          
          LineBox[{718, 1509, 1204, 1003, 878, 1626, 1321, 1120, 802, 1581, 
           1276, 1808, 1075, 1723, 1417, 1862}], 
          
          LineBox[{1814, 1098, 973, 719, 1510, 1205, 1004, 1694, 1388, 879, 
           1627, 1322, 1823, 1121, 1752, 1446}], 
          
          LineBox[{1456, 1881, 839, 1605, 1300, 1815, 1099, 1739, 1433, 1871, 
           974, 1682, 1376, 1847, 1175, 1786, 1480, 1892, 720, 1511, 1206, 
           1793, 1005, 1695, 1389, 1851, 880}], 
          LineBox[{723, 1514, 1209, 1008, 883, 807}], 
          LineBox[{843, 724, 1515, 1210, 1009, 1960}], 
          LineBox[{725, 248, 1924}], 
          LineBox[{726, 1516, 1211, 1010, 885, 809, 1936}], 
          LineBox[{844, 727, 1517, 1212, 1011, 886, 1629, 1324}], 
          LineBox[CompressedData["
1:eJwNzCdWA0AYReE/FUsN1aApYReoUMIOEJEgqRtAUgQJEDSSBRCKRCHpHQuh
wzkIPnHPzHtv7vROThenEhFRQr4hYikdUc9G1DIRiVREo/uNLoeyXMBpMuLZ
vqf7kHd4M84+JNHEubW1oyKPYN2bM94Lr6b/1M2iH8u2lLOZd2frwIY8irLt
nFfn7eu/dHMYwIot7Wzh3ds6sSmP4YLzyjnQfcvzqHo/6MyglfNg68KWPI5L
zhvnUPcjLyCPLNq8f9R3oyoXUfHfFeedc6T/1S1iCKu2BmeO92TrwbY8gWFd
jrPrTUF/olvTTerK8p/7sXvJfu3/f+AsOJE=
           "]], 
          
          LineBox[{776, 735, 1524, 1219, 1018, 1696, 1390, 893, 1630, 1325, 
           1826, 1124}], 
          
          LineBox[{1303, 1816, 1102, 1740, 1434, 777, 1559, 1254, 1053, 928, 
           1649, 1344, 1143, 1763, 1457, 736, 1525, 1220, 1794}], 
          
          LineBox[{1764, 1458, 737, 1526, 1221, 1020, 895, 1632, 1327, 1126, 
           819, 1589, 1284, 1083, 1727, 1421, 1864, 958}], 
          
          LineBox[{930, 1651, 1346, 1144, 738, 1527, 1222, 1021, 896, 1633, 
           1328, 1127, 1755, 1449, 820, 1590, 1285, 1809}], 
          
          LineBox[{1562, 1257, 1801, 1056, 1712, 1406, 931, 1652, 1347, 1145, 
           1765, 1459, 1882, 739, 1925}], 
          
          LineBox[{1057, 1713, 1407, 932, 1653, 1348, 1146, 1766, 1460, 1883, 
           740, 1926}], 
          
          LineBox[{1107, 1743, 1437, 782, 1564, 1259, 1058, 933, 1654, 1349, 
           1147, 1767, 1461, 1884, 741, 1927}], 
          
          LineBox[{1833, 1148, 1768, 1462, 742, 1528, 1223, 1022, 897, 1634, 
           1329, 1128, 821, 1591, 1286, 1810, 1085}], 
          
          LineBox[{1566, 1261, 1803, 1060, 1715, 1409, 935, 1656, 1351, 1149, 
           743, 1529, 1224, 1023, 1698, 1392, 898, 1635, 1330, 1827}], 
          LineBox[{861, 785, 744, 1928}], 
          LineBox[{745, 1530, 1225, 1024, 899, 823, 1940}], 
          LineBox[{936, 746, 1531, 1226, 1025, 900, 824, 1593, 1288}], 
          
          LineBox[{788, 1568, 1263, 1062, 937, 747, 1532, 1227, 1026, 1699, 
           1393, 1852, 901, 1636}], 
          
          LineBox[{1353, 1835, 1151, 1770, 1464, 749, 1534, 1229, 1028, 903, 
           1638, 1333, 1132, 827, 1596, 1291, 1811, 1090, 1733, 1427}], 
          
          LineBox[{1805, 1065, 1718, 1412, 940, 750, 1535, 1230, 1029, 1701, 
           1395, 904, 1639, 1334, 1829, 1133, 1758}], 
          LineBox[{792, 751, 1536, 1231, 1030, 1702}], 
          
          LineBox[{1152, 753, 1538, 1233, 1032, 1703, 1397, 907, 1640, 1335, 
           1134, 831, 1598, 1293, 1812, 1092, 1734}], 
          
          LineBox[{1068, 1719, 1413, 1860, 943, 1660, 1355, 1836, 1153, 1771, 
           1465, 1886, 754, 1539, 1234, 1796, 1033, 1704, 1398, 1854, 908, 
           1641, 1336, 1830, 1135, 1759, 1453}], 
          
          LineBox[{1115, 1749, 1443, 796, 1575, 1270, 1069, 944, 1661, 1356, 
           1154, 755, 1540, 1235, 1797, 1034, 1705, 1399}], 
          
          LineBox[{1772, 1466, 1887, 756, 1541, 1236, 1035, 910, 1643, 1338, 
           1137, 834, 1601, 1296, 1095, 1737, 1431, 1870, 970}], 
          LineBox[{1861, 946, 1663, 1358, 1156, 1773, 1467, 1888, 757, 1931}], 
          
          LineBox[{1876, 799, 1578, 1273, 1072, 1722, 1416, 947, 1664, 1359, 
           1838, 1157, 1774, 1468, 758, 1542, 1237, 1036, 1706, 1400, 911, 
           1644, 1339}], 
          
          LineBox[{1850, 876, 1625, 1320, 1119, 800, 1579, 1274, 1073, 948, 
           1665, 1360, 1158, 1775, 1469, 759, 1543, 1238}], 
          
          LineBox[{950, 761, 1545, 1240, 1039, 914, 1646, 1341, 1140, 1761, 
           1455, 838, 1604, 1299}], 
          
          LineBox[{1582, 1277, 1076, 951, 1666, 1361, 1159, 762, 1546, 1241, 
           1040, 1708, 1402, 915, 1647, 1342, 1141}], 
          
          LineBox[{1323, 1824, 1122, 1753, 1447, 804, 1583, 1278, 1077, 1724, 
           1418, 952, 1667, 1362, 1160, 763, 1547, 1242, 1799, 1041}], 
          LineBox[{954, 765, 1549, 1244, 1043, 918, 842, 1943}], 
          LineBox[{766, 1550, 1245, 1044, 919, 1951}], 
          LineBox[{884, 808, 767, 1932}], 
          LineBox[{768, 1551, 1246, 1045, 920, 1952}], 
          
          LineBox[{1485, 1180, 979, 854, 1609, 1304, 1103, 778, 1560, 1255, 
           1054, 1710, 1404, 929, 1650, 1345, 1832}], 
          LineBox[{987, 862, 494, 786, 1934}], 
          LineBox[{1494, 1189, 988, 863, 787, 1567, 1262, 1061, 1962}], 
          
          LineBox[{1381, 1849, 865, 1616, 1311, 1818, 1110, 1745, 1439, 1874, 
           789, 1569, 1264, 1804, 1063, 1716, 1410, 1858, 938, 1657, 1352, 
           1834, 1150, 1769, 1463, 1885, 748}], 
          LineBox[{994, 869, 793, 1572, 1267, 1066, 941, 752}], 
          
          LineBox[{1199, 1791, 998, 1691, 1385, 873, 1622, 1317, 1116, 1750, 
           1444, 797, 1576, 1271, 1070, 1720, 1414, 945, 1662, 1357, 1837, 
           1155}], 
          LineBox[{1508, 1203, 1002, 877, 801, 1580, 1275, 1074, 949, 1954}], 
          LineBox[{1512, 1207, 1006, 881, 805, 1584, 1279, 1078, 953, 1955}], 
          LineBox[{1513, 1208, 1007, 882, 806, 1585, 1280, 1079, 1963}], 
          LineBox[{1123, 810, 1586, 1281, 1080, 1725, 1419, 1863, 955, 1668}], 
          
          LineBox[{1697, 1391, 894, 1631, 1326, 1125, 818, 1588, 1283, 1082, 
           1726, 1420, 957, 1669, 1363, 1840, 1162, 1777, 1471}], 
          
          LineBox[{1756, 1450, 822, 1592, 1287, 1086, 1730, 1424, 1866, 961, 
           1673}], 
          
          LineBox[{1533, 1228, 1795, 1027, 1700, 1394, 902, 1637, 1332, 1131, 
           826, 1595, 1290, 1089, 1732, 1426, 964, 1675, 1369, 1843}], 
          LineBox[{1232, 1031, 906, 830, 1597, 1292, 1091, 966, 1957}], 
          
          LineBox[{1037, 1707, 1401, 912, 1645, 1340, 1139, 836, 1603, 1298, 
           1097, 1738, 1432, 972, 1681, 1375, 1846, 1174, 1785, 1479, 1891}], 
          LineBox[{1544, 1239, 1038, 913, 837, 1941}], 
          
          LineBox[{1709, 1403, 916, 1648, 1343, 1142, 840, 1606, 1301, 1100, 
           975, 1683, 1377, 1176, 1787, 1481, 1893}], 
          LineBox[{1548, 1243, 1042, 917, 841, 1942}], 
          LineBox[{1489, 1184, 983, 1686, 1380, 858, 1613, 1308}]}, 
         Annotation[#, "Charting`Private`Tag$198010#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[{2142, 2767, 2568, 2415, 2306, 3068}], 
          LineBox[{2274, 2143, 2768, 2569, 2416, 2307}], 
          LineBox[{2234, 2193, 2144, 2769, 2570, 2417, 2308, 2235, 3046}], 
          LineBox[{2146, 2771, 2572, 2419, 2310, 2237}], 
          LineBox[{2276, 2147, 2772, 2573, 2420, 3082}], 
          LineBox[{2350, 2277, 2859, 2660, 2507, 2398, 2148, 2773}], 
          
          LineBox[{2909, 2710, 2990, 2557, 2961, 2762, 3011, 2149, 2774, 2575,
            2966, 2422, 2920, 2721, 2993, 2313, 2877, 2678, 2979, 2525, 2946, 
           2747, 2240, 2842, 2643}], 
          
          LineBox[{2279, 2861, 2662, 2509, 2400, 2150, 2775, 2576, 2423, 2314,
            3070}], 
          LineBox[{2280, 2151, 2776, 2577, 2424, 3083}], 
          LineBox[{2153, 2154, 2155, 3036}], 
          LineBox[{2156, 2157, 2778, 2579, 2426, 2317, 2244}], 
          LineBox[{2558, 2158, 2779, 2580, 2427, 2921, 2722, 2318}], 
          
          LineBox[{2996, 2356, 2889, 2690, 2983, 2537, 2953, 2754, 3008, 2283,
            2863, 2664, 2978, 2511, 2941, 2742, 3005, 2402, 2911, 2712, 2991, 
           2559, 2962, 2763, 2159, 2780, 2581}], 
          
          LineBox[{2713, 2560, 2160, 2781, 2582, 2429, 2320, 2880, 2681, 2528,
            2247, 2846, 2647, 2494, 3087}], 
          LineBox[{2513, 2404, 2161, 2782, 2583, 2430, 2321, 3071}], 
          LineBox[{2286, 2162, 2783, 2584, 2431}], 
          LineBox[{2164, 2785, 2586, 2433, 2324, 2251, 3050}], 
          LineBox[{2361, 2288, 2166, 2787, 2588, 3092}], 
          
          LineBox[{2167, 2788, 2589, 2436, 2327, 2254, 2848, 2649, 2496, 2387,
            3080}], 
          
          LineBox[{2405, 2913, 2714, 2561, 2168, 2789, 2590, 2437, 2922, 2723,
            2328, 2881, 2682, 2529, 2948, 2749, 2255, 2849}], 
          
          LineBox[{2867, 2668, 2515, 2943, 2744, 2406, 2914, 2715, 2562, 2169,
            2790, 2591, 2438, 2329, 2882, 2683, 3096}], 
          LineBox[{2365, 2292, 2868, 2669, 2516, 2407, 2170, 2791}], 
          LineBox[{2172, 2173, 2174}], 
          LineBox[{2175, 2794, 2595, 2442, 2333, 2260, 3054}], 
          LineBox[{2869, 2670, 2517, 2408, 2177, 2796, 2597, 2444, 2335}], 
          LineBox[{2180, 2799, 2600, 2447, 2338, 2265}], 
          LineBox[{2181, 2182, 2800}], 
          LineBox[{2183, 2801, 2602, 2449, 2340, 2267, 2855, 2656}], 
          
          LineBox[{2301, 2872, 2673, 2520, 2411, 2916, 2717, 2564, 2184, 2802,
            2603, 2450, 2924, 2725, 2341, 2885, 2686}], 
          LineBox[CompressedData["
1:eJwVzzkspWEYxfHXJBhLaYlSY7mxtehnkFhrmitMY0nQTTHREIYhsVaodKp7
XUJBoyChZ2JLUDNjKQh+X3HyP+c8z/t+71ccH+wYSAshjNF8dgivWSEkvoaQ
lxNCs5yUv1O7PCk/8O/mtfKQfCqP8jt8H9/Dr/DpNM8f44T9/1hBy7o5e/24
LiewRP6Gv+R1vJPHcV/ew3PnyzEur+Gh+U9MyrvYKXfigryBb/JstBe939l8
voXf1I/wG3wD38H/5v/xH/bq5GH5LHof9cqrclFuCBk4aecRK6N/My+lC13M
XrfuSO6iTV2BrlWXkhsp0Gv0PbMnfRUt6MroUndvlsIbnMJn82paNC+nL95w
pd+iWzvTeI5/8MVeDS3Zi9G17sFsGwuxzWxL30RpVK8b0RW68688QD90a7rM
6F38CR7gjDs+Af3eTwM=
           "]], 
          LineBox[{2233, 2192, 2808, 2609, 2456, 2347, 3075}], 
          LineBox[{2194, 3038}], 
          LineBox[{2196, 2810, 2611, 2458, 2349, 3076}], 
          
          LineBox[{2311, 2238, 2840, 2641, 2488, 2379, 2197, 2811, 2612, 
           2459}], 
          
          LineBox[{2198, 2812, 2613, 2460, 2926, 2727, 2351, 2887, 2688, 2535,
            2952, 2753, 2278, 2860, 2661, 2977, 2508, 2940, 2741, 3004}], 
          
          LineBox[{2490, 2933, 2734, 2381, 2900, 2701, 2548, 2199, 2813, 2614,
            2461, 2352, 2888, 2689, 2536, 3090}], 
          LineBox[{2843, 2644, 2491, 2382, 2200, 2814, 2615, 2462, 2353}], 
          LineBox[{2202, 3039}], 
          LineBox[{2203, 2816, 2617, 2464, 2355, 3077}], 
          
          LineBox[{2679, 2526, 2245, 2844, 2645, 2492, 2934, 2735, 2383, 2901,
            2702, 2986, 2549, 2956, 2757, 2204, 2817, 2618, 2969, 2465, 
           2927}], 
          
          LineBox[{3009, 2205, 2818, 2619, 2970, 2466, 2928, 2729, 2997, 2357,
            2890, 2691, 2984, 2538, 2954, 2755, 2284, 2864, 2665, 2512, 2942, 
           2743, 2403, 2912}], 
          
          LineBox[{2903, 2704, 2551, 2206, 2819, 2620, 2467, 2358, 2891, 2692,
            2539, 2285, 2865, 2666}], 
          
          LineBox[{2248, 2847, 2648, 2495, 2386, 2207, 2820, 2621, 2468, 2359,
            3078}], 
          LineBox[{2209, 3040}], 
          LineBox[{2210, 3041}], 
          LineBox[{2252, 2211, 2822, 2623, 2470, 3085}], 
          
          LineBox[{2213, 2824, 2625, 2472, 2363, 2892, 2693, 2540, 2290, 2866,
            2667, 2514, 3089}], 
          
          LineBox[{2497, 2936, 2737, 3000, 2388, 2904, 2705, 2988, 2552, 2958,
            2759, 3010, 2214, 2825, 2626, 2971, 2473, 2929, 2730, 2998, 2364, 
           2893, 2694, 2985, 2541, 2955, 2756}], 
          
          LineBox[{2530, 2256, 2850, 2651, 2498, 2389, 2215, 2826, 2627, 2474,
            3086}], 
          LineBox[{2216, 2827, 2628, 2475, 2366, 2293, 3062}], 
          LineBox[{2217, 3042}], 
          LineBox[{2219, 2829, 2630, 2477, 2368, 2295, 3064}], 
          
          LineBox[{2851, 2652, 2499, 2390, 2220, 2830, 2631, 2478, 2369, 
           3079}], 
          
          LineBox[{2684, 2531, 2262, 2852, 2653, 2500, 2391, 2905, 2706, 2553,
            2221, 2831, 2632, 2479}], 
          
          LineBox[{2760, 2222, 2832, 2633, 2480, 2931, 2732, 2371, 2895, 2696,
            2543, 2298, 2871, 2672, 2519, 2410}], 
          LineBox[{2393, 2223, 2833, 2634, 2481, 2372, 2299, 3065}], 
          LineBox[{2224, 3043}], 
          LineBox[{2225, 2834, 2635, 2482, 2373, 2300, 3066}], 
          
          LineBox[{2503, 2394, 2226, 2835, 2636, 2483, 2374, 2896, 2697, 2544,
            3091}], 
          LineBox[{2770, 2571, 2418, 2309, 2236, 3047}], 
          
          LineBox[{2421, 2312, 2876, 2677, 2524, 2239, 2841, 2642, 2489, 2380,
            2899, 2700, 2547}], 
          LineBox[{2315, 2242, 2201}], 
          LineBox[{2777, 2578, 2425, 2316, 2243, 3048}], 
          
          LineBox[{2428, 2319, 2879, 2680, 2527, 2947, 2748, 2246, 2845, 2646,
            2972, 2493, 2935, 2736, 2999, 2384, 2902, 2703, 2987, 2550, 
           2957}], 
          LineBox[{2322, 2249, 2208}], 
          LineBox[{2784, 2585, 2432, 2323, 2250, 3049}], 
          LineBox[{2435, 2326, 2253, 2212}], 
          LineBox[{2592, 2439, 2330, 2257, 3051}], 
          LineBox[{2792, 2593, 2440, 2331, 2258, 3052}], 
          LineBox[{2594, 2441, 2332, 2259, 3053}], 
          
          LineBox[{2797, 2598, 2967, 2445, 2923, 2724, 2994, 2336, 2884, 2685,
            2980, 2532, 2949, 2750, 3006, 2263, 2853, 2654, 2974, 2501, 2937, 
           2738, 3001, 2392, 2906, 2707, 2554}], 
          LineBox[{2798, 2599, 2446, 2337, 2264, 2854, 2655, 2502, 3088}], 
          LineBox[{2601, 2448, 2339, 2266, 3055}], 
          
          LineBox[{2950, 2751, 2268, 2856, 2657, 2975, 2504, 2938, 2739, 3002,
            2395, 2907}], 
          LineBox[{2809, 2610, 2457, 2348, 2275, 3058}], 
          LineBox[{2815, 2616, 2463, 2354, 2281, 3059}], 
          LineBox[{2282, 2862, 2663, 2510, 2401, 2910}], 
          LineBox[{2821, 2622, 2469, 2360, 2287, 3060}], 
          LineBox[{2624, 2471, 2362, 2289, 3061}], 
          LineBox[{2828, 2629, 2476, 2367, 2294, 3063}], 
          
          LineBox[{2930, 2731, 2370, 2894, 2695, 2542, 2297, 2870, 2671, 2518,
            2944, 2745, 2409, 2915, 2716, 2992, 2563, 2963, 2764, 3012}], 
          LineBox[{2795, 2596, 2443, 2334, 3073}], 
          LineBox[{2786, 2587, 2434, 2325}]}, 
         Annotation[#, "Charting`Private`Tag$198010#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[{3283, 4014, 3766, 3581, 3452, 4143, 3895, 3710, 4397}], 
          
          LineBox[{3991, 3416, 4120, 3872, 4275, 3687, 4226, 3977, 4308, 3558,
            4184, 3935, 4295, 3751, 4256, 4007, 4325, 3284, 4015, 3767, 4263, 
           3582, 4199, 3950, 4297, 3453}], 
          LineBox[{3287, 3288, 3289, 4353}], 
          LineBox[{3290, 3291, 3292, 4018, 3770, 3585, 4388}], 
          
          LineBox[{3456, 3378, 3337, 3293, 4019, 3771, 3586, 3457, 3379, 
           4360}], 
          LineBox[{3295, 4021, 3773, 3588, 3459, 4377}], 
          LineBox[{3419, 3296, 4022, 3774, 3589}], 
          
          LineBox[{3297, 4023, 3775, 3590, 3461, 3383, 4094, 3846, 3661, 3532,
            4381}], 
          LineBox[{3298, 4024, 3776, 3591, 3462, 3384}], 
          
          LineBox[{3936, 4296, 3752, 4257, 4008, 3299, 4025, 3777, 3592, 
           3463}], 
          
          LineBox[{4162, 3914, 3729, 3423, 4123, 3875, 3690, 3561, 4186, 3937,
            3753, 3300, 4026, 3778}], 
          
          LineBox[{3938, 3754, 4258, 4009, 3301, 4027, 3779, 3594, 3465, 3387,
            4098, 3850, 3665, 4393}], 
          
          LineBox[{3692, 3563, 4188, 3939, 3755, 3302, 4028, 3780, 3595, 4201,
            3952, 3466, 4146, 3898, 4280, 3713, 4236, 3987}], 
          
          LineBox[{3731, 4242, 3993, 3426, 4126, 3878, 3693, 4229, 3980, 3564,
            4189, 3940, 3756, 3303, 4029, 3781, 3596}], 
          LineBox[{3305, 4031, 3783, 3598, 3469, 3391, 4363}], 
          
          LineBox[{3429, 4128, 3880, 3695, 3566, 3306, 4032, 3784, 3599, 4202,
            3953, 3470}], 
          
          LineBox[{3508, 4165, 3917, 4285, 3732, 4243, 3994, 4317, 3430, 4129,
            3881, 4277, 3696, 4230, 3981, 3567, 4190, 3941, 3757, 4259, 4010, 
           3307, 4033, 3785, 4401}], 
          LineBox[{3308, 4034, 3786, 3601, 3472, 3394, 4364}], 
          LineBox[{3309, 5447, 4583, 5472, 3310, 3311, 4035}], 
          
          LineBox[{4231, 3982, 3569, 4191, 3942, 3758, 4260, 4011, 3313, 4037,
            3789, 4264, 3604, 4204, 3955, 4298, 3475, 4151, 3903, 4281, 3718, 
           4237, 3988}], 
          
          LineBox[{4286, 3734, 4244, 3995, 3434, 4132, 3884, 3699, 3570, 3314,
            4038, 3790, 3605, 4390}], 
          
          LineBox[{3476, 3398, 3357, 3315, 4039, 3791, 3606, 3477, 3399, 
           4366}], 
          
          LineBox[{3316, 4040, 3792, 3607, 3478, 3400, 4105, 3857, 3672, 
           4395}], 
          LineBox[{3700, 3571, 3317, 4041, 3793, 3608, 3479, 4378}], 
          
          LineBox[{4134, 3886, 3701, 3572, 4192, 3943, 3759, 3318, 4042, 3794,
            3609, 4205, 3956, 3480}], 
          LineBox[{3321, 4045, 3797, 3612, 3483, 3405}], 
          
          LineBox[{3441, 4136, 3888, 3703, 3574, 4194, 3945, 3761, 3322, 4046,
            3798, 3613, 4206, 3957, 4408}], 
          
          LineBox[{3966, 3520, 4171, 3923, 3738, 4246, 3997, 3442, 4137, 3889,
            3704, 4233, 3984, 3575, 4195, 3946, 3762, 3323, 4047}], 
          LineBox[{3576, 3324, 4048, 3800, 3615, 3486, 3408, 4112, 3864}], 
          LineBox[{3444, 3325, 4049, 3801, 3616, 3487, 4156, 3908}], 
          LineBox[CompressedData["
1:eJwV0rlPVGEUhvEzYKnigkvcUURQmUahExoBMdqwSEcCAg0qNgKCxtAZAyZU
FhhcYKiUxq20UFArExdI3MXlPxAFFPzd4s17nud895vJzc1r7qg5k4qIRzKx
KiKzMmI46ZyIwhURv/Q/7rA8wedkcXnEK/4dlyd7Vkfc5GtkjWc32TXxX3CR
zOJFXCFPcads8MySe17bved3yi2+Vta6YzPfzH3Fe+U3XsKVMoG7ZKM7Qr+x
+8Dvktu4TnLdsYU/yc3gffIHh1Rxk7g78c4d4Hq4OZySt/gjzpcRfMiZCq4f
p/1mPbeO28q1cN/wfpnDKTnCPcPHnKnDQ/h8cgYfxL14HrfgdnwPZ+Ep8yfz
bumw68SjfJm50jzAn8Dr8TbcivvMl83f+QZzo3lSj9ndSDrZ6WL7eXOWjONq
+259Cb/Uz+2P63r8WF+3v6aHk/+ke+yLdQl+qC/YX9GDeFov2LfqU/i+XcZ8
x5zNT+vPXIGc5btwhi83V5mv8g3JN4G34zb8A+/wrtN6IblHjvIvcK+knS3l
Sp25yP/l2rjT3AM8Zr5r/qmX2f0HH4Jlqg==
           "]], 
          
          LineBox[{4092, 3844, 3659, 3530, 4174, 3926, 3741, 3333, 4056, 3808,
            3623, 4209, 3960, 3494, 4160, 3912, 3727}], 
          
          LineBox[{3896, 4279, 3711, 4235, 3986, 3375, 4093, 3845, 3660, 4217,
            3968, 3531, 4175, 3927, 3742, 3334, 4057, 3809, 3624}], 
          LineBox[{3335, 4354}], 
          LineBox[{3336, 4355}], 
          LineBox[{3338, 4356}], 
          LineBox[{3381, 3340, 4059, 3811, 3626, 3497}], 
          LineBox[{3460, 3382, 3341, 4060}], 
          LineBox[{3342, 4061, 3813, 3628, 3499, 3421, 4369}], 
          
          LineBox[{4095, 3847, 3662, 3533, 3343, 4062, 3814, 3629, 3500, 4161,
            3913, 3728}], 
          LineBox[{4096, 3848, 3663, 3534, 3344, 4063, 3815, 3630, 4392}], 
          
          LineBox[{4319, 3345, 4064, 3816, 4265, 3631, 4210, 3961, 4299, 3502,
            4163, 3915, 4284, 3730, 4241, 3992, 4316, 3424, 4124, 3876, 4276, 
           3691, 4228, 3979, 4310, 3562, 4187}], 
          LineBox[{3536, 3346, 4065, 3817, 3632, 3503, 3425, 4125, 3877}], 
          
          LineBox[{3388, 4099, 3851, 4271, 3666, 4219, 3970, 4304, 3537, 4177,
            3929, 4289, 3744, 4249, 4000, 4320, 3347, 4066, 3818, 4266, 3633, 
           4211, 3962, 4300, 3504, 4164}], 
          LineBox[{3350, 4069, 3821, 3636, 3507, 4379}], 
          
          LineBox[{3900, 3715, 3392, 4101, 3853, 3668, 4220, 3971, 3539, 4178,
            3930, 4290, 3745, 4250, 4001, 4321, 3351, 4070, 3822, 4267, 3637, 
           4212}], 
          LineBox[{3353, 4357}], 
          LineBox[{3354, 4072, 3824, 3639, 3510, 3432, 4371}], 
          
          LineBox[{3541, 3355, 4073, 3825, 3640, 3511, 4166, 3918, 3733, 3433,
            4131, 3883}], 
          
          LineBox[{3397, 4104, 3856, 4272, 3671, 4221, 3972, 3542, 4179, 3931,
            3746, 4251, 4002, 3356, 4074, 3826, 3641, 4213, 3964, 3512, 4167, 
           3919}], 
          LineBox[{3543, 3359, 4076, 3828, 3643, 3514, 3436, 4133, 3885}], 
          
          LineBox[{4106, 3858, 3673, 3544, 3360, 4077, 3829, 3644, 3515, 4168,
            3920, 3735}], 
          
          LineBox[{3904, 4282, 3719, 4238, 3989, 4314, 3402, 4107, 3859, 4273,
            3674, 4222, 3973, 4305, 3545, 4180, 3932, 4291, 3747, 4252, 4003, 
           4322, 3361, 4078, 3830, 4268, 3645}], 
          
          LineBox[{4109, 3861, 3676, 3547, 3364, 4081, 3833, 3648, 3519, 4170,
            3922, 3737}], 
          
          LineBox[{4154, 3906, 4283, 3721, 4239, 3990, 4315, 3406, 4110, 3862,
            4274, 3677, 4223, 3974, 4306, 3548, 4181, 3933, 4292, 3748, 4253, 
           4004, 4323, 3365, 4082, 3834, 4269, 3649}], 
          
          LineBox[{3366, 4083, 3835, 3650, 3521, 3443, 4138, 3890, 3705, 
           4396}], 
          LineBox[{3679, 3550, 3367, 4084, 3836, 3651, 3522, 4380}], 
          LineBox[{4016, 3768, 3583, 3454, 3376, 4358}], 
          LineBox[{4017, 3769, 3584, 3455, 3377, 4359}], 
          LineBox[{4020, 3772, 3587, 3458, 3380, 4361}], 
          
          LineBox[{3593, 4200, 3951, 3464, 4145, 3897, 3712, 3386, 4097, 3849,
            3664, 4218, 3969, 3535, 4176, 3928, 4288, 3743, 4248}], 
          
          LineBox[{3467, 4147, 3899, 3714, 3389, 4100, 3852, 3667, 3538, 
           3348}], 
          LineBox[{4030, 3782, 3597, 3468, 3390, 4362}], 
          
          LineBox[{4203, 3954, 3471, 4149, 3901, 3716, 3393, 4102, 3854, 3669,
            3540, 3352}], 
          LineBox[{3787, 3602, 3473, 3395, 4365}], 
          
          LineBox[{4036, 3788, 3603, 3474, 4150, 3902, 3717, 3396, 4103, 3855,
            3670, 4394}], 
          
          LineBox[{4043, 3795, 3610, 3481, 4153, 3905, 3720, 3403, 4108, 3860,
            3675, 3546, 4382}], 
          LineBox[{4044, 3796, 3611, 3482, 3404, 4367}], 
          
          LineBox[{3614, 3485, 4155, 3907, 3722, 3407, 4111, 3863, 3678, 3549,
            4383}], 
          
          LineBox[{3723, 3409, 4113, 3865, 3680, 4224, 3975, 4307, 3551, 
           4182}], 
          LineBox[{3495, 3417, 4121, 3873, 3688, 3559, 4385}], 
          LineBox[{3812, 3627, 3498, 3420, 4368}], 
          LineBox[{3422, 4122, 3874, 3689, 4227, 3978, 4309, 3560, 4185}], 
          
          LineBox[{4067, 3819, 3634, 3505, 3427, 4127, 3879, 3694, 3565, 
           4386}], 
          LineBox[{4068, 3820, 3635, 3506, 3428, 4370}], 
          LineBox[{3823, 3638, 3509, 3431, 4130, 3882, 3697, 3568, 4387}], 
          LineBox[{4075, 3827, 3642, 3513, 3435, 4372}], 
          
          LineBox[{4214, 3965, 4302, 3516, 4169, 3921, 3736, 4245, 3996, 3438,
            4135, 3887, 3702, 4232, 3983, 3573, 4193, 3944, 3760, 4399}], 
          LineBox[{4079, 3831, 3646, 3517, 3439, 4373}], 
          LineBox[{4080, 3832, 3647, 3518, 3440, 4374}], 
          LineBox[{4058, 3810, 3625, 3496, 3418}]}, 
         Annotation[#, "Charting`Private`Tag$198010#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[{4587, 5209, 5015, 4861, 4749, 5505}], 
          LineBox[{5305, 5111, 4957, 4845, 4588, 5210, 5016, 4862, 4750}], 
          LineBox[{4591, 5213, 5019, 4865, 4753, 4680}], 
          LineBox[{4718, 4592, 5214, 5020, 4866, 5516}], 
          LineBox[{4593, 5473}], 
          LineBox[{4594, 4595, 4596, 5215, 5021, 4867, 5517}], 
          
          LineBox[{5113, 4959, 4847, 4599, 5218, 5024, 4870, 4758, 5322, 5128,
            4974}], 
          
          LineBox[{5333, 5139, 4985, 5389, 5194, 4722, 5308, 5114, 4960, 5380,
            5185, 4848, 5354, 5159, 5423, 5006, 5398, 5203, 5443, 4600, 5219, 
           5025, 5404}], 
          
          LineBox[{4601, 5220, 5026, 4872, 4760, 4687, 5288, 5094, 4940, 4828,
            5511}], 
          LineBox[{4602, 5221, 5027, 4873, 4761, 4688}], 
          
          LineBox[{5160, 5424, 5007, 5399, 5204, 4603, 5222, 5028, 4874, 
           4762}], 
          
          LineBox[{5175, 4799, 5336, 5142, 4988, 5390, 5195, 4726, 5311, 5117,
            4963, 5382, 5187, 4851, 5356, 5161, 5425, 5008, 5400, 5205, 5444, 
           4604, 5223, 5029}], 
          LineBox[{4606, 5225, 5031, 4877, 4765, 5506}], 
          LineBox[{4607, 5474}], 
          LineBox[{4609, 5227, 5033, 4879, 4767, 4694, 5292, 5098}], 
          
          LineBox[{4730, 5313, 5119, 4965, 5383, 5188, 4853, 5357, 5162, 5426,
            5009, 5401, 5206, 5445, 4610, 5228, 5034, 5406, 4880, 5365, 5170, 
           5430, 4768}], 
          
          LineBox[{5339, 5145, 4991, 4731, 5314, 5120, 4966, 4854, 5358, 5163,
            5010, 4611, 5229, 5035, 5525}], 
          LineBox[{4612, 5230, 5036, 4882, 4770, 4697, 5487}], 
          LineBox[{4613, 5696, 4614, 4615, 5231}], 
          
          LineBox[{4967, 4855, 5359, 5164, 5011, 4617, 5233, 5039, 4885, 5366,
            5171, 4773, 5327, 5133, 5417, 4979, 5388, 5193}], 
          
          LineBox[{5418, 4993, 5391, 5196, 4735, 5316, 5122, 4968, 4856, 5360,
            5165, 5012, 4618, 5234, 5040, 5407, 4886, 5367}], 
          LineBox[{4620, 4621, 4622, 5475}], 
          LineBox[{4623, 4624, 5236, 5042, 4888, 4776, 4703, 5490}], 
          LineBox[{4625, 5237, 5043, 4889, 4777, 4704}], 
          
          LineBox[{4994, 4738, 5317, 5123, 4969, 4857, 4626, 5238, 5044, 4890,
            5518}], 
          
          LineBox[{5433, 4812, 5343, 5149, 5419, 4995, 5392, 5197, 5441, 4739,
            5318, 5124, 5413, 4970, 5384, 5189, 5436, 4858, 5361, 5166, 5427, 
           5013, 5402, 5207, 4627, 5239}], 
          LineBox[{4859, 4628, 5240, 5046, 4892, 4780, 4707, 5301, 5107}], 
          LineBox[{4741, 4629, 5241, 5047, 4893, 4781, 5331, 5137}], 
          LineBox[CompressedData["
1:eJwVz7kuRHEYhvG/xgVgbCMYeq6A2XABU0moJNYIBZU9kdhFJxH7DVgLY+t1
9sJ+AVQSKoXfFE/e8z7vl5NzYh2DmYG8EMIA6iIhLBeGEJGZohAaCkJYl09c
HNf6DIoxwme5Sqy43+M60YgN2zOfwI0+iwk3JXLUdspXYV/vwpAtLjdtL3wS
t/ocJm2lcsx2xlfjQO/GsC0ht2yvfAp3+jzKMM6fczEc6tPue2QS27Y3Po17
fQHlue/kL7gaHOm9OOF+9DZ86inscO96Ex70RUx5fzT3zbZLvhbHeh+y3K/e
jq/cv7lNy13+g2vGo76EKy4fa276+T/uW6/Hqh7lWz23yArbPw/mQUQ=
           "]], 
          
          LineBox[{5282, 5088, 4934, 4822, 4637, 5248, 5054, 4900, 4788, 
           5508}], 
          
          LineBox[{5127, 4973, 4677, 5283, 5089, 4935, 4823, 4638, 5249, 5055,
            4901}], 
          LineBox[{4639, 5476}], 
          
          LineBox[{5284, 5090, 4936, 4824, 4641, 5251, 5057, 4903, 4791, 
           5509}], 
          LineBox[{4754, 4681, 4642, 5477}], 
          LineBox[{4937, 4825, 4645, 5254, 5060, 4906, 4794, 4721}], 
          
          LineBox[{4685, 5286, 5092, 4938, 4826, 5345, 5151, 4997, 4646, 5255,
            5061, 4907, 4795}], 
          
          LineBox[{5168, 5428, 4759, 5323, 5129, 5414, 4975, 5385, 5190, 5437,
            4686, 5287, 5093, 5410, 4939, 5374, 5179, 4827, 5346, 5152, 4998, 
           5393, 5198, 4647, 5256}], 
          LineBox[{4648, 5257, 5063, 4909, 4797, 4724, 5496}], 
          
          LineBox[{5289, 5095, 4941, 4829, 4649, 5258, 5064, 4910, 4798, 5335,
            5141, 4987}], 
          
          LineBox[{5130, 4976, 4689, 5290, 5096, 4942, 4830, 5347, 5153, 4999,
            4650, 5259, 5065, 4911, 5370}], 
          
          LineBox[{4651, 5260, 5066, 4912, 4800, 5337, 5143, 4989, 4727, 5312,
            5118, 4964, 4852, 5515}], 
          LineBox[{4692, 4653, 5478}], 
          
          LineBox[{4944, 4832, 4655, 5263, 5069, 4915, 4803, 5338, 5144, 4990,
            5522}], 
          
          LineBox[{5416, 4978, 5387, 5192, 5439, 4695, 5293, 5099, 5412, 4945,
            5376, 5181, 4833, 5349, 5155, 5001, 5394, 5199, 4656, 5264, 5070, 
           4916, 5371}], 
          LineBox[{4658, 5480}], 
          LineBox[{4659, 5266, 5072, 4918, 4806, 4733, 5500}], 
          
          LineBox[{4835, 4660, 5267, 5073, 4919, 4807, 5340, 5146, 4992, 4734,
            5315, 5121}], 
          
          LineBox[{4700, 5296, 5102, 4948, 5377, 5182, 4836, 5350, 5156, 5420,
            5002, 5395, 5200, 5442, 4661, 5268, 5074, 5408, 4920, 5372, 5177, 
           5432, 4808, 5341, 5147}], 
          
          LineBox[{4774, 5328, 5134, 4980, 4701, 5297, 5103, 4949, 4837, 4662,
            5269, 5075}], 
          LineBox[{4663, 5481}], 
          
          LineBox[{5298, 5104, 4950, 4838, 4665, 5271, 5077, 4923, 4811, 5342,
            5148, 5531}], 
          
          LineBox[{5329, 5135, 4981, 4705, 5299, 5105, 4951, 5378, 5183, 4839,
            5351, 5157, 5421, 5003, 5396, 5201, 4666, 5272, 5078, 5409, 
           4924}], 
          
          LineBox[{4667, 5273, 5079, 4925, 4813, 5344, 5150, 4996, 4740, 5319,
            5125, 4971, 5521}], 
          LineBox[{4953, 4841, 4668, 5274, 5080, 4926, 4814, 5510}], 
          LineBox[{5211, 5017, 4863, 4751, 4678, 5482}], 
          LineBox[{5212, 5018, 4864, 4752, 4679, 5483}], 
          LineBox[{4755, 4682, 4643}], 
          LineBox[{5216, 5022, 4868, 4756, 4683, 5484}], 
          LineBox[{5217, 5023, 4869, 4757, 4684, 5285, 5091}], 
          
          LineBox[{5405, 4875, 5364, 5169, 5429, 4763, 5325, 5131, 5415, 4977,
            5386, 5191, 5438, 4690, 5291, 5097, 5411, 4943, 5375, 5180, 4831, 
           5348, 5154, 5000, 5523}], 
          LineBox[{5224, 5030, 4876, 4764, 4691, 5485}], 
          LineBox[{5226, 5032, 4878, 4766, 4693, 5486}], 
          LineBox[{4881, 4769, 4696, 5294, 5100, 4946, 4834, 4657}], 
          LineBox[{5037, 4883, 4771, 4698, 5488}], 
          LineBox[{5232, 5038, 4884, 4772, 4699, 5295, 5101, 4947, 5520}], 
          LineBox[{5041, 4887, 4775, 4702, 5489}], 
          
          LineBox[{5045, 4891, 5368, 5173, 4779, 5330, 5136, 4982, 4706, 5300,
            5106, 4952, 4840, 5352, 5158, 5004}], 
          
          LineBox[{4983, 4708, 5302, 5108, 4954, 5379, 5184, 5434, 4842, 
           5353}], 
          
          LineBox[{4789, 5332, 5138, 4984, 4716, 5306, 5112, 4958, 4846, 
           5513}], 
          LineBox[{5250, 5056, 4902, 4790, 4717, 5493}], 
          LineBox[{5252, 5058, 4904, 4792, 4719, 5494}], 
          LineBox[{5253, 5059, 4905, 4793, 4720, 5495}], 
          
          LineBox[{5062, 4908, 5369, 5174, 4796, 5334, 5140, 4986, 4723, 5309,
            5115, 4961, 4849, 5514}], 
          LineBox[{4725, 5310, 5116, 4962, 5381, 5186, 5435, 4850, 5355}], 
          LineBox[{5261, 5067, 4913, 4801, 4728, 5497}], 
          LineBox[{5262, 5068, 4914, 4802, 4729, 5498}], 
          LineBox[{5071, 4917, 4805, 4732, 5499}], 
          LineBox[{4921, 4809, 4736, 4619}], 
          LineBox[{5270, 5076, 4922, 4810, 4737, 5501}]}, 
         Annotation[#, "Charting`Private`Tag$198010#5"]& ], {
         Directive[{
           Opacity[0.2], 
           Hue[0.67, 0.6, 0.6]}], 
         LineBox[{552, 603, 551}], 
         LineBox[{560, 608, 559}], 
         LineBox[{490, 609, 256}], 
         LineBox[{566, 612, 565}], 
         LineBox[{580, 619, 579}], 
         LineBox[{585, 622, 30}], 
         LineBox[{597, 628, 596}], 
         LineBox[{601, 630, 600}], 
         LineBox[{550, 632, 117}], 
         LineBox[{634, 1895, 633}], 
         LineBox[{636, 1896, 635}], 
         LineBox[{638, 1897, 637}], 
         LineBox[{640, 1898, 639}], 
         LineBox[{642, 1899, 641}], 
         LineBox[{644, 1900, 643}], 
         LineBox[{646, 1901, 645}], 
         LineBox[{648, 1902, 647}], 
         LineBox[{650, 1903, 649}], 
         LineBox[{652, 1904, 651}], 
         LineBox[{654, 1905, 653}], 
         LineBox[{656, 1906, 655}], 
         LineBox[{657, 1907, 9}], 
         LineBox[{659, 1908, 658}], 
         LineBox[{661, 1909, 660}], 
         LineBox[{662, 1910, 56}], 
         LineBox[{663, 1911, 57}], 
         LineBox[{665, 1912, 664}], 
         LineBox[{666, 1913, 11}], 
         LineBox[{667, 1914, 12}], 
         LineBox[{669, 1915, 668}], 
         LineBox[{671, 1916, 670}], 
         LineBox[{673, 1917, 672}], 
         LineBox[{675, 1918, 674}], 
         LineBox[{677, 1919, 676}], 
         LineBox[{679, 1920, 678}], 
         LineBox[{681, 682, 680}], 
         LineBox[{684, 685, 683}], 
         LineBox[{1985, 2053, 1984}], 
         LineBox[{1987, 2054, 1986}], 
         LineBox[{1988, 2055, 1762}], 
         LineBox[{1806, 2056, 1269}], 
         LineBox[{1990, 2057, 1989}], 
         LineBox[{1991, 2058, 1331}], 
         LineBox[{1992, 2059, 1354}], 
         LineBox[{1853, 2060, 1396}], 
         LineBox[{1993, 2061, 1628}], 
         LineBox[{1994, 2062, 1687}], 
         LineBox[{1996, 2063, 1995}], 
         LineBox[{1998, 2064, 1997}], 
         LineBox[{2000, 2065, 1999}], 
         LineBox[{1877, 2066, 803}], 
         LineBox[{1880, 2067, 832}], 
         LineBox[{2001, 2068, 721}], 
         LineBox[{2003, 2069, 2002}], 
         LineBox[{2005, 2070, 2004}], 
         LineBox[{2006, 2071, 1929}], 
         LineBox[{1930, 2072, 1537}], 
         LineBox[{2008, 2073, 2007}], 
         LineBox[{2010, 2074, 2009}], 
         LineBox[{2012, 2075, 2011}], 
         LineBox[{2013, 2076, 1935}], 
         LineBox[{2015, 2077, 2014}], 
         LineBox[{2016, 2078, 704}], 
         LineBox[{2018, 2079, 2017}], 
         LineBox[{2019, 2080, 722}], 
         LineBox[{2021, 2081, 2020}], 
         LineBox[{2023, 2082, 2022}], 
         LineBox[{2024, 2083, 1949}], 
         LineBox[{2026, 2084, 2025}], 
         LineBox[{2028, 2085, 2027}], 
         LineBox[{1953, 2086, 1658}], 
         LineBox[{2029, 2087, 760}], 
         LineBox[{2030, 2088, 764}], 
         LineBox[{2032, 2089, 2031}], 
         LineBox[{2033, 2090, 1958}], 
         LineBox[{2035, 2091, 2034}], 
         LineBox[{2037, 2092, 2036}], 
         LineBox[{2039, 2093, 2038}], 
         LineBox[{2041, 2094, 2040}], 
         LineBox[{2042, 2095, 1964}], 
         LineBox[{2043, 2096, 1965}], 
         LineBox[{1966, 2097, 1798}], 
         LineBox[{2044, 2098, 1967}], 
         LineBox[{2045, 2099, 1968}], 
         LineBox[{1971, 2100, 1825}], 
         LineBox[{2046, 2101, 1972}], 
         LineBox[{2047, 2102, 1973}], 
         LineBox[{1975, 2103, 1867}], 
         LineBox[{2048, 2104, 1976}], 
         LineBox[{2049, 2105, 1977}], 
         LineBox[{1978, 2106, 1387}], 
         LineBox[{1979, 2107, 1415}], 
         LineBox[{2050, 2108, 1980}], 
         LineBox[{2051, 2109, 1981}], 
         LineBox[{2052, 2110, 1983}], 
         LineBox[{2112, 3014, 2111}], 
         LineBox[{2114, 3015, 2113}], 
         LineBox[{2115, 3016, 1019}], 
         LineBox[{2116, 3017, 1754}], 
         LineBox[{2117, 3018, 1129}], 
         LineBox[{2118, 3019, 1350}], 
         LineBox[{2119, 3020, 1608}], 
         LineBox[{2120, 3021, 1729}], 
         LineBox[{2121, 3022, 1802}], 
         LineBox[{1889, 3023, 688}], 
         LineBox[{2123, 3024, 2122}], 
         LineBox[{2125, 3025, 2124}], 
         LineBox[{2127, 3026, 2126}], 
         LineBox[{2129, 3027, 2128}], 
         LineBox[{2130, 3028, 694}], 
         LineBox[{2132, 3029, 2131}], 
         LineBox[{2133, 3030, 1933}], 
         LineBox[{2135, 3031, 2134}], 
         LineBox[{1956, 3032, 1670}], 
         LineBox[{1970, 3033, 1817}], 
         LineBox[{1974, 3034, 1856}], 
         LineBox[{1982, 3035, 1084}], 
         LineBox[{2137, 2138, 2136}], 
         LineBox[{2140, 2141, 2139}], 
         LineBox[{3100, 3179, 3099}], 
         LineBox[{3101, 3180, 2793}], 
         LineBox[{3103, 3181, 3102}], 
         LineBox[{3105, 3182, 3104}], 
         LineBox[{3106, 3183, 2878}], 
         LineBox[{3108, 3184, 3107}], 
         LineBox[{3109, 3185, 2959}], 
         LineBox[{3111, 3186, 3110}], 
         LineBox[{2973, 3187, 2650}], 
         LineBox[{3112, 3188, 2758}], 
         LineBox[{3114, 3189, 3113}], 
         LineBox[{3115, 3190, 2823}], 
         LineBox[{3116, 3191, 2883}], 
         LineBox[{3118, 3192, 3117}], 
         LineBox[{3119, 3193, 2728}], 
         LineBox[{2981, 3194, 2533}], 
         LineBox[{3120, 3195, 2178}], 
         LineBox[{3122, 3196, 3121}], 
         LineBox[{3123, 3197, 2165}], 
         LineBox[{3125, 3198, 3124}], 
         LineBox[{3127, 3199, 3126}], 
         LineBox[{3129, 3200, 3128}], 
         LineBox[{3131, 3201, 3130}], 
         LineBox[{3133, 3202, 3132}], 
         LineBox[{3135, 3203, 3134}], 
         LineBox[{3136, 3204, 2218}], 
         LineBox[{3138, 3205, 3137}], 
         LineBox[{3140, 3206, 3139}], 
         LineBox[{3141, 3207, 2163}], 
         LineBox[{3143, 3208, 3142}], 
         LineBox[{3144, 3209, 2171}], 
         LineBox[{3146, 3210, 3145}], 
         LineBox[{3147, 3211, 2176}], 
         LineBox[{3149, 3212, 3148}], 
         LineBox[{3151, 3213, 3150}], 
         LineBox[{3153, 3214, 3152}], 
         LineBox[{3154, 3215, 3072}], 
         LineBox[{3155, 3216, 2261}], 
         LineBox[{3157, 3217, 3156}], 
         LineBox[{3158, 3218, 2296}], 
         LineBox[{3160, 3219, 3159}], 
         LineBox[{3081, 3220, 2179}], 
         LineBox[{3161, 3221, 3084}], 
         LineBox[{3163, 3222, 3162}], 
         LineBox[{3165, 3223, 3164}], 
         LineBox[{3166, 3224, 2385}], 
         LineBox[{3168, 3225, 3167}], 
         LineBox[{3170, 3226, 3169}], 
         LineBox[{3172, 3227, 3171}], 
         LineBox[{3174, 3228, 3173}], 
         LineBox[{3175, 3229, 3093}], 
         LineBox[{3176, 3230, 3094}], 
         LineBox[{3178, 3231, 3177}], 
         LineBox[{3098, 3232, 2291}], 
         LineBox[{3234, 4327, 3233}], 
         LineBox[{3236, 4328, 3235}], 
         LineBox[{3238, 4329, 3237}], 
         LineBox[{3240, 4330, 3239}], 
         LineBox[{3242, 4331, 3241}], 
         LineBox[{3243, 4332, 2399}], 
         LineBox[{3245, 4333, 3244}], 
         LineBox[{3247, 4334, 3246}], 
         LineBox[{3248, 4335, 2574}], 
         LineBox[{3250, 4336, 3249}], 
         LineBox[{3251, 4337, 2145}], 
         LineBox[{3253, 4338, 3252}], 
         LineBox[{3255, 4339, 3254}], 
         LineBox[{3256, 4340, 2195}], 
         LineBox[{3258, 4341, 3257}], 
         LineBox[{3260, 4342, 3259}], 
         LineBox[{3261, 4343, 2152}], 
         LineBox[{3263, 4344, 3262}], 
         LineBox[{3264, 4345, 3069}], 
         LineBox[{3265, 4346, 2241}], 
         LineBox[{3267, 4347, 3266}], 
         LineBox[{3269, 4348, 3268}], 
         LineBox[{3271, 4349, 3270}], 
         LineBox[{3273, 4350, 3272}], 
         LineBox[{3275, 4351, 3274}], 
         LineBox[{3277, 4352, 3276}], 
         LineBox[{3279, 3281, 3278}], 
         LineBox[{3280, 3282, 2711}], 
         LineBox[{4410, 4484, 4409}], 
         LineBox[{4412, 4485, 4411}], 
         LineBox[{4414, 4486, 4413}], 
         LineBox[{4415, 4487, 3385}], 
         LineBox[{4417, 4488, 4416}], 
         LineBox[{4418, 4489, 3437}], 
         LineBox[{4420, 4490, 4419}], 
         LineBox[{4421, 4491, 3799}], 
         LineBox[{4422, 4492, 3916}], 
         LineBox[{4424, 4493, 4423}], 
         LineBox[{4301, 4494, 3963}], 
         LineBox[{4425, 4495, 3999}], 
         LineBox[{4426, 4496, 4071}], 
         LineBox[{4427, 4497, 4148}], 
         LineBox[{4428, 4498, 4152}], 
         LineBox[{4430, 4499, 4429}], 
         LineBox[{4431, 4500, 4215}], 
         LineBox[{4432, 4501, 4312}], 
         LineBox[{4433, 4502, 4313}], 
         LineBox[{4435, 4503, 4434}], 
         LineBox[{4436, 4504, 3349}], 
         LineBox[{4438, 4505, 4437}], 
         LineBox[{4440, 4506, 4439}], 
         LineBox[{4442, 4507, 4441}], 
         LineBox[{4443, 4508, 3358}], 
         LineBox[{4444, 4509, 3363}], 
         LineBox[{4446, 4510, 4445}], 
         LineBox[{4447, 4511, 3312}], 
         LineBox[{4449, 4512, 4448}], 
         LineBox[{4450, 4513, 3320}], 
         LineBox[{4452, 4514, 4451}], 
         LineBox[{4453, 4515, 3401}], 
         LineBox[{4455, 4516, 4454}], 
         LineBox[{4457, 4517, 4456}], 
         LineBox[{4458, 4518, 3362}], 
         LineBox[{4460, 4519, 4459}], 
         LineBox[{4461, 4520, 3304}], 
         LineBox[{4463, 4521, 4462}], 
         LineBox[{4464, 4522, 4389}], 
         LineBox[{4466, 4523, 4465}], 
         LineBox[{4467, 4524, 3501}], 
         LineBox[{4469, 4525, 4468}], 
         LineBox[{4471, 4526, 4470}], 
         LineBox[{4473, 4527, 4472}], 
         LineBox[{4475, 4528, 4474}], 
         LineBox[{4476, 4529, 3319}], 
         LineBox[{4477, 4530, 4400}], 
         LineBox[{4478, 4531, 3600}], 
         LineBox[{4479, 4532, 4402}], 
         LineBox[{4480, 4533, 4403}], 
         LineBox[{4404, 4534, 3698}], 
         LineBox[{4481, 4535, 4405}], 
         LineBox[{4482, 4536, 4407}], 
         LineBox[{4483, 4537, 3484}], 
         LineBox[{4539, 5448, 4538}], 
         LineBox[{4541, 5449, 4540}], 
         LineBox[{4543, 5450, 4542}], 
         LineBox[{4545, 5451, 4544}], 
         LineBox[{4547, 5452, 4546}], 
         LineBox[{4549, 5453, 4548}], 
         LineBox[{4550, 5454, 4240}], 
         LineBox[{4552, 5455, 4551}], 
         LineBox[{4554, 5456, 4553}], 
         LineBox[{4555, 5457, 4144}], 
         LineBox[{4557, 5458, 4556}], 
         LineBox[{4558, 5459, 3286}], 
         LineBox[{4560, 5460, 4559}], 
         LineBox[{4561, 5461, 3294}], 
         LineBox[{4563, 5462, 4562}], 
         LineBox[{4565, 5463, 4564}], 
         LineBox[{4567, 5464, 4566}], 
         LineBox[{4568, 5465, 3339}], 
         LineBox[{4570, 5466, 4569}], 
         LineBox[{4572, 5467, 4571}], 
         LineBox[{4574, 5468, 4573}], 
         LineBox[{4576, 5469, 4575}], 
         LineBox[{4577, 5470, 3285}], 
         LineBox[{4579, 5471, 4578}], 
         LineBox[{4581, 4582, 4580}], 
         LineBox[{4585, 4586, 4584}], 
         LineBox[{5533, 5599, 5532}], 
         LineBox[{5534, 5600, 5235}], 
         LineBox[{5536, 5601, 5535}], 
         LineBox[{5537, 5602, 5324}], 
         LineBox[{5539, 5603, 5538}], 
         LineBox[{5541, 5604, 5540}], 
         LineBox[{5543, 5605, 5542}], 
         LineBox[{5431, 5606, 5172}], 
         LineBox[{5176, 5607, 4804}], 
         LineBox[{5545, 5608, 5544}], 
         LineBox[{5326, 5609, 5132}], 
         LineBox[{5547, 5610, 5546}], 
         LineBox[{5373, 5611, 5178}], 
         LineBox[{5548, 5612, 5440}], 
         LineBox[{5549, 5613, 4608}], 
         LineBox[{5551, 5614, 5550}], 
         LineBox[{5553, 5615, 5552}], 
         LineBox[{5479, 5616, 5265}], 
         LineBox[{5555, 5617, 5554}], 
         LineBox[{5557, 5618, 5556}], 
         LineBox[{5558, 5619, 4652}], 
         LineBox[{5559, 5620, 4654}], 
         LineBox[{5561, 5621, 5560}], 
         LineBox[{5563, 5622, 5562}], 
         LineBox[{5565, 5623, 5564}], 
         LineBox[{5566, 5624, 4664}], 
         LineBox[{5568, 5625, 5567}], 
         LineBox[{5570, 5626, 5569}], 
         LineBox[{5572, 5627, 5571}], 
         LineBox[{5573, 5628, 4616}], 
         LineBox[{5575, 5629, 5574}], 
         LineBox[{5577, 5630, 5576}], 
         LineBox[{5579, 5631, 5578}], 
         LineBox[{5580, 5632, 4605}], 
         LineBox[{5581, 5633, 4778}], 
         LineBox[{5583, 5634, 5582}], 
         LineBox[{5585, 5635, 5584}], 
         LineBox[{5587, 5636, 5586}], 
         LineBox[{5589, 5637, 5588}], 
         LineBox[{5590, 5638, 5524}], 
         LineBox[{5592, 5639, 5591}], 
         LineBox[{5593, 5640, 5526}], 
         LineBox[{5594, 5641, 5527}], 
         LineBox[{5595, 5642, 5528}], 
         LineBox[{5596, 5643, 5530}], 
         LineBox[{5598, 5644, 5597}], 
         LineBox[{5646, 5645}], 
         LineBox[{5648, 5647}], 
         LineBox[{5650, 5649}], 
         LineBox[{5652, 5651}], 
         LineBox[{5653, 5307}], 
         LineBox[{5655, 5654}], 
         LineBox[{5363, 4871}], 
         LineBox[{5657, 5656}], 
         LineBox[{5659, 5658}], 
         LineBox[{5661, 5660}], 
         LineBox[{5663, 5662}], 
         LineBox[{5664, 5321}], 
         LineBox[{5666, 5665}], 
         LineBox[{5667, 4590}], 
         LineBox[{5669, 5668}], 
         LineBox[{5671, 5670}], 
         LineBox[{5672, 4640}], 
         LineBox[{5673, 4644}], 
         LineBox[{5675, 5674}], 
         LineBox[{5676, 4597}], 
         LineBox[{5677, 4598}], 
         LineBox[{5679, 5678}], 
         LineBox[{5680, 4676}], 
         LineBox[{5681, 4715}], 
         LineBox[{5683, 5682}], 
         LineBox[{5685, 5684}], 
         LineBox[{5686, 4589}], 
         LineBox[{5688, 5687}], 
         LineBox[{5690, 5689}], 
         LineBox[{5692, 5691}], 
         LineBox[{5694, 5695, 5693}], 
         LineBox[{5698, 5699, 5697}]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"feedback solution \"", TraditionalForm], 
     PlotRange -> {{0., 9.24999981122449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8671660615225625`*^9, {3.867166324570427*^9, 3.8671663726690426`*^9}, {
   3.867166414450679*^9, 3.8671664778244085`*^9}, {3.867166592164838*^9, 
   3.8671666252322607`*^9}, 3.867166676085995*^9, 3.8671667158202868`*^9, 
   3.8678691711275473`*^9, 3.867869205596589*^9, 3.867869240931355*^9, 
   3.867869515658012*^9},
 CellLabel->
  "Out[457]=",ExpressionUUID->"69f9d224-6a08-4494-a341-385da10a22cf"]
}, Open  ]],

Cell[TextData[StyleBox["Animation with General Cart-Pendulum swing up",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
   3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
   3.7166267858131742`*^9}, 3.845482883460244*^9, {3.8454833355827293`*^9, 
   3.845483336286716*^9}, {3.847433954599126*^9, 3.847433968468281*^9}, {
   3.8474344191285405`*^9, 3.847434424821303*^9}},
 FontSize->16,
 FontWeight->"Bold",
 Background->GrayLevel[
  0.85],ExpressionUUID->"9719e215-e88a-44b4-8f52-1b89df776f4f"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"AnimatePendulum", "[", "rules_", "]"}], ":=", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"DrawSinglePendulum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "/.", "rules"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "rules"}], ",", "1", 
          ",", "1"}], "}"}], ",", "t"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"DrawSinglePendulum", "[", 
    RowBox[{"cart_", ",", 
     RowBox[{"{", 
      RowBox[{"angle1_", ",", "length1_", ",", "mass1_"}], "}"}], ",", "t_"}],
     "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"width1", ",", 
       RowBox[{"density", "=", "30"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"width1", "=", 
       RowBox[{
        RowBox[{"mass1", "/", "length1"}], "/", "density"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"cart", "-", 
                 RowBox[{"1", "/", "4"}]}], ",", 
                RowBox[{
                 RowBox[{"-", "1"}], "/", "15"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"cart", "+", 
                 RowBox[{"1", "/", "4"}]}], ",", 
                RowBox[{"1", "/", "15"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", 
            RowBox[{"Translate", "[", 
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "width1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"length1", ",", 
                    RowBox[{"-", "width1"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"angle1", "-", 
                 RowBox[{"\[Pi]", "/", "2"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"cart", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "2"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "280"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "Dashed"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<t\>\"", "\[Equal]", 
          RowBox[{"NumberForm", "[", 
           RowBox[{"t", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "2"}], "}"}]}], "]"}]}]}]}], "]"}]}]}], "]"}], 
   "    "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"anim", "=", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"DrawSinglePendulum", "[", 
       RowBox[{
        RowBox[{"x1overall", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]1overall", "[", "t", "]"}], ",", "1", ",", "1"}], 
         "}"}], ",", "t"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"Tperturb", "+", "\[Tau]1"}]}], "}"}], ",", 
     RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}], ",", 
     RowBox[{"AnimationRepetitions", "\[Rule]", "1"}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.867166573285879*^9, 3.8671665873423815`*^9}, {
  3.867166767829652*^9, 3.8671667848062234`*^9}},
 CellLabel->
  "In[458]:=",ExpressionUUID->"d67ff24d-f62c-4bc7-8dfb-bc795242ee27"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 9.25, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 9.25}}, Typeset`size$$ = {
    280., {146., 149.98193418979645`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{{
          RGBColor[0, 0, 1], 
          Rectangle[{Rational[-1, 4] + Piecewise[{{
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {2308}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1: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
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2gEraFG4oOEzZ1zjGmOMJEkykiRJkiRJkiRJkiRJkiS5kiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ85xZ9fyC99vttdfa/7f+v8pb/9ufP3/+4z//
/P/1lwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375YxD+EkAgQQQTQihhhBNBJFFE
E0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU
00AjTTTTwr8hb6OdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZ
YpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155
450PPvnimx9++ffw/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vx3/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXfy/+vwQQSBDBhBBKGOFEEEkU0cQQSxzxJJBI
EsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBK
G+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrrbLDJ
FtvssMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyRff/PDL
n//QnwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375t+n/SwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8+R/6E0AgQQQTQihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0Em
WWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitttNNBJ11000Mv
ffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8Ah
RxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy//Pvj/EkAgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy9//lN/AggkiGBCCCWMcCKIJIpoYogljngSSCSJ
ZFJIJY10Msgki2xyyCWPfAoopIhiSiiljHIqqKSKamqopY56GmikiWZaaKWN
djropItueuilj34GGGSIYUYYZYxxJphkimlmmGWOeRZYZIllVlhljXU22GSL
bXbYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ1545Y13Pvjki29++P13
/hesPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy53/qTwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8O+j/SwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8+V/6E0AgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy//Lvn+EkAgQQQTQihhhBNBJFFEE0MsccSTQCJJ
JJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitt
tNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZb
bLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy9/
/rf+BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQ
SBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4ww
yhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77HHDIEceccMoZ51xw
yRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Mu/C/6/BBBIEMGEEEoY4UQQSRTR
xBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31
NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLL
rLDKGutssMkW2+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvv
fPDJF9/88Muf/6M/AQQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSS
RTY55JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3PfTS
Rz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjobbLLFNjvsssc+Bxxy
xDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//PLv556/BBBIEP8P
Ze/F7A==
                  "], CompressedData["
1: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
                  "]}, {Automatic}][$CellContext`t$$], $CellContext`t$$ <= 
                3}, {
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {2562}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1: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
/wEjFUQM
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2mEoaEHAoOG797PWWuuzVpIkK0mSJEmSJEmSJEmSJEmSlSRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ2ufuqefP+fvONOfMzP+p/7/lrf/lz58//xH8
5/8/fwkgkCD+vQ4hlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhlz8Gwl8CCCSIYEIIJYxwIogk
imhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWMciqopIpqaqil
jnoaaKSJZlr4N8jbaKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeB
RZZYZoVV1lhng0222GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaF
V95454NPvvjmh1/+Tf6/BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrp
ZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd
9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77
HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Muf/9CfAAIJ
IpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskjnwIKKaKYEkop
o5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKbHnrpo58BBhlimBFGGWOcCSaZ
YpoZZpljngUWWWKZFVZZY50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265
454HHnnimRdeeeOdDz754psffvm38P8lgECCCCaEUMIIJ4JIoogmhljiiCeB
RJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa6qingUaaaKaF
Vtpop4NOuuimh1766GeAQYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeD
TbbYZodd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaH
X/78V/0JIJAgggkhlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhl38f/X8JIJAgggkhlDDCiSCS
KKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzyKaCQIoopoZQyyqmgkiqqqaGW
OuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGGGWGUMcaZYJIppplhljnmWWCR
JZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSeeeeGV
N9754JMvvvnhlz//TX8CCCSIYEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQy
yCSLbHLIJY98CiikiGJKKKWMciqopIpqaqiljnoaaKSJZlpopY12Ouiki256
6KWPfgYYZIhhRhhljHEmmGSKaWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30O
OOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OSLb3745d8P/18CCCSI
YEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWM
ciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZIhhRhhljHEmmGSK
aWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWO
ex545IlnXnjljXc++OSLb3745c9/158AAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
aaOdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvnimx9+
+bfZ95cAAgkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOf
AgopopgSSimjnAoqqaKaGmqpo54GGmmimRZaaaOdDjrpopseeumjnwEGGWKY
EUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOc
Cy654pobbrnjngceeeKZF155450PPvnimx9++fM/9CeAQIIIJoRQwggngkii
iCaGWOKIJ4FEkkgmhVTSSCeDTLLIJodc8singEKKKKaEUsoop4JKqqimhlrq
qKeBRppopoVW2ming0666KaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWW
WGaFVdZYZ4NNtthmh1322OeAQ4445oRTzjjngkuuuOaGW+6454FHnnjmhVfe
eOeDT7745odf/m30/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vxP/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXf4d8fwkgkCCCCSGUMMKJIJIoookhljjiSSCR
JJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGV
NtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCT
LbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCRJ5554ZU33vngky+++eGX
P/+pPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy74D/LwEEEkQwIYQSRjgRRBJF
NDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5FVRSRTU11FJH
PQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAjjDLGOBNMMsU0M8wyxzwLLLLE
MiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfccsc9DzzyxDMvvPLG
Ox988sU3P/zy53/pTwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8u9zzlwACCSKY
EEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58CCimimBJKKaOc
CiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgRRhljnAkmmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eKbH37587/1J4BAgggmhFDCCCeCSKKIJoZY4ogngUSS
SCaFVNJIJ4NMssgmh1zyyKeAQooopoRSyiingkqqqKaGWuqop4FGmmimhVba
aKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeBRZZYZoVV1lhng022
2GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaFV95454NPvvjmh1/+
Xez7SwD/D/yVV04=
                  "], CompressedData["
1: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
Gnw8RMSzV27gUqcBqfRmqJDpMFFmHA27ZGhgKqHPxH1xhPDi3DZ6+g8VspkV
Wrn6xokMxnPSAujTgrf2JZHGCe7aIxbL7ZhPOX2wVhoYJ04+rE2pQ+82Ky2q
GRwnYJBzIgEtUDLEfGN4nOBQYBV9juZ2pOlNj4wTniH6IbLo21qcQ9smxolU
i2t/+9qo8OkBne3h6XFiuGqP0Rt0N9t3mv7cOGHKv85h20yF88Rf+9RtE8Q5
t0tSFxqoUOx1XZtRdoJw89GNlcJ8Y7NlorOhzgTRZiDsylBDhalNX/6mWEwQ
1YfZd1IyqHDl2PBolckkoRwXfa8ePXFBzeLK7Unikt90fjyal9FiftB0kigg
zTO7oHsUnJ7Y3JkkuNPT9C+i7RvuLv+9O0lwLO37LIHem3XY4aX5JBH0+Lls
K+ZDmjl+9okPJ4mGnqJcd/TpL9dsflpOEizHu+UOoCcKE+/12EwSBw+U7PLF
fGr/hfQznI6TRP6nA019qVT4Ox7KedZ1kuBZF3mgiN7/xqjO1WuSsKXzvr+E
+Vj1qZBUqs8kceDZNtMstIvCiL+9/yQh9KzsihW6ZUnLlPxikojp3ZH0CF1l
e7lpy8tJ4mH3Dcp9tC7cOC6KdraPP3cPfe/P7QwC3ZQyGW6G3lpyT/Aq2ua5
7PQttLrjw1c2aMIo6/UN9A9P60dx6MhU6cMG6JAGJuV29OPH4S166NEXB6ib
AyeJbyvbJPnQHXGdVpteTxKflmuejmB+GddcNEj/FudbmjRSi/nn71cd25vj
Jgn7pwF9mZi/9pawB8TlTxK7BdpNgzHfvdFko2NXO0lw6fOGSbyhQqSLt4Hd
uykitmUwRMqJCouD7MlSV6cJmSH5d+GmVCh3OWXxln+G0HogV+msheszNPIh
fmCGcFeOs2vehfu1xblftGGW2AAWrSfRz56fWL/ZNEt8XpMTztlJhbz9EzvC
WmYJhQPU6yLoH5dFhFraZol8/2KPIE4q9O+bFWfvmCUEzjwPYUQvl2pKanbN
Ev0zdKFDO6jgLblTsKhvlpBvcdYu206FgstMNNmhWaIvfTE3dhuu16UdxbFj
s0Qm1wMPbUYqjISEre7bNUccGGe/L4TeJ51P14I+enBQe2EjFXyH+pi8uOYI
+qmRgxVoPvv5rXLcc0QN326Oj2ir6qmdQ+i6ny7zD9Fbqhr3BPHMEd8pUSk7
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
ylWPH3KupkWDBws6vt0er8M/vyy3PpaiIRpfoieyFdfhzcWnzuYSNERKh6ho
dVgdXin54XdBDL6PjqR6e5rV4e9s3fSCJ6GdZ0BaVrIOJ0pPEOhEaIgNJ/m9
K27WYuMH8kWZ7DTEbo3LFQ5RNTitct/MQSoaokhT5Mr5xmps6H+y4SqFmngm
Tfb6hd1VOMaf+Fu5lZropWFh6qZUgd9+oc5aLqYmOp64l0N5UoaXymPv3kym
Jgqo8Vxv9SrDpW/DndTAEe2L1CWeZfgeB6+jKNipjyo92aMMl+ep2LOC7Z3l
jV64leERt712K0nURNm3/zF4PCjD+w3uWXeDOwTG719xKcOyyg8tksEq12fH
DzmWYUHfmet3wbzvSxwWbcvw0PpfbTmw+/42NbnzZfjEHqp4vk/UxLzD5488
5SjDMqld16jjqYnOZfe32iZLsYJzpe1gLDWRUj7+V7iyFNvKa/RVxlATLQtz
rViXMDbNF0/zfElNNKYMfSm6WYLJw+9+Hw2kJpJdn43qtBbhPvbTUhWPqYns
X70y7bTycZ/5XX3u29RE/d2lsVpNOdiz67SgoCbEY9PpZ9b/ivHUz5WBM9TE
i8c2dj+sSMdVtOevXOWjJuYbqPRa4nTcyvQ1UwnsvYspT7MwHVO/FmY9A+ZQ
0IqU+56ON/qf3T8KXt9ivHc0Ox1/n/tJ4gSn6Kros35Jx4dqZmTowZHiWUfG
k9Lx0Y2dmxO81MQXwbupKj6kY53zX8t+gwOjtMbevU7HHm+m/b6CmySDaRkv
puNnpyYZw3ioiSwJgy/85tOwoJXRHZsDsN4jhyOo49NwoL70RyVuaqJaz346
P6003HHeJ4Wfi5pYsP8Wx0+BFPx4l0XvJ0Zqol3CPtJl7884Xp/Eq7+HmqjH
UxtG7k7Gf/uzsnbtpibeyxpWeimXjL/UjrzLp6MmDtIKthtsJWEbyuTOnh0w
P8n6TocqkrC8v+MNGjCbg2h2TXkSxs0fuKjBqH7PkiP4wWR92xYtNfFH5bQ0
B5irbePFJjhdt9OjpCwJfwoUufIPPPvoV4kVmHPPdfoNsPRmgdK30iTcmpzr
swqm7q+spQGffbhvfQmsJzimpY2TMPGRvcsC2Kdu86VFXhKWK/4t1AUeybLo
d8lKwpPCA3/KwJMaAjL+qUl4tWeHwmdwb9fz8bjEJNx2Kb3jFXizQzWh5GMS
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
SwCFqYFgNXkK+h+SkEvm
                  "]}, {Automatic}][-3 + $CellContext`t$$], $CellContext`t$$ > 
                3}}, 0], 
            Rational[-1, 15]}, {Rational[1, 4] + Piecewise[{{
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {2308}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1: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
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2gEraFG4oOEzZ1zjGmOMJEkykiRJkiRJkiRJkiRJkiS5kiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ85xZ9fyC99vttdfa/7f+v8pb/9ufP3/+4z//
/P/1lwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375YxD+EkAgQQQTQihhhBNBJFFE
E0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU
00AjTTTTwr8hb6OdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZ
YpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155
450PPvnimx9++ffw/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vx3/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXfy/+vwQQSBDBhBBKGOFEEEkU0cQQSxzxJJBI
EsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBK
G+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrrbLDJ
FtvssMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyRff/PDL
n//QnwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375t+n/SwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8+R/6E0AgQQQTQihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0Em
WWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitttNNBJ11000Mv
ffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8Ah
RxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy//Pvj/EkAgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy9//lN/AggkiGBCCCWMcCKIJIpoYogljngSSCSJ
ZFJIJY10Msgki2xyyCWPfAoopIhiSiiljHIqqKSKamqopY56GmikiWZaaKWN
djropItueuilj34GGGSIYUYYZYxxJphkimlmmGWOeRZYZIllVlhljXU22GSL
bXbYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ1545Y13Pvjki29++P13
/hesPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy53/qTwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8O+j/SwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8+V/6E0AgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy//Lvn+EkAgQQQTQihhhBNBJFFEE0MsccSTQCJJ
JJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitt
tNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZb
bLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy9/
/rf+BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQ
SBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4ww
yhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77HHDIEceccMoZ51xw
yRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Mu/C/6/BBBIEMGEEEoY4UQQSRTR
xBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31
NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLL
rLDKGutssMkW2+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvv
fPDJF9/88Muf/6M/AQQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSS
RTY55JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3PfTS
Rz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjobbLLFNjvsssc+Bxxy
xDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//PLv556/BBBIEP8P
Ze/F7A==
                  "], CompressedData["
1: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
                  "]}, {Automatic}][$CellContext`t$$], $CellContext`t$$ <= 
                3}, {
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {2562}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1: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
/wEjFUQM
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2mEoaEHAoOG797PWWuuzVpIkK0mSJEmSJEmSJEmSJEmSlSRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ2ufuqefP+fvONOfMzP+p/7/lrf/lz58//xH8
5/8/fwkgkCD+vQ4hlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhlz8Gwl8CCCSIYEIIJYxwIogk
imhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWMciqopIpqaqil
jnoaaKSJZlr4N8jbaKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeB
RZZYZoVV1lhng0222GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaF
V95454NPvvjmh1/+Tf6/BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrp
ZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd
9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77
HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Muf/9CfAAIJ
IpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskjnwIKKaKYEkop
o5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKbHnrpo58BBhlimBFGGWOcCSaZ
YpoZZpljngUWWWKZFVZZY50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265
454HHnnimRdeeeOdDz754psffvm38P8lgECCCCaEUMIIJ4JIoogmhljiiCeB
RJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa6qingUaaaKaF
Vtpop4NOuuimh1766GeAQYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeD
TbbYZodd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaH
X/78V/0JIJAgggkhlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhl38f/X8JIJAgggkhlDDCiSCS
KKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzyKaCQIoopoZQyyqmgkiqqqaGW
OuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGGGWGUMcaZYJIppplhljnmWWCR
JZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSeeeeGV
N9754JMvvvnhlz//TX8CCCSIYEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQy
yCSLbHLIJY98CiikiGJKKKWMciqopIpqaqiljnoaaKSJZlpopY12Ouiki256
6KWPfgYYZIhhRhhljHEmmGSKaWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30O
OOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OSLb3745d8P/18CCCSI
YEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWM
ciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZIhhRhhljHEmmGSK
aWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWO
ex545IlnXnjljXc++OSLb3745c9/158AAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
aaOdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvnimx9+
+bfZ95cAAgkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOf
AgopopgSSimjnAoqqaKaGmqpo54GGmmimRZaaaOdDjrpopseeumjnwEGGWKY
EUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOc
Cy654pobbrnjngceeeKZF155450PPvnimx9++fM/9CeAQIIIJoRQwggngkii
iCaGWOKIJ4FEkkgmhVTSSCeDTLLIJodc8singEKKKKaEUsoop4JKqqimhlrq
qKeBRppopoVW2ming0666KaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWW
WGaFVdZYZ4NNtthmh1322OeAQ4445oRTzjjngkuuuOaGW+6454FHnnjmhVfe
eOeDT7745odf/m30/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vxP/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXf4d8fwkgkCCCCSGUMMKJIJIoookhljjiSSCR
JJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGV
NtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCT
LbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCRJ5554ZU33vngky+++eGX
P/+pPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy74D/LwEEEkQwIYQSRjgRRBJF
NDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5FVRSRTU11FJH
PQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAjjDLGOBNMMsU0M8wyxzwLLLLE
MiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfccsc9DzzyxDMvvPLG
Ox988sU3P/zy53/pTwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8u9zzlwACCSKY
EEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58CCimimBJKKaOc
CiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgRRhljnAkmmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eKbH37587/1J4BAgggmhFDCCCeCSKKIJoZY4ogngUSS
SCaFVNJIJ4NMssgmh1zyyKeAQooopoRSyiingkqqqKaGWuqop4FGmmimhVba
aKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeBRZZYZoVV1lhng022
2GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaFV95454NPvvjmh1/+
Xez7SwD/D/yVV04=
                  "], CompressedData["
1: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
Gnw8RMSzV27gUqcBqfRmqJDpMFFmHA27ZGhgKqHPxH1xhPDi3DZ6+g8VspkV
Wrn6xokMxnPSAujTgrf2JZHGCe7aIxbL7ZhPOX2wVhoYJ04+rE2pQ+82Ky2q
GRwnYJBzIgEtUDLEfGN4nOBQYBV9juZ2pOlNj4wTniH6IbLo21qcQ9smxolU
i2t/+9qo8OkBne3h6XFiuGqP0Rt0N9t3mv7cOGHKv85h20yF88Rf+9RtE8Q5
t0tSFxqoUOx1XZtRdoJw89GNlcJ8Y7NlorOhzgTRZiDsylBDhalNX/6mWEwQ
1YfZd1IyqHDl2PBolckkoRwXfa8ePXFBzeLK7Unikt90fjyal9FiftB0kigg
zTO7oHsUnJ7Y3JkkuNPT9C+i7RvuLv+9O0lwLO37LIHem3XY4aX5JBH0+Lls
K+ZDmjl+9okPJ4mGnqJcd/TpL9dsflpOEizHu+UOoCcKE+/12EwSBw+U7PLF
fGr/hfQznI6TRP6nA019qVT4Ox7KedZ1kuBZF3mgiN7/xqjO1WuSsKXzvr+E
+Vj1qZBUqs8kceDZNtMstIvCiL+9/yQh9KzsihW6ZUnLlPxikojp3ZH0CF1l
e7lpy8tJ4mH3Dcp9tC7cOC6KdraPP3cPfe/P7QwC3ZQyGW6G3lpyT/Aq2ua5
7PQttLrjw1c2aMIo6/UN9A9P60dx6MhU6cMG6JAGJuV29OPH4S166NEXB6ib
AyeJbyvbJPnQHXGdVpteTxKflmuejmB+GddcNEj/FudbmjRSi/nn71cd25vj
Jgn7pwF9mZi/9pawB8TlTxK7BdpNgzHfvdFko2NXO0lw6fOGSbyhQqSLt4Hd
uykitmUwRMqJCouD7MlSV6cJmSH5d+GmVCh3OWXxln+G0HogV+msheszNPIh
fmCGcFeOs2vehfu1xblftGGW2AAWrSfRz56fWL/ZNEt8XpMTztlJhbz9EzvC
WmYJhQPU6yLoH5dFhFraZol8/2KPIE4q9O+bFWfvmCUEzjwPYUQvl2pKanbN
Ev0zdKFDO6jgLblTsKhvlpBvcdYu206FgstMNNmhWaIvfTE3dhuu16UdxbFj
s0Qm1wMPbUYqjISEre7bNUccGGe/L4TeJ51P14I+enBQe2EjFXyH+pi8uOYI
+qmRgxVoPvv5rXLcc0QN326Oj2ir6qmdQ+i6ny7zD9Fbqhr3BPHMEd8pUSk7
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
ylWPH3KupkWDBws6vt0er8M/vyy3PpaiIRpfoieyFdfhzcWnzuYSNERKh6ho
dVgdXin54XdBDL6PjqR6e5rV4e9s3fSCJ6GdZ0BaVrIOJ0pPEOhEaIgNJ/m9
K27WYuMH8kWZ7DTEbo3LFQ5RNTitct/MQSoaokhT5Mr5xmps6H+y4SqFmngm
Tfb6hd1VOMaf+Fu5lZropWFh6qZUgd9+oc5aLqYmOp64l0N5UoaXymPv3kym
Jgqo8Vxv9SrDpW/DndTAEe2L1CWeZfgeB6+jKNipjyo92aMMl+ep2LOC7Z3l
jV64leERt712K0nURNm3/zF4PCjD+w3uWXeDOwTG719xKcOyyg8tksEq12fH
DzmWYUHfmet3wbzvSxwWbcvw0PpfbTmw+/42NbnzZfjEHqp4vk/UxLzD5488
5SjDMqld16jjqYnOZfe32iZLsYJzpe1gLDWRUj7+V7iyFNvKa/RVxlATLQtz
rViXMDbNF0/zfElNNKYMfSm6WYLJw+9+Hw2kJpJdn43qtBbhPvbTUhWPqYns
X70y7bTycZ/5XX3u29RE/d2lsVpNOdiz67SgoCbEY9PpZ9b/ivHUz5WBM9TE
i8c2dj+sSMdVtOevXOWjJuYbqPRa4nTcyvQ1UwnsvYspT7MwHVO/FmY9A+ZQ
0IqU+56ON/qf3T8KXt9ivHc0Ox1/n/tJ4gSn6Kros35Jx4dqZmTowZHiWUfG
k9Lx0Y2dmxO81MQXwbupKj6kY53zX8t+gwOjtMbevU7HHm+m/b6CmySDaRkv
puNnpyYZw3ioiSwJgy/85tOwoJXRHZsDsN4jhyOo49NwoL70RyVuaqJaz346
P6003HHeJ4Wfi5pYsP8Wx0+BFPx4l0XvJ0Zqol3CPtJl7884Xp/Eq7+HmqjH
UxtG7k7Gf/uzsnbtpibeyxpWeimXjL/UjrzLp6MmDtIKthtsJWEbyuTOnh0w
P8n6TocqkrC8v+MNGjCbg2h2TXkSxs0fuKjBqH7PkiP4wWR92xYtNfFH5bQ0
B5irbePFJjhdt9OjpCwJfwoUufIPPPvoV4kVmHPPdfoNsPRmgdK30iTcmpzr
swqm7q+spQGffbhvfQmsJzimpY2TMPGRvcsC2Kdu86VFXhKWK/4t1AUeybLo
d8lKwpPCA3/KwJMaAjL+qUl4tWeHwmdwb9fz8bjEJNx2Kb3jFXizQzWh5GMS
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
SwCFqYFgNXkK+h+SkEvm
                  "]}, {Automatic}][-3 + $CellContext`t$$], $CellContext`t$$ > 
                3}}, 0], 
            Rational[1, 15]}]}, {
          RGBColor[1, 0.5, 0], 
          Translate[
           Rotate[
            Rectangle[{0, 
              Rational[1, 30]}, {1, 
              Rational[-1, 30]}], Rational[-1, 2] Pi + Piecewise[{{
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {2308}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1: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
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2gEraFG4oOEzZ1zjGmOMJEkykiRJkiRJkiRJkiRJkiS5kiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ85xZ9fyC99vttdfa/7f+v8pb/9ufP3/+4z//
/P/1lwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375YxD+EkAgQQQTQihhhBNBJFFE
E0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU
00AjTTTTwr8hb6OdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZ
YpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155
450PPvnimx9++ffw/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vx3/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXfy/+vwQQSBDBhBBKGOFEEEkU0cQQSxzxJJBI
EsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBK
G+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrrbLDJ
FtvssMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyRff/PDL
n//QnwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375t+n/SwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8+R/6E0AgQQQTQihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0Em
WWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitttNNBJ11000Mv
ffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8Ah
RxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy//Pvj/EkAgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy9//lN/AggkiGBCCCWMcCKIJIpoYogljngSSCSJ
ZFJIJY10Msgki2xyyCWPfAoopIhiSiiljHIqqKSKamqopY56GmikiWZaaKWN
djropItueuilj34GGGSIYUYYZYxxJphkimlmmGWOeRZYZIllVlhljXU22GSL
bXbYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ1545Y13Pvjki29++P13
/hesPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy53/qTwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8O+j/SwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8+V/6E0AgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy//Lvn+EkAgQQQTQihhhBNBJFFEE0MsccSTQCJJ
JJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitt
tNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZb
bLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy9/
/rf+BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQ
SBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4ww
yhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77HHDIEceccMoZ51xw
yRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Mu/C/6/BBBIEMGEEEoY4UQQSRTR
xBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31
NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLL
rLDKGutssMkW2+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvv
fPDJF9/88Muf/6M/AQQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSS
RTY55JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3PfTS
Rz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjobbLLFNjvsssc+Bxxy
xDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//PLv556/BBBIEP8P
Ze/F7A==
                  "], CompressedData["
1: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
g36xlevAKvpircHxvxkYv0+zt9zFqIhWYV1bGrRka2rqKnoVKmN5382B5g/+
6LUDVESXQuH3A0lzwK47wrd6kIo4m+l593jsHPit8Z9cPERFOFpY/j4XPgdv
3NdoZlSoiJzjfdUWAXMQqNTV8uEq9ifxWKCE2hy8T1PqGAygItyVRKUENmdh
y/svriEZVETLh95R7fxZOFLcL5jeQEW8UNvJ881tFqo35t80tlIRI/mrcsds
ZoEnaujVQg8VYZVhKVNqOgvXiVEWthEqIuS/78I652ZBxozXVhHd4UC1Zwea
/vrvEiN0bXbI1hqdWXA6R8fjjnbaa74ajKYTzLnzEm37wX1SE32ma6TqJ9rs
XlfPVrS+wKm7tH+pCMUw6VJ/7VkIKhk8uxO92GEGTuiSUGcBLvR/EJN3Ga3p
5FEljf5xZE+WAlqwxZVPnpL/OrWHFHpM3N75ELoze/KUEPrHZ5N9BDpa71Yj
GzpgEypOo2mpn+vRorO28DhdQDsalDXPnZ0Fse3/WNPQnOLX+7XRsrv8P5LR
NIP3p9O0ZkF839AZg1EqInCFaZMW/bdB8HXOBBXxc7/0ZMTJWeDa0/159zQV
EUedYyd4fBYyD8n6u8xRETN3HAOzD82Cx/wRjqYFKiIxS0ZZTW4Wis78CVTc
Q01ISFxPYZqdgXDhnUl7D1MTU1E3ErmyZqA9kDrPQoeacIH0Nmu/GfjEzadj
d52aUGhfEe42noHvk75PCXdqIjhW7s1d6RlYXTqc1/aEmjAQf+Z5jHYGTEb5
0phiqAn+A1EPPIanISn7vwpWdIOmW8M1tF2B9Bgn2nn+5n4tdNHOD9v40NV9
11wPol8mSkgIoydZLCu50FQur89Iomf9b/NQo7uT/B4fQpcuhxTXD03DRIdh
jRr6v/uV1q/QCrwcO86jI5j3M99G3285GGaNFo20MmVEf47M0rBDL+3O0J4f
nIaLslLUzmjtucXjXWhXfi5nL/Rxk1iB9+gb9xdGgtEJkuRuL/Rt+SLjaPSH
b0LOF9BWA311W2OpiXDO4UsP+6fhnbfnsfvoImr3M1m907D89MqZuXhqYo3O
/2pE7TRw7ZyquZFETeRNri255k9D9ezbsrZUaoL+bjG72X/TQP8uf0SgiJp4
GvK978+xabAZCbBg6aQmXt7zcG9p/AeFvsr/vSVRExta0flXrf9BFfOpw8M7
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
e+c61DepD1xVZbXI7kq7j5AjxLuu5Wt/jTq00v3sraYTDguwMAh64FKHLPy9
M92d4f411/9yMLEOpfbOm2a6QP6ZWYgLJNYhgQxPjldgq/l329qNdShNUqrt
DTi+if02X1MdynWhDSwGuzxtmv0CbndnOFEJbvjw1TW/uQ6FKR39Wwe+0OC6
5tFSh7TOTdhRwHwbNntYWutQhZ3y8Afwwo0di+fkOoTPPKY7Dlbada7qWFsd
skmVUFoGb/dWttt21KFQ48lI+ptwvr9x9N7vgu9Xr7Hiwea3DFI3wb8LhSNY
wDmZ1te93tehoH+/iqgmcvic8wNfNajto3p9KFkmEBz5JmyVan1iJVsomJ7F
TIgVnP1uYOEJmOwugaheXV3tiwZ/1m4OpTo1/WRaKlgC2bynWqE3xPYlOFn7
Hy8buDKxT7IAnKJwYIIDrCc79J29uw4J/rpYuBs8O5Gd6wY+5xvrwwuWyFdx
+QA2+DpwVgBs6pp05L+eOiS3mqfxHzhzSkiLsb8OxVlePGMALs913D08WIeO
NQ2fd6GOP/NI5NvROnRvRMkwDHzumUTNg891qGNE3TvLFerN4Ee1BYZ6FJqt
K1F/C4fdDo98/VKuHl3g2TIbcsNhz+foianG9Wjf6gz3ijt8z1rCsNenHumN
PrfkvYPDFO9uHdB6UY9GvQde9PrjsDQX4VepewkIP5d2cgCsTFOVpypMQGzi
9wZGwA08l4vHwLaCrm6fwZR15tr7IgTk1evHPAWuvtpAFt1HQO3a2dnT4Dk6
j4EWcE/rgeFF8FTH702cKAG56eDZN8F7uL3ldcQIyHJST4M+AO5TajzOMeIE
pH3Z6qYtOGrXEwc1BQIaxMkR6sEJ90a55k8SUCi+85jgfehn+QutX2kRkIHv
hX4PcKx5qrqtKQFdqREPPfwA1t/mZf7kLQISCD1x+wZ4jpbS4epFQCHneOep
xj12X7wPVtJfcLYHX3QT548FH37WMU012Wbs5Auwy5EcOwewhlnm1TLwPEvw
BNUVpo5hJPADXdVPjuDbdmz938HSuUsfnR5Q63PvPqZ7BPRLqKjbGXzkc4Wz
LPhN79FYD3Cg3tqnB94EpJcRYOsPvlLrqRrjQ0Bzi+wKIeDSq83Dmb4EJDkx
tRMB1hMwflDkR0BfbtH0JIBfH948RPSH77ng3bPBzny52eP3Cch5VZK7HHz5
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
                  "]}, {Automatic}][$CellContext`t$$], $CellContext`t$$ <= 
                3}, {
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {2562}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1: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
/wEjFUQM
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2mEoaEHAoOG797PWWuuzVpIkK0mSJEmSJEmSJEmSJEmSlSRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ2ufuqefP+fvONOfMzP+p/7/lrf/lz58//xH8
5/8/fwkgkCD+vQ4hlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhlz8Gwl8CCCSIYEIIJYxwIogk
imhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWMciqopIpqaqil
jnoaaKSJZlr4N8jbaKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeB
RZZYZoVV1lhng0222GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaF
V95454NPvvjmh1/+Tf6/BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrp
ZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd
9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77
HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Muf/9CfAAIJ
IpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskjnwIKKaKYEkop
o5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKbHnrpo58BBhlimBFGGWOcCSaZ
YpoZZpljngUWWWKZFVZZY50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265
454HHnnimRdeeeOdDz754psffvm38P8lgECCCCaEUMIIJ4JIoogmhljiiCeB
RJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa6qingUaaaKaF
Vtpop4NOuuimh1766GeAQYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeD
TbbYZodd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaH
X/78V/0JIJAgggkhlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhl38f/X8JIJAgggkhlDDCiSCS
KKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzyKaCQIoopoZQyyqmgkiqqqaGW
OuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGGGWGUMcaZYJIppplhljnmWWCR
JZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSeeeeGV
N9754JMvvvnhlz//TX8CCCSIYEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQy
yCSLbHLIJY98CiikiGJKKKWMciqopIpqaqiljnoaaKSJZlpopY12Ouiki256
6KWPfgYYZIhhRhhljHEmmGSKaWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30O
OOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OSLb3745d8P/18CCCSI
YEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWM
ciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZIhhRhhljHEmmGSK
aWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWO
ex545IlnXnjljXc++OSLb3745c9/158AAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
aaOdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvnimx9+
+bfZ95cAAgkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOf
AgopopgSSimjnAoqqaKaGmqpo54GGmmimRZaaaOdDjrpopseeumjnwEGGWKY
EUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOc
Cy654pobbrnjngceeeKZF155450PPvnimx9++fM/9CeAQIIIJoRQwggngkii
iCaGWOKIJ4FEkkgmhVTSSCeDTLLIJodc8singEKKKKaEUsoop4JKqqimhlrq
qKeBRppopoVW2ming0666KaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWW
WGaFVdZYZ4NNtthmh1322OeAQ4445oRTzjjngkuuuOaGW+6454FHnnjmhVfe
eOeDT7745odf/m30/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vxP/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXf4d8fwkgkCCCCSGUMMKJIJIoookhljjiSSCR
JJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGV
NtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCT
LbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCRJ5554ZU33vngky+++eGX
P/+pPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy74D/LwEEEkQwIYQSRjgRRBJF
NDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5FVRSRTU11FJH
PQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAjjDLGOBNMMsU0M8wyxzwLLLLE
MiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfccsc9DzzyxDMvvPLG
Ox988sU3P/zy53/pTwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8u9zzlwACCSKY
EEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58CCimimBJKKaOc
CiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgRRhljnAkmmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eKbH37587/1J4BAgggmhFDCCCeCSKKIJoZY4ogngUSS
SCaFVNJIJ4NMssgmh1zyyKeAQooopoRSyiingkqqqKaGWuqop4FGmmimhVba
aKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeBRZZYZoVV1lhng022
2GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaFV95454NPvvjmh1/+
Xez7SwD/D/yVV04=
                  "], CompressedData["
1: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
ebNqCQ4seP5ujpr/GoqRW9l+UsmBWRLYqN5GrCF5KtpgT3BKjmvOb/Dnp/JC
YWDP92GmrJFryOlDYF4K2GzzFqcKeP0VjWo+OC8ALnbgVOGErq/gCQ0Wh3yw
VN7uHf/A92ebeg5GraFubsFD9FUc2MT/xvkw8B717ItHwDP+nz5Rv1lDWzMP
l8n+aCQ5QQPmTj7yVgwsZ//hID34zt1RNXGwX8fRW4zgLtnkBbKfaPVEMIPt
uE1ij4JdWP1/soLPMnbPSoDts8YQFzhZ/pqyFLjPXO0DL5iadMj7DDgwHdGd
B3uwMn9XB3+oSDK1BusLMTDrgTszHMtiwQdWsz72gHM0a030Y9ZQ1f0FA5Nq
Duxw9I00d9wa6tfuZRkB+wY0iDfFryE1H6v6+zUceOCx/NWXCWuILl5jV8x3
WF/PabZmctbQgML5pF8/OTCNovo/0+o1pDBgn07XxoErv864DbetoeclvSTl
LpjPJUcRh9E1lP3OaNG9jwPH+c8qk9bW0Ar7pX2S9Jy4qjbU4sSLdVR/+5Tq
5+Oc2M1zcE6XcwPJMmkcu3+VE9sXR7ktu2ygok1GKmtw4UJQA5PrBkJKzS0O
4Iwee34hcHVfbLIbeOaI3j15sHqzld0LcG2PTL4W+Cf/+QsBYNtZJuq74Jbr
m6NRYNn2z/GvwXWTdb5p4EopVYUv4NTOd2J55Pfnv7VPgHOXOD3O6HDihrFf
wxluG8j7bMtADdiw8vqU+bMN1B/5T/3SNU48PCEyddB9A11rv1rSDq7xYhge
9NhA4rFHaebB/226cJ/x3EDrpUZXmHU58RnfqPPh4Od+Jjoc4MO7SKmp4EI5
i+sk8MfXwTQFYE9dtxuCYMaNZ7W/wQ9uFhgLgQfYXHV6wT7WxSXC4Kv7h+sG
wNEHg7sPgn2VAy1HwPe2zTcOgQU1T7KNg/+d41E4DFao8rk+B77MX+MsBtZM
7YxbBT85kb9yFry/dNj87IsNlJnTb6sHHhUolPID1wcrz1uBw8IvrzWD+488
HdK6zomzo+Iq3/lsIEs5oSkpPU58axrZuvtvoLZNSSYOfU4cR4+ZDQI3kExO
8tkFMHfVuwDp4A10sb5OpNqUEzMfsZEJf7+B8lf0vsc+4MR7g3M/T37bQJzH
bwo/s+XEIXLJh6VHNlCgTI7kg/848XdG1ribOzfRjZcTQ8ZenPj1JylK232b
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
                  "]}, {Automatic}][-3 + $CellContext`t$$], $CellContext`t$$ > 
                3}}, 0], {0, 0}], {
            Piecewise[{{
               
               InterpolatingFunction[{{0., 6.25}}, {
                5, 7, 1, {2308}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                 False}, CompressedData["
1:eJw93Hc41W/YAPCDY69jKwrZo0FWiedBycqeoYyMkK00KBoqVKRE/KLslUIo
M2QlEhmliOzsvc57e9/res91netzfb/nue/nfsY5nu8/hBy9TZwpCQQCBbyJ
9IT/fy1I6K22+fKj/1MGPUgOZyykdUZaJ+sjREQCkFblp2jvumBUu3qu7mNR
BJLTWfidrhmLKLmL7KZyE9B53/f/eCOSUb7vOyKSSUURRlpbzSqpyPXg9yUL
vVR0nMVl+s/pVCT4b2nEyz0VbbXc/r1+ORW9u5fWzh6firxP1tdIlaYiSeq/
bzW6U9HzGyJP/LjSEPOm06WXpmlIoONj+22zNCSbKSR13jwNaYTcuKlvkYbM
zH7/PGiZhlyk1BQ5rNLQve8bY73WaSg3rOx5sk0aaj9wycDVDuLGfutIeaeh
mBTtE/9upKHF029wQUwaMufcfcw/NQ0Jm8iysFmko9mH2gP5tBmosvXsW/2y
DBTJeOnWhHsmstZ5YHGXPwu9sf5wwpqmABU/OGjvFVKIympfXbm5/A5VrPI8
eeb1HtXsj3ydN1KBSKjdz3esAp014lRUmKhAeQ5Wa6uTFWjTL7G8/F8F0rs1
cP3GTAUaS3ejoVuoQHeaZiMfLlcg4akgDp71CqSj1WzmuKcSeSfzPc3Dlejp
umf3qlMlKjer5D0eXomO9k2myY9VoUCBzbeaM1Wo4BxTtclyFZrI4m912KpC
rvk5Yz7g8NujxBugQ0mTwEPw1wcrlf9Am+pRizzQvIn6QQto2CFcPw7q/FDf
pN2uQkwKXsKKZMhz8pSoHKEa6QQMKTeBUimX9e0pqtGqgyXpJG01atin0Lmf
uRo9GWJ/xslRjdI8ytV4DapR0YLzX7571ajuKmukQF01+kZVJidMrkaBe+/y
D97+iHiOWNK8YKpDZaZis7aP65GN11Lv7t0NaPNuXW1PciP6q1xEarZoRnYB
Eg0Ols2o63Vi8BqoP0mSj7ZqRnVityckrJvRMce15GpQuneQefZ0M9pt1HxF
wLYZMTS8HTWwa0bnPBskJM83owq2n+epApsRT8lsdv+NZuRrSz1VEtmMRDIO
eHmmQvtIp+xEcNbn2chn8Lt5674tsPwo5dn9ac3opYDSczvQazyZoxI8UsgQ
uTe9GVEHBxCvgxtnnpZqZjejOVzqSZffjD7fyw8dKmhGmR2pTysLm9FNvuc5
8e+a0dlz0dUBZc2Iezl4QqqqGbWGu3MO1jWjW7ss1eKam5FKjqbbqfZm5GAb
yuhB34LCmavy72q0oPzKTeP0qy2o0/voUm1RC1oXDHo2+K8FBTENrtJLfkEb
G6kyu+Ta0QffXts8w6/oyihzlPqFDsRZW3ijBnz9n3WAulcH0r1Cdq0B/5qn
2ah7d6DrsnqGNWDx2FPFGp8ONPHiz54a3w4kYHmAusavAylcF2apvtaB9DJ4
earudCCHNmbBykcd6OIKpWRFQgcadE5YKU/sQPqdsp/K/+tAJRpNseXJHUjo
jb1T+csOFCmwKlue2oEcN8XaPmR2oPZh69x6UK018l4bmFtc5dIL7v5vXnMI
vHtHVOgfeM4y4gchqwNhibknnCD/moWRBFgsZPzsH2ioqzfwNrsDNXKrixvm
dCD1IUWvSfD9a5ni8NwOJH9t36ZwXgcS42K5b5vfgXblr/E8ed2BGE/+TWst
6EDbv9sP07ztQJd6iVUqlR1otkNZ17e5A7l/9uxK/96BhuqT7X/+6UC2VZ2T
bDNQX8hPG8nz31D3seEWPPQNxW5MqljZdSLj9ws53t2diOXyBl+4cReijX0Y
JpP7Hb2oVigc0+9GSv9+DKX+60bF7ce4rKe7kVxRkhbzTDd6Hbd9qQbcf/Vs
VuBsN8o+U90nOdeN0kTDVGPmu1HylGby+kI3el5ITeW01I2i1e81Hl7tRuFt
TA+IG90o2O6RaddWN7rcFP1yabsbnZlvipcmdyNNPspoB5D5gt/1VrBt6C7X
EBh9+kXOKsil/blbmNCD4hXWqAzBPcJih66AJ9xHxyUpe9CFN5mveql60NPV
83b3qHuQePXyfy7cPags/OaApngP0jMk7RNS7kH93ElO29o96NEf/oWXcz3o
eH5i2MmEXrRymZ99SqMPZZ9ITHk02Yfs2PhlFWJ/IK9vp+2nRn6i50a7fRfG
f6Km1t7Q9amfaFk3PoZi9icSabR6RbfwExmf4C1iXf6JclFc157Nn4j2KPeK
NGU/cpR/wnuUrh/Nbtx3bTjej87xxNZ4nOhHvXJJfCStfmRgkB5YBH48/7rN
6mQ/UrpdKrkFCpU395/Q6UcMCz+jH+j2owXJmRPdev3oUxxHvptBP4qnVuZe
N+pHx627R4dM+1HlbES0pFk/OnIXq3iD+0uyHqyDq2Kintzm/aj2abKOHGh1
MY7oDv4zf1CVAoYp3L7SC5rPSTbSWPUj8bwvXPKn+9G6m7+Tg20/Uqz64yHm
14/8uEwCJsP7Ub5HzbWCpH40UXPodmBhP8KC93vFo36huJCh/X0uvxHrwKez
lYwD6HyhiIrbngFUdyeMm/3gANp7emDuAx5AQfvVWp1NBtD+zrWbZYEDaPBK
8VHm+AH0VMh3zr58AOk1ymQW/R5AZK+xM3RUg+jS1cxsS3A23G05HXSLldBY
BgeSx6JOEAeRVV5mbyyo/UnC9zD1IFL+nUnXAUquSiT70AyiiDnJiJdMg+jf
hNTFTvZBZDQs7UCzaxC97ZfRVxaA/O0H9iVKDyKV2kOrZKVBRHgn98Xp+CDy
tX43f+nkIPqzeYQnUncQmSZXqCSfGkSKo3W3Gk0H0VOJx5+ozAfRPcMKVwHw
6sVROhWQdEeaWwtMfeItbAxaHX8euyPTwidqE7A6Zf7ijgFGe8d2lCDrWJuC
j2xTVMzA1bLVPeagPY8RwQJcyPHYYwXeweFHT4O7ul5a2oLfX7674gs+9mlO
ugMaqf2qfg4WnkwV8LYYRNzG7iEaloPo8ulD/VxWg6jfaVllHCyveTsj5TCI
ngt4v/I8D3UHS1vm+w6i0z9GGWYvD6IjR1IrZcOg3yFy7cfOQZT7wKbJVPwP
cj5S8mX48h+0d5i9M/DzH9TzwKuXRmAIRR9p/hXnO4QOupFOzYOtTy0+6PsN
IY/6RMkMkH7xTxyF/xBK3ydJYwv+uV78hxQwhPb2q1fVg6ePfnl+JXAIvf6l
cyTi2hCivln//flNuC+uHpB7fwgVtJSzVUQPIVqlaGWnniFUeP2u/62RIXSm
8Xp+2uIQEik73Z++PIQmsxSYMleH0JsEkkrW+hBSu/bpWc425Mkq+RVEHkLX
mh96RoEvJl3XU8Dh/bzcLaCkT6PsIqike9t9E/y0EnN9R/O05Ngdh03ys3b0
J5RX7kiZ3/RtRyH6v1s7onMEiS3QrorPZMf7BvtXtsHSfrVEAmEYjXgaqVOC
+URCETt4MfG1mDCodT8ipQHkCXLl96QYRqPOmnEkymHEXNDnFEw3jOTWfQ9N
sAzD/qHfsuAaRsEPkptq+YbRov+9BirbYeRu7VevmTiMBtVsam/+HEaWIsdr
avn/oi/0+6uo7P4iAnGJ/8HkXyS3XX6F98oIks8amHK6NoIUzIhnX4eMIEWy
+Nf1GyNIKVtPU+vmCDpi7l0cfXsE/o6/i5e4P4LUKLaDqx6MIGx5wtHi8Qh6
5D4QkA7+Dr4avgweiOZO0IodQSGpb3Kfgq0l+lUjoOevsOE7T0YQI3UZvfjT
EZQlPXOgAfyZx/SKLmkEsR6S4tF9NYI03p6MiMgaQQf/lcbkgHwSUgktIJ3T
85RJcDGJKYsxewQN9gQXSIPvDeyrPEDTqbvES+C/e290wkDBesrOZ6AUkcMi
CZTXFO5JAXVqNH9mg3bo3EAh6Fdxa7gcVMtuYubJGUEMcSxKvmD3TVP7FvBb
LXHL6PUIaqN6F//97Qhq1nRVtH03gj7d5P02WDaCkqio53f1jyD/m3MkE8Io
0qH6dfC+8CgSvNls8FFrFC1TllxYPz+KDv76yDIxPooGUy6R1ydHUayzzCzj
9Cg6KTk4wD87itannnzdPz+K8gp0P6otjiJ25aJX9qujKKhqz+2wzVH0Syvc
JZUwhuZHw/h8WcYQ7b2QdlX+McQndeU2g9QYYvsxTCXgCfcjDcMO54+hrWPv
CdqzY2jhn8h1W7lxdJph5sbfw+Poo1hZmJfCOJLSvHlrRXEcRZ89deeG8jha
u8pzl/7oOGosyongUx1Hz/6hh/vxOHIV64xBmuPIbfTa4ada48g9U7RzSmcc
eZz/EqB5ahx5TQq8mzUFqbceapmPozPOzVwnQYP6uOc7qok6C2mDB27LZey4
9y9ZRgfcTk1Q1gV/nVM4rgdWirQb6oPBr37UWoDH9o0qOYAbyfM5HqB/rLN8
JzgZ3lN+zGIcOV3VO5EGsm83xr8/DeO6oTXddmYc+VLVafx1HEeCd9Tj1l3G
0WqyxHDbw3HU/oFVNq10HGV9Xw6+MjiOQuf6mw0ZJpA1Uz2P6OEJ9JhDTPlU
wQT6sjvcKnD/JKLbNxaUlD2JBEpZ/33LnUQKBkoODK8nkd7wmS78ZhI5Xrmj
c6lwEgWR8ivyiidR6rGttN3vJ9FXN/0H4ZWTaDv2+cXFj5Pog0HhPYWZSfSj
T4TzGbju8vS/dXD3Aq2k3ewkOnL9cmEVaMU4qbpvbhLFCX8xGQW/q7xxzZ2f
RFxmsdd8FybRXS3/UyIbk4jm0pFL+ZuT6GYGOVl5exLl+b2cVwG/q544jkAC
/dgTDVCy8/7oCdD0xf4jOmC6gv9PQ3CtpfS6BajvuL3PDryv/u7mC7BB0Gt4
EKQmiJ0QIU8izd/9aS5gVdIp10nQ6tyD6E3wzYr4mx3pI2rad3TcazO74/s3
i6xbIMeJBwd3rPOo8doxMGYxb0exMvF/O7IdE3cmEKbQZqVYPyU4qi5mTg1y
nxWi3gueuMZfrAgGxPM4G4I6FSPHtSimkMBgsYgq5RRaJN4mylNNoSYJs2Ep
4hTa+9DjZRsztF8Ksw/ggfs2CXt3CcH9j29+VkhNIX+JpgRH+SlUL15I2xE7
hXjFkwLUl6aQh1j4YIH5P1Qh6msg+O4fIonafHjIPY2cRE5IkC9OI8HgO4rG
l6dRf1fD8VdXp1HCAXrTpeBpZBmu63DyxjTiHIjwjg+bRg+jWSJVw6cRvWZ0
5mDENLq5yFF/+9E0SmaRCSVET6MKieOqV8E+Ddu1JXDFNqDYJwbiL0X6ToKn
csrHBx5Po/DfUw7fY6dRDceevpYn04hiLznC8cU00pAYVF3LhHafJ8ylsqaR
tc/iBRvwHOf27UjQp5T2vwrwqi3bu2kwJlVkxCh7Gj23raxxBF9xWiUFgIW3
IsyegeOuBy+/AAX1viWlg1FsfKNF4Hq346Fa0PW/7MtfwcwzQRb2OdB+r9bh
GVD6NwcpJHcalTrsKWB/O420hsWMMkqm0TeXQ7MqFdPIYfzIo/aP0J4yvv2/
daiLf5V0QW4GrSpYGqu4z6Drhu+i6V/OINrzXB3dvTMoR6Vfe9fPGWTEklZ1
+tcMWhzwVEwcmEHPCuXz+v/MINU7m8ICf2fQHelItpfjM6itnY8sMj2DeC7m
TGXMzyCh2977Li/MIOnYw1a6izNI/tVKFN/SDFJ7+6F2CjxZc32tYnkG2fym
dbZfnUFeWw/bKddnUCgf77G0DYhPLSrZpp5FoUftvkqxzKLBdupJC+5ZpO6a
T7y5dxbd/2+MdfnkLPrWtY/vvO8s4me2E/uZMIt2CxGNhZ/PIh6FnKvuIJeO
SfobkMNurX0VZPNN3kCJs4g5ftroC0hXcyzdNmkWEcfvb0yAvUHPjK68mkV5
dOlp9FmzKM1Kw0gsexapWQhOSYDdptvh0qCP8U/hAyC94fuqQ+BL/Wc2h8Gu
k2aPlUFaTVKLKnhE7TOlJijLInLoEviEmPgiFFxf52CNBGtHqaaTwcjOhc/F
oEXNUE4zeJhC0+F5zixiVX/J7Zk7iwqqTss8LpqF8yKHxvvyWTRX3mI5WDeL
7ORozHjGZ1FTBjY6xTyHFPZc1b8pO4dSYoq1y8znkJOR4mHu6DkkwlKyx//z
HOJ5kd40vDKHikis0RKrc8gk7JKVJziz8FugAIx01h5dAKW6C/KV1uaQ8/tQ
1SowOcnks9b6HPpxQ9jmC2h0sj6of2MOfWJ2fTq1OYeOddIVbWzNIer7OmJu
23OoFd1/1gmezWEMziPPoZLcL0uNICk/2msYdL2a6zEDVmg3uK2DHkObjiTC
POINkbMTAz/xulkeAyOEb+zhpZhHxgeeDS2APEcKstoo59HX1GQXZ8Z5dJ8U
LbzBMY+OXwsdeMQ/j7ZGfZPEROeRU+iI2VeXedS424bpWuY8OlDUVis2MY8e
nzp+9av0AmI5svRiQXkB3RVJr+PSWkBUJMtxJdMFdEdm9fwlkF4nfuIdGOF8
1GMZZAn7MalgtoCi/7vmGQg+7a68sAiGL98NpDNfQJe4TIP5QSvT0cjjoPEa
8ZE+qPdi32MzUG3SLv4cKKcU/yIAFL3ZmXYLzLgiOixisYCk/C7uqwdzzzfY
O1suoI+cc20Zdguop2o3mnBaQNPux/Nl3BcQkdtrj7fPAhqoYwmkfb2Ayv1f
f37xbwH9/o/jUhTvIqJsviR0VXMRiS79aHHzWkQ6gviiRfwi8u49dbE2axG9
S0qoaQO3HEaZfoLHxeStxsCIiRuvFsGO/NZpQvYisldyvb0LnK4i8MuBwdoJ
b3XBeOvW31fBsM6ftuGgh+FUbwyodoKxMwskqUh9qQaHDuk0doP8LSFRFTmL
yMK5yORV7iJ67PGZJql4EbX7Dr9/WrmImIM2vR41LKJzOrw+zFuL6MNued/7
ckuIfcrQj9ZtCblVePjfSlpCSp/vUbwdW0Lngz4YJI0voUSRf8/vTizB787e
cf/JJUQRbKR4dmoJyUuG3dT9t4TiQ//uEZpZQtu92qUrs0vonFyuyZf5JfRB
bCyCZQHy84nUG4DnWe23H4A1VIlKbSDvarcP6+ISahgwHHoIBjY1mJOWlpDI
W9T4CFxunMZP1pdQ4++ksnjyErqlzu9eCKq/StjdCm4Rd7WMgCnKN3qmweOe
o3+XwYhvxQRawjL6dvQWHw+4+6WJojg4mO2o0QhmFvoZnKdYRj7lYacZKJfR
UU7hb2Z0y4jKs1bvBcsyaq11qhvnXEZxfERVeb5ldPneyQX+08vIZuV+FnX8
MlJ1/nJ2unsZCXxj4+7mXkGJTpaadtoraHb8Hs9LUNOnfHIEfLo8XSWts4LG
rwnF+oDHqMzcisEh1jIS0l1B9/j3ljWChyRvOpjoraCCjMClt0YraKsaaX0y
XkG6ffRxvSYrKG7h2+iU6QoKaxahszFbQV4pgRJNYFx0nMQgWB1aJrEGcjhu
SUiaQx0PUj/KgV8+6NkeA+9yJTw0BDW9xz46gtuNisuBoI6u1oqCxQqKbTFf
XQJDe2YpL56B/H8jmJedV5DNvBjvxQsrqJQs9uZH4griZhbXVf+8gvx3iw+l
b6ygljPWSRX8q2jfqwjLTtVVdGW0gm3yzCr6Kj3bQnFjFfV+klgafbKKomwp
GkaerSKN+d5nf5+vopXwt+7D/60i+0Inlj+pqyjL/H0jZ/oqmlsh3TyZsYqO
JLiqXslcRRYsltOLoH+Y1gvvrFWU5y5K4Zy9ik4btd12BekULzO4g8V8wg89
QSeKVg5vkDR68Zkv6PG2OeUi+Cl4b85VUEjHr+gG2P17V8N9MOpiTW8suPqK
RM4Ez309K1IBtm/n63wFifWfKhNyoJ6IX4fP5a4ibZ3PnzSKVpEl7XtrofJV
5FKfMUWuXUVSJU7/jq6soulMgelAqTV4vv4xXWC3hgIj42YmH62hGI7rM98b
19CnN5G1ZgNraN0wIa5jZQ35EtcSeDfW0Fip5X9ntteQovLzJkReQ030vH4a
oO2P2N0nwJlcttqTYFjIAw9dkMuIkfMUeGyB6GwCOj7dLrYE7x5ZpbEDaeJL
D8WAt1eDTjeAVFZHbm3uxJes5ckS1tGbyxt+luCAypZSMMi6vb35ElSrJnxs
BJOOE/U5KdbRRiPt97Og9SlG+xyQ7vKBuv+I66gk1VgihnYdubYHRN5mWEfc
m3GzQczr6F/BSu+61Dqqc7asvaa9jhJ3l+RuO68j/zbupzduriPdWxevU6as
o1e1Rl67RTdQU9qzPhNwOnxAKwLkcJcorAWV9X0ENkG7A6UR8mIbKGP+5Lk0
cO5d9zFu8Q2kctWVKxwUEqOOmJHeQLRfXxKsDm2gf1fxxWr5DfRN7NekxJEN
9OLaru419Q3k3mH2sVl3AylKPMp7brqBLrDbGQ2DqZuSCzJmG+jHyPKTQJD9
a61yJajz4dEPGvMNJC4WY7oXJEY/blEA7cwbDiCweNdGtDbo8tLRygbkkW7e
6wU2Fcr+vQEWMaimHbOA/h20nVfB+6WmokWWG6hsT30a/dkNNBamKHbWBeLG
MtKLLmwgrVO7xBkCNxC/eri0Q+UGWpBfOlhKuwnneid5VuNN9IL/q7JLwiaa
DVS+fh9Ub3tRnw/GSNAyfQP/hHqZrICHf3Q943u+ibqiUkXPgZew/9tckHdB
HS2B5/+ZVTX/t4nKRl1Rcsomov9zpSowdROd/hmF9DI2UZK6tPVPcCC90e9C
5iYSZnKJ3AZdfanSH2ZtouzvyVWC2ZtImTH8kzD4CV1oFQPNAkw7JcE/mUd+
yIA+/QJ/DoIRWlMzCmDG69ItFbCW9zajBth3OPRJCDhnECzwAbSl1x0bBRtq
ud9w5mwiuZChy+pgknKBhhcYkKfT2QDq7htyFsrdRIJx11augCHiVzPWX2+i
nyWXLa8UbqKj2kG06+820bOeiyWX32/COcUt7mI/9CNw+pI/YQsl1epZ+ghv
IR1XVaULWltomeEgj/v5LSS/GPQs8scWiuZaHisApxX9j3SBelaz99bAzMsX
+vb83ELUzyekNMCq/uGW++Blwd+e38DDTr3M/P1b6NL2C8v531uoPN4lpfHP
FiIo7J/87+8WOt6+IB84toU+04Q2Ck1vIXNVFtsvC1uo3//5zJW1LZR378JK
1cYWCn6ByMTtLYQz/v75ClK9jvj0H3kLDYs+IKeAdYmPlNPAVI7Hvpng7ftP
snNAZ4pnQ/mg2EyieTE4+jOl4QOY2Zx+5CN4iLMnj5KwjT7zmxw5DJ4X/Vzn
BFIf0DKKBVMUq3/UgX0ni+ZFKbYRh3UmfTio754oOAbe5halKaTeRpUf8yaD
6bfRipfiV23mbXSIr+odBxvk6+LKJyhto1cPPdP+2W6jfp3axL6wbcRN3B3b
kLmNjCp9Ioq+bKPBMGsJbm0yPPdcFlMDZQzjRVxAY4WyfQ/AS3y9gu/ARIq1
vb/A0VZlvgM6ZCSXEMQTAl5zKeX4Aro5KE7/0ycjM9uiRmYjMsKWcq/2m5JR
18yb562gx13Z2AtmZEQQehPJbE5Gr1YK7p0CzSuaJnakvflHzwAs097I3dGT
hZPFENzbKeO9482zZ2SNwNGJhws76l+sKTYGj4wV6FmD4qeTB+1Brs8PL7mB
Z9GESRGY+fb4AYIFGc2LvqDXBzvSxZ9rWJNRoXiBzBFbMnqcqVx58CwZBUjW
GIo5Qj45bnLDdTLaPuqRfz6JjOo0q+0YP5DRPX0u5rweMjIwdy83WCYjJTGl
t9Gg0ApVZifI0NiexLNCRovPkh6fBn+dd7+XBL5hJAYKr5LRrbwk+yzQ0lBJ
/+AaGT1JUbrhvk1GE2t8fR0UBEwvzB/gQyRgCX1+FhZaAlYZFDvGwEnAhhdl
3WmECNiR8dgzygMEHGNqpXXHlIBrmvJCP4CziKpiFhR4Z7UqakbABjL5h23A
4JdU3o/Anw/y/66Dnzc5czfBCverfttgfs+gMsGcgF9oaZMpwIdF+fVUoO+j
qya0oImn9m8GUF6by5MFpPrNNSULfg3k9jQHKe0s/viAh48/tYoEz0l//5IB
xrJzn6gFlweeyK6Dlq+59spaEHBp8BMGNzA86vHJKCsCNk+KvvX2NAEL5z2s
6bYl4LnyqO3NMwS8ffqKvW8AATOsuXz8e4+AeeJMRU6/IGARBXznSxEBy36T
GdNoJuAvXMMXz4GeVs+p74D0z01iM8D0fnrhJvC4YM2bCfB62sG2/S0EXCb1
35QPuPiaiaEIxMN2h0y/EHAk72uL+XYC7tEnBEd/g35CjV8d+k7AuyOD97nN
EvDbRQHv9CUC1rX7+GF4Hdbl2IHIXZsEvJ8vwdZgi4D3rlPvv7kN/dyJK9wG
B9glj14hQ/4X76uXQOuylDfroO+3uy/JIFmQIZ2KQIGjvCKyaMEs+gcFrOCn
1EclPOBAYfaWK7jxsU6zFOTu+HWPjoICC54f0pImUmApwhiVAS0Flo+bqvZh
oMBqB+aCHzNT4JecAgPTMhSYdkNfQ1efAnsOXklN86DA7Q2ZNBQRFFgh/7ub
bTYFnlJMaQgFX1V5iGWAzIQH9jsG4YKEHYdudHTueKpmkSUTLKXg0dkxKsym
YkdHqmTZLFDp1nDajhGR0Yfywd+xah/egoeTJk+UgJdn8wqGwSpNHz72HApM
HSd3B4G13U1vqPMo8A1eh/6WfKjfepUupgDGG/9Q3uot5BcKGuOqo8BNmfaJ
37oo8MFDOkbRoxT4aYks0XCNAm+p7S5lYqTEglPXfzILUeLj8X8JrEqU2FVL
T5R0ihLTnZf5dNGYEhc+8Rh/ZEKJz37MZsoxpcSMM+MH680o8TihnUHRnBL3
l+stKYHtQQ2/j4C18prNKuC72coiVTAr9+gLBD4SkQvQBC8mSuqcBO04hfbq
7Vjb4u0LKjC0xT0EmY07qvLAv3Fdoy1gxa8e1gnwgufvs2IWlHjP+t/XjmBr
+BT5PzCfdEBw3YoSP4j3xuY2lNh73xv7AjtKbJgzf4PRnhJzE8NqEy5BnbZs
NFIPKfGr4mTtsnRK7M5yKEK7khLLula1dndR4g/WuXe3QS39eE3R75T4q9qd
bT3QVta/zA8cEbYPiAc36Y5OjIBs0xz28t2UWPzbv65QcKvex+duHyX+VrrA
8LAfxp1zMe3JACW+8d8aShyixDK3yAFZ45S49zx19rsZSnzHkPF37RIlDqs3
NtsAr6s8a5JbpsTX3vxScwcvi4sWpYAXkzwke0Gfe6sc2iuU+Hzg7e13oJMD
+7joKiUWiX/MfnWTEvP65o1abcH66DSUK25TwvdjMJqTTInXSbdPXQCXCJL0
n8CoZnieBsVi3cPHwabh7ORZ8ILCZNkKWPTdY4qaQIXXL03t5QTVd10w3gfS
uPjrFoAtby9rqlFQ4Ufk68c+g4hcuWxJS4VntrcKhpio8IvtYx7e7FTYYPuq
6AYPFZbemPPwMaTCtKuub//eocL20jYcFOFUuOyMQQA/yB6j3qUEetTLK5qC
davicV7gxbMs1mmgxKfF3T/BPpkfP9nvUuG2gz+8Fe9T4Vq5H5SnI6lwicKP
J8EPqHCu8g+JlEdUWMnixwgxnQoL2v5g0s+mwirPP2UbgxZ9b7QtQZ9dSSO2
YITV3VuOYHqc/z438CeX7hl/kD1WMCEEPMm+0nUPLGRJPZUMboo1e2eBo28j
onbsUDuVs2NFM0vTjpkW7SM7Pv4TTcwG3dc58Y6Y/dnVHbml+Er+9zqw7V3O
zufVN9/l7rRnVH6XBypuaBSWgD0TpwpqwKt9VnktO/0ofnp4MIcKSz4+7PcY
DJ1JNlsBe/RYlGxyqbDGqCmrRgEVzgmLH5UoosJce39XsZZS4etlIs+WP1Dh
5JafDBt/qHBNf2wwmZ6Ih2b0Z6lkifidWE/yV2Uivm/nZPwCE7Fd7DTFBW0i
Pu/ori1kRsRCec5WMmDPir2bEvhIwzZIA9SOsrx7CiR3mzyzAr0u6JR6gb8o
cc8t8NQzxdUEULpWWLkBZJgmBS2ADZqTK3rmRIxV6CtOge/lxMMMwcNSJ04a
g3lCTkymoNiu0K9m4C66ChsrkGll9a8NSBiR9zkLhqhEfg8Dtx4NHUsHr40c
fdUEequmvpS2JGKnWOaXUVZEbDF5MWXGmoh1NQaSjW2IuDVjK0H0PBEbM/M9
WbtIxJ1+yg9bbxGxZY/5vZQYIv6h6n8zMJmIz4Xbs6htErHb17IOa9CTjyMu
EPRx9rSJBgNe1wvkgZfW9g43gtejvnoStog4XOjWkhL4sFgxxBv8FXyoK4FM
xFpu4bNpYL7JL8Y3ILeqgng5GCIeqdEAjrAN2XWA70YexY6Bdz6otWyDFo+m
KLgI1FjMOUFZGlw+ou2tDn5iWU6zBP+eqW5UoKDG1K/vT3JQUmNRshnLPOgg
eMz9BSM1TlIX/qTPSY17HRn2rfNTY65bc8EZotT4Qvsq54Vr1Hj6i9Dhu6B3
q67xK3Cmxd+7EvRpTozqBeca63MWwfl6njGpYGq8+PG8iAO4XPXBPg6kfjnz
ofg6Nea8JczTGUqNRVws/eZvUuPD2hGtpDvUuJU/xg4/p8ZTA2scwS+oMWOa
Q3PZK2osdb7pxnIGNVY0tnbKzKLGhtHPpTWzqXHAcq/aCTDehtfkJFhZbeGs
A/4RfRKkB9JGfIs4BRqbG701Bp8LtPaYg8PjOmRrsL5d8sZNML2EniJv5/Oy
7LFWMPqDXvs0eKdiqoQ1hxpfq4p6cQh0rW3z8gNNGtjUikDVFlPmZdBjflT0
bj41Tth1TW33G2rciEmWuYXUeMU11VvtHVzPXHBeaIM6LynZZI5TY3cywdiO
igarhDdrse+hwUyssccaFGkwhWvfuUgNGrxcKRhlbECDD27Udt83osGuSq77
6kxo8At/hgtbZjT4966ncpzmNFigWmhVCjzjklehDobPnLLXAwuCpinNQYqI
g9puoGmST9RVMPX1m44HYIfLsXBDCxpM2NugQrKkwQe6jGfbwY3N8i3LszS4
QUSC8bcLDY7Vf8zr4kWD7QO2Rf8F0mA7ygO5h2to8PRzqfdtizT4luzXv4xL
NHh3wyU2bbDAdq/qLVBrvs6tGvwZ7hG7CdIVlk4GLNNg+V/Umv9Ae3rTBOcV
iCuzoNq1SYP9WOfe0G/R4BbnCPt1ULhclHVymwYPsG2Z6ZFpcJJrZ0IOWBtE
/lEJjt2T2tMByufeeLEKrp7OObcGltN/l1wHb5QSZnY87ipdtAHScVtc3gSj
/XOotsFdXwkPyGDKAQteCgItzti0rCeC+c3WfnRg8TMbASZwJfXC4CHw6Jvr
r8zB4Ipo5ysgj7LW+jgFLS54u/7AmooW6+5/LdxEpMXDGU6lyjS0eMzXJzyW
kxZPqQRbzO6jxTPU90X1ZWnxQtvTxQxEi5fjX9XCQRJXfhZdUwLvkDMOeIIG
clLnkkEu59z4TrA/7kAbnSEtvrAld9QX3HRUSusFIxtVSBpGtFii2lXNwowW
15Y89nS3osVnX1clhNjS4o30ycYYe1rMZvrqqe09WqyjsTF/K5oW35A1NcyL
p8Wlgjk5XSm0+IQrbSTrS1rckefkqQOeWazSvwlOHuXfXwEGhQYxr4AxLLJf
3F/R4tzn4w9+gZ8kXhqapNLihpzu792Z0F+9tlVVFi0+MFDWm54N8xN9ny0L
pNCw0ckBJ+alQ/PAb682S1+D5Wats2/Ah++87N+BDryk9veg/JU3qAr01Cc/
nwRT955a5cmBeZhNMDsOctWOFfiAOmvzejJ5sB4Ht0ZG82nxG2fasFcFMP/P
2facfQv1l12SLqylxXPd/Udou2AdlzS1bUZo8RZHtsXrFVpMlCM5U9HT4Qsr
ZZwbQnT4e7lT3fxROozCmAMmTOnwM89rOu5mdHjOYnLvBPjCQzqH0pwOn7rh
ocQHZmZNGuqDXxx19U6Bi3xZWgbgri5aDUMQPXBRNQKdT9YrG4MFZWEHTcEN
aSxmDp78b4vfEqwQYH1gA8qnCJLPgtn75HzOgXqyg32PwCn06EQFGGmACsbB
bwNcP9Is6fBu/ylqR2s67EBde2ivDR3Oiou36bOlw94GG7TyXnRYkdquKOo6
Hd76UGk/+ogO1/kJMqu/pMP3JcPKEgrp8PoD4Q/14PnFuvJZsNfapZKviA5r
V9FWa4ElIlk1vuDTmcm6BjDw/YHGPcV02Oy2b4s/SOvHPNVWSoc/nMlikimn
w156J/bfraLD+5QHTw1/pMOil1YfBw/T4SijQ10KkzA/km7c03N02IYq2TJ9
lQ434Jc/B0H5kFSHPWt0OPlD+ogVyLSW6RELXlbMmW0DTd68Xtdap8PSMkXE
SpAqo5RFYYMOX/P/6/eDTIczRAvVF0Cq0NyFLXDyqCHvNti5OHdsx/L8WIcd
09yU7uwYta8ve8czTwUWdzzE4KxKBilCsu/sKEN0cKIk0GPL+zyYGgwjfeGn
A2UNZj6IgL8jSDbq4IMm2XU70EEuRPYaBT2Wf97slkBJj2mJPMmlVPS4z9Op
+zuRHu+6fZZATaLHVkk2kof56HFcsaWJgxg9/t5qevWhLD3mGjFMrThGjweM
aLjXYuixyHnedbbH9Ng1VOqXFJgTf+yjJjj9xiDdFpRrtr8fCJau3zLJAJF0
1u5e8JNN6x+GWHrMqK5UtPmEHhuKpdyejqPHsYyMlgPx9Lh3NkCi4zk9dvyg
3VL8gh5P3ub3in9FjwONZknBGfQ4t5PNhDGLHv+xOvw4Ppsem7+sqkoEGyb1
pl6ARxR6eF+BOSHnTqSDexpnfbNAChv6ltfg339CIu/AphtHg8vBQtVDqxtg
4rqov0oOPb5Twjd9BUzlLf6wlEePP142uOdTQI8H+0YtJt/SY7JKqIhLMT0+
SHtdRu4LPbbvuCa/PUKPHyVdOdZMpsfVbkHHn/Iy4NnDF/UdZRmwINnf7IAu
A7arSZ8RNmTACTd77+8yY8DXl3IfCIJOrjdixMGTvaZPD4AyeuIJCiCpYj3p
GNibnJKmC768pZ1nBXq4zRS5gMcNAigWwC6ujyRWcwbs2s8qKA2q7He0VgRZ
g4ti1MESfmtqK/BM+dYlL5DG9uXELTD2GcnZ2YIB7+sK+X3CkgEXsP2zFrNi
wEe9VfZN2jPg+s/3Jl6fZ8BGUj1vA/wYcF+42NUjVxkwVfL0zbF6BnzoO01n
/wK0v/CP4RqZAXsZC2kUgykK5penwYWae993PG5QeXgGfNI3/2jHERfx6R2V
F2z0ZsE+xnrqOfCayIHqHQVU467Mg5cOv/24BrZLtjJQEBixhOCYCR2YWLUk
bAySzlItxYNP4yME/KgY8Z5ODl1dGkb8iiUxYB89Ix62nN4TK8qIRVJwA7UG
I3aeiPG5dIYRpx3+u2v8CiMO731l6JnOiH1OWpmkg9bFTOYDoIZwjeXuDEYs
Ex142gzkIkvaPQBH+2IcKTMZ8ft3G64XwciYcxcmQFldxaCOLEYcqtqSaJYN
eUMWsC8YWcX3Nwq0SV+1jgelorq+pIKNpx+WfgBdJHRedoDEZcrIcfDQ9vG8
LzmM2JYm/EthLiO+y9I08yyPEavZ2x2LfMeIl97M3b1exYhzqO50+TUyYkfz
3ftcvjJiwrOQXZuMTPhF3x9SjBYT7p1R9VI7yYQ5qONbJkCD3YsScdpM+O5B
wzuaOkz44/HsoRlQ0dv+P209Jvjeclun6DNhgbrPHOunmPDucwXphwyYMBcx
9ogryJp66XMSyHDc5mwnSD2sNs9gyITXhWl4g8BZp1bVv+DfV7FOJkZM+Iqw
Xf8TMyZ84lDpmxyQpMpxpwbs0/E63Q2mWTQd+Af6OIlQUZlDvuC+nANgwtNH
ZqfBQwVaW7dBt8bbj5ktmHDyQJ3kE7CjQ4Vu0IYJE+vfjsg4MGGFEsn6IBcm
rJX4w8g3iglbhkb9PF8EcS7IzfEHE7Z+MnBYd4QJ69aFkmXnmLDKwr6WXZsw
H00S0Qag/YsDljdBv0D5PaXgLb2jQ1PgUyGcJbTFhD+06ilEgL8vW9YsgkQx
p1NntpmwfsgVZ1kyE1bl6kmpBHmurnb8AucHeIlksIKq8hSBwIzviTnFUYBm
OnSDlKCAZ54UEZx4YBJADYZ2JtLSgby7RxMYwPyzsgeYwUc8vDNioF/b9mu8
Ex/+1+c0qIg+ywaADF5t7wMpmPGvxA7NS5TM+G1L1+cgKmZ8e73H/AqRGbd8
WX19j4UZs73iZYjnZcaWl5TPZe5jxkl6VpUlMsx4SCCIt0GRGc/tC16yjWXG
ZNYstlsgy1bn/hyQf4Kg2wFKdcu4rIFH6qzCBJ8wY4v/Ct57gX5BdAvl4EMT
e2nGp1B395czu+KZ8Rdb1RjxRGb8bzCnXuEFM2Z23b2m+ZIZ6/uunLXPhP4T
DHgOZDNjyvtuh+RAl8thOopgi1ui41HwkNW7q2rgk5PtsRrgGTFigy4oTq28
ZgLODXlI24BtcX5CeeBhgyMfpsE4IsH8UA4z3nj/adoXPOsbdbcQFP+1u1wx
lxnP6GbOlIElJQrCqnnM+LpIrUU1aHhO5/TAW1iX1DY7Qikznh0ydxCsYMbV
wj/P4Y+wDk6ObvYNzLhwMDkieR3WwSEvZoDIghcHyuIFWVnwE/tPyfa7WLDi
QEdGsjALvvR7slhQmQWX/iLWJeuz4MBcBapvoNwVFw3qUyx4+mRcqBKYw9VY
fR50G1olPwf/hJwOIRiwYJvd5ZvnwK7iPVebwKeN/9zfmbDge+QC1+umLPia
YsA5bTMW7HNByYHNnAUblZh67AJlKXwChUB2vcjrkuBCbOY9WfDbr7rHR8An
flsZOqAljWK5Ncib4NV+fqfd30rCNtgqyyobY8GCLSTkOG1tWfDvveYroo5Q
H1dQ34wrC6a+s6mmGcGCU5ZvvHqaz4LVXKnpJr6y4L7ue56qSyw4lhjqYQQa
yga5O4H0Z7zPXwRr77u43QNDSuxcE8F5kr7zR9DV/ajTGPizVsKBZZkFu2sE
6d9fYcGr1Q1KNGssOBzxCIets2CuSheW7Q0Y3wfqv0vbLPjOqX7xTfDH7yJ3
SjILPugXmUcH3iKem2UBe5+qHOYCwz5MlAqB0gPxagfALqJO3VHQz19wqwRk
/bOioEBgxTGpfW1PQG7XivPLYIJkMpUlBSveOxWWVAKK+mp/DaJkxfuXmamP
UrFi+avflDfAY4R4z3IiKw6XM/LTZmLFHedogzo5WPGeuMpgez5W7NYUeHNq
Hysu3JC5FyTFil/Nm32cDWTF6jdUHXkusuLfzGKUamDwc5aX50A+yRX1CLDs
3e/BN+Di1wIhMnjoX6iD/iVW7ElnmhIP1vGGCPx3Zad9VtLLYFbsd6STL+MG
K27SIcfn3GTFsv/ywntSdvITbw1msOK2K9o3ubNYcdVoZJheNrT/VidoCIpV
bVaagH3Z8nYWYNRTzw1rUD0sNd4OzLTm/H4OJMneYvcEL9EtGviDoX4mOR/A
+z8LaIk5rDhWi/WcPphUcKE6Ftzs3GPrls+KT6+1rqi8gfHsCXnMWsSK3e+d
zTRtZ8X8S7gibooVux5iG79AJGE8ErrwkJ2EvbeUXNf2knDE9/Tm58IknPGa
64CaBAlL/3ESMAcLON+SPEH5kwTKm2DZZYOFeFAtN3G4ADzJdqThF2h0sSuL
SZKErX/4Rh4FPdOyjZ+CId5D3PNg9BH+n6ekSJgs7BLtB15gKdCKA/tW1zY+
gNpDmm8GwHetUS7U0iQsUtrNJwWSIz3u+IM/HMiz5WCJ4mMbGhkSjmEU/2QI
itn+m9l/kITf5xbuYpIjYYOty5oT8iT85xS+0KhEwtn+ZJaLZiTsH19ZIOxL
wr9UZB7LgDq/4gMVwMIbtFZq4F7hwKMnwXv1f/iNwLMMlYMOoIJhfLo/yBgb
4HEbdD5Oza/kR8LVi08+j4G708SCE/xJOMC8ZL9+AAlvKp/hUL1Kwm/irwck
XyNhl/XkLqoQEuaz+ajoep2Em0IT7ZbAXa3Np1ZAN9411TWw1En8wAZI+9p8
7xZosX6ThQwuPRqYprxBwrHiqm004OHK+NcMoGuykr8smBjWpWgFtp/zXw8B
+4/+9x9lGAlPkJo07twk4eWRhRH62yRMVbE3IuoOCYftall884SEKS5eOvM9
lYRvdAg3rhfCPB9olxWohfWKuPZcs4OE93OvZFuA/cm+78+DUdJTTddA1Xcu
vQ/Bf3hw7CV4yuI7bROY59EiNgMyhVaf4PpGws0WpldjOkn4fqhq2S9QJ1d8
RaqLhOm72RQugY0Um3614F2ZkQLW77CPLNunbcBPuanui+AJyssjkd0kXG95
ylG0h4SP5wn9qgBViBeK3v4iYVmb0vsZwyQs8ZbKIXGChAXoDZWiZ2HfOhRe
KKZmw0plPKm9u9nwtEHghV18bDh1uEPRGrS5cogQD7KTHjT1gE1pkzG8/GxY
8Wu66DMwddOhlGcPG2aT2KMXB1r1edI83seGX0SW1zwQZ8OmU6sxr0BafYVz
peCHHF+FVtCHMZ/mDyjiMdG9DEZKOV0RlGDDi+M/+HVBuyyzKn/QR5iJl1OK
Dau/3LJ1BdmFZlLeg39eDIwwS7Phwr0d0g7graRanyLQjL+4mFaGDS/veoby
wTieq01m+9mwMtcZ0w2wj129P+UAGxbf2IuFFdhw4NDmy1QVNvyxpY9aTIMN
k4pK3TK02fD+c+GNj13Y8Mk4XsmHF9nwlRNzUUPBbDjjXPmjVbDzZvhj5hA2
TPHK5Ok+8ODHPfFKoO3g2HN98J3A9ZSLINsZroxk0CMxJ7cZFNzVU7L3OsQ/
Idb6gffYZb98AhcY7w973YB46qF17lA2/Glbha0KPLgaK+4axoYN3rHQrt5l
w14Bd0fuPmTDUXKUn3Y9ZcO5s1fTshPZsIKVcPWDD2z4x8m213Wf2fAzgbmA
z6D5CvvRTpC9TZ78A2xLt6gbAiNDgu5NgjQHyjk2wBv95CSGVja8HqkpsRus
cB17UAyGakQtGX1hw8f3yNlOgXSr3z+Gt7Hhh3mCjyrb2TC3k7vd0lc2nMRb
JCXzDdbzy9aKYycbljsSHdP+nQ2f+eJk1gdGOClyD4Olq3Q9/8DhqB/xKyCb
cL4NRTcbdj9l+psTrLu06igB7nmZNKICPtdhYySDu+ZuHfzYw4afPls1vd3L
hjmxZ5B2Hxveap4dHh1kw3/NA43Dx9nwl4G1CrE5NlziESL1aRX24TJlnDOB
HbuxEtbn97HjDdZntERhdvyAdIiLCxRka9wnBhay2R9SArXYV1W1QU8OCWt3
MIbTKiASLOW6+zAflBdye0Elyo5fy2i/thJjx9LKElV54uw4XZOujVKSHSed
bpzOlWbHsb53WSwPsOP7d7UPUMiy49AXdAY5h9mxd+vdKLIyO7bboGs1VWPH
upL3mDI12bGyJb3+pjY7VrSOD3V0Y8d/bnGmsQazY/MaPRkesHErrHAvePTo
+6NiYN7FuZr9oEChhI4CSC0TZ3kcnEildjEF2/YEBDiCdd/riGtg6UOuJw9D
IE7bRVTsOjtOoSgpLgcPqPyy+u82O6aR5E8pBn9znx7/DJYSn8kOg9HzXZc3
QPcBjo/sd9gxX/lDE3WwNY5xyBu87h/u/x/oTXeG1+cuO7ZPkq9Qv8+OjeUY
HTki2bF6wyDN3yh2nPlM8xJXMjtmcU8bPfGWHQeq0FpdrGPHPzKjIko72LEQ
Y/DeX6DrBc83VN+gzjab45LggqxetwF4JPaoewBYb7XrURVosme1mKGTHf8a
/P7DHFx2jxWfAlkXjf3DutixeDBrFe93doxpWhleg1YP71uc6GbHvrzaL3+A
L6Vqj9D1suNvx9S+yvexYyrDMjeHH7C+DvKEBz/Z8V4eqkm9MXZM2/q1i36R
Hc+FJVc3kNlxn7J3zm1GDlw7rfpUk4cDv1Da3m8GXrlRWX8ONG8KsQsED7Gj
pdsgow058in4cep6eQkYFEKY6gEPkkL51kGDmjvLJ3ZxYC+/yK/RuznwA+GY
3H4+DpzfGRcuuYcD/6tq5xKU4sC5FydKxUD3/UTb/aDE8B7yYXAkQenlUTDV
2PiEOihYdSvCAEyUKf1qA/ImTPKcB+cH/nX9A1vEZx/7SXPgNK954xXwevEi
6zUZDrx9mfFajiwHDlHbN9anCNeUR8wYjnHg4AbD6iPqHLhC4+2JrjMceKuC
s8XnGgdWW+O/dQm8Li+qGgJWee9fvgUSchReR4DqI6puMeBHW4O+F+Dxb2f0
88B6He/K92DnBMdh9WAOPBRRmtEAzsvY8RuEcGCKLxTRneBekt6Vwesc2Ddq
V9kwWMcwtjIK8tx9pzgJulPfDpwGK8JMi+ZAp+BZ2VWQISjq9TZY4Ce1n/oG
zPcZtmJ2UF139ZggSK/4u24/+NtjmKMYLEoZdzwWyoHvd0+/qQXtmRcJemEc
uFRcgic2nAOTNGz390dyYDfbR5piMRy45mKdtXccB94VvepdmsiBG4hTNw81
cmBKLatsDKqF17UbgZcbD63Yg8X0SXt8wVld+uOhoGvr4KMU8Jfh+/4a0Kwj
RuoPuDZBKy3azIGTqIKl3VqgXv556ZzPHPivvKvMdCsH3u9ivD+gnQNfjFM5
sN7BgY1TkhyufuPAMjnk2E2QttihMbgTrqfuXnwDGgkXiPwFA093d/B2ceDK
RtGDN8ALkimT7SD/ff5Moe8c+PNE3Dk/8Koeh1At2MvEkHCumwMrfyFw0PRw
4KcPVyIywCWjaaJOL+ybX9GVcb85sIWnQtDIX+h3vUdWYYoDl4Rfm7w5D/PE
JZjWscqBWYvX03rAYrOu9F+g7eLrjGGQKvZ+5gSYfdg5axZc8dudswmeeNuW
S7fGgWPmbuVzgvHu8VWR4IuhvHbiOgdOt/04eA3M6/o+vwjOPnyVlEbmwBEs
LCkVoGhUUGoXWM04lPEP1D2aRDsNdrpZuu44Wg/nLXB9Hx7ZkeVGUdos2LYP
C66Cj+pbEsjgYzXumh3jSuxHd/T2nZ7e8aT0teUdv2aGru14Wix8c0cvoRhK
AoETh/In0e0Yy5PJsqPZCJfejhzFN8N3/HZzrnZHozgVQSqwNfv2NWpQt7Kt
hxbcH1rkLwCyHo9nUQLnaUKyDMDOJsfjLmCei4mxCQUnvkOlcUaNkhOfTZb1
kKLixMqqQkHcRE5caBe8ZsAMeUJ6r4Rzc+LM/xQ2qwQ48b6q6OBVCU6c9Pvf
9iE5TrwlM6LWE8CJ7a78CrlewokrGr5Xiq1z4j1cbdutx7hwsGODWuB1Lvzr
dVUI/0cu/HLYjji8hxu77tq8l3OZG8sYJLD6d3HD76Hyk6OyPPhdyffdlFE8
+OpUQHLTGA/GQhxi0cd5cfIj+sfaL3nx//1XoF34fwCPaR1H
                "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2gEraFG4oOEzZ1zjGmOMJEkykiRJkiRJkiRJkiRJkiS5kiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ85xZ9fyC99vttdfa/7f+v8pb/9ufP3/+4z//
/P/1lwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375YxD+EkAgQQQTQihhhBNBJFFE
E0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU
00AjTTTTwr8hb6OdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZ
YpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155
450PPvnimx9++ffw/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vx3/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXfy/+vwQQSBDBhBBKGOFEEEkU0cQQSxzxJJBI
EsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBK
G+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrrbLDJ
FtvssMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyRff/PDL
n//QnwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375t+n/SwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8+R/6E0AgQQQTQihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0Em
WWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitttNNBJ11000Mv
ffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8Ah
RxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy//Pvj/EkAgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy9//lN/AggkiGBCCCWMcCKIJIpoYogljngSSCSJ
ZFJIJY10Msgki2xyyCWPfAoopIhiSiiljHIqqKSKamqopY56GmikiWZaaKWN
djropItueuilj34GGGSIYUYYZYxxJphkimlmmGWOeRZYZIllVlhljXU22GSL
bXbYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ1545Y13Pvjki29++P13
/hesPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy53/qTwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8O+j/SwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8+V/6E0AgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy//Lvn+EkAgQQQTQihhhBNBJFFEE0MsccSTQCJJ
JJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitt
tNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZb
bLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy9/
/rf+BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQ
SBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4ww
yhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77HHDIEceccMoZ51xw
yRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Mu/C/6/BBBIEMGEEEoY4UQQSRTR
xBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31
NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLL
rLDKGutssMkW2+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvv
fPDJF9/88Muf/6M/AQQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSS
RTY55JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3PfTS
Rz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjobbLLFNjvsssc+Bxxy
xDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//PLv556/BBBIEP8P
Ze/F7A==
                 "], CompressedData["
1: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
                 "]}, {Automatic}][$CellContext`t$$], $CellContext`t$$ <= 3}, {
               
               InterpolatingFunction[{{0., 6.25}}, {
                5, 7, 1, {2562}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                 False}, CompressedData["
1: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
/wEjFUQM
                "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2mEoaEHAoOG797PWWuuzVpIkK0mSJEmSJEmSJEmSJEmSlSRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ2ufuqefP+fvONOfMzP+p/7/lrf/lz58//xH8
5/8/fwkgkCD+vQ4hlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhlz8Gwl8CCCSIYEIIJYxwIogk
imhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWMciqopIpqaqil
jnoaaKSJZlr4N8jbaKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeB
RZZYZoVV1lhng0222GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaF
V95454NPvvjmh1/+Tf6/BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrp
ZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd
9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77
HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Muf/9CfAAIJ
IpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskjnwIKKaKYEkop
o5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKbHnrpo58BBhlimBFGGWOcCSaZ
YpoZZpljngUWWWKZFVZZY50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265
454HHnnimRdeeeOdDz754psffvm38P8lgECCCCaEUMIIJ4JIoogmhljiiCeB
RJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa6qingUaaaKaF
Vtpop4NOuuimh1766GeAQYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeD
TbbYZodd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaH
X/78V/0JIJAgggkhlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhl38f/X8JIJAgggkhlDDCiSCS
KKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzyKaCQIoopoZQyyqmgkiqqqaGW
OuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGGGWGUMcaZYJIppplhljnmWWCR
JZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSeeeeGV
N9754JMvvvnhlz//TX8CCCSIYEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQy
yCSLbHLIJY98CiikiGJKKKWMciqopIpqaqiljnoaaKSJZlpopY12Ouiki256
6KWPfgYYZIhhRhhljHEmmGSKaWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30O
OOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OSLb3745d8P/18CCCSI
YEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWM
ciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZIhhRhhljHEmmGSK
aWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWO
ex545IlnXnjljXc++OSLb3745c9/158AAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
aaOdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvnimx9+
+bfZ95cAAgkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOf
AgopopgSSimjnAoqqaKaGmqpo54GGmmimRZaaaOdDjrpopseeumjnwEGGWKY
EUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOc
Cy654pobbrnjngceeeKZF155450PPvnimx9++fM/9CeAQIIIJoRQwggngkii
iCaGWOKIJ4FEkkgmhVTSSCeDTLLIJodc8singEKKKKaEUsoop4JKqqimhlrq
qKeBRppopoVW2ming0666KaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWW
WGaFVdZYZ4NNtthmh1322OeAQ4445oRTzjjngkuuuOaGW+6454FHnnjmhVfe
eOeDT7745odf/m30/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vxP/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXf4d8fwkgkCCCCSGUMMKJIJIoookhljjiSSCR
JJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGV
NtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCT
LbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCRJ5554ZU33vngky+++eGX
P/+pPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy74D/LwEEEkQwIYQSRjgRRBJF
NDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5FVRSRTU11FJH
PQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAjjDLGOBNMMsU0M8wyxzwLLLLE
MiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfccsc9DzzyxDMvvPLG
Ox988sU3P/zy53/pTwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8u9zzlwACCSKY
EEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58CCimimBJKKaOc
CiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgRRhljnAkmmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eKbH37587/1J4BAgggmhFDCCCeCSKKIJoZY4ogngUSS
SCaFVNJIJ4NMssgmh1zyyKeAQooopoRSyiingkqqqKaGWuqop4FGmmimhVba
aKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeBRZZYZoVV1lhng022
2GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaFV95454NPvvjmh1/+
Xez7SwD/D/yVV04=
                 "], CompressedData["
1:eJwc2Hc81d8bAHCUkKSijLKSTWnICB+aVEZKSUWKSsMsIyR7lSaSUTbJJnyN
p2RL9si+9l7XvPfS7+n35/t1zj2fs8/zXKFblnpm9HR0dBs56egaBxZaLrun
Q6C6Yi/H5kq4PiAjwu6RDrfeOtk5bqoEzeBSgwq0FdVTu5ehEhZPZvjKe6VD
KqPU82RqBQRo7jub4J0ORv+tZzssVECOtEzELt90KHXdMHV6qgKGS8oOGASn
g9bn3voXcRUwFD03YBGbDqs/6VgUjNA2skuGmemwT5qSoMFVAfWpWjF7vqdD
5OMFKK4vB4ZKLqZytQxYXrk1cVSkFCb5ouWGMzJgzFgk8m3UD7AMlil/yJkJ
wy1HLy4EFEP4y5uPvdBcg4yf8/2LQUklSCgSLRxdvPDMrxjovtTUfkMXNGnp
nPQthoT2DY516EeOWWksPsUwXKsiPIouejezs86rGOh1cp7w7MwE+SzO6ase
xaCw7UjpWXRIybvuwefFoCn/31ZnNFfxw0HLZ8VQeCGV7x5XJog2HpMZMCuG
GJr4Zz2eTNghpBJkrIXtMRcFH9udCWv2z/cMHSkG7v41emG+THimtvOn7Z5i
KNvz+rQnWm3njzdvuIrhmoOh0xC6W7+5KG1HMfzaa/T5NH8mXN574cxvtmJg
Phuek4DW+iC/f4oZ29+zq4BZIBMUW3xstmwshmN03vHVaCqEPj9PKQLdr4t6
LwQzwTyKvy5wtgi4hKy/awllwvbFtneNw0XgRl4M+C2eCSNhOnGVXkUQ65w6
elQ2E1h+dPXoihRBl7UH1Vs+E5T1E9UflBUCzeDhexGTTJB0zWbbGfwfbNtL
NvD3wflR6Nn392ketG+44N30JRM2b/aiiD7+BmxA9heoyQSft3tXfdyygbWj
TtznbyboTqrkLvNkQGz08vs6ySyom7N5bTSTDL0RrzLztbKA0lB4tOBIPIQ7
a9xlNM8Cbi3VbqUNUXD3/rCJtUsWMCZNF7dkfYDOcScHZ3Ru0twF6dQPMGjh
/cIHbXeKdMUjEcvFN0W+RSvuHqztiP4AvOeoXyPQxwJWsw5FfAAq0538RHTy
ouDmgJAPkLVbrLYY/aP3TbDyiw9QKP29tRktfV9jYOb5B+irPdQ6jh49rjob
++QDlB4viil9lgWyxsoFXIwfIKNoi9tH1yzYaazlpxgUApQx1ccPn2eBatqv
05tFQ8D4++pqEHripVh4P3sI8B+avgLoGLozh8pXg+GkvWzgKDpdjpc5ZyAY
jpPrw7e7ZQFfqVHnl9pguCbX5aGEbv3jnJyQGwzKv4xO3Ebncd11SI4KBhuG
lXPZaBk5FubKJ8EwrcWUu9Edx8c74kt3NhgSGGY8L6ENzIpWL/EHQ6UPx7cY
9LCw+tWy+SDgqfql+dErCyZfHlARP/Ueso9I6er7ZsFq90K+RfRbaHQ9oNvq
nwXLJcffv9v8Br5n8dXzv8yCh44J43upgdCRaq8v+yoLVPYvtZQtBcC1A/2+
EqFZ8Gz2lu1NehPIkXnuvjc4C1wnOfR+bnckZr4qmrthe9TrKWX7A72JoiTe
h87oV89rh51eexMf3zha2KPLJBNOVr71JtJeX7ayQdMkKzs4grwJ4aYM60do
PZtDSUYh3gSfV4DNPfTS3EhaYqg3YS6obGuEDpGbkTkW6U0wdI5YX0Iv8si+
rI72Jnbtem1x9t94bhfWXk7wJiQ8/HuH/LLg1y2nCpFmb4Itleflc7SLdz1j
0V9v4mdRqDMv2sTmbtkeSR/Cwe9BVhbOT2bCuROnLvoQAV3Xy194ZgFPaVfv
ga++xGZ7gc8ZHlmQ81v949d+XyKwQyelGefb9IpnnwGnH6F3UV0zEZ00oWae
zedHJGk2NDuh9c1Li3pE/QjpH5d1ddBaO3f1tx3wI96JhnEv4fqe9Lj4d5+6
H8Gfau6bjlY19eqgafkRm429Wu6jz+StHbxp6EcYacrQi6AnXJ8VnL/jR8g2
JG7pxf31+wLVvcTaj/h7Vq5SD134K3XzWR8/ghRotKMc9+9llisnlj/6EX3x
+osK6N78qvjqr34Ez7qGUzLu952WgmmlhX4EHXHBlscxCz7XnORVW/YjKsRr
fANts+D0w2eLI0/9iFgByeaDFlkgIDqsm6TpSzAFJ2yQxPP8jS95y1MzbyLm
katBhGkWaJ6T1TGo9yBkvri7pRhmgc5qbmjygbvE+f90I2PRIn1VwXTa9yBc
LvZNHHr3C++BhZv34O90tlc8evoRV+q47T3oJbs/TUBvlCmuJ3nfg4QLW60S
0a2u9uc6Qu/Bj51X7iShW/ao8Td/vQcPvW5fSkY/2DpsW914D1JWzU79+/4O
6XSJ8pV70NhtpJiGDvNxIyr4zeH4yG3Tn+hXliJxq2H3YUTRKb8d3btbZM+p
3Q+hNv+U0gz6Fp+AalL4IzDJNxvddC0LzBiOxYoIWsK4b8QfuevYn9Nh/TOG
9pD8aOthN/SDLD2jO0sOcNf4WnAD+tt3zjGG4KdQEWOzTewG7q9jZ4Z+KjpD
lp5Kqhs6/xp9TgLJBQQcSm8moK+Yh/x58uIZbBbtGa1Fe37/Xb1RwRXSeR6e
WUSzuNjUKg+6AvvN0IDTRri+f29+v/jpOahtcjgchm4Yzgvq0HKDLOWwU2R0
IU+6c+aaG3AxHdESuZ0FHxftFw7t8wP6yYalyntZwMnyKEbzzmsYUMjRXbbM
Aob46uTQp+8hQPrGoSoHvF+K6sfkf3+AXkWFS/veZcGTMq6Z+dwoMP5Un3I9
F89rTMPtZ9EJ4Gwf3es0nAXKW6debNibClvX6O54CGXDfkcJ04EPmbC41n8z
HJ3o1uJz9mMm8Okm3MhBKx2u+pYRlglH6bWv/0Zftp2Z4Y7IhHn+tusj6COC
GoefR2YCQ+5xY7q92cDM3fR85FMmSC/33D2E1lTQkv0WjQ5kdDBFJ9m+YvaK
ywTfsW+vgtGH4j+wXErMhOXQ+t0v92XD++L6FpvSTLBiWQ7zFs0Gt5+HA6L6
MqHRp2m7h3g20DziRfpomVA4IOjqLpkNf7qf7JDlyYI4lqIhT+ls2F2ZJfVW
Dteh+fEZ//3ZQK2ma9uglwWkjyNxb2WzwfsG81UvPCcLDflbX5zKhooql10r
gdkQKDWvkXstGzx4Urn8cnIgz9k8l9c2G/6yjaiI93+D46ZDyYUB2aDLmGpZ
xpkHqcMFLveWsL+HIrTDhgqBJfB1rfiTHHjjzN6hyPgDQgLi/2qwfAPnlpr8
QfgJdOqv3m3K/gayNwVW2KPKYZu87upru1y4SmFtpUuoAtqPJ0UsenlgntAu
Tlf/CzheazCFd+WBcZ/u5i+Zv6Hr9qjfLb58SJYnB7S+rIOJg2rGyvz5sH7s
Njn9dR28ENXU2CWQD9Sqz1YB7+rgdveGU7Nops4HG+8E18GWeSv9asF8eP74
Z6paaB3w0b1xjBXKh9aweMvd4XUgdlphzEA4H/x3ufE3RNWBoHZ6AptIPqRE
uon5JODvF9ayS0TzYbzlk79KSh0MOq3LDMvnQ/uZCLAaroO6pas+4pr5wPlQ
1WOAvR6cXLua/AzzgU3BVvCzdD3kj+uLbn6YD4ZWiuIWmvWgZXkypkLoP/h5
iP2W1KMGCGu+8WR+4D/YdU+v+UlII3TI/WKqzyyAA8Z1ApyVTfDio7aSdFYB
XIjX4A9F//qtbOmLXmxv4eOvaoKJtuD4QfQwqw9/DFqx4HqfWnYBxChdFxSv
bgKmZ4F7ItCpN/WFU9Ana6tC9XOw/stXUrk1TcBYli249VsBbLC9qvDjVxPU
vtLJKEf7jmVq1tQ2AZ/bqYfrRQVg/mFiTra9CS5wRc0qlmF9zkiTD/1NoHuD
iXD8VQAPE1Q/0E81QXEnn0FhUwHkCqoHPVxuwvjZaEqrvwDGtvT0ntnSDCWM
fDnTswWw/tVGRVKoGaKMnmVH/sXx1n9O4jjaDO+amVbcGQth3zgXva1qM1S0
bPxqzloIp6jRDk2nm0FXrapeb3shbG+isMvpNEPM15Qf6RyF0Hq3Ru+VXjP4
tgTuYt9VCGUHrjiO6TdD/49HdY+4C2GzfWXtiavNELSg/EiarxCcpq/QrRo3
Q5fhibBJoUJ4znl1PPVOMyikJV9NFS2E5hsJAWaPmmGrtf980OVC4GeM352W
3gwWWmuJvD6FcOvgh0RioRnvM14hlbxCGNyiHrdLoQUMFW+sr40VQkPUbc/D
zi3Q0tjg/Qrj/FWhS+vBH9rgv1q305v2foftLF+9H5f+AS4Nx8Tju37AmfMc
UY3rnSBvkmVC4y8B1sD1tqLTPVDiIPtIQ6AE7EwKNpqc6YE9N888fY/WZfE8
uFGjBzJ4Vnz70NVmJ4wT0JMJx0OlBUtg1Hr15VnNHlBkE0t2QGeKxxdNoX/7
CzduEyqBjK5J/iPnemCTg8/fRPTy9q2eT8/3wLFRvcPqe0tgJIJl6rtWD0x9
fRt6RLwEgk/GdrgZ9sBtuqDnkvtLYA9nt8bJuz2gS4kd3XsEf6/GI8/8uAeu
DbI18imVQPf9otja5z3AuBZoqHusBIw0OYuuefTAr/QCmrtyCVzmyxsc8+qB
m6Hv83JUSmDbtcTdDr49cEeXN3BUtQQ+lQ6YbAroAVtLLZfdaiWwfY957vuX
PZCQzv7K7XgJcE5tcMt42wNrfRIZN06WwCPj32IJwT0Q9Wtom9LpErj5Ylkx
/GMPyLKqpe7SKAEOvkyrN5E98J/nn6j6cyVgc3nxnHN8D7CsbXoRoFMCIe6O
+XdTe4BPuePhmYslkOzNk3/xWw9UZwSpNzmUAO/Rw5QvjL2g5aZWAJEl0Amm
qUr6vXCqeJCPrawEjp3oPMUQ1wsOkyIpBRMloP7dTZZ+sRfY+IxfjQmWgqX7
TnEfWRK8YDOq7X9YBndJS20GD/vhcMqO1q2Yl25MGs11TBmAZ/3VO259qoAz
LXpe3SaDsPZq2+2NPRWg0NDH+iBkEBaKdMLP8lUC6+1BK67aQfgv4u89E/5K
iJ+5tcrwexAqZjYcdxCohL11Yp7T6ODG62KvBCuhefzQ9o66QfhkupknXqgS
dHd6fi6rH4TLpVu4ivZWwlGh3YcyGgaB+XqB1MS+Soi0bb7q2zQI9PzF1jxi
lUCuivE3bhmErLWdY2ckKuFMtE/p0bZB6KKESgsTlWBFi139PDYIkhYO/p4n
KsHP2F5Fd2oQnN53pQyfqYTzDHpxf2cHgfxd33gBvf9mtBjrHI7HtnUbg0Yl
/NmzkLQL7ZpiVMKOtlU4I70XHfxo2pYPvZYZliqDVsz2EpFC27+Yk1VEf9D+
6XsafWLtk5wuev8GgUkTdOHYRaW7aIbGDzou6LYLbMQz9KvrDQqvNCuha51f
3nR+EJKVK2SizlaCNuP+Nk3yIPxdst+fda4SXi1Hex5YGISlB4NKZecrweKC
ypGdi4Og9OK9svOVSqhy+eq1dX0Q+tK2NMvfqoT/Tqp9ZWYagmeB+fQrDyuB
2qCXsGHbECzZ1Zvb/amEl3cX3qybD4HgWpHmjzNVEB/dlKlZOgTWZ6QPd+RW
QfprE89+/mEI9PH8WiJRDe4JF56VOw7DjOOJQOHZGrilaqV2888IJEereH5C
98ppjhahZV7xO++eqwHt15yvd3eMQIXa8JMQ9ARZUMERXZ333ppjvgY2GVn0
taL9ViQsX6Fnami+RzpHYO/mvRY+ZPx9QljHDFr+VM5j14UaePpUVSa5awQM
sgfc7RdroGb/0PM73SPwmWNnlsTfGojzk1rLHRyBjdqcXT3Mv0AgWqGXZXIE
xCY2rwfv+AUP+g5LXCePANlDmEdvzy9Yu8zUnUrB77/9eVvs+i846O8fHCA5
Cvnqj9Ocwn+BGpOfnaPhKJRzyUrodP8Cb53iPQ7+o/Dg6S/r229qYXDYluXY
1jGYTuM/cVTzN3g4ubNavx0DCl3nt+qNdXBN+cSDHVzjAO3yhcKldSDJ3HmO
K3wcHq7ob09D6/QHXrZHmy3ev6dUVgcpJvdM2tAx9XY/ytBmT6wfykeMg0CA
454L5XXgyPvFPgTdKGLr2IWe19rhsYwO5bskT66og7xK9Y+5keOwMXLbGktV
HfjdOpBp/2kc89PEasHqOnjC0Fkt/3kcukg17pta6kDlpfZ4XsI45I03n5/p
rQOer0EXldLGQbeKJN45Xgf8ERc3FX4bh1f227iqF+vA6rAUg2rxOLCxHAhq
Z6yH34ceNx2vHQd39ZoTjdvqwbSltFSjaxz28TdyNe6uh9h3h5p0Jsbh2upp
ESXBegh4zbSoNzcOs1TTgZPoe7L9YSZo9lbfKB30WnvRcSt0nk+msSH65YuP
Y8/Qk9v6+czQnOccXr9EJ1tzdVmi33FekQ9Hq/W/NPBC2xft8spHM2bsbvmI
5nnb0diKXuv+fiEdfe1ttOACuslTQc5HqB70DDf95CbjfP1ouaq4tx6OeFlX
b14YB+f4TM8J9MlCn34a2rCyLidCuB7EnnynTi+Og7eIzJTOvnqoWeHaRVoa
h7tpiRbZIvi9rn3aZSu4vq4iLDxi9RAWleKfRMH1qo8pdBGvh8Gy9JqXtHEo
6RH265eohztl0ttt1sdB1e/bUJt8PdxISy28sX0CPKrmmdpO1YN134DguX0T
YB7/32zvxXo4sa1PXkl+Ak7zTX2eN6kHDZ8cquTZCajnucPDblUPe3if3OG7
MQFMH9P9Tv+th6AN4boTvJPQuEnx5cW3DZCg++PnyT+TMNxSl6sg0QgvCJGD
Oz5MwSG9jcIrPxshbHDm17Er05BgSXr47lYTxJX2BiTtmoFHvz59Y2VsBueY
EsETrTNwaU+dDP2mZpBjl1M1acNy7vCUJbTYfw3XXNtnYP3HpqOTTM0wHvDB
MeLPDGjwsleQmJvh1CG/kIKOGXixN+dmG0szMFyLyfnTOQPuQcpxJazN4P+f
xPzOnhlQbFTaksrWDIl7Lx7Q65sBy/60oFB2jMNm9jwK7J8Bep+Ga817m6E7
7Nzy6MoMTKp7fNiDcdrWOM+OKKZZyKcnnbPRxLjosrh23Y5ZqCyhs2u53gzD
+j4NNL5ZYOwx/Rwq1AIGXlLUkpezQAmK3zOBJv+4Ej+LbuGuClXe2wLBGi4X
+ANnoYISSX8P3RiXF3sU/bd3Q4YPmjidrKuB1gvxv5mA/pQdQbuKNtUW+D6M
TqU+v+SC7tQ6Jigq3AJKLbe+fkZP3gHqJ5EWuHVqipfh9SyQM3Zv4RVvgdiL
w76338wCA4/uhfeSLZDpcG6p9O0sFBHfjO+caIFj/13hffd5Fm7m8e3Qut4C
R8UyV2+mzoLxBPc9jSfY3gcX//2Fs6BGkTQxCGwBB7vfJdSqWTgnV//qzstW
oDu3/ebgxTn4Ljz+5fn7NkgMlNR07Z6DDQxU6ueYdrCS2fsq9s48XBeaegL/
/YGO17YuUjPzMLj9Z0zDnw7YtyPHb9yODI093pRXHR1A2b228YQ9GQ61JF/S
7uwAx61VrmFo9rmDmVu6OmBUQ4ZCRtvs5+GoQZ8EicfnHchg6mdi79fdAS/N
iqdi0XY22ac39XbA4hRXn74jGRgzA4Q9+jpgqaihftNTMpwVH2Gj6+8A3ycT
kIv2KCzfMzjbAXpJR4s+u5FBpP6HTe3fDmDOu7rLz5cM9xcM2Qu3doK+ek+V
1SsyTHFyzKfxdYLG9LnWK8FkcKH2B9LQxhqtUk5oxp0q0pr8nfDaSMctEq1m
IlQdhOaWzW39gZ7ofXWvH32kkE16CF362pfpgEAn8DNcdGMOIYPG5cDTlWiF
v/9J6aBv9xf6mAh2Qk1nd0sQeuUQZw0FnfSmwLULvalSZWBZtBN6JD05Pn3E
+j3vwyTFO+HxJ0YT6TAy+HwIvH5DohMa5a1T8tGNn17lfkTPypfPtKD5OMZ2
tKMPcW87NI9+dvh8tZ5kJ1guc3hKhpPhrzi7Ry160tc25hb686WDKhpSnRDu
HV/yEV1/h1LLIdsJMyIaczWRZCBvmh3pPdIJ17vatq59JsMppq0BXxU7oUFK
c/f+GDKkahgYVZp3QvzAl17OfBxPFHMWz8dO6DCXKF74TQYBbh6Hz9Wd4FnQ
41U7SIY+1dWw69ROWBH3YfxEwfV763G+1rAbIix+h5u/XwB1/xbrvu094PL4
3rRg/wJo53PKqezogWw58vAZdCM9/Woo+nLxtV4LtNrtj0VLaO6w2LYg9Jbu
PveLHD1QVl1bV4hOsmjWSEeLnW+rGEA/+L6z1ZyzBzKnv+QeHMD6j1jvCO/s
Aaeav/Gu6H1WOStdaGp7S1At2taSU4OPrweeZk38bh9eAPODjXFG+3pAr0K7
dWBsAUbdu7dHSfVAvOGf5OnJBVDZLvJi8BDG6d5mOqszC1C02q73w6kHeB+8
azbYughWb4Y8b/r3wH7uy77mnItAb3NxckMojk8w0cORdxH0dqf4Jif0AA99
w6Cv4CLEOzePqZb0wN2e8WvPpRZBUDR7e19XD1wo7hx5cnQRdB51rwUu94Da
4JyrufoipLIL98kG9wK9bOmNUbdFEA9K4TDY3Qea2t41vCWL8H4097jXwz7Y
E6zguUq/BO89O/Iii/ugXPc4q4v6EnRKThnc4SIBjWuWb9FzCTZn6y2NoXeU
Xj9s4LUErOFsDGzcJKj30guyQY++mWOTRU+byC2/QN+SYhW1Q1MO6j7+gT6Q
WaFaiLZUiviyiP6aK2rAwEMCVojsk/BegpqdZQ6wmwR7v1ZPHvZdgrvb/7Q7
85PAeOhvp4r/EiwIGzsoCZGgeEwq9cyLJahYENBLVyYBoaMXEvN5CcznKIOq
BiSYfVrQTs5egnSWxL3DtiS4+jFZQqFqCcI77Ghxr0gQ4JGmZtW9BDp5fSZc
Kv3w5ldjrsjVZfikqOUmNN0PGayJIXmNy3CZ//7JrOgBOK2WIEnSXIEDOvn2
+YaDYKxp76NfvAJH7Rj87f4bhEd8AvxzKyvwMsn2KV/rIMyI5Z+NZFmFLrX9
GFcMgsi3xBRF3lU4M3fLJZptCI7pRmz6KbkKCU8zpwW2DoFG7yFTNqlV4I55
bBKBljBU/34FfeN2Ugsv+xDsYO/ijUYrZeue+4DuGWZ4PIm2CrxfshPj9LvV
OTVHpVdh+xmPrG3bMY6/fdihBi04YfaFdccQyO3v478pswqf1XYkbOIYgncO
BbCAXjI48JUVfVwgPm8ZTceilbENfUXmdQYFXaT74NtOdEO045c1dLaMfwEv
+tE2WjDd/lUY+pT0XQBdNOPisQEt+2e8WgI9eNH1Ogv69t39LYfRh0yfybGj
4/xOK39Ar8TQpWmioxrPxNLQ4lwfxTzRuaqH2Ew4h6A74+ynYnTJ4iMDLe4h
yFAW5GU6uAoW+cnrinuGIHy4VlHn8CqE3er+Kyo4BDkmIuvBcqvwM2vhGuc+
LJdYudMjvwrs1wYsH50bAse6hJT32qvwIdGrYsxmCHhN6B+Kmq2C9S9TCb+P
QyAjNzX+1mkVzIhpw3MlQ8Aq7Wbz580qrDZZCsqOD8Guyr+aqwmrwNIjkCck
PgKxc3ezpXUpMPNz81Dno1FQPBbw1HGKAp9V7Nx0TcYgcXy325arVLhuXtPu
ib6ykJu9F02/45xsPrrzyOCIAnrm6KLPFPrOpUJeHbRnW1Wv0K0xcL+gpmWG
FiBXyl9G50pauTqh+QX2jBajZ1+LDSSgZQ7xhIrdHoOMy4GnmtEnxL6ffY2m
s46NpzOkQvzWH8YJd8eAq3KvROE1KsR6MecWPxgD2ssJMfsbVDCcdNdttRyD
GL6G6IPGVNjgs0d62nYMJiLiQiduUqF2LaUCHo9BNmf2xAkTKjRYDpi9eTIG
6hwOCuFoPbeQgVx0TTKr5Ve0xI1bJj3ow2bWcYVohiSRG1J2YyBnR9rejQ4n
QYkS2kmz5+UA2tXk0LFTaNfmnKURtH9mU7cW+ojlVbcJ9HMhu+eX0RxDFNYZ
9BZ7KLuLZvx9RGgJffgkG6sj2qba7Oga+nXk0ncR+zFwNH3DfPIWFULDIh0a
0deN1dr80ToijIdcHcbgnLdNdAO6RX2wTtV1DBp47je+N6NChnbT7r9e2H7j
f7GX71Eh2Nx55/cXY2A6GMzN9YAKukJ+hW7vxsAl6IBM6yMq/Ca/U5BvG4Or
aQUNdH5UOMBusLR/9zjMMXWVRsZQ4X4OEXLXeBzeZre1fy2iwumc8ezemHEY
OGbSJdZGhassHKSgUcyD2uM+bpmlgo9IKKeB5QQ8eftLc4CfBtOB0tcD0Vf9
qZGLaEfDgZhS9MUflWQmARrc9ymaoKCzug9r8KI37iw4fNBqAoa7lcOl0f4M
XU530UbfB2ZU0fNhplua0SKnHgXfRvOnPY1Qs54ALzWLY77ovUf5D6SgZ+KH
e76i99/pWxvHWEpfRGGKV4gGmRrVGySeYp7hvmriu5cGvtWlanef4fc5KcqL
wjSwz8vLjnOfgGc05mcmIjRQ3dewLJQyAcbyX2qeHqbBNSYfnay2CTiq/jPy
sjoN3Jku37jKMAnRrU3H57VpoMz+5uyODZPQylT8WVqHBndUNRVr0Ku3Flfv
oC8/eSbhuXESPpEuakehTd7L7lZhnAROrT8RnegOJ+OtS+goC6/Rnbo0OB/+
bfku0ySUOUo+9kev9v0d/sM8Cfw/7k6uo3XPK3Wd2zwJ13KPXbC9gPPh5vzt
O/ckLN6y5aTq04AuMqlHXmwSai+IH3MyxP5nkHQz5CYhXzKnmGxEg4/HVFhk
Tk4Cs6fFB9PbNOixrxxzapmEiXXuQaFAGoQpWTBF3J2Cjer1p0tzaLByJOH0
c8oUHLnQN3SwgwY8+49bFaKrJpz3qKF5qyihK+iXJ1z1tNEtGxt+HqFOQcnp
BZ/raOG+0ikrdBK5s/A+uvtqK1cK2k3j6JwDusvnyEMR2hQ0KdcbBKH1RVl+
RKD3FhwpzkDvkL60a9faFPz5dlvoNzq17YtnFf002Bek+ox10qCai1fIZdM0
7LnWum1jNw0OMz+bkGWdhkN7Ywv5emhwPShzYJB9GubNSP5He7E/44PXtXim
Qedc8kszEs5vfULAt73TEH4/huvNAA0o1yV2re2bhvUK0b5dgzQoczqUfEJs
GhQjQx6Ho/k44Ky/xDQw9s40Cw3RoD7V+NML9Jeqezf2or306RYC0YEupKF/
VmaK0niDrqFctRBGL/5Uj3iHNlFvXPrn9ID+uSC03oWzrvvQEgf3hX1ED2xQ
ei2C5mO4c/ITmq7d6KMo2nYtYSoG/bMpL0IMzb983r8RLX58qPgg2vQMgxi9
5DTc8yzuPYa+0HBGs0lqGnaqU7mi0JbCU9ZxMtNAy/h2YNMw7reDs5/tD0xD
V/KU6AN0VrNDU6r6NMSLLNTpj9PAdbbEcfTiNPSzvc49PE2DoLCqgH13cDwl
Fg0b53F9AuzpbztMww3zw9urFrH+llyKzoEZmFLduDueew3eMw+eYh6ZAWcm
SyHNo2vw+CVVJkdnFpp6x4LdtddAikWsQuLrLBwus30mbLIGo3e6N9Qzz8Gd
NYZXa4+w/EC0wWPLOchV+ph04skadP85KvgBHZLgOnQSzbOhdqQA3a9hK3ga
XZJkmtaL3sPhYngGXfRrzW6D1RxUbYh4p4Gevv9BVQx9j7upRhPtEVZfa4Fm
d3+gdB7Nnr71xje0neH1OG10+ie9yTX01ddxWy6g93044l1li/2jPTx/D93e
rLg3yG4OLFtv8T9D//hOfL/pOAfHXii6v0Xf+Sh8U9p5Dg6fj7GP+1c/rT/2
p9sc3DhYtrMCXeV2hszlMQdJUePHfqPfMq+pP/REX1re2oK+wTw7to5On3fr
aUNL0Uvc+ou2c67v++cNFJOOf15W5x/458H5j3p0XnPAvfZg6J/rJpqq//lP
Sv7IP/8c3HKCHq14iWn8n6H12WEGtMKL6Ol/7qucFd6AzvmoQv5nsYJbnBvR
qa7ty/9sLt/qwIZm/2u2ox3tkKvZvQst/w7Y/vk/uSJ1QfTmoqkt/9yQJRsv
gQbFLf93W0DWWx90+9X2v//aEzp81HUInXvNcer/4wnOe3DCew6Obp9p/ue/
ihmJ035z0LSB88W/+ZBVVxoKfTkHdMd9/9SjcxiZhE69mYO1mA+FVegDjtXX
Zt/PwW7nN0e+o1k/Lkh9zp8DtTf2Gp2P10DEvve0ds8cmLp/86O3XYN7BguO
qwzz0NGWqilrhftPV+/VZ7F5YHteOWD6cA3mfzVqHT+PdlYrDr+7BhLb+4Ua
fs0DZ+V10wbcvwJ/dsS3nSdDhOCuDA2JNbirKHOM7xcZsjRsFqOWaHCDz3JK
Ex25/ABeoi/8fvPJDt1R2uXjiE7TDLoQg76SFKVthh544bihHh0e9R/HBbRB
kGoODS39RaxNGR0h5c99uRbz/IYkQ070yRIDpzR0OqNz2wSev6STX7qZMW/9
Ixup9RP9NHk01LuBDF6Jm52kF/A95p7ft7GFDK2Syqzv8PwuS9k9c2snQ55T
xdrSLA2UhPfFr3eSocVCXc9ghgbfXDyNVvrJwKC/TYBjkgZ2Az/OzY2RwYI3
yuLnKA2WbC49GJslg3jDVxVzvF8YwLEtk0yGMS8HRna8L5fEBAISFnB8hWPd
IXi/riQmsIstkiEkhPXLVfQ51V9x6uj6jQ8yzqOp/YPHrqOvRsrmEeiSYxd7
7qDpL3/0UULfTYbn1mgPr4nLcmiOr+/LvNEHr9A1S6K5Bkw2h6MV+q4cEEQP
nhDTyUAbx2j770QfzZRZ81oiQzCv8obkfvyeunCi4TIZfmg/u6yGbunepHtg
hYx5NodnC74P+61E5VzoFuCZ/ItDUfi+WIgH9VcxL8ArJUFhoz80kDTgubRz
+wJ8deXW3dJCg2Oitl7GPAtwqqsyK7meBg2Ns6TeuwtQMq+RcyCWBtuUNZx7
cxagRsmqwtwG5+Pt1RqdDYuQ0HC29OwxGiwEXXx/F31m0GhWAX3tneoNV3TR
4NhuMXSxP69oCDrRfe70TnSa08h0Kjq36In1BjSYxeWWo98H2YXNKdFAXWqD
5hJ60sV6uhZd1bCvQ2TjIng2GRFf0P36mx/oo8PeqwZ6o48e5GA6uGkRWDew
HxJSxPVMeRWwhXkR3Pm8mQvkaXDkos3KCMsiHCgK3X7pKA1iI1O0frIuwp7v
hNbkEYy3ys3ddPgXMQSPt8sUpYF3xMGNG/cuQqixr209xludW8NF8kQWoXtT
gcKEIA1SRI8NPZBYhI9/+dIYMF60omn30WQWwXw0SvUuL45PcPHky0OLkDSr
F1m+iwZvO/V38MkvQm/AdK0gBw1ieJ7sj7yxCMTwSootmQr71Z4Xz3ssgtA4
JVSvEeNz3Rdl3F8WYZkarV+URoWJEbqTW+sXQWWL0kBWAMbzKs8borctAd8k
zfHdWSrcNOtJbz6yBM8sB+gnhalQUfz3QempJbhPud14djsVHKPMJNs0l0Du
keWzki1UGOCY0zU/twR0+c5h9KxUeDwyq6N6fgk6fz8M4NhMBT6uDh51NHO0
wKNtaKuFkoET6Jmb9dps6EeuySmn0QGsrrKb0Tvz3tlrovuipHYwoe9GOqmf
R08Lt5I3oG+Un225gHb4K5q7xkKFlVhu8yv/6vtZPl1GyysN0a6jJX6mqcyh
nfeHl7xHH0/rLMhED6w1+PxCh4rkMjxGXzPzPr9RawlUEzvOy6FFrPK3KaNF
HpW9W2LG/jUNRprrLEFe5asE902Yb63fpwRfWIIDtwYc2DZSYXHhoHDpxSVg
na9lCqGnQqLhrmJn8yVQ6sszzRilQOUG411CrkvwcuHzdu06CvgfPV+R/n4J
FvgTdB/lUECrb/yB1Jcl+Ly4/oA9jAJ5X1v/C6JfhjP6XMYBEhS4xJDu8PTK
MqSqmr0YSlsFHuZNM8XJy+Dg76l5HPPttzsXJjXWl6FO+orU79gV4Ni40r+u
vQKBw3O9RRwrcN5RiXmHzgqI3IkV/4g28LkpI4Jm1iiyskP3ydzXU0BHGJnn
6aEDH16xP4f+9SXx73406wnxcCO0vYzTaVb0Mv+bIU+0afTppp87VuDhFd/9
yeiyZSMjZ/S3MTb7BrStXOnIEbReYvth3QsrYOh8ctScfQXSWw+V/tbD7/FP
q0ZuWYFW8nZxrUsr4F7eNdHAsgLqTx4Y1+ivwIuz0jMbmVZAml56Js10Bc42
Sef2jC/DuTdTVxLvrsAji5uv5YaWgbzdfsvn+ytQNNpU6de7DOvpbN8uPlwB
Gy422zNdy/CtyvTQ80cr0DyjqMTUsQztmwoT7lusgFPtwtzJ9mXQXS9j1bdc
AcVPmlLurctwj8nViLBawbjhyT5oXgZpJXIdh80K6PoHXFZoWIavkptoI7Yr
ELfzvm967TIIyMT2FzzBeVU8859Y9TI4yiqPkn1W4JCRQseH+GUQPVdlv+0j
zvfN6cF492X42NR8avtXdJtHlp7RMky+UmNaKloBl3OD+yIU8fc7lM+p01Zg
V+jWzevZSyCuMp3Ir7gKW56tMLdILcHGu9Fb3B+vgnv3rjStyEXQ8VboME5d
BWWHlz+DtiyCVgd54evwKtwyIrN02y1AXeRVQX1FCrRsfh75MoAMx+JtT1qg
Vfp8WE+g04tk7vmg6RVU7Ff8ySA16BPwGX0sTbw/BZ3I7Z6aj35y7uz522hh
wz0NjeijO6JzuNHsi693MipRwIix2NvDjwztBV4G8uiGhsxL075kMImnhJqj
PeKfC1xFk9O2tBorU0BkRNfI050MVGZmZ31VCiQpeSqmOqO/VQScVaPAxgmb
D612ZKAzEWckjlOg2iKwdM2KDKLh2m1XzlKghLXfNN6ADJJK9k539CjgczKV
SUmNDG9HR0fvG1KgU/x5d54Yllf0LEtbU+BdhqvqZtI8sB5iZP3oQwFTuuz2
b6HzUJJWfysjggK5C9ECPy+gxbmP22RR4DZXXehhlnkwM5cqmuqmQAZJQPci
xrnLwjn8G/9SYFt6ZVLX+iz4i9W9OoKOSHM7K4nWiZtcN0WbFhwdtV+bhdL3
bA+D0DbL0+5ltFm4PXWwrQxNF/WFlwOdHH9VbQl9dtE87SZ1Fnyr0rZeoaPC
1uTZRurqLJTIcLTkomN53CeCV2ZhOMTjHTfeM1oC+ykHl2fhcrg+Y/MGKvxq
YyrnnpqF/cEyrS/xnhJVEXq71j8LE0fyGU/jvcbOOXqzr30WnqZKLPHto8KD
Ynq2C7az8IDE+vKCKhWyAv/sYmSbha8addG9V6hgXnZVjvX8DDzSVOSrsKKC
ReY8S67zNNzOX3k6HEYFYZt56T8bp0B34/Pf8+h+r26b++hnp9qF/qKXbKxz
qRumoNqZ/glrOBUkerOoL9A7vlAruNCkX7EEP/pwbTnvPrSn6kmPNIYp6F9f
B2X0D9k+lkb6Kejb5GSqj445c/TVAt0U8AwqMVugFUNOc3Ch8yzPnTKNoILZ
JHXRcnkSVCJbFQwjqTD388fVyulJIKu29+t8ooK+Tr+q4PAkCAicP3HqM5Yv
J8TZd0/CNW57sQPRVBi+6LK679ckzM8rDHHFUkEh0+RK/X+TkGdt5fw3jgq9
u+J+OCZNgmi60uGSeJwP+d0VftGTcLGp+z/PBCqEnrmTHho2CX94r3KcSaSC
03NVl6T3k/BmV7IySxK+q+ZHKHkvJ2EioeFoDZrhqalYpTf2N6Oa/uUXHF/5
0sY210n4z0J687av+O6d+9VAtp4EtzvF+m9TqBDFvmjCbjoJjJJWgxz4jos/
DvkmcXkS9tMd/PY+Hdfbqbf+uMYknHAtVX8MVNAQNdemFk7AFTOxfJbfVAi/
8HlF5eAENHdSei51UaEnrlKZPW4cduTtd9Afp8JqXb6VLfc4NLNSz7GuYPs3
AhotAsbA9SGppEsc47iiFM8N9iNwc9il3FOfBvuiX17svjEEWkGmXyguNPgU
yX05X20AfqQUnIl6gXHyNTd574f9EHXbLjX6Iw22b3Ha0RlCgpfazjyF6Aqx
MUudYBKIPzjt3oJeYMut+fmeBGdzm0en0WJWm0QV3pGgWlZMizmMBtI+bc++
viHB8xaVNCF0eYBkq+BrEjBbky0uoe/wtrixvCSBVGK+iA96+pKf2LwfCdLN
Xzflo8d3aVZ0eOPvVS05BcJp0CZOXkh+ToJsi1cHPdHq7/s2uzwlwTHrWckx
dJyTAIv2YxJcM0/13B5BA+XR0N/N1iQI2pHdroj+7aL1+polCRjj6MVuod98
1/buf0iCN6Ehlv7oL7ffppvfJ4GiuF1mJtqgmqFt9i4JhDQiZjrQFx0jVu3N
SKC0u8xAKpIGUr5XDnvfJMGXiq3JTmin7VU33l8jgRbz0+EatMzeVYfoyySI
C97EuucTDcImpj3TL5CgNdoyUCEa8ypv6SJFQRIUkdKEzsdhHD96Rahoug/i
zhf+vJyI8/GTvVapqA9SqgJtDZJpcGUmqTMzoA92SYnKXkilQcGuw/dEDPtA
7/Zn593VuD5xX5u3NHWBNfM89RbmBYv+IeFXp9uhwiCsd98yDZoYOrNIm1pA
2q1nxoh5Ddy+TGgd52uAmc0NT9l3rYE0w/wbNtNqeKPf38KJftJ4gOx9sxoM
DJVledHDXTsv0d2oBhmeXj8B9K4an2zHq9Ww8qa6fx96KcOLk6xfDdGl60qS
aJd49scP9arBPWJl7Aj6y9ixQ8bnqkHwxs5gAm3OHzp94WQ1fGfQJ86iE8li
SSdVqjEP1VXNRlfsnn8FS1VQenKcn49rDTo2zZQqplcBg4wgyRNdZBR3Nsu8
CipVZzwn0IOvw4Slhavg5Jnz1jncawB06x27gyuBOjM18JRnDTSZTNaYWSqh
4sByc+4/h7RdaOmqgEvVXvoLaKYQyt2o9ArwetM58M9E7zMmRfSLof02i2ju
ZvqE+rQKMC93pVtCt1h5nL6H3nPkd+A/u+ZsGP6bWgFx+3n5ltEC0e5eIejb
KimKK2itGpfS8pQKcHA9enkVHfXedsPS1woYXMixoaCN1m8fF0G7fQ96yci7
BqkhclHrMRUg5GwYuhXNWvCCejWiAoYF30dzoecEtA7lBFeAXfjxJEF08BX3
u9teV8CFGbMUCfRvq8NhD/wqIIibNfUYWkqOaV3IuQK2fvCI1ULXKdQYtltU
AJd53WtjtEOSR0agSQXs8Jm2sUb7ZR9hOHWpAibO+nDv3b0GVSF7SLfqykEm
PLj0NzpGZNXu2dlycFFktbffswbzgqSmkLIyULrWfGAP3xpo01cxpamVQWIW
aboQXTXgvre0oBQ+CVzJkBBeA9/NZ+hucQI82hKawiy2BreESG+507Ph/usT
369KrAHvcUmdA8Gx4Kga0LJHcg3qKYm8O44pEaSDz7/8Mzc3efn2lQuEA12G
6T/v2cElRS94nYhL4dv4z875Wa7aj28T3crlvrv/1Qe/3LD2e0Rsxpd5XnTP
eVGlUWULwv3RxGsetJgi3zC4PyaCu3aXcv0zISq/ecSRcN2j/GInWoJLb+PF
c65EdYvgjVHsX/CjQ762WkHE94Lz19+gN/pE7p69HUV4iDzw34Y+XbR3M7NQ
ItG9U3PUTHwNljVCLtK6U4kR24gP6fvWoHkrz89dtgVE/Yid+Qj/GohHkYd6
//tJuHZYOdejjUaFfZZ+/yS+kyQd8tEbDcz42AZ+Es9Z4q5HoyPzDJKEl38S
OTd6JQLQm9iWJZVYS4nr4396bdEDVxWjdQVKic8vdPhOoaNXZp1czpQSnNbl
azvRMveWpL5YlhKuK6puw7g+R39ty2wNKSUa3aKSlnF9T949A/4S5QSJjSF/
Gn3he+BTX9ly4pH/m7IhdD278xFv+XKCYUWnrgvdIrd9ykO1nJC6otLahKaM
asW6nSonbBKvdlSju3oPGrqeLycuyc525aGZHM/8fGpYTrB4HW+OR8feWxa1
u1dOTHzR/f4ezWhAeFnblRN/XD7bWaFfjb04eO9tObFd0rXyKnp832PR6phy
Qrpwg4k+OifNq1wioZyAW9uu/LMZe77ZQfQKI5/WP7daTG5URLfHSZz454Rf
ArFqaOPjRxX/uVP84gkN9MvO4wf+2dLDu18HLc90ffc/X5ObEjRGu4g8Yfrn
330XjS3QRkcDyZf+nQ+v/yJc0Ex/vaT/eUX5+eLOxHKi+KWD2cV/7Rkyy6Wi
Z/rNIvXQNJXAx6eTyonujoDWs//a19SbUUgrJzQNE7acQB8uVzGXysHvmeSp
HUPPeOv28xWUE6Kcwn8m8Xy23Ne3CF4qJ65wOMRFoHljJmO3HqogZDzz4v6d
7/CvZl7ejyoIk1dDf2h4v0wUsbOvJ1YQJ7vctyTh/aqx1e9QMLWKSGKoecHI
sQZl6fluLNq/iHt7O413sON+FRAx1f/8mxivFguo27wGO5eVE4451hN71Zw5
VTatgajJg5tHoxuImgftMv6jNBD3bNpv3dRGBBSpBlN+0IDHzTbqMn0P0XXR
aV0W3y+/73oDrwP7iOrSSymi6G2J+pbKr/qIyUs/r+1B6+XfpI6g9TZWsOxA
Lzfq+rx73UewNRnnMqFnySIcxJs+Yv+Pl6ZrX2hwYHdf5DjaqIujeBS93Zb/
m/q7PuLrk+mdzei89tlfH973EZ9e8j0E9OqJKwMzQX1EkvAei9kkGjC95vt6
OaaPcLPnrxJEc3x4c7YovY/gCRF10cX3N9v8bbFwcR9x+P1Rf9cEGvR0rTP5
1/QRbR32aZ34Xk/cceW9PNxH3AidU5CLpcGeOH43IXoSofohW/QFvu9JyfVK
k7tJBM8bO1NSFA0cOZJ9YkRJRCa5QTkcPX51ImRFEsspXzeGoc/qaQtvkSIR
ohHev0LR36bSUwXQHV1G7z+gj0pzKB1Gy+XLXQ9BV7E9KTuNlj/Eui8YbfW2
VdcQ7X0jK+sdeoD04a4b2oqqf+INOqLo6rNE9AIruTEQ/VGEJ6gO7aE7+MgO
baF/wuGyDIl4+/zLJiO0+f7zvN37SYS1+IGKs+h1/pjabbIkgnrwmrc82sbb
y+/kQRJBfrX/5D70MInzlMMhEuF/IoluO9pjRofu62ESwZby/sn4Z9wPjVVP
OI6SCHtrvqGf6OOq5LGnCiTiv3cndCLQkXS/rvcrkYiqXUzZdujvQxd/a6qQ
iER/ZycyxlP3t3ItXtQnERaeDuIWGI/dlr4TcuMRidgau6lgGOPF1xN22Xe8
SMSusEOHb/yLV3menbOMIBGz0sxvGj7QYOlT2jX7HBIR8II/YswXx69dePFL
XD9xQmDH+wMONOBjLuGKCxogOMu9E2Pu0GAwKE/T1GuQYBwV2Xb6Eg2enfQy
Gnw8RMSzV27gUqcBqfRmqJDpMFFmHA27ZGhgKqHPxH1xhPDi3DZ6+g8VspkV
Wrn6xokMxnPSAujTgrf2JZHGCe7aIxbL7ZhPOX2wVhoYJ04+rE2pQ+82Ky2q
GRwnYJBzIgEtUDLEfGN4nOBQYBV9juZ2pOlNj4wTniH6IbLo21qcQ9smxolU
i2t/+9qo8OkBne3h6XFiuGqP0Rt0N9t3mv7cOGHKv85h20yF88Rf+9RtE8Q5
t0tSFxqoUOx1XZtRdoJw89GNlcJ8Y7NlorOhzgTRZiDsylBDhalNX/6mWEwQ
1YfZd1IyqHDl2PBolckkoRwXfa8ePXFBzeLK7Unikt90fjyal9FiftB0kigg
zTO7oHsUnJ7Y3JkkuNPT9C+i7RvuLv+9O0lwLO37LIHem3XY4aX5JBH0+Lls
K+ZDmjl+9okPJ4mGnqJcd/TpL9dsflpOEizHu+UOoCcKE+/12EwSBw+U7PLF
fGr/hfQznI6TRP6nA019qVT4Ox7KedZ1kuBZF3mgiN7/xqjO1WuSsKXzvr+E
+Vj1qZBUqs8kceDZNtMstIvCiL+9/yQh9KzsihW6ZUnLlPxikojp3ZH0CF1l
e7lpy8tJ4mH3Dcp9tC7cOC6KdraPP3cPfe/P7QwC3ZQyGW6G3lpyT/Aq2ua5
7PQttLrjw1c2aMIo6/UN9A9P60dx6MhU6cMG6JAGJuV29OPH4S166NEXB6ib
AyeJbyvbJPnQHXGdVpteTxKflmuejmB+GddcNEj/FudbmjRSi/nn71cd25vj
Jgn7pwF9mZi/9pawB8TlTxK7BdpNgzHfvdFko2NXO0lw6fOGSbyhQqSLt4Hd
uykitmUwRMqJCouD7MlSV6cJmSH5d+GmVCh3OWXxln+G0HogV+msheszNPIh
fmCGcFeOs2vehfu1xblftGGW2AAWrSfRz56fWL/ZNEt8XpMTztlJhbz9EzvC
WmYJhQPU6yLoH5dFhFraZol8/2KPIE4q9O+bFWfvmCUEzjwPYUQvl2pKanbN
Ev0zdKFDO6jgLblTsKhvlpBvcdYu206FgstMNNmhWaIvfTE3dhuu16UdxbFj
s0Qm1wMPbUYqjISEre7bNUccGGe/L4TeJ51P14I+enBQe2EjFXyH+pi8uOYI
+qmRgxVoPvv5rXLcc0QN326Oj2ir6qmdQ+i6ny7zD9Fbqhr3BPHMEd8pUSk7
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
ylWPH3KupkWDBws6vt0er8M/vyy3PpaiIRpfoieyFdfhzcWnzuYSNERKh6ho
dVgdXin54XdBDL6PjqR6e5rV4e9s3fSCJ6GdZ0BaVrIOJ0pPEOhEaIgNJ/m9
K27WYuMH8kWZ7DTEbo3LFQ5RNTitct/MQSoaokhT5Mr5xmps6H+y4SqFmngm
Tfb6hd1VOMaf+Fu5lZropWFh6qZUgd9+oc5aLqYmOp64l0N5UoaXymPv3kym
Jgqo8Vxv9SrDpW/DndTAEe2L1CWeZfgeB6+jKNipjyo92aMMl+ep2LOC7Z3l
jV64leERt712K0nURNm3/zF4PCjD+w3uWXeDOwTG719xKcOyyg8tksEq12fH
DzmWYUHfmet3wbzvSxwWbcvw0PpfbTmw+/42NbnzZfjEHqp4vk/UxLzD5488
5SjDMqld16jjqYnOZfe32iZLsYJzpe1gLDWRUj7+V7iyFNvKa/RVxlATLQtz
rViXMDbNF0/zfElNNKYMfSm6WYLJw+9+Hw2kJpJdn43qtBbhPvbTUhWPqYns
X70y7bTycZ/5XX3u29RE/d2lsVpNOdiz67SgoCbEY9PpZ9b/ivHUz5WBM9TE
i8c2dj+sSMdVtOevXOWjJuYbqPRa4nTcyvQ1UwnsvYspT7MwHVO/FmY9A+ZQ
0IqU+56ON/qf3T8KXt9ivHc0Ox1/n/tJ4gSn6Kros35Jx4dqZmTowZHiWUfG
k9Lx0Y2dmxO81MQXwbupKj6kY53zX8t+gwOjtMbevU7HHm+m/b6CmySDaRkv
puNnpyYZw3ioiSwJgy/85tOwoJXRHZsDsN4jhyOo49NwoL70RyVuaqJaz346
P6003HHeJ4Wfi5pYsP8Wx0+BFPx4l0XvJ0Zqol3CPtJl7884Xp/Eq7+HmqjH
UxtG7k7Gf/uzsnbtpibeyxpWeimXjL/UjrzLp6MmDtIKthtsJWEbyuTOnh0w
P8n6TocqkrC8v+MNGjCbg2h2TXkSxs0fuKjBqH7PkiP4wWR92xYtNfFH5bQ0
B5irbePFJjhdt9OjpCwJfwoUufIPPPvoV4kVmHPPdfoNsPRmgdK30iTcmpzr
swqm7q+spQGffbhvfQmsJzimpY2TMPGRvcsC2Kdu86VFXhKWK/4t1AUeybLo
d8lKwpPCA3/KwJMaAjL+qUl4tWeHwmdwb9fz8bjEJNx2Kb3jFXizQzWh5GMS
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
SwCFqYFgNXkK+h+SkEvm
                 "]}, {Automatic}][-3 + $CellContext`t$$], $CellContext`t$$ > 
               3}}, 0], 0}]}}, PlotRange -> 2, ImageSize -> 280, Frame -> 
        True, Axes -> True, AxesStyle -> Dashing[{Small, Small}], PlotLabel -> 
        "t" == NumberForm[$CellContext`t$$, {4, 2}]], 
      "Specifications" :> {{$CellContext`t$$, 0, 9.25, DefaultDuration -> 5, 
         AnimationRunning -> False, AnimationRepetitions -> 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{330., {181.13403309800196`, 186.86596690199804`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8671665931605196`*^9, 3.86716662986178*^9}, 
   3.867166682545929*^9, 3.867166719676053*^9, {3.867166769181219*^9, 
   3.8671667853670425`*^9}, {3.8678692228001194`*^9, 3.867869250412341*^9}, 
   3.86786951792829*^9},
 CellLabel->
  "Out[460]=",ExpressionUUID->"d7ea4cd9-608c-4666-a6bd-ebb689985c41"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1853, 1016},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 203, 3, 108, "Section",ExpressionUUID->"218715c9-e13d-4d05-9367-f46b46dc3c30"],
Cell[786, 27, 148864, 3678, 11255, "Input",ExpressionUUID->"930db826-3cbc-4bb3-97a6-3a010efa3e76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149687, 3710, 248, 4, 108, "Section",ExpressionUUID->"b20a9559-6b24-4fe0-9460-185a4a16c94f"],
Cell[CellGroupData[{
Cell[149960, 3718, 3776, 114, 1000, "Input",ExpressionUUID->"2813e843-89ef-428d-baf0-8a20a3946b77"],
Cell[CellGroupData[{
Cell[153761, 3836, 568, 13, 37, "Print",ExpressionUUID->"e44cf76e-9f8e-4499-b78f-bf1b08af318d"],
Cell[154332, 3851, 535, 12, 37, "Print",ExpressionUUID->"d61cf789-2c0c-491a-a027-32594c83a54e"]
}, Open  ]]
}, Open  ]],
Cell[154894, 3867, 37518, 1029, 3111, "Input",ExpressionUUID->"c82fcb85-5b73-4f32-a2d0-0ff8c95722b4"],
Cell[192415, 4898, 555, 17, 47, "Input",ExpressionUUID->"5e2a0a79-2ec3-4160-b387-29867fa8795f"],
Cell[192973, 4917, 128, 3, 47, "Input",ExpressionUUID->"210a458a-178a-4bcb-8435-79f581fb5e4d"],
Cell[CellGroupData[{
Cell[193126, 4924, 19063, 459, 1806, "Input",ExpressionUUID->"87f7985a-6d8f-46b0-a5ac-b087f3daf85b"],
Cell[CellGroupData[{
Cell[212214, 5387, 376, 10, 37, "Print",ExpressionUUID->"195bfef4-e51c-4137-bb10-ecfd40482e2e"],
Cell[212593, 5399, 343, 9, 37, "Print",ExpressionUUID->"44b7ed8d-3642-49d4-8556-ae0f08d7f99d"]
}, Open  ]],
Cell[212951, 5411, 478, 11, 63, "Message",ExpressionUUID->"6e70e6e1-ee4f-4f6c-8f56-d4315235064e"],
Cell[213432, 5424, 760, 15, 63, "Message",ExpressionUUID->"3cacdfff-9317-49c8-99a8-4fae03c5bfed"],
Cell[CellGroupData[{
Cell[214217, 5443, 363, 9, 37, "Print",ExpressionUUID->"5f847320-eef9-4cfc-b6e0-0c49960d6400"],
Cell[214583, 5454, 363, 9, 37, "Print",ExpressionUUID->"4d269c3d-962d-4dce-b1f5-5cfd66c02e78"],
Cell[214949, 5465, 352, 9, 37, "Print",ExpressionUUID->"6ef3eaa2-1ddd-471e-90ba-39f4d3f611a0"],
Cell[215304, 5476, 351, 9, 37, "Print",ExpressionUUID->"f05b9fe3-72d4-466b-a1ea-034a05d53aaa"]
}, Open  ]],
Cell[215670, 5488, 364608, 6465, 645, "Output",ExpressionUUID->"4791b6de-dd9c-492f-8615-675f403fac2a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[580327, 11959, 271, 5, 108, "Section",ExpressionUUID->"a964257c-e879-4ee8-960c-c24d2796eb82"],
Cell[CellGroupData[{
Cell[580623, 11968, 19064, 459, 1806, "Input",ExpressionUUID->"cdb5bb39-2bd5-427d-9b7c-b452e9e4ae48"],
Cell[CellGroupData[{
Cell[599712, 12431, 699, 15, 37, "Print",ExpressionUUID->"572b0fe3-abce-4996-8dd5-767522f5545c"],
Cell[600414, 12448, 668, 14, 37, "Print",ExpressionUUID->"df960ce5-7b89-4eec-a511-f22c09a73ed6"]
}, Open  ]]
}, Open  ]],
Cell[601109, 12466, 154, 3, 47, "Input",ExpressionUUID->"cf1b83ea-ecb3-4982-abee-0ea8327b6be7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[601300, 12474, 239, 3, 108, "Section",ExpressionUUID->"4a6cc590-f442-4cf2-ba2b-04683823857f"],
Cell[CellGroupData[{
Cell[601564, 12481, 220, 3, 106, "Subsection",ExpressionUUID->"78fba3b7-04b9-4905-84eb-8345b4ac27e1"],
Cell[601787, 12486, 2837, 63, 378, "Input",ExpressionUUID->"04eaf6d0-1f9a-4a18-ad3e-f67206cf68a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[604661, 12554, 234, 3, 106, "Subsection",ExpressionUUID->"d0d51fee-e20d-49b0-966d-d552bbc9389a"],
Cell[604898, 12559, 3631, 79, 684, "Input",ExpressionUUID->"9301bae7-6304-4fff-a5c9-eb3a735b1304"]
}, Open  ]],
Cell[CellGroupData[{
Cell[608566, 12643, 212, 3, 106, "Subsection",ExpressionUUID->"d324d000-5ccb-46ff-a97e-cf3e5a7c888d"],
Cell[608781, 12648, 1562, 37, 252, "Input",ExpressionUUID->"8b005441-b926-4a17-a4be-427c8122a419"]
}, Open  ]],
Cell[CellGroupData[{
Cell[610380, 12690, 255, 4, 106, "Subsection",ExpressionUUID->"706d50eb-15aa-4398-b300-5226b2026de9"],
Cell[CellGroupData[{
Cell[610660, 12698, 345, 7, 47, "Input",ExpressionUUID->"ea9590aa-5d61-4644-b8ea-162b9785801e"],
Cell[611008, 12707, 3955, 57, 530, "Output",ExpressionUUID->"d82de120-dde1-4c45-8460-9de9bc816adc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615000, 12769, 343, 7, 42, "Input",ExpressionUUID->"76513fc9-4bd8-4283-87b2-4644ce9ab7f2"],
Cell[615346, 12778, 3859, 55, 306, "Output",ExpressionUUID->"30c82eac-5c56-464c-beb6-18e0e67d13c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[619242, 12838, 341, 7, 42, "Input",ExpressionUUID->"e88ae3ac-396d-42d2-9a18-12053c7ddc61"],
Cell[619586, 12847, 3785, 54, 306, "Output",ExpressionUUID->"a4757381-ce03-43a6-9c35-f38f7135b6c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[623408, 12906, 288, 6, 42, "Input",ExpressionUUID->"46a9c4be-7bc5-470c-b546-e937448ddafd"],
Cell[623699, 12914, 3856, 55, 306, "Output",ExpressionUUID->"9f75a363-83e3-4ab2-aada-090322a5e508"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[627604, 12975, 205, 3, 105, "Subsection",ExpressionUUID->"1d6ef86c-66d7-4e03-9bcd-0f20f629f4f4"],
Cell[CellGroupData[{
Cell[627834, 12982, 609, 13, 72, "Input",ExpressionUUID->"3a24882d-ab46-4c1e-a425-fa8927a8b118"],
Cell[628446, 12997, 16975, 428, 353, "Output",ExpressionUUID->"ef9c906c-7271-4586-842d-ec92547ce20a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[645482, 13432, 234, 3, 106, "Section",ExpressionUUID->"6fbbeffa-94d3-4819-b3d6-3bc2457a08fa"],
Cell[CellGroupData[{
Cell[645741, 13439, 201, 3, 80, "Subsection",ExpressionUUID->"d4cd1662-0739-4366-903a-6c25f7b7413f"],
Cell[CellGroupData[{
Cell[645967, 13446, 22069, 535, 1807, "Input",ExpressionUUID->"0f3183bc-66bf-4493-80a1-5286a3b12336"],
Cell[CellGroupData[{
Cell[668061, 13985, 619, 15, 33, "Print",ExpressionUUID->"29550a06-5960-442c-8963-e5c7322aa671"],
Cell[668683, 14002, 416, 10, 33, "Print",ExpressionUUID->"9c86267b-3bc4-4e89-af5b-be55e5d1133b"]
}, Open  ]],
Cell[669114, 14015, 540, 12, 42, "Message",ExpressionUUID->"f1ee7137-99b9-4710-927f-c0d654d8ca55"],
Cell[669657, 14029, 820, 16, 42, "Message",ExpressionUUID->"854eb72e-c35a-4c46-9fa0-e35aa971d235"],
Cell[CellGroupData[{
Cell[670502, 14049, 356, 9, 33, "Print",ExpressionUUID->"20981147-b50a-4005-97eb-acfa9980c474"],
Cell[670861, 14060, 389, 9, 33, "Print",ExpressionUUID->"fbee8f3f-ad53-481a-8c36-5cd387ce868e"]
}, Open  ]],
Cell[671265, 14072, 540, 12, 42, "Message",ExpressionUUID->"130805eb-4738-4889-9f60-52443b742373"],
Cell[671808, 14086, 823, 16, 42, "Message",ExpressionUUID->"dab08db2-72c1-4f5e-9688-57d72fbb8da1"],
Cell[CellGroupData[{
Cell[672656, 14106, 356, 9, 33, "Print",ExpressionUUID->"3b427bcf-02df-4831-aa29-83400d4dc655"],
Cell[673015, 14117, 389, 9, 33, "Print",ExpressionUUID->"fbac5be5-2923-403b-8227-4608ac5f2be2"]
}, Open  ]],
Cell[673419, 14129, 464, 11, 42, "Message",ExpressionUUID->"c2d8eda8-b5f9-44b8-935a-feedc0f05fab"],
Cell[673886, 14142, 540, 12, 42, "Message",ExpressionUUID->"996db027-0683-45ff-aa5c-4d683d25a236"],
Cell[674429, 14156, 513, 11, 42, "Message",ExpressionUUID->"e72564d6-4b34-4c8b-b9b5-33e00dd9211d"],
Cell[674945, 14169, 821, 16, 42, "Message",ExpressionUUID->"00c476d7-1ef2-4a2d-aea7-38a4bf13e63f"],
Cell[675769, 14187, 508, 11, 42, "Message",ExpressionUUID->"1b9a749b-8acd-4d1f-8cd3-523dd5eca867"],
Cell[CellGroupData[{
Cell[676302, 14202, 356, 9, 33, "Print",ExpressionUUID->"1a18b33a-7b75-4843-9f9c-4832d70afc80"],
Cell[676661, 14213, 387, 9, 33, "Print",ExpressionUUID->"c9e49ef8-1c7f-4622-9fae-b631110b7708"]
}, Open  ]],
Cell[677063, 14225, 651, 13, 69, "Message",ExpressionUUID->"d4d75c44-1df8-4adf-a881-58388e10df8d"],
Cell[677717, 14240, 466, 11, 42, "Message",ExpressionUUID->"213fc6b3-44ee-4adf-85d7-e225bfd33ec5"],
Cell[CellGroupData[{
Cell[678208, 14255, 356, 9, 33, "Print",ExpressionUUID->"4a5456eb-1fe0-497e-9576-66e5a9e50d49"],
Cell[678567, 14266, 389, 9, 33, "Print",ExpressionUUID->"549576b7-229b-4ba1-972d-2348bcbea774"]
}, Open  ]],
Cell[678971, 14278, 466, 11, 42, "Message",ExpressionUUID->"21c3d358-dc22-45c6-838b-9149a4ea526a"],
Cell[679440, 14291, 508, 11, 42, "Message",ExpressionUUID->"225b4c3d-1b5f-4451-b6a2-f36d9601d278"],
Cell[CellGroupData[{
Cell[679973, 14306, 356, 9, 33, "Print",ExpressionUUID->"1583928f-6486-49c3-9264-2e7aa57954b7"],
Cell[680332, 14317, 388, 9, 33, "Print",ExpressionUUID->"5837f9cc-a220-491b-8177-2c4fe6dd7b26"],
Cell[680723, 14328, 437, 11, 57, "Print",ExpressionUUID->"c83cf3bf-3158-4f1a-affc-e8cab1565118"],
Cell[681163, 14341, 403, 10, 33, "Print",ExpressionUUID->"c567314e-3942-426e-b2c6-e74ae26579ef"]
}, Open  ]],
Cell[681581, 14354, 78955, 1405, 313, "Output",ExpressionUUID->"43504c43-f197-44aa-b865-2f91abfe78e8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[760585, 15765, 197, 3, 80, "Subsection",ExpressionUUID->"b464e18c-79d7-4626-91b5-860fe36810d2"],
Cell[760785, 15770, 10722, 298, 895, "Input",ExpressionUUID->"78579b75-f127-47b2-8fa5-c8f1e6e8418b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[771556, 16074, 278, 6, 106, "Section",ExpressionUUID->"ca28de38-e961-4a59-bd58-c5f545e91684"],
Cell[CellGroupData[{
Cell[771859, 16084, 291, 4, 80, "Subsection",ExpressionUUID->"d9271ff2-d137-4b8e-ab55-960ccfcbc370"],
Cell[772153, 16090, 6150, 116, 580, "Input",ExpressionUUID->"70d1aa85-bb91-4114-88b7-c9c00ca5537e"],
Cell[778306, 16208, 765, 17, 100, "Input",ExpressionUUID->"79ee67f8-5dae-4b65-8d31-6a6eb3359b45"],
Cell[CellGroupData[{
Cell[779096, 16229, 427, 10, 42, "Input",ExpressionUUID->"0e222575-b62b-4929-85de-4896faef13cf"],
Cell[779526, 16241, 14450, 363, 353, "Output",ExpressionUUID->"188aa874-27de-4955-81a7-94adebf46e86"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[794037, 16611, 329, 7, 106, "Section",ExpressionUUID->"61406ec8-6194-4a6e-87fe-11c6e69e71b8"],
Cell[794369, 16620, 7168, 131, 580, "Input",ExpressionUUID->"c0243094-1ab3-47dd-9666-1cc41d658619"],
Cell[CellGroupData[{
Cell[801562, 16755, 1192, 26, 157, "Input",ExpressionUUID->"f72fd471-ddb3-48c2-916d-9962d4c485e5"],
Cell[802757, 16783, 4406, 99, 294, "Output",ExpressionUUID->"6d3ea12b-e911-45d2-8cbe-af1d357da5f2"],
Cell[807166, 16884, 4979, 123, 238, "Output",ExpressionUUID->"3d0a5caf-791d-464d-9a8f-38fec2d013b8"],
Cell[812148, 17009, 5427, 142, 294, "Output",ExpressionUUID->"207b8f13-d65a-4482-9b45-bcfe77ac5880"],
Cell[817578, 17153, 5401, 142, 294, "Output",ExpressionUUID->"752ec303-8d06-45ed-92e3-9229e352483b"],
Cell[822982, 17297, 5357, 139, 294, "Output",ExpressionUUID->"2cf4d200-3d13-45bf-b975-0fb4ff3ca15c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[828376, 17441, 593, 12, 42, "Input",ExpressionUUID->"2981b7ba-90e5-406f-8849-120a9e61ff56"],
Cell[828972, 17455, 25646, 625, 353, "Output",ExpressionUUID->"bbda76f0-4f1b-4049-bb6e-2eb2af07a5ec"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[854667, 18086, 218, 3, 106, "Section",ExpressionUUID->"d4b294f2-e9f3-4630-85ef-216511cd56b0"],
Cell[854888, 18091, 6928, 162, 523, "Input",ExpressionUUID->"318ed81e-1971-4107-b548-43cc2fe9c527"],
Cell[CellGroupData[{
Cell[861841, 18257, 8104, 232, 499, "Input",ExpressionUUID->"02084527-fabf-4ad0-a1fe-44f3ffcfd921"],
Cell[869948, 18491, 667, 14, 33, "Print",ExpressionUUID->"a2a83e85-d48e-4609-98ad-cbd6d748642d"],
Cell[870618, 18507, 561, 12, 42, "Message",ExpressionUUID->"0abf0870-5c84-4099-be39-f9c620506284"],
Cell[871182, 18521, 840, 16, 42, "Message",ExpressionUUID->"a8d966a5-97c7-460b-b20f-9dc3237b0b4a"],
Cell[872025, 18539, 159689, 3001, 309, "Output",ExpressionUUID->"69f9d224-6a08-4494-a341-385da10a22cf"]
}, Open  ]],
Cell[1031729, 21543, 569, 10, 78, "Text",ExpressionUUID->"9719e215-e88a-44b4-8f52-1b89df776f4f"],
Cell[CellGroupData[{
Cell[1032323, 21557, 4414, 114, 356, "Input",ExpressionUUID->"d67ff24d-f62c-4bc7-8dfb-bc795242ee27"],
Cell[1036740, 21673, 595476, 9796, 580, "Output",ExpressionUUID->"d7ea4cd9-608c-4666-a6bd-ebb689985c41"]
}, Open  ]]
}, Open  ]]
}
]
*)

