(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1561182,      29675]
NotebookOptionsPosition[   1550793,      29502]
NotebookOutlinePosition[   1551196,      29518]
CellTagsIndexPosition[   1551153,      29515]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Function definitions", "Section",
 CellChangeTimes->{{3.867678969674955*^9, 3.8676789747553387`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"218715c9-e13d-4d05-9367-f46b46dc3c30"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix2", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_", ",", "nGrid_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "y", ",", "x", ",", "L", ",", "RHS", ",", "RHS2", ",", "xdot", ",", 
      "\[Theta]", ",", "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", 
      "soltn", ",", "Af", ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", 
      "R", ",", "Mf", ",", "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", 
      "sol2", ",", "t", ",", "sTable", ",", "s", ",", "time1", ",", "dT", ",",
       "time2"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "i_", "]"}], " ", ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          SubscriptBox["s", "i"]}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["s", "i"], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "i"], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            SubscriptBox["s", "i"]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}]}], "}"}]}]}], ";", 
     " ", "\n", 
     RowBox[{
      SubscriptBox["s", "0"], " ", "=", " ", "S0"}], ";", "\n", 
     RowBox[{"dT", " ", "=", " ", 
      RowBox[{"\[Tau]", "/", "nGrid"}]}], ";", "\n", 
     RowBox[{"sTable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["s", 
          RowBox[{"i", "+", "1"}]], " ", "=", " ", 
         RowBox[{
          SubscriptBox["s", "i"], " ", "+", " ", 
          RowBox[{"dT", "*", 
           RowBox[{"RHS", "[", "i", "]"}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "nGrid"}], "}"}]}], "]"}]}], ";", "\n", 
     "sTable"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"xState", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", 
     RowBox[{"x2dot", "=", 
      FractionBox[
       RowBox[{"u", "+", 
        RowBox[{"A", " ", 
         SuperscriptBox["\[Theta]dot", "2"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"A", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"\[Theta]2dot", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"u", "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"fx", "=", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", 
     RowBox[{"L", "=", 
      FractionBox[
       SuperscriptBox["u", "2"], "2"]}], ";", 
     RowBox[{"Af", "=", 
      TemplateBox[{"fx", "xState"},
       "Grad"]}], ";", 
     RowBox[{"Bf", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", "u"], "fx"}]}], ";", 
     RowBox[{"Q", "=", 
      TemplateBox[{
        TemplateBox[{"L", "xState"}, "Grad", SyntaxForm -> Del], "xState"},
       "Grad"]}], ";", 
     RowBox[{"Mf", "=", 
      TemplateBox[{
        RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"u"}]], "L"}], "xState"},
       "Grad"]}], ";", 
     RowBox[{"R", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]], "L"}]}], ";", 
     RowBox[{"S0", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"Transpose", "[", "Af", "]"}], ".", 
         RowBox[{"S", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"S", "[", "t", "]"}], ".", "Af"}], "-", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", "Bf", "]"}], ".", 
           RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"xdot", "\[Rule]", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]dot", "\[Rule]", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"u", "\[Rule]", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     RowBox[{"sol2", "=", 
      RowBox[{"S", "/.", "\[VeryThinSpace]", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["S", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "\[Equal]", "S0"}]}], "}"}], ",", 
         "S", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
     RowBox[{"S", "=", 
      RowBox[{
      "sol2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
   "]"}]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"CalculateGains2", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "sTable_", ",", 
     "nGrid_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "index", ",", "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", 
       ",", "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q",
        ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"index", " ", "=", " ", 
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], ",", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Tau]", "/", "nGrid"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", 
          RowBox[{"Indexed", "[", 
           RowBox[{"sTable", ",", 
            RowBox[{"1", "+", "index"}]}], "]"}]}], ")"}], "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateGains", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",",
        "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ffCartPendulum", "[", 
   RowBox[{"ICs_", ",", 
    RowBox[{"n_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Tau]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Tau]1_", "?", "NumericQ"}], ",", 
    RowBox[{"A_", "?", "NumericQ"}], ",", 
    RowBox[{"order_", "?", "NumericQ"}], ",", 
    RowBox[{"maxIter_", "?", "NumericQ"}], ",", 
    RowBox[{"maxError_", "?", "NumericQ"}], ",", 
    RowBox[{"uMax_", "?", "NumericQ"}], ",", 
    RowBox[{"maxCount_", "?", "NumericQ"}], ",", "initGuess_", ",", 
    RowBox[{"maxJ_", "?", "NumericQ"}]}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "frootNew", ",", "errorNew", ",", "InitGuess", ",", "J", ",", "S", ",", 
      "K", ",", "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", 
      ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
      "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
      ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
      "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
      ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
      "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
      ",", 
      RowBox[{"xGuess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["xGuess", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{"xdot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
             ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "\[Theta]dot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"A", " ", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                ")"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
             ")"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "0", ",", "\n", "\t", 
        RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", "A", "+", 
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Lambda]2"}], "+", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
              RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "A", " ", 
                  SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                 SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["A", "2"], " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
              RowBox[{"2", " ", "\[Lambda]4"}], "+", 
              RowBox[{
               SuperscriptBox["\[Lambda]4", "2"], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"2", " ", "A", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                 "-", "\[Lambda]4"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
              RowBox[{"A", " ", 
               RowBox[{"(", 
                RowBox[{"\[Lambda]2", "-", 
                 RowBox[{
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"A", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}],
         ",", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"4", " ", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"A", " ", "\[Theta]dot", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
         "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], "\n", 
     RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      StyleBox["xGuess",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["Table",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["If",
          FontWeight->"Plain"], 
         StyleBox["[",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"i", " ", "!=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]],
            FontWeight->"Plain"], 
           StyleBox[" ",
            FontWeight->"Plain"], 
           StyleBox["=",
            FontWeight->"Plain"], 
           StyleBox[" ",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "i"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["+",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"\[CapitalDelta]t", "*", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}],
             FontWeight->"Plain"]}]}], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "0"], " ", "=", " ", 
           RowBox[{"{", 
            StyleBox[
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}],
             FontWeight->"Plain"], 
            StyleBox["}",
             FontWeight->"Plain"]}]}]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "0"], "\[Equal]", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         SubscriptBox["xdot", "0"], "\[Equal]", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         SubscriptBox["x", "n"], "\[Equal]", 
         SubscriptBox["xdot", "n"], "\[Equal]", "0"}], ",", 
        RowBox[{
         SubscriptBox["\[Theta]", "0"], "\[Equal]", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         SubscriptBox["\[Theta]dot", "0"], "\[Equal]", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         SubscriptBox["\[Theta]dot", "n"], "\[Equal]", "0"}], ",", 
        RowBox[{
         SubscriptBox["\[Theta]", "n"], "\[Equal]", "\[Pi]"}]}], "}"}]}], ";", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "i"], ",", 
               SubscriptBox["xdot", "i"], ",", 
               SubscriptBox["\[Theta]", "i"], ",", 
               SubscriptBox["\[Theta]dot", "i"], ",", 
               SubscriptBox["\[Lambda]1", "i"], ",", 
               SubscriptBox["\[Lambda]2", "i"], ",", 
               SubscriptBox["\[Lambda]3", "i"], ",", 
               SubscriptBox["\[Lambda]4", "i"]}], "}"}], "\[Equal]", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                ")"}]}], "+", 
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["xdot", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Theta]", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Theta]dot", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]1", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]2", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]3", 
                 RowBox[{"i", "-", "1"}]], ",", 
                SubscriptBox["\[Lambda]4", 
                 RowBox[{"i", "-", "1"}]]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\n", "\n", 
     RowBox[{"sv", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["x", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["xdot", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Theta]", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Theta]dot", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]1", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]2", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]3", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[Lambda]4", "i"], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\n", "\[IndentingNewLine]", 
     RowBox[{"froot", "=", 
      RowBox[{"FindRoot", "[", 
       RowBox[{"eqns", ",", "sv", ",", 
        RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "n"], ",", 
               SubscriptBox["xdot", "n"], ",", 
               SubscriptBox["\[Theta]", "n"], ",", 
               SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "0"], ",", 
               SubscriptBox["xdot", "0"], ",", 
               SubscriptBox["\[Theta]", "0"], ",", 
               SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
             "ICs"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "i"], ",", 
                  SubscriptBox["xdot", "i"], ",", 
                  SubscriptBox["\[Theta]", "i"], ",", 
                  SubscriptBox["\[Theta]dot", "i"], ",", 
                  SubscriptBox["\[Lambda]1", "i"], ",", 
                  SubscriptBox["\[Lambda]2", "i"], ",", 
                  SubscriptBox["\[Lambda]3", "i"], ",", 
                  SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                  RowBox[{"{", 
                   RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
          "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", 
     RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";"}], 
      "*)"}], "\n", "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "i"], "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
     "\n", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
          " ", 
          RowBox[{"(", 
           RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
        " ", 
        RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
       RowBox[{
        RowBox[{"InitGuess", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         StyleBox["xGuess",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["=",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["Table",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           RowBox[{
            StyleBox["If",
             FontWeight->"Plain"], 
            StyleBox["[",
             FontWeight->"Plain"], 
            RowBox[{
             StyleBox[
              RowBox[{"i", " ", "!=", " ", 
               RowBox[{"-", "1"}]}],
              FontWeight->"Plain"], 
             StyleBox[",",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               SubscriptBox["xGuess", 
                RowBox[{"i", "+", "1"}]],
               FontWeight->"Plain"], 
              StyleBox[" ",
               FontWeight->"Plain"], 
              StyleBox["=",
               FontWeight->"Plain"], 
              StyleBox[" ",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "i"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["+",
                FontWeight->"Plain"], 
               StyleBox[
                RowBox[{"\[CapitalDelta]t", "*", 
                 RowBox[{"f", "[", 
                  SubscriptBox["xGuess", "i"], "]"}]}],
                FontWeight->"Plain"]}]}], 
             StyleBox[",",
              FontWeight->"Plain"], 
             RowBox[{
              SubscriptBox[
               StyleBox["xGuess",
                FontWeight->"Plain"], "0"], " ", "=", " ", 
              RowBox[{"{", 
               StyleBox[
                RowBox[{
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}],
                FontWeight->"Plain"], 
               StyleBox["}",
                FontWeight->"Plain"]}]}]}], 
            StyleBox["]",
             FontWeight->"Plain"]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           StyleBox[
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"n", "-", "1"}]}], "}"}],
            FontWeight->"Plain"]}], 
          StyleBox["]",
           FontWeight->"Plain"]}]}], 
        StyleBox[";",
         FontWeight->"Plain"], "\[IndentingNewLine]", 
        RowBox[{"sv", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["x", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["xdot", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["\[Theta]", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["\[Theta]dot", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
               "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["\[Lambda]1", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["\[Lambda]2", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["\[Lambda]3", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["\[Lambda]4", "i"], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"frootNew", "=", 
         RowBox[{"FindRoot", "[", 
          RowBox[{"eqns", ",", "sv", ",", 
           RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"errorNew", " ", "=", " ", 
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "n"], ",", 
                  SubscriptBox["xdot", "n"], ",", 
                  SubscriptBox["\[Theta]", "n"], ",", 
                  SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
               ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "0"], ",", 
                  SubscriptBox["xdot", "0"], ",", 
                  SubscriptBox["\[Theta]", "0"], ",", 
                  SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                "ICs"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Thread", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
             "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
          RowBox[{
           RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
           RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
           RowBox[{"uff0", "=", 
            RowBox[{"ListInterpolation", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}], "^", "2"}]}]}], 
                    ")"}]}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[Lambda]4", "i"], 
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
                    SubscriptBox["\[Lambda]2", "i"]}], ")"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
               " ", "froot"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
              RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
           "\n", 
           RowBox[{"J", " ", "=", " ", 
            RowBox[{"0.5", "*", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], 
           ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
        RowBox[{"count", " ", "=", " ", 
         RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Count Shooting= \>\"", ",", "count", ",", 
          "\"\<    Error New = \>\"", ",", "errorNew", ",", 
          "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}], "*)"}], 
      "\n", "\n", "]"}], ";", "\n", "\n", "\n", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["x", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["xdot", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Theta]dot", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]1", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]2", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]3", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]3", "i"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "i"], "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
     "\n", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"CalculateSMatrix", "[", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"K", "[", "time_", "]"}], " ", ":=", " ", 
      RowBox[{"CalculateGains", "[", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";",
      "\n", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}]}]}],
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum2", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_", ",", "initGuess_", ",", "maxJ_", ",", 
     StyleBox["nGrid_",
      FontWeight->"Plain"]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "time1", ",", "time2", ",", "sTable", ",", "frootNew", ",", "errorNew", 
       ",", "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", 
       "error", ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]",
        ",", "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", 
       "\[Lambda]3", ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", 
       ",", "eqns", ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", 
       "xff0", ",", "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",",
        "uff0", ",", "\n", "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", 
       ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", 
       "\[Lambda]4ff0", ",", "i", ",", 
       RowBox[{"xGuess", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       FractionBox["\[Tau]", "n"]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", 
        RowBox[{"xdot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"\[Lambda]4", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
         "\[Theta]dot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "\n", "0",
          ",", 
         RowBox[{"-", "\[Lambda]1"}], ",", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"A", " ", "\[Theta]dot", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{"\[Lambda]4", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}]], 
          "-", "\[Lambda]3"}]}], "}"}]}], ";", "\n", 
      RowBox[{"InitGuess", "=", "initGuess"}], ";", "\n", 
      RowBox[{"xGuess", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[NotEqual]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]], "=", 
            RowBox[{
             SubscriptBox["xGuess", "i"], "+", 
             RowBox[{"\[CapitalDelta]t", " ", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}]}]}], ",", "\n", 
           RowBox[{
            SubscriptBox["xGuess", "0"], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}]}], "}"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["xdot", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["x", "n"], "\[Equal]", 
          SubscriptBox["xdot", "n"], "\[Equal]", "0"}], ",", 
         RowBox[{
          SubscriptBox["\[Theta]", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["\[Theta]dot", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["\[Theta]dot", "n"], "\[Equal]", "0"}], ",", 
         RowBox[{
          SubscriptBox["\[Theta]", "n"], "\[Equal]", "\[Pi]"}]}], "}"}]}], 
      ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "i"], ",", 
                SubscriptBox["xdot", "i"], ",", 
                SubscriptBox["\[Theta]", "i"], ",", 
                SubscriptBox["\[Theta]dot", "i"], ",", 
                SubscriptBox["\[Lambda]1", "i"], ",", 
                SubscriptBox["\[Lambda]2", "i"], ",", 
                SubscriptBox["\[Lambda]3", "i"], ",", 
                SubscriptBox["\[Lambda]4", "i"]}], "}"}], "\[Equal]", 
              RowBox[{
               RowBox[{
                FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                 ")"}]}], "+", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["x", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["xdot", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Theta]", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Theta]dot", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]1", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]2", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]3", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]4", 
                  RowBox[{"i", "-", "1"}]]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["xdot", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Theta]", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Theta]dot", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]1", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]2", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]3", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
              "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time1", ",", "froot"}], "}"}], "=", 
       RowBox[{"Timing", "[", 
        RowBox[{"FindRoot", "[", 
         RowBox[{"eqns", ",", "sv", ",", 
          RowBox[{"MaxIterations", "\[Rule]", "maxIter"}]}], "]"}], "]"}]}], 
      ";", "\n", 
      RowBox[{"error", "=", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], "-", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], "-", "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "\[VeryThinSpace]", "froot"}], ",", 
         "\"\<Frobenius\>\""}], "]"}]}], ";", "\n", 
      RowBox[{"count", "=", "0"}], ";", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], " ", 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"J", "=", 
       RowBox[{"0.5", "*", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
      "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"error", ">", "maxError"}], "||", 
           RowBox[{"J", ">", "maxJ"}]}], ")"}], "&&", 
         RowBox[{"count", "\[LessEqual]", "maxCount"}]}], ",", "\n", 
        RowBox[{
         RowBox[{"InitGuess", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\n", 
         RowBox[{"xGuess", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[NotEqual]", 
               RowBox[{"-", "1"}]}], ",", 
              RowBox[{
               SubscriptBox["xGuess", 
                RowBox[{"i", "+", "1"}]], "=", 
               RowBox[{
                SubscriptBox["xGuess", "i"], "+", 
                RowBox[{"\[CapitalDelta]t", " ", 
                 RowBox[{"f", "[", 
                  SubscriptBox["xGuess", "i"], "]"}]}]}]}], ",", 
              RowBox[{
               SubscriptBox["xGuess", "0"], "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "4", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "4", 
                  "\[RightDoubleBracket]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
         RowBox[{"sv", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["xdot", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Theta]dot", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]1", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]2", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]3", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]4", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "\[Rule]", "maxIter"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"errorNew", "=", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], "-", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], "-", "ICs"}], 
                ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "\[VeryThinSpace]", "frootNew"}], ",", 
            "\"\<Frobenius\>\""}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", "\[LessEqual]", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", "=", "frootNew"}], ";", 
            RowBox[{"error", "=", "errorNew"}], ";", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[Lambda]4", "i"], " ", 
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
                    SubscriptBox["\[Lambda]2", "i"]}], 
                   RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                "\[VeryThinSpace]", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], 
            ";", "\n", 
            RowBox[{"J", "=", 
             RowBox[{"0.5", "*", 
              RowBox[{"NIntegrate", "[", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], 
            ";"}], ",", "_"}], "]"}], ";", "\n", 
         RowBox[{"count", "=", 
          RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}], "*)"}], 
       "\n", "]"}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["x", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["xdot", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Theta]dot", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Lambda]1ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]1", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Lambda]2ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]2", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Lambda]3ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]3", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Lambda]4ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]3", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], " ", 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", "=", 
       RowBox[{"0.5", "*", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
      "\n", 
      RowBox[{"sTable", "=", 
       RowBox[{"CalculateSMatrix2", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A", ",", "nGrid"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"K", "[", "time_", "]"}], ":=", 
       RowBox[{"CalculateGains2", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "sTable", ",", 
         "nGrid"}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["xdot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]dot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"uff0", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
        "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"0.5", "*", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", 
      RowBox[{"\[Kappa]3", "=", 
       RowBox[{"-", "0.1`"}]}], ";", 
      RowBox[{"\[Kappa]4", "=", 
       RowBox[{"-", "0.65`"}]}], ";", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["xdot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]dot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
        "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
            "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"0.5", "*", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"us", "[", "t", "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFBClipped", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "uBound_", ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", 
      RowBox[{"\[Kappa]3", "=", 
       RowBox[{"-", "0.1`"}]}], ";", 
      RowBox[{"\[Kappa]4", "=", 
       RowBox[{"-", "0.65`"}]}], ";", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff", "[", "t", "]"}], "+", 
          RowBox[{"ufb", "[", "t", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["xdot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]dot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
        "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff", "[", "t", "]"}], "+", 
          RowBox[{"Piecewise", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"K", "[", "t", "]"}], ".", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"xff", "[", "t", "]"}], "-", 
                   RowBox[{"xs", "[", "t", "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"xdotff", "[", "t", "]"}], "-", 
                   RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
               RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}],
               "}"}], "}"}], ",", 
            RowBox[{
             RowBox[{"\[Kappa]1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
             RowBox[{"\[Kappa]2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
             RowBox[{"\[Kappa]3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
             RowBox[{"\[Kappa]4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"0.5", "*", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"us", "[", "t", "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.865967298267394*^9, 3.8659673001198*^9}, {
   3.866571893798601*^9, 3.866571940716648*^9}, {3.8665719967138014`*^9, 
   3.86657200493918*^9}, 3.8665721461421776`*^9, {3.8665731331726017`*^9, 
   3.8665731928485823`*^9}, {3.866573291140256*^9, 3.8665733048578844`*^9}, {
   3.866573636752106*^9, 3.866573657335546*^9}, {3.86657481838451*^9, 
   3.8665748273656473`*^9}, {3.866574870351947*^9, 3.8665748910333557`*^9}, {
   3.8665788373566265`*^9, 3.8665788400997524`*^9}, {3.866579031902623*^9, 
   3.8665790413156233`*^9}, {3.8665801062232275`*^9, 3.866580141002143*^9}, {
   3.866664127693946*^9, 3.8666641298202667`*^9}, {3.8667356182927976`*^9, 
   3.86673568611979*^9}, {3.866735735976613*^9, 3.866735746106326*^9}, {
   3.8667357917795067`*^9, 3.8667357922973385`*^9}, {3.8667369179510965`*^9, 
   3.8667371366351404`*^9}, {3.866737410171386*^9, 3.8667375163569317`*^9}, {
   3.866737646330759*^9, 3.8667376465136995`*^9}, {3.8667376988837075`*^9, 
   3.8667377777961025`*^9}, {3.8667386986753044`*^9, 
   3.8667387105614476`*^9}, {3.8667389141044035`*^9, 
   3.8667389332601886`*^9}, {3.8667389783395615`*^9, 
   3.8667389806728044`*^9}, {3.866739043478426*^9, 3.8667390512579017`*^9}, {
   3.8667390870272956`*^9, 3.8667391318757434`*^9}, {3.86674040926027*^9, 
   3.8667404968818393`*^9}, 3.866740531578581*^9, {3.8667406439541187`*^9, 
   3.866740650558975*^9}, {3.8667406893863773`*^9, 3.866740713276625*^9}, {
   3.8673532212089357`*^9, 3.867353262241763*^9}, {3.8673533765330715`*^9, 
   3.8673533879534054`*^9}, {3.867353479603982*^9, 3.867353730198533*^9}, {
   3.8673537746842513`*^9, 3.867353800998803*^9}, {3.8674250653573227`*^9, 
   3.867425103219036*^9}, {3.867425211775809*^9, 3.867425260810897*^9}, {
   3.86742535854918*^9, 3.8674253968377547`*^9}, {3.8674265266621175`*^9, 
   3.8674266199138565`*^9}, {3.8674271804199677`*^9, 
   3.8674271965717263`*^9}, {3.867427267981553*^9, 3.8674273052754507`*^9}, {
   3.8674273491782045`*^9, 3.867427384921605*^9}, {3.867427420566038*^9, 
   3.8674275576965384`*^9}, 3.867427676198084*^9, {3.8674281649544783`*^9, 
   3.867428175713987*^9}, {3.8674282062290845`*^9, 3.8674282201715593`*^9}, {
   3.8674282835409956`*^9, 3.8674283269169197`*^9}, {3.867428359760262*^9, 
   3.8674283772535853`*^9}, {3.8674284114824777`*^9, 3.867428418922064*^9}, {
   3.8675202937626505`*^9, 3.8675202960968914`*^9}, {3.8675203413861585`*^9, 
   3.8675205018799486`*^9}, 3.8676789938102727`*^9, {3.867780002056323*^9, 
   3.8677800113232975`*^9}, {3.867780053106656*^9, 3.8677801854064646`*^9}, {
   3.8677803657595863`*^9, 3.867780435219909*^9}},
 FontWeight->"Plain",
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[285]:=",ExpressionUUID->"930db826-3cbc-4bb3-97a6-3a010efa3e76"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Feed Forward solution with feedback for any initial condition ( unconstrained)\
\>", "Section",
 CellChangeTimes->{{3.8676786482972174`*^9, 3.8676786887393475`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a964257c-e879-4ee8-960c-c24d2796eb82"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"n", "=", "20"}], ";", 
    RowBox[{"\[Tau]", "=", "5"}], ";", 
    RowBox[{"\[Tau]1", "=", 
     RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
    RowBox[{"A", "=", "0.2"}], ";", 
    RowBox[{"order", " ", "=", " ", "4"}], ";", 
    RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
    RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
    RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
    RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
    RowBox[{"nGrid", " ", "=", " ", "60"}], ";", 
    RowBox[{"maxJ", " ", "=", " ", 
     RowBox[{
      RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ICs = \>\"", ",", "ICs"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Energy Initial = \>\"", ",", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time1", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K1"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ"}], "]"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time2", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a2", ",", "xdot1a2", ",", "\[Theta]1a2", ",", "\[Theta]dot1a2", 
         ",", "u1a2", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K2"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum2", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
      "u1b", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K1"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a2", ",", "xdot1a2", ",", 
      "\[Theta]1a2", ",", "\[Theta]dot1a2", ",", "u1a2", ",", "A", ",", 
      "uMax", ",", "K2"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ff computation time case 1 = \>\"", ",", "time1"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ff computation time case 2 = \>\"", ",", "time2"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution 1\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   StyleBox["p1a2",
    FontWeight->"Plain"], " ", "=", " ", 
   StyleBox[
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a2", "[", "t", "]"}], ",", 
        RowBox[{"u1a2", "[", "t", "]"}], ",", 
        RowBox[{"x1a2", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a2", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a2", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution 2\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}],
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1b", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<feedback solution with backward integration \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<feedback solution with discrete integrator\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1a", ",", "p1a2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p1b", ",", "p1c"}], "}"}]}], "}"}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}, {3.8648376392630434`*^9, 
   3.8648376724073963`*^9}, {3.864837714278944*^9, 3.864837730198832*^9}, {
   3.8648378000064077`*^9, 3.8648378125593743`*^9}, {3.8649192769420185`*^9, 
   3.8649193477849746`*^9}, {3.864919494855133*^9, 3.8649194949211097`*^9}, {
   3.8649195280303416`*^9, 3.8649195281572976`*^9}, {3.8653430179727*^9, 
   3.865343036098905*^9}, 3.865343126059147*^9, {3.8653475497269955`*^9, 
   3.8653475530049467`*^9}, {3.8653477236523952`*^9, 3.865347782090714*^9}, {
   3.8653478250659747`*^9, 3.8653479145413723`*^9}, {3.865347947982681*^9, 
   3.8653479716121283`*^9}, {3.8653525506493053`*^9, 3.865352599733616*^9}, {
   3.865352652578721*^9, 3.865352654559091*^9}, {3.865353691929463*^9, 
   3.8653537130737047`*^9}, {3.8653538376038947`*^9, 
   3.8653538378768077`*^9}, {3.86535394844846*^9, 3.8653539491322412`*^9}, {
   3.865356726928239*^9, 3.86535675400958*^9}, {3.8653568966909695`*^9, 
   3.8653569073245697`*^9}, {3.8653569602766423`*^9, 3.865356975731701*^9}, {
   3.865357167158506*^9, 3.865357170606405*^9}, {3.865357223946353*^9, 
   3.8653572240363226`*^9}, {3.8653573936860905`*^9, 3.8653574653461814`*^9}, 
   3.8653581484318137`*^9, {3.8653592129605074`*^9, 3.86535921807887*^9}, {
   3.865449250153057*^9, 3.8654493036779404`*^9}, {3.8659655743007927`*^9, 
   3.8659655800469513`*^9}, {3.865965617846839*^9, 3.865965644481305*^9}, {
   3.865965768794471*^9, 3.8659657912472773`*^9}, {3.865965935003215*^9, 
   3.865965935326112*^9}, {3.8659659868356075`*^9, 3.865966006077441*^9}, 
   3.865966083507631*^9, 3.8659664582355595`*^9, {3.86596655432277*^9, 
   3.865966563962682*^9}, 3.8659666064800587`*^9, {3.8659666379409776`*^9, 
   3.865966662002268*^9}, {3.865966724901114*^9, 3.865966734984883*^9}, {
   3.8659667752089934`*^9, 3.8659667994792185`*^9}, {3.8659670983784432`*^9, 
   3.865967114308339*^9}, {3.865967415398863*^9, 3.865967415558814*^9}, 
   3.86596806058513*^9, {3.8659697572814713`*^9, 3.865969792480193*^9}, {
   3.865969847631523*^9, 3.8659698777298765`*^9}, {3.8659699125237284`*^9, 
   3.8659699227194633`*^9}, {3.8660520784155097`*^9, 3.866052078606448*^9}, {
   3.866299038992057*^9, 3.866299063807024*^9}, {3.8662991135359306`*^9, 
   3.866299117442664*^9}, {3.866299188589633*^9, 3.86629919001517*^9}, {
   3.866299354438949*^9, 3.866299364496692*^9}, 3.8662994378149586`*^9, 
   3.8662994758636427`*^9, 3.8662995455700784`*^9, {3.866309716236847*^9, 
   3.86630980613275*^9}, {3.8663098363239756`*^9, 3.8663098541502047`*^9}, 
   3.8663105182622347`*^9, 3.866310619892336*^9, 3.8663117939323*^9, {
   3.8665656447826576`*^9, 3.8665656490393023`*^9}, {3.86666037409522*^9, 
   3.8666605929433*^9}, {3.8666606653571625`*^9, 3.8666608053664308`*^9}, {
   3.866660839553507*^9, 3.8666608737455826`*^9}, {3.866661162186427*^9, 
   3.8666611737737226`*^9}, {3.8666653738348045`*^9, 3.866665397429268*^9}, {
   3.8667344208606143`*^9, 3.8667344797394304`*^9}, {3.8667353231215725`*^9, 
   3.866735333097335*^9}, {3.866735385339385*^9, 3.866735418014782*^9}, {
   3.866735702678417*^9, 3.8667357070869875`*^9}, {3.8667358235761895`*^9, 
   3.86673582400605*^9}, {3.866735896269603*^9, 3.866735924112569*^9}, {
   3.8667361218833976`*^9, 3.8667361220503435`*^9}, {3.866737159880598*^9, 
   3.8667371629755936`*^9}, 3.8667373705322485`*^9, {3.8667375563659506`*^9, 
   3.8667375763234744`*^9}, 3.866739987559099*^9, {3.8667402825863724`*^9, 
   3.866740283643031*^9}, {3.8667403886539574`*^9, 3.8667403924007425`*^9}, {
   3.8667405674789343`*^9, 3.8667405865157566`*^9}, {3.8667407977972016`*^9, 
   3.866740821291578*^9}, {3.8671630011884055`*^9, 3.867163020098357*^9}, {
   3.867352977485181*^9, 3.8673529973358107`*^9}, {3.8673530973936853`*^9, 
   3.8673531264093695`*^9}, {3.8673532479253597`*^9, 
   3.8673532480693145`*^9}, {3.867353394522298*^9, 3.867353424387709*^9}, {
   3.8673538177504263`*^9, 3.867353991042793*^9}, {3.86735409649494*^9, 
   3.867354178349663*^9}, {3.8673553380933447`*^9, 3.8673553396948304`*^9}, {
   3.867423858690897*^9, 3.8674239583605523`*^9}, 3.867424003139022*^9, {
   3.867424050904522*^9, 3.867424125774227*^9}, {3.8674241562363405`*^9, 
   3.8674242324536085`*^9}, {3.8674242665505433`*^9, 
   3.8674242818535786`*^9}, {3.867424314162092*^9, 3.8674243698710146`*^9}, {
   3.867424420135703*^9, 3.8674244202186756`*^9}, {3.867424456268978*^9, 
   3.8674244741041913`*^9}, 3.8674246173657007`*^9, {3.8674246693478317`*^9, 
   3.8674246877288685`*^9}, {3.8674247403247986`*^9, 
   3.8674247408206377`*^9}, {3.8674247893518896`*^9, 
   3.8674248932321787`*^9}, {3.867425936549614*^9, 3.867426049116087*^9}, 
   3.8674261141789722`*^9, {3.867426149856395*^9, 3.8674261956245418`*^9}, {
   3.8674262312599783`*^9, 3.867426231496904*^9}, {3.867426262045988*^9, 
   3.8674262624308643`*^9}, {3.8674263520347853`*^9, 
   3.8674263565563188`*^9}, {3.8676860111383543`*^9, 3.8676860173133893`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[297]:=",ExpressionUUID->"cdb5bb39-2bd5-427d-9b7c-b452e9e4ae48"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ICs = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["ICs = ", {0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8676786240369353`*^9, {3.8676860011365366`*^9, 3.867686017550314*^9}, 
   3.8676865665926085`*^9, 3.867868708103756*^9},
 CellLabel->
  "During evaluation of \
In[297]:=",ExpressionUUID->"28fbc5ad-fb91-4c01-8ae6-3b49e03f901a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy Initial = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2`"}]}],
  SequenceForm["Energy Initial = ", -0.2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8676786240369353`*^9, {3.8676860011365366`*^9, 3.867686017550314*^9}, 
   3.8676865665926085`*^9, 3.867868708108754*^9},
 CellLabel->
  "During evaluation of \
In[297]:=",ExpressionUUID->"810ffd22-7eae-4d17-89c4-033dffb5b92b"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 316, 56, 
   17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.867678626146264*^9, {3.8676860031389*^9, 3.8676860195846667`*^9}, 
   3.8676865686289606`*^9, 3.8678687102890606`*^9},
 CellLabel->
  "During evaluation of \
In[297]:=",ExpressionUUID->"254f2cbc-ead5-4c92-9634-d94e1882f850"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$181358\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$181358\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"2.294844166797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.445415386059924`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.0014733461967489678`\\\"}]\\) for the integral and \
error estimates.\"", 2, 316, 57, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.867678626146264*^9, {3.8676860031389*^9, 3.8676860195846667`*^9}, 
   3.8676865686289606`*^9, 3.8678687103500414`*^9},
 CellLabel->
  "During evaluation of \
In[297]:=",ExpressionUUID->"aafdf780-7871-428d-a1b2-feb60e9c7a36"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ff computation time case 1 = \"\>", "\[InvisibleSpace]", 
   "0.640625`"}],
  SequenceForm["ff computation time case 1 = ", 0.640625],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8676786240369353`*^9, {3.8676860011365366`*^9, 3.867686017550314*^9}, 
   3.8676865665926085`*^9, 3.8678687103770328`*^9},
 CellLabel->
  "During evaluation of \
In[297]:=",ExpressionUUID->"5bb7db27-6761-4f1a-af02-ad9101e5c6ad"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ff computation time case 2 = \"\>", "\[InvisibleSpace]", 
   "0.328125`"}],
  SequenceForm["ff computation time case 2 = ", 0.328125],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8676786240369353`*^9, {3.8676860011365366`*^9, 3.867686017550314*^9}, 
   3.8676865665926085`*^9, 3.867868710380032*^9},
 CellLabel->
  "During evaluation of \
In[297]:=",ExpressionUUID->"449abca9-a916-4eff-9a88-d05c93b1ae41"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
8EwsVo9xPt3M6rsrVEQofu+aLbKunwBZLMv3Ktj1kQ18W+85RIShjlEn7M7M
Icti1i/BFWS4i75yLuYwExS9unw5PZkApSbOr+HuZ6F7hqzNfr/IMGT/Secg
YyaI2z317pECEXZOLlCjReYRx7SAe4w5GVY7Zx47g+1fGyuc/ZhFZJhqtCEm
Fts/cV7ta978+v0eYvH6nyctzvIQ4bNdjjWfsPne2hGo2LybDCPcXLvWmTLB
dn7x0oFKAlSTfurtzDOPJBMesep0iHBft5DA6WkWahZ59MnSjwyN0kJWnsfq
3fLXC8efzS3ND86z+fY5SJoIEaG/fnZKo3MrcNmd+gpW9AKDjruvpFb3AJ/V
rtNpBc2Aed/jU9dpGlDN79gk6vME4Hw7Uq7sd+OFSjbfPtdb/27rix9snn34
qADdFS7xbNfEt/6sezQ2z77lGvbIR5fO5tlJnX/P2y7+ZfPsjOp0lfGUMTbP
Nl1cp113ZIrNsxeTuCaHLRhsnl1jbBVsZMxCOaaVHG1HibCiWLpGms5CmVL1
bjcsOGB6Ts++/YxZNKwo/SXjLCeMP0uLqD09hqrazle9cOaCmiJ/KPW27ci5
MdzqrDc3PJ4waqce0QBOr1r4lXyVByZG/FBOpg+AXrtPtV53eGE4V3NeQPYE
qCo6te5KIAmmNc1CzvQZYKrTX9N6gw9ulpCXOP+ZAaKqqn6X3ifD2b8KxH94
hNCLPz177vHDoKqevwl9DLBeUijU9akAFOfTzD59Eevvfog1uL8ShPcPHv3e
qjANtvSZzHLFC8GuTuOJQbMJwJwaCZf5IAwzeNWXuW8fATiPL7SPYar8mUU4
j/9ETsgvcCEUz6Y/CaVZLtUn0fMOn557LN0POpn3W1ROdoIVyn4GMKIbQGOt
x/y7sf6+ZCH6YU85eE+5OZ9r1Afu/zzDs80vl83vZVbNmwtLNbB5fGlX+aVV
en1svp7JtfeX8KUZtLiSS37zy0VgTT74YgWDifarhYMXTQToG7gjKl9oHnVY
z50waiXCvt0OEzqv5hBPi/SZoS4OKC94f1jbfwpJv/9r1jrLDfvXVR9TnKcA
nYsCozkLWD+gXbZrLGkUcF7sdr/JTYJ7XGQfQAL2PJRXtpVF4IOXhPn17Ptn
QdwH3rExLqx+025zfML6edKfhec/+Pih5DMut5cHmKBia1NGj4gApF45q5C8
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
PUk=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{901, 2748, 2746, 422, 423, 424, 425, 812, 708, 
                622, 552, 499, 466, 834, 730, 644, 574, 520, 851, 747, 661, 
                591, 426, 813, 709, 623, 871, 767, 553, 857, 753, 892, 667, 
                880, 776}}], 
               PolygonBox[CompressedData["
1:eJwV0slLVWEYB+Bj0sKMypyHzP6BBoeGpUGBRQWBlWWTEBSREY0mGRQ0WalN
uigocFfZYMO1eV40u6zUJoeVLRIabHy+xcPvfX/fOfdyzz3jKtbPrxwSRVEc
7bQNi6IYI5RvlDHy46PoqX0T4/mh20+y/qy9lJG81bVRoH9m38wEfuoOkKI/
Z1/AKN7pblDLQVKdn9cvJIkO3U0OkeasRbeI0XTqblGof27fwkQGdYdJ11+w
l5FMl+42dWQ4u6hbTArvdXeoJ9PZJd0SUvmgu0sDWc4u68pJ46PuHkX6F/at
TOKX7gjZ+lb7UtL5pLvPZP1L+zby+a2bo+sx11HCUV2O7op5GRnhOdv7ZSOf
nc+wd5r3stYcT3G4Xn6TNfK03CgTeeCeKfJV+G5ZJVfLiF0UhGciv8od8qTc
IBPYwx/3z5W9+ipZL9fJoexmlr1CDsqdsjm8M3I4x9w7Rl7VLWdV+DyZGd4H
8xfZRLfrZtq7zPuYHq63f5dneOh8qv21eTtrzHEUhv9MDshT/HXdPHufuYHZ
HNfl6q6ZV5BFj+4R0/Tt9mqK+Kc7wVj9dftKsunVPaaRPGex8JvJoU/3hP9P
hmz4
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{387, 2747, 2744, 596, 682, 786, 392, 503, 557, 
                627, 713, 817, 439, 472, 525, 595, 681, 785, 391, 502, 556, 
                626, 712, 816, 438, 471, 524, 594, 680, 784, 390, 389, 388, 
                437, 470, 523, 593, 679, 783}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVWEABuDj1QyEfkLDda72VtokaZaZlBtbFKSWlppCEIGV2gBR6SZd
pFaW5Y/QJrXABm2wyVZNG7VBjYIiiJ5v8fC+33vuwDn3xisbyxpiURQl8ICB
lCgapN9wkxu84AdZXniI+6xMjKI+23PmybTVM8IK167bnjFHhq2OYZa7ds22
UF/Had6Rb39qnyXduZYhsu29tmR9LaeYZKN93F6kt/OZbbbvtjT9IPfIsl21
leqdzFBmWyB7+cUe5zx5krdscB4L967/ocJ5s0yS9bTpnyjWv4V7kY10247J
OblLpobPlP9ktTwgj8q7MlNe8d6zchFH6Le3yr+ySm6XZ2QyDXQ4N8lpuVMm
yRR5ONyj/pPdeq6MyVpa9Tes15/4vj79N3udC+UFPrLV+avrXfos5c5xWcMd
Mpwvu16iX2SKHbZEuYYWXoff1PbY6wr083xgi+2LbVl4Dtwm3dZji+mraeZV
+I3tj+yb9HO8p8g2Y1uq7+cWaeF52xL0VZzgJXn2h/ZpljjvY5BUe1f4k+s5
HGeCXPuofYrF4bkzQNx+yfYftkRk1Q==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03ecz3UcwPHL3tzZ2xmHqBRJRpnhKCESJTMJnWwyKntUPDSMJqFklJHd
IDsNIqOByMgolArl+X48+uN5r/fnfb/73fe+v+8ld0lr9eQNCQkJfX2JlvZl
n8Zypj6qeRlCT+eWmpH+bHPuoUUZThPnBnpZn9K12lULMsncXnPxjbmXlqSq
+XY9pYsYTlvnbOyKn6GZ+T/dyHTSUcbuO53FEzSlod1fuo7JVKO63WldzAg6
kJ6y9vt1dlwLqXEdZCAjmchMOa87oK/RO64l3pM77H/VJYzkYbKQYn9QX6cP
zeO11LA/o0sZxSNkpbz9IX0j7jn3xmu50/6sfsAzdCQbFey/1zdJ4z4a2f2t
65kSP0tNu3P6Ic/yoHN2vozPNK4rPmw2yUtx/eY87DFnp6L5B32LTuZ89DW3
0kxsNz+uxWhhvkf/0X66QbtpIZ7m+bjvmptB7I57qaUYSU3nWnr+/+dwmXbR
AgzjOed2moOBfBWfuZagU9yzeHb53NxdC/Ny3GNN5FtzDm40/6hvx/NJa+fM
7DDfT2PzFf2YF+KaqG33my5nNJ3jntulY7P5FXJSyfknnRP3IP5PaGJ3VT/h
xXgv6tj9risYE38nuahsf1jn0j/uc7yWu+wv6ErG0pXc3GR/RN9hQPwt8Vru
tr+oHzEuPgfycLP9UZ3HQB6I15LILb73s85nEG2oSxJ5yUd+ClCQQhSmCEUp
RnFKUJJSJFOaMpSlit9xTBcwmLbUoxy3+t5xfZch8axSP67B/pKuYnx8tqRw
m/0v+h5D49mgqd01/ZSpNIj3t/tDVzOBx2hhl54t5lcpT1XnE7qQYXFvnLOw
0/wQqeZ/9TOm0TCuz+5PXcPEeJ1zTr4294jnyZyBrfF7tQgzzB01icHsde6j
yYyignM1Palp+n48b5qfofG/FJ+NZmUAXzj31OKM4DoBYZ5S
               "]], 
              
              LineBox[{146, 69, 104, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$181496#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jnUcBuDXkZGRvfemKHtTFELI0aDS0FJCKZV2jj0yi4wyM9oDxyaU
vSqr7Owyyyy6vp/+uM79+96/53nPeZ9xSnTqntwtTSKR2OVHCtnSJhIzkhKJ
tmRmm24OfehLP7I7Zqa9ZLKwXTeXyvrV5h5U5LyuPzn0s8ztyMoO3Tyq6NeY
X6QSF3QDyKmfbb6H1EyJxA1ypz6VqvbWml/iZi7qBpJL/6n5XrIl/f995lNN
v87ck1u4pBtEbv1n5vvIzq+6BQxmCHnsf66/nxz8plvIUPLa+0LXnpzs1i2i
un69+WUqc1n3Hvn0X5o7kIs9usUMI7+9r3QPkJu9uiUMp4C9r3UPkod9uqWM
oKC9b3QPkZf9umXU0G8wv0IVruhGUkj/rbkj+TigW05N/Ubzq1TlH10r3SHr
YTRnlK6w7jvrh8kf19n8pxzDQftNzLut+9PFOi2N4nh5Xr4lJ8W9lpn53jm1
5Kb43bKX7CwT9KZaXBN5Vr4pJ8gX5PX041/nt5aH9b3kcNlVpiOFFuZO8rJ8
W06LZ0ZmYbRzi8g5ukd4Mj5PFojnwfqkHMvvjmtq3mM9gMZxvPmCnMwK+7XN
m61f4xnrNFSPeybPyYlcdVwb8xHrEbTkfV1R3VzrRynIId1K6ui3mF+nBtd0
H1BMP8/8GIU4rFvFGIrbS43vTGGO6H6Id8D7M1aWsD9f/zhFOKr7kbr6reY3
qEmCD/Ul9Qusn6Aox3Srqaf/Ke4JtUjDOH0p/cK4lhTjuK6Zbq/1QG5nja6+
7ud4HqhNEuP1pfWLrJ+iOCd0d+r2WQ/iDtbqGuh+iXtKHdJyt+6oHMldTHBc
Gd1i66cpEe+x+VR8N/6w39y833owTeIemC/KKayz39C8zfodnrVOom68b/Iv
+RE9rDNxnXVbeSyeAzlKdpPp6UOruO7ySnyenC57yqz0Z6LfV1YuifdWdo7r
IK/Kd2VJ2V6ejmdCjpPdZYZ4B53bQh7QDeG5+HtoGs+JvCSnst5xt5q3x2dS
j47mv+XHpCPZfFyOpnV8R+eU0y2NZ5tSnNS11B20HkozNuhu0+2w7k190sfn
6svrl8U1pDSndBtppN9pTqEBGZikr6Bfbt2FMpzWbWIyN8b/jfiOlOWMbjNT
uMneCl1XynFWt4WpTGN6/H/3LnwiZzCTWVR03sq4X5TnnG4rjfW7zH1oSEba
6U7Eu0sbZjuukm5V3I941qyvyQp0sD4T75UcL5+XGenLfzCQ8T8=
               "]], 
              
              LineBox[{844, 740, 654, 584, 467, 835, 731, 645, 575, 521, 427, 
               814, 710, 624, 554, 500, 468, 428, 429, 430, 431, 432, 433, 
               434, 435, 815, 711, 625, 555, 501, 469, 836, 732, 646, 576, 
               522, 852, 748, 662, 592, 868, 764, 678, 886, 782, 904, 436}]}, 
             Annotation[#, "Charting`Private`Tag$181496#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUYBdADl1ZJpUNaQRpplEZBGqSV7hDFxsLAQDokpLvBQEWlW0Cl
DFIBpfNRBEHX+2M97/72fHPPuXNmJn+Xgc0HJEskEknJE4nhSYlEiZSJxOcp
EonZZmvzA/MeVnKX9XNmgkXMtP7ILBDn8KvzO5mn9fPN983RZi5qyEPNO1kq
f2wW5VvnNDD36gZTjFesU7NA/tvxfvJf8kQa8aGupG613Ib0HNJ11p2J70xN
1uoa6vbJz1Kc67oRlNJ/Yd2WDBzWrWMkoxjNGMYyjtL2f2lfOzJyRLee8ZRx
7CtdezJxVLeBx/T745rxAP/oJlBWv8a6A5k5pttII/0B6+cpwQ3dRMrpv7bu
SBaO67rozsrDqcUmXWPdQfkFSnJT11/3d/xONI6pK6/7Rn6Cu+PzrJMxS/7N
8a7yubjOjJFzU1t+M+4Blsmb7Wsi/yS/yEg5B6XkV800LGGh9RSzcFxv/nXe
APO6foE5yRxv5uNTmlgPMzPF57DKerp5f1zj2O/8B+O+0c8xn4xrYGaN+zT+
dzM5s+VJZkF+d04387xuBGPlPNSR3zLTs1zeYl9T+Wf5JUpzSzdQ9488maYx
dRV0a+VOZOWErrvuQlwL6rJV10z3i/wyZbitm0JF/TrrzmTjpG4bzeM5sh5C
Wf7TTaWSfr11F7JzSredFvpD8cxQjkQ8W/rK+g1yV3Lwh24H05jODGYyiyr2
brSnGzn5U7eT2VR1bJOuO7k4rfuOlvrD8VtTnmTxe+ir6TfLPcjNGd0uWumP
WL/GgyRnrr66fovckzyc1fXQXZRHUY/dusd1R+XXqUAS8/QP6bfKvcjLOV1P
3SV5NPXZo2utOya/QcX4HtZp4z0mp+Ap+UbcqzRjvnMe1m2Te5Mv7nPrJObI
5x3vJV+OZ4Rxcl4ekd82M7BCnmbex/f2tzGPx/c2h8b/Z+bkEyrF/2ami/cj
i62nmkXivUNK60HmTXOhOdWcYN7LZzS3ftfMHPdy/E3rGWaxeI/67Brmdl2f
eK7lbHFu3OdmCubKF+zrLV+JZ4RHecc6IyvlHxxvK/8W7wIqk4qn47mO+44W
8f3sq6nbIfclPxd1fXRX41rRgB917eL5jOeQKqRmkb6WfqfcjwJc0u1lMbUd
+07Xn4Jc1u1jCUtZxnJWUMfeXfYMoBBXdPtprz8RvxVVScNKfV39bnkghbmq
O0AH/cm4HlQjLc/obsVvTEtW2VdPtyfuJ4rEcx+/HfPka473la/J42nIQV1H
3Sl5GNXjHrW+I96fcjoGy7fN6UyU89NKfs/MEvdZvDutZ5rFWRO/v79bP+67
eM7MQeYIM3u8UylqPcRMFfca860nm4VYzf8lrQ4i
               "]], 
              
              LineBox[{1269, 1174, 1100, 984, 1374, 1255, 1160, 1086, 1035, 
               948, 1352, 1233, 1138, 1064, 1013, 985, 949, 950, 951, 952, 
               953, 954, 955, 956, 1353, 1234, 1139, 1065, 1014, 986, 1375, 
               1256, 1161, 1087, 1036, 1397, 1279, 1184, 1110, 1418, 1300, 
               1205, 1442, 1324, 1468, 957}]}, 
             Annotation[#, "Charting`Private`Tag$181496#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8zlUYxvHH3mTvsiMzMxQKEZUtIWUUSkZGoaGsSslIJUQhIyNCGdmU
WZS9s0MhZKR63398Xtd13ed8f9/nOefc5/kV7NCjafckiURiQNJEYnWKRGJR
qkTiLsxImUg8jqy4rL5LrRZ+lHugAtaoL1YrgJlyI2TDX+q71R7EJrknKmKt
+hK1gpglN0Z2XJTb4Dj/Lq6Yt0d+CJvlXqiEROpEopvaFX4C1pn3rVwIs+Um
SG/OK3ICOeRLtC1O8CNw1TN75drYIr8Un9kzg+TUqCwnkV/kr/L38dP4iXxh
/gM+J+ryC+izdL2/+R1fGPXlr8wtST+WW9GmcgbaX25Mk9DqdAZ9huaMNeaf
wqPyyVgvOiU+O31Pzk/fkZvTzLE2dB695t37aB1sNa+c+kS+d6wt/yafBlXk
pHL3eIafhCLyKDkXNvg7S2kRzDHWDLliL+V2OMW/j7/N2x/fH9vkPrFG2Ki+
TK0o5srNkRvX1X/AcvVimKfWAnlwQ/1HbMJmbMFWbMN2/ISfscJzd2O+Z1oi
L26qH1B7GNvlvqiKHerfqxXH1/ITyIdb6gfV6uEnuR+qYaf6SrUSWCC3irWO
Myg/jdP8SPxj3qHYX/wsv4wc1u8tOW3sp5xM7sH/zX+GovJoOTd+8fwqeg8W
Gitl7BP+ST4jP4BvQpPS++lM2p7eGWc2zgkek89EL9DP47zEeZTvpO/KLWiW
ONt0Pu1Ib3vvYf4RNJB3mH8vnSS3jl6Rc9LBcrp4t5xc7slf5yejmDxGzoNf
/b3VtCS+MdYad+FafF6c5UfhX/OOxDuxU+6PB7BLfY1aKSyS26AA/os7I/oe
a42VxmL1tigYvY+9xtapl8ES+SkUin7FUbWGsc78ANTAPvPXq5XFt3K76OHo
AxyLXovvww9ETew3f4NaOXwnPx09Emde7oDf+dGxz/gt9gO7+FdRCwc8v1Ht
XiyVn4kzED0Qe4Fz/JhYXxyXH8du/rXoNWs8RE4f96acQu7F3+Cn4GD0kVwe
y+T2yGTOQDlZ9Fb0E+2E8/zY2BfjI+SsSCGfoI2why9v7DP+9ehTfiifAbX4
OXG/qKfkX4pn6M3oLzo9+iLOn3w3HSs/QfNGL9KF9Dl6KHqbrxBnT15ufmk6
Ps487SDfQV+Vm9Lk9AE6K3o9+jvuVlzgK6t/wX8YZyXuQz4bUsonaWPs5d9A
baQyp7faLf4LHI47Rq6IFXJHFI95OBJ3j3olfC93Qom4L+J74A9+HFLjVPQo
9vGD4g7znmFyRtSJOXIf/h9+arxD/lDOh6Nxv9HKWGmsjLFP4zvymfnXYo9Q
g58d90TcObRznBO1P+UqdKrcjn4UfUHfl1vS7PEZ6NdxBmga46djbaMv5P1y
BTpZbhO/C3GP0uFyM5opzh2dS+saS8P35W/HPcl/yU+LteHH8flxLO5rWgWr
jJU1NiHWjc/Cvx57FHeFfJt2wUX+4+hb4yPlHEgrn4nPgQP8W8hn/G35jjhX
clq5H/8vPz36L34n5PuwWu4cd2rcO3JXXOI/QTqclZvjID8Y9aL/4jdGrSrW
yF3ifMY9JD+Py/x4pMfvcgsc4oegfvRS/D6pVcNauWvsKTLgXOwJDvND8Uic
0/gtU6uOdfLzsV7IiPPRQzjCD0ODOGvm71C7H+vlF1Aueh4X1FrFmeKHo2Hs
tfk7o4ewQe6GrNbsDTkVasb/JXGP0f8BU6RDsg==
               "]], 
              
              LineBox[{1899, 1779, 1690, 1552, 2030, 1881, 1761, 1672, 1612, 
               1512, 2003, 1854, 1734, 1645, 1585, 1553, 1513, 1514, 1515, 
               1516, 1517, 1518, 1519, 1520, 2004, 1855, 1735, 1646, 1586, 
               1554, 2031, 1882, 1762, 1673, 1613, 2059, 1911, 1791, 1702, 
               2090, 1942, 1822, 2119, 1971, 2151, 1521}]}, 
             Annotation[#, "Charting`Private`Tag$181496#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFGUUBuAhlFBCQlIBpVMaVLo7BJTukO4O6U5FFOnuklBBkQZJwSAk
lMagpEG83x/3dc7zzM6y3+zMkqFFl9qdY0RRlDZmFHWIG0Xp4kfR/HhR9A43
5a3Mpph+u64+CTip60h6/QL5XW7J25hDcf33ugYk5JSuExn0C+Vi3Ja/pY7u
F7krGZmrK6HbYW9IIk7rOvOGfpFcnDvyd9TV/Sp3IxPzdCV1O+2NSEx3+Z45
mTOON5Mv2geRlyFyTGbZuzj+pn2xvQR35fby3/bRbJfrySfD+zLenpDM9n7m
U/NT5ntdKXmXvXE41x6fV+w9zPvmInOKOd1MyVp+c15z81J4D3OwOSmcx0ry
yR+ZsVjCbPkzMw3r6er8jOGYfpZZ0hxhxuFfxzqY/+jGMNWeLHxX+vfNU+Gz
McGeiCz2/uYzcwYLvK60vNvehCT0lB+E9+Ks4y3ky+Gakj98L7pMuqX2UtyT
d7CQMvo9uqYk5ZyuO5n1y+TS3Jd3sogeZHFsub4MD+RdLKYnvehNVq9Z4XhZ
Hsq7WUIfsoXrqC/HI3kPS+lLdsdW6cvzWN7LMvrRnwEMJIfXrfaaCjyR97Gc
svq9umYk47xuEDn1a+SKPJX384HudLh+ZGWFrpxun705ybmga6m7Er5zCjBY
lyvcK/ZKPAvPonzTPpYDcn35jL0X2Rgg/xfuE1Y6Xl7eH541s0W4F8yXwjXj
1XCe+dBcbE4L97OZinX87vxW5tVwP5hDw3NlJgnXjoLyUDN2+M6ZI39upmUD
Q5yfO7yXfrZZ2Rxpxg2fMfxOmLd045hmT84P+gbh2dD1JjsD5efhvVnleAX5
gL0lKcLr5Efmx/zheGv5mn0YhcL11OUJz4y9Cs/lgzTUnZX7kIPVuorhM9hb
kZKLuqG8Ff4muSoRh3RrGMZwRjCSUYxmDGPJ67wvvb4aMTisW0sl/UG5Nam4
pBtHPv1GuToxOaJbR2X9IbkNqbmsG09+/Sa5BrE4qmukO2fvS07W66roDtvb
koYruja66/bhFA6/BboCus32msSms3zbHM8xxxvL5+39yMUgOWKmfYPjVe1H
7O3CPWp/OdwP4Rqbj81PuOp1beUb9hFMsSelSPjOzBfCbwJz5Znma+EaMtF5
Bc0t+jlmLXOUGS/8ToTz5C7mHXOhOSHcE+E+D88wPzq/iXlBP8/sb040E5M7
PG9mDL6wzzBTh3/XOdXMo7oPw71qTxA+U7i+5hNzOte8rp38Z7jHKcokXSHd
V/bavEhX+W74dznueNPwnIXnljxs1FXXHbO353Wu6yZTWP+1/B5xOKHbRI3w
t8kdSMcN3RSK6L+R6xCXn3Sbqak/LnckPX/qplJUv1WuSzx+1m2hlv6E3IkM
/KWbxtv6bXI94tMt/L8T/u7wPdtThN9C/gd1diWA
               "]], 
              
              LineBox[{2530, 2428, 2352, 2232, 2642, 2516, 2414, 2338, 2285, 
               2195, 2619, 2493, 2391, 2315, 2262, 2233, 2196, 2197, 2198, 
               2199, 2200, 2201, 2202, 2203, 2620, 2494, 2392, 2316, 2263, 
               2234, 2643, 2517, 2415, 2339, 2286, 2665, 2540, 2438, 2362, 
               2691, 2566, 2464, 2715, 2590, 2740, 2204}]}, 
             Annotation[#, "Charting`Private`Tag$181496#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{385, 386, 384}], 
             LineBox[{906, 907, 905}], 
             LineBox[{1470, 1471, 1469}], 
             LineBox[{2153, 2154, 2152}], 
             LineBox[{2742, 2743, 2741}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution 1\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
8EwsVo9xPt3M6rsrVEQofu+aLbKunwBZLMv3Ktj1kQ18W+85RIShjlEn7M7M
Icti1i/BFWS4i75yLuYwExS9unw5PZkApSbOr+HuZ6F7hqzNfr/IMGT/Secg
YyaI2z317pECEXZOLlCjReYRx7SAe4w5GVY7Zx47g+1fGyuc/ZhFZJhqtCEm
Fts/cV7ta978+v0eYvH6nyctzvIQ4bNdjjWfsPne2hGo2LybDCPcXLvWmTLB
dn7x0oFKAlSTfurtzDOPJBMesep0iHBft5DA6WkWahZ59MnSjwyN0kJWnsfq
3fLXC8efzS3ND86z+fY5SJoIEaG/fnZKo3MrcNmd+gpW9AKDjruvpFb3AJ/V
rtNpBc2Aed/jU9dpGlDN79gk6vME4Hw7Uq7sd+OFSjbfPtdb/27rix9snn34
qADdFS7xbNfEt/6sezQ2z77lGvbIR5fO5tlJnX/P2y7+ZfPsjOp0lfGUMTbP
Nl1cp113ZIrNsxeTuCaHLRhsnl1jbBVsZMxCOaaVHG1HibCiWLpGms5CmVL1
bjcsOGB6Ts++/YxZNKwo/SXjLCeMP0uLqD09hqrazle9cOaCmiJ/KPW27ci5
MdzqrDc3PJ4waqce0QBOr1r4lXyVByZG/FBOpg+AXrtPtV53eGE4V3NeQPYE
qCo6te5KIAmmNc1CzvQZYKrTX9N6gw9ulpCXOP+ZAaKqqn6X3ifD2b8KxH94
hNCLPz177vHDoKqevwl9DLBeUijU9akAFOfTzD59Eevvfog1uL8ShPcPHv3e
qjANtvSZzHLFC8GuTuOJQbMJwJwaCZf5IAwzeNWXuW8fATiPL7SPYar8mUU4
j/9ETsgvcCEUz6Y/CaVZLtUn0fMOn557LN0POpn3W1ROdoIVyn4GMKIbQGOt
x/y7sf6+ZCH6YU85eE+5OZ9r1Afu/zzDs80vl83vZVbNmwtLNbB5fGlX+aVV
en1svp7JtfeX8KUZtLiSS37zy0VgTT74YgWDifarhYMXTQToG7gjKl9oHnVY
z50waiXCvt0OEzqv5hBPi/SZoS4OKC94f1jbfwpJv/9r1jrLDfvXVR9TnKcA
nYsCozkLWD+gXbZrLGkUcF7sdr/JTYJ7XGQfQAL2PJRXtpVF4IOXhPn17Ptn
QdwH3rExLqx+025zfML6edKfhec/+Pih5DMut5cHmKBia1NGj4gApF45q5C8
nwFQHKx+tEYQcs5KVNhazQCc/189EjBqWMdCHAFILmrt0nzeEQjioH9ams8T
dkYvNz0iwMvt1DMfv7FQ1TmrjVFRRBjv4pXk6MRCkw5HZBe+8EKdl3JiWn8n
gd4ngY35pSR4+Vm3yjfjWcDynDG3LeGDh0WajymTmcCw7Tf8VkOGVadkqe/O
McEf+rnq0G/88O2AT45BLAPg/BL/+a3zO2wFxAlwSv1e3c63c2gbq75zmSgR
ZhqpfjeQnkdDdo98yDIckOvOjhWPfZlIL9tLEwI+WEiWMT1qzgCwd3mgrx4Z
vjYdT1PHfl4pU3rulx4/DHQkWbqsYgLcF0i4YWV0q2EBQSvp9YLdS+ffQfhw
YsKDAN0EKSuvPWEhdFb8ca47ES67OCPzKIuFNlm4iL94wQfNPQoqbLH7f/To
6Ujdt2R4Kc9ixS6snuP+wKeA0AaTIULxp2jV0NZxAsx/4XtdA6uHNBs9+iYm
ET6OWP9LWmEOudaEaeavx+qvrOyRjGNYP+EeYmCqxA+3vsuxsdjGBF+/joza
ZhMgNdTtw9lJFmqwfI/ccokwQunwBjNRbH+I8nuz8TcfzH7TKk/bwASpVm4j
R/+Q4WN72sDKk0zw1spt42E1Itwb+oM/iDSPRAnxtToXyJCy/DjrMna8sfcp
eS9Gl86/oGPoW6UVEd5ZJhG3oZ6FSkOEd99+RoYySkBoHNt/cL/g8D3/sDPv
CcWL53v6dv/G9kcxmPNJch51/167eu8AEbaEn/wbYY+th8KvEj8kyDCFZ0+g
/SEmEH764lB1EgFafVj7XQnrr32eKz8JbSfDnAdrSn+bYNdny9rA92ux/S/z
9uI3Uex5aLwj2cqEDKU6PZie1kwgK/F8gO8TGd4IvnDmKjbGfQNDgZG8sk3E
4mvV/hoeHERYfPxUlAT2PNXacsLi2Q7s+TLjkHUctr/dXQBPOMoJ8FaxgIsW
5zyyjypp7IdEyBhN+XOFyUJegjbjG7yxzxfZoKeI1btv8V8Ijoyl+UlVdhJO
eog9P64vu++I/XuC/s6HlzoI8NJXzX3KYvMoQsJTtUeaCKuHE+MDsfmYHPSU
HD1KhlPvny6/aYmt3yxGoWIWtp4XfdJnsf0U9w+8g2EaUZBYLJ3eSnnNJECi
89Ecaez4lXof66h/JkCQcyxiJ4uF+Lyl/aR3EeF+5b5cBnEeVfBwWOa6k6HC
hgL/q9j1aR/OtLNLJEOzoAaRHdjY/MY9TfIgARpmRdZewNbPEb3qFh8lIpwf
VDgmj9Wvswyt3U1WZGj4oYUsi/VPuD8gwQ9X/jhMLP5BVQzaTyZCSbmO7Ruw
+3eLeEXg01tkaKw0TgjGzt/67Y5XtfNL8/Of6/k/P+//+VtxGCDwz3gM/R95
xcKsVVuLcB9BqmPQQJ4SyvYR/HVOzqSQMtg+wkPNiDc/IkvYPoLGsou5vKu+
sX0EQeqV5ae2NbN9hP37GTdeTbcB3Edg2TI/ztG6Ae4jSGXR1V4/pQLcR8hL
tOkfK6EB3Ed4fnHLav/MPoD7CI2m/oGRwnSA+wj7VDVt7g/QAe4jeBZaTZuq
DgDcR1D3esurn00HuI/AwXXEyUCrH+A+wqeRprft72gA9xHsUwoGNQ5S2HlF
kl7fsR6xNnZeUWOjhKa6dy07rxg1dTts5NMrdl7RrU/a6u2OUoT7CKpTejK3
HJsQ7iN8UlQ5kQy7EO4jTERnSf6+SEW4j8Cn4JjlaNSLcB/B/7Wd1HevfoT7
CMDkZajMUzrCfYTC7sd2wh10hPsIghESA6Jb6Qj3ESJfP5ua/tGHcB8hQ9lk
y9rXNIT7CLdGUL6nEBXhPsITeeHX4rq/EO4jnE7/YJZ1rQXhPsJeNxMjHdEG
to/g4F1zpVv1C9tHIARtHCb/yWH7CLkUC8/Dts/ZPoLLS1G/wN170f9ffIT0
Nzfeplx0AHheccLmbeXfkZcAzys+iB/lzwv6CPA84q7795xF838D3DcI2FCf
3lrVC3DfoNbsu0enSz/AfQMJjdpkaggd4L5BWrjG+yCFAYD7Bp1mX1+JkgcA
7hvYHww4bCpDB7hv8Imw4leXdB/AfYPhsPux/VK/Ae4b3LOK33RU/BfbF1hQ
Maun3G1FuC9w6bHomdcJPQj3BVbVVxQ7z/5GuC9QNvdya9vtPoT7AoW/VXdG
KNAR7guMf7LcId1GR7gvsHeHKrfjSzrCfQEuFUWzxKf9CPcFxhuitlOaehHu
C7SVW1dscPyN8LzkihsRRkkRCOF5Sc8QdaWMV28R7hN8FvkU8uzNrf/PPgGh
8I+dnJ8awPOS7+nryEKPngI8Lylbp1J1Y20OwPOQdyObrxzb+BvgvsDfTy6C
bXq9APcF5JZv+f1ZvB/gvkD914kW7eN0gPsCJ3I2jJ8XHAC4L5DR+DZPb90A
wH2BTP+DBYOudID7ArMy9as/ZPcB3Bdo1lCv2Dv4G+C+QO7wOupF1R427xer
HSVGcf1EOO+/Umea/tOwG+G8P3jtxbjKnb8RzvuD53XFs8Z7Ec77O1Lzvsi1
9COc9/c81P7JKKYjnPdXMYa02r/QEc7700LHvjgM9iOc9xfZvo18Y9qHcN7P
90ar+Q0/DeF5TTKhRdHEqRThec3THzodf7zPQLgPcCdZWYPfKfK/+gB4nrPc
fPcLgZP+AM9zZr/pVbwvnArwfGZe/Y6nsfv6AM7/13FlxD8s6wd4PnP5E/8U
aUQHeD4zwd2zy1ptAOD5zG1x6UcNaHSA+wID/Q16jJx+gPsCVu96g9udegHu
C4w7iQWs2EFl8/7kvEfZbg8oCOf9vw2/Uj6k0hDO+8/eKU63IPUjnPfr6+zP
UrWjI5z3z0RsulNIoSOc939acUGS7EZH2mO3l+00F4IBpykHxLT62XnRgGrq
lXdRBQjPi5bkx/X7fE5CuB9wQlJfXU/P+f+1H0D4lmuowKGI8Pxorvm11J+a
UQDPj8ZN91U/JmcBPB9aShD/IPEbO/9/+f8G6w5dLZ5egPN/qqPuyxu0PoDz
f8dflTb9anSA83+xb/UaNBYd4Py/65jQeaONAwDn/yBVa09uFB3g/P9VX6r9
vjns+v7L/4fS7b3vGtIAzv/VA8fDnAp72Pz+jqtjQP/HZoTz+2Uu8vG9+r8Q
zu8nB13UmU1UhPN7c58vdssSexHO748+/lmZm9qPcH6/9suTOJ4PdITze5N6
NA4b6Qjn9w/WTp5QEqEjnN9nNCY6VTztQzi/3+X98O+gCQ3h+dXxDKb755oy
hOdXL/3QtyGXZCGc75N6H/EdfvGYzfdXZO/yfNchCf4b38fzrdcZpVVHjTwA
nm9t3dAnOGf1GuB5VVrWPf8NPH0A5/ltr9SYKTH9AM+rHs1YPiHyhg7wvGr7
sBrg2zwA8LxqgMehdVWzdIDz/++sZdpOg/0A5//pFddkn3zpBTj/7yym+fxJ
obL5/Xm5Q4e3SVMQzu+Vrige33uChnB+r91+kLWmug/h/L7zwCutp7p0hPN7
5dpVz0y66Qjn9383Vi53v09H4ZQs81EtIVhC7vfPdOpn52db1RV4zvMVIjw/
G/1g39XtkskI5/0/T/oF5fZ7/lfej+drZb1pPy5/OQXwfG2plZt+4/UXAM/P
Zq/N3h2D1Xc8P2t+bF/v9IoBwHHwjeEHtTngM4t4d0kNgCdNrneGds6DgUmd
kSY9OtsH2D36bpXB3j6E+wByJRGWEgQ6wn2Aq0RZZ1YdHZ10iDnawRCAju4J
DrQcOlIuFZ62XBSEouOv/DvK+hGez52cljku+vI++k9/AM/n+ifEkm0k7gI8
f1vEf3W39g864FRtqvVUY4K2dzZrA7cOgBU77jy12swCX00YWuW1dLYv4GSb
uMnsJh2Nn2W6SF4WgE/3EfIMeuhoePTbfYK/IHycPUHffYLOzvOuXbMi/GlM
AsL9gsa6J7zI6ez/6hcQ0r68VQlbj/B8b+bDFVGGZREAz/cu2NgljvBkAjy/
myxTN3eriApwf+B+steAAY0GcH/g1cM1Mrlf+wDuDwyXNXnNydIB7g+cL9uS
ETFBB7g/0Hvd5/22LQMA9weWVdz05n5FB7g/0OTbdLZFph/g/oBakId0ui8N
4P5AdWDxYxMOCpv/Tx1Xj3EQbUY4/xdXcAwKrehCOP+/a2LgfSaeinD+HxHz
bFWRZy/C+f+oocC9rQ/7Ec7/zZpr68OT6Ajn/yefW5aubKEjnP8vp5+N81xL
Rzj/F1oT46OV34dw/r+9+tTlQ/40hOeLr8rFDHf5lCM8X+yf6LW/pDEb4X5A
nUnzfX3XGLYfYEoWyL/vKYP+mx+A54+rnvq/N/J0BXj+WG0+9tqJhCSA54mb
OxbiC/p7Ae4DLLv2UNzvdj/A88Qco6hSK4YO8DxxkcAx/ndKAwDPE8c8ECps
JA4Atj+Qs5XuzkUHuD+wVlXm2ZHRXoD7A/yyv9fSKFQ2/1/ssZT52dWDcP7f
E6fEo72ehnD+3/Nle9D8mz6E839S8XgA5w46wvn/w6/uLjmddITzf/Pr3GZn
H9NRblvNLYMtQlDl2VPHm7f62fnm4aZnKXKHixCeby5eKdV4tiUF4b5A6ZqT
Mmry/v/VF2Dnn2UTnZZ90AV4/vn66ozmdVdjAZ5vdoh7nP/Big7wfPMula49
IeIDoNv+MPcu0TmsP37SKbd6ANCMHWYaJedBnepE4wVzOtsnaBkWbiBI9yHc
J+B1dl3O/7cf4T5Bi/++uutVdLRvuXqK5IAArMnpjD9aREfHCtbLFI4IQlRV
KDqH9Z94ftpuctcWZf5w9J/+AZ6nFplE98oibwE8L/1QTFTXoIYOnJDPQIkw
E5TunH5nhtWnGWPlo4OCLPCy+qfZjjY62zfw/SV+YtsVOvLW75oiWgvAebnN
Gn5Yv9X+wo6220UQ7uDQFg2zprPz12bTtxnO8okI9xPGv6//0PjA9n/4Cew8
tlT85cRGDnTHRGYhsmgWjEf8vOzPPQCevn3obtDEBG5e8UfTNgyAHxEFqhp5
/PAkb3i2bz4drfSwN31QKQBnNaSX+X+js/PaK93O+c2NRyHcX+DfYde9WksW
4Hlt43szhetyvMDeX99lj39jAFUd6alnKgNsX2GV3Kqm42ew+08hkdgGBOAV
gazXPNj54vntXbWab7hVryA8v61K6722TdgKUFdeDXM/wAAKFd9vJsgOAAV5
zicKx+aAyl+H20HLBkBGxxbpu3P8UNbucujtZjqy/0iYfUEWhF6vJb5Gp9FR
TLxSptoJrJ/b93WmDeuvL7gs/6McKACTNsVIbvhFZ+e9f/+Qe3k87Cj633wH
wp7u4HbKSoTnv/UPePYcehQO8Px39qULW1ffzQB4vnvgw9mQ1WlUgPsMN6t+
J29qogHcZ6DDhnZF1Adwn2Gu9lbIaSk6wH2GddqvO5KG6QD3GRov3fx5DptP
ts8wH9pXlUYHuM+g9H1oVGNzP8B9hsE068220TSA+wz2xw5yXZCnsH2EpLVX
NeSKmhDuIyguBi+rvdWFcB+hO2XUbccdKsJ9hPQRIZ5sm16E+wgvDygUyNzt
R7iPkN5TETQdR0e4j3Du9s77W7HncdxHGDHx3tGlREe4j3Ag6w3/1so+hPsI
DoLHNx58SEN4/tzh8aN3iT/LEZ4/n98hjHLMcxDuK7zwfZt7qu8Z21e4vl3W
9JSdGvpvvgI7n+66n7gp2Ang+XQRPc+RjIpEgOfNRSbOaBi39gLcTzA4kJn8
2asf4HnznY49axIe0gGeNz/65YJMNrae8Ly5Af+GIX4ebPyvz+DA3WMZLEIH
uM/A16porcndB3CfoXPctCBwnsr2EZ7cPO7dinoQ7iNo5tfuuixMQ7iPILjh
9zP+x30I9xH69ghN226hI9xH6JFzOc/TgT3P/esj7JBceX0hlo5qTv2M9lov
BGXl2yWTQ/vZ+fcr3It6tUNFCM+/0yLsLXo/pyLcX1gr+Brr9W/+V38Bz8cT
dGS3lKgCgOfji1SqtE2IzwCef1f4ourLZ4r16//m350vEF4JY+u57vrznhsc
c0Afzm6uw9Z78Erahy/c8+CqS1XnEXs6229A25L2MLmxfvxfv4F4oTM7k9KP
cL+h+kxQTWs5HeUP+5/K7hGAjSTKD7VSbH62b1UZ7Mf2vz/GWlXY1+P5egnT
LyW12yPQf/7/NZ63NwhRrPzx5ybA8/SmDiox5eV0IHv32EzvAgOclV6/mYHV
lz5Hn42qC3Nge/PE2rRfdLb/kMyVff7IJTqCJXX510wE4CmNnInPWP07ei0r
vM1OELrMv/jQ70hn5/ORk7Bo1nAiwn2J67T+RyTk+D98CXZef9MNz5IhWaS5
dow/790scOo9c+AQ1m/c+9x7JKKMCQ46VdY9wvqRGFLaROp7friZ4XeSmkVH
kQbZPBuRAMxsN9p64zudnecvETE/FaATjXCfgpd7mJjoIQvwPD+9M2DlxdFr
YPxV0parnxig+Rtr+CLWj+L+RMVlxTsRRnR0PDaq3HAHtr9db5syxPpvPN8/
tqbmbsT0VYTn+wnzt6q0XpmB6N/6z6PVGcDwqb0ZbRXW32qcunxh3xxwMjVe
zsT6gavHZTtZ41i9f3cR9jTQ0a/wI0laHILwS3dPpkkGHRk6LKBT2kxw9wVX
4CFs/93SR3oX741V1QApTWPs+Qx/H8ARl4batetOo//0L9jvB6BtU3bpU0K2
v4K4ViYxwcuQ2wfaNg0A37kjFnbvBeBQZ8SWr9h+g/sYd75wWdpPUPee1TDU
L3rKAAb0JpUrGwdAe9A1fc31ArBecO/19dh+g78/gJB0Mfyi/1FAuDyZ/0uU
ATJaRZzalg+A0dMMpcm1c6DuaH7IwZUDYAFwWtMp/ND0zo+5tq/Y/TzzpuO5
LBMELlxaHoydX27T4NaQCwJQatnui1zY/YS/b0D6mYuueY4VYr9v4PMfroe7
pUFqzL7HvL+ZoE6iKj1SYYDtb0yVP56L9JAAwZJzolu6GMB1E+J9qjoAqt5n
7D2vJwDvCNl/88c+H3//gEiMt0DlYxvw10br9DIubH3VjNQN/aSjvtaTSYI2
TJAnFaShga2H17MKG3JCBKDEekmXj1j/ib+fYNtCIyHQVhf9b34HYTahTS9U
COHvK0hWKispJYYD/H0F4RvPy+frZgD8fQSCqL2A9pIKcH8jo6rsUWQNDeD+
hnJc+UBLfh/A/Y0gzvWOs2J0gPsbDCGFD6v+0gHub1h195VRsf0W9zf6apcV
RKTTAe5vgNgwFX2NfoD7G7trzXs2vKQB3N+4yc0TaqxBYfsXNJ9d6V0PmxDu
X9gfnhPVte5CuH8hqTz7TcyTinD/4lPZ/t+Spr0I9y9GAjRpLP9+hPsXqYFy
gcuweo77F1uHCnYqtmP317/+RX31u+/zm+kI9y9oP7d6xtT1Idy/kMOKf14s
DeHvS3APRCOZnF8Q/r4EfVMu/+zEHIT7GZdDH8VnJ8Wy/YyZ/JG8cL8d6L/5
Gfj7FHrmbesS3C4A/H0K1uWnBZpMEwH+foTdfr5isfW9APcxiPHpB4569AP8
/QhJrbYrD4bTAf5+BOrN2yKv1g8A/P0Iyo7LH/1f1d15OFT///j/YpTdDEKh
ooUoqShRPZ+WyhJJkrQXKmlFCkmiVJKllCWiRLbKGpWDbEmRPUuGmTEMM/YZ
e9/zuj6v8+z3e7+u9/V5Xd//vn96LbOcM+c8n+e6btf9sUCwFxB+Y7IqxdBT
pgcQfiOxbqvJY4luQPiNLTs66VtFaMhfKO89yyt9S8UIf3HkWME7Hj8dI/xF
jk/fFY+gbozwF0fvCnnzqfVghL/Y9GJdmCx+/Al/ob5RLzM/tgerlzr0PERZ
HB5zqlJVf8REvYZC258+YQDDiF4DvJB0jKaZghFeY/yh+xthzPd/9RpEz2HO
/dykJYI6gOg5cHa0rVQ2jQREr2G5TLO2mg2+n/y713DSa0EykOgF22/usHg+
OQkSs/YHUJR7Qfu0kiiYmQbNWyvPrnDuQZ4jM+1M/pFpBkZ4DuEj3m8utTEx
wnPslVikOYSvry52ieq32kThyFzaCjF8/T0/mqvDRxeDt8/5y8V0MzGiBzFz
tOu5bk0IRvQgkhzuTpoo3gRE76E5fv+dkSJ8v8TSm3XnToB+u+ceWfj95PDl
FRFW3Cmgo0zJ8+3sQb4jRSmEXoqvn/FeOyPX7xOFJtFX6SX4/UqU9tMx6YQY
VBhJSL2Br79EPwK7sfWryr6XGOFBbOVGwjPGz/7Dg6CeRKqcFFRcgUn7t0qa
JIyDCw+LXRV+47+vkqAPmR8mgb11YuhVtV4w/Xl5g0OyCAy9+c3BC1+PzN+3
tE3ki0LJSirsrulBvQn3UrVabDAcI7yI1qFTMkfWKwKiNwFXsirso66AKqGH
2oKZE8DsTBqzcE0v8iEL2zYZRJv1YFn7xV4JbcDv/4yY3634+kb0JyKG1j9o
PHMVQ/2JxLwKmXhbcHGn9kvV1RPgUb9vgotCL7i/dZYauHkKZEkfLoyV6QXN
YhGfcjkiUOdl4Kor+OeNmHbxEJ0VhUIBnjKv8P2CalVPGXPzJJgbudD5HL7+
BMfdDDroLgqfXLsl0YK/P9Gr8Nlw9LX5ugPYf/oS1K9QnT/M61LF2rrXX94a
PQn44l47BOLfb/MpV23tZFHoci/lzWRDD+pZHKBoSX6/PR/bGKGzxzJkAkgP
BbaG48d7y/ZB9TElURh071yGW3vPn77FTIpdgeYu0NL4C7soPAE2fzhZpoN/
v9NH45/ILJoCya9oTfn49z825Wn4ol0EGv5evm1dJb4fOhjatVZuEqxIUHK6
hn8/uYf20jsdReHyFaEXTPDfE9HDWLfEzNM1/CSGehgXHVXqgie3Kb9gkdRa
J8ECWYeAv+5PhE/B7FKWPjBTAPYejIWF9ROAbu7auRRfX9Wc1JYuNhKFJWvm
njHDXx/1MYR2OQhWngAWS3M2Vf0Wgb8aXlUV4sejcAtIiT04CV7+btEPwq8H
wawYwYsBovDNfPUf7vj3J/oZrluHO2Wkd2H/6VdQT+Oyfv2rXmXsK8/P3Ddw
EsxroqhU4/s3oq9xzdbEsJaqgvF97OQ4LRSFXwWTUhj48wTqaxRKp67yMgQ7
lp0a3Dt/Ejw/M9KniR+vXwI2TR8P498npy83Af8+qLch6JemzpLBCO+i+911
kI9PCcgZ5KvQP0+Ao6YdZsL4ejtIlaeF6YnCqOiImxn4ftGVJJ332XQSdJJ0
jsnhr1+lFvyVcUMUakwJ6JXj+ymix1H6o+3yGYO9GOpx8D3TIkWtwogeh/bl
ppkVdSLg6vfZ0zfURKFaWUjJX///r7BP9SKrJsFQaXPqA/z1reVc9vw4Lwqv
0Havfou/P+pz2O/MmFytgnzMUs+7wrMzguBtBlk0mjEBlBu/HSHh58NxROdw
0i5ReMmhuv7VX/cfN6dnns6TgP10+st3/HwT/Y4XrJOTxlKG2L/1M8T7/c8/
lYaa1//6e3zbHz9DnVMu/wT5GddLd29/8q5Fve/Qa7zsR7uoqPd9ZKVZpZoB
HfW+tWT1Lr3oYaDed37Mp8SF3gzU+96tJCnq9JiGeh4Tog0iNiZU1PM4JvWw
WsqtGfU8XkZdqqJ+rEY9j5gjjxwlvHJQz+OYG0dcb18m8jPmWu8o/StrkJ+R
KV9uXEltR35my4/jBaH23cjPnLySERZ2fQD5GeXjmydrn4wiP6O9hGN/cGAc
+RnuHFH/6svTyM9MuQXealWeRX7G+aDOna2dM8jP+Hg7PKUPTKGeR+KZmCrf
kxOo5+F+T+6+13ku6nnE+u7RkJ4cQT0PVa3HrYsEh1HP40axhNo8j0HU8+gN
lJ0JlBhAPY+vX8plV42yUc/jglP5yYwENup5qE3Jmcq0sVHPI5tbYK5iy0E9
D1uaokcZxkE9j5dq81XtPnJQzyMw+1LEcDsb9TzCzJ4ez2H3AcLPtC1eNOK0
vQcQfmbqxPVhS2UaIPyMYlaomcKDZkD4mdtFla9UmrPA/yt+ZvCc/ZGJxs+o
9/3z954gKfMW1PseOCu8TehxF0b0Pl6YeLX272dgRO+jyFB8cN4QAyN6H0qK
+gUgg456H8pFop8VyV2o9xGwz26hT1ob6m98cRaru9TGRR7mhezsr+/USUD0
Nz7qOAns850BRH+j8lkg3w3LWUD0N7bt35oyLDIDiP6G37loUUbeJOptaJs8
n8tT/tPbUHqj9Pvg8DDqbdiaHdURXzOEehshNxVZA/QB1Nt4WfP+jKwDB/U2
ttplUgNy2ai3cUlzq+pkFhv1NkxiKhdwZDiotxEl6f7BKJQD0i2+BVmFkuHg
6M+KiRoOGKD5zJZKUWDOatsH3hc4wOnB08+zjyn4/q98jZ8YGxC9ci2erouO
FQsQ/kYjfWBlfT8DEP6m6sKQr2hXB+p5DKs8eLCD9x383/ob4xAbld1+WahX
/lQl3GI4vBH1yovN+G+98evEiN7HxydH6rR/0TGi93Hp5GJDmxkGRvQ+Cm3I
5FllBup9eK3vfvi1tQv1PhYDg+CPKb9QfyPnPevi74Ix5GnIrv4BASMTgOhv
HKItdSMLzgCiv1HCavpuajoLiP5GBGXTeKPPDCD6G8b317mDA1Oot/HxJ9/V
8tIx1NuwNstdmHx5BPU2LE0rJAcfD6HehrVZ6kTA+kHU23B5N8z+lMFBvY2I
3mGOcA0b9Ta+kAtK616zUW/jS9qUAt84G/U2HNTbzvm7ccCr3JyGnS5kuC9w
q4tLFQfYvP30W2aYDD+kp4HcZxywo7/6aMgVClxk9Fxp0Q02IHrr8N7zdL81
fYDwO7Wav98NrmQCwu9YrDa08XraiXoeHXVC0jpq9eDf+h3NR3K8KKwK9djT
RGP3PY1vxxjpN2tnrRpB+ckvPne9aRjR/1BRYf24+JaBEf2PBmpOU08pAyP6
H1vZEu0n19BRvyMmVXLPKTYPEP2OmfbjM5Y5U4Dodwg5LxEvoc6A3cEbNvWt
IMGKB7XVVuqzoJ4aabFWSwBqfqUn2vtPo14HrXmZ/IVrw6jXcXfxDSOp6kHU
61iUdfDnNpcB1OuYu7ZXqWgFB/U6atbbjn/Ezxfhd8oWtdarlbHB93kKBaFa
ZCgtlH69MYUDchi0nYffkeEWu4D7Qvj5CpA1mnHVpkBdn7mOCzU54KHGcRXn
bAqcK6yvKR3QDxoD7t4R15OE9Tt/mT226wWEB0pdu0FLN5wOCA/EKnt6wt+m
DfVCjt17MTtnTin4tx7o+cUA8S2tL5EHenfOuXXtk3rUkz/9zn4qkU3FiJ7I
Oh3btYGP6BjRExFel79Gn8fAiJ5IYq6z2oG9DNQTsc072TWhS0M9kc/c4nyD
+A7U90hoNWu7tHoM+Z6Mhv5HKq4TgOh7cAI9HhYUTgOi7+EgPrGqSHcWEH0P
EY3wvRWZM4Doe9iuj0iqSJhCPY+1MtP9Hgu5qOfx6eBzX5/sEdTzkFlnk/Lr
2xDqecgaOAjs3zeIeh5cR8mZDR0c1PMw/uiQ/ZTKRj2Pr3FzD7e/YqOeh/VZ
IbPwXjbqecy6edwVP8UBys7q14pPkmFZ0wNf0XIOuCdzyAd0kuHy6Vcq3ekc
kBXVl9biSIG/nl/q//qWDYge/vonJRH9wX2A8EQrPKvFHuUxAeGJ9B6rFkgc
70K9kO2rI3yEHBoB4Ym6b3aOB8gl/GtPVOM+5P/hWAXq5VfHty2u4W/Dcgpi
DyZbN4DV0l37H4vTMKIvUiLj4GkQwMCIvkjjlN/RtR0MjOiL6Bt6/9h6mY76
IJEP0/oTHHmA6IOoYv1fl1tMAaIPck5S3pGSPQNU/bTGk/lJ0Hv3NW2wYxa4
7RfKDpIUgMJKdz9kVU6jHogEJyJ6LGsY9UB8Qm8sHpweRD2QiOyHSy2TB1AP
5HxaRXeiIQf1QPafzJc/+AY/X397ol19L+f2fWSD7omfQZ+Wk6FYYhdMjuWA
9ZG2fU1xZKg/3reutJoDPl7vuv5sOQXeOqXoJmrFAdPtXm7ZCRT409am0/Zb
P5jq/Z4hoCYJLy+WFRZo6QWETxI9ZKC5fDsDED4p6k6BytCyX6hHcrKodyFF
ohL8bz7pwK/Wc3Nt6wD3xn2PMkoXtkAxMT5NrxX8OG+9znQJA1MwNzBkxneC
wQaxlepTDCzsDKcrr4gBLnTMuavLpmM3Fj77dTifD1qS7LvjjGdA29mNHmoY
P7Tkd/92a88seG/UfdO8mgT1jlbHlOH/nvBJzXHpYuGUQdQrOan2pFP6HgcQ
PilGIsrJvpgNCJ9U3TTufi2dDeSo+zSlBMjw4ofn2Q23OECN32D9N18ynFcV
9awGP57KpktucPgo8H7WW8HnARzQvCWLYnybAu/syKp/b8wG21MPCI3Ol4Rq
CT2D+z6z/tFHkY49abJ3TxM4u7oqVoBBw376edcIK3UARY0NuTE1DIxcydNq
wWhA/kzFsSsJDKy+qfvzNx1+uPBMp+tRgVlwJXr9FXVjElQrMen0E5oFhG9y
oLivNhXhAMI3BW474vAQv95H59iW3vASh14qNdci8PU7R+oI+5QR/nzwa+Wq
yBwO0F134WVXIRnqrFedfVaKH593CV67dlDgIG8H5ibEAf/NP9X8FnpeMe8x
8k+sypR1EkF1aL7Bc3lX9+MxVIzor9j0vw9xdaZjRH+lMHHTxHx8P030V0Ku
CrAunGGgeQgLhatvfTtNQ/2VBW6l7FgxKuqhaGFj9450jSLPpGb3/N2Z9ROA
6KF8I18yfBo5DYgeypodUfota2cB0UNR9c+y0fk6A4geiucNFzvVr1Oof7Jx
1XubekMu6p+kHh/cH9Y0gvontHwn20zWEOqfrLxiLHf51CDqn9waFP3SxeWg
/onBRGn3LH6/JfyTj5RCrih+fgj/ZLD+jmJOFxv1T3IKRq+/OsoBx8oYlb8P
kqGXztd38Z854KVJSmFdMxnyN1mdkMbPn5PLhPXvIxQodKzPjlPOBsR8Brpr
yBvlwj5A+KkjZ69s3z+nBxB+as7+11oRxV2or6L+xvnbKc8mQPip0drSsK9u
b8C/9VN8VTbum5XK0PyGahPVNBf1Viy2TGOpT0M90MvN1iPVdWFEj2VV4kbe
4ksMjOixVJd+NhLrZWBEj6X9iUVWWygd9VRYj9+sGFPiAaKn4ljjDHfKTQGi
p8I1bT8cFj0DFsxmNd8b5oefbTpOsnfNgrJQeLpgrgB0PlTk1No3jfopTkv2
GJyrG0b9lLeHWlJzpIdQP2WlYI3VmvIB1E8ZLXgkwt7LQf0U8g095cWZ+PX0
t5+qbF7xvuw9G1we0eHVKpBhUkx+mnwEB1wcldy6IJIMPeLBtzT8eajx7bqC
dQoUeCXge4zVcQ7IzL6n0PKMAvdme96X4PSDoMhLxjeVJGHmvK1MflkWIDyW
Ycvu8s4IBiA81q4qN6tuUgfqt2yt8hThC6gC/5vHMuh2Wt/UXAvUjiyxcq/q
xBQ0+6fnYi2Aqn3ras1vOub9TIRhfLQTXAxfpW+EP9+0/UrNj/FlgJjqE/pl
ggwsq3Ok82EyH0yZadTdsGoGfGHk2Amn88NJr9UnBi1mgaCPovb1AhIMOnGS
5ewwg/ouARMBvvVKg6jvMqu1fe0Qvv8nPNZBw7O32irYgPBYjyekbgynsIFx
5pl1eyYl4Fe7N7vveXHA6cPTt4Q9ydDO+jbT4TsHbLl+HvOdJMNKeQHl5DB8
fypd/N7ZmwItLTem3rRng+ZD0zEXflOgvOfVNOMJ1j96MtOvhsVW1TaCVtOd
d0YzaBj1yWe1oy9/gc9Zpnb+RQzs8qKiRj0vGrBP0+QF5zAwoedby3+r8kPJ
O4VmYyMz4IRMpo3IJhI0XnrCS19+FhCeS3Fo9Y6FchxAeC4vT3XZlkQ2kJ84
39fqLA7pe4Kst33F9+Nin/Zd30KGG6qW7zv9jgOu3l/FXZJHhttTw01Xf+GA
8/TRj9StFLjK7tTTY4r4+vMf3mu1zZV3yaU/wWCCbbNbPh2D22JURZupYJVv
11ZbfD198TNXvvI+P7QvY48EG84CwnftSnqvMdLEBrHJ1qfdasSgVemTzqVJ
bECnXFLxP0uGVYfu3p/F3/8iTRSm9JIhrfqO5pdXHNSv8d+i8axB8zEY/GTe
MT+lHSQ6tKseesbAtD7sXfR7tAt88e4scqtjYK6afd9OCvHDD1mOrCr8frtF
OEv2qzQJSuxIrUjZPAsID6bd5TNmpIXvL2ciHmeYi8Hre23mbkllA7s5niuT
VpPhzXD6DVYCfj8FMRGRr8nQsZVWo4uf/3jTsK1CayjQZfy78Ct9Dsifvhrn
390JxhqUK6Xw/f7AUHaEaQ0/7As4kDTfahYQPswSLJaOxfdPpMrxapKEODwY
oWF49x0b9CfdoT68R4aZGySt0vHrVVC2ZpudCAXO21KyJxz//dVe2nwl51kH
+H1110BROwNLv6YRdpWfDn6GbAdxoQwsRiK4MMqYHw7d1c6Yu2AW3FXOeGx2
gATniQ0Nr+LOgLkGGzaUBotBzrK41uYEfP+x6Lef1S4yvHPx3nLHD/j+rDHL
KqGCDCfdMp4dKOL81/4OVf3WwRcK/sijBc5dXLl6fh2aR7LSGEpWuVExos/z
3ICqHb6fjhF9nichLpnybAZG9HmSGGnVwy4MNL+kjqay0vAGDfV5ukVj7B6p
U1Evp6unTUDl0yjyZSFTx9kilAlA9HKihQ9QmbenAdHLOfpMjP5s1Swgejmi
wcfnn2mcAUQvh3ra4mxU+xTq49TdYjAWH+CiPk6Wer5cWc8I6uO8OLLji/XE
EOrjmFLFuKkXB1EfJyNSfpcc/wDq49w5/9R0isNGfRy3xVaBNfjxJzza+M4v
tYc72KiP8zHsh2fvQQ64MVLsstiWDD/7eQQW4+dDk1ZLfVZPhk/UOZy9eRyw
46hPEuUgBX6R1OVK1bEBMU/l+yIp36VNfYDwbJPV3+pklvUAwrNFW3MU3gx3
of4O/9QFZiOpGRCezdtBreCdWQb4t55t8C3J99JMCZq3YrRf2oP0qQV7ZHqF
r+9xPYgMPbjROqsLI3o9mz+/nl9hz8CIXo+CV4TaTvz3QPR69mrkSebE01Fv
R+CApar5by4geju8Ax6sT9OTgOjtFPjNX5D6cAaI6o1VTPbyw+0bli/g4evB
ec02fZsJEiyfU5gkND2N+jp3dZOrGrqGUV/nvZ2fcc3SIdTX8di8pHGoYQD1
dbKDC046HOKgvk5k7G6LbdlsQHi2J4s+bG7IYQOdi6dT2uXIsJ7dSn3/GF8P
lAYZG8LJ0D7FTpSJX88nTA/8mpKlwE3L07zun+aAoDjKxf4ICtwwKto8NNMP
moYNpICiJJT2c1Nr0mIBwsfV1bJVH31mAMLH5bwV5A27dKC+T4a+rtbPwm/g
f/NxG50ypA0iakFS/ERuV1In9jxPXC3VpwXMGfC6t3OAjqVvH8y+trUT0E0T
M4Pw9ffmwsCVlJMMEEU+KSgmw8Cqt8fSkuL54AmVpsXNcjOgUJln6pHAD9uz
dvFR8f3OW8U88QU5JNj5QUDT1GUG9X+E1xgOLVEbRP2fhhtDVpuTOIDwcXsf
OOYcqmIDwsftjfpJbUhmg/rUigjHYQnY2ek8KHqNA+7c+7l6lTsZfiMlWV7/
xgFfZMI7dnHJsOL4tms1T/H96BwT0RseFEgadU4ZucQGStnfzqyZokA3z9va
z6T6/tF7GFTTHQwLbQQN56tuCUfQMHul7v1Cjr+AwoXtX3XzGFh8cUKisx0N
2LllF7kVMLDlpN4KOSV+eGTJS+/HrBlgu3dkh6cGCUrL3Dnqs2wWEL5OYVC0
58diDiB8ncvTMf33+Pqm4eYxK+QgDr80lR5Jwfcbgvf6hQJ0yPD7O23RlHQO
ePJ+Xuy2bDIsa0398LaSA6auK7Qnb6ZAW2msq2slB/ynv3vb8fSX9Z2fYH+R
k3dZIh271O07sSWHCoaewNPBEwwsUmZcRPcWP8TUo7rOgllAeLuBA9GSGm1s
kLHymOeLCjEoqrJi6iK+P+AHFjUvTpHhluSKhkcVHDDjpXXMjUGGlrdymWPJ
HNQ36ogc0E7PiwWuOy+KZji3g48LtkByGANzOKnTt7auC5z6fsPnwU8GFvQo
vNprLj+ktIc9TSycAet3js7XEyVBXcF20lo4Cwift+7GO9sWPfx5t6Fb33K7
GDScsrHITWODpdeTWzJUyXDXgd679fEcIHXO0yAvgQx1g7UCpfHn4bX0/MN1
qhTIPcdOnDHhgL6Xhy/nlHQCRo5/5hH8+3drcO/ml/NDK6NK77/WX8LrySin
PT+LsYHsDhJt/XxxqH167MzoGzYQabS/m36bDPVI42f34Nfr47e8I8vnU+Cx
4tTAj74cYDN18MWxox3AMKqw7HwTA+tQkrJ/3UkDoCo81iCageW56BVnQX54
rEgy6ozYLPA5Ouz/wZIEPxlcdBSeMwuuLvTpOBEgBoON77Qp4c9fg+Eamw8b
k2HuiYFtYvj9XJ4UOvW5hAxXmKZRQ/Hnrf/0gXUbd0XFXKaCDSRXpzOjDOx2
8NX+hZf5Ya9VW2Kw9ixoWewe9/u9GNxtkHvFEX99/QhB5c6jZCj/3XCrI/58
Lfv21nOhdjKcV2P5PjKDA8oz5z4IedgFokvKLe3oDGxxkWvPoil+GHvB8/IJ
01kg4+cTeV9LDAr6HaOr4PuTPeXaj7jPyHCqVs7RHD8+5mMrpeVudoJN7PeC
V6cZWG3SFafIHH4ocnrVRi/LWbBtm7zQQ54YTFpwdM0q/HyaaC5p7fMmw9VH
84NW4+fvkHjcTFbXL6CvvHrxni8MzL5ioU6MuxgsznAdV8J/jweO7DKf+4kM
F/28Fe5ZzgHk8Lz9rRNUcFtu6Y8I/P1So93V7R7xQ/ETz+5o7pwFgRom+3Y2
i0Hh8/LP+/HrrZQe5u14gQxtv7SMG3/lIG9o16K7h2+NP9i20rxX2kYMqj5j
ve/B7zcNkkWDnmlk2NJ27NAm/P5yz/pRjbVgFwi1Dbxphh/v8Sy31y3N/NDg
Sdsbvz2z4Jtn8qZLQWTYZ/wiqRs/HhY9MiaibR1gzjLH+qc0BnbPqfu2SoQY
3Gx+oSMTX+//mzf08bmlnKXihryhKe/kt5Wfa9F8JHnZM6+NjlMxojdFv2ul
NryLjhG9qRbdy8uHWAyM6E1pG5tUUq4x0DylEYu1Psfu0VBvKtG04JGnLhX1
n/pEKVd9kkeRH1wnObd/65wJQPSfgqtXJvZ4TQOi//T4Z6Sr+cpZQPSf9t81
ZPxqnQFE/ymv8YdFafcU6j39nE07+vUkF/WeyK/efDgzNIJ6TxWGISBzzjDq
PZ1+Qvu8z20Q9Z60aK/zTIUGUO9JarPHzP0hNuo9DfKPvf2EH1/CG+Ze9unL
bWej3tOq1GtzhOw4QPzeuoo1NmS4bJ8Ct7yQA7hvugd9a8nw9O4dq37lc4BW
g2HtogMUKPcxVDGwmQ2I+U6ZNl8drnb1AcIrsjkLTC20egDhFa3qzP2ChGmo
J5W5eFfJYpNmQHjF1NWvbdxDM8G/9YoVrR4+951K0Pwn2caRnVv8W7Ag0UiX
pVfqgfFXtaXFL7swoj/1NPUW39kjDIzoTxltCjmxcQB/Pvi7PxX1KIPll0xH
/ahc35I6BpsLiH6UTI+ySB3nL4fzP/2oBbpDPuJ3Z8CdAwuKMhj8UA0z2vV1
9yww+P1aQ3mMBPd89WPOI82gXpRzQcX6x6xh1ItaYf4ii7VyCPWiVBojk8+0
D6Be1NlpWfXcYxzUiyp0BoZH8P0T4RXPzrneSsf3V9EaPgI0GTIcgoA95xEH
LH5/RNfwERkKaoRqjuHXm6rsOQ51AQU+eOSfIebMAV6yDRFjTyjQ47DIRIkA
G0zHpIwryktC28fepHBDFiD8YybIOWfQzACEf0xdlrBgcUoH6lUpPacKHD70
Hfxv/lFzdaO/+7VaMGTWwmsL78ROzMbCm8dbwJuMzprqbjpWFnFicejqTnDE
Nb7XF99P1ed4HjLdywBYk49lsAIDa+O52mfH8EHy4Z91N8kzQE9f1nB9HD/c
RdKe/8psFvj1356iviPB6lOl+Ys8ZlDPatPzrEJLjUHUsyrO7RJxTeMAwj8G
nZoQ1vjOBoR/NFMu8NyD398iV42bX+JIwJ3nbpwxdecAGSXjmzpuZLi/do3P
dBUHBNNeD6wbJcN1BluKzaI4wPaK6MaAqxQ4sSbRIvgqG+w4vnG36AQFvpvX
ezdmaR9g9R8+/uVyI7AXcGa13adhKx3dz//a8QtIllaWMrIYWL6MHNnfhAaG
QGXY1mIGti6nwGSFIj90XnRqPJ8xA+ovSYENaiS4/O066K4yCwg/6dIekmKg
zAGEnyz5VvJZ+zW+v94wR1DpuDi0ENIqOV2OP+8Yk+wfbCTDDam9cYb491+5
223EPJMMj+rEPTiB3++LTTXZDzdR4GVxr5A76hzwn77y8nK1sVWnf4Kb6pQC
3Rg6dk937Pi+BCqg+1d/uTbOwBZoy5GGvflhaPmtrSpbZwHhKUUijjgc/sUG
H+kMv/wSMeiaJBq9DF+vQhs+Ls90IEO+iJVu9fh6VWJifNGORob6l+TvjaVy
UJ8rT/rsknLPeLAxcO6yO+bt4G3GRHzeAwbmnZu817i4C3yZrN5yro2BRe9w
trw7wwcplKQnrPwZkOYgPWdkPgleva0fsd1wFhD+8mfURul8wAEMKCa3RF8M
5pYYK/qls8EtvWKt9yvJcI5ZP00/jgPi+VnhFS/I8IKRP+8Svv5y334/934l
BeqTghTELfDnm4nqlu+ZncBg6Zpv1pMM7Li5jO/lz/wwLWSVYiO+3hEeEwR/
uNJViO/PSPf6TfjF4U7jdYs24PunSOe69k9+ZHh78QH3Bfj1eei6yAUhAQrc
7b45PMefA+QgO08bdoDDywQdZerx9dTNv6qohgYeXIBGrOcMrGwFxbBoCz/8
El9TcVloFt//Snq77CLBBLM4r3rSLNjg/yp7nZ8YfKBeOd8a39/s3bcj7MQO
/Pyfc+M05nJAcuQcy7piMgxzkVWLKeH8oy/Wf6+AP/c4FVSFjE18GWZgc988
pf84xw9rabHry9bPAnrbdLJMthjUdl7Tp42/fs1a9yuDh8nQ6+29BQH46/3y
evKW00KG8x+Gtx/J4gDqfNex195dINLFtbW4G99vdzyi1nL54fTRZOH3+PVb
O/Dqop2mGLwTRPmmmMEG1MMvewSiyfDUojl3ffHj42gS4aV5sRNsG+sz4/zl
m8vDT1hl8MNixc7mMvx+azz9XPLViBjcd+BC1L1UNmgue7B2yosMvVnxt759
x39Pe9dL3/v8C/S2xIl4ljKwJVpQ/JyLGLxvstviGv577BnNjyN/IMOcQ6Rb
B/D9vCpLvXCkhwru2Wd+EsLfT/XDk2WSwfywUvGR06XtsyC8//uRI/Vi8ODx
rl238P2TtSdfnds5MozMYmUn4s8jhCdNlt8YlfP1IZgIccFoe/Df/1xr+wcp
+PPb67Xb76eQYWDUzP4CfP8UnzRv8zleJ8BU9kBsjIG51j2OC63nh2dEc+7+
9Xs6JLkw0CeQDGXyPiysxo8HeU3S0c6PHaAwm5/6kcrAdjSKHuY+EoMXijQY
Rfj6/p+eVGHDi3omoIIKvcOGy/D1jmsrWGCUhj8//NTvYeH/fbBCQ40Bhx9C
f44zn8UsmHP/Zsjyp2TYftxj51/vFz503fy4RScY7h4ouYbfn41ITVbFr/mh
+ZLjFePms2B8xKl54TUynNl3vXoM/z6PRR7kC58Vg42bySeN8ONjG0oOWV5O
BXt519f449fL4vEmKd87/DDmdaHiQ/1ZkHS65VJglRhk61k7l+Lnw69RlPM6
EX9efefZmoqfv1rLPqGYhk4QLLRm2hi/3ziRG0P4qvih3vDBWVn8ecULcLVi
A/DzF+zn6Id/3o9pB4QeBeLfb49R3Tj+/fK7fq6/fYsKtPZ7XOjGj2/NsaEn
PR/FYFTWgFkM/vt9EW89eOI3P6Q5cVP7jWdBsWY5YMbir7eOs1scfz2tuKyU
3yGdQCNnOrJzioHtv2dzuSufHxY2q/iR8fOTH/H2dpsPGVrt+zDii98vXh8a
OV7tiZ/vHn+Bevz1x/V3DhQLdwJVR4NoQfz4rfPevyH+KT8cPXh2z3f8/Qg/
evjyfYeKRVfA9fB975Tb+eFtu7eqkvjrb2Po0Y4Hk+GZU8O9o/jnCXzhv37T
VAdYbknp3IdfT9Wz2FvbZ2LQVqwxLx3/vv/WqxLv9z//VBpquP71tyP441Wf
b1i3+sk2wqv6pQ3s4H9Wi3pvAym2CmvDqKj3duZ+TZPyOB313vjNRfIydjNR
761QZSX9BZeJem+Xl4is45kwUe+NqTLsjAUwUO+NXBn9sGgxDfXeFmYe3Cnt
REW9t/UDG71tSC2o99YzPi59J7EWedVNQcIk7V0lyKv6kB4+3mdxH82fs8wT
6Y6brETz51xeCrr9TmpH8+dOV++/V9DMRPPndBPzwybXDqL5c1d1UrbMSI6i
+XOU3pyPL324aP6cg7bE0te7eWj+3JErnmUB+7mo9/b81cr0qq2jqPfWwu7+
cJkyhHpvT88PX5/Z14d6bwVnB7LVTemo9wal6rb9WPoT9d6sDuxdMjJVinpv
g6FLlSib05BXNTzt6n5k7g/kVTlHu4w6t7Qhr8rFd7LP9tKQV3V1u1bfo8JE
XpWBbd9iltGLvGpL9EaRmQYW8qoi12bKFTRZyKsuael6MnKeibwqZWHdfe8v
XciryrVu99xy4I9XtRg1SpWo+n/Hq17tEJUU6PuMem9fTLbOjD9qQb23hKwU
a3kRGppPl/V9r33C4W40n+6jMV9GVBMTzacbj9q1cE0xExBe1U6jUC/Vrxsg
r/p+POShAx3144zPVgtSajtRH+7iMzHhS4rfUB+uxcTi0JmWTNSH26JtSX4X
9AHNl5OvC/XeD4fRfLljdrHyilf/zJdbThbJD1jDQ/PldHIOO5/m46H5ci+D
IzUunBvDiF6cVd736E2fhlG/LSfNuXRzCxX5U4VX7xu4xxjInzbIKqSff9KD
/GlT+5bIouss5E/tfyqtTM5nIX86utilKlqmF/lTqliRof2RP/5UNXYixNfz
jz+N1Z43L/jH/70/bXu18pX64yzUf4t2lsj9XdaI+m/vj+XwUzo7AeFPg34V
n6blMdC8OV+PFO2iOCaaN7fdqED+OoMJCH+aWy96vInTDQh/qnBUynvhNB31
5M50k550eXahXty8Kx6q9q9qUC8uX/Pzy3T/AtSLIxUGLp57LB3Ni3vh6ba3
CAyheXGB+4agS80omhdn07Mpx7Cbi+bFCW7tKDmtzUPz4pZqqh1isMYwoh8n
M9pl8PHWCOq5pT426DAS7ECedEMFW3rrCTrypHGqXZn1vUzkST0bZUb5V7KQ
J00Tpy/rxe8fhCet5W/y+JLVizyprR49fepKN/Kk8jrrXi+1/uNJf78qvWYn
9O89qbPwxuVn6VWoB9cgwe3fKfQLEJ60r+2wvJMkHRCeNMspu+YJvRvNk3P5
cEbAaISJ5sk5K32dJxTEBMQ8ubtPElZ3iXYjTxrsnneocN0ImgfHPLhpzUNB
LkZ4UmNZ0doIfH0gPGmPUO7j2VwumhfHZ7F8YV3bKKa7SNlq9ykJ+OKeSen7
JV3Ig3rE8NIpFt3Ig66wFAlq+6vn8bcHfWDb3Zz8noU8aMmqZLGoWyzkQV3D
7Ytp1j3IgzrM3fQ2e/kfD1r0QFdEXPSPB1WJ0jD/wC751x5U7uYdY1LfS0B4
UNYX7OqrT/WoD0fXIjukbusEhAftYgoENhxioPly+YKbbx/3YqL5cumWnLdn
B5mA8KA3PtmPH1vMBIQHPRYu3Z+DX2dEb26pUszpDd+7UE8u4wXcmfX6B+rJ
XV/W15JZU4R6coNH7lsWusSj+XAPdZSFY/IG0Xy4sKeC221dR9F8uNSjhbPa
+Pki/Cg0q5fK2c5D8+FoWMzEyWVcjOjLqcXFiVzoGkG9t1j3M8Z2r9qR78wx
oMrztdOQ7wwas5U5eJ+JfGdfrIp16EAv8p3uGgkc858s5DsLkmu/FnN7ke80
/fWzhZ/XjXwn12bdZK/kH9/pwud72Ubvj+/McwlfUyL+732ndYW/pqNXBerF
8XImN6+1awOE7xRRIwkLhtEA4TsZZllGCS+70fy4JSs/jYb3MNH8uDyvu9yl
yUxAzI8LuZ9S4WDajXwnWeh50ub8YTT/zUPFX3LP5zGM8J3hteTfc/HjT/jO
tv3RfCJULpoPdwdIXbZWGcN4517YntwuAcXFV9kq3OhEPpPa2Tjb9pOBfKZe
k/912+4e5DPN5waot8awkM+U3S2R8SqehXwm36MLb7fk9yCfuWOATz4X/90S
PvMCVlK4qqod+cy8o2V7JEa//GufeWJyOPyGRxcgfGbfpc3XL0l0A8JnavU9
2S5diO+3/vaZZztNbpIamYDwmfcXt8gswr8/4TNZ6rvO5InxMMJnduh52fUt
5mF7mn2vP2gQgK8PPRtflz6GEb5Sk5b0YbNhD/KVj0wocR77WMhXsvowz7yv
LOQrz5/PfrvQqfcfvpLwlBGNZ3a8VGQCwlP2MNwPdPCYYAc2uTwsnwmKP9Ik
xfD9I+Erbfy/iGTv5GKEr4zZPuYpt5eHrXda3VO9TwDWDoeKX7jHxQgv6Vid
mk116UVecn3NtxfS+OdTvrH9p3IpBU4ka952Ocz6735yg16QqsxjQPjJwAHp
KIO3dagf9yZtfEKSRQWEn6Rq2cq5qP+ZX7ep0Up33JGJ5tf91pp3WmmUiebX
6c0JTk7TYgLCT5Y0UZIeOjJQj44d62iQye1Cvbne1Zfmma2qRb25FK/llpnk
z6g3V1G0ZPchrQg0f25f+nPnTW6DaP5cZv4N691Go2j+nIm0nWlbNBfNn7v5
5YDPdTMemj/3IMuVyb+NixH9ue+DT+UDyaOoB1fWk5J+f7gNecj5JUyDuqc0
5CG3pTntAHZM5CEpgzk3yn/0Ig9ZdU+ozaOZhTxkhrX8Vl9pFvKQLKnUypkN
TOQhr0x1yute+OMhKxwXlFTu+uMhr5vTXp5z+PceUvm9WixTpwz15IqtFNMO
ebQCwkNu2fvafIUlDRAeUm3Y85yQbzeaT1d9Vnywm8pE8+m0zO4KpeQwATGf
Ljc/UGfkVDfykOmbJJ82Xx9G8+Xedpj4uMSMYYSHHKR+U3+oy8MIDznbLGI1
PMRF8+ey7j5ZDczGsEZZ+sFzWhJwtP1n9bo1ncgzGh50kp99xkCecXws8lUQ
1oM8o9Se4BbthyzkGcvfgA0Bb1jIM8ryKfve6+1BnjFaTsRaVuqPZ4wmj2iz
E34hz/i7TCyLeerfe0aZcc4vukYXIDxjc3zMgqcMBiA846xIqU7FOyYgPGO3
VJ317l9MQHhGp2Oc7VenRzHCMzZU10cOT3IxwjMezDNwZqvxsLZDm2bbSwXg
aQ/1AYlvYxjhEf0Elf3VZXuQR6zu2TEZv42FPGL9lfzJlB8s5BEdisRr7wb3
/sMjEv7wVQvfvvG5TED4w5IHnzUsuUwQrJU37e6J38eU9BX8vZmA8Ig89UxF
piq+H/jbI759WhK92YqH3Uo4GfXbSADm3Pa4TI/jYoQvnDO1YmuwVS/yhXke
ydrfi/HPZ7PXZ+cnCrw9VjJz9hLrH96Q8IVrNPLIvIdMcPHLKqfTJAbIgv0O
AX1MQHjD2AzJ9+nVXCyZez+qLZoESSm/pG238TDCE24xWF6RKMICM5/b5+Wc
p0AtV51HLvj1Ov1Jv9KRQ4HXjhvfam3sRd5w4UCBwhrVP97wKDuh5Hopfl38
7Q0bpYYuZ3KY+PW+MVV/phswC3+NhkUzkTecs0b9wwb8/rNcoXbu0WUC8Jd+
/GBuFRcj/KCdW9Dc9FT8+WHehe/BaRRIaTRfxv+IhTyhiEjYhbQqJjAdXSvS
MKcbjO0fno3D/yZ84cbMgtvh+Pp2SujNd0UqCe42Eug+ReFhhB/cuX1q5qYT
Cyg5vHJaFkSB111YEhIlLOQJwz1uxj/fxASEJ9wj1N40jq9XhB+MAd+b9PDz
qetts+W9BX5/uySf64H/nv5rr46d+blJ3R8QPtBOXIJzRKUO9epWJbk9YxVQ
AeEDY+QTJgUl/8zv694dGBBykInm921Y/uz03TEmmt93KzhS1wUwAeEDRZKl
mB/dGah/10//+LpCmIb6dkm2lgsfna5FfbtYD75tfG8+o75dzcGPKvPPhKH5
e3vBAtVMq0E0f09Wr3Pqu/oomr/3ZGuR4HQQF83f64AaiuXmPDR/bzNlPR/L
lIsRvbteAaszxiqjqD8XmhnoPvSkDXk/xQSrSdsrNOT99iS0q+rpM5H3e3vH
fhco7kXeb5nHtqWXmljI+909NzEQpsxC3m/0zrsFeXuYyPsxAfXds+g/3u9k
5ZySF3VNyPtlCz+0idf/996PLLImwVCqFPXrlMN0Hx0WbAWE91v/3vUmYw0N
EN7vhey1j+SL3Wg+3+TDvVpubUw0ny88t/bkg49MQMznu883GeWEPx8T3m9N
4jw/vaPDaL7eBQm5Re73xzDC+yW4FruaaPEwwvstO/eh7SB+/yTm7yXEnbr+
/NAYVursd3hYXQI6e6TpNvF3Iq/3+kW6UewNBvJ6XguMN79O6UFer36H6dHs
2yzk9V71mXIts1nI63GLh/rt5vQir+dM3y43Z/MfrxfJ5+m1lfLH66k5yYXM
jfn3Xu+dsuQhA8EuQHi99C0zlyeqGYDwesGnVj2dfs0EhNez8L2oKdzFBITX
cxoUq4zrHsUIr3cq7atY8yAXI7zezdAmo0OaPEwpNmTbvAIB6H8iZK5C2xhG
eLsPrV/Hk+b0IG/3XOLYgfvrWcjbfdp9mDy3noW83bcX6wMG4nv/4e0IX1cn
8WHUe6QbEL6OIsunOYnvH7UuPD3Nwq97X2pVl8NtJiC8nZ3CnlX9clyM8HZL
88jqynt42GrD365PtghA+6xaI8U0Lkb4ubqo/qcn9HuRnzvwWZjD+8QCWQYt
dQfyKFDDaPL+Rw/WPzwd4ees7+zf6oi//wKSUGMLnQ5EvmnaL8Hv74Sn0xGX
e53+mYtZPVJxc31Egm7wQ+hmAx5GeLmFpN7xuple0PzG3q7CiQKDvIoiZPDn
2R0yUo+XsyhQc++6PdLMXuTpftR1m7an/PF0VyUexZlkdwPC071MOaPWhK9v
5QcWyGW1d4P33jxfjxdM5OmweOFEa2MeVpV3rpW7SADGa9yMDGrkYoSP+21s
vfh3An5+hseUXrymwJFLC60fRLGQl8vpSs4JL2MCjoaE+85OBlgqWEt1+8EE
hJ/TDeMzcpDhYeRE06TsJhJ05/VcOSDHwwgfZ3D7qdimY/j6abmmQPse/jz5
IcFZvoKFvNzH7xyZZjUmILxcju0cu0XjTOTjjsp7G3bi60u5rPchX1MKvKll
NHDrO+sf/u3otfI0LIEOfO9MPnUexu9v1UdUX94iwZkN2oNV+Pd/eOfyXPYJ
Cqycu7ZnIX68Cd/29Vpt+xCdCQjfxgi/XXcA8jATWeGYU0spcFaIGmHwBN9/
fOH/Uh5HgcJL7gbufs1Cvm1d8FqFFXlMoPPym8XqeAaQPLl/o3kLvn9T1XOw
86VA8cj7D3vxz6t/uU1AJIYGDNdv4ezA10/nn5cdowAJ9htdraPi36/T9Fu0
jAG+3sf46q8pZ4GvQaazY8sY4CBvxenEHibgOzBYZJRAgo8CXhhI4vtl5Wab
zBeXKXAwT/GuPX6/J/zaTYefKb3L/QFJ6oLJdxka+LmRVbh6CN+XfXNROahI
gvyKHYxYfD3acW2JLCWUAldFR0o9wljA+4dJ8c4VdEDaHpbniX++UMalhNbj
JBi5fBFTFb+e0ukaChwrCux6O+/heB3rv3s1c1Whho1ugPBqy6+5qh/rqkV9
vLlxQyZLXlMB4dUYYtzLKwT+zEdUPRqj/W4fE81HHD919cRSfH9JeLU3JyWv
fDJiAsKrFSlNBxj6MFBvr/LEj/QKaRrq6T3d+t5SLqAW9fQMaWaDBTOfUU+P
mpy4gnU7GM03ZH+p2HtYfxDNN1R0StS9uGQUzTfU6eRu6bjDRfMNv8wYKJRa
8NB8Q/9nu2wN9nAxoq/HmbwbFbJ+FPXuRGtUxa86tSF/FrtLx4LfgYb8mXKs
Q0EU/nxM+LMfP7i5Vvm9yJ+t7HQ/WNLIQv6sOPDkpTOrWMifBUt1nXU8xkT+
rL1st8vizC7kz67OVio/lfnjz6azzuafvvPv/dnzDqMK9xslqJcXuQgTaf7e
Agh/5rt5XWGIAg0Q/uyVH/t8r2M3mn8Y9CXccwF+fRD+rPvVtWcOGH49/D3/
sFx5SiP0ejfyZ6eljSxqdw+j+YVqmzs/N9zE15+//VlNAf3KOL4+Ef4swqXk
+7lZLppvmGA8ESvhMIZteWL9K0tFAgouFa0nD1CRH9uNaehYX2QgP7bWoCA4
PK4H+bH+xPpfJr4s5MeKSkI8Rd6zkB9LupCa9ECkF/mxjCSvT8Vmf/zYHbuZ
Uzd3/PFjewNzNRbp/Hs/Zse1Cfsw2gkIP6YtrWk/U8IAhB8L6fIZ6E9gAsKP
re7kf1NFw58n//Zjy6P7PR63jmKEH5tMNZd91sfFCD9GkrrfwlnPw4wKC44s
yheAJbarJO7SxjDCf5k+uDnPBN9fE/4r6FvMk32rWch/5XutyuZrYCH/JWZi
OMpO6QWE97J8KrdiYX83ILzXxEfBter4en5bNCBm2S4mSIGt68E9JiD8V5HY
BfoXMhcj/FdWtc5KZ0seNkfy2/GTOgKwvvRmz9MMLkZ4rumelohknV7kubZL
wI3HPrBA/PtnMydyKbDU9I6Q7g3WP3wX4bkqn0yev3yTCU7HjYtIN9DBiY39
fRYD+Pr+t+9ae/7r8Zuf8Pc7OXYcBpOgyLIT10lGPIzwW5JvTv8s5PaCshWq
fj9O489Pt8ayAL6+OBV7evD3UODz53J105xe5LuWbrR8cc3lj+9SiF7mJ5DW
DQjfNfXwYrQhC79+eSQL9rdukLtMrrLhFRP5LqdRtZq8HTzseYBeRbGMAKx8
kKdk24rvZ//2WrThJswzngXET+eZpSZS4ECup5xqLAv5rfFDSwVOfmYCWDWb
6vODAVo319NK65iA8FxSGqqJiyV5GN1N7vHNOhL0LpM5ky7PwwivVQNDf3fb
sQCrbJC5LYACO+eX6Ix/YSG/NUfNJs5sORMQfms/392rgvh6Tngteevfb4X3
8rAgeojzKWMKfLt+w97WKtY/PFaGTC5t/DEd9NQPBlmOMMGVmNULLt4gQb0e
A9H1pjzMa0ZbnXuMArWrXT414c/nhLd6dlpr3QS+vyW8VQeT0nVrK74/oSum
71pMgWW/69+bhrFAGSgfromlQOv7hzuv4c/XhLe67Ua/5JfNBPf0P/k5hDLA
ryMrlu3Hn0fiY2aDTvpQ4IWa+W62NSxgV2ZxftkDGhBd++ZUE74+MXmhR/bq
kWBIRpZWFL6eJ8l2pk4BfH0u5bwWLWWBxat1tdZKM0DcRbq8En5+G1UK0slx
JBi2qThFfwv++SwWtadepMC+g0mPJvD1HM2P5Nu6fzn2ECic6nzXLUADZ2RW
OE3jv8+ivrAlUgtJsHHD/GVXd/EwrYEuuCiYAldH1jh1FLFA+IqPasek6YCa
Q0srxddzcVLos7DDJKiat1qgEF/PXd8ZrK6zpEAP9+/lFbWsf/gpmz3hu89e
oQOHCV+xDvx6XbqlgjPfnQQTOiM3vcHfz7b3o7fgYQq8fTLLgh8//oSn4nyM
fue5CT8/9/y73Lzw30usoDodf/175zcA67M0kFUosvIdfj9p16qz+LyeBGWD
JLkf8M/D2hyniTlTYOiLE6G1+OvtkijzlaV3gU8BSz7tYTNBrmq9xC0yCebK
Dz+tNeFhZd+eTwUP04B5ee2iBfjvi6Rf+4B/Hwkeq11tEo0f/zlmTrue7aLA
O1fOOonj5yue8qaJZo/v9xlee/Tx65PwT0svpfwmG/Iw1cVOz4bTaUCQr7Aj
Bj9eQ/lW52mG+POPcWrQX79XrRNhdyNdKdCwQ+hUFr7+Ep6IIeewJFLyCugv
mKZmq9CA27jNYyN8/1mZvnftCyUSbLeXWpiC7w8crzcdWLuRDt4K+MjK468v
W74nbZkjCSrwLoRdwe9vPbLyokL78POxxOK3EH4//beeiXj///mn0jBv0V9/
O4IC3e6QmI90QPz3O9ZKmnuLCaD/3/JhQFwsfryJv/8/8y7/f69P/P1/AMwc
PUk=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{901, 2748, 2746, 422, 423, 424, 425, 812, 708, 
                622, 552, 499, 466, 834, 730, 644, 574, 520, 851, 747, 661, 
                591, 426, 813, 709, 623, 871, 767, 553, 857, 753, 892, 667, 
                880, 776}}], 
               PolygonBox[CompressedData["
1:eJwV0slLVWEYB+Bj0sKMypyHzP6BBoeGpUGBRQWBlWWTEBSREY0mGRQ0WalN
uigocFfZYMO1eV40u6zUJoeVLRIabHy+xcPvfX/fOfdyzz3jKtbPrxwSRVEc
7bQNi6IYI5RvlDHy46PoqX0T4/mh20+y/qy9lJG81bVRoH9m38wEfuoOkKI/
Z1/AKN7pblDLQVKdn9cvJIkO3U0OkeasRbeI0XTqblGof27fwkQGdYdJ11+w
l5FMl+42dWQ4u6hbTArvdXeoJ9PZJd0SUvmgu0sDWc4u68pJ46PuHkX6F/at
TOKX7gjZ+lb7UtL5pLvPZP1L+zby+a2bo+sx11HCUV2O7op5GRnhOdv7ZSOf
nc+wd5r3stYcT3G4Xn6TNfK03CgTeeCeKfJV+G5ZJVfLiF0UhGciv8od8qTc
IBPYwx/3z5W9+ipZL9fJoexmlr1CDsqdsjm8M3I4x9w7Rl7VLWdV+DyZGd4H
8xfZRLfrZtq7zPuYHq63f5dneOh8qv21eTtrzHEUhv9MDshT/HXdPHufuYHZ
HNfl6q6ZV5BFj+4R0/Tt9mqK+Kc7wVj9dftKsunVPaaRPGex8JvJoU/3hP9P
hmz4
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{387, 2747, 2744, 596, 682, 786, 392, 503, 557, 
                627, 713, 817, 439, 472, 525, 595, 681, 785, 391, 502, 556, 
                626, 712, 816, 438, 471, 524, 594, 680, 784, 390, 389, 388, 
                437, 470, 523, 593, 679, 783}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVWEABuDj1QyEfkLDda72VtokaZaZlBtbFKSWlppCEIGV2gBR6SZd
pFaW5Y/QJrXABm2wyVZNG7VBjYIiiJ5v8fC+33vuwDn3xisbyxpiURQl8ICB
lCgapN9wkxu84AdZXniI+6xMjKI+23PmybTVM8IK167bnjFHhq2OYZa7ds22
UF/Had6Rb39qnyXduZYhsu29tmR9LaeYZKN93F6kt/OZbbbvtjT9IPfIsl21
leqdzFBmWyB7+cUe5zx5krdscB4L967/ocJ5s0yS9bTpnyjWv4V7kY10247J
OblLpobPlP9ktTwgj8q7MlNe8d6zchFH6Le3yr+ySm6XZ2QyDXQ4N8lpuVMm
yRR5ONyj/pPdeq6MyVpa9Tes15/4vj79N3udC+UFPrLV+avrXfos5c5xWcMd
Mpwvu16iX2SKHbZEuYYWXoff1PbY6wr083xgi+2LbVl4Dtwm3dZji+mraeZV
+I3tj+yb9HO8p8g2Y1uq7+cWaeF52xL0VZzgJXn2h/ZpljjvY5BUe1f4k+s5
HGeCXPuofYrF4bkzQNx+yfYftkRk1Q==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03ecz3UcwPHL3tzZ2xmHqBRJRpnhKCESJTMJnWwyKntUPDSMJqFklJHd
IDsNIqOByMgolArl+X48+uN5r/fnfb/73fe+v+8ld0lr9eQNCQkJfX2JlvZl
n8Zypj6qeRlCT+eWmpH+bHPuoUUZThPnBnpZn9K12lULMsncXnPxjbmXlqSq
+XY9pYsYTlvnbOyKn6GZ+T/dyHTSUcbuO53FEzSlod1fuo7JVKO63WldzAg6
kJ6y9vt1dlwLqXEdZCAjmchMOa87oK/RO64l3pM77H/VJYzkYbKQYn9QX6cP
zeO11LA/o0sZxSNkpbz9IX0j7jn3xmu50/6sfsAzdCQbFey/1zdJ4z4a2f2t
65kSP0tNu3P6Ic/yoHN2vozPNK4rPmw2yUtx/eY87DFnp6L5B32LTuZ89DW3
0kxsNz+uxWhhvkf/0X66QbtpIZ7m+bjvmptB7I57qaUYSU3nWnr+/+dwmXbR
AgzjOed2moOBfBWfuZagU9yzeHb53NxdC/Ny3GNN5FtzDm40/6hvx/NJa+fM
7DDfT2PzFf2YF+KaqG33my5nNJ3jntulY7P5FXJSyfknnRP3IP5PaGJ3VT/h
xXgv6tj9risYE38nuahsf1jn0j/uc7yWu+wv6ErG0pXc3GR/RN9hQPwt8Vru
tr+oHzEuPgfycLP9UZ3HQB6I15LILb73s85nEG2oSxJ5yUd+ClCQQhSmCEUp
RnFKUJJSJFOaMpSlit9xTBcwmLbUoxy3+t5xfZch8axSP67B/pKuYnx8tqRw
m/0v+h5D49mgqd01/ZSpNIj3t/tDVzOBx2hhl54t5lcpT1XnE7qQYXFvnLOw
0/wQqeZ/9TOm0TCuz+5PXcPEeJ1zTr4294jnyZyBrfF7tQgzzB01icHsde6j
yYyignM1Palp+n48b5qfofG/FJ+NZmUAXzj31OKM4DoBYZ5S
               "]], 
              
              LineBox[{146, 69, 104, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$181585#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jnUcBuDXkZGRvfemKHtTFELI0aDS0FJCKZV2jj0yi4wyM9oDxyaU
vSqr7Owyyyy6vp/+uM79+96/53nPeZ9xSnTqntwtTSKR2OVHCtnSJhIzkhKJ
tmRmm24OfehLP7I7Zqa9ZLKwXTeXyvrV5h5U5LyuPzn0s8ztyMoO3Tyq6NeY
X6QSF3QDyKmfbb6H1EyJxA1ypz6VqvbWml/iZi7qBpJL/6n5XrIl/f995lNN
v87ck1u4pBtEbv1n5vvIzq+6BQxmCHnsf66/nxz8plvIUPLa+0LXnpzs1i2i
un69+WUqc1n3Hvn0X5o7kIs9usUMI7+9r3QPkJu9uiUMp4C9r3UPkod9uqWM
oKC9b3QPkZf9umXU0G8wv0IVruhGUkj/rbkj+TigW05N/Ubzq1TlH10r3SHr
YTRnlK6w7jvrh8kf19n8pxzDQftNzLut+9PFOi2N4nh5Xr4lJ8W9lpn53jm1
5Kb43bKX7CwT9KZaXBN5Vr4pJ8gX5PX041/nt5aH9b3kcNlVpiOFFuZO8rJ8
W06LZ0ZmYbRzi8g5ukd4Mj5PFojnwfqkHMvvjmtq3mM9gMZxvPmCnMwK+7XN
m61f4xnrNFSPeybPyYlcdVwb8xHrEbTkfV1R3VzrRynIId1K6ui3mF+nBtd0
H1BMP8/8GIU4rFvFGIrbS43vTGGO6H6Id8D7M1aWsD9f/zhFOKr7kbr6reY3
qEmCD/Ul9Qusn6Aox3Srqaf/Ke4JtUjDOH0p/cK4lhTjuK6Zbq/1QG5nja6+
7ud4HqhNEuP1pfWLrJ+iOCd0d+r2WQ/iDtbqGuh+iXtKHdJyt+6oHMldTHBc
Gd1i66cpEe+x+VR8N/6w39y833owTeIemC/KKayz39C8zfodnrVOom68b/Iv
+RE9rDNxnXVbeSyeAzlKdpPp6UOruO7ySnyenC57yqz0Z6LfV1YuifdWdo7r
IK/Kd2VJ2V6ejmdCjpPdZYZ4B53bQh7QDeG5+HtoGs+JvCSnst5xt5q3x2dS
j47mv+XHpCPZfFyOpnV8R+eU0y2NZ5tSnNS11B20HkozNuhu0+2w7k190sfn
6svrl8U1pDSndBtppN9pTqEBGZikr6Bfbt2FMpzWbWIyN8b/jfiOlOWMbjNT
uMneCl1XynFWt4WpTGN6/H/3LnwiZzCTWVR03sq4X5TnnG4rjfW7zH1oSEba
6U7Eu0sbZjuukm5V3I941qyvyQp0sD4T75UcL5+XGenLfzCQ8T8=
               "]], 
              
              LineBox[{844, 740, 654, 584, 467, 835, 731, 645, 575, 521, 427, 
               814, 710, 624, 554, 500, 468, 428, 429, 430, 431, 432, 433, 
               434, 435, 815, 711, 625, 555, 501, 469, 836, 732, 646, 576, 
               522, 852, 748, 662, 592, 868, 764, 678, 886, 782, 904, 436}]}, 
             Annotation[#, "Charting`Private`Tag$181585#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUYBdADl1ZJpUNaQRpplEZBGqSV7hDFxsLAQDokpLvBQEWlW0Cl
DFIBpfNRBEHX+2M97/72fHPPuXNmJn+Xgc0HJEskEknJE4nhSYlEiZSJxOcp
EonZZmvzA/MeVnKX9XNmgkXMtP7ILBDn8KvzO5mn9fPN983RZi5qyEPNO1kq
f2wW5VvnNDD36gZTjFesU7NA/tvxfvJf8kQa8aGupG613Ib0HNJ11p2J70xN
1uoa6vbJz1Kc67oRlNJ/Yd2WDBzWrWMkoxjNGMYyjtL2f2lfOzJyRLee8ZRx
7CtdezJxVLeBx/T745rxAP/oJlBWv8a6A5k5pttII/0B6+cpwQ3dRMrpv7bu
SBaO67rozsrDqcUmXWPdQfkFSnJT11/3d/xONI6pK6/7Rn6Cu+PzrJMxS/7N
8a7yubjOjJFzU1t+M+4Blsmb7Wsi/yS/yEg5B6XkV800LGGh9RSzcFxv/nXe
APO6foE5yRxv5uNTmlgPMzPF57DKerp5f1zj2O/8B+O+0c8xn4xrYGaN+zT+
dzM5s+VJZkF+d04387xuBGPlPNSR3zLTs1zeYl9T+Wf5JUpzSzdQ9488maYx
dRV0a+VOZOWErrvuQlwL6rJV10z3i/wyZbitm0JF/TrrzmTjpG4bzeM5sh5C
Wf7TTaWSfr11F7JzSredFvpD8cxQjkQ8W/rK+g1yV3Lwh24H05jODGYyiyr2
brSnGzn5U7eT2VR1bJOuO7k4rfuOlvrD8VtTnmTxe+ir6TfLPcjNGd0uWumP
WL/GgyRnrr66fovckzyc1fXQXZRHUY/dusd1R+XXqUAS8/QP6bfKvcjLOV1P
3SV5NPXZo2utOya/QcX4HtZp4z0mp+Ap+UbcqzRjvnMe1m2Te5Mv7nPrJObI
5x3vJV+OZ4Rxcl4ekd82M7BCnmbex/f2tzGPx/c2h8b/Z+bkEyrF/2ami/cj
i62nmkXivUNK60HmTXOhOdWcYN7LZzS3ftfMHPdy/E3rGWaxeI/67Brmdl2f
eK7lbHFu3OdmCubKF+zrLV+JZ4RHecc6IyvlHxxvK/8W7wIqk4qn47mO+44W
8f3sq6nbIfclPxd1fXRX41rRgB917eL5jOeQKqRmkb6WfqfcjwJc0u1lMbUd
+07Xn4Jc1u1jCUtZxnJWUMfeXfYMoBBXdPtprz8RvxVVScNKfV39bnkghbmq
O0AH/cm4HlQjLc/obsVvTEtW2VdPtyfuJ4rEcx+/HfPka473la/J42nIQV1H
3Sl5GNXjHrW+I96fcjoGy7fN6UyU89NKfs/MEvdZvDutZ5rFWRO/v79bP+67
eM7MQeYIM3u8UylqPcRMFfca860nm4VYzf8lrQ4i
               "]], 
              
              LineBox[{1269, 1174, 1100, 984, 1374, 1255, 1160, 1086, 1035, 
               948, 1352, 1233, 1138, 1064, 1013, 985, 949, 950, 951, 952, 
               953, 954, 955, 956, 1353, 1234, 1139, 1065, 1014, 986, 1375, 
               1256, 1161, 1087, 1036, 1397, 1279, 1184, 1110, 1418, 1300, 
               1205, 1442, 1324, 1468, 957}]}, 
             Annotation[#, "Charting`Private`Tag$181585#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8zlUYxvHH3mTvsiMzMxQKEZUtIWUUSkZGoaGsSslIJUQhIyNCGdmU
WZS9s0MhZKR63398Xtd13ed8f9/nOefc5/kV7NCjafckiURiQNJEYnWKRGJR
qkTiLsxImUg8jqy4rL5LrRZ+lHugAtaoL1YrgJlyI2TDX+q71R7EJrknKmKt
+hK1gpglN0Z2XJTb4Dj/Lq6Yt0d+CJvlXqiEROpEopvaFX4C1pn3rVwIs+Um
SG/OK3ICOeRLtC1O8CNw1TN75drYIr8Un9kzg+TUqCwnkV/kr/L38dP4iXxh
/gM+J+ryC+izdL2/+R1fGPXlr8wtST+WW9GmcgbaX25Mk9DqdAZ9huaMNeaf
wqPyyVgvOiU+O31Pzk/fkZvTzLE2dB695t37aB1sNa+c+kS+d6wt/yafBlXk
pHL3eIafhCLyKDkXNvg7S2kRzDHWDLliL+V2OMW/j7/N2x/fH9vkPrFG2Ki+
TK0o5srNkRvX1X/AcvVimKfWAnlwQ/1HbMJmbMFWbMN2/ISfscJzd2O+Z1oi
L26qH1B7GNvlvqiKHerfqxXH1/ITyIdb6gfV6uEnuR+qYaf6SrUSWCC3irWO
Myg/jdP8SPxj3qHYX/wsv4wc1u8tOW3sp5xM7sH/zX+GovJoOTd+8fwqeg8W
Gitl7BP+ST4jP4BvQpPS++lM2p7eGWc2zgkek89EL9DP47zEeZTvpO/KLWiW
ONt0Pu1Ib3vvYf4RNJB3mH8vnSS3jl6Rc9LBcrp4t5xc7slf5yejmDxGzoNf
/b3VtCS+MdYad+FafF6c5UfhX/OOxDuxU+6PB7BLfY1aKSyS26AA/os7I/oe
a42VxmL1tigYvY+9xtapl8ES+SkUin7FUbWGsc78ANTAPvPXq5XFt3K76OHo
AxyLXovvww9ETew3f4NaOXwnPx09Emde7oDf+dGxz/gt9gO7+FdRCwc8v1Ht
XiyVn4kzED0Qe4Fz/JhYXxyXH8du/rXoNWs8RE4f96acQu7F3+Cn4GD0kVwe
y+T2yGTOQDlZ9Fb0E+2E8/zY2BfjI+SsSCGfoI2why9v7DP+9ehTfiifAbX4
OXG/qKfkX4pn6M3oLzo9+iLOn3w3HSs/QfNGL9KF9Dl6KHqbrxBnT15ufmk6
Ps487SDfQV+Vm9Lk9AE6K3o9+jvuVlzgK6t/wX8YZyXuQz4bUsonaWPs5d9A
baQyp7faLf4LHI47Rq6IFXJHFI95OBJ3j3olfC93Qom4L+J74A9+HFLjVPQo
9vGD4g7znmFyRtSJOXIf/h9+arxD/lDOh6Nxv9HKWGmsjLFP4zvymfnXYo9Q
g58d90TcObRznBO1P+UqdKrcjn4UfUHfl1vS7PEZ6NdxBmga46djbaMv5P1y
BTpZbhO/C3GP0uFyM5opzh2dS+saS8P35W/HPcl/yU+LteHH8flxLO5rWgWr
jJU1NiHWjc/Cvx57FHeFfJt2wUX+4+hb4yPlHEgrn4nPgQP8W8hn/G35jjhX
clq5H/8vPz36L34n5PuwWu4cd2rcO3JXXOI/QTqclZvjID8Y9aL/4jdGrSrW
yF3ifMY9JD+Py/x4pMfvcgsc4oegfvRS/D6pVcNauWvsKTLgXOwJDvND8Uic
0/gtU6uOdfLzsV7IiPPRQzjCD0ODOGvm71C7H+vlF1Aueh4X1FrFmeKHo2Hs
tfk7o4ewQe6GrNbsDTkVasb/JXGP0f8BU6RDsg==
               "]], 
              
              LineBox[{1899, 1779, 1690, 1552, 2030, 1881, 1761, 1672, 1612, 
               1512, 2003, 1854, 1734, 1645, 1585, 1553, 1513, 1514, 1515, 
               1516, 1517, 1518, 1519, 1520, 2004, 1855, 1735, 1646, 1586, 
               1554, 2031, 1882, 1762, 1673, 1613, 2059, 1911, 1791, 1702, 
               2090, 1942, 1822, 2119, 1971, 2151, 1521}]}, 
             Annotation[#, "Charting`Private`Tag$181585#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFGUUBuAhlFBCQlIBpVMaVLo7BJTukO4O6U5FFOnuklBBkQZJwSAk
lMagpEG83x/3dc7zzM6y3+zMkqFFl9qdY0RRlDZmFHWIG0Xp4kfR/HhR9A43
5a3Mpph+u64+CTip60h6/QL5XW7J25hDcf33ugYk5JSuExn0C+Vi3Ja/pY7u
F7krGZmrK6HbYW9IIk7rOvOGfpFcnDvyd9TV/Sp3IxPzdCV1O+2NSEx3+Z45
mTOON5Mv2geRlyFyTGbZuzj+pn2xvQR35fby3/bRbJfrySfD+zLenpDM9n7m
U/NT5ntdKXmXvXE41x6fV+w9zPvmInOKOd1MyVp+c15z81J4D3OwOSmcx0ry
yR+ZsVjCbPkzMw3r6er8jOGYfpZZ0hxhxuFfxzqY/+jGMNWeLHxX+vfNU+Gz
McGeiCz2/uYzcwYLvK60vNvehCT0lB+E9+Ks4y3ky+Gakj98L7pMuqX2UtyT
d7CQMvo9uqYk5ZyuO5n1y+TS3Jd3sogeZHFsub4MD+RdLKYnvehNVq9Z4XhZ
Hsq7WUIfsoXrqC/HI3kPS+lLdsdW6cvzWN7LMvrRnwEMJIfXrfaaCjyR97Gc
svq9umYk47xuEDn1a+SKPJX384HudLh+ZGWFrpxun705ybmga6m7Er5zCjBY
lyvcK/ZKPAvPonzTPpYDcn35jL0X2Rgg/xfuE1Y6Xl7eH541s0W4F8yXwjXj
1XCe+dBcbE4L97OZinX87vxW5tVwP5hDw3NlJgnXjoLyUDN2+M6ZI39upmUD
Q5yfO7yXfrZZ2Rxpxg2fMfxOmLd045hmT84P+gbh2dD1JjsD5efhvVnleAX5
gL0lKcLr5Efmx/zheGv5mn0YhcL11OUJz4y9Cs/lgzTUnZX7kIPVuorhM9hb
kZKLuqG8Ff4muSoRh3RrGMZwRjCSUYxmDGPJ67wvvb4aMTisW0sl/UG5Nam4
pBtHPv1GuToxOaJbR2X9IbkNqbmsG09+/Sa5BrE4qmukO2fvS07W66roDtvb
koYruja66/bhFA6/BboCus32msSms3zbHM8xxxvL5+39yMUgOWKmfYPjVe1H
7O3CPWp/OdwP4Rqbj81PuOp1beUb9hFMsSelSPjOzBfCbwJz5Znma+EaMtF5
Bc0t+jlmLXOUGS/8ToTz5C7mHXOhOSHcE+E+D88wPzq/iXlBP8/sb040E5M7
PG9mDL6wzzBTh3/XOdXMo7oPw71qTxA+U7i+5hNzOte8rp38Z7jHKcokXSHd
V/bavEhX+W74dznueNPwnIXnljxs1FXXHbO353Wu6yZTWP+1/B5xOKHbRI3w
t8kdSMcN3RSK6L+R6xCXn3Sbqak/LnckPX/qplJUv1WuSzx+1m2hlv6E3IkM
/KWbxtv6bXI94tMt/L8T/u7wPdtThN9C/gd1diWA
               "]], 
              
              LineBox[{2530, 2428, 2352, 2232, 2642, 2516, 2414, 2338, 2285, 
               2195, 2619, 2493, 2391, 2315, 2262, 2233, 2196, 2197, 2198, 
               2199, 2200, 2201, 2202, 2203, 2620, 2494, 2392, 2316, 2263, 
               2234, 2643, 2517, 2415, 2339, 2286, 2665, 2540, 2438, 2362, 
               2691, 2566, 2464, 2715, 2590, 2740, 2204}]}, 
             Annotation[#, "Charting`Private`Tag$181585#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{385, 386, 384}], 
             LineBox[{906, 907, 905}], 
             LineBox[{1470, 1471, 1469}], 
             LineBox[{2153, 2154, 2152}], 
             LineBox[{2742, 2743, 2741}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution 2\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
2HgUE9M5mbfwQ6hybiQW24/74feqEbevQHvXq1qjq8GI1Z9qRpacA3kzKsRX
qlRUtflsV43EAsjsUb4+cYaKcq+Vk1W3LoHR/KM+tem9CDx80RagQYZ/XySJ
vDHG5vN0ikPgbzJkkzKLF8XqhwKDnaGL5yjwut164Rq2/vg0Vuof/aHAcAUd
Tw5s/i/4ptyymRCC+rtyOYsE2WGFnL05q4Un2LKLnP7qEQXdvVHgpFtWDExO
2iv1uD9H/RuTVWU76sD1a48bf73MQoFRQpIyHsNgnp5/+bNiK/KpGxGULBkH
5+SNRuIrOpGQ+tKhBecp0KW45tEZ14MyM5b5ku7MgKF5dkfub71I/9N2y8yg
OfD72i8ltotUZPFq18ZTfguA9ViC56ZjVKTvcueg2P0l0Jo6WS7s3ot0J9u7
r0XQgPTwE+VtX7oRxVbtq0UIHVi67HEcHWpDIZEmrA4Za6A12FSg4FEjsvse
+OjODSz/h/dJaIWUop0ifvNGnbyQb/zRY7twVmhoH6NAucUHN5BN82xvssHP
RdKPpfv5oN+9hzveMBMh8v2p9OI6GcorHz+7aEuE5xbmQq4Mk2GxxKfmOWz/
1g0ZTp4zp0A6T6tOEzafxaWZVixTFHho4dujSuznJO2xpgYnfth6gVC7AXu/
27Vbmk2z/PDoobY/g8lEuOBA/qzgLgQ3za5++MfKDh3Ynt53eP8JBO37Q3s2
7oImvWzHjE9XA0MN1xvTR5LRubyJcs34UWBV1krwj2lHtSVDRmfaJwAx7UWu
eHI3ep22k/m+wzSoSdF2ksLy9bdlfw4tz1nAlh7wVVOYisrMWwI0A+eBZ9ho
K68hFUUdvUvr9VwE7tIXf+TO9CKe1Z36VP9lkGuyyXhfVQ+y6imQ4gtbAY2x
fJTzIZ0o+2Sg/PG4VWAcLJHw+tFf1FMZfiE7iQ8eX7pfcSefDb7jPn05eCcZ
Rr5R/34fEGEzD4yCb8nw7vXKZxvCsPxz1THXcw8Fnin8vqUU28+ivgpvij5Q
4M3Cflt/bH94GaY1ystj9ZKCgzsf9rrFNoXlByVCcJY+9tiAlx0+2EKkzsQn
gtW6jW/HLK+hz/YRma0by0GBQtIBN7d41OYW/Fpxfgo8kvM6+nq2B+XrKoc6
L84A/o38LXdne1EI531XD4550FLj+CwCG7/X2E/PZxsWwbr0KiV3GxVlK1VX
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
//1Cx0dtsYcKFqqODNxG54PaaD8yav8Pmn9img==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{565, 3251, 3249, 564, 968, 860, 770, 697, 640, 
                603, 987, 879, 789, 716, 659, 1003, 895, 805, 732, 1020, 912, 
                822, 1038, 930, 1057}}], 
               
               PolygonBox[{{1054, 3248, 3246, 551, 552, 553, 554, 958, 850, 
                760, 687, 631, 593, 985, 877, 787, 714, 657, 1002, 894, 804, 
                731, 555, 959, 851, 761, 1023, 915, 688, 1009, 901, 1045, 811,
                 1033, 925}}], 
               PolygonBox[CompressedData["
1:eJwV0rtL1XEcBuCvWZl3MzumQtmiSyDkZt5v7f4D6dFKK8o2bSpSK6hBMMK8
dRu6aGUOLlY2l+ZiLbqUmpkuQZCD4PMbHt73/XzhnDOc4/ErTZf3hBASmGYi
LYRxmh3L+JwYwhn2MWPfJIXndjk/9EFaOMUXt2b2897uIZUXdgU/9YfEKSeN
dF56q2RFH6KVCjJ45V7Fqj5MG5VkMu5ezZo+wlmqyGLCvYZf+ijnqOYgr91r
WdfHOE8N2bxxr+O3/oh2aplzayGJD3Yvh3hr17OhP6aDOubd4hwg7A1hQObJ
j976WLG7OMqi/V/e5SQ59qRs4I++I/t5om/K6xRFv8XnDckL7kuyk2y3mEyU
D2SBnPP+T79Drl0iU+WYPCbrvX/VW8myk2WCvC/z5az3v3ofMfuETJGj8pa3
VdkdfVb0X3EflN/ct+U9Sjlsv5ONbOpP2dJvUMxFe1lejX4j83YDC3pb9H18
sm+zpl+jkO92jCn9NFv6My7RSC5H2AXYiVdk
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{516, 3247, 3244, 664, 737, 827, 935, 521, 642, 
                699, 772, 862, 970, 569, 607, 663, 736, 826, 934, 520, 641, 
                698, 771, 861, 969, 568, 606, 662, 735, 825, 933, 519, 567, 
                605, 661, 734, 824, 932, 518, 517, 566, 604, 660, 733, 823, 
                931}}], 
               
               PolygonBox[{{995, 3250, 3249, 602, 639, 696, 769, 859, 967, 
                563, 601, 638, 695, 768, 858, 966, 562, 600, 637, 694, 767, 
                857, 965, 561, 599, 636, 693, 766, 856, 964, 560, 598, 635, 
                692, 765, 855, 963, 559, 597, 634, 691, 764, 854, 962, 558, 
                596, 633, 690, 763, 853, 961, 557, 595, 632, 689, 762, 852, 
                960, 556, 658, 715, 788, 878, 986, 594, 724, 797, 887}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVXEcBuB/JhJ0naqFOZRXLVJQCuoz5NzwEYRGyyGHjbmpoHKMFhHR
IhfN6aqyrDaVlStTG6xF00bdqKUpFIjPWTy87/s7VzjqjdfUH6xLCCGsYZj+
WAgDbHfcRgH7aWWAZQ6sDeEF+fo+WuhnKfqs+3Py9EuMsME+wSTVdjMP+Bv9
vNsz4nov70i3a/lMld3EfRapdhsiV+/hLWn2cT5RaU+Qrbfyi1N2kTzHPPfs
Bar0p2zV98he/vPVzpftzNBtl8gLLPLGviITEkNIlenymPxIhWe59g09JnfJ
DNkplxmP3s2+qifKLLlRtsifNHqeY1/X18lCuUmelXPc9fyyXOGPnupZpf6E
LXafTHbbLXv4xxf3azLJPU+eZpou92J5ngWG7RR5lA+U2ztlB0uM2ZmymR80
2DvkGWa5Y/+mQh8kR58krrcxRaf9mmT9CBOU2e/ZrDfxnXr7NvOU24/J1jt4
Rcw+HP09KbVHyYj+13wj+lLfYo4y+xFZ+kVest4+FP1O7LVPcpNZSt0ekhm9
E6u/hGW6
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt02dsllUYBuCyh+y9peyh/GGUXQr+kL1klgRlD4FgFAQUlI2RIQqI7C0o
Q9EylCUQNLK3AaQoyBIIQ8OQ4PUk/Lh6389p+vV7zzlvYq9hHYZmSEhIGONH
5Lt+5OAvNpsPyZ484G1zmnyVW9wzn5NDaKkvlzW5oJ+U/Vis75WdeKbXZJae
yK/6x+zQ2/JI78V6PZnr+joyMsqck+/0d2jFCnMtfteXUItPzOU4qE+nN5kY
be0FvtdH0JraZCYLWcn2fB9ykaaPpA11mG2tPIf0GfQhO+9Zy82W2DvaksSn
1ipwWJ9JX3LwvrU8bI1noh0rzbW5qC+lLp+ZK3Ik9ot+5GSstbxsi2eiPavM
dUjXl1GPOeZKHI09Yafejsd6fzboTbihn5ED+Uo/ILuRKfbLPE7mY7t+WL7O
GH2LbM5t7pvPy7hIj+lgXi2T4vO5ZD4l+/OQ5eZ9sjN349LxR9wvnlLf0lxZ
mWscMx+TvfmX2eZdsj1P9ItyOAP0jTKFm/pZOYiv9Z9ldzLH+Zo/kPn5Ic6Q
rXqLuOd6R9bodeN7xT2jAfPMVTge58tANpmb8nfcW3LzobkAP8Z58xpfmuvx
Z5w3DfncXJUTcd4MIg/jrRVkR5w3nWjEfGvVOBnny2DyMsFaIXbGedGZxnxh
rTqnYj95k3xMtFaYXbEPdCGZ/EyyXoTd8Rx0pQkFKEghClOEohSjOCUoSSlK
U4YXKUsi5ShPBSb7/KLsiWelGylUZIr1YvwUz0V3mrLA2kucjnNgCJWYaq04
e+O5SGVt3CEux7tBMxaaX+ZM7DtD+cbcjFvxPlCZaeYS7Iu9YJvekn/0HqzT
G3Al7jj79S5k4BXzIlmDs/px2Yf5+u54L/hPT5dvMUz/Nv4u7k+8S+bf5GA2
6r/I1Hi/yBLPwwiexT30+49kSa6y33xEvhHflcnm7bIVd+K9MV+I/xnvDP8D
qh66iw==
               "]], 
              LineBox[CompressedData["
1:eJwV0jcvRWEABuDLgB+hjurFjE1NGDAY9ERiEDXiF4jOrpsQBnViYdAHiUSi
RCKixaAsSBDPGZ687/ude+49OblJjW3lrRGhUKiXHOVBzpPPtB3mQh9nR6/g
V29nXc/nVV/hSK8mimR7SMayp5/KRvr0LVnKp34j26nRl2QuLzza57KZbxbs
PVnFB5Hc0c0fBa7PyEyeubTPZFPwO0zYu7KSt+Ae+1Z28UOHvRF8T3Bdv5Qt
rOrHwfMRTYo9LOPY1/vZ1sv40mtZ1vN40hcpZNbO4kqfpJNURpzFc6APUEcR
aYw6T+BQH6SeYtLJIEwmWYz5XCJHwXungRLmnGVzrU/RxaZdyLu+xoleSwz3
9AR/iEj3iX88akng
               "]]}, Annotation[#, "Charting`Private`Tag$181675#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GV4VnUYB+ADjBgMBkNGDJQBknbR3dL4VWq0EiJhe0lKKIhKt0qZ2Era
AkpLqaS0dKOXcT8f7v2e33NgO9d7/ufNzhnceVCuJEnW+5GSO0nezJMkNdln
fp2HeYC85OMt12qx3zyNLtQkP4vta3PAPJ2u1GKDXRfysFIfSQGW6HU4aJ5B
N2qz0a4rKazSR5HKUr0uh8wzeTctSbrLOvxk3428rNZHU5Blej0Om2fRg7r8
bNedfKzRx1CI5Xp9/jDPJod6pFGYt11rwBHzHHpSnyK8Y9+Qo+a59KIB6XGv
9o04Zp5HbxpSlPfsG3PcPJ8+NKIY79s34YR5AX1pTAYf2DflpHkh/WjCJrse
5GetPpbirNCbccq8iP40ZbNdDgVIUjx3WVquc20cR/QnuZmd+nX5Evdwk/6h
bM6f5n/kVN4wn5YvUDnuxe+bIx+x/10+RoZdZpwLOUNmyU2uXzFPoKR+pywk
F8hbZDPXt5h7UlRPlbnkNFlGfuX6RfM4MvXbZEE5X77o2lH5VPyuOCv2s+Qu
+xvyZe6lhP6RbMHpeCc4Yx5JFR7V98khcY9s1puz1dwr/h5f6+M5Zn6a8uzW
M/nY3JIz8T4xgBaUpFScB+e6tCzDJ/5dK87G+8VAWrLNrnd8NnyjTyCLT/XW
nIv3i0Hs1x+nFFv0Vmw39yGNb/WJlOUz/UHOx/vGYA7oQ+NMsFVvzQ5zXwrz
nT6J4+ZnyGaPXo7PzW24EO8iZ82jqBpnQD8oh8WzY5t+VU7krrgP/RfZjyJ8
r1+K58jtcQb1E/JZKsS77HnOlnvt/5KTuS/u0X5RnF/7L2Rb0u0u6v+aX2W5
+ZwcHWfatWrxPsi5spwc4voh83CK61kyRc6UZeV216+ZJ8XnrN8dn61cGM9e
tnF9p7k/xfR0mVtOlz+4dlmO5444h/pJ+RwV+VX/W07h/ji7+peyHZfiO4nz
5jFUj2etH5Yj4t7YobdlV7x/8d7woz6Z8qzU23M5vsMYSjt2x1mP+2W9PoVs
VukduBLfawyjPXvsBpDBBv0VKrBa78jVONsMpwMVWWPfiWvxXccIOlKJW6kc
e+9DFVmValRnrf/TmevxPcgTdGKv3cB4RmzUp3LK/DyV+E2vwTrzQ9ww/ydf
Y4X5ghxLCc+mhkyV8+LsyP8BaErdzw==
               "]], 
              LineBox[CompressedData["
1:eJwVzzk2g2EYBeA3oXRUUSpS6AwxLiQy/r8qC0hKY8QSHHZgB2Y6JMI5lKrQ
Ke2AGB7Fc95771d9+Uar2MxERML7SMQ6k7xkI4oM5CY5nvQDprnRS3zKx2yw
ygy39jJf8gmblJjlzl5hKJ+yRZk5uvYq3/IZ21Qo0LPX+JHP2aHKPPf2Or/y
BW1qLNC3JwSX+i51FnmwpWS40jsk//8Zi1hyH+1rZLnW90h51VtM8Kwf8iF3
mOJNH7r7rDA+GnHk5t1lb3/qhjBP
               "]]}, Annotation[#, "Charting`Private`Tag$181675#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GV4lWUABuBDN6igdAwY6uhmYwxHDgYGeCmpNCgxfiipNBiESkmjhEGn
dKuEdINKg0GDNKj3++PmeZ73+zbO2b6zqHYpTXqkikQit/0TnTYS2Z0uEnmD
xPSRyB27lFxlN5Lf27nlLLueTJTV5Db5vmup9JF6DBX0DfKU82L6Ir0xb9p/
y/fIyXa7oOvf6fUZa2ezJ+lVuWyXYE/4Wu7q8+hFaveNclaS03YzLofXQi52
2ON4nr12M+7p8+lNc17gRWIoGd4vpdnn3ubc1xfQhxaUYb/zFjzQF9KXllxx
1otn2WmPpywH7JY81BfRj1Zcddab59hlT6AcB+1WPNIX05803utoZ6U4Y7fm
mt6H3PxiTyS7+yaH3wtX7PIc0lvzWF9CHvfMtmvxgZ3WHqOX5qxd3F6sv8xb
9nXZlzyUc22d3O28UHgm9CSZJKvLn+Vr8kvXc8gpdh0ZKyvLzeH7yqvhZy+X
2w1lE5kgd8qmsoLrh8P/H16n/ST8XuRqe6meV5+j1yZW/1F+6Dyd/plehor6
RnnOebS+RH+Ft+0bsh952WMXdn2e3oBJ9lP2VD2Oa3ZFjoSv5V99GQNI777P
nZXlvN2Gm3p/8rHXnkwljtpt+E9fzkDaciv8HsjPPnsKlTlmtyXCCnsQ7bgd
3isF2G9PpQrH7XakYqU9mPZUpRqxxFGdE+5pT2p+sIfQgXhOOutAGlbZQ+nI
P/YACnLAnkYNfrU7kpbV9jA6ccceSCEO2tNJ4De7E+lYYw8ng5/jF+H54oLd
mbv6IApzyJ5BTX63O5OetfYIMvr6sXZ5LtpduKcPpgiH7SLumR+eN2baT9vT
wnPLdfslTuldyMA6O5975oZnmI/sTPY4vQKV9E3yUvgbpS/VX6WGvkO+4/y+
HBKeU2dR4fXJ9bKxPOJ6lFwQnjuZLOPldtlEfuX6M3K6XVfGyypyS3iO5Y3w
t0uusJNlU1lT7pKJrp0Or4GM4fPgfI1c7zy//k34nnxsZ7bHh88Lf4S/l/ay
8DnmXfuBHEpRjtpfk9M9M8J75aZdizPhfjKxwf6ELO6bEH5W/Gl35aE+jGIc
s2dRm7N2VzKz0f6UbtThnLNuZGGTPZLu1KUe9UmiAefd052sbLZH0YNH9nCK
c9yeTUMu2D3IxhZ7NCk8tkcQzQl7DslctFPIzlZ7DFm9z4l2Zf6ye/IkPDOU
4KRd1D0L9UbMtXPZM/UEqupb5S3nMfpK/fVwr31J9iQHZV1bK7c5L6B/q9eX
9WSc/Ck8g/J/MbT4YA==
               "]], 
              
              LineBox[{1431, 1334, 1258, 1137, 1534, 1416, 1319, 1243, 1190, 
               1557, 1440, 1343, 1267, 1101, 1511, 1393, 1296, 1220, 1167, 
               1138, 1535, 1417, 1320, 1244, 1191, 1102, 1512, 1394, 1297, 
               1221, 1168, 1139, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 
               1513, 1395, 1298, 1222, 1169, 1140, 1536, 1418, 1321, 1245, 
               1192, 1558, 1441, 1344, 1268, 1579, 1462, 1365, 1600, 1483, 
               1620, 1110}]}, 
             Annotation[#, "Charting`Private`Tag$181675#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1ne8z1Ucx/GfvSPK3hktI3tvFSote1+7cG3CdRGy3cresmdmhGwZhcre
e5aRUBR6nj9ej8/79T7n+/i533t+58oVFf1hp3iRSCQufiRSP3Ek8nPSSCQ5
opNEIk/4KozAfV0RTNTnxQldA+zXpUBn3VO+GiPxQFcUk/T5cFLXEAd0KdFF
94yvQcZkkUhd3UZdDYzSPeTFMJnnxyldAfs66H7lzdBId5CnQlceQXl7+vEL
8lrrmXg9vonXRB0+jj+SR1v/Wy6OKfzl8PnWh/Fb8mnrBXlH/hvvKa+Vm8tN
5enybDO+OczcbTb2zC/mcxit62ZvG3Men2vG4xXMmPBuzIu8r7mBLzO/83xm
sz7/yvzBehdzBV9k1uJ1zfF8hvmYDzZ38DGe/ccsgan6Dvol8ivhZ5eHy7fl
M/YV4p34Id4CTXS/8tTozuNjnS6LfQ10m/k7GKt7xEtiGn8VZ3VN8ZsuDXro
EmC9Lg7NcEj/PHrqE+J73ZdojhaIQku0Qmu0QVu0w2HPpUUvzyXCBt1XeKwr
hem613BO1x5HdOnQW5cYG3VZ/RwNdVv4u/ha9y8vHd4jfx3ndYXti9Yd5lH4
RHeUv4DPeBJUtKc/vyRvsp6NN+Jb+Xuoxyfwf+Vx1v+Ty2Am72htqVxAriWP
kO/IF+x7g3fmR3ivcBbkluGsyzPkb8wE5nBzj7na/NRzx+QXw++f97G/rTmf
zzOT8kpmbPgumZd5P3MjXx7Ol+ezm4351+Y2613Nlby2XF+eKP8nD5F3yuM9
88Qsi1n6guFsWBvJ78oXrRfhXfhR3iqcRd1xnh59eTJs1k3AU1258F3SFcIl
XUec0GVAP11ybNFNRCdE46S1jIixlgJbdZPQGaf0mdBfnxLbdJPxTFc+vEtd
YVzWdcFpXWbE6lJhu24KIn6OCvo5ujdwRdcVZ3RZMED3HHboctjbRLedv4+p
uni6iuG7z4vgqq4bzuqyYqAuNXbqctrbVLeDf4Bpuvi6SuF3yYuGs8tH8T/l
a9aL8q78GG+N7rpzPBsG8TSobM8AfkXeZT0Xb8Z38g/RgE/iT+Tp1hPwynw+
7yQvC3dxONvyaPmePFDeKl+3v1i45+QJ5nFrvc11fKnZhjc3Z4Z3aCY0R5h7
zTVmD8+fl7NjLP/c/nbmgvD55vO8ijkw3NHmVR5jbuI/eja33Fzepe8mr5I/
khvKk+Wn8gz7EvIqfAEvjtp8DP9LvmG9OO/OT4TvT7jrdRd4DgzmabFbNxOJ
7K2qX6grgZu6Xrioy4khunTYo3vJ3hbh38o/xixdYl21cJ/zkuGs8LH8vvy7
9RLhvfCT4V2E+5nP4onCnWb9kpkLQ621t7Yw3E9yVXmQfE3uH77b8l7788hR
8rjwNyqcEXM1X2zW4Y3MKeF+Mp/xoeYuvtKc7fkkZnUeZy62Hm0uD+/SLBXO
qhkX/h6YD/igcI/wFeYfni9p9uQTzVPWPzPX8/bhjg2fISfGSHlfuGc9c9nM
jS/CHaxfFO44uVo4I+Hcyfvsy8tb8j28LhrzqTwSvuPWk/I35SXWSofzzr/k
D+Vb1kvxXvx0+Bz00V3hL2EYT4+fdPnsaxXeZ7jfMUeXTPdWOOe8DG7r+uKq
Lk+4p3UZ8LMuv72tdfvCnYq5uuS6t3XLeFnc0fXDNV3e8D3RZcR+3TyksL9G
uLd15XBXF4Prunzh/eky4YBuPlLaX1P/ra48/tT1xw1dfozSZcZB3QKkCv+/
CL83XQXc08Xipu5ljNZlQXX7BvMbcqy8OXyG+T/MKVvu
               "]], 
              LineBox[CompressedData["
1:eJwV0klQz3EYx/Fvl5ZLdl0shYMW0jHM2ONgrRwsOdiiiIsZcolUzBhL4UIz
BoeUrYTqYsbBJZLdxXJW2UKFg9f38J7P83k/z69+9f9nbN1XWJEQQujBzuQQ
upNC2ICmxBBSU0JYybXqCzDIVaGPy8QpbhJ6uesY5X4V38YtxE/uCPq5LJzm
JuM514zR7lfzd7lF+MUdxQCXjTPcFLzgWjDG/Rq+nVuM31w1vnA5OMtNxUtu
pttS7om+ETe4sdxa7p6+BEPcMXzlZqGeS8crLtPtLu6pvgk3uXHcOu6+vhTD
XD53kHuvl6OG+6bPRoOegQI3Nfpn82v7LH233qNvxi1uPFfIPdCXoUiv14fM
I/Zz9UP6B30PtulX9CTU2n+XuTgX38Ou2TzNvNxca74o+/Qq+VB/45lsc5n5
vHxmd0C26y2yRC+Rl/TLMkHWycfx85W3PT9BFsX/u+xwvz96vUkW6MWyQW+U
w3q1fKT/8ew8c6X5I19p7jTvNW83XzUnx9/n7oecE9/RbjpW2Nfp/ea39jl6
ud6rb8EdbiJXzHXGvx9/ueMY5PJwgZuBd1wr0tyv57viz8c/bj53mPukV2CH
fk1PwUlzd/weyRNu/wMAk3Ii
               "]]}, Annotation[#, "Charting`Private`Tag$181675#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HWUFlUcxvGhlFK6W5BWWgkJpXVppduWjiUkBASVbiykMRAbpKW7uxeO
eo7Ekrv0An7uH9/zxPxm3nfi3kJdezXvmSyKouLJo2hVmij6L10U1cGGtFHU
FllwWZ8hfRR111+QR6EqVusv6Opio9wOWRGvz2i+h/6i/DGqYY3+oq4eNsnt
kQ1lzE7QpcYC+Yq5TLqe8iV5NF7CWv0lXX1sljsgO8qanahLg4XyVXOZdb3k
y/IYtJSXyWVRXa4hz+Zz4nd5nXMu8w2wRe6IGDNL5KLIIZeTJ/Fp0Y8/SBeF
WX4tXxkj+Dh6zfWy8L358TTeXC+6V/6Eb8Uv56fTcnQYPR3+P63heE36jTyZ
5qID6VE6l/7h+Jt0o/wFrU5H07/pd/Qvvx3PN8RYeav5D+gOuRPfiP+RLxbu
Xy4vT+bTYbHcSV7HV8F118oq9+GvOPZp+G+opZujy41l8npzV/hXsU3ujFy4
oc9mtq/+qvxZOBcb9Fd1r2G73AW5cVO/Edf0Mdih64o8SNBvwmZswXXHG2Fn
eB7Ii0T9VtzQN8Yu3VvIh1v6bbipb4LdureRH7f125Ggb4o9undQAHf0O7AT
iY41w179uyiIu/rs7rFfeO/yWLyMXfpbuubYJ7+HQrinz2G+f3i+8ji8gt36
27oW2C+/j2dQwewUXXp8K983l1MXK9+Qx6O1/KdcHrXD78tz+TxYLu9xzh3+
dRwI3wMam1kqF0dhuaI8lX8K/flD4XsK7zJ8U3xVjOTP0Qeul4sfwE+gN831
pvvk2WE9y23oCnkGrUCH0zNhzdA64Z7pPHkKzUsH0WN0XriX8N7oJvnLsCbo
GPpPePZ++y59AwfNddPv5LvxTfif+BIoIleSp/FP43s5ybm5dQPlBHki6qK2
br4uH1bI+8zd41vikNwdz+KhPo/ZQfpEeRLqYb/+vq4VDss9UBSP9AfwQN8a
R3Q9UQyP9QdxCIdxBEdxDMeRZL4Njoa9A8URhe/c7w/W3+Inoz5OmH+oa4tj
4V2gBJKFb9/8h/rb/BQ0wEnzj3TtcFzug5J4wex0XQb8ICcP60M3RL7DT0VD
1NEt0OXHSvmU6z3m2+OE3BdNzfwsl0Qp+UV5Bp8RS+QUYX3phsp3+WloK6+U
K4a9JLwbeSFfAIP543RVWLf8Zv4rWjPsqfRfetr/iPgO/Dh6Mrw7ukv+OqxR
uRn9RZ5GS9EhYY7Op6Udr0xnypNoJhpLD9M5Yd8MexVdL8+i1egoep6mDPsB
P4y/F54pv5+fzrfjV/GVwp4Xvhl5EV8Qq8NeI2/ha+GMe0gmd+RPOdYfzeVf
5dJ4Tq4iz+IzY6mcKuwtuuHyfX4GYsK3oVusK4Q18lnXTq7rFJ6VHIvn8UTY
a/QfhbXNz0QjxJlPoe8c/pc8AGXwJArrR+iT+FlhP8E58yn1XfRn5YEoi9Qo
oh+pf8h/HtYqzptPpe+qj5MHoYX8W7hPDOVP0QX0fzckM8Y=
               "]], 
              LineBox[CompressedData["
1:eJwV0ctTzWEAxvE3Uc6l3FlLucu4VSoLbFw2JNQMm1y6GJmxMCOXkC4YCwtT
nQgLycItO5eyKWZYWFi0MZzqnPBH4HMW33me7/O+8/vN+Z2ldWeqmrNCCJ/Q
HQthAZ5FQ4igKB7CNf5X78E+JCMh5NiP2X/w89iAKJbb2+z/9F7sx4T7ufbj
9p+8BRsRwwr7dXtAgldh0v3Z9hO2JL+ATYhjpb3dnoU+fgBT7kfsJ20T/CI2
Iw+r7B32GbjHq5FyP2qvt03yS9iCfKy2d9qzcZ8fRNr9mL3BNsUvowTlth7b
Qjznc7DG1sVnop8fwi7bAC/AOz7teXFbI0/xVpSiwtZrW4QXfC7W2m7wWXjA
j/A3egkO8938ib4M73k9H9W345f35PEmPe3stP5Zv5L5DvqQXowyXskT+mKc
07/Jl/Y6/YPeLStlm0zKATnP+Tp5k9+WOfKs/Jr5dvKh86PyLb8rS2Wr/C4f
yxrne+QgvyMLZYscl8POGvQxfQc69ZT87Tfl66f0aXea9S/61cx/pb/W12Mr
38b79CV4xeej2HaL5+IRr8Ve21NehBHeyD/qO9Glp+Wg/OPd/wFj3GOG
               "]]}, Annotation[#, "Charting`Private`Tag$181675#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{514, 515, 513}], 
             LineBox[{1059, 1060, 1058}], 
             LineBox[{1622, 1623, 1621}], 
             LineBox[{2487, 2488, 2486}], 
             LineBox[{3242, 3243, 3241}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution with backward integration \"", 
           TraditionalForm], PlotRange -> {{0., 6.24999987244898}, {-4., 4.}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJykvHk81N/7/z/2sSYzlkolqSjRXpTOZakshUoqRdoQJUQlRKWNslWShKJC
kWSLcpC1FEXZZcaS7NsMMwa/Z70bn9vN64/vHz//dDu3M8/lnOe5Htd1nXO/
WnDk9K7jvCQSqUGSRPrzr2LgeEzkvEubSaTBPRvPbXhv+F7IuN0Wo8MvnChx
zBD8WXydML9lBVqVaLT6wr0U7KohoP5coQYZls5fsmF1Pt750MKX49aI8m2D
tI7PLcU7VI4PyGxrRXdm3W0yZVfiU6bLdSay2lG04Ap7+TnV+F3E5fu7JbtR
hfe8K0Vyjdh2LOTR0339KPvNz/ToG83Yyjjvkwp5EC3V8G58fIuG/SwEF42f
HEafsXT1iBEdHy32sFlpx0Rd6148Ldei4zyhWTsd9o+iK4GO7LQbNNwTt6Xk
ULUUsLpVh+7NJ4P1kJaq8UkOOt5TmofW1uPHkYXyI7cnUOjrprjM3kq8OMn1
NOwkwbPDzULBbwrwmufNbVR+HrBVNN5/520Mxh+fDt48wAsBLcFFjzTKUcDL
P/18cDJcxLPVuRZFxK1Mc7DnB+XFsPLO/l9I7O/1AqBn2FHw6m0Xak9wO2vn
IggipzmbzKIG0cq//UKgJ9to/cF0GPGY1NEDfcigE76TGa85ihT/9gsDKdCk
K8yRhW7Ijuz4dl0ELn3J+lIfw0FOz/70i8Ly5OZ1xqHjiHZpzTF0Twx6YpkR
ZzeTYH/Kn35xGO6S+cp6TIxLcql78UMJyHDzH74uwQt5LvO3LHkxA6r7bp97
TIyDufjh3DRVSThzv1CM9ykffNjV7yJyWRKc+APbXXT5YYGREGfh3plgYhRQ
wiwTgOnfX771Ve3OT98QT3LkyprcDCzCcjhbldKPdl8ZqhEubsae0vNmKO6n
wFqdPS0zwsgQryLw0bWZAsO2j+e+/UIGwWGeWXlWVNAeJ+PiUjI8X/H6YuQv
KqxpO+ZkQrRVjiQYj5+Shh1Pipc8In5fb/A2ZU+XNIzkzDwtXU2GbzEXlqMz
MnBJLU+ugE6G0Tc7NykOykCeyFJ/ah8ZJjNd0q45ygKbP1GxfIwMRiu2bvFk
yILE2pyRz8LCUGypfsLhjByE+c1Oj5MRhqRkp5HJSTnwVJfsOaMkDB+D6507
bF+hr19mJ60pO4MVxjMixteVIGt+NSbzzNP/jF9ysLo77vhv5NQT+fOrbh32
5VdmLAnrRV63VCsdT/3EXdbv7ZbuHkD9g7syQ5fRcHKMzAJvyyFUd9E2fIEU
HTMl87bct2cgYWk722P76Vjo73xyUF3kpz5R2zrsfqvszFJbFpJRGZUvrWvG
r/9eP4mUfU4svOFTgUmll2IVvcbRjyZjW97m6v/031V6J51ZTgJDO3nd/Dtv
sIIRtYkjJwVq6Wb8UXJCMN0+bxTwaeXNpoBiybyJQ8fJEBIVfPJTBAXeiB5I
e/meDDUBVwbC51NB0vrM5YQyMpiH1H5Sj6HCKtutHfElZHiRQPwtlYasLZ+/
WX0iA++P1z7xL6XBUHzH6UvfyPCDOcvJUF0G1qg/aH3RQAZNIdPktLdyoJ4+
se3pXGEo1bzytts2CjnVjZnMXWuG6T2Nh88zPqB+K9MoxbZHeGkvi/ly/zf0
infUfLAoHYdlfnvPs+U3OnWr26ljXh22FlXZFerfgwyc550Ou9SERf/O5yj6
NhCctm4PDZ91UE++/H0QuS3e9ulnKw3nph1d+7FrGA2UX5z7ei8dX5BdSPNu
ZSL/9S9cMxTo/7n+3c2+7PxBNjr9uFGgvbUJr2g6ZJc5zEEiIi3OZx/V4l0X
V36gUyaRgV1m9/oPX3Hsfo/zW4JJYL88VzXkaQ62F49a08WcCdUuFlklNEH4
4uyO+j2lwOXO4OFliUIgEcGsDBqTgvBWu5e0rWS4Xlf9nnmBAo0z55hvTSQD
6c+fDxV8cz5fmiTmm+z1atU6YWngGKwMUftIBhn5JNvdt6VBX+U977kKMuyL
PjHTVFwGFpwXgi+1ZPBJwbeCQuUg47zqZtXZwiD34YJuz+0MlP36rA36chU/
mptGZnV9RJSY7uAb0gm4hhc3u53qQjPD177c4dqA48cXh72N7UObXgjqyik1
48Q7u76crBhAb1Wuro11ouEraTlxKm1D6I1f9qIba+hY9eQ882O/GSjt12v/
GlM6Tshw/iHfOIJudQ7muRXR8HfjxQIivSxUY/HsprtjM6668EXQrXcMrXn6
sk3rdgO2/OsfJlCSLHWsZuA73lXieDDonRQcVEIrGZNCELb7j35RoE71icbc
12SIPGY0JzqHAnEf0j/1EfNzOk9HQA1RYX1xg94YMT8XD29ZZFtIBdaCybWl
RH+J9Mvw49ul4WHuu8QGYj0PH2iurGuQg5VOmeVSC4Sh5NY3fYZtIOq/2pG3
+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
Tw7euu340CUrDAl/x0uFYwNvMgQIvZ4e7+X8Hc9MWJXnYXz3mSBMz+emn1dN
P++Ynt9O9z/T9Xf6/sp0XmN6/DZ9f2p6PjXdXqbzKdPtZzrvMd2epvMe0+1r
Ou8x3d6m8x7T7W867zHdHqfzHtPtczrfMd1ep/Me0+3XS/lP/0yIfXfGtnSW
4H/sebq9Tudnptvv9Hxhuj1Pt9/pPMX08/3/lz1Pj6+n2/d0e57OH0237+n5
0/9fe59+vj7d3qefd0+3/+n8yHT7n56f/L/0YHr8Mn2/aPp+1HT/9ldPSFRI
ERAtbCL6uXyZkNEud+15PMDly9z4h3fZqLARly+73XdC1vPTALL4l2+6aOyN
6LSuwcfV2eIrxZvR5k/XFwge+o64fMqLM7vmCJyoxClVXm6lGzpQ+cdWefkf
BXh6//T7nS76tfrVjkHUf0TOQKmoeYova22S6H+8rhXv+/d9lZj5ZwoG+6f4
MrXzCV8/DHfjK3/1SBAc4ostYgTbEZcvs7pW099txpjiy2KSht/G6bKm9KqP
IfQ4S5CDXbO0TB9t5wFx/ZNfz1I5U3yZqrXAts4RJj6xTeP9iX184GyeNHx9
Xx/m8mV+laFho1CFufa8maUhqbqxE01/n4KtIWGXLwvBXXtVk8Gzg1N82WfG
g/v975mIpJ3OE+0uDGMPVD4lG/0fX3Zv3+O+hj1s5GRxNH/kiigYPNqqMqbI
nuLLfAoFZSwLRxH1zoO6m4/FYZu253WXp0x07e/zJWBGvJlCaNAw8uT7WHDv
2Qz4XtL9TXlRP7Kq/ONPJMHPhCdnhVUn4uqNFRxwEBJsRVy+TJLufy3gyGvE
1Zt161adzU9+iW8VTaxQsJSCTx2fV+9rbsd3zvy2t26Qgpq5q36xJwaw17/8
62MkYmXuZk7xDiFSi+Nc6xmYy5dN+Mz0URL8jLh82XcxmTA1diHi8mUVul6D
cVa5iMuXqZnf75dWyURcvix3e73iR99kxOXLFGJHV+ebPEVcvix68d3M5Tfv
Iy5fRmLH+9aluCMuXwbjbxr2kzwwly9TCDE1PfE9BOcq/M//MVsej4tbTyIu
T3bUymt70bI+JDgi38u/tgFZ8Hm8n9/1E0n81UMasql6qp/l9xmRvJ1X96N2
tHHnxChFLGVKL6soWlXuzR+n+LP7H2Pz25fW/NODIZTnJHNo/tn/483CSbXq
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
Zfx7fPj1Zt9hPjfL+JwbeoeGbqfKTQGUjx6seGbwgGMeQ3nmcxYfp1bMBACU
P87pXeBq2N8DUP445UlizWeJ1P/ms2Oa11cpTWHTjDyyhR9/o4ppL0hi5K1J
foXVVYcaifzt6cG6iy4qfUQ+eKYB+h0ljzCOdwnsSxl/YthPZuyvILyjGqTs
lzYBICPvff0sp4bLvT8A5ZkP9Q/zUs8NA6N/Pu8EOjUtn3IkqwDKNzs9neAj
vSwn8sIyMyn1163+mxfGhF+bYicGiPxzCfmtvePecQzlza+msBoKsM9h8//s
bzcIb876mWedDlD++XdeVZSIfg2RX7a/fymU7TsNM2TkyROMdK+pF/8GKL/8
ga3gUovRDJE/P5gF2M14WIpQXnnzz1T58KpJIn9Ok0teFmfwlsh33+3mSnO8
M//3/JME4J3H7dxnPKYYvzcrzD7Af/g2yxyG8ubGJwzVAyzojPPBBi1kV4yJ
2U1jKK8udTBTza9pCKB8+4fKa61fro1hKJ+u5cJxfhfHDOP7OeGC+7x7cH0D
Y5sdUvdQvbb49TP2lwceCAOrGsPR9cYBjwSC20obmxjfJwTt+V56338wBpBv
Y3TDH9dO/W8A+TWEgkQfP9FoBO6MvCOHXPJ39YBOwq/Rlbgg+EunmvBpuMW0
jp71eoOhPKaB8W6Vy0kdRP5Sfyoy4mdpDZE3rss6GCXZ9BEg38zBa+Hdokal
APlmlibfe+js843IX3JsoG+VX1MM4hm+hyrRd+xdz3sY+TY2+GqLzHbsYhOo
ZuTlIkQnTb1PNGGiJn99Ggc8hldcTOrCUD7yl1Hl4Y+WbwHKN169aPCgoYsM
UP617OqRLtnMXiIPPLts0PdPVTvBgySnWYVunCUTPprakrUBNjvzGfnBSVDn
ZcHiSUN5MW4oZzO2kCzcxeDBeOFVsYz6F0f6CB+F1i8D1oSxpL/3X5047Cj9
OpCjkgOQn8LN+Zz9+43dRN52y6fkTRMS7RjK+0k6ZibOTpIJP0VgnpJNxaFU
Il+dc2uujWOyD6C84UDBxUv1qV2MvK0gLFY9e9NKuY/IXyft81CmLakEyEcx
NxL77WQChXh/gVjZQCbLAQqRfxQrq02uKacQ+WvyxjGhe4crAMpb2zWc1S2f
ygLM63/M+TLm5/nM+QPm56fM8wPm9WPm9Ujm9X7m9R/m8ZN5fYd5vZ25f2Tu
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
woYV5j8Z//o5rA/w3n3+9cyaZNS/zZW6NWZX4wvUv20WPfaWZnkhqg9wNHJW
XcOnIlQfoEqpNebr3RJUH6Dcs+TWaF0pqg8w/KFxIjCEjuoDmLQIyHr20lF9
gPGtUVk5wmWoPgA+tUvi7hc6qg+geNgyOtP+OeoPF+btLHg49RPqD8c+tbEk
jt4KYH2AS1fnh73yZgFYH6AZb/2RqMUBsD7Awb4xO/ohDoD5RVAJ+P7aig1g
fQCTW+/Td7ky/3U9wn5yEeuWdabK16L6Va3SussS5xWhfnIM/fvbz1pk4rCf
3FJz4QVz3OpwWF8guVt5OOV+Pw7rC+wc/AFsNgzjsL7A6INLj7sFRnBYX2B6
mcHpuzweDusL4Hqihxd6DeOw35zKVu01+kKDqP9bXy7+vFiVgfx/wNadripq
LOT/lVSEEt43dCD/P1dWfp2RGhf5/6xj+cEeo1zk/x/J7Zip2PrH/6v4RZ0/
nshB/j/Kqh07G9qG/L9JakFvVPQn5P9XSPfMbc3IRv3jjNeKHHPAXiL/X75D
MJy2qwj5/7gdB1cvXluC/P+zR780mZGlyP+fMph0DD5MR/5f/+te/cJvdOT/
NfpzV9wVKUP+fyVnZpUZl478v8/3IzbsF1Uov1q4+XGiaMY3AP3/uT0s7xp2
O4D+f/8E1lMazgbQ/wedyxCYe54DoP9/0RkRKijIAY1TcMapY1ywdzMI9PNi
If+f5ORfl5swiEP/P3TplVeeGQ+H/r80rUadsn4Eh/5/x0oR8WDi59RX+l4p
a0QxbzcfTSHzIRx6/Vr2otW7v7ah9V6owzZFGyK/gF7fTc13//tlXcjr26zZ
66RZx0VePyJp9f3NaX+8vg/2rlyyqRN5/SkzJz3kLFlo/TbqXiltP4WBvL6n
bf+xDKW3yOtnBp/ZfiTsKepXl78gOXLuu1zk9W/0Nz7VVn+NvH6t0YN7B82K
kdc/3rZgrH60BHn9nzXGHqrT6cjrC3tj5rKpdOT1PTL1wgXG6MjrP3Vfnrlc
oAx5/XsnB7TXl9OR1z8VRxlNzopH/fF0VTJvr4v7iPrjddm+5Gxa1Aqg1399
rJheq8QC0Ov7FNaXPZfhAOj17VWO1Dad4ADo9T+6bkxcFcoG0OtXlKuezXnG
RP32ck6wJsYM21A/vZfyAQt859ehfnoaW9ZPcektQv30xgLC7LvG41G/z/VX
4vMtlGtw6P0rlmBiQjP7cej9l9cFxMa3DeHQ++ecV/V43szDofd/o9VsuY86
gkPvL5hLU/yYOIzDfnts+9s/0q0HUf+7aS8nvU/3fUcefx0vyDb7CRN5/BbN
+ECrkx3I4xsVnJ+yhNeFPL6bRsOqpJ9c5PHL1j8/5aLERR7/Z2qMfYtKB/L4
s1bdS/li2I48PuUxiPYta0QefxlbdJfMwHPk8W/lqPsOxf/pnzd2Xbza8EQB
8vgn9DJnb5xehDz+uEjRkbHfxcjjV/cNK6S4lyKPH/vy8eeuXXTk8ZWvsat1
P9CRx3eS7D77kJifoMdnRbx/rD1ARx7/YsOp2YM736D+fF9HjbjW678B6PEf
Oh+c+8qlHUCP318UJq1rwQbQ4y9fbXRI+CwH1eMKGtv2c+cCDljsc8XrKbML
GCyKoOTnsJDHX6x4JKtm+SAOPX4qe66EF42HQ48/JeaYQ4bGCA7vF23Qfhe3
/DYPVynP9N4+WxST3uz5Sez+EA79PH3Zps+UdW3Iz7fK3a+0yWYjP58eavks
sLkT+fkLTyafg+dc5Oe1agPMRN7+8fNW0YURG/s6kZ+/duGB/cpRFrr/c01d
8uR5LQby87RPh0czlWuQnz/8dm/K5vVpqF/fhHZwxbZPOcjPP/uZoBJ+4RXy
8w2NBdWf5xQjP/+Jl5gR/K4E+fl7UXcsO3tLkZ9vOG5l/vMuHfn5Q5kb7A4M
05Gflxcq/dFG5L/Qz1+6Glr5tZaO/Lyp83Ktt/vbAPTztxfStCbfsgD087sE
nTZe2cMB0M+bRRv0bNzFQV7eYqe94cSVYRx6+bjusj29MiN43la2v0mNMJYa
HPTx/CceDu8XxVp0ytNXdgLo3YO6Xa97HeKCxk3PqQbBxPG4vDJocR8Xefca
C/c51Ogu5N2FyzTLVpsnIs9e6mHflONFR559y+s1QrpsOvLsz3lzGx8R82fz
t0vyC5No2LVT2hHH2+kAevZb5iezHEvZAHr2X/tmbZh5gQP08F/KNwo4YH7v
2yM539nIs9uubkqnBPNw6Nlv1sr1mhPnJ/ToMx4wm556dCGP3n7t2DEPNhco
nd/WpFRGxTbQzVdsu8RFHt37/MRZXh4deXSdl6GHXCeJ+X39s8D0QzRMsCPX
K2qcjnx61vrO1pwCOvLpBz8trZ7SdBP1I7S86d6+K6oe9SPs+3z1ye86BoA+
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
Dj3srRD1/aB5GIce9lyczFHKihEcetimNlbxwjQeLvO0+0DjqAjmjFdf9v46
hEO/asAJH132uBX51ZZwJZnjemzkV0/IPDsReqsT+dUKqZM7A25ykV992Btm
vfo7F/nV52M/qCs3dKH9et5WtWYNxPUM/eqjQldd8RYG8qtdkQo6bVl1yK9O
Xa0+8EkuBfVzLZNNso0cfQGgX/WhUzaZthQiv6plZOre9L0I+dVKo9XZA7El
yK8ayV7wf9pQivwq9stQ70kYHfnVtf0He+1/0JFfvTWm1XKZiPfIr/aKNR1v
oiO/Khwd94LzuRVAv1pFUV2kFsQC0K82Pw6c5QA4APrVXo+O85nE+hl6Vfmq
m2aVW4Zx6FV3fGWrfBQewQO7g8cYWcLY0f0aTm0DPBx60+prsmx6awfypm5f
V66ZpclF3lSsrc62hsj3oDe97W6vub+xC3nSQU8nBYGjdORJA30S2yab6ciT
TtqOrU0m4m9V7uj3khgaJqgpW3+IWL9AT2pjtCstOooNoCfNzuqRvULMz8ES
lx8sNOaA84uERbjjbORJazKXupzZx8OhJ+0uW7VyjJgfoAdl2nlUz9XoQh6U
scJ/vuFHLnicd/+3fS4VU5sp6j81iYs86OFz3k6daXTkQRfLGzSdIeZz+Vz6
QY4FMb9L1VPKiPwO+tCwo23Uj3Q6gB70XuO0l/vkOeBI7Kj47AYm+Mx21Nrr
zkEe9FtSYI5fGw9XOTRsh0UIY5rM5/0mM0Zw6D0Pa5/fWvW7C5QvWhJYd4SK
LbV92dZKzJfOJT7eQh1UrGBiik3hPC7yoFYLDzqcj8tG/rPi9drNhvV0kPnL
jL16Kg1TqFt/p4o4v9zD1EzULtGwwtGr8m79dORDR42vrakn1lvQh2qFS23U
8eKg/c+vvuuN6MjxcOhDY8oKGi8Q8z30nXGfY6eZ5RHx+kj+9rREKmbW+flQ
VjkX+c711+1PKxL5ndt1/bNL9WiYx+6P+2KI+AZ9pwjPWcB5HwdgVRNpF+pY
QEFQZ/49Uw7ynQpzWn5YyI7g0GvK0fYJ2B7lgq7yPo7OZSo21SDN+HYvF1D0
TDLSVWjYqVyliAji/Bo9FVRVXNsOPpZcmiwlzh/oNb86CwjYrBnBrzGvuzoZ
UDGJBuEjER1coCEWkCFTQcVOHsl9rxTART5z1exjekzieL//tnlzgiMNm6mb
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
fXD8f2HX+4Q=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{1427, 4262, 4260}}], 
               
               PolygonBox[{{1431, 4281, 4282, 712, 673}, {1432, 4283, 4284, 
                714, 675}}], 
               PolygonBox[{{1428, 4263, 4264, 650, 651, 652}}], 
               PolygonBox[{{1424, 4238, 4239, 974, 1330, 1154, 635}}], 
               
               PolygonBox[{{1445, 4311, 4312, 1168, 992, 863, 774, 715}, {
                1444, 4309, 4310, 1166, 990, 861, 772, 713}, {1458, 4228, 
                4229, 676, 629, 1169, 993, 864}, {1461, 4278, 4276, 708, 669, 
                1198, 1022, 893}}], 
               
               PolygonBox[{{1451, 4279, 4280, 670, 1199, 1023, 894, 805, 
                745}, {1446, 4265, 4266, 653, 1185, 1009, 880, 791, 732}, {
                1452, 4226, 4227, 674, 627, 1167, 991, 862, 773}}], 
               
               PolygonBox[{{1443, 4222, 4223, 623, 624, 1164, 988, 859, 770, 
                711}, {1430, 4220, 4221, 622, 1163, 987, 858, 769, 710, 
                671}, {709, 4218, 4219, 804, 744, 621, 1162, 986, 857, 768}, {
                1455, 4285, 4286, 775, 716, 677, 1201, 1025, 896, 807}}], 
               
               PolygonBox[{{1457, 4307, 4308, 693, 1214, 1038, 909, 820, 760, 
                1244, 1068, 939, 850}, {771, 4224, 4225, 672, 1200, 1024, 895,
                 806, 746, 625, 1165, 989, 860}}], 
               
               PolygonBox[{{1374, 4315, 4316, 1186, 1010, 881, 1293, 1117, 
                792, 1257, 1081, 1354, 952, 1319, 1143}}], 
               
               PolygonBox[{{1365, 4230, 4231, 747, 630, 1170, 994, 865, 776, 
                1246, 1070, 941, 717, 1217, 1041, 1339, 912, 1299, 1123}, {
                631, 4287, 4288, 678, 1202, 1026, 897, 808, 748, 1232, 1056, 
                927, 838, 1276, 1100, 971, 1328, 1152, 1380}}], 
               
               PolygonBox[{{1260, 4234, 4235, 1381, 633, 1173, 997, 868, 779, 
                720, 1220, 1044, 915, 826, 681, 1205, 1029, 900, 1295, 1119, 
                1364, 811}}], 
               
               PolygonBox[{{1342, 4236, 4237, 1356, 955, 1321, 1145, 751, 
                1235, 1059, 930, 841, 634, 1174, 998, 869, 780, 1249, 1073, 
                944, 1313, 1137, 721, 1221, 1045}}], 
               
               PolygonBox[{{1361, 4293, 4294, 916, 1302, 1126, 827, 1270, 
                1094, 965, 682, 1206, 1030, 901, 812, 1261, 1085, 956, 752, 
                1236, 1060, 931, 1308, 1132, 842, 1279, 1103}}], 
               
               PolygonBox[{{664, 4269, 4267, 702, 663, 1195, 1019, 890, 1460, 
                801, 741, 703, 1216, 1040, 911, 822, 1456, 762, 1245, 1069, 
                940, 851, 1285, 1109, 980, 1332, 1156, 1382}, {1153, 4291, 
                4292, 1366, 825, 1269, 1093, 964, 680, 1204, 1028, 899, 810, 
                1259, 1083, 954, 750, 1234, 1058, 929, 1307, 1131, 840, 1278, 
                1102, 1360, 973, 1329}}], 
               
               PolygonBox[{{1125, 4232, 4233, 1144, 1375, 749, 1233, 1057, 
                1345, 928, 1306, 1130, 839, 1277, 1101, 972, 632, 1172, 996, 
                867, 778, 1248, 1072, 943, 719, 1219, 1043, 1341, 914, 
                1301}}], 
               
               PolygonBox[{{953, 4289, 4290, 995, 1333, 866, 1286, 1110, 777, 
                1247, 1071, 942, 1312, 1136, 718, 1218, 1042, 1340, 913, 1300,
                 1124, 824, 1268, 1092, 1357, 963, 1324, 1148, 1377, 679, 
                1203, 1027, 1335, 898, 1294, 1118, 1363, 809, 1258, 1082, 
                1355}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{648, 4261, 4260, 649}, {666, 4270, 4271, 1429}, {
                647, 4258, 4259, 1426}}], 
               PolygonBox[{{1161, 4277, 4276, 767, 856, 985}}], 
               PolygonBox[{{836, 4305, 4306, 646, 692, 970, 1099, 1275}}], 
               
               PolygonBox[{{668, 4274, 4275, 1450, 743, 803, 892, 1021, 
                1197}, {615, 4212, 4213, 1439, 704, 763, 852, 981, 1157}}], 
               
               PolygonBox[{{1372, 4295, 4296, 1433, 683, 828, 917, 1046, 1222,
                 722}, {637, 4240, 4241, 1207, 684, 723, 782, 871, 1000, 
                1176}, {742, 4216, 4217, 1441, 707, 766, 855, 984, 1160, 
                619}}], 
               
               PolygonBox[{{665, 4214, 4215, 1440, 705, 764, 853, 982, 1158, 
                617, 616}}], 
               
               PolygonBox[{{1175, 4313, 4314, 1314, 945, 1349, 1074, 1250, 
                781, 1111, 1287, 870, 999}, {1159, 4272, 4273, 1454, 802, 891,
                 1020, 1196, 667, 706, 765, 854, 983}}], 
               
               PolygonBox[{{645, 4256, 4257, 1369, 1129, 1305, 925, 1344, 
                1054, 1230, 731, 790, 879, 1008, 1184}}], 
               
               PolygonBox[{{878, 4303, 4304, 1434, 691, 835, 924, 1053, 1229, 
                730, 951, 1080, 1256, 789, 1116, 1292}}], 
               
               PolygonBox[{{946, 4297, 4298, 1309, 933, 1346, 1062, 1238, 754,
                 958, 1087, 1263, 814, 903, 1032, 1208, 685, 829, 918, 1047, 
                1223, 724, 1139, 1315}, {1370, 4244, 4245, 686, 1378, 1149, 
                1325, 966, 1095, 1271, 830, 919, 1048, 1224, 725, 784, 873, 
                1002, 1178, 639, 975, 1104, 1280, 844}}], 
               PolygonBox[CompressedData["
1:eJwVzj8ohHEcx/FfnLgiZ5TJcAyXlEdiEd2gO0knA9sxycBmUSiSYqIIxSKD
jbK5rmwSi0SMLFL+pFi9nuHd5/35Pt/ft6d5cnZkpiKEkEAj8uQgFcIhPiul
vmJhWUZVIdyZjfIEL/ATZPRn/NmL9A3U6SWcmS3KdvtX5sOyB9vu72CAd/r+
igbfx2XSbJq/Y19fcmOIH6NVf8CPWVnv41/xfT4R3/B2jVfzTfe3EPEX1JuP
yRo7U/wNu/qCW4P8CGn9Ht9mJb2Xf6CNF2XK21XeLbv0G/dv8cR/vSmaz/OM
vLSXjf8VHXwdtfwCp3b79T006dd4NJuTLd6em+fkP2i5M/Y=
                "]], 
               
               PolygonBox[{{947, 4299, 4300, 935, 1347, 1064, 1240, 756, 960, 
                1089, 1265, 816, 905, 1034, 1210, 687, 967, 1096, 1272, 831, 
                920, 1049, 1225, 726, 1140, 1316}}], 
               
               PolygonBox[{{1066, 4252, 4253, 1274, 834, 1368, 1128, 1304, 
                923, 1052, 1228, 729, 950, 1079, 1255, 788, 877, 1006, 1182, 
                643, 978, 1107, 1283, 848, 1135, 1311, 937, 1348}}], 
               
               PolygonBox[{{688, 4250, 4251, 1254, 787, 1362, 1115, 1291, 876,
                 1005, 1181, 642, 977, 1106, 1282, 847, 936, 1065, 1241, 757, 
                1146, 1322, 961, 1090, 1266, 817, 1122, 1298, 906, 1338, 1035,
                 1211}}], 
               
               PolygonBox[{{1310, 4248, 4249, 1150, 1326, 968, 1358, 1097, 
                1273, 832, 1367, 1127, 1303, 921, 1343, 1050, 1226, 727, 1373,
                 1141, 1317, 948, 1352, 1077, 1253, 786, 1114, 1290, 875, 
                1004, 1180, 641, 976, 1105, 1281, 846, 1371, 1134}}], 
               PolygonBox[CompressedData["
1:eJwNy002gmEYBuAnZczUT6VFtARDE0uwAM4RYhMkMkET+lNGzgnhWIIVVMIO
EBm5Bte5v+e+3y+3trG6PhURCVZ4SUV0ZiPatKYjPoxLyYg9/riyn+iqtif5
Tla/y4SWvaJ7pOnNm8zoi/zStB/rzm0PckRaf+PekT80vDnS92joX+Wifpsx
dXtZd2a7l0OufS/Ytvim5s2h/o4B87oCX1zaSrpT/9zKPnP6TT65sB/oJuTd
Xe/25Yz+ma5+2V0l6/4H5D0yGQ==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1, 374, 264, 483, 179, 459, 350, 496, 116, 436, 327, 
               489, 241, 473, 364, 75, 416, 306, 221, 466}], 
              
              LineBox[{449, 340, 254, 51, 398, 288, 203, 140, 443, 334, 248, 
               98, 427, 318, 233, 170, 2, 375}], 
              LineBox[{99, 3, 376, 266, 181, 118, 77, 526}], 
              LineBox[{4, 509}], 
              LineBox[{5, 6, 510}], 
              LineBox[{7, 377, 267, 182, 119, 78}], 
              LineBox[{8, 378, 268, 183, 120, 79, 55, 401}], 
              LineBox[{291, 206, 143, 101, 9, 379, 269, 184, 121, 536}], 
              LineBox[{10, 380, 270, 185, 122, 81, 419, 309, 224, 161, 542}], 
              
              LineBox[{57, 403, 293, 208, 145, 444, 335, 249, 103, 428, 319, 
               234, 469, 360, 171, 453, 344, 258, 11, 381, 271, 186, 460, 351,
                123}], 
              
              LineBox[{470, 361, 172, 454, 345, 259, 12, 382, 272, 187, 124, 
               438, 329, 243, 83, 421, 311, 226, 163, 543}], 
              
              LineBox[{405, 295, 210, 147, 105, 430, 321, 235, 173, 13, 383, 
               273, 188, 125, 537}], 
              LineBox[{407, 297, 212, 149, 107, 15, 385, 275, 190, 544}], 
              LineBox[{108, 16, 386, 276, 191, 128, 87, 529}], 
              LineBox[{18, 19, 511}], 
              LineBox[{20, 21, 512}], 
              LineBox[{22, 23, 513}], 
              LineBox[{24, 25, 514}], 
              LineBox[{26, 27, 515}], 
              LineBox[{28, 29, 516}], 
              LineBox[{30, 31, 32, 517}], 
              LineBox[{33, 518}], 
              LineBox[{34, 35, 519}], 
              
              LineBox[{431, 322, 236, 174, 39, 391, 281, 196, 133, 439, 330, 
               244, 92, 424, 314}], 
              
              LineBox[{260, 481, 372, 507, 40, 392, 282, 484, 197, 461, 352, 
               497, 134, 440, 331, 491, 245, 475, 366, 503}], 
              LineBox[CompressedData["
1:eJwV0TlLXUEYBuBzBbfCKp1b0M5Er1dbtXNHm2uRwl0Ei4Ar/gbX/AHXUk0V
TZU0Wki8WgiBFC4XEQu1ECOIC6LgM8XD+34zHA4zUzIwkhyORVH0jRrlUq7R
wJI5zrFemhFFC3LbnORVH2VTr+dW/0FK7ySTMvOMLOCPfij7mdJ/yTYe9bQc
oVvfkLVcc2X+J4d4YN28K7+E/xHjnAleaLS/LCvDOTgx/5WD3LNo3pEd3PBm
PpNjPIc0b8kG/utH8iub+r7sIotP5llZyJ4+zW+9nSe9h+96XThHOBNNrJgT
nIa7ZZzPzFkrIhXui3x33SubydPL5bz9YvbDv+njg70WWUGcHHOlTJCrV4V3
9c1HDvQSa3Oyn1ZWrVeRDvdGkf0J+TPcJXfhPjgIb0M2F0yG96fa3jsjjEsU

               "]], 
              
              LineBox[{265, 180, 117, 76, 417, 307, 222, 159, 52, 399, 289, 
               204, 141, 539}], 
              LineBox[{53, 522}], 
              LineBox[{54, 400, 290, 205, 142, 100, 532}], 
              LineBox[{418, 308, 223, 160, 56, 402, 292, 207, 144, 102, 533}], 
              
              LineBox[{328, 490, 242, 474, 365, 502, 82, 420, 310, 487, 225, 
               467, 358, 500, 162, 450, 341, 493, 255, 479, 370, 505, 58, 404,
                294, 485, 209, 463, 354, 498, 146, 445, 336, 250, 477, 368, 
               104, 429, 320}], 
              
              LineBox[{84, 422, 312, 227, 164, 60, 406, 296, 211, 148, 106, 
               534}], 
              LineBox[{127, 86, 62, 408, 298, 213, 150, 540}], 
              LineBox[{63, 17}], 
              LineBox[{277, 192, 129, 88, 64, 523}], 
              LineBox[{388, 278, 193, 130, 89, 65, 524}], 
              
              LineBox[{390, 280, 195, 132, 91, 423, 313, 228, 165, 67, 410, 
               300, 215, 152}], 
              
              LineBox[{229, 166, 451, 342, 256, 68, 411, 301, 216, 464, 355, 
               153, 446, 337, 251, 111, 432, 323, 237, 471, 362, 175, 455, 
               346}], 
              LineBox[{384, 274, 189, 126, 85, 528}], 
              LineBox[{389, 279, 194, 131, 90, 530}], 
              LineBox[{409, 299, 214, 151, 109, 535}]}, 
             Annotation[#, "Charting`Private`Tag$182221#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[{615, 1157, 981, 852, 763, 704, 1439}], 
              LineBox[{665, 616, 617, 1158, 982, 853, 764, 705, 1440}], 
              LineBox[{742, 619, 1160, 984, 855, 766, 707, 1441}], 
              LineBox[{804, 744, 621, 1162, 986, 857, 768, 709}], 
              LineBox[{622, 1163, 987, 858, 769, 710, 671, 1430}], 
              LineBox[{623, 624, 1164, 988, 859, 770, 711, 1443}], 
              
              LineBox[{672, 1200, 1024, 895, 806, 746, 625, 1165, 989, 860, 
               771}], 
              LineBox[{674, 627, 1167, 991, 862, 773, 1452}], 
              LineBox[{676, 629, 1169, 993, 864, 1458}], 
              
              LineBox[{747, 630, 1170, 994, 865, 776, 1246, 1070, 941, 717, 
               1217, 1041, 1339, 912, 1299, 1123, 1365}], 
              LineBox[{1144, 1375, 749, 1233, 1057, 1345, 928, 1306, 1130, 
               839, 1277, 1101, 972, 632, 1172, 996, 867, 778, 1248, 1072, 
               943, 719, 1219, 1043, 1341, 914, 1301, 1125}], 
              
              LineBox[{1381, 633, 1173, 997, 868, 779, 720, 1220, 1044, 915, 
               826, 681, 1205, 1029, 900, 1295, 1119, 1364, 811, 1260}], 
              
              LineBox[{1356, 955, 1321, 1145, 751, 1235, 1059, 930, 841, 634, 
               1174, 998, 869, 780, 1249, 1073, 944, 1313, 1137, 721, 1221, 
               1045, 1342}], 
              LineBox[{974, 1330, 1154, 635, 1424}], 
              LineBox[{637, 1176, 1000, 871, 782, 723, 684, 1207}], 
              
              LineBox[{1031, 1336, 902, 1296, 1120, 813, 1262, 1086, 957, 753,
                1237, 1061, 932, 843, 638, 1177, 1001, 872, 1288, 1112, 783, 
               1251, 1075}], 
              
              LineBox[{1370, 844, 1280, 1104, 975, 639, 1178, 1002, 873, 784, 
               725, 1224, 1048, 919, 830, 1271, 1095, 966, 1325, 1149, 1378, 
               686}], 
              
              LineBox[{1337, 904, 1297, 1121, 815, 1264, 1088, 959, 755, 1239,
                1063, 934, 845, 640, 1179, 1003, 874, 1289, 1113, 785, 1252, 
               1076, 1351}], 
              
              LineBox[{1310, 1134, 1371, 846, 1281, 1105, 976, 641, 1180, 
               1004, 875, 1290, 1114, 786, 1253, 1077, 1352, 948, 1317, 1141, 
               1373, 727, 1226, 1050, 1343, 921, 1303, 1127, 1367, 832, 1273, 
               1097, 1358, 968, 1326, 1150}], 
              
              LineBox[{688, 1211, 1035, 1338, 906, 1298, 1122, 817, 1266, 
               1090, 961, 1322, 1146, 757, 1241, 1065, 936, 847, 1282, 1106, 
               977, 642, 1181, 1005, 876, 1291, 1115, 1362, 787, 1254}], 
              
              LineBox[{1066, 1348, 937, 1311, 1135, 848, 1283, 1107, 978, 643,
                1182, 1006, 877, 788, 1255, 1079, 950, 729, 1228, 1052, 923, 
               1304, 1128, 1368, 834, 1274}], 
              
              LineBox[{1098, 1359, 969, 1327, 1151, 690, 1213, 1037, 908, 819,
                759, 1243, 1067, 938, 849, 1284, 1108, 979, 1331, 1155, 644, 
               1183, 1007}], 
              
              LineBox[{645, 1184, 1008, 879, 790, 731, 1230, 1054, 1344, 925, 
               1305, 1129, 1369}], 
              LineBox[{647, 1426}], 
              LineBox[{648, 649, 4260, 1427}], 
              LineBox[{650, 651, 652, 1428}], 
              LineBox[{653, 1185, 1009, 880, 791, 732, 1446}], 
              LineBox[CompressedData["
1:eJwV0LkuxGEUhvFjmdq01jEXoMMduAHiBhRKEju12thJLI3dkEiIfbsDjXbs
rsA6o/H7F0/ec573fM2X7ept7ymLiG7cVUZksFoR0Ybj8ogbexUmkj0V0SKL
fA5r/Ie9D9UocCdYcjcp1/WffD9q8MCdYgobui9uALXY9+aRP8OyeVpuuvnW
DaIOT9yW7lzOJLP+hx/CIV8vn/kLrNhn5babX34YDXhJnO5SzmFHX+RHkMEr
d4VVN/NyV1/iR9GIt+SNLp+OuDYvIO/mTzeGI11Wvid/h1tdGjmuFQf6El/g
mrDHdSDFd9rvzc3mcXO3XHT7D7HjP+c=
               "]], 
              LineBox[{666, 1429}], 
              
              LineBox[{1159, 983, 854, 765, 706, 667, 1196, 1020, 891, 802, 
               1454}], 
              LineBox[{668, 1197, 1021, 892, 803, 743, 1450}], 
              
              LineBox[{1161, 985, 856, 767, 4276, 708, 669, 1198, 1022, 893, 
               1461}], 
              LineBox[{670, 1199, 1023, 894, 805, 745, 1451}], 
              LineBox[{712, 673, 1431}], 
              LineBox[{714, 675, 1432}], 
              LineBox[{775, 716, 677, 1201, 1025, 896, 807, 1455}], 
              
              LineBox[{678, 1202, 1026, 897, 808, 748, 1232, 1056, 927, 838, 
               1276, 1100, 971, 1328, 1152, 1380, 631}], 
              
              LineBox[{995, 1333, 866, 1286, 1110, 777, 1247, 1071, 942, 1312,
                1136, 718, 1218, 1042, 1340, 913, 1300, 1124, 824, 1268, 1092,
                1357, 963, 1324, 1148, 1377, 679, 1203, 1027, 1335, 898, 1294,
                1118, 1363, 809, 1258, 1082, 1355, 953}], 
              
              LineBox[{1366, 825, 1269, 1093, 964, 680, 1204, 1028, 899, 810, 
               1259, 1083, 954, 750, 1234, 1058, 929, 1307, 1131, 840, 1278, 
               1102, 1360, 973, 1329, 1153}], 
              
              LineBox[{916, 1302, 1126, 827, 1270, 1094, 965, 682, 1206, 1030,
                901, 812, 1261, 1085, 956, 752, 1236, 1060, 931, 1308, 1132, 
               842, 1279, 1103, 1361}], 
              LineBox[{1372, 722, 1222, 1046, 917, 828, 683, 1433}], 
              
              LineBox[{946, 1315, 1139, 724, 1223, 1047, 918, 829, 685, 1208, 
               1032, 903, 814, 1263, 1087, 958, 754, 1238, 1062, 1346, 933, 
               1309}], 
              
              LineBox[{947, 1316, 1140, 726, 1225, 1049, 920, 831, 1272, 1096,
                967, 687, 1210, 1034, 905, 816, 1265, 1089, 960, 756, 1240, 
               1064, 1347, 935}], 
              
              LineBox[{1078, 1353, 949, 1318, 1142, 728, 1227, 1051, 922, 833,
                689, 1212, 1036, 907, 818, 1267, 1091, 962, 1323, 1147, 1376, 
               758, 1242}], 
              
              LineBox[{878, 1292, 1116, 789, 1256, 1080, 951, 730, 1229, 1053,
                924, 835, 691, 1434}], 
              LineBox[{836, 1275, 1099, 970, 692, 646}], 
              
              LineBox[{693, 1214, 1038, 909, 820, 760, 1244, 1068, 939, 850, 
               1457}], 
              LineBox[{1166, 990, 861, 772, 713, 1444}], 
              LineBox[{1168, 992, 863, 774, 715, 1445}], 
              
              LineBox[{1175, 999, 870, 1287, 1111, 781, 1250, 1074, 1349, 945,
                1314}], 
              
              LineBox[{1186, 1010, 881, 1293, 1117, 792, 1257, 1081, 1354, 
               952, 1319, 1143, 1374}]}, 
             Annotation[#, "Charting`Private`Tag$182221#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1546, 1965, 1848, 2081, 1752, 2060, 1944, 2093, 1678, 
               2038, 1922, 2086, 1826, 2072, 1956, 1626, 2018, 1901, 1805, 
               2066}], 
              
              LineBox[{2050, 1934, 1838, 1596, 1995, 1878, 1782, 1708, 2044, 
               1928, 1832, 1655, 2029, 1913, 1817, 1743, 1547, 1966}], 
              LineBox[{1656, 1548, 1967, 1850, 1754, 1680, 1628, 2166}], 
              LineBox[{1549, 2151}], 
              LineBox[{1550, 1551, 2152}], 
              LineBox[{1552, 1553, 2153}], 
              LineBox[{1555, 1969, 1852, 1756, 1682, 1630, 2167}], 
              
              LineBox[{1600, 1997, 1880, 1784, 1710, 1657, 1556, 1970, 1853, 
               1757, 1683}], 
              
              LineBox[{1999, 1882, 1786, 1712, 1659, 2030, 1914, 1818, 1744, 
               1558, 1972, 1855, 1759, 1685, 2039}], 
              
              LineBox[{2084, 1819, 2069, 1953, 2095, 1745, 2055, 1939, 2091, 
               1843, 2078, 1962, 2100, 1559, 1973, 1856, 2082, 1760, 2061, 
               1945, 1686, 2040, 1924, 1828, 2073, 1957, 1634, 2022, 1905, 
               1809, 2067, 1951, 1735, 2052, 1936, 1840}], 
              
              LineBox[{2001, 1884, 1788, 1714, 2046, 1930, 1834, 1661, 2032, 
               1916, 1820, 1746, 1560, 1974, 1857, 1761, 2187}], 
              LineBox[{1662, 1561, 1975, 1858, 1762, 1688, 1636, 2168}], 
              LineBox[{1664, 1563, 1977, 1860, 1764, 1690, 1638, 2169}], 
              LineBox[{1564, 2154}], 
              LineBox[{1565, 1566, 2155}], 
              LineBox[{1567, 1568, 1978, 1861, 1765, 1691, 1639, 1609, 2164}], 
              
              LineBox[{1889, 1793, 1719, 1666, 1571, 1981, 1864, 1768, 1694, 
               2179}], 
              
              LineBox[{2008, 1891, 1795, 1721, 2047, 1931, 1835, 1668, 2033, 
               1917, 1821, 1747, 2056, 1940, 1844, 1573, 1983, 1866, 1770, 
               1696, 2041}], 
              
              LineBox[{1918, 2085, 1822, 2070, 1954, 2096, 1748, 2057, 1941, 
               2092, 1845, 2079, 1963, 1574, 1984, 1867, 1771, 2062, 1946, 
               1697, 2042, 1926, 1830, 1645, 2027, 1910, 1814, 1740, 2054}], 
              
              LineBox[{1842, 1615, 2010, 1893, 1797, 1723, 1670, 2035, 1919, 
               1823, 1749, 1575, 1985, 1868}], 
              LineBox[{1671, 1576, 1986, 1869, 1773, 1699, 1647, 2170}], 
              LineBox[{1578, 2156}], 
              LineBox[{1579, 1580, 2157}], 
              LineBox[{1581, 1582, 1988, 1871, 1775, 1701, 1649, 2171}], 
              LineBox[{1673, 1584, 1990, 1873, 1777, 1703, 1651, 2028, 1911}], 
              
              LineBox[{1846, 1585, 1991, 1874, 1778, 2063, 1947, 1704, 2043, 
               1927, 2087, 1831, 2074, 1958, 2097}], 
              
              LineBox[{1912, 1816, 1742, 1622, 2015, 1898, 1802, 2189, 1728, 
               1675, 1586, 1992, 1875, 1779, 1705, 1652, 1623, 2016, 1899, 
               1803, 1729, 1676, 2176, 1587, 1993, 1876, 1780, 1706, 1653, 
               1624, 1588, 1589, 2158, 1590, 1591, 2159, 1592, 1593, 2160, 
               1594, 1994, 1877, 1781, 2188, 1707, 1654, 1625, 2017, 1900, 
               1804, 1730, 2184, 1677, 2037, 1921, 1825, 1751, 2059, 1943, 
               1847, 2080, 1964, 2101, 1595}], 
              
              LineBox[{1849, 1753, 1679, 1627, 2019, 1902, 1806, 1732, 1597, 
               1996, 1879, 1783, 1709, 2180}], 
              LineBox[{1598, 2161}], 
              LineBox[{1629, 1599, 2162}], 
              LineBox[{1631, 1601, 1998, 1881, 1785, 1711, 1658, 2172}], 
              
              LineBox[{1827, 1633, 2021, 1904, 1808, 1734, 2051, 1935, 1839, 
               1603, 2000, 1883, 1787, 2064, 1948, 1713, 2045, 1929, 2088, 
               1833, 2075, 1959, 2098, 1660, 2031, 1915}], 
              
              LineBox[{1687, 1635, 2023, 1906, 1810, 1736, 1605, 2002, 1885, 
               1789, 1715, 2181}], 
              LineBox[{1606, 2003, 1886, 1790, 1716, 1663, 1562}], 
              
              LineBox[{1859, 1763, 1689, 1637, 1607, 2004, 1887, 1791, 1717, 
               2182}], 
              LineBox[{1608, 2163}], 
              LineBox[{1640, 1610, 2005, 1888, 1792, 1718, 1665, 2173}], 
              
              LineBox[{1642, 2024, 1907, 1811, 1737, 1612, 2007, 1890, 1794, 
               1720, 1667, 2174}], 
              
              LineBox[{1925, 1829, 1644, 2026, 1909, 1813, 2068, 1952, 1739, 
               2053, 1937, 2090, 1841, 2077, 1961, 1614, 2009, 1892, 2083, 
               1796, 2065, 1949, 2094, 1722, 2048, 1932, 2089, 1836, 2076, 
               1960, 2099, 1669, 2034}], 
              LineBox[{1772, 1698, 1646, 1616, 2011, 1894, 1798, 1724, 2183}], 
              LineBox[{1617, 1577}], 
              LineBox[{1870, 1774, 1700, 1648, 1618, 2165}], 
              
              LineBox[{1989, 1872, 1776, 1702, 1650, 1620, 2013, 1896, 1800, 
               1726}], 
              
              LineBox[{1815, 1741, 1621, 2014, 1897, 1801, 1727, 2049, 1933, 
               1837, 1674, 2036, 1920, 1824, 2071, 1955, 1750, 2058, 1942}], 
              
              LineBox[{1971, 1854, 1758, 1684, 1632, 2020, 1903, 1807, 1733, 
               2185}], 
              LineBox[{1980, 1863, 1767, 1693, 1641, 1611}], 
              
              LineBox[{1982, 1865, 1769, 1695, 1643, 2025, 1908, 1812, 1738, 
               2186}], 
              LineBox[{2012, 1895, 1799, 1725, 1672, 2175}], 
              LineBox[{1968, 1851, 1755, 1681, 2177}], 
              LineBox[{1979, 1862, 1766, 1692, 2178}]}, 
             Annotation[#, "Charting`Private`Tag$182221#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[{2272, 2894, 2704, 2551, 2437, 2362, 3182}], 
              LineBox[{2934, 2744, 2591, 2477, 2401, 2273, 2895}], 
              LineBox[{2402, 2274, 2896, 2706, 2553, 2439, 2364, 2970, 2780}], 
              
              LineBox[{2829, 2676, 2404, 2992, 2803, 2650, 3061, 2872, 2536, 
               3038, 2849, 3103, 2696, 3078, 2889, 2276, 2898, 2708, 3083, 
               2555, 3046, 2857, 3106, 2441, 3008, 2819, 3094, 2666, 3066, 
               2877, 3114, 2366, 2972, 2782, 3088}], 
              LineBox[{2482, 2406, 2278, 2900, 2710, 2557, 2443, 2368}], 
              LineBox[{2279, 2901, 2711, 2558, 2444, 2369, 2329, 3179}], 
              LineBox[{2280, 2281, 3172}], 
              LineBox[{2282, 2283, 3173}], 
              LineBox[{2284, 2285, 3174}], 
              LineBox[{2286, 2287, 3175}], 
              LineBox[{2288, 3176}], 
              
              LineBox[{2407, 2289, 2903, 2713, 2560, 2446, 2371, 2974, 2784, 
               2631, 3212}], 
              
              LineBox[{3071, 2882, 2409, 2995, 2806, 2653, 3062, 2873, 2539, 
               3039, 2850, 3104, 2697, 3079, 2890, 3121, 2291, 2905, 2715, 
               3084, 2562, 3047, 2858, 3107, 2448, 3010, 2821, 3095, 2668, 
               3067, 2878, 3115, 2373, 2976, 2786, 3089}], 
              
              LineBox[{2698, 2292, 2906, 2716, 2563, 2449, 2374, 2334, 2944, 
               2754, 3214}], 
              LineBox[{2601, 2487, 2411, 2293, 2907, 2717, 2564, 2450, 3192}], 
              LineBox[{2294, 3177}], 
              
              LineBox[{2755, 2602, 2488, 2412, 2297, 2910, 2720, 2567, 2453, 
               3194}], 
              
              LineBox[{2947, 2757, 2604, 2490, 2414, 2299, 2912, 2722, 2569, 
               2455, 3195}], 
              
              LineBox[{2808, 2655, 2541, 2300, 2913, 2723, 2570, 2456, 3011, 
               2822, 2669, 2381, 2979, 2789, 2636, 2522, 3033}], 
              
              LineBox[{2691, 2341, 2949, 2759, 2606, 3053, 2864, 2492, 3023, 
               2834, 3098, 2681, 3072, 2883, 2416, 2998, 2809, 3092, 2656, 
               3063, 2874, 3113, 2542, 3041, 2852, 3105, 2699, 3080, 2891, 
               3122, 2301, 2914, 2724}], 
              
              LineBox[{2999, 2810, 2657, 2543, 2302, 2915, 2725, 2572, 2458, 
               2383, 3184}], 
              
              LineBox[{2682, 2419, 3000, 2811, 2658, 2544, 2304, 2917, 2727, 
               2574, 2460, 3013, 2824, 2671, 2385, 2982, 2792, 3090, 2639, 
               3059, 2870}], 
              
              LineBox[{3035, 2846, 3101, 2693, 3076, 2887, 3119, 2345, 2953, 
               2763, 3086, 2610, 3054, 2865, 3109, 2496, 3025, 2836, 3099, 
               2683, 3073, 2884, 3118, 2420, 3001, 2812, 3093, 2659, 3064, 
               2875, 2545, 3042, 2853, 2700, 3081, 2892, 2305, 2918, 2728}], 
              
              LineBox[{2684, 2421, 3002, 2813, 2660, 2546, 2306, 2919, 2729, 
               2576, 2462, 2387, 2984, 2794, 2641}], 
              LineBox[{2423, 2308, 2921, 2731, 2578, 2464, 2389, 3185}], 
              LineBox[{2425, 2310, 2923, 2733, 2580, 2466, 2391, 3186}], 
              LineBox[CompressedData["
1:eJwV0UlIlHEYgPG/QZAz00ag2SJ1qS6CaWmWLQZBly4tZoslQcslTW05lFYm
VET7fm9VW2w9tFzVdnIqKzyU2iFKiyzoYv2+w8P7Ps/7zTcwM3FdxeLylBBC
Et9iISzBp9QQsnEsHsJrXoBDiRBatJ0Ygs1uN/Q0XOAlmIrjers2E618F7b7
bKpZ7nZTT8dFvgI5OKEntVlo4zWIoUJv1kbjUvQu71lp5uKk2xu9EE94LXa4
x80tbrf0DFzmq9CgfedL8ZnXeXaaeUp/q83GU74bCVTqt7UxOODZK9pqNOq9
2jJ08ek4rb3jc/CM78EDbYCvxy8+FFXaHT4WV3krj6OKl/Ime5+9GN18n+/N
M8/oHdpcPOftPA01fC9/aP9n34C/9kL0613mJBzWh/Fq+137OHy1Z6FBbzMT
yPB91W4D9qLozte4X7P/0Efx5WY/z8cU3uPeaZ+ATL7ffbC5kGeb+e5n7e/1
4Xye2cdz8MItaaajVh/kvsBepz8yAzbqv3m3fTKORO/hW+337OPRyNfiuvaT
l+ALr/e+GeY5/YNWhJfR74oR2Kbf1zJx0LNNWhkKcN7toz4fr6L/1L3efKyn
YJP+h/dEvwOO8phnFtlzzZFu/wGn4HKB
               "]], 
              
              LineBox[{2705, 2552, 2438, 2363, 2323, 2935, 2745, 2592, 2478, 
               3197}], 
              
              LineBox[{2627, 2513, 2324, 2936, 2746, 2593, 2479, 2403, 2991, 
               2802, 2649, 2535, 3205}], 
              
              LineBox[{2897, 2707, 2554, 2440, 3007, 2818, 2665, 2365, 2971, 
               2781, 2628, 2514, 3029, 2840, 2687, 2325, 2937, 2747, 2594, 
               2480, 3018}], 
              
              LineBox[{2629, 3056, 2867, 3110, 2515, 3030, 2841, 3100, 2688, 
               3075, 2886, 2326, 2938, 2748, 2595, 3051, 2862, 2481, 3019, 
               2830, 2677, 2405, 2993, 2804, 2651, 2537, 3206}], 
              
              LineBox[{2899, 2709, 2556, 2442, 2367, 2973, 2783, 2630, 2516, 
               2327, 2939, 2749, 2596, 3210}], 
              LineBox[{2328, 3178}], 
              
              LineBox[{2712, 2559, 2445, 2370, 2330, 2940, 2750, 2597, 2483, 
               3198}], 
              
              LineBox[{2517, 2331, 2941, 2751, 2598, 2484, 2408, 2994, 2805, 
               2652, 2538, 3207}], 
              
              LineBox[{2904, 2714, 2561, 2447, 3009, 2820, 2667, 2372, 2975, 
               2785, 2632, 2518, 3031, 2842, 2689, 2332, 2942, 2752, 2599, 
               3052, 2863, 2485, 3020}], 
              
              LineBox[{2633, 3057, 2868, 2519, 3032, 2843, 2690, 2333, 2943, 
               2753, 2600, 2486, 3021, 2832, 2679, 2410, 2996, 2807, 2654, 
               2540, 3040, 2851, 3218}], 
              LineBox[{2375, 2335, 3180}], 
              LineBox[{2376, 2336, 3181}], 
              LineBox[{2378, 2338, 2946, 2756, 2603, 2489, 2413, 3187}], 
              
              LineBox[{2380, 2978, 2788, 2635, 2521, 2340, 2948, 2758, 2605, 
               2491, 3022, 2833, 2680, 2415, 2997}], 
              
              LineBox[{2571, 3048, 2859, 3108, 2457, 3012, 2823, 3096, 2670, 
               3068, 2879, 2382, 2980, 2790, 2637, 3058, 2869, 2523, 3034, 
               2845, 2692, 2342, 2950, 2760, 2607, 2493, 3199}], 
              LineBox[{2343, 2951, 2761, 2608, 2494, 2418, 2303}], 
              
              LineBox[{2726, 2573, 2459, 2384, 2981, 2791, 2638, 2524, 2344, 
               2952, 2762, 2609, 2495, 3024, 2835}], 
              
              LineBox[{2575, 3049, 2860, 2461, 3014, 2825, 2672, 2386, 2983, 
               2793, 2640, 2526, 3036, 2847, 2694, 2346, 2954, 2764, 2611, 
               2497, 3026, 2837}], 
              LineBox[{2527, 2347, 2955, 2765, 2612, 2498, 2422, 2307}], 
              
              LineBox[{2920, 2730, 2577, 2463, 2388, 2985, 2795, 2642, 2528, 
               2348, 2956, 2766, 2613, 2499}], 
              
              LineBox[{2922, 2732, 2579, 2465, 2390, 2350, 2958, 2768, 2615, 
               2501}], 
              LineBox[{2351, 2959, 2769, 2616, 2502, 2426, 3189}], 
              LineBox[{2909, 2719, 2566, 2452, 2377, 2337}], 
              
              LineBox[{2911, 2721, 2568, 2454, 2379, 2977, 2787, 2634, 2520, 
               3201}], 
              LineBox[{2957, 2767, 2614, 2500, 2424, 3188}], 
              LineBox[{2908, 2718, 2565, 2451, 3193}], 
              
              LineBox[{2924, 2734, 2581, 2467, 3015, 2826, 2673, 3069, 2880, 
               3116}]}, Annotation[#, "Charting`Private`Tag$182221#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[{3300, 3841, 3682, 3553, 3456, 3388, 4095}], 
              LineBox[{3879, 3720, 3591, 3494, 3425, 3301, 3842}], 
              LineBox[{3426, 3302, 3843, 3684, 3555, 3458, 3390, 3910, 3751}], 
              
              LineBox[{3790, 3661, 3428, 3925, 3767, 3638, 3541, 3304, 3845, 
               3686, 3557, 3460, 3937, 3779, 3650, 3392, 3912, 3753, 3624}], 
              
              LineBox[{3994, 3836, 4030, 3305, 3846, 3687, 3999, 3558, 3969, 
               3811, 3461, 3938, 3780, 3651, 3393, 3913, 3754, 3625, 3528, 
               3957, 3799, 3670, 3355, 3884, 3725, 3596, 4124}], 
              
              LineBox[{3499, 3430, 3927, 3769, 3640, 3543, 3306, 3847, 3688, 
               3559, 3462, 3394}], 
              LineBox[{3307, 3848, 3689, 3560, 3463, 3395, 3357, 4090}], 
              LineBox[{3309, 4085}], 
              LineBox[{3310, 3311, 3850, 3691, 3562, 3465, 3397, 4097}], 
              LineBox[{3359, 3312, 3851, 3692, 3563, 3466, 4114}], 
              LineBox[{3361, 3314, 3853, 3694, 3565, 4121}], 
              LineBox[{3315, 4086}], 
              LineBox[{3316, 3317, 3854, 3695, 3566, 3469, 3401, 4099}], 
              
              LineBox[{3663, 3433, 3928, 3770, 3641, 3544, 3319, 3856, 3697, 
               3568, 3471, 3939, 3781, 3652, 3403, 3915, 3756, 4005}], 
              
              LineBox[{3676, 3995, 3837, 3320, 3857, 3698, 3569, 3472, 3940, 
               3782, 3653, 3404, 3916, 3757, 3628, 3531, 3366, 3889, 3730, 
               3601}], 
              LineBox[{3504, 3435, 3321, 3858, 3699, 3570, 3473, 4115}], 
              LineBox[{3322, 3859, 3700, 3571, 3474, 3406, 3368, 4094}], 
              LineBox[{3323, 3324, 4087}], 
              LineBox[{3325, 3326, 4088}], 
              LineBox[{3327, 3328, 4089}], 
              LineBox[{3329, 3330, 3860, 3701, 3572, 3475, 3407, 4100}], 
              
              LineBox[{3438, 3332, 3862, 3703, 3574, 3477, 3409, 3917, 3758, 
               3629, 4126}], 
              
              LineBox[{3532, 3371, 3893, 3734, 3605, 3508, 3439, 3930, 3772, 
               3643, 3546, 3333, 3863, 3704}], 
              
              LineBox[{3665, 3440, 3931, 3773, 3644, 3983, 3825, 3547, 3964, 
               3806, 4017, 3677, 3996, 3838, 4031, 3334, 3864, 3705, 4000, 
               3576, 3970, 3812, 4018, 3479, 3942, 3784, 4010, 3655, 3985, 
               3827, 4024, 3411, 3919, 3760, 4006, 3631}], 
              LineBox[{3442, 3336, 3866, 3707, 3578, 3481, 3413, 4101}], 
              LineBox[{3444, 3338, 3868, 3709, 3580, 3483, 3415, 4102}], 
              LineBox[CompressedData["
1:eJwV0UlsjHEcxvF/rRftlFaIpe10cdfFrovlgou2B4pOuSEhIbHrlNoODhIn
h5l2unCQOKAOti56Q0KNk6AkLg4OEieJ+vwP3zzP9/m97zTpmzx0vPVYQQgh
j4dFIazGu8IQarEpEUKGr8DK4hCe2U5hAcrc0vZ/egZ7UIfN9mx8Hs/5aRR5
t1CWu/XYZ/Qs9qIejfY+exle8DPxHVTYL9kC+nip3+mQDWhy67eX4yU/i4R7
QibdLtsL0M/3Yb7bGtnslrNXYJSfQzEq7b22WVjm2ZxtP9aixW3AnsQYPx/f
8cxCWeV2xT4bA/wAdtse8Vq850s9u05usQ/aKjHOL8TnbaO8EZ/5IlTbrvI5
GOSH+Wt9Bzp5K3+s12GKr8dW2xCvwgQ/wfN6Gy7yTj6mN+GW/lt+sXfr03oK
GX1Glthr9Gt6Ts6VvfKHHHI7or/R78ud8rb8I5/KlHubHOH3ZL28KX/JEfkh
fiv5iT+QHfKO/Bu/vdzgvk0Ox78lq+UN+VO+cjupf9Tb0c1TfFxvxlee5t/0
LpTyVfy6Pg/LfYdh21HbW74rPsfb+RO9AXm+Edttd3kNJvkS76Zll33C1oJp
3sO/6weR1UP8P2Ox239bWWuz
               "]], 
              
              LineBox[{3683, 3554, 3457, 3389, 3351, 3880, 3721, 3592, 3495, 
               4117}], 
              LineBox[{3622, 3525, 3352, 3881, 3722, 3593, 3496, 3427, 4104}], 
              
              LineBox[{3844, 3685, 3556, 3459, 3391, 3911, 3752, 3623, 3526, 
               3353, 3882, 3723, 3594, 3497, 3948}], 
              
              LineBox[{3977, 3819, 3527, 3956, 3798, 3669, 3990, 3832, 3354, 
               3883, 3724, 4002, 3595, 3972, 3814, 3498, 3949, 3791, 4012, 
               3662, 3988, 3830, 4027, 3429, 3926, 3768, 4008, 3639, 3981, 
               3823, 4022, 3542, 3962, 3804, 4015}], 
              LineBox[{3356, 3885, 3726, 3597, 3500, 3431, 4105}], 
              LineBox[{3396, 3358, 4091}], 
              LineBox[{3398, 3360, 4092}], 
              LineBox[{3468, 3400, 3362, 4093}], 
              LineBox[{3363, 3886, 3727, 3598, 3501, 3432, 4106}], 
              
              LineBox[{3855, 3696, 3567, 3470, 3402, 3914, 3755, 3626, 3529, 
               3364, 3887, 3728, 3599, 3502, 3950}], 
              
              LineBox[{3627, 3978, 3820, 3530, 3958, 3800, 3671, 3991, 3833, 
               3365, 3888, 3729, 4003, 3600, 3973, 3815, 4019, 3503, 3951, 
               3793, 4013, 3664, 3989, 3831, 4028, 3434, 3929, 3771, 4009, 
               3642, 3982, 3824, 4023, 3545, 3963, 3805, 4016}], 
              LineBox[{3405, 3367, 3890, 3731, 3602, 3505, 3436, 4107}], 
              LineBox[{3369, 3891, 3732, 3603, 3506, 3437, 3331}], 
              
              LineBox[{3702, 3573, 3476, 3408, 3370, 3892, 3733, 3604, 3507, 
               4118}], 
              
              LineBox[{3575, 3478, 3941, 3783, 3654, 3410, 3918, 3759, 3630, 
               3533, 3959, 3801, 3672, 3372, 3894, 3735, 3606, 3974, 3816, 
               3509, 3952, 3794}], 
              
              LineBox[{4020, 3534, 3960, 3802, 3673, 3992, 3834, 3373, 3895, 
               3736, 3607, 3975, 3817, 3510, 3953, 3795, 3666, 3441, 3932, 
               3774, 3645, 3548, 3965, 3807, 3678, 3335}], 
              
              LineBox[{3865, 3706, 3577, 3480, 3943, 3785, 3656, 3412, 3920, 
               3761, 3632, 3535, 3374, 3896, 3737, 3608, 3511}], 
              
              LineBox[{3867, 3708, 3579, 3482, 3414, 3376, 3898, 3739, 3610, 
               3513}], 
              LineBox[{3377, 3899, 3740, 3611, 3514, 3445, 4109}], 
              LineBox[{3852, 3693, 3564, 3467, 3399, 4098}], 
              LineBox[{3897, 3738, 3609, 3512, 3443, 4108}], 
              LineBox[{3849, 3690, 3561, 3464, 4113}], 
              
              LineBox[{3869, 3710, 3581, 3484, 3944, 3786, 3657, 3986, 3828, 
               4025}]}, Annotation[#, "Charting`Private`Tag$182221#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{548, 1383, 547}], 
             LineBox[{550, 1384, 549}], 
             LineBox[{551, 1385, 437}], 
             LineBox[{552, 1386, 110}], 
             LineBox[{554, 1387, 553}], 
             LineBox[{357, 1388, 158}], 
             LineBox[{556, 1389, 555}], 
             LineBox[{557, 1390, 387}], 
             LineBox[{559, 1391, 558}], 
             LineBox[{560, 1392, 495}], 
             LineBox[{562, 1393, 561}], 
             LineBox[{564, 1394, 563}], 
             LineBox[{566, 1395, 565}], 
             LineBox[{568, 1396, 567}], 
             LineBox[{570, 1397, 569}], 
             LineBox[{572, 1398, 571}], 
             LineBox[{574, 1399, 573}], 
             LineBox[{576, 1400, 575}], 
             LineBox[{578, 1401, 577}], 
             LineBox[{580, 1402, 579}], 
             LineBox[{581, 1403, 36}], 
             LineBox[{583, 1404, 582}], 
             LineBox[{585, 1405, 584}], 
             LineBox[{586, 1406, 37}], 
             LineBox[{588, 1407, 587}], 
             LineBox[{589, 1408, 527}], 
             LineBox[{590, 1409, 61}], 
             LineBox[{592, 1410, 591}], 
             LineBox[{593, 1411, 66}], 
             LineBox[{595, 1412, 594}], 
             LineBox[{597, 1413, 596}], 
             LineBox[{598, 1414, 14}], 
             LineBox[{599, 1415, 38}], 
             LineBox[{600, 1416, 80}], 
             LineBox[{602, 1417, 601}], 
             LineBox[{604, 1418, 603}], 
             LineBox[{606, 1419, 605}], 
             LineBox[{608, 1420, 607}], 
             LineBox[{609, 1421, 59}], 
             LineBox[{611, 1422, 610}], 
             LineBox[{613, 614, 612}], 
             LineBox[{1476, 2102, 1475}], 
             LineBox[{1478, 2103, 1477}], 
             LineBox[{1480, 2104, 1479}], 
             LineBox[{1481, 2105, 823}], 
             LineBox[{1483, 2106, 1482}], 
             LineBox[{1484, 2107, 1350}], 
             LineBox[{1209, 2108, 1033}], 
             LineBox[{1486, 2109, 1485}], 
             LineBox[{1488, 2110, 1487}], 
             LineBox[{1489, 2111, 1133}], 
             LineBox[{1423, 2112, 1171}], 
             LineBox[{1490, 636}], 
             LineBox[{1491, 2113, 1425}], 
             LineBox[{1493, 2114, 1492}], 
             LineBox[{1495, 2115, 1494}], 
             LineBox[{1497, 2116, 1496}], 
             LineBox[{1498, 2117, 618}], 
             LineBox[{1500, 2118, 1499}], 
             LineBox[{1501, 2119, 626}], 
             LineBox[{1502, 2120, 628}], 
             LineBox[{1504, 2121, 1503}], 
             LineBox[{1506, 2122, 1505}], 
             LineBox[{1508, 2123, 1507}], 
             LineBox[{1510, 2124, 1509}], 
             LineBox[{1512, 2125, 1511}], 
             LineBox[{1513, 2126, 1442}], 
             LineBox[{1515, 2127, 1514}], 
             LineBox[{1517, 2128, 1516}], 
             LineBox[{1519, 2129, 1518}], 
             LineBox[{1521, 2130, 1520}], 
             LineBox[{1522, 2131, 620}], 
             LineBox[{1524, 2132, 1523}], 
             LineBox[{1526, 2133, 1525}], 
             LineBox[{1528, 2134, 1527}], 
             LineBox[{1530, 2135, 1529}], 
             LineBox[{1531, 2136, 654}], 
             LineBox[{1533, 2137, 1532}], 
             LineBox[{1535, 2138, 1534}], 
             LineBox[{1463, 2139, 1320}], 
             LineBox[{1464, 2140, 1334}], 
             LineBox[{1536, 2141, 1465}], 
             LineBox[{1466, 2142, 1379}], 
             LineBox[{1537, 2143, 1467}], 
             LineBox[{1538, 2144, 1468}], 
             LineBox[{1469, 2145, 1084}], 
             LineBox[{1539, 2146, 1470}], 
             LineBox[{1471, 2147, 1138}], 
             LineBox[{1540, 2148, 1472}], 
             LineBox[{1541, 2149, 1473}], 
             LineBox[{1542, 2150, 1474}], 
             LineBox[{1544, 1545, 1543}], 
             LineBox[{2191, 3124, 2190}], 
             LineBox[{2192, 3125, 1987}], 
             LineBox[{2194, 3126, 2193}], 
             LineBox[{2196, 3127, 2195}], 
             LineBox[{2197, 3128, 1604}], 
             LineBox[{2199, 3129, 2198}], 
             LineBox[{2201, 3130, 2200}], 
             LineBox[{2203, 3131, 2202}], 
             LineBox[{2204, 3132, 1923}], 
             LineBox[{2205, 3133, 1938}], 
             LineBox[{1950, 3134, 1731}], 
             LineBox[{2207, 3135, 2206}], 
             LineBox[{2208, 3136, 1976}], 
             LineBox[{2209, 3137, 2006}], 
             LineBox[{2211, 3138, 2210}], 
             LineBox[{2213, 3139, 2212}], 
             LineBox[{2215, 3140, 2214}], 
             LineBox[{2217, 3141, 2216}], 
             LineBox[{2218, 3142, 1554}], 
             LineBox[{2220, 3143, 2219}], 
             LineBox[{2222, 3144, 2221}], 
             LineBox[{2224, 3145, 2223}], 
             LineBox[{2226, 3146, 2225}], 
             LineBox[{2228, 3147, 2227}], 
             LineBox[{2230, 3148, 2229}], 
             LineBox[{2232, 3149, 2231}], 
             LineBox[{2233, 3150, 1569}], 
             LineBox[{2235, 3151, 2234}], 
             LineBox[{2237, 3152, 2236}], 
             LineBox[{2239, 3153, 2238}], 
             LineBox[{2241, 3154, 2240}], 
             LineBox[{2243, 3155, 2242}], 
             LineBox[{2245, 3156, 2244}], 
             LineBox[{2246, 3157, 1619}], 
             LineBox[{2247, 3158, 1557}], 
             LineBox[{2248, 3159, 1570}], 
             LineBox[{2249, 3160, 1572}], 
             LineBox[{2250, 3161, 1583}], 
             LineBox[{2252, 3162, 2251}], 
             LineBox[{2254, 3163, 2253}], 
             LineBox[{2256, 3164, 2255}], 
             LineBox[{2258, 3165, 2257}], 
             LineBox[{2260, 3166, 2259}], 
             LineBox[{2262, 3167, 2261}], 
             LineBox[{2264, 3168, 2263}], 
             LineBox[{2265, 3169, 1602}], 
             LineBox[{2266, 3170, 1613}], 
             LineBox[{2268, 3171, 2267}], 
             LineBox[{2270, 2271, 2269}], 
             LineBox[{3220, 4033, 3219}], 
             LineBox[{3221, 4034, 2916}], 
             LineBox[{3223, 4035, 3222}], 
             LineBox[{3225, 4036, 3224}], 
             LineBox[{3227, 4037, 3226}], 
             LineBox[{3228, 4038, 3085}], 
             LineBox[{3230, 4039, 3229}], 
             LineBox[{2831, 4040, 2678}], 
             LineBox[{3231, 4041, 2844}], 
             LineBox[{3233, 4042, 3232}], 
             LineBox[{3234, 4043, 2945}], 
             LineBox[{3236, 4044, 3235}], 
             LineBox[{3238, 4045, 3237}], 
             LineBox[{3240, 4046, 3239}], 
             LineBox[{3242, 4047, 3241}], 
             LineBox[{3111, 4048, 2525}], 
             LineBox[{3244, 4049, 3243}], 
             LineBox[{3246, 4050, 3245}], 
             LineBox[{3248, 4051, 3247}], 
             LineBox[{3250, 4052, 3249}], 
             LineBox[{3251, 4053, 2902}], 
             LineBox[{3252, 4054, 2295}], 
             LineBox[{3254, 4055, 3253}], 
             LineBox[{3256, 4056, 3255}], 
             LineBox[{3258, 4057, 3257}], 
             LineBox[{3259, 4058, 2296}], 
             LineBox[{3260, 4059, 2322}], 
             LineBox[{3261, 4060, 3183}], 
             LineBox[{3263, 4061, 3262}], 
             LineBox[{3264, 4062, 2349}], 
             LineBox[{3266, 4063, 3265}], 
             LineBox[{3267, 4064, 2298}], 
             LineBox[{3268, 4065, 2309}], 
             LineBox[{3269, 4066, 2311}], 
             LineBox[{3271, 4067, 3270}], 
             LineBox[{3273, 4068, 3272}], 
             LineBox[{3275, 4069, 3274}], 
             LineBox[{3277, 4070, 3276}], 
             LineBox[{3279, 4071, 3278}], 
             LineBox[{3281, 4072, 3280}], 
             LineBox[{3282, 4073, 2417}], 
             LineBox[{3283, 4074, 2339}], 
             LineBox[{3284, 4075, 2275}], 
             LineBox[{3285, 4076, 2277}], 
             LineBox[{3286, 4077, 2290}], 
             LineBox[{3288, 4078, 3287}], 
             LineBox[{3290, 4079, 3289}], 
             LineBox[{3291, 4080, 3213}], 
             LineBox[{3293, 4081, 3292}], 
             LineBox[{3294, 4082, 3215}], 
             LineBox[{3295, 4083, 3216}], 
             LineBox[{3296, 4084, 3217}], 
             LineBox[{3298, 3299, 3297}], 
             LineBox[{4129, 4128}], 
             LineBox[{4130, 3861}], 
             LineBox[{4132, 4131}], 
             LineBox[{4134, 4133}], 
             LineBox[{4136, 4135}], 
             LineBox[{4138, 4137}], 
             LineBox[{4140, 4139}], 
             LineBox[{4141, 3675}], 
             LineBox[{4143, 4142}], 
             LineBox[{4144, 3792}], 
             LineBox[{4146, 4145}], 
             LineBox[{4148, 4147}], 
             LineBox[{3979, 3821}], 
             LineBox[{4150, 4149}], 
             LineBox[{4152, 4151}], 
             LineBox[{4154, 4153}], 
             LineBox[{4156, 4155}], 
             LineBox[{4158, 4157}], 
             LineBox[{4160, 4159}], 
             LineBox[{4162, 4161}], 
             LineBox[{4163, 3308}], 
             LineBox[{4165, 4164}], 
             LineBox[{4166, 3313}], 
             LineBox[{4168, 4167}], 
             LineBox[{4170, 4169}], 
             LineBox[{4171, 3350}], 
             LineBox[{4172, 4096}], 
             LineBox[{4174, 4173}], 
             LineBox[{4176, 4175}], 
             LineBox[{4178, 4177}], 
             LineBox[{4180, 4179}], 
             LineBox[{4181, 3375}], 
             LineBox[{4183, 4182}], 
             LineBox[{4184, 3303}], 
             LineBox[{4186, 4185}], 
             LineBox[{4187, 3318}], 
             LineBox[{4189, 4188}], 
             LineBox[{4190, 3337}], 
             LineBox[{4191, 3339}], 
             LineBox[{4193, 4192}], 
             LineBox[{4195, 4194}], 
             LineBox[{4197, 4196}], 
             LineBox[{4199, 4198}], 
             LineBox[{4201, 4200}], 
             LineBox[{4203, 4202}], 
             LineBox[{4205, 4204}], 
             LineBox[{4207, 4206}], 
             LineBox[{4208, 4127}], 
             LineBox[{4210, 4211, 4209}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution with discrete integrator\"", 
           TraditionalForm], PlotRange -> {{0., 6.24999987244898}, {-4., 4.}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8676786275888042`*^9, {3.8676860045224595`*^9, 3.8676860210162115`*^9}, 
   3.867686570053507*^9, 3.867868711725604*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"b4ea2384-f775-40e1-ba1d-01fdb641be7f"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8676787080462055`*^9, 
  3.867678709339792*^9}},ExpressionUUID->"cf1b83ea-ecb3-4982-abee-\
0ea8327b6be7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation Studies (Distribution of Computation Times)", "Section",
 CellChangeTimes->{{3.8676787559189715`*^9, 3.8676787864822464`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"4a6cc590-f442-4cf2-ba2b-04683823857f"],

Cell[CellGroupData[{

Cell["Define Computation Time function", "Subsection",
 CellChangeTimes->{{3.8672557229786463`*^9, 3.8672557272082777`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"78fba3b7-04b9-4905-84eb-8345b4ac27e1"],

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"ComputationTime", "[", "ICs_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "time", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EInitial", " ", "=", " ", 
        RowBox[{"Energy", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ICs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"time", ",", 
          RowBox[{"{", 
           RowBox[{
           "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",",
             "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
            "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], 
           "}"}]}], "}"}], "=", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Timing", "[", 
          RowBox[{"ffCartPendulum2", "[", 
           RowBox[{
           "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
            "order", ",", "maxIter", ",", "maxError", ",", "uMax", ",", 
            "maxCount", ",", "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], 
          "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Time Taken = \>\"", ",", "time"}], "]"}], ";", 
       "\[IndentingNewLine]", "time"}]}], "\[IndentingNewLine]", "]"}]}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<ICDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<EDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.867184370452484*^9, 3.867184448677465*^9}, {
   3.8671844902671623`*^9, 3.867184495244571*^9}, 3.867184528106059*^9, {
   3.8671862887189293`*^9, 3.8671862925896935`*^9}, {3.867253140769041*^9, 
   3.867253141246888*^9}, {3.8672578912201786`*^9, 3.8672578913411407`*^9}, {
   3.8672595919409623`*^9, 3.867259592079918*^9}, {3.8673405812868757`*^9, 
   3.867340603445762*^9}, 3.8676861679184675`*^9, {3.8676862008239994`*^9, 
   3.86768621012204*^9}, {3.867687507289279*^9, 3.867687529503213*^9}, {
   3.867778587879006*^9, 3.867778594823739*^9}, 3.8677802874741454`*^9, {
   3.867794826980481*^9, 3.867794839563376*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[324]:=",ExpressionUUID->"04eaf6d0-1f9a-4a18-ad3e-f67206cf68a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use the above 200 ICData points for all simulations", "Subsection",
 CellChangeTimes->{{3.867255702607237*^9, 3.86725571325979*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d0d51fee-e20d-49b0-966d-d552bbc9389a"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"numberTests", " ", "=", " ", "200"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "20"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "10"}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"xdotMin", " ", "=", " ", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"xdotMax", " ", "=", " ", "2"}], ";", 
    RowBox[{"\[Theta]Min", " ", "=", " ", 
     RowBox[{"-", "\[Pi]"}]}], ";", 
    RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";", 
    RowBox[{"\[Theta]dotMin", " ", "=", " ", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"TimingData", " ", "=", " ", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"ComputationTime", "[", 
        RowBox[{"ICData", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<TimingDataComputation100.mx\>\"", ",", "TimingData"}], "]"}],
    ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.867184586779293*^9, 3.8671845895114202`*^9}, {
   3.8671846846809797`*^9, 3.8671847053273783`*^9}, 3.8671851118983345`*^9, {
   3.867185164337563*^9, 3.8671852257009335`*^9}, {3.8671852939810944`*^9, 
   3.8671853209264803`*^9}, {3.8671853661800013`*^9, 
   3.8671854973450503`*^9}, {3.867185536305588*^9, 3.867185536836419*^9}, {
   3.867185611716468*^9, 3.86718573374044*^9}, {3.8671857668468494`*^9, 
   3.867185778752042*^9}, {3.867185965776222*^9, 3.8671859904993143`*^9}, {
   3.867186040244404*^9, 3.8671860631090903`*^9}, 3.8671863132360897`*^9, {
   3.867186408939479*^9, 3.867186409331354*^9}, {3.867187144095339*^9, 
   3.8671871689134026`*^9}, {3.8672541096625853`*^9, 3.867254118498727*^9}, {
   3.8672556291819906`*^9, 3.8672556530212784`*^9}, 3.8672556986765084`*^9, {
   3.8672558861018724`*^9, 3.8672558947070885`*^9}, {3.867259675646882*^9, 
   3.8672596869992075`*^9}, {3.867686673047736*^9, 3.8676867391327085`*^9}, {
   3.867687576893133*^9, 3.86768758748676*^9}, {3.867688358085556*^9, 
   3.867688364530505*^9}, {3.8677779882047787`*^9, 3.8677780277068825`*^9}, {
   3.867778600368929*^9, 3.8677786297023516`*^9}, {3.867779644357101*^9, 
   3.8677796488936195`*^9}, {3.8677806992627087`*^9, 3.86778070425708*^9}, {
   3.8677947142482877`*^9, 3.867794718428921*^9}, {3.8677968217382593`*^9, 
   3.8677968252671075`*^9}, {3.8678687260450535`*^9, 3.867868726138022*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"9301bae7-6304-4fff-a5c9-eb3a735b1304"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clean up Bad data points", "Subsection",
 CellChangeTimes->{{3.8677788411723137`*^9, 3.8677788572220745`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d324d000-5ccb-46ff-a97e-cf3e5a7c888d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"TimingData", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ">", "20"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"TimingData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"ComputationTime", "[", 
           RowBox[{"ICData", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<i = \>\"", ",", "i", ",", "\"\<    TimingData = \>\"", ",", 
           RowBox[{"TimingData", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "_"}], "]"}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "162", ",", "numberTests"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.867778872187188*^9, 3.8677789708289843`*^9}, {
   3.8677790138729315`*^9, 3.8677790313552246`*^9}, 3.8677796898612432`*^9, {
   3.8677803277519956`*^9, 3.867780333863999*^9}, {3.867781044592972*^9, 
   3.867781044790907*^9}, 3.8677813440592036`*^9, {3.8677817535775127`*^9, 
   3.8677817539703817`*^9}, {3.8677963806512613`*^9, 3.867796383029484*^9}, {
   3.8677977087186947`*^9, 3.867797709050582*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"8b005441-b926-4a17-a4be-427c8122a419"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Print Final Data", "Subsection",
 CellChangeTimes->{{3.867686784611235*^9, 3.8676867894376993`*^9}, {
  3.8678687378023157`*^9, 3.8678687399966183`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"706d50eb-15aa-4398-b300-5226b2026de9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimingData20", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataComputation20.mx\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8677786526888485`*^9, 3.8677786546012216`*^9}, {
  3.8677796558143606`*^9, 3.8677796795126247`*^9}},
 CellLabel->
  "In[407]:=",ExpressionUUID->"ea9590aa-5d61-4644-b8ea-162b9785801e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.703125`", ",", "0.40625`", ",", "0.453125`", ",", "0.40625`", ",", 
   "0.4375`", ",", "0.390625`", ",", "0.453125`", ",", "0.46875`", ",", 
   "0.421875`", ",", "1.609375`", ",", "0.46875`", ",", "0.421875`", ",", 
   "0.53125`", ",", "1.828125`", ",", "0.421875`", ",", "1.84375`", ",", 
   "2.15625`", ",", "0.5`", ",", "0.921875`", ",", "1.625`", ",", "0.453125`",
    ",", "0.46875`", ",", "0.5`", ",", "0.453125`", ",", "1.65625`", ",", 
   "0.4375`", ",", "0.609375`", ",", "0.484375`", ",", "0.421875`", ",", 
   "0.453125`", ",", "1.1875`", ",", "0.4375`", ",", "0.390625`", ",", 
   "0.328125`", ",", "1.796875`", ",", "1.921875`", ",", "1.9375`", ",", 
   "0.46875`", ",", "1.84375`", ",", "0.390625`", ",", "1.390625`", ",", 
   "1.171875`", ",", "1.53125`", ",", "0.46875`", ",", "0.390625`", ",", 
   "0.515625`", ",", "0.625`", ",", "0.890625`", ",", "0.40625`", ",", 
   "0.328125`", ",", "1.78125`", ",", "0.4375`", ",", "0.546875`", ",", 
   "1.671875`", ",", "0.515625`", ",", "1.75`", ",", "1.890625`", ",", 
   "2.015625`", ",", "0.40625`", ",", "0.65625`", ",", "1.96875`", ",", 
   "0.46875`", ",", "0.421875`", ",", "0.46875`", ",", "0.421875`", ",", 
   "1.59375`", ",", "0.484375`", ",", "1.8125`", ",", "1.8125`", ",", 
   "0.53125`", ",", "2.078125`", ",", "0.390625`", ",", "0.40625`", ",", 
   "0.421875`", ",", "0.453125`", ",", "1.1875`", ",", "0.46875`", ",", 
   "0.4375`", ",", "1.234375`", ",", "0.390625`", ",", "2.015625`", ",", 
   "0.546875`", ",", "0.484375`", ",", "0.484375`", ",", "0.484375`", ",", 
   "0.421875`", ",", "0.46875`", ",", "1.015625`", ",", "0.765625`", ",", 
   "1.75`", ",", "1.9375`", ",", "0.4375`", ",", "1.78125`", ",", "1.984375`",
    ",", "1.90625`", ",", "0.46875`", ",", "1.546875`", ",", "0.453125`", ",",
    "0.46875`", ",", "2.`", ",", "0.453125`", ",", "1.828125`", ",", 
   "0.515625`", ",", "2.015625`", ",", "1.640625`", ",", "0.609375`", ",", 
   "0.453125`", ",", "1.765625`", ",", "0.4375`", ",", "0.4375`", ",", 
   "1.8125`", ",", "0.4375`", ",", "1.890625`", ",", "0.40625`", ",", 
   "1.96875`", ",", "1.78125`", ",", "0.46875`", ",", "1.28125`", ",", 
   "0.390625`", ",", "0.421875`", ",", "0.4375`", ",", "0.375`", ",", 
   "0.71875`", ",", "1.875`", ",", "0.515625`", ",", "1.15625`", ",", 
   "0.46875`", ",", "0.453125`", ",", "1.140625`", ",", "0.4375`", ",", 
   "0.453125`", ",", "0.453125`", ",", "0.5`", ",", "0.46875`", ",", 
   "0.453125`", ",", "1.78125`", ",", "2.015625`", ",", "1.265625`", ",", 
   "0.453125`", ",", "0.84375`", ",", "0.4375`", ",", "1.765625`", ",", 
   "1.921875`", ",", "0.40625`", ",", "0.46875`", ",", "0.46875`", ",", 
   "1.46875`", ",", "0.9375`", ",", "1.6875`", ",", "1.953125`", ",", 
   "0.359375`", ",", "0.515625`", ",", "0.484375`", ",", "0.421875`", ",", 
   "0.421875`", ",", "0.90625`", ",", "1.65625`", ",", "0.59375`", ",", 
   "1.671875`", ",", "0.46875`", ",", "1.9375`", ",", "1.453125`", ",", 
   "0.40625`", ",", "1.359375`", ",", "0.4375`", ",", "0.390625`", ",", 
   "0.453125`", ",", "0.46875`", ",", "1.90625`", ",", "0.53125`", ",", 
   "0.515625`", ",", "0.40625`", ",", "1.828125`", ",", "1.59375`", ",", 
   "0.46875`", ",", "0.46875`", ",", "0.5`", ",", "0.453125`", ",", 
   "1.78125`", ",", "0.453125`", ",", "0.4375`", ",", "0.453125`", ",", 
   "0.421875`", ",", "0.515625`", ",", "0.421875`", ",", "1.796875`", ",", 
   "0.453125`", ",", "1.8125`", ",", "1.796875`", ",", "0.609375`", ",", 
   "0.375`", ",", "1.875`", ",", "0.3125`", ",", "0.640625`", ",", "0.53125`",
    ",", "0.3125`", ",", "0.328125`", ",", "0.71875`", ",", "1.96875`", ",", 
   "0.3125`"}], "}"}]], "Output",
 CellChangeTimes->{3.8677786554659395`*^9, 3.8677796802433834`*^9, 
  3.867779711295246*^9, 3.867782187116974*^9, 3.8677946785049543`*^9, 
  3.867868685136058*^9, 3.8678693904958043`*^9},
 CellLabel->
  "Out[407]=",ExpressionUUID->"d82de120-dde1-4c45-8460-9de9bc816adc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimingData30", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataComputation30.mx\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.867778660333352*^9, 3.8677786633863535`*^9}, {
  3.8677806887441444`*^9, 3.8677806919351025`*^9}},
 CellLabel->
  "In[408]:=",ExpressionUUID->"76513fc9-4bd8-4283-87b2-4644ce9ab7f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.03125`", ",", "0.765625`", ",", "0.78125`", ",", "0.765625`", ",", 
   "0.828125`", ",", "0.734375`", ",", "0.6875`", ",", "0.75`", ",", 
   "0.671875`", ",", "0.734375`", ",", "0.75`", ",", "0.78125`", ",", 
   "0.765625`", ",", "2.78125`", ",", "0.734375`", ",", "3.21875`", ",", 
   "3.1875`", ",", "0.703125`", ",", "0.765625`", ",", "0.734375`", ",", 
   "0.765625`", ",", "0.734375`", ",", "0.765625`", ",", "0.71875`", ",", 
   "1.265625`", ",", "0.703125`", ",", "1.03125`", ",", "0.734375`", ",", 
   "0.75`", ",", "0.765625`", ",", "0.71875`", ",", "0.703125`", ",", "0.75`",
    ",", "0.71875`", ",", "2.75`", ",", "2.71875`", ",", "3.046875`", ",", 
   "0.6875`", ",", "2.890625`", ",", "0.625`", ",", "2.5`", ",", "1.296875`", 
   ",", "3.078125`", ",", "0.75`", ",", "0.734375`", ",", "0.78125`", ",", 
   "0.71875`", ",", "0.65625`", ",", "0.796875`", ",", "0.71875`", ",", 
   "3.46875`", ",", "0.671875`", ",", "0.703125`", ",", "3.0625`", ",", 
   "1.5`", ",", "3.`", ",", "2.734375`", ",", "3.421875`", ",", "0.765625`", 
   ",", "1.40625`", ",", "3.296875`", ",", "0.78125`", ",", "0.75`", ",", 
   "0.78125`", ",", "0.78125`", ",", "3.21875`", ",", "0.765625`", ",", 
   "3.296875`", ",", "3.125`", ",", "0.8125`", ",", "3.3125`", ",", 
   "0.734375`", ",", "0.75`", ",", "0.6875`", ",", "0.71875`", ",", 
   "0.734375`", ",", "0.75`", ",", "0.71875`", ",", "0.8125`", ",", "0.75`", 
   ",", "3.15625`", ",", "0.75`", ",", "2.828125`", ",", "0.765625`", ",", 
   "0.734375`", ",", "0.609375`", ",", "0.609375`", ",", "1.890625`", ",", 
   "2.`", ",", "2.875`", ",", "3.203125`", ",", "0.828125`", ",", "3.203125`",
    ",", "3.4375`", ",", "2.921875`", ",", "0.78125`", ",", "1.484375`", ",", 
   "2.796875`", ",", "0.75`", ",", "2.890625`", ",", "0.703125`", ",", 
   "3.0625`", ",", "0.53125`", ",", "3.125`", ",", "2.890625`", ",", 
   "1.34375`", ",", "0.734375`", ",", "3.`", ",", "0.75`", ",", "0.65625`", 
   ",", "3.140625`", ",", "0.65625`", ",", "3.015625`", ",", "0.703125`", ",",
    "2.796875`", ",", "3.265625`", ",", "0.78125`", ",", "1.5625`", ",", 
   "0.75`", ",", "0.796875`", ",", "0.765625`", ",", "0.703125`", ",", 
   "2.265625`", ",", "3.`", ",", "0.640625`", ",", "1.375`", ",", "0.71875`", 
   ",", "0.703125`", ",", "0.71875`", ",", "0.796875`", ",", "0.734375`", ",",
    "0.703125`", ",", "0.71875`", ",", "0.71875`", ",", "0.765625`", ",", 
   "2.890625`", ",", "2.859375`", ",", "1.34375`", ",", "0.6875`", ",", 
   "1.375`", ",", "0.703125`", ",", "3.328125`", ",", "3.046875`", ",", 
   "0.65625`", ",", "0.703125`", ",", "0.71875`", ",", "2.921875`", ",", 
   "3.75`", ",", "1.828125`", ",", "3.453125`", ",", "1.25`", ",", 
   "0.640625`", ",", "0.6875`", ",", "0.6875`", ",", "0.71875`", ",", 
   "2.015625`", ",", "3.09375`", ",", "2.25`", ",", "3.21875`", ",", 
   "0.65625`", ",", "2.875`", ",", "0.703125`", ",", "3.53125`", ",", 
   "0.6875`", ",", "0.734375`", ",", "1.984375`", ",", "0.71875`", ",", 
   "2.796875`", ",", "2.9375`", ",", "0.65625`", ",", "0.71875`", ",", 
   "0.703125`", ",", "2.9375`", ",", "2.84375`", ",", "0.671875`", ",", 
   "0.703125`", ",", "0.71875`", ",", "0.65625`", ",", "2.734375`", ",", 
   "0.640625`", ",", "0.734375`", ",", "0.734375`", ",", "0.671875`", ",", 
   "0.671875`", ",", "0.703125`", ",", "3.015625`", ",", "2.875`", ",", 
   "3.03125`", ",", "2.84375`", ",", "2.015625`", ",", "0.65625`", ",", 
   "3.03125`", ",", "0.640625`", ",", "1.703125`", ",", "1.75`", ",", 
   "0.640625`", ",", "0.671875`", ",", "0.609375`", ",", "3.171875`", ",", 
   "0.546875`"}], "}"}]], "Output",
 CellChangeTimes->{3.8677786639801598`*^9, 3.8677806927278414`*^9, 
  3.8677821890433445`*^9, 3.8677946803143625`*^9, 3.8678693913545313`*^9},
 CellLabel->
  "Out[408]=",ExpressionUUID->"30c82eac-5c56-464c-beb6-18e0e67d13c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimingData40", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataComputation40.mx\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8677786654696736`*^9, 3.867778668068825*^9}, {
  3.8677821920783567`*^9, 3.867782197349635*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"e88ae3ac-396d-42d2-9a18-12053c7ddc61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.46875`", ",", "1.`", ",", "1.03125`", ",", "3.796875`", ",", "1.046875`",
    ",", "1.`", ",", "1.03125`", ",", "1.0625`", ",", "1.03125`", ",", 
   "0.984375`", ",", "0.953125`", ",", "1.046875`", ",", "1.03125`", ",", 
   "1.09375`", ",", "1.046875`", ",", "4.828125`", ",", "4.6875`", ",", 
   "1.078125`", ",", "1.4375`", ",", "1.0625`", ",", "0.984375`", ",", "1.`", 
   ",", "1.03125`", ",", "1.0625`", ",", "4.65625`", ",", "1.015625`", ",", 
   "4.625`", ",", "1.078125`", ",", "1.`", ",", "1.015625`", ",", "1.125`", 
   ",", "1.046875`", ",", "1.0625`", ",", "0.96875`", ",", "4.515625`", ",", 
   "4.765625`", ",", "4.578125`", ",", "1.046875`", ",", "4.390625`", ",", 
   "0.9375`", ",", "3.5`", ",", "4.53125`", ",", "1.703125`", ",", 
   "0.953125`", ",", "3.625`", ",", "0.953125`", ",", "1.03125`", ",", "1.`", 
   ",", "0.953125`", ",", "1.046875`", ",", "2.875`", ",", "1.`", ",", "1.`", 
   ",", "4.65625`", ",", "4.1875`", ",", "4.671875`", ",", "4.640625`", ",", 
   "4.578125`", ",", "1.03125`", ",", "2.78125`", ",", "4.953125`", ",", 
   "1.`", ",", "0.90625`", ",", "1.015625`", ",", "1.015625`", ",", 
   "4.765625`", ",", "1.078125`", ",", "4.546875`", ",", "4.640625`", ",", 
   "1.`", ",", "4.953125`", ",", "0.984375`", ",", "1.046875`", ",", 
   "1.03125`", ",", "0.984375`", ",", "1.015625`", ",", "1.0625`", ",", 
   "1.046875`", ",", "0.84375`", ",", "1.`", ",", "4.921875`", ",", 
   "0.953125`", ",", "0.96875`", ",", "0.984375`", ",", "0.96875`", ",", 
   "1.015625`", ",", "0.984375`", ",", "3.734375`", ",", "2.125`", ",", 
   "4.765625`", ",", "4.59375`", ",", "1.0625`", ",", "4.875`", ",", 
   "5.328125`", ",", "4.71875`", ",", "1.015625`", ",", "1.859375`", ",", 
   "1.921875`", ",", "1.015625`", ",", "5.`", ",", "1.03125`", ",", 
   "4.640625`", ",", "1.03125`", ",", "4.6875`", ",", "4.609375`", ",", 
   "3.671875`", ",", "1.078125`", ",", "5.0625`", ",", "1.015625`", ",", 
   "0.953125`", ",", "4.578125`", ",", "1.015625`", ",", "5.0625`", ",", 
   "0.96875`", ",", "4.5625`", ",", "4.84375`", ",", "1.03125`", ",", 
   "2.015625`", ",", "1.0625`", ",", "0.953125`", ",", "0.96875`", ",", 
   "0.953125`", ",", "1.`", ",", "4.578125`", ",", "0.984375`", ",", 
   "3.859375`", ",", "1.015625`", ",", "1.078125`", ",", "1.`", ",", "1.`", 
   ",", "1.03125`", ",", "1.015625`", ",", "0.9375`", ",", "0.96875`", ",", 
   "1.078125`", ",", "4.390625`", ",", "4.984375`", ",", "2.953125`", ",", 
   "1.`", ",", "1.96875`", ",", "1.03125`", ",", "4.734375`", ",", 
   "4.609375`", ",", "1.03125`", ",", "1.09375`", ",", "0.984375`", ",", 
   "4.75`", ",", "1.484375`", ",", "3.984375`", ",", "5.25`", ",", "3.15625`",
    ",", "1.015625`", ",", "0.96875`", ",", "0.96875`", ",", "0.984375`", ",",
    "3.734375`", ",", "4.546875`", ",", "4.625`", ",", "4.890625`", ",", 
   "1.0625`", ",", "4.75`", ",", "1.03125`", ",", "1.9375`", ",", "1.03125`", 
   ",", "1.015625`", ",", "2.875`", ",", "1.03125`", ",", "4.96875`", ",", 
   "4.5`", ",", "1.`", ",", "1.125`", ",", "1.015625`", ",", "4.359375`", ",",
    "4.515625`", ",", "1.015625`", ",", "0.90625`", ",", "1.03125`", ",", 
   "0.96875`", ",", "4.3125`", ",", "0.875`", ",", "0.921875`", ",", 
   "0.953125`", ",", "0.9375`", ",", "0.984375`", ",", "0.953125`", ",", 
   "4.6875`", ",", "1.96875`", ",", "4.609375`", ",", "4.65625`", ",", 
   "1.578125`", ",", "0.765625`", ",", "4.890625`", ",", "0.765625`", ",", 
   "1.515625`", ",", "2.1875`", ",", "0.765625`", ",", "0.765625`", ",", 
   "0.765625`", ",", "4.828125`", ",", "0.796875`"}], "}"}]], "Output",
 CellChangeTimes->{3.8677821979414396`*^9, 3.8677946824056797`*^9, 
  3.8678693925221605`*^9},
 CellLabel->
  "Out[409]=",ExpressionUUID->"a4757381-ce03-43a6-9c35-f38f7135b6c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimingData60", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataComputation60.mx\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.867796805928421*^9, 3.867796809217347*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"46a9c4be-7bc5-470c-b546-e937448ddafd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "14.75`", ",", "2.109375`", ",", "2.015625`", ",", "16.4375`", ",", 
   "2.171875`", ",", "2.140625`", ",", "2.1875`", ",", "2.09375`", ",", 
   "2.046875`", ",", "2.125`", ",", "1.96875`", ",", "1.96875`", ",", 
   "2.1875`", ",", "2.140625`", ",", "2.078125`", ",", "16.234375`", ",", 
   "15.53125`", ",", "2.265625`", ",", "4.4375`", ",", "4.453125`", ",", 
   "2.03125`", ",", "2.03125`", ",", "2.015625`", ",", "2.15625`", ",", 
   "2.09375`", ",", "9.65625`", ",", "2.09375`", ",", "2.03125`", ",", 
   "2.078125`", ",", "1.953125`", ",", "1.90625`", ",", "1.984375`", ",", 
   "1.953125`", ",", "1.953125`", ",", "15.515625`", ",", "15.453125`", ",", 
   "19.328125`", ",", "1.8125`", ",", "15.828125`", ",", "2.09375`", ",", 
   "9.625`", ",", "15.9375`", ",", "3.953125`", ",", "2.109375`", ",", 
   "2.046875`", ",", "2.078125`", ",", "2.015625`", ",", "1.90625`", ",", 
   "1.828125`", ",", "2.015625`", ",", "3.546875`", ",", "1.953125`", ",", 
   "1.984375`", ",", "15.4375`", ",", "9.078125`", ",", "14.8125`", ",", 
   "19.703125`", ",", "18.265625`", ",", "1.96875`", ",", "12.984375`", ",", 
   "16.375`", ",", "2.078125`", ",", "2.015625`", ",", "2.`", ",", "2.03125`",
    ",", "15.90625`", ",", "2.`", ",", "15.421875`", ",", "16.25`", ",", 
   "2.`", ",", "16.53125`", ",", "2.`", ",", "1.859375`", ",", "1.90625`", 
   ",", "2.046875`", ",", "2.28125`", ",", "2.0625`", ",", "1.8125`", ",", 
   "2.078125`", ",", "2.109375`", ",", "15.75`", ",", "2.015625`", ",", 
   "1.96875`", ",", "1.875`", ",", "1.875`", ",", "2.015625`", ",", 
   "1.96875`", ",", "5.8125`", ",", "2.03125`", ",", "16.234375`", ",", 
   "16.171875`", ",", "2.140625`", ",", "15.859375`", ",", "17.109375`", ",", 
   "15.046875`", ",", "2.03125`", ",", "2.125`", ",", "8.109375`", ",", 
   "2.15625`", ",", "15.9375`", ",", "1.953125`", ",", "18.296875`", ",", 
   "1.96875`", ",", "24.8125`", ",", "17.53125`", ",", "12.65625`", ",", 
   "1.84375`", ",", "15.890625`", ",", "2.03125`", ",", "2.046875`", ",", 
   "15.921875`", ",", "2.09375`", ",", "15.90625`", ",", "2.40625`", ",", 
   "16.078125`", ",", "15.71875`", ",", "1.84375`", ",", "1.65625`", ",", 
   "1.703125`", ",", "1.609375`", ",", "1.609375`", ",", "1.6875`", ",", 
   "1.578125`", ",", "18.390625`", ",", "2.140625`", ",", "3.859375`", ",", 
   "2.03125`", ",", "1.8125`", ",", "2.046875`", ",", "2.109375`", ",", 
   "2.09375`", ",", "2.0625`", ",", "2.234375`", ",", "2.203125`", ",", 
   "2.078125`", ",", "14.953125`", ",", "17.75`", ",", "10.25`", ",", 
   "1.90625`", ",", "3.859375`", ",", "1.640625`", ",", "18.4375`", ",", 
   "16.078125`", ",", "7.515625`", ",", "2.171875`", ",", "2.03125`", ",", 
   "4.078125`", ",", "4.046875`", ",", "5.9375`", ",", "16.75`", ",", 
   "3.984375`", ",", "2.03125`", ",", "2.078125`", ",", "1.984375`", ",", 
   "2.125`", ",", "15.890625`", ",", "33.703125`", ",", "19.890625`", ",", 
   "15.921875`", ",", "1.890625`", ",", "23.96875`", ",", "1.71875`", ",", 
   "1.71875`", ",", "1.828125`", ",", "1.71875`", ",", "1.71875`", ",", 
   "3.59375`", ",", "18.28125`", ",", "19.34375`", ",", "1.8125`", ",", "2.`",
    ",", "2.0625`", ",", "16.359375`", ",", "14.984375`", ",", "2.078125`", 
   ",", "2.09375`", ",", "2.125`", ",", "2.`", ",", "15.71875`", ",", 
   "1.9375`", ",", "2.`", ",", "1.953125`", ",", "1.96875`", ",", "7.578125`",
    ",", "2.015625`", ",", "18.859375`", ",", "5.9375`", ",", "16.796875`", 
   ",", "16.0625`", ",", "2.015625`", ",", "2.03125`", ",", "22.171875`", ",",
    "1.75`", ",", "3.671875`", ",", "3.546875`", ",", "1.75`", ",", 
   "1.46875`", ",", "1.484375`", ",", "17.03125`", ",", "1.5625`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8677978635881305`*^9, 3.867869393566828*^9},
 CellLabel->
  "Out[410]=",ExpressionUUID->"9f75a363-83e3-4ab2-aada-090322a5e508"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting BoxPlots", "Subsection",
 CellChangeTimes->{{3.8677818146615705`*^9, 3.8677818258179274`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"1d6ef86c-66d7-4e03-9bcd-0f20f629f4f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "TimingData20", ",", "TimingData30", ",", "TimingData40", ",", 
     "TimingData60"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"BoxWhiskerChart", "[", "data2", "]"}]}], "Input",
 CellChangeTimes->{{3.867781986052616*^9, 3.8677819863965063`*^9}, {
  3.8677820222767906`*^9, 3.8677820436078253`*^9}, {3.8677821135220013`*^9, 
  3.867782144434909*^9}, {3.867797867605819*^9, 3.867797870590845*^9}, {
  3.867869399338993*^9, 
  3.8678694007625403`*^9}},ExpressionUUID->"3a24882d-ab46-4c1e-a425-\
fa8927a8b118"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.5097251739635205, -1.3570312500000001`}, {
     4.4902748260364795`, 35.37265625}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             
             PolygonBox[{{0.7312248802544821, 1.6484375}, {1.268775119745518, 
              1.6484375}, {1.268775119745518, 0.4375}, {0.7312248802544821, 
              0.4375}}], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              
              LineBox[{{1.268775119745518, 0.5}, {0.7312248802544821, 
               0.5}}]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{1., 0.4375}, {1., 0.3125}}, {{1., 1.6484375}, {1., 
               2.15625}}}]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{1.134387559872759, 0.3125}, {0.865612440127241, 
               0.3125}}, {{1.134387559872759, 2.15625}, {0.865612440127241, 
               2.15625}}}]}, {}}]},
          
          ImageSizeCache->{{47.274488851979385`, 92.07996244416509}, {
           73.537350936474, 86.0092411753885}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "2.15625`"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "1.6484375`"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], "0.5`"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.4375`"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], "0.3125`"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 2.15625}, {
            Style["75%", Bold], 1.6484375}, {
            Style["median", Bold], 0.5}, {
            Style["25%", Bold], 0.4375}, {
            Style["min", Bold], 0.3125}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             
             PolygonBox[{{1.731224880254482, 2.8359375}, {2.268775119745518, 
              2.8359375}, {2.268775119745518, 0.71875}, {1.731224880254482, 
              0.71875}}], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              
              LineBox[{{2.268775119745518, 0.765625}, {1.7312248802544818`, 
               0.765625}}]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{2., 0.71875}, {2., 0.53125}}, {{2., 2.8359375}, {2., 
               3.75}}}]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{2.134387559872759, 0.53125}, {1.865612440127241, 
               0.53125}}, {{2.134387559872759, 3.75}, {1.865612440127241, 
               3.75}}}]}, {}}]},
          
          ImageSizeCache->{{125.36402055265216`, 170.16949414483793`}, {
           65.20147604117595, 84.86510148387701}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "3.75`"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "2.8359375`"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             "0.765625`"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.71875`"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], "0.53125`"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 3.75}, {
            Style["75%", Bold], 2.8359375}, {
            Style["median", Bold], 0.765625}, {
            Style["25%", Bold], 0.71875}, {
            Style["min", Bold], 0.53125}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             
             PolygonBox[{{2.7312248802544823`, 4.484375}, {3.268775119745518, 
              4.484375}, {3.268775119745518, 1.}, {2.7312248802544823`, 
              1.}}], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              
              LineBox[{{3.268775119745518, 1.0546875}, {2.731224880254482, 
               1.0546875}}]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{3., 1.}, {3., 0.765625}}, {{3., 4.484375}, {3., 
               5.328125}}}]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{3.134387559872759, 0.765625}, {2.865612440127241, 
               0.765625}}, {{3.134387559872759, 5.328125}, {2.865612440127241,
                5.328125}}}]}, {}}]},
          
          ImageSizeCache->{{203.453552253325, 248.25902584551073`}, {
           56.947325409557315`, 83.63923752868612}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "5.328125`"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "4.484375`"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             "1.0546875`"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "1.`"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], "0.765625`"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 5.328125}, {
            Style["75%", Bold], 4.484375}, {
            Style["median", Bold], 1.0546875}, {
            Style["25%", Bold], 1.}, {
            Style["min", Bold], 0.765625}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             
             PolygonBox[{{3.7312248802544823`, 15.015625}, {4.268775119745518,
               15.015625}, {4.268775119745518, 2.}, {3.7312248802544823`, 
              2.}}], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              
              LineBox[{{4.268775119745518, 2.109375}, {3.731224880254482, 
               2.109375}}]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{4., 2.}, {4., 1.46875}}, {{4., 15.015625}, {4., 
               33.703125}}}]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{4.134387559872759, 1.46875}, {3.865612440127241, 
               1.46875}}, {{4.134387559872759, 33.703125}, {3.865612440127241,
                33.703125}}}]}, {}}]},
          
          ImageSizeCache->{{281.54308395399784`, 
           326.3485575461836}, {-91.46393743221927, 79.96164566311347}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "33.703125`"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "15.015625`"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             "2.109375`"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "2.`"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], "1.46875`"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 33.703125}, {
            Style["75%", Bold], 15.015625}, {
            Style["median", Bold], 2.109375}, {
            Style["25%", Bold], 2.}, {
            Style["min", Bold], 1.46875}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], 
        "Tooltip"]& ]}}, {}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.5543473682799303, -1.3570312500000001`},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.7312248802544821, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      4.268775119745518, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.7312248802544821, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      4.268775119745518, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.7312248802544821, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     4.268775119745518, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{
  3.867781986777377*^9, {3.8677820380646343`*^9, 3.867782044168641*^9}, {
   3.8677821227129993`*^9, 3.867782145059704*^9}, 3.867782210477347*^9, 
   3.8677946877509356`*^9, 3.8677978715365353`*^9, 3.867869394987376*^9},
 CellLabel->
  "Out[412]=",ExpressionUUID->"ef9c906c-7271-4586-842d-ec92547ce20a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Periodic Recomputation Code with parameter mismatch", "Section",
 CellChangeTimes->{{3.867678820449437*^9, 3.8676788349908113`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"6fbbeffa-94d3-4819-b3d6-3bc2457a08fa"],

Cell[CellGroupData[{

Cell["Evaluate Robustness of MPC Variant wrt Model Mismatch", "Subsection",
 CellChangeTimes->{{3.866046972536893*^9, 
  3.866046989974267*^9}},ExpressionUUID->"d4cd1662-0739-4366-903a-\
6c25f7b7413f"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
   RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
   RowBox[{"\[Tau]1", " ", "=", " ", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
   RowBox[{"order", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "10"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"M", " ", "=", "3"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", 
     "the", " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", 
     "in", " ", "time", " ", "\[Tau]"}], "  ", "*)"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A1", " ", "=", " ", "0"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"AError", " ", "=", " ", "0.2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A2", " ", "=", " ", 
    RowBox[{"A1", " ", "+", " ", "AError"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxErrorInitial", " ", "=", " ", "0.5"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"MyAppend", "[", 
     RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f1", "[", "t", "]"}], ",", " ", 
             RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], 
            "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f2", "[", 
              RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
             RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
              RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], 
         "]"}]}], ";", "\n", "    ", "f"}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["While",
    FontWeight->"Plain"], 
   StyleBox["[",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"EInitial", " ", ">", " ", "1.5"}], " ", "||", " ", 
      RowBox[{"EInitial", " ", "<", " ", "0.5"}]}],
     FontWeight->"Plain"], 
    StyleBox[",",
     FontWeight->"Plain"], "\[IndentingNewLine]", 
    RowBox[{
     StyleBox[
      RowBox[{"xdotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Min", " ", "=", " ", 
       RowBox[{"-", "\[Pi]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], ";", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Init", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"ICs", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
        "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"EInitial", " ", "=", " ", 
       RowBox[{"Energy", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ICs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"]}]}], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox["]",
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.4424950922207964`"}], ",", "0.6052619340238472`", ",", 
      RowBox[{"-", "0.36481243427277565`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Initial Conditions = \>\"", ",", "ICs"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Energy = \>\"", ",", " ", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xdotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]f", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]dotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"Js", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"count", " ", "=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxcountAlgo", " ", "=", " ", "20"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"timeData", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
     " ", 
     RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"time", ",", 
        RowBox[{"{", 
         RowBox[{
         "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
          "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
          "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
         "}"}]}], "}"}], "=", 
      RowBox[{"Timing", "[", 
       RowBox[{"ffCartPendulum2", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
         "order", ",", "maxIter", ",", "maxError", ",", "uBound", ",", 
         "maxCount", ",", "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"testWithFBClipped", "[", 
       RowBox[{
       "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
        "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
        "uBound", ",", "K"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ICs", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"xdot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]dot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"errorInitial", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{"ICs", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"initGuess", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Lambda]1ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]2ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]3ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]4ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xf", ",", " ", "x1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xdotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xdotf", ",", " ", "xdot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"\[Theta]f", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]f", ",", " ", "\[Theta]1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]dotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]dotf", ",", " ", "\[Theta]dot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"uf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"uf", ",", " ", "u1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Js", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"Js", ",", "J"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"timeData", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"timeData", ",", "time"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"count", " ", "=", " ", 
      RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Count = \>\"", ",", "count"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Error = \>\"", ",", "errorInitial"}], "]"}], ";"}]}], "\t",
    "\[IndentingNewLine]", "]"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]f", "[", "t", "]"}], ",", " ", 
        RowBox[{"uf", "[", "t", "]"}], ",", " ", 
        RowBox[{"xf", "[", "t", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6"}], ",", " ", "6"}], "}"}]}], ",", " ", 
      RowBox[{"Filling", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", 
         "\"\<x1b\>\""}], "}"}]}], ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
      " ", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
      RowBox[{"GridLines", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"Js", ",", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<J vs time\>\""}]}], "]"}]}], ";", 
   RowBox[{"p1c", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"timeData", ",", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Time of Computations vs time\>\""}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Total Time for Convergence = \>\"", ",", 
     RowBox[{"\[Tau]", "*", 
      RowBox[{"1", "/", "M"}], "*", "count"}]}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Max Computation Time = \>\"", ",", 
     RowBox[{"Max", "[", "timeData", "]"}]}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1b", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}, {3.8654474644860983`*^9, 3.86544746739017*^9}, {
   3.865447584859602*^9, 3.865447593586812*^9}, {3.865952499809149*^9, 
   3.8659525292967024`*^9}, {3.8659525819378333`*^9, 
   3.8659525893724527`*^9}, {3.865971536327427*^9, 3.865971615231144*^9}, {
   3.8659716506068087`*^9, 3.8659716545185547`*^9}, {3.865971738635604*^9, 
   3.8659717394583387`*^9}, {3.865971771360116*^9, 3.865971773325487*^9}, 
   3.8659718432830696`*^9, {3.865971878869669*^9, 3.865971881703761*^9}, {
   3.865972099999814*^9, 3.8659721093028316`*^9}, {3.8659724284015865`*^9, 
   3.8659724335579348`*^9}, {3.865972467781967*^9, 3.8659724678729377`*^9}, 
   3.865972527892706*^9, {3.865972575741376*^9, 3.8659725758223476`*^9}, {
   3.8659727852052574`*^9, 3.8659727853102245`*^9}, 3.8659729110299406`*^9, {
   3.865973909258086*^9, 3.865973915857973*^9}, {3.866046878808134*^9, 
   3.866046926929607*^9}, {3.866047001093678*^9, 3.866047039702221*^9}, {
   3.8660471109532323`*^9, 3.8660471110941877`*^9}, {3.8660471705050197`*^9, 
   3.866047173520045*^9}, 3.8661406529053097`*^9, {3.8661406905133476`*^9, 
   3.8661406905993204`*^9}, {3.866140819599299*^9, 3.8661408196882687`*^9}, {
   3.8665711649558916`*^9, 3.866571165889593*^9}, {3.866571417989247*^9, 
   3.8665714182851543`*^9}, {3.866572132358571*^9, 3.866572174133257*^9}, 
   3.8665722152271605`*^9, {3.866572708667897*^9, 3.866572725315591*^9}, {
   3.8665728020321393`*^9, 3.8665728154188747`*^9}, {3.8665728560299296`*^9, 
   3.8665728724307027`*^9}, {3.8665729695007653`*^9, 
   3.8665729789747458`*^9}, {3.866573043115304*^9, 3.866573053395028*^9}, 
   3.8665735494869184`*^9, {3.866573703021986*^9, 3.8665737072086515`*^9}, {
   3.866573789133541*^9, 3.8665737977058096`*^9}, {3.8665738824937863`*^9, 
   3.866573891690858*^9}, {3.8665752456343412`*^9, 3.866575271422123*^9}, {
   3.866575497520063*^9, 3.8665755162530923`*^9}, {3.866575560451006*^9, 
   3.866575588098196*^9}, {3.8665756738178754`*^9, 3.86657570879373*^9}, 
   3.8665757657245836`*^9, {3.8665764184045687`*^9, 3.8665764350932503`*^9}, 
   3.866576476534042*^9, 3.866576542813918*^9, {3.8665766740420947`*^9, 
   3.866576692525204*^9}, {3.8665778195290174`*^9, 3.866577843192477*^9}, {
   3.8666641527149525`*^9, 3.866664193861807*^9}, 3.8666649366484857`*^9, {
   3.8666650025004454`*^9, 3.866665006550152*^9}, {3.8671675349242973`*^9, 
   3.8671675350712523`*^9}, {3.8671683251655407`*^9, 3.867168325420459*^9}, {
   3.86716836190279*^9, 3.8671683619377785`*^9}, {3.8671684189625406`*^9, 
   3.867168526768058*^9}, {3.867168609091727*^9, 3.867168609125716*^9}, {
   3.8671687123626957`*^9, 3.8671687125066504`*^9}, {3.8671688521659803`*^9, 
   3.8671688554009476`*^9}, {3.867168905295987*^9, 3.8671689053339744`*^9}, {
   3.867169679170464*^9, 3.8671696792024536`*^9}, {3.86716974093071*^9, 
   3.8671697691686783`*^9}, {3.867517978678768*^9, 3.8675180117730026`*^9}, {
   3.8675181522033186`*^9, 3.8675181561960225`*^9}, {3.8675182492707415`*^9, 
   3.867518249471678*^9}, 3.8675182867785397`*^9, {3.867518319760811*^9, 
   3.8675183200537167`*^9}, 3.8675184225923586`*^9, {3.867519084541021*^9, 
   3.8675191050623465`*^9}, {3.8675195807276073`*^9, 3.8675195857729697`*^9}, 
   3.8676887550002565`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[327]:=",ExpressionUUID->"0f3183bc-66bf-4493-80a1-5286a3b12336"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial Conditions = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.4424950922207964`"}], ",", "0.6052619340238472`", ",", 
     RowBox[{"-", "0.36481243427277565`"}]}], "}"}]}],
  SequenceForm[
  "Initial Conditions = ", {
   0, -0.4424950922207964, 0.6052619340238472, -0.36481243427277565`}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.867868750032426*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"29550a06-5960-442c-8963-e5c7322aa671"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.026710738161455097`"}]}],
  SequenceForm["Energy = ", -0.026710738161455097`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.867868750037424*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"9c86267b-3bc4-4e89-af5b-be55e5d1133b"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 350, 58, 
   17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687507801876`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"f1ee7137-99b9-4710-927f-c0d654d8ca55"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$183369\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$183369\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"0.17128524806410372`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"28.545281606149974`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.0107402823639182`\\\"}]\\) for the integral and error \
estimates.\"", 2, 350, 59, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.867868750843168*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"854eb72e-c35a-4c46-9fa0-e35aa971d235"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Count = ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687508531647`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"20981147-b50a-4005-97eb-acfa9980c474"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "4.049156003936977`"}],
  SequenceForm["Error = ", 4.049156003936977],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687508561635`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"fbee8f3f-ad53-481a-8c36-5cd387ce868e"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 350, 60, 
   17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687515219517`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"130805eb-4738-4889-9f60-52443b742373"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$183588\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$183588\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"1.962812916797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.0806850574311797`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.0017761679343249277`\\\"}]\\) for the integral and \
error estimates.\"", 2, 350, 61, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687516629076`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"dab08db2-72c1-4f5e-9688-57d72fbb8da1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Count = ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687516719046`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"3b427bcf-02df-4831-aa29-83400d4dc655"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.594231717382712`"}],
  SequenceForm["Error = ", 3.594231717382712],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687516759033`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"fbac5be5-2923-403b-8227-4608ac5f2be2"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 350, 62, 17553589391743266455, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.867868751752879*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"c2d8eda8-b5f9-44b8-935a-feedc0f05fab"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 350, 63, 
   17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687524856453`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"996db027-0683-45ff-aa5c-4d683d25a236"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 350, 64, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687524946427`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"e72564d6-4b34-4c8b-b9b5-33e00dd9211d"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$183861\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$183861\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"1.630781666797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.1297485521995685`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.00652902662202709`\\\"}]\\) for the integral and error \
estimates.\"", 2, 350, 65, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687525546236`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"00c476d7-1ef2-4a2d-aea7-38a4bf13e63f"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 350, 66, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.86786875256562*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"1b9a749b-8acd-4d1f-8cd3-523dd5eca867"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Count = ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687525746174`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"1a18b33a-7b75-4843-9f9c-4832d70afc80"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "1.511288766043186`"}],
  SequenceForm["Error = ", 1.511288766043186],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.867868752578616*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"c9e49ef8-1c7f-4622-9fae-b631110b7708"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 350, 67, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.867868752632599*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"d4d75c44-1df8-4adf-a881-58388e10df8d"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 350, 68, 17553589391743266455, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687527885494`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"213fc6b3-44ee-4adf-85d7-e225bfd33ec5"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Count = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687536522746`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"4a5456eb-1fe0-497e-9576-66e5a9e50d49"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.9678262944461032`"}],
  SequenceForm["Error = ", 0.9678262944461032],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.867868753656273*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"549576b7-229b-4ba1-972d-2348bcbea774"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 350, 69, 17553589391743266455, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.8678687537432456`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"21c3d358-dc22-45c6-838b-9149a4ea526a"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FindRoot\\\", \
\\\"::\\\", \\\"cvmit\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 350, 70, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}, 
   3.867868753765239*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"225b4c3d-1b5f-4451-b6a2-f36d9601d278"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Count = ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.8678687544500217`*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"1583928f-6486-49c3-9264-2e7aa57954b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.4453023974547345`"}],
  SequenceForm["Error = ", 0.4453023974547345],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.86786875445402*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"5837f9cc-a220-491b-8177-2c4fe6dd7b26"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Time for Convergence = \"\>", "\[InvisibleSpace]", 
   FractionBox["25", "3"]}],
  SequenceForm["Total Time for Convergence = ", 
   Rational[25, 3]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.867868756659319*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"c83cf3bf-3158-4f1a-affc-e8cab1565118"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Max Computation Time = \"\>", "\[InvisibleSpace]", 
   "0.421875`"}],
  SequenceForm["Max Computation Time = ", 0.421875],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}, 
   3.867868756663317*^9},
 CellLabel->
  "During evaluation of \
In[327]:=",ExpressionUUID->"c567314e-3942-426e-b2c6-e74ae26579ef"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
40VhDVpMzeSdfv/hvAeu/weWnjzB
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{2764, 2763, 1510, 1149, 1802}}], 
               PolygonBox[{{2762, 2761, 1182, 1814, 939, 1720, 1360, 800}}], 
               
               PolygonBox[{{2758, 2757, 657, 1542, 1181, 938, 799, 536, 1439, 
                1078}}], 
               
               PolygonBox[{{2760, 2759, 1509, 1148, 1801, 904, 1701, 1341, 
                765, 1627, 1266, 1023}}], 
               PolygonBox[CompressedData["
1:eJwV0UlsjGEcgPG3eyJB0Eo3GhedmR61U3VzEgf7ic4gDmjRxc2WaLXlODPt
VXGyHShJLbEWF4m2UwS1JK5NE/RALE38vsM/3/95nvf9JjOzal/n9o7CEEKB
eWnGFoTw1KTIdyUhdBSHcLwohG+40Yxym7id3DhOlobwCq8uC2Gay+M2Zzpx
n/7bntHPa0vNQT1wC7kiPWOvt6/RTmuV+DJfab/B13rPA20M79L247T+PvoM
/YQ2rCXxd36HfYb/xX+1H+Ob+Duem/n56D1axjPGbfC+Cb0Zj+v1+KM+hdv1
Ltyv/7Fn9SV4WB/RN3IpvAy34QLcghc5N4v7cLG7Wc8Y1+hcD1+Fr/BV9pv8
Cnceas9wq3YA79Y/RJ+vn9R+RL+1uctt4Vq5rPNxPMmvtU/wMXc/aa/xIa0b
D+h/7Tn9glZuSrgcF+eacK/z1fgqX20f4Ve6+0h7jlPanuh3MvfsW/WUltMS
OM+32Cf5uHuftTf4sHYUn9X/2Qf1i1qFKeUGuQSXxNdwjTu3cJ07j7kXOO3M
Xm06+j7aKX4u+s7mPreNS0f/GV7nfB4n3P/CvcVHnDmnzXsOaZf45aZdK+QW
c2X6kL3B/pNv1s941nDrveu6Xotv60+0/0M7Zao=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0slTz3Ecx/Fv0sLFUjJjLcuJEcVYSpujvRmKGSFKGNLYy8VWDraTfd+d
7LKNrbT8AZLMWCpcEBdrjMf38Onzer6e7+97+v1+36TC0tzVXYIgiHCS/Knt
HgQ1Tg9lT6eXcygqCJK7BkFaZBBcwYOjg+A2rsFF+DW/Hm/FJ7nx+Lt+jvxJ
PyYmCH5xrbicm8w9dM/hFuubcAb3HLfi3TgCH8Ln8Q15qvkF9vTDq3AUnoR7
m/mMd+LenjvsHq1LN3cVJ3LVuBYX4zf8BrwNn+Im4Fn2/ODm4s9cCv7Nt+EK
PoN75J7LFepf4EyuCbfhPbgLPowv4JvyNPMF9vTHq3E0TsNxZr7gShznuSPu
MbrJ5ir1g/A1fZJ8R/9MXycX6Jfp37o36qPs2s6d5ibqZuOffB7+wqfiP3w7
3sKX40z+sZzHR+Al/AF+lG4qbuaz8At+BG4PPysu5dfivXwkPsLH4Yv8LTyd
X4gH4FIcg9NxvLkOXIXjPXvUnaLLMFelH4yv64fId/V1+hL8Tr8JR9uxQ3eG
n6TLDd8jPh938J1cFn7C5eOl+CXO5pvxe9wsr+H36bvKR/Xx9lzibuMZ3EB5
jRwr9+H7mD0mp8qZ4fuHh/L3cD2ulxfyy/Wt7s36GDt3cme5NN1vbp78lfur
z8YJznFurC4rfE/wMDP3cQNukBfxK/Rt4W+mj7W3kjvHpev+cPPlb9w/fQ5+
qp+Hi3ALzuFf4g/h9yGX8evs2c9F4WPhZ8SX+Wo8kx8kl8nd5AS+r9kT8jg5
m9vFJeJb+uHyA32iHY1cI17MleCVfLtcwVdxnXiKU6ObryvWHTSfjF+FTm7R
j/Tsx/D/x/8BB3OScw==
                "]], 
               PolygonBox[CompressedData["
1:eJwV1FlwjmcYBuCvZCEliHRaM9XKTC0liZYZdYLaa7LKylkWKWomUa0kUrTM
oJYZo9RWupihstBWN1pa2sbSWlK0PW+EBIOgQ3Hgeg+efO9138/7/xm/Pyll
VXmVXaIoesJk+3E2IYrOmBeEe2OjaFxMFGV0jaKfeaHJMgNNve5V3aO4KMrU
H5VVm2zzh65MFxMfRZW6Vtk2M8g06MbrsuTHuMbckK2QbZDFmRzZaVm5rIov
8XaT6L12yw7IBoeRNdqbIMvm9frB/Is83blZPtDvcF7XwnN0lVyrv+m8Uv+B
Lt7kys7IZsnmcxt/ZIaYJvlEeY78V15kppuz8gr5m/LLvMP08j57ZF/Lhpga
7mVvjPd9Vt7Jq3kpv2h/n/Mkea7d37jO3JKtkm2U1dsfz92cS5zvyUe5G+PZ
zu/p8tw55/m6bIG9K5yh+5dv8k7uzZ/zN/yDc579kvA7cC335rHc385tXsND
3dvvOVk23V4zD9cd5wv8Dnfq3+dN3KCbwIVepzuX8n3dKxzr2cHL9PnutXjO
lr1lr50zda18iz/mPryXv+UfnfPD7+O8yLlP+H/pNZ/T3+G1PMydLzynyPLs
HeeXdCf4Ii/m2/rV/CE36iZykddJ4DL+Xzea4zyv8nJ9gXt/es6RvW2vI3wH
dJfCZ8mfcBLX89Pufic7zAXulPIwruMkft5Oqv0vnac65+tO8Mv6k/wXL+E7
+jXcw/3Nsib9JFkxP8nl/EAfbwrtn9fNdV6ouxq+g/q28Dnyp9yXG/gZ97+X
HeHC8B3l1PA5cl8eYCfN/lfOrzkX6E7yCP0p/puX8l39Wu7p/hbZPv1k2Qzu
wbP4ob6bKbJ/QfeGc7XuGufoL4fPjj/jZG7kg/yTc1H47nuttPC5cXL4W8Mp
du7yOk5374DntPBvYO8Uj9T9zv/wu/yffh0nurtVtl8/RTaTe3IFP9J3N8X2
L+rmOdfornOu/kp4T97FT3ET93P/UPibyMXhbwY/Bo+BqsQ=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{2756, 2757, 1909, 1394}}], 
               
               PolygonBox[{{2758, 2759, 620, 1897, 1378, 1738, 970, 1213, 
                1574, 694, 834}}], 
               
               PolygonBox[{{2760, 2761, 1543, 658, 1910, 1395, 1755, 1000, 
                1243, 1604, 732, 871, 1115, 1476, 580}}], 
               
               PolygonBox[{{2762, 2763, 621, 1898, 1379, 1739, 971, 1214, 
                1575, 695, 835, 1079, 1440, 537, 1047, 1290, 1650}}], 
               
               PolygonBox[{{512, 2767, 2753, 678, 818, 1062, 1423, 514, 785, 
                924, 1167, 1528, 643, 717, 856, 1100, 1461, 563, 603, 677, 
                817, 1061, 1422, 513, 1917, 1411, 1771, 1036, 1279, 784, 923, 
                642, 716, 562, 602}}], 
               PolygonBox[CompressedData["
1:eJwV0DsvwwEUhvHj2qQStSCpyWXWSvgMRCcdaLWTBIvLWgPlA7CzsrokTCys
KmIhbEYGttZE/P7DSd7nfc5ZzvDSZnGjPSLaTNU8piOezISynorY74podkeM
dUYMynU53xFRlu/kG3nI3lni8Ym7LVzj33GL/+SK8nfi8Dp+4cu4R/4zq3yG
q7id4S7wEe7DB/yPbs/+m+4BT/ENvIAL+IrP41F5QN7hc9yy+xK+xdc4i0+T
HXxsv6n7wHP4C9fwGn52U8Jp+des8L3covtp7hwf4kzyI76l27X/qmvgSf4e
z+NZfMnn8IjcL2/z49w/EFIwuA==
                "]], 
               PolygonBox[CompressedData["
1:eJwNzLsvg2EYhvGXOp+CBQkSs9as1MJCxzI7b6QShxUDA0ZaO0YMwoRB/QeU
BcFsRHRq/YY7733d1/N9PbNLqXR5CKFM1iRXF8K9NBkbpUHqJSHzci4DkRD6
KkI4rAyhDrfoFfpiVQgdXFK/0E/01mp3fMB7btPcs/7J5e1D+pM96S7GZfA0
F/AEf2sb5Au2LzzB/+JNvIrf+Dmcw1e4mz/DI77v4rZxnCt4Y3zWVsu3244l
ayvZdm0f+BEn3ObxmH9EuQM8xZW84/yNbYD/kQ37iu3VNovv8CXucnuKh/2j
k9vC/dyfN8pnbDV8sx7RF+xt/JFkbEXbDv+OH/Ag/4hH/a+X28eTXNGb4q9t
cf5b1u3LthfbDP4Hf+o7Ng==
                "]], 
               PolygonBox[CompressedData["
1:eJwV00dMFWEYheGh2EBd2xUvEHsnsetCqi2WpT12QKxoYi8LuyY2bLGDC+vO
3ntAdC8gJhawxMSSqIn6/Ivv/uc97zcz3FwmZUbR+AXxURTFmfY+ypOiqMLE
lB1NihllGiRE0W6zKTGKPjeIoqW6l/gB7t4wim7hrEZRlM7txHncH+dQvkzX
gW8tN5eL9en8ZXNa1wyX8F9wLc7Db/BY98uwfxQXcgl4Ov9MN5JP1O0yG3Wf
dEt0N02uboiuVNcetwrPkJe5Txp3yZzSNcUH+OVcjfxZ/1qfK9fqx3heP+4I
LuDi8TT+qS6PX4XXyu/5BH0G/umcGtj+RDycP4t34mS8gf+oW+z6QjxHruRf
8Kn4Pt8N3+AzcRq/A+fwv52D+TO6dvxm51ddy/Bdwm8ip9obJ1+VL8onuWR5
v/1PuJd71uhydK91o3Ff+4dxPj+Ve4JzuTXOd/p4XT97P5xTAtubgIfxZXgH
Xs/V40Wuq8T3cFfuOh5hN5XbjrO5X85B/GldW75F+BvD76eP8RfMCV0S3scX
c9XyR31P96rmsnFN+N/EffhDeD4/hXuMc7g4vN2s09XpFupmO5/bfa6PufYu
1wVf42LcNjmLG6g/hduE9wCfN8d1Tfi9uhWuXcZX4XquB67is3A135s7KM/j
Jusf4ezwouFtZq3ug65IV+DaWXKF/QquI77Dd8ZXw/O5rXImN0B/ErcO75tZ
aXc1fsvHcd/NZPkft9X+GvyeDy95vt2ZcjlfzqXg23wnfCW869wWeQTXX38C
two9PmeO6Rrze8I749ql/Ctcx3XHr/hMXMX34krkudwk/UOcGb6//M1M4v7i
ofpSeYu9/+D3jOs=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1VXUVQUQBlA6le7u7k7pUrpROpRupZEGCztRSQtbUbq7u1tCRAQ7Edyz
fNj/zDcHLjBn7iJ/72FthyZMkCDBXT+iPuFHAXbpp3NAP4D0tJLXqh25o19O
Rd6R7+Oqfj6D2C73JAUb5UQ8qS/Ibv0MWlOJd83q8K1+AYNJzFNmhdijn0kb
KvOeWV2u6RcyhCQ8bVaYvfpZtKUK75vV4zv9IoaSlGfMirBPP5t2VOUDs/pc
1y9mGMmYa1aU/fo5tKcaS80a8L1+CcNJzrNmxTgQe6UD1fnQrCE3YneMIAXP
mRXnYOyKjtTgI7NG/BC7YiQped6sBIdiV3RindyJu/oV1ORjuTE3Y3eMIhUv
mJXkcOyOzqyXO8chsFKpxSf6JtyKXTKaHXIvUrJJTs2L+lIcid3ShQ1yl7gt
Vsm1+VTflB9j1xzVxxFm4VF5p9qbVHETTGGz+Zl4Tu7YBbO4x/wltXR8Hkfl
i+p4/mSufFAdyK9kiDtgGrd50PONUfmZRFxhMn+z2vOT6kh+J0e8Z2bEzXv2
mdqMn/SX1Iks1R9Th5GVx+Rdah9Ss0U+G3PycK/8slqGY3E3HNIPIiMPyZui
kpg1ch0+198ff++4KcawW+4be2GrnIZX9GU5HjdGVzbLXUnCWrkuX+gf4Je4
OcaSllfNynEibo5u1ONLs+ax17gxxpGO18zKczJujO7UZ5lZC36Lm2I86Xnd
rAKn4oboQQO+MmsZe4+bYQIZeMOsIqfj3dOThnxt1oo/4r0wkYzMM6vEmdgz
vWhEJt40r8zZ2BO9aUxmspCVbGQnBznJRW7ykJd85KcABSlEYYrwls+uwrnY
I31ownKz1nGj8R6ZRFHeNqvK+dgjfWnKCrM2/BXvickUY75ZNS7EHunHFrkb
SVknN2Olvm3cdLw3juuHk43H5T1qv7hFtsnn1DHkpbi8QK3Oxdg/h/WDycTD
8la1O8m4Gp/JevNT6ihycoOZcbPmq9R28b3hH/myOin+fSyTT6gj4lbIznWm
8y9TPN8bf27cKmm4xtT4LLZ7fl4dG7dAPm4ymzuU8HyhWoNv9N+oE5inP6IO
ITOPyNvUHiRng3xaHU2u+K7Iq9X23I57ZSr74veSlh1ySRbpa3Ipbo7+NKcU
i81rcTnuhQG0oDRlKEs5yrPEr6vNlbgVBtKSNWYdYj/xPWAa++X+pGOnfEEd
R35uMSfh///vV/DsP/0ZAsM=
               "]]}, Annotation[#, "Charting`Private`Tag$184546#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
YVk999rMl8Jb+f3xW8eXuDH4VbyEqxnnIr1JcWf8Z5zTg2MtwSPjjGTerljv
Zb31vSWvhJvpO8M1xKe58vhK7C9xvpAtkq3GG9UP6S+sHqBOF2cV7qp6YqxD
+t+J/UN2U9Yw9lfXIrIH498/fGm8jS+MD/D78eP8M7gff1k9lk8bexa/lK8V
5yucDD+Gr/NVgl3P41GxLuDG5u9Wd5EnjXVD/xy+sqw5Pss3wmfi3MGdVg/m
ZsYZSr1YvkZexBiI03O5ZPn5d+Pso27EfYL7G1dk42Svy5IbTWRfyrrKksXv
XjbXfarIWuBzfGN8Ns4R8ZuOcxt+G6/FRY1B+E79uWON5pfEGUZ9K86G/Guu
RWX14980fJlYc/mD8Z3gn7nxeDJOYTSN80js07EPGnutO4Vdl+qrqa+Jnk/x
QKNZ7A/GMq5W7NFxFuI/kw0ymsc6xnXjksf6EOesOLfF2m0s52pzzeSf48HG
L7IXZFNkKY0Wsj2y7rK+ccaJc1ScXf2td2TrZMViyN7TV0fWHL/OF8Nb5WXV
O+RFvIavuQP4Ca4PHsL/qn6Rn8qlMlrG+5b1kD2Lf4zzTKx9xgp5XXkL+TY8
1HjI2CfvKX9O/lOcKYwM/s67svdlxY3BOEM8F3F+kl/DL8V6iUvoXxm/X3lL
vdvxMOOqbIJsmmyZ/tr4DnUX9V/yquYmjz0Kj45zkzn7XXvJ+uk7j5tw5+J8
Fs8XzoiX4A/wJnWr+A3Ea8BDcMZ4hnBePb/hl3FJ81bF71L2kL4duBz3BT6E
n8fX+Il4Ol7O1cGt3Sc17or/5u7BKVwv4jGxBpl3IM67sv76LuCm3PexTuB5
OBNeitfjzeqH4/Woh6ozxXPpnvn43/EkXMqc1fHMy1rFmRqX53biw3g4/o1/
Cc/A73F1cRv3SYO74RtcNZzS9RIeG2uKeQfj7CMboO9i/Aa4H+K7xPNxZrws
zlTmfij7GD8Sv3FcCg/DmXH+OAfpX6NuoH44zpq4Ar8LH8Ej8O/8yzid+W/I
VvD1ZG1xWtwd34wzqdFa/9dxBlIP5C7Fb5D/Mb5HvABnwctxTvM/irUJt47f
KC4d3yPOEmeYOC/oX6tuqH4kzkm4Ypx78Dd4JP6Dn4TTmz9TtpJ/UNYOp8M9
8K042xpt9B+KM456EHcZt+B/iu8OL8RZ8Xt4A96ibhO/ffcqE98bzhprDS6g
5w/8Ci5r3rrYr+IziDMqrsR9ib/Fo/Cf/Cv4TnPflK3i68dZGqfHPfE/cVY0
2uo/HGca9WDuCm7Jn4+/iRfhbHhFnOvM3xhrIm4ba0acC6yZZeP7k2WTFYw9
3pz31Y3jc4jzIa7Mf4WP4tH4Ov8qzuAes2SrY2+Ps3T8vzXcC/8b50Gjnf4j
cR5SD+F+jnWIv4D/xItxdrwS5zJ/U6zLuF2sU7hcfH84Oy4Ue7j+D9RN4v3H
eRRX4ffgY3gM/ot/DWc0f7ZsTezZcWbGGfDj+L/Yi432+r+JfVo9lPsFt+Iv
4uv4jHoIPzT+XwaXA6/icsf5JfYD3J4vH9+fOkecI+K9qV+Ns5++Cub9Dxs+
wpo=
               "]]}, Annotation[#, "Charting`Private`Tag$184546#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
AfXlSXKW+O3g/4jPGPfD9f8D2iTFMQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$184546#3"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 8.333333163265307}, {-6., 6.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Theta]1b\"", "\"u1b\"", "\"x1b\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 14.272640803074987`}, {2., 1.5403425287155899`}, {3., 
          1.0648742760997842`}, {4., 2.0033808095603005`}, {5., 
          0.5512978782806927}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"J vs time\"", TraditionalForm],
      PlotRange->{{0., 5.}, {0, 14.272640803074987`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.125}, {2., 0.125}, {3., 0.25}, {4., 0.421875}, {5., 
          0.296875}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Time of Computations vs time\"", TraditionalForm],
      PlotRange->{{0., 5.}, {0, 0.421875}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8676887579033327`*^9, 3.8676887724756947`*^9}, 
   3.8678687567192993`*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"43504c43-f197-44aa-b865-2f91abfe78e8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Script for collecting Model Mismatch Testing Data", "Subsection",
 CellChangeTimes->{{3.866576800487796*^9, 
  3.866576812032118*^9}},ExpressionUUID->"b464e18c-79d7-4626-91b5-\
860fe36810d2"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ICData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<ICDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<EDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"MyAppend", "[", 
      RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], 
      "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"f1", "[", "t", "]"}], ",", " ", 
              RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], 
             "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"f2", "[", 
               RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
              RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
               RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\n", "    ", "f"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], " "}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"MPCVariant", "[", 
    RowBox[{
    "A1_", ",", "A2_", ",", "n_", ",", "M_", ",", "uBound_", ",", "ICs_", ",",
      "nGrid_"}], "]"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"], 
  StyleBox[":=",
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["Module",
    FontWeight->"Plain"], 
   StyleBox["[",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{
      "totalTime", ",", "\[Tau]", ",", "\[Tau]1", ",", "order", ",", 
       "maxCount", ",", "maxJ", ",", "maxError", ",", "maxErrorInitial", ",", 
       "EInitial", ",", "xdotMin", ",", "xdotMax", ",", "\[IndentingNewLine]",
        "\[Theta]Min", ",", "\[Theta]Max", ",", "\[Theta]dotMin", ",", 
       "\[Theta]dotMax", ",", "xdotInit", ",", "\[Theta]Init", ",", 
       "\[Theta]dotInit", ",", "maxIter", ",", "errorInitial", ",", 
       "initGuess", ",", "count", ",", "maxcountAlgo", ",", "x1a", ",", 
       "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", 
       "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", 
       "\[Lambda]4ff0", ",", "J", ",", "K", ",", "\[IndentingNewLine]", "x1b",
        ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", "u1b", 
       ",", "ICinit", ",", "time", ",", "timeData", ",", "InitGuess"}], "}"}],
     FontWeight->"Plain"], 
    StyleBox[",",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox[
      RowBox[{"\[Tau]", " ", "=", " ", "5"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"\[Tau]1", " ", "=", " ", 
       RowBox[{"\[Tau]", "*", "1.25"}]}],
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"order", " ", "=", " ", "5"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxIter", " ", "=", " ", "100"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxCount", " ", "=", " ", "10"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxJ", " ", "=", " ", 
       RowBox[{
        RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxError", " ", "=", " ", "0.01"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxErrorInitial", " ", "=", " ", "0.5"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"ICinit", " ", "=", " ", "ICs"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"EInitial", " ", "=", " ", 
       RowBox[{"Energy", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ICs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"errorInitial", " ", "=", " ", "10"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"InitGuess", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"count", " ", "=", " ", "0"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxcountAlgo", " ", "=", " ", "20"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"timeData", " ", "=", " ", 
       RowBox[{"{", "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&",
          " ", 
         RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"time", ",", 
            RowBox[{"{", 
             RowBox[{
             "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", 
              ",", "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
              "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
             "}"}]}], "}"}], "=", 
          RowBox[{"Timing", "[", 
           RowBox[{"Quiet", "[", 
            RowBox[{"ffCartPendulum2", "[", 
             RowBox[{
             "ICinit", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", 
              ",", "order", ",", "maxIter", ",", "maxError", ",", "uBound", 
              ",", "maxCount", ",", "InitGuess", ",", "maxJ", ",", "nGrid"}], 
             "]"}], "]"}], "]"}]}], ";", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",",
             "u1b", ",", "J"}], "}"}], "=", 
          RowBox[{"Quiet", "[", 
           RowBox[{"testWithFBClipped", "[", 
            RowBox[{
            "ICinit", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", 
             "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", 
             ",", "A2", ",", "uBound", ",", "K"}], "]"}], "]"}]}], ";", 
         RowBox[{"ICinit", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x1b", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
            RowBox[{"xdot1b", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
            RowBox[{"\[Theta]1b", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
            RowBox[{"\[Theta]dot1b", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"timeData", " ", "=", " ", 
          RowBox[{"Append", "[", 
           RowBox[{"timeData", ",", "time"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errorInitial", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{"ICinit", " ", "-", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Lambda]1ff0", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", 
            RowBox[{"\[Lambda]2ff0", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", 
            RowBox[{"\[Lambda]3ff0", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", 
            RowBox[{"\[Lambda]4ff0", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", " ", "+", " ", "1"}]}], ";"}]}], "\t", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     RowBox[{"{", 
      StyleBox[
       RowBox[{
        RowBox[{"totalTime", " ", "=", " ", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}], "*", "count"}]}], ",", 
        RowBox[{"Median", "[", "timeData", "]"}]}],
       FontWeight->"Plain"], 
      StyleBox["}",
       FontWeight->"Plain"]}]}]}], 
   StyleBox["]",
    FontWeight->"Plain"]}]}]}], "Input",
 CellChangeTimes->{{3.8675254327139063`*^9, 3.867525435116126*^9}, {
  3.8676781071584063`*^9, 3.8676781084629908`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[1712]:=",ExpressionUUID->"78579b75-f127-47b2-8fa5-c8f1e6e8418b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Simulation Studies (Distribution of Computation and Convergence Times with M \
varying)\
\>", "Section",
 CellChangeTimes->{{3.867678840120178*^9, 3.8676788702495904`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"ca28de38-e961-4a59-bd58-c5f545e91684"],

Cell[CellGroupData[{

Cell["Collect Data for all ICData with m varying", "Subsection",
 CellChangeTimes->{{3.867524935309718*^9, 3.867524969144709*^9}, {
  3.8675251197927027`*^9, 3.867525126210615*^9}, {3.8677895874740057`*^9, 
  3.8677895914547067`*^9}},ExpressionUUID->"d9271ff2-d137-4b8e-ab55-\
960ccfcbc370"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ICData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<ICDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<EDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"numberTests", " ", "=", " ", "50"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "20"}], ";", 
   RowBox[{"M", " ", "=", " ", "10"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "5"}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"A1", " ", "=", " ", "0.2"}], ";", 
    RowBox[{"A2", " ", "=", " ", "0.2"}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"SetSharedVariable", "[", "TimingDataConv", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"SetSharedVariable", "[", "MedianData", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"timeConvergence", ",", "ICs"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ICs", " ", "=", " ", 
          RowBox[{"ICData", "[", 
           RowBox[{"[", "iter", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"timeConvergence", " ", "=", 
          RowBox[{"MPCVariant", "[", 
           RowBox[{
           "A1", ",", "A2", ",", "n", ",", "M", ",", "uBound", ",", "ICs", 
            ",", "nGrid"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"TimingDataConv", ",", "timeConvergence"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{"\"\<TimingDataConv10.mx\>\"", ",", "TimingDataConv"}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"iter", ",", "45", ",", "numberTests"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8665777734597015`*^9, 3.8665777929105053`*^9}, {
   3.8665779568602486`*^9, 3.866578201950136*^9}, {3.8665782362332106`*^9, 
   3.8665784799645324`*^9}, {3.866578563917774*^9, 3.866578588424964*^9}, {
   3.866578656668214*^9, 3.866578666525072*^9}, {3.8665787041740737`*^9, 
   3.866578727443657*^9}, {3.8665791504628367`*^9, 3.8665791609974794`*^9}, 
   3.86657924552254*^9, {3.866579793054037*^9, 3.866579799548968*^9}, 
   3.8665798389863987`*^9, {3.866579962581007*^9, 3.866580046157374*^9}, {
   3.866580203154334*^9, 3.866580206696206*^9}, {3.8665803063554435`*^9, 
   3.8665803106150866`*^9}, {3.866580355575756*^9, 3.866580364610879*^9}, {
   3.8665804397299376`*^9, 3.8665804444854207`*^9}, 3.866580527180066*^9, {
   3.8665806021731634`*^9, 3.866580613129674*^9}, {3.8665806585541954`*^9, 
   3.866580660718505*^9}, {3.866580759118144*^9, 3.8665807638636312`*^9}, {
   3.866580794250947*^9, 3.8665807944188957`*^9}, 3.866581490078181*^9, {
   3.8665815332164316`*^9, 3.8665815386916876`*^9}, {3.866581585509765*^9, 
   3.8665816031021585`*^9}, 3.8665817396226482`*^9, {3.8665819016899977`*^9, 
   3.866581927066908*^9}, {3.86658200079641*^9, 3.8665820089328184`*^9}, {
   3.866582187104032*^9, 3.8665822251599035`*^9}, {3.86658229131382*^9, 
   3.8665822954754934`*^9}, {3.866582405143541*^9, 3.866582405543414*^9}, {
   3.866582478361206*^9, 3.866582478732089*^9}, {3.8671676055617037`*^9, 
   3.867167605893598*^9}, {3.867518791217442*^9, 3.867518812246601*^9}, {
   3.8675188528054066`*^9, 3.867518858443572*^9}, {3.8675189327324066`*^9, 
   3.8675189638013*^9}, {3.8675189947552295`*^9, 3.8675190607287693`*^9}, {
   3.8675191560387635`*^9, 3.8675193675639524`*^9}, {3.8675194469241347`*^9, 
   3.8675194685081153`*^9}, {3.8675195314176483`*^9, 
   3.8675195317335453`*^9}, {3.8675196724117813`*^9, 3.8675197167893467`*^9}, 
   3.86751979858174*^9, {3.867519842638406*^9, 3.8675198573966055`*^9}, {
   3.8675199227523437`*^9, 3.867519923999938*^9}, {3.8675199905172997`*^9, 
   3.867520020047693*^9}, 3.8675202162298727`*^9, 3.867520275434613*^9, {
   3.867520664930907*^9, 3.867520669942277*^9}, {3.86752071100292*^9, 
   3.8675207487636366`*^9}, {3.8675209234458103`*^9, 3.867520923856676*^9}, {
   3.867522242265787*^9, 3.8675222515887537`*^9}, {3.86752358639653*^9, 
   3.8675235944639053`*^9}, 3.867525070382777*^9, 3.867525148363408*^9, {
   3.8677811847682066`*^9, 3.867781184880171*^9}, {3.867781223304626*^9, 
   3.867781226567561*^9}, {3.8677812923500853`*^9, 3.8677812953860936`*^9}, {
   3.8677814000769157`*^9, 3.8677814622636137`*^9}, {3.867781501784712*^9, 
   3.86778150935524*^9}, {3.8677816352321453`*^9, 3.867781656955054*^9}, 
   3.8677823382996187`*^9, {3.867782780513251*^9, 3.8677827949405417`*^9}, 
   3.8677828473784204`*^9, {3.8677829197557917`*^9, 3.86778292653358*^9}, {
   3.8677829930308714`*^9, 3.8677829930988474`*^9}, 3.8677835223530655`*^9, {
   3.867783631736354*^9, 3.867783632297171*^9}, {3.8677838207266545`*^9, 
   3.8677838323898487`*^9}, {3.8677839885238743`*^9, 3.86778399879852*^9}, {
   3.867784057984206*^9, 3.8677841023817034`*^9}, {3.8677867574109263`*^9, 
   3.8677867574839015`*^9}, {3.8677867922905393`*^9, 
   3.8677868163736773`*^9}, {3.867786857273326*^9, 3.8677868789002647`*^9}, {
   3.8677869747319794`*^9, 3.8677869935468364`*^9}, 3.8677870312195377`*^9, {
   3.8677870929943695`*^9, 3.8677870963172846`*^9}, {3.867788121197696*^9, 
   3.86778812596414*^9}, {3.8677882631873417`*^9, 3.867788278174448*^9}, {
   3.8677891782656*^9, 3.8677891832459717`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[117]:=",ExpressionUUID->"70d1aa85-bb91-4114-88b7-c9c00ca5537e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TimingDataConv3", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<TimingDataConv3.mx\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TimingDataConv5", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<TimingDataConv5.mx\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TimingDataConv10", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<TimingDataConv10.mx\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8677862673069305`*^9, 3.86778627042491*^9}, {
  3.867786890879354*^9, 3.867786900599181*^9}, {3.867788217862139*^9, 
  3.8677882238301916`*^9}, {3.8677895171019793`*^9, 3.8677895252383223`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"79ee67f8-5dae-4b65-8d31-6a6eb3359b45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoxWhiskerChart", "[", 
  RowBox[{"{", 
   RowBox[{
   "TimingDataConv3", ",", "TimingDataConv5", ",", "TimingDataConv10"}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.867786317781452*^9, 3.867786335328721*^9}, {
  3.867788229049487*^9, 3.8677882352004776`*^9}, {3.867789531506276*^9, 
  3.8677895334546423`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"0e222575-b62b-4929-85de-4896faef13cf"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.4756035092865898, 0.575}, {3.52439649071341, 20.925}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              NCache[{{0.7509076238812251, 
                 Rational[25, 3]}, {1.2490923761187749`, 
                 Rational[25, 3]}, {1.2490923761187749`, 5}, {
                0.7509076238812251, 5}}, {{0.7509076238812251, 
                8.333333333333334}, {1.2490923761187749`, 
                8.333333333333334}, {1.2490923761187749`, 5}, {
                0.7509076238812251, 5}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{1.2490923761187749`, 
                  Rational[20, 3]}, {0.7509076238812251, 
                  Rational[20, 3]}}, {{1.2490923761187749`, 
                6.666666666666667}, {0.7509076238812251, 
                6.666666666666667}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{1., 5}, {1., 
                   Rational[5, 3]}}, {{1., 
                   Rational[25, 3]}, {1., 20}}}, {{{1., 5}, {1., 
                  1.6666666666666667`}}, {{1., 8.333333333333334}, {
                  1., 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{1.1245461880593874`, 
                   Rational[5, 3]}, {0.8754538119406126, 
                   Rational[5, 3]}}, {{1.1245461880593874`, 20}, {
                  0.8754538119406126, 20}}}, {{{1.1245461880593874`, 
                 1.6666666666666667`}, {0.8754538119406126, 
                 1.6666666666666667`}}, {{1.1245461880593874`, 20}, {
                  0.8754538119406126, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{58.04627267441603, 
           111.66705592048544`}, {-91.4639374322192, 84.43586503590323}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             FractionBox["25", "3"]}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["20", "3"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["5", "3"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 
            Rational[25, 3]}, {
            Style["median", Bold], 
            Rational[20, 3]}, {
            Style["25%", Bold], 5}, {
            Style["min", Bold], 
            Rational[5, 3]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             
             PolygonBox[{{1.7509076238812251`, 11}, {2.249092376118775, 11}, {
               2.249092376118775, 4}, {
               1.7509076238812251`, 4}}], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              
              LineBox[{{2.249092376118775, 5}, {
                1.7509076238812251`, 5}}]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[{{{2., 4}, {2., 2}}, {{2., 11}, {2., 20}}}]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{2.124546188059387, 2}, {1.8754538119406126`, 2}}, {{
                 2.124546188059387, 20}, {1.8754538119406126`, 20}}}]}, {}}]},
          
          ImageSizeCache->{{160.0011315760467, 
           213.62191482211614`}, {-91.46393743221921, 81.28911275693278}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "11"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "4"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], "2"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 11}, {
            Style["median", Bold], 5}, {
            Style["25%", Bold], 4}, {
            Style["min", Bold], 2}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              
              NCache[{{2.750907623881225, 11}, {3.249092376118775, 11}, {
                3.249092376118775, 
                 Rational[9, 2]}, {2.750907623881225, 
                 Rational[9, 2]}}, {{2.750907623881225, 11}, {
                3.249092376118775, 11}, {3.249092376118775, 4.5}, {
                2.750907623881225, 4.5}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{3.249092376118775, 
                  Rational[29, 4]}, {2.750907623881225, 
                  Rational[29, 4]}}, {{3.249092376118775, 7.25}, {
                2.750907623881225, 7.25}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{3., 
                   Rational[9, 2]}, {3., 
                   Rational[3, 2]}}, {{3., 11}, {3., 20}}}, {{{3., 4.5}, {3., 
                 1.5}}, {{3., 11}, {3., 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{3.124546188059387, 
                   Rational[3, 2]}, {2.875453811940613, 
                   Rational[3, 2]}}, {{3.124546188059387, 20}, {
                  2.875453811940613, 20}}}, {{{3.124546188059387, 1.5}, {
                 2.875453811940613, 
                 1.5}}, {{3.124546188059387, 20}, {
                  2.875453811940613, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{261.9559904776774, 
           315.57677372374684`}, {-91.46393743221921, 86.0092411753885}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "11"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["29", "4"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], 
             FractionBox["9", "2"]}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["3", "2"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 11}, {
            Style["median", Bold], 
            Rational[29, 4]}, {
            Style["25%", Bold], 
            Rational[9, 2]}, {
            Style["min", Bold], 
            Rational[3, 2]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], 
        "Tooltip"]& ]}}, {}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}}, {}}, {}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.6259983862693477, 0.575},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.7509076238812251, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      3.249092376118775, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.7509076238812251, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      3.249092376118775, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.7509076238812251, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     3.249092376118775, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{3.867786335865546*^9, 3.8677869088474865`*^9, 
  3.867788235872257*^9, 3.867789534467309*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"188aa874-27de-4955-81a7-94adebf46e86"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Simulation Studies ( Convergence time for Random Initial Conditions with n \
varying)\
\>", "Section",
 CellChangeTimes->{{3.8676788914828353`*^9, 3.8676789484357133`*^9}, {
  3.8678688322602844`*^9, 3.867868837448635*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"61406ec8-6194-4a6e-87fe-11c6e69e71b8"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ICData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<ICDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<EDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"numberTests", " ", "=", " ", "200"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "10"}], ";", 
   RowBox[{"M", " ", "=", " ", "3"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "5"}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A1", " ", "=", " ", "0.2"}], ";", 
   RowBox[{"A2", " ", "=", " ", "0.2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"TimingDataConv", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"SetSharedVariable", "[", "TimingDataConv", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"timeConvergence", ",", "ICs"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ICs", " ", "=", " ", 
          RowBox[{"ICData", "[", 
           RowBox[{"[", "iter", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"timeConvergence", " ", "=", 
          RowBox[{"MPCVariant", "[", 
           RowBox[{
           "A1", ",", "A2", ",", "n", ",", "M", ",", "uBound", ",", "ICs", 
            ",", "nGrid"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"TimingDataConv", ",", "timeConvergence"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Iter = \>\"", ",", "iter", ",", 
           "\"\<   Time of Convergence = \>\"", ",", "timeConvergence"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{"\"\<TimingDataConvN10.mx\>\"", ",", "TimingDataConv"}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"iter", ",", "1", ",", "numberTests"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8665777734597015`*^9, 3.8665777929105053`*^9}, {
   3.8665779568602486`*^9, 3.866578201950136*^9}, {3.8665782362332106`*^9, 
   3.8665784799645324`*^9}, {3.866578563917774*^9, 3.866578588424964*^9}, {
   3.866578656668214*^9, 3.866578666525072*^9}, {3.8665787041740737`*^9, 
   3.866578727443657*^9}, {3.8665791504628367`*^9, 3.8665791609974794`*^9}, 
   3.86657924552254*^9, {3.866579793054037*^9, 3.866579799548968*^9}, 
   3.8665798389863987`*^9, {3.866579962581007*^9, 3.866580046157374*^9}, {
   3.866580203154334*^9, 3.866580206696206*^9}, {3.8665803063554435`*^9, 
   3.8665803106150866`*^9}, {3.866580355575756*^9, 3.866580364610879*^9}, {
   3.8665804397299376`*^9, 3.8665804444854207`*^9}, 3.866580527180066*^9, {
   3.8665806021731634`*^9, 3.866580613129674*^9}, {3.8665806585541954`*^9, 
   3.866580660718505*^9}, {3.866580759118144*^9, 3.8665807638636312`*^9}, {
   3.866580794250947*^9, 3.8665807944188957`*^9}, 3.866581490078181*^9, {
   3.8665815332164316`*^9, 3.8665815386916876`*^9}, {3.866581585509765*^9, 
   3.8665816031021585`*^9}, 3.8665817396226482`*^9, {3.8665819016899977`*^9, 
   3.866581927066908*^9}, {3.86658200079641*^9, 3.8665820089328184`*^9}, {
   3.866582187104032*^9, 3.8665822251599035`*^9}, {3.86658229131382*^9, 
   3.8665822954754934`*^9}, {3.866582405143541*^9, 3.866582405543414*^9}, {
   3.866582478361206*^9, 3.866582478732089*^9}, {3.8671676055617037`*^9, 
   3.867167605893598*^9}, {3.867518791217442*^9, 3.867518812246601*^9}, {
   3.8675188528054066`*^9, 3.867518858443572*^9}, {3.8675189327324066`*^9, 
   3.8675189638013*^9}, {3.8675189947552295`*^9, 3.8675190607287693`*^9}, {
   3.8675191560387635`*^9, 3.8675193675639524`*^9}, {3.8675194469241347`*^9, 
   3.8675194685081153`*^9}, {3.8675195314176483`*^9, 
   3.8675195317335453`*^9}, {3.8675196724117813`*^9, 3.8675197167893467`*^9}, 
   3.86751979858174*^9, {3.867519842638406*^9, 3.8675198573966055`*^9}, {
   3.8675199227523437`*^9, 3.867519923999938*^9}, {3.8675199905172997`*^9, 
   3.867520020047693*^9}, 3.8675202162298727`*^9, 3.867520275434613*^9, {
   3.867520664930907*^9, 3.867520669942277*^9}, {3.86752071100292*^9, 
   3.8675207487636366`*^9}, {3.8675209234458103`*^9, 3.867520923856676*^9}, {
   3.867522242265787*^9, 3.8675222515887537`*^9}, {3.86752358639653*^9, 
   3.8675235944639053`*^9}, 3.867525070382777*^9, 3.867525148363408*^9, {
   3.8677811847682066`*^9, 3.867781184880171*^9}, {3.867781223304626*^9, 
   3.867781226567561*^9}, {3.8677812923500853`*^9, 3.8677812953860936`*^9}, {
   3.8677814000769157`*^9, 3.8677814622636137`*^9}, {3.867781501784712*^9, 
   3.86778150935524*^9}, {3.8677816352321453`*^9, 3.867781656955054*^9}, 
   3.8677823382996187`*^9, {3.867782780513251*^9, 3.8677827949405417`*^9}, 
   3.8677828473784204`*^9, {3.8677829197557917`*^9, 3.86778292653358*^9}, {
   3.8677829930308714`*^9, 3.8677829930988474`*^9}, 3.8677835223530655`*^9, {
   3.867783631736354*^9, 3.867783632297171*^9}, {3.8677838207266545`*^9, 
   3.8677838323898487`*^9}, {3.8677839885238743`*^9, 3.86778399879852*^9}, {
   3.867784057984206*^9, 3.8677841023817034`*^9}, {3.8677867574109263`*^9, 
   3.8677867574839015`*^9}, {3.8677867922905393`*^9, 
   3.8677868163736773`*^9}, {3.867786857273326*^9, 3.8677868789002647`*^9}, {
   3.8677869747319794`*^9, 3.8677869935468364`*^9}, 3.8677870312195377`*^9, {
   3.8677870929943695`*^9, 3.8677870963172846`*^9}, {3.867788121197696*^9, 
   3.86778812596414*^9}, {3.8677882631873417`*^9, 3.867788278174448*^9}, {
   3.8677891782656*^9, 3.8677891832459717`*^9}, {3.8677896933854294`*^9, 
   3.8677897062172413`*^9}, {3.867789757005659*^9, 3.867789759975689*^9}, {
   3.8677900437180586`*^9, 3.8677900591110325`*^9}, {3.867790140356509*^9, 
   3.8677901405794363`*^9}, {3.867791977438761*^9, 3.867791996339593*^9}, {
   3.867792127519765*^9, 3.8677921280236015`*^9}, {3.867792192338605*^9, 
   3.867792202603255*^9}, 3.8677922336991005`*^9, {3.86779450756376*^9, 
   3.8677945079086475`*^9}, {3.8677946112089252`*^9, 3.867794643769294*^9}, {
   3.867797962395877*^9, 3.867797962723768*^9}, {3.8678488565920997`*^9, 
   3.867848867413661*^9}, {3.867849373718691*^9, 3.867849392465731*^9}, {
   3.8678502501600475`*^9, 3.8678502825947356`*^9}, {3.867865281464179*^9, 
   3.86786528741229*^9}, {3.867867802431696*^9, 3.8678678099922915`*^9}, 
   3.8678685496491346`*^9, {3.867869559717007*^9, 3.867869579544702*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"c0243094-1ab3-47dd-9666-1cc41d658619"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TimingDataConvN10", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataConvN10.mx\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TimingDataConvN20", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataConvN20.mx\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TimingDataConvN30", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataConvN30.mx\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TimingDataConvN50", " ", "=", " ", 
  RowBox[{
  "Import", "[", "\"\<TimingDataConvN50.mx\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TimingDataConvN80", " ", "=", " ", 
  RowBox[{"Import", "[", "\"\<TimingDataConvN80.mx\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.867790064003435*^9, 3.8677901034455614`*^9}, {
   3.86779214475014*^9, 3.8677921536022496`*^9}, 3.867792209940857*^9, {
   3.8677942104457593`*^9, 3.8677942199016724`*^9}, {3.8677978168813787`*^9, 
   3.8677978189367075`*^9}, {3.867848800033083*^9, 3.867848801027766*^9}, {
   3.86786519638023*^9, 3.8678652366844177`*^9}, {3.8678684511594467`*^9, 
   3.8678684584161406`*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"f72fd471-ddb3-48c2-916d-9962d4c485e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "5", ",", 
   FractionBox["25", "3"], ",", "20", ",", "20", ",", "15", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["5", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "5", ",", "20", ",", 
   "5", ",", 
   FractionBox["55", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["35", "3"], ",", "10", ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["35", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["55", "3"], ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", "20", ",", "20", ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["40", "3"], ",", "20", ",", "20", ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "5", ",", "20", ",", 
   "20", ",", "20", ",", "20", ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["25", "3"], ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", "20", ",", "5", ",", "15", ",", "20", ",", 
   "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "10", ",", "20", ",", 
   "10", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", "20", ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", 
   FractionBox["25", "3"], ",", "20", ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["40", "3"], ",", "15", ",", "20", ",", "10", ",", "20", ",", 
   "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "10", ",", 
   FractionBox["55", "3"], ",", 
   FractionBox["55", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "20", ",", "20", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "10", ",", "15", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", "15", ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", "20", ",", "5", ",", 
   FractionBox["55", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", "20", ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["40", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.867797837834538*^9, 3.8677980383720703`*^9, 
  3.8678488027142286`*^9, 3.867850161425257*^9, 3.86786523855882*^9, 
  3.8678684595467787`*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"6d3ea12b-e911-45d2-8cbe-af1d357da5f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "5", ",", "5", ",", 
   FractionBox["35", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["10", "3"], ",", "10", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "10", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", "15", ",", "5", ",", 
   FractionBox["5", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["40", "3"], ",", "5", ",", 
   FractionBox["9", "2"], ",", "4", ",", "11", ",", "4", ",", "7", ",", "6", 
   ",", "3", ",", "10", ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["29", "2"], ",", "18", ",", 
   FractionBox["25", "2"], ",", "5", ",", "2", ",", "9", ",", 
   FractionBox["3", "2"], ",", "20", ",", "6", ",", 
   FractionBox["13", "2"], ",", "11", ",", 
   FractionBox["37", "2"], ",", 
   FractionBox["13", "2"], ",", "8", ",", "20", ",", "3", ",", 
   FractionBox["17", "2"], ",", "20", ",", "8", ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["31", "2"], ",", "4", ",", 
   FractionBox["11", "2"], ",", "11", ",", "20", ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["33", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["7", "2"], ",", "20", ",", "4", ",", 
   FractionBox["7", "2"], ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["37", "2"], ",", 
   FractionBox["3", "2"], ",", 
   FractionBox["21", "2"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "15", ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["40", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["10", "3"], ",", "10", ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["25", "3"], ",", "20", ",", "15", ",", 
   FractionBox["35", "3"], ",", "20", ",", "5", ",", 
   FractionBox["55", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["40", "3"], ",", "10", ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["10", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "20", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.867797837834538*^9, 3.8677980383720703`*^9, 
  3.8678488027142286`*^9, 3.867850161425257*^9, 3.86786523855882*^9, 
  3.867868459557776*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"3d0a5caf-791d-464d-9a8f-38fec2d013b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", "10", ",", 
   FractionBox["35", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", "10", ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", "10", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", "10", ",", 
   FractionBox["20", "3"], ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["40", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", 
   FractionBox["25", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["10", "3"], ",", "20", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "10", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "20", ",", "20", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["40", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "20", ",", "5", ",", "20", ",", 
   FractionBox["40", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.867797837834538*^9, 3.8677980383720703`*^9, 
  3.8678488027142286`*^9, 3.867850161425257*^9, 3.86786523855882*^9, 
  3.8678684596287527`*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"207b8f13-d65a-4482-9b45-bcfe77ac5880"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", "5", ",", "10", ",", 
   FractionBox["25", "3"], ",", "5", ",", "10", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "10", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "15", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["35", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", "10", ",", "10", ",", "5", ",", 
   "10", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "10", ",", "5", ",", 
   FractionBox["40", "3"], ",", "5", ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "10", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["35", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "20", ",", "5", ",", "20", ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", "10", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["40", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "10", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "10", ",", 
   FractionBox["25", "3"], ",", "5", ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["55", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["10", "3"], ",", "10", ",", "5", ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", "15", ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.867797837834538*^9, 3.8677980383720703`*^9, 
  3.8678488027142286`*^9, 3.867850161425257*^9, 3.86786523855882*^9, 
  3.8678684596377497`*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"752ec303-8d06-45ed-92e3-9229e352483b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "10", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["55", "3"], ",", "5", ",", "15", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "20", ",", "5", ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["50", "3"], ",", "20", ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", "20", ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "10", ",", 
   FractionBox["25", "3"], ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", "10", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["55", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "20", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["55", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", "20", ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["40", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["35", "3"], ",", "10", ",", 
   FractionBox["50", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", "10", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["10", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "20", ",", "20", ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", "5", ",", "5", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", "20", ",", "15", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["55", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "10", ",", "10", ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["55", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "20", ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", "5", ",", "5", ",", 
   FractionBox["5", "3"], ",", 
   FractionBox["20", "3"], ",", "15", ",", 
   FractionBox["35", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["10", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["40", "3"], ",", "20", ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["40", "3"], ",", 
   FractionBox["35", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["25", "3"], ",", "5", ",", 
   FractionBox["25", "3"], ",", 
   FractionBox["20", "3"], ",", 
   FractionBox["20", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.867797837834538*^9, 3.8677980383720703`*^9, 
  3.8678488027142286`*^9, 3.867850161425257*^9, 3.86786523855882*^9, 
  3.867868459647747*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"2cf4d200-3d13-45bf-b975-0fb4ff3ca15c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoxWhiskerChart", "[", 
  RowBox[{"{", 
   RowBox[{
   "TimingDataConvN10", ",", "TimingDataConvN20", ",", "TimingDataConvN30", 
    ",", "TimingDataConvN50", ",", "TimingDataConvN80"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.867792172746001*^9, 3.8677921757940073`*^9}, {
  3.867794203838917*^9, 3.8677942059362316`*^9}, {3.867848816403878*^9, 
  3.8678488185881824`*^9}, {3.8678652432713213`*^9, 3.8678652495123386`*^9}, {
  3.8678684648820868`*^9, 3.8678684706062665`*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"2981b7ba-90e5-406f-8849-120a9e61ff56"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.5259215553003982, 0.575}, {5.474078444699601, 20.925}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              
              NCache[{{0.7150371318512823, 20}, {1.2849628681487175`, 20}, {
                1.2849628681487175`, 
                 Rational[20, 3]}, {0.7150371318512823, 
                 Rational[20, 3]}}, {{0.7150371318512823, 20}, {
                1.2849628681487175`, 20}, {1.2849628681487175`, 
                6.666666666666667}, {0.7150371318512823, 
                6.666666666666667}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{1.2849628681487175`, 
                  Rational[65, 6]}, {0.7150371318512823, 
                  Rational[65, 6]}}, {{1.2849628681487175`, 
                10.833333333333334`}, {0.7150371318512823, 
                10.833333333333334`}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{0.9999999999999999, 
                   Rational[20, 3]}, {0.9999999999999999, 
                   Rational[5, 3]}}, {{0.9999999999999999, 20}, {
                  0.9999999999999999, 20}}}, {{{0.9999999999999999, 
                 6.666666666666667}, {0.9999999999999999, 
                 1.6666666666666667`}}, {{0.9999999999999999, 20}, {
                  0.9999999999999999, 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{1.1424814340743588`, 
                   Rational[5, 3]}, {0.857518565925641, 
                   Rational[5, 3]}}, {{1.1424814340743588`, 20}, {
                  0.857518565925641, 20}}}, {{{1.1424814340743588`, 
                 1.6666666666666667`}, {0.857518565925641, 
                 1.6666666666666667`}}, {{1.1424814340743588`, 20}, {
                  0.857518565925641, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{41.85776977961491, 
           80.48847583028919}, {-91.46393743221921, 84.43586503590325}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["65", "6"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], 
             FractionBox["20", "3"]}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["5", "3"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 20}, {
            Style["median", Bold], 
            Rational[65, 6]}, {
            Style["25%", Bold], 
            Rational[20, 3]}, {
            Style["min", Bold], 
            Rational[5, 3]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              NCache[{{1.715037131851282, 
                 Rational[155, 12]}, {2.2849628681487175`, 
                 Rational[155, 12]}, {2.2849628681487175`, 5}, {
                1.715037131851282, 5}}, {{1.715037131851282, 
                12.916666666666666`}, {2.2849628681487175`, 
                12.916666666666666`}, {2.2849628681487175`, 5}, {
                1.715037131851282, 5}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{2.2849628681487175`, 
                  Rational[20, 3]}, {1.715037131851282, 
                  Rational[20, 3]}}, {{2.2849628681487175`, 
                6.666666666666667}, {1.715037131851282, 
                6.666666666666667}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{1.9999999999999998`, 5}, {1.9999999999999998`, 
                   Rational[3, 2]}}, {{1.9999999999999998`, 
                   Rational[155, 12]}, {1.9999999999999998`, 20}}}, {{{
                  1.9999999999999998`, 5}, {1.9999999999999998`, 1.5}}, {{
                  1.9999999999999998`, 12.916666666666666`}, {
                  1.9999999999999998`, 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{2.1424814340743588`, 
                   Rational[3, 2]}, {1.8575185659256408`, 
                   Rational[3, 2]}}, {{2.1424814340743588`, 20}, {
                  1.8575185659256408`, 20}}}, {{{2.1424814340743588`, 1.5}, {
                 1.8575185659256408`, 
                 1.5}}, {{2.1424814340743588`, 20}, {
                  1.8575185659256408`, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{104.67696997667959`, 
           143.3076760273539}, {-91.46393743221923, 86.00924117538851}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             FractionBox["155", "12"]}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["20", "3"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["3", "2"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 
            Rational[155, 12]}, {
            Style["median", Bold], 
            Rational[20, 3]}, {
            Style["25%", Bold], 5}, {
            Style["min", Bold], 
            Rational[3, 2]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              NCache[{{2.715037131851282, 
                 Rational[25, 3]}, {3.2849628681487175`, 
                 Rational[25, 3]}, {3.2849628681487175`, 5}, {
                2.715037131851282, 5}}, {{2.715037131851282, 
                8.333333333333334}, {3.2849628681487175`, 
                8.333333333333334}, {3.2849628681487175`, 5}, {
                2.715037131851282, 5}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{3.2849628681487175`, 
                  Rational[20, 3]}, {2.7150371318512825`, 
                  Rational[20, 3]}}, {{3.2849628681487175`, 
                6.666666666666667}, {2.7150371318512825`, 
                6.666666666666667}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{3., 5}, {3., 
                   Rational[5, 3]}}, {{3., 
                   Rational[25, 3]}, {3., 20}}}, {{{3., 5}, {3., 
                  1.6666666666666667`}}, {{3., 8.333333333333334}, {
                  3., 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{3.1424814340743588`, 
                   Rational[5, 3]}, {2.8575185659256412`, 
                   Rational[5, 3]}}, {{3.1424814340743588`, 20}, {
                  2.8575185659256412`, 20}}}, {{{3.1424814340743588`, 
                 1.6666666666666667`}, {2.8575185659256412`, 
                 1.6666666666666667`}}, {{3.1424814340743588`, 20}, {
                  2.8575185659256412`, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{167.49617017374428`, 
           206.1268762244186}, {-91.46393743221923, 84.43586503590326}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             FractionBox["25", "3"]}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["20", "3"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["5", "3"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 
            Rational[25, 3]}, {
            Style["median", Bold], 
            Rational[20, 3]}, {
            Style["25%", Bold], 5}, {
            Style["min", Bold], 
            Rational[5, 3]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              NCache[{{3.715037131851282, 
                 Rational[25, 3]}, {4.2849628681487175`, 
                 Rational[25, 3]}, {4.2849628681487175`, 5}, {
                3.715037131851282, 5}}, {{3.715037131851282, 
                8.333333333333334}, {4.2849628681487175`, 
                8.333333333333334}, {4.2849628681487175`, 5}, {
                3.715037131851282, 5}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{4.2849628681487175`, 
                  Rational[20, 3]}, {3.7150371318512825`, 
                  Rational[20, 3]}}, {{4.2849628681487175`, 
                6.666666666666667}, {3.7150371318512825`, 
                6.666666666666667}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{4., 5}, {4., 
                   Rational[5, 3]}}, {{4., 
                   Rational[25, 3]}, {4., 20}}}, {{{4., 5}, {4., 
                  1.6666666666666667`}}, {{4., 8.333333333333334}, {
                  4., 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{4.142481434074359, 
                   Rational[5, 3]}, {3.8575185659256412`, 
                   Rational[5, 3]}}, {{4.142481434074359, 20}, {
                  3.8575185659256412`, 20}}}, {{{4.142481434074359, 
                 1.6666666666666667`}, {3.8575185659256412`, 
                 1.6666666666666667`}}, {{4.142481434074359, 20}, {
                  3.8575185659256412`, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{230.31537037080898`, 
           268.94607642148327`}, {-91.46393743221923, 84.43586503590326}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             FractionBox["25", "3"]}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["20", "3"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["5", "3"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 
            Rational[25, 3]}, {
            Style["median", Bold], 
            Rational[20, 3]}, {
            Style["25%", Bold], 5}, {
            Style["min", Bold], 
            Rational[5, 3]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             PolygonBox[
              NCache[{{4.7150371318512825`, 
                 Rational[25, 3]}, {5.2849628681487175`, 
                 Rational[25, 3]}, {5.2849628681487175`, 5}, {
                4.7150371318512825`, 5}}, {{4.7150371318512825`, 
                8.333333333333334}, {5.2849628681487175`, 
                8.333333333333334}, {5.2849628681487175`, 5}, {
                4.7150371318512825`, 5}}]], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              LineBox[
               NCache[{{5.2849628681487175`, 
                  Rational[20, 3]}, {4.7150371318512825`, 
                  Rational[20, 3]}}, {{5.2849628681487175`, 
                6.666666666666667}, {4.7150371318512825`, 
                6.666666666666667}}]]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{5., 5}, {5., 
                   Rational[5, 3]}}, {{5., 
                   Rational[25, 3]}, {5., 20}}}, {{{5., 5}, {5., 
                  1.6666666666666667`}}, {{5., 8.333333333333334}, {
                  5., 20}}}]]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              LineBox[
               NCache[{{{5.142481434074359, 
                   Rational[5, 3]}, {4.857518565925641, 
                   Rational[5, 3]}}, {{5.142481434074359, 20}, {
                  4.857518565925641, 20}}}, {{{5.142481434074359, 
                 1.6666666666666667`}, {4.857518565925641, 
                 1.6666666666666667`}}, {{5.142481434074359, 20}, {
                  4.857518565925641, 20}}}]]}, {}}]},
          
          ImageSizeCache->{{293.1345705678737, 
           331.765276618548}, {-91.46393743221923, 84.43586503590326}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], 
             FractionBox["25", "3"]}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], 
             FractionBox["20", "3"]}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], 
             FractionBox["5", "3"]}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 20}, {
            Style["75%", Bold], 
            Rational[25, 3]}, {
            Style["median", Bold], 
            Rational[20, 3]}, {
            Style["25%", Bold], 5}, {
            Style["min", Bold], 
            Rational[5, 3]}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], 
        "Tooltip"]& ]}}, {}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, {{{}, \
{}}, {}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.4865408450364105, 0.575},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{0.9999999999999999, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      1.9999999999999998`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.7150371318512823, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      5.2849628681487175`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{
      0.9999999999999999, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      1.9999999999999998`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.7150371318512823, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      5.2849628681487175`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{0.9999999999999999, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     1.9999999999999998`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {5., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.7150371318512823, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     5.2849628681487175`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{3.8677921772945147`*^9, 3.867794591840247*^9, 
  3.8677946342643967`*^9, 3.867798042511718*^9, 3.867848819924758*^9, 
  3.8678501764874687`*^9, 3.867865250736948*^9, 3.8678684714779854`*^9},
 CellLabel->
  "Out[242]=",ExpressionUUID->"bbda76f0-4f1b-4049-bb6e-2eb2af07a5ec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hammer Perturbations and Animations", "Section",
 CellChangeTimes->{{3.8678689190506916`*^9, 3.867868925798546*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d4b294f2-e9f3-4630-85ef-216511cd56b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomPerturbCartPendulum", "[", 
    RowBox[{
    "xPrev_", ",", "uPrev_", ",", "systemData_", ",", "Tperturb_", ",", 
     "xPerturb_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
       "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
       "InitGuess", ",", "maxJ", ",", "x1b", ",", "xdot1b", ",", "\[Theta]1b",
        ",", "\[Theta]dot1b", ",", "u1b", ",", "u1a", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "Jff", ",", "K", ",", "ICnew", ",", "xoverall", ",", "uoverall", ",", 
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
       "u1c", ",", "J", ",", "nGrid"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
         "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
         "InitGuess", ",", "maxJ", ",", "nGrid"}], "}"}], "  ", "=", 
       "systemData"}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a"}], 
        "}"}], " ", "=", " ", "xPrev"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ICnew", " ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1a", "[", "Tperturb", "]"}], ",", 
          RowBox[{"xdot1a", "[", "Tperturb", "]"}], ",", 
          RowBox[{"\[Theta]1a", "[", "Tperturb", "]"}], ",", 
          RowBox[{"\[Theta]dot1a", "[", "Tperturb", "]"}]}], "}"}], " ", "+", 
        " ", "xPerturb"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
         "u1b", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}],
        "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"ffCartPendulum2", "[", 
         RowBox[{
         "ICnew", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
          "order", ",", "maxIter", ",", "maxError", ",", "uMax", ",", 
          "maxCount", ",", "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], 
        "]"}]}], ";", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
         "u1c", ",", "J"}], "}"}], "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"testWithFBClipped", "[", 
         RowBox[{
         "ICnew", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1b", ",", "xdot1b", 
          ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", "u1b", ",", "A", ",", 
          "uMax", ",", "K"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x1overall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x1a", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdot1overall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdot1a", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdot1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]1overall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dot1overall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dot1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uoverall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uPrev", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xoverall", " ", "=", 
       RowBox[{"{", 
        RowBox[{
        "x1overall", ",", "xdot1overall", ",", "\[Theta]1overall", ",", 
         "\[Theta]dot1overall"}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"xoverall", ",", "uoverall"}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.867163464849106*^9, 3.8671634794564323`*^9}, {
  3.8671635127337894`*^9, 3.867163605654069*^9}, {3.8671645657589817`*^9, 
  3.8671645986694565`*^9}, {3.867164634306057*^9, 3.867164663989561*^9}, {
  3.8671647961932783`*^9, 3.867164841244866*^9}, {3.867164966531794*^9, 
  3.8671649911409225`*^9}, {3.8671651042407475`*^9, 3.8671651646904125`*^9}, {
  3.867165261517443*^9, 3.8671653980147867`*^9}, {3.8671654378460464`*^9, 
  3.8671656708705115`*^9}, {3.8671663097541685`*^9, 3.867166317098817*^9}, {
  3.8678690198446455`*^9, 3.867869117528589*^9}, {3.8678691858578663`*^9, 
  3.8678691899155755`*^9}},
 FontWeight->"Plain",
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"318ed81e-1971-4107-b548-43cc2fe9c527"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "20"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";", 
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"xdotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";", 
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";", 
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";", 
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Initial Energy = \>\"", ",", " ", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["systemData",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    StyleBox["=",
     FontWeight->"Plain"], " ", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{
      "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
       "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
       "InitGuess", ",", "maxJ", ",", "nGrid"}], "}"}],
     FontWeight->"Plain"]}], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"]}], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Tperturb", " ", "=", " ", "3"}], ";", 
   RowBox[{"xPerturb", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"Pi", "/", "6"}], ",", "1"}], "}"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ffCartPendulum2", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"Quiet", "[", 
     RowBox[{"testWithFBClipped", "[", 
      RowBox[{
      "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
       "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
       ",", "K"}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xPrev", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"uPrev", " ", "=", " ", "u1c"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xoverall", ",", "uoverall"}], "}"}], " ", "=", " ", 
    RowBox[{"RandomPerturbCartPendulum", "[", 
     RowBox[{
     "xPrev", ",", "uPrev", ",", "systemData", ",", "Tperturb", ",", 
      "xPerturb"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1overall", ",", "xdot1overall", ",", "\[Theta]1overall", ",", 
       "\[Theta]dot1overall"}], "}"}], " ", "=", " ", "xoverall"}], ";"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]1overall", "[", "t", "]"}], ",", 
      RowBox[{"uoverall", "[", "t", "]"}], ",", 
      RowBox[{"x1overall", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]dot1overall", "[", "t", "]"}], ",", 
      RowBox[{"xdot1overall", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"Tperturb", "+", "\[Tau]1"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
    RowBox[{"Filling", "->", 
     RowBox[{"{", 
      RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
       "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<feedback solution \>\""}], ",", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "3"}]}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"GridLines", "->", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.8671657195039587`*^9, 3.8671659098890643`*^9}, {
   3.8671659551945715`*^9, 3.8671660470182037`*^9}, {3.867166339021806*^9, 
   3.8671663687872868`*^9}, {3.8671664100121*^9, 3.867166474775386*^9}, {
   3.8671666029993734`*^9, 3.867166621694394*^9}, {3.867166668870304*^9, 
   3.867166672623105*^9}, {3.8671667093373604`*^9, 3.8671667121004763`*^9}, {
   3.867869089128619*^9, 3.86786909582049*^9}, {3.867869141151079*^9, 
   3.867869156754119*^9}, {3.8678691955257907`*^9, 3.8678692005561934`*^9}, 
   3.8678692335287094`*^9, 3.8678694693257437`*^9},
 CellLabel->
  "In[444]:=",ExpressionUUID->"02084527-fabf-4ad0-a1fe-44f3ffcfd921"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial Energy = \"\>", "\[InvisibleSpace]", 
   "0.39833802984915345`"}],
  SequenceForm["Initial Energy = ", 0.39833802984915345`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8671660592063036`*^9, {3.8671663222171793`*^9, 3.8671663699259205`*^9}, {
   3.867166410951798*^9, 3.867166475435173*^9}, {3.8671665897526093`*^9, 
   3.867166622428158*^9}, 3.8671666735278144`*^9, 3.867166712939208*^9, 
   3.8678691668828974`*^9, 3.8678692012529697`*^9, 3.8678692364517794`*^9, 
   3.8678695116722794`*^9},
 CellLabel->
  "During evaluation of \
In[444]:=",ExpressionUUID->"a2a83e85-d48e-4609-98ad-cbd6d748642d"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 455, 82, 
   17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8678691679845476`*^9, 3.867869203829151*^9, 
  3.8678692389409885`*^9, 3.8678695140125356`*^9},
 CellLabel->
  "During evaluation of \
In[444]:=",ExpressionUUID->"0abf0870-5c84-4099-be39-f9c620506284"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$197858\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$197858\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"2.548750416797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"23.04747388009643`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.006255432018367706`\\\"}]\\) for the integral and \
error estimates.\"", 2, 455, 83, 17553589391743266455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8678691679845476`*^9, 3.867869203829151*^9, 
  3.8678692389409885`*^9, 3.867869514073516*^9},
 CellLabel->
  "During evaluation of \
In[444]:=",ExpressionUUID->"a8d966a5-97c7-460b-b20f-9dc3237b0b4a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJyUvHlYTd8XP95w7+3WbZ7nbqEyU8nQsFfSKEqGQiRJZIiQoVGozEoUElJE
KY0iObdBswaaKDTPoTmN3/OuTvdxP7/v83u+/eNZ9j777rP2Gvd6raO419nS
gYONjW2TOBvbf//KJyf1Gm67rNvrdFpTSCITOa4mL32+h4GcfIa7l6dUo9RQ
n+DNy6rRUdhIWpLZiVxU3PTOj9ejoid1Skbqfajs+uZL9zNa0Tq97/PseofQ
20pp7lKOX6jsjUvp8MUxJKe9V/ROVw9qfZD5ZUSGDb5tunoLS+lH5rvkI33C
2OH82AotJ7s+1N6780N6NxvwJIdJlYqPosmL6WVDi0nQHWWQZ7uTDQzjWjz9
AsgQsvmPCw+FDE9LtfVWxlFAf+K+XPJrdti6TvPKIDsFwncP+/ff5gT5zKSD
9ico/zN/ej0KkIWtK6SqKRC8Wio5SpUK84Oda0k2NAidms8NL7SEy3458sLu
qfW5YdSexAUmfGDqDPdSPz9FbDN/BP8Ieu3UfAGYpgRh8fFIN07Tgtn5B2b4
S9CP4nU1KlsbZ2klr083dlQLzz6f8FRc0etI/ez4ECXo8kKd9lma5+8h1/LM
Fpbn5UHoyeUFQ9w8wL7gzGryBfHZ9T5bK0h39vXMzt+9MaNwvmQX832mnpec
nZ87/7/npWbpkqnnB2bnu5YrNcUtlpkdX/a8rlmUt3d2PM1YifdpuCycC414
nmQuAD6pySYdTnLgXOs6rOvMBzYnPkpXzpOH6+/yBc7cpwHr/i+5fI/Xf6MA
E8vHdoRUUaFQOEHPfhUd+OeG6s57SwX3HSePDobS4delpY8131HhTW5/U80I
HU7U7Jh7LoMKOx/2fWrbpgi2yxqf9BdSQcWu51zuO0V4w12xRP0rFTxMXx0f
llCCp9sqLee1UEH/6Mu/k15KwElX69zdT4XJY+sX+uu8QTUlkzEbZcoRq7wu
nnrfQXQ3RCNkBDhA2ybnFi3iL9LVZhfkSOQEN86C7DthY8jhou7RP49JM/LI
DmwSGjW3P5Fn5JcMx3Xp5rSPFEjaJfHeqogDap1pRfNMKRDxcmv7io0kCL1m
zNtym/I/810go/XkXi7QjSuPsuuhQKlHt9j5eipQBEYUD63mBY1Kv5wRd6Y8
nZ46L5FZunTqPMdnz2vJ1PuMzNJFU+cvNjt/+ryZ8lSVeKbNwIYDiPmFU/Ml
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
X7/568q0v+jWuU0ScmmcEMDFdngsYwyZjTx//eAlCYZNBK3i8ydRLtdulda9
ZHBxeqKrZ80OrjaFz1NbyZB1pNm/rJoDPDZYX/1jRuRjJKDU337OdpcCnmW3
vUd+kKFoSPLDqQLcnjLuzq0+ygXoVMySc72Ev2f6r51T9ytNs/wIn7rv6Zyl
E6fud5j3OcqxJ53BZGiWjo4WXesSIA9hjebClmE8kBOQd5G2QwH0QyutCtS5
cX2/G9LGSweVt6DbjNufBuOzx8uO0IGvTfx5GK4vF4MObK0uxvPnTxcGfXD7
6fmx87i2uRJ4cHP75eD5sUtWh84HGhcU5Aq0eLVTZu8z/m/yUDoTnxLjX2fy
ZYL+MWMfvG53vH/pzg0NWwrdj3UqQEdxsO9CBh7vphg/i9lCB96CJKFL+P40
zuYN7X5DBz+luY9y8f3ffb+W1luGx09DfH84Rol8gpnPpk/lC6z5K9csnbNw
vWjWVQXINOjZrTpKBU2r3F7JuXSo0N2yfg4uP8XfXmgP+tJBzfZV/lpcvo7x
d27WPagEN7otlSx6mPaPWI/IxwmasFcH3DwaEvLw/z/6GqSN6SCYnz0cj7/P
xg9dEg6PueDMgibFwkHcfk7F48znp+NzHuZ+f1w2a3VRAIlTetYnxbiB1BX7
0VuSDmkrY5q68f1WBwhV2Z+jww92e786fP3fU/thPj+dXzLzTcIe6vyad5qC
n3fXZB0N2dFh97E/jl7480S+rxtxlfvDCtoMf2nM/ZzhrQ2LUAC+pHWv5zZT
YX/mT4X4pXTw/BDAcwHnV/acteH+t3F+Pn7smIXTbQkd65CrEhh2i4UL9hH8
Y+Zv5iI+A8/zFGCRUtP+HZ9weTRp4ivTo8MuKa+eKnw/d6f2w5xvc8QgQvok
HSJvBzmm/ScfU/6Zmc+JMhpfUIcUQPy5Pxs37o+P1Yh+HdiB5w9/Vrn9F4+/
T+u+mNqBy7Nd+lrxccpMPMl8vvjaZu7m+XTYK1dILsb3P+3PmPlOQnuCefVP
3N9jVXUnsqhwLtD9hP1GOmhwup66m0rMZ/pTy5Tv3K+88fXmS3zgw9fbP/eV
rr8jHSYiGm5cweeT3umfMZDF/Vje3gvLNtJm4ivmfiaGDml6rKDDkf0Ogv/J
49xLTumYuxLsLNqf8Bvnp9uusO0dOo7o8O7GVYofM1HZzP1tpbVprSGdDTTd
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
7JmHdhjerZEZQ9gr/XE1fyGXmwVir/O8sUrNo6O4P6F9LQkfCkWZzNxiItGu
P7y54r1eLH+wgbODDdJ6JNj7zdKTz+hyw/6WNPQ1llC53PUT/b2+clBu+pki
f2YpwH62We722VyvMYQ90P1XDt4+cpmeRFsPTVv/Sbt+l7b+jbaeCXvGTqvp
n6ct3wW062lo19/R9qe09e+08STt+gjaegTa/p52PIA2n6Otz6atZ6GNr2jn
a2nHS2jrX2nXR9DWN9HO79DGg7Tjw7Tjl7TjQ7T16rTjB7T1b7TxLq23QBt/
0M4H0a5PoW3PaL1E2vaKdr6V1qOj9eVofUDa9ovWv6Ntv2g9N1pPi7Y9o11/
8P9rr2jn3/9/7Retf0bbHtH6ZrReEG17ROs50bZPtOtDaT0Q2vaJtj2iHf+l
9SVo2yda34e2vaL1S2jbK1q/g7b9oh2/oK2vo62voq0noV0/T7semna9Ie36
Ndr1H7Tjx7TjB7T5D208+NdbloB8bfR5NowspL++sQQMuxO8f78qC+nv/wvC
0jevmgxyVtzqa+IwO1NNfbyCifQ3PuKGPFJ8i4bzi+ivnywI07en7C4o5vgb
z7TwQ3/Wss7dVSv7kl2TgDWdD4x/G6z8fUseOHHF7ZiL2fLf/uSaIJyjW8U1
4oO/TwjGdHCcOHyG82/8qCYOt2xmZhI/y7hyfOIw3il/P1s689/jUROCHxkk
hR8lr/QPapJQa71zV4IHMwn7zcciv0zfuNW54kazQxLXmndBhnjfO15o0VnD
c0MeH48AlF3j+njk3kp8d00E9lfnvbNPWwB/z08a/in9zLn0vejv9bSknLdK
+rTy3Rb09/+l4GE/lrzi9BmEfem9BVt9521W4hc6Tuh+WifAk3Fw5f1iMGLb
5ieCF+lJf19LQo0Th1N/rWck/f1+KUh+xb1YYLn09/jouKHRyP0lZcf5lePl
hw5rLOzfSvX9jd/VpKHzW5FDt/pHEfavT2p2PonTWom/1figt7CYWuOb2ZX/
F4OXi33fEV8srryWhPsdyzbohTCtHI8AtMq6sm/b2Mr+AS3CMHPjQWvIx0r1
zteJ2G65Lj2xcr+lYT332TN09j//xjcpnLBCuWAyO3ns72s1KTjsYbF2nwv9
yvkJw5pugfLGs+xU3/xWXNjCy0OlK9dbFKYu+3jLSP9ZeX75oPSotM9bnf6V
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
7Ae6fUmWEAj/ArAfmI4i5N2GegH2A0803BmUaBgESzkBBmW3KfGHn7f62HEy
wH6g4CiTztRoP9h7MZ3J+LYM5ButnO/cWQKwH2hr/sZ5b3o0wn7gTboeDk5r
IsJ+oFZa4c/DFUSE/cDfDaX7/PJyEPYA+ThrCV87E9GL3sBZdOcP6LqToOX7
oRok+QnVppSMAb0jG4TrEmsB9v6K+vzfSVDi6a4VTyngcm5aMG8taF28+boz
jA3GchZM0ldkIgs7992dTBwwO8FTg+0kAWHv78rto8yhm3Ko3h/36syGoORi
hL2++xks6ST9eYTruXKaXKvTRBcR9vp41tW4nvNeWBkfFocv7VIcyu1+Auzp
3YmNrWSQGwTY0xPfe/iI/U0ywJ5ew8C7i3w1A0Clbs8VXWVZmFJVIH4p/wrA
vt7p92srpJJzUFvqw8MSB+Tgql3WC//LN655D5/sz6bk719MrB+JEpGGzdsg
r22jQGs06tmVzzXgdcycfeihCbBBxQ4douRjmnLcWpNe0+AcfftdldRaqq83
Frx5uP9GGuLZfpw9awc77InyVdGn5BufA3doW9dywJOrps4klBIQ9vfEuub6
F2MLEPbzbCI9Qhqu4vESIaiio84rLb6IsJ8nb/Hc55ja/Mr/S8B7J9a7rfvZ
B7B/96TFSey0ERkk9b++2FkkCb/RD+vMMJGBCsOBZ69CZeG+iJHX50NTUYOJ
0u9EBTm4eVfAosdzInrXOPXHLlgOqu5J86OPJyLs5/3y6ve81/YSOU5KOF04
PgY0HjW1bvGtBdjDS3Lv175LiTdxfV/a/O18v7FBsL5zq3lhEztMC+jYIEtp
j2z5j54ds+WE50/e1kk7no2wZ7c8IaXLwbCIsGeXsq9uWCR94Z/4lO68yQUV
Y0n4517LNW9KvoH9uUffWPXtH2ajHvvF8RtGcpD7TnS6JCUedhahXzYfHwdi
zyuBDiU+v6H+8PAjwWmw2laHIaqhFtBpqo76CbPDh+7P2LxuEVDuPM9m3Wcc
MO+qTc6ZYAJauJLSLyDJBekbXh8sGc2j+nGeTGeWa/UXEPbjPBsG3ywpLSLs
uxkuEoo9BcjAov5hp3mSJOT+YWTQvIly/bMjm6tdZWHvq+5D+elJKKabk8Qt
Kge3POjYdtqPiPJCj4c1+sjB+u6jzVtziaiPmUf7++px0BGbyfKlqhZg743B
872EClMd+MmDSPx5bPDJ68e159dQ4tehRMO5jRww8aVDFxMl38D1Ystnz5El
x3MQ9ttIqzcxzSovIuyraW5UYN57dZDyfLu+0vOWhB0ar+LW+ZKp9QE6z+tM
muWJqHZqHXprKwd7u28E8TYRV7y1CVBt6/Z4HyXfxPUB/Fm9ubPH0pHUgfvy
ZHd2eP0cl3X5AwK1HrDnswtnqUQW1VMreZPK55qzgLCnFrXqyVr55QWE/TNC
5oQbhwvl+u0TsguMk4XuLV2FB15lILrsrRL66+Ug+fP2DR5ZRJQoccdyKlIO
Zly/kDEUTETYS0vSPVZ2tjkehXteCj97cBIUK5yW76LEd9B+S1DYTjbI0rov
hbsnA2EPTVfhkpLZ+AJq7QEqJ7dKQkF6m9EzlPYlYEaP/OGjLLx+TL7SqDWL
Wj88kq18ZS0lfjS2YDLLJo0DE/aoU/JTtcBxpX6T9Hi0UOwKAb0mThSsDuCA
Z0+N8x92JyDskaVEJ+wnrF5EtL+f1Tsiboc/lYSv2o/XdZmRgb79PetQDzm4
nbk9TfADkeqHSfsF6Y9T4uejIQlZU3Fs8LJptXX0UiY69Sq8nCzNATvbHsJP
lHwDe2BywhdzPOQWkb+A4xGvs5KQ7mnMHdNAMsCeV7Jk8onl+Rxk0XQywu6w
HLQSaLz2v3i94tS0qFL4BOD4/ubIGUo+8KDKR7j+CDss4uOfTYwioF/lx9Id
+zjgI1O9RKNRyvO34m8xvG+c5uRaREI8F/ToOCVhjsLTbww2ZOB8NZ3RYzUl
Px2UPbEvmUj1s9ydvx5JoOQzUNa6tnqIHdZM3FlX7ExA2L/iveEofZlnEanN
WZCGDkjCVa5KWp4R5H/yu6M3K1UazeTguf3+/guUfCn082LGL+UJYO8ZRHpO
yc9C8nYsRq1lh5FVs4fKHxJQFVDN2ZXFAauqVj0cfkGg+lVaDcT78zKL6Mzj
jpq1DWzwCo+Ygdk+AipcqZfdM5ivt+8ogepF/WxWStOg5Bu06yWMJedGJx3k
oLf6Vn2WOiJiGxrxsxmZAMx3n7mHUJ7H+M7Udcw32eHWDLNQ59sEhP0l8u+o
iIBLZBBFrtDg2CAHb8Sb+v8sIiLsMZnXnY3qN49HJ31sWu7rTYK7cnzBDpT4
/4NkwVX/jZKwscQwvyiEDFatr14lsU0OevaMMh2pJKKN9vS2LWNssOJr6Zys
FwHFPHRafHGRA355MPv+y2kC1VuqagtSTqecz5HgJTY7fg5Y2v85gPf4v+d/
xqyHcN9BEl6z6W3PpXxfmit/qNWwLMx2NEJb2nKQEGl+TN9KDp5cLRQwTXme
cuku6be6T4Au3pOlj4TrgEXI2TsG+9hh940RGydKf8lxujl1LGYSGMVPKNVJ
1gGRDXXi7Hsl4cL30/FtlPuN/Y8nV+uP36XkYzLedrfemsjBGVg/+JHSPhle
3OjNKc8OR60ayo3uERBJ+vk0esUBSYXqelqU19gLShG3HDSi5N+rD9QYxZay
we9tW7PO6xPQFW5txoAdHNBy9RzjK0p7iv2fJFPOjO5Vi4iD/cGhxlNykMtF
pw00ENFMqEcCd9sEUJ4Srj0lUwdOPH7xytuPHZJgQUFnJAHtzlv3YUBaEsbv
VdPXvUAG/4+wO4+H6nsfAG7fIlvZR0ZRad+k9ZxSWihS2iQJrZaSUlosSahU
KHtMiCTKVkQH2feElJKthCHMjH3Mb37fz5zb63U/f3z+nBfD3LnnPvd5zjnP
+2acC96kb88C014Ebevh/j49vrBSf7MqXL7q6sm93Po5xjT4sLW+BrS4d8pz
kjteHvP6w08fSBOq8EpDr754uL7yl4AHpFXK3VzTEPZ34q+f+qjJ/Xx2ZUre
TjoS0PL3/A1O3M+P/RzXHd0v3WazUVBTD9+h86rwZI0IW82N+33yvJxNVqFf
d3Hzn/udJVo+RzRgXuqhWc7c6+effhEm6LkktHC3SjVomu4dfuSEOJRQ6R6T
49brMO/ziepDqhAsuPBkF/fzh4YvyWMZa8A3DgtQHvd8l7NNbmrricNn0iI7
Zf8/XpDmm7EfE8UyGunnjjelXY4HnouzQPtVU/p67ngmn2/svZinuy26I/0U
Yd8l5RBy3NNYAp7/ryGxDhi+7xwz8epBrTx/5WNB2sUTd+gI+y1XJXRG1CvL
AfZSeob2Waaeywex/3tdDhTmj2odsetF2EPRXxWrFp5RCLDHoi0WcgCFN6CR
/73+DApXy3yaUdmNsHdiza+5etWhFoT9lbs7jt1berwAYW8lwa965L5qDq+f
jg6SO3265bQ7EfZgfh9u/im59BPCPs36mY05/TVV/+xvNOsG2Y+OJzY6/USb
eD6LVIrxybbyPvSPv9IGxGS+Joi6/0bYa+lsjA1SHa1F7P/9vQ6wvOp4iN7L
LvSPR/ML1E71GyeG/UIm/3v/d2BnlHhr7fxuwmPJfXS9NPthAOGFiLF7lcU1
Eol+Q2bg04PRTwrAP/2XfHDHvoArnl8+AF1eP/j3SAfqnL5O9J3nS+gLX9Pk
n+pD2FvxG7d5Hew+gHC/vnTpotXb29t4HgoV1qBnOXbq6f8c/yMqnJyfXZ3p
/xqF8/yJjTflxILO5QEaz9P4KOIg8+hlIdD633o6B5wYqi2DjCKA+/lv0/aC
s8OtyIfnd3T7/Vg4YdSNVvD646d5zN5X6TRK+BiWNq7aelcYvJ8rQeePZbsN
M9/z1jeU4YW1t9YY23zlraerw91iS0K+pBQRvgt9xUPlL+syEPZdUjI+W5f8
eoaMeH6Hxe+TFdZhxbz5HTbYVKLEv/xbCeGBqQY+km7r/8qrn+TgRh9Dtd+L
8fMDZ8K+7dSV/trDhLdAeXRfTSH4I1jB8+n0gt0lYvnaAPYVnCM8FpRX/+LN
36tDzjbts22R6YQPc7V0suLVwkyi37TNPLUvXPDBv+rDGzyfZY+L+68MCs5/
JGGPReS2uBkF/6rn/Hgehvhzb4sVSzsB9mMOv8y9qPs7FQ3y+n8P1q1PXjr5
DMTw+mmHfvpv+c4oA7gfOOzbo66fUUmE//HZJ8d6r0Qpb/5HBea7b43akfOL
d77l4Utzx2vnIib+tT/R4H/ffz+oqDWpmW5SwRsvE6Axee+6HH7sgf3dL409
kcFT94df/mAg7B/oZm8xlX47QfgM6RIaoydfZhKejMDzb4u9g34D7I3UuXcq
pjyeRHN4/cCJ/A2Z4H0VwB6F/YeBqFKnRMJH8Mz0Kx5aPfyv/UPk/TPYl3nX
XeiRHBaDsF8yciPk7qf4ScIDmtE/du04t/4gz0+R1+PJ/Z3kfj5yfxu5v4i8
HkXulyDvlyPP15L3p5D3P5D3k5HnF8jzgeT1aHJ/Ibl/gVy/kO/H5HyfvB5G
jn/k+c7/iofkfldyfCT3U5LjG7m/khzvyP2R5PhH7pckx0Py/Nh/xUdy/yM5
XpLni/8r/pHnd/8rHpLnd/8rPpL7icnxktxfSI5/5P5Bcv8OOR6S4xl5vue/
4ht5Ppq8v50cv8j9HOR4Rp5P+K/4Rt6fT4535P4xcrwj7/8mxz/y/k7y/gLy
ej45/pHn18jrS9izyNOTCqlPeYawr/L0jU1SiOZfH6U23k0EXur8x/cwE4N+
N1JWNKqnEj7N/jl2tXt6ugH2SLQ9jWbsP98DsA/ifYgdvtIzDWGvJow/3reH
+3mwx+Lptlkr1yINYb/D7/03PfVN44Tvsstl+7JL9qMI+zSKqyv8PF79Bthn
CXuIVqrP581X8InDRy51refd0whfRLMVBGZXZSDszShFTa3ov9EDsCeSTFXO
1ZH/ibAHEjE8c0bs/H6EPRk3Sa09ATYDCHstIMWw37m0DWCfZbvamKuDUhvh
nQinFRw2u8TLj91nQvXbTZG5lqOEP+J//PqiY5YMwnPZ8ebMomDFPN7fU4ZN
txzsrZO/8j6fOtwmkmxjpF8EsEeycaHlPlWdZt7/k4MOGqOu0RvGEfZe+nfH
OZVKDxNeTYFq+4743o+8v6cMGffy983V4OWb7mrQX2TWTQPu9fXP+9Uhq3i3
/cmWNID9GnrFU7uPmwsIv6Ypt7FV4tYgwr6Po3eIFXtHJ8De0Izpy0yCd5Qi
7BVVDmTdXlf7C2B/6ODg3pUb4ycQ9nOOHUkPiivuBtgbetIIF4ZSaxH2iewj
5o5dZzEQ9mDGVnO8t72cILwar3cGg5tqMwmvRsnt9tckb974cJeH82+svKcf
OUn4OumsyZMlm18Q3suNe88cLYyGCf/nZPwhy1dBJwD2akJOfp3cJJ/De/8M
uOxVjewBGi//0JkBdZjCt6Eqvp7UIZ/imb1nG2v/tT5E9gjI3gG535zsE5D7
w8n9vuR+O/L8Jbm+Jfc/kH0F8v5ccj8OeX2WXD+R13v/q34i+xDkeoe8nvdf
9Q/ZWyHXH+T1YXI9Qq4HyH4AuX+XXB+Q83tyfzc53yf3Z5Pzf3K/LzmfJ/fz
kvN7cr84OR8n90eQ9+eR9z+T58PJ8+nYz7l9sLtXwvMVwv7OnuJO1p95bxD2
dPTuhv6wGmAD7Ok8uufYWz2HQxzPgsaD33/4dBDn0zvrdfLGC2P/eo09HSM/
EbepChbh6SRkuXQsLRgCS3nj92ZIrKwLbYjwdO5rzAkLkOkmPJ2qR+unWwp0
gu7PBoZda6dAVmyl9H2XFmJ8dv94/yNRiM07X/wwT4bhcHB3HeHpbItf1OGk
W0rsl765XvmU84N84vlMIVHi8jrV2QB7OtOm/CNimIMAezq79v8osXZjAezp
MNcuPxIhOAywp3Nuu7tnhTMLYE9H5yhcZBnL4tVvcrAt4W1VocsYqOJ5MxkW
jw+0vxgHNeej7qfaysL9Lyf0KKc5AHs6ccbb4BHE+df7cX5T/YMuKLKoH2BP
p/Ai6/jvzQ8A9nQeLja7+c2vh/BwasWMoK0JA1VpRAm4PlOAS7SBocZTNuHp
6GiK2XQJTqIKVaemPG7+ccjljvaJMyP/en/dj7eBfc+VYXT31TVfsv4g7OlE
2urm7WinE/PPN3+J6s8MZRH+zkGbXZmJOYOI/NrzbcaOnjMUyPc5PmOLGBNh
T+fBUUALD2Sg2xKfLtgOqMPyh1uvyWb1IezprJg+SfPmayA8HQc7C+pqyZuE
p6Mctut2q5wfwJ6OW456yIFzoQB7OpuLamxPSUUD7OnYb3qXMBFOA9jToW0K
cqsspwHs6Yhr+hVPU6QB7On4u3+5tPPHFOHpaEd3jthUTv1rPOL4qBxmsDX4
zThwLXZKbU6YBK/mLpll4N1G+DeCDMV1OUeb/zU+0y0Ucw5UCsD+5d26rysr
QWyiWfeq3ULwK8cz2yCwkDfehaHSj5Vz6r3eAyeY3+V8XBQmfmm2bH6TCbCf
czlsfMfICibAfs6RlJVHV3LjCvZzVP/8XHAyhwWwn+Oac/hm9hEWwPX28eMD
xjMthgGu56ztnveZBE/+6zX2c57VsviKtPggrm9TjVJTH15kEx5EqcU+kYtB
TIDrPyPfqg1Gwgw0cVxMt2OHAjxdKBZ3U2ASlVauDGyXUITzvuptln7ARgY7
1aeEqxShmOs6ceO6MV4+rQafiCi9iH0zgHLedHmuMVCGf/jyF1XrDyLs5yzc
cOl+XG8fwn7Oxe/l3t7BdITrwdsd7zzWCg8h8vX5hI+eWCxCgZp/EiQ/Awb6
82jD8mOlFBh3/ewug2XMf70fezrKCkL9t479JDwdlp302u1HQghPp25yqPn+
w9MAezoHCwv3qSgEAezpSKV/Dbm3NxJgT6fxPnvV8DQaqDMzHrbspsIPrpKq
ZnU0gH0dp7c52+760ICI7/BMIb8q4LVHVVt/GofwdA6Lv03svMQmPJ3eaCkZ
lvAE4d/s/mEr9iO3nfBvds668M3F5Rv4EtcmWjTAB5+U+tp9sWngxUsB2A2f
OpzIrgExQnPXzBwUhNbN6kUpJsWg1q8197S9MFxgHrxyiVoe4eesMedrf0x5
S6zXK9+dJ9X8hE74OTX5Z40SvrMA9nNejDhY3e9g8a4HKdhnMRaiZskC2M9x
LmAbOHPvg9jPUTX7Nq57chRgP+eOpbynuuUkiNiXcjE1SBYujy55X8rhAOzn
mIlsVlv8cQpgP8ffdLeeT/gwwD7O+fsFA0/sBggf57NzxNdUP1zvK8Aoed3a
n41s5GXFfDDviSLsrbQudxgeJ/wcuYcbnWU2DSPs57woXlL+mjpEPM851LPz
W639FMB+DmOtQ+UEjY6wn5NcanjtZUQfwn7OZ5OKDcuuYO9ZDRqFPJ0VljyE
9OLHNsSFUqB382oT8+VMhD2dDaMOB042c8cjz9M5texWgcm3boQ9nfQ/Z9y2
aBQQns7jmoRbShonCE8nJDEk+mTFA4A9nT/sKIdRn3CAPR3hjK3m0hHR4Jp5
9Fv5Oiqco2k2+wOiAezrvKWeoZ56RQM6FsVmWg754OvJtaeBAgekV0jccZNt
AJTDO7OLHKZ48w38cOqjJc38eh3vfAvCSqP5OvncfCrOxCt0/wshuHmQnVg/
VgA009Y9271aBA7+OiCYcPMdkZ91FRxbG/gjA2A/5+yL8LxQFhNgP8fmyio+
y5nDAPs5DDmW69ZHLKBncHHb249SMBTUD99zYgHs52R6XD3+aWgYZDYlvui2
l4EVUZbDi1aPA/L5w77O03XKLncpfBD7OncezOVMhE4A7OW01j+3vLx8GHXm
741YfFkBCq4V/T0ozUZFT92aFTYoQqFFH/dpD0wSno78RRGJbzOZCHs6pq33
C0U9/87H2YccZmyMYBCezqsf8WHy+XSEPR2rlo0jKlJ/EPZ0BjR15M/cH/zX
+595eWirjlCg7+btY+FTDIS9nXidaxGruf8Pz5e8Cn3o6ezTSng7/ZQfDpd8
HhDezg24fMODdneAvZ0k9hb2ReZjYv1k4EPD/Y6mJ2DlwOuaGhoVLl7fUmF4
jAbmmUytSOLThPp7z4i6NNAA9nkCli372bOPBrDPY18SqLp1/RThbZrb3B+0
onAInycrK6zRJItN+Dzfg4Nu1h+a+Fe+ij0dmvtAwBnn7yD1W0JmcQEfTNjb
zupc0gj4Ih00n+oKwIj4wGFbi1refKAg1Ojkv/A5ogS8yyu7ObBWGO5OjNee
WZlHeDzHdGPfJpS9Jfz3ofnlxaGeQwB7PJ4y9eeoGSyAPZ6feVsO/2GyAPZ4
Ai9GLK86yQLY42GonnO8l8sC2OP5/Smw8LzAKMAez/yES/cuVE4Q3nTf7PVm
UTkcgD0e/piVVyUPcAD2eB5e8lxlJz4KsLezNuYt34+3fYS3c+j0ypPiT8dQ
5Z1C7SCkAG9Pd92qUs4mns8yU3x+hGPYBOHxvP29au3p+mGEPZ7696u9vocN
IezxBCnr8t9d8YeYz95e0Cfv946OsMdzmM/JO+BAH8Iez8PV8oqRegMIezxt
ftefWp4dIvZXJ1leFj7t2Iuwz+N+7cj6eshA2OeZbmr9/GdLL8I+z2Djg+sr
D1cTPk/l0tWKxvMvEz7Prs+PV0kz7wHs85yOSmvv8A4D2OcJuwwyKw5GA9OW
0lD7Yiqsqz+4S4sbz7DXM7cyZegEN95hr+eDZfonNmcKHOf5sqf1Bott06aA
Mf/dCeTKD9etvhufrvmJdz8UgL6vXTqDXlWAWLbdpuJrQnDo8uiVzPwPYHr3
HLsGIREoPXzvj3tADuHx7M8oHKHqZAI8H1rSkG944BMLYI8n6O6NsIoZwwB7
PCluTHWrBBbAHo/l0WGGiQ0LYI/n0kJn98vPhsH6hXI5qftl4KEFEklj2WOg
YE2j/VIVWfgwsVrnqtgUsf6UcjuX5TmPD2KvZ4V2iJXxw0mA/Z3CMkNacRMT
nZNb3C1mpQDTXi5fn/5oEhWvPvxmcrYilJj163WzMZvweQqqPfRfhzER9nl6
Y49sMf8xgLDP03rk0QFKcB/CPk+F9ZUEehwdYZ9npX79yVmx/Qj7PPoFVNnB
bYMo2OFJQM0sClwU1viBcp2Bdt6zTMr9QYEnH7S1XlJnIuz3tJ/wWeyjO4iw
37NWJeDCy5/thN+z/df0I5kOQYTfw9ZI+mUZ5QKw37OxbuzhkoBHYKNU0LD1
Siockvql10J58s/81CMqNNUNdTi1hgbYddozRVhUGGNgHpfFjW/Y+8mGJ2JV
ztGAWaVOr7bDa7C7RLithjteTLQ5Z6gHa4HIXB3OvIEp0LlvZKQ9Shjef7qK
dbf/PZi3+Syza6koPP+6V/b+gTeE9/OxX5VlkcMA2PtRbokT3jTO+td4wd7P
zTlfN8wxZwG0PuDyqcrp8Hau9rEf2sNA0ODNqeVJstBStW7gjyIf9ItqeFxz
Qg6Wmix2Gl40BfB6zCLXst+/F02gMitpx9JBBajmlCD9PIeN8PMJGK70Zf4v
BwkfaOnRng53o36EfaDo9/q7tB/TEfaBMkutVx/h5udxAWs+5PapQY9pdyzb
J4dQ0BPVtwKvKVA41Fo/ZzUTSd7V+VZxXh2KHLsXH3qcm9/w/CDD/qtSTqld
hB8UruUhJrMqjvCDWlnv2ze1rQDYD7pdYL03+nIAqD+wL+cYhQqtDUrT/Fwi
QGlx3e4j16iQ1SnlFfs5GsQ3uXzO+k6FOjdB4owKGuhanbRlYqMmTP7u8lTy
CQ24pTSyGswKwYLNo6anNDnA/eX03iexjUCr97yCmO4U4Q0ddc909FifAbA3
dA5uyJbZxALYG+qex6GvlR4G2Bu6qht1/ttNFlh50Gf7aaHp0Ld4Q1z5bRZw
M2u2uhooDTfFvSn23DYCysVFl9w2koUrfhVsaOPGn6hpn1cul5CDbovmLa4R
5oP3qy40DBfIQeGmYZaX7zg4eP6K8b77CrD88FZq4wk2KpSK4yzdrwivtpy7
u99tElU+8rrP91AZerqVNv5YMED4RZqmN6QfyvUh7BddCumpjf9NR747BY+3
7aFA81nLmQntDMR/LSb68nR1GKAQv+1uLQPh9atfR6/2mFv8Qc8KPi09aUiF
EuLbD752jwLJCXviDJOp8GKy3Z9pHtz7f1WDqamkJnS4d2Ai/yMNYN/owPk8
w4WraQD7RrtGSr88U5wifKM1qnl/VnK/f+wbUYZXqPB/YRO+UeqsDpb6zQnC
I+K/fcnf/lUH4RH9Cio7rsv6DtQvS/qXvODWrV8m5SKDG0H7tTqfZIoANO5t
07DIrOWt/wrC8QkLH8XvJeCV+ftfaVRh+Dq4s371vHzCM6qPGjpbuDQLYM9I
0uFE58DOIUCeH8Ge0bzbW3xfTLIA9oz2pRyeV2fPIp4XUunrOZGWzgLYMxoe
2Hk1uG4EYM9IUi+uw5t7fNgzUj9Qfk3uEYfwSMT0Ns7T+vGb8IxKeh5K3387
CrBXtPFFu//12XTCK2pzShptmTOGjBpfzxBNU4AvzsZDkMVGQ0Mz3ASuKkL+
g2YvxosnCM+o7ef8QaVZI4RnVKq/fLTrC/f65HlG83Z7+2lc/IOwZ8SvG7NP
uopbf/M8I7c1Xc3Zen0Ie0YjwW/CDygPIOwZPS9QFj66dQgtTS8WCb1EgftW
uWzeo8AkvEqVK+W5FVcZCPtG2eHH3oh8pCPsG/30/PJsjUYd4RsVHDk/5izs
RvhGpz6bPHeedhdg38j+Vo7k+qlQgH2jgsObFbVWRvPiBxVe6PlSGRBHA9g7
ijk19fJBEQ1g78jE9PnvMW787uH58qfcPLcX5E6BnIg/dXnW/HDRjR3u3m6f
QN31NDPDnwJw+XiX0fiSSjBnn9XMG7ZC0EarePfZ+YVAyEu5JqRXGB4zZbQV
U3MJz4j9Dr4qcsgE2DNqVt4ROHKaCbBnZHhC7Owj2WGAPaNfgt9dzVJZAHtG
T1h7t+Ry62nsGUWlTt49e3MYTDVs3aJoKAPPndxKL7gxBvKE/XLDpGThkp8N
yhcK2QB7R4c2mLt5cPMB7B1dkm/cKCDIBtgv+uT1Tc1Vi4ky14ZLXzJTgGNr
RwJXG0+ibZ7b4hwVFeHtG61LjzixCd8ooVhaGbUwEfaNKq04M1JlBhH2je4/
uPu7CfUR+zX8a0uWnQmnI+wbtUkFr3zh1I+wb3RbQCzEfc4gCltdpG4oT4Ga
U48KtlgyeOvdFLhlgQjM1mEi7B9pC36t4fMdRNg/utmS7bpuXifhHwWcgvpR
po8J/6g/f+Ccp6ETwP6Rv9O7pvOfg0DnLKF5MYupsMR3s9SP7Ehww3yztMJ9
KnRmqb24OZsGTs14J7ziD/d+g2Y9dKunAewl7b968ETyNRrgY658TJd8CVbt
HTNmh06BT2fGL86m1AAldsOVz1NT4Ouf3sPPvIXhesXjyrkPEBDSz3OlKonC
8gyvpwbJbwgvqXSJc91TVwbAXlLA/R3VFn0sgL2kOLFLhnO/sgD2kmz8z43Y
HWGBeOXTqt5p0yFr/pTbXMlhYLJrhaNTtCykJgkEq0vxwbIv/Ck7zeVglVVa
95qbU6Cy2fi5zlwFiCq/RH9mjaOdSZNH1v1UgJfXsXwnK9gofXvoZIOGMgxX
3RhK6xokfKXv912vPPboR9hXWtdDcz4RRkfYVzogKFLSVNCHEsyPGa9pU4Nu
AvtsUrnx5NdTiYm9cRR45+fF25d1mSgsNfSXpq06fL/syzFn2hAixzvsL8n5
GWwsCHpD+EvXvqxP+Qn3Ev5ScX/B3k8JD4HrmcK+KEUqFDvq7/lUIALc6RGw
Ub9EhYdFb70qzY4GciqSpb8+U+G0hCC3Qe71nmi7sNJVTxPu5Etf/zSee/17
V8ex2wqA67Xs0EBufRqWI7lOurkBfElsvbxg7xThNQ0YxU/rOZ8BsNeELKvN
RSksgL0m9s7N5tLywwDvt/ptm2JqcpcFdGumSmR6paCdslmbwTUWOLk8VSjU
VRqW1zrupqqNgNKG7BuDQBZ27Kfc3FU8Behye9c5TcnCeK2athPyfLBaNLrv
/Bs5eO35m+riGRMAP79Vo034yR7zAbTlYEBfzA5FOJxD2zA7C++X+Ptz7D8N
D4VdXbSkD2H/6crLEs29n+jorrxO/5GtFDhkPlhrXMlA+9wDOsoEuOenE/60
7WagJTc0As+Uq0PbuHDrvRoDyKhB//izrVRYU9+VyFwUBc5XemRLJVCh4WMh
wbPnaSB3+hl9NxFNmH+hykuUe71gH+pbjkXsYQMaSEpkzNRxoAHXpLC6FUen
wNr4oYzO4QrQZLfz9d6ZHIA9qJdH76qMlLPA7otRBeF9krDLa4vxp+Ms4PJJ
wSrfYzoM2lXX8P4bC3SbL7g25CMLb074Ole1csD23Yd/wC1yUOfIpunlihxw
cKHOsJCMArxoPFPyuPI4Mtz0WY9aqQBlxC3mlNazCT9qu09fYV8SHWE/Spn2
YmvX5T7k9+K3+/A9CszftzHBYwETpXNcJmoN1WGKBYPmIcMgntfmbl6vdnFF
GZJdbu3/9DQV5ugdP3PmajToilj5HFZyX49+fOvxlgaW5y9svrJAE9q3b/+1
n/saP79kLP+C1yNxDrFfMbqmacB/KoPwp/L7zk28LGcC7E9dHzJo51MYJnzv
513fG6+fYgEvquH2oV+yMLdWZvLkHD6o05NXEG6nAENEHzYPNUwigz67Mt+l
inDRM7XhzXPYxP7HWV57Roy4x4t9KkunzQn9r+nE/loz67lK/f4MNOpz7rRd
LwWmOD323yLDRCPy7Z0Pw6nwyxrTlKe7aCDgYcCcL+NUOKPF+494I/d6U193
57NZOjgUU5v5u3wK6Cryq76mfgSpv6PkTH5MAexRvTmtFH9VaBhsCS0qZJtK
weGXiXx63Honc+O640NvZGGI4fQLKzT44HZFTQ+zKQWoE6uY8D7hr08l8iMl
dsUjOtoctvDi6xwK/LXmgaIEN95gn6pqadC2bc5haH1wx6+7HVS46sWhFytq
uJ+vqWVrclkRQDGrV1XO4QCntQ7r2qXFoMPI5m8ugYMA+1RxwQVltVYsgH2q
sHV8ySISw6BV8sqyxX6SUHVdTzDnKgssb5Mty6dMhyOvtOCcR9z8UMh88dBM
OXjOeurrkm4OkNshOb8rTAEm7LMKWHabjY4+vHX90EEV6PlC8PTgKJ3wrLzc
F84S5e9D3h7fGmyPUiBn4Pvo62EGSnZJt5irog4NV6EZ42kM1ONFfeCbToVH
/Vgdevdp4PedTce15DShrmWOa1I1DWDfanrBssu2c2kA+1bGO2RuHRSaInyr
pe5zoj/P5hC+VaYj6+T532zCt6qQqHkUHDxBeFR6+/xcDb90EB5VxB0fpWW6
LaB+6/uxbdF8cFqfo5VIZSOotxPKWSkrAM1qsxovddSC4yumnoRECcLd9pyC
3yMlYMFzvZCZM4XhDs4OiYMH8gnPyvNeAVv1RBbAnpX1dqfHxhpDxH5O+rqS
Y/fusAD2rDZeX2cK+IYB9qzi8kRylp1nAexZZUy1tN5NYgHsWXV+vXfa+N0I
wJ6VfbBE/SbLCYA9K/bC12d93TgAe1awrKlZPYEDsGelUvHu9qjUGCDPd2Gv
KnjYb8G6zlF092rCnbwkbrw5yLK7ksxGXzMcP2pfVIQqd8f6Xv2cQGcAYN9Y
qgRbNrO9kraMEJ6VMmdzhfD4EMKelezK8j1KwX8Q9qyGpDzENn7m5ss8z+ri
Ec1zm3T6EPas7nXY3hsVH0DYs1r4zmXtsuVD6JDuxoT8cxR4wcwr6ZE0E5Hj
B/atwqpro3Yb9CHsW2ntW5zxJuAT4VtV/5DO5NviQfhWNzIPrVkqewdg3+op
WL6H8SYUYN8q5NweawlqNHCC8QKvc6mwu9wx/hKNm0/xvCuWs1+VUSkNYO/q
hom8wuXfU+A+n1CMmEkdSLB9pr60YAo4naFt3HSQH0YJXnW6kvwJfLD/6fOx
SQAeqrsAB65Xgn/6RYQgPVgnaduBQnDjY6D7eIsw9Fr78eCJs7mEZ+VcI3sj
PyATYM8qgF60+LwxE2DPykKqoHUht77HntUSee9vR96wAPasNlppVEkcZQHs
WZXueB+a5MSNB4mWPju2ysC1d4z3zbcaA+97rX8ai8rCrhzT2fU0NsDe1TpJ
XRH3uXwQ7y+26Amkv9vIBtivKo4avW5RzkBN1R+fJhkrwP7n9ydj5k8in7kb
1ebLKsJurZHhOg824VvNXlD9fD4/C2Hfin/uokRRnUGEfSuhvfVtRxr6EPat
VBseeHaF0hH2rTKn7RZ6d7gfYd+qq/Xy7Q65QaQW0dQpJkWBNqOV898bM1Cx
fPGD1dUUWJwtaZ6xiImwf0Wz8r2w79Ugwv5Vd8u0hwlFnYR/9eI3/7Jks2DC
v3pkf4/xjOoIsH+Vqf8lM9wlCOjOz8krWECF17ccgwW3I8Ex+6/KI3e4+XjN
gn0MRRqgrBK+sYPOHU8Pqyp8PtEA9rKEu1a5pnvSwAvanOF1WoncOvrTwul3
ufnUldGiwL3V4HJo3JIDwhxgtuGEpJirMHwgsSe3pQMBpw89G95PE4WHknfY
WDa/IbyskkANDf2DDIC9LJnKl/0/frIA9rJWrcl62tXCAtjLCk5YK+FvwQKq
PvX0GfHTodKhxW/ucVhg2OS8U0CYLOTvHt5cKcIHfw8rrvMxk4Nj/nkv1V9M
gT+O3uutqApwyia4WjJ/HPntYXxitijAYLcyhZ6PbLRc9+67MBVlyLdJDV4Q
GiJ8radh2ueNIvsR9rWOywH+4kg6wr7WZoWabS4pfUgn78LMka9qMO2ZlVxu
yRCS1vKMuBZFgas663Z9WMlErVs/nq0+qg6remp7xRF+nu0sWD/H0nCrTTfC
/pZA64C1LTOX8Lf2mc7tuR5vSfhb3/qOrRJf95DoX6nqur8noS4c2E2GOXCc
uK+XtT5OeBENStbuh+x6KlRaKbdysoAG7l6j31+7ShOms9xCZyXRADpffl12
XgH4bmG/e60KB8wtnGa97VIDCGPoyiywmiK8rjnig6Nr/TMA9rpM006/fy/O
Atjrej1r5r4zM4aJ/b1/UKBt+wMWeCORfdumRQrmoEMdy1xYoDma0jjXQRr2
937LWy06AkreBT17tkYWCsrX7bNPmAIBCg83Boxyz596WFSnEh/sn5N5JeW1
HPxatmtA+yBez1GAyc31H+dqs5EX28fGQl8RNsud6ebU4/3MyvAD49lMr3MD
hP+VWD7nd/jGPoT9rx0+WYa1ZXQ0/fKGdBVAgbbXTbT25DHQdQGJW0OTFOiQ
c1vQmclAl2QPKikUqsOzrT5ivXsGUFTLxHjRZioUWCFzU0MwCpi2KBf1x1Kh
tn1q17TTNOC0JP3dI0FNCM//cfzKzcexD7Z5jX9bJjdfS35V3DskGQk6fe80
B+yaAhTe/jz15bPdZ3C/f+yBefO/OXwhjwVqXh32/NMqCVOyuq4vsmWB3k2e
y00uTocGv9LaNOpYAO9fPxSZLHKvhgNOnT139sZGOVgh92jRfj0OuJp3zHed
hALMU5qz3rllDN39VZXytYgb33Tcd6yqZRMex/l+XfdV6XSE/TC34MrRvpN9
KH3RMc1ZPhR47/pBa8W5TDQRkOJ+bas6NJgrVrR5PoPopzj9UydHyrwSDelP
hNw8QYUFTssXmJ+JBhG5N6gHyqjwtqHlcZd0GpjRRH+yZp4mvHdo5oaJdzRQ
v9H5Xb77e3Ax5o+CpwgH7H5PV7SNFoVHi1I7LolnEv7YjrnZ1LY0JsD+GMvq
Wm7MzGFePqAIJaWrbFKWsJGOlq+hXJssFL5xs+SpNh/cdWPErO6EAjy20/pK
eOYk8fzmNp1zYX1buPU3K6hHeI4KVDny7EPnzT7CJytYWJfm84KOFCTuVMpq
U6D5ltCyE3cYiDrtt8SjnxSok1XMX6HIRE1arn+cQqhQIrY3J1OfBranfov4
M8KNp4G6YVMNNODOWr6O05YK9AJPnUxDU+CDOp9+d04taFPYYsrHvd9ij8wx
urX8FTd+FdW7e+0xkILJ02ec5Ofm40c2X7GVS5WFJVb8abZqfNAnR2l0+qgC
PN16vnFr2l+f7OawXLE+Nx8/qxar8DWTAmdyJp7rr2aioTeLLGNaqdz85qLB
liru91/4lVIgXQQ2VD043TX77/MEmfVv9/icHQTYI9tVeH1h0x68v2QatHLY
VJolOQy0tdPnX7shCU/7D+l8dWOBNLUqn5my0+HmXw4z1vuzwKho6DI5GTlY
QKUH7ZnggFXfN+dQHinAlZr72l+7cK/XiG+KvqYq0C95sN9KuI/wyzo9xpsu
Mbn3x19/wmcfpEDtTVu/j9G59+OxBRzjGepw7SbVG+8KGKjycVbYmddU+MBx
kZGJDw1EJt35uk5aE25vyW4zqeXm4zzPbOK9b7D5EhrwrqfHrQorA6/s1zzt
nsUBmvNOpw4gcWjuMmI5mcACH+d+5A8ukYSFb0+mppxhgW8nft4ydZGFqbV7
B5Ofc8CzuIibY8vl4CBnlNl3gQMkl72L3JWlAPXjt4xcKGAjA+2A6vZLKtDZ
a9WnnA90JLLc2PbcNQpMK3COu6DGRKIcOTmvD1T4bsepq34vaKBJ2F47i6oJ
zy0QmhHKjcdudGtV2dB3IEHbqbp2dApg/+zifemNF+S58dSRImIeIAW9O5nj
n7j1EO7PbYk8RZnPrYdEvpsszqQoQmbpLNFUq78+2pSWwnNVGp1XL1Ngfbmu
V6oWE6Uyzt1TG6LCRvbEhrXc8ZltPqmV9qsGxHU7y5SMTAHsof2Oz1WZy2SB
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
QQHIb9tURqlM+NCG/ba2+c3lAicHsN8296hNFlOXgf22pakeLUTErN/2vNqe
kiXbjv02kVWp9dPHw7HflmgiJpDn5YX9NnnzjnqXO0+x3ya7zcly4cV47Lft
7w600TyejP223nW5iUsupWK/zXWL0JaRt2nYb9sRJbZ4z9gH7Lfps4Vx8iW/
J3Y+OBQy6NNFPMyPdgKMQly/0DcvqCiKUgm39TrLUV0owOhwqsevp9XwcLOq
SeYUFcyb5iE099Eh8t92nakdEVOohsh/M29ye3TpZzlE/puAp07VnbI0iPy3
c9Fcd9iOeszU8wkCU52jOYd3TELku1WqR5+WPcaEyHebt9Jko3rYOES+m74S
rD70iw0g3819z1WodJgKwiPCNnJEiwBbPX/jCUgByGsz2KKwaK5mH/baAoRO
0l4ODmGv7eD39Ra6frNe2+8gF12L17Ne25sI/6riWgiRt7b0StlLD1oq9tbU
icHmdvc07K11RHE4Fb+ow97azpClz1IjqmbqcdjB9fUat028qqBWn3n/Y20q
+JDeb1ijQ4d2i68lTbzmAEdP3ggKnq6GyGdLZGYHZTwphchnsznNwdlVtB4i
n21+Mu/AS8oLiLy1VolC6RhBJkTemqZW/w2PzchPEwbfDTVSrvtQAPLV7nMV
c244TQXIS1vDaevPuDKIvbTjvlcvnTKd9dI8hTpkv+0dgMg/41LsVnIeS8P1
PXZtllMH99UQAgna/eKbKOCcvGFb/GHW+nN14ahSNRXwvKi512hDx/XM1VvP
zZH7ngORjzZn+jVPQYo/7k922PJZ60fOHeybBT7LlT28kQq04zn87waKgMgB
nd5lExSAPLPHVyyqHicPYc+stnXXwksfh3D9o6+khlfp2Sq4t3UuVelHHdEo
/X7rskPVxHSCZE4GDxWId8YMpC+mw8O1Zy3s/TlAm6u9/gFZOkR+2dfbonRC
uwwivyxEgDdbMPYaRH7Z+kOxg8t3PIGFZlP6F2VoQD4g5URT/hT2y4iLA61v
X01B5Jf5r6zPuLSCAlA99d3T19avZe0XkU8WlL133RK2QeyT9dXl5jTuZMBb
1prL3sVLAZ2jNzY4cg1Cv2UJ5r+eUUCHQpv5UCNrvKrqxW5ZygEy3vARt03o
cE5KkU9THhdYofDyaZJxPEQ+mWKGyLmedEuIPDLTfRG7z+gxIfLIhtOXBbW7
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
augeJnzweoxvgaQU8MxubFBVZ0Dk6dCPpPjvFE3H/Vp8a5XYvK3/ng/NTxZc
8z5NA1Grqmovn2JCu126cUKuIsBmm5vW48VU0FlfYLNdSATsPJ0u1uJLBcjP
qd822fRBnwHfFa6wuk7hAMWbNF/S9tKh1ZU/XIdoPABw3R1ZUuBGyJvUnvF+
RAN3DZ24fh5mwmM6xhpfpyWB41hp37QJAxacEaVM1lFBobiKfhrr81zLLOPX
+8YNpq2yr2yi+GO//lZIPPO5CxMi/+bqm5f6O/So2K+xujlZbu7Nep1bVbM8
OyVB53KFoSdmrP388Ufa6pPC4KZrOc8X1v4PeTTEi37DsCUM7NGcnT9xXKXh
Cbyk+ZvrnTMViIVwxm5j7Z+RPyPErvdpuKsY2oQ+iT3vzg12r6g8UpLtRVSq
AadRcxp4FWwees+YCQvXnklcLyIFCg4kF9hrMaBuCV9jag4VMLacCvJgvT7F
zKRgjWJukBmaeFDtewDBfcTAV9eNtT85EON1xJn51/i1u9ZwtllGBLxQ2cNe
j/P/rP3n1KX0pm0M7M3whmr6LRZLgsiX8a45MCWmXQqFNxwYDOSVApcSVWIu
GLL+HjGF5Zu6qUBx9GHoD9b9sFmn7brZGDcYPKBwsrnOh3DYbXy+IJgG3Mfe
3c1zYP61v8rS33B+xbAkiAjjmcvNGg/HpJON4VwRsOzeLcu1rPv4we7gyDdB
rH3Rg4rNkaz7oUM6Oy3kDjd4VLnNlhp4lag+HCgfZEsDnyTOX1A9yITIf9Gg
QRAqmT7Tj7oAuH69fq13qBV7L8WJki78czNm+jnZgY2jMtfHI7UzX6cC5cs7
5r64XjHzdSqgDSS5j+aUEM/+ua4lfn3KnHsn4w9RM+OlbEsCfef4prGPolcW
vpDW/2rGd+EAYrzFAfSz74jEGX9lw7bmtdni09iLCXG6aceZOIR9mLfKdi9F
fk/O/P4OYoQiv3bYYxx7MY8v7ZWKV2kiTGe8mLxvDF8Ofib2YtoVX9cWF0zM
/H/ThLGJt8saj08zv48ddPUU3W2Wa8A+zeQa0133Y/Nn+mHngJMeIQzVnqyZ
awoYa7jYurmNPvP6OMH0xXbZwvg8gvLPzzexXn9c1Tm2P9h/MdAsSfQM/0Gs
nvFnyjt29Rxy+jPTzyoEpuadv+i2oQr3V/ao7PWNHE7G/fX5r0s6UzwZM+ff
4iDXwvPlV61s3G+pG9aufduljHD/pz9ogEhL9rdfcO8NMb37Xw/CY/yrEV9u
G/YVlidsOdBZ3/LX9dUZn2B83e0ChuQU7seEu1wOWXaV4/7LktT3yfSREtxv
KchT6TNPshSi/vz31qtEw64UQ+Q1+B26v5Tn5AhEHsPSfAaVna0X+wsB8lkx
T+aNE8hbSKAsd9hmhDwQCeCXtHC/okTrv/2Lb2UA5eF03JPIx/j5K19M3W9M
hcXhftOurdr9pRuKiZp/3k8mce90n/Pq+CKI+k1HNQpV/bXLIerv3MOfs4Tt
eSXuz49rU9P2majDvkP6q+NbToiMz5xPzwflFVnWO+IZ2Hew7pr/h/mHSSCv
4UxQioTAjk7szRRv+Xah6uYd7M1oSAlMtd+IJpCfXnX6BZhYlEZsnenvdOZx
dR592TQTP/OBVRrS6X5qX2f6iWRBrs/0OqOficTgTL8v59jbzji3eiLqn8+n
mzhqajwxkZWPfZo7njtWfb4269NcqfX+ovKjCvsz6sKB2+c8TMP9qNH39jc4
x1bi/ti9Lyf2rMuvhkdnvA8DoaDW9WtSocE/73cfEb1u27kXFbm4f1Wcy6y6
qAZiv8BT9nWKeiDybmRAVUyh7TNBd+w16Jgqu77jYwfIX5i/zVSkuqUfexYC
A9lBnJ+mZj4fHiCTESaxtPP8X/WCyF9IFE+r95WZ/Kueh1z/Qq4HQV6M7il1
viWTaQS5/gJ5LCePKX5kcg1Ccr6a3B9J7u8h51PI/QXk/D25PoqcjyOvz+T8
BLn+nxz/ktd/cj8CeT0k17v91/xE7nclz0fkfDC5/4/cX0qen8jnTf/f+Yfc
T0iej8j9guT5iXy+RJ6vyPMJub+XPL+Q+3nJ8w35vPS/5h9yfxx5PiH3C5Hn
C/L5MHn8k8c3eTyT66XJ45vcX0Ue7+R+U/L4J/djkuuRyPMBub6TXE9Azi+T
87Hk/CR5PiDXv5DPu/9d70XBr31+Vr4c7AB5LarzaYqNP3qx1/IrdIdUGjUP
exgSA3kqN2QDsFeiUW3Pe/cg8jVEwNgfXWqJDxUgr4MRatgyKEwFyGNxWSvb
8qF1Cnsu2pr6K8+KMSDyV9gZf9qdXJjY9+ihJL3yEgiFyFuxu5vheXAL8kqE
wb74Opv5llSAPBHvNRoN3x8ysOeRKrZCWGhBJoG8GKtanxrFoTaI/Jfp/RaG
lc2j2GfhHxQcDzzVgn2UM0rVPyOmJ7EvIsfT3rtaqAQiv2X1zW0O3ldGIPJa
5LsvUCwezXgxngtB1K1jmR+0xwnktUSXfef8unKaQF6L8GX3raIWrdgPUdQv
9DtlWo/9FsPhIL23y8ZnvJL5QLMvSN/ZgwGR5xIiyhGwQgn5KxLAyXloGvp2
Yo8GDDpsbAr5CpHPEjDqzSW5pgV7NsU9k71fKGnYH1laNnBf796Mz6IiDIr5
j52/J8EOkJfydKPKkZ2p/dh/cdn9Iyi/bQoiX2eX5xKnE9Ye2HtxSsryURkb
hMhPgVkLjJ5yT868vyLggpTA5TmaFIA8lR6jiqZs5y6I/JRilQcLbwdRAPJS
opJ7+Xd8rMA+UIebhE3yokHspRS5mr+638T4Kx9B7lcnn1eT+4/J58/k/mBy
fQa5X5Tcn0XOL5P36+R+UXJ9J7kemlx/Q66vIudTyPUW5H5IcrxPzif+V3xP
9gTI8To5f/Rf8Ts5fibnJ/+/8TQ5f0GOb/8rfiX7BOT4lZyP/a/4ldxPSo5f
yf2l5HiW3N9Orm8mn3eQz1ORx6K1r7xi6iLyWYQAx71luvvsT/1Vj0E+b0Ue
yxyJmq7BzBK48lSAoGkC77/zPpsg+B0jZFFsIoGvUXzFNvMP+WzoGsWr6Bqt
j//3+2e/XjkTD6Fr5KGha+Sto2vk2f3fn5+9/nd+GCPQte8/7/8ovv4felgA
Iw==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{143, 145, 1452}, {248, 249, 725}}], 
           PolygonBox[{{1922, 65, 66, 695}, {1934, 499, 494, 786}}], 
           PolygonBox[{{1921, 32, 33, 691, 692}, {69, 91, 696, 697, 698}}], 
           PolygonBox[{{1932, 472, 474, 884, 808, 767}}], 
           
           PolygonBox[{{1960, 241, 247, 843, 724, 1515, 1210, 1009}, {1951, 
            466, 468, 766, 1550, 1245, 1044, 919}, {1941, 5706, 5707, 1544, 
            1239, 1038, 913, 837}, {807, 238, 240, 723, 1514, 1209, 1008, 
            883}, {1942, 5710, 5711, 1548, 1243, 1042, 917, 841}, {1947, 20, 
            21, 686, 1483, 1178, 977, 852}}], 
           PolygonBox[{{1940, 344, 348, 745, 1530, 1225, 1024, 899, 823}}], 
           PolygonBox[{{1308, 5712, 5713, 1489, 1184, 983, 1686, 1380, 858, 
            1613}, {1948, 116, 118, 1087, 962, 705, 1495, 1190, 989, 864}, {
            1943, 458, 463, 954, 765, 1549, 1244, 1043, 918, 842}}], 
           
           PolygonBox[{{1963, 618, 620, 1513, 1208, 1007, 882, 806, 1585, 
            1280, 1079}, {1288, 349, 353, 936, 746, 1531, 1226, 1025, 900, 
            824, 1593}, {1962, 502, 604, 1494, 1189, 988, 863, 787, 1567, 
            1262, 1061}}], 
           
           PolygonBox[{{1954, 614, 615, 1508, 1203, 1002, 877, 801, 1580, 
            1275, 1074, 949}, {1955, 616, 617, 1512, 1207, 1006, 881, 805, 
            1584, 1279, 1078, 953}, {1693, 209, 207, 971, 1680, 1374, 1173, 
            717, 1507, 1202, 1792, 1001}}], 
           
           PolygonBox[{{1926, 314, 322, 1057, 1713, 1407, 932, 1653, 1348, 
            1146, 1766, 1460, 1883, 740}, {1124, 287, 288, 776, 735, 1524, 
            1219, 1018, 1696, 1390, 893, 1630, 1325, 1826}}], 
           
           PolygonBox[{{1258, 36, 38, 693, 1488, 1183, 982, 857, 1612, 1307, 
            1106, 1742, 1436, 781, 1563}}], 
           
           PolygonBox[{{1636, 358, 361, 788, 1568, 1263, 1062, 937, 747, 1532,
             1227, 1026, 1699, 1393, 1852, 901}, {1299, 443, 444, 950, 761, 
            1545, 1240, 1039, 914, 1646, 1341, 1140, 1761, 1455, 838, 1604}, {
            1266, 141, 142, 965, 708, 1498, 1193, 992, 867, 1618, 1313, 1112, 
            1746, 1440, 791, 1571}}], 
           
           PolygonBox[{{853, 23, 24, 1448, 1878, 817, 1587, 1282, 1081, 956, 
            687, 1484, 1179, 978, 1685, 1379, 1848}, {1925, 312, 313, 1562, 
            1257, 1801, 1056, 1712, 1406, 931, 1652, 1347, 1145, 1765, 1459, 
            1882, 739}}], 
           
           PolygonBox[{{1862, 210, 226, 718, 1509, 1204, 1003, 878, 1626, 
            1321, 1120, 802, 1581, 1276, 1808, 1075, 1723, 1417}, {1927, 324, 
            325, 1107, 1743, 1437, 782, 1564, 1259, 1058, 933, 1654, 1349, 
            1147, 1767, 1461, 1884, 741}, {1446, 227, 228, 1814, 1098, 973, 
            719, 1510, 1205, 1004, 1694, 1388, 879, 1627, 1322, 1823, 1121, 
            1752}}], 
           PolygonBox[CompressedData["
1:eJwNzr1LAlAUhvHThwWCEEThJDQEtTRFo9EiCYrY0F4QTWoWRVRTBLbb4NDi
4GaNttbYUA1NLk5BTf4BRthveLnP8557Lndpv7ZTnYyIaZmXU/A8EfEiazMR
f3xdnqYirnk5EdHgI0tJ3sdz0sUXZk33ajiLD2YjCosRRXnQXeruzI/wJj6z
t81zfIEX+Adv8j3e4r/4FQ+cdX86l5R3V816uhuzrp2h/4zxuz4hHbMTfmt2
iDfwsr2K2Yrzyzs/8qa/1326tyt5d9O6ki7J0/wbZ+QRX5m19cd4C/8D1IEo
Mg==
            "]], 
           PolygonBox[CompressedData["
1:eJwVzq1Lg3EUxfGrbq5YBJNsoKAiGFR8GcxmEixTEDSpC7OIhhWbrsyi/gOC
wWYdYnNb2dowzWJS7GsbDAU/hsPzPefc333udOF892w4IhI0QbWRiJmhiFn6
Ho2oJiM+DfR8m4Z+9Jd0pFuUFWUr/Bqf4Df4Or7FW6mIcZqzK0uP5kq6Td2F
uS97+7iFf3VXdKxfkp3IPvATXpWv4yQew2l3Zqghu5PVZdd4D994V7X3DT/g
jm6ftvWTsh1ZG9/jvNve+We3vVCOPzV7oJ/XH+qm+AV+gJf/Z/kyn9dX+C5+
xX3/TOE/kg8pqQ==
            "]], 
           
           PolygonBox[{{1794, 289, 291, 1303, 1816, 1102, 1740, 1434, 777, 
            1559, 1254, 1053, 928, 1649, 1344, 1143, 1763, 1457, 736, 1525, 
            1220}, {1471, 624, 625, 1697, 1391, 894, 1631, 1326, 1125, 818, 
            1588, 1283, 1082, 1726, 1420, 957, 1669, 1363, 1840, 1162, 
            1777}, {939, 139, 140, 1168, 1781, 1475, 707, 1497, 1192, 991, 
            866, 1617, 1312, 1111, 790, 1570, 1265, 1064, 1717, 1411, 1859}}], 
           PolygonBox[CompressedData["
1:eJwV0K1LQ3EYxfFH73TiTSIIF4MKtgURXXEWbTPJEMQ62IriQBCTGAQV17Zs
E4xiWzAYpklNFv0LRFhZFYefhcNzzvd5+XHvQrVRORyNiBzNUHssYn8kokFl
vpCPONP8GY/oyD3DA/UNy9FlElHXK2IHcklel1N52u4m9ixPDaubL1TQm9er
Yp96d/KivSV+gBXpkb/GO/g5X+Gv8F/vp/IXn3djhY6xE/oz84onWKLemjvC
Ltyo8avDb8PX5JI8KW/IXb7Fd/Emv8efUuZ/zNIOv+xm02xf/0l+8N67eoN9
2NulLb0M28ZSOZO/+Qm7c+q9/A+JLSps
            "]], 
           
           PolygonBox[{{990, 119, 138, 1828, 1130, 1757, 1451, 825, 1594, 
            1289, 1088, 1731, 1425, 963, 1674, 1368, 1167, 1780, 1474, 706, 
            1496, 1191, 1789}, {1891, 5704, 5705, 1037, 1707, 1401, 912, 1645,
             1340, 1139, 836, 1603, 1298, 1097, 1738, 1432, 972, 1681, 1375, 
            1846, 1174, 1785, 1479}}], 
           
           PolygonBox[{{880, 229, 230, 1456, 1881, 839, 1605, 1300, 1815, 
            1099, 1739, 1433, 1871, 974, 1682, 1376, 1847, 1175, 1786, 1480, 
            1892, 720, 1511, 1206, 1793, 1005, 1695, 1389, 1851}, {748, 605, 
            606, 1381, 1849, 865, 1616, 1311, 1818, 1110, 1745, 1439, 1874, 
            789, 1569, 1264, 1804, 1063, 1716, 1410, 1858, 938, 1657, 1352, 
            1834, 1150, 1769, 1463, 1885}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{248, 254, 1924}}], 
           PolygonBox[{{987, 495, 494, 862}, {69, 92, 1923, 699}}], 
           PolygonBox[{{703, 99, 115, 1188, 1493}}], 
           PolygonBox[{{861, 339, 343, 1928, 744, 785}}], 
           
           PolygonBox[{{905, 162, 163, 1790, 1195, 1500, 710, 829}, {792, 391,
             392, 1702, 1030, 1231, 1536, 751}, {768, 477, 481, 1952, 920, 
            1045, 1246, 1551}}], 
           
           PolygonBox[{{726, 259, 260, 1936, 809, 885, 1010, 1211, 1516}, {
            143, 146, 868, 993, 1194, 1499, 709, 828, 1879}}], 
           
           PolygonBox[{{844, 264, 265, 1324, 1629, 886, 1011, 1212, 1517, 
            727}, {1831, 208, 207, 1096, 1297, 1602, 835, 1454, 1760, 1138}, {
            994, 607, 610, 752, 941, 1066, 1267, 1572, 793, 869}}], 
           
           PolygonBox[{{1232, 5702, 5703, 1957, 966, 1091, 1292, 1597, 830, 
            906, 1031}}], 
           
           PolygonBox[{{1861, 419, 427, 1931, 757, 1888, 1467, 1773, 1156, 
            1358, 1663, 946}, {1367, 97, 98, 1959, 986, 1187, 1492, 702, 1473,
             1779, 1166, 1842}, {1123, 621, 623, 1668, 955, 1863, 1419, 1725, 
            1080, 1281, 1586, 810}}], 
           
           PolygonBox[{{1756, 626, 627, 1673, 961, 1866, 1424, 1730, 1086, 
            1287, 1592, 822, 1450}}], 
           
           PolygonBox[{{716, 205, 206, 1445, 1751, 1118, 1822, 1319, 1624, 
            875, 1386, 1692, 1000, 1201, 1506}}], 
           
           PolygonBox[{{1152, 393, 394, 1734, 1092, 1812, 1293, 1598, 831, 
            1134, 1335, 1640, 907, 1397, 1703, 1032, 1233, 1538, 753}, {700, 
            93, 94, 1655, 934, 1857, 1408, 1714, 1059, 1260, 1565, 783, 1108, 
            1309, 1614, 859, 984, 1185, 1490}, {1833, 331, 332, 1085, 1810, 
            1286, 1591, 821, 1128, 1329, 1634, 897, 1022, 1223, 1528, 742, 
            1462, 1768, 1148}}], 
           
           PolygonBox[{{1115, 399, 416, 1399, 1705, 1034, 1797, 1235, 1540, 
            755, 1154, 1356, 1661, 944, 1069, 1270, 1575, 796, 1443, 1749}, {
            1423, 95, 96, 784, 1873, 1438, 1744, 1109, 1310, 1615, 860, 985, 
            1186, 1491, 701, 1165, 1366, 1672, 960, 1865}}], 
           
           PolygonBox[{{1772, 417, 418, 970, 1870, 1431, 1737, 1095, 1296, 
            1601, 834, 1137, 1338, 1643, 910, 1035, 1236, 1541, 756, 1887, 
            1466}, {1599, 176, 177, 1821, 1316, 1621, 872, 1384, 1690, 997, 
            1198, 1503, 713, 1170, 1371, 1677, 968, 1429, 1735, 1093, 1294}, {
            711, 164, 166, 1659, 942, 1067, 1268, 1573, 794, 1441, 1747, 1113,
             1819, 1314, 1619, 870, 1382, 1688, 995, 1196, 1501}}], 
           
           PolygonBox[{{1566, 333, 338, 1827, 1330, 1635, 898, 1392, 1698, 
            1023, 1224, 1529, 743, 1149, 1351, 1656, 935, 1409, 1715, 1060, 
            1803, 1261}, {1679, 203, 204, 1721, 1071, 1807, 1272, 1577, 798, 
            1117, 1318, 1623, 874, 999, 1200, 1505, 715, 1478, 1784, 1172, 
            1845, 1373}}], 
           
           PolygonBox[{{1199, 611, 613, 1155, 1837, 1357, 1662, 945, 1414, 
            1720, 1070, 1271, 1576, 797, 1444, 1750, 1116, 1317, 1622, 873, 
            1385, 1691, 998, 1791}}], 
           
           PolygonBox[{{1855, 184, 185, 1504, 714, 1890, 1477, 1783, 1171, 
            1844, 1372, 1678, 969, 1869, 1430, 1736, 1094, 1813, 1295, 1600, 
            833, 1136, 1337, 1642, 909}, {1876, 429, 430, 1339, 1644, 911, 
            1400, 1706, 1036, 1237, 1542, 758, 1468, 1774, 1157, 1838, 1359, 
            1664, 947, 1416, 1722, 1072, 1273, 1578, 799}}], 
           
           PolygonBox[{{1428, 174, 175, 1574, 795, 1875, 1442, 1748, 1114, 
            1820, 1315, 1620, 871, 1383, 1689, 996, 1197, 1502, 712, 1476, 
            1782, 1169, 1370, 1676, 967, 1868}}], 
           
           PolygonBox[{{1068, 397, 398, 1453, 1759, 1135, 1830, 1336, 1641, 
            908, 1854, 1398, 1704, 1033, 1796, 1234, 1539, 754, 1886, 1465, 
            1771, 1153, 1836, 1355, 1660, 943, 1860, 1413, 1719}}], 
           PolygonBox[CompressedData["
1:eJwVzDdOg2EQhOHPuUIi/kQhURPMLahMMDdwgaigJF6AklDwm1RTcgBiSUVJ
zrRgMkgUPC5e7c7MznaVJosTyRBCAuPI50KoITpxLRijjzMh/GVDiNMhlOwr
9pNUCAV6Rx7xBnijvC108J8Q8XL0spt+cx6/OJK961z5X5YVeZto5z+iSS9L
5zGHHxzy33QudUboDbTxHtDoPkP3Vf/4N2t+40D2qnOhM0yvo5V3jwadNL3k
vtecwRf2ZRWdc51YNsRbQwv/DvV6KXpR1mNO4xN7she9M71V2SCvjGb+Ler0
knQ3prDt5sPclT3rneoV6BgR7wa1Oonqb3nFvsD7B4gFOMI=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[{1, 379, 274, 190, 126, 536}], 
          LineBox[{2, 504}], 
          LineBox[{3, 4, 5, 6, 7, 380}], 
          LineBox[{8, 381, 276, 192, 128, 81, 518}], 
          LineBox[{107, 10, 383, 278, 194, 541}], 
          LineBox[{13, 386, 281, 197, 133, 538}], 
          LineBox[{111, 14, 387, 282, 198}], 
          LineBox[{15, 388, 283, 199, 135, 88, 521}], 
          LineBox[{16, 389, 284, 200, 136, 89}], 
          LineBox[{352, 493, 268, 480, 375, 17, 390, 285, 201, 137}], 
          LineBox[{18, 505}], 
          LineBox[{19, 5700}], 
          LineBox[{5701, 39, 40, 41, 400}], 
          LineBox[{42, 401, 296, 212, 148, 101, 431, 326}], 
          
          LineBox[{121, 439, 334, 250, 186, 459, 354, 270, 43, 402, 297, 213, 
           464, 359, 149, 445, 340}], 
          LineBox[CompressedData["
1:eJwV0csrpXEYB/D3SKYoh9WsFZsZ9z1j6TZmTNlQlEuOU5iaKLfyP+DgH3AZ
NiPKfcPCAiV1OCWKJJfN1EwWKJ938en7fZ7fr/N23jevvf9HXyQIgnFalUxq
9TlZwb2+yJ7eTAbD5nX5jRc9JX+ypR/KDqJcM0Sh/YT8RFI/kTES+q5s4pEI
F/ziH93O/8hq7sKdOSl7+cuq+UC28UQWVwzynzrn87KSWx7MpzLOb31ftvCB
SwYYsd+Q33nVtznSOylIC4IcWWQ3KT9zpk8TY8VcEz5bX6OeBfOX8P/pS4zy
0e8Uy6nw3XCuz9BDtrOvMl2WyFJe3SmTifDZpPRZ4kTdawi/kX1V+B70ZcbY
NDeS786beYdjcxe53ITfkmfKnb0D9ONGbg==
           "]], 
          LineBox[{79, 51, 509}], 
          LineBox[{52, 510}], 
          LineBox[{53, 511}], 
          LineBox[{82, 54, 407, 302, 218, 154}], 
          LineBox[{86, 58, 411, 306, 222, 158}], 
          LineBox[{134, 87, 59, 412}], 
          LineBox[{60, 413, 308, 224, 160, 113, 531}], 
          
          LineBox[{426, 321, 237, 173, 61, 414, 309, 225, 161, 447, 342, 
           258}], 
          LineBox[{90, 62, 512}], 
          LineBox[{72, 420, 315, 231, 167, 120, 534}], 
          LineBox[{242, 178, 73, 421, 316, 232, 168, 450, 345, 261, 545}], 
          LineBox[{275, 191, 127, 80, 517}], 
          LineBox[{130, 83, 55}], 
          LineBox[{384, 279, 195, 131, 84, 519}], 
          LineBox[{385, 280, 196, 132, 85, 520}], 
          LineBox[{295, 211, 147, 100, 525}], 
          
          LineBox[{475, 370, 102, 432, 327, 486, 243, 469, 364, 496, 179, 
           455}], 
          LineBox[{408, 303, 219, 155, 108, 528}], 
          LineBox[{409, 304, 220, 156, 109, 529}], 
          LineBox[{307, 223, 159, 112, 530}], 
          LineBox[{114, 435, 330, 246, 471, 366, 498, 182, 457}], 
          LineBox[{382, 277, 193, 129, 537}], 
          LineBox[{410, 305, 221, 157, 110}]}, 
         Annotation[#, "Charting`Private`Tag$198010#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[{686, 1483, 1178, 977, 852, 1947}], 
          
          LineBox[{1448, 1878, 817, 1587, 1282, 1081, 956, 687, 1484, 1179, 
           978, 1685, 1379, 1848, 853}], 
          
          LineBox[{1364, 1841, 1163, 1778, 1472, 689, 1486, 1181, 980, 855, 
           1610, 1305, 1104, 779, 1561, 1256, 1800, 1055, 1711, 1405}], 
          
          LineBox[{1728, 1422, 959, 1671, 1365, 1164, 690, 1487, 1182, 981, 
           856, 1611, 1306, 1105, 1741, 1435, 1872, 780}], 
          LineBox[{691, 692, 1921}], 
          
          LineBox[{693, 1488, 1183, 982, 857, 1612, 1307, 1106, 1742, 1436, 
           781, 1563, 1258}], 
          LineBox[{695, 1922}], 
          LineBox[{696, 697, 698, 69, 699, 1923}], 
          
          LineBox[{700, 1490, 1185, 984, 859, 1614, 1309, 1108, 783, 1565, 
           1260, 1059, 1714, 1408, 1857, 934, 1655}], 
          
          LineBox[{1423, 1865, 960, 1672, 1366, 1165, 701, 1491, 1186, 985, 
           860, 1615, 1310, 1109, 1744, 1438, 1873, 784}], 
          LineBox[{1367, 1842, 1166, 1779, 1473, 702, 1492, 1187, 986, 1959}], 
          LineBox[{703, 1493, 1188}], 
          LineBox[{1087, 962, 705, 1495, 1190, 989, 864, 1948}], 
          
          LineBox[{1828, 1130, 1757, 1451, 825, 1594, 1289, 1088, 1731, 1425, 
           963, 1674, 1368, 1167, 1780, 1474, 706, 1496, 1191, 1789, 990}], 
          
          LineBox[{1168, 1781, 1475, 707, 1497, 1192, 991, 866, 1617, 1312, 
           1111, 790, 1570, 1265, 1064, 1717, 1411, 1859, 939}], 
          
          LineBox[{965, 708, 1498, 1193, 992, 867, 1618, 1313, 1112, 1746, 
           1440, 791, 1571, 1266}], 
          LineBox[{1452, 143, 1879, 828, 709, 1499, 1194, 993, 868}], 
          LineBox[{905, 829, 710, 1500, 1195, 1790}], 
          
          LineBox[{711, 1501, 1196, 995, 1688, 1382, 870, 1619, 1314, 1819, 
           1113, 1747, 1441, 794, 1573, 1268, 1067, 942, 1659}], 
          
          LineBox[{1428, 1868, 967, 1676, 1370, 1169, 1782, 1476, 712, 1502, 
           1197, 996, 1689, 1383, 871, 1620, 1315, 1820, 1114, 1748, 1442, 
           1875, 795, 1574}], 
          
          LineBox[{1599, 1294, 1093, 1735, 1429, 968, 1677, 1371, 1170, 713, 
           1503, 1198, 997, 1690, 1384, 872, 1621, 1316, 1821}], 
          
          LineBox[{1855, 909, 1642, 1337, 1136, 833, 1600, 1295, 1813, 1094, 
           1736, 1430, 1869, 969, 1678, 1372, 1844, 1171, 1783, 1477, 1890, 
           714, 1504}], 
          
          LineBox[{1679, 1373, 1845, 1172, 1784, 1478, 715, 1505, 1200, 999, 
           874, 1623, 1318, 1117, 798, 1577, 1272, 1807, 1071, 1721}], 
          
          LineBox[{716, 1506, 1201, 1000, 1692, 1386, 875, 1624, 1319, 1822, 
           1118, 1751, 1445}], 
          
          LineBox[{1831, 1138, 1760, 1454, 835, 1602, 1297, 1096, 207, 971, 
           1680, 1374, 1173, 717, 1507, 1202, 1792, 1001, 1693}], 
          
          LineBox[{718, 1509, 1204, 1003, 878, 1626, 1321, 1120, 802, 1581, 
           1276, 1808, 1075, 1723, 1417, 1862}], 
          
          LineBox[{1814, 1098, 973, 719, 1510, 1205, 1004, 1694, 1388, 879, 
           1627, 1322, 1823, 1121, 1752, 1446}], 
          
          LineBox[{1456, 1881, 839, 1605, 1300, 1815, 1099, 1739, 1433, 1871, 
           974, 1682, 1376, 1847, 1175, 1786, 1480, 1892, 720, 1511, 1206, 
           1793, 1005, 1695, 1389, 1851, 880}], 
          LineBox[{723, 1514, 1209, 1008, 883, 807}], 
          LineBox[{843, 724, 1515, 1210, 1009, 1960}], 
          LineBox[{725, 248, 1924}], 
          LineBox[{726, 1516, 1211, 1010, 885, 809, 1936}], 
          LineBox[{844, 727, 1517, 1212, 1011, 886, 1629, 1324}], 
          LineBox[CompressedData["
1:eJwNzCdWA0AYReE/FUsN1aApYReoUMIOEJEgqRtAUgQJEDSSBRCKRCHpHQuh
wzkIPnHPzHtv7vROThenEhFRQr4hYikdUc9G1DIRiVREo/uNLoeyXMBpMuLZ
vqf7kHd4M84+JNHEubW1oyKPYN2bM94Lr6b/1M2iH8u2lLOZd2frwIY8irLt
nFfn7eu/dHMYwIot7Wzh3ds6sSmP4YLzyjnQfcvzqHo/6MyglfNg68KWPI5L
zhvnUPcjLyCPLNq8f9R3oyoXUfHfFeedc6T/1S1iCKu2BmeO92TrwbY8gWFd
jrPrTUF/olvTTerK8p/7sXvJfu3/f+AsOJE=
           "]], 
          
          LineBox[{776, 735, 1524, 1219, 1018, 1696, 1390, 893, 1630, 1325, 
           1826, 1124}], 
          
          LineBox[{1303, 1816, 1102, 1740, 1434, 777, 1559, 1254, 1053, 928, 
           1649, 1344, 1143, 1763, 1457, 736, 1525, 1220, 1794}], 
          
          LineBox[{1764, 1458, 737, 1526, 1221, 1020, 895, 1632, 1327, 1126, 
           819, 1589, 1284, 1083, 1727, 1421, 1864, 958}], 
          
          LineBox[{930, 1651, 1346, 1144, 738, 1527, 1222, 1021, 896, 1633, 
           1328, 1127, 1755, 1449, 820, 1590, 1285, 1809}], 
          
          LineBox[{1562, 1257, 1801, 1056, 1712, 1406, 931, 1652, 1347, 1145, 
           1765, 1459, 1882, 739, 1925}], 
          
          LineBox[{1057, 1713, 1407, 932, 1653, 1348, 1146, 1766, 1460, 1883, 
           740, 1926}], 
          
          LineBox[{1107, 1743, 1437, 782, 1564, 1259, 1058, 933, 1654, 1349, 
           1147, 1767, 1461, 1884, 741, 1927}], 
          
          LineBox[{1833, 1148, 1768, 1462, 742, 1528, 1223, 1022, 897, 1634, 
           1329, 1128, 821, 1591, 1286, 1810, 1085}], 
          
          LineBox[{1566, 1261, 1803, 1060, 1715, 1409, 935, 1656, 1351, 1149, 
           743, 1529, 1224, 1023, 1698, 1392, 898, 1635, 1330, 1827}], 
          LineBox[{861, 785, 744, 1928}], 
          LineBox[{745, 1530, 1225, 1024, 899, 823, 1940}], 
          LineBox[{936, 746, 1531, 1226, 1025, 900, 824, 1593, 1288}], 
          
          LineBox[{788, 1568, 1263, 1062, 937, 747, 1532, 1227, 1026, 1699, 
           1393, 1852, 901, 1636}], 
          
          LineBox[{1353, 1835, 1151, 1770, 1464, 749, 1534, 1229, 1028, 903, 
           1638, 1333, 1132, 827, 1596, 1291, 1811, 1090, 1733, 1427}], 
          
          LineBox[{1805, 1065, 1718, 1412, 940, 750, 1535, 1230, 1029, 1701, 
           1395, 904, 1639, 1334, 1829, 1133, 1758}], 
          LineBox[{792, 751, 1536, 1231, 1030, 1702}], 
          
          LineBox[{1152, 753, 1538, 1233, 1032, 1703, 1397, 907, 1640, 1335, 
           1134, 831, 1598, 1293, 1812, 1092, 1734}], 
          
          LineBox[{1068, 1719, 1413, 1860, 943, 1660, 1355, 1836, 1153, 1771, 
           1465, 1886, 754, 1539, 1234, 1796, 1033, 1704, 1398, 1854, 908, 
           1641, 1336, 1830, 1135, 1759, 1453}], 
          
          LineBox[{1115, 1749, 1443, 796, 1575, 1270, 1069, 944, 1661, 1356, 
           1154, 755, 1540, 1235, 1797, 1034, 1705, 1399}], 
          
          LineBox[{1772, 1466, 1887, 756, 1541, 1236, 1035, 910, 1643, 1338, 
           1137, 834, 1601, 1296, 1095, 1737, 1431, 1870, 970}], 
          LineBox[{1861, 946, 1663, 1358, 1156, 1773, 1467, 1888, 757, 1931}], 
          
          LineBox[{1876, 799, 1578, 1273, 1072, 1722, 1416, 947, 1664, 1359, 
           1838, 1157, 1774, 1468, 758, 1542, 1237, 1036, 1706, 1400, 911, 
           1644, 1339}], 
          
          LineBox[{1850, 876, 1625, 1320, 1119, 800, 1579, 1274, 1073, 948, 
           1665, 1360, 1158, 1775, 1469, 759, 1543, 1238}], 
          
          LineBox[{950, 761, 1545, 1240, 1039, 914, 1646, 1341, 1140, 1761, 
           1455, 838, 1604, 1299}], 
          
          LineBox[{1582, 1277, 1076, 951, 1666, 1361, 1159, 762, 1546, 1241, 
           1040, 1708, 1402, 915, 1647, 1342, 1141}], 
          
          LineBox[{1323, 1824, 1122, 1753, 1447, 804, 1583, 1278, 1077, 1724, 
           1418, 952, 1667, 1362, 1160, 763, 1547, 1242, 1799, 1041}], 
          LineBox[{954, 765, 1549, 1244, 1043, 918, 842, 1943}], 
          LineBox[{766, 1550, 1245, 1044, 919, 1951}], 
          LineBox[{884, 808, 767, 1932}], 
          LineBox[{768, 1551, 1246, 1045, 920, 1952}], 
          
          LineBox[{1485, 1180, 979, 854, 1609, 1304, 1103, 778, 1560, 1255, 
           1054, 1710, 1404, 929, 1650, 1345, 1832}], 
          LineBox[{987, 862, 494, 786, 1934}], 
          LineBox[{1494, 1189, 988, 863, 787, 1567, 1262, 1061, 1962}], 
          
          LineBox[{1381, 1849, 865, 1616, 1311, 1818, 1110, 1745, 1439, 1874, 
           789, 1569, 1264, 1804, 1063, 1716, 1410, 1858, 938, 1657, 1352, 
           1834, 1150, 1769, 1463, 1885, 748}], 
          LineBox[{994, 869, 793, 1572, 1267, 1066, 941, 752}], 
          
          LineBox[{1199, 1791, 998, 1691, 1385, 873, 1622, 1317, 1116, 1750, 
           1444, 797, 1576, 1271, 1070, 1720, 1414, 945, 1662, 1357, 1837, 
           1155}], 
          LineBox[{1508, 1203, 1002, 877, 801, 1580, 1275, 1074, 949, 1954}], 
          LineBox[{1512, 1207, 1006, 881, 805, 1584, 1279, 1078, 953, 1955}], 
          LineBox[{1513, 1208, 1007, 882, 806, 1585, 1280, 1079, 1963}], 
          LineBox[{1123, 810, 1586, 1281, 1080, 1725, 1419, 1863, 955, 1668}], 
          
          LineBox[{1697, 1391, 894, 1631, 1326, 1125, 818, 1588, 1283, 1082, 
           1726, 1420, 957, 1669, 1363, 1840, 1162, 1777, 1471}], 
          
          LineBox[{1756, 1450, 822, 1592, 1287, 1086, 1730, 1424, 1866, 961, 
           1673}], 
          
          LineBox[{1533, 1228, 1795, 1027, 1700, 1394, 902, 1637, 1332, 1131, 
           826, 1595, 1290, 1089, 1732, 1426, 964, 1675, 1369, 1843}], 
          LineBox[{1232, 1031, 906, 830, 1597, 1292, 1091, 966, 1957}], 
          
          LineBox[{1037, 1707, 1401, 912, 1645, 1340, 1139, 836, 1603, 1298, 
           1097, 1738, 1432, 972, 1681, 1375, 1846, 1174, 1785, 1479, 1891}], 
          LineBox[{1544, 1239, 1038, 913, 837, 1941}], 
          
          LineBox[{1709, 1403, 916, 1648, 1343, 1142, 840, 1606, 1301, 1100, 
           975, 1683, 1377, 1176, 1787, 1481, 1893}], 
          LineBox[{1548, 1243, 1042, 917, 841, 1942}], 
          LineBox[{1489, 1184, 983, 1686, 1380, 858, 1613, 1308}]}, 
         Annotation[#, "Charting`Private`Tag$198010#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[{2142, 2767, 2568, 2415, 2306, 3068}], 
          LineBox[{2274, 2143, 2768, 2569, 2416, 2307}], 
          LineBox[{2234, 2193, 2144, 2769, 2570, 2417, 2308, 2235, 3046}], 
          LineBox[{2146, 2771, 2572, 2419, 2310, 2237}], 
          LineBox[{2276, 2147, 2772, 2573, 2420, 3082}], 
          LineBox[{2350, 2277, 2859, 2660, 2507, 2398, 2148, 2773}], 
          
          LineBox[{2909, 2710, 2990, 2557, 2961, 2762, 3011, 2149, 2774, 2575,
            2966, 2422, 2920, 2721, 2993, 2313, 2877, 2678, 2979, 2525, 2946, 
           2747, 2240, 2842, 2643}], 
          
          LineBox[{2279, 2861, 2662, 2509, 2400, 2150, 2775, 2576, 2423, 2314,
            3070}], 
          LineBox[{2280, 2151, 2776, 2577, 2424, 3083}], 
          LineBox[{2153, 2154, 2155, 3036}], 
          LineBox[{2156, 2157, 2778, 2579, 2426, 2317, 2244}], 
          LineBox[{2558, 2158, 2779, 2580, 2427, 2921, 2722, 2318}], 
          
          LineBox[{2996, 2356, 2889, 2690, 2983, 2537, 2953, 2754, 3008, 2283,
            2863, 2664, 2978, 2511, 2941, 2742, 3005, 2402, 2911, 2712, 2991, 
           2559, 2962, 2763, 2159, 2780, 2581}], 
          
          LineBox[{2713, 2560, 2160, 2781, 2582, 2429, 2320, 2880, 2681, 2528,
            2247, 2846, 2647, 2494, 3087}], 
          LineBox[{2513, 2404, 2161, 2782, 2583, 2430, 2321, 3071}], 
          LineBox[{2286, 2162, 2783, 2584, 2431}], 
          LineBox[{2164, 2785, 2586, 2433, 2324, 2251, 3050}], 
          LineBox[{2361, 2288, 2166, 2787, 2588, 3092}], 
          
          LineBox[{2167, 2788, 2589, 2436, 2327, 2254, 2848, 2649, 2496, 2387,
            3080}], 
          
          LineBox[{2405, 2913, 2714, 2561, 2168, 2789, 2590, 2437, 2922, 2723,
            2328, 2881, 2682, 2529, 2948, 2749, 2255, 2849}], 
          
          LineBox[{2867, 2668, 2515, 2943, 2744, 2406, 2914, 2715, 2562, 2169,
            2790, 2591, 2438, 2329, 2882, 2683, 3096}], 
          LineBox[{2365, 2292, 2868, 2669, 2516, 2407, 2170, 2791}], 
          LineBox[{2172, 2173, 2174}], 
          LineBox[{2175, 2794, 2595, 2442, 2333, 2260, 3054}], 
          LineBox[{2869, 2670, 2517, 2408, 2177, 2796, 2597, 2444, 2335}], 
          LineBox[{2180, 2799, 2600, 2447, 2338, 2265}], 
          LineBox[{2181, 2182, 2800}], 
          LineBox[{2183, 2801, 2602, 2449, 2340, 2267, 2855, 2656}], 
          
          LineBox[{2301, 2872, 2673, 2520, 2411, 2916, 2717, 2564, 2184, 2802,
            2603, 2450, 2924, 2725, 2341, 2885, 2686}], 
          LineBox[CompressedData["
1:eJwVzzkspWEYxfHXJBhLaYlSY7mxtehnkFhrmitMY0nQTTHREIYhsVaodKp7
XUJBoyChZ2JLUDNjKQh+X3HyP+c8z/t+71ccH+wYSAshjNF8dgivWSEkvoaQ
lxNCs5yUv1O7PCk/8O/mtfKQfCqP8jt8H9/Dr/DpNM8f44T9/1hBy7o5e/24
LiewRP6Gv+R1vJPHcV/ew3PnyzEur+Gh+U9MyrvYKXfigryBb/JstBe939l8
voXf1I/wG3wD38H/5v/xH/bq5GH5LHof9cqrclFuCBk4aecRK6N/My+lC13M
XrfuSO6iTV2BrlWXkhsp0Gv0PbMnfRUt6MroUndvlsIbnMJn82paNC+nL95w
pd+iWzvTeI5/8MVeDS3Zi9G17sFsGwuxzWxL30RpVK8b0RW68688QD90a7rM
6F38CR7gjDs+Af3eTwM=
           "]], 
          LineBox[{2233, 2192, 2808, 2609, 2456, 2347, 3075}], 
          LineBox[{2194, 3038}], 
          LineBox[{2196, 2810, 2611, 2458, 2349, 3076}], 
          
          LineBox[{2311, 2238, 2840, 2641, 2488, 2379, 2197, 2811, 2612, 
           2459}], 
          
          LineBox[{2198, 2812, 2613, 2460, 2926, 2727, 2351, 2887, 2688, 2535,
            2952, 2753, 2278, 2860, 2661, 2977, 2508, 2940, 2741, 3004}], 
          
          LineBox[{2490, 2933, 2734, 2381, 2900, 2701, 2548, 2199, 2813, 2614,
            2461, 2352, 2888, 2689, 2536, 3090}], 
          LineBox[{2843, 2644, 2491, 2382, 2200, 2814, 2615, 2462, 2353}], 
          LineBox[{2202, 3039}], 
          LineBox[{2203, 2816, 2617, 2464, 2355, 3077}], 
          
          LineBox[{2679, 2526, 2245, 2844, 2645, 2492, 2934, 2735, 2383, 2901,
            2702, 2986, 2549, 2956, 2757, 2204, 2817, 2618, 2969, 2465, 
           2927}], 
          
          LineBox[{3009, 2205, 2818, 2619, 2970, 2466, 2928, 2729, 2997, 2357,
            2890, 2691, 2984, 2538, 2954, 2755, 2284, 2864, 2665, 2512, 2942, 
           2743, 2403, 2912}], 
          
          LineBox[{2903, 2704, 2551, 2206, 2819, 2620, 2467, 2358, 2891, 2692,
            2539, 2285, 2865, 2666}], 
          
          LineBox[{2248, 2847, 2648, 2495, 2386, 2207, 2820, 2621, 2468, 2359,
            3078}], 
          LineBox[{2209, 3040}], 
          LineBox[{2210, 3041}], 
          LineBox[{2252, 2211, 2822, 2623, 2470, 3085}], 
          
          LineBox[{2213, 2824, 2625, 2472, 2363, 2892, 2693, 2540, 2290, 2866,
            2667, 2514, 3089}], 
          
          LineBox[{2497, 2936, 2737, 3000, 2388, 2904, 2705, 2988, 2552, 2958,
            2759, 3010, 2214, 2825, 2626, 2971, 2473, 2929, 2730, 2998, 2364, 
           2893, 2694, 2985, 2541, 2955, 2756}], 
          
          LineBox[{2530, 2256, 2850, 2651, 2498, 2389, 2215, 2826, 2627, 2474,
            3086}], 
          LineBox[{2216, 2827, 2628, 2475, 2366, 2293, 3062}], 
          LineBox[{2217, 3042}], 
          LineBox[{2219, 2829, 2630, 2477, 2368, 2295, 3064}], 
          
          LineBox[{2851, 2652, 2499, 2390, 2220, 2830, 2631, 2478, 2369, 
           3079}], 
          
          LineBox[{2684, 2531, 2262, 2852, 2653, 2500, 2391, 2905, 2706, 2553,
            2221, 2831, 2632, 2479}], 
          
          LineBox[{2760, 2222, 2832, 2633, 2480, 2931, 2732, 2371, 2895, 2696,
            2543, 2298, 2871, 2672, 2519, 2410}], 
          LineBox[{2393, 2223, 2833, 2634, 2481, 2372, 2299, 3065}], 
          LineBox[{2224, 3043}], 
          LineBox[{2225, 2834, 2635, 2482, 2373, 2300, 3066}], 
          
          LineBox[{2503, 2394, 2226, 2835, 2636, 2483, 2374, 2896, 2697, 2544,
            3091}], 
          LineBox[{2770, 2571, 2418, 2309, 2236, 3047}], 
          
          LineBox[{2421, 2312, 2876, 2677, 2524, 2239, 2841, 2642, 2489, 2380,
            2899, 2700, 2547}], 
          LineBox[{2315, 2242, 2201}], 
          LineBox[{2777, 2578, 2425, 2316, 2243, 3048}], 
          
          LineBox[{2428, 2319, 2879, 2680, 2527, 2947, 2748, 2246, 2845, 2646,
            2972, 2493, 2935, 2736, 2999, 2384, 2902, 2703, 2987, 2550, 
           2957}], 
          LineBox[{2322, 2249, 2208}], 
          LineBox[{2784, 2585, 2432, 2323, 2250, 3049}], 
          LineBox[{2435, 2326, 2253, 2212}], 
          LineBox[{2592, 2439, 2330, 2257, 3051}], 
          LineBox[{2792, 2593, 2440, 2331, 2258, 3052}], 
          LineBox[{2594, 2441, 2332, 2259, 3053}], 
          
          LineBox[{2797, 2598, 2967, 2445, 2923, 2724, 2994, 2336, 2884, 2685,
            2980, 2532, 2949, 2750, 3006, 2263, 2853, 2654, 2974, 2501, 2937, 
           2738, 3001, 2392, 2906, 2707, 2554}], 
          LineBox[{2798, 2599, 2446, 2337, 2264, 2854, 2655, 2502, 3088}], 
          LineBox[{2601, 2448, 2339, 2266, 3055}], 
          
          LineBox[{2950, 2751, 2268, 2856, 2657, 2975, 2504, 2938, 2739, 3002,
            2395, 2907}], 
          LineBox[{2809, 2610, 2457, 2348, 2275, 3058}], 
          LineBox[{2815, 2616, 2463, 2354, 2281, 3059}], 
          LineBox[{2282, 2862, 2663, 2510, 2401, 2910}], 
          LineBox[{2821, 2622, 2469, 2360, 2287, 3060}], 
          LineBox[{2624, 2471, 2362, 2289, 3061}], 
          LineBox[{2828, 2629, 2476, 2367, 2294, 3063}], 
          
          LineBox[{2930, 2731, 2370, 2894, 2695, 2542, 2297, 2870, 2671, 2518,
            2944, 2745, 2409, 2915, 2716, 2992, 2563, 2963, 2764, 3012}], 
          LineBox[{2795, 2596, 2443, 2334, 3073}], 
          LineBox[{2786, 2587, 2434, 2325}]}, 
         Annotation[#, "Charting`Private`Tag$198010#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[{3283, 4014, 3766, 3581, 3452, 4143, 3895, 3710, 4397}], 
          
          LineBox[{3991, 3416, 4120, 3872, 4275, 3687, 4226, 3977, 4308, 3558,
            4184, 3935, 4295, 3751, 4256, 4007, 4325, 3284, 4015, 3767, 4263, 
           3582, 4199, 3950, 4297, 3453}], 
          LineBox[{3287, 3288, 3289, 4353}], 
          LineBox[{3290, 3291, 3292, 4018, 3770, 3585, 4388}], 
          
          LineBox[{3456, 3378, 3337, 3293, 4019, 3771, 3586, 3457, 3379, 
           4360}], 
          LineBox[{3295, 4021, 3773, 3588, 3459, 4377}], 
          LineBox[{3419, 3296, 4022, 3774, 3589}], 
          
          LineBox[{3297, 4023, 3775, 3590, 3461, 3383, 4094, 3846, 3661, 3532,
            4381}], 
          LineBox[{3298, 4024, 3776, 3591, 3462, 3384}], 
          
          LineBox[{3936, 4296, 3752, 4257, 4008, 3299, 4025, 3777, 3592, 
           3463}], 
          
          LineBox[{4162, 3914, 3729, 3423, 4123, 3875, 3690, 3561, 4186, 3937,
            3753, 3300, 4026, 3778}], 
          
          LineBox[{3938, 3754, 4258, 4009, 3301, 4027, 3779, 3594, 3465, 3387,
            4098, 3850, 3665, 4393}], 
          
          LineBox[{3692, 3563, 4188, 3939, 3755, 3302, 4028, 3780, 3595, 4201,
            3952, 3466, 4146, 3898, 4280, 3713, 4236, 3987}], 
          
          LineBox[{3731, 4242, 3993, 3426, 4126, 3878, 3693, 4229, 3980, 3564,
            4189, 3940, 3756, 3303, 4029, 3781, 3596}], 
          LineBox[{3305, 4031, 3783, 3598, 3469, 3391, 4363}], 
          
          LineBox[{3429, 4128, 3880, 3695, 3566, 3306, 4032, 3784, 3599, 4202,
            3953, 3470}], 
          
          LineBox[{3508, 4165, 3917, 4285, 3732, 4243, 3994, 4317, 3430, 4129,
            3881, 4277, 3696, 4230, 3981, 3567, 4190, 3941, 3757, 4259, 4010, 
           3307, 4033, 3785, 4401}], 
          LineBox[{3308, 4034, 3786, 3601, 3472, 3394, 4364}], 
          LineBox[{3309, 5447, 4583, 5472, 3310, 3311, 4035}], 
          
          LineBox[{4231, 3982, 3569, 4191, 3942, 3758, 4260, 4011, 3313, 4037,
            3789, 4264, 3604, 4204, 3955, 4298, 3475, 4151, 3903, 4281, 3718, 
           4237, 3988}], 
          
          LineBox[{4286, 3734, 4244, 3995, 3434, 4132, 3884, 3699, 3570, 3314,
            4038, 3790, 3605, 4390}], 
          
          LineBox[{3476, 3398, 3357, 3315, 4039, 3791, 3606, 3477, 3399, 
           4366}], 
          
          LineBox[{3316, 4040, 3792, 3607, 3478, 3400, 4105, 3857, 3672, 
           4395}], 
          LineBox[{3700, 3571, 3317, 4041, 3793, 3608, 3479, 4378}], 
          
          LineBox[{4134, 3886, 3701, 3572, 4192, 3943, 3759, 3318, 4042, 3794,
            3609, 4205, 3956, 3480}], 
          LineBox[{3321, 4045, 3797, 3612, 3483, 3405}], 
          
          LineBox[{3441, 4136, 3888, 3703, 3574, 4194, 3945, 3761, 3322, 4046,
            3798, 3613, 4206, 3957, 4408}], 
          
          LineBox[{3966, 3520, 4171, 3923, 3738, 4246, 3997, 3442, 4137, 3889,
            3704, 4233, 3984, 3575, 4195, 3946, 3762, 3323, 4047}], 
          LineBox[{3576, 3324, 4048, 3800, 3615, 3486, 3408, 4112, 3864}], 
          LineBox[{3444, 3325, 4049, 3801, 3616, 3487, 4156, 3908}], 
          LineBox[CompressedData["
1:eJwV0rlPVGEUhvEzYKnigkvcUURQmUahExoBMdqwSEcCAg0qNgKCxtAZAyZU
FhhcYKiUxq20UFArExdI3MXlPxAFFPzd4s17nud895vJzc1r7qg5k4qIRzKx
KiKzMmI46ZyIwhURv/Q/7rA8wedkcXnEK/4dlyd7Vkfc5GtkjWc32TXxX3CR
zOJFXCFPcads8MySe17bved3yi2+Vta6YzPfzH3Fe+U3XsKVMoG7ZKM7Qr+x
+8Dvktu4TnLdsYU/yc3gffIHh1Rxk7g78c4d4Hq4OZySt/gjzpcRfMiZCq4f
p/1mPbeO28q1cN/wfpnDKTnCPcPHnKnDQ/h8cgYfxL14HrfgdnwPZ+Ep8yfz
bumw68SjfJm50jzAn8Dr8TbcivvMl83f+QZzo3lSj9ndSDrZ6WL7eXOWjONq
+259Cb/Uz+2P63r8WF+3v6aHk/+ke+yLdQl+qC/YX9GDeFov2LfqU/i+XcZ8
x5zNT+vPXIGc5btwhi83V5mv8g3JN4G34zb8A+/wrtN6IblHjvIvcK+knS3l
Sp25yP/l2rjT3AM8Zr5r/qmX2f0HH4Jlqg==
           "]], 
          
          LineBox[{4092, 3844, 3659, 3530, 4174, 3926, 3741, 3333, 4056, 3808,
            3623, 4209, 3960, 3494, 4160, 3912, 3727}], 
          
          LineBox[{3896, 4279, 3711, 4235, 3986, 3375, 4093, 3845, 3660, 4217,
            3968, 3531, 4175, 3927, 3742, 3334, 4057, 3809, 3624}], 
          LineBox[{3335, 4354}], 
          LineBox[{3336, 4355}], 
          LineBox[{3338, 4356}], 
          LineBox[{3381, 3340, 4059, 3811, 3626, 3497}], 
          LineBox[{3460, 3382, 3341, 4060}], 
          LineBox[{3342, 4061, 3813, 3628, 3499, 3421, 4369}], 
          
          LineBox[{4095, 3847, 3662, 3533, 3343, 4062, 3814, 3629, 3500, 4161,
            3913, 3728}], 
          LineBox[{4096, 3848, 3663, 3534, 3344, 4063, 3815, 3630, 4392}], 
          
          LineBox[{4319, 3345, 4064, 3816, 4265, 3631, 4210, 3961, 4299, 3502,
            4163, 3915, 4284, 3730, 4241, 3992, 4316, 3424, 4124, 3876, 4276, 
           3691, 4228, 3979, 4310, 3562, 4187}], 
          LineBox[{3536, 3346, 4065, 3817, 3632, 3503, 3425, 4125, 3877}], 
          
          LineBox[{3388, 4099, 3851, 4271, 3666, 4219, 3970, 4304, 3537, 4177,
            3929, 4289, 3744, 4249, 4000, 4320, 3347, 4066, 3818, 4266, 3633, 
           4211, 3962, 4300, 3504, 4164}], 
          LineBox[{3350, 4069, 3821, 3636, 3507, 4379}], 
          
          LineBox[{3900, 3715, 3392, 4101, 3853, 3668, 4220, 3971, 3539, 4178,
            3930, 4290, 3745, 4250, 4001, 4321, 3351, 4070, 3822, 4267, 3637, 
           4212}], 
          LineBox[{3353, 4357}], 
          LineBox[{3354, 4072, 3824, 3639, 3510, 3432, 4371}], 
          
          LineBox[{3541, 3355, 4073, 3825, 3640, 3511, 4166, 3918, 3733, 3433,
            4131, 3883}], 
          
          LineBox[{3397, 4104, 3856, 4272, 3671, 4221, 3972, 3542, 4179, 3931,
            3746, 4251, 4002, 3356, 4074, 3826, 3641, 4213, 3964, 3512, 4167, 
           3919}], 
          LineBox[{3543, 3359, 4076, 3828, 3643, 3514, 3436, 4133, 3885}], 
          
          LineBox[{4106, 3858, 3673, 3544, 3360, 4077, 3829, 3644, 3515, 4168,
            3920, 3735}], 
          
          LineBox[{3904, 4282, 3719, 4238, 3989, 4314, 3402, 4107, 3859, 4273,
            3674, 4222, 3973, 4305, 3545, 4180, 3932, 4291, 3747, 4252, 4003, 
           4322, 3361, 4078, 3830, 4268, 3645}], 
          
          LineBox[{4109, 3861, 3676, 3547, 3364, 4081, 3833, 3648, 3519, 4170,
            3922, 3737}], 
          
          LineBox[{4154, 3906, 4283, 3721, 4239, 3990, 4315, 3406, 4110, 3862,
            4274, 3677, 4223, 3974, 4306, 3548, 4181, 3933, 4292, 3748, 4253, 
           4004, 4323, 3365, 4082, 3834, 4269, 3649}], 
          
          LineBox[{3366, 4083, 3835, 3650, 3521, 3443, 4138, 3890, 3705, 
           4396}], 
          LineBox[{3679, 3550, 3367, 4084, 3836, 3651, 3522, 4380}], 
          LineBox[{4016, 3768, 3583, 3454, 3376, 4358}], 
          LineBox[{4017, 3769, 3584, 3455, 3377, 4359}], 
          LineBox[{4020, 3772, 3587, 3458, 3380, 4361}], 
          
          LineBox[{3593, 4200, 3951, 3464, 4145, 3897, 3712, 3386, 4097, 3849,
            3664, 4218, 3969, 3535, 4176, 3928, 4288, 3743, 4248}], 
          
          LineBox[{3467, 4147, 3899, 3714, 3389, 4100, 3852, 3667, 3538, 
           3348}], 
          LineBox[{4030, 3782, 3597, 3468, 3390, 4362}], 
          
          LineBox[{4203, 3954, 3471, 4149, 3901, 3716, 3393, 4102, 3854, 3669,
            3540, 3352}], 
          LineBox[{3787, 3602, 3473, 3395, 4365}], 
          
          LineBox[{4036, 3788, 3603, 3474, 4150, 3902, 3717, 3396, 4103, 3855,
            3670, 4394}], 
          
          LineBox[{4043, 3795, 3610, 3481, 4153, 3905, 3720, 3403, 4108, 3860,
            3675, 3546, 4382}], 
          LineBox[{4044, 3796, 3611, 3482, 3404, 4367}], 
          
          LineBox[{3614, 3485, 4155, 3907, 3722, 3407, 4111, 3863, 3678, 3549,
            4383}], 
          
          LineBox[{3723, 3409, 4113, 3865, 3680, 4224, 3975, 4307, 3551, 
           4182}], 
          LineBox[{3495, 3417, 4121, 3873, 3688, 3559, 4385}], 
          LineBox[{3812, 3627, 3498, 3420, 4368}], 
          LineBox[{3422, 4122, 3874, 3689, 4227, 3978, 4309, 3560, 4185}], 
          
          LineBox[{4067, 3819, 3634, 3505, 3427, 4127, 3879, 3694, 3565, 
           4386}], 
          LineBox[{4068, 3820, 3635, 3506, 3428, 4370}], 
          LineBox[{3823, 3638, 3509, 3431, 4130, 3882, 3697, 3568, 4387}], 
          LineBox[{4075, 3827, 3642, 3513, 3435, 4372}], 
          
          LineBox[{4214, 3965, 4302, 3516, 4169, 3921, 3736, 4245, 3996, 3438,
            4135, 3887, 3702, 4232, 3983, 3573, 4193, 3944, 3760, 4399}], 
          LineBox[{4079, 3831, 3646, 3517, 3439, 4373}], 
          LineBox[{4080, 3832, 3647, 3518, 3440, 4374}], 
          LineBox[{4058, 3810, 3625, 3496, 3418}]}, 
         Annotation[#, "Charting`Private`Tag$198010#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[{4587, 5209, 5015, 4861, 4749, 5505}], 
          LineBox[{5305, 5111, 4957, 4845, 4588, 5210, 5016, 4862, 4750}], 
          LineBox[{4591, 5213, 5019, 4865, 4753, 4680}], 
          LineBox[{4718, 4592, 5214, 5020, 4866, 5516}], 
          LineBox[{4593, 5473}], 
          LineBox[{4594, 4595, 4596, 5215, 5021, 4867, 5517}], 
          
          LineBox[{5113, 4959, 4847, 4599, 5218, 5024, 4870, 4758, 5322, 5128,
            4974}], 
          
          LineBox[{5333, 5139, 4985, 5389, 5194, 4722, 5308, 5114, 4960, 5380,
            5185, 4848, 5354, 5159, 5423, 5006, 5398, 5203, 5443, 4600, 5219, 
           5025, 5404}], 
          
          LineBox[{4601, 5220, 5026, 4872, 4760, 4687, 5288, 5094, 4940, 4828,
            5511}], 
          LineBox[{4602, 5221, 5027, 4873, 4761, 4688}], 
          
          LineBox[{5160, 5424, 5007, 5399, 5204, 4603, 5222, 5028, 4874, 
           4762}], 
          
          LineBox[{5175, 4799, 5336, 5142, 4988, 5390, 5195, 4726, 5311, 5117,
            4963, 5382, 5187, 4851, 5356, 5161, 5425, 5008, 5400, 5205, 5444, 
           4604, 5223, 5029}], 
          LineBox[{4606, 5225, 5031, 4877, 4765, 5506}], 
          LineBox[{4607, 5474}], 
          LineBox[{4609, 5227, 5033, 4879, 4767, 4694, 5292, 5098}], 
          
          LineBox[{4730, 5313, 5119, 4965, 5383, 5188, 4853, 5357, 5162, 5426,
            5009, 5401, 5206, 5445, 4610, 5228, 5034, 5406, 4880, 5365, 5170, 
           5430, 4768}], 
          
          LineBox[{5339, 5145, 4991, 4731, 5314, 5120, 4966, 4854, 5358, 5163,
            5010, 4611, 5229, 5035, 5525}], 
          LineBox[{4612, 5230, 5036, 4882, 4770, 4697, 5487}], 
          LineBox[{4613, 5696, 4614, 4615, 5231}], 
          
          LineBox[{4967, 4855, 5359, 5164, 5011, 4617, 5233, 5039, 4885, 5366,
            5171, 4773, 5327, 5133, 5417, 4979, 5388, 5193}], 
          
          LineBox[{5418, 4993, 5391, 5196, 4735, 5316, 5122, 4968, 4856, 5360,
            5165, 5012, 4618, 5234, 5040, 5407, 4886, 5367}], 
          LineBox[{4620, 4621, 4622, 5475}], 
          LineBox[{4623, 4624, 5236, 5042, 4888, 4776, 4703, 5490}], 
          LineBox[{4625, 5237, 5043, 4889, 4777, 4704}], 
          
          LineBox[{4994, 4738, 5317, 5123, 4969, 4857, 4626, 5238, 5044, 4890,
            5518}], 
          
          LineBox[{5433, 4812, 5343, 5149, 5419, 4995, 5392, 5197, 5441, 4739,
            5318, 5124, 5413, 4970, 5384, 5189, 5436, 4858, 5361, 5166, 5427, 
           5013, 5402, 5207, 4627, 5239}], 
          LineBox[{4859, 4628, 5240, 5046, 4892, 4780, 4707, 5301, 5107}], 
          LineBox[{4741, 4629, 5241, 5047, 4893, 4781, 5331, 5137}], 
          LineBox[CompressedData["
1:eJwVz7kuRHEYhvG/xgVgbCMYeq6A2XABU0moJNYIBZU9kdhFJxH7DVgLY+t1
9sJ+AVQSKoXfFE/e8z7vl5NzYh2DmYG8EMIA6iIhLBeGEJGZohAaCkJYl09c
HNf6DIoxwme5Sqy43+M60YgN2zOfwI0+iwk3JXLUdspXYV/vwpAtLjdtL3wS
t/ocJm2lcsx2xlfjQO/GsC0ht2yvfAp3+jzKMM6fczEc6tPue2QS27Y3Po17
fQHlue/kL7gaHOm9OOF+9DZ86inscO96Ex70RUx5fzT3zbZLvhbHeh+y3K/e
jq/cv7lNy13+g2vGo76EKy4fa276+T/uW6/Hqh7lWz23yArbPw/mQUQ=
           "]], 
          
          LineBox[{5282, 5088, 4934, 4822, 4637, 5248, 5054, 4900, 4788, 
           5508}], 
          
          LineBox[{5127, 4973, 4677, 5283, 5089, 4935, 4823, 4638, 5249, 5055,
            4901}], 
          LineBox[{4639, 5476}], 
          
          LineBox[{5284, 5090, 4936, 4824, 4641, 5251, 5057, 4903, 4791, 
           5509}], 
          LineBox[{4754, 4681, 4642, 5477}], 
          LineBox[{4937, 4825, 4645, 5254, 5060, 4906, 4794, 4721}], 
          
          LineBox[{4685, 5286, 5092, 4938, 4826, 5345, 5151, 4997, 4646, 5255,
            5061, 4907, 4795}], 
          
          LineBox[{5168, 5428, 4759, 5323, 5129, 5414, 4975, 5385, 5190, 5437,
            4686, 5287, 5093, 5410, 4939, 5374, 5179, 4827, 5346, 5152, 4998, 
           5393, 5198, 4647, 5256}], 
          LineBox[{4648, 5257, 5063, 4909, 4797, 4724, 5496}], 
          
          LineBox[{5289, 5095, 4941, 4829, 4649, 5258, 5064, 4910, 4798, 5335,
            5141, 4987}], 
          
          LineBox[{5130, 4976, 4689, 5290, 5096, 4942, 4830, 5347, 5153, 4999,
            4650, 5259, 5065, 4911, 5370}], 
          
          LineBox[{4651, 5260, 5066, 4912, 4800, 5337, 5143, 4989, 4727, 5312,
            5118, 4964, 4852, 5515}], 
          LineBox[{4692, 4653, 5478}], 
          
          LineBox[{4944, 4832, 4655, 5263, 5069, 4915, 4803, 5338, 5144, 4990,
            5522}], 
          
          LineBox[{5416, 4978, 5387, 5192, 5439, 4695, 5293, 5099, 5412, 4945,
            5376, 5181, 4833, 5349, 5155, 5001, 5394, 5199, 4656, 5264, 5070, 
           4916, 5371}], 
          LineBox[{4658, 5480}], 
          LineBox[{4659, 5266, 5072, 4918, 4806, 4733, 5500}], 
          
          LineBox[{4835, 4660, 5267, 5073, 4919, 4807, 5340, 5146, 4992, 4734,
            5315, 5121}], 
          
          LineBox[{4700, 5296, 5102, 4948, 5377, 5182, 4836, 5350, 5156, 5420,
            5002, 5395, 5200, 5442, 4661, 5268, 5074, 5408, 4920, 5372, 5177, 
           5432, 4808, 5341, 5147}], 
          
          LineBox[{4774, 5328, 5134, 4980, 4701, 5297, 5103, 4949, 4837, 4662,
            5269, 5075}], 
          LineBox[{4663, 5481}], 
          
          LineBox[{5298, 5104, 4950, 4838, 4665, 5271, 5077, 4923, 4811, 5342,
            5148, 5531}], 
          
          LineBox[{5329, 5135, 4981, 4705, 5299, 5105, 4951, 5378, 5183, 4839,
            5351, 5157, 5421, 5003, 5396, 5201, 4666, 5272, 5078, 5409, 
           4924}], 
          
          LineBox[{4667, 5273, 5079, 4925, 4813, 5344, 5150, 4996, 4740, 5319,
            5125, 4971, 5521}], 
          LineBox[{4953, 4841, 4668, 5274, 5080, 4926, 4814, 5510}], 
          LineBox[{5211, 5017, 4863, 4751, 4678, 5482}], 
          LineBox[{5212, 5018, 4864, 4752, 4679, 5483}], 
          LineBox[{4755, 4682, 4643}], 
          LineBox[{5216, 5022, 4868, 4756, 4683, 5484}], 
          LineBox[{5217, 5023, 4869, 4757, 4684, 5285, 5091}], 
          
          LineBox[{5405, 4875, 5364, 5169, 5429, 4763, 5325, 5131, 5415, 4977,
            5386, 5191, 5438, 4690, 5291, 5097, 5411, 4943, 5375, 5180, 4831, 
           5348, 5154, 5000, 5523}], 
          LineBox[{5224, 5030, 4876, 4764, 4691, 5485}], 
          LineBox[{5226, 5032, 4878, 4766, 4693, 5486}], 
          LineBox[{4881, 4769, 4696, 5294, 5100, 4946, 4834, 4657}], 
          LineBox[{5037, 4883, 4771, 4698, 5488}], 
          LineBox[{5232, 5038, 4884, 4772, 4699, 5295, 5101, 4947, 5520}], 
          LineBox[{5041, 4887, 4775, 4702, 5489}], 
          
          LineBox[{5045, 4891, 5368, 5173, 4779, 5330, 5136, 4982, 4706, 5300,
            5106, 4952, 4840, 5352, 5158, 5004}], 
          
          LineBox[{4983, 4708, 5302, 5108, 4954, 5379, 5184, 5434, 4842, 
           5353}], 
          
          LineBox[{4789, 5332, 5138, 4984, 4716, 5306, 5112, 4958, 4846, 
           5513}], 
          LineBox[{5250, 5056, 4902, 4790, 4717, 5493}], 
          LineBox[{5252, 5058, 4904, 4792, 4719, 5494}], 
          LineBox[{5253, 5059, 4905, 4793, 4720, 5495}], 
          
          LineBox[{5062, 4908, 5369, 5174, 4796, 5334, 5140, 4986, 4723, 5309,
            5115, 4961, 4849, 5514}], 
          LineBox[{4725, 5310, 5116, 4962, 5381, 5186, 5435, 4850, 5355}], 
          LineBox[{5261, 5067, 4913, 4801, 4728, 5497}], 
          LineBox[{5262, 5068, 4914, 4802, 4729, 5498}], 
          LineBox[{5071, 4917, 4805, 4732, 5499}], 
          LineBox[{4921, 4809, 4736, 4619}], 
          LineBox[{5270, 5076, 4922, 4810, 4737, 5501}]}, 
         Annotation[#, "Charting`Private`Tag$198010#5"]& ], {
         Directive[{
           Opacity[0.2], 
           Hue[0.67, 0.6, 0.6]}], 
         LineBox[{552, 603, 551}], 
         LineBox[{560, 608, 559}], 
         LineBox[{490, 609, 256}], 
         LineBox[{566, 612, 565}], 
         LineBox[{580, 619, 579}], 
         LineBox[{585, 622, 30}], 
         LineBox[{597, 628, 596}], 
         LineBox[{601, 630, 600}], 
         LineBox[{550, 632, 117}], 
         LineBox[{634, 1895, 633}], 
         LineBox[{636, 1896, 635}], 
         LineBox[{638, 1897, 637}], 
         LineBox[{640, 1898, 639}], 
         LineBox[{642, 1899, 641}], 
         LineBox[{644, 1900, 643}], 
         LineBox[{646, 1901, 645}], 
         LineBox[{648, 1902, 647}], 
         LineBox[{650, 1903, 649}], 
         LineBox[{652, 1904, 651}], 
         LineBox[{654, 1905, 653}], 
         LineBox[{656, 1906, 655}], 
         LineBox[{657, 1907, 9}], 
         LineBox[{659, 1908, 658}], 
         LineBox[{661, 1909, 660}], 
         LineBox[{662, 1910, 56}], 
         LineBox[{663, 1911, 57}], 
         LineBox[{665, 1912, 664}], 
         LineBox[{666, 1913, 11}], 
         LineBox[{667, 1914, 12}], 
         LineBox[{669, 1915, 668}], 
         LineBox[{671, 1916, 670}], 
         LineBox[{673, 1917, 672}], 
         LineBox[{675, 1918, 674}], 
         LineBox[{677, 1919, 676}], 
         LineBox[{679, 1920, 678}], 
         LineBox[{681, 682, 680}], 
         LineBox[{684, 685, 683}], 
         LineBox[{1985, 2053, 1984}], 
         LineBox[{1987, 2054, 1986}], 
         LineBox[{1988, 2055, 1762}], 
         LineBox[{1806, 2056, 1269}], 
         LineBox[{1990, 2057, 1989}], 
         LineBox[{1991, 2058, 1331}], 
         LineBox[{1992, 2059, 1354}], 
         LineBox[{1853, 2060, 1396}], 
         LineBox[{1993, 2061, 1628}], 
         LineBox[{1994, 2062, 1687}], 
         LineBox[{1996, 2063, 1995}], 
         LineBox[{1998, 2064, 1997}], 
         LineBox[{2000, 2065, 1999}], 
         LineBox[{1877, 2066, 803}], 
         LineBox[{1880, 2067, 832}], 
         LineBox[{2001, 2068, 721}], 
         LineBox[{2003, 2069, 2002}], 
         LineBox[{2005, 2070, 2004}], 
         LineBox[{2006, 2071, 1929}], 
         LineBox[{1930, 2072, 1537}], 
         LineBox[{2008, 2073, 2007}], 
         LineBox[{2010, 2074, 2009}], 
         LineBox[{2012, 2075, 2011}], 
         LineBox[{2013, 2076, 1935}], 
         LineBox[{2015, 2077, 2014}], 
         LineBox[{2016, 2078, 704}], 
         LineBox[{2018, 2079, 2017}], 
         LineBox[{2019, 2080, 722}], 
         LineBox[{2021, 2081, 2020}], 
         LineBox[{2023, 2082, 2022}], 
         LineBox[{2024, 2083, 1949}], 
         LineBox[{2026, 2084, 2025}], 
         LineBox[{2028, 2085, 2027}], 
         LineBox[{1953, 2086, 1658}], 
         LineBox[{2029, 2087, 760}], 
         LineBox[{2030, 2088, 764}], 
         LineBox[{2032, 2089, 2031}], 
         LineBox[{2033, 2090, 1958}], 
         LineBox[{2035, 2091, 2034}], 
         LineBox[{2037, 2092, 2036}], 
         LineBox[{2039, 2093, 2038}], 
         LineBox[{2041, 2094, 2040}], 
         LineBox[{2042, 2095, 1964}], 
         LineBox[{2043, 2096, 1965}], 
         LineBox[{1966, 2097, 1798}], 
         LineBox[{2044, 2098, 1967}], 
         LineBox[{2045, 2099, 1968}], 
         LineBox[{1971, 2100, 1825}], 
         LineBox[{2046, 2101, 1972}], 
         LineBox[{2047, 2102, 1973}], 
         LineBox[{1975, 2103, 1867}], 
         LineBox[{2048, 2104, 1976}], 
         LineBox[{2049, 2105, 1977}], 
         LineBox[{1978, 2106, 1387}], 
         LineBox[{1979, 2107, 1415}], 
         LineBox[{2050, 2108, 1980}], 
         LineBox[{2051, 2109, 1981}], 
         LineBox[{2052, 2110, 1983}], 
         LineBox[{2112, 3014, 2111}], 
         LineBox[{2114, 3015, 2113}], 
         LineBox[{2115, 3016, 1019}], 
         LineBox[{2116, 3017, 1754}], 
         LineBox[{2117, 3018, 1129}], 
         LineBox[{2118, 3019, 1350}], 
         LineBox[{2119, 3020, 1608}], 
         LineBox[{2120, 3021, 1729}], 
         LineBox[{2121, 3022, 1802}], 
         LineBox[{1889, 3023, 688}], 
         LineBox[{2123, 3024, 2122}], 
         LineBox[{2125, 3025, 2124}], 
         LineBox[{2127, 3026, 2126}], 
         LineBox[{2129, 3027, 2128}], 
         LineBox[{2130, 3028, 694}], 
         LineBox[{2132, 3029, 2131}], 
         LineBox[{2133, 3030, 1933}], 
         LineBox[{2135, 3031, 2134}], 
         LineBox[{1956, 3032, 1670}], 
         LineBox[{1970, 3033, 1817}], 
         LineBox[{1974, 3034, 1856}], 
         LineBox[{1982, 3035, 1084}], 
         LineBox[{2137, 2138, 2136}], 
         LineBox[{2140, 2141, 2139}], 
         LineBox[{3100, 3179, 3099}], 
         LineBox[{3101, 3180, 2793}], 
         LineBox[{3103, 3181, 3102}], 
         LineBox[{3105, 3182, 3104}], 
         LineBox[{3106, 3183, 2878}], 
         LineBox[{3108, 3184, 3107}], 
         LineBox[{3109, 3185, 2959}], 
         LineBox[{3111, 3186, 3110}], 
         LineBox[{2973, 3187, 2650}], 
         LineBox[{3112, 3188, 2758}], 
         LineBox[{3114, 3189, 3113}], 
         LineBox[{3115, 3190, 2823}], 
         LineBox[{3116, 3191, 2883}], 
         LineBox[{3118, 3192, 3117}], 
         LineBox[{3119, 3193, 2728}], 
         LineBox[{2981, 3194, 2533}], 
         LineBox[{3120, 3195, 2178}], 
         LineBox[{3122, 3196, 3121}], 
         LineBox[{3123, 3197, 2165}], 
         LineBox[{3125, 3198, 3124}], 
         LineBox[{3127, 3199, 3126}], 
         LineBox[{3129, 3200, 3128}], 
         LineBox[{3131, 3201, 3130}], 
         LineBox[{3133, 3202, 3132}], 
         LineBox[{3135, 3203, 3134}], 
         LineBox[{3136, 3204, 2218}], 
         LineBox[{3138, 3205, 3137}], 
         LineBox[{3140, 3206, 3139}], 
         LineBox[{3141, 3207, 2163}], 
         LineBox[{3143, 3208, 3142}], 
         LineBox[{3144, 3209, 2171}], 
         LineBox[{3146, 3210, 3145}], 
         LineBox[{3147, 3211, 2176}], 
         LineBox[{3149, 3212, 3148}], 
         LineBox[{3151, 3213, 3150}], 
         LineBox[{3153, 3214, 3152}], 
         LineBox[{3154, 3215, 3072}], 
         LineBox[{3155, 3216, 2261}], 
         LineBox[{3157, 3217, 3156}], 
         LineBox[{3158, 3218, 2296}], 
         LineBox[{3160, 3219, 3159}], 
         LineBox[{3081, 3220, 2179}], 
         LineBox[{3161, 3221, 3084}], 
         LineBox[{3163, 3222, 3162}], 
         LineBox[{3165, 3223, 3164}], 
         LineBox[{3166, 3224, 2385}], 
         LineBox[{3168, 3225, 3167}], 
         LineBox[{3170, 3226, 3169}], 
         LineBox[{3172, 3227, 3171}], 
         LineBox[{3174, 3228, 3173}], 
         LineBox[{3175, 3229, 3093}], 
         LineBox[{3176, 3230, 3094}], 
         LineBox[{3178, 3231, 3177}], 
         LineBox[{3098, 3232, 2291}], 
         LineBox[{3234, 4327, 3233}], 
         LineBox[{3236, 4328, 3235}], 
         LineBox[{3238, 4329, 3237}], 
         LineBox[{3240, 4330, 3239}], 
         LineBox[{3242, 4331, 3241}], 
         LineBox[{3243, 4332, 2399}], 
         LineBox[{3245, 4333, 3244}], 
         LineBox[{3247, 4334, 3246}], 
         LineBox[{3248, 4335, 2574}], 
         LineBox[{3250, 4336, 3249}], 
         LineBox[{3251, 4337, 2145}], 
         LineBox[{3253, 4338, 3252}], 
         LineBox[{3255, 4339, 3254}], 
         LineBox[{3256, 4340, 2195}], 
         LineBox[{3258, 4341, 3257}], 
         LineBox[{3260, 4342, 3259}], 
         LineBox[{3261, 4343, 2152}], 
         LineBox[{3263, 4344, 3262}], 
         LineBox[{3264, 4345, 3069}], 
         LineBox[{3265, 4346, 2241}], 
         LineBox[{3267, 4347, 3266}], 
         LineBox[{3269, 4348, 3268}], 
         LineBox[{3271, 4349, 3270}], 
         LineBox[{3273, 4350, 3272}], 
         LineBox[{3275, 4351, 3274}], 
         LineBox[{3277, 4352, 3276}], 
         LineBox[{3279, 3281, 3278}], 
         LineBox[{3280, 3282, 2711}], 
         LineBox[{4410, 4484, 4409}], 
         LineBox[{4412, 4485, 4411}], 
         LineBox[{4414, 4486, 4413}], 
         LineBox[{4415, 4487, 3385}], 
         LineBox[{4417, 4488, 4416}], 
         LineBox[{4418, 4489, 3437}], 
         LineBox[{4420, 4490, 4419}], 
         LineBox[{4421, 4491, 3799}], 
         LineBox[{4422, 4492, 3916}], 
         LineBox[{4424, 4493, 4423}], 
         LineBox[{4301, 4494, 3963}], 
         LineBox[{4425, 4495, 3999}], 
         LineBox[{4426, 4496, 4071}], 
         LineBox[{4427, 4497, 4148}], 
         LineBox[{4428, 4498, 4152}], 
         LineBox[{4430, 4499, 4429}], 
         LineBox[{4431, 4500, 4215}], 
         LineBox[{4432, 4501, 4312}], 
         LineBox[{4433, 4502, 4313}], 
         LineBox[{4435, 4503, 4434}], 
         LineBox[{4436, 4504, 3349}], 
         LineBox[{4438, 4505, 4437}], 
         LineBox[{4440, 4506, 4439}], 
         LineBox[{4442, 4507, 4441}], 
         LineBox[{4443, 4508, 3358}], 
         LineBox[{4444, 4509, 3363}], 
         LineBox[{4446, 4510, 4445}], 
         LineBox[{4447, 4511, 3312}], 
         LineBox[{4449, 4512, 4448}], 
         LineBox[{4450, 4513, 3320}], 
         LineBox[{4452, 4514, 4451}], 
         LineBox[{4453, 4515, 3401}], 
         LineBox[{4455, 4516, 4454}], 
         LineBox[{4457, 4517, 4456}], 
         LineBox[{4458, 4518, 3362}], 
         LineBox[{4460, 4519, 4459}], 
         LineBox[{4461, 4520, 3304}], 
         LineBox[{4463, 4521, 4462}], 
         LineBox[{4464, 4522, 4389}], 
         LineBox[{4466, 4523, 4465}], 
         LineBox[{4467, 4524, 3501}], 
         LineBox[{4469, 4525, 4468}], 
         LineBox[{4471, 4526, 4470}], 
         LineBox[{4473, 4527, 4472}], 
         LineBox[{4475, 4528, 4474}], 
         LineBox[{4476, 4529, 3319}], 
         LineBox[{4477, 4530, 4400}], 
         LineBox[{4478, 4531, 3600}], 
         LineBox[{4479, 4532, 4402}], 
         LineBox[{4480, 4533, 4403}], 
         LineBox[{4404, 4534, 3698}], 
         LineBox[{4481, 4535, 4405}], 
         LineBox[{4482, 4536, 4407}], 
         LineBox[{4483, 4537, 3484}], 
         LineBox[{4539, 5448, 4538}], 
         LineBox[{4541, 5449, 4540}], 
         LineBox[{4543, 5450, 4542}], 
         LineBox[{4545, 5451, 4544}], 
         LineBox[{4547, 5452, 4546}], 
         LineBox[{4549, 5453, 4548}], 
         LineBox[{4550, 5454, 4240}], 
         LineBox[{4552, 5455, 4551}], 
         LineBox[{4554, 5456, 4553}], 
         LineBox[{4555, 5457, 4144}], 
         LineBox[{4557, 5458, 4556}], 
         LineBox[{4558, 5459, 3286}], 
         LineBox[{4560, 5460, 4559}], 
         LineBox[{4561, 5461, 3294}], 
         LineBox[{4563, 5462, 4562}], 
         LineBox[{4565, 5463, 4564}], 
         LineBox[{4567, 5464, 4566}], 
         LineBox[{4568, 5465, 3339}], 
         LineBox[{4570, 5466, 4569}], 
         LineBox[{4572, 5467, 4571}], 
         LineBox[{4574, 5468, 4573}], 
         LineBox[{4576, 5469, 4575}], 
         LineBox[{4577, 5470, 3285}], 
         LineBox[{4579, 5471, 4578}], 
         LineBox[{4581, 4582, 4580}], 
         LineBox[{4585, 4586, 4584}], 
         LineBox[{5533, 5599, 5532}], 
         LineBox[{5534, 5600, 5235}], 
         LineBox[{5536, 5601, 5535}], 
         LineBox[{5537, 5602, 5324}], 
         LineBox[{5539, 5603, 5538}], 
         LineBox[{5541, 5604, 5540}], 
         LineBox[{5543, 5605, 5542}], 
         LineBox[{5431, 5606, 5172}], 
         LineBox[{5176, 5607, 4804}], 
         LineBox[{5545, 5608, 5544}], 
         LineBox[{5326, 5609, 5132}], 
         LineBox[{5547, 5610, 5546}], 
         LineBox[{5373, 5611, 5178}], 
         LineBox[{5548, 5612, 5440}], 
         LineBox[{5549, 5613, 4608}], 
         LineBox[{5551, 5614, 5550}], 
         LineBox[{5553, 5615, 5552}], 
         LineBox[{5479, 5616, 5265}], 
         LineBox[{5555, 5617, 5554}], 
         LineBox[{5557, 5618, 5556}], 
         LineBox[{5558, 5619, 4652}], 
         LineBox[{5559, 5620, 4654}], 
         LineBox[{5561, 5621, 5560}], 
         LineBox[{5563, 5622, 5562}], 
         LineBox[{5565, 5623, 5564}], 
         LineBox[{5566, 5624, 4664}], 
         LineBox[{5568, 5625, 5567}], 
         LineBox[{5570, 5626, 5569}], 
         LineBox[{5572, 5627, 5571}], 
         LineBox[{5573, 5628, 4616}], 
         LineBox[{5575, 5629, 5574}], 
         LineBox[{5577, 5630, 5576}], 
         LineBox[{5579, 5631, 5578}], 
         LineBox[{5580, 5632, 4605}], 
         LineBox[{5581, 5633, 4778}], 
         LineBox[{5583, 5634, 5582}], 
         LineBox[{5585, 5635, 5584}], 
         LineBox[{5587, 5636, 5586}], 
         LineBox[{5589, 5637, 5588}], 
         LineBox[{5590, 5638, 5524}], 
         LineBox[{5592, 5639, 5591}], 
         LineBox[{5593, 5640, 5526}], 
         LineBox[{5594, 5641, 5527}], 
         LineBox[{5595, 5642, 5528}], 
         LineBox[{5596, 5643, 5530}], 
         LineBox[{5598, 5644, 5597}], 
         LineBox[{5646, 5645}], 
         LineBox[{5648, 5647}], 
         LineBox[{5650, 5649}], 
         LineBox[{5652, 5651}], 
         LineBox[{5653, 5307}], 
         LineBox[{5655, 5654}], 
         LineBox[{5363, 4871}], 
         LineBox[{5657, 5656}], 
         LineBox[{5659, 5658}], 
         LineBox[{5661, 5660}], 
         LineBox[{5663, 5662}], 
         LineBox[{5664, 5321}], 
         LineBox[{5666, 5665}], 
         LineBox[{5667, 4590}], 
         LineBox[{5669, 5668}], 
         LineBox[{5671, 5670}], 
         LineBox[{5672, 4640}], 
         LineBox[{5673, 4644}], 
         LineBox[{5675, 5674}], 
         LineBox[{5676, 4597}], 
         LineBox[{5677, 4598}], 
         LineBox[{5679, 5678}], 
         LineBox[{5680, 4676}], 
         LineBox[{5681, 4715}], 
         LineBox[{5683, 5682}], 
         LineBox[{5685, 5684}], 
         LineBox[{5686, 4589}], 
         LineBox[{5688, 5687}], 
         LineBox[{5690, 5689}], 
         LineBox[{5692, 5691}], 
         LineBox[{5694, 5695, 5693}], 
         LineBox[{5698, 5699, 5697}]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"feedback solution \"", TraditionalForm], 
     PlotRange -> {{0., 9.24999981122449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8671660615225625`*^9, {3.867166324570427*^9, 3.8671663726690426`*^9}, {
   3.867166414450679*^9, 3.8671664778244085`*^9}, {3.867166592164838*^9, 
   3.8671666252322607`*^9}, 3.867166676085995*^9, 3.8671667158202868`*^9, 
   3.8678691711275473`*^9, 3.867869205596589*^9, 3.867869240931355*^9, 
   3.867869515658012*^9},
 CellLabel->
  "Out[457]=",ExpressionUUID->"69f9d224-6a08-4494-a341-385da10a22cf"]
}, Open  ]],

Cell[TextData[StyleBox["Animation with General Cart-Pendulum swing up",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
   3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
   3.7166267858131742`*^9}, 3.845482883460244*^9, {3.8454833355827293`*^9, 
   3.845483336286716*^9}, {3.847433954599126*^9, 3.847433968468281*^9}, {
   3.8474344191285405`*^9, 3.847434424821303*^9}},
 FontSize->16,
 FontWeight->"Bold",
 Background->GrayLevel[
  0.85],ExpressionUUID->"9719e215-e88a-44b4-8f52-1b89df776f4f"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"AnimatePendulum", "[", "rules_", "]"}], ":=", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"DrawSinglePendulum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "/.", "rules"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "rules"}], ",", "1", 
          ",", "1"}], "}"}], ",", "t"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"DrawSinglePendulum", "[", 
    RowBox[{"cart_", ",", 
     RowBox[{"{", 
      RowBox[{"angle1_", ",", "length1_", ",", "mass1_"}], "}"}], ",", "t_"}],
     "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"width1", ",", 
       RowBox[{"density", "=", "30"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"width1", "=", 
       RowBox[{
        RowBox[{"mass1", "/", "length1"}], "/", "density"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"cart", "-", 
                 RowBox[{"1", "/", "4"}]}], ",", 
                RowBox[{
                 RowBox[{"-", "1"}], "/", "15"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"cart", "+", 
                 RowBox[{"1", "/", "4"}]}], ",", 
                RowBox[{"1", "/", "15"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", 
            RowBox[{"Translate", "[", 
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "width1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"length1", ",", 
                    RowBox[{"-", "width1"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"angle1", "-", 
                 RowBox[{"\[Pi]", "/", "2"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"cart", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "2"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "280"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "Dashed"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<t\>\"", "\[Equal]", 
          RowBox[{"NumberForm", "[", 
           RowBox[{"t", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "2"}], "}"}]}], "]"}]}]}]}], "]"}]}]}], "]"}], 
   "    "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"anim", "=", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"DrawSinglePendulum", "[", 
       RowBox[{
        RowBox[{"x1overall", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]1overall", "[", "t", "]"}], ",", "1", ",", "1"}], 
         "}"}], ",", "t"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"Tperturb", "+", "\[Tau]1"}]}], "}"}], ",", 
     RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}], ",", 
     RowBox[{"AnimationRepetitions", "\[Rule]", "1"}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.867166573285879*^9, 3.8671665873423815`*^9}, {
  3.867166767829652*^9, 3.8671667848062234`*^9}},
 CellLabel->
  "In[458]:=",ExpressionUUID->"d67ff24d-f62c-4bc7-8dfb-bc795242ee27"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 9.25, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 9.25}}, Typeset`size$$ = {
    280., {146., 149.98193418979645`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{{
          RGBColor[0, 0, 1], 
          Rectangle[{Rational[-1, 4] + Piecewise[{{
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {2308}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1: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
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2gEraFG4oOEzZ1zjGmOMJEkykiRJkiRJkiRJkiRJkiS5kiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ85xZ9fyC99vttdfa/7f+v8pb/9ufP3/+4z//
/P/1lwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375YxD+EkAgQQQTQihhhBNBJFFE
E0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU
00AjTTTTwr8hb6OdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZ
YpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155
450PPvnimx9++ffw/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vx3/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXfy/+vwQQSBDBhBBKGOFEEEkU0cQQSxzxJJBI
EsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBK
G+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrrbLDJ
FtvssMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyRff/PDL
n//QnwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375t+n/SwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8+R/6E0AgQQQTQihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0Em
WWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitttNNBJ11000Mv
ffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8Ah
RxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy//Pvj/EkAgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy9//lN/AggkiGBCCCWMcCKIJIpoYogljngSSCSJ
ZFJIJY10Msgki2xyyCWPfAoopIhiSiiljHIqqKSKamqopY56GmikiWZaaKWN
djropItueuilj34GGGSIYUYYZYxxJphkimlmmGWOeRZYZIllVlhljXU22GSL
bXbYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ1545Y13Pvjki29++P13
/hesPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy53/qTwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8O+j/SwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8+V/6E0AgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy//Lvn+EkAgQQQTQihhhBNBJFFEE0MsccSTQCJJ
JJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitt
tNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZb
bLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy9/
/rf+BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQ
SBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4ww
yhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77HHDIEceccMoZ51xw
yRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Mu/C/6/BBBIEMGEEEoY4UQQSRTR
xBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31
NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLL
rLDKGutssMkW2+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvv
fPDJF9/88Muf/6M/AQQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSS
RTY55JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3PfTS
Rz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjobbLLFNjvsssc+Bxxy
xDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//PLv556/BBBIEP8P
Ze/F7A==
                  "], CompressedData["
1:eJw813c81e8XAHArEUX6GiVZqawio6lTIaVBMlKyK6GiklFEZolQ2Rr2LCN7
fFzucJcVEqUSKWRElFG/45/f/e/9etZ5zue5n895ZO2vmpzn5ODg4BPh+P9P
eF+s6UeRXrA2aW7dJsQHN7W/W61c3Qujbh0021USIC90+N4eoV7wi3xcUltz
EmxaNl2bGuqBhhPeTwMnbEE0nrPuR30PuEsUWPyacQKTnXOlSok9oLH9km6r
kCfsncrfvlWzB26kjT/orPUH7jWMuNWt72DHppsFAx+DITk1eaL78jv4G+DR
cXPsPihrrCkNXfkOUkdlL8YejoJtlW/5GKndYHi4IznCNAr+k92tz/uiG5TT
ZGYDbaPgxD/blwefdYPH4vqb3q5RoPOiVe9OSjfUWXxce8UrCox77vHVJHUD
T4lvv11QFJTdjvjzO6EbCq88rTVIjoKqZSra12O74fTBjypKr6Mg7CzflrGY
bnhuOKHGz4qC/f0bWy497IasxKS5mvkoiHm3W8chrBsup9KlHZSj4cbZZH+b
gG6YvXNg12qVaHA/NPJJHx0vyW1CoJO3Fu1SQVvdXOV8WTUaPvQmx4igjaId
AiS3RoOF1suR3/7d4HuZK56Ovqg7qPcRfT73TaOCWjTcbHo6m4eOm2aOBqhH
Q4rseK4X2t10RKRvezRsO9FlrY/Wboieurkf52Prh+j5dYNSw/PyVSeiof7a
i2+6t7tB7+tOm4yz0eD7aDhY16cbJAd8hndfigbvQDlrXa9u2F+Ya9s5EQ3A
rvU54dgN1pYdJzm9YiDlhUiqmzHmc/y7DvE3BiwyKrpz9qIpv9KFgh9Bff+o
3NyWbrhFlVg+teIxHL4cHWQn2g2l0tUSb7cmgCVndLWD+VvQZirrHFd6Chd7
fNvcn3fBAeOq8Iw7LyDa+LFr8FQnjFfdaP38Ng34Y98YPzDqhOmJBbP2DZlg
EnfO9tLrDmB9pT6dkc4Ept1A4Xp0r635l3WymXCCTuFuLemA93558iCXCRnx
X08Hou/bUm0c5DNBmHGoUBv9XCErLnRjJrRafOUfLu4A4bLpvy2bMqFsXTrJ
GP2z7YyZhGIm/Nhvc7e8qAMkPHsSbZUz4XOE+LEN6Ce+W4q2HcwEnuWhkhvz
OkDocJn679OZsI+1+rJqRgeUfTonU3U1ExL2c+3f/awDBLIX/D1CMoGR8vyR
YUIHZJG019g7ZUHohwO9BdYdIDZ/f/0n1yx46PvULvhcB5yf9x84554FwzM+
AuesOkA8Xsal1wPbpXu7Nc92gJes0/JBdG3gkPV29MM7L9PG0Drrfw9sQ58t
noLfaDcLfhdVdF/ljvecN7PwfElOKqElYn28BNBjpaqeW9Bzs4uFG9CBC6cC
5dGV+be/q6O/sG8/3IC2eD0jq48WUMpOWotObq00W+aZBbcfD4p+O9MBDKGc
UApa7KTMnTJ0THxjebBXFlQkh7OC0Oa9fF/1vbMg1Thywym0C+WfEc0/C2zN
DO7Zn8Z8a3/iOhyWBd2OehbXzDvAm9n8l/YwC6yGfcPumnaATNSHzOc9OJ6t
Wb/rQAcoqXDf3K6QDZfjvyWIb+0AptGPP75Xs8HRM2VGUrIDBEMu1wdWZkPk
g5iyQ3wdYHj5mtr35Fw4zUFPPfXwDXRIUUzXeOTD9svL9anr38D1wdbTyQdf
gnlGlPL1wnbIMkkSWsldCPq+F72UDduh0sPr16pPhZAidNW69nsb2Hw+e8Gr
vQg8WxcDrILa4Mz8tmtMtJT+/ce70Ux9B98Nb4pAU8wgRwL9kPwr1B19MKWj
biawDYJuDUWT0avebu/sQIde2Zkk3lEEVvV2o8Voh474/Fq00Tfb9VfRdkdu
Vjt0FsFCVaqRMtp1tJXG31UEu9ZtDhm62wa8cmcqg98XgYLJvTMH/dvgTsSJ
Qo4vRVCx4HPjqW8bhKhvKvD5XgQ/fOPezPu0wXcXy8Kp8SLQrfX2POPVBq+P
cLP6F4rgwVxZuOT1Nqje4b52Ea3BZTMgjG4Xa7kgvlgE4iWSOrxoiaH1r9XR
VJMfT+avtcHL7DOcx9Dyn9+MTaCLzoaduIAWs24x+IruTG/8lojm1pr404p+
9brubgu6hOKYX43e+8B7Pc/fIuhbpWqTiRYqmRMS4SgG4uu8a5t7G2S42A5L
cxVD0kuernm3NvCXDD77krsYClQi5S3Ru8c21u1dVgzhvBtSyq62QV6BngiT
txi8vF0V/0Pv7Ry0sOTD/hEXmtyvtMEEb0m5h0AxiEo57FO93AYi3Qkfoleh
2wT+fXNpgxdJWfSC1cVgxWG2IsO5DbxSv9+i/1cM5v+229pdagOrL/Jr2jWK
4U9gcxnLqg38chuNyCbFsG67yaKpcRtMt+uff+5eDAaJv5fN6baBLF9XyIWo
YtjC/JRavaMNjrcfHxJ7VQyB7UKZCcoYb6vfgteHEgjL2MK1s6IVBiNTKSo8
pTB4b2XTJqNW+HSn6e8X+TKwHn9nZfOxBUKpK0t1dcphb1JLye7tLWD+gepW
j87feGh0Qr0FZGdPK+vsK4f2tK8KWWghWfJAJZr0vdX+HFrPiS9FG8ohqYsn
bQ168J2CaQk60PDuV7paCxxWWVOfv78cWj8J3dBG344+vznzQDlENDSsStvW
Ak+vSd1/drAc5FgJZUJoO55rTlbHymE2f0zspGILWLtuuy1uXg5OyhJP4uRb
oDB0lNpqUw4+pTtUv0i1QEXhfsOwS+XQ+cilV0OiBcI7LMK9XcohIGfCf7V4
C0weP1HlfLkcrgweOTMu2gJjlpvfnr1aDv5WXhfZ/7XAcq2vn4+5l8NZmRvZ
eWta4IBkZI/O9XKYPqgldV+kBUJulGVJe5bDSx+lKwbCLaCQz7VHEV0nk9h7
AM2vcrx5O1r81aoje9Hq00/s9qI1t4SVaaNf8HyY1kevecC7UR1teU4uzGhp
vp570croc89yXtqjbY4nusqgH3IpdXqgx53rDETRcyFp82FoDY0ZuRVoyqdv
Poe9yuFi0rnyRKEW+CV9e3a5dzkkpvYJKKHX5bhkPEMvE92xs2VVCyRffnZy
h085fJTMjr2BppRILDSjw9rH/qxFZ/m/Tb9wqxxSdy3YEStbYEZg0+ST2zg+
9/r+FejbjHBtim857CMJbTcTbIGtnvwe037lsLmgWfu5QAuMsJ7ly/uXw0zi
yxMjK1qg973LubnwctC1mLbo48Z8j8xZN8eVQ+2CYXv3QjPIesi9fpZWDm/P
xpX1/GoGQd1SmyuvyuEVqX7xy1gzHHIOdNxdjeePs+j59FAziP97Jp+mVgGK
C5MZiunN8Gb7xpBVGRVglEa2knFohmWW3e9DJCpB+1NOfe3GZrB7cFBELLwS
bMtJu4a+saHgjkE+ZaESnAy3Pb/7ig22ZbnP1u6phuJfEfpca9kwWdYZ+4yF
9r91hecdC7aM/M4ftaqBB6cfu1xIZoFUtTMt4lwN5H9LPbwRDfpOn7Za18DL
gV0q/UksmHo2OduC3tXDWPMcnfSZd5W7TQ2U3zH7dw4dL5MtJ2JbA4/C341J
oucpXEdM7WpA79GbzrhEFmSvibwUa18DbUeLWGvQgTWGQd0ONQBibm8eJrBA
QO9sttWFGrgWFiIcFs8ChfhdpZ+caiDj1bII/zgW7Ds2kuvoUgMaKr2HvWNZ
kJImtPOCaw2I71JZLYzeEHDyciy6fbzQZuEJC+QUr6VS0dOvol9+Q9sJuQtu
vlwDT1L5jpPQwhlk093oLZ2jrpVo2rBIynH0rvCPD4rQX53TVW+gVT8nqb5A
y1ySrktEn5ow2haFNvMJPEFC8//eq34HXR5/58fBqzXgNKh3svMxC154hQWS
3XC9jR5hyuiLJs+ED12rAccSelfAIxY0zd/LPhVQA++WhfUOPmDBJdXNtHNR
NUDS2/nOJIQF105ucXd8VgMLgZb1TXdY8CN7T97FlzXQ7eAcYODNAv2mhPZm
3VqYFr9U9N9uFqw+2Osx+bYWtB6UfxH9y4Sq/In3H53r4Jzmg/7VFCZsK+BW
ylmog23Gc05tkUwoy7C2PRtBgElXu4T0WSakDsmMu5nXQ0fvHVfNOQYcuLaQ
UG5RD1K6aX62fxjw0fzN7r+n66FRa6DiwW8GdN3PatM7Uw/t8uHrK2cZkM11
yzr8bD147AvJGZxhAGex0ec2q3qgVDbaiKAjHP+1W9vUwz7hyA2u0wxYH9aY
PGJXDzfjJwKoPxlwPytvn5djPUSGGtyTnWTA+H7jVWO+9SC74dST9k/YfyVz
jYZfPVQHrcnORL8X6pTwQjvx363xQVcdvyJVi9a6WNZ+Aq3HjJXlulMPF64X
Dsuh+SJOKBigD3G78cx+ZMDa1PfKbejtud57nqEvj2apnfWvB8bReG8DtE1U
ocYg+rsNo268jwFXrWfU/gTUg2Ppfdf9aA4nzc0rA+thR7qbdvQHBvy6bq5+
KKgeNneYP2a8Z0Cdb+gVB/Rkw0/eCrSJeXqePzrq06R3BprIKFWoRs/3Rdv6
o8PZBW+p6KBo/V9eaNeq1HvtaGFN3vvuaMNHwT++oznVlW7YoS98tDzJGVwP
rBRxaWN07xrpUgn0p5HdjH1o5yNP4rhCcL2CtJDoXgb8lNt8YxQtERRzZqCH
AYqXOw27Quvh6HaOQzvQ6gEuzrNR9SCq7O3n/YYBPy7d2y+WWA+2L5wpZBYD
2hl7Wren1YOf/+RfCSoDzFfeW388vx7rbh2hmwTut2FQsoeXBJ1i1o5Dfgy4
ZtJXG2VLgqY232zLAww49l0zlJxNgkmGt/Tp1QxY9cjnrkI5CcSnwyTGljNg
Xt7bKIBCgvLe3WExf+lgSVsz8/YNCaCuVE7/Fx2qVHn8FPtJsOtXfcSyUTpw
UDuNav+S4PB5uPzyHR2Eg7r/7pVsAJc7cjb3aXS4svkTKXtHA5gETmXHltLh
W3cHi8O0Af6elk5uTaPDlq4cY323BhCTlI7ViqHDAza5IAjtV/Fy/yr0+xN+
K8hodxf+0a/RdBCx6rrA7d4Acd7b4gm0wiyr4SB6miKjH48WlLPfcBcdpvHh
pxv6WhK9g+NaA0jNjRjJoT875N27gz6dsqnwTRQdVoUv1/mLfiX4YE0w+tWD
38MTng3g+Goy9XoEHaiMPxxfbjeABXOLi8N9tI7BnY6ABmhxeOVkGkqHDW7r
L1BCGqCrgyv+UBAdBLivXsmIaoAXQ5W3tvrRQdo8XjIwsQES81sW1nnRYfam
1VXr9AbgFIr7J3CNDu/sj4q0ZTZAGf/9o+FudNgbvztKN6cBHj8Pfb/iKh3U
ytW+l+Y1QGWeZvH9y3QQYx9RSSxsAA7fNUrhznQQFXUPf1zUAB6Cxs2Tl+gw
zNV0OxcduubxuQG0gPmaK/VosJ4Z7ULTnRY06ejGnKoHbehdz7/Mt6HnTt9V
YaGtvjeataM3v/f4xUTXqKe/WnKL7aW6JVt6B/G/Qfd+tQpdsma9o8OSj14x
Nl7yMV792iVLzequXfJs1DL3DnSwgHIeAx0vQd3YifZRENFZ8t/kkO4le/E4
kuhos+n9IW/R77x1vJvQ/7TmNd6hOVeLq9PQC3aln3vQGsMT3yjoBveZ3BE0
j9kd8Uq08IptNxbQB9zlD+Wjp5VsdFYWN4DQvg83nqHXdl8RL0X3JdCOSaMf
SqmNWZXgfj9sVn3mRIep7WkkntcNoK05LyqNFjRuis5H19H3LX92kQ6rO3IX
d1U3wFhu9IHn9nQo/bZMhkpqAPHapOr0c3SYq3j5x7ipAZSuXHTOP43nJc0z
vKe5AWRchHXLT9Hh3C61LvvOBsh62ribcoIOXUdjN7uJNYL5E6UbU1J0SPlc
/IXDohHmHB4qqI41gd+/xvvicY2QYLYwd5Rogphj/XvLuhohNsG3UTm6CbI9
zYg+UTJIlqzUy3VoAuE9bgExpmSwO8MrnKXdBGMOgmNdaL+Fm4se6O5PUmck
zchQbWo/oocWLkmn2KAt0oh3a5bae5+rpaMFSJFN/VpN4G4lkvQN/SCkpbwI
TRX6dMXdnAynRzTijNAOKoH759DSItZePzSb4EjNvFCgBRkehR47G44ucX5S
0mNFBrGChvgytSYI9aryU7cng+rI84B+lSYwEo5yD71IBof3iquFFJtgtdfu
B+9dMT6RFwf3KjSBjuLbA5yp2F/K7/eGfzQwaZGTis8ng48u/+HgWRrIiWSl
KJeTYWzgudqPcRp0xjrczKsgg73fef93YzQwkO3VUa4iA0vW5y3lBw1qN62a
zq0mg8HrPq3iURo0HM1Wya0jwwWNXXzhwzTQHS59rEuQoWd3d8t69IXvnJMm
S6aEUlejm9sOHbdHH7HbW8uLVvVoWBaAPm2UlzvxnQaFtbJ1z9DcOQrxPWjS
88X+DPSFUMGtXei545U/l3wgo05uySrzN7gy0UqNbuJLNs9WE1my2Gc5wSV7
m43KLpn3XwfHkp9wZasv+ff60F+d6Bor6ZNLHjg90rdkalms25K7Hxs1LblY
eFXUkt+1lhQtOTiinJGF9lZ+2tKBnlm0XZaD5oz82vIGfcd2xf5c9HrhiOJ2
dI9W6v0y9NUciQgaOsJYs7MBXRz28mINenGEUatTj/ML3J86hn5UvDG9An3d
4ULgh280+FhxIEyDRIZlKw6KX0GvbL44849ChldtzhX/DdBgeYxSMJNBBsfu
pv6ajzQ4s6pbM7aFDD81AqMu9NLA43rtMtsOMr7vKdWr39Kg0bMpSoSHgvXX
/O1V+TQgNsTvv6pBAct1vw3CAmiwYKAwf9OeAk4vp184W2A+pCf8lKIpMLU+
2TBVFZ/X3gHH+wQFjo8u3yzFQ4N+WshGPQUq1gX/jSZlU6HXtUbj4j0q0PzT
2y4dp8LTDusgjnAqLNJiKJNHqVBxi78q4QEVVm+ZKvE2pAKbq6ZjeyQVdDtl
UziPUKF1+c0O5kMcv/mP/z0DKnBt2lHpGE0FwQenbFYfooJmI/VY7GMqZA6n
CMvqUqHJ7+oNWhwVBjeL5Kntp4LBH1W134lUUPA6pbpfhwpnT9R0bkuiwg9H
ny+C6KJjDJ+L6H+RdxPe7cW4piykn6HX6LkaZaKndM83dqElXHcsu44+tPfn
hVXJVOAc/1IFaAFfgQJftIf9P4V3e3C/VvKTo+grr55FXUMfe7dLwyqFCvIz
jXMC6I/6LMvXLzBe/W88K3ZQoYGXXi6Qievw2PYu18D9kxWO2+fi/FyHbi3b
RoXGWxDghR6tSJ+a2EqFo5l6pZHonfcWXd6jbfW0vqejfa4ZD9DQC2arparR
atdTrErQa3u7jdvQHfcGOp6iDVj7KhbRN/suUDzQq0UUwpblUSGVzf/gCjqE
xXd6JZrKkW9yEU1WYs6uRwuPj308jfZ0rhWXQZdLblswQ08feLVDHm2tdFXi
FHqUL8ZTEa1+PTTnGPrIt2vl29Avqnc/0kffbDo5q4W+ZDx+ex/6Q3m8xw10
EPXe01lVKhDz4lPF6KLE9aRCdFdsy9VJ9OvArIFL6JRciY32L6mgWi3vm6FE
hUf+V++3F1Ih3vy4x+fNVGgO7ks9WEIF11x+lhSeQ4c1bpeLS6lw5+A+/zNy
eA6UJDL+samQLsNfyOKlghP7UNLWr1T4K5ZBtx6hQM/b927wF8/RMeVmwVYK
pF3xOrhdjAazP+gj7a8poCWfsGX5VvyfOPHcLkigQOJTzatPA2mg47/yVegO
CrTOfeNbDKLB5P64oZ9aFNAn+YSdDaGBYUGBnLUmBVx2D/+oDKXB+U2b7Onb
KaCbv2OXxD0aWDT2ZGiqU8DqjIPzzfs0oL/O+PFsGwU+vvSM3x5Bg7H/ZoNu
qlBgforXeuwhDa7XkZWPK1LAlilSnRNDg/GpM+/lN1Fgw1MPHWoSDY5xcBg9
lqTAiOMD9b50GnybG2NzraZAXpt37GQBviduaO27ykuB34ZRk5vf0eDBZio1
9w0Z9Kbad//iboL7i53Oec/JcLY1YuL01iZoGhZ94nSZDMJ/3O6YnG6CtJTT
FT278D3MadFtaNkEmk29Mlk7yTD6xUdO90wT3LgWe+f6DjJ0/vf+3J6zTXBv
aKwdtMmwms/nvoZVE5jxf1onqEUGc3XTbOVzTRBX62jRrUGGxK47VEmbJkjn
Dal0UyfD0/G4HAG7JhBNHf7Bt40M58TiT87b43xFVtPPVcjA92VmTvR8E2xg
63NyK5FBxfmKtdrFJhj+5/3WcTMZhKZ/3zK81ATX1lNvUjfie/if+qDv5SZI
WRwRuidNhjRFwTemV5pA8qNMzu0NZMhbVN5shlbLWLF/yQstR28t2f7DQtct
9JPnLi1L3vnf+OUle14NlzdHFx/5zLPk1L15nktm+75J8kGHvRmWtkAf/1JO
90ZHOyg1LfmMbvKsF7p29JLbafRUir/Ckr+8+sJlg/YkhLdfRV+6eObJeXTZ
nsP+59E7p9mbXdEluneazy6tb5D2sQAtqPPt/ZwUGfpH98SOL8VTUT+SgP46
GHdU/WoTmF7im9+Jtm7cLNXg3gSneLzzrq4lQ+ixFddNbjRBC3NVSCbWPbF0
veP9N5vA9fPzex9WkyHE/n2eu3cT/IhbXvrfKjKYzje3TcQ0wVneP4u63xrh
iNq2Oshvgp8MPmm/hkbISdl525rSBFW7/5MhkhthQdlU5HhfExhXpptyezbC
5lfn7wrMNsHrxBALg5ONYC/EN1B2gA6Oj6O6fD80wPKdOwuS8V7Q36OWceRS
A9x0/kOuaqMDudaZ9+o0CTaW9N343U6Hy1vPHrP6SYIzd4U5tDvoIJcwGHpk
ggQzmREXrnfS4fVejWLtMRIMjJlmF3bRofK8NlN+lAQbNp+n/HhLh+brn9uF
h0lwUki07GIPHexeWhPDgySwWfdxzef3dDgdev0C+TMJnqVX9ll+pENW7T1a
ygcSBCXdUv85S4dIVup2wdckUGs783rLbzqUJfTefVVCgj0J67Vt0B+2mbab
oL9P1pc9Qb97uFd2ppgEfu8MtFloVs7jqwlonRNFr7n+0OHjZavavejYE0de
XUWT1zEtAotI8NrDJeM9evDq73F6IQkKS8XjjszhPaXqS7AweqDDXeQ+3it3
ct0aaMN7KMdZnRCHf1jHJ8S8tc4iwbEF1W97ORgQdeQ6aSSDBPvCSDX70KYJ
AS++oXeTTKP3o0vzkwMG0fuzhs4fRCc8KbfrRxvv9tmth/57qv3AR7Szj6DQ
IfTA0Kjse3SRqVrFEfTLKtn+TrT0FxO74+hbX8xSW9CvFW6sOIk2sL9nT0d3
XvfO8EA7tVwcuI/OlVmERPSWFu4Lx9A5yv/e1aE9z50bWok+8vjO9S/ogx43
nFrSSdC7/XeaCicDLriYXzJBk4pC1mmjO68OwEG08+2fykuefCEvt+SZQ9Y6
S9busOdZsuNqxoklX+ZN/XoAXdqrZbvkRzs/Ny35e8YL9yXnO8vkLfm/3d6P
l/yy+enVJTPYxuVLDtwupbnkFXZbepYsGZv0ez+axvtYeyc6O6XDdx+a2+df
zC60z4h57x60VqXz+G60ova7nbuWzB0Vfhit0jr1cQM668/zzebotdn/hfKg
HyanNDqg39bs2TqcRgIxgQ1vR9CzHyXK+1PxPI0W9F/nYoBop93B3hckOHXq
+Nd5tPqCSOub5yRYa7LwOZAb91+2xZb1jASpQXu42vkY0PciKODuEzwP/n18
UqsYsPU/+t1d4STQz9w047iGAeP2B80n/UmgYXiSkSPBgGW7AsdybuJ+a+KC
R6TwPIg47nNwJUFeuHB6+0l8PuW79tQuw/UPf4oNCmLA4MWpAtVn9SCTLH+J
s4wBrWPmO6J21sNOdnzj4a8MkBh/2f4wjYBz+i85z4gy4ZSjpeftzjq44uqm
q6nLhIj9pONk3jqgcRUwDPWYIL/uSkwTZx28Fs2St9NnApuXt5q1UAsJyedO
eB5igrbgelrrbC3sjGwxjDBgglX107KOn7Xw+tO8RNphJhi9uX2v+0ctNKvT
TjcbMqEouebXxy+1MFx2/ePvY0zQe9sw/vVdLQRK/8mXM2KCgWDxzR8ttdD3
5U/XWbTkvg9Zg821ADUc/x6jf40y3n5g14JB5kqFZrTwytu8XaxaiHsmc2S5
MRPmvSc0mpm10Jqxy2U/+qzQFlsqoxZO0TzzitEaG6TKyppq4RZ/85eNJ5nw
8pn08ixqLRha7v0vDt1donoqjlwLr+wy9QXMmTAweXj3n1e18N1M3vb2GSbM
6aqpWibVgtaJz6KP0AkKEpHjibXwcf8JZg7aJJI1FoyuV3X2r0erHT5utB5d
+J+W1lu09MnEV8UJtRD26+X3H2i+rBKhI+iKXA4TybNMePzVr8UjvhZW8nI9
lkc35SU5GKG/ZP/uVEaPxBfNbkGH+7Za7kWnNLZIv4+rhYiVVlmAdol2IbHQ
V78OTh9EZx3idahFE8tnHh5BO1wlrqegfw7+VTJGD+7mMLmN7rDmoJqjrYT2
qZ1F857yao9Hty8r7BOKrYWtJYLve9BaRVIR5Me1cPBObf96KyZk7AzZ4/2o
FiLj6kMKrZkQPcHkDwuphffXP/Dr2jGhUe1ae6x3LYReX+Pa4cAE5S8HYjJc
a6GmwK7A8QITZPxWHnptUwve8+s30+8w4dClX1IH+2rAXvhPVU08EwL39Y3X
WdVArgXJDIqY8EU7SEO2txpkLtS8N6bj+NwPI7aW1bDNrWvr5CcmHBYye+D5
tgpWirRs+/KZCcebxQ5pt1dBQJ0VZ2c/7n8seGSaVQXvG/zSqF+Y4Kmz2beE
VgUNLppiFQNM0H8/NOfeUAVqy3wtcwaZECVb6qhWWwUKr7YHhA9hftPUhQuK
q+D2ra0jrt/x/G+2dFXMroKvdOe44yNMmK7X9MpIqYJda87FpKPZG58ya5Oq
wFNJNHQerZBosb4roQoGeB95mIziebx63nksrgoan3Wdy0G3tVNLeWOrwGz0
I3D8wPxN+/zd8LgKzHt9ZwvQNw1C7htFVcHGU9tjz47h80/pF/B/UAWklYuS
/ONMUG8NulsYVgWzW2zmGb+Y4FEozRVjXwWmIjSpwAUm1o39va57qyD8wLUA
dW4W5IR1NewXw/W0kjZ28bOAyymVvXKiEo48NDg6qcSCY8t1dYdUK0HmTVGY
8FEWWCy4SEq4VIBfaTufhjMLBk9cHsjNKgcQuvbiIvpBaETHmcxyMBfYtCMZ
vXPjJtqKjHJYkzlGb0XT2aIVVWnlQOllWi5zYYH3G6ss59RyqMmu/boLHR80
/3jdi3LovsSYS0UvU/nu6vO0HFKcFbkFXdGqe/b1JJVDTkTPvxtozi1TfLsT
ysGNZmL1wI0Frgmbw2f8ysF2zH7Lsxss+NsoGlToWA4R/yyVr3qw4PIzN66r
NuVw1nTLGne0v/6jAns0I+vX3DW0gnXpaXN0zx9S/w10wHAXtyE63DCCcRMd
Mzz7Ugfdl2BR7IW2spY4o46maQ0H3EZbqp4ulEBrsbxO+qONmU94OdBbznHL
BqF37WyzGrIuh/7uh3ty0fdncqsmzpVDoPv+niL0pODIBQItO/3Jq3Jpfhu5
NZHoU2zOsia0vt8dF2X0/ozPP9+iXzWuqKValUOY4p1tQ+hNK5nLbdHdoirX
7txkgduRDx+sTpfD4NaCRHFPFiiHPXxmaVoOppw5Ijy+LFj9L1RPS6UcTP6G
Gn29y4J3YZ6S/DzlYPHEyKgujAUrR1t2dPaWATuazb0jlQUGqlyp37eUweF7
OWMDVSyYNnvI4+ZRCrF/b96ktePzfkEjXyO9BuG7a1f2fWeBVxbd5K/ga1jV
a7t1cSUbLpKiLx4bKIaJIQGJX9vYUFRxqYtcVQQZzoG81w3Y8CWiUifvUyHc
36TfGIv+KWfUZv6xEP60aflWoSkWU/ZcfYWwwdVMsw/tErd9uuB9IchNp33j
PMyGE+dWBlv2FsL2S7KJCugPG4NEl/UUAlnZZ9YVna2Yp2X1thDmkyKPvEaP
rj5sWtJRCKdLrKPm0ZE21u4r2guhvEp94d4RNriF8GVVsArhhsjUbglDNvBG
U7su0AphMCz1WCa63bGcQ7ShEASfHRb+iGadSz84TRTCq7gKlvhRNshE5AS+
qS2EIQOVHffQJat/cMdUFoJA+4WYOHTdy3AePnT/F6UfGWilL5LL/CoKwXfm
X24eWnGlTPsh9MP/GpyK0NMTss+E0CXvpAdq0IunOpOelRfCgJyaTRO6clJp
XhW9wf7nuzdo6V+GZ2rKCsEtivz40DE2VJ8tX36suBA8Tq5Tr0RPCcql9RYU
QrXi1Evl42xY0EhScckphKkX2wSfnkRvFq3j8i2EHzcT/HjM2ZBHdXr0yLgQ
3INdeWzO4PzC/qNSGwvBQWQ6qcCaDd4nzvynN/4KppxebP7Pjw2fFh5Wn9Yv
gMkbvlx1iWy4wTUz8zQhF2gzQ605r9mwKe3dU8EfWdBy4JDmWybm8/HZN0n7
M+D+cPALhVY2rNcLq2ovT4d1ocZ/LTpwvdUhP8S2pUMp+fHxK91s0DQfdnLO
TAN1XVNGALpyA19lZ1oaxGsH6T1BW54UEzjwIg1uPd9Yk41eTlRa5z9Ngyt3
tdRr0Nx6UyXiyWmwrK8srQUdWtO4IjAhDTLCEwNn0BqKT6otH6dB8GXx9AU0
RbHm9L1HabBd/BSZ6x0byN8EZipi0kBnzoBHCN0+u6AmEZ0GyVdMPVejFXZ5
dpGj0iDluvnwGnQV1+9b7uh7J/RbJdC2FDX9podpMOnDXyaFzrFMe7AefSs7
NUkOnfCZs8MtMg225drdP4U+qbaQWB2K/VeZOQWhi4cHrHgD0kCWcVurFL2m
krH2pA+OT92XktDLBm0V9+t7dqTBTo79Hp4fMN/PpcQ3TqdC1uLp2hMf2SDk
SOgIFKXCctmLHtKf2cCl6ikzeTkVWOcd8z9MsuFH20fnlynPoNl8okCAoxnM
/TZ6O9gmwrk7wrsM+Zqhk2cx/TM9Fm40HZ03FWqGb4LHfP5pPoJMpsAjFdFm
8NuTE3le7yHkNnymta1thtpjdx+Ny4fBpnsxvwwkm+Hu/Keh8y7B0KXasnAY
vYE2Pmh1KRic2T+5DdHUpPJvpy4Gw9DFxRVH0TtW8I4ang8G08Wx1cfQhHjv
+AGHYCiPoEkcR5fStad32gWDZ/qhTUZoX+/5xU3ngkE/y07jJPovRy+/qCWO
j5XYfwo9d6FTnNssGHT+i7GwQHd3nNz38Vgw0DPUj51GZwtSXH4bBsNt6+r9
lmgho4KE1UeCYfeGNMWz6FHnSzO6+sFwh9gucm4pXsX7fBcOBMMvptOcNTrE
f6jFUycY5lk+Q+7odYInfymKBYOMxqGiIHR4L3Hj/VgQvPchXu1a3wy9E7cS
h84HwoP88aFP6OZd1IMSHwLAfVb9rI9UM9THPqa4mfpDeuzo83HpZkg6xwhI
bHWFi46fwn1lmuFELkv7zKETRNun9iEFbPesn2a0fvUgPLXHPg3jerVvBWpU
ZgOJHQeXa2n+1wwnB8/amh+KInb95d8khmZpGKhPWkYRJbe5p2bXNMMapxdR
4ZejiB1N00nv0LkZv60VAqII8kifTDV68YVIct3jKKLxZ0NAMlpVudTAIjuK
eP3Rf94afWH5uVuhLVGETPXWQRl0QljUxdKZKOLT9459/SLNYAuHV3yWiibs
70dmvENzW/GZ7JKPJoqzE/jb0EO5HZHRW6IJI8MZ5yb0iksF9d9Vo4mKG+l0
Al3lEj10QCOacFVNVyhHO4fd4U7ciaYe6s5Ah990VTDUjSZSydv8H6MPF3lL
zh2PJtaZ2kgFop2qkwdzTkcTvAb3ptpXN4NExOdTfo3RxMNl3Ikb0IfmqNcO
bI0hNHhuTa1D/z1K/eKgFkPkWgQfE0cPuy2YhGyPIYw55DLWoDknnOqzNWMI
4ayBOyLoZU6nl5tqxRAeoclnVqMF59ed+Id2PTMjJIRW95X+cnZHDPFqQp4i
iIbf+nfqdsYQ279v9FmBpgePr5PdHUP8ao6/OyXcDP5h3cLzBjHEJvtn3u/R
exz0WjrMYoi0bzttKGgDDinzlw4xhPu9ZQk9+H9UdfGIkx2LIcQqLi37vqoZ
xnzukf28HhGcSrczJlY2g53ltTAK12OieuS0z6RgM6zyfBT568FjQnNQVC6Y
sxlOjehL5f9IIDJNZ57fnGLDxMBbp816zwjyXg0DZj8bDnVrdKcZpBIrHu0Y
Dmthg2PEQirPUDrBk1h4ILqODca2m08P/cwkiH1eUV7oRr3n12t+ZRKdEprv
bdD/rvSFRf/OJPaoD2w0QJtOND25MJ9JfI0Kc96K3nPMJnHP30yCuV+2QBR9
gPdFrDBnFjFjskdloJYNXiRvvyreLKLmx6ZnxeiZi4t6joJZRMfpgWUB6Dem
m4dXimQR6zISXSKr2UBYGKhlGWYRjQ3iskroBSkb71mzLOJz3XAGpYoN/qKH
9xrYZRGTPaJztmhj5QGvWNcswmK4K20nOmtng+169ywi+VWLvjA6qVNMI9Uj
i2hmGngvRys6jYQ8vZlFuBy2y/9bid+Hc7XvEj2ziAPcb1f/QLuQzHwfeWcR
FcqnHnxH96w67Pwb/UStnvcretpL2OKcTxaxZerWfB96Rehxtc23sgjH53Pj
b9Fi6TUR0+jdSnsGWtEeiqeuUm5nEfscVprdR/OPbucYC8oikm5fKNBFB299
YCoWkUXwq49Y3i5jw9MDnOSUvizCI/ubd14JG3i+rLVbqZZNVGeqCLcVsuHY
ltkZx4BswnPy0rkfKWzQirvprh2QS8R8fr0u6h4btktOHhDyzSc+0T7r1Vxn
AxwQjmm48ZLwm3j9LdWBDbcf6K7vb3tFME85xnaaYD0zFp7mEVtIFBdmO5od
wPj+pV/7frCIyG1xd5PH+q/Nu/T7obEiokOW7V8uh/NpbzskalNMKOv2hv+V
YcP+GdFE7yvFRInstk160mwoPfQnute3mLi7k9M4TIoNmcUS2/ZEFBPE1nET
wXVsUPGeNJvKKyZiKwP2Wq5lw/GKzXzixcVE4sLekQwJrN/23bTcXVFMfInf
aPNTHOu9u61HztUVE7cnTb1y0WdtV4S21RcTkYz1YfboYO+q1/qNxQR5uvdx
uxgbUpP5JlWbigm/ZJ91beiRaeHO3eiw/RLPW9Cvn4lXGqA/fXqt0IyOT1mf
YooO9TXOY6HjxqQD7NC+YiNqTHRhjOz5K2jeAxv2NqHFA2RVw9Asq+MGFPRg
9bpfL9Ctl7xMGtCiuitrq9Hrdlc51aAdW1qPjaPdWkb8ytDRD7zfy9GLCYOg
rXm56EmnJ/P30KqUbW+fonvXxTF/olMCxrgeodc88Dh2jlFMfC/vT16Pvr6i
XjGkuZgoXpm9PlMU642Xlz+8bC8m+qlaf/8JY31V61qns1BMXF7wyDESZIPv
yLHjNQolxCztityT5VgfnW28oWRUQhikMM07hlhwe+Bzq+HZ18RyHcVIJyoL
ps7uXpnkWErUNP49aZ7GgoMZnqHLXcqISPq8caofC4TP0FP9rpQT5THHbKtN
WTBhJqG0P6SCeE9A2cODLPwe/Cx8NVdBvMwJalmlhveZqcwtXlcqCar46cXr
qixYHjyiHuFXSdD4toa8xftrSVjlxNPISkJqWfoLefQ9+8CK8ZhKoq+JFSCL
duT90bCANvKctpNGc/qbsvkfVRJuwpIHpdDjrZVvxdAHHu+Xk0Sr/1nfL49u
5DrPtRbd+Nt3VA29pTSv4T90ROYezqNoE5Gxu8Lo50UToueXxq9T0RVET69N
UbqDVpDMJX9WxPumpt9s4GNsf3tTrxydWPCvPuxJJaFkGtPwAK1ySzY0IraS
iDw1t88e3fkl6+GTuEp8v5Tx66HdBFzJpvGVRKlr1BuFJY/Wx65JqCSe2N1L
Xo4uUD1ysR39VPqF4/ctLBB6uFY7OrGSeMWh+jMfnTgT1LwquZIY3aB52w3t
7fTX5kFKJVF5v4xLE231MniY/1kl8Vn9zN0uBRb0ByV0jhdU4vf/SqqnPAua
Nyvzv6mpJIqfaTqIy+L9+PKloBJmJUE8GCGXbmDB+bDAQ9E9lUSwurFdIi8L
6rm9HNOvVBGudyR/zvxggrba9+Y0zmqio+PrTVYHE5R8tqQ8eFRN+DV/mpSs
ZoJZYouQ1cYaov/Mq4tfnzPhl8SqKKHXNcTiSwFFIwUmiDWyxYMVCaJPW1pL
Au3z/u6qCCWCkD9rB583MuGF4ti/x8r4+ZFvN8hFv3kl8yNZhSBexLqfuI7+
br+uK12VIOpq4NRedLl2b1X+VoIw8t1l2SzPBKP54Vs1agRhpjdmYYtmqIir
sLYThN1xa6OfckwYP2zD7NUkCPV+Zef0DUxwft5nf+MIQVSckHl1ah0TNsll
2vBaEwR3orw0hxgTRB8frI++RhCFMxuqc1YzIbZKN1AslCBGY+DWNB8Too+0
KAoWEsTaPZozGhxMsOZYe2SomyBSrx3XcJplgH+b5Mgbjnpiyo5yTxpNO9wT
fYuznjA8oveha4YBknnLtOS56om8nQzVSLRZQk4HA71hv8UtffTwcqrbNe56
IuvqCGXhFwNOjpzhX8dTT5RdiDUYRBePB24zRp+cnGxio3+STpiFoDl7+B3I
6Bdqs4tJ6KiVootV6M6wqMwi9OPC1erZaO+I4agP6GT3Hscn6F7FI/+tWFZP
cM9eib+LFnV0jdNG25VwR1OnGUDkXMqZ4q0nes9t91iBDhCVSSvkqycs1izo
nZhiQOrdyKDLK9Cc67kmRhgwV3xtHV2ynrCOTmTdG2CAU4nZNknVeuKaWUu2
5AcG5Av11Tnsqyfe3pVIyuhkgIU6QU41qicWptJiLe8xwKPrxiDfXD1x4xef
Cv9uBlBN5jzTn5MIFlmhlzJEh+ojlrFOug3E4D4jyxcxdAirGr1o2N9AbOu2
CbuJ9kprWB6PlrhdX3YUzTulkD6IZqu4D8ign8c9Ao0vDcStUffVM9F00IoS
6PFHG9U26DDRr3sjrjejk4N5nnigjUWz0i8NNBDf00K+S6Nr47+38Qw2EE8V
j+xhRNHh1hmz+WdoiV20TrcIOuRutqW+HGkgQikV58Tu04Hvhf3qmskGoibS
7k1VCB22fdzznjbbQIylLtthHUiHJFHmpvbFBuIPv8tk0V06iEaIayz/10Ac
PdH3fBn63Xoutb0cjYTtvI2+ZQAdUvaGS7lzNhJlyRN9+f50kM4tns/gaiSa
a6Muc6D3yXsxergbiTHPtI6FO3TgjHyx5zNaaO71nj/ogHl6/hBaQ4+S+gtt
VDwhNYY+bd7B/xPtXCz6cBp9R63fbQzdMb+TYx795sb8viG0ruzt/uU8OP6d
0MpP6O8uFeT/0C/OSfd2o8m9PzJl0SpXX36NQrfsCL+Vim7tPzVxGA1Tb19t
XNZIBKf9LF6DFtpJSQxBP91650afHx36IlxOf0N/VZ/TzEGHrgn+z5C3kbiW
5TB9Hb3aa0NLHppzkdONHx3xsAmuLm8kDE+cGXrqi/vluJi7na+RUKh1PaOJ
Vi35s2oGHdKjM8bvTQdfz/WFscKNRNYD07cfbtAhf6PhtKZEI3ErQVOs0I0O
W21Ve1ulGwnqBfs8f1c6nBRzd3Te3EiYyby/dfQg5jdP22roWiMh/TVV55o4
HYr1zjncrMX4/czmZkaawGnwoJHYcjLBUchT10s0QSDjPz6qEZk42S0SJ/eo
CZQGh0KD4sjE9ToF65WLNFhXdwlmfCiE7AlW8vsFGjTc+/xv7y0KsfV4e08e
WvH61bpA9HjtDolb6Bshv24x0LWpC6aGaHbD9Z2rb1OIsUWZ6LVo283DUxZo
csYWvop5GnjuozkNoj/sennbHK02FfTumi+FmGAVjU3PoXXkD3H4UYjzArPd
G2dpIJDy4EVwIIVwfEpuOjVFg9bcR7b89yhEuKVDXcA4xvtqQ2B4JIUQcFhf
9XKEBvWc//ELPqYQX/u2U5YN0KBoC3Uf3zMKcbtXZvT0exroBExy/M2hEBRl
NfXsDhqs2NF84sdrCqEabZvyqI0GwQWknUcrKcSh00Iufs00IDK3rMuupRBv
9oyOX2Tj/t4cTVMnKITYSUm7kywaDGUHC1TXUwi2gMe/Y+hjT5L2kNAeoeyU
w2jFkEIXGlqQvHGvHtrPrjGJjX5C8umBpf6bO5hv0Kv8W7z2oGPe9s+/Qw/4
3Szdjl6zcuHsV/TdAImfimjvUcGan+iR0NKtsug6D9H1/9Bkj8ZwOpMGV/9t
kLtNohAXronfC0Vr5/5i9aJ/8x8J1kdfv7Tr2J4GClE3cdqfG/3BP5yeiF4u
Z+BDYtCg8NkfvTn0tF+dsw66dbmsdmUjxn/0lXklnQYvEvOlvcgUwuf12n1a
6CndZM4dFAqx/tI9IwEyDYwHnbbnsijEReqBlI91mM+Nvy+t68D8BM9sLq6k
gXDxQlZoL4V4rGE1cfc1DVxCFUcn+ynEj/yS54b+NDg1Scq6oUIlfKsnr58/
SoMrX8UjWTeoxHxR6bYuURqscpKM/l1NJeJ8eJKffaTCrbbqkllOGvFDWDGQ
nE2FpPSffPRDNOLw6+MHuH5R4Luv3y8RySbCr432jzKN1osZNEd7bIyvvYem
D+x/k7jUXljnc3ypXSeZ6EN/99qzYzX6llF6rtz6JoI3YNVUxxQFXktYPr6A
1hW3u2SF5pNYf34MTaMKfvjykwIG49FqN6WaiP9yV59wQcfFVc0sol/+uLup
9AcFPpeURRnKNxEmdftmFr9RgDziJvFkSxMxsye/Vn+AArq3WyM+qDYRal1r
/pz6QgG1Kn7WyNYmYnr4h6J9PwW2/Frx68+2JsL5xB5jt88UqJ17w8en3kQY
vZyOFEJTzdfx30B3n5dfWIV+pbmQv+Q7a00uLfmCYJ+xB1qX7t+1En3sPTG9
ZAWPV7pLtk9/EX8TvVGqr1AQne4YuNcTbX1+T7gAOqzzUJAXetXT+PMr0Js2
r2B5ozVpv4Af7WfJXnMLfZorlrb4iQLzrQdWhKGDVqkZ/URX5gcpPlka39/Y
9RUtf6r6cCq6mFNT9gY6l67kp7C9iciW1L7EiQ7qKnmZjVY2YLyM/EiBb9fM
e5Q1moixg/yfRXopIFm5JcBwZxOx6WS1TGwXBeoX3ulc1Gki8rp3X5Fox/il
jIXvHmwilmX20xPYFFi1wv13okET8fyPSvn15xTgGbBLUvLB/Z//XDxxjQKa
NRWH5/KaCK0772RE9CngvqE3lf8D5sMg9vw7MQpcXOwxPr2STqgl7Ppq8I0M
4d3H/w7upRMe2g/1+4bIUDfw6omxDp0YYm9Ku4F+H6itWI3Ou8rxbwW6avxz
hcI+OvFFeb3li69k6N5YrBeFLhHxKdqBLpXOYs2hGWZV1o6DZHCI7eloATph
TeZeFj1Ahta55+z0/XQi4qN5eu0XMvBqzJV5H6ATVV5iNj69ZFh9ZTiQdoRO
3B9lOGi+IUN8RtYhIRM6MZHj+nqEQQaBwojfxmfoxLquWZPnDWRQeVQZ98Ce
TkjvVHE5mkCG3rpPdavD6YR/zM8dpVdxvg5LEc4SOlFgGJffp0+G6srCq2d6
6ESfl4D6U2Yj2OeZaNUeZhDUW7sOjzMaYe1aMQfzIwyiZsj17H701LMIz3H0
tb8ZztH0RkhNUrgbZsggEjkHPfqbGoGTt++u7FEG8W27kq8GeqG7zLsKrelB
CuykNkK7Ts6p0WMMYkC9v6AFLfm+2nUSzc3m7KYvtecyg2fQjw/JcJHRq3K7
n86j457qqNShm9/1l3McZxCCnZbmFWiR3cOty9Dv/z7MzUennp3iEkb7pJL+
PkfrwqTmOvQIMWbyBD098OXCRvQvscokGfQyoWmL++hRntr+PEojuKTNOU6i
1epOxZ5ES+0Br4MnGMQl3o7Ds+RGUJ72sX+Erk7aN5eMHhWZOzKAvnP7Ue5B
9NF85lYtIwZx9ujC8sjGRgh/aDXRhS4qW2X3rqERzE4rZXkZMwgHPmbpRvTF
Rc1T604yiHnKgJhodSNc35RX7WTBIBa1k2jcrxshyb9+vPgcg0jpWkmfyG8E
GU+T8d8ODELr3Ln17zMaYQM3VO12ZhDKWxRGi6wbweKe/t7BLAZh+YH0cECs
EbzrDPKGvzAIV8m/bl7NDXDr7bYMww1Mwu1jxJx7cANEbOPp5bFgEiTjz3Gd
exrgQA5VaG0kk3j4hMxhj7Z69GvoMnphmZ7T2O4GEPdcW9OAnim2afZBXwvW
fCD+kElcLMC6Ej1Ye+i0K1qH1zX20S60tLEMCR0ee/xM/s4GcNI6me0cxSRa
Nr+QoOxogCzmVpn/opnE5QMX2z5oN4Dk92+htejpg+rdb1QbgJIcLnU6nkmc
COQoo21sgDNPDpwffcokJsq+uFZKNsD1tHlrnwxsZ478zRbB+dLyVnDlM4nA
40RkVDkJfE88mJwaYRKPIoUiIYMEN4rE91/7zST8PJzOf40hQUlns+lbHhbB
9/hIYn4kCRL7XlMKlrOIi1FVdtfuk+DgSeLT3RUsYv3MWPWOEBI8/fM7w3wl
i+iu0YsMCSJBTsWZJs9VLCK9Utmo8y4JRHMEXscLsYiZnVl/5QNIcKxN4FKl
MIvwHJbLEUEbR++aJqPf+MSd4kR7DRvfaUVLe/Ttm/InQX69/JYedHOsjNIg
+mTy19Yv6F+e0Rx09AOSmtwsWm52rCsfHXtz3/UVq1nEuuXs7Y/ukEA55k80
Ez1VuzbU248E32olEh6IsIgnfF1vbHxJ4D2TFHZ8DYsYyJ7QOHeNBDPSO9va
1rGI/panaRYXScBF9H46JsciOlb6bDKyIkEtx+3yOkUW8bNNul73JAluWgib
bVZnEdu3OJM0++uhufrTzoPeLKK65uh2kWv14Nw78amhFsdvlVAf5qgHRbvh
+Jy/mL/X/14/kSLg7nfxoZk9bCIq3z06aEcd3He7GpbnwSasGFdN3bXrwHC2
aOMY+lLTv/+sterAzoxVrXaTTbRXtDlZoRdlHOTV0WfS0mrOoIOof+4vmTPM
Q9gSXWQT9XPJ1AsGjhbo4NFNZ7ajc2FthRma43ItackFgzU2JuiDZsNRGmil
G7bLjdCyguK2mmjZEe5XR9GJ0brbtJbaL9vtUUKXZQRc1kGb+5bS+NB5qjva
9dE9yzhMhzTrQNnpnfYJ9AnjD6x4jTp4PvNTJhWtuMh50HB7HawvOsM9g6Y7
XCmZV8P5EoX7jniyicyXVmbf5evA3XOOFOmD8Vs2BXWK1YH57tvprb5s4qP2
Mt16/jr4opQaLBTAJuT8nKJzFmphodnr/NEgNjHUVlrn5V0Lj/oXvy6ksYm4
1LDp2l81wDkdKn23gU3wm++84OdeA3LG9kd6P7KJgN5Vh4jRanjJr5/Ot8Am
IlLKKMEXq6HwQK/8CvFm4tiTCwsZpCqYFLSjDmk3E++3uHyQlKyCXUmLabOm
zYSwXLzJ5PVKCD77t3a3ezNR5eS5ws2kEqRUCx7k3mwmpJ+4ywgYVsINrTZt
Hq9mYp+KxduMA5XAvbe20sq7megN9N62f1cl6L7xEX3t00yEsA/sHNCqhK3b
qtfp3Gomzq5MeNqJdrr35jKgN6uN89DQvhe/1R9AD2vpuVSg4+h/1uihszfE
t+Wgq14tv3gIbT88vCMJ3b9WpOowusUgkscPrT8jbXscvVNdtc0WTfRL85qg
czNpKbroMx9X55ujv5q9TZTWrISLK1U2h6C/bxtl7NL4Hwf3HY711wYAHNmR
VVaUUbKyKiNxUFFmsldm1C+SUEooEYpsMrL3jsd6jPuxPWaSmcpoKCWFkNF7
ev/8XGfdZ37PcaEeTch7t5RgM7e93TCSq0fdTxePD2OPJpQeuS5bjzTtFnI2
sCXKrYxDZerRCTdfNoF7A3BIxKioUaoeVYroTLtir39s31ySrEe/r1tm1mP/
bXpx7rBEPSqzKDSm9RuA/vvsF6V56tE9IV97qvsDMDRPm6JAV4/8r/uzbAQO
wLJqtYjqah2yP0tp+zV4AFy3Ndc15urQw5yLF0ZDB6C9d2mWU7oOhQhJd37K
GQCBHlSsc7cWRbrGv3rfPAC0Z16mfW+vQW7A0dM6OgBJO6q7GFhqEEHpAEf0
N5z/eNW+IvNqdL9P+7AuxSC8PbE172dWjR4/9XnzH/ZnFr4GQ9Nq9O00c3gY
tuM6e/hhk2o0l8eoUIDteXjGasOoGtk235jqxFbqfyTef7Ea6Uejex+xvfwf
dHhdqEY/W8sqhCgHIaX3jRWffjVyzCMN2GKTLid+b9OpRv+leY+mYiulqGbp
H69GUYFg8mfXIOjqHYsa46tGRpJlPAa0g+DAzNB8iaYavXm0XziFfhA0XlnI
ffhOQNn1czffMQ6Cnow889dmAuJRe/xFm2UQvLkOGX6JJKBnKkxBcRyDEP7w
jdysHQFNxXmfb+AahP/QN95jtgR0MXpX0TR2vcMaRZANARUJ7f9Lwz0IrU+2
P7y2IqAHh7vPSWD3mv/tPGxJQGfKGUMuYPNc2c67ZU5AtiOz9d7YZK1lB24T
AgpJbqYnYTcLveckGhIQleCSGCPPIIgsdLRa6RPQ0wQffmPsromJ9iJJAore
YHx1lG8QnqhtO38/TED70nTTm7CDbjJ/lT5IQKmfmGp0+QchYF1W/yY3Ab22
MOR8g636WImOtI+AJKJCRzkODMKkl1kDMwcBGXs+vaOLHfnf3eKH7AS0I61J
NsMWl7+WssFGQJ/oh7kcsY89aLNvxf4t5v3cBVusk0P0CTbB87OQ67/897MJ
fNiad/lTvbHVx1jVy1hx+1WqDwOwKxis+hH22MOMq2HYe4xq1X7sxtZ5iL5h
23x2ykujI6D0KhWy/sFBSDK5vqO3i4C+KQzRvsAOIl4OOzRehW7/uMNxW3gQ
hMNbv6+WVKHEBieXg0cGAf0JM259UIWaVq7RF4kPQubqh09hplXoBEfAFqcU
Hs894hruuS9QYVNHwvb5QbhPqmY7/akcyWc3OrlYDoIHWfBt/Idy1G6rUOyK
fYF8tmB+thxRRRotemDv/yToqTxTjsqsC6VuY/efrVF5+r4cbfcqut7Ddtyz
i37mbTk6Mk2Z/wDboIk59dFkORqxouMKxy5Bm1KSY+VI2HTZNwH7UkcfaWi4
HHn+6RjJwKaZWZM/X1mOAsJzVmmscP8KLp4mRZUj3UomkjO2y/27X+Xdy5HS
uMOJNuxVYzbZUr1yxMzHZLrfehAC4xqPKu+UoqgWyra0S4MwFb1aJNhQit4q
+2QtYDNcyIoiE0vRY6r1zX8+xqF/ywN7T4e5yTfs0jfrVjzYtwdSyv65tzBL
vaW+FA0daKH7jj3tp3PkKvaBmm67f86QS/lVV1eKBm+msi9iT1B+bqLHntfe
aPvnI4tSYea1pUgZvff6gd3lU3xwvboUyb4wf72ErVRMnrqCbXpjweEntrkQ
M6MLttG3Bqd/tk66oHAZ29Ep3Pmfz7LGOTn+Kz9hfeWfOULGou2xG7WP/vfP
ndu8YItNU7997Z9Xv2byWGNzRKa5/3PdmKiXOTaPOfL8f3pb+YAx9hGFDJ9/
fndvUvgsdj+7euI/+4rQ3DmBPUEzU/3P/STpgcPYwdsBr//ZPWBUMIxQir7v
3KddxgbN297fqkrRUxUhxRXsFG52sgF2ar3j1VXsA4Lju2VLS5HXJ1t1Slt8
/phd1GXPx+13rywzYRv9DXm8nFGKfOmEH3BjU12+3/k6uRRt6C3MC2O7kgwK
M2xKEct9l8UI7HWpkN5rAqXIP3Xe8gu2aFTaefm5EvSohV5W3g6v/wx6NYq8
EiQX4eTphe3dTuZ/r16EeFuso9tw/n1vo3Ko3uWjrguuZ1wtBsHZ9kzx+N1c
VKga5uujNwg+8wJSjRS5iKlOjOaqNt6v2cusJY9y0PVHp1IFtPB8ODTJFjLl
oEOj/RbppwfBosyvp80kG+1SNVJcVhmEhventjixpcUD079jbzLul/rPOBv9
YZ+kmccOl+O2azLKRlYKpGuz2B/Mj8ewYj9LPD40he1z373d8WI2Wj+mID+G
TTMmLMZomI16P5r/7cU+qmn8tMIgG315VNVJwk6eoVgx1c9Gr3m1wqux0xe6
WrJ1stHf+cd70rF/Sz+IXjqXjfYeqgoLxR5xmTj++HQ2uvu318MKm7H+VOR1
7AcB6Y8tscdHM75cxObkvJFtga3RQnNGAVu1TaXRHFvb51rafuz1R/QjZtjL
m0PrfzWykab9y++m2MTgjNJu7MhtQSUT7PxtD4do7B1d6TQj7B1dTS5LbP8V
mV0XsRc7j4rKqmWjreuEX+rYV0iyJ+lVs1ENOf6tLLb7k4t675WzEeOekTZB
7A0rVm1NkWyk1BbYFnBqEB4UedSWsmajKDb6lTfKg2BrUJ2wbzML/bwcZiKP
fch2/xe/j1nohJ3E/NOTeP9RaS4VMWeh7EmuC5nH8PkkaK3HKJ+JzLlUQ/5K
DIKhntJUxqUMtK/iyMEifN4u7U7+8mlPOtIwGi7K5B2E4b0so8z2z5F+YmXz
J1Z8vrf9lAvWiUEhp/1XXuL7xJyE1gPpczGIWSQlogr7q3X/q4kzMcjqh6xw
AnZvVtCRIPUYNNK1u8YHO+K8W4CUagyKIIhqWmErPA+ZHD8Zgx4TQ4dVsB3l
BRKPHo9B8vSD81TYlnMP7AKPxqDeQsHlrqYBOEddLj8mEoNOvrv/KxzbcVzE
VPxDNLrpsifmVMMAOCnNUo3MRiN6TkKpDLYGQbAiYCYarRC+dB/CntT7aCM+
HY14z5TPcWMz7D7KNPIuGvW3Ue8wYRctrRMD3kYjh+NfuSixIziTeEYmo9G5
9dfaX4gDIESjfVd8PBrF+//1HcKW3k/zNmAkGmXcqtciYu/8aFQfeRWNWm6u
lGZjb8z+VyD+MhqxvL3OHoF9fz8L2/3+aPTV4oD3Lexh1ujY0cpoxL3x83ts
/QDwWixNHn0WjTILIgkVdQNAiun6HOwXjfRXKMl9tQOgOVBsKugZhUx6acyg
bACuyjyi5nn1FJ0kN9xxzR2AvUquD2Obw1HCJx/L1ykDwBMWPllT/BiJJG0K
rUXj+zifSKWPzRXEdNBULl1gAKReyMwvnb6Cwg40Pr+N/e9vYK+KX0FzC+/o
L2Drts7XzbBeQfd3bniIYj9KTDayXHNBmVY3xyiwj715yzL81gU9oJ87OXFw
AJyfPeltL8Jmy94KwzbyjGKuve2ChnQECCexJwe3RwrPuKDba5b2CwcGYGH7
QpKG5mVEc/7ez8H9A5C46C7Kes4RMTAZ3a/gxvN9eLGTXdsedfYE7onYh+dL
X8kj/tklRLdcnnqZfQCOT4kpW2lpQH1tRe3fn/3grTR26xurIfh9E5c1WegH
7gbu85e3zOGZunpf8od+OHPq+RKDpx3I/ifx9OXbfqCyqdX5RucA3e1Hhve+
6YcL3cM8Rs8coFz5YyLvZD9UnP5TppGMXe97igvbZdeX03KpDiDvumeGA1ue
LmNcMM0BwoyeB7Niv9U/6MaW4QC57qLizNgHJp0pKbMc4CmpfIAB2/j2I7Hp
XAf401vDtQt7XaDrAhTi9KIyu62JfmAfEb2dVuoAltaJhavY12+xdZm8dgCj
ymsBldhUV81JTJsO4K45qHQD++Xk28PNPI6QnhczeAo7/m64qbuiI6wJcqoz
YD8ulbsoYOYI5OrWspHxfnimP8g95O0If6fzubOwmysnaOWqHMFWnX3mJPYF
9kiBmCVH+Kl6MXl4rB/0VF5e/nnUCWTFrpxxxT40dMLqXqwzLO2/l2873A8N
Nh19VetXwNDH56DeYD/oepqqJ9pcg9n22NLjvf2wb8EMibS6gYEGrRFnVz8o
q35QSxy4C6kPn09mpfaDzyexU7omD0EhLbr7o3s/XMqIOct5Mgwa+R//nVPr
h80zimkn9kUC8ZZRThZLP1QdqUze7xkD9ifuUxyZ6gN9+t/ipzpjYS/lh9Sx
tj74dkV7Vpk7HqodTkmyF/fB999B8mtm8XCL7eGwaV4fZKjrUhQkxoPUPabz
iZl9sErQk9cfiwffG98ihlP7gGDtRpqYwPnZ60qysH/0HNO8PBUPpdV9ZA/s
5PGMrqV38ZDrKP5RDTsiddmDejoewitajktiq9EE7OeeiYc/FoxBXNizr3a7
obl4EOF3T19M6QO3s2ENzh/joUaDQqET+972Ju3Tz/GQMmLa/xzbuozpIud2
PLBK/3BhSO4Df95g1+fsCfDfrZRgr2d9sKlMZyosmgDV551E3if0gc+2cSbf
3wTI8HqesfioDzgMsxSejySCbILy7f5bffBAZ6gku/gZqJ1b6PV17gOn6VNx
Ug+S4GheEmnDpA/6VmtGXd9lwKnrooJpeb3Q8EbW1i0zG7ZZKU06hXtBrUx9
4HlONuypPUgWxZZz7RMfyM8GFZMIuSdCvQCNL712irJBbSAo6rtgL/Br6ZVI
lWVDxlXaOQPsx5VqQ5deZMOX6+zilQK9wJ3M/ru5NhuWhdUybx3shR1U/fJA
czY8OZn49eSBXnjwjt/evz0bbFZ5af/y9YJ3TCWDOHUO2Pyt00hj7YXuRaU7
s6w5MDpKayO0pxeGewqbkvhz4FutLyl3dy+Q5EtGDcRz4Ei6mJsoQy/s27wk
clk6B4Jfv9MRo++F9JV9mneP58DwfQtmcbpeMCub9/E/kQOeG6St37S9gGCw
MFA+Bw6ob39tw/7m00n3RDEH3J0OdthgMz/ccI/Hds7gIFpht7ZJjKdj99vT
lVtgMynbqBVh5xb8yTbD/jofUUDAXvT6/swE26q/iRWwCzrfRxhhO+3imxnG
3vZqu22ATeS4/WIem1Mp117nX31Ugw+2sfc+22+ihb1UOS8prZQDU8YerSrY
hN6lMTvsN5qN0sexT+t+DozBtt7cTBXHdnlEknyonAPcU5zve2h64dxK/aCn
Sg6cvTTFdw1bQ3P4mhPC8cfomu7GXkp1YSRfzAH1Q1fzdCl74Xcpz7q4cw4U
6d87G77dA5brVcce38mByOmuYz0bPcD2/m/Dp/Ac4N2I8KD93QOrznX+i3q5
sLv8yRHqlz2QLR5MM8ecB8lr8bSWhT3AQn8gHfryIDLTnoMhsAdecwdmBjzO
h+QsPmN2yx7oq+H474BWAZS98X55S7YHAqWBv+d8AdD6vfk9I9MD0cKnWr11
C2CgsX+vHvaFmjAzQYMCCObTFa+T7oEDu/Pf9hkWAP+AqYIwtu3ZWGMf4wII
27Wo/FSqB1J76Q4NWhTAu93yx52O9sAE1Yuaw7YFYMVawXhS8t/P+0OZ7jkV
QLXeJWCR6IEV/S2DgaQCeLxCCLc/2AO/irKq6AcLYO20zNE8jh7QPQN8EtSF
IJv3Oe8tXQ985H9044RSIay1bf6l2yKDS5qfioVmMZxxONU2G0gG2lD238fL
iuGTed8u5v/IQF33e6NoXwkknFKjpjYkg/hAsA/xXgkcV2373aVAhlcXvojE
BZRA4/0S6b3Y6mobJLfAElhijr1kJ08GJV+CplZwCagP3X1YcoIMD6d56gRC
S4CHzSlt/TgZlvRF9/15XAKzHAblZ7DJm3F5JVElEHVTrGlKjgyf2lI/XUoo
gc8jjNlesmQQS5MfYU0tgYpLv+2YZMjg4Eab+et1CYjHyyr+FCSDs7u6qMF0
CbTekTnAf5AMmqk/XIoWSgAl9jid4yPDedXfap3YNk53b6pjnz6/yjOLHcZ1
I/kktnTTt1/b2J9f2rcew2ZInurl+VYCoy8Nvkpi979vzzmBPUd5kl0EW0Dl
kakbtnInrQM39pqKGH0uNo1B+wtGbLnZ0vopbJPUm5Tb+8ngrm2axfCjBI/D
Jq8Xdt2yYID8zxJ4sTtGaoGXDNmWrBccl0vguuqJUw7YaFNgX9RqCbgmfTw9
wUOGE3oVJ/V2l8LRz3Xn/feS4UKwSwONYCmIe5/aFmAhw9vvp+Pr5UuBkmfp
UgsDGVjVT3de0S2F581G7rbUZPhsQluheqgMjN/JMzAPdANbn9yek3/KwHKD
mn4koRue9LEfMhooB4k7HJfrL3WD2astIfULFeB5ToS/8XA3PG/f+mZbVwFn
xzovvl/ogqN1MS4Fui8g7ymRfiuhCy7osvpPvHsBZkfRfmO1LlBZ7VWav14J
j7mML33/3Am9YZmM7R6V4C267/ChT51Q62+Tle5VCTm+W2D5oRM02Bj5Jb0r
4ewn2i9U2DUhKfF12Dw5NqzFc53AKBoaOHSrEhyraq02ZzvB3L5bYAy7m41h
fA27t4kOprAHWiyMV7AdVTRtZrG92wpfLmELTD/c/IxN5NzQ/Y69K4+U9B07
s0GL/AWb3UdxdB27pGCuZRa7arSEnfp2JShO3SO+wU5p5zdgwZ49ztP8GvvB
95E6UWyWX3yMHf+cd09IA9twht20GjviB1u4FbbkrT+Zudg9hUcKLHwqYa7k
Tzw9drWTW5PZnUqgCfQIujbTCcOzs70mdyshndvWbWC6E8IOhX1UC6qEE+ta
pkWTncBbNGAs9rQSciMkOINed4JWRTs3y7NKOHoqptRqoBP8y31lfmVWQgoz
Db9sdye8G5/XV6GuApsEfnO2x50gHHtC5M7lKghJkdTi0+mEQNEh/qyOKui9
/YPWeHcnxEVq5xEOEYB69WktsacDfml5K5UGEsAwuPPexbAOGL2QBHEPCdDV
zmJRHtoBD4TmVO8FEeDPS3cZJmyh0Iu1jsEEIJ/7RHU1pAO+6n4W1XlEgIN6
ni87HnUA46nMWLkQAnza4UwSwnaksbWiDCMAn0C4wFRQB1QPldO9fEyAz/zW
cfEPOyDzT/SztHACPLULXdEP7MDrWs2qKI0A7rLL/qHeHVB4MsW2uIIA0fqT
9sQrOL51lfTMVgI0zKhlfrDqgHJv4Ih4TQD+Zml1OoMOaGbQDLoSXA0JpQH1
LX3tYJ7Ul3C6oBpUleeXLCrbQXfL+fivnmoIyzP0f53YDtMuVhJe36uhyCM7
UNavHT7vC97OWayGXonH9GfvtUOb34+WkR/VoKtzM9jctx2u8yT70P6shrom
841rd9thwSFIUOFXNbyZUnEKuNMOaq9LG12Wq+EelVBnjE87EP74jXWvVoPc
lS+362+1w/sozQax9WpA/5XSTHu1g7LLriuP/1TDkzEPd1rPdiBtWl44y14D
po+jx/zt2oFW/H5CM3ZdM83wQeyEcz9ZV7FlTl8WXrVth/HWiN5/dvU9Gr2C
/V5B/NFv7M6y1Z1l7OL8TrU1bOK7Jtd/PsXuuPnP53Y/mvyFHX37b/U69o3j
+uf+uUNBUeIP9mrAO+Gf2ExzNzI2sWebrv/9ge1yp3DfNrbi4s7kIvbd95OF
uzlqwHa9xW8O+7wYtSovNkdKtvQ49knrw69Esf8sBsz0YQdcIyQRse9u/Hxl
hV3oy3tJd28NUImda/16qR0y/MwOvsPuCwksv4MdMzG5/ZS3Bj6vjwfssWyH
zuccGaoCNSC24eeXZdIOWeJdNN8P1wCzUVLBCUM8HyVEqWSJGlCgMKLs1m2H
0qWIUB6nGnjx7q/LRYF2SCqfkuBLrYHYF8O6T5bbwM++6kTmcA2w/ZbQ8+xs
gxHB1+35jLUgVCNMtzupDazfNW5IqdfCk/3PeIyutcHLkIkLJa/rYOXwI4Mg
ilZoaek04hupAw+lUAYe7J9u3Mbh2Br25a2lf1vA6+GA4Rb2sfMudzWwrTfm
dV1H68B9vVxmbKcFGjtdzk5hC98K+3gNO3bnqGzjWB1sCl/Sjd9ugQ+6weyp
43Vwm+9WafNWC5z/z+2L70QdnCseop/fbAETYVtWxdk60G/ltQ1abgHWw2VC
S1/rgFOh1efAQgsQr509mLNcB84J+aY1sy1Aq8hCY7xVB8YRxRs6ky2wcPFo
SD5zPcjpi8XeILfAYVu+zK8H6iGUVKYTXtcCql0q2vwy9TBqdU48Pb8FCtcf
N2/I1wP1vdwbYxktELkQGDmsUg+WMkz6e5JbYG8SY8gMdr+IlRcFNsv5EP8f
2BlncpJ/JbXAvc117+1/6cGfSR+wTSps3Xar1oPZ10OfR7ETXBqceLDVb1oz
k7HfL1sbncBWPoTulGKnvX6lbogduRNKHYNdLMQv44ZNfa0h8ha2m3++dxCq
BwOK2D+Oz1rA6atEUYpaPXyo4bU2TGyBvleF/ZXq9cDBYERQTWiBybzKkATd
enBzficS+KQFfqRWPfM0qwdJ2VvrLfdbwLbPfee8Qz14vv4tvuPdAvdZCmt4
3OrhriIiyV/D8ehX1HaM4f5H817L3yGBuYPcjT5EhCsONh01USTQrZW8ejiX
CMaNC2qugiRAjK5W3XQN4H6cRyvDHsDib/OJUpcGiFWe+zXq1wwNNWf397U3
QLTZ8tvHiU3AN+JOyTnWAG2CWyPSV5sgW09O+PSXBqj4azfecLIJNKPN2q2x
PXXT2e5iOxw5ffkWtkxUhbYidh/LKk0U9lmeqIe/lZrAQtstrxCbcV6lkYD9
drRYsw17fKt+5Sa2X2z1o9/Y+lX6l38oNsHzhPEOsa8NIBLIN3INe/rdXmob
7MXrwmfmFZrgsMuUms23BnA+XuHeLtcEB/p789qwmZ8ZnWySbYJvqwcZxL83
gKDJFGWNTBOc+1y6dRFblCGuVhfb/mDBD1/sLYc+1znpJqBGt173Y8ee/JLL
hk3xbr3m4GIDtFRnlahJ4XRe2UQPbBMFuxfuR5tAwM/+TfbPBuAWeuRx9jAe
r3f/nRxZaQCJkhoXXv4mCOFTINCs4/EZORC3uBePl0qEcD1XI0SQKPmY2xrh
vxqhAnaFRsg6fzTu7Y1G8IoX+s5m2gj1+9tL7A40QrXswbQar0bIVFfhSuxt
gHXnXVvS15rw+mkXatipgwL/vUINq03QejtmIku5FppLlegOczXDbaUpqVvd
+FzDH+gu7BvDu0ZUOmvg4o8E4n/czcBJcLlB014Dk8zDbdewK7n8XlFiq1Kx
9LtiXx+MOr7TVgP+fdqjbv/8X07CH+wU10fvr2NXzdeu/8aOm22Zd8c+pd1r
uYytdldx0wN7dPjngW/YNlfLmL2wg79yzX3A/lYuLHAL++xTlfy32C9Pxo0/
xn6r8fxCPLYqY1tU+r/6BJGiHva0acU5AvanUMFLNNiL2YI2D3maQfi2Wqc8
qQZ6n9OYX+RtxveRcL4rTTWwPUEQcRRqhs2Mo5QXM2tAm6V27ap4M9jVXF05
HlwDl73ju53lmkFrz+gW69UauMrANHPgfjNw3zvkLqdfDen9LZEfyM0gx9vR
3ShDgDsNm6NlLACHr0mjHtYqSFV8yuxtCFBXzBTgvfgChnupniqXAdif3vZe
PloBfh6JgxXYj931OJIlKqDuiDCFSDmAkqpiqZpYBcyU5R5MwR5Ts1b9LFIB
5l0HpFgrANyciJ0RhyogVPapRDA2c4KR5nGhClATt6B2fwHQN7Vz7AF/BVx3
23xmXgmQfzhlp5+7AmZ3bn5RrwLwNZfN491bAd0CE00c1QBFb13DqxgrwJ9W
25a7BoCR6piUG00F5NJO1xhiU686bJ+mroA3lPqMT7DpNux7eHdVwMmWwTU8
bKB4e2w+m6oCnNTzP9Rh+9eu0h7FbuugavqEHaBYsoYoKyDdqC5mby3AcTmB
VCOKCnD72n1ZA5v09Kb/wE45NDJusDPVAxDNIdv0Wzkkp+XXviYCHPhygPB2
ohz8JDqMUhsBJhKpKxy7ymEy9W2o9ADALf0fD5z2lMOxa+eFrd4DRP5noLVp
XAapJjfnDywBNLx92C6WUgqMm2oGKhQkiENNLT//vcvkfjkTZUiQP+/Znre3
ADTvms7YmZPgrLyHTYpSNrh4VAh2Y5v/nuFUlcgGJXLhXmkLEohqV0VO82XD
uIIaMR67ZrM5JXBPNtzx8mDfwu6mV1I+RIHLKyjzO1iSwM/T5HrHzyxoVdlM
PGpFAm4J9y3akSyYltz9dg1beEx7UrMuC0LemX8jWeNzt3mAITglCwyuumdM
Y49MzV1bS8iCAYpWXQobEjiZqrVdjckCYsyFnwextx/MsUxFZEEf0/6nCDuI
btBQPywLSNaCwrbYi0+pw0hBWfD1Ya5KGnZ+Ev1sjm8WJN/gVnr7L3+eKmvY
zSxYiLqzj+8SCTTFajjcrmYBD/f6rsd2JLgplciuuycLHAjfjRKwPcP2XLzD
hOv/nJOVhf371WhkHmMWML3gXyrDXor/0TtMnwUCLOanGrCTv5vTUtJlwSiF
cUgXtuQqO5KiyQIlhkHeaWxytWhpKGUWjNNcLFzH3hskGv5xOxOYdKbl2OxJ
EBxU8+bMn0y42G8jbYPdMfv7OsWPTODP5dsqwL5ltwoNc5kgdO10frwTCfSP
du6h8MyEGa3KfHcXEmgw8E+IU2XCgo3ihvx/JPhFKnt4KjoDildElq/cI8Hr
6bWZV2nJ8OP0/qiMxyQo7k1J/M0WB7UkzrTxOBL8EDrEov/nMcT1ULZuJZDA
O2nC+e25EPhp6KH/8hkJZJo5Ym8kPIThr2ekjJJJ4Ew9ZCHZGQBqMzVVFthz
XySZzLICoKutQ9YOu2TuQMID/wDY/dijwBm7TPvuWrFlAFRIELncsO+Z6sqM
ygfApYz0AE9sdpSlRsERAMIHc9TuY6d4+bEa9/rDtfz9H8KxVxnbVfMf+kPF
b5r/kv5Z43vvhrI/MJJk+SuxKRnbqZ+X+AHXOTOtVuwAZ8JIua4fhHT1LXdg
Vwlf8X4l7wd9zoHPydg5HYY0qwJ+8NN1V9s/S06fkuLEPmT8cP6fm0n8ZgoH
/eAyH9WeHuzW9vUA8wN+QOgIOPbPNr79BXf4/YD1wpb5P6d/SBlK5vODDyLL
2f98i09S+C2vHyw++Lj4zycPZnsd5PEDKfthpV7s298pOu25cHsPjogMYIv8
UVtcp/ED+bMNrEP/8p8tYopauQdXSp5uDGM/PqIqeGTuHjRWZ06PYo/p7Ug0
D92DQJbdIcvYLa3G97KE78GThzr+LCkk2PyVuBXo7QsfVG07xbF96Icrbbvu
QpOXhu1Z7P227LmKPHdh6fzDF2KpJPBvCjgxr+0JAoySwWRsVZr55Ju/r4Ad
/1Lfoeck/M4q3sdSaArydR73lLH7LtD40frLoY4bZ0OZsTWO/vBw/WaLpE5F
NQQ+xfEnvnHa+RSNjg5Mdt7Grv34Zif3ezTaurh3wBV71aU8Tm8lGl3rOTVk
jz1+fEh89U800jtu/NIUW3MYtaRSxiCPKMteHWzBng2zM/QxaF7ybP0JbMbt
v8Gx+2IQQ/RCwkHs3EOi1bNCMehug54Tw79068sfZWViEOO+uwtHInA8Bs4b
56tjUF7tJpdaOK7fvFbT4WQscqYY+mL4hARuSabpdyEWJQX8sbPB++Pgt53X
MWfikM6QNbIPxevbk7jToh+PjmXmXOsMwfslPfi84fN4FDp/nqED+89sEXlX
WjyaaJnLa8NmPtV3vgb78NGbZ1qxP4l+I19Jj0du4qszJOx9hYza+zPi0Yt6
1wDAFms80tOPLbN1htiI3Udn2yOXFY/SH/1Yqce+mBLVk5gdj3bMXaVrsZ1v
NvZs5cQjW2e/6ynYMh7ut+cr49G38WXxYOy43vUB6uZ4dIiDbuo6NmFhnF6I
HI/2jVU/MMf2EFHWQK/j0Q9FCj4N7M5ux7vW7+OR7hsXqX3Y3g22nxNW41H2
LlWO+UckkOokGgztTkC5DYE9ROxH9qeqdgslID9meeMIbPM9JWyaiglovwn1
QmMQvmd7PL0bzpmIWu6g6slAEgiosq8OriQivXDJqk/3cXzHTLNZhp+hA1pC
H6f9ScD25VWe9osktHY2TIeMzyuLenOB+5HJ6K8mL99ufN4pcN3VfvU8Ewmw
DtKdxud39aTvvlDfLPSev3zlGP5+3Q8Uv8BrkY1ovnUtvjXE8/179mWQfA6a
THLZpa6D4w1e4WjnyEXsNZ21ciokoK35e62yPw9Z8N6PYZAi4XchlWr3owK0
Vj5OP3eUBFoGESconhSgw6HRPo3YvsdBRDGyAP0pLpqJx9bde4T9RmwBij50
6Iw7tqhy21p+YgGi2dxOP4d9YzV67H1KAfrifVN7U5IEqd6RTwxyCpDeiyuT
pdh3E8+JQkkBsvg9bWCHHb9cVipVXYBSR1pOGInh/bD35kgQQyF6v/oYqkXx
99GDn2TPW4jCTa+958Ku+1irrSpRiCyML8ffOUICh/LXXrynClGa2klVT2z7
I2e4u7CD++c+uWJPzz5p8FQpRDyb9pHO2B8+FV8SUC1EjmSCgh12lmwOZT+2
m+LUewtskxavnDuoEHGZv5bWw1a83PnllVohGjx8MEANO+2YfZCEBm5/rbH/
GPaKuJ7Xw9OFSFCSKqFZhASlvmfZPhoUIkqJX4fOY7e1ctzVtC5EZqbPQ/Px
u4tn9oEC43ghshbtfPyDD69HaZ6vdUZF6FyJtrQgN54vLvePhoNFSI+URPHq
J4BnAlVsEpQiCUXKb/MlAMUynHcpTSuQs7KzdhR+t5VfqJNeJ79AFYIhVa/w
/fSFybqNnXIVOr4sSpeL3ZAufk7kVBXKfb9ifhv7jUKB5Dfs7fmvBeexR7Mu
sFaqVKETbLvX9v/LPyy8fFu1Cp23NDm9uAcgtUlwRAVVIX451fEY7PCpm4lk
NZz/+eBlBWxt5+umJhpVyKWY4dsbZoCMJQ72mdNVqPpZQoIWI4DJI2KZiRFu
v13LsYIWoJLMuNXtUIX2aFld5NwFEJLqsX7yZhVy6mBxuvO3GQw/W2QVP6hC
UzKBS/LrzVB25PxaaEYV+qa8EHsE23yakbkH+6epoAI39oh5ldDuzCq08+DQ
JD129K/TirrYIk0r9zbWmmFvaaNeBLYvfczBr9gfQ/gdB7BzwNmpF3uPf3nE
hawqxF3nXlCCbbw0U/sK2/VXyUIENucbwoxxdhXyfKdjZ/m7GfZ9vOL+X0EV
qrvhGCyy2gylPjI//UqrEAOl3ZDiSjNMHwuhc35RhTa7ZRe1l/F7wuy9ln51
FXpUMPLG+lcz9Cip3pSvr0Ifv+omX//ZDGpg+uhAUxWS6asPi/7RDMVmXdcW
26tQ+Ov7jVXfm0GwmnG9qa8K0dwokhtZaAZvjQXxiNdV6DUL+rb6pRmGnY5R
W09VoSVKq/K9Y80gNCDMYSNOQPZu/N+/tDXDVvFj5ZM+BMQ0193lXdEMBxSD
in51EFDwm8sOdanNwO55NjyYoxoVu3ZMvwhtBuYybqZfdtXo0LONpqmKJtBm
UE+Wv1SHSFJ7WV2weUROt9Tb1qE7RTOWP8uboHmdc+6UfR36JuSQ5otNFUtL
QXKoQ3Xl8ZM02P0BbNynnerQ/Sv3WKLK8DtaW0Gi83IdMrKv+C+ntAleKdVq
9V2pQzpdLwrqSppAiDPtwqtruLzZA3JfcROoyM2fHb9ehzyzQ/ois5qAhoEp
kyWiDtnt07mmldQEjLmHT6PiOtSxRihYjmyCwuUFfhdyHZLgrw2Je9QEGiqU
wiGf6xBV1pfw6yJNcNrUhZKJg4h8Yu8El7A3geof/6pIfSKK7JsLqdrTBMRV
7aablkT0wfAc1DHi8t5bzsbORBRL3TBQgi27pEblg/0mlf9dBvabJZ/nKdgt
vDe+x2GLR+QoAraOf+VWKDZVR9vwLLZ/14fdfth6z0av07oQkcZhMfHL2B3e
czl62OM8R8/pYQ9A82Qctlvu0uUT2PXeV1insN/ptDzQZGiCGoKkWPZ/RMQ0
7hNkRt8E+kHueVfciIiy/eD1K3RN4N92XF3qBhFx3iCo3qFtgsSH0L18k4hO
XHKn4ttuBIvk4M95T4lIM3r3DmG5EcpL1K5eLCKioVfKx898bYS91oPqvztw
/7jpVDrCGuFcxuLe0vEG5E3x/PyDw42gLyn8Q2a+EY1Rnv31sKkBRPJOrRms
NCGLK9sxE4YNkMUvJ/R6qxmNeRlO6i0RQUf4ldHODKC6jxGWkr1EOM796rHj
fhJSing2XZBLBIWvowpRZ0koZHNUajGHCHOn+2/YaZJQJ3uL5zFs4ffmOTJa
JCTOZlbuk02ELEWfVxTnSGjxeNJMUxYRNubEN19iGzaGMO7CbvW6cSDzPAm9
39N8PiKDCPP7BSzxdxDJzOY7cqUTYbKf8/6MLgl1i2qZZz4nwmF1w6gH+iQk
NlI2REgmQoxYoHuLIQlRVu+q6UokQt6VpDUKExKycTGhmYwjgs0bX1E1cxLy
D7PYLI0lwt6uv2HhFiR0JCNs4kEMEcZywt6OW5JQi/JCukk0EfYUjWYfsiah
Cd9QfbEoIgRrb06525BQ1ZLzx62nRJgJ3UffcImELFNCnF5GEEFkTOEwrR0J
OaDY/befEGHlYMCJVAcSqvxR5ckfRgRnwyZmucskFP3kp2vbIyKY9H4o7XIh
oS8HjOmuBuH+ZX7eZ/MfCdUas1X3uRJBLVic8UgQCSmLMfvsNiFC80vp15PP
SajcXP7GYRUi9PuaqPjUkpDmm54m3sNE/M4Y3PP3JQldf7pQuyBZD6VR3ziV
elvQw4NzidsidcA5kZJZ3tCKFGxpbIuwi/Img9exr03MHTLD5nptckW9sRUV
xPh/2YX9LLD3/GNsn8iRkorDdWBXrCw+jH359fx1G+xsrTwGvqZWFL4WslRz
qA6IF290lmL72HK7sWIT3gsHoOZW5CuT/OGqcB28I5KODWEz3i6485mvDrIu
D9s9aG9F9MUZ+xw5cflF/hXpnlZ0PIq1foqlDgIe9H2bGmxF672PnIwZ6kDp
DKN26Egruh2+oBPfVQvqbUND08xtKDemvcSMWAvtlN587Dxt6APtfh320lp4
GzzVf+pQG3rZFCzRkV4LT9wN3ttJtyGHm5MrN5JrYVJqfnT4WBs6QZgwv4R9
RinKeg772AK5UQe7RF5i9he2C1exgBK2j0K9C9XxNvRe0S9IBDte+eR3Nux8
A7V5DuwfGmU3BbFJNwvKF5NqIS7d5KYa9sKT17fI2L1+Wc622JZ57So52Btn
Gyz9sW9c0/gt/awWFp3DxqtOtKFDdhcTGxJqQbiGQeOLfBvau+e3gFY8rn9V
KfGAYhsKmXO4W/2oFnL56cKlz7QhzU5xAq9PLbj5zYYoXmhDoZ1Gr29drQUz
HpZAJWscL/PPabJlLbDdavOQu9KGNrYLb/N21gDN97LfYu/a0PR0j9afozVA
CJo7NnahHZU/XCUFxlTD8H9xU5ykdhRp635pYJkAbwJfMXZIdKAcXd6ydUMC
UBxByk2xHWj84gCtBLbjmni5SlwHOuBEtLS5QIDMJyt8zdgE4rvCSAMCdPtk
BqnGd6CpKOWVFn0CCHrJfmrGfiMwpLSiR4BfcjnqKKED7Re73mCuSwBdM/1v
KLED7V34IdakTYArB+/7qz3rQBpK5sGC5wlw11ZhXS2pA/FN+e7QKxGA9es+
b7XsDmQwxPh38AQBwjxkjqPcDhS9HlOVIEeAbNHPUSr5HSj4qAyfjTQBBFgn
Jk4WdqBc/91KwpK4fxJCLArFHeh+vxrjF1EClHxJmZEr7UDaA+8iyw4TYEnz
iqFUeQd6P/y4TvEgAXqLwukPVWGXhle1cBPgwMrsMe7aDtQxbfbgPDsBnquM
v2Js6EB+kQ5CL3fj9vxGP2w2d6CE58UnXvVUgV++4QDrpw70S+rRgF1YFdSd
enAwlKkTMaQXd/hpVYHcgZYQW7lO9Lp06I84TRUcmb5WGWfWiepVq00tOCsh
+8koj8NoJ3rodWufj9ALmFNWVsvU7UKXZhiGow6+AK45qYvrel1IVe3r5UK+
F2C5eYzFwKALuZMFB1p4XsDbEpm7uRe6UGkNcfck5wsw8OKJ3TTsQkKn4cAv
jhdA6J+1MDTqQnz7CD8E97yAy+x7T2+ZdCE5s0JOQ/oXkFZ6ai7XvAuNsvyM
DaB6Acu69Cf1rbpQeFrlecnuCogyM4tI9u5CubxsfM8isNOcCp0iu5D36NZU
VngFjEexaQ9iu+2LTSp9UgHWjv0zSlFdaPP4a8O6xxXwzDLyRg52ZAyJpi2s
Ar7uMfu9J7oLZT4xr+4PrYBy7kOed7Dr3ad3zz2qAL6MLkv9mC7UVspjuB5U
ATTxvgeEY7vQqixdMPPDCji2S6V5DfvoiP/YW/cKeCy8hlRTuxCN6LEqWtcK
qLv3RuPD8y70sstaW/pKBTzXSRAOS+9CFh/En5s5VcDlv8dmJTO70MobUnGA
XQXMtm2zvMzqQn9Pyt/Kt64A0680pTdzupBNZNbWgDmOz/5I/d48PL4RNSr8
hhXANG96wKywC4k7d7j/d74CwrTLVRNLupCocmhsjXoFLMQ58YyUd6HFS42F
lCcrwOVOXilrVRda8Gx/eH2iHOqqxjI/vepCH87LhDCrlsO3wz0RIz+7UL7H
d81PmWUQPMGmPMnSjXwGLFp2qMtgUumV20/JbiT/lo/6nHgxGHxa9PHI60Z5
1kXjoWmFQM13uAnedaNu5qF3nz4XgKnR3fGA391Ifa+E1eTHAlhc/LbVgj2m
w/2qf64ARONsOKnXutGZ5KTTLTMFkH7+/SFNbK2P5eWE9wXQnewhGopdxm7N
WfC2AFg49gr2YC9vz4w/nSgA7pXbW3rr3WggszPYe6QAeF9ylgxh9xxl47ce
KgCGS9+lTTa6EZ35OqMYuQBeHZElWP3pRpJu/VmrpAKg3DwSZr/Zjb7ukD+0
1BXAn0JCmfNWN/pw5uQVi4ICqLh09Oz1nW5kerM98UdiAeTuGHLcpCCjGuZI
76CQArgl16vuSUVG3Fs6u7hvF4Ai07lyD2oy+t1z+mvcq3xgWVnIIXORUT5n
h0PC0XwYdxcUZRQno8sOZ7KFQ/Pg/ZXyVGllMqLQl/9zejYX/M5Y2srrkJHI
82NtDENZEMnHACIhZMRLunPtE3cm0EdT93I9JyPKZX3ng9gUu2XIB7F1eD7Z
mXNlQsX8o44j2H5qyCqaMxO2zwmQpLH5b1ma9OzLBK/DW3UK2C+6FAx2YWff
5q1A2H1NtzS8OTKBa+VNsgH218jm45/ZMoFzLc/fFlu1iEXEgjUTdC/6Wrlj
nxaKu9RHkQkivs/vMaWRkdHsE0X0MwOSXUM+5GEzZKRWv5jJgCTxGzGq6WR0
yuD6mPCrDOhqiQgexo7a+c1CV5UBwq9VFVczyMj43fUf87EZcPvQud+7s8jI
45XIQ7JXBlSTjeu5ssnoyI3b4wUmGZAXxOzLnYPbdwrfceTKgAZh0ey1XDIK
07JousqZAerquzp2sM2qpn3d92WAS17GHE0eGW20Cp303psB8hMef5mwidEH
1+9yZEBn3y3uvdjzJ8eq77NngLRXudT+f+k+jTLhrBlATR1qIoZd+SeiKHFP
Bsh0SHkoYGul6ApnM2WAiGX2g7PYgftfqkn8SoeURfbmQWyPM7nXWHrT4QNR
Iskkn4zO6ZD6f2WnQ8JTK7Yx7PiLr9xG7qVDkeKew8YFZJQyVdvxZPU5xBKJ
v0+XkJGiF7UFx/VUeNy8n+BdRkZ/2uPmH31Khqvb3rxz2FxrXnGUtklwrj9h
PLgUryeW9LdpY4lAtz/sqVkRGR2nyg/SWIwCsxsm8l5BZCTrr6489TUKlHSa
ms2wixQLVr0/R0F+xX4VZey/AVNVLB+ioFyt5MUB7JSs996F01Hwpfw6HxX2
8mKl8um3UfCx0sHv40MyEvTZGrg1GgWMOyUSJdgZfNEeRYNRMPWtvvImtqWh
r/C77igwsQ9hV8I+stP/36egKKhU/GG7dJ+MXsvUT62oRQH3V2v9Z/5kJJl8
6AzHn0g4MfD8tcw9MlIT+dR1/mYkzLLd/FJ/B7fPdZP2vcNTaHyyfeS5Fxkl
/ehlLTGKAE893Tvq7mTUufP3YdWZcDgmkGeef5WMhA+8/rN24gkEjO9yGXAk
I46RKS8NnjCw4++avWSG1/ObqykZ249gw+pHzNJ5MuqXX28+MhcEhYKyvA/w
flTxinP4Tg4E1zAHrj2SZLQncR99ith/sEj+rLfU0I0av3/YTNfSRDMat33b
bbqRI0P6XV9vTcSzFi2aju27uq/KNFsT3Ym7OHwHWzzgbK7skCai5Br3NcZ+
7ClmyPRXE929LSQkjZ2f3lTzSVILVZTJdjJg61KqriaHaqE/hAkGsO5GhoU2
vPoftJB6U9wZL2znnT+HKdTOofuxDrfEsOe9PlLVvdZBVCRNP2WLbrRx9IMZ
5VUDtB35mFbbtBtdoaIbcvM3ROUeemwmRt1IUemTlPA5IzTUXJpqfaEbrdg3
mAU+dUBBxVUq87LdSOqEaUbNCwc0ZHr9syv2nk8WJ76+dkBcR+3v/ZTpRva/
8jj51x2QZkvJpjc2cZT/jMF+RxR/6sLlP9LdyHtPetN9VUek1K1d74/dyHX7
3GyQI3rmu3AiRKob/XfsHpV6ryMKtnlnFXm0G+3lrPyayuaEhDX5JRLx9yXH
invfs5fOiEFd4/kroW7UVXSI3vvpVTS3xbX3G3c32k316Iu0jiuKF3H2ntvT
jSLp+8baad2RAEtvXh11N4pt6DpLz+SHPske83ye2IWMUYCmvVgw+nMnPJDA
14V2F4cw9uc/QVF5AXSxsZ2ojrjRoWoYhc4f0fB7w9+JZrklXRvNopDDIaWd
Z3yd6FNtRpXSpSi0rMeGTPd3oruDZ1JrnKKQ6r3viIO3E8kl0IgcuxaFrrwi
U7zk7kQP1F9eKPeIQtc8sx6Ec3Wijm6j+Tz/KERfpbaLZl8nsrtzZdfzJ1Ho
smZm0D32TsT95nZm9LMo9OxPPs0ySyca5p9xvFUZhTz9+WjfMnai/uUbEiZ9
UUiHmiqojaYTNZTSrRz9hOPp1vfPo+hEK3pK9RQU0Yg6jMMreLMDGfvp3ern
iUbKccec7H53oLQXj0XijkWjvIckPYWfHUiu6ogBi0s0Sn0TyzCB74vtfkOM
N5OjUSufYfp/Ux2o09D6eGN/NNK4aEP3bagDRUyScr9TxKBn7r+UbLo6kCdt
Zca1zVjkEVhPoWXZgfbV3JRLXYhHj67ckyR+akcCXe+FPr1MRFoUfkWJru0o
CwzsSouSEJNR+x9YaEPSWbOLF31SEP3P2aMcTm1oMG3DePRuCko6+ydQ37EN
7ToXlWnhl4I4pSR6whzw++NlzuupgBQ0N+G9q8O+DbFeO7FoG5iCKL9PSFFg
n9ZWW5wNSkFuu810le3akPCaZsN8WAoa1A689u//gNDqiAotPk1Bhb7MRkds
2lDRxIjQcmwKklxZpXpu1YbSTl4SZelMQdJSRQtium2ILd1h1671FOTq6MiU
eaoN+Xg88x0QS0VnGL9aUB1tQ/RJVuYeVqloX/jvbj3+NiTOoxc9p5GG0FvO
+Ie+rWhsfc+H8dNp6E75oSAp7PEwF7mBM2lIxXruxsTdVtRVanqv7Wwampo2
swrCVtOcaqnTTENGCoGnpbHfHl+nKtNKQ6kWDmKTd1pR/APre8/Op6Eu4adL
0thlx3g+BOqkIdXRqLJgn1a0bHb0pJteGrp95j/HN7fxe3ZAqTfKLg3584Xy
H/NoRYpldz1LPdNQjJT12dD/WtGejmHptkdpaIu6tXbCsRUJj9ptDSWloeY2
+rgjNq0oWbRV7aNpOmpYXDR05WlF6g+8LifRZyCtF0HaWq9bUHiQ3C8Tpwyk
p/0usTqiBWlLiU5lNGegrulAA8LZFjS+oqWzLzcLfRyUf7HGB0iCm/HqvEkO
KvPb3dWt04A2ufJEzpjmoCAjW6P32g0oS1d2Jh3bP8VwcvV8A1LNKX62ie12
9KcVE/YXpn16ZmY5KG5TZVzoXANq9nLbqcRWWFcwUNJqQL8ObFn+Z56D1A4/
knM+24Cy5TWLBS1y0E/3UIrY0w0oV1Lnxzh27Y1/v8TVgPrUxVd27HJQ7+lk
67vSDSjdIE1C4EoOCqczKJHkb0AShXdiT7nnIN6hirxRxgak/+aJmPGtHORb
wqbts05El4/wjnoF5aBAufWHWcNEtHlRyyYD200m54EMds+9hrle7N/FrP7N
r4ioL+vW1TXsoTWVO7rYf1p9FoWCc9BNdknPySEiMnjTclMfW+/P5LUr2CfX
Z+7kYg/YEi2DXhJR1Ed+/y3s8PnUMxmDRHS12TvA6BEeT0bpM40DRFRIGzVK
H5KDyuv1+Gf6iGji6n7BZmwzs9Zpml4icjLhsvUMzUHxSk+eipOJ6FJRBldw
ZA4SpZGviKshopfpeR+jE3LQ8e/MFr+ziejticXOpOc5KEHOJsQgmoiuxynV
p+bkIKGda0oZ/kS0PBD6peBLDjIdtadcbqlHL/1usDZL5qJfWnaj3ynrUd/2
iP6wWy4y8q9cClOtQ7waXVXvS3LRYUZmf9LtWpSlfvzU5JdcJH/uaubj0ho0
jz65yobnI825UQvNi+XIdseurxw7RHC7kaBbjtSqL+2TishHh3XRGyGtcnTE
4J1WCTaPcD8hSr0c5de8cxR/mo920+We31EuR/qjl64WYKebdyRdky9Hy5bW
WjmR+ejVenTFWYlyJLf3Qm96VD76kHOdcECgHNWZyK4mR+ejzjf6ub/34vxj
DfJmKfnIwOjronhuGRqlTRFeyslHlcsT8cvHy5BL7FrS5bJ8pOTq53KhvRTR
fei4XVubj/S1v8moG5WiznTpmR/kfORjIvT+rXsJUvquof/sTT66fv8lXffj
YmQ2H0jN8j4fsdn9iG21LkbqC2ILAbP5aGB5uqhYqhiVv91FsfAxH8Xusj7/
kKIYNd7rctb6nI9ioqnH6BaLkJZL2bus+XzE4Gb+LOxNEfriFeey/SUfhdYJ
RtCTi5Ds1e3i8m/5yIVm+iplThG6SO2Cuhfz0Tsm5ltsIUWIjv3e43dL+UjZ
fkuB978i9CEpN/zXLxw/V60Qn14RWjpjeZZ6NR+VsDw6wSVThJQ1T40LbOSj
Mkful+urhUiZ7aXq8e18RNl7khIaClFbTKuXKmUByrnu03r1QSHaqQRvRFOA
fmtaMW9oFiKKRw2OOhIFKCBlejN3PQ+5K1MvFOsVIAdWJ/K99Bz05nn/tIFr
AeI73bTgqJyFljUlfx0OKUBdXBPGD5+lIzUZt2y+tALU+1bu1Hp2MqrVK30u
g71tE3VQPj0ZOZyxijuDLZASteiZnIw2qW+HmGObWB4rfBGfjJTuU9x2xb51
3cfgR1QyGs5bc7iPbVFkOyMZnoyOSrYcK8BGXz2m8gOTUeUHtd+D2P2rjI+E
7iQjHtNbRWv/6r8q9i7VPRk1tMhkPcgoQOHdw30XWZPRTMMYFW1WAXJSDpqZ
r0hCP1kie4KyC5CrXyOnrWES8lD0WdvOKUBPStecq38+Q8K5ApMPKwuQRmha
wgmpeCRLE32sDfv7Q0eBQd54xPSu5SJVVQEqsGC1d6GLR/VG5Qrq2BfMnpnv
LMeh7+1OchrYpZLv1iqw/1cB3cdCHcdxAL+4iwyF8rwpk6c7dMK50EchtWto
ns5iDSEPPTihxo0cYbup5Yc7qrlIP6c77vJQnmLS2EQW0yVPzXONnCF5qO/v
z9f23mfv98dNoG/nhfzHTbssGllNNcXcBzk302e0T4kBfbPLwBd5gkTVs0eW
J5O0LiGv9nUGFK9hQCq89jwc2Uh/oyb/JwZ+3Qa2d5DjOB4TGXMYBHSZFBFO
G3JbDEe2pJopCYvmXNY9kK8vKSjJyKaa38YYyJMizIgwWZfbTkduX753gvCO
xILlgCx1jLAhnAcDChryYPdJJmG+OXXUFpkbsHKRMK1JKKUiD081swm7sNUL
iHzUU/4m4aDZsIPOyCbCKIyDPBgjziX67I66OqYgV33fVrmA7P+vOvw+8hPG
+Fo5sqGrbX4WsiAhaHoVmZndJ8tDpqfFDHrPY1DEC4vsIfb21pNLlzCoITUa
H2jEQSvpsu7CL3Q/a2ziLLKS7LHF+I3B48IecSZyJo33pgD9f++RuHexGfXN
IQe+OloC53mzDex3OKjVjOs3O5dA5MizhIE2HJx8/ClNISXgWa+65tWJQ/et
Kovq9BJwvrtS3jmGg70/i1nRUQptXynpEiUODmyyevZeGVxN6is+dLgWeJp4
TAJDCPs57cYDtFq4Yej3MTmxHOihvgErrFqQvtjwkAgrYCPCUz0/UAw3zYbo
W50i6K/UFnAEdbBoJVrjUV9Cpf7tulRdCXzQC3LNOI5DvCK2kN4qhbKq0y4h
YjFoWc0s53k3QKVriLnTyGvI3HaU8N1lMK/5ZVoFl8IpN3WbWFwOM59t2F2h
DbCb2PZQZN0IiuAaRZypDDifgif3WpqgI2dmRyKWwVI3M3X9SgusDu9WHNaQ
AyXCk1qufAsG5llNpHNyWLD04heXtgLDz65LJ1gOahSNqa0z7bBfLZrUYclh
Kn6Ke2S+A8bczfqtLeXwQxj9V8Z/D9wHZJNjyzL4D6mMoVw=
                  "]}, {Automatic}][$CellContext`t$$], $CellContext`t$$ <= 
                3}, {
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {2562}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1: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
/wEjFUQM
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2mEoaEHAoOG797PWWuuzVpIkK0mSJEmSJEmSJEmSJEmSlSRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ2ufuqefP+fvONOfMzP+p/7/lrf/lz58//xH8
5/8/fwkgkCD+vQ4hlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhlz8Gwl8CCCSIYEIIJYxwIogk
imhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWMciqopIpqaqil
jnoaaKSJZlr4N8jbaKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeB
RZZYZoVV1lhng0222GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaF
V95454NPvvjmh1/+Tf6/BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrp
ZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd
9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77
HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Muf/9CfAAIJ
IpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskjnwIKKaKYEkop
o5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKbHnrpo58BBhlimBFGGWOcCSaZ
YpoZZpljngUWWWKZFVZZY50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265
454HHnnimRdeeeOdDz754psffvm38P8lgECCCCaEUMIIJ4JIoogmhljiiCeB
RJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa6qingUaaaKaF
Vtpop4NOuuimh1766GeAQYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeD
TbbYZodd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaH
X/78V/0JIJAgggkhlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhl38f/X8JIJAgggkhlDDCiSCS
KKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzyKaCQIoopoZQyyqmgkiqqqaGW
OuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGGGWGUMcaZYJIppplhljnmWWCR
JZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSeeeeGV
N9754JMvvvnhlz//TX8CCCSIYEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQy
yCSLbHLIJY98CiikiGJKKKWMciqopIpqaqiljnoaaKSJZlpopY12Ouiki256
6KWPfgYYZIhhRhhljHEmmGSKaWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30O
OOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OSLb3745d8P/18CCCSI
YEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWM
ciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZIhhRhhljHEmmGSK
aWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWO
ex545IlnXnjljXc++OSLb3745c9/158AAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
aaOdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvnimx9+
+bfZ95cAAgkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOf
AgopopgSSimjnAoqqaKaGmqpo54GGmmimRZaaaOdDjrpopseeumjnwEGGWKY
EUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOc
Cy654pobbrnjngceeeKZF155450PPvnimx9++fM/9CeAQIIIJoRQwggngkii
iCaGWOKIJ4FEkkgmhVTSSCeDTLLIJodc8singEKKKKaEUsoop4JKqqimhlrq
qKeBRppopoVW2ming0666KaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWW
WGaFVdZYZ4NNtthmh1322OeAQ4445oRTzjjngkuuuOaGW+6454FHnnjmhVfe
eOeDT7745odf/m30/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vxP/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXf4d8fwkgkCCCCSGUMMKJIJIoookhljjiSSCR
JJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGV
NtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCT
LbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCRJ5554ZU33vngky+++eGX
P/+pPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy74D/LwEEEkQwIYQSRjgRRBJF
NDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5FVRSRTU11FJH
PQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAjjDLGOBNMMsU0M8wyxzwLLLLE
MiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfccsc9DzzyxDMvvPLG
Ox988sU3P/zy53/pTwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8u9zzlwACCSKY
EEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58CCimimBJKKaOc
CiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgRRhljnAkmmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eKbH37587/1J4BAgggmhFDCCCeCSKKIJoZY4ogngUSS
SCaFVNJIJ4NMssgmh1zyyKeAQooopoRSyiingkqqqKaGWuqop4FGmmimhVba
aKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeBRZZYZoVV1lhng022
2GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaFV95454NPvvjmh1/+
Xez7SwD/D/yVV04=
                  "], CompressedData["
1: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
Gnw8RMSzV27gUqcBqfRmqJDpMFFmHA27ZGhgKqHPxH1xhPDi3DZ6+g8VspkV
Wrn6xokMxnPSAujTgrf2JZHGCe7aIxbL7ZhPOX2wVhoYJ04+rE2pQ+82Ky2q
GRwnYJBzIgEtUDLEfGN4nOBQYBV9juZ2pOlNj4wTniH6IbLo21qcQ9smxolU
i2t/+9qo8OkBne3h6XFiuGqP0Rt0N9t3mv7cOGHKv85h20yF88Rf+9RtE8Q5
t0tSFxqoUOx1XZtRdoJw89GNlcJ8Y7NlorOhzgTRZiDsylBDhalNX/6mWEwQ
1YfZd1IyqHDl2PBolckkoRwXfa8ePXFBzeLK7Unikt90fjyal9FiftB0kigg
zTO7oHsUnJ7Y3JkkuNPT9C+i7RvuLv+9O0lwLO37LIHem3XY4aX5JBH0+Lls
K+ZDmjl+9okPJ4mGnqJcd/TpL9dsflpOEizHu+UOoCcKE+/12EwSBw+U7PLF
fGr/hfQznI6TRP6nA019qVT4Ox7KedZ1kuBZF3mgiN7/xqjO1WuSsKXzvr+E
+Vj1qZBUqs8kceDZNtMstIvCiL+9/yQh9KzsihW6ZUnLlPxikojp3ZH0CF1l
e7lpy8tJ4mH3Dcp9tC7cOC6KdraPP3cPfe/P7QwC3ZQyGW6G3lpyT/Aq2ua5
7PQttLrjw1c2aMIo6/UN9A9P60dx6MhU6cMG6JAGJuV29OPH4S166NEXB6ib
AyeJbyvbJPnQHXGdVpteTxKflmuejmB+GddcNEj/FudbmjRSi/nn71cd25vj
Jgn7pwF9mZi/9pawB8TlTxK7BdpNgzHfvdFko2NXO0lw6fOGSbyhQqSLt4Hd
uykitmUwRMqJCouD7MlSV6cJmSH5d+GmVCh3OWXxln+G0HogV+msheszNPIh
fmCGcFeOs2vehfu1xblftGGW2AAWrSfRz56fWL/ZNEt8XpMTztlJhbz9EzvC
WmYJhQPU6yLoH5dFhFraZol8/2KPIE4q9O+bFWfvmCUEzjwPYUQvl2pKanbN
Ev0zdKFDO6jgLblTsKhvlpBvcdYu206FgstMNNmhWaIvfTE3dhuu16UdxbFj
s0Qm1wMPbUYqjISEre7bNUccGGe/L4TeJ51P14I+enBQe2EjFXyH+pi8uOYI
+qmRgxVoPvv5rXLcc0QN326Oj2ir6qmdQ+i6ny7zD9Fbqhr3BPHMEd8pUSk7
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
ylWPH3KupkWDBws6vt0er8M/vyy3PpaiIRpfoieyFdfhzcWnzuYSNERKh6ho
dVgdXin54XdBDL6PjqR6e5rV4e9s3fSCJ6GdZ0BaVrIOJ0pPEOhEaIgNJ/m9
K27WYuMH8kWZ7DTEbo3LFQ5RNTitct/MQSoaokhT5Mr5xmps6H+y4SqFmngm
Tfb6hd1VOMaf+Fu5lZropWFh6qZUgd9+oc5aLqYmOp64l0N5UoaXymPv3kym
Jgqo8Vxv9SrDpW/DndTAEe2L1CWeZfgeB6+jKNipjyo92aMMl+ep2LOC7Z3l
jV64leERt712K0nURNm3/zF4PCjD+w3uWXeDOwTG719xKcOyyg8tksEq12fH
DzmWYUHfmet3wbzvSxwWbcvw0PpfbTmw+/42NbnzZfjEHqp4vk/UxLzD5488
5SjDMqld16jjqYnOZfe32iZLsYJzpe1gLDWRUj7+V7iyFNvKa/RVxlATLQtz
rViXMDbNF0/zfElNNKYMfSm6WYLJw+9+Hw2kJpJdn43qtBbhPvbTUhWPqYns
X70y7bTycZ/5XX3u29RE/d2lsVpNOdiz67SgoCbEY9PpZ9b/ivHUz5WBM9TE
i8c2dj+sSMdVtOevXOWjJuYbqPRa4nTcyvQ1UwnsvYspT7MwHVO/FmY9A+ZQ
0IqU+56ON/qf3T8KXt9ivHc0Ox1/n/tJ4gSn6Kros35Jx4dqZmTowZHiWUfG
k9Lx0Y2dmxO81MQXwbupKj6kY53zX8t+gwOjtMbevU7HHm+m/b6CmySDaRkv
puNnpyYZw3ioiSwJgy/85tOwoJXRHZsDsN4jhyOo49NwoL70RyVuaqJaz346
P6003HHeJ4Wfi5pYsP8Wx0+BFPx4l0XvJ0Zqol3CPtJl7884Xp/Eq7+HmqjH
UxtG7k7Gf/uzsnbtpibeyxpWeimXjL/UjrzLp6MmDtIKthtsJWEbyuTOnh0w
P8n6TocqkrC8v+MNGjCbg2h2TXkSxs0fuKjBqH7PkiP4wWR92xYtNfFH5bQ0
B5irbePFJjhdt9OjpCwJfwoUufIPPPvoV4kVmHPPdfoNsPRmgdK30iTcmpzr
swqm7q+spQGffbhvfQmsJzimpY2TMPGRvcsC2Kdu86VFXhKWK/4t1AUeybLo
d8lKwpPCA3/KwJMaAjL+qUl4tWeHwmdwb9fz8bjEJNx2Kb3jFXizQzWh5GMS
djkn8sgXHJmrbNYVnYSP/wjkvwvO+xYksPI6CSsF/Cg3AbsoDOVKhCZhlsj+
XbLgLwUGZna+SfhoqtsVdjDrvSG+RLckfPhH+MsZAjUx+PlernGOJFwa7Cn8
hIaaSPqlryOTm4iz77wJY6GG9WXo/xWum4gfWTbiuC0qYmbR76dTc5+wxKMD
JRKbVMSDkbTd1kficJC/cFb1NBUxQizS5MLXd9iI5WKwSj8V0fUkN72cwEvM
EVV76FszFfFnxPcCX4ln2FQ25gpDJRWxqp1Z0E/fCcflbkxr5lARy0/b3r0p
8Q6lkmjehTykImrKz21eoE1DM68LExxkqYh0co+qLxjloFMGdmWji1uIbH0j
n/9NEZK5m2ClcG8LnWJL2qX2rgjdP3MhjRbM43FIxzmmCE2mrc3Vumwh6ee/
X0V/LEKBcydkXoAFlTNbKhOK0LFdnY/1wd7hFXumkopQxhR1JS/4iqimEzG9
CImZqWikOm8h/OVTcUR2EbrG+bD1DLj4c8U8Ob8ICR6MNKy4u4UeHxtl3b9a
hJoCiNxE+y0UmzR7UEG6GGmQl+iLrLdQ1SziuvGgGAXeahE5e3MLselKrDvn
FqPGsrlHWaZbSHiHmEYaeykKYNE4qC65hZjXj5PU95eizUGr+lPgsLE0s0mw
VrGNOy/4bOP3sVCOUrTjnsFROvDo+UvOopylaINxH56SgPEq3FxrAGf5fNcj
gRlNcncxc5ciOtNM/8/g+jghdu0DpSjFQ/+bG/g+u41U19FS9ExtxDVRbAsZ
Fdx8dfNUKSJKBXI1ndxCzwsY5CaJpYiqSOH9hsgW2nu4V/JASSlyP9799zPX
FpqaKLDYki1DjUGL/6nuhP6qXW+jvpchPg025r8Lm2hKxTxhTKocrcSdZLYc
2EQUgYK/aqJV6G6E3hUWx020ZpgzY8pbgyZc/vs1tfoPUfoMJLeofiEqm+s3
d/j+Q3fsWf+td9SjsktnnprR/0Nt50UnX+k0ohz62k2G5xvo/rGLzE5XG9EL
VlaDsvANREbcEpd0G1FDp0PmfbCTb7rmkWuNyMrq5C5hsM3Upt0mODv3imlP
2Abie8T0tEOvEbE3N+dEgD+2pOSEGDQizuSP5uuhGyjsufxf4vVG9LJ0lf4m
+Fboz9UFo0akLNeTVReygVwzHohv3GlEoeEtXwaebiBBEc/eLc9G9EzuS96y
9wZq8lKlowpvRANBnXV7PDaQQJ3Kp43YRiTwDE/w3d9A8oSqaQ61JsQTFMeQ
KrOBNAYSwrFtE3LS63pdcHIDsUkyThuENCG6z6tWPw5toFbZ8N3k9Cb08ZCT
ZyP7BuodUum/VNiEzn1rU6Nj2UCeFcGOX2qakNrB0sdyDBtIPGLfN5b2JsSk
fZvHaecGwqebX9h1NSF7t4V/fjs20K/2nyxVfU2I8ef1H1GEDST0Z0GKb7gJ
vSfHPMyg3kAZjQul50eb0G2V5fExqg3EXTirYEVpQuJN94wEwecSJ9MDJppQ
6X1PWvOtdRQ3P8GYNtWE3tkSRt5vriOGr7Mmv2ea0EpsbFXHv3VU/3L949xc
EzrqpPGRDfwjmXdFerkJpTsOqIWsryPxBC1Wr/UmdPBr1SBhbR2pn4yYq9xq
QgZ8q/YeK+uoo6/3FT1tM1pOfDw6t7SOXi4/YM0VbUaDhnTX3o2sow/doQcu
GTajXUXUqXId6yjqwJ9P1b7NyIWXc7q9Zh2t7eVNEsloRhPmayJ38tcRs4fk
fzu1W1GG2VfPdd51VKy+fCaE0obOzKOX2t5r6FeJ7n2m8TY013bfmw9MJ/L9
63Owb88p+3GvNWT0nG9630QbWlUuMswDF0wGCb8COzAzKPuDWRQ3bnJMtqFZ
uSOSOuCw9lHSgak2pHV9aPfE4zVkqTCmfHC6DaXQ1/T5g3fc/Zd1ZKYNzVyr
y+UHJzVT7dZaa0NxtWcGD7mvoeSP70hutO0IDw/nHXZdQ/++p/DGM7Wj2pOb
ZwWd19DOXoauGs52FHvpg5mQwxpq0Wv7sezZjkabhDL4ldfQR51fo4ci2tFv
8pGH3Apr6B39q76LSe1IIJlygO3MGrpIrZ1hWdCOEq2V3zCIriHHtAPaHg3t
6IftJIUgtAbntM6+t0vtiLyTi2+afQ19yBLmfc9HQpEnjArbdkC8hve2z5RJ
6KbUx5rvi6uI9+9/84YOJBRytO3yq6FVtJKleVpuuQNtzeR1qVxYRWbE8RId
1060fCmQcCV2BfEKPd3ZAU46Sz3NCk6PH75y40En6rt3qfPPhxVEncPwagDc
ampeFQveZbzy5/bDTvR09WKmFfjr6xTeSfCa4so7EbCIxJv4ZbdO5C694vg9
ZgVlsEQL0Hh0Iv0lUaUL4DyxnBiGR52I4P+e4/f7FbTu6G5y72kn0qzLEr34
dgWF7/0l1fm8E0nWXl0ueLmC5umf8ipEd6IIyfi74uErqEQ16MDHxE6k3VkU
kxi0ghL9Bh2zk2E83HQ0xYErKKo0PLM6pRM164pbtgasoN35Yd1//utE73Ll
ysafrSBr4b6lifRO5PvkGA8BzJJpMjQDZmxRsqQGM03/bVkAT9GZp249XUGm
I9fLV8DRYp6z/8C0UR2ZG2A2jSjpDfAGQS+WKqMTGZnmeK2BI9W1Hu0Ce9tP
Mi6DPdzVDJnB7VcE38+Ds0LPn+EE3yDcEJ4Bl73IId0Cizl559WDN2UKH+aA
d5/01P4PLJaiw0X7pRMFtuksBoCtvkUrh2d1IoaUSzp3/FfQXv8betzfOhHP
9Tupmn4ryJdlt5hvfSe6UGEjLO62giReTj7qG+5E7H05NUwOK4j+BqeCJFUX
sv0u/2zcYgUNs5q5nZ3tQorvI+j9lpfRcoR0Ln3PX1Q9GN/qGryMTuUrfU6s
7kbPCtbda/mWUUjDN3ma/3qQ06x6oH/WEuIoMUuoFO1DvfKuyns7F5Ewt2Jg
zVYfev7Q5UMU1SIKe8XGS0PVj1I1C+SMwZ+qFTLlwEzTd/7wgXeklyreB1eO
rLn2by2gK6rvWjPAbbI32T6Bud/+shoFXx77nHULPBPb/dSIuh/xUo2Nj28u
oC+uVxIbwHRhrwXvgk9x8ZWdp+lHH6KzTJb+LaDBN6+US+n6kU6whrvw6gKa
E9lZJb+nH80ebzE2WVhAyf/dOlewtx/5Ywu6iOkFJDqSnHaarR/JfOV5UEVZ
QF3k1w+O8/ajzOakDJH+BXQ14nC9AjjFh+sHG/h+x1sBXbDYuWe9//oWkOz3
pQc2YPrZ6eVhcKyofP1jsGrcVeZG8AeFOwKR4AX1r8fywT/Co+tKwFLRVobB
YLEL9q5j4EoSbdANcLpBPz8bXz/iJDwvEANzH9RILeHvR54GmdFWPQvoW8cx
ZptD/chSOL4g+i/Ev3JSsVqgHwU3PFk+0rWAjsx+MTp8pB+Jh/08kvFnAd3x
/GLsLdiPZrwS1c92LKC9ySIXu4X60XeVA46l7Qto3fpt3evjsF48bQnNLQtI
++b8rOaJfhT04l85uXEB2f2Qydkl1o/Sjr+vW6pfQPFl1vvLJKD9dl7prl8L
iO1RQ12vej+ySbmQ9T19AW2t7hPquN2P5EbYjEyeLyCNx64cqT79KGn2WteG
8wIqZDN9fS2mH2lx7dd8eW0BGdYZvO38DvPdp9ZySBr2QwH5PM4bQGaKBF4O
5nl0/kG1nXPqIHrZdf/knaFZtMaVrtgMFssMs5wlzyJuDhoOyf8Gkbrw5ShX
cOKdqtEXYMO/nxvWB2fRR87l77Ngz/pkwhPwXq43ftppg6iHVlWaDtxfks3J
kj6IQtl/fWQemEVpSYHxjeAAr5adB/pn0btSToHnGYPI+LG5vWDfLLp18c7o
rtxBdMqmkTW0fRbtvtaS6lk8iPKaLI8u1M0i/glmm6nKQRQev/r5esUsYj88
KmBUN4hWLZyiSvNnkfAVArGYnYyuHfodFmM4i1INj52UPUJGn/XMB4yVIZ/V
jo0kSTL61YD4uKVmEdUb/XTCeTJiOSuv1sY/iy4U3WHrv0BGhH1mbmsHZlGy
hl57sTIZvfqZEcnPOYvIv5nno9TI6MDFs9FKbLPo6JP1c1qaZKRs3PQnjGEW
LVz7HK5/lYx+lppv8OycRflB+O0NfTIaDeocSaWG8f6VNLAwIqOE8gMp0hsz
aP71Sr2VKRn5HDMjVi/NoKNfrv61vk1Gu/V8Z/vGZ9C+mScVtxzJ6Hqy+8Za
3wyy23va1/QBGaXYeFuwtc+g1/r8B656kdFV+4YjJ3/NoACVf+cK68konCc9
msZkBoUGcb3h4x5CCxKPUmX7p9GHrj6+RzeHEIfS0xUC3TTSYfrU25w2hESt
7XxshafQ0LOh9UPzQ+jsAYX8h1cmEbp5mEUeHGPblSkA3ixhETIAHyo/kVKn
MYk43mbKuoBrpZzjXMGPp7euhIEPlP4XdRB8vGrLIgX87vafF7Xqk2j2jllQ
L/jRFI8PH9iJ0TeTfQHah8WdnS9PIs2k222Xweq67BbVlyZRfxY1jc3SENI1
bMhlVJpEH1RNv/qvDKHEQztXdeUnUcR+r+G4tSFkXPr72Pszk8j3h+mH4o0h
ZKMvrTwoNokGbrty57EMo/VLvs+SJiaQu7H2Lh+hYTT/n1GfRcoEComntzwg
N4z4KVLhnLcm0FbbqKCf5jAS2HWs+YfABDpqYapeZDmM/Mv+DTv1jqPLqY5H
mW4Oo13XMkZNesaRrYjRlun2/1yKN8bUu8fRTfKh1iywK+0YRfbvOOJorUgk
WA0jORmX8WNd4+jWKvHeNbDonejx/Z3jaDVtln4VXLV5dHyONI7WTu599f7W
MDJnPznW0DaOnFyi9hFvD6MD0v8NpbaMI78+PeWP9sPoxiU6R8WScXQhxfb5
usswOsjZZv7n8ziKjv06o+0+jC5Y7Sl1fDmOhgcZbid4D6Plox+CdzweR2Eu
aZ8rSobRu9PGqWXJFCT0kdtrsXYYtYs/PtH/iILOnfJOZiUNo/t4z81NbQpy
Plh+kG9wGNHW+HNzHaUgZsvOMbbpYUT/DhEkN8aQ5dtA4ZwdI0h+onmfcuoY
ikrzi2fkGUGsQyWzVw3G0NmEUHU+yRFE19y525huDGm6rxA/3BlBZXVyYRlH
R1HxcQN1hsQRlPXBvLpfdQQ1TF4Qs+4aQVIcTLH/bIaRSldoYdbeUeR25gMt
ffAQ+jT80IXReRSVdtwoZa0fROL3P/PvyBxFwzzVkr8+DKCXTMoy7uDYmTsZ
nu8HkGb5rQgPsFr3DNkVLLbydPwROPnRvQNOYKnMJKXHYIODK9o2YCNKVYwX
2LjGI8ACnJxEXvIGZ97bKjECPz18KMUXTNVOd+IKePGzkdFT8DtVpigieP5M
JGMg+HEdO50UuOTVDcInsL1h+fn/ogdQp5zFSsn27+t2OB8GpxyMn/iz3a6k
mhj9bgBVKvP2LYD/5ZeQWMEf65Olab6OIsKLiqaqyAHUN6WvtDd7FBFP6TY8
CB9AUb9PEni+jSJq6wf1x4NgvDeqFoJKRpF8KI0B37UBxNlU3d9VM4rcXZao
2A4OIJO5zlqmllF0evebAfrxfjQtVJB5uHsUTYjKchBy+xFRpSj61ekxVDLy
wq08rBdx+14faPUdQ86Nt2J4s7uQaeOnlOEfY+j2kyPniv+Q0DPt2Mp/4PYi
GgndDhJaX5frYasZQ7Kj14+Ot5MQX6P7kgj49WcOPp82EtJqMGK8ABaik2Hn
aiWh+aUegevg47sxQ2YzCXXHHL8cAP7hHLnR/ZuE3sxu2OeCx3I3JvfUk5DY
okEwGUzFs9InU0uC90PbL7N2DPk+isnZkUFCx7oKr7vXjaGQTdKx5hck5CD8
iUmxYQyZcXyWi71PQl+89n/c2TiGFs32Tt8xJKGEPaRZtf4xFLl5RjMKtaOQ
rycJn8gQL9w658LOdqSSrhC6ODKG7H/ZNc80tKG7VMzRdmOwz88VZS/ltCFv
Q1YWJcoYErlq9up+chsq6BRmVQH/jFofOw82FJVjvwTeOh2lwAQ20VXi0AD3
Csm87ExqQ7XqylxaYMc7XSNJ4BiO8weugnPpvM+5gFl0jvEbgr+S64f2gA+3
zwmYgsvYBcM/Jbah9oSPQlZgnnf+0vJgbjF0MQ7c07jwQioOfl8y0aAbPOTs
9/h4TBtq3NlsxjUOvzdd+4g/qg1VT1bduAa20sCP2V+1oeJ+nvbUyTFUE9dh
/PVOG2piMZ9Ynx5DFIuZNC2lNiTbWPBRdW4MNSYzOM8caEPpCjuq9XZRkNhC
Qpt3QAs6X37R8gsPBZ29yrQ7c7EJ8ZsECF8VoyBTLqnFQMtGVKEe26VIpKCT
iwLapz/Vo9OStdc0wR5BhlPVcWC66QYjsIt+TohBbD0S+smoYg0WpN4Qobyv
R3YeQiX3wDtenqzzeFePbvPKnHoC9uW8ZM/4th69PK/D9w7MetIwS/xlPfp6
9CptNjjEhW31alg9+tssN/wL7K7+SOlBYD0Scz7YUXGegiSFxqn+GNSje7bR
4gWKFBQvf0X03LF6lEbKm864QEFXOOkbPi7XoddTfuzxShRktuDXT/ejDrE8
Mkr5qUFBcfySTjr9tWi5+lSoth4Fvf6gL3BiowaZ2u2ekTGhINUjg89fc/xA
rAFeNL5WFLQ5c6nrrVQVeiCcsHziDgXq2LOr0loV6PnRuU+8nhR0Pd+5Uqei
AGnkyTkIgDPdvxmdwwWIa3ftmaPgkcSyBcHCAqTIHbMpAlZi8A3f+70A7Z/4
ViUO9itZEVn9WoAGH7OEnAZb1QvUDmQUIMajuhwI/KG9d3duUgEKaUuJVQV7
DDloBX4oQC0h+wR1wPFPG2OMXxeg1UTFgkwwT9WVA7FKBYi2YEKY6TEFdXJq
XSTP5SNRXe4HtuAqyR7eE3H5SJ6l7UMV+LXFjmRXzXyUdYw+iwROfOMeyI/y
UTFv6Pcx8MHet89qROF5WpOv6+CEQou4u3z5cKnQdNN4UdCzIPfMCY58JMRq
aLITbLxxv7OZNR8JyHlM04Nj3hS/imDORyNzQt5M4N9M/Do6jPmoOf5TLDt4
YTfxdxNdPjKJVC3mAZvfLNPSpspHvIzCgZbgEcchWQ2ch9J20bxPAXMrF3Zd
epyH+G3aFqfAgfwapy7J5yFDY1T0yIeCfB4WEBKyc5Ce/gWdcj8KqtFj4U4T
zkbDF2N/4acUpHyRLdwmPhNlRUSfux9AQTaGRAZ8Og150/0p/B0C+8WU9lHE
kDNmPscmRYb+zgJX0jMMMrGg05O6GlcKGtwpri1rhrEO6/GHFeAZBY+f/ywx
ljx88nAJmGvXkkLZbYzFP4bW54HF+9ey/Owwzg269CAbfCY/UEDVEWOxQcuD
GWBhr/jne1ww7nHSvJuwHT975HaEO8bZ+Wn4LTieRvc0lw/GdGUee8LAp3qH
V2IDwT9o7wuA9eLcHve3YjydTN+bc5+CZFWsI/cyl2Lfu+/UVMFWPybc006X
4nDlsm9/7lFQyjS+q2JUim1esoSuulAQu/b94AdJpdjPxdiaHbwaO/AndrYU
n9vYo3LSmYLWvdN0S8+V4Ydhcpq/71LQzQ9T/L+ul+HMmTPfnMDktoLPrQ/L
cNt0R7wjWCeuR1DErQyHfLr/wgE8lPY17wm4nYnR2x68Lvbocgc4WzTW4Q74
s4Jcj6h7GRakPXHDDizcPO3kD5bglpO1AbfRKL2W9CjDL+lOc9wGn1d2KOwF
a/3kWrgJZnjv0BfyqAxbuno+1wSTIh3VtHzLcP/C+yOyYCVapnjWoDJcZPAw
8wj4uKEqpf15Gd7M2XtqL7iUilfg3ZsyfPOk/YszThSUxiDz80xXGZ40D/t2
3RH2D+8f6nq+ctzNXh7j4UBB7ydbqowtyvEFPX2NKHsKysr7xzScWI5bPWIq
suF82H/6GMl6rBy3q5vp77GkIOsIvmiu4CpsJFA/dMiAgj4uFwkICtfgfm+B
vJXLFNTcVpvgXF2L7ThDD79QgPMPMU+Omtbj3TWGgRNwHs/17L7psPQb4wfH
9BkOUlA3s/KTBaUmnHtb56II3Jf6qZYclO/tOL3l+2VGcK+PgFdSfjtW3N+i
OV0/hoLXrw1aFLbjLalP2k1gcgWHEn9xO3aUENHOBgvl3o7rKmnH/KzWV16B
n6ddXH9T2o73fdZQMgSbivN+Zq5sxzfm6CV4wTq6IiqBP9qxxf6PbP1wf7OM
OHRQ/2rHmj2zVE/hficahYd+m2zH7+ckrh+F+z+cdL/TnJmE6VsG3qRD/fGo
ID9Fi4OE78hSZUmB/b1unUd8JJzLMdLSWT2G+uRtnS8fJuEe2QjpP+ArAzV1
FuDeErkYEriDSfCoO7ggYZC6HRxQ8fjJC7DjWOCtVrAZVXvXZ/BmuOivZvCN
KuEzpeDmD/cif4PjTX9TpsD7JL7dqAPf4baN5T1CwiXKk0I/wZmLa1fVwety
FdQpYL7DOm/5hUj4OoG5MwDswpIhNX+UhKWMWr5YgwvuNePq4yQ8cYPRVxXc
eotT9Z0ICZsrtZ+lq4J8bPiq/8qT8KnHzNPlFWNIUZO6jFeLhBuZmz4/Lh9D
F36xSt+wIOE/dlTPYnKgXumuXPPl7MCUlzbFhp/HEI19kyZzQwe+kCH5Mfsd
1F/GpkFbPn+wVZaO/38hUK88Cly4crYTExdMafPUxhC1mM+PSq1ufEiy+FAS
WJ+udSBYuxvHrH9UiAS7PTu2rqPTjeW09xj5gL9kxu7jvtqNn0htuDqBhzxl
jveDl+NdIkzAu8YXFT7rdmOtGMcaWfDoSrb1Gb1uHNfov7Ef/PTGRlilfjcW
OJ8rOq86hq6uNGTpGHbjGv3zRSEqY2hBIVaz17ob94TxhQgqjyGNod4I24fd
mNHY5EOx0hhC7SweC8+6ca46y7zuhTHUdj1np+ebbqxBnnvNDvWt311dyQDJ
HnydZOIaIjSG2DX+0DLV92AvqW4FPXCB0td3Kr978J5LdwkHwU/afh9/0tSD
LY4eqBwThHyvDGYVtPTgMVKndza45uKE5EJbD6a1zpTxBM9doaSd7OjBombP
EpjBskq/Iz7+7cEdMrn/Eo7A/Gn7GbP292B5A3nVs+BXPHT0T4d6sHljQ+sC
/xi6NKOI11h6ceP9gItpB8ZQ1fS6+U2FXmwlPx19gwP2e8u+oXLbXjwbEvxn
F+sYWrfWlNv/phd3pMUp2Q3D98Sp3MK55D4c0cZV5/x9FI1SwryZfPrx5EVb
j+vPwdOLJw6JDuAdHTLm+8GbhyKWLooNYJn1UsXm8FE0e8+/0FZ8AP8p3eIP
Axfq/vEIlxjAZ2WXVtTAl9xCz36THMCJDz/V7wAHvYub6pAawKrxTg6eYaOI
fzPgqsCZAfzLlmdzIRS+R9wnE+2kB3CP8edHd8DzjXVD32QHMMW9uJQ1YBTJ
le6wDtUewC9DVU5RPxtFFmPPzvHpDeC+yzdj/j0dRbRy9D4nwWSGx3Rr4GuX
An+cA8c2RjougR9x7GBUB+9787ljDuwa76ljBFYwyz8/DVYcn3tjC9690so6
CnZfaRcIBBe/Iw/1gds20tOTwSaqo9//gIkrD6SrwSQhj7EX4FNp7PXL+gO4
6LT5/kvgjkb5+OOGAzh8OkqBBnzz3jsbo+sDOPuVoEWB/ygS8fkrEmo0gPeO
P6mk+IyicN7PKZ63B3CW5ZurXN7gHOljd1wG8Ljyt73KnpBvlXqSgdcAPso/
qR9nNorOG1BZCy0N4PUtvTCVC6MonzPrsdCdQXwjaXFaRnAUlYVQD13tH8Sr
TeRyN7pR9Pdu2KOUa2T8+2Xs1MOPI2hGYoAmuHQIN/XdyvoiNYIuDJOq2QVG
cF1TPK1G6TAKFGhMe+M2ig9/KMsXB5MorXqjYG8RXwc2sJcrhVrGfRRHuY8I
rOBhNGRqmRYIPhwy1d4F9vqE9DrBzWZvgzC44LzXlrDHKB5+ITH7FPxbsEqr
Dizbdk3vCviN9ttY+0ej+KH4jgJ2MHPWyjiT5ygOTqy60ls0jJyvU5sb+Y7i
y9+SFuzBeVK3ymL8RjFH9LfIjcJh9Ff2qmWf/yieF54SDQaPXf2hfPjZKD5V
ZZQwWjCMRu0im2cDRnG8d9MeZXBG/IVLpUGj2OGbb+1YNlhGb2f9+1HsNnun
JyB9GK3/ONvflDGKd+S+VTucPIxehEU3NpSOYl41jV0yzsOoS07v3zOdMcyn
0MPKe24YKV6vjOQfGMOl8ntWWmiHUePuS2X+jhT8Xe2itUXdELLg2LidukbB
FPu3XDmWQ4iOMMtdND2O7xo/eOW0TEaP80Pu9v2dwNcKM1qzn5FR04ys+bey
SUyYSiaHg9Pv/vRZByfLXF6wA9sUy3xSLJ/EWrFvCapgOY3aykAw48Hn+46A
ybwe5EbwRJHEISqw2Al1AmfFJKaX+Cmf95SMzApEURL4IN9uQycwD0/Eg1OV
kzguZNb5GPi1tGtaOTiiknjC0JeMDrbMbmjWTuLXW09NA73JaEVdZbrr9yR2
ODbEkO9JRsfv7vO91TaJo/UenRp1J6MTUVPfpzsn8UkrzyV98OXcgmX6v5P4
i71Q9g83Mnpq8fC4UPckZvr2wPYs+OxLIY3zPZNY+tFdnuSHZMTtXmlh3DuJ
D9Oz/dwPnlTVtn3QN4nvyPzHseRKRpGXlW+kD0zivS8H5efA0psHxr6Ba+a5
b06B/Q9O3ysCvzXSDqKAw79iqkqwV+3TzGHwtW+hIb/AnsTC9gEwSdCQswWc
KitwuAusM0oRGwCf1fZ3bAGn2zirzIKP+pELf4HJKdMmVIOTmD2mOvcx+JjQ
R5U3YPvEw5kS4KuFYUai5EnMt2M9mXyfjPQb2L5XgfsN1D+8AQ+piuy4MQTz
14vHIp3JaF3vwpmL45NYo58p5oUjrMdUEElkdhJ/SzDPC71DRh+EA0aZlyex
WIO9kvIVMgrQ3X8iXWIKSyztOlQpRkaOKr9p/7ObwoK9k5M7Wcjo88zI612J
Uzi8zVJj39wgyoh0I1R2Q/8vYbpk50GkSyT0CxZN49zaRCXVo4MoKUr9iyrP
DI73pbn2RmgQ0SzXTLSDtQovmg4LDqI3fn78VrwzuJDsaHkaLBj5Q2UePOj8
xNzvyCA6+fKF1RO+GdzY4W7YcngQnZruf7iXfwYbyCrI3xUYRJUpoUEiB2dw
zMtPu/YeGkRxburOKodm8FvPrMI0/kF0iYZb3FJgBvfn0fg0sgyiLmmXl44n
Z3CYxEIrhTCIqFibve2kZ/D625jy9cUBdDXfYVjvwgw+u/O0IWF0ACV0uHyV
uDKDTVMPnXKwGEBME8Q4s6wZ7Jy2btTwpx+xlW6IBDLN4qiaSdFYsP5Cx0wy
mK8+iNoJTNJizakG7yhqbiGCC8ciHg6Br76pSmQBFxfpy9HuncVM5pYPBjr6
UdQP838CYMu2BS4/sIgylbcZOIRVslAQzBmUvRUDzhA5YPSD1I+UfDwedYH9
fcS0OVr70cWEjMLz+2axXUZq+a3GfqT8X0p7EtssTnvz60tOXT+ibxGsp+eY
xdpuTZy0P/vR1t6/H+y5ZjFvPZ3obE0/cqc+3eIGfvVR9EIPOHvGcedTcOe8
qsEvsEt3iFwEmPHHNfs88OsfwY4fwJrc13wSwYsZdxJSwWqZ0mle4N8HFbgr
wNVsw22G4G9HBmO7wOSzN7akwHcfMAsugNcrb0TkV/ejfNn9aIx7Fludk2BG
Vf0oqERNuOfALL6U2vWwsqIfLXgkDTfzzOLMz9w7l771o8jHuqIGQrP4h3uz
BX9SPxIlR+//JTaL20md0cQ3/cjcfzxURGYWn0sVKTcM6Ee2I8k+boqz+FPQ
2cMzVJDv30S63ohZvLGWtHDiQR+SES2nOdUN+bHVnPVu70VjwlmdKofmcGsE
9UBOQQ9KEeL+RzGZw4VCMvfMorvRa3pOxulXc7g4FCtXvOtGsRmCAntez+EL
AQacQmCxfvPTR8FXjtKOBUR1IwWpaOUL4L8ycgYXwBbzR79qgluGV63ZweI+
zkP64DGLuGMzb7uRb/FatAmYzU5utBYsueuWjhU4OF3mtjfY+tzPEmfw7GGa
4dNgynqesDd4ME3vt/qrbuRTGHCZ7g3kH56RYBnRjWSeyaEQsEI3s6V7eDfq
tW7Yse/tHF6zYbcwdO5Gl7KkWBVj5nDTlSxN8Wvd6M2ymYtZPMQX9FTZOtuN
RAV6ue2T5/CZ/eetqrlhPL9Ob95Om8OKsaa5obR/kXxt7k+ujjmcElV9ZmO8
Ex3Je5Bo/W8Oh2Sz/Xe36Q9Se7+vVpxnHpuYvOjUzOlAwg4OK5qn5jEx4Ybn
2hsS8tS8G514cR4XPr/1Vx8scmrwSTrYauiEXM5rElJhVLiVA+b/lhm1D/xK
3li1GPxz79yy4ysSisDyx6rASntmr9VHklBJ6MCOenDMbVuWgJckNJ31tegv
+EJn5y/FCBLCxeG2E9teU/T/95yEJILd9m6A/5jsDlb1I6Fw4qnI18rzuPXy
gRMvH5DQn0Mno06qzOPbDFW23bYk5F+az1sGDm2+pnbUhIRM3MQOaavO4/in
SzP5SiRkk10Ud0ttHtMndTC8BrfUmvNbg+9ufT/mDDa+QXlvA97zMlLpCnjP
gh63HZjR3MFMGNwalvzmDjjV5uIjOnDyyb9sDmC/mcnskgskdNeFce9d8B3L
4HFX8KGahl33wIRK3sNiYIYTB2kegIVIByNiFUlo9JEtuydYQ2aJihncxzah
6gtmcYtx9D5PQm/7MtwDwTO/zNXNiSR0+9ZSx6vt/hIOxxQRCTXVEcXjwadY
KgiHFSDeYqh3Bng55J/9uCQJSaswHz52aR5b9KpGZB8locJSQfpY8OJpWWcP
HhIqtbl+mvXyPG7Mtt57gYWEKNyyn/zA58w3ZWji2lGAQj6/seY8fj90+2SG
eDsacrHgP6gzjx/XfxPXKG1DVq/ezDRchflUjokc0mxDg2XOE7d057GliH62
Z28rkvba+3AY2hvY78pSn21B7oymsVSwHpUhtXyyz5tQ/VNZBuYT89h/i273
y/AmRJDIKqEGr4uWzo+HNaFPm7EO8yLz2FNiqUcJ/CVo88AQ2JI3pTYmtAmd
a6qrbgfT7v6TuxTShG430DvWgB0YpJ5/Dm5CF4VvFfwH9it7Ync9qAm1H/Ze
DwPTd1WpMgQ2IfEEA0ln8ObrYsMtjyZkKh8voCU8j6PrXkrMOzSh64ebmYWP
g02oWkbMm1DbfqeNraPzeL9dCbFbtwlNrxOGmoTmsULDdGitbBPCjX2pNkfm
8YdLp08WHmxCzMG0prOH5vFJEZdTX+iakGt35T9r/nn8LClyF9efRrQ08iey
mXse755/1znU0YiU1sq068GbBl/SvoIXua2YasBMf5oee4Fl23/WloP7XGi0
1cGrIjNPi8HcwucPc4G5eDoU88BfGjp/fCU1ohpxkYJ08OHhtDvq4PPpfuIJ
4Iz731mG2xsR+Tk58S345cY9Yy5w/YOVMl9w4nWWz+ptkF+VFZMj+Htc8IJX
ayNS7pzUuw7+k8T9/P+O6zueCv2NAziVpIyMSMm4JHtU9vhGkbg0NKjULSuR
WTIKbSEjoUgcR8ixzyLyZBzJsaLMSsc+GSdUdLn1+57fn++/vuv1+T7PM97V
iWLe2n7UwXa2UtS2f9eJHOuFj/BjRzHz3pE7OlHuA6PKT9ILUPnMdooGnYiv
vP2U8eYFmNqX7FFdivf3mzCeKInzYpZqU5fVibw+D51gSSzAsJpfanNCJxK0
opaoiy/Asd9Srs1fOhCPgj61nmcB/B1vje4ntqM6zT3rvk/NA88O8RkDzzZU
++LA25r38+AymjD+WqMVKU3+dthSPQ8tVWXuG763oKKV1TgA88Bn3zORX/YG
jX3W7JiznofAyOaQnutNSOvt82OJuL6MaVaIJNozkJjVB3bprzmwGjq0ocOO
gcraa2YDsX8HjggK2zKQkpTZrB62U+BFCXsbBoqJMp9cWpqDTI9xhThrBnq+
tu5jNbZU/wk95j4GMnjeyIzA7jxzobsWe2Vrosx17AKhsIAK7LsXT14Kx84e
ixPJw16Xr1gbil01nl38BPvWuynhEOyFjTS7B9g/2BVng7FJ9OF7l7Fbf5rz
BmF/WyXReAr7dnVTjh920/wBnr3Y2wxt9/lgXyh3O2W3l4Gc0248tMVO0jpY
6WjJQIPXUpZVsGcu80udtmAg3e25ifzYeUZxV932MFD/t8Oy44tzEFw/mFWp
z0B5/sJ2aT/ngKycek1Ik4GC+v069//A9T1ik7CrIgO57QoqWVyYg1hTkSFW
fSPyPPvnfMX4HPB7v3xXcL4RUdfSC9X7cT82N72valUjWppVCHdlzsHwkPoT
CWIDOgo7W5xfzcHOqemcprA6dNnq/L9WHrh/esla41Fdi7Y3xGcFrJ2D3fNJ
BgNPXiL5zJvKfZnf4OuhsTjRZBrKfiMQEazxDRoNW2+KGVKQ6xvJ6MFmDkhq
jKr/2U1BX0au3pfG/i3ZMDGlS0Eut8ciT7zhgNS6i7Q+LQo6x/TwTmniwLLQ
QBpDnYIOVy7bdTM4sN9AIq5ChYJSbHMVRLFHZ2TT4/6ioCW6DD2ugQNr8k8u
eMhQULvpiPy6eg6k9XakWUhS0PGVxTO3XnPAuDiuflGAggIlBZ1CX3Hg9eCj
LaX/kVHriFOO70sOZK/XyPacI6Otez6budI54L05MjFimoxcPBXt1GkcYCkp
lKdMkJFFcoDpAoUDwbclVxUPk1FSXbNoNZkD1NLdrrQvZLRWRkrDHJtiKtIK
n8momm/aoq6CA8J8uaZvP5JRjHEBYR+22JVZStcAGdFUbe2ayzng6TG9+2Mf
GZHSA7/ZYa+Tf1Yz1kNGWb7ySR1lHFzvto0sdZFR3yYhRk8pPq+lv4pgBxll
uG+c+FTCgRd70uLkmGT08LTa4mgxBy4ppYjsekNGXr9O/pgq4uD/NLljJYuM
tj/dtl6LyIHc7A3Pu0LI6HYoWc7rCQcOpRc8phwmo5k3UvqZCRzQ491EzlEj
oxY+a/uWOxwY+EG4nZxXju58dHIR/IsD1eKary7sKEOrPweUPayeBb5Pkf7R
J4sRMKf2uRyZBdf62zkJ/oVoQpZHwWd8BrYdsW1SS8pHNmVJh+HqDCRKfHgd
55eGTAqyCSLXp0D2Q2iJtdFdJHultSDs0FdQTTH6VOtzA7U/tRa/J4bnfUNB
CfMToYi6Usf+2c2GlRRSkkifH9rX+0uz5REb1s6MqyTF+KEG0cGyhmQ2rKqI
Hdxk5oeKj9movnrIhtbEqheZHF/klWCRRktiwx69xGSVHF9kC03/liaywchO
+wntqC/KGut1fJHAhslys499VZeQgrzYXMYDNjww907gl7uEXAbC3eJj2VB9
mEq2vO2DBvU2lUTdZ4OxqfjRzw7e6MlgT4PbHTY01TU0kqQvomuKJ3ba3GDD
D1a5EGn0Aromn/pL7Tq21QEFOa8LKCdiIOpOOBv61Gx1MmY8UZbM6ZmhUGxb
fRO5QE+UvbwFGYewwTRUs7RmjyfSqboZm3SVDUEEm4unRDxRgFNO92QwG75t
TPRZ/uSBQvpDpfZgKz3/boXCPZCNXrQo5zIbihXpFsu7PNDppjMHVoLY8MxL
e6xq2h1pP9byEsA+eaBcJ/y5O4quEomSDGQDj/kRJXTGHU0cXx2vGMCG4XPH
1nR0uKEJS4UEMz82sDt47npZuCHvbdE+Jy6xIf6WTKEw2RXNTRooB3izYUuI
f0Ctkiv6na9TE+PFhrpoRw5T+xTqj0udunmcDan29voBsodQ1uidHZf2suHp
hlgb5rHdyCCQ3/+ADht2TfvE5hYZAMNRkSG1jQ07jc/Gnx45BKyVL8p9AmyQ
jJR7cVEnEkaoAeTT1pNAjCJaZ+bHQfPzYCPf6xOQqPfR5j3xESSnihIES8dB
4dSCYsnLdDhpmVNoMDgGATtFHf3ssoEjPTM5yzsG5i4ywpe3EiFMIrtaV3EU
CmZ32pAohVDMd5U57M8CD/N5rXp6IdzaEJrywo8FlvU6n/teFkJnttNxf18W
KPVPH+O8KoRl47XCBpdYsMBSSuWrKwSTnhs1/3mzINWk99nWxkJo9mWea7zI
goMOmhb7WwpBOuHfJ4cvsCAk4yxfYGchvNx/rvizOwv+2nJuKqOnEFLj/mR4
u7KAyM8rLyJBgsvPV/OP2bLgTrfVrIM8Cf5EaaQuW7FA4a6CRawGCbocNB+K
WrBAu1t9c6MhCfZI8i0rm7KAT/dJfp4ZCcj1yue1jVnQfNS8INqSBOLRNeUG
hizoEv67LQP7+7D+v9rYl3cfni/BLukutVTBLmbYS9VjW57cESuPHV5vYfoB
uzw4s3sz9ic1zXOT2EsqYjKi2I1d84XCe0lgXLVUxIs9o5L6fTf2SHa/2bwB
C+w0pcxPYS8MUdqHsXNcGzYN7CMB9U070Qa7yk34i5M1CQwnx6FEnwV7kpef
9u4nwXtbYqcE9ruS+38fP0ACClt1KEyPBcdkg2ysnUig0vD1Z7A2C7JLfNbr
epLA+1qtbqAqC4JDaUmSwSSQPU5M8FFkwbOE3MwZgSJoLq+vWzPxBdzMN9yg
ZRTBeHXXM+vCL/CAJHDYV70YiuUS5XZe+gIuPmfkxKqKwWLU3fSN9hcQ+ift
kXdZGdCfnv56YOYjeJ8JraQ7VEAD3bjwkXM/6G11s/elkmHr2irjQ7kfIGx/
gUr8MAXery5Rc2p7BwSLnyO1nlQwFD98/Z8bHTDe+3TeKoYKlxZvZfQcb4fX
JrS+CBIVMqfk1vWptYHymW8/PJlUaF1/NsjtPyYcPG31fgl7ruHng6+LTAiy
M02930qFsmr1+/7zTFhz/73JljYqhE3/dvs5zYQrgUKMQuzz+v4K1yaYYOg+
rmvSToVroZG1vMNMiPgnxGkMm7/40WjsIBM84m9ojmPbb2O13cIOiohZNYHt
L6lJD8fO1Unu5VqDGZIdhP1vbkbRJHaESeN9b+wrg8QbbGxPT5EgV2xyK1l9
imv951aO2Lea6j9MYzcsGG3eiz3W3Bk5i309q+3rTuwhxg6lP9gbDyYdSRpg
gqyVbLNIBxV2jitOcvqZoHuU4i2P7V9td90BW/5u38sm7GlJthFPNxOa3h8c
9emkguOJztbyVibMWktPir2jwho7Xn3XJiYQhFq/3+2lgmhm6imbe0wQopyz
mv5EhdAEOb1tNkwovbexx3KUCp1bB+pY65jQ8WQ9MeYrFUZrVvGmvm0BtZhr
jqrKNNANs1eSs2+GXT1GuxZO0aCwRjbLuoUBWlk/nPtjaUDpfW0rYNEAjeGL
va1UGmxFKROu5a9hWbWLWttPgzamlkmefg0wLR0Fn+2gwxX31XaRRkTot6v2
z8Eukomn2ugRYbhc430edoPnYRkxXSL8DsrXJ2E380tHDmoQYW+S+uNS7O7l
0U+5KkRoXle1RMZesaQa+ioRIapwnF6D3Xn5zDiPDBFmi42CGNgP2ZtvJ4sT
4e2GCrV27B3po6LKG4igw+dxQ0mFDnf23tP+SMuBgJGk46HYCqubxOPO5wDR
XrqwFTsw63atnnAO/GEOhcuq0mE3PU+7v4oAV7pWEbWwxe/X8/wqIMDgX7SX
5tg3XWQfbn5MgJGbv+odsC/NVo0Y3COASWVr9RlsEm/Kj+PBBEiJ1n7uiy3s
UvrmijsBir6KO8djp/04N12xlwAPFIvPcv3QLOIzCbvG2dqDa5+w9M5cbKMH
Qz5cKxXR6jOx19SGBHH9squLkootMy0axrXW7GxeAvak5b57XHcL74i9gT0V
H/yI62+rzvoFYW/vLCBwfbcl1dEd23JD5vYEbCO+arM+SwKMizx4wfX0QNsO
O2zRzyGaidiZdh2itRYEWNF/45iCfeSP/E4TUwJoWfuHpGM7m+bbVeoTIEvg
ckYW9iGe82f0dAmwNrqGynUHy0VZGttmcE0n1zpizrMrOgTwWG3/levAREfa
F+x/eFLWZGM/Om0f0Yit3/VRluu0YGvrAuzHcj6OXLtYG/T4YX9bjHTmOjXq
7kEv7F9tyWe5tin/0Hwe2/dKtTfX2X+Cqo9hF4iPXOX64w6xEhvs/IL1t7n+
V7Us2wSb12Lx/27QfZZjjO3QP3KH661GcblG2A8COu9ybbwnLM8Qmynw6h7X
QyOhT7gWyHkRzbXSvdA4rm923Yzh2r49JJDrpVWn47i+tynEiev1E73PuGYM
+R81wOZrcSzn+n2x1yF97ElSRwPXryLP/62HXW6Zd42A3XZ3q5I6NvK5ppfD
fT+RnmV57GSVI7Nc80g/7JbE/lvwkXIhd30rM4tybXy/VqQz5dheSxGldthC
79NSK7Gf6p6QHdciwMNK53bAXuEwHkRh59vXz/Or0UHC2m/dfTUC8ITfWHsI
+5gw61WSMgFuGzwWeIz9ee3mkvS/CCAYxr8yhD06s7GfKEuATQOGLJImHaxM
ChQFF7PhAF3hQIAOHQRe8R+N7ciG7KGbBjq76NCofMtFoSAb/hHdWjapR4f+
iiu72qOyYe9iHi3dkA7KqpZvk5yx73zK1z5Ch5/rP+jKFGWCtWTi0EEvOmRJ
BPznR0uHtzelLgtE4PcwU1Z4/S4N8qnDWhcT6bDK8+RS6X+PwO4gio/MpgM5
wJ1nzOghOByQeHO8hA49XldShQQToJK33VbqA85rTPq21HfvzXdZmPt3l+M8
2IeYSXyNQVdSxDIiHejAe85SIVXyCep2uGPaR6bBV0rAlFMCAUl7Ji7EsKmw
vaba3XnoOWrZFl3q/JMCSZOzAk2JL1DN3p+iRl/IMHp0vvcErQgp8478XhtU
AXk+7MOUtlKkoWkTrjJaBjE+TT2eKuWopoMcZXK5BNLvN+nSVCvQKkWbFxI/
CmF8XaOt+UIFkqyVyi04mg9z2UIz++PIaLotIb4+LxekK6viNfAcp5rTLNcz
SwCFqYFgNXkK+h+SkEvm
                  "]}, {Automatic}][-3 + $CellContext`t$$], $CellContext`t$$ > 
                3}}, 0], 
            Rational[-1, 15]}, {Rational[1, 4] + Piecewise[{{
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {2308}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1: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
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2gEraFG4oOEzZ1zjGmOMJEkykiRJkiRJkiRJkiRJkiS5kiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ85xZ9fyC99vttdfa/7f+v8pb/9ufP3/+4z//
/P/1lwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375YxD+EkAgQQQTQihhhBNBJFFE
E0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU
00AjTTTTwr8hb6OdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZ
YpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155
450PPvnimx9++ffw/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vx3/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXfy/+vwQQSBDBhBBKGOFEEEkU0cQQSxzxJJBI
EsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBK
G+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrrbLDJ
FtvssMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyRff/PDL
n//QnwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375t+n/SwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8+R/6E0AgQQQTQihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0Em
WWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitttNNBJ11000Mv
ffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8Ah
RxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy//Pvj/EkAgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy9//lN/AggkiGBCCCWMcCKIJIpoYogljngSSCSJ
ZFJIJY10Msgki2xyyCWPfAoopIhiSiiljHIqqKSKamqopY56GmikiWZaaKWN
djropItueuilj34GGGSIYUYYZYxxJphkimlmmGWOeRZYZIllVlhljXU22GSL
bXbYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ1545Y13Pvjki29++P13
/hesPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy53/qTwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8O+j/SwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8+V/6E0AgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy//Lvn+EkAgQQQTQihhhBNBJFFEE0MsccSTQCJJ
JJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitt
tNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZb
bLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy9/
/rf+BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQ
SBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4ww
yhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77HHDIEceccMoZ51xw
yRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Mu/C/6/BBBIEMGEEEoY4UQQSRTR
xBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31
NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLL
rLDKGutssMkW2+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvv
fPDJF9/88Muf/6M/AQQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSS
RTY55JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3PfTS
Rz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjobbLLFNjvsssc+Bxxy
xDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//PLv556/BBBIEP8P
Ze/F7A==
                  "], CompressedData["
1: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
                  "]}, {Automatic}][$CellContext`t$$], $CellContext`t$$ <= 
                3}, {
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {2562}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1: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
/wEjFUQM
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2mEoaEHAoOG797PWWuuzVpIkK0mSJEmSJEmSJEmSJEmSlSRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ2ufuqefP+fvONOfMzP+p/7/lrf/lz58//xH8
5/8/fwkgkCD+vQ4hlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhlz8Gwl8CCCSIYEIIJYxwIogk
imhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWMciqopIpqaqil
jnoaaKSJZlr4N8jbaKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeB
RZZYZoVV1lhng0222GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaF
V95454NPvvjmh1/+Tf6/BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrp
ZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd
9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77
HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Muf/9CfAAIJ
IpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskjnwIKKaKYEkop
o5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKbHnrpo58BBhlimBFGGWOcCSaZ
YpoZZpljngUWWWKZFVZZY50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265
454HHnnimRdeeeOdDz754psffvm38P8lgECCCCaEUMIIJ4JIoogmhljiiCeB
RJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa6qingUaaaKaF
Vtpop4NOuuimh1766GeAQYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeD
TbbYZodd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaH
X/78V/0JIJAgggkhlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhl38f/X8JIJAgggkhlDDCiSCS
KKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzyKaCQIoopoZQyyqmgkiqqqaGW
OuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGGGWGUMcaZYJIppplhljnmWWCR
JZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSeeeeGV
N9754JMvvvnhlz//TX8CCCSIYEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQy
yCSLbHLIJY98CiikiGJKKKWMciqopIpqaqiljnoaaKSJZlpopY12Ouiki256
6KWPfgYYZIhhRhhljHEmmGSKaWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30O
OOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OSLb3745d8P/18CCCSI
YEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWM
ciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZIhhRhhljHEmmGSK
aWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWO
ex545IlnXnjljXc++OSLb3745c9/158AAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
aaOdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvnimx9+
+bfZ95cAAgkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOf
AgopopgSSimjnAoqqaKaGmqpo54GGmmimRZaaaOdDjrpopseeumjnwEGGWKY
EUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOc
Cy654pobbrnjngceeeKZF155450PPvnimx9++fM/9CeAQIIIJoRQwggngkii
iCaGWOKIJ4FEkkgmhVTSSCeDTLLIJodc8singEKKKKaEUsoop4JKqqimhlrq
qKeBRppopoVW2ming0666KaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWW
WGaFVdZYZ4NNtthmh1322OeAQ4445oRTzjjngkuuuOaGW+6454FHnnjmhVfe
eOeDT7745odf/m30/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vxP/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXf4d8fwkgkCCCCSGUMMKJIJIoookhljjiSSCR
JJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGV
NtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCT
LbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCRJ5554ZU33vngky+++eGX
P/+pPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy74D/LwEEEkQwIYQSRjgRRBJF
NDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5FVRSRTU11FJH
PQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAjjDLGOBNMMsU0M8wyxzwLLLLE
MiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfccsc9DzzyxDMvvPLG
Ox988sU3P/zy53/pTwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8u9zzlwACCSKY
EEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58CCimimBJKKaOc
CiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgRRhljnAkmmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eKbH37587/1J4BAgggmhFDCCCeCSKKIJoZY4ogngUSS
SCaFVNJIJ4NMssgmh1zyyKeAQooopoRSyiingkqqqKaGWuqop4FGmmimhVba
aKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeBRZZYZoVV1lhng022
2GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaFV95454NPvvjmh1/+
Xez7SwD/D/yVV04=
                  "], CompressedData["
1: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
Gnw8RMSzV27gUqcBqfRmqJDpMFFmHA27ZGhgKqHPxH1xhPDi3DZ6+g8VspkV
Wrn6xokMxnPSAujTgrf2JZHGCe7aIxbL7ZhPOX2wVhoYJ04+rE2pQ+82Ky2q
GRwnYJBzIgEtUDLEfGN4nOBQYBV9juZ2pOlNj4wTniH6IbLo21qcQ9smxolU
i2t/+9qo8OkBne3h6XFiuGqP0Rt0N9t3mv7cOGHKv85h20yF88Rf+9RtE8Q5
t0tSFxqoUOx1XZtRdoJw89GNlcJ8Y7NlorOhzgTRZiDsylBDhalNX/6mWEwQ
1YfZd1IyqHDl2PBolckkoRwXfa8ePXFBzeLK7Unikt90fjyal9FiftB0kigg
zTO7oHsUnJ7Y3JkkuNPT9C+i7RvuLv+9O0lwLO37LIHem3XY4aX5JBH0+Lls
K+ZDmjl+9okPJ4mGnqJcd/TpL9dsflpOEizHu+UOoCcKE+/12EwSBw+U7PLF
fGr/hfQznI6TRP6nA019qVT4Ox7KedZ1kuBZF3mgiN7/xqjO1WuSsKXzvr+E
+Vj1qZBUqs8kceDZNtMstIvCiL+9/yQh9KzsihW6ZUnLlPxikojp3ZH0CF1l
e7lpy8tJ4mH3Dcp9tC7cOC6KdraPP3cPfe/P7QwC3ZQyGW6G3lpyT/Aq2ua5
7PQttLrjw1c2aMIo6/UN9A9P60dx6MhU6cMG6JAGJuV29OPH4S166NEXB6ib
AyeJbyvbJPnQHXGdVpteTxKflmuejmB+GddcNEj/FudbmjRSi/nn71cd25vj
Jgn7pwF9mZi/9pawB8TlTxK7BdpNgzHfvdFko2NXO0lw6fOGSbyhQqSLt4Hd
uykitmUwRMqJCouD7MlSV6cJmSH5d+GmVCh3OWXxln+G0HogV+msheszNPIh
fmCGcFeOs2vehfu1xblftGGW2AAWrSfRz56fWL/ZNEt8XpMTztlJhbz9EzvC
WmYJhQPU6yLoH5dFhFraZol8/2KPIE4q9O+bFWfvmCUEzjwPYUQvl2pKanbN
Ev0zdKFDO6jgLblTsKhvlpBvcdYu206FgstMNNmhWaIvfTE3dhuu16UdxbFj
s0Qm1wMPbUYqjISEre7bNUccGGe/L4TeJ51P14I+enBQe2EjFXyH+pi8uOYI
+qmRgxVoPvv5rXLcc0QN326Oj2ir6qmdQ+i6ny7zD9Fbqhr3BPHMEd8pUSk7
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
ylWPH3KupkWDBws6vt0er8M/vyy3PpaiIRpfoieyFdfhzcWnzuYSNERKh6ho
dVgdXin54XdBDL6PjqR6e5rV4e9s3fSCJ6GdZ0BaVrIOJ0pPEOhEaIgNJ/m9
K27WYuMH8kWZ7DTEbo3LFQ5RNTitct/MQSoaokhT5Mr5xmps6H+y4SqFmngm
Tfb6hd1VOMaf+Fu5lZropWFh6qZUgd9+oc5aLqYmOp64l0N5UoaXymPv3kym
Jgqo8Vxv9SrDpW/DndTAEe2L1CWeZfgeB6+jKNipjyo92aMMl+ep2LOC7Z3l
jV64leERt712K0nURNm3/zF4PCjD+w3uWXeDOwTG719xKcOyyg8tksEq12fH
DzmWYUHfmet3wbzvSxwWbcvw0PpfbTmw+/42NbnzZfjEHqp4vk/UxLzD5488
5SjDMqld16jjqYnOZfe32iZLsYJzpe1gLDWRUj7+V7iyFNvKa/RVxlATLQtz
rViXMDbNF0/zfElNNKYMfSm6WYLJw+9+Hw2kJpJdn43qtBbhPvbTUhWPqYns
X70y7bTycZ/5XX3u29RE/d2lsVpNOdiz67SgoCbEY9PpZ9b/ivHUz5WBM9TE
i8c2dj+sSMdVtOevXOWjJuYbqPRa4nTcyvQ1UwnsvYspT7MwHVO/FmY9A+ZQ
0IqU+56ON/qf3T8KXt9ivHc0Ox1/n/tJ4gSn6Kros35Jx4dqZmTowZHiWUfG
k9Lx0Y2dmxO81MQXwbupKj6kY53zX8t+gwOjtMbevU7HHm+m/b6CmySDaRkv
puNnpyYZw3ioiSwJgy/85tOwoJXRHZsDsN4jhyOo49NwoL70RyVuaqJaz346
P6003HHeJ4Wfi5pYsP8Wx0+BFPx4l0XvJ0Zqol3CPtJl7884Xp/Eq7+HmqjH
UxtG7k7Gf/uzsnbtpibeyxpWeimXjL/UjrzLp6MmDtIKthtsJWEbyuTOnh0w
P8n6TocqkrC8v+MNGjCbg2h2TXkSxs0fuKjBqH7PkiP4wWR92xYtNfFH5bQ0
B5irbePFJjhdt9OjpCwJfwoUufIPPPvoV4kVmHPPdfoNsPRmgdK30iTcmpzr
swqm7q+spQGffbhvfQmsJzimpY2TMPGRvcsC2Kdu86VFXhKWK/4t1AUeybLo
d8lKwpPCA3/KwJMaAjL+qUl4tWeHwmdwb9fz8bjEJNx2Kb3jFXizQzWh5GMS
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
SwCFqYFgNXkK+h+SkEvm
                  "]}, {Automatic}][-3 + $CellContext`t$$], $CellContext`t$$ > 
                3}}, 0], 
            Rational[1, 15]}]}, {
          RGBColor[1, 0.5, 0], 
          Translate[
           Rotate[
            Rectangle[{0, 
              Rational[1, 30]}, {1, 
              Rational[-1, 30]}], Rational[-1, 2] Pi + Piecewise[{{
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {2308}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1: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
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2gEraFG4oOEzZ1zjGmOMJEkykiRJkiRJkiRJkiRJkiS5kiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ85xZ9fyC99vttdfa/7f+v8pb/9ufP3/+4z//
/P/1lwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375YxD+EkAgQQQTQihhhBNBJFFE
E0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU
00AjTTTTwr8hb6OdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZ
YpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155
450PPvnimx9++ffw/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vx3/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXfy/+vwQQSBDBhBBKGOFEEEkU0cQQSxzxJJBI
EsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBK
G+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrrbLDJ
FtvssMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyRff/PDL
n//QnwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375t+n/SwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8+R/6E0AgQQQTQihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0Em
WWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitttNNBJ11000Mv
ffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8Ah
RxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy//Pvj/EkAgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy9//lN/AggkiGBCCCWMcCKIJIpoYogljngSSCSJ
ZFJIJY10Msgki2xyyCWPfAoopIhiSiiljHIqqKSKamqopY56GmikiWZaaKWN
djropItueuilj34GGGSIYUYYZYxxJphkimlmmGWOeRZYZIllVlhljXU22GSL
bXbYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ1545Y13Pvjki29++P13
/hesPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy53/qTwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8O+j/SwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8+V/6E0AgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy//Lvn+EkAgQQQTQihhhBNBJFFEE0MsccSTQCJJ
JJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitt
tNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZb
bLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy9/
/rf+BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQ
SBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4ww
yhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77HHDIEceccMoZ51xw
yRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Mu/C/6/BBBIEMGEEEoY4UQQSRTR
xBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31
NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLL
rLDKGutssMkW2+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvv
fPDJF9/88Muf/6M/AQQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSS
RTY55JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3PfTS
Rz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjobbLLFNjvsssc+Bxxy
xDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//PLv556/BBBIEP8P
Ze/F7A==
                  "], CompressedData["
1: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
g36xlevAKvpircHxvxkYv0+zt9zFqIhWYV1bGrRka2rqKnoVKmN5382B5g/+
6LUDVESXQuH3A0lzwK47wrd6kIo4m+l593jsHPit8Z9cPERFOFpY/j4XPgdv
3NdoZlSoiJzjfdUWAXMQqNTV8uEq9ifxWKCE2hy8T1PqGAygItyVRKUENmdh
y/svriEZVETLh95R7fxZOFLcL5jeQEW8UNvJ881tFqo35t80tlIRI/mrcsds
ZoEnaujVQg8VYZVhKVNqOgvXiVEWthEqIuS/78I652ZBxozXVhHd4UC1Zwea
/vrvEiN0bXbI1hqdWXA6R8fjjnbaa74ajKYTzLnzEm37wX1SE32ma6TqJ9rs
XlfPVrS+wKm7tH+pCMUw6VJ/7VkIKhk8uxO92GEGTuiSUGcBLvR/EJN3Ga3p
5FEljf5xZE+WAlqwxZVPnpL/OrWHFHpM3N75ELoze/KUEPrHZ5N9BDpa71Yj
GzpgEypOo2mpn+vRorO28DhdQDsalDXPnZ0Fse3/WNPQnOLX+7XRsrv8P5LR
NIP3p9O0ZkF839AZg1EqInCFaZMW/bdB8HXOBBXxc7/0ZMTJWeDa0/159zQV
EUedYyd4fBYyD8n6u8xRETN3HAOzD82Cx/wRjqYFKiIxS0ZZTW4Wis78CVTc
Q01ISFxPYZqdgXDhnUl7D1MTU1E3ErmyZqA9kDrPQoeacIH0Nmu/GfjEzadj
d52aUGhfEe42noHvk75PCXdqIjhW7s1d6RlYXTqc1/aEmjAQf+Z5jHYGTEb5
0phiqAn+A1EPPIanISn7vwpWdIOmW8M1tF2B9Bgn2nn+5n4tdNHOD9v40NV9
11wPol8mSkgIoydZLCu50FQur89Iomf9b/NQo7uT/B4fQpcuhxTXD03DRIdh
jRr6v/uV1q/QCrwcO86jI5j3M99G3285GGaNFo20MmVEf47M0rBDL+3O0J4f
nIaLslLUzmjtucXjXWhXfi5nL/Rxk1iB9+gb9xdGgtEJkuRuL/Rt+SLjaPSH
b0LOF9BWA311W2OpiXDO4UsP+6fhnbfnsfvoImr3M1m907D89MqZuXhqYo3O
/2pE7TRw7ZyquZFETeRNri255k9D9ezbsrZUaoL+bjG72X/TQP8uf0SgiJp4
GvK978+xabAZCbBg6aQmXt7zcG9p/AeFvsr/vSVRExta0flXrf9BFfOpw8M7
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
e+c61DepD1xVZbXI7kq7j5AjxLuu5Wt/jTq00v3sraYTDguwMAh64FKHLPy9
M92d4f411/9yMLEOpfbOm2a6QP6ZWYgLJNYhgQxPjldgq/l329qNdShNUqrt
DTi+if02X1MdynWhDSwGuzxtmv0CbndnOFEJbvjw1TW/uQ6FKR39Wwe+0OC6
5tFSh7TOTdhRwHwbNntYWutQhZ3y8Afwwo0di+fkOoTPPKY7Dlbada7qWFsd
skmVUFoGb/dWttt21KFQ48lI+ptwvr9x9N7vgu9Xr7Hiwea3DFI3wb8LhSNY
wDmZ1te93tehoH+/iqgmcvic8wNfNajto3p9KFkmEBz5JmyVan1iJVsomJ7F
TIgVnP1uYOEJmOwugaheXV3tiwZ/1m4OpTo1/WRaKlgC2bynWqE3xPYlOFn7
Hy8buDKxT7IAnKJwYIIDrCc79J29uw4J/rpYuBs8O5Gd6wY+5xvrwwuWyFdx
+QA2+DpwVgBs6pp05L+eOiS3mqfxHzhzSkiLsb8OxVlePGMALs913D08WIeO
NQ2fd6GOP/NI5NvROnRvRMkwDHzumUTNg891qGNE3TvLFerN4Ee1BYZ6FJqt
K1F/C4fdDo98/VKuHl3g2TIbcsNhz+foianG9Wjf6gz3ijt8z1rCsNenHumN
PrfkvYPDFO9uHdB6UY9GvQde9PrjsDQX4VepewkIP5d2cgCsTFOVpypMQGzi
9wZGwA08l4vHwLaCrm6fwZR15tr7IgTk1evHPAWuvtpAFt1HQO3a2dnT4Dk6
j4EWcE/rgeFF8FTH702cKAG56eDZN8F7uL3ldcQIyHJST4M+AO5TajzOMeIE
pH3Z6qYtOGrXEwc1BQIaxMkR6sEJ90a55k8SUCi+85jgfehn+QutX2kRkIHv
hX4PcKx5qrqtKQFdqREPPfwA1t/mZf7kLQISCD1x+wZ4jpbS4epFQCHneOep
xj12X7wPVtJfcLYHX3QT548FH37WMU012Wbs5Auwy5EcOwewhlnm1TLwPEvw
BNUVpo5hJPADXdVPjuDbdmz938HSuUsfnR5Q63PvPqZ7BPRLqKjbGXzkc4Wz
LPhN79FYD3Cg3tqnB94EpJcRYOsPvlLrqRrjQ0Bzi+wKIeDSq83Dmb4EJDkx
tRMB1hMwflDkR0BfbtH0JIBfH948RPSH77ng3bPBzny52eP3Cch5VZK7HHz5
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
                  "]}, {Automatic}][$CellContext`t$$], $CellContext`t$$ <= 
                3}, {
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {2562}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1: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
/wEjFUQM
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2mEoaEHAoOG797PWWuuzVpIkK0mSJEmSJEmSJEmSJEmSlSRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ2ufuqefP+fvONOfMzP+p/7/lrf/lz58//xH8
5/8/fwkgkCD+vQ4hlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhlz8Gwl8CCCSIYEIIJYxwIogk
imhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWMciqopIpqaqil
jnoaaKSJZlr4N8jbaKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeB
RZZYZoVV1lhng0222GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaF
V95454NPvvjmh1/+Tf6/BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrp
ZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd
9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77
HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Muf/9CfAAIJ
IpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskjnwIKKaKYEkop
o5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKbHnrpo58BBhlimBFGGWOcCSaZ
YpoZZpljngUWWWKZFVZZY50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265
454HHnnimRdeeeOdDz754psffvm38P8lgECCCCaEUMIIJ4JIoogmhljiiCeB
RJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa6qingUaaaKaF
Vtpop4NOuuimh1766GeAQYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeD
TbbYZodd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaH
X/78V/0JIJAgggkhlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhl38f/X8JIJAgggkhlDDCiSCS
KKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzyKaCQIoopoZQyyqmgkiqqqaGW
OuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGGGWGUMcaZYJIppplhljnmWWCR
JZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSeeeeGV
N9754JMvvvnhlz//TX8CCCSIYEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQy
yCSLbHLIJY98CiikiGJKKKWMciqopIpqaqiljnoaaKSJZlpopY12Ouiki256
6KWPfgYYZIhhRhhljHEmmGSKaWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30O
OOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OSLb3745d8P/18CCCSI
YEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWM
ciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZIhhRhhljHEmmGSK
aWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWO
ex545IlnXnjljXc++OSLb3745c9/158AAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
aaOdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvnimx9+
+bfZ95cAAgkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOf
AgopopgSSimjnAoqqaKaGmqpo54GGmmimRZaaaOdDjrpopseeumjnwEGGWKY
EUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOc
Cy654pobbrnjngceeeKZF155450PPvnimx9++fM/9CeAQIIIJoRQwggngkii
iCaGWOKIJ4FEkkgmhVTSSCeDTLLIJodc8singEKKKKaEUsoop4JKqqimhlrq
qKeBRppopoVW2ming0666KaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWW
WGaFVdZYZ4NNtthmh1322OeAQ4445oRTzjjngkuuuOaGW+6454FHnnjmhVfe
eOeDT7745odf/m30/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vxP/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXf4d8fwkgkCCCCSGUMMKJIJIoookhljjiSSCR
JJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGV
NtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCT
LbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCRJ5554ZU33vngky+++eGX
P/+pPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy74D/LwEEEkQwIYQSRjgRRBJF
NDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5FVRSRTU11FJH
PQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAjjDLGOBNMMsU0M8wyxzwLLLLE
MiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfccsc9DzzyxDMvvPLG
Ox988sU3P/zy53/pTwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8u9zzlwACCSKY
EEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58CCimimBJKKaOc
CiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgRRhljnAkmmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eKbH37587/1J4BAgggmhFDCCCeCSKKIJoZY4ogngUSS
SCaFVNJIJ4NMssgmh1zyyKeAQooopoRSyiingkqqqKaGWuqop4FGmmimhVba
aKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeBRZZYZoVV1lhng022
2GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaFV95454NPvvjmh1/+
Xez7SwD/D/yVV04=
                  "], CompressedData["
1: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
ebNqCQ4seP5ujpr/GoqRW9l+UsmBWRLYqN5GrCF5KtpgT3BKjmvOb/Dnp/JC
YWDP92GmrJFryOlDYF4K2GzzFqcKeP0VjWo+OC8ALnbgVOGErq/gCQ0Wh3yw
VN7uHf/A92ebeg5GraFubsFD9FUc2MT/xvkw8B717ItHwDP+nz5Rv1lDWzMP
l8n+aCQ5QQPmTj7yVgwsZ//hID34zt1RNXGwX8fRW4zgLtnkBbKfaPVEMIPt
uE1ij4JdWP1/soLPMnbPSoDts8YQFzhZ/pqyFLjPXO0DL5iadMj7DDgwHdGd
B3uwMn9XB3+oSDK1BusLMTDrgTszHMtiwQdWsz72gHM0a030Y9ZQ1f0FA5Nq
Duxw9I00d9wa6tfuZRkB+wY0iDfFryE1H6v6+zUceOCx/NWXCWuILl5jV8x3
WF/PabZmctbQgML5pF8/OTCNovo/0+o1pDBgn07XxoErv864DbetoeclvSTl
LpjPJUcRh9E1lP3OaNG9jwPH+c8qk9bW0Ar7pX2S9Jy4qjbU4sSLdVR/+5Tq
5+Oc2M1zcE6XcwPJMmkcu3+VE9sXR7ktu2ygok1GKmtw4UJQA5PrBkJKzS0O
4Iwee34hcHVfbLIbeOaI3j15sHqzld0LcG2PTL4W+Cf/+QsBYNtZJuq74Jbr
m6NRYNn2z/GvwXWTdb5p4EopVYUv4NTOd2J55Pfnv7VPgHOXOD3O6HDihrFf
wxluG8j7bMtADdiw8vqU+bMN1B/5T/3SNU48PCEyddB9A11rv1rSDq7xYhge
9NhA4rFHaebB/226cJ/x3EDrpUZXmHU58RnfqPPh4Od+Jjoc4MO7SKmp4EI5
i+sk8MfXwTQFYE9dtxuCYMaNZ7W/wQ9uFhgLgQfYXHV6wT7WxSXC4Kv7h+sG
wNEHg7sPgn2VAy1HwPe2zTcOgQU1T7KNg/+d41E4DFao8rk+B77MX+MsBtZM
7YxbBT85kb9yFry/dNj87IsNlJnTb6sHHhUolPID1wcrz1uBw8IvrzWD+488
HdK6zomzo+Iq3/lsIEs5oSkpPU58axrZuvtvoLZNSSYOfU4cR4+ZDQI3kExO
8tkFMHfVuwDp4A10sb5OpNqUEzMfsZEJf7+B8lf0vsc+4MR7g3M/T37bQJzH
bwo/s+XEIXLJh6VHNlCgTI7kg/848XdG1ribOzfRjZcTQ8ZenPj1JylK232b
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
                  "]}, {Automatic}][-3 + $CellContext`t$$], $CellContext`t$$ > 
                3}}, 0], {0, 0}], {
            Piecewise[{{
               
               InterpolatingFunction[{{0., 6.25}}, {
                5, 7, 1, {2308}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                 False}, CompressedData["
1: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
                "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2gEraFG4oOEzZ1zjGmOMJEkykiRJkiRJkiRJkiRJkiS5kiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ85xZ9fyC99vttdfa/7f+v8pb/9ufP3/+4z//
/P/1lwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375YxD+EkAgQQQTQihhhBNBJFFE
E0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU
00AjTTTTwr8hb6OdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZ
YpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155
450PPvnimx9++ffw/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vx3/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXfy/+vwQQSBDBhBBKGOFEEEkU0cQQSxzxJJBI
EsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBK
G+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrrbLDJ
FtvssMse+xxwyBHHnHDKGedccMkV19xwyx33PPDIE8+88Mob73zwyRff/PDL
n//QnwACCSKYEEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58C
CimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgR
RhljnAkmmWKaGWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wL
LrnimhtuueOeBx554pkXXnnjnQ8++eKbH375t+n/SwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8+R/6E0AgQQQTQihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0Em
WWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitttNNBJ11000Mv
ffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8Ah
RxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy//Pvj/EkAgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy9//lN/AggkiGBCCCWMcCKIJIpoYogljngSSCSJ
ZFJIJY10Msgki2xyyCWPfAoopIhiSiiljHIqqKSKamqopY56GmikiWZaaKWN
djropItueuilj34GGGSIYUYYZYxxJphkimlmmGWOeRZYZIllVlhljXU22GSL
bXbYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ1545Y13Pvjki29++P13
/hesPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy53/qTwCBBBFMCKGEEU4EkUQR
TQyxxBFPAokkkUwKqaSRTgaZZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRR
TwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8Ciyyx
zAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zx
zgeffPHND7/8O+j/SwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8+V/6E0AgQQQT
QihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRT
QSVVVFNDLXXU00AjTTTTQitttNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wz
wyxzzLPAIksss8Iqa6yzwSZbbLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zz
wCNPPPPCK2+888EnX3zzwy//Lvn+EkAgQQQTQihhhBNBJFFEE0MsccSTQCJJ
JJNCKmmkk0EmWWSTQy555FNAIUUUU0IpZZRTQSVVVFNDLXXU00AjTTTTQitt
tNNBJ11000MvffQzwCBDDDPCKGOMM8EkU0wzwyxzzLPAIksss8Iqa6yzwSZb
bLPDLnvsc8AhRxxzwilnnHPBJVdcc8Mtd9zzwCNPPPPCK2+888EnX3zzwy9/
/rf+BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQ
SBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4ww
yhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77HHDIEceccMoZ51xw
yRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Mu/C/6/BBBIEMGEEEoY4UQQSRTR
xBBLHPEkkEgSyaSQShrpZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31
NNBIE8200Eob7XTQSRfd9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLL
rLDKGutssMkW2+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvv
fPDJF9/88Muf/6M/AQQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSS
RTY55JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3PfTS
Rz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjobbLLFNjvsssc+Bxxy
xDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//PLv556/BBBIEP8P
Ze/F7A==
                 "], CompressedData["
1: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
                 "]}, {Automatic}][$CellContext`t$$], $CellContext`t$$ <= 3}, {
               
               InterpolatingFunction[{{0., 6.25}}, {
                5, 7, 1, {2562}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                 False}, CompressedData["
1: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
/wEjFUQM
                "], {Developer`PackedArrayForm, CompressedData["
1:eJwd2mEoaEHAoOG797PWWuuzVpIkK0mSJEmSJEmSJEmSJEmSlSRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJ2ufuqefP+fvONOfMzP+p/7/lrf/lz58//xH8
5/8/fwkgkCD+vQ4hlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhlz8Gwl8CCCSIYEIIJYxwIogk
imhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWMciqopIpqaqil
jnoaaKSJZlr4N8jbaKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeB
RZZYZoVV1lhng0222GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaF
V95454NPvvjmh1/+Tf6/BBBIEMGEEEoY4UQQSRTRxBBLHPEkkEgSyaSQShrp
ZJBJFtnkkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE8200Eob7XTQSRfd
9NBLH/0MMMgQw4wwyhjjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77
HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvvfPDJF9/88Muf/9CfAAIJ
IpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskjnwIKKaKYEkop
o5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKbHnrpo58BBhlimBFGGWOcCSaZ
YpoZZpljngUWWWKZFVZZY50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265
454HHnnimRdeeeOdDz754psffvm38P8lgECCCCaEUMIIJ4JIoogmhljiiCeB
RJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa6qingUaaaKaF
Vtpop4NOuuimh1766GeAQYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeD
TbbYZodd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaH
X/78V/0JIJAgggkhlDDCiSCSKKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzy
KaCQIoopoZQyyqmgkiqqqaGWOuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGG
GWGUMcaZYJIppplhljnmWWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPO
ueCSK6654ZY77nngkSeeeeGVN9754JMvvvnhl38f/X8JIJAgggkhlDDCiSCS
KKKJIZY44kkgkSSSSSGVNNLJIJMssskhlzzyKaCQIoopoZQyyqmgkiqqqaGW
OuppoJEmmmmhlTba6aCTLrrpoZc++hlgkCGGGWGUMcaZYJIppplhljnmWWCR
JZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSeeeeGV
N9754JMvvvnhlz//TX8CCCSIYEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQy
yCSLbHLIJY98CiikiGJKKKWMciqopIpqaqiljnoaaKSJZlpopY12Ouiki256
6KWPfgYYZIhhRhhljHEmmGSKaWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30O
OOSIY0445YxzLrjkimtuuOWOex545IlnXnjljXc++OSLb3745d8P/18CCCSI
YEIIJYxwIogkimhiiCWOeBJIJIlkUkgljXQyyCSLbHLIJY98CiikiGJKKKWM
ciqopIpqaqiljnoaaKSJZlpopY12Ouiki2566KWPfgYYZIhhRhhljHEmmGSK
aWaYZY55FlhkiWVWWGWNdTbYZIttdthlj30OOOSIY0445YxzLrjkimtuuOWO
ex545IlnXnjljXc++OSLb3745c9/158AAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
aaOdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvnimx9+
+bfZ95cAAgkimBBCCSOcCCKJIpoYYokjngQSSSKZFFJJI50MMskimxxyySOf
AgopopgSSimjnAoqqaKaGmqpo54GGmmimRZaaaOdDjrpopseeumjnwEGGWKY
EUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ022WKbHXbZY58DDjnimBNOOeOc
Cy654pobbrnjngceeeKZF155450PPvnimx9++fM/9CeAQIIIJoRQwggngkii
iCaGWOKIJ4FEkkgmhVTSSCeDTLLIJodc8singEKKKKaEUsoop4JKqqimhlrq
qKeBRppopoVW2ming0666KaHXvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWW
WGaFVdZYZ4NNtthmh1322OeAQ4445oRTzjjngkuuuOaGW+6454FHnnjmhVfe
eOeDT7745odf/m30/yWAQIIIJoRQwggngkiiiCaGWOKIJ4FEkkgmhVTSSCeD
TLLIJodc8singEKKKKaEUsoop4JKqqimhlrqqKeBRppopoVW2ming0666KaH
XvroZ4BBhhhmhFHGGGeCSaaYZoZZ5phngUWWWGaFVdZYZ4NNtthmh1322OeA
Q4445oRTzjjngkuuuOaGW+6454FHnnjmhVfeeOeDT7745odf/vxP/QkgkCCC
CSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLK
qaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimm
mWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkCOOOeGUM8654JIrrrnhljvu
eeCRJ5554ZU33vngky+++eGXf4d8fwkgkCCCCSGUMMKJIJIoookhljjiSSCR
JJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGV
NtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCT
LbbZYZc99jngkCOOOeGUM8654JIrrrnhljvueeCRJ5554ZU33vngky+++eGX
P/+pPwEEEkQwIYQSRjgRRBJFNDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4F
FFJEMSWUUkY5FVRSRTU11FJHPQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAj
jDLGOBNMMsU0M8wyxzwLLLLEMiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkX
XHLFNTfccsc9DzzyxDMvvPLGOx988sU3P/zy74D/LwEEEkQwIYQSRjgRRBJF
NDHEEkc8CSSSRDIppJJGOhlkkkU2OeSSRz4FFFJEMSWUUkY5FVRSRTU11FJH
PQ000kQzLbTSRjsddNJFNz300kc/AwwyxDAjjDLGOBNMMsU0M8wyxzwLLLLE
MiusssY6G2yyxTY77LLHPgcccsQxJ5xyxjkXXHLFNTfccsc9DzzyxDMvvPLG
Ox988sU3P/zy53/pTwCBBBFMCKGEEU4EkUQRTQyxxBFPAokkkUwKqaSRTgaZ
ZJFNDrnkkU8BhRRRTAmllFFOBZVUUU0NtdRRTwONNNFMC6200U4HnXTRTQ+9
9NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptssc0Ou+yxzwGH
HHHMCaeccc4Fl1xxzQ233HHPA4888cwLr7zxzgeffPHND7/8u9zzlwACCSKY
EEIJI5wIIokimhhiiSOeBBJJIpkUUkkjnQwyySKbHHLJI58CCimimBJKKaOc
CiqpopoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgRRhljnAkmmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eKbH37587/1J4BAgggmhFDCCCeCSKKIJoZY4ogngUSS
SCaFVNJIJ4NMssgmh1zyyKeAQooopoRSyiingkqqqKaGWuqop4FGmmimhVba
aKeDTrropode+uhngEGGGGaEUcYYZ4JJpphmhlnmmGeBRZZYZoVV1lhng022
2GaHXfbY54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaFV95454NPvvjmh1/+
Xez7SwD/D/yVV04=
                 "], CompressedData["
1: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
Gnw8RMSzV27gUqcBqfRmqJDpMFFmHA27ZGhgKqHPxH1xhPDi3DZ6+g8VspkV
Wrn6xokMxnPSAujTgrf2JZHGCe7aIxbL7ZhPOX2wVhoYJ04+rE2pQ+82Ky2q
GRwnYJBzIgEtUDLEfGN4nOBQYBV9juZ2pOlNj4wTniH6IbLo21qcQ9smxolU
i2t/+9qo8OkBne3h6XFiuGqP0Rt0N9t3mv7cOGHKv85h20yF88Rf+9RtE8Q5
t0tSFxqoUOx1XZtRdoJw89GNlcJ8Y7NlorOhzgTRZiDsylBDhalNX/6mWEwQ
1YfZd1IyqHDl2PBolckkoRwXfa8ePXFBzeLK7Unikt90fjyal9FiftB0kigg
zTO7oHsUnJ7Y3JkkuNPT9C+i7RvuLv+9O0lwLO37LIHem3XY4aX5JBH0+Lls
K+ZDmjl+9okPJ4mGnqJcd/TpL9dsflpOEizHu+UOoCcKE+/12EwSBw+U7PLF
fGr/hfQznI6TRP6nA019qVT4Ox7KedZ1kuBZF3mgiN7/xqjO1WuSsKXzvr+E
+Vj1qZBUqs8kceDZNtMstIvCiL+9/yQh9KzsihW6ZUnLlPxikojp3ZH0CF1l
e7lpy8tJ4mH3Dcp9tC7cOC6KdraPP3cPfe/P7QwC3ZQyGW6G3lpyT/Aq2ua5
7PQttLrjw1c2aMIo6/UN9A9P60dx6MhU6cMG6JAGJuV29OPH4S166NEXB6ib
AyeJbyvbJPnQHXGdVpteTxKflmuejmB+GddcNEj/FudbmjRSi/nn71cd25vj
Jgn7pwF9mZi/9pawB8TlTxK7BdpNgzHfvdFko2NXO0lw6fOGSbyhQqSLt4Hd
uykitmUwRMqJCouD7MlSV6cJmSH5d+GmVCh3OWXxln+G0HogV+msheszNPIh
fmCGcFeOs2vehfu1xblftGGW2AAWrSfRz56fWL/ZNEt8XpMTztlJhbz9EzvC
WmYJhQPU6yLoH5dFhFraZol8/2KPIE4q9O+bFWfvmCUEzjwPYUQvl2pKanbN
Ev0zdKFDO6jgLblTsKhvlpBvcdYu206FgstMNNmhWaIvfTE3dhuu16UdxbFj
s0Qm1wMPbUYqjISEre7bNUccGGe/L4TeJ51P14I+enBQe2EjFXyH+pi8uOYI
+qmRgxVoPvv5rXLcc0QN326Oj2ir6qmdQ+i6ny7zD9Fbqhr3BPHMEd8pUSk7
0I/+WEou8s4RNsyeJnkbMP9PyZTX3zNHlE4LbzVCD739eDKHb464yb1fpeUv
BQq++2Y8kZojdK6ZB2vSKFAcPbQspzhHCE108xSsUICtZoJz6fQc8SHkfYXE
IgVGFWsZv12aIwIfHEztq6eAwfMoR4meOaIvtlHLOZkChte76VzvzhPJqX9m
aZ4UkAzOPf5lFn38F/XWDQr8upfLG+lIJkTVLeNrrlNgOOzl2ygnMrHV0UL9
CDqi7MWmOBcyYcVc/Sv8GgWC/FLsEl3JhCWbuwYjunBssj/ZjUyciQ/OfmRI
AcuRM+fSPMjEXWXHR6pXKXBWQJrzmw+ZOL2zbmSrAQVmbY1rCwPIhJFIqHDv
ZQr061bb/XxFJh5maWxeOEsB1n2vwxnyyER/dvy2k//+/3t7b69QC5mweThy
/xiaW9WOSRX923932SH0BU/nSUP0MvsJAUl0sbprgz16hnrDUQitaPfs23t0
rvbDJm50tNDTsAz05A9LHyZ0r9l9swm0Zb3asSV1Clz0PH9ApJVMnH/aOz2I
HnUSXDVC5/mojsqju7qut39uJxPfPonYHEErezLc/YquyNlMk0X/6C0ey0WP
V015yaATC54+/IkW7PrNLokuZz068xttPpkSKooWa5617kALsdxLEUA/0Dez
n0OL8vP+4EaH5bY5M/8hEw5Spc3b/7VHOeMugF5kSQv5pUYBrj9yeYwdZGJ4
zO6KD/qsis7UBHr/792cx9HsPe+EGjvJRHZ+RC2NwPW13qCf10UmNGkHbp5R
wfmSN5T4NkQm1uNF8l8rUSDK5VhS1jSZyNHxb2+Xx/nN825KXyYTd7LMiwXk
KBDzjDchhW6B+Pit7r7ZIQqI+Dbv/cKyQEi0Gbd37KLAwQDbPba3Fwh2XqnN
rZRVEHYe/8VZtEBQBnoUrvSsgvQ+rtf+uxYJvS+vY4x+rELFHY/oOstFjEdH
X03GrEJWQfLe3spFom3rmbP03qtw+pbWjmyhJSLUYXKdQl0BttD8J08Tlgkf
Fge+jnsrsBj6feNr0VXikt0U9ROag1Z/RUhslVBk5vhjhnbjV/mSiRYuGc2W
Qh8TMKOeEF8l/sZbvJq7uwKNJI1zLeiC/Nh7uegOzdHQOxKrRK2aNfcJtCt7
5BE/yVWiLni95PedFbgip16dLLVKyDWdv2eI1u6rN/wtvUpkWfcV1pqsALH+
bFRUYZUQGuoJHLy5AkstN94/UFolUgqGzlGNV6D8+XepdOVVIn/04JNVdHYh
K2SjLb+7RC6jqbGX9fLRdcerKhbRJYr/o9i+46n8wgCA40olRMjIKEVFmQ0j
zk0yioxkRGbKyIhSSGSUraQhSQjxQySyj52E7Cuyr3XtPeP3+PP7Oed97nPG
e87z/nHjhorBfxzZZufBuz3GH5aDw1RMuefADdanGX6AL6sv3JkCG8bUSDaC
s9afYQq4x/e64R8wvsa9bwR8g2fcawCc+j3gcjm4UcQ0XV5+FUk83lGeDA5P
i+f0Ao96yUuHgsM+vg4tBYdmiGc4gy+HqdLQKKwipT29hw3AB4O/u14AE7Ts
mQ6DCxXqTarBelqjy5Mm0N5BuqiGYHxMWn154OjzJJE6sHfIpx++YGerX8ya
xFXEH934ysl4BYuLtNfYXVxFrtxPVoyvr+BYKx7OgEuriDqlZFrVYAV/klDb
TNBcRcoTLzxO6UH/Tzs9sO4qYot8PKR1fgWn22XbFj6D9uJ2rwsnVrBvVUhx
SMEqcrAVdGDgWMHPHuwXkpyE+EM72v6jXsEMujPXUvnXUOaaUOehiWUc+HP5
37z2GpLjPPH6oNMypirtGhyyXkc77XTPHp1ewqEjAsy73DYQJyOjsr7NEn7F
EVHm/OQf6h3db7iybwkPtdHw7Ty8idgjNOl6wRxGLh6nwYeUzbOrwD2ebzss
wUo71M3SwLuWHU9HgEt/72V8CZavWn1RCm5PTMt3A4uOnJ6aAufZvN2nAg5t
2Jd0+cgmYjAZtWUDyy7mGX8G//V7X97PsoRvax/bt0NwEwW8FWUa2buEH/tn
DyUc20RUPtLjf8G45qd9LrhX7yvhDzj3A+eLYjDhi9pyBziGpyZ527w7+ynb
Nn73oGTboqYPe7ZNz3m0bdtnvu9t3nbiq/bxbZ/am1y17ZOsT2lKtp/HbWnb
pmMaEtt2vwNt5LY/71K6sW1vPimPbVMREoK2XT63w5cE/hIYdLkUnJrXEdQO
bqlI2FkOvuz0X0QbeKqvqKICfC94sO8X+O5kFk8bmI91v1g5+AA5+v4wWH3n
Bc88cGele8My2IbcFKgPDvhRr5R4fBM5npKKXGKC9aP8ytUR3kRyO26/fwUW
Gbp3hEpkExXetI8/BZZyqAlNB9+tWLxlS7+Ey1/fLXKW3ERJravasXSwPmHe
0mdkNpHeuUzLFpolfNy2g2oFbaLVMs33dFuLWC7RmC1PeRPVa+3dkF5fxBIH
Z++6amyip5dotGnaFnEztyTzs+ebqNbzQc+DjEV8uK5tcKR5E11fb/Z992wR
4w3Gr5FsW0jvc7GgndkiHqN5qh14bQuFpjBlUKQXsU/vmf/KXm0hs+HsPdws
i3hCTaJQpm0LxZ59ydnAvIgvHb34Jgs89073iA94LSTS6Xj7FlrcvyJ6Buyi
wa8SB1b86ilN2buIlzSGuLlIW+ieyxDxA7jWZXj8OfjPFTdNOvBMvkmAd8cW
ylp6ZejAtIiniOVcTn+2UHesnGk74yJ+epn5o2nnFjr8TzN+aOci/lv161He
4BbKvVV/dJ56ETsxBFMzTm4h7TCfmc31BdzOzCpyY2kLRcWgf7uWFvAG27Gl
z1tbaI06WSq7dAGnNA13NhyjIkY9fTaiBA7ud3QROE5FzHh9MqodL+CbPm93
uYJDVKJUrcHi9+Le/QT7ZdQurpYs4MVXQcd5hamIE31lH4PBRdVXc5zAF3ae
m8soXsC3BxOrOUSoiAS6BtnmogVc/dj1Vwl49NlD98XCBbw3r7LC6gQVMcVs
kVE3ewG3mM5XjUpSEWVtR45/SV3AJ47/7LslQ0V8p0hppItfwPGs2sx9iIp4
zvHDDqOoBVxpHaWlq0xFPB4VUj92fgFnXH3HW+dPRaRYsLiIjM3jbwUPdZQr
qIhOe2LzhMPn8Q3BbMOcTSrinHmj/l7wLRvCZjVYX2NoaT5sHj8y5Y7vAE/V
d7/qAA/aUylTwLTk/FPFYJXInLF18Fi4W0sc+GqzTCjjFhVxhrWU2Q5c8aiv
RRycMhupcQpM8a7g0gUHi6wE/gudx1l/B0wegCvUner/BM/jTmaWURIVNbGL
MZycEziPA4Srj0jTUBMZd5j8fvFsHpssLbO9JVATBVqHQ+395/G83Pu8ZVpq
oseaq9+q4zwW6B6OS9hHTYz79oUh3W4eu5mX0hizUxMtvKqHTG/P44knBmKs
nNTEv+u7mPdZzmMdRrOjP7mpiVaC1DOT5vO4ms6ux/sANfFSWl7FT7N53PCj
3Euah5p4kiARnGg6j7/2W+2ZAT9aetUZBS5ScLRYBisOLx4PAx/77pi/CX7a
rOXmA565dJuZjpeaeKUwqcYVzLR27TYjeKcU71UX8KW9Wi/3gs1kX3Y7gg/f
UMMs4DX7x3PW4IDoM+vsYKbZ2zstwOfEeQ9wg9V+avIYgQkVVHJ8YPoAmkl2
8FD0RTcVcFAYU3GjyTxe7rfOdQIb9buEBIPPPbediwJHXH/vQzKC9YpADGf4
qYkypgVnDxvOY4263m9NB6mJkiW9/znozeMQytmJOwLURB9jvt78q/NY+OWp
rzuPUBOT3t36Fy0N80Oeo1mXoibuTq5msuKdx+VeNwrKLlAT3/QOGbLTQH+y
7nOjq9TEsLlOwfThOUwKqlGosaAm+tcfLzjxaw7LOXx/stOZmljctbOKUWQO
3/ZUG9KspibKPoxjZwiYxWwsfJk+bDTEL00byaYDM5ivhbXOw5iGaLvl7p2T
NIM/Eta0Yu7REP2DQp1LbGew7kV6/+lgGmKpsZPNU7DWpmsfbQgNcSRln9kV
MAvBVI4bzHvvnt5+MPPuiFdiYP/iV+o9NjM4dC/ztBJYMcBVMQlcz/5H5To4
/cj3k2fAEfzUK35gX9IiR7X1DOZnu5b4BdyVJUmtB66ZbdXsBB+9JeeaensG
G0+8fXUglIb4J250dPPWDJZaKWo1Bp+OlzW8CuanOs/4ARzcVC+5cXMGv8q1
tj0YRkM8by31/DvYz1DXTRb8MO6YYCb4AK/WJXnw/QKegs9ghXTVA0Twxn80
5CiwqqtU8UUwmwHD220HELLbt11J2K++7eFwyZltM3zhp9o244Gvu5XB44bH
v70FcyVKHN62Ba2U9bZ3i2ad2/ZjA+XGN+Bs+UzHba+mGkpve1r1S/y2m9fv
fHwNLtLMaNt2VO3JrOdg5o8JLapg1aXJsiDwldNvmi6Bex+nN/uBXfcG/lYH
H/61w10NvGLxvsAM7HWT7xATeCuWJvEemEdj+Uez5QwWqSoMCwALPHvu8AZc
2/jjwXvw5JG+gYvmM9jTkcneMpyGaNhloLBgMoOF9TL5hJ/TEIX5CE/ijSGe
VXLIDHjUfCRV6zrsD7/J3NwXNEQ3CMp1YQYLOrjUW0XREG38VJtIIjNY8S2b
4dpHGmJCibp0KNsMPku9oXjvMw2xnK07y3ltGvfRTd5r+UJDzLCSScn7NY3X
oxT/cHynIcqG7NsK1Z7Cj9LOK2ZM0hD54mIOmrVM4LCCKwnXeAlEwl1KSKH2
OL678f7JzEUCUcLurLcomF8jZesfWDv9kEuc1jgW8Bp5tEeZQLyqkGLFBp6V
llrlBB8RbNB/pjmOk9xC7gmBs62fq61dGceGxPkpKbDwd80TfRrjeAepq/8K
mCnTj7FafRx7W6012oDbgsQm/7s8jnUmrhT5gXecMrmWRBzH3IGivC9UCMTr
RgFHPp4ex0GGtIT3qpBfh79RlDDk8/ebfaIagdj8UGz9Bf84Tsg9ciP9EoHI
marieCyLgoenRgX/0yUQ1+KLnzNEU7DbD5nBt3oEopkn4cmUHwWLmZhmeBsQ
iAaDhQmBPhRMv7uYJwd8z34FH/GmYJnbF93GwNlahW3Yk4JTo5YreA0JRG/Z
v5OLDyk49GPH4afgufu9hVTgloXW1Xfg4N+dAXseUPBA7VLdF7DZzvKDh+5T
sMIhf/s/4AES008+cIyJ1cdtn4s3ussDHgu62LJt+1ufubjBAkmCdJ3g+0cW
yzjAKpk7ZLZ97e95W3awUcqQ3bYrUVcBM9jYLbFp28+D7u1hALPssDrbBS4o
YjTeCfZQPxKzbZ/btD4d9yhY2zbsdS/4gMtscgrYv7M7fBBc3dta7w5midkX
OAI+SKB2vAuObfXSHQWvVpxgtgb/WxvnHwPPv/ukdRO84+Klu9sWseB5YQY2
tPxcvu39TXv2GYJfq960ooAHd6xHaINr0PepbdvQU1gvgQvvxZmMg9WcRHm3
XCi46ueL4mmw4ai50DewsqUmzwL41PB+r2onCr5eUVfFf51ArNqUaOqwp+C4
Xy5Gl8EZkrk847ZgLcVuV3DH6HryRw0Ktv+6mSJoDOvNqJF+VZyCf3n/Tau7
QSBaOtyRpmWF/TEe2W1nSiC2zpy+9nVxDEcdWZQimBOI8uLplcJ0Y1joQfT+
tjsEomcjiyLf/lF8SUDubJArgShgJZP69sUIbtR5WbTsTiAKYg8mtgcj2H+S
c6vKg0B8u++zSZjxCN6Qrb8V+ohA5KFi/7RTcQSzhzyd1vAkEEsvvzbNPzeC
W/c2x7iAy4V7me3OjuAG3bAdUeDECkIej+QI7h3+zV8CPlzc4r94fAT7VN31
XAIzfpU513BoBLtMv2AVfUwgdrMGdiVxjeByMdmBm2DexPqbnDXDODRXSsDE
m0AcSf2i5eM6jH9+5Ijf7UMgxqRkDwwdGcZGpJjQ274E4kvPZROlliF88qks
+0M/AjE3SND6CPUQXlFPYG3xJxB1kcczKjEyllH+tSkJVu9seZAjSsbJRuV2
21ZLF7W2Bevl0HdIgM/nBxvwgz/O7FPa9vEtimrrSTIuZuz6Ig5e9VKXCQSP
Mlge2Pa1VVbu+RNkTNs4NysKpr1FXjMGu3P7/DgJLqgv7qoWIWP+aeb3J8Df
zosnjQmSsY5j6NeDYIbNi/cYDpKx5efBm2zgrGUeZTFuMnZ6z529Exx6vuWA
DhvkaygTswbjy2eybXmzi4zVLmle7AUXVg5Hd28M4v5Awxvl4A9L/Xel1gdx
R+YDvhIwe7CsauDqIKZpCSDlg++F2HT1LA/iBxJ/n+WAn+h/eFcNnohlVtv2
B6cWwwxwWJI8/bbpkUKHJ/iFQVDIN/DqxVQ9DfDU1SKmbWf4c7TxgElvW55n
gx1nXx5iBadqxj3Y9ncbZofd4OkFe5NtP50KKdhaGsSfA2Qubrvba/fOJXAX
Pe2JbRfxPr06AfbzqN+37WBnr4kOcKWMSd9X8OPVh/5V4P4sSvq2c66wfCoD
B/xrTtj2ZGJKeTHYhrcwats8Jp1bOeDnaTnW2/YX2yOfAW626eTe9iD/Ofck
MM37zbossKvwiR6D7fwkNMszwIkaxxT3gFtF7n7/D3wsSDypeHEQ0wfdTPsM
ZlngeZEzN4jJ5gNSQWB3i2rv9OlBzBR6PMVuez8mid1PnBjEIY7SDBpgo1dG
DjFjg5jPnvGGKNh7XFfyyq9BPO74PGoZ9repbWAPVfogZvXLyMx/AvcdkeNx
ThjE57J/fw/eh1v/CfLccYL5UKPSP+ZFICrWkyuO6AziLLvazlZ4v9xrL+dM
ig/gjz+0W785EoiXa2T53zP3Y27JIrdpEwJRyGvtypeBXhxAHO9zu0wgTshu
TD9P6sYxH68e0zhNIL6558Uoat+FMyUkuq14CESrfMdl4p0uzPeGQr4OduQY
7b9q14UTit0mNMHRkaN1t2y7sPOO8HklcPOZu3luNl34jYPwmgz4H8HnU4h1
FxZcvUwlBt5N9c3z660ufEE7eg8XWIBEZ9hxswsbCRHYCeBnee5nNi26MOGR
L8/kAQJR3E5Rx02rCxsO124yg1smii8synfh9K4kgVPccD/TJe5xFunCLJ+4
AvS44HxRzEyd5uzCZ3IFxR5yEog7rw4fOMfehZ92qr+/DJ6rLHsVwNKFj0WQ
qPnBCSxKnG2MXfgsf5XpHAfsn68OCYfou/DdZ+y5VWB6P9dpym6IX045VAF+
J5NQ0w2W+STpWw72Mm6MawSfFHInl4Fzo0V0c8HS903dS8EhEwF078GVU+8G
S8DV9qN5T7aft2xTLwZ/7zuQ5b6rC7PRzFmng/WRcKrLzi684VHsFwMmhLF+
ukPXhX3rzn4MBav3yr8W2ujErLrBcVP74fxrpurpm+3E1yI5fDXBx+/Ze0SP
dOIz5r+UMtlhf49HOuh1d+Lfoa+GmcG8XQesc107MZGYd6WRiUCMvWJ0XJq5
E0cWfF/22UUg0om8Xe5K+YP71XD8MRp4v3tNueIv/MHlAg6sZetQj1J5tQd1
d2C5wtq96otQ/9rffyj9tx3HPwgN726hIVLdtiY87WnFd/52XlnLhPr+V9GB
9+RmvH8+1zcM6nvRHmPlxKlGzOl6+WvQLRpivuyXmXer9XhxhPHIoAINUVw+
5+f0cj02Edj9tQkcmn71k9JSPV4tmUOlYPaXQd5RC/W4pC2kPgPMtGhoMjVX
jwVvka7HgEs6y+QvzNbjOMfmkWAwZ1H51sRkPeZzOU5tA348LFjzmlKPJbQU
uZTBApHjr4kj9ZhIyyt+GIydtnaTq+qxU5RaY9U5GmL8p8CNwE8Q/+mBhdty
NMTYkjuOkr71OEDGJ3q3LA3RziTEstu8Hrdo2FenSkN9/935kJRRPS6jNwu6
CVZlZ1gN0K3HyoP6anzgUdXrlB4NiK+iS+g4S0N8IGi6eEqlHqfuv5b3AvzB
k4c7mFiPXcWvW18Gv6jd8+asVD0We3unpOQMfA/d8S09tu1xfGjblWHrY1zg
IEFW/2Kwjvg91j3gEyq3RovAvtqT5zYk6zGbVv7lbevP3bo1CVaEL5lC8EUp
o/zf4BPTWfcLwNhZm+ErWFRO/1w++Eemmmkk+NKRDZo8MEuDTYydRD3O39Kv
+g9sfUP7r6J4PS6VDn0WC0bmVDzcYvVY9ne02kvwnr+uxrMn6/Fyue+eZ+AB
IX77cbD3X8Pqp+ALAT88h8BTC2JPti1K5RTWCw6mpzu37fgwztg/4BHev0v+
4I9SZV9awDvEvmZt+0vqvqYf4DJ1k6PbHvK4OVe4Hd+cPsYPrJicy5oJPm+f
u2/b6PuWmQz4xsKd/x6DfTbtMspP1GPHFX4lN/Ahz/X1y2Art99/XcCPbx/d
k3K0HrOrjzXLg+t12Y/RHa7HDZ8TfuzczvdDlY4lXz2OubZZ0HSahigZIx1c
ylWPH3KupkWDBws6vt0er8M/vyy3PpaiIRpfoieyFdfhzcWnzuYSNERKh6ho
dVgdXin54XdBDL6PjqR6e5rV4e9s3fSCJ6GdZ0BaVrIOJ0pPEOhEaIgNJ/m9
K27WYuMH8kWZ7DTEbo3LFQ5RNTitct/MQSoaokhT5Mr5xmps6H+y4SqFmngm
Tfb6hd1VOMaf+Fu5lZropWFh6qZUgd9+oc5aLqYmOp64l0N5UoaXymPv3kym
Jgqo8Vxv9SrDpW/DndTAEe2L1CWeZfgeB6+jKNipjyo92aMMl+ep2LOC7Z3l
jV64leERt712K0nURNm3/zF4PCjD+w3uWXeDOwTG719xKcOyyg8tksEq12fH
DzmWYUHfmet3wbzvSxwWbcvw0PpfbTmw+/42NbnzZfjEHqp4vk/UxLzD5488
5SjDMqld16jjqYnOZfe32iZLsYJzpe1gLDWRUj7+V7iyFNvKa/RVxlATLQtz
rViXMDbNF0/zfElNNKYMfSm6WYLJw+9+Hw2kJpJdn43qtBbhPvbTUhWPqYns
X70y7bTycZ/5XX3u29RE/d2lsVpNOdiz67SgoCbEY9PpZ9b/ivHUz5WBM9TE
i8c2dj+sSMdVtOevXOWjJuYbqPRa4nTcyvQ1UwnsvYspT7MwHVO/FmY9A+ZQ
0IqU+56ON/qf3T8KXt9ivHc0Ox1/n/tJ4gSn6Kros35Jx4dqZmTowZHiWUfG
k9Lx0Y2dmxO81MQXwbupKj6kY53zX8t+gwOjtMbevU7HHm+m/b6CmySDaRkv
puNnpyYZw3ioiSwJgy/85tOwoJXRHZsDsN4jhyOo49NwoL70RyVuaqJaz346
P6003HHeJ4Wfi5pYsP8Wx0+BFPx4l0XvJ0Zqol3CPtJl7884Xp/Eq7+HmqjH
UxtG7k7Gf/uzsnbtpibeyxpWeimXjL/UjrzLp6MmDtIKthtsJWEbyuTOnh0w
P8n6TocqkrC8v+MNGjCbg2h2TXkSxs0fuKjBqH7PkiP4wWR92xYtNfFH5bQ0
B5irbePFJjhdt9OjpCwJfwoUufIPPPvoV4kVmHPPdfoNsPRmgdK30iTcmpzr
swqm7q+spQGffbhvfQmsJzimpY2TMPGRvcsC2Kdu86VFXhKWK/4t1AUeybLo
d8lKwpPCA3/KwJMaAjL+qUl4tWeHwmdwb9fz8bjEJNx2Kb3jFXizQzWh5GMS
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
SwCFqYFgNXkK+h+SkEvm
                 "]}, {Automatic}][-3 + $CellContext`t$$], $CellContext`t$$ > 
               3}}, 0], 0}]}}, PlotRange -> 2, ImageSize -> 280, Frame -> 
        True, Axes -> True, AxesStyle -> Dashing[{Small, Small}], PlotLabel -> 
        "t" == NumberForm[$CellContext`t$$, {4, 2}]], 
      "Specifications" :> {{$CellContext`t$$, 0, 9.25, DefaultDuration -> 5, 
         AnimationRunning -> False, AnimationRepetitions -> 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{330., {181.13403309800196`, 186.86596690199804`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8671665931605196`*^9, 3.86716662986178*^9}, 
   3.867166682545929*^9, 3.867166719676053*^9, {3.867166769181219*^9, 
   3.8671667853670425`*^9}, {3.8678692228001194`*^9, 3.867869250412341*^9}, 
   3.86786951792829*^9},
 CellLabel->
  "Out[460]=",ExpressionUUID->"d7ea4cd9-608c-4666-a6bd-ebb689985c41"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 735.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"34e602bb-840d-4efa-ad35-5d1b4dca0c9f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 203, 3, 71, "Section",ExpressionUUID->"218715c9-e13d-4d05-9367-f46b46dc3c30"],
Cell[786, 27, 148740, 3669, 5915, "Input",ExpressionUUID->"930db826-3cbc-4bb3-97a6-3a010efa3e76"]
}, Closed]],
Cell[CellGroupData[{
Cell[149563, 3701, 271, 5, 57, "Section",ExpressionUUID->"a964257c-e879-4ee8-960c-c24d2796eb82"],
Cell[CellGroupData[{
Cell[149859, 3710, 18410, 439, 673, "Input",ExpressionUUID->"cdb5bb39-2bd5-427d-9b7c-b452e9e4ae48"],
Cell[CellGroupData[{
Cell[168294, 4153, 479, 12, 22, "Print",ExpressionUUID->"28fbc5ad-fb91-4c01-8ae6-3b49e03f901a"],
Cell[168776, 4167, 446, 11, 22, "Print",ExpressionUUID->"810ffd22-7eae-4d17-89c4-033dffb5b92b"]
}, Open  ]],
Cell[169237, 4181, 587, 13, 28, "Message",ExpressionUUID->"254f2cbc-ead5-4c92-9634-d94e1882f850"],
Cell[169827, 4196, 869, 17, 28, "Message",ExpressionUUID->"aafdf780-7871-428d-a1b2-feb60e9c7a36"],
Cell[CellGroupData[{
Cell[170721, 4217, 466, 11, 22, "Print",ExpressionUUID->"5bb7db27-6761-4f1a-af02-ad9101e5c6ad"],
Cell[171190, 4230, 464, 11, 22, "Print",ExpressionUUID->"449abca9-a916-4eff-9a88-d05c93b1ae41"]
}, Open  ]],
Cell[171669, 4244, 347974, 6248, 402, "Output",ExpressionUUID->"b4ea2384-f775-40e1-ba1d-01fdb641be7f"]
}, Open  ]],
Cell[519658, 10495, 154, 3, 28, "Input",ExpressionUUID->"cf1b83ea-ecb3-4982-abee-0ea8327b6be7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[519849, 10503, 239, 3, 71, "Section",ExpressionUUID->"4a6cc590-f442-4cf2-ba2b-04683823857f"],
Cell[CellGroupData[{
Cell[520113, 10510, 220, 3, 70, "Subsection",ExpressionUUID->"78fba3b7-04b9-4905-84eb-8345b4ac27e1"],
Cell[520336, 10515, 2837, 63, 216, "Input",ExpressionUUID->"04eaf6d0-1f9a-4a18-ad3e-f67206cf68a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[523210, 10583, 234, 3, 70, "Subsection",ExpressionUUID->"d0d51fee-e20d-49b0-966d-d552bbc9389a"],
Cell[523447, 10588, 3631, 79, 197, "Input",ExpressionUUID->"9301bae7-6304-4fff-a5c9-eb3a735b1304"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527115, 10672, 212, 3, 70, "Subsection",ExpressionUUID->"d324d000-5ccb-46ff-a97e-cf3e5a7c888d"],
Cell[527330, 10677, 1562, 37, 143, "Input",ExpressionUUID->"8b005441-b926-4a17-a4be-427c8122a419"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528929, 10719, 255, 4, 70, "Subsection",ExpressionUUID->"706d50eb-15aa-4398-b300-5226b2026de9"],
Cell[CellGroupData[{
Cell[529209, 10727, 345, 7, 28, "Input",ExpressionUUID->"ea9590aa-5d61-4644-b8ea-162b9785801e"],
Cell[529557, 10736, 3955, 57, 223, "Output",ExpressionUUID->"d82de120-dde1-4c45-8460-9de9bc816adc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533549, 10798, 343, 7, 28, "Input",ExpressionUUID->"76513fc9-4bd8-4283-87b2-4644ce9ab7f2"],
Cell[533895, 10807, 3859, 55, 204, "Output",ExpressionUUID->"30c82eac-5c56-464c-beb6-18e0e67d13c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537791, 10867, 341, 7, 28, "Input",ExpressionUUID->"e88ae3ac-396d-42d2-9a18-12053c7ddc61"],
Cell[538135, 10876, 3785, 54, 204, "Output",ExpressionUUID->"a4757381-ce03-43a6-9c35-f38f7135b6c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[541957, 10935, 288, 6, 28, "Input",ExpressionUUID->"46a9c4be-7bc5-470c-b546-e937448ddafd"],
Cell[542248, 10943, 3856, 55, 204, "Output",ExpressionUUID->"9f75a363-83e3-4ab2-aada-090322a5e508"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[546153, 11004, 205, 3, 70, "Subsection",ExpressionUUID->"1d6ef86c-66d7-4e03-9bcd-0f20f629f4f4"],
Cell[CellGroupData[{
Cell[546383, 11011, 609, 13, 48, "Input",ExpressionUUID->"3a24882d-ab46-4c1e-a425-fa8927a8b118"],
Cell[546995, 11026, 16975, 428, 236, "Output",ExpressionUUID->"ef9c906c-7271-4586-842d-ec92547ce20a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[564031, 11461, 234, 3, 71, "Section",ExpressionUUID->"6fbbeffa-94d3-4819-b3d6-3bc2457a08fa"],
Cell[CellGroupData[{
Cell[564290, 11468, 201, 3, 54, "Subsection",ExpressionUUID->"d4cd1662-0739-4366-903a-6c25f7b7413f"],
Cell[CellGroupData[{
Cell[564516, 11475, 22069, 535, 1205, "Input",ExpressionUUID->"0f3183bc-66bf-4493-80a1-5286a3b12336"],
Cell[CellGroupData[{
Cell[586610, 12014, 619, 15, 22, "Print",ExpressionUUID->"29550a06-5960-442c-8963-e5c7322aa671"],
Cell[587232, 12031, 416, 10, 22, "Print",ExpressionUUID->"9c86267b-3bc4-4e89-af5b-be55e5d1133b"]
}, Open  ]],
Cell[587663, 12044, 540, 12, 28, "Message",ExpressionUUID->"f1ee7137-99b9-4710-927f-c0d654d8ca55"],
Cell[588206, 12058, 820, 16, 28, "Message",ExpressionUUID->"854eb72e-c35a-4c46-9fa0-e35aa971d235"],
Cell[CellGroupData[{
Cell[589051, 12078, 356, 9, 22, "Print",ExpressionUUID->"20981147-b50a-4005-97eb-acfa9980c474"],
Cell[589410, 12089, 389, 9, 22, "Print",ExpressionUUID->"fbee8f3f-ad53-481a-8c36-5cd387ce868e"]
}, Open  ]],
Cell[589814, 12101, 540, 12, 28, "Message",ExpressionUUID->"130805eb-4738-4889-9f60-52443b742373"],
Cell[590357, 12115, 823, 16, 28, "Message",ExpressionUUID->"dab08db2-72c1-4f5e-9688-57d72fbb8da1"],
Cell[CellGroupData[{
Cell[591205, 12135, 356, 9, 22, "Print",ExpressionUUID->"3b427bcf-02df-4831-aa29-83400d4dc655"],
Cell[591564, 12146, 389, 9, 22, "Print",ExpressionUUID->"fbac5be5-2923-403b-8227-4608ac5f2be2"]
}, Open  ]],
Cell[591968, 12158, 464, 11, 28, "Message",ExpressionUUID->"c2d8eda8-b5f9-44b8-935a-feedc0f05fab"],
Cell[592435, 12171, 540, 12, 28, "Message",ExpressionUUID->"996db027-0683-45ff-aa5c-4d683d25a236"],
Cell[592978, 12185, 513, 11, 28, "Message",ExpressionUUID->"e72564d6-4b34-4c8b-b9b5-33e00dd9211d"],
Cell[593494, 12198, 821, 16, 28, "Message",ExpressionUUID->"00c476d7-1ef2-4a2d-aea7-38a4bf13e63f"],
Cell[594318, 12216, 508, 11, 28, "Message",ExpressionUUID->"1b9a749b-8acd-4d1f-8cd3-523dd5eca867"],
Cell[CellGroupData[{
Cell[594851, 12231, 356, 9, 22, "Print",ExpressionUUID->"1a18b33a-7b75-4843-9f9c-4832d70afc80"],
Cell[595210, 12242, 387, 9, 22, "Print",ExpressionUUID->"c9e49ef8-1c7f-4622-9fae-b631110b7708"]
}, Open  ]],
Cell[595612, 12254, 651, 13, 46, "Message",ExpressionUUID->"d4d75c44-1df8-4adf-a881-58388e10df8d"],
Cell[596266, 12269, 466, 11, 28, "Message",ExpressionUUID->"213fc6b3-44ee-4adf-85d7-e225bfd33ec5"],
Cell[CellGroupData[{
Cell[596757, 12284, 356, 9, 22, "Print",ExpressionUUID->"4a5456eb-1fe0-497e-9576-66e5a9e50d49"],
Cell[597116, 12295, 389, 9, 22, "Print",ExpressionUUID->"549576b7-229b-4ba1-972d-2348bcbea774"]
}, Open  ]],
Cell[597520, 12307, 466, 11, 28, "Message",ExpressionUUID->"21c3d358-dc22-45c6-838b-9149a4ea526a"],
Cell[597989, 12320, 508, 11, 28, "Message",ExpressionUUID->"225b4c3d-1b5f-4451-b6a2-f36d9601d278"],
Cell[CellGroupData[{
Cell[598522, 12335, 356, 9, 22, "Print",ExpressionUUID->"1583928f-6486-49c3-9264-2e7aa57954b7"],
Cell[598881, 12346, 388, 9, 22, "Print",ExpressionUUID->"5837f9cc-a220-491b-8177-2c4fe6dd7b26"],
Cell[599272, 12357, 437, 11, 38, "Print",ExpressionUUID->"c83cf3bf-3158-4f1a-affc-e8cab1565118"],
Cell[599712, 12370, 403, 10, 22, "Print",ExpressionUUID->"c567314e-3942-426e-b2c6-e74ae26579ef"]
}, Open  ]],
Cell[600130, 12383, 78955, 1405, 209, "Output",ExpressionUUID->"43504c43-f197-44aa-b865-2f91abfe78e8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[679134, 13794, 197, 3, 54, "Subsection",ExpressionUUID->"b464e18c-79d7-4626-91b5-860fe36810d2"],
Cell[679334, 13799, 10722, 298, 597, "Input",ExpressionUUID->"78579b75-f127-47b2-8fa5-c8f1e6e8418b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[690105, 14103, 278, 6, 71, "Section",ExpressionUUID->"ca28de38-e961-4a59-bd58-c5f545e91684"],
Cell[CellGroupData[{
Cell[690408, 14113, 291, 4, 54, "Subsection",ExpressionUUID->"d9271ff2-d137-4b8e-ab55-960ccfcbc370"],
Cell[690702, 14119, 6150, 116, 387, "Input",ExpressionUUID->"70d1aa85-bb91-4114-88b7-c9c00ca5537e"],
Cell[696855, 14237, 765, 17, 67, "Input",ExpressionUUID->"79ee67f8-5dae-4b65-8d31-6a6eb3359b45"],
Cell[CellGroupData[{
Cell[697645, 14258, 427, 10, 28, "Input",ExpressionUUID->"0e222575-b62b-4929-85de-4896faef13cf"],
Cell[698075, 14270, 14450, 363, 236, "Output",ExpressionUUID->"188aa874-27de-4955-81a7-94adebf46e86"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[712586, 14640, 329, 7, 71, "Section",ExpressionUUID->"61406ec8-6194-4a6e-87fe-11c6e69e71b8"],
Cell[712918, 14649, 7168, 131, 387, "Input",ExpressionUUID->"c0243094-1ab3-47dd-9666-1cc41d658619"],
Cell[CellGroupData[{
Cell[720111, 14784, 1192, 26, 105, "Input",ExpressionUUID->"f72fd471-ddb3-48c2-916d-9962d4c485e5"],
Cell[721306, 14812, 4406, 99, 196, "Output",ExpressionUUID->"6d3ea12b-e911-45d2-8cbe-af1d357da5f2"],
Cell[725715, 14913, 4979, 123, 159, "Output",ExpressionUUID->"3d0a5caf-791d-464d-9a8f-38fec2d013b8"],
Cell[730697, 15038, 5427, 142, 196, "Output",ExpressionUUID->"207b8f13-d65a-4482-9b45-bcfe77ac5880"],
Cell[736127, 15182, 5401, 142, 196, "Output",ExpressionUUID->"752ec303-8d06-45ed-92e3-9229e352483b"],
Cell[741531, 15326, 5357, 139, 196, "Output",ExpressionUUID->"2cf4d200-3d13-45bf-b975-0fb4ff3ca15c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[746925, 15470, 593, 12, 28, "Input",ExpressionUUID->"2981b7ba-90e5-406f-8849-120a9e61ff56"],
Cell[747521, 15484, 25646, 625, 236, "Output",ExpressionUUID->"bbda76f0-4f1b-4049-bb6e-2eb2af07a5ec"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[773216, 16115, 218, 3, 71, "Section",ExpressionUUID->"d4b294f2-e9f3-4630-85ef-216511cd56b0"],
Cell[773437, 16120, 6928, 162, 349, "Input",ExpressionUUID->"318ed81e-1971-4107-b548-43cc2fe9c527"],
Cell[CellGroupData[{
Cell[780390, 16286, 8104, 232, 333, "Input",ExpressionUUID->"02084527-fabf-4ad0-a1fe-44f3ffcfd921"],
Cell[788497, 16520, 667, 14, 22, "Print",ExpressionUUID->"a2a83e85-d48e-4609-98ad-cbd6d748642d"],
Cell[789167, 16536, 561, 12, 28, "Message",ExpressionUUID->"0abf0870-5c84-4099-be39-f9c620506284"],
Cell[789731, 16550, 840, 16, 28, "Message",ExpressionUUID->"a8d966a5-97c7-460b-b20f-9dc3237b0b4a"],
Cell[790574, 16568, 159689, 3001, 206, "Output",ExpressionUUID->"69f9d224-6a08-4494-a341-385da10a22cf"]
}, Open  ]],
Cell[950278, 19572, 569, 10, 52, "Text",ExpressionUUID->"9719e215-e88a-44b4-8f52-1b89df776f4f"],
Cell[CellGroupData[{
Cell[950872, 19586, 4414, 114, 238, "Input",ExpressionUUID->"d67ff24d-f62c-4bc7-8dfb-bc795242ee27"],
Cell[955289, 19702, 595476, 9796, 387, "Output",ExpressionUUID->"d7ea4cd9-608c-4666-a6bd-ebb689985c41"]
}, Open  ]]
}, Open  ]]
}
]
*)

