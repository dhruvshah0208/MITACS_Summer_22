(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    875304,      18548]
NotebookOptionsPosition[    863669,      18364]
NotebookOutlinePosition[    864072,      18380]
CellTagsIndexPosition[    864029,      18377]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Function definitions", "Section",
 CellChangeTimes->{{3.867678969674955*^9, 3.8676789747553387`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"218715c9-e13d-4d05-9367-f46b46dc3c30"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix2", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_", ",", "nGrid_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "y", ",", "x", ",", "L", ",", "RHS", ",", "RHS2", ",", "xdot", ",", 
      "\[Theta]", ",", "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", 
      "soltn", ",", "Af", ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", 
      "R", ",", "Mf", ",", "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", 
      "sol2", ",", "t", ",", "sTable", ",", "s", ",", "time1", ",", "dT", ",",
       "time2"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "i_", "]"}], " ", ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          SubscriptBox["s", "i"]}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["s", "i"], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "i"], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            SubscriptBox["s", "i"]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}]}], "}"}]}]}], ";", 
     " ", "\n", 
     RowBox[{
      SubscriptBox["s", "0"], " ", "=", " ", "S0"}], ";", "\n", 
     RowBox[{"dT", " ", "=", " ", 
      RowBox[{"\[Tau]", "/", "nGrid"}]}], ";", "\n", 
     RowBox[{"sTable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["s", 
          RowBox[{"i", "+", "1"}]], " ", "=", " ", 
         RowBox[{
          SubscriptBox["s", "i"], " ", "+", " ", 
          RowBox[{"dT", "*", 
           RowBox[{"RHS", "[", "i", "]"}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "nGrid"}], "}"}]}], "]"}]}], ";", "\n", 
     "sTable"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"xState", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", 
     RowBox[{"x2dot", "=", 
      FractionBox[
       RowBox[{"u", "+", 
        RowBox[{"A", " ", 
         SuperscriptBox["\[Theta]dot", "2"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"A", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"\[Theta]2dot", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"u", "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"fx", "=", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", 
     RowBox[{"L", "=", 
      FractionBox[
       SuperscriptBox["u", "2"], "2"]}], ";", 
     RowBox[{"Af", "=", 
      TemplateBox[{"fx", "xState"},
       "Grad"]}], ";", 
     RowBox[{"Bf", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", "u"], "fx"}]}], ";", 
     RowBox[{"Q", "=", 
      TemplateBox[{
        TemplateBox[{"L", "xState"}, "Grad", SyntaxForm -> Del], "xState"},
       "Grad"]}], ";", 
     RowBox[{"Mf", "=", 
      TemplateBox[{
        RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"u"}]], "L"}], "xState"},
       "Grad"]}], ";", 
     RowBox[{"R", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]], "L"}]}], ";", 
     RowBox[{"S0", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"Transpose", "[", "Af", "]"}], ".", 
         RowBox[{"S", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"S", "[", "t", "]"}], ".", "Af"}], "-", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", "Bf", "]"}], ".", 
           RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"xdot", "\[Rule]", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]dot", "\[Rule]", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"u", "\[Rule]", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     RowBox[{"sol2", "=", 
      RowBox[{"S", "/.", "\[VeryThinSpace]", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["S", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "\[Equal]", "S0"}]}], "}"}], ",", 
         "S", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
     RowBox[{"S", "=", 
      RowBox[{
      "sol2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
   "]"}]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"CalculateGains2", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "sTable_", ",", 
     "nGrid_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "index", ",", "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", 
       ",", "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q",
        ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"index", " ", "=", " ", 
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], ",", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Tau]", "/", "nGrid"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", 
          RowBox[{"Indexed", "[", 
           RowBox[{"sTable", ",", 
            RowBox[{"1", "+", "index"}]}], "]"}]}], ")"}], "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateGains", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",",
        "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ffCartPendulum", "[", 
   RowBox[{"ICs_", ",", 
    RowBox[{"n_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Tau]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Tau]1_", "?", "NumericQ"}], ",", 
    RowBox[{"A_", "?", "NumericQ"}], ",", 
    RowBox[{"order_", "?", "NumericQ"}], ",", 
    RowBox[{"maxIter_", "?", "NumericQ"}], ",", 
    RowBox[{"maxError_", "?", "NumericQ"}], ",", 
    RowBox[{"uMax_", "?", "NumericQ"}], ",", 
    RowBox[{"maxCount_", "?", "NumericQ"}], ",", "initGuess_", ",", 
    RowBox[{"maxJ_", "?", "NumericQ"}]}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "frootNew", ",", "errorNew", ",", "InitGuess", ",", "J", ",", "S", ",", 
      "K", ",", "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", 
      ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
      "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
      ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
      "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
      ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
      "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
      ",", 
      RowBox[{"xGuess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["xGuess", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{"xdot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
             ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "\[Theta]dot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"A", " ", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                ")"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
             ")"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "0", ",", "\n", "\t", 
        RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", "A", "+", 
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Lambda]2"}], "+", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
              RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "A", " ", 
                  SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                 SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["A", "2"], " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
              RowBox[{"2", " ", "\[Lambda]4"}], "+", 
              RowBox[{
               SuperscriptBox["\[Lambda]4", "2"], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"2", " ", "A", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                 "-", "\[Lambda]4"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
              RowBox[{"A", " ", 
               RowBox[{"(", 
                RowBox[{"\[Lambda]2", "-", 
                 RowBox[{
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"A", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}],
         ",", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"4", " ", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"A", " ", "\[Theta]dot", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
         "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], "\n", 
     RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      StyleBox["xGuess",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["Table",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["If",
          FontWeight->"Plain"], 
         StyleBox["[",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"i", " ", "!=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]],
            FontWeight->"Plain"], 
           StyleBox[" ",
            FontWeight->"Plain"], 
           StyleBox["=",
            FontWeight->"Plain"], 
           StyleBox[" ",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "i"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["+",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"\[CapitalDelta]t", "*", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}],
             FontWeight->"Plain"]}]}], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "0"], " ", "=", " ", 
           RowBox[{"{", 
            StyleBox[
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}],
             FontWeight->"Plain"], 
            StyleBox["}",
             FontWeight->"Plain"]}]}]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
       "}"}]}], ";", "\n", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
             "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                 "\n", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                  "]"}]}], ")"}]}], "+", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\n", "\n", 
     RowBox[{"sv", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\n", "\[IndentingNewLine]", 
     RowBox[{"froot", "=", 
      RowBox[{"FindRoot", "[", 
       RowBox[{"eqns", ",", "sv", ",", 
        RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "n"], ",", 
               SubscriptBox["xdot", "n"], ",", 
               SubscriptBox["\[Theta]", "n"], ",", 
               SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "0"], ",", 
               SubscriptBox["xdot", "0"], ",", 
               SubscriptBox["\[Theta]", "0"], ",", 
               SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
             "ICs"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "i"], ",", 
                  SubscriptBox["xdot", "i"], ",", 
                  SubscriptBox["\[Theta]", "i"], ",", 
                  SubscriptBox["\[Theta]dot", "i"], ",", 
                  SubscriptBox["\[Lambda]1", "i"], ",", 
                  SubscriptBox["\[Lambda]2", "i"], ",", 
                  SubscriptBox["\[Lambda]3", "i"], ",", 
                  SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                  RowBox[{"{", 
                   RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
          "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", 
     RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";"}], 
      "*)"}], "\n", "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                 "2"}]}]}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
          " ", 
          RowBox[{"(", 
           RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
        " ", 
        RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
       RowBox[{
        RowBox[{"InitGuess", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         StyleBox["xGuess",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["=",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["Table",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           RowBox[{
            StyleBox["If",
             FontWeight->"Plain"], 
            StyleBox["[",
             FontWeight->"Plain"], 
            RowBox[{
             StyleBox[
              RowBox[{"i", " ", "!=", " ", 
               RowBox[{"-", "1"}]}],
              FontWeight->"Plain"], 
             StyleBox[",",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               SubscriptBox["xGuess", 
                RowBox[{"i", "+", "1"}]],
               FontWeight->"Plain"], 
              StyleBox[" ",
               FontWeight->"Plain"], 
              StyleBox["=",
               FontWeight->"Plain"], 
              StyleBox[" ",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "i"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["+",
                FontWeight->"Plain"], 
               StyleBox[
                RowBox[{"\[CapitalDelta]t", "*", 
                 RowBox[{"f", "[", 
                  SubscriptBox["xGuess", "i"], "]"}]}],
                FontWeight->"Plain"]}]}], 
             StyleBox[",",
              FontWeight->"Plain"], 
             RowBox[{
              SubscriptBox[
               StyleBox["xGuess",
                FontWeight->"Plain"], "0"], " ", "=", " ", 
              RowBox[{"{", 
               StyleBox[
                RowBox[{
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}],
                FontWeight->"Plain"], 
               StyleBox["}",
                FontWeight->"Plain"]}]}]}], 
            StyleBox["]",
             FontWeight->"Plain"]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           StyleBox[
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"n", "-", "1"}]}], "}"}],
            FontWeight->"Plain"]}], 
          StyleBox["]",
           FontWeight->"Plain"]}]}], 
        StyleBox[";",
         FontWeight->"Plain"], "\[IndentingNewLine]", 
        RowBox[{"sv", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
               "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"frootNew", "=", 
         RowBox[{"FindRoot", "[", 
          RowBox[{"eqns", ",", "sv", ",", 
           RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"errorNew", " ", "=", " ", 
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "n"], ",", 
                  SubscriptBox["xdot", "n"], ",", 
                  SubscriptBox["\[Theta]", "n"], ",", 
                  SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
               ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "0"], ",", 
                  SubscriptBox["xdot", "0"], ",", 
                  SubscriptBox["\[Theta]", "0"], ",", 
                  SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                "ICs"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Thread", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
             "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
          RowBox[{
           RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
           RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
           RowBox[{"uff0", "=", 
            RowBox[{"ListInterpolation", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
               " ", "froot"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
              RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
           "\n", 
           RowBox[{"J", " ", "=", " ", 
            RowBox[{"NIntegrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
           ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
        RowBox[{"count", " ", "=", " ", 
         RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Count Shooting= \>\"", ",", "count", ",", 
          "\"\<    Error New = \>\"", ",", "errorNew", ",", 
          "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}], "*)"}], 
      "\n", "\n", "]"}], ";", "\n", "\n", "\n", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                 "2"}]}]}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"CalculateSMatrix", "[", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"K", "[", "time_", "]"}], " ", ":=", " ", 
      RowBox[{"CalculateGains", "[", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";",
      "\n", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}]}]}],
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum2", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_", ",", "initGuess_", ",", "maxJ_", ",", 
     StyleBox["nGrid_",
      FontWeight->"Plain"]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "time1", ",", "time2", ",", "sTable", ",", "frootNew", ",", "errorNew", 
       ",", "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", 
       "error", ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]",
        ",", "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", 
       "\[Lambda]3", ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", 
       ",", "eqns", ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", 
       "xff0", ",", "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",",
        "uff0", ",", "\n", "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", 
       ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", 
       "\[Lambda]4ff0", ",", "i", ",", 
       RowBox[{"xGuess", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       FractionBox["\[Tau]", "n"]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", 
        RowBox[{"xdot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"\[Lambda]4", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
         "\[Theta]dot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "\n", "0",
          ",", 
         RowBox[{"-", "\[Lambda]1"}], ",", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"A", " ", "\[Theta]dot", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{"\[Lambda]4", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}]], 
          "-", "\[Lambda]3"}]}], "}"}]}], ";", "\n", 
      RowBox[{"InitGuess", "=", "initGuess"}], ";", "\n", 
      RowBox[{"xGuess", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[NotEqual]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]], "=", 
            RowBox[{
             SubscriptBox["xGuess", "i"], "+", 
             RowBox[{"\[CapitalDelta]t", " ", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}]}]}], ",", "\n", 
           RowBox[{
            SubscriptBox["xGuess", "0"], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}]}], "}"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["xdot", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["x", "n"], "\[Equal]", 
          SubscriptBox["xdot", "n"], "\[Equal]", "0"}], ",", 
         RowBox[{
          SubscriptBox["\[Theta]", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["\[Theta]dot", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["\[Theta]dot", "n"], "\[Equal]", "0"}], ",", 
         RowBox[{
          SubscriptBox["\[Theta]", "n"], "\[Equal]", "\[Pi]"}]}], "}"}]}], 
      ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "i"], ",", 
                SubscriptBox["xdot", "i"], ",", 
                SubscriptBox["\[Theta]", "i"], ",", 
                SubscriptBox["\[Theta]dot", "i"], ",", 
                SubscriptBox["\[Lambda]1", "i"], ",", 
                SubscriptBox["\[Lambda]2", "i"], ",", 
                SubscriptBox["\[Lambda]3", "i"], ",", 
                SubscriptBox["\[Lambda]4", "i"]}], "}"}], "\[Equal]", 
              RowBox[{
               RowBox[{
                FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                 ")"}]}], "+", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["x", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["xdot", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Theta]", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Theta]dot", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]1", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]2", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]3", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]4", 
                  RowBox[{"i", "-", "1"}]]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["xdot", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Theta]", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Theta]dot", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]1", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]2", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]3", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
              "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time1", ",", "froot"}], "}"}], "=", 
       RowBox[{"Timing", "[", 
        RowBox[{"FindRoot", "[", 
         RowBox[{"eqns", ",", "sv", ",", 
          RowBox[{"MaxIterations", "\[Rule]", "maxIter"}]}], "]"}], "]"}]}], 
      ";", "\n", 
      RowBox[{"error", "=", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], "-", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], "-", "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "\[VeryThinSpace]", "froot"}], ",", 
         "\"\<Frobenius\>\""}], "]"}]}], ";", "\n", 
      RowBox[{"count", "=", "0"}], ";", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], " ", 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"J", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"error", ">", "maxError"}], "||", 
           RowBox[{"J", ">", "maxJ"}]}], ")"}], "&&", 
         RowBox[{"count", "\[LessEqual]", "maxCount"}]}], ",", "\n", 
        RowBox[{
         RowBox[{"InitGuess", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\n", 
         RowBox[{"xGuess", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[NotEqual]", 
               RowBox[{"-", "1"}]}], ",", 
              RowBox[{
               SubscriptBox["xGuess", 
                RowBox[{"i", "+", "1"}]], "=", 
               RowBox[{
                SubscriptBox["xGuess", "i"], "+", 
                RowBox[{"\[CapitalDelta]t", " ", 
                 RowBox[{"f", "[", 
                  SubscriptBox["xGuess", "i"], "]"}]}]}]}], ",", 
              RowBox[{
               SubscriptBox["xGuess", "0"], "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "4", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "4", 
                  "\[RightDoubleBracket]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
         RowBox[{"sv", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["xdot", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Theta]dot", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]1", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]2", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]3", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]4", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "\[Rule]", "maxIter"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"errorNew", "=", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], "-", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], "-", "ICs"}], 
                ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "\[VeryThinSpace]", "frootNew"}], ",", 
            "\"\<Frobenius\>\""}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", "\[LessEqual]", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", "=", "frootNew"}], ";", 
            RowBox[{"error", "=", "errorNew"}], ";", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[Lambda]4", "i"], " ", 
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
                    SubscriptBox["\[Lambda]2", "i"]}], 
                   RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                "\[VeryThinSpace]", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], 
            ";", "\n", 
            RowBox[{"J", "=", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
            ";"}], ",", "_"}], "]"}], ";", "\n", 
         RowBox[{"count", "=", 
          RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}], "*)"}], 
       "\n", "]"}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["x", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["xdot", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Theta]dot", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Lambda]1ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]1", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Lambda]2ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]2", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Lambda]3ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]3", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"\[Lambda]4ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]3", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], " ", 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"sTable", "=", 
       RowBox[{"CalculateSMatrix2", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A", ",", "nGrid"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"K", "[", "time_", "]"}], ":=", 
       RowBox[{"CalculateGains2", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "sTable", ",", 
         "nGrid"}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["xdot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]dot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"uff0", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
        "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", 
      RowBox[{"\[Kappa]3", "=", 
       RowBox[{"-", "0.1`"}]}], ";", 
      RowBox[{"\[Kappa]4", "=", 
       RowBox[{"-", "0.65`"}]}], ";", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["xdot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]dot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
        "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
            "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"us", "[", "t", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFBClipped", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "uBound_", ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", 
      RowBox[{"\[Kappa]3", "=", 
       RowBox[{"-", "0.1`"}]}], ";", 
      RowBox[{"\[Kappa]4", "=", 
       RowBox[{"-", "0.65`"}]}], ";", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff", "[", "t", "]"}], "+", 
          RowBox[{"ufb", "[", "t", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["xdot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]dot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
        "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff", "[", "t", "]"}], "+", 
          RowBox[{"Piecewise", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"K", "[", "t", "]"}], ".", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"xff", "[", "t", "]"}], "-", 
                   RowBox[{"xs", "[", "t", "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"xdotff", "[", "t", "]"}], "-", 
                   RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
               RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}],
               "}"}], "}"}], ",", 
            RowBox[{
             RowBox[{"\[Kappa]1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
             RowBox[{"\[Kappa]2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
             RowBox[{"\[Kappa]3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
             RowBox[{"\[Kappa]4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"us", "[", "t", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.865967298267394*^9, 3.8659673001198*^9}, {
   3.866571893798601*^9, 3.866571940716648*^9}, {3.8665719967138014`*^9, 
   3.86657200493918*^9}, 3.8665721461421776`*^9, {3.8665731331726017`*^9, 
   3.8665731928485823`*^9}, {3.866573291140256*^9, 3.8665733048578844`*^9}, {
   3.866573636752106*^9, 3.866573657335546*^9}, {3.86657481838451*^9, 
   3.8665748273656473`*^9}, {3.866574870351947*^9, 3.8665748910333557`*^9}, {
   3.8665788373566265`*^9, 3.8665788400997524`*^9}, {3.866579031902623*^9, 
   3.8665790413156233`*^9}, {3.8665801062232275`*^9, 3.866580141002143*^9}, {
   3.866664127693946*^9, 3.8666641298202667`*^9}, {3.8667356182927976`*^9, 
   3.86673568611979*^9}, {3.866735735976613*^9, 3.866735746106326*^9}, {
   3.8667357917795067`*^9, 3.8667357922973385`*^9}, {3.8667369179510965`*^9, 
   3.8667371366351404`*^9}, {3.866737410171386*^9, 3.8667375163569317`*^9}, {
   3.866737646330759*^9, 3.8667376465136995`*^9}, {3.8667376988837075`*^9, 
   3.8667377777961025`*^9}, {3.8667386986753044`*^9, 
   3.8667387105614476`*^9}, {3.8667389141044035`*^9, 
   3.8667389332601886`*^9}, {3.8667389783395615`*^9, 
   3.8667389806728044`*^9}, {3.866739043478426*^9, 3.8667390512579017`*^9}, {
   3.8667390870272956`*^9, 3.8667391318757434`*^9}, {3.86674040926027*^9, 
   3.8667404968818393`*^9}, 3.866740531578581*^9, {3.8667406439541187`*^9, 
   3.866740650558975*^9}, {3.8667406893863773`*^9, 3.866740713276625*^9}, {
   3.8673532212089357`*^9, 3.867353262241763*^9}, {3.8673533765330715`*^9, 
   3.8673533879534054`*^9}, {3.867353479603982*^9, 3.867353730198533*^9}, {
   3.8673537746842513`*^9, 3.867353800998803*^9}, {3.8674250653573227`*^9, 
   3.867425103219036*^9}, {3.867425211775809*^9, 3.867425260810897*^9}, {
   3.86742535854918*^9, 3.8674253968377547`*^9}, {3.8674265266621175`*^9, 
   3.8674266199138565`*^9}, {3.8674271804199677`*^9, 
   3.8674271965717263`*^9}, {3.867427267981553*^9, 3.8674273052754507`*^9}, {
   3.8674273491782045`*^9, 3.867427384921605*^9}, {3.867427420566038*^9, 
   3.8674275576965384`*^9}, 3.867427676198084*^9, {3.8674281649544783`*^9, 
   3.867428175713987*^9}, {3.8674282062290845`*^9, 3.8674282201715593`*^9}, {
   3.8674282835409956`*^9, 3.8674283269169197`*^9}, {3.867428359760262*^9, 
   3.8674283772535853`*^9}, {3.8674284114824777`*^9, 3.867428418922064*^9}, {
   3.8675202937626505`*^9, 3.8675202960968914`*^9}, {3.8675203413861585`*^9, 
   3.8675205018799486`*^9}, 3.8676789938102727`*^9},
 FontWeight->"Plain",
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[1642]:=",ExpressionUUID->"930db826-3cbc-4bb3-97a6-3a010efa3e76"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Feed Forward solution with feedback for any initial condition ( unconstrained)\
\>", "Section",
 CellChangeTimes->{{3.8676786482972174`*^9, 3.8676786887393475`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a964257c-e879-4ee8-960c-c24d2796eb82"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"n", "=", "20"}], ";", 
    RowBox[{"\[Tau]", "=", "5"}], ";", 
    RowBox[{"\[Tau]1", "=", 
     RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
    RowBox[{"A", "=", "0.2"}], ";", 
    RowBox[{"order", " ", "=", " ", "4"}], ";", 
    RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
    RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
    RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
    RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
    RowBox[{"nGrid", " ", "=", " ", "60"}], ";", 
    RowBox[{"maxJ", " ", "=", " ", 
     RowBox[{
      RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ICs = \>\"", ",", "ICs"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Energy Initial = \>\"", ",", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time1", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K1"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time2", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a2", ",", "xdot1a2", ",", "\[Theta]1a2", ",", "\[Theta]dot1a2", 
         ",", "u1a2", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K2"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum2", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
      "u1b", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K1"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a2", ",", "xdot1a2", ",", 
      "\[Theta]1a2", ",", "\[Theta]dot1a2", ",", "u1a2", ",", "A", ",", 
      "uMax", ",", "K2"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ff computation time case 1 = \>\"", ",", "time1"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ff computation time case 2 = \>\"", ",", "time2"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution 1\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   StyleBox["p1a2",
    FontWeight->"Plain"], " ", "=", " ", 
   StyleBox[
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a2", "[", "t", "]"}], ",", 
        RowBox[{"u1a2", "[", "t", "]"}], ",", 
        RowBox[{"x1a2", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a2", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a2", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution 2\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}],
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1b", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<feedback solution with backward integration \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<feedback solution with discrete integrator\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1a", ",", "p1a2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p1b", ",", "p1c"}], "}"}]}], "}"}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}, {3.8648376392630434`*^9, 
   3.8648376724073963`*^9}, {3.864837714278944*^9, 3.864837730198832*^9}, {
   3.8648378000064077`*^9, 3.8648378125593743`*^9}, {3.8649192769420185`*^9, 
   3.8649193477849746`*^9}, {3.864919494855133*^9, 3.8649194949211097`*^9}, {
   3.8649195280303416`*^9, 3.8649195281572976`*^9}, {3.8653430179727*^9, 
   3.865343036098905*^9}, 3.865343126059147*^9, {3.8653475497269955`*^9, 
   3.8653475530049467`*^9}, {3.8653477236523952`*^9, 3.865347782090714*^9}, {
   3.8653478250659747`*^9, 3.8653479145413723`*^9}, {3.865347947982681*^9, 
   3.8653479716121283`*^9}, {3.8653525506493053`*^9, 3.865352599733616*^9}, {
   3.865352652578721*^9, 3.865352654559091*^9}, {3.865353691929463*^9, 
   3.8653537130737047`*^9}, {3.8653538376038947`*^9, 
   3.8653538378768077`*^9}, {3.86535394844846*^9, 3.8653539491322412`*^9}, {
   3.865356726928239*^9, 3.86535675400958*^9}, {3.8653568966909695`*^9, 
   3.8653569073245697`*^9}, {3.8653569602766423`*^9, 3.865356975731701*^9}, {
   3.865357167158506*^9, 3.865357170606405*^9}, {3.865357223946353*^9, 
   3.8653572240363226`*^9}, {3.8653573936860905`*^9, 3.8653574653461814`*^9}, 
   3.8653581484318137`*^9, {3.8653592129605074`*^9, 3.86535921807887*^9}, {
   3.865449250153057*^9, 3.8654493036779404`*^9}, {3.8659655743007927`*^9, 
   3.8659655800469513`*^9}, {3.865965617846839*^9, 3.865965644481305*^9}, {
   3.865965768794471*^9, 3.8659657912472773`*^9}, {3.865965935003215*^9, 
   3.865965935326112*^9}, {3.8659659868356075`*^9, 3.865966006077441*^9}, 
   3.865966083507631*^9, 3.8659664582355595`*^9, {3.86596655432277*^9, 
   3.865966563962682*^9}, 3.8659666064800587`*^9, {3.8659666379409776`*^9, 
   3.865966662002268*^9}, {3.865966724901114*^9, 3.865966734984883*^9}, {
   3.8659667752089934`*^9, 3.8659667994792185`*^9}, {3.8659670983784432`*^9, 
   3.865967114308339*^9}, {3.865967415398863*^9, 3.865967415558814*^9}, 
   3.86596806058513*^9, {3.8659697572814713`*^9, 3.865969792480193*^9}, {
   3.865969847631523*^9, 3.8659698777298765`*^9}, {3.8659699125237284`*^9, 
   3.8659699227194633`*^9}, {3.8660520784155097`*^9, 3.866052078606448*^9}, {
   3.866299038992057*^9, 3.866299063807024*^9}, {3.8662991135359306`*^9, 
   3.866299117442664*^9}, {3.866299188589633*^9, 3.86629919001517*^9}, {
   3.866299354438949*^9, 3.866299364496692*^9}, 3.8662994378149586`*^9, 
   3.8662994758636427`*^9, 3.8662995455700784`*^9, {3.866309716236847*^9, 
   3.86630980613275*^9}, {3.8663098363239756`*^9, 3.8663098541502047`*^9}, 
   3.8663105182622347`*^9, 3.866310619892336*^9, 3.8663117939323*^9, {
   3.8665656447826576`*^9, 3.8665656490393023`*^9}, {3.86666037409522*^9, 
   3.8666605929433*^9}, {3.8666606653571625`*^9, 3.8666608053664308`*^9}, {
   3.866660839553507*^9, 3.8666608737455826`*^9}, {3.866661162186427*^9, 
   3.8666611737737226`*^9}, {3.8666653738348045`*^9, 3.866665397429268*^9}, {
   3.8667344208606143`*^9, 3.8667344797394304`*^9}, {3.8667353231215725`*^9, 
   3.866735333097335*^9}, {3.866735385339385*^9, 3.866735418014782*^9}, {
   3.866735702678417*^9, 3.8667357070869875`*^9}, {3.8667358235761895`*^9, 
   3.86673582400605*^9}, {3.866735896269603*^9, 3.866735924112569*^9}, {
   3.8667361218833976`*^9, 3.8667361220503435`*^9}, {3.866737159880598*^9, 
   3.8667371629755936`*^9}, 3.8667373705322485`*^9, {3.8667375563659506`*^9, 
   3.8667375763234744`*^9}, 3.866739987559099*^9, {3.8667402825863724`*^9, 
   3.866740283643031*^9}, {3.8667403886539574`*^9, 3.8667403924007425`*^9}, {
   3.8667405674789343`*^9, 3.8667405865157566`*^9}, {3.8667407977972016`*^9, 
   3.866740821291578*^9}, {3.8671630011884055`*^9, 3.867163020098357*^9}, {
   3.867352977485181*^9, 3.8673529973358107`*^9}, {3.8673530973936853`*^9, 
   3.8673531264093695`*^9}, {3.8673532479253597`*^9, 
   3.8673532480693145`*^9}, {3.867353394522298*^9, 3.867353424387709*^9}, {
   3.8673538177504263`*^9, 3.867353991042793*^9}, {3.86735409649494*^9, 
   3.867354178349663*^9}, {3.8673553380933447`*^9, 3.8673553396948304`*^9}, {
   3.867423858690897*^9, 3.8674239583605523`*^9}, 3.867424003139022*^9, {
   3.867424050904522*^9, 3.867424125774227*^9}, {3.8674241562363405`*^9, 
   3.8674242324536085`*^9}, {3.8674242665505433`*^9, 
   3.8674242818535786`*^9}, {3.867424314162092*^9, 3.8674243698710146`*^9}, {
   3.867424420135703*^9, 3.8674244202186756`*^9}, {3.867424456268978*^9, 
   3.8674244741041913`*^9}, 3.8674246173657007`*^9, {3.8674246693478317`*^9, 
   3.8674246877288685`*^9}, {3.8674247403247986`*^9, 
   3.8674247408206377`*^9}, {3.8674247893518896`*^9, 
   3.8674248932321787`*^9}, {3.867425936549614*^9, 3.867426049116087*^9}, 
   3.8674261141789722`*^9, {3.867426149856395*^9, 3.8674261956245418`*^9}, {
   3.8674262312599783`*^9, 3.867426231496904*^9}, {3.867426262045988*^9, 
   3.8674262624308643`*^9}, {3.8674263520347853`*^9, 
   3.8674263565563188`*^9}, {3.8676860111383543`*^9, 3.8676860173133893`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[1248]:=",ExpressionUUID->"cdb5bb39-2bd5-427d-9b7c-b452e9e4ae48"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ICs = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["ICs = ", {0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8676786240369353`*^9, {3.8676860011365366`*^9, 3.867686017550314*^9}, 
   3.8676865665926085`*^9},
 CellLabel->
  "During evaluation of \
In[1248]:=",ExpressionUUID->"cf9b55c1-6bb8-446b-8030-b32fe3dd7041"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy Initial = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2`"}]}],
  SequenceForm["Energy Initial = ", -0.2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8676786240369353`*^9, {3.8676860011365366`*^9, 3.867686017550314*^9}, 
   3.8676865666016054`*^9},
 CellLabel->
  "During evaluation of \
In[1248]:=",ExpressionUUID->"596cd3ac-41b3-46b5-9c7d-b9a2e62f89c2"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 1267, 178, 
   17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.867678626146264*^9, {3.8676860031389*^9, 3.8676860195846667`*^9}, 
   3.8676865686289606`*^9},
 CellLabel->
  "During evaluation of \
In[1248]:=",ExpressionUUID->"e16bee4a-33be-43e6-a713-5705324bb082"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$268030\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$268030\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"2.294844166797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.445415386059924`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.0014733461967489678`\\\"}]\\) for the integral and \
error estimates.\"", 2, 1267, 179, 17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.867678626146264*^9, {3.8676860031389*^9, 3.8676860195846667`*^9}, 
   3.867686568695939*^9},
 CellLabel->
  "During evaluation of \
In[1248]:=",ExpressionUUID->"379d0d79-15d8-400f-8213-11e1e8fe8268"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ff computation time case 1 = \"\>", "\[InvisibleSpace]", 
   "0.625`"}],
  SequenceForm["ff computation time case 1 = ", 0.625],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8676786240369353`*^9, {3.8676860011365366`*^9, 3.867686017550314*^9}, 
   3.867686568715933*^9},
 CellLabel->
  "During evaluation of \
In[1248]:=",ExpressionUUID->"7a510e36-9491-4610-9978-ef7c8cd0c643"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ff computation time case 2 = \"\>", "\[InvisibleSpace]", 
   "0.34375`"}],
  SequenceForm["ff computation time case 2 = ", 0.34375],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8676786240369353`*^9, {3.8676860011365366`*^9, 3.867686017550314*^9}, 
   3.8676865687199316`*^9},
 CellLabel->
  "During evaluation of \
In[1248]:=",ExpressionUUID->"430e4783-be0e-4c37-a86e-8b137bf1fcbb"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
8EwsVo9xPt3M6rsrVEQofu+aLbKunwBZLMv3Ktj1kQ18W+85RIShjlEn7M7M
Icti1i/BFWS4i75yLuYwExS9unw5PZkApSbOr+HuZ6F7hqzNfr/IMGT/Secg
YyaI2z317pECEXZOLlCjReYRx7SAe4w5GVY7Zx47g+1fGyuc/ZhFZJhqtCEm
Fts/cV7ta978+v0eYvH6nyctzvIQ4bNdjjWfsPne2hGo2LybDCPcXLvWmTLB
dn7x0oFKAlSTfurtzDOPJBMesep0iHBft5DA6WkWahZ59MnSjwyN0kJWnsfq
3fLXC8efzS3ND86z+fY5SJoIEaG/fnZKo3MrcNmd+gpW9AKDjruvpFb3AJ/V
rtNpBc2Aed/jU9dpGlDN79gk6vME4Hw7Uq7sd+OFSjbfPtdb/27rix9snn34
qADdFS7xbNfEt/6sezQ2z77lGvbIR5fO5tlJnX/P2y7+ZfPsjOp0lfGUMTbP
Nl1cp113ZIrNsxeTuCaHLRhsnl1jbBVsZMxCOaaVHG1HibCiWLpGms5CmVL1
bjcsOGB6Ts++/YxZNKwo/SXjLCeMP0uLqD09hqrazle9cOaCmiJ/KPW27ci5
MdzqrDc3PJ4waqce0QBOr1r4lXyVByZG/FBOpg+AXrtPtV53eGE4V3NeQPYE
qCo6te5KIAmmNc1CzvQZYKrTX9N6gw9ulpCXOP+ZAaKqqn6X3ifD2b8KxH94
hNCLPz177vHDoKqevwl9DLBeUijU9akAFOfTzD59Eevvfog1uL8ShPcPHv3e
qjANtvSZzHLFC8GuTuOJQbMJwJwaCZf5IAwzeNWXuW8fATiPL7SPYar8mUU4
j/9ETsgvcCEUz6Y/CaVZLtUn0fMOn557LN0POpn3W1ROdoIVyn4GMKIbQGOt
x/y7sf6+ZCH6YU85eE+5OZ9r1Afu/zzDs80vl83vZVbNmwtLNbB5fGlX+aVV
en1svp7JtfeX8KUZtLiSS37zy0VgTT74YgWDifarhYMXTQToG7gjKl9oHnVY
z50waiXCvt0OEzqv5hBPi/SZoS4OKC94f1jbfwpJv/9r1jrLDfvXVR9TnKcA
nYsCozkLWD+gXbZrLGkUcF7sdr/JTYJ7XGQfQAL2PJRXtpVF4IOXhPn17Ptn
QdwH3rExLqx+025zfML6edKfhec/+Pih5DMut5cHmKBia1NGj4gApF45q5C8
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
PUk=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{901, 2748, 2746, 422, 423, 424, 425, 812, 708, 
                622, 552, 499, 466, 834, 730, 644, 574, 520, 851, 747, 661, 
                591, 426, 813, 709, 623, 871, 767, 553, 857, 753, 892, 667, 
                880, 776}}], 
               PolygonBox[CompressedData["
1:eJwV0slLVWEYB+Bj0sKMypyHzP6BBoeGpUGBRQWBlWWTEBSREY0mGRQ0WalN
uigocFfZYMO1eV40u6zUJoeVLRIabHy+xcPvfX/fOfdyzz3jKtbPrxwSRVEc
7bQNi6IYI5RvlDHy46PoqX0T4/mh20+y/qy9lJG81bVRoH9m38wEfuoOkKI/
Z1/AKN7pblDLQVKdn9cvJIkO3U0OkeasRbeI0XTqblGof27fwkQGdYdJ11+w
l5FMl+42dWQ4u6hbTArvdXeoJ9PZJd0SUvmgu0sDWc4u68pJ46PuHkX6F/at
TOKX7gjZ+lb7UtL5pLvPZP1L+zby+a2bo+sx11HCUV2O7op5GRnhOdv7ZSOf
nc+wd5r3stYcT3G4Xn6TNfK03CgTeeCeKfJV+G5ZJVfLiF0UhGciv8od8qTc
IBPYwx/3z5W9+ipZL9fJoexmlr1CDsqdsjm8M3I4x9w7Rl7VLWdV+DyZGd4H
8xfZRLfrZtq7zPuYHq63f5dneOh8qv21eTtrzHEUhv9MDshT/HXdPHufuYHZ
HNfl6q6ZV5BFj+4R0/Tt9mqK+Kc7wVj9dftKsunVPaaRPGex8JvJoU/3hP9P
hmz4
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{387, 2747, 2744, 596, 682, 786, 392, 503, 557, 
                627, 713, 817, 439, 472, 525, 595, 681, 785, 391, 502, 556, 
                626, 712, 816, 438, 471, 524, 594, 680, 784, 390, 389, 388, 
                437, 470, 523, 593, 679, 783}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVWEABuDj1QyEfkLDda72VtokaZaZlBtbFKSWlppCEIGV2gBR6SZd
pFaW5Y/QJrXABm2wyVZNG7VBjYIiiJ5v8fC+33vuwDn3xisbyxpiURQl8ICB
lCgapN9wkxu84AdZXniI+6xMjKI+23PmybTVM8IK167bnjFHhq2OYZa7ds22
UF/Had6Rb39qnyXduZYhsu29tmR9LaeYZKN93F6kt/OZbbbvtjT9IPfIsl21
leqdzFBmWyB7+cUe5zx5krdscB4L967/ocJ5s0yS9bTpnyjWv4V7kY10247J
OblLpobPlP9ktTwgj8q7MlNe8d6zchFH6Le3yr+ySm6XZ2QyDXQ4N8lpuVMm
yRR5ONyj/pPdeq6MyVpa9Tes15/4vj79N3udC+UFPrLV+avrXfos5c5xWcMd
Mpwvu16iX2SKHbZEuYYWXoff1PbY6wr083xgi+2LbVl4Dtwm3dZji+mraeZV
+I3tj+yb9HO8p8g2Y1uq7+cWaeF52xL0VZzgJXn2h/ZpljjvY5BUe1f4k+s5
HGeCXPuofYrF4bkzQNx+yfYftkRk1Q==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03ecz3UcwPHL3tzZ2xmHqBRJRpnhKCESJTMJnWwyKntUPDSMJqFklJHd
IDsNIqOByMgolArl+X48+uN5r/fnfb/73fe+v+8ld0lr9eQNCQkJfX2JlvZl
n8Zypj6qeRlCT+eWmpH+bHPuoUUZThPnBnpZn9K12lULMsncXnPxjbmXlqSq
+XY9pYsYTlvnbOyKn6GZ+T/dyHTSUcbuO53FEzSlod1fuo7JVKO63WldzAg6
kJ6y9vt1dlwLqXEdZCAjmchMOa87oK/RO64l3pM77H/VJYzkYbKQYn9QX6cP
zeO11LA/o0sZxSNkpbz9IX0j7jn3xmu50/6sfsAzdCQbFey/1zdJ4z4a2f2t
65kSP0tNu3P6Ic/yoHN2vozPNK4rPmw2yUtx/eY87DFnp6L5B32LTuZ89DW3
0kxsNz+uxWhhvkf/0X66QbtpIZ7m+bjvmptB7I57qaUYSU3nWnr+/+dwmXbR
AgzjOed2moOBfBWfuZagU9yzeHb53NxdC/Ny3GNN5FtzDm40/6hvx/NJa+fM
7DDfT2PzFf2YF+KaqG33my5nNJ3jntulY7P5FXJSyfknnRP3IP5PaGJ3VT/h
xXgv6tj9risYE38nuahsf1jn0j/uc7yWu+wv6ErG0pXc3GR/RN9hQPwt8Vru
tr+oHzEuPgfycLP9UZ3HQB6I15LILb73s85nEG2oSxJ5yUd+ClCQQhSmCEUp
RnFKUJJSJFOaMpSlit9xTBcwmLbUoxy3+t5xfZch8axSP67B/pKuYnx8tqRw
m/0v+h5D49mgqd01/ZSpNIj3t/tDVzOBx2hhl54t5lcpT1XnE7qQYXFvnLOw
0/wQqeZ/9TOm0TCuz+5PXcPEeJ1zTr4294jnyZyBrfF7tQgzzB01icHsde6j
yYyignM1Palp+n48b5qfofG/FJ+NZmUAXzj31OKM4DoBYZ5S
               "]], 
              
              LineBox[{146, 69, 104, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$268168#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jnUcBuDXkZGRvfemKHtTFELI0aDS0FJCKZV2jj0yi4wyM9oDxyaU
vSqr7Owyyyy6vp/+uM79+96/53nPeZ9xSnTqntwtTSKR2OVHCtnSJhIzkhKJ
tmRmm24OfehLP7I7Zqa9ZLKwXTeXyvrV5h5U5LyuPzn0s8ztyMoO3Tyq6NeY
X6QSF3QDyKmfbb6H1EyJxA1ypz6VqvbWml/iZi7qBpJL/6n5XrIl/f995lNN
v87ck1u4pBtEbv1n5vvIzq+6BQxmCHnsf66/nxz8plvIUPLa+0LXnpzs1i2i
un69+WUqc1n3Hvn0X5o7kIs9usUMI7+9r3QPkJu9uiUMp4C9r3UPkod9uqWM
oKC9b3QPkZf9umXU0G8wv0IVruhGUkj/rbkj+TigW05N/Ubzq1TlH10r3SHr
YTRnlK6w7jvrh8kf19n8pxzDQftNzLut+9PFOi2N4nh5Xr4lJ8W9lpn53jm1
5Kb43bKX7CwT9KZaXBN5Vr4pJ8gX5PX041/nt5aH9b3kcNlVpiOFFuZO8rJ8
W06LZ0ZmYbRzi8g5ukd4Mj5PFojnwfqkHMvvjmtq3mM9gMZxvPmCnMwK+7XN
m61f4xnrNFSPeybPyYlcdVwb8xHrEbTkfV1R3VzrRynIId1K6ui3mF+nBtd0
H1BMP8/8GIU4rFvFGIrbS43vTGGO6H6Id8D7M1aWsD9f/zhFOKr7kbr6reY3
qEmCD/Ul9Qusn6Aox3Srqaf/Ke4JtUjDOH0p/cK4lhTjuK6Zbq/1QG5nja6+
7ud4HqhNEuP1pfWLrJ+iOCd0d+r2WQ/iDtbqGuh+iXtKHdJyt+6oHMldTHBc
Gd1i66cpEe+x+VR8N/6w39y833owTeIemC/KKayz39C8zfodnrVOom68b/Iv
+RE9rDNxnXVbeSyeAzlKdpPp6UOruO7ySnyenC57yqz0Z6LfV1YuifdWdo7r
IK/Kd2VJ2V6ejmdCjpPdZYZ4B53bQh7QDeG5+HtoGs+JvCSnst5xt5q3x2dS
j47mv+XHpCPZfFyOpnV8R+eU0y2NZ5tSnNS11B20HkozNuhu0+2w7k190sfn
6svrl8U1pDSndBtppN9pTqEBGZikr6Bfbt2FMpzWbWIyN8b/jfiOlOWMbjNT
uMneCl1XynFWt4WpTGN6/H/3LnwiZzCTWVR03sq4X5TnnG4rjfW7zH1oSEba
6U7Eu0sbZjuukm5V3I941qyvyQp0sD4T75UcL5+XGenLfzCQ8T8=
               "]], 
              
              LineBox[{844, 740, 654, 584, 467, 835, 731, 645, 575, 521, 427, 
               814, 710, 624, 554, 500, 468, 428, 429, 430, 431, 432, 433, 
               434, 435, 815, 711, 625, 555, 501, 469, 836, 732, 646, 576, 
               522, 852, 748, 662, 592, 868, 764, 678, 886, 782, 904, 436}]}, 
             Annotation[#, "Charting`Private`Tag$268168#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUYBdADl1ZJpUNaQRpplEZBGqSV7hDFxsLAQDokpLvBQEWlW0Cl
DFIBpfNRBEHX+2M97/72fHPPuXNmJn+Xgc0HJEskEknJE4nhSYlEiZSJxOcp
EonZZmvzA/MeVnKX9XNmgkXMtP7ILBDn8KvzO5mn9fPN983RZi5qyEPNO1kq
f2wW5VvnNDD36gZTjFesU7NA/tvxfvJf8kQa8aGupG613Ib0HNJ11p2J70xN
1uoa6vbJz1Kc67oRlNJ/Yd2WDBzWrWMkoxjNGMYyjtL2f2lfOzJyRLee8ZRx
7CtdezJxVLeBx/T745rxAP/oJlBWv8a6A5k5pttII/0B6+cpwQ3dRMrpv7bu
SBaO67rozsrDqcUmXWPdQfkFSnJT11/3d/xONI6pK6/7Rn6Cu+PzrJMxS/7N
8a7yubjOjJFzU1t+M+4Blsmb7Wsi/yS/yEg5B6XkV800LGGh9RSzcFxv/nXe
APO6foE5yRxv5uNTmlgPMzPF57DKerp5f1zj2O/8B+O+0c8xn4xrYGaN+zT+
dzM5s+VJZkF+d04387xuBGPlPNSR3zLTs1zeYl9T+Wf5JUpzSzdQ9488maYx
dRV0a+VOZOWErrvuQlwL6rJV10z3i/wyZbitm0JF/TrrzmTjpG4bzeM5sh5C
Wf7TTaWSfr11F7JzSredFvpD8cxQjkQ8W/rK+g1yV3Lwh24H05jODGYyiyr2
brSnGzn5U7eT2VR1bJOuO7k4rfuOlvrD8VtTnmTxe+ir6TfLPcjNGd0uWumP
WL/GgyRnrr66fovckzyc1fXQXZRHUY/dusd1R+XXqUAS8/QP6bfKvcjLOV1P
3SV5NPXZo2utOya/QcX4HtZp4z0mp+Ap+UbcqzRjvnMe1m2Te5Mv7nPrJObI
5x3vJV+OZ4Rxcl4ekd82M7BCnmbex/f2tzGPx/c2h8b/Z+bkEyrF/2ami/cj
i62nmkXivUNK60HmTXOhOdWcYN7LZzS3ftfMHPdy/E3rGWaxeI/67Brmdl2f
eK7lbHFu3OdmCubKF+zrLV+JZ4RHecc6IyvlHxxvK/8W7wIqk4qn47mO+44W
8f3sq6nbIfclPxd1fXRX41rRgB917eL5jOeQKqRmkb6WfqfcjwJc0u1lMbUd
+07Xn4Jc1u1jCUtZxnJWUMfeXfYMoBBXdPtprz8RvxVVScNKfV39bnkghbmq
O0AH/cm4HlQjLc/obsVvTEtW2VdPtyfuJ4rEcx+/HfPka473la/J42nIQV1H
3Sl5GNXjHrW+I96fcjoGy7fN6UyU89NKfs/MEvdZvDutZ5rFWRO/v79bP+67
eM7MQeYIM3u8UylqPcRMFfca860nm4VYzf8lrQ4i
               "]], 
              
              LineBox[{1269, 1174, 1100, 984, 1374, 1255, 1160, 1086, 1035, 
               948, 1352, 1233, 1138, 1064, 1013, 985, 949, 950, 951, 952, 
               953, 954, 955, 956, 1353, 1234, 1139, 1065, 1014, 986, 1375, 
               1256, 1161, 1087, 1036, 1397, 1279, 1184, 1110, 1418, 1300, 
               1205, 1442, 1324, 1468, 957}]}, 
             Annotation[#, "Charting`Private`Tag$268168#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8zlUYxvHH3mTvsiMzMxQKEZUtIWUUSkZGoaGsSslIJUQhIyNCGdmU
WZS9s0MhZKR63398Xtd13ed8f9/nOefc5/kV7NCjafckiURiQNJEYnWKRGJR
qkTiLsxImUg8jqy4rL5LrRZ+lHugAtaoL1YrgJlyI2TDX+q71R7EJrknKmKt
+hK1gpglN0Z2XJTb4Dj/Lq6Yt0d+CJvlXqiEROpEopvaFX4C1pn3rVwIs+Um
SG/OK3ICOeRLtC1O8CNw1TN75drYIr8Un9kzg+TUqCwnkV/kr/L38dP4iXxh
/gM+J+ryC+izdL2/+R1fGPXlr8wtST+WW9GmcgbaX25Mk9DqdAZ9huaMNeaf
wqPyyVgvOiU+O31Pzk/fkZvTzLE2dB695t37aB1sNa+c+kS+d6wt/yafBlXk
pHL3eIafhCLyKDkXNvg7S2kRzDHWDLliL+V2OMW/j7/N2x/fH9vkPrFG2Ki+
TK0o5srNkRvX1X/AcvVimKfWAnlwQ/1HbMJmbMFWbMN2/ISfscJzd2O+Z1oi
L26qH1B7GNvlvqiKHerfqxXH1/ITyIdb6gfV6uEnuR+qYaf6SrUSWCC3irWO
Myg/jdP8SPxj3qHYX/wsv4wc1u8tOW3sp5xM7sH/zX+GovJoOTd+8fwqeg8W
Gitl7BP+ST4jP4BvQpPS++lM2p7eGWc2zgkek89EL9DP47zEeZTvpO/KLWiW
ONt0Pu1Ib3vvYf4RNJB3mH8vnSS3jl6Rc9LBcrp4t5xc7slf5yejmDxGzoNf
/b3VtCS+MdYad+FafF6c5UfhX/OOxDuxU+6PB7BLfY1aKSyS26AA/os7I/oe
a42VxmL1tigYvY+9xtapl8ES+SkUin7FUbWGsc78ANTAPvPXq5XFt3K76OHo
AxyLXovvww9ETew3f4NaOXwnPx09Emde7oDf+dGxz/gt9gO7+FdRCwc8v1Ht
XiyVn4kzED0Qe4Fz/JhYXxyXH8du/rXoNWs8RE4f96acQu7F3+Cn4GD0kVwe
y+T2yGTOQDlZ9Fb0E+2E8/zY2BfjI+SsSCGfoI2why9v7DP+9ehTfiifAbX4
OXG/qKfkX4pn6M3oLzo9+iLOn3w3HSs/QfNGL9KF9Dl6KHqbrxBnT15ufmk6
Ps487SDfQV+Vm9Lk9AE6K3o9+jvuVlzgK6t/wX8YZyXuQz4bUsonaWPs5d9A
baQyp7faLf4LHI47Rq6IFXJHFI95OBJ3j3olfC93Qom4L+J74A9+HFLjVPQo
9vGD4g7znmFyRtSJOXIf/h9+arxD/lDOh6Nxv9HKWGmsjLFP4zvymfnXYo9Q
g58d90TcObRznBO1P+UqdKrcjn4UfUHfl1vS7PEZ6NdxBmga46djbaMv5P1y
BTpZbhO/C3GP0uFyM5opzh2dS+saS8P35W/HPcl/yU+LteHH8flxLO5rWgWr
jJU1NiHWjc/Cvx57FHeFfJt2wUX+4+hb4yPlHEgrn4nPgQP8W8hn/G35jjhX
clq5H/8vPz36L34n5PuwWu4cd2rcO3JXXOI/QTqclZvjID8Y9aL/4jdGrSrW
yF3ifMY9JD+Py/x4pMfvcgsc4oegfvRS/D6pVcNauWvsKTLgXOwJDvND8Uic
0/gtU6uOdfLzsV7IiPPRQzjCD0ODOGvm71C7H+vlF1Aueh4X1FrFmeKHo2Hs
tfk7o4ewQe6GrNbsDTkVasb/JXGP0f8BU6RDsg==
               "]], 
              
              LineBox[{1899, 1779, 1690, 1552, 2030, 1881, 1761, 1672, 1612, 
               1512, 2003, 1854, 1734, 1645, 1585, 1553, 1513, 1514, 1515, 
               1516, 1517, 1518, 1519, 1520, 2004, 1855, 1735, 1646, 1586, 
               1554, 2031, 1882, 1762, 1673, 1613, 2059, 1911, 1791, 1702, 
               2090, 1942, 1822, 2119, 1971, 2151, 1521}]}, 
             Annotation[#, "Charting`Private`Tag$268168#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFGUUBuAhlFBCQlIBpVMaVLo7BJTukO4O6U5FFOnuklBBkQZJwSAk
lMagpEG83x/3dc7zzM6y3+zMkqFFl9qdY0RRlDZmFHWIG0Xp4kfR/HhR9A43
5a3Mpph+u64+CTip60h6/QL5XW7J25hDcf33ugYk5JSuExn0C+Vi3Ja/pY7u
F7krGZmrK6HbYW9IIk7rOvOGfpFcnDvyd9TV/Sp3IxPzdCV1O+2NSEx3+Z45
mTOON5Mv2geRlyFyTGbZuzj+pn2xvQR35fby3/bRbJfrySfD+zLenpDM9n7m
U/NT5ntdKXmXvXE41x6fV+w9zPvmInOKOd1MyVp+c15z81J4D3OwOSmcx0ry
yR+ZsVjCbPkzMw3r6er8jOGYfpZZ0hxhxuFfxzqY/+jGMNWeLHxX+vfNU+Gz
McGeiCz2/uYzcwYLvK60vNvehCT0lB+E9+Ks4y3ky+Gakj98L7pMuqX2UtyT
d7CQMvo9uqYk5ZyuO5n1y+TS3Jd3sogeZHFsub4MD+RdLKYnvehNVq9Z4XhZ
Hsq7WUIfsoXrqC/HI3kPS+lLdsdW6cvzWN7LMvrRnwEMJIfXrfaaCjyR97Gc
svq9umYk47xuEDn1a+SKPJX384HudLh+ZGWFrpxun705ybmga6m7Er5zCjBY
lyvcK/ZKPAvPonzTPpYDcn35jL0X2Rgg/xfuE1Y6Xl7eH541s0W4F8yXwjXj
1XCe+dBcbE4L97OZinX87vxW5tVwP5hDw3NlJgnXjoLyUDN2+M6ZI39upmUD
Q5yfO7yXfrZZ2Rxpxg2fMfxOmLd045hmT84P+gbh2dD1JjsD5efhvVnleAX5
gL0lKcLr5Efmx/zheGv5mn0YhcL11OUJz4y9Cs/lgzTUnZX7kIPVuorhM9hb
kZKLuqG8Ff4muSoRh3RrGMZwRjCSUYxmDGPJ67wvvb4aMTisW0sl/UG5Nam4
pBtHPv1GuToxOaJbR2X9IbkNqbmsG09+/Sa5BrE4qmukO2fvS07W66roDtvb
koYruja66/bhFA6/BboCus32msSms3zbHM8xxxvL5+39yMUgOWKmfYPjVe1H
7O3CPWp/OdwP4Rqbj81PuOp1beUb9hFMsSelSPjOzBfCbwJz5Znma+EaMtF5
Bc0t+jlmLXOUGS/8ToTz5C7mHXOhOSHcE+E+D88wPzq/iXlBP8/sb040E5M7
PG9mDL6wzzBTh3/XOdXMo7oPw71qTxA+U7i+5hNzOte8rp38Z7jHKcokXSHd
V/bavEhX+W74dznueNPwnIXnljxs1FXXHbO353Wu6yZTWP+1/B5xOKHbRI3w
t8kdSMcN3RSK6L+R6xCXn3Sbqak/LnckPX/qplJUv1WuSzx+1m2hlv6E3IkM
/KWbxtv6bXI94tMt/L8T/u7wPdtThN9C/gd1diWA
               "]], 
              
              LineBox[{2530, 2428, 2352, 2232, 2642, 2516, 2414, 2338, 2285, 
               2195, 2619, 2493, 2391, 2315, 2262, 2233, 2196, 2197, 2198, 
               2199, 2200, 2201, 2202, 2203, 2620, 2494, 2392, 2316, 2263, 
               2234, 2643, 2517, 2415, 2339, 2286, 2665, 2540, 2438, 2362, 
               2691, 2566, 2464, 2715, 2590, 2740, 2204}]}, 
             Annotation[#, "Charting`Private`Tag$268168#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{385, 386, 384}], 
             LineBox[{906, 907, 905}], 
             LineBox[{1470, 1471, 1469}], 
             LineBox[{2153, 2154, 2152}], 
             LineBox[{2742, 2743, 2741}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution 1\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
8EwsVo9xPt3M6rsrVEQofu+aLbKunwBZLMv3Ktj1kQ18W+85RIShjlEn7M7M
Icti1i/BFWS4i75yLuYwExS9unw5PZkApSbOr+HuZ6F7hqzNfr/IMGT/Secg
YyaI2z317pECEXZOLlCjReYRx7SAe4w5GVY7Zx47g+1fGyuc/ZhFZJhqtCEm
Fts/cV7ta978+v0eYvH6nyctzvIQ4bNdjjWfsPne2hGo2LybDCPcXLvWmTLB
dn7x0oFKAlSTfurtzDOPJBMesep0iHBft5DA6WkWahZ59MnSjwyN0kJWnsfq
3fLXC8efzS3ND86z+fY5SJoIEaG/fnZKo3MrcNmd+gpW9AKDjruvpFb3AJ/V
rtNpBc2Aed/jU9dpGlDN79gk6vME4Hw7Uq7sd+OFSjbfPtdb/27rix9snn34
qADdFS7xbNfEt/6sezQ2z77lGvbIR5fO5tlJnX/P2y7+ZfPsjOp0lfGUMTbP
Nl1cp113ZIrNsxeTuCaHLRhsnl1jbBVsZMxCOaaVHG1HibCiWLpGms5CmVL1
bjcsOGB6Ts++/YxZNKwo/SXjLCeMP0uLqD09hqrazle9cOaCmiJ/KPW27ci5
MdzqrDc3PJ4waqce0QBOr1r4lXyVByZG/FBOpg+AXrtPtV53eGE4V3NeQPYE
qCo6te5KIAmmNc1CzvQZYKrTX9N6gw9ulpCXOP+ZAaKqqn6X3ifD2b8KxH94
hNCLPz177vHDoKqevwl9DLBeUijU9akAFOfTzD59Eevvfog1uL8ShPcPHv3e
qjANtvSZzHLFC8GuTuOJQbMJwJwaCZf5IAwzeNWXuW8fATiPL7SPYar8mUU4
j/9ETsgvcCEUz6Y/CaVZLtUn0fMOn557LN0POpn3W1ROdoIVyn4GMKIbQGOt
x/y7sf6+ZCH6YU85eE+5OZ9r1Afu/zzDs80vl83vZVbNmwtLNbB5fGlX+aVV
en1svp7JtfeX8KUZtLiSS37zy0VgTT74YgWDifarhYMXTQToG7gjKl9oHnVY
z50waiXCvt0OEzqv5hBPi/SZoS4OKC94f1jbfwpJv/9r1jrLDfvXVR9TnKcA
nYsCozkLWD+gXbZrLGkUcF7sdr/JTYJ7XGQfQAL2PJRXtpVF4IOXhPn17Ptn
QdwH3rExLqx+025zfML6edKfhec/+Pih5DMut5cHmKBia1NGj4gApF45q5C8
nwFQHKx+tEYQcs5KVNhazQCc/189EjBqWMdCHAFILmrt0nzeEQjioH9ams8T
dkYvNz0iwMvt1DMfv7FQ1TmrjVFRRBjv4pXk6MRCkw5HZBe+8EKdl3JiWn8n
gd4ngY35pSR4+Vm3yjfjWcDynDG3LeGDh0WajymTmcCw7Tf8VkOGVadkqe/O
McEf+rnq0G/88O2AT45BLAPg/BL/+a3zO2wFxAlwSv1e3c63c2gbq75zmSgR
ZhqpfjeQnkdDdo98yDIckOvOjhWPfZlIL9tLEwI+WEiWMT1qzgCwd3mgrx4Z
vjYdT1PHfl4pU3rulx4/DHQkWbqsYgLcF0i4YWV0q2EBQSvp9YLdS+ffQfhw
YsKDAN0EKSuvPWEhdFb8ca47ES67OCPzKIuFNlm4iL94wQfNPQoqbLH7f/To
6Ujdt2R4Kc9ixS6snuP+wKeA0AaTIULxp2jV0NZxAsx/4XtdA6uHNBs9+iYm
ET6OWP9LWmEOudaEaeavx+qvrOyRjGNYP+EeYmCqxA+3vsuxsdjGBF+/joza
ZhMgNdTtw9lJFmqwfI/ccokwQunwBjNRbH+I8nuz8TcfzH7TKk/bwASpVm4j
R/+Q4WN72sDKk0zw1spt42E1Itwb+oM/iDSPRAnxtToXyJCy/DjrMna8sfcp
eS9Gl86/oGPoW6UVEd5ZJhG3oZ6FSkOEd99+RoYySkBoHNt/cL/g8D3/sDPv
CcWL53v6dv/G9kcxmPNJch51/167eu8AEbaEn/wbYY+th8KvEj8kyDCFZ0+g
/SEmEH764lB1EgFafVj7XQnrr32eKz8JbSfDnAdrSn+bYNdny9rA92ux/S/z
9uI3Uex5aLwj2cqEDKU6PZie1kwgK/F8gO8TGd4IvnDmKjbGfQNDgZG8sk3E
4mvV/hoeHERYfPxUlAT2PNXacsLi2Q7s+TLjkHUctr/dXQBPOMoJ8FaxgIsW
5zyyjypp7IdEyBhN+XOFyUJegjbjG7yxzxfZoKeI1btv8V8Ijoyl+UlVdhJO
eog9P64vu++I/XuC/s6HlzoI8NJXzX3KYvMoQsJTtUeaCKuHE+MDsfmYHPSU
HD1KhlPvny6/aYmt3yxGoWIWtp4XfdJnsf0U9w+8g2EaUZBYLJ3eSnnNJECi
89Ecaez4lXof66h/JkCQcyxiJ4uF+Lyl/aR3EeF+5b5cBnEeVfBwWOa6k6HC
hgL/q9j1aR/OtLNLJEOzoAaRHdjY/MY9TfIgARpmRdZewNbPEb3qFh8lIpwf
VDgmj9Wvswyt3U1WZGj4oYUsi/VPuD8gwQ9X/jhMLP5BVQzaTyZCSbmO7Ruw
+3eLeEXg01tkaKw0TgjGzt/67Y5XtfNL8/Of6/k/P+//+VtxGCDwz3gM/R95
xcKsVVuLcB9BqmPQQJ4SyvYR/HVOzqSQMtg+wkPNiDc/IkvYPoLGsou5vKu+
sX0EQeqV5ae2NbN9hP37GTdeTbcB3Edg2TI/ztG6Ae4jSGXR1V4/pQLcR8hL
tOkfK6EB3Ed4fnHLav/MPoD7CI2m/oGRwnSA+wj7VDVt7g/QAe4jeBZaTZuq
DgDcR1D3esurn00HuI/AwXXEyUCrH+A+wqeRprft72gA9xHsUwoGNQ5S2HlF
kl7fsR6xNnZeUWOjhKa6dy07rxg1dTts5NMrdl7RrU/a6u2OUoT7CKpTejK3
HJsQ7iN8UlQ5kQy7EO4jTERnSf6+SEW4j8Cn4JjlaNSLcB/B/7Wd1HevfoT7
CMDkZajMUzrCfYTC7sd2wh10hPsIghESA6Jb6Qj3ESJfP5ua/tGHcB8hQ9lk
y9rXNIT7CLdGUL6nEBXhPsITeeHX4rq/EO4jnE7/YJZ1rQXhPsJeNxMjHdEG
to/g4F1zpVv1C9tHIARtHCb/yWH7CLkUC8/Dts/ZPoLLS1G/wN170f9ffIT0
Nzfeplx0AHheccLmbeXfkZcAzys+iB/lzwv6CPA84q7795xF838D3DcI2FCf
3lrVC3DfoNbsu0enSz/AfQMJjdpkaggd4L5BWrjG+yCFAYD7Bp1mX1+JkgcA
7hvYHww4bCpDB7hv8Imw4leXdB/AfYPhsPux/VK/Ae4b3LOK33RU/BfbF1hQ
Maun3G1FuC9w6bHomdcJPQj3BVbVVxQ7z/5GuC9QNvdya9vtPoT7AoW/VXdG
KNAR7guMf7LcId1GR7gvsHeHKrfjSzrCfQEuFUWzxKf9CPcFxhuitlOaehHu
C7SVW1dscPyN8LzkihsRRkkRCOF5Sc8QdaWMV28R7hN8FvkU8uzNrf/PPgGh
8I+dnJ8awPOS7+nryEKPngI8Lylbp1J1Y20OwPOQdyObrxzb+BvgvsDfTy6C
bXq9APcF5JZv+f1ZvB/gvkD914kW7eN0gPsCJ3I2jJ8XHAC4L5DR+DZPb90A
wH2BTP+DBYOudID7ArMy9as/ZPcB3Bdo1lCv2Dv4G+C+QO7wOupF1R427xer
HSVGcf1EOO+/Umea/tOwG+G8P3jtxbjKnb8RzvuD53XFs8Z7Ec77O1Lzvsi1
9COc9/c81P7JKKYjnPdXMYa02r/QEc7700LHvjgM9iOc9xfZvo18Y9qHcN7P
90ar+Q0/DeF5TTKhRdHEqRThec3THzodf7zPQLgPcCdZWYPfKfK/+gB4nrPc
fPcLgZP+AM9zZr/pVbwvnArwfGZe/Y6nsfv6AM7/13FlxD8s6wd4PnP5E/8U
aUQHeD4zwd2zy1ptAOD5zG1x6UcNaHSA+wID/Q16jJx+gPsCVu96g9udegHu
C4w7iQWs2EFl8/7kvEfZbg8oCOf9vw2/Uj6k0hDO+8/eKU63IPUjnPfr6+zP
UrWjI5z3z0RsulNIoSOc939acUGS7EZH2mO3l+00F4IBpykHxLT62XnRgGrq
lXdRBQjPi5bkx/X7fE5CuB9wQlJfXU/P+f+1H0D4lmuowKGI8Pxorvm11J+a
UQDPj8ZN91U/JmcBPB9aShD/IPEbO/9/+f8G6w5dLZ5egPN/qqPuyxu0PoDz
f8dflTb9anSA83+xb/UaNBYd4Py/65jQeaONAwDn/yBVa09uFB3g/P9VX6r9
vjns+v7L/4fS7b3vGtIAzv/VA8fDnAp72Pz+jqtjQP/HZoTz+2Uu8vG9+r8Q
zu8nB13UmU1UhPN7c58vdssSexHO748+/lmZm9qPcH6/9suTOJ4PdITze5N6
NA4b6Qjn9w/WTp5QEqEjnN9nNCY6VTztQzi/3+X98O+gCQ3h+dXxDKb755oy
hOdXL/3QtyGXZCGc75N6H/EdfvGYzfdXZO/yfNchCf4b38fzrdcZpVVHjTwA
nm9t3dAnOGf1GuB5VVrWPf8NPH0A5/ltr9SYKTH9AM+rHs1YPiHyhg7wvGr7
sBrg2zwA8LxqgMehdVWzdIDz/++sZdpOg/0A5//pFddkn3zpBTj/7yym+fxJ
obL5/Xm5Q4e3SVMQzu+Vrige33uChnB+r91+kLWmug/h/L7zwCutp7p0hPN7
5dpVz0y66Qjn9383Vi53v09H4ZQs81EtIVhC7vfPdOpn52db1RV4zvMVIjw/
G/1g39XtkskI5/0/T/oF5fZ7/lfej+drZb1pPy5/OQXwfG2plZt+4/UXAM/P
Zq/N3h2D1Xc8P2t+bF/v9IoBwHHwjeEHtTngM4t4d0kNgCdNrneGds6DgUmd
kSY9OtsH2D36bpXB3j6E+wByJRGWEgQ6wn2Aq0RZZ1YdHZ10iDnawRCAju4J
DrQcOlIuFZ62XBSEouOv/DvK+hGez52cljku+vI++k9/AM/n+ifEkm0k7gI8
f1vEf3W39g864FRtqvVUY4K2dzZrA7cOgBU77jy12swCX00YWuW1dLYv4GSb
uMnsJh2Nn2W6SF4WgE/3EfIMeuhoePTbfYK/IHycPUHffYLOzvOuXbMi/GlM
AsL9gsa6J7zI6ez/6hcQ0r68VQlbj/B8b+bDFVGGZREAz/cu2NgljvBkAjy/
myxTN3eriApwf+B+steAAY0GcH/g1cM1Mrlf+wDuDwyXNXnNydIB7g+cL9uS
ETFBB7g/0Hvd5/22LQMA9weWVdz05n5FB7g/0OTbdLZFph/g/oBakId0ui8N
4P5AdWDxYxMOCpv/Tx1Xj3EQbUY4/xdXcAwKrehCOP+/a2LgfSaeinD+HxHz
bFWRZy/C+f+oocC9rQ/7Ec7/zZpr68OT6Ajn/yefW5aubKEjnP8vp5+N81xL
Rzj/F1oT46OV34dw/r+9+tTlQ/40hOeLr8rFDHf5lCM8X+yf6LW/pDEb4X5A
nUnzfX3XGLYfYEoWyL/vKYP+mx+A54+rnvq/N/J0BXj+WG0+9tqJhCSA54mb
OxbiC/p7Ae4DLLv2UNzvdj/A88Qco6hSK4YO8DxxkcAx/ndKAwDPE8c8ECps
JA4Atj+Qs5XuzkUHuD+wVlXm2ZHRXoD7A/yyv9fSKFQ2/1/ssZT52dWDcP7f
E6fEo72ehnD+3/Nle9D8mz6E839S8XgA5w46wvn/w6/uLjmddITzf/Pr3GZn
H9NRblvNLYMtQlDl2VPHm7f62fnm4aZnKXKHixCeby5eKdV4tiUF4b5A6ZqT
Mmry/v/VF2Dnn2UTnZZ90AV4/vn66ozmdVdjAZ5vdoh7nP/Big7wfPMula49
IeIDoNv+MPcu0TmsP37SKbd6ANCMHWYaJedBnepE4wVzOtsnaBkWbiBI9yHc
J+B1dl3O/7cf4T5Bi/++uutVdLRvuXqK5IAArMnpjD9aREfHCtbLFI4IQlRV
KDqH9Z94ftpuctcWZf5w9J/+AZ6nFplE98oibwE8L/1QTFTXoIYOnJDPQIkw
E5TunH5nhtWnGWPlo4OCLPCy+qfZjjY62zfw/SV+YtsVOvLW75oiWgvAebnN
Gn5Yv9X+wo6220UQ7uDQFg2zprPz12bTtxnO8okI9xPGv6//0PjA9n/4Cew8
tlT85cRGDnTHRGYhsmgWjEf8vOzPPQCevn3obtDEBG5e8UfTNgyAHxEFqhp5
/PAkb3i2bz4drfSwN31QKQBnNaSX+X+js/PaK93O+c2NRyHcX+DfYde9WksW
4Hlt43szhetyvMDeX99lj39jAFUd6alnKgNsX2GV3Kqm42ew+08hkdgGBOAV
gazXPNj54vntXbWab7hVryA8v61K6722TdgKUFdeDXM/wAAKFd9vJsgOAAV5
zicKx+aAyl+H20HLBkBGxxbpu3P8UNbucujtZjqy/0iYfUEWhF6vJb5Gp9FR
TLxSptoJrJ/b93WmDeuvL7gs/6McKACTNsVIbvhFZ+e9f/+Qe3k87Cj633wH
wp7u4HbKSoTnv/UPePYcehQO8Px39qULW1ffzQB4vnvgw9mQ1WlUgPsMN6t+
J29qogHcZ6DDhnZF1Adwn2Gu9lbIaSk6wH2GddqvO5KG6QD3GRov3fx5DptP
ts8wH9pXlUYHuM+g9H1oVGNzP8B9hsE068220TSA+wz2xw5yXZCnsH2EpLVX
NeSKmhDuIyguBi+rvdWFcB+hO2XUbccdKsJ9hPQRIZ5sm16E+wgvDygUyNzt
R7iPkN5TETQdR0e4j3Du9s77W7HncdxHGDHx3tGlREe4j3Ag6w3/1so+hPsI
DoLHNx58SEN4/tzh8aN3iT/LEZ4/n98hjHLMcxDuK7zwfZt7qu8Z21e4vl3W
9JSdGvpvvgI7n+66n7gp2Ang+XQRPc+RjIpEgOfNRSbOaBi39gLcTzA4kJn8
2asf4HnznY49axIe0gGeNz/65YJMNrae8Ly5Af+GIX4ebPyvz+DA3WMZLEIH
uM/A16porcndB3CfoXPctCBwnsr2EZ7cPO7dinoQ7iNo5tfuuixMQ7iPILjh
9zP+x30I9xH69ghN226hI9xH6JFzOc/TgT3P/esj7JBceX0hlo5qTv2M9lov
BGXl2yWTQ/vZ+fcr3It6tUNFCM+/0yLsLXo/pyLcX1gr+Brr9W/+V38Bz8cT
dGS3lKgCgOfji1SqtE2IzwCef1f4ourLZ4r16//m350vEF4JY+u57vrznhsc
c0Afzm6uw9Z78Erahy/c8+CqS1XnEXs6229A25L2MLmxfvxfv4F4oTM7k9KP
cL+h+kxQTWs5HeUP+5/K7hGAjSTKD7VSbH62b1UZ7Mf2vz/GWlXY1+P5egnT
LyW12yPQf/7/NZ63NwhRrPzx5ybA8/SmDiox5eV0IHv32EzvAgOclV6/mYHV
lz5Hn42qC3Nge/PE2rRfdLb/kMyVff7IJTqCJXX510wE4CmNnInPWP07ei0r
vM1OELrMv/jQ70hn5/ORk7Bo1nAiwn2J67T+RyTk+D98CXZef9MNz5IhWaS5
dow/790scOo9c+AQ1m/c+9x7JKKMCQ46VdY9wvqRGFLaROp7friZ4XeSmkVH
kQbZPBuRAMxsN9p64zudnecvETE/FaATjXCfgpd7mJjoIQvwPD+9M2DlxdFr
YPxV0parnxig+Rtr+CLWj+L+RMVlxTsRRnR0PDaq3HAHtr9db5syxPpvPN8/
tqbmbsT0VYTn+wnzt6q0XpmB6N/6z6PVGcDwqb0ZbRXW32qcunxh3xxwMjVe
zsT6gavHZTtZ41i9f3cR9jTQ0a/wI0laHILwS3dPpkkGHRk6LKBT2kxw9wVX
4CFs/93SR3oX741V1QApTWPs+Qx/H8ARl4batetOo//0L9jvB6BtU3bpU0K2
v4K4ViYxwcuQ2wfaNg0A37kjFnbvBeBQZ8SWr9h+g/sYd75wWdpPUPee1TDU
L3rKAAb0JpUrGwdAe9A1fc31ArBecO/19dh+g78/gJB0Mfyi/1FAuDyZ/0uU
ATJaRZzalg+A0dMMpcm1c6DuaH7IwZUDYAFwWtMp/ND0zo+5tq/Y/TzzpuO5
LBMELlxaHoydX27T4NaQCwJQatnui1zY/YS/b0D6mYuueY4VYr9v4PMfroe7
pUFqzL7HvL+ZoE6iKj1SYYDtb0yVP56L9JAAwZJzolu6GMB1E+J9qjoAqt5n
7D2vJwDvCNl/88c+H3//gEiMt0DlYxvw10br9DIubH3VjNQN/aSjvtaTSYI2
TJAnFaShga2H17MKG3JCBKDEekmXj1j/ib+fYNtCIyHQVhf9b34HYTahTS9U
COHvK0hWKispJYYD/H0F4RvPy+frZgD8fQSCqL2A9pIKcH8jo6rsUWQNDeD+
hnJc+UBLfh/A/Y0gzvWOs2J0gPsbDCGFD6v+0gHub1h195VRsf0W9zf6apcV
RKTTAe5vgNgwFX2NfoD7G7trzXs2vKQB3N+4yc0TaqxBYfsXNJ9d6V0PmxDu
X9gfnhPVte5CuH8hqTz7TcyTinD/4lPZ/t+Spr0I9y9GAjRpLP9+hPsXqYFy
gcuweo77F1uHCnYqtmP317/+RX31u+/zm+kI9y9oP7d6xtT1Idy/kMOKf14s
DeHvS3APRCOZnF8Q/r4EfVMu/+zEHIT7GZdDH8VnJ8Wy/YyZ/JG8cL8d6L/5
Gfj7FHrmbesS3C4A/H0K1uWnBZpMEwH+foTdfr5isfW9APcxiPHpB4569AP8
/QhJrbYrD4bTAf5+BOrN2yKv1g8A/P0Iyo7LH/1f1d15OFT///j/YpTdDEKh
ooUoqShRPZ+WyhJJkrQXKmlFCkmiVJKllCWiRLbKGpWDbEmRPUuGmTEMM/YZ
e9/zuj6v8+z3e7+u9/V5Xd//vn96LbOcM+c8n+e6btf9sUCwFxB+Y7IqxdBT
pgcQfiOxbqvJY4luQPiNLTs66VtFaMhfKO89yyt9S8UIf3HkWME7Hj8dI/xF
jk/fFY+gbozwF0fvCnnzqfVghL/Y9GJdmCx+/Al/ob5RLzM/tgerlzr0PERZ
HB5zqlJVf8REvYZC258+YQDDiF4DvJB0jKaZghFeY/yh+xthzPd/9RpEz2HO
/dykJYI6gOg5cHa0rVQ2jQREr2G5TLO2mg2+n/y713DSa0EykOgF22/usHg+
OQkSs/YHUJR7Qfu0kiiYmQbNWyvPrnDuQZ4jM+1M/pFpBkZ4DuEj3m8utTEx
wnPslVikOYSvry52ieq32kThyFzaCjF8/T0/mqvDRxeDt8/5y8V0MzGiBzFz
tOu5bk0IRvQgkhzuTpoo3gRE76E5fv+dkSJ8v8TSm3XnToB+u+ceWfj95PDl
FRFW3Cmgo0zJ8+3sQb4jRSmEXoqvn/FeOyPX7xOFJtFX6SX4/UqU9tMx6YQY
VBhJSL2Br79EPwK7sfWryr6XGOFBbOVGwjPGz/7Dg6CeRKqcFFRcgUn7t0qa
JIyDCw+LXRV+47+vkqAPmR8mgb11YuhVtV4w/Xl5g0OyCAy9+c3BC1+PzN+3
tE3ki0LJSirsrulBvQn3UrVabDAcI7yI1qFTMkfWKwKiNwFXsirso66AKqGH
2oKZE8DsTBqzcE0v8iEL2zYZRJv1YFn7xV4JbcDv/4yY3634+kb0JyKG1j9o
PHMVQ/2JxLwKmXhbcHGn9kvV1RPgUb9vgotCL7i/dZYauHkKZEkfLoyV6QXN
YhGfcjkiUOdl4Kor+OeNmHbxEJ0VhUIBnjKv8P2CalVPGXPzJJgbudD5HL7+
BMfdDDroLgqfXLsl0YK/P9Gr8Nlw9LX5ugPYf/oS1K9QnT/M61LF2rrXX94a
PQn44l47BOLfb/MpV23tZFHoci/lzWRDD+pZHKBoSX6/PR/bGKGzxzJkAkgP
BbaG48d7y/ZB9TElURh071yGW3vPn77FTIpdgeYu0NL4C7soPAE2fzhZpoN/
v9NH45/ILJoCya9oTfn49z825Wn4ol0EGv5evm1dJb4fOhjatVZuEqxIUHK6
hn8/uYf20jsdReHyFaEXTPDfE9HDWLfEzNM1/CSGehgXHVXqgie3Kb9gkdRa
J8ECWYeAv+5PhE/B7FKWPjBTAPYejIWF9ROAbu7auRRfX9Wc1JYuNhKFJWvm
njHDXx/1MYR2OQhWngAWS3M2Vf0Wgb8aXlUV4sejcAtIiT04CV7+btEPwq8H
wawYwYsBovDNfPUf7vj3J/oZrluHO2Wkd2H/6VdQT+Oyfv2rXmXsK8/P3Ddw
EsxroqhU4/s3oq9xzdbEsJaqgvF97OQ4LRSFXwWTUhj48wTqaxRKp67yMgQ7
lp0a3Dt/Ejw/M9KniR+vXwI2TR8P498npy83Af8+qLch6JemzpLBCO+i+911
kI9PCcgZ5KvQP0+Ao6YdZsL4ejtIlaeF6YnCqOiImxn4ftGVJJ332XQSdJJ0
jsnhr1+lFvyVcUMUakwJ6JXj+ymix1H6o+3yGYO9GOpx8D3TIkWtwogeh/bl
ppkVdSLg6vfZ0zfURKFaWUjJX///r7BP9SKrJsFQaXPqA/z1reVc9vw4Lwqv
0Havfou/P+pz2O/MmFytgnzMUs+7wrMzguBtBlk0mjEBlBu/HSHh58NxROdw
0i5ReMmhuv7VX/cfN6dnns6TgP10+st3/HwT/Y4XrJOTxlKG2L/1M8T7/c8/
lYaa1//6e3zbHz9DnVMu/wT5GddLd29/8q5Fve/Qa7zsR7uoqPd9ZKVZpZoB
HfW+tWT1Lr3oYaDed37Mp8SF3gzU+96tJCnq9JiGeh4Tog0iNiZU1PM4JvWw
WsqtGfU8XkZdqqJ+rEY9j5gjjxwlvHJQz+OYG0dcb18m8jPmWu8o/StrkJ+R
KV9uXEltR35my4/jBaH23cjPnLySERZ2fQD5GeXjmydrn4wiP6O9hGN/cGAc
+RnuHFH/6svTyM9MuQXealWeRX7G+aDOna2dM8jP+Hg7PKUPTKGeR+KZmCrf
kxOo5+F+T+6+13ku6nnE+u7RkJ4cQT0PVa3HrYsEh1HP40axhNo8j0HU8+gN
lJ0JlBhAPY+vX8plV42yUc/jglP5yYwENup5qE3Jmcq0sVHPI5tbYK5iy0E9
D1uaokcZxkE9j5dq81XtPnJQzyMw+1LEcDsb9TzCzJ4ez2H3AcLPtC1eNOK0
vQcQfmbqxPVhS2UaIPyMYlaomcKDZkD4mdtFla9UmrPA/yt+ZvCc/ZGJxs+o
9/3z954gKfMW1PseOCu8TehxF0b0Pl6YeLX272dgRO+jyFB8cN4QAyN6H0qK
+gUgg456H8pFop8VyV2o9xGwz26hT1ob6m98cRaru9TGRR7mhezsr+/USUD0
Nz7qOAns850BRH+j8lkg3w3LWUD0N7bt35oyLDIDiP6G37loUUbeJOptaJs8
n8tT/tPbUHqj9Pvg8DDqbdiaHdURXzOEehshNxVZA/QB1Nt4WfP+jKwDB/U2
ttplUgNy2ai3cUlzq+pkFhv1NkxiKhdwZDiotxEl6f7BKJQD0i2+BVmFkuHg
6M+KiRoOGKD5zJZKUWDOatsH3hc4wOnB08+zjyn4/q98jZ8YGxC9ci2erouO
FQsQ/kYjfWBlfT8DEP6m6sKQr2hXB+p5DKs8eLCD9x383/ob4xAbld1+WahX
/lQl3GI4vBH1yovN+G+98evEiN7HxydH6rR/0TGi93Hp5GJDmxkGRvQ+Cm3I
5FllBup9eK3vfvi1tQv1PhYDg+CPKb9QfyPnPevi74Ix5GnIrv4BASMTgOhv
HKItdSMLzgCiv1HCavpuajoLiP5GBGXTeKPPDCD6G8b317mDA1Oot/HxJ9/V
8tIx1NuwNstdmHx5BPU2LE0rJAcfD6HehrVZ6kTA+kHU23B5N8z+lMFBvY2I
3mGOcA0b9Ta+kAtK616zUW/jS9qUAt84G/U2HNTbzvm7ccCr3JyGnS5kuC9w
q4tLFQfYvP30W2aYDD+kp4HcZxywo7/6aMgVClxk9Fxp0Q02IHrr8N7zdL81
fYDwO7Wav98NrmQCwu9YrDa08XraiXoeHXVC0jpq9eDf+h3NR3K8KKwK9djT
RGP3PY1vxxjpN2tnrRpB+ckvPne9aRjR/1BRYf24+JaBEf2PBmpOU08pAyP6
H1vZEu0n19BRvyMmVXLPKTYPEP2OmfbjM5Y5U4Dodwg5LxEvoc6A3cEbNvWt
IMGKB7XVVuqzoJ4aabFWSwBqfqUn2vtPo14HrXmZ/IVrw6jXcXfxDSOp6kHU
61iUdfDnNpcB1OuYu7ZXqWgFB/U6atbbjn/Ezxfhd8oWtdarlbHB93kKBaFa
ZCgtlH69MYUDchi0nYffkeEWu4D7Qvj5CpA1mnHVpkBdn7mOCzU54KHGcRXn
bAqcK6yvKR3QDxoD7t4R15OE9Tt/mT226wWEB0pdu0FLN5wOCA/EKnt6wt+m
DfVCjt17MTtnTin4tx7o+cUA8S2tL5EHenfOuXXtk3rUkz/9zn4qkU3FiJ7I
Oh3btYGP6BjRExFel79Gn8fAiJ5IYq6z2oG9DNQTsc072TWhS0M9kc/c4nyD
+A7U90hoNWu7tHoM+Z6Mhv5HKq4TgOh7cAI9HhYUTgOi7+EgPrGqSHcWEH0P
EY3wvRWZM4Doe9iuj0iqSJhCPY+1MtP9Hgu5qOfx6eBzX5/sEdTzkFlnk/Lr
2xDqecgaOAjs3zeIeh5cR8mZDR0c1PMw/uiQ/ZTKRj2Pr3FzD7e/YqOeh/VZ
IbPwXjbqecy6edwVP8UBys7q14pPkmFZ0wNf0XIOuCdzyAd0kuHy6Vcq3ekc
kBXVl9biSIG/nl/q//qWDYge/vonJRH9wX2A8EQrPKvFHuUxAeGJ9B6rFkgc
70K9kO2rI3yEHBoB4Ym6b3aOB8gl/GtPVOM+5P/hWAXq5VfHty2u4W/Dcgpi
DyZbN4DV0l37H4vTMKIvUiLj4GkQwMCIvkjjlN/RtR0MjOiL6Bt6/9h6mY76
IJEP0/oTHHmA6IOoYv1fl1tMAaIPck5S3pGSPQNU/bTGk/lJ0Hv3NW2wYxa4
7RfKDpIUgMJKdz9kVU6jHogEJyJ6LGsY9UB8Qm8sHpweRD2QiOyHSy2TB1AP
5HxaRXeiIQf1QPafzJc/+AY/X397ol19L+f2fWSD7omfQZ+Wk6FYYhdMjuWA
9ZG2fU1xZKg/3reutJoDPl7vuv5sOQXeOqXoJmrFAdPtXm7ZCRT409am0/Zb
P5jq/Z4hoCYJLy+WFRZo6QWETxI9ZKC5fDsDED4p6k6BytCyX6hHcrKodyFF
ohL8bz7pwK/Wc3Nt6wD3xn2PMkoXtkAxMT5NrxX8OG+9znQJA1MwNzBkxneC
wQaxlepTDCzsDKcrr4gBLnTMuavLpmM3Fj77dTifD1qS7LvjjGdA29mNHmoY
P7Tkd/92a88seG/UfdO8mgT1jlbHlOH/nvBJzXHpYuGUQdQrOan2pFP6HgcQ
PilGIsrJvpgNCJ9U3TTufi2dDeSo+zSlBMjw4ofn2Q23OECN32D9N18ynFcV
9awGP57KpktucPgo8H7WW8HnARzQvCWLYnybAu/syKp/b8wG21MPCI3Ol4Rq
CT2D+z6z/tFHkY49abJ3TxM4u7oqVoBBw376edcIK3UARY0NuTE1DIxcydNq
wWhA/kzFsSsJDKy+qfvzNx1+uPBMp+tRgVlwJXr9FXVjElQrMen0E5oFhG9y
oLivNhXhAMI3BW474vAQv95H59iW3vASh14qNdci8PU7R+oI+5QR/nzwa+Wq
yBwO0F134WVXIRnqrFedfVaKH593CV67dlDgIG8H5ibEAf/NP9X8FnpeMe8x
8k+sypR1EkF1aL7Bc3lX9+MxVIzor9j0vw9xdaZjRH+lMHHTxHx8P030V0Ku
CrAunGGgeQgLhatvfTtNQ/2VBW6l7FgxKuqhaGFj9450jSLPpGb3/N2Z9ROA
6KF8I18yfBo5DYgeypodUfota2cB0UNR9c+y0fk6A4geiucNFzvVr1Oof7Jx
1XubekMu6p+kHh/cH9Y0gvontHwn20zWEOqfrLxiLHf51CDqn9waFP3SxeWg
/onBRGn3LH6/JfyTj5RCrih+fgj/ZLD+jmJOFxv1T3IKRq+/OsoBx8oYlb8P
kqGXztd38Z854KVJSmFdMxnyN1mdkMbPn5PLhPXvIxQodKzPjlPOBsR8Brpr
yBvlwj5A+KkjZ69s3z+nBxB+as7+11oRxV2or6L+xvnbKc8mQPip0drSsK9u
b8C/9VN8VTbum5XK0PyGahPVNBf1Viy2TGOpT0M90MvN1iPVdWFEj2VV4kbe
4ksMjOixVJd+NhLrZWBEj6X9iUVWWygd9VRYj9+sGFPiAaKn4ljjDHfKTQGi
p8I1bT8cFj0DFsxmNd8b5oefbTpOsnfNgrJQeLpgrgB0PlTk1No3jfopTkv2
GJyrG0b9lLeHWlJzpIdQP2WlYI3VmvIB1E8ZLXgkwt7LQf0U8g095cWZ+PX0
t5+qbF7xvuw9G1we0eHVKpBhUkx+mnwEB1wcldy6IJIMPeLBtzT8eajx7bqC
dQoUeCXge4zVcQ7IzL6n0PKMAvdme96X4PSDoMhLxjeVJGHmvK1MflkWIDyW
Ycvu8s4IBiA81q4qN6tuUgfqt2yt8hThC6gC/5vHMuh2Wt/UXAvUjiyxcq/q
xBQ0+6fnYi2Aqn3ras1vOub9TIRhfLQTXAxfpW+EP9+0/UrNj/FlgJjqE/pl
ggwsq3Ok82EyH0yZadTdsGoGfGHk2Amn88NJr9UnBi1mgaCPovb1AhIMOnGS
5ewwg/ouARMBvvVKg6jvMqu1fe0Qvv8nPNZBw7O32irYgPBYjyekbgynsIFx
5pl1eyYl4Fe7N7vveXHA6cPTt4Q9ydDO+jbT4TsHbLl+HvOdJMNKeQHl5DB8
fypd/N7ZmwItLTem3rRng+ZD0zEXflOgvOfVNOMJ1j96MtOvhsVW1TaCVtOd
d0YzaBj1yWe1oy9/gc9Zpnb+RQzs8qKiRj0vGrBP0+QF5zAwoedby3+r8kPJ
O4VmYyMz4IRMpo3IJhI0XnrCS19+FhCeS3Fo9Y6FchxAeC4vT3XZlkQ2kJ84
39fqLA7pe4Kst33F9+Nin/Zd30KGG6qW7zv9jgOu3l/FXZJHhttTw01Xf+GA
8/TRj9StFLjK7tTTY4r4+vMf3mu1zZV3yaU/wWCCbbNbPh2D22JURZupYJVv
11ZbfD198TNXvvI+P7QvY48EG84CwnftSnqvMdLEBrHJ1qfdasSgVemTzqVJ
bECnXFLxP0uGVYfu3p/F3/8iTRSm9JIhrfqO5pdXHNSv8d+i8axB8zEY/GTe
MT+lHSQ6tKseesbAtD7sXfR7tAt88e4scqtjYK6afd9OCvHDD1mOrCr8frtF
OEv2qzQJSuxIrUjZPAsID6bd5TNmpIXvL2ciHmeYi8Hre23mbkllA7s5niuT
VpPhzXD6DVYCfj8FMRGRr8nQsZVWo4uf/3jTsK1CayjQZfy78Ct9Dsifvhrn
390JxhqUK6Xw/f7AUHaEaQ0/7As4kDTfahYQPswSLJaOxfdPpMrxapKEODwY
oWF49x0b9CfdoT68R4aZGySt0vHrVVC2ZpudCAXO21KyJxz//dVe2nwl51kH
+H1110BROwNLv6YRdpWfDn6GbAdxoQwsRiK4MMqYHw7d1c6Yu2AW3FXOeGx2
gATniQ0Nr+LOgLkGGzaUBotBzrK41uYEfP+x6Lef1S4yvHPx3nLHD/j+rDHL
KqGCDCfdMp4dKOL81/4OVf3WwRcK/sijBc5dXLl6fh2aR7LSGEpWuVExos/z
3ICqHb6fjhF9nichLpnybAZG9HmSGGnVwy4MNL+kjqay0vAGDfV5ukVj7B6p
U1Evp6unTUDl0yjyZSFTx9kilAlA9HKihQ9QmbenAdHLOfpMjP5s1Swgejmi
wcfnn2mcAUQvh3ra4mxU+xTq49TdYjAWH+CiPk6Wer5cWc8I6uO8OLLji/XE
EOrjmFLFuKkXB1EfJyNSfpcc/wDq49w5/9R0isNGfRy3xVaBNfjxJzza+M4v
tYc72KiP8zHsh2fvQQ64MVLsstiWDD/7eQQW4+dDk1ZLfVZPhk/UOZy9eRyw
46hPEuUgBX6R1OVK1bEBMU/l+yIp36VNfYDwbJPV3+pklvUAwrNFW3MU3gx3
of4O/9QFZiOpGRCezdtBreCdWQb4t55t8C3J99JMCZq3YrRf2oP0qQV7ZHqF
r+9xPYgMPbjROqsLI3o9mz+/nl9hz8CIXo+CV4TaTvz3QPR69mrkSebE01Fv
R+CApar5by4geju8Ax6sT9OTgOjtFPjNX5D6cAaI6o1VTPbyw+0bli/g4evB
ec02fZsJEiyfU5gkND2N+jp3dZOrGrqGUV/nvZ2fcc3SIdTX8di8pHGoYQD1
dbKDC046HOKgvk5k7G6LbdlsQHi2J4s+bG7IYQOdi6dT2uXIsJ7dSn3/GF8P
lAYZG8LJ0D7FTpSJX88nTA/8mpKlwE3L07zun+aAoDjKxf4ICtwwKto8NNMP
moYNpICiJJT2c1Nr0mIBwsfV1bJVH31mAMLH5bwV5A27dKC+T4a+rtbPwm/g
f/NxG50ypA0iakFS/ERuV1In9jxPXC3VpwXMGfC6t3OAjqVvH8y+trUT0E0T
M4Pw9ffmwsCVlJMMEEU+KSgmw8Cqt8fSkuL54AmVpsXNcjOgUJln6pHAD9uz
dvFR8f3OW8U88QU5JNj5QUDT1GUG9X+E1xgOLVEbRP2fhhtDVpuTOIDwcXsf
OOYcqmIDwsftjfpJbUhmg/rUigjHYQnY2ek8KHqNA+7c+7l6lTsZfiMlWV7/
xgFfZMI7dnHJsOL4tms1T/H96BwT0RseFEgadU4ZucQGStnfzqyZokA3z9va
z6T6/tF7GFTTHQwLbQQN56tuCUfQMHul7v1Cjr+AwoXtX3XzGFh8cUKisx0N
2LllF7kVMLDlpN4KOSV+eGTJS+/HrBlgu3dkh6cGCUrL3Dnqs2wWEL5OYVC0
58diDiB8ncvTMf33+Pqm4eYxK+QgDr80lR5Jwfcbgvf6hQJ0yPD7O23RlHQO
ePJ+Xuy2bDIsa0398LaSA6auK7Qnb6ZAW2msq2slB/ynv3vb8fSX9Z2fYH+R
k3dZIh271O07sSWHCoaewNPBEwwsUmZcRPcWP8TUo7rOgllAeLuBA9GSGm1s
kLHymOeLCjEoqrJi6iK+P+AHFjUvTpHhluSKhkcVHDDjpXXMjUGGlrdymWPJ
HNQ36ogc0E7PiwWuOy+KZji3g48LtkByGANzOKnTt7auC5z6fsPnwU8GFvQo
vNprLj+ktIc9TSycAet3js7XEyVBXcF20lo4Cwift+7GO9sWPfx5t6Fb33K7
GDScsrHITWODpdeTWzJUyXDXgd679fEcIHXO0yAvgQx1g7UCpfHn4bX0/MN1
qhTIPcdOnDHhgL6Xhy/nlHQCRo5/5hH8+3drcO/ml/NDK6NK77/WX8LrySin
PT+LsYHsDhJt/XxxqH167MzoGzYQabS/m36bDPVI42f34Nfr47e8I8vnU+Cx
4tTAj74cYDN18MWxox3AMKqw7HwTA+tQkrJ/3UkDoCo81iCageW56BVnQX54
rEgy6ozYLPA5Ouz/wZIEPxlcdBSeMwuuLvTpOBEgBoON77Qp4c9fg+Eamw8b
k2HuiYFtYvj9XJ4UOvW5hAxXmKZRQ/Hnrf/0gXUbd0XFXKaCDSRXpzOjDOx2
8NX+hZf5Ya9VW2Kw9ixoWewe9/u9GNxtkHvFEX99/QhB5c6jZCj/3XCrI/58
Lfv21nOhdjKcV2P5PjKDA8oz5z4IedgFokvKLe3oDGxxkWvPoil+GHvB8/IJ
01kg4+cTeV9LDAr6HaOr4PuTPeXaj7jPyHCqVs7RHD8+5mMrpeVudoJN7PeC
V6cZWG3SFafIHH4ocnrVRi/LWbBtm7zQQ54YTFpwdM0q/HyaaC5p7fMmw9VH
84NW4+fvkHjcTFbXL6CvvHrxni8MzL5ioU6MuxgsznAdV8J/jweO7DKf+4kM
F/28Fe5ZzgHk8Lz9rRNUcFtu6Y8I/P1So93V7R7xQ/ETz+5o7pwFgRom+3Y2
i0Hh8/LP+/HrrZQe5u14gQxtv7SMG3/lIG9o16K7h2+NP9i20rxX2kYMqj5j
ve/B7zcNkkWDnmlk2NJ27NAm/P5yz/pRjbVgFwi1Dbxphh/v8Sy31y3N/NDg
Sdsbvz2z4Jtn8qZLQWTYZ/wiqRs/HhY9MiaibR1gzjLH+qc0BnbPqfu2SoQY
3Gx+oSMTX+//mzf08bmlnKXihryhKe/kt5Wfa9F8JHnZM6+NjlMxojdFv2ul
NryLjhG9qRbdy8uHWAyM6E1pG5tUUq4x0DylEYu1Psfu0VBvKtG04JGnLhX1
n/pEKVd9kkeRH1wnObd/65wJQPSfgqtXJvZ4TQOi//T4Z6Sr+cpZQPSf9t81
ZPxqnQFE/ymv8YdFafcU6j39nE07+vUkF/WeyK/efDgzNIJ6TxWGISBzzjDq
PZ1+Qvu8z20Q9Z60aK/zTIUGUO9JarPHzP0hNuo9DfKPvf2EH1/CG+Ze9unL
bWej3tOq1GtzhOw4QPzeuoo1NmS4bJ8Ct7yQA7hvugd9a8nw9O4dq37lc4BW
g2HtogMUKPcxVDGwmQ2I+U6ZNl8drnb1AcIrsjkLTC20egDhFa3qzP2ChGmo
J5W5eFfJYpNmQHjF1NWvbdxDM8G/9YoVrR4+951K0Pwn2caRnVv8W7Ag0UiX
pVfqgfFXtaXFL7swoj/1NPUW39kjDIzoTxltCjmxcQB/Pvi7PxX1KIPll0xH
/ahc35I6BpsLiH6UTI+ySB3nL4fzP/2oBbpDPuJ3Z8CdAwuKMhj8UA0z2vV1
9yww+P1aQ3mMBPd89WPOI82gXpRzQcX6x6xh1ItaYf4ii7VyCPWiVBojk8+0
D6Be1NlpWfXcYxzUiyp0BoZH8P0T4RXPzrneSsf3V9EaPgI0GTIcgoA95xEH
LH5/RNfwERkKaoRqjuHXm6rsOQ51AQU+eOSfIebMAV6yDRFjTyjQ47DIRIkA
G0zHpIwryktC28fepHBDFiD8YybIOWfQzACEf0xdlrBgcUoH6lUpPacKHD70
Hfxv/lFzdaO/+7VaMGTWwmsL78ROzMbCm8dbwJuMzprqbjpWFnFicejqTnDE
Nb7XF99P1ed4HjLdywBYk49lsAIDa+O52mfH8EHy4Z91N8kzQE9f1nB9HD/c
RdKe/8psFvj1356iviPB6lOl+Ys8ZlDPatPzrEJLjUHUsyrO7RJxTeMAwj8G
nZoQ1vjOBoR/NFMu8NyD398iV42bX+JIwJ3nbpwxdecAGSXjmzpuZLi/do3P
dBUHBNNeD6wbJcN1BluKzaI4wPaK6MaAqxQ4sSbRIvgqG+w4vnG36AQFvpvX
ezdmaR9g9R8+/uVyI7AXcGa13adhKx3dz//a8QtIllaWMrIYWL6MHNnfhAaG
QGXY1mIGti6nwGSFIj90XnRqPJ8xA+ovSYENaiS4/O066K4yCwg/6dIekmKg
zAGEnyz5VvJZ+zW+v94wR1DpuDi0ENIqOV2OP+8Yk+wfbCTDDam9cYb491+5
223EPJMMj+rEPTiB3++LTTXZDzdR4GVxr5A76hzwn77y8nK1sVWnf4Kb6pQC
3Rg6dk937Pi+BCqg+1d/uTbOwBZoy5GGvflhaPmtrSpbZwHhKUUijjgc/sUG
H+kMv/wSMeiaJBq9DF+vQhs+Ls90IEO+iJVu9fh6VWJifNGORob6l+TvjaVy
UJ8rT/rsknLPeLAxcO6yO+bt4G3GRHzeAwbmnZu817i4C3yZrN5yro2BRe9w
trw7wwcplKQnrPwZkOYgPWdkPgleva0fsd1wFhD+8mfURul8wAEMKCa3RF8M
5pYYK/qls8EtvWKt9yvJcI5ZP00/jgPi+VnhFS/I8IKRP+8Svv5y334/934l
BeqTghTELfDnm4nqlu+ZncBg6Zpv1pMM7Li5jO/lz/wwLWSVYiO+3hEeEwR/
uNJViO/PSPf6TfjF4U7jdYs24PunSOe69k9+ZHh78QH3Bfj1eei6yAUhAQrc
7b45PMefA+QgO08bdoDDywQdZerx9dTNv6qohgYeXIBGrOcMrGwFxbBoCz/8
El9TcVloFt//Snq77CLBBLM4r3rSLNjg/yp7nZ8YfKBeOd8a39/s3bcj7MQO
/Pyfc+M05nJAcuQcy7piMgxzkVWLKeH8oy/Wf6+AP/c4FVSFjE18GWZgc988
pf84xw9rabHry9bPAnrbdLJMthjUdl7Tp42/fs1a9yuDh8nQ6+29BQH46/3y
evKW00KG8x+Gtx/J4gDqfNex195dINLFtbW4G99vdzyi1nL54fTRZOH3+PVb
O/Dqop2mGLwTRPmmmMEG1MMvewSiyfDUojl3ffHj42gS4aV5sRNsG+sz4/zl
m8vDT1hl8MNixc7mMvx+azz9XPLViBjcd+BC1L1UNmgue7B2yosMvVnxt759
x39Pe9dL3/v8C/S2xIl4ljKwJVpQ/JyLGLxvstviGv577BnNjyN/IMOcQ6Rb
B/D9vCpLvXCkhwru2Wd+EsLfT/XDk2WSwfywUvGR06XtsyC8//uRI/Vi8ODx
rl238P2TtSdfnds5MozMYmUn4s8jhCdNlt8YlfP1IZgIccFoe/Df/1xr+wcp
+PPb67Xb76eQYWDUzP4CfP8UnzRv8zleJ8BU9kBsjIG51j2OC63nh2dEc+7+
9Xs6JLkw0CeQDGXyPiysxo8HeU3S0c6PHaAwm5/6kcrAdjSKHuY+EoMXijQY
Rfj6/p+eVGHDi3omoIIKvcOGy/D1jmsrWGCUhj8//NTvYeH/fbBCQ40Bhx9C
f44zn8UsmHP/Zsjyp2TYftxj51/vFz503fy4RScY7h4ouYbfn41ITVbFr/mh
+ZLjFePms2B8xKl54TUynNl3vXoM/z6PRR7kC58Vg42bySeN8ONjG0oOWV5O
BXt519f449fL4vEmKd87/DDmdaHiQ/1ZkHS65VJglRhk61k7l+Lnw69RlPM6
EX9efefZmoqfv1rLPqGYhk4QLLRm2hi/3ziRG0P4qvih3vDBWVn8ecULcLVi
A/DzF+zn6Id/3o9pB4QeBeLfb49R3Tj+/fK7fq6/fYsKtPZ7XOjGj2/NsaEn
PR/FYFTWgFkM/vt9EW89eOI3P6Q5cVP7jWdBsWY5YMbir7eOs1scfz2tuKyU
3yGdQCNnOrJzioHtv2dzuSufHxY2q/iR8fOTH/H2dpsPGVrt+zDii98vXh8a
OV7tiZ/vHn+Bevz1x/V3DhQLdwJVR4NoQfz4rfPevyH+KT8cPXh2z3f8/Qg/
evjyfYeKRVfA9fB975Tb+eFtu7eqkvjrb2Po0Y4Hk+GZU8O9o/jnCXzhv37T
VAdYbknp3IdfT9Wz2FvbZ2LQVqwxLx3/vv/WqxLv9z//VBpquP71tyP441Wf
b1i3+sk2wqv6pQ3s4H9Wi3pvAym2CmvDqKj3duZ+TZPyOB313vjNRfIydjNR
761QZSX9BZeJem+Xl4is45kwUe+NqTLsjAUwUO+NXBn9sGgxDfXeFmYe3Cnt
REW9t/UDG71tSC2o99YzPi59J7EWedVNQcIk7V0lyKv6kB4+3mdxH82fs8wT
6Y6brETz51xeCrr9TmpH8+dOV++/V9DMRPPndBPzwybXDqL5c1d1UrbMSI6i
+XOU3pyPL324aP6cg7bE0te7eWj+3JErnmUB+7mo9/b81cr0qq2jqPfWwu7+
cJkyhHpvT88PX5/Z14d6bwVnB7LVTemo9wal6rb9WPoT9d6sDuxdMjJVinpv
g6FLlSib05BXNTzt6n5k7g/kVTlHu4w6t7Qhr8rFd7LP9tKQV3V1u1bfo8JE
XpWBbd9iltGLvGpL9EaRmQYW8qoi12bKFTRZyKsuael6MnKeibwqZWHdfe8v
XciryrVu99xy4I9XtRg1SpWo+n/Hq17tEJUU6PuMem9fTLbOjD9qQb23hKwU
a3kRGppPl/V9r33C4W40n+6jMV9GVBMTzacbj9q1cE0xExBe1U6jUC/Vrxsg
r/p+POShAx3144zPVgtSajtRH+7iMzHhS4rfUB+uxcTi0JmWTNSH26JtSX4X
9AHNl5OvC/XeD4fRfLljdrHyilf/zJdbThbJD1jDQ/PldHIOO5/m46H5ci+D
IzUunBvDiF6cVd736E2fhlG/LSfNuXRzCxX5U4VX7xu4xxjInzbIKqSff9KD
/GlT+5bIouss5E/tfyqtTM5nIX86utilKlqmF/lTqliRof2RP/5UNXYixNfz
jz+N1Z43L/jH/70/bXu18pX64yzUf4t2lsj9XdaI+m/vj+XwUzo7AeFPg34V
n6blMdC8OV+PFO2iOCaaN7fdqED+OoMJCH+aWy96vInTDQh/qnBUynvhNB31
5M50k550eXahXty8Kx6q9q9qUC8uX/Pzy3T/AtSLIxUGLp57LB3Ni3vh6ba3
CAyheXGB+4agS80omhdn07Mpx7Cbi+bFCW7tKDmtzUPz4pZqqh1isMYwoh8n
M9pl8PHWCOq5pT426DAS7ECedEMFW3rrCTrypHGqXZn1vUzkST0bZUb5V7KQ
J00Tpy/rxe8fhCet5W/y+JLVizyprR49fepKN/Kk8jrrXi+1/uNJf78qvWYn
9O89qbPwxuVn6VWoB9cgwe3fKfQLEJ60r+2wvJMkHRCeNMspu+YJvRvNk3P5
cEbAaISJ5sk5K32dJxTEBMQ8ubtPElZ3iXYjTxrsnneocN0ImgfHPLhpzUNB
LkZ4UmNZ0doIfH0gPGmPUO7j2VwumhfHZ7F8YV3bKKa7SNlq9ykJ+OKeSen7
JV3Ig3rE8NIpFt3Ig66wFAlq+6vn8bcHfWDb3Zz8noU8aMmqZLGoWyzkQV3D
7Ytp1j3IgzrM3fQ2e/kfD1r0QFdEXPSPB1WJ0jD/wC751x5U7uYdY1LfS0B4
UNYX7OqrT/WoD0fXIjukbusEhAftYgoENhxioPly+YKbbx/3YqL5cumWnLdn
B5mA8KA3PtmPH1vMBIQHPRYu3Z+DX2dEb26pUszpDd+7UE8u4wXcmfX6B+rJ
XV/W15JZU4R6coNH7lsWusSj+XAPdZSFY/IG0Xy4sKeC221dR9F8uNSjhbPa
+Pki/Cg0q5fK2c5D8+FoWMzEyWVcjOjLqcXFiVzoGkG9t1j3M8Z2r9qR78wx
oMrztdOQ7wwas5U5eJ+JfGdfrIp16EAv8p3uGgkc858s5DsLkmu/FnN7ke80
/fWzhZ/XjXwn12bdZK/kH9/pwud72Ubvj+/McwlfUyL+732ndYW/pqNXBerF
8XImN6+1awOE7xRRIwkLhtEA4TsZZllGCS+70fy4JSs/jYb3MNH8uDyvu9yl
yUxAzI8LuZ9S4WDajXwnWeh50ub8YTT/zUPFX3LP5zGM8J3hteTfc/HjT/jO
tv3RfCJULpoPdwdIXbZWGcN4517YntwuAcXFV9kq3OhEPpPa2Tjb9pOBfKZe
k/912+4e5DPN5waot8awkM+U3S2R8SqehXwm36MLb7fk9yCfuWOATz4X/90S
PvMCVlK4qqod+cy8o2V7JEa//GufeWJyOPyGRxcgfGbfpc3XL0l0A8JnavU9
2S5diO+3/vaZZztNbpIamYDwmfcXt8gswr8/4TNZ6rvO5InxMMJnduh52fUt
5mF7mn2vP2gQgK8PPRtflz6GEb5Sk5b0YbNhD/KVj0wocR77WMhXsvowz7yv
LOQrz5/PfrvQqfcfvpLwlBGNZ3a8VGQCwlP2MNwPdPCYYAc2uTwsnwmKP9Ik
xfD9I+Erbfy/iGTv5GKEr4zZPuYpt5eHrXda3VO9TwDWDoeKX7jHxQgv6Vid
mk116UVecn3NtxfS+OdTvrH9p3IpBU4ka952Ocz6735yg16QqsxjQPjJwAHp
KIO3dagf9yZtfEKSRQWEn6Rq2cq5qP+ZX7ep0Up33JGJ5tf91pp3WmmUiebX
6c0JTk7TYgLCT5Y0UZIeOjJQj44d62iQye1Cvbne1Zfmma2qRb25FK/llpnk
z6g3V1G0ZPchrQg0f25f+nPnTW6DaP5cZv4N691Go2j+nIm0nWlbNBfNn7v5
5YDPdTMemj/3IMuVyb+NixH9ue+DT+UDyaOoB1fWk5J+f7gNecj5JUyDuqc0
5CG3pTntAHZM5CEpgzk3yn/0Ig9ZdU+ozaOZhTxkhrX8Vl9pFvKQLKnUypkN
TOQhr0x1yute+OMhKxwXlFTu+uMhr5vTXp5z+PceUvm9WixTpwz15IqtFNMO
ebQCwkNu2fvafIUlDRAeUm3Y85yQbzeaT1d9Vnywm8pE8+m0zO4KpeQwATGf
Ljc/UGfkVDfykOmbJJ82Xx9G8+Xedpj4uMSMYYSHHKR+U3+oy8MIDznbLGI1
PMRF8+ey7j5ZDczGsEZZ+sFzWhJwtP1n9bo1ncgzGh50kp99xkCecXws8lUQ
1oM8o9Se4BbthyzkGcvfgA0Bb1jIM8ryKfve6+1BnjFaTsRaVuqPZ4wmj2iz
E34hz/i7TCyLeerfe0aZcc4vukYXIDxjc3zMgqcMBiA846xIqU7FOyYgPGO3
VJ317l9MQHhGp2Oc7VenRzHCMzZU10cOT3IxwjMezDNwZqvxsLZDm2bbSwXg
aQ/1AYlvYxjhEf0Elf3VZXuQR6zu2TEZv42FPGL9lfzJlB8s5BEdisRr7wb3
/sMjEv7wVQvfvvG5TED4w5IHnzUsuUwQrJU37e6J38eU9BX8vZmA8Ig89UxF
piq+H/jbI759WhK92YqH3Uo4GfXbSADm3Pa4TI/jYoQvnDO1YmuwVS/yhXke
ydrfi/HPZ7PXZ+cnCrw9VjJz9hLrH96Q8IVrNPLIvIdMcPHLKqfTJAbIgv0O
AX1MQHjD2AzJ9+nVXCyZez+qLZoESSm/pG238TDCE24xWF6RKMICM5/b5+Wc
p0AtV51HLvj1Ov1Jv9KRQ4HXjhvfam3sRd5w4UCBwhrVP97wKDuh5Hopfl38
7Q0bpYYuZ3KY+PW+MVV/phswC3+NhkUzkTecs0b9wwb8/rNcoXbu0WUC8Jd+
/GBuFRcj/KCdW9Dc9FT8+WHehe/BaRRIaTRfxv+IhTyhiEjYhbQqJjAdXSvS
MKcbjO0fno3D/yZ84cbMgtvh+Pp2SujNd0UqCe42Eug+ReFhhB/cuX1q5qYT
Cyg5vHJaFkSB111YEhIlLOQJwz1uxj/fxASEJ9wj1N40jq9XhB+MAd+b9PDz
qetts+W9BX5/uySf64H/nv5rr46d+blJ3R8QPtBOXIJzRKUO9epWJbk9YxVQ
AeEDY+QTJgUl/8zv694dGBBykInm921Y/uz03TEmmt93KzhS1wUwAeEDRZKl
mB/dGah/10//+LpCmIb6dkm2lgsfna5FfbtYD75tfG8+o75dzcGPKvPPhKH5
e3vBAtVMq0E0f09Wr3Pqu/oomr/3ZGuR4HQQF83f64AaiuXmPDR/bzNlPR/L
lIsRvbteAaszxiqjqD8XmhnoPvSkDXk/xQSrSdsrNOT99iS0q+rpM5H3e3vH
fhco7kXeb5nHtqWXmljI+909NzEQpsxC3m/0zrsFeXuYyPsxAfXds+g/3u9k
5ZySF3VNyPtlCz+0idf/996PLLImwVCqFPXrlMN0Hx0WbAWE91v/3vUmYw0N
EN7vhey1j+SL3Wg+3+TDvVpubUw0ny88t/bkg49MQMznu883GeWEPx8T3m9N
4jw/vaPDaL7eBQm5Re73xzDC+yW4FruaaPEwwvstO/eh7SB+/yTm7yXEnbr+
/NAYVursd3hYXQI6e6TpNvF3Iq/3+kW6UewNBvJ6XguMN79O6UFer36H6dHs
2yzk9V71mXIts1nI63GLh/rt5vQir+dM3y43Z/MfrxfJ5+m1lfLH66k5yYXM
jfn3Xu+dsuQhA8EuQHi99C0zlyeqGYDwesGnVj2dfs0EhNez8L2oKdzFBITX
cxoUq4zrHsUIr3cq7atY8yAXI7zezdAmo0OaPEwpNmTbvAIB6H8iZK5C2xhG
eLsPrV/Hk+b0IG/3XOLYgfvrWcjbfdp9mDy3noW83bcX6wMG4nv/4e0IX1cn
8WHUe6QbEL6OIsunOYnvH7UuPD3Nwq97X2pVl8NtJiC8nZ3CnlX9clyM8HZL
88jqynt42GrD365PtghA+6xaI8U0Lkb4ubqo/qcn9HuRnzvwWZjD+8QCWQYt
dQfyKFDDaPL+Rw/WPzwd4ees7+zf6oi//wKSUGMLnQ5EvmnaL8Hv74Sn0xGX
e53+mYtZPVJxc31Egm7wQ+hmAx5GeLmFpN7xuple0PzG3q7CiQKDvIoiZPDn
2R0yUo+XsyhQc++6PdLMXuTpftR1m7an/PF0VyUexZlkdwPC071MOaPWhK9v
5QcWyGW1d4P33jxfjxdM5OmweOFEa2MeVpV3rpW7SADGa9yMDGrkYoSP+21s
vfh3An5+hseUXrymwJFLC60fRLGQl8vpSs4JL2MCjoaE+85OBlgqWEt1+8EE
hJ/TDeMzcpDhYeRE06TsJhJ05/VcOSDHwwgfZ3D7qdimY/j6abmmQPse/jz5
IcFZvoKFvNzH7xyZZjUmILxcju0cu0XjTOTjjsp7G3bi60u5rPchX1MKvKll
NHDrO+sf/u3otfI0LIEOfO9MPnUexu9v1UdUX94iwZkN2oNV+Pd/eOfyXPYJ
Cqycu7ZnIX68Cd/29Vpt+xCdCQjfxgi/XXcA8jATWeGYU0spcFaIGmHwBN9/
fOH/Uh5HgcJL7gbufs1Cvm1d8FqFFXlMoPPym8XqeAaQPLl/o3kLvn9T1XOw
86VA8cj7D3vxz6t/uU1AJIYGDNdv4ezA10/nn5cdowAJ9htdraPi36/T9Fu0
jAG+3sf46q8pZ4GvQaazY8sY4CBvxenEHibgOzBYZJRAgo8CXhhI4vtl5Wab
zBeXKXAwT/GuPX6/J/zaTYefKb3L/QFJ6oLJdxka+LmRVbh6CN+XfXNROahI
gvyKHYxYfD3acW2JLCWUAldFR0o9wljA+4dJ8c4VdEDaHpbniX++UMalhNbj
JBi5fBFTFb+e0ukaChwrCux6O+/heB3rv3s1c1Whho1ugPBqy6+5qh/rqkV9
vLlxQyZLXlMB4dUYYtzLKwT+zEdUPRqj/W4fE81HHD919cRSfH9JeLU3JyWv
fDJiAsKrFSlNBxj6MFBvr/LEj/QKaRrq6T3d+t5SLqAW9fQMaWaDBTOfUU+P
mpy4gnU7GM03ZH+p2HtYfxDNN1R0StS9uGQUzTfU6eRu6bjDRfMNv8wYKJRa
8NB8Q/9nu2wN9nAxoq/HmbwbFbJ+FPXuRGtUxa86tSF/FrtLx4LfgYb8mXKs
Q0EU/nxM+LMfP7i5Vvm9yJ+t7HQ/WNLIQv6sOPDkpTOrWMifBUt1nXU8xkT+
rL1st8vizC7kz67OVio/lfnjz6azzuafvvPv/dnzDqMK9xslqJcXuQgTaf7e
Agh/5rt5XWGIAg0Q/uyVH/t8r2M3mn8Y9CXccwF+fRD+rPvVtWcOGH49/D3/
sFx5SiP0ejfyZ6eljSxqdw+j+YVqmzs/N9zE15+//VlNAf3KOL4+Ef4swqXk
+7lZLppvmGA8ESvhMIZteWL9K0tFAgouFa0nD1CRH9uNaehYX2QgP7bWoCA4
PK4H+bH+xPpfJr4s5MeKSkI8Rd6zkB9LupCa9ECkF/mxjCSvT8Vmf/zYHbuZ
Uzd3/PFjewNzNRbp/Hs/Zse1Cfsw2gkIP6YtrWk/U8IAhB8L6fIZ6E9gAsKP
re7kf1NFw58n//Zjy6P7PR63jmKEH5tMNZd91sfFCD9GkrrfwlnPw4wKC44s
yheAJbarJO7SxjDCf5k+uDnPBN9fE/4r6FvMk32rWch/5XutyuZrYCH/JWZi
OMpO6QWE97J8KrdiYX83ILzXxEfBter4en5bNCBm2S4mSIGt68E9JiD8V5HY
BfoXMhcj/FdWtc5KZ0seNkfy2/GTOgKwvvRmz9MMLkZ4rumelohknV7kubZL
wI3HPrBA/PtnMydyKbDU9I6Q7g3WP3wX4bkqn0yev3yTCU7HjYtIN9DBiY39
fRYD+Pr+t+9ae/7r8Zuf8Pc7OXYcBpOgyLIT10lGPIzwW5JvTv8s5PaCshWq
fj9O489Pt8ayAL6+OBV7evD3UODz53J105xe5LuWbrR8cc3lj+9SiF7mJ5DW
DQjfNfXwYrQhC79+eSQL9rdukLtMrrLhFRP5LqdRtZq8HTzseYBeRbGMAKx8
kKdk24rvZ//2WrThJswzngXET+eZpSZS4ECup5xqLAv5rfFDSwVOfmYCWDWb
6vODAVo319NK65iA8FxSGqqJiyV5GN1N7vHNOhL0LpM5ky7PwwivVQNDf3fb
sQCrbJC5LYACO+eX6Ix/YSG/NUfNJs5sORMQfms/392rgvh6Tngteevfb4X3
8rAgeojzKWMKfLt+w97WKtY/PFaGTC5t/DEd9NQPBlmOMMGVmNULLt4gQb0e
A9H1pjzMa0ZbnXuMArWrXT414c/nhLd6dlpr3QS+vyW8VQeT0nVrK74/oSum
71pMgWW/69+bhrFAGSgfromlQOv7hzuv4c/XhLe67Ua/5JfNBPf0P/k5hDLA
ryMrlu3Hn0fiY2aDTvpQ4IWa+W62NSxgV2ZxftkDGhBd++ZUE74+MXmhR/bq
kWBIRpZWFL6eJ8l2pk4BfH0u5bwWLWWBxat1tdZKM0DcRbq8En5+G1UK0slx
JBi2qThFfwv++SwWtadepMC+g0mPJvD1HM2P5Nu6fzn2ECic6nzXLUADZ2RW
OE3jv8+ivrAlUgtJsHHD/GVXd/EwrYEuuCiYAldH1jh1FLFA+IqPasek6YCa
Q0srxddzcVLos7DDJKiat1qgEF/PXd8ZrK6zpEAP9+/lFbWsf/gpmz3hu89e
oQOHCV+xDvx6XbqlgjPfnQQTOiM3vcHfz7b3o7fgYQq8fTLLgh8//oSn4nyM
fue5CT8/9/y73Lzw30usoDodf/175zcA67M0kFUosvIdfj9p16qz+LyeBGWD
JLkf8M/D2hyniTlTYOiLE6G1+OvtkijzlaV3gU8BSz7tYTNBrmq9xC0yCebK
Dz+tNeFhZd+eTwUP04B5ee2iBfjvi6Rf+4B/Hwkeq11tEo0f/zlmTrue7aLA
O1fOOonj5yue8qaJZo/v9xlee/Tx65PwT0svpfwmG/Iw1cVOz4bTaUCQr7Aj
Bj9eQ/lW52mG+POPcWrQX79XrRNhdyNdKdCwQ+hUFr7+Ep6IIeewJFLyCugv
mKZmq9CA27jNYyN8/1mZvnftCyUSbLeXWpiC7w8crzcdWLuRDt4K+MjK468v
W74nbZkjCSrwLoRdwe9vPbLyokL78POxxOK3EH4//beeiXj///mn0jBv0V9/
O4IC3e6QmI90QPz3O9ZKmnuLCaD/3/JhQFwsfryJv/8/8y7/f69P/P1/AMwc
PUk=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{901, 2748, 2746, 422, 423, 424, 425, 812, 708, 
                622, 552, 499, 466, 834, 730, 644, 574, 520, 851, 747, 661, 
                591, 426, 813, 709, 623, 871, 767, 553, 857, 753, 892, 667, 
                880, 776}}], 
               PolygonBox[CompressedData["
1:eJwV0slLVWEYB+Bj0sKMypyHzP6BBoeGpUGBRQWBlWWTEBSREY0mGRQ0WalN
uigocFfZYMO1eV40u6zUJoeVLRIabHy+xcPvfX/fOfdyzz3jKtbPrxwSRVEc
7bQNi6IYI5RvlDHy46PoqX0T4/mh20+y/qy9lJG81bVRoH9m38wEfuoOkKI/
Z1/AKN7pblDLQVKdn9cvJIkO3U0OkeasRbeI0XTqblGof27fwkQGdYdJ11+w
l5FMl+42dWQ4u6hbTArvdXeoJ9PZJd0SUvmgu0sDWc4u68pJ46PuHkX6F/at
TOKX7gjZ+lb7UtL5pLvPZP1L+zby+a2bo+sx11HCUV2O7op5GRnhOdv7ZSOf
nc+wd5r3stYcT3G4Xn6TNfK03CgTeeCeKfJV+G5ZJVfLiF0UhGciv8od8qTc
IBPYwx/3z5W9+ipZL9fJoexmlr1CDsqdsjm8M3I4x9w7Rl7VLWdV+DyZGd4H
8xfZRLfrZtq7zPuYHq63f5dneOh8qv21eTtrzHEUhv9MDshT/HXdPHufuYHZ
HNfl6q6ZV5BFj+4R0/Tt9mqK+Kc7wVj9dftKsunVPaaRPGex8JvJoU/3hP9P
hmz4
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{387, 2747, 2744, 596, 682, 786, 392, 503, 557, 
                627, 713, 817, 439, 472, 525, 595, 681, 785, 391, 502, 556, 
                626, 712, 816, 438, 471, 524, 594, 680, 784, 390, 389, 388, 
                437, 470, 523, 593, 679, 783}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVWEABuDj1QyEfkLDda72VtokaZaZlBtbFKSWlppCEIGV2gBR6SZd
pFaW5Y/QJrXABm2wyVZNG7VBjYIiiJ5v8fC+33vuwDn3xisbyxpiURQl8ICB
lCgapN9wkxu84AdZXniI+6xMjKI+23PmybTVM8IK167bnjFHhq2OYZa7ds22
UF/Had6Rb39qnyXduZYhsu29tmR9LaeYZKN93F6kt/OZbbbvtjT9IPfIsl21
leqdzFBmWyB7+cUe5zx5krdscB4L967/ocJ5s0yS9bTpnyjWv4V7kY10247J
OblLpobPlP9ktTwgj8q7MlNe8d6zchFH6Le3yr+ySm6XZ2QyDXQ4N8lpuVMm
yRR5ONyj/pPdeq6MyVpa9Tes15/4vj79N3udC+UFPrLV+avrXfos5c5xWcMd
Mpwvu16iX2SKHbZEuYYWXoff1PbY6wr083xgi+2LbVl4Dtwm3dZji+mraeZV
+I3tj+yb9HO8p8g2Y1uq7+cWaeF52xL0VZzgJXn2h/ZpljjvY5BUe1f4k+s5
HGeCXPuofYrF4bkzQNx+yfYftkRk1Q==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03ecz3UcwPHL3tzZ2xmHqBRJRpnhKCESJTMJnWwyKntUPDSMJqFklJHd
IDsNIqOByMgolArl+X48+uN5r/fnfb/73fe+v+8ld0lr9eQNCQkJfX2JlvZl
n8Zypj6qeRlCT+eWmpH+bHPuoUUZThPnBnpZn9K12lULMsncXnPxjbmXlqSq
+XY9pYsYTlvnbOyKn6GZ+T/dyHTSUcbuO53FEzSlod1fuo7JVKO63WldzAg6
kJ6y9vt1dlwLqXEdZCAjmchMOa87oK/RO64l3pM77H/VJYzkYbKQYn9QX6cP
zeO11LA/o0sZxSNkpbz9IX0j7jn3xmu50/6sfsAzdCQbFey/1zdJ4z4a2f2t
65kSP0tNu3P6Ic/yoHN2vozPNK4rPmw2yUtx/eY87DFnp6L5B32LTuZ89DW3
0kxsNz+uxWhhvkf/0X66QbtpIZ7m+bjvmptB7I57qaUYSU3nWnr+/+dwmXbR
AgzjOed2moOBfBWfuZagU9yzeHb53NxdC/Ny3GNN5FtzDm40/6hvx/NJa+fM
7DDfT2PzFf2YF+KaqG33my5nNJ3jntulY7P5FXJSyfknnRP3IP5PaGJ3VT/h
xXgv6tj9risYE38nuahsf1jn0j/uc7yWu+wv6ErG0pXc3GR/RN9hQPwt8Vru
tr+oHzEuPgfycLP9UZ3HQB6I15LILb73s85nEG2oSxJ5yUd+ClCQQhSmCEUp
RnFKUJJSJFOaMpSlit9xTBcwmLbUoxy3+t5xfZch8axSP67B/pKuYnx8tqRw
m/0v+h5D49mgqd01/ZSpNIj3t/tDVzOBx2hhl54t5lcpT1XnE7qQYXFvnLOw
0/wQqeZ/9TOm0TCuz+5PXcPEeJ1zTr4294jnyZyBrfF7tQgzzB01icHsde6j
yYyignM1Palp+n48b5qfofG/FJ+NZmUAXzj31OKM4DoBYZ5S
               "]], 
              
              LineBox[{146, 69, 104, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$268257#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jnUcBuDXkZGRvfemKHtTFELI0aDS0FJCKZV2jj0yi4wyM9oDxyaU
vSqr7Owyyyy6vp/+uM79+96/53nPeZ9xSnTqntwtTSKR2OVHCtnSJhIzkhKJ
tmRmm24OfehLP7I7Zqa9ZLKwXTeXyvrV5h5U5LyuPzn0s8ztyMoO3Tyq6NeY
X6QSF3QDyKmfbb6H1EyJxA1ypz6VqvbWml/iZi7qBpJL/6n5XrIl/f995lNN
v87ck1u4pBtEbv1n5vvIzq+6BQxmCHnsf66/nxz8plvIUPLa+0LXnpzs1i2i
un69+WUqc1n3Hvn0X5o7kIs9usUMI7+9r3QPkJu9uiUMp4C9r3UPkod9uqWM
oKC9b3QPkZf9umXU0G8wv0IVruhGUkj/rbkj+TigW05N/Ubzq1TlH10r3SHr
YTRnlK6w7jvrh8kf19n8pxzDQftNzLut+9PFOi2N4nh5Xr4lJ8W9lpn53jm1
5Kb43bKX7CwT9KZaXBN5Vr4pJ8gX5PX041/nt5aH9b3kcNlVpiOFFuZO8rJ8
W06LZ0ZmYbRzi8g5ukd4Mj5PFojnwfqkHMvvjmtq3mM9gMZxvPmCnMwK+7XN
m61f4xnrNFSPeybPyYlcdVwb8xHrEbTkfV1R3VzrRynIId1K6ui3mF+nBtd0
H1BMP8/8GIU4rFvFGIrbS43vTGGO6H6Id8D7M1aWsD9f/zhFOKr7kbr6reY3
qEmCD/Ul9Qusn6Aox3Srqaf/Ke4JtUjDOH0p/cK4lhTjuK6Zbq/1QG5nja6+
7ud4HqhNEuP1pfWLrJ+iOCd0d+r2WQ/iDtbqGuh+iXtKHdJyt+6oHMldTHBc
Gd1i66cpEe+x+VR8N/6w39y833owTeIemC/KKayz39C8zfodnrVOom68b/Iv
+RE9rDNxnXVbeSyeAzlKdpPp6UOruO7ySnyenC57yqz0Z6LfV1YuifdWdo7r
IK/Kd2VJ2V6ejmdCjpPdZYZ4B53bQh7QDeG5+HtoGs+JvCSnst5xt5q3x2dS
j47mv+XHpCPZfFyOpnV8R+eU0y2NZ5tSnNS11B20HkozNuhu0+2w7k190sfn
6svrl8U1pDSndBtppN9pTqEBGZikr6Bfbt2FMpzWbWIyN8b/jfiOlOWMbjNT
uMneCl1XynFWt4WpTGN6/H/3LnwiZzCTWVR03sq4X5TnnG4rjfW7zH1oSEba
6U7Eu0sbZjuukm5V3I941qyvyQp0sD4T75UcL5+XGenLfzCQ8T8=
               "]], 
              
              LineBox[{844, 740, 654, 584, 467, 835, 731, 645, 575, 521, 427, 
               814, 710, 624, 554, 500, 468, 428, 429, 430, 431, 432, 433, 
               434, 435, 815, 711, 625, 555, 501, 469, 836, 732, 646, 576, 
               522, 852, 748, 662, 592, 868, 764, 678, 886, 782, 904, 436}]}, 
             Annotation[#, "Charting`Private`Tag$268257#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUYBdADl1ZJpUNaQRpplEZBGqSV7hDFxsLAQDokpLvBQEWlW0Cl
DFIBpfNRBEHX+2M97/72fHPPuXNmJn+Xgc0HJEskEknJE4nhSYlEiZSJxOcp
EonZZmvzA/MeVnKX9XNmgkXMtP7ILBDn8KvzO5mn9fPN983RZi5qyEPNO1kq
f2wW5VvnNDD36gZTjFesU7NA/tvxfvJf8kQa8aGupG613Ib0HNJ11p2J70xN
1uoa6vbJz1Kc67oRlNJ/Yd2WDBzWrWMkoxjNGMYyjtL2f2lfOzJyRLee8ZRx
7CtdezJxVLeBx/T745rxAP/oJlBWv8a6A5k5pttII/0B6+cpwQ3dRMrpv7bu
SBaO67rozsrDqcUmXWPdQfkFSnJT11/3d/xONI6pK6/7Rn6Cu+PzrJMxS/7N
8a7yubjOjJFzU1t+M+4Blsmb7Wsi/yS/yEg5B6XkV800LGGh9RSzcFxv/nXe
APO6foE5yRxv5uNTmlgPMzPF57DKerp5f1zj2O/8B+O+0c8xn4xrYGaN+zT+
dzM5s+VJZkF+d04387xuBGPlPNSR3zLTs1zeYl9T+Wf5JUpzSzdQ9488maYx
dRV0a+VOZOWErrvuQlwL6rJV10z3i/wyZbitm0JF/TrrzmTjpG4bzeM5sh5C
Wf7TTaWSfr11F7JzSredFvpD8cxQjkQ8W/rK+g1yV3Lwh24H05jODGYyiyr2
brSnGzn5U7eT2VR1bJOuO7k4rfuOlvrD8VtTnmTxe+ir6TfLPcjNGd0uWumP
WL/GgyRnrr66fovckzyc1fXQXZRHUY/dusd1R+XXqUAS8/QP6bfKvcjLOV1P
3SV5NPXZo2utOya/QcX4HtZp4z0mp+Ap+UbcqzRjvnMe1m2Te5Mv7nPrJObI
5x3vJV+OZ4Rxcl4ekd82M7BCnmbex/f2tzGPx/c2h8b/Z+bkEyrF/2ami/cj
i62nmkXivUNK60HmTXOhOdWcYN7LZzS3ftfMHPdy/E3rGWaxeI/67Brmdl2f
eK7lbHFu3OdmCubKF+zrLV+JZ4RHecc6IyvlHxxvK/8W7wIqk4qn47mO+44W
8f3sq6nbIfclPxd1fXRX41rRgB917eL5jOeQKqRmkb6WfqfcjwJc0u1lMbUd
+07Xn4Jc1u1jCUtZxnJWUMfeXfYMoBBXdPtprz8RvxVVScNKfV39bnkghbmq
O0AH/cm4HlQjLc/obsVvTEtW2VdPtyfuJ4rEcx+/HfPka473la/J42nIQV1H
3Sl5GNXjHrW+I96fcjoGy7fN6UyU89NKfs/MEvdZvDutZ5rFWRO/v79bP+67
eM7MQeYIM3u8UylqPcRMFfca860nm4VYzf8lrQ4i
               "]], 
              
              LineBox[{1269, 1174, 1100, 984, 1374, 1255, 1160, 1086, 1035, 
               948, 1352, 1233, 1138, 1064, 1013, 985, 949, 950, 951, 952, 
               953, 954, 955, 956, 1353, 1234, 1139, 1065, 1014, 986, 1375, 
               1256, 1161, 1087, 1036, 1397, 1279, 1184, 1110, 1418, 1300, 
               1205, 1442, 1324, 1468, 957}]}, 
             Annotation[#, "Charting`Private`Tag$268257#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8zlUYxvHH3mTvsiMzMxQKEZUtIWUUSkZGoaGsSslIJUQhIyNCGdmU
WZS9s0MhZKR63398Xtd13ed8f9/nOefc5/kV7NCjafckiURiQNJEYnWKRGJR
qkTiLsxImUg8jqy4rL5LrRZ+lHugAtaoL1YrgJlyI2TDX+q71R7EJrknKmKt
+hK1gpglN0Z2XJTb4Dj/Lq6Yt0d+CJvlXqiEROpEopvaFX4C1pn3rVwIs+Um
SG/OK3ICOeRLtC1O8CNw1TN75drYIr8Un9kzg+TUqCwnkV/kr/L38dP4iXxh
/gM+J+ryC+izdL2/+R1fGPXlr8wtST+WW9GmcgbaX25Mk9DqdAZ9huaMNeaf
wqPyyVgvOiU+O31Pzk/fkZvTzLE2dB695t37aB1sNa+c+kS+d6wt/yafBlXk
pHL3eIafhCLyKDkXNvg7S2kRzDHWDLliL+V2OMW/j7/N2x/fH9vkPrFG2Ki+
TK0o5srNkRvX1X/AcvVimKfWAnlwQ/1HbMJmbMFWbMN2/ISfscJzd2O+Z1oi
L26qH1B7GNvlvqiKHerfqxXH1/ITyIdb6gfV6uEnuR+qYaf6SrUSWCC3irWO
Myg/jdP8SPxj3qHYX/wsv4wc1u8tOW3sp5xM7sH/zX+GovJoOTd+8fwqeg8W
Gitl7BP+ST4jP4BvQpPS++lM2p7eGWc2zgkek89EL9DP47zEeZTvpO/KLWiW
ONt0Pu1Ib3vvYf4RNJB3mH8vnSS3jl6Rc9LBcrp4t5xc7slf5yejmDxGzoNf
/b3VtCS+MdYad+FafF6c5UfhX/OOxDuxU+6PB7BLfY1aKSyS26AA/os7I/oe
a42VxmL1tigYvY+9xtapl8ES+SkUin7FUbWGsc78ANTAPvPXq5XFt3K76OHo
AxyLXovvww9ETew3f4NaOXwnPx09Emde7oDf+dGxz/gt9gO7+FdRCwc8v1Ht
XiyVn4kzED0Qe4Fz/JhYXxyXH8du/rXoNWs8RE4f96acQu7F3+Cn4GD0kVwe
y+T2yGTOQDlZ9Fb0E+2E8/zY2BfjI+SsSCGfoI2why9v7DP+9ehTfiifAbX4
OXG/qKfkX4pn6M3oLzo9+iLOn3w3HSs/QfNGL9KF9Dl6KHqbrxBnT15ufmk6
Ps487SDfQV+Vm9Lk9AE6K3o9+jvuVlzgK6t/wX8YZyXuQz4bUsonaWPs5d9A
baQyp7faLf4LHI47Rq6IFXJHFI95OBJ3j3olfC93Qom4L+J74A9+HFLjVPQo
9vGD4g7znmFyRtSJOXIf/h9+arxD/lDOh6Nxv9HKWGmsjLFP4zvymfnXYo9Q
g58d90TcObRznBO1P+UqdKrcjn4UfUHfl1vS7PEZ6NdxBmga46djbaMv5P1y
BTpZbhO/C3GP0uFyM5opzh2dS+saS8P35W/HPcl/yU+LteHH8flxLO5rWgWr
jJU1NiHWjc/Cvx57FHeFfJt2wUX+4+hb4yPlHEgrn4nPgQP8W8hn/G35jjhX
clq5H/8vPz36L34n5PuwWu4cd2rcO3JXXOI/QTqclZvjID8Y9aL/4jdGrSrW
yF3ifMY9JD+Py/x4pMfvcgsc4oegfvRS/D6pVcNauWvsKTLgXOwJDvND8Uic
0/gtU6uOdfLzsV7IiPPRQzjCD0ODOGvm71C7H+vlF1Aueh4X1FrFmeKHo2Hs
tfk7o4ewQe6GrNbsDTkVasb/JXGP0f8BU6RDsg==
               "]], 
              
              LineBox[{1899, 1779, 1690, 1552, 2030, 1881, 1761, 1672, 1612, 
               1512, 2003, 1854, 1734, 1645, 1585, 1553, 1513, 1514, 1515, 
               1516, 1517, 1518, 1519, 1520, 2004, 1855, 1735, 1646, 1586, 
               1554, 2031, 1882, 1762, 1673, 1613, 2059, 1911, 1791, 1702, 
               2090, 1942, 1822, 2119, 1971, 2151, 1521}]}, 
             Annotation[#, "Charting`Private`Tag$268257#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFGUUBuAhlFBCQlIBpVMaVLo7BJTukO4O6U5FFOnuklBBkQZJwSAk
lMagpEG83x/3dc7zzM6y3+zMkqFFl9qdY0RRlDZmFHWIG0Xp4kfR/HhR9A43
5a3Mpph+u64+CTip60h6/QL5XW7J25hDcf33ugYk5JSuExn0C+Vi3Ja/pY7u
F7krGZmrK6HbYW9IIk7rOvOGfpFcnDvyd9TV/Sp3IxPzdCV1O+2NSEx3+Z45
mTOON5Mv2geRlyFyTGbZuzj+pn2xvQR35fby3/bRbJfrySfD+zLenpDM9n7m
U/NT5ntdKXmXvXE41x6fV+w9zPvmInOKOd1MyVp+c15z81J4D3OwOSmcx0ry
yR+ZsVjCbPkzMw3r6er8jOGYfpZZ0hxhxuFfxzqY/+jGMNWeLHxX+vfNU+Gz
McGeiCz2/uYzcwYLvK60vNvehCT0lB+E9+Ks4y3ky+Gakj98L7pMuqX2UtyT
d7CQMvo9uqYk5ZyuO5n1y+TS3Jd3sogeZHFsub4MD+RdLKYnvehNVq9Z4XhZ
Hsq7WUIfsoXrqC/HI3kPS+lLdsdW6cvzWN7LMvrRnwEMJIfXrfaaCjyR97Gc
svq9umYk47xuEDn1a+SKPJX384HudLh+ZGWFrpxun705ybmga6m7Er5zCjBY
lyvcK/ZKPAvPonzTPpYDcn35jL0X2Rgg/xfuE1Y6Xl7eH541s0W4F8yXwjXj
1XCe+dBcbE4L97OZinX87vxW5tVwP5hDw3NlJgnXjoLyUDN2+M6ZI39upmUD
Q5yfO7yXfrZZ2Rxpxg2fMfxOmLd045hmT84P+gbh2dD1JjsD5efhvVnleAX5
gL0lKcLr5Efmx/zheGv5mn0YhcL11OUJz4y9Cs/lgzTUnZX7kIPVuorhM9hb
kZKLuqG8Ff4muSoRh3RrGMZwRjCSUYxmDGPJ67wvvb4aMTisW0sl/UG5Nam4
pBtHPv1GuToxOaJbR2X9IbkNqbmsG09+/Sa5BrE4qmukO2fvS07W66roDtvb
koYruja66/bhFA6/BboCus32msSms3zbHM8xxxvL5+39yMUgOWKmfYPjVe1H
7O3CPWp/OdwP4Rqbj81PuOp1beUb9hFMsSelSPjOzBfCbwJz5Znma+EaMtF5
Bc0t+jlmLXOUGS/8ToTz5C7mHXOhOSHcE+E+D88wPzq/iXlBP8/sb040E5M7
PG9mDL6wzzBTh3/XOdXMo7oPw71qTxA+U7i+5hNzOte8rp38Z7jHKcokXSHd
V/bavEhX+W74dznueNPwnIXnljxs1FXXHbO353Wu6yZTWP+1/B5xOKHbRI3w
t8kdSMcN3RSK6L+R6xCXn3Sbqak/LnckPX/qplJUv1WuSzx+1m2hlv6E3IkM
/KWbxtv6bXI94tMt/L8T/u7wPdtThN9C/gd1diWA
               "]], 
              
              LineBox[{2530, 2428, 2352, 2232, 2642, 2516, 2414, 2338, 2285, 
               2195, 2619, 2493, 2391, 2315, 2262, 2233, 2196, 2197, 2198, 
               2199, 2200, 2201, 2202, 2203, 2620, 2494, 2392, 2316, 2263, 
               2234, 2643, 2517, 2415, 2339, 2286, 2665, 2540, 2438, 2362, 
               2691, 2566, 2464, 2715, 2590, 2740, 2204}]}, 
             Annotation[#, "Charting`Private`Tag$268257#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{385, 386, 384}], 
             LineBox[{906, 907, 905}], 
             LineBox[{1470, 1471, 1469}], 
             LineBox[{2153, 2154, 2152}], 
             LineBox[{2742, 2743, 2741}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution 2\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJxc3Hc81e//OP5D4jhGOMdooagQUlTSuC6SjIYkSUglIyMjGRFFVlaSpKwo
VEaZiS7ZlDLLHsce2fM4+D5fv9vveT6327t/urmd8Xxe1/O6Ho/HlXuPHTfu
6NxiJhAIWZwEwn9/7wxdTYwVfniCQDDmOeqsWKRZxHZu0BwB1/GiLomFcFTL
dYidxagOeJOaavIiPiOV0FPFyedbgGCZIEnXpgTd2kfj2s/VA1a6kvR/v/2J
zkremhY43Q+8cmi86cuN6HOTh1O14jBQyPvIbDrcgo7ySWWweI4DQWP/odXH
nch8JTzmrf4UUDB5ZvMxoAfdqRiSzzg7AwYRexh/Ri8KNGDdtWo9B0ovsrQK
nqeim5X3zfZbLICs4qytqipU9J1t8wWrK0tAaMQxNj+kF+3n9YocuUsDhkJn
t+YsdCOT2ePS56zpIKGOV4hHsx0lxJZvWwxeA75n+bht2JtQVohSe4MOAXaP
sr60+FOG7hYc1445wwRV2eMztC2DAKp5OxNwlRkeHv6779j3X8Dy9JEiS/0N
kLbkK9gj2gVep+zPsbrNArsHCIffCQ+Bp7NFD+2cN0IPl65Mu+gJMPje6Z6F
AytMS6g1dLg/A8rUwqMePWKDbyn5c+Yh84DpfBs11IsI8zgJASuCS4CgnMsU
78oOTQS5d/NdoAF/wcWzDX4kuOuLoXG1Jx3YGdwsWfTmgF+Vqx9Y3FgDvQ8V
TMFzTgj1RWNnJQmQ8uxlW0ACF7TZe6RBR4gJvuORcq18xQ3flWWL6S0wwe8O
Iqf2fNgE9zL5RoqMMsNY0fhtx3V54JJdTNft+g2wyJ1GsKjjgRquI20LOSxw
hxYbXewyL7x0o16+/v1GmP1b8klrEy/cs4fEdMmHFQZVrMmJGvHB+PXt9rv0
2eAzx5HbJh18MLvJZ+tuGht05xfetPMKGdYQCnPvWxJhquTGmrs9ZMhz5qdS
3isiZJ1j2vzdmAI/3mL9vP8ZESbLfXoQO0SBTVf9Nz4MJ0LJG+/PrdrwQyUV
IZur0UTYrvHl86UxfrjH59f4yDsibEh0kwGOAjDssDFdOZ8Il7IuHNs5IwAF
XzY4PK0hwvV8hxxfW0GY1eUk5dtJhFpyaqfc5wUhP3lvhNkMEVYa7bO0chSC
rr/FJ19tZIfpmXaL6+tC8Dbr3n6VLeyw5mm7/bB5Bij8+YBl9IcjEl3Ne716
qAooxmikHXR8i/x/FfVf0msCs/FFU/tOfEX3Zi/yDV0dBTrb1u8vXmxHPiwS
83uiJsAx7dagQttuNGZSZCF1cRpsnyw8zS3Ti9x5nKX1jGbBcP/LI5EUKlrg
+X7qxe15MMosLrXHiIrCzWuu/jJZBM9K/worrfUi16CfjlLmy+DHBslDZb09
SJ35Wu8ruxWQTaqLaWrtRITqh0k7PVaBdhtXZPLiX8RiHGP56+U62E+hHfi9
+TeKEC/kz/9NgIeSbPM79mYjUS1KF12ID/bRvV8cmWGFPNvnzha/5oOnvx1W
u5rOBv3LNhz/voUMfbsO1r9QJMLwuKfWP16TYe18icZKEBG2hHhPR4tQYF2c
q8jdF0SoF976Y18iBUp8/9v65CkRWlSnDdZK8cO/8vsSQp8TIfOfT16pH/nh
1ydCbSLxRPhnYbOd5j4BaCkpUKaQQYRKbNqZOV+EIH91nDEPDzusVvL+Mm4e
B3Y6LrcvKugi6r/O6y7zpcCsYa37UH8MkppYXvh4pQGYzepkLZXnIkr/8El9
zRFAKogit4u3IRMOSZ3IJ//Au2KBhOBHXUhSVmLDcPMU2MRTynWnuwfds9qX
+ah5Bnj5llwVGOpFxTk3D9aMzQErkfZg0atU5CYo1uvZvwDCL705ErCLirbX
OFA1e5ZAhV806wHQiwoDJr+WzNBAMlU+YMdCF5LrumaRP0cHVUlPXnzIakU6
D/aXUsnrYFv9kzy/7nqUdOW+y6mnBLjj0l9LroMI3eaKUxhb4IVGI0dz9hSy
wl/2rmDKnQ8+uKT9wt6HDXK/XmgMW+GD0t1Uk9ktROjX9rdowY0Mc68p+6V6
EKFsqY3DkhcFvh0+070B2y9Ej4wDh9j5obh7nPoPbD8JbEs3vxjMD8M+zoRu
jiFC/XhLXm0uAah7QLps9j0Ren1GQWGRQnBPcFFiJ4kdCpW6nfwXnAciNkQ8
qax9jIw4w/8+cvkJCisL+X/1fUQtzKjHyWYMHMt42J56twOlru6O+pI0Cdh2
z7yeFO9Bac90flnXTYO9E8Bez6EXeed8S5EcmAWWer+D9Q5TkbS1sJ7pyDzI
5eM8OaNLRe/z7P9s61wEI85L6tw/e1Hzud0bSRPLYO5eweCKUw9qcvvF6jSx
Aq7p1mbUx3eguqzEnqCNa4D7dKd2KuUP0qmyNQwr5IPRv22C3zezQeZ/PO+m
j5Ah9WGvbKsOEcaaam2N/0aGG7V2zG3D1ued7yobZQEFWriGJy9GEOGD66d2
mZdToFr7Xt0CbL1W8X+MvnWGHxZIem8rxd4/d7Wnsa1DCGqvCYcf4GeHVUEN
6vPmoaBqOp5TxFIBqQ7aleU0fQcuIT/49PdEIfqqoJf+1XpQn2yEGhKz0U3D
rI6w78MgWv9HhaJ/K/oVkup1duM/YGEb7K7G2oWqIozq1F5MgZDC/NaQnB40
E8UxE/V0BpgLGsvdwOZjF/Fg2s2Pc0B7IIXtih4V2d75naj/bgH0dZS2KByk
osnh8s3tr5fADsuHzh8setG92sOSf7Jo4B5olW107UZVw+c0vTPpYMizLOS+
dxtyC1mZHK9bA0e6G48+Xm5A0nNtkpwOBIgcJCqilUtQqG3/NeoAL5xIki12
iGeFMtuOKRJt+OBztb5bEbZssI7NLm5pjA+6rw+rTZCw/bzkZsZ5mwzDNETp
Enex+Srpv3hiigyDmU6e7Mbie3R7XnnHHQrc9ZvA642tzxa9TP3bSxS4uNyz
VwBbn6JA+mqKBz80Yt7E+gl7/xYnXqoOnR+qRuU+HkohQnH/RdqqjxCs3Rke
fILIDtdOKXybis8CKvrxdRWvHqBvLLuUii/XAAV30QSlTaloz/0A1/T+UaB6
5/IPmcF2JPAwucJOeBJcNOvxc+3qRmdofq9+PJ0Gag2zt4q1exGhL3oUJMyC
3L0vNHT2UNHTb5O1q6nzoJTbc+iyARXFbhJ+OR+7CFZ/k318BntRso3rsej3
y0Dcx2dDVloPCvkmcNc/YwW8m/4hQYOdyOJbeMnl76vgi4vh220cf9Enh/2X
Uj7yQTnHCnSlhA2W6wfaX5Eiw2iHDRESakQo9GiiNCeNDJu1mnzysPkRl7h5
33QfBdrOPJIWjiTCUddQF61sCiTKEvaHYuszavJj8cuj/PCKjrLoa+z1F/uF
VNR/CEEC5964RD52+OLFOfPJ4GQgoay9KcPLDD2c11xXEqgABdt2l20iv0GB
lTMHAyjTIFPDw1iNrRctH79oa715FpBfOpyRWu9FV2+GF8ntnQesdpox5lj+
8UX3hJN3LoJXIZIvFclUpPVB5EOB2DKYOGW+cIKvF2nJeRAlOchwW8RmLVkp
IuQsUuDvfUKGLcbX+WYfE2HQfKJ5/SYKPHY19MpKFBGWvBcToYRToDzfFZHP
2HgUE9M5mbfwQ6hybiQW24/74feqEbevQHvXq1qjq8GI1Z9qRpacA3kzKsRX
qlRUtflsV43EAsjsUb4+cYaKcq+Vk1W3LoHR/KM+tem9CDx80RagQYZ/XySJ
vDHG5vN0ikPgbzJkkzKLF8XqhwKDnaGL5yjwut164Rq2/vg0Vuof/aHAcAUd
Tw5s/i/4ptyymRCC+rtyOYsE2WGFnL05q4Un2LKLnP7qEQXdvVHgpFtWDExO
2iv1uD9H/RuTVWU76sD1a48bf73MQoFRQpIyHsNgnp5/+bNiK/KpGxGULBkH
5+SNRuIrOpGQ+tKhBecp0KW45tEZ14MyM5b5ku7MgKF5dkfub71I/9N2y8yg
OfD72i8ltotUZPFq18ZTfguA9ViC56ZjVKTvcueg2P0l0Jo6WS7s3ot0J9u7
r0XQgPTwE+VtX7oRxVbtq0UIHVi67HEcHWpDIZEmrA4Za6A12FSg4FEjsvse
+OjODSz/h/dJaIWUop0ifvNGnbyQb/zRY7twVmhoH6NAucUHN5BN82xvssHP
RdKPpfv5oN+9hzveMBMh8v2p9OI6GcorHz+7aEuE5xbmQq4Mk2GxxKfmOWz/
1g0ZTp4zp0A6T6tOEzafxaWZVixTFHho4dujSuznJO2xpgYnfth6gVC7AXu/
27Vbmk2z/PDoobY/g8lEuOBA/qzgLgQ3za5++MfKDh3Ynt53eP8JBO37Q3s2
7oImvWzHjE9XA0MN1xvTR5LRubyJcs34UWBV1krwj2lHtSVDRmfaJwAx7UWu
eHI3ep22k/m+wzSoSdF2ksLy9bdlfw4tz1nAlh7wVVOYisrMWwI0A+eBZ9ho
K68hFUUdvUvr9VwE7tIXf+TO9CKe1Z36VP9lkGuyyXhfVQ+y6imQ4gtbAY2x
fJTzIZ0o+2Sg/PG4VWAcLJHw+tFf1FMZfiE7iQ8eX7pfcSefDb7jPn05eCcZ
Rr5R/34fEGEzD4yCb8nw7vXKZxvCsPxz1THXcw8Fnin8vqUU28+ivgpvij5Q
4M3Cflt/bH94GaY1ystj9ZKCgzsf9rrFNoXlByVCcJY+9tiAlx0+2EKkzsQn
gtW6jW/HLK+hz/YRma0by0GBQtIBN7d41OYW/Fpxfgo8kvM6+nq2B+XrKoc6
L84A/o38LXdne1EI531XD4550FLj+CwCG7/X2E/PZxsWwbr0KiV3GxVlK1VX
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
//1Cx0dtsYcKFqqODNxG54PaaD8yav8Pmn9img==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{565, 3251, 3249, 564, 968, 860, 770, 697, 640, 
                603, 987, 879, 789, 716, 659, 1003, 895, 805, 732, 1020, 912, 
                822, 1038, 930, 1057}}], 
               
               PolygonBox[{{1054, 3248, 3246, 551, 552, 553, 554, 958, 850, 
                760, 687, 631, 593, 985, 877, 787, 714, 657, 1002, 894, 804, 
                731, 555, 959, 851, 761, 1023, 915, 688, 1009, 901, 1045, 811,
                 1033, 925}}], 
               PolygonBox[CompressedData["
1:eJwV0rtL1XEcBuCvWZl3MzumQtmiSyDkZt5v7f4D6dFKK8o2bSpSK6hBMMK8
dRu6aGUOLlY2l+ZiLbqUmpkuQZCD4PMbHt73/XzhnDOc4/ErTZf3hBASmGYi
LYRxmh3L+JwYwhn2MWPfJIXndjk/9EFaOMUXt2b2897uIZUXdgU/9YfEKSeN
dF56q2RFH6KVCjJ45V7Fqj5MG5VkMu5ezZo+wlmqyGLCvYZf+ijnqOYgr91r
WdfHOE8N2bxxr+O3/oh2aplzayGJD3Yvh3hr17OhP6aDOubd4hwg7A1hQObJ
j976WLG7OMqi/V/e5SQ59qRs4I++I/t5om/K6xRFv8XnDckL7kuyk2y3mEyU
D2SBnPP+T79Drl0iU+WYPCbrvX/VW8myk2WCvC/z5az3v3ofMfuETJGj8pa3
VdkdfVb0X3EflN/ct+U9Sjlsv5ONbOpP2dJvUMxFe1lejX4j83YDC3pb9H18
sm+zpl+jkO92jCn9NFv6My7RSC5H2AXYiVdk
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{516, 3247, 3244, 664, 737, 827, 935, 521, 642, 
                699, 772, 862, 970, 569, 607, 663, 736, 826, 934, 520, 641, 
                698, 771, 861, 969, 568, 606, 662, 735, 825, 933, 519, 567, 
                605, 661, 734, 824, 932, 518, 517, 566, 604, 660, 733, 823, 
                931}}], 
               
               PolygonBox[{{995, 3250, 3249, 602, 639, 696, 769, 859, 967, 
                563, 601, 638, 695, 768, 858, 966, 562, 600, 637, 694, 767, 
                857, 965, 561, 599, 636, 693, 766, 856, 964, 560, 598, 635, 
                692, 765, 855, 963, 559, 597, 634, 691, 764, 854, 962, 558, 
                596, 633, 690, 763, 853, 961, 557, 595, 632, 689, 762, 852, 
                960, 556, 658, 715, 788, 878, 986, 594, 724, 797, 887}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVXEcBuB/JhJ0naqFOZRXLVJQCuoz5NzwEYRGyyGHjbmpoHKMFhHR
IhfN6aqyrDaVlStTG6xF00bdqKUpFIjPWTy87/s7VzjqjdfUH6xLCCGsYZj+
WAgDbHfcRgH7aWWAZQ6sDeEF+fo+WuhnKfqs+3Py9EuMsME+wSTVdjMP+Bv9
vNsz4nov70i3a/lMld3EfRapdhsiV+/hLWn2cT5RaU+Qrbfyi1N2kTzHPPfs
Bar0p2zV98he/vPVzpftzNBtl8gLLPLGviITEkNIlenymPxIhWe59g09JnfJ
DNkplxmP3s2+qifKLLlRtsifNHqeY1/X18lCuUmelXPc9fyyXOGPnupZpf6E
LXafTHbbLXv4xxf3azLJPU+eZpou92J5ngWG7RR5lA+U2ztlB0uM2ZmymR80
2DvkGWa5Y/+mQh8kR58krrcxRaf9mmT9CBOU2e/ZrDfxnXr7NvOU24/J1jt4
Rcw+HP09KbVHyYj+13wj+lLfYo4y+xFZ+kVest4+FP1O7LVPcpNZSt0ekhm9
E6u/hGW6
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt02dsllUYBuCyh+y9peyh/GGUXQr+kL1klgRlD4FgFAQUlI2RIQqI7C0o
Q9EylCUQNLK3AaQoyBIIQ8OQ4PUk/Lh6389p+vV7zzlvYq9hHYZmSEhIGONH
5Lt+5OAvNpsPyZ484G1zmnyVW9wzn5NDaKkvlzW5oJ+U/Vis75WdeKbXZJae
yK/6x+zQ2/JI78V6PZnr+joyMsqck+/0d2jFCnMtfteXUItPzOU4qE+nN5kY
be0FvtdH0JraZCYLWcn2fB9ykaaPpA11mG2tPIf0GfQhO+9Zy82W2DvaksSn
1ipwWJ9JX3LwvrU8bI1noh0rzbW5qC+lLp+ZK3Ik9ot+5GSstbxsi2eiPavM
dUjXl1GPOeZKHI09Yafejsd6fzboTbihn5ED+Uo/ILuRKfbLPE7mY7t+WL7O
GH2LbM5t7pvPy7hIj+lgXi2T4vO5ZD4l+/OQ5eZ9sjN349LxR9wvnlLf0lxZ
mWscMx+TvfmX2eZdsj1P9ItyOAP0jTKFm/pZOYiv9Z9ldzLH+Zo/kPn5Ic6Q
rXqLuOd6R9bodeN7xT2jAfPMVTge58tANpmb8nfcW3LzobkAP8Z58xpfmuvx
Z5w3DfncXJUTcd4MIg/jrRVkR5w3nWjEfGvVOBnny2DyMsFaIXbGedGZxnxh
rTqnYj95k3xMtFaYXbEPdCGZ/EyyXoTd8Rx0pQkFKEghClOEohSjOCUoSSlK
U4YXKUsi5ShPBSb7/KLsiWelGylUZIr1YvwUz0V3mrLA2kucjnNgCJWYaq04
e+O5SGVt3CEux7tBMxaaX+ZM7DtD+cbcjFvxPlCZaeYS7Iu9YJvekn/0HqzT
G3Al7jj79S5k4BXzIlmDs/px2Yf5+u54L/hPT5dvMUz/Nv4u7k+8S+bf5GA2
6r/I1Hi/yBLPwwiexT30+49kSa6y33xEvhHflcnm7bIVd+K9MV+I/xnvDP8D
qh66iw==
               "]], 
              LineBox[CompressedData["
1:eJwV0jcvRWEABuDLgB+hjurFjE1NGDAY9ERiEDXiF4jOrpsQBnViYdAHiUSi
RCKixaAsSBDPGZ687/ude+49OblJjW3lrRGhUKiXHOVBzpPPtB3mQh9nR6/g
V29nXc/nVV/hSK8mimR7SMayp5/KRvr0LVnKp34j26nRl2QuLzza57KZbxbs
PVnFB5Hc0c0fBa7PyEyeubTPZFPwO0zYu7KSt+Ae+1Z28UOHvRF8T3Bdv5Qt
rOrHwfMRTYo9LOPY1/vZ1sv40mtZ1vN40hcpZNbO4kqfpJNURpzFc6APUEcR
aYw6T+BQH6SeYtLJIEwmWYz5XCJHwXungRLmnGVzrU/RxaZdyLu+xoleSwz3
9AR/iEj3iX88akng
               "]]}, Annotation[#, "Charting`Private`Tag$268347#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GV4VnUYB+ADjBgMBkNGDJQBknbR3dL4VWq0EiJhe0lKKIhKt0qZ2Era
AkpLqaS0dKOXcT8f7v2e33NgO9d7/ufNzhnceVCuJEnW+5GSO0nezJMkNdln
fp2HeYC85OMt12qx3zyNLtQkP4vta3PAPJ2u1GKDXRfysFIfSQGW6HU4aJ5B
N2qz0a4rKazSR5HKUr0uh8wzeTctSbrLOvxk3428rNZHU5Blej0Om2fRg7r8
bNedfKzRx1CI5Xp9/jDPJod6pFGYt11rwBHzHHpSnyK8Y9+Qo+a59KIB6XGv
9o04Zp5HbxpSlPfsG3PcPJ8+NKIY79s34YR5AX1pTAYf2DflpHkh/WjCJrse
5GetPpbirNCbccq8iP40ZbNdDgVIUjx3WVquc20cR/QnuZmd+nX5Evdwk/6h
bM6f5n/kVN4wn5YvUDnuxe+bIx+x/10+RoZdZpwLOUNmyU2uXzFPoKR+pywk
F8hbZDPXt5h7UlRPlbnkNFlGfuX6RfM4MvXbZEE5X77o2lH5VPyuOCv2s+Qu
+xvyZe6lhP6RbMHpeCc4Yx5JFR7V98khcY9s1puz1dwr/h5f6+M5Zn6a8uzW
M/nY3JIz8T4xgBaUpFScB+e6tCzDJ/5dK87G+8VAWrLNrnd8NnyjTyCLT/XW
nIv3i0Hs1x+nFFv0Vmw39yGNb/WJlOUz/UHOx/vGYA7oQ+NMsFVvzQ5zXwrz
nT6J4+ZnyGaPXo7PzW24EO8iZ82jqBpnQD8oh8WzY5t+VU7krrgP/RfZjyJ8
r1+K58jtcQb1E/JZKsS77HnOlnvt/5KTuS/u0X5RnF/7L2Rb0u0u6v+aX2W5
+ZwcHWfatWrxPsi5spwc4voh83CK61kyRc6UZeV216+ZJ8XnrN8dn61cGM9e
tnF9p7k/xfR0mVtOlz+4dlmO5444h/pJ+RwV+VX/W07h/ji7+peyHZfiO4nz
5jFUj2etH5Yj4t7YobdlV7x/8d7woz6Z8qzU23M5vsMYSjt2x1mP+2W9PoVs
VukduBLfawyjPXvsBpDBBv0VKrBa78jVONsMpwMVWWPfiWvxXccIOlKJW6kc
e+9DFVmValRnrf/TmevxPcgTdGKv3cB4RmzUp3LK/DyV+E2vwTrzQ9ww/ydf
Y4X5ghxLCc+mhkyV8+LsyP8BaErdzw==
               "]], 
              LineBox[CompressedData["
1:eJwVzzk2g2EYBeA3oXRUUSpS6AwxLiQy/r8qC0hKY8QSHHZgB2Y6JMI5lKrQ
Ke2AGB7Fc95771d9+Uar2MxERML7SMQ6k7xkI4oM5CY5nvQDprnRS3zKx2yw
ygy39jJf8gmblJjlzl5hKJ+yRZk5uvYq3/IZ21Qo0LPX+JHP2aHKPPf2Or/y
BW1qLNC3JwSX+i51FnmwpWS40jsk//8Zi1hyH+1rZLnW90h51VtM8Kwf8iF3
mOJNH7r7rDA+GnHk5t1lb3/qhjBP
               "]]}, Annotation[#, "Charting`Private`Tag$268347#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GV4lWUABuBDN6igdAwY6uhmYwxHDgYGeCmpNCgxfiipNBiESkmjhEGn
dKuEdINKg0GDNKj3++PmeZ73+zbO2b6zqHYpTXqkikQit/0TnTYS2Z0uEnmD
xPSRyB27lFxlN5Lf27nlLLueTJTV5Db5vmup9JF6DBX0DfKU82L6Ir0xb9p/
y/fIyXa7oOvf6fUZa2ezJ+lVuWyXYE/4Wu7q8+hFaveNclaS03YzLofXQi52
2ON4nr12M+7p8+lNc17gRWIoGd4vpdnn3ubc1xfQhxaUYb/zFjzQF9KXllxx
1otn2WmPpywH7JY81BfRj1Zcddab59hlT6AcB+1WPNIX05803utoZ6U4Y7fm
mt6H3PxiTyS7+yaH3wtX7PIc0lvzWF9CHvfMtmvxgZ3WHqOX5qxd3F6sv8xb
9nXZlzyUc22d3O28UHgm9CSZJKvLn+Vr8kvXc8gpdh0ZKyvLzeH7yqvhZy+X
2w1lE5kgd8qmsoLrh8P/H16n/ST8XuRqe6meV5+j1yZW/1F+6Dyd/plehor6
RnnOebS+RH+Ft+0bsh952WMXdn2e3oBJ9lP2VD2Oa3ZFjoSv5V99GQNI777P
nZXlvN2Gm3p/8rHXnkwljtpt+E9fzkDaciv8HsjPPnsKlTlmtyXCCnsQ7bgd
3isF2G9PpQrH7XakYqU9mPZUpRqxxFGdE+5pT2p+sIfQgXhOOutAGlbZQ+nI
P/YACnLAnkYNfrU7kpbV9jA6ccceSCEO2tNJ4De7E+lYYw8ng5/jF+H54oLd
mbv6IApzyJ5BTX63O5OetfYIMvr6sXZ5LtpduKcPpgiH7SLumR+eN2baT9vT
wnPLdfslTuldyMA6O5975oZnmI/sTPY4vQKV9E3yUvgbpS/VX6WGvkO+4/y+
HBKeU2dR4fXJ9bKxPOJ6lFwQnjuZLOPldtlEfuX6M3K6XVfGyypyS3iO5Y3w
t0uusJNlU1lT7pKJrp0Or4GM4fPgfI1c7zy//k34nnxsZ7bHh88Lf4S/l/ay
8DnmXfuBHEpRjtpfk9M9M8J75aZdizPhfjKxwf6ELO6bEH5W/Gl35aE+jGIc
s2dRm7N2VzKz0f6UbtThnLNuZGGTPZLu1KUe9UmiAefd052sbLZH0YNH9nCK
c9yeTUMu2D3IxhZ7NCk8tkcQzQl7DslctFPIzlZ7DFm9z4l2Zf6ye/IkPDOU
4KRd1D0L9UbMtXPZM/UEqupb5S3nMfpK/fVwr31J9iQHZV1bK7c5L6B/q9eX
9WSc/Ck8g/J/MbT4YA==
               "]], 
              
              LineBox[{1431, 1334, 1258, 1137, 1534, 1416, 1319, 1243, 1190, 
               1557, 1440, 1343, 1267, 1101, 1511, 1393, 1296, 1220, 1167, 
               1138, 1535, 1417, 1320, 1244, 1191, 1102, 1512, 1394, 1297, 
               1221, 1168, 1139, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 
               1513, 1395, 1298, 1222, 1169, 1140, 1536, 1418, 1321, 1245, 
               1192, 1558, 1441, 1344, 1268, 1579, 1462, 1365, 1600, 1483, 
               1620, 1110}]}, 
             Annotation[#, "Charting`Private`Tag$268347#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1ne8z1Ucx/GfvSPK3hktI3tvFSote1+7cG3CdRGy3cresmdmhGwZhcre
e5aRUBR6nj9ej8/79T7n+/i533t+58oVFf1hp3iRSCQufiRSP3Ek8nPSSCQ5
opNEIk/4KozAfV0RTNTnxQldA+zXpUBn3VO+GiPxQFcUk/T5cFLXEAd0KdFF
94yvQcZkkUhd3UZdDYzSPeTFMJnnxyldAfs66H7lzdBId5CnQlceQXl7+vEL
8lrrmXg9vonXRB0+jj+SR1v/Wy6OKfzl8PnWh/Fb8mnrBXlH/hvvKa+Vm8tN
5enybDO+OczcbTb2zC/mcxit62ZvG3Men2vG4xXMmPBuzIu8r7mBLzO/83xm
sz7/yvzBehdzBV9k1uJ1zfF8hvmYDzZ38DGe/ccsgan6Dvol8ivhZ5eHy7fl
M/YV4p34Id4CTXS/8tTozuNjnS6LfQ10m/k7GKt7xEtiGn8VZ3VN8ZsuDXro
EmC9Lg7NcEj/PHrqE+J73ZdojhaIQku0Qmu0QVu0w2HPpUUvzyXCBt1XeKwr
hem613BO1x5HdOnQW5cYG3VZ/RwNdVv4u/ha9y8vHd4jfx3ndYXti9Yd5lH4
RHeUv4DPeBJUtKc/vyRvsp6NN+Jb+Xuoxyfwf+Vx1v+Ty2Am72htqVxAriWP
kO/IF+x7g3fmR3ivcBbkluGsyzPkb8wE5nBzj7na/NRzx+QXw++f97G/rTmf
zzOT8kpmbPgumZd5P3MjXx7Ol+ezm4351+Y2613Nlby2XF+eKP8nD5F3yuM9
88Qsi1n6guFsWBvJ78oXrRfhXfhR3iqcRd1xnh59eTJs1k3AU1258F3SFcIl
XUec0GVAP11ybNFNRCdE46S1jIixlgJbdZPQGaf0mdBfnxLbdJPxTFc+vEtd
YVzWdcFpXWbE6lJhu24KIn6OCvo5ujdwRdcVZ3RZMED3HHboctjbRLedv4+p
uni6iuG7z4vgqq4bzuqyYqAuNXbqctrbVLeDf4Bpuvi6SuF3yYuGs8tH8T/l
a9aL8q78GG+N7rpzPBsG8TSobM8AfkXeZT0Xb8Z38g/RgE/iT+Tp1hPwynw+
7yQvC3dxONvyaPmePFDeKl+3v1i45+QJ5nFrvc11fKnZhjc3Z4Z3aCY0R5h7
zTVmD8+fl7NjLP/c/nbmgvD55vO8ijkw3NHmVR5jbuI/eja33Fzepe8mr5I/
khvKk+Wn8gz7EvIqfAEvjtp8DP9LvmG9OO/OT4TvT7jrdRd4DgzmabFbNxOJ
7K2qX6grgZu6Xrioy4khunTYo3vJ3hbh38o/xixdYl21cJ/zkuGs8LH8vvy7
9RLhvfCT4V2E+5nP4onCnWb9kpkLQ621t7Yw3E9yVXmQfE3uH77b8l7788hR
8rjwNyqcEXM1X2zW4Y3MKeF+Mp/xoeYuvtKc7fkkZnUeZy62Hm0uD+/SLBXO
qhkX/h6YD/igcI/wFeYfni9p9uQTzVPWPzPX8/bhjg2fISfGSHlfuGc9c9nM
jS/CHaxfFO44uVo4I+Hcyfvsy8tb8j28LhrzqTwSvuPWk/I35SXWSofzzr/k
D+Vb1kvxXvx0+Bz00V3hL2EYT4+fdPnsaxXeZ7jfMUeXTPdWOOe8DG7r+uKq
Lk+4p3UZ8LMuv72tdfvCnYq5uuS6t3XLeFnc0fXDNV3e8D3RZcR+3TyksL9G
uLd15XBXF4Prunzh/eky4YBuPlLaX1P/ra48/tT1xw1dfozSZcZB3QKkCv+/
CL83XQXc08Xipu5ljNZlQXX7BvMbcqy8OXyG+T/MKVvu
               "]], 
              LineBox[CompressedData["
1:eJwV0klQz3EYx/Fvl5ZLdl0shYMW0jHM2ONgrRwsOdiiiIsZcolUzBhL4UIz
BoeUrYTqYsbBJZLdxXJW2UKFg9f38J7P83k/z69+9f9nbN1XWJEQQujBzuQQ
upNC2ICmxBBSU0JYybXqCzDIVaGPy8QpbhJ6uesY5X4V38YtxE/uCPq5LJzm
JuM514zR7lfzd7lF+MUdxQCXjTPcFLzgWjDG/Rq+nVuM31w1vnA5OMtNxUtu
pttS7om+ETe4sdxa7p6+BEPcMXzlZqGeS8crLtPtLu6pvgk3uXHcOu6+vhTD
XD53kHuvl6OG+6bPRoOegQI3Nfpn82v7LH233qNvxi1uPFfIPdCXoUiv14fM
I/Zz9UP6B30PtulX9CTU2n+XuTgX38Ou2TzNvNxca74o+/Qq+VB/45lsc5n5
vHxmd0C26y2yRC+Rl/TLMkHWycfx85W3PT9BFsX/u+xwvz96vUkW6MWyQW+U
w3q1fKT/8ew8c6X5I19p7jTvNW83XzUnx9/n7oecE9/RbjpW2Nfp/ea39jl6
ud6rb8EdbiJXzHXGvx9/ueMY5PJwgZuBd1wr0tyv57viz8c/bj53mPukV2CH
fk1PwUlzd/weyRNu/wMAk3Ii
               "]]}, Annotation[#, "Charting`Private`Tag$268347#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HWUFlUcxvGhlFK6W5BWWgkJpXVppduWjiUkBASVbiykMRAbpKW7uxeO
eo7Ekrv0An7uH9/zxPxm3nfi3kJdezXvmSyKouLJo2hVmij6L10U1cGGtFHU
FllwWZ8hfRR111+QR6EqVusv6Opio9wOWRGvz2i+h/6i/DGqYY3+oq4eNsnt
kQ1lzE7QpcYC+Yq5TLqe8iV5NF7CWv0lXX1sljsgO8qanahLg4XyVXOZdb3k
y/IYtJSXyWVRXa4hz+Zz4nd5nXMu8w2wRe6IGDNL5KLIIZeTJ/Fp0Y8/SBeF
WX4tXxkj+Dh6zfWy8L358TTeXC+6V/6Eb8Uv56fTcnQYPR3+P63heE36jTyZ
5qID6VE6l/7h+Jt0o/wFrU5H07/pd/Qvvx3PN8RYeav5D+gOuRPfiP+RLxbu
Xy4vT+bTYbHcSV7HV8F118oq9+GvOPZp+G+opZujy41l8npzV/hXsU3ujFy4
oc9mtq/+qvxZOBcb9Fd1r2G73AW5cVO/Edf0Mdih64o8SNBvwmZswXXHG2Fn
eB7Ii0T9VtzQN8Yu3VvIh1v6bbipb4LdureRH7f125Ggb4o9undQAHf0O7AT
iY41w179uyiIu/rs7rFfeO/yWLyMXfpbuubYJ7+HQrinz2G+f3i+8ji8gt36
27oW2C+/j2dQwewUXXp8K983l1MXK9+Qx6O1/KdcHrXD78tz+TxYLu9xzh3+
dRwI3wMam1kqF0dhuaI8lX8K/flD4XsK7zJ8U3xVjOTP0Qeul4sfwE+gN831
pvvk2WE9y23oCnkGrUCH0zNhzdA64Z7pPHkKzUsH0WN0XriX8N7oJvnLsCbo
GPpPePZ++y59AwfNddPv5LvxTfif+BIoIleSp/FP43s5ybm5dQPlBHki6qK2
br4uH1bI+8zd41vikNwdz+KhPo/ZQfpEeRLqYb/+vq4VDss9UBSP9AfwQN8a
R3Q9UQyP9QdxCIdxBEdxDMeRZL4Njoa9A8URhe/c7w/W3+Inoz5OmH+oa4tj
4V2gBJKFb9/8h/rb/BQ0wEnzj3TtcFzug5J4wex0XQb8ICcP60M3RL7DT0VD
1NEt0OXHSvmU6z3m2+OE3BdNzfwsl0Qp+UV5Bp8RS+QUYX3phsp3+WloK6+U
K4a9JLwbeSFfAIP543RVWLf8Zv4rWjPsqfRfetr/iPgO/Dh6Mrw7ukv+OqxR
uRn9RZ5GS9EhYY7Op6Udr0xnypNoJhpLD9M5Yd8MexVdL8+i1egoep6mDPsB
P4y/F54pv5+fzrfjV/GVwp4Xvhl5EV8Qq8NeI2/ha+GMe0gmd+RPOdYfzeVf
5dJ4Tq4iz+IzY6mcKuwtuuHyfX4GYsK3oVusK4Q18lnXTq7rFJ6VHIvn8UTY
a/QfhbXNz0QjxJlPoe8c/pc8AGXwJArrR+iT+FlhP8E58yn1XfRn5YEoi9Qo
oh+pf8h/HtYqzptPpe+qj5MHoYX8W7hPDOVP0QX0fzckM8Y=
               "]], 
              LineBox[CompressedData["
1:eJwV0ctTzWEAxvE3Uc6l3FlLucu4VSoLbFw2JNQMm1y6GJmxMCOXkC4YCwtT
nQgLycItO5eyKWZYWFi0MZzqnPBH4HMW33me7/O+8/vN+Z2ldWeqmrNCCJ/Q
HQthAZ5FQ4igKB7CNf5X78E+JCMh5NiP2X/w89iAKJbb2+z/9F7sx4T7ufbj
9p+8BRsRwwr7dXtAgldh0v3Z9hO2JL+ATYhjpb3dnoU+fgBT7kfsJ20T/CI2
Iw+r7B32GbjHq5FyP2qvt03yS9iCfKy2d9qzcZ8fRNr9mL3BNsUvowTlth7b
Qjznc7DG1sVnop8fwi7bAC/AOz7teXFbI0/xVpSiwtZrW4QXfC7W2m7wWXjA
j/A3egkO8938ib4M73k9H9W345f35PEmPe3stP5Zv5L5DvqQXowyXskT+mKc
07/Jl/Y6/YPeLStlm0zKATnP+Tp5k9+WOfKs/Jr5dvKh86PyLb8rS2Wr/C4f
yxrne+QgvyMLZYscl8POGvQxfQc69ZT87Tfl66f0aXea9S/61cx/pb/W12Mr
38b79CV4xeej2HaL5+IRr8Ve21NehBHeyD/qO9Glp+Wg/OPd/wFj3GOG
               "]]}, Annotation[#, "Charting`Private`Tag$268347#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{514, 515, 513}], 
             LineBox[{1059, 1060, 1058}], 
             LineBox[{1622, 1623, 1621}], 
             LineBox[{2487, 2488, 2486}], 
             LineBox[{3242, 3243, 3241}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution with backward integration \"", 
           TraditionalForm], PlotRange -> {{0., 6.24999987244898}, {-4., 4.}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJykvHk81N/7/z/2sSYzlkolqSjRXpTOZakshUoqRdoQJUQlRKWNslWShKJC
kWSLcpC1FEXZZcaS7NsMMwa/Z70bn9vN64/vHz//dDu3M8/lnOe5Htd1nXO/
WnDk9K7jvCQSqUGSRPrzr2LgeEzkvEubSaTBPRvPbXhv+F7IuN0Wo8MvnChx
zBD8WXydML9lBVqVaLT6wr0U7KohoP5coQYZls5fsmF1Pt750MKX49aI8m2D
tI7PLcU7VI4PyGxrRXdm3W0yZVfiU6bLdSay2lG04Ap7+TnV+F3E5fu7JbtR
hfe8K0Vyjdh2LOTR0339KPvNz/ToG83Yyjjvkwp5EC3V8G58fIuG/SwEF42f
HEafsXT1iBEdHy32sFlpx0Rd6148Ldei4zyhWTsd9o+iK4GO7LQbNNwTt6Xk
ULUUsLpVh+7NJ4P1kJaq8UkOOt5TmofW1uPHkYXyI7cnUOjrprjM3kq8OMn1
NOwkwbPDzULBbwrwmufNbVR+HrBVNN5/520Mxh+fDt48wAsBLcFFjzTKUcDL
P/18cDJcxLPVuRZFxK1Mc7DnB+XFsPLO/l9I7O/1AqBn2FHw6m0Xak9wO2vn
IggipzmbzKIG0cq//UKgJ9to/cF0GPGY1NEDfcigE76TGa85ihT/9gsDKdCk
K8yRhW7Ijuz4dl0ELn3J+lIfw0FOz/70i8Ly5OZ1xqHjiHZpzTF0Twx6YpkR
ZzeTYH/Kn35xGO6S+cp6TIxLcql78UMJyHDzH74uwQt5LvO3LHkxA6r7bp97
TIyDufjh3DRVSThzv1CM9ykffNjV7yJyWRKc+APbXXT5YYGREGfh3plgYhRQ
wiwTgOnfX771Ve3OT98QT3LkyprcDCzCcjhbldKPdl8ZqhEubsae0vNmKO6n
wFqdPS0zwsgQryLw0bWZAsO2j+e+/UIGwWGeWXlWVNAeJ+PiUjI8X/H6YuQv
KqxpO+ZkQrRVjiQYj5+Shh1Pipc8In5fb/A2ZU+XNIzkzDwtXU2GbzEXlqMz
MnBJLU+ugE6G0Tc7NykOykCeyFJ/ah8ZJjNd0q45ygKbP1GxfIwMRiu2bvFk
yILE2pyRz8LCUGypfsLhjByE+c1Oj5MRhqRkp5HJSTnwVJfsOaMkDB+D6507
bF+hr19mJ60pO4MVxjMixteVIGt+NSbzzNP/jF9ysLo77vhv5NQT+fOrbh32
5VdmLAnrRV63VCsdT/3EXdbv7ZbuHkD9g7syQ5fRcHKMzAJvyyFUd9E2fIEU
HTMl87bct2cgYWk722P76Vjo73xyUF3kpz5R2zrsfqvszFJbFpJRGZUvrWvG
r/9eP4mUfU4svOFTgUmll2IVvcbRjyZjW97m6v/031V6J51ZTgJDO3nd/Dtv
sIIRtYkjJwVq6Wb8UXJCMN0+bxTwaeXNpoBiybyJQ8fJEBIVfPJTBAXeiB5I
e/meDDUBVwbC51NB0vrM5YQyMpiH1H5Sj6HCKtutHfElZHiRQPwtlYasLZ+/
WX0iA++P1z7xL6XBUHzH6UvfyPCDOcvJUF0G1qg/aH3RQAZNIdPktLdyoJ4+
se3pXGEo1bzytts2CjnVjZnMXWuG6T2Nh88zPqB+K9MoxbZHeGkvi/ly/zf0
infUfLAoHYdlfnvPs+U3OnWr26ljXh22FlXZFerfgwyc550Ou9SERf/O5yj6
NhCctm4PDZ91UE++/H0QuS3e9ulnKw3nph1d+7FrGA2UX5z7ei8dX5BdSPNu
ZSL/9S9cMxTo/7n+3c2+7PxBNjr9uFGgvbUJr2g6ZJc5zEEiIi3OZx/V4l0X
V36gUyaRgV1m9/oPX3Hsfo/zW4JJYL88VzXkaQ62F49a08WcCdUuFlklNEH4
4uyO+j2lwOXO4OFliUIgEcGsDBqTgvBWu5e0rWS4Xlf9nnmBAo0z55hvTSQD
6c+fDxV8cz5fmiTmm+z1atU6YWngGKwMUftIBhn5JNvdt6VBX+U977kKMuyL
PjHTVFwGFpwXgi+1ZPBJwbeCQuUg47zqZtXZwiD34YJuz+0MlP36rA36chU/
mptGZnV9RJSY7uAb0gm4hhc3u53qQjPD177c4dqA48cXh72N7UObXgjqyik1
48Q7u76crBhAb1Wuro11ouEraTlxKm1D6I1f9qIba+hY9eQ882O/GSjt12v/
GlM6Tshw/iHfOIJudQ7muRXR8HfjxQIivSxUY/HsprtjM6668EXQrXcMrXn6
sk3rdgO2/OsfJlCSLHWsZuA73lXieDDonRQcVEIrGZNCELb7j35RoE71icbc
12SIPGY0JzqHAnEf0j/1EfNzOk9HQA1RYX1xg94YMT8XD29ZZFtIBdaCybWl
RH+J9Mvw49ul4WHuu8QGYj0PH2iurGuQg5VOmeVSC4Sh5NY3fYZtIOq/2pG3
+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
Tw7euu340CUrDAl/x0uFYwNvMgQIvZ4e7+X8Hc9MWJXnYXz3mSBMz+emn1dN
P++Ynt9O9z/T9Xf6/sp0XmN6/DZ9f2p6PjXdXqbzKdPtZzrvMd2epvMe0+1r
Ou8x3d6m8x7T7W867zHdHqfzHtPtczrfMd1ep/Me0+3XS/lP/0yIfXfGtnSW
4H/sebq9Tudnptvv9Hxhuj1Pt9/pPMX08/3/lz1Pj6+n2/d0e57OH0237+n5
0/9fe59+vj7d3qefd0+3/+n8yHT7n56f/L/0YHr8Mn2/aPp+1HT/9ldPSFRI
ERAtbCL6uXyZkNEud+15PMDly9z4h3fZqLARly+73XdC1vPTALL4l2+6aOyN
6LSuwcfV2eIrxZvR5k/XFwge+o64fMqLM7vmCJyoxClVXm6lGzpQ+cdWefkf
BXh6//T7nS76tfrVjkHUf0TOQKmoeYova22S6H+8rhXv+/d9lZj5ZwoG+6f4
MrXzCV8/DHfjK3/1SBAc4ostYgTbEZcvs7pW099txpjiy2KSht/G6bKm9KqP
IfQ4S5CDXbO0TB9t5wFx/ZNfz1I5U3yZqrXAts4RJj6xTeP9iX184GyeNHx9
Xx/m8mV+laFho1CFufa8maUhqbqxE01/n4KtIWGXLwvBXXtVk8Gzg1N82WfG
g/v975mIpJ3OE+0uDGMPVD4lG/0fX3Zv3+O+hj1s5GRxNH/kiigYPNqqMqbI
nuLLfAoFZSwLRxH1zoO6m4/FYZu253WXp0x07e/zJWBGvJlCaNAw8uT7WHDv
2Qz4XtL9TXlRP7Kq/ONPJMHPhCdnhVUn4uqNFRxwEBJsRVy+TJLufy3gyGvE
1Zt161adzU9+iW8VTaxQsJSCTx2fV+9rbsd3zvy2t26Qgpq5q36xJwaw17/8
62MkYmXuZk7xDiFSi+Nc6xmYy5dN+Mz0URL8jLh82XcxmTA1diHi8mUVul6D
cVa5iMuXqZnf75dWyURcvix3e73iR99kxOXLFGJHV+ebPEVcvix68d3M5Tfv
Iy5fRmLH+9aluCMuXwbjbxr2kzwwly9TCDE1PfE9BOcq/M//MVsej4tbTyIu
T3bUymt70bI+JDgi38u/tgFZ8Hm8n9/1E0n81UMasql6qp/l9xmRvJ1X96N2
tHHnxChFLGVKL6soWlXuzR+n+LP7H2Pz25fW/NODIZTnJHNo/tn/483CSbXq
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
Zfx7fPj1Zt9hPjfL+JwbeoeGbqfKTQGUjx6seGbwgGMeQ3nmcxYfp1bMBACU
P87pXeBq2N8DUP445UlizWeJ1P/ms2Oa11cpTWHTjDyyhR9/o4ppL0hi5K1J
foXVVYcaifzt6cG6iy4qfUQ+eKYB+h0ljzCOdwnsSxl/YthPZuyvILyjGqTs
lzYBICPvff0sp4bLvT8A5ZkP9Q/zUs8NA6N/Pu8EOjUtn3IkqwDKNzs9neAj
vSwn8sIyMyn1163+mxfGhF+bYicGiPxzCfmtvePecQzlza+msBoKsM9h8//s
bzcIb876mWedDlD++XdeVZSIfg2RX7a/fymU7TsNM2TkyROMdK+pF/8GKL/8
ga3gUovRDJE/P5gF2M14WIpQXnnzz1T58KpJIn9Ok0teFmfwlsh33+3mSnO8
M//3/JME4J3H7dxnPKYYvzcrzD7Af/g2yxyG8ubGJwzVAyzojPPBBi1kV4yJ
2U1jKK8udTBTza9pCKB8+4fKa61fro1hKJ+u5cJxfhfHDOP7OeGC+7x7cH0D
Y5sdUvdQvbb49TP2lwceCAOrGsPR9cYBjwSC20obmxjfJwTt+V56338wBpBv
Y3TDH9dO/W8A+TWEgkQfP9FoBO6MvCOHXPJ39YBOwq/Rlbgg+EunmvBpuMW0
jp71eoOhPKaB8W6Vy0kdRP5Sfyoy4mdpDZE3rss6GCXZ9BEg38zBa+Hdokal
APlmlibfe+js843IX3JsoG+VX1MM4hm+hyrRd+xdz3sY+TY2+GqLzHbsYhOo
ZuTlIkQnTb1PNGGiJn99Ggc8hldcTOrCUD7yl1Hl4Y+WbwHKN169aPCgoYsM
UP617OqRLtnMXiIPPLts0PdPVTvBgySnWYVunCUTPprakrUBNjvzGfnBSVDn
ZcHiSUN5MW4oZzO2kCzcxeDBeOFVsYz6F0f6CB+F1i8D1oSxpL/3X5047Cj9
OpCjkgOQn8LN+Zz9+43dRN52y6fkTRMS7RjK+0k6ZibOTpIJP0VgnpJNxaFU
Il+dc2uujWOyD6C84UDBxUv1qV2MvK0gLFY9e9NKuY/IXyft81CmLakEyEcx
NxL77WQChXh/gVjZQCbLAQqRfxQrq02uKacQ+WvyxjGhe4crAMpb2zWc1S2f
ygLM63/M+TLm5/nM+QPm56fM8wPm9WPm9Ujm9X7m9R/m8ZN5fYd5vZ25f2Tu
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
woYV5j8Z//o5rA/w3n3+9cyaZNS/zZW6NWZX4wvUv20WPfaWZnkhqg9wNHJW
XcOnIlQfoEqpNebr3RJUH6Dcs+TWaF0pqg8w/KFxIjCEjuoDmLQIyHr20lF9
gPGtUVk5wmWoPgA+tUvi7hc6qg+geNgyOtP+OeoPF+btLHg49RPqD8c+tbEk
jt4KYH2AS1fnh73yZgFYH6AZb/2RqMUBsD7Awb4xO/ohDoD5RVAJ+P7aig1g
fQCTW+/Td7ky/3U9wn5yEeuWdabK16L6Va3SussS5xWhfnIM/fvbz1pk4rCf
3FJz4QVz3OpwWF8guVt5OOV+Pw7rC+wc/AFsNgzjsL7A6INLj7sFRnBYX2B6
mcHpuzweDusL4Hqihxd6DeOw35zKVu01+kKDqP9bXy7+vFiVgfx/wNadripq
LOT/lVSEEt43dCD/P1dWfp2RGhf5/6xj+cEeo1zk/x/J7Zip2PrH/6v4RZ0/
nshB/j/Kqh07G9qG/L9JakFvVPQn5P9XSPfMbc3IRv3jjNeKHHPAXiL/X75D
MJy2qwj5/7gdB1cvXluC/P+zR780mZGlyP+fMph0DD5MR/5f/+te/cJvdOT/
NfpzV9wVKUP+fyVnZpUZl478v8/3IzbsF1Uov1q4+XGiaMY3AP3/uT0s7xp2
O4D+f/8E1lMazgbQ/wedyxCYe54DoP9/0RkRKijIAY1TcMapY1ywdzMI9PNi
If+f5ORfl5swiEP/P3TplVeeGQ+H/r80rUadsn4Eh/5/x0oR8WDi59RX+l4p
a0QxbzcfTSHzIRx6/Vr2otW7v7ah9V6owzZFGyK/gF7fTc13//tlXcjr26zZ
66RZx0VePyJp9f3NaX+8vg/2rlyyqRN5/SkzJz3kLFlo/TbqXiltP4WBvL6n
bf+xDKW3yOtnBp/ZfiTsKepXl78gOXLuu1zk9W/0Nz7VVn+NvH6t0YN7B82K
kdc/3rZgrH60BHn9nzXGHqrT6cjrC3tj5rKpdOT1PTL1wgXG6MjrP3Vfnrlc
oAx5/XsnB7TXl9OR1z8VRxlNzopH/fF0VTJvr4v7iPrjddm+5Gxa1Aqg1399
rJheq8QC0Ov7FNaXPZfhAOj17VWO1Dad4ADo9T+6bkxcFcoG0OtXlKuezXnG
RP32ck6wJsYM21A/vZfyAQt859ehfnoaW9ZPcektQv30xgLC7LvG41G/z/VX
4vMtlGtw6P0rlmBiQjP7cej9l9cFxMa3DeHQ++ecV/V43szDofd/o9VsuY86
gkPvL5hLU/yYOIzDfnts+9s/0q0HUf+7aS8nvU/3fUcefx0vyDb7CRN5/BbN
+ECrkx3I4xsVnJ+yhNeFPL6bRsOqpJ9c5PHL1j8/5aLERR7/Z2qMfYtKB/L4
s1bdS/li2I48PuUxiPYta0QefxlbdJfMwHPk8W/lqPsOxf/pnzd2Xbza8EQB
8vgn9DJnb5xehDz+uEjRkbHfxcjjV/cNK6S4lyKPH/vy8eeuXXTk8ZWvsat1
P9CRx3eS7D77kJifoMdnRbx/rD1ARx7/YsOp2YM736D+fF9HjbjW678B6PEf
Oh+c+8qlHUCP318UJq1rwQbQ4y9fbXRI+CwH1eMKGtv2c+cCDljsc8XrKbML
GCyKoOTnsJDHX6x4JKtm+SAOPX4qe66EF42HQ48/JeaYQ4bGCA7vF23Qfhe3
/DYPVynP9N4+WxST3uz5Sez+EA79PH3Zps+UdW3Iz7fK3a+0yWYjP58eavks
sLkT+fkLTyafg+dc5Oe1agPMRN7+8fNW0YURG/s6kZ+/duGB/cpRFrr/c01d
8uR5LQby87RPh0czlWuQnz/8dm/K5vVpqF/fhHZwxbZPOcjPP/uZoBJ+4RXy
8w2NBdWf5xQjP/+Jl5gR/K4E+fl7UXcsO3tLkZ9vOG5l/vMuHfn5Q5kb7A4M
05Gflxcq/dFG5L/Qz1+6Glr5tZaO/Lyp83Ktt/vbAPTztxfStCbfsgD087sE
nTZe2cMB0M+bRRv0bNzFQV7eYqe94cSVYRx6+bjusj29MiN43la2v0mNMJYa
HPTx/CceDu8XxVp0ytNXdgLo3YO6Xa97HeKCxk3PqQbBxPG4vDJocR8Xefca
C/c51Ogu5N2FyzTLVpsnIs9e6mHflONFR559y+s1QrpsOvLsz3lzGx8R82fz
t0vyC5No2LVT2hHH2+kAevZb5iezHEvZAHr2X/tmbZh5gQP08F/KNwo4YH7v
2yM539nIs9uubkqnBPNw6Nlv1sr1mhPnJ/ToMx4wm556dCGP3n7t2DEPNhco
nd/WpFRGxTbQzVdsu8RFHt37/MRZXh4deXSdl6GHXCeJ+X39s8D0QzRMsCPX
K2qcjnx61vrO1pwCOvLpBz8trZ7SdBP1I7S86d6+K6oe9SPs+3z1ye86BoA+
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
Dj3srRD1/aB5GIce9lyczFHKihEcetimNlbxwjQeLvO0+0DjqAjmjFdf9v46
hEO/asAJH132uBX51ZZwJZnjemzkV0/IPDsReqsT+dUKqZM7A25ykV992Btm
vfo7F/nV52M/qCs3dKH9et5WtWYNxPUM/eqjQldd8RYG8qtdkQo6bVl1yK9O
Xa0+8EkuBfVzLZNNso0cfQGgX/WhUzaZthQiv6plZOre9L0I+dVKo9XZA7El
yK8ayV7wf9pQivwq9stQ70kYHfnVtf0He+1/0JFfvTWm1XKZiPfIr/aKNR1v
oiO/Khwd94LzuRVAv1pFUV2kFsQC0K82Pw6c5QA4APrVXo+O85nE+hl6Vfmq
m2aVW4Zx6FV3fGWrfBQewQO7g8cYWcLY0f0aTm0DPBx60+prsmx6awfypm5f
V66ZpclF3lSsrc62hsj3oDe97W6vub+xC3nSQU8nBYGjdORJA30S2yab6ciT
TtqOrU0m4m9V7uj3khgaJqgpW3+IWL9AT2pjtCstOooNoCfNzuqRvULMz8ES
lx8sNOaA84uERbjjbORJazKXupzZx8OhJ+0uW7VyjJgfoAdl2nlUz9XoQh6U
scJ/vuFHLnicd/+3fS4VU5sp6j81iYs86OFz3k6daXTkQRfLGzSdIeZz+Vz6
QY4FMb9L1VPKiPwO+tCwo23Uj3Q6gB70XuO0l/vkOeBI7Kj47AYm+Mx21Nrr
zkEe9FtSYI5fGw9XOTRsh0UIY5rM5/0mM0Zw6D0Pa5/fWvW7C5QvWhJYd4SK
LbV92dZKzJfOJT7eQh1UrGBiik3hPC7yoFYLDzqcj8tG/rPi9drNhvV0kPnL
jL16Kg1TqFt/p4o4v9zD1EzULtGwwtGr8m79dORDR42vrakn1lvQh2qFS23U
8eKg/c+vvuuN6MjxcOhDY8oKGi8Q8z30nXGfY6eZ5RHx+kj+9rREKmbW+flQ
VjkX+c711+1PKxL5ndt1/bNL9WiYx+6P+2KI+AZ9pwjPWcB5HwdgVRNpF+pY
QEFQZ/49Uw7ynQpzWn5YyI7g0GvK0fYJ2B7lgq7yPo7OZSo21SDN+HYvF1D0
TDLSVWjYqVyliAji/Bo9FVRVXNsOPpZcmiwlzh/oNb86CwjYrBnBrzGvuzoZ
UDGJBuEjER1coCEWkCFTQcVOHsl9rxTART5z1exjekzieL//tnlzgiMNm6mb
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
fXD8f2HX+4Q=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{1427, 4262, 4260}}], 
               
               PolygonBox[{{1431, 4281, 4282, 712, 673}, {1432, 4283, 4284, 
                714, 675}}], 
               PolygonBox[{{1428, 4263, 4264, 650, 651, 652}}], 
               PolygonBox[{{1424, 4238, 4239, 974, 1330, 1154, 635}}], 
               
               PolygonBox[{{1445, 4311, 4312, 1168, 992, 863, 774, 715}, {
                1444, 4309, 4310, 1166, 990, 861, 772, 713}, {1458, 4228, 
                4229, 676, 629, 1169, 993, 864}, {1461, 4278, 4276, 708, 669, 
                1198, 1022, 893}}], 
               
               PolygonBox[{{1451, 4279, 4280, 670, 1199, 1023, 894, 805, 
                745}, {1446, 4265, 4266, 653, 1185, 1009, 880, 791, 732}, {
                1452, 4226, 4227, 674, 627, 1167, 991, 862, 773}}], 
               
               PolygonBox[{{1443, 4222, 4223, 623, 624, 1164, 988, 859, 770, 
                711}, {1430, 4220, 4221, 622, 1163, 987, 858, 769, 710, 
                671}, {709, 4218, 4219, 804, 744, 621, 1162, 986, 857, 768}, {
                1455, 4285, 4286, 775, 716, 677, 1201, 1025, 896, 807}}], 
               
               PolygonBox[{{1457, 4307, 4308, 693, 1214, 1038, 909, 820, 760, 
                1244, 1068, 939, 850}, {771, 4224, 4225, 672, 1200, 1024, 895,
                 806, 746, 625, 1165, 989, 860}}], 
               
               PolygonBox[{{1374, 4315, 4316, 1186, 1010, 881, 1293, 1117, 
                792, 1257, 1081, 1354, 952, 1319, 1143}}], 
               
               PolygonBox[{{1365, 4230, 4231, 747, 630, 1170, 994, 865, 776, 
                1246, 1070, 941, 717, 1217, 1041, 1339, 912, 1299, 1123}, {
                631, 4287, 4288, 678, 1202, 1026, 897, 808, 748, 1232, 1056, 
                927, 838, 1276, 1100, 971, 1328, 1152, 1380}}], 
               
               PolygonBox[{{1260, 4234, 4235, 1381, 633, 1173, 997, 868, 779, 
                720, 1220, 1044, 915, 826, 681, 1205, 1029, 900, 1295, 1119, 
                1364, 811}}], 
               
               PolygonBox[{{1342, 4236, 4237, 1356, 955, 1321, 1145, 751, 
                1235, 1059, 930, 841, 634, 1174, 998, 869, 780, 1249, 1073, 
                944, 1313, 1137, 721, 1221, 1045}}], 
               
               PolygonBox[{{1361, 4293, 4294, 916, 1302, 1126, 827, 1270, 
                1094, 965, 682, 1206, 1030, 901, 812, 1261, 1085, 956, 752, 
                1236, 1060, 931, 1308, 1132, 842, 1279, 1103}}], 
               
               PolygonBox[{{664, 4269, 4267, 702, 663, 1195, 1019, 890, 1460, 
                801, 741, 703, 1216, 1040, 911, 822, 1456, 762, 1245, 1069, 
                940, 851, 1285, 1109, 980, 1332, 1156, 1382}, {1153, 4291, 
                4292, 1366, 825, 1269, 1093, 964, 680, 1204, 1028, 899, 810, 
                1259, 1083, 954, 750, 1234, 1058, 929, 1307, 1131, 840, 1278, 
                1102, 1360, 973, 1329}}], 
               
               PolygonBox[{{1125, 4232, 4233, 1144, 1375, 749, 1233, 1057, 
                1345, 928, 1306, 1130, 839, 1277, 1101, 972, 632, 1172, 996, 
                867, 778, 1248, 1072, 943, 719, 1219, 1043, 1341, 914, 
                1301}}], 
               
               PolygonBox[{{953, 4289, 4290, 995, 1333, 866, 1286, 1110, 777, 
                1247, 1071, 942, 1312, 1136, 718, 1218, 1042, 1340, 913, 1300,
                 1124, 824, 1268, 1092, 1357, 963, 1324, 1148, 1377, 679, 
                1203, 1027, 1335, 898, 1294, 1118, 1363, 809, 1258, 1082, 
                1355}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{648, 4261, 4260, 649}, {666, 4270, 4271, 1429}, {
                647, 4258, 4259, 1426}}], 
               PolygonBox[{{1161, 4277, 4276, 767, 856, 985}}], 
               PolygonBox[{{836, 4305, 4306, 646, 692, 970, 1099, 1275}}], 
               
               PolygonBox[{{668, 4274, 4275, 1450, 743, 803, 892, 1021, 
                1197}, {615, 4212, 4213, 1439, 704, 763, 852, 981, 1157}}], 
               
               PolygonBox[{{1372, 4295, 4296, 1433, 683, 828, 917, 1046, 1222,
                 722}, {637, 4240, 4241, 1207, 684, 723, 782, 871, 1000, 
                1176}, {742, 4216, 4217, 1441, 707, 766, 855, 984, 1160, 
                619}}], 
               
               PolygonBox[{{665, 4214, 4215, 1440, 705, 764, 853, 982, 1158, 
                617, 616}}], 
               
               PolygonBox[{{1175, 4313, 4314, 1314, 945, 1349, 1074, 1250, 
                781, 1111, 1287, 870, 999}, {1159, 4272, 4273, 1454, 802, 891,
                 1020, 1196, 667, 706, 765, 854, 983}}], 
               
               PolygonBox[{{645, 4256, 4257, 1369, 1129, 1305, 925, 1344, 
                1054, 1230, 731, 790, 879, 1008, 1184}}], 
               
               PolygonBox[{{878, 4303, 4304, 1434, 691, 835, 924, 1053, 1229, 
                730, 951, 1080, 1256, 789, 1116, 1292}}], 
               
               PolygonBox[{{946, 4297, 4298, 1309, 933, 1346, 1062, 1238, 754,
                 958, 1087, 1263, 814, 903, 1032, 1208, 685, 829, 918, 1047, 
                1223, 724, 1139, 1315}, {1370, 4244, 4245, 686, 1378, 1149, 
                1325, 966, 1095, 1271, 830, 919, 1048, 1224, 725, 784, 873, 
                1002, 1178, 639, 975, 1104, 1280, 844}}], 
               PolygonBox[CompressedData["
1:eJwVzj8ohHEcx/FfnLgiZ5TJcAyXlEdiEd2gO0knA9sxycBmUSiSYqIIxSKD
jbK5rmwSi0SMLFL+pFi9nuHd5/35Pt/ft6d5cnZkpiKEkEAj8uQgFcIhPiul
vmJhWUZVIdyZjfIEL/ATZPRn/NmL9A3U6SWcmS3KdvtX5sOyB9vu72CAd/r+
igbfx2XSbJq/Y19fcmOIH6NVf8CPWVnv41/xfT4R3/B2jVfzTfe3EPEX1JuP
yRo7U/wNu/qCW4P8CGn9Ht9mJb2Xf6CNF2XK21XeLbv0G/dv8cR/vSmaz/OM
vLSXjf8VHXwdtfwCp3b79T006dd4NJuTLd6em+fkP2i5M/Y=
                "]], 
               
               PolygonBox[{{947, 4299, 4300, 935, 1347, 1064, 1240, 756, 960, 
                1089, 1265, 816, 905, 1034, 1210, 687, 967, 1096, 1272, 831, 
                920, 1049, 1225, 726, 1140, 1316}}], 
               
               PolygonBox[{{1066, 4252, 4253, 1274, 834, 1368, 1128, 1304, 
                923, 1052, 1228, 729, 950, 1079, 1255, 788, 877, 1006, 1182, 
                643, 978, 1107, 1283, 848, 1135, 1311, 937, 1348}}], 
               
               PolygonBox[{{688, 4250, 4251, 1254, 787, 1362, 1115, 1291, 876,
                 1005, 1181, 642, 977, 1106, 1282, 847, 936, 1065, 1241, 757, 
                1146, 1322, 961, 1090, 1266, 817, 1122, 1298, 906, 1338, 1035,
                 1211}}], 
               
               PolygonBox[{{1310, 4248, 4249, 1150, 1326, 968, 1358, 1097, 
                1273, 832, 1367, 1127, 1303, 921, 1343, 1050, 1226, 727, 1373,
                 1141, 1317, 948, 1352, 1077, 1253, 786, 1114, 1290, 875, 
                1004, 1180, 641, 976, 1105, 1281, 846, 1371, 1134}}], 
               PolygonBox[CompressedData["
1:eJwNy002gmEYBuAnZczUT6VFtARDE0uwAM4RYhMkMkET+lNGzgnhWIIVVMIO
EBm5Bte5v+e+3y+3trG6PhURCVZ4SUV0ZiPatKYjPoxLyYg9/riyn+iqtif5
Tla/y4SWvaJ7pOnNm8zoi/zStB/rzm0PckRaf+PekT80vDnS92joX+Wifpsx
dXtZd2a7l0OufS/Ytvim5s2h/o4B87oCX1zaSrpT/9zKPnP6TT65sB/oJuTd
Xe/25Yz+ma5+2V0l6/4H5D0yGQ==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1, 374, 264, 483, 179, 459, 350, 496, 116, 436, 327, 
               489, 241, 473, 364, 75, 416, 306, 221, 466}], 
              
              LineBox[{449, 340, 254, 51, 398, 288, 203, 140, 443, 334, 248, 
               98, 427, 318, 233, 170, 2, 375}], 
              LineBox[{99, 3, 376, 266, 181, 118, 77, 526}], 
              LineBox[{4, 509}], 
              LineBox[{5, 6, 510}], 
              LineBox[{7, 377, 267, 182, 119, 78}], 
              LineBox[{8, 378, 268, 183, 120, 79, 55, 401}], 
              LineBox[{291, 206, 143, 101, 9, 379, 269, 184, 121, 536}], 
              LineBox[{10, 380, 270, 185, 122, 81, 419, 309, 224, 161, 542}], 
              
              LineBox[{57, 403, 293, 208, 145, 444, 335, 249, 103, 428, 319, 
               234, 469, 360, 171, 453, 344, 258, 11, 381, 271, 186, 460, 351,
                123}], 
              
              LineBox[{470, 361, 172, 454, 345, 259, 12, 382, 272, 187, 124, 
               438, 329, 243, 83, 421, 311, 226, 163, 543}], 
              
              LineBox[{405, 295, 210, 147, 105, 430, 321, 235, 173, 13, 383, 
               273, 188, 125, 537}], 
              LineBox[{407, 297, 212, 149, 107, 15, 385, 275, 190, 544}], 
              LineBox[{108, 16, 386, 276, 191, 128, 87, 529}], 
              LineBox[{18, 19, 511}], 
              LineBox[{20, 21, 512}], 
              LineBox[{22, 23, 513}], 
              LineBox[{24, 25, 514}], 
              LineBox[{26, 27, 515}], 
              LineBox[{28, 29, 516}], 
              LineBox[{30, 31, 32, 517}], 
              LineBox[{33, 518}], 
              LineBox[{34, 35, 519}], 
              
              LineBox[{431, 322, 236, 174, 39, 391, 281, 196, 133, 439, 330, 
               244, 92, 424, 314}], 
              
              LineBox[{260, 481, 372, 507, 40, 392, 282, 484, 197, 461, 352, 
               497, 134, 440, 331, 491, 245, 475, 366, 503}], 
              LineBox[CompressedData["
1:eJwV0TlLXUEYBuBzBbfCKp1b0M5Er1dbtXNHm2uRwl0Ei4Ar/gbX/AHXUk0V
TZU0Wki8WgiBFC4XEQu1ECOIC6LgM8XD+34zHA4zUzIwkhyORVH0jRrlUq7R
wJI5zrFemhFFC3LbnORVH2VTr+dW/0FK7ySTMvOMLOCPfij7mdJ/yTYe9bQc
oVvfkLVcc2X+J4d4YN28K7+E/xHjnAleaLS/LCvDOTgx/5WD3LNo3pEd3PBm
PpNjPIc0b8kG/utH8iub+r7sIotP5llZyJ4+zW+9nSe9h+96XThHOBNNrJgT
nIa7ZZzPzFkrIhXui3x33SubydPL5bz9YvbDv+njg70WWUGcHHOlTJCrV4V3
9c1HDvQSa3Oyn1ZWrVeRDvdGkf0J+TPcJXfhPjgIb0M2F0yG96fa3jsjjEsU

               "]], 
              
              LineBox[{265, 180, 117, 76, 417, 307, 222, 159, 52, 399, 289, 
               204, 141, 539}], 
              LineBox[{53, 522}], 
              LineBox[{54, 400, 290, 205, 142, 100, 532}], 
              LineBox[{418, 308, 223, 160, 56, 402, 292, 207, 144, 102, 533}], 
              
              LineBox[{328, 490, 242, 474, 365, 502, 82, 420, 310, 487, 225, 
               467, 358, 500, 162, 450, 341, 493, 255, 479, 370, 505, 58, 404,
                294, 485, 209, 463, 354, 498, 146, 445, 336, 250, 477, 368, 
               104, 429, 320}], 
              
              LineBox[{84, 422, 312, 227, 164, 60, 406, 296, 211, 148, 106, 
               534}], 
              LineBox[{127, 86, 62, 408, 298, 213, 150, 540}], 
              LineBox[{63, 17}], 
              LineBox[{277, 192, 129, 88, 64, 523}], 
              LineBox[{388, 278, 193, 130, 89, 65, 524}], 
              
              LineBox[{390, 280, 195, 132, 91, 423, 313, 228, 165, 67, 410, 
               300, 215, 152}], 
              
              LineBox[{229, 166, 451, 342, 256, 68, 411, 301, 216, 464, 355, 
               153, 446, 337, 251, 111, 432, 323, 237, 471, 362, 175, 455, 
               346}], 
              LineBox[{384, 274, 189, 126, 85, 528}], 
              LineBox[{389, 279, 194, 131, 90, 530}], 
              LineBox[{409, 299, 214, 151, 109, 535}]}, 
             Annotation[#, "Charting`Private`Tag$268893#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[{615, 1157, 981, 852, 763, 704, 1439}], 
              LineBox[{665, 616, 617, 1158, 982, 853, 764, 705, 1440}], 
              LineBox[{742, 619, 1160, 984, 855, 766, 707, 1441}], 
              LineBox[{804, 744, 621, 1162, 986, 857, 768, 709}], 
              LineBox[{622, 1163, 987, 858, 769, 710, 671, 1430}], 
              LineBox[{623, 624, 1164, 988, 859, 770, 711, 1443}], 
              
              LineBox[{672, 1200, 1024, 895, 806, 746, 625, 1165, 989, 860, 
               771}], 
              LineBox[{674, 627, 1167, 991, 862, 773, 1452}], 
              LineBox[{676, 629, 1169, 993, 864, 1458}], 
              
              LineBox[{747, 630, 1170, 994, 865, 776, 1246, 1070, 941, 717, 
               1217, 1041, 1339, 912, 1299, 1123, 1365}], 
              LineBox[{1144, 1375, 749, 1233, 1057, 1345, 928, 1306, 1130, 
               839, 1277, 1101, 972, 632, 1172, 996, 867, 778, 1248, 1072, 
               943, 719, 1219, 1043, 1341, 914, 1301, 1125}], 
              
              LineBox[{1381, 633, 1173, 997, 868, 779, 720, 1220, 1044, 915, 
               826, 681, 1205, 1029, 900, 1295, 1119, 1364, 811, 1260}], 
              
              LineBox[{1356, 955, 1321, 1145, 751, 1235, 1059, 930, 841, 634, 
               1174, 998, 869, 780, 1249, 1073, 944, 1313, 1137, 721, 1221, 
               1045, 1342}], 
              LineBox[{974, 1330, 1154, 635, 1424}], 
              LineBox[{637, 1176, 1000, 871, 782, 723, 684, 1207}], 
              
              LineBox[{1031, 1336, 902, 1296, 1120, 813, 1262, 1086, 957, 753,
                1237, 1061, 932, 843, 638, 1177, 1001, 872, 1288, 1112, 783, 
               1251, 1075}], 
              
              LineBox[{1370, 844, 1280, 1104, 975, 639, 1178, 1002, 873, 784, 
               725, 1224, 1048, 919, 830, 1271, 1095, 966, 1325, 1149, 1378, 
               686}], 
              
              LineBox[{1337, 904, 1297, 1121, 815, 1264, 1088, 959, 755, 1239,
                1063, 934, 845, 640, 1179, 1003, 874, 1289, 1113, 785, 1252, 
               1076, 1351}], 
              
              LineBox[{1310, 1134, 1371, 846, 1281, 1105, 976, 641, 1180, 
               1004, 875, 1290, 1114, 786, 1253, 1077, 1352, 948, 1317, 1141, 
               1373, 727, 1226, 1050, 1343, 921, 1303, 1127, 1367, 832, 1273, 
               1097, 1358, 968, 1326, 1150}], 
              
              LineBox[{688, 1211, 1035, 1338, 906, 1298, 1122, 817, 1266, 
               1090, 961, 1322, 1146, 757, 1241, 1065, 936, 847, 1282, 1106, 
               977, 642, 1181, 1005, 876, 1291, 1115, 1362, 787, 1254}], 
              
              LineBox[{1066, 1348, 937, 1311, 1135, 848, 1283, 1107, 978, 643,
                1182, 1006, 877, 788, 1255, 1079, 950, 729, 1228, 1052, 923, 
               1304, 1128, 1368, 834, 1274}], 
              
              LineBox[{1098, 1359, 969, 1327, 1151, 690, 1213, 1037, 908, 819,
                759, 1243, 1067, 938, 849, 1284, 1108, 979, 1331, 1155, 644, 
               1183, 1007}], 
              
              LineBox[{645, 1184, 1008, 879, 790, 731, 1230, 1054, 1344, 925, 
               1305, 1129, 1369}], 
              LineBox[{647, 1426}], 
              LineBox[{648, 649, 4260, 1427}], 
              LineBox[{650, 651, 652, 1428}], 
              LineBox[{653, 1185, 1009, 880, 791, 732, 1446}], 
              LineBox[CompressedData["
1:eJwV0LkuxGEUhvFjmdq01jEXoMMduAHiBhRKEju12thJLI3dkEiIfbsDjXbs
rsA6o/H7F0/ec573fM2X7ept7ymLiG7cVUZksFoR0Ybj8ogbexUmkj0V0SKL
fA5r/Ie9D9UocCdYcjcp1/WffD9q8MCdYgobui9uALXY9+aRP8OyeVpuuvnW
DaIOT9yW7lzOJLP+hx/CIV8vn/kLrNhn5babX34YDXhJnO5SzmFHX+RHkMEr
d4VVN/NyV1/iR9GIt+SNLp+OuDYvIO/mTzeGI11Wvid/h1tdGjmuFQf6El/g
mrDHdSDFd9rvzc3mcXO3XHT7D7HjP+c=
               "]], 
              LineBox[{666, 1429}], 
              
              LineBox[{1159, 983, 854, 765, 706, 667, 1196, 1020, 891, 802, 
               1454}], 
              LineBox[{668, 1197, 1021, 892, 803, 743, 1450}], 
              
              LineBox[{1161, 985, 856, 767, 4276, 708, 669, 1198, 1022, 893, 
               1461}], 
              LineBox[{670, 1199, 1023, 894, 805, 745, 1451}], 
              LineBox[{712, 673, 1431}], 
              LineBox[{714, 675, 1432}], 
              LineBox[{775, 716, 677, 1201, 1025, 896, 807, 1455}], 
              
              LineBox[{678, 1202, 1026, 897, 808, 748, 1232, 1056, 927, 838, 
               1276, 1100, 971, 1328, 1152, 1380, 631}], 
              
              LineBox[{995, 1333, 866, 1286, 1110, 777, 1247, 1071, 942, 1312,
                1136, 718, 1218, 1042, 1340, 913, 1300, 1124, 824, 1268, 1092,
                1357, 963, 1324, 1148, 1377, 679, 1203, 1027, 1335, 898, 1294,
                1118, 1363, 809, 1258, 1082, 1355, 953}], 
              
              LineBox[{1366, 825, 1269, 1093, 964, 680, 1204, 1028, 899, 810, 
               1259, 1083, 954, 750, 1234, 1058, 929, 1307, 1131, 840, 1278, 
               1102, 1360, 973, 1329, 1153}], 
              
              LineBox[{916, 1302, 1126, 827, 1270, 1094, 965, 682, 1206, 1030,
                901, 812, 1261, 1085, 956, 752, 1236, 1060, 931, 1308, 1132, 
               842, 1279, 1103, 1361}], 
              LineBox[{1372, 722, 1222, 1046, 917, 828, 683, 1433}], 
              
              LineBox[{946, 1315, 1139, 724, 1223, 1047, 918, 829, 685, 1208, 
               1032, 903, 814, 1263, 1087, 958, 754, 1238, 1062, 1346, 933, 
               1309}], 
              
              LineBox[{947, 1316, 1140, 726, 1225, 1049, 920, 831, 1272, 1096,
                967, 687, 1210, 1034, 905, 816, 1265, 1089, 960, 756, 1240, 
               1064, 1347, 935}], 
              
              LineBox[{1078, 1353, 949, 1318, 1142, 728, 1227, 1051, 922, 833,
                689, 1212, 1036, 907, 818, 1267, 1091, 962, 1323, 1147, 1376, 
               758, 1242}], 
              
              LineBox[{878, 1292, 1116, 789, 1256, 1080, 951, 730, 1229, 1053,
                924, 835, 691, 1434}], 
              LineBox[{836, 1275, 1099, 970, 692, 646}], 
              
              LineBox[{693, 1214, 1038, 909, 820, 760, 1244, 1068, 939, 850, 
               1457}], 
              LineBox[{1166, 990, 861, 772, 713, 1444}], 
              LineBox[{1168, 992, 863, 774, 715, 1445}], 
              
              LineBox[{1175, 999, 870, 1287, 1111, 781, 1250, 1074, 1349, 945,
                1314}], 
              
              LineBox[{1186, 1010, 881, 1293, 1117, 792, 1257, 1081, 1354, 
               952, 1319, 1143, 1374}]}, 
             Annotation[#, "Charting`Private`Tag$268893#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1546, 1965, 1848, 2081, 1752, 2060, 1944, 2093, 1678, 
               2038, 1922, 2086, 1826, 2072, 1956, 1626, 2018, 1901, 1805, 
               2066}], 
              
              LineBox[{2050, 1934, 1838, 1596, 1995, 1878, 1782, 1708, 2044, 
               1928, 1832, 1655, 2029, 1913, 1817, 1743, 1547, 1966}], 
              LineBox[{1656, 1548, 1967, 1850, 1754, 1680, 1628, 2166}], 
              LineBox[{1549, 2151}], 
              LineBox[{1550, 1551, 2152}], 
              LineBox[{1552, 1553, 2153}], 
              LineBox[{1555, 1969, 1852, 1756, 1682, 1630, 2167}], 
              
              LineBox[{1600, 1997, 1880, 1784, 1710, 1657, 1556, 1970, 1853, 
               1757, 1683}], 
              
              LineBox[{1999, 1882, 1786, 1712, 1659, 2030, 1914, 1818, 1744, 
               1558, 1972, 1855, 1759, 1685, 2039}], 
              
              LineBox[{2084, 1819, 2069, 1953, 2095, 1745, 2055, 1939, 2091, 
               1843, 2078, 1962, 2100, 1559, 1973, 1856, 2082, 1760, 2061, 
               1945, 1686, 2040, 1924, 1828, 2073, 1957, 1634, 2022, 1905, 
               1809, 2067, 1951, 1735, 2052, 1936, 1840}], 
              
              LineBox[{2001, 1884, 1788, 1714, 2046, 1930, 1834, 1661, 2032, 
               1916, 1820, 1746, 1560, 1974, 1857, 1761, 2187}], 
              LineBox[{1662, 1561, 1975, 1858, 1762, 1688, 1636, 2168}], 
              LineBox[{1664, 1563, 1977, 1860, 1764, 1690, 1638, 2169}], 
              LineBox[{1564, 2154}], 
              LineBox[{1565, 1566, 2155}], 
              LineBox[{1567, 1568, 1978, 1861, 1765, 1691, 1639, 1609, 2164}], 
              
              LineBox[{1889, 1793, 1719, 1666, 1571, 1981, 1864, 1768, 1694, 
               2179}], 
              
              LineBox[{2008, 1891, 1795, 1721, 2047, 1931, 1835, 1668, 2033, 
               1917, 1821, 1747, 2056, 1940, 1844, 1573, 1983, 1866, 1770, 
               1696, 2041}], 
              
              LineBox[{1918, 2085, 1822, 2070, 1954, 2096, 1748, 2057, 1941, 
               2092, 1845, 2079, 1963, 1574, 1984, 1867, 1771, 2062, 1946, 
               1697, 2042, 1926, 1830, 1645, 2027, 1910, 1814, 1740, 2054}], 
              
              LineBox[{1842, 1615, 2010, 1893, 1797, 1723, 1670, 2035, 1919, 
               1823, 1749, 1575, 1985, 1868}], 
              LineBox[{1671, 1576, 1986, 1869, 1773, 1699, 1647, 2170}], 
              LineBox[{1578, 2156}], 
              LineBox[{1579, 1580, 2157}], 
              LineBox[{1581, 1582, 1988, 1871, 1775, 1701, 1649, 2171}], 
              LineBox[{1673, 1584, 1990, 1873, 1777, 1703, 1651, 2028, 1911}], 
              
              LineBox[{1846, 1585, 1991, 1874, 1778, 2063, 1947, 1704, 2043, 
               1927, 2087, 1831, 2074, 1958, 2097}], 
              
              LineBox[{1912, 1816, 1742, 1622, 2015, 1898, 1802, 2189, 1728, 
               1675, 1586, 1992, 1875, 1779, 1705, 1652, 1623, 2016, 1899, 
               1803, 1729, 1676, 2176, 1587, 1993, 1876, 1780, 1706, 1653, 
               1624, 1588, 1589, 2158, 1590, 1591, 2159, 1592, 1593, 2160, 
               1594, 1994, 1877, 1781, 2188, 1707, 1654, 1625, 2017, 1900, 
               1804, 1730, 2184, 1677, 2037, 1921, 1825, 1751, 2059, 1943, 
               1847, 2080, 1964, 2101, 1595}], 
              
              LineBox[{1849, 1753, 1679, 1627, 2019, 1902, 1806, 1732, 1597, 
               1996, 1879, 1783, 1709, 2180}], 
              LineBox[{1598, 2161}], 
              LineBox[{1629, 1599, 2162}], 
              LineBox[{1631, 1601, 1998, 1881, 1785, 1711, 1658, 2172}], 
              
              LineBox[{1827, 1633, 2021, 1904, 1808, 1734, 2051, 1935, 1839, 
               1603, 2000, 1883, 1787, 2064, 1948, 1713, 2045, 1929, 2088, 
               1833, 2075, 1959, 2098, 1660, 2031, 1915}], 
              
              LineBox[{1687, 1635, 2023, 1906, 1810, 1736, 1605, 2002, 1885, 
               1789, 1715, 2181}], 
              LineBox[{1606, 2003, 1886, 1790, 1716, 1663, 1562}], 
              
              LineBox[{1859, 1763, 1689, 1637, 1607, 2004, 1887, 1791, 1717, 
               2182}], 
              LineBox[{1608, 2163}], 
              LineBox[{1640, 1610, 2005, 1888, 1792, 1718, 1665, 2173}], 
              
              LineBox[{1642, 2024, 1907, 1811, 1737, 1612, 2007, 1890, 1794, 
               1720, 1667, 2174}], 
              
              LineBox[{1925, 1829, 1644, 2026, 1909, 1813, 2068, 1952, 1739, 
               2053, 1937, 2090, 1841, 2077, 1961, 1614, 2009, 1892, 2083, 
               1796, 2065, 1949, 2094, 1722, 2048, 1932, 2089, 1836, 2076, 
               1960, 2099, 1669, 2034}], 
              LineBox[{1772, 1698, 1646, 1616, 2011, 1894, 1798, 1724, 2183}], 
              LineBox[{1617, 1577}], 
              LineBox[{1870, 1774, 1700, 1648, 1618, 2165}], 
              
              LineBox[{1989, 1872, 1776, 1702, 1650, 1620, 2013, 1896, 1800, 
               1726}], 
              
              LineBox[{1815, 1741, 1621, 2014, 1897, 1801, 1727, 2049, 1933, 
               1837, 1674, 2036, 1920, 1824, 2071, 1955, 1750, 2058, 1942}], 
              
              LineBox[{1971, 1854, 1758, 1684, 1632, 2020, 1903, 1807, 1733, 
               2185}], 
              LineBox[{1980, 1863, 1767, 1693, 1641, 1611}], 
              
              LineBox[{1982, 1865, 1769, 1695, 1643, 2025, 1908, 1812, 1738, 
               2186}], 
              LineBox[{2012, 1895, 1799, 1725, 1672, 2175}], 
              LineBox[{1968, 1851, 1755, 1681, 2177}], 
              LineBox[{1979, 1862, 1766, 1692, 2178}]}, 
             Annotation[#, "Charting`Private`Tag$268893#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[{2272, 2894, 2704, 2551, 2437, 2362, 3182}], 
              LineBox[{2934, 2744, 2591, 2477, 2401, 2273, 2895}], 
              LineBox[{2402, 2274, 2896, 2706, 2553, 2439, 2364, 2970, 2780}], 
              
              LineBox[{2829, 2676, 2404, 2992, 2803, 2650, 3061, 2872, 2536, 
               3038, 2849, 3103, 2696, 3078, 2889, 2276, 2898, 2708, 3083, 
               2555, 3046, 2857, 3106, 2441, 3008, 2819, 3094, 2666, 3066, 
               2877, 3114, 2366, 2972, 2782, 3088}], 
              LineBox[{2482, 2406, 2278, 2900, 2710, 2557, 2443, 2368}], 
              LineBox[{2279, 2901, 2711, 2558, 2444, 2369, 2329, 3179}], 
              LineBox[{2280, 2281, 3172}], 
              LineBox[{2282, 2283, 3173}], 
              LineBox[{2284, 2285, 3174}], 
              LineBox[{2286, 2287, 3175}], 
              LineBox[{2288, 3176}], 
              
              LineBox[{2407, 2289, 2903, 2713, 2560, 2446, 2371, 2974, 2784, 
               2631, 3212}], 
              
              LineBox[{3071, 2882, 2409, 2995, 2806, 2653, 3062, 2873, 2539, 
               3039, 2850, 3104, 2697, 3079, 2890, 3121, 2291, 2905, 2715, 
               3084, 2562, 3047, 2858, 3107, 2448, 3010, 2821, 3095, 2668, 
               3067, 2878, 3115, 2373, 2976, 2786, 3089}], 
              
              LineBox[{2698, 2292, 2906, 2716, 2563, 2449, 2374, 2334, 2944, 
               2754, 3214}], 
              LineBox[{2601, 2487, 2411, 2293, 2907, 2717, 2564, 2450, 3192}], 
              LineBox[{2294, 3177}], 
              
              LineBox[{2755, 2602, 2488, 2412, 2297, 2910, 2720, 2567, 2453, 
               3194}], 
              
              LineBox[{2947, 2757, 2604, 2490, 2414, 2299, 2912, 2722, 2569, 
               2455, 3195}], 
              
              LineBox[{2808, 2655, 2541, 2300, 2913, 2723, 2570, 2456, 3011, 
               2822, 2669, 2381, 2979, 2789, 2636, 2522, 3033}], 
              
              LineBox[{2691, 2341, 2949, 2759, 2606, 3053, 2864, 2492, 3023, 
               2834, 3098, 2681, 3072, 2883, 2416, 2998, 2809, 3092, 2656, 
               3063, 2874, 3113, 2542, 3041, 2852, 3105, 2699, 3080, 2891, 
               3122, 2301, 2914, 2724}], 
              
              LineBox[{2999, 2810, 2657, 2543, 2302, 2915, 2725, 2572, 2458, 
               2383, 3184}], 
              
              LineBox[{2682, 2419, 3000, 2811, 2658, 2544, 2304, 2917, 2727, 
               2574, 2460, 3013, 2824, 2671, 2385, 2982, 2792, 3090, 2639, 
               3059, 2870}], 
              
              LineBox[{3035, 2846, 3101, 2693, 3076, 2887, 3119, 2345, 2953, 
               2763, 3086, 2610, 3054, 2865, 3109, 2496, 3025, 2836, 3099, 
               2683, 3073, 2884, 3118, 2420, 3001, 2812, 3093, 2659, 3064, 
               2875, 2545, 3042, 2853, 2700, 3081, 2892, 2305, 2918, 2728}], 
              
              LineBox[{2684, 2421, 3002, 2813, 2660, 2546, 2306, 2919, 2729, 
               2576, 2462, 2387, 2984, 2794, 2641}], 
              LineBox[{2423, 2308, 2921, 2731, 2578, 2464, 2389, 3185}], 
              LineBox[{2425, 2310, 2923, 2733, 2580, 2466, 2391, 3186}], 
              LineBox[CompressedData["
1:eJwV0UlIlHEYgPG/QZAz00ag2SJ1qS6CaWmWLQZBly4tZoslQcslTW05lFYm
VET7fm9VW2w9tFzVdnIqKzyU2iFKiyzoYv2+w8P7Ps/7zTcwM3FdxeLylBBC
Et9iISzBp9QQsnEsHsJrXoBDiRBatJ0Ygs1uN/Q0XOAlmIrjers2E618F7b7
bKpZ7nZTT8dFvgI5OKEntVlo4zWIoUJv1kbjUvQu71lp5uKk2xu9EE94LXa4
x80tbrf0DFzmq9CgfedL8ZnXeXaaeUp/q83GU74bCVTqt7UxOODZK9pqNOq9
2jJ08ek4rb3jc/CM78EDbYCvxy8+FFXaHT4WV3krj6OKl/Ime5+9GN18n+/N
M8/oHdpcPOftPA01fC9/aP9n34C/9kL0613mJBzWh/Fq+137OHy1Z6FBbzMT
yPB91W4D9qLozte4X7P/0Efx5WY/z8cU3uPeaZ+ATL7ffbC5kGeb+e5n7e/1
4Xye2cdz8MItaaajVh/kvsBepz8yAzbqv3m3fTKORO/hW+337OPRyNfiuvaT
l+ALr/e+GeY5/YNWhJfR74oR2Kbf1zJx0LNNWhkKcN7toz4fr6L/1L3efKyn
YJP+h/dEvwOO8phnFtlzzZFu/wGn4HKB
               "]], 
              
              LineBox[{2705, 2552, 2438, 2363, 2323, 2935, 2745, 2592, 2478, 
               3197}], 
              
              LineBox[{2627, 2513, 2324, 2936, 2746, 2593, 2479, 2403, 2991, 
               2802, 2649, 2535, 3205}], 
              
              LineBox[{2897, 2707, 2554, 2440, 3007, 2818, 2665, 2365, 2971, 
               2781, 2628, 2514, 3029, 2840, 2687, 2325, 2937, 2747, 2594, 
               2480, 3018}], 
              
              LineBox[{2629, 3056, 2867, 3110, 2515, 3030, 2841, 3100, 2688, 
               3075, 2886, 2326, 2938, 2748, 2595, 3051, 2862, 2481, 3019, 
               2830, 2677, 2405, 2993, 2804, 2651, 2537, 3206}], 
              
              LineBox[{2899, 2709, 2556, 2442, 2367, 2973, 2783, 2630, 2516, 
               2327, 2939, 2749, 2596, 3210}], 
              LineBox[{2328, 3178}], 
              
              LineBox[{2712, 2559, 2445, 2370, 2330, 2940, 2750, 2597, 2483, 
               3198}], 
              
              LineBox[{2517, 2331, 2941, 2751, 2598, 2484, 2408, 2994, 2805, 
               2652, 2538, 3207}], 
              
              LineBox[{2904, 2714, 2561, 2447, 3009, 2820, 2667, 2372, 2975, 
               2785, 2632, 2518, 3031, 2842, 2689, 2332, 2942, 2752, 2599, 
               3052, 2863, 2485, 3020}], 
              
              LineBox[{2633, 3057, 2868, 2519, 3032, 2843, 2690, 2333, 2943, 
               2753, 2600, 2486, 3021, 2832, 2679, 2410, 2996, 2807, 2654, 
               2540, 3040, 2851, 3218}], 
              LineBox[{2375, 2335, 3180}], 
              LineBox[{2376, 2336, 3181}], 
              LineBox[{2378, 2338, 2946, 2756, 2603, 2489, 2413, 3187}], 
              
              LineBox[{2380, 2978, 2788, 2635, 2521, 2340, 2948, 2758, 2605, 
               2491, 3022, 2833, 2680, 2415, 2997}], 
              
              LineBox[{2571, 3048, 2859, 3108, 2457, 3012, 2823, 3096, 2670, 
               3068, 2879, 2382, 2980, 2790, 2637, 3058, 2869, 2523, 3034, 
               2845, 2692, 2342, 2950, 2760, 2607, 2493, 3199}], 
              LineBox[{2343, 2951, 2761, 2608, 2494, 2418, 2303}], 
              
              LineBox[{2726, 2573, 2459, 2384, 2981, 2791, 2638, 2524, 2344, 
               2952, 2762, 2609, 2495, 3024, 2835}], 
              
              LineBox[{2575, 3049, 2860, 2461, 3014, 2825, 2672, 2386, 2983, 
               2793, 2640, 2526, 3036, 2847, 2694, 2346, 2954, 2764, 2611, 
               2497, 3026, 2837}], 
              LineBox[{2527, 2347, 2955, 2765, 2612, 2498, 2422, 2307}], 
              
              LineBox[{2920, 2730, 2577, 2463, 2388, 2985, 2795, 2642, 2528, 
               2348, 2956, 2766, 2613, 2499}], 
              
              LineBox[{2922, 2732, 2579, 2465, 2390, 2350, 2958, 2768, 2615, 
               2501}], 
              LineBox[{2351, 2959, 2769, 2616, 2502, 2426, 3189}], 
              LineBox[{2909, 2719, 2566, 2452, 2377, 2337}], 
              
              LineBox[{2911, 2721, 2568, 2454, 2379, 2977, 2787, 2634, 2520, 
               3201}], 
              LineBox[{2957, 2767, 2614, 2500, 2424, 3188}], 
              LineBox[{2908, 2718, 2565, 2451, 3193}], 
              
              LineBox[{2924, 2734, 2581, 2467, 3015, 2826, 2673, 3069, 2880, 
               3116}]}, Annotation[#, "Charting`Private`Tag$268893#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[{3300, 3841, 3682, 3553, 3456, 3388, 4095}], 
              LineBox[{3879, 3720, 3591, 3494, 3425, 3301, 3842}], 
              LineBox[{3426, 3302, 3843, 3684, 3555, 3458, 3390, 3910, 3751}], 
              
              LineBox[{3790, 3661, 3428, 3925, 3767, 3638, 3541, 3304, 3845, 
               3686, 3557, 3460, 3937, 3779, 3650, 3392, 3912, 3753, 3624}], 
              
              LineBox[{3994, 3836, 4030, 3305, 3846, 3687, 3999, 3558, 3969, 
               3811, 3461, 3938, 3780, 3651, 3393, 3913, 3754, 3625, 3528, 
               3957, 3799, 3670, 3355, 3884, 3725, 3596, 4124}], 
              
              LineBox[{3499, 3430, 3927, 3769, 3640, 3543, 3306, 3847, 3688, 
               3559, 3462, 3394}], 
              LineBox[{3307, 3848, 3689, 3560, 3463, 3395, 3357, 4090}], 
              LineBox[{3309, 4085}], 
              LineBox[{3310, 3311, 3850, 3691, 3562, 3465, 3397, 4097}], 
              LineBox[{3359, 3312, 3851, 3692, 3563, 3466, 4114}], 
              LineBox[{3361, 3314, 3853, 3694, 3565, 4121}], 
              LineBox[{3315, 4086}], 
              LineBox[{3316, 3317, 3854, 3695, 3566, 3469, 3401, 4099}], 
              
              LineBox[{3663, 3433, 3928, 3770, 3641, 3544, 3319, 3856, 3697, 
               3568, 3471, 3939, 3781, 3652, 3403, 3915, 3756, 4005}], 
              
              LineBox[{3676, 3995, 3837, 3320, 3857, 3698, 3569, 3472, 3940, 
               3782, 3653, 3404, 3916, 3757, 3628, 3531, 3366, 3889, 3730, 
               3601}], 
              LineBox[{3504, 3435, 3321, 3858, 3699, 3570, 3473, 4115}], 
              LineBox[{3322, 3859, 3700, 3571, 3474, 3406, 3368, 4094}], 
              LineBox[{3323, 3324, 4087}], 
              LineBox[{3325, 3326, 4088}], 
              LineBox[{3327, 3328, 4089}], 
              LineBox[{3329, 3330, 3860, 3701, 3572, 3475, 3407, 4100}], 
              
              LineBox[{3438, 3332, 3862, 3703, 3574, 3477, 3409, 3917, 3758, 
               3629, 4126}], 
              
              LineBox[{3532, 3371, 3893, 3734, 3605, 3508, 3439, 3930, 3772, 
               3643, 3546, 3333, 3863, 3704}], 
              
              LineBox[{3665, 3440, 3931, 3773, 3644, 3983, 3825, 3547, 3964, 
               3806, 4017, 3677, 3996, 3838, 4031, 3334, 3864, 3705, 4000, 
               3576, 3970, 3812, 4018, 3479, 3942, 3784, 4010, 3655, 3985, 
               3827, 4024, 3411, 3919, 3760, 4006, 3631}], 
              LineBox[{3442, 3336, 3866, 3707, 3578, 3481, 3413, 4101}], 
              LineBox[{3444, 3338, 3868, 3709, 3580, 3483, 3415, 4102}], 
              LineBox[CompressedData["
1:eJwV0UlsjHEcxvF/rRftlFaIpe10cdfFrovlgou2B4pOuSEhIbHrlNoODhIn
h5l2unCQOKAOti56Q0KNk6AkLg4OEieJ+vwP3zzP9/m97zTpmzx0vPVYQQgh
j4dFIazGu8IQarEpEUKGr8DK4hCe2U5hAcrc0vZ/egZ7UIfN9mx8Hs/5aRR5
t1CWu/XYZ/Qs9qIejfY+exle8DPxHVTYL9kC+nip3+mQDWhy67eX4yU/i4R7
QibdLtsL0M/3Yb7bGtnslrNXYJSfQzEq7b22WVjm2ZxtP9aixW3AnsQYPx/f
8cxCWeV2xT4bA/wAdtse8Vq850s9u05usQ/aKjHOL8TnbaO8EZ/5IlTbrvI5
GOSH+Wt9Bzp5K3+s12GKr8dW2xCvwgQ/wfN6Gy7yTj6mN+GW/lt+sXfr03oK
GX1Glthr9Gt6Ts6VvfKHHHI7or/R78ud8rb8I5/KlHubHOH3ZL28KX/JEfkh
fiv5iT+QHfKO/Bu/vdzgvk0Ox78lq+UN+VO+cjupf9Tb0c1TfFxvxlee5t/0
LpTyVfy6Pg/LfYdh21HbW74rPsfb+RO9AXm+Edttd3kNJvkS76Zll33C1oJp
3sO/6weR1UP8P2Ox239bWWuz
               "]], 
              
              LineBox[{3683, 3554, 3457, 3389, 3351, 3880, 3721, 3592, 3495, 
               4117}], 
              LineBox[{3622, 3525, 3352, 3881, 3722, 3593, 3496, 3427, 4104}], 
              
              LineBox[{3844, 3685, 3556, 3459, 3391, 3911, 3752, 3623, 3526, 
               3353, 3882, 3723, 3594, 3497, 3948}], 
              
              LineBox[{3977, 3819, 3527, 3956, 3798, 3669, 3990, 3832, 3354, 
               3883, 3724, 4002, 3595, 3972, 3814, 3498, 3949, 3791, 4012, 
               3662, 3988, 3830, 4027, 3429, 3926, 3768, 4008, 3639, 3981, 
               3823, 4022, 3542, 3962, 3804, 4015}], 
              LineBox[{3356, 3885, 3726, 3597, 3500, 3431, 4105}], 
              LineBox[{3396, 3358, 4091}], 
              LineBox[{3398, 3360, 4092}], 
              LineBox[{3468, 3400, 3362, 4093}], 
              LineBox[{3363, 3886, 3727, 3598, 3501, 3432, 4106}], 
              
              LineBox[{3855, 3696, 3567, 3470, 3402, 3914, 3755, 3626, 3529, 
               3364, 3887, 3728, 3599, 3502, 3950}], 
              
              LineBox[{3627, 3978, 3820, 3530, 3958, 3800, 3671, 3991, 3833, 
               3365, 3888, 3729, 4003, 3600, 3973, 3815, 4019, 3503, 3951, 
               3793, 4013, 3664, 3989, 3831, 4028, 3434, 3929, 3771, 4009, 
               3642, 3982, 3824, 4023, 3545, 3963, 3805, 4016}], 
              LineBox[{3405, 3367, 3890, 3731, 3602, 3505, 3436, 4107}], 
              LineBox[{3369, 3891, 3732, 3603, 3506, 3437, 3331}], 
              
              LineBox[{3702, 3573, 3476, 3408, 3370, 3892, 3733, 3604, 3507, 
               4118}], 
              
              LineBox[{3575, 3478, 3941, 3783, 3654, 3410, 3918, 3759, 3630, 
               3533, 3959, 3801, 3672, 3372, 3894, 3735, 3606, 3974, 3816, 
               3509, 3952, 3794}], 
              
              LineBox[{4020, 3534, 3960, 3802, 3673, 3992, 3834, 3373, 3895, 
               3736, 3607, 3975, 3817, 3510, 3953, 3795, 3666, 3441, 3932, 
               3774, 3645, 3548, 3965, 3807, 3678, 3335}], 
              
              LineBox[{3865, 3706, 3577, 3480, 3943, 3785, 3656, 3412, 3920, 
               3761, 3632, 3535, 3374, 3896, 3737, 3608, 3511}], 
              
              LineBox[{3867, 3708, 3579, 3482, 3414, 3376, 3898, 3739, 3610, 
               3513}], 
              LineBox[{3377, 3899, 3740, 3611, 3514, 3445, 4109}], 
              LineBox[{3852, 3693, 3564, 3467, 3399, 4098}], 
              LineBox[{3897, 3738, 3609, 3512, 3443, 4108}], 
              LineBox[{3849, 3690, 3561, 3464, 4113}], 
              
              LineBox[{3869, 3710, 3581, 3484, 3944, 3786, 3657, 3986, 3828, 
               4025}]}, Annotation[#, "Charting`Private`Tag$268893#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{548, 1383, 547}], 
             LineBox[{550, 1384, 549}], 
             LineBox[{551, 1385, 437}], 
             LineBox[{552, 1386, 110}], 
             LineBox[{554, 1387, 553}], 
             LineBox[{357, 1388, 158}], 
             LineBox[{556, 1389, 555}], 
             LineBox[{557, 1390, 387}], 
             LineBox[{559, 1391, 558}], 
             LineBox[{560, 1392, 495}], 
             LineBox[{562, 1393, 561}], 
             LineBox[{564, 1394, 563}], 
             LineBox[{566, 1395, 565}], 
             LineBox[{568, 1396, 567}], 
             LineBox[{570, 1397, 569}], 
             LineBox[{572, 1398, 571}], 
             LineBox[{574, 1399, 573}], 
             LineBox[{576, 1400, 575}], 
             LineBox[{578, 1401, 577}], 
             LineBox[{580, 1402, 579}], 
             LineBox[{581, 1403, 36}], 
             LineBox[{583, 1404, 582}], 
             LineBox[{585, 1405, 584}], 
             LineBox[{586, 1406, 37}], 
             LineBox[{588, 1407, 587}], 
             LineBox[{589, 1408, 527}], 
             LineBox[{590, 1409, 61}], 
             LineBox[{592, 1410, 591}], 
             LineBox[{593, 1411, 66}], 
             LineBox[{595, 1412, 594}], 
             LineBox[{597, 1413, 596}], 
             LineBox[{598, 1414, 14}], 
             LineBox[{599, 1415, 38}], 
             LineBox[{600, 1416, 80}], 
             LineBox[{602, 1417, 601}], 
             LineBox[{604, 1418, 603}], 
             LineBox[{606, 1419, 605}], 
             LineBox[{608, 1420, 607}], 
             LineBox[{609, 1421, 59}], 
             LineBox[{611, 1422, 610}], 
             LineBox[{613, 614, 612}], 
             LineBox[{1476, 2102, 1475}], 
             LineBox[{1478, 2103, 1477}], 
             LineBox[{1480, 2104, 1479}], 
             LineBox[{1481, 2105, 823}], 
             LineBox[{1483, 2106, 1482}], 
             LineBox[{1484, 2107, 1350}], 
             LineBox[{1209, 2108, 1033}], 
             LineBox[{1486, 2109, 1485}], 
             LineBox[{1488, 2110, 1487}], 
             LineBox[{1489, 2111, 1133}], 
             LineBox[{1423, 2112, 1171}], 
             LineBox[{1490, 636}], 
             LineBox[{1491, 2113, 1425}], 
             LineBox[{1493, 2114, 1492}], 
             LineBox[{1495, 2115, 1494}], 
             LineBox[{1497, 2116, 1496}], 
             LineBox[{1498, 2117, 618}], 
             LineBox[{1500, 2118, 1499}], 
             LineBox[{1501, 2119, 626}], 
             LineBox[{1502, 2120, 628}], 
             LineBox[{1504, 2121, 1503}], 
             LineBox[{1506, 2122, 1505}], 
             LineBox[{1508, 2123, 1507}], 
             LineBox[{1510, 2124, 1509}], 
             LineBox[{1512, 2125, 1511}], 
             LineBox[{1513, 2126, 1442}], 
             LineBox[{1515, 2127, 1514}], 
             LineBox[{1517, 2128, 1516}], 
             LineBox[{1519, 2129, 1518}], 
             LineBox[{1521, 2130, 1520}], 
             LineBox[{1522, 2131, 620}], 
             LineBox[{1524, 2132, 1523}], 
             LineBox[{1526, 2133, 1525}], 
             LineBox[{1528, 2134, 1527}], 
             LineBox[{1530, 2135, 1529}], 
             LineBox[{1531, 2136, 654}], 
             LineBox[{1533, 2137, 1532}], 
             LineBox[{1535, 2138, 1534}], 
             LineBox[{1463, 2139, 1320}], 
             LineBox[{1464, 2140, 1334}], 
             LineBox[{1536, 2141, 1465}], 
             LineBox[{1466, 2142, 1379}], 
             LineBox[{1537, 2143, 1467}], 
             LineBox[{1538, 2144, 1468}], 
             LineBox[{1469, 2145, 1084}], 
             LineBox[{1539, 2146, 1470}], 
             LineBox[{1471, 2147, 1138}], 
             LineBox[{1540, 2148, 1472}], 
             LineBox[{1541, 2149, 1473}], 
             LineBox[{1542, 2150, 1474}], 
             LineBox[{1544, 1545, 1543}], 
             LineBox[{2191, 3124, 2190}], 
             LineBox[{2192, 3125, 1987}], 
             LineBox[{2194, 3126, 2193}], 
             LineBox[{2196, 3127, 2195}], 
             LineBox[{2197, 3128, 1604}], 
             LineBox[{2199, 3129, 2198}], 
             LineBox[{2201, 3130, 2200}], 
             LineBox[{2203, 3131, 2202}], 
             LineBox[{2204, 3132, 1923}], 
             LineBox[{2205, 3133, 1938}], 
             LineBox[{1950, 3134, 1731}], 
             LineBox[{2207, 3135, 2206}], 
             LineBox[{2208, 3136, 1976}], 
             LineBox[{2209, 3137, 2006}], 
             LineBox[{2211, 3138, 2210}], 
             LineBox[{2213, 3139, 2212}], 
             LineBox[{2215, 3140, 2214}], 
             LineBox[{2217, 3141, 2216}], 
             LineBox[{2218, 3142, 1554}], 
             LineBox[{2220, 3143, 2219}], 
             LineBox[{2222, 3144, 2221}], 
             LineBox[{2224, 3145, 2223}], 
             LineBox[{2226, 3146, 2225}], 
             LineBox[{2228, 3147, 2227}], 
             LineBox[{2230, 3148, 2229}], 
             LineBox[{2232, 3149, 2231}], 
             LineBox[{2233, 3150, 1569}], 
             LineBox[{2235, 3151, 2234}], 
             LineBox[{2237, 3152, 2236}], 
             LineBox[{2239, 3153, 2238}], 
             LineBox[{2241, 3154, 2240}], 
             LineBox[{2243, 3155, 2242}], 
             LineBox[{2245, 3156, 2244}], 
             LineBox[{2246, 3157, 1619}], 
             LineBox[{2247, 3158, 1557}], 
             LineBox[{2248, 3159, 1570}], 
             LineBox[{2249, 3160, 1572}], 
             LineBox[{2250, 3161, 1583}], 
             LineBox[{2252, 3162, 2251}], 
             LineBox[{2254, 3163, 2253}], 
             LineBox[{2256, 3164, 2255}], 
             LineBox[{2258, 3165, 2257}], 
             LineBox[{2260, 3166, 2259}], 
             LineBox[{2262, 3167, 2261}], 
             LineBox[{2264, 3168, 2263}], 
             LineBox[{2265, 3169, 1602}], 
             LineBox[{2266, 3170, 1613}], 
             LineBox[{2268, 3171, 2267}], 
             LineBox[{2270, 2271, 2269}], 
             LineBox[{3220, 4033, 3219}], 
             LineBox[{3221, 4034, 2916}], 
             LineBox[{3223, 4035, 3222}], 
             LineBox[{3225, 4036, 3224}], 
             LineBox[{3227, 4037, 3226}], 
             LineBox[{3228, 4038, 3085}], 
             LineBox[{3230, 4039, 3229}], 
             LineBox[{2831, 4040, 2678}], 
             LineBox[{3231, 4041, 2844}], 
             LineBox[{3233, 4042, 3232}], 
             LineBox[{3234, 4043, 2945}], 
             LineBox[{3236, 4044, 3235}], 
             LineBox[{3238, 4045, 3237}], 
             LineBox[{3240, 4046, 3239}], 
             LineBox[{3242, 4047, 3241}], 
             LineBox[{3111, 4048, 2525}], 
             LineBox[{3244, 4049, 3243}], 
             LineBox[{3246, 4050, 3245}], 
             LineBox[{3248, 4051, 3247}], 
             LineBox[{3250, 4052, 3249}], 
             LineBox[{3251, 4053, 2902}], 
             LineBox[{3252, 4054, 2295}], 
             LineBox[{3254, 4055, 3253}], 
             LineBox[{3256, 4056, 3255}], 
             LineBox[{3258, 4057, 3257}], 
             LineBox[{3259, 4058, 2296}], 
             LineBox[{3260, 4059, 2322}], 
             LineBox[{3261, 4060, 3183}], 
             LineBox[{3263, 4061, 3262}], 
             LineBox[{3264, 4062, 2349}], 
             LineBox[{3266, 4063, 3265}], 
             LineBox[{3267, 4064, 2298}], 
             LineBox[{3268, 4065, 2309}], 
             LineBox[{3269, 4066, 2311}], 
             LineBox[{3271, 4067, 3270}], 
             LineBox[{3273, 4068, 3272}], 
             LineBox[{3275, 4069, 3274}], 
             LineBox[{3277, 4070, 3276}], 
             LineBox[{3279, 4071, 3278}], 
             LineBox[{3281, 4072, 3280}], 
             LineBox[{3282, 4073, 2417}], 
             LineBox[{3283, 4074, 2339}], 
             LineBox[{3284, 4075, 2275}], 
             LineBox[{3285, 4076, 2277}], 
             LineBox[{3286, 4077, 2290}], 
             LineBox[{3288, 4078, 3287}], 
             LineBox[{3290, 4079, 3289}], 
             LineBox[{3291, 4080, 3213}], 
             LineBox[{3293, 4081, 3292}], 
             LineBox[{3294, 4082, 3215}], 
             LineBox[{3295, 4083, 3216}], 
             LineBox[{3296, 4084, 3217}], 
             LineBox[{3298, 3299, 3297}], 
             LineBox[{4129, 4128}], 
             LineBox[{4130, 3861}], 
             LineBox[{4132, 4131}], 
             LineBox[{4134, 4133}], 
             LineBox[{4136, 4135}], 
             LineBox[{4138, 4137}], 
             LineBox[{4140, 4139}], 
             LineBox[{4141, 3675}], 
             LineBox[{4143, 4142}], 
             LineBox[{4144, 3792}], 
             LineBox[{4146, 4145}], 
             LineBox[{4148, 4147}], 
             LineBox[{3979, 3821}], 
             LineBox[{4150, 4149}], 
             LineBox[{4152, 4151}], 
             LineBox[{4154, 4153}], 
             LineBox[{4156, 4155}], 
             LineBox[{4158, 4157}], 
             LineBox[{4160, 4159}], 
             LineBox[{4162, 4161}], 
             LineBox[{4163, 3308}], 
             LineBox[{4165, 4164}], 
             LineBox[{4166, 3313}], 
             LineBox[{4168, 4167}], 
             LineBox[{4170, 4169}], 
             LineBox[{4171, 3350}], 
             LineBox[{4172, 4096}], 
             LineBox[{4174, 4173}], 
             LineBox[{4176, 4175}], 
             LineBox[{4178, 4177}], 
             LineBox[{4180, 4179}], 
             LineBox[{4181, 3375}], 
             LineBox[{4183, 4182}], 
             LineBox[{4184, 3303}], 
             LineBox[{4186, 4185}], 
             LineBox[{4187, 3318}], 
             LineBox[{4189, 4188}], 
             LineBox[{4190, 3337}], 
             LineBox[{4191, 3339}], 
             LineBox[{4193, 4192}], 
             LineBox[{4195, 4194}], 
             LineBox[{4197, 4196}], 
             LineBox[{4199, 4198}], 
             LineBox[{4201, 4200}], 
             LineBox[{4203, 4202}], 
             LineBox[{4205, 4204}], 
             LineBox[{4207, 4206}], 
             LineBox[{4208, 4127}], 
             LineBox[{4210, 4211, 4209}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution with discrete integrator\"", 
           TraditionalForm], PlotRange -> {{0., 6.24999987244898}, {-4., 4.}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8676786275888042`*^9, {3.8676860045224595`*^9, 3.8676860210162115`*^9}, 
   3.867686570053507*^9},
 CellLabel->
  "Out[1274]=",ExpressionUUID->"c321ad7e-0332-44d6-be2c-384c27987c7d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8676787080462055`*^9, 
  3.867678709339792*^9}},ExpressionUUID->"cf1b83ea-ecb3-4982-abee-\
0ea8327b6be7"]
}, Open  ]],

Cell["\<\
Feed Forward solution with feedback for any initial condition ( constrained)\
\>", "Section",
 CellChangeTimes->{{3.8676787239761353`*^9, 3.867678742879121*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"10b8cd82-d3da-46bd-b6bd-9fdb39ab5b28"],

Cell[CellGroupData[{

Cell["Simulation Studies (Distribution of Computation Times)", "Section",
 CellChangeTimes->{{3.8676787559189715`*^9, 3.8676787864822464`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"4a6cc590-f442-4cf2-ba2b-04683823857f"],

Cell[CellGroupData[{

Cell["Define Computation Time function", "Subsection",
 CellChangeTimes->{{3.8672557229786463`*^9, 3.8672557272082777`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"1acf1d26-5d35-4cd7-a88d-d4dc3918c398"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "20"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";", 
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";", 
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";", 
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";", 
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";", 
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ComputationTime", "[", "ICs_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "time", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EInitial", " ", "=", " ", 
       RowBox[{"Energy", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ICs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time", ",", 
         RowBox[{"{", 
          RowBox[{
          "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
           "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
           "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], 
          "}"}]}], "}"}], "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"RepeatedTiming", "[", 
         RowBox[{"ffCartPendulum2", "[", 
          RowBox[{
          "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
           "order", ",", "maxIter", ",", "maxError", ",", "uMax", ",", 
           "maxCount", ",", "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], 
         "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", "time"}]}], 
    "\[IndentingNewLine]", "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<ICDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<EDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.867184370452484*^9, 3.867184448677465*^9}, {
   3.8671844902671623`*^9, 3.867184495244571*^9}, 3.867184528106059*^9, {
   3.8671862887189293`*^9, 3.8671862925896935`*^9}, {3.867253140769041*^9, 
   3.867253141246888*^9}, {3.8672578912201786`*^9, 3.8672578913411407`*^9}, {
   3.8672595919409623`*^9, 3.867259592079918*^9}, {3.8673405812868757`*^9, 
   3.867340603445762*^9}, 3.8676861679184675`*^9, {3.8676862008239994`*^9, 
   3.86768621012204*^9}, 3.8676886190745077`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[1275]:=",ExpressionUUID->"57df34eb-be8d-4a64-9302-c29f455a1c19"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use the above 200 ICData points for all simulations", "Subsection",
 CellChangeTimes->{{3.867255702607237*^9, 3.86725571325979*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"40fac5c4-92d3-4ac8-9002-d6b88edfe490"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"numberTests", " ", "=", " ", "200"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", 
    StyleBox[
     RowBox[{"3", "0"}]]}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"xdotMin", " ", "=", " ", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"xdotMax", " ", "=", " ", "2"}], ";", 
    RowBox[{"\[Theta]Min", " ", "=", " ", 
     RowBox[{"-", "\[Pi]"}]}], ";", 
    RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";", 
    RowBox[{"\[Theta]dotMin", " ", "=", " ", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"TimingData1", " ", "=", " ", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"ComputationTime1", "[", 
       RowBox[{"ICData", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"TimingData2", " ", "=", " ", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"ComputationTime2", "[", 
        RowBox[{"ICData", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<TimingDataComputation30Case1.mx\>\"", ",", "TimingData1"}], 
    "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<TimingDataComputation30Case2.mx\>\"", ",", "TimingData2"}], 
    "]"}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.867184586779293*^9, 3.8671845895114202`*^9}, {
   3.8671846846809797`*^9, 3.8671847053273783`*^9}, 3.8671851118983345`*^9, {
   3.867185164337563*^9, 3.8671852257009335`*^9}, {3.8671852939810944`*^9, 
   3.8671853209264803`*^9}, {3.8671853661800013`*^9, 
   3.8671854973450503`*^9}, {3.867185536305588*^9, 3.867185536836419*^9}, {
   3.867185611716468*^9, 3.86718573374044*^9}, {3.8671857668468494`*^9, 
   3.867185778752042*^9}, {3.867185965776222*^9, 3.8671859904993143`*^9}, {
   3.867186040244404*^9, 3.8671860631090903`*^9}, 3.8671863132360897`*^9, {
   3.867186408939479*^9, 3.867186409331354*^9}, {3.867187144095339*^9, 
   3.8671871689134026`*^9}, {3.8672541096625853`*^9, 3.867254118498727*^9}, {
   3.8672556291819906`*^9, 3.8672556530212784`*^9}, 3.8672556986765084`*^9, {
   3.8672558861018724`*^9, 3.8672558947070885`*^9}, {3.867259675646882*^9, 
   3.8672596869992075`*^9}, {3.867686673047736*^9, 3.8676867391327085`*^9}, {
   3.867688624249861*^9, 3.8676886268430357`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"f0bcb1f9-1023-4c45-b370-ffafaf992339"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<TimingDataComputation30.mx\>\"", ",", "TimingData30"}], 
    "]"}], ";"}],
  FontWeight->"Plain"]], "Input",
 CellChangeTimes->{{3.867255788732373*^9, 3.8672558020400677`*^9}, {
  3.867256047886532*^9, 3.8672560480174894`*^9}, {3.8672581568862295`*^9, 
  3.867258156959205*^9}, {3.8672596994761715`*^9, 3.867259699591134*^9}, {
  3.867260635029503*^9, 3.8672606527257757`*^9}},
 CellLabel->
  "In[540]:=",ExpressionUUID->"da68167a-10fe-499e-8579-6514c16ceb60"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Obtain Previous Data", "Subsection",
 CellChangeTimes->{{3.867686784611235*^9, 3.8676867894376993`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"cf3b84f8-1f81-448e-bdd3-b12ef82c3559"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"TimingData20", " ", "=", " ", 
    RowBox[{
    "Import", "[", "\"\<TimingDataComputation20BackwardIntegrate.mx\>\"", 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"TimingData30", " ", "=", " ", 
    RowBox[{
    "Import", "[", "\"\<TimingDataComputation30BackwardIntegrate.mx\>\"", 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"TimingData40", " ", "=", " ", 
    RowBox[{
    "Import", "[", "\"\<TimingDataComputation40BackwardIntegrate.mx\>\"", 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"{", 
    RowBox[{"TimingData20", ",", "TimingData30", ",", "TimingData40"}], "}"}],
    "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.867258204008984*^9, 3.8672582077827625`*^9}, {
  3.867686321407626*^9, 3.867686367669908*^9}, {3.867686491606471*^9, 
  3.8676865043034306`*^9}, {3.867686805114711*^9, 3.8676868265928764`*^9}, {
  3.8676869067383747`*^9, 3.8676869099823437`*^9}},
 CellLabel->
  "In[1372]:=",ExpressionUUID->"42375b5b-da59-4dfc-b24c-5a8d77109fa2"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQEf7NWfLnmWeP2xPVTAoTDKO0Zp0nMon8Phwtcb
H3fdfAPlCzjY3posvYD/GZQv4tB1o5C39uALKF/CwamdSz464TWUL+Nw4LlO
hH8QTF7BoeLayRJnvXdQvpKD93KppMS1r6B8FQeTdXmr+Xe9hfLVHFr0l8fX
bn8J5Ws4VGT716/5BlOv5cC9v8up8SyMr+NglFB/QnAhzD96DiuKFzya/BKm
38Dh4sJDx8VmPIHyDR1Mc7wyGtf8gvKNHG6vfuVg2AvTb+zgWmve9HPDDyjf
xOHWr762Hz0weVOHo2XfGe5uh9lv5tDBu3tKfDeMb+7gVVwq+KEUFn4WDmET
pfuTv7621xB4IrbghoWDaZG6Em/Eb3sAez14Fw==
      "]], 
     LineBox[{{25.148335527943605`, 1.7089969}, {26., 0.83729255}, {27., 
      0.9756929}, {28., 0.8579144}, {29., 0.6469186}, {30., 0.9268262}, {31., 
      1.36129035}, {32., 0.72420835}, {33., 0.9279841}, {34., 0.889516}, {35.,
       0.63368645}, {36., 0.64643025}, {37., 0.9270917}, {38., 0.9574761}, {
      39., 0.8940976}, {40., 0.7141379}, {41., 1.1724373}, {41.79910557774799,
       1.7089969}}], 
     LineBox[{{43.208686680859195`, 1.7089969}, {44., 0.88899875}, {45., 
      0.8302223}, {46., 0.72325875}, {47., 0.92023195}, {48., 1.3347473}, {
      49., 0.8212846}, {50., 0.84418225}, {51., 0.81248945}, {52., 
      0.94345115}, {53., 0.8497996}, {54., 0.6070535}, {55., 0.76797875}, {
      56., 0.5991084}, {57., 0.625966}, {58., 0.6115347}, {59., 0.8156899}, {
      59.92381831708572, 1.7089969}}], LineBox[CompressedData["
1:eJw9VQ1QVGUUXQiCZNTcxqBRZJGJcEKENmRAwaMkSAHLsvws+wNv34KOQfEj
kkDmIg5ik5WAA5NhCFO2xCaJkKjJUhoBKaIzuYrMkiwEgsAqaKBWON6vN/Pm
zZ17z73nnnu/77nzmbFptgKBQDv/Pv3W4TljgWM0/HNeW7lQ/miD4Omji0aB
cPfgi3lDz2yBBKfXpf+o9honvwRN8jWvt2ZOkD8GhRP6jcE8+REDT/vsfAfx
XYqPwQHbldtvYfCZbYzBrSuBFqd/KV4ghfdZLuvSTwwvhecPCon2EMXrpGjZ
77JAvOUO4aVobbEZbcAw4WNxo/XCuLFijPCxEN2zppZ9wvjG4srBOf+6GOJj
jMVoTsWlrW6jhJfBsLNq6NjFB4SXIeD+zK+KKIaXoV7iNffGNrKNMpi9frHV
H71H+DjUNBbknegkfoiDaLHJ9+hy0k8Xh/rJx7V2wYx/HC58Y+4JYnwF8ShZ
+7WmevEk4ePh2m/odXageF08IovDjQcDWf14mDzPXNsUzfgnoCvM7+M1lmnC
JyDBxnH79QnKr0uAeUzhJ2xk+idgmd7QIT5PtiARbU23jTG/M/0TkZUb5L/e
luk/7+8V807Dc4RPRN2DjG36MLYfcmQvWeWc20DxkCPQ0VzDF5E+OjnKO/XV
mjusfzlqN56w9KjY/JMgzbCPeidylvBJeBSR/nPDMOs/CaYDRalTz98m/Lx/
35ORoT+ZfgpEeDQWV7xAfKBA3JbQ6z3jjL8CTV7hKuUOpp8Ck3et1fcXUX6B
Ep07ZV3pr1oIr4S1YaJ2NopsnRJc1fHL/yyjekYlTqb/kVvVRX6BCnsyfZKy
5tj8VTBHWtWTHqz+vO1cWX9qM50XowrB6ULnvjamvxqD5fr+BeeYfmqc2+sR
kG9k81Oju+Tz6NNXGX81moUpZZmFbP7JkBwvCfcWjxA+GaL2UIeXDtM+6ZIh
bV/fVnyG4ZPR3LG1VruJ/IIU8KUPP1jizvpPwcKlpaF9a9n+p8A/YOpU2Pvk
N6agacLNqdeGzY9Dt8Q+wPAZ1Rdx8HQfz0zt/JvycVjt6jIUEkL9cxy8nbrf
atlFto5DCJc/lthMdg2H8k9zfI9wrB6HInvftAFQ/gEO0d9al/epWP8adJVN
OqqraP4iDX4zpY6IC9k+aBAcbjlbEUT3G6fBQ1npuJeM7ZcG+3IO+a0WWam+
Bu+9srTf7U02bw2EH7runV5B/AY0MGXAnH14hurzOClRfrTOjvQU8YDp8pdf
+LJ94NHacXW/zwjl43iEv1ywKG+a7QePgQinyngXwtfw0PRq374pZueNx7HI
us6Lu+i+G+AhTFI8Vg2y/dVipshSHdpK+UVazK6wfHctgO47aGH4S/HujjKm
vxZl7Uf22N9k97MWabLvp3wqqZ8a7fw+2lXuNgxueJLz1Y1V57X//x/+A5j9
AXQ=
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBmIQneXuO/3CwWQH0yJ1Jd6I3/YMIPAg2eFi4a0fO6wf
Q/gMKQ4TjFdM/Hj4DYSvkOLw9JA5s9BiqLxDikOY+LKlKzQ/QvgJKQ5nek4c
3Mb/EsJvSHFwvDvb6lXyUwh/QYqDx/S3PwMk3kH4B1Ic5pnIbbMrg/IfpDi8
uVk8c1bKe6j9qQ4f+9fKVvtA9SukOnB+PrxWfT7M/lQHj/wd/XesoO5LSHXQ
ULGTObkKal5DqoOgitc1m0NQ+QWpDgZGMRU7Hz+B2p/q4CTSxJ1xA8p/kOqg
mXw90GAeVD1DmoNIbxSbow/M/2kONuwPNtTVQvkOaQ55H6c+nTDzBdT+NAcp
2de2H3qg5jWkObxtO+GyVAcaHgvSHDZwdV29Kgx1/4E0h61WU/48nvEKan+a
Q9oZ4X1ruV5D7U934LeeW3qdGapeId3h86UV0s2cUPUO6Q5alzbzZ8x/BLU/
3WF6wQtduXsw+9Md9jzy61vuBZVfkO5wT+yi9GStZ1D70x2as9+9qI/8DLU/
3WHW4tqkYFmoexkyHH7tSt8RIwE1TyHDYaVxkFdyPjQ+HDIcDh9bnfQgHhb/
GQ7CoZwJIu9+QO3PcJg+8SpHxDKo/gUZDjtf7E/K+ADzf4bDqtdfJ19LgZr3
IMMh9DVf8eSkn1D7Mx0qTtybE1301B4ABxXlJA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
     LineBox[{{1., 0.835097}, {2., 0.94029365}, {3., 1.0791972}, {4., 
      0.8783493}, {5., 0.9599853}, {6., 1.04219045}, {7., 1.0088594}, {8., 
      1.2069077}, {9., 1.0444408}, {10., 0.94880195}, {11., 0.93644635}, {12.,
       0.95320645}, {13., 1.0395822}, {14., 0.8452316}, {15., 0.9137424}, {
      16., 1.4005738}, {16.792142198908344`, 1.7089969}}], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQPYnzeVCblKGDaZG6Em/Eb3sGMDByyCveZ2yq8gHK
N3Yor/t2onsijG/i8C9tb3FzzSco39Th0uTeJJH9MHkzhyNbbx2O83gD5Zs7
3CrSOxqq+hnKt3CI3HxfRdwWpt7Soc59nmnn6ldQvpWDa5peQaUOTN7aYaHX
WbmMpTD7bBz4Niyo2nr2HZRv6/Bd6Vbfyt0w++wcFHpDNNsbPkL59g7xXYm2
S9a9h/IdHO7OFZi68CmU3+Dg0LHQoLlnNsx8R4fb25ds8VCB6m9wdLgh+Eh1
8rvXUHknh08rnHzt2qH8BieHKq78o1tav0LlnR14HzFb//OGur/B2aH8N/ub
o9ow97k4VBzj+PT33luovIvDhi+vZ7Dc/AKVd3VIYuWc7b0bal6Dq4NPdoX8
m0iYvJvDGh8n45nWMPe5Odx8fJ5xsirUPAZ3h3camty7KqDh2eDucCw/9Un7
UVh4ejjkPRF9HN4O0+/hsHHvbqscc5i8p4PUuiOf5up9sA/qfpzr4uUJTx8A
6Jetig==
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQnXBqtsyJfZ4OpkXqSrwRv+0ZwMDLoWjh9G9FXz5B
+A1eDhGv5ee/nvYeKu/tIBGqvePIt9dQeW+HBVP+1wcd/gqV93G48qLK3UgA
ym/wcTD8YG6qPQ2qnsHXYdtTob8TdGHyvg4THj9invb9LVTez4GtdU7QzpZf
UHk/h0O2rUIyuTB5f4dzG9g9Qzs/QOX9Hfb+3Zlx4sdHqHyAQ9u0CztOW0Ld
7xDg8DFsuUhrOtT9DQEOJyckv5ZkegXhHwhwmPN9yQ5/Y5j/Ah02frB39vz0
Gao/0OH821OX4zqh6hsCHfLZTZSSQqDuORDowNP+ns8qCOb/IIcn+deszU9A
5R2CHAoOzP31rQXqvoYgh0tM/Ok39aDuPxDkcH75S769DTD/BTscvaWZbvkL
Gl4OwQ7rj+7QKUiG6Q928Fd4I7LaDco/EOxgZRXcy/zlC1R/iANHuMPCefug
8g4hDmnWUw8VWUHNbwhxuPVVZpG09jv7D6Zyp7oWhsDjHwBTm649
      "]], 
     LineBox[{{83.5023012906922, 1.7089969}, {84., 1.019595}, {85., 
      1.0045611}, {86., 0.9322422}, {87., 1.0029968}, {87.3313423540416, 
      1.7089969}}], 
     LineBox[{{88.72301314441194, 1.7089969}, {89., 1.163183}, {90., 
      0.858881}, {91., 0.83968085}, {92., 1.0880751}, {93., 0.84447595}, {
      93.34621236135597, 1.7089969}}], 
     LineBox[{{94.65506447355517, 1.7089969}, {95., 0.8493432}, {96., 
      0.9881078}, {97., 1.348561}, {98., 1.235996}, {99., 1.0481731}, {100., 
      0.8431225}, {101., 0.9108323}, {102., 0.817074}, {103., 0.99504315}, {
      104., 0.87852995}, {105., 0.8387701}, {105.99907385881255`, 
      1.7089969}}], 
     LineBox[{{106.00105936244556`, 1.7089969}, {107., 0.94830785}, {108., 
      0.8560901}, {109., 1.0804524}, {110., 1.0539054}, {111., 0.86561845}, {
      112., 0.7544949}, {113., 0.88072525}, {114., 0.84963755}, {115., 
      0.83944515}, {116., 0.82991605}, {117., 1.0044658}, {118., 1.3398059}, {
      119., 1.01628865}, {120., 0.9517786}, {121., 1.0139535}, {122., 
      1.0595795}, {122.97233981452673`, 1.7089969}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQfeXCukOhB+McTIvUlXgjftszgEG8wwznOTPsP7yC
8B3iHRLLVl3v2P0Rwm+IdzhZMztyWdV3CP9AvMONKReYIk3eQfUnOPyce7oy
++kbCF8hweFP4e+nk0uh8g4JDrN1/md3BULNS0hwYFr/4ISv3Qeo+QkOU+7/
9ZFYAZVfkOAgXb9oU6IvVP5AgsOHo0XLUkzeQvgPEhxiHjKV5mtB5RkSHUwz
OV+U+EPdr5DokKG5hX2rFcw/iQ7hYtYXftZ/gdqf6KDbfTnq0aX3UPsTHVbv
z++VLILKL0h0EDr7SbtnMdQ/BxIdjA7usq55/AJqf6JDl9irX/4cUPMZkhxu
WIpPYO/5DLU/ycFy03Shd1ZQ/zgkOey61fU31Rwqn5DkEDRJqt595muo/UkO
FXP+3tHW+wq1P8mhpF/wq3oYlH8gyeHp/tknJ4VAw/9BkoPUyiC+gzlQ9zIk
O3ysWML92x1qn0Kyg3vHdJ9dQtDwcUh2eJmy8mudMyz8kx1OlmuWnoyAxW+y
w8K2/MS7O75B7U92WNfzZ8OU6tf2YlXT1Sr2J8PTCwDQocQT
      "]], 
     LineBox[{{158.01550368818337`, 1.7089969}, {159., 0.79864335}, {160., 
      1.1294534}, {161., 1.3235393}, {162., 0.85820605}, {163., 1.4000965}, {
      164., 0.92476715}, {165., 1.1737606}, {165.84173498878, 1.7089969}}], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQXbnZrurhkRQH0yJ1Jd6I3/YMIPAgxaGJPfHkhtRP
ED5DqkPSys6ZN66/hvAVUh0eu7DOcK6B8h1SHbL5BM5c3PwBwk9Idah6I6vy
S/sjhN+Q6rBv6Rz9b3ZQ+QWpDswnSn8IWL6B8A+kOsRH8s2c7vEKan+qQ8Tx
j85LDaHqGdIcVlcofz4xH8pXSHPoqfijYSIFdZ9DmoPiBG+ZyoS3UPvTHIy7
nk4LU4aa35Dm8P7BmRDdvvdQ+9McOPjkYj78gLrvQJrD97jrXRMboPofpDnU
vPr7urH6HdT+dId44Y7ejI1Q+xTSHfL0+S4nM0Dd45DuUBvb9r/kMdS+hHSH
tIduqhd+f4Han+4w9fuZtzvdoeG1IN0h7Mj86Q4NMP+nO+w3UvWI7v4KtT/d
YY/4SsdHJ2D+z3AQvm64bocF1H0KGQ575s3Tvbbsnf3Jpd9k63Uz4PEHACIO
ndE=
      "]], 
     LineBox[{{194.69738701691276`, 1.7089969}, {195., 1.2621494}, {196., 
      0.8895673}, {197., 0.90217055}, {198., 0.8757974}, {198.8161483651261, 
      1.7089969}}], 
     LineBox[{{199.1929913846097, 1.7089969}, {200., 0.92414515}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
     LineBox[{{1., 1.110527}, {2., 0.93791875}, {3., 1.0351716}, {
      3.8519076489913213`, 1.7089969}}], 
     LineBox[{{4.136436646842901, 1.7089969}, {5., 0.9676003}, {6., 
      1.0043726}, {7., 0.94690405}, {8., 1.022249}, {9., 0.9842245}, {10., 
      0.92877335}, {11., 0.9620967}, {12., 0.9447046}, {13., 0.97961635}, {
      14., 1.0830387}, {15., 1.0013947}, {15.797671968455756`, 1.7089969}}], 
     LineBox[{{17.771993344737805`, 1.7089969}, {18., 1.0491432}, {19., 
      1.6611836}, {20., 1.1437841}, {21., 0.9478656}, {22., 0.9379809}, {23., 
      1.0095129}, {24., 0.9580224}, {25., 1.109095}, {26., 1.0079224}, {
      26.815827584260738`, 1.7089969}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQfX0WZ3yqjrWDaZG6Em/Eb3sGMLBx2K9e/aG+5x2U
b+vALPP8tvqb11C+ncMTwzi/lIMfoHx7h8m2c9uYbd5C+Q4Oqc3T9vd8hvIb
HBy2Xv124IbPJ6i8o4PTk5k2XH+g+hscHabdvMZaJA+Td3LYckZJJHrhR6i8
k8P+X3rRC+s+Q+WdHbT15z3rhLmvwdnB8BPvg45OmH4Xh6m1f7x6XsHsd3Fo
XTzLQ57zK1Te1SFJm3fh+81Q9Q2uDs8F35YYmsP0uznsV13qqlQJs9/N4WTa
X5mr9rDwcXdQZ1S4u28vzHx3h0sq6eKHFsDCw8NBp3X288eiMPM9HPRXc18O
MoGFp6eD72yxRP3Kd/a3RGY6Oip6wsMfAIyAe9k=
      "]], 
     LineBox[{{51.75580618779798, 1.7089969}, {52., 1.0124488}, {53., 
      0.9750743}, {54., 1.1291502}, {54.3841963571604, 1.7089969}}], 
     LineBox[{{55.58378545767127, 1.7089969}, {56., 1.0463744}, {57., 
      1.1551147}, {57.81438438119648, 1.7089969}}], 
     LineBox[{{58.14284381526876, 1.7089969}, {59., 0.95146485}, {60., 
      1.1338753}, {60.359590251324825`, 1.7089969}}], 
     LineBox[{{61.599541431571474`, 1.7089969}, {62., 1.024852}, {63., 
      1.0437112}, {64., 1.1053062}, {65., 1.0060269}, {66., 1.0519877}, {67., 
      0.9955861}, {67.77012321245115, 1.7089969}}], 
     LineBox[{{68.25925603524787, 1.7089969}, {69., 1.1005624}, {70., 
      0.97089}, {70.93312392075765, 1.7089969}}], 
     LineBox[{{71.06561850358592, 1.7089969}, {72., 0.9557304}, {73., 
      1.0121306}, {74., 0.96913615}, {75., 0.9552845}, {76., 0.8776049}, {77.,
       1.0448651}, {78., 1.1009431}, {79., 1.1012201}, {80., 0.9455141}, {81.,
       1.2170052}, {82., 0.93043985}, {83., 0.94979215}, {84., 1.040448}, {
      85., 1.0129379}, {86., 0.9712033}, {87., 0.9413139}, {87.67646465065691,
       1.7089969}}], 
     LineBox[{{89.7164283544068, 1.7089969}, {90., 1.1146575}, {91., 
      1.1043013}, {92., 1.0239805}, {93., 1.0947775}, {93.26003131623085, 
      1.7089969}}], 
     LineBox[{{94.72055237067298, 1.7089969}, {95., 1.0311274}, {96., 
      1.0976201}, {97., 1.1719594}, {98., 1.6487911}, {99., 0.98903495}, {
      99.45530235998531, 1.7089969}}], 
     LineBox[{{100.53280027811577`, 1.7089969}, {101., 0.9537251}, {102., 
      1.0849622}, {103., 0.9760282}, {104., 1.1943908}, {105., 1.1290414}, {
      105.96403747933394`, 1.7089969}}], 
     LineBox[{{106.02819287057768`, 1.7089969}, {107., 0.96324965}, {108., 
      1.1279412}, {109., 1.0804181}, {110., 0.9731344}, {111., 1.0926141}, {
      112., 0.96810225}, {113., 1.0930533}, {114., 1.0585669}, {115., 
      1.0809173}, {116., 1.0307802}, {117., 0.9700644}, {117.3118676874802, 
      1.7089969}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/XD5c4GHq2MdTIvUlXgjftszgMCBWAfrg4uNsg6/
g/AZ4hyK1on/XG32FsJ3iHO4tFRlwvaFHyD8hjiHc5U1hl7HoPwDcQ6Vn+ar
CKfB9Mc77Hte9jQz/yNUf7zDpj8hBZd3QfkN8Q6PG4U2pEt+guqPd5iyevNW
SSWoeQwJDjn/8ycqHITar5DgcDli47oDy2DuSXDQ5mLdNqUWal5CgkPCj0uq
umow8xMckjv3shnLQPkLEhzyr3sHs0RA+QcSHI4XaBevdHgD4T9IcHg0PdT4
2CGY+xMd+OMSfufZQ92nkOhQ0SfE6rLpo33W23sfOc0S4eEHAIwncL8=
      "]], 
     LineBox[{{138.25731100382066`, 1.7089969}, {139., 0.9223702}, {
      139.5651320205895, 1.7089969}}], 
     LineBox[{{140.42573808227232`, 1.7089969}, {141., 0.89252035}, {
      141.8375306036984, 1.7089969}}], 
     LineBox[{{142.1897432966977, 1.7089969}, {143., 1.032648}, {144., 
      1.1066782}, {145., 0.96611455}, {146., 1.0007347}, {147., 1.1887345}, {
      147.3668097184597, 1.7089969}}], 
     LineBox[{{151.16171097293983`, 1.7089969}, {152., 1.1107205}, {153., 
      0.97408445}, {154., 1.0288889}, {155., 1.0560105}, {155.45814935938088`,
       1.7089969}}], 
     LineBox[{{156.5604186939923, 1.7089969}, {157., 1.1032332}, {
      157.43409034493118`, 1.7089969}}], 
     LineBox[{{158.54457805985007`, 1.7089969}, {159., 1.0485711}, {160., 
      1.0367422}, {160.30373936349235`, 1.7089969}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQrRsu9/WNSYqDaZG6Em/Eb3sGEHBIceA+8FXcYPob
CD8hxeGq8bkPG359hPAbUhySUk0+VS59C+EvSHFoajTMudcElT+Q4mB1/dnW
EzxQ8x6kODg1MwvoenyC8BlSHZj+cMpqzYGqV0h12LR0Ec+GV1B5h1QHcaHu
Yn3uD1D7Ux1ebTikK/8Sym9IdVhZ52WV7wHVvyDVYbPRhexFR2H2pzooVH3P
OfQIyn+Q6qDrl93pzQLVz5DmcIPzCru5HMz+NIedy1dbi82GyjukOXzfvNk5
fC/UfwlpDild9/yOw9zfkOaw4vD6v5ybYf5Pc9gy/USCAjPM/jQHvSxHS+k7
UPkHaQ6O7Eyc+mnvoPanO/BozkrK3A2zP91h2/7NtlXKUHmHdIffJyXk0/rf
2VvU+u3kCEiHxw8A8m6KrA==
      "]], 
     LineBox[{{187.56180318250316`, 1.7089969}, {188., 1.1233958}, {189., 
      1.1466213}, {189.39768751366137`, 1.7089969}}], 
     LineBox[{{190.58666073856523`, 1.7089969}, {191., 1.1088936}, {192., 
      1.1203541}, {193., 1.00212415}, {193.89839485639268`, 1.7089969}}], 
     LineBox[{{195.00075451353635`, 1.7089969}, {196., 0.95927825}, {197., 
      0.9738516}, {198., 0.9717265}, {198.84708789064925`, 1.7089969}}], 
     LineBox[{{199.1597736131108, 1.7089969}, {200., 1.0091042}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 200.}, {0, 1.7089969}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.867258684457549*^9, 3.8672588995829515`*^9, 3.8672590297708335`*^9, 
   3.8672606433338146`*^9, 3.867340650412684*^9, 3.8676863143968573`*^9, 
   3.8676864019390016`*^9, 3.867686504959221*^9, {3.86768689829706*^9, 
   3.8676869113359113`*^9}},
 CellLabel->
  "Out[1375]=",ExpressionUUID->"398664f4-2817-43d4-9e7e-21d7cecc87de"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting the Distribution of Timing Data", "Subsection",
 CellChangeTimes->{{3.8672534295616117`*^9, 3.8672534362214565`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"405d1855-8448-4cab-bc06-f99a62d4560d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"N", " ", "=", " ", "20"}], " ", "*)"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"N", " ", "=", " ", "20"}], " ", "*)"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"TimingData1", " ", "=", " ", 
      RowBox[{
      "Import", "[", "\"\<TimingDataComputation20Case1.mx\>\"", "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"numberTests", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "TimingData1", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Tmax", "=", "10"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"binLength", "=", "0.1"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"epsilon", "=", 
      RowBox[{"binLength", "/", "2"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"numberBins", "=", 
      RowBox[{"Tmax", "/", "binLength"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"count20", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"IntegerPart", "[", "numberBins", "]"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Median (n = 20) = \>\"", ",", 
       RowBox[{"Median", "[", "TimingData1", "]"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Interquartile Spread (n = 20) = \>\"", ",", 
       RowBox[{"InterquartileRange", "[", "TimingData1", "]"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Interquartile Spread / Median (n = 20) = \>\"", ",", 
       RowBox[{
        RowBox[{"InterquartileRange", "[", "TimingData1", "]"}], " ", "/", 
        " ", 
        RowBox[{"Median", "[", "TimingData1", "]"}]}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "-", "epsilon"}], "<=", 
             RowBox[{"TimingData1", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "+", "epsilon"}]}], ",", 
            RowBox[{
             RowBox[{"count20", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"count20", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", "1"}]}], ",", "_"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "numberBins"}], "}"}]}], "]"}], ";"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"xTicks", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "binLength"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"IntegerPart", "[", "numberBins", "]"}], ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"1", "/", "binLength"}], "]"}]}], "}"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"count20", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicks", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Time of Computation\>\"", ",", 
         "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Distribution of Computation Time Case 1(N = 20)\>\""}]}], "]"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Bold"], 
   StyleBox[
    RowBox[{
     RowBox[{"TimingData2", " ", "=", " ", 
      RowBox[{
      "Import", "[", "\"\<TimingDataComputation20Case2.mx\>\"", "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"numberTests", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "TimingData2", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Tmax", "=", "10"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"binLength", "=", "0.1"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"epsilon", "=", 
      RowBox[{"binLength", "/", "2"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"numberBins", "=", 
      RowBox[{"Tmax", "/", "binLength"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"count20", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"IntegerPart", "[", "numberBins", "]"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Median (n = 20) = \>\"", ",", 
       RowBox[{"Median", "[", "TimingData2", "]"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Interquartile Spread (n = 20) = \>\"", ",", 
       RowBox[{"InterquartileRange", "[", "TimingData2", "]"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Interquartile Spread / Median (n = 20) = \>\"", ",", 
       RowBox[{
        RowBox[{"InterquartileRange", "[", "TimingData2", "]"}], " ", "/", 
        " ", 
        RowBox[{"Median", "[", "TimingData2", "]"}]}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "-", "epsilon"}], "<=", 
             RowBox[{"TimingData2", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "+", "epsilon"}]}], ",", 
            RowBox[{
             RowBox[{"count20", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"count20", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", "1"}]}], ",", "_"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "numberBins"}], "}"}]}], "]"}], ";"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"xTicks", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "binLength"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"IntegerPart", "[", "numberBins", "]"}], ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"1", "/", "binLength"}], "]"}]}], "}"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"count20", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicks", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Time of Computation\>\"", ",", 
         "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Distribution of Computation Time Case 2(N = 20)\>\""}]}], "]"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"]}]}]], "Input",
 CellChangeTimes->{{3.867253701368676*^9, 3.867253702725238*^9}, {
   3.867253733792187*^9, 3.867253852341834*^9}, {3.8672538837736645`*^9, 
   3.8672539000553975`*^9}, {3.867253942439685*^9, 3.8672539922635665`*^9}, {
   3.867254591183806*^9, 3.8672546415615087`*^9}, {3.8672546788794327`*^9, 
   3.867254681592555*^9}, {3.8672552203022723`*^9, 3.8672552209180727`*^9}, {
   3.867255328226356*^9, 3.867255329558925*^9}, 3.8672559183444414`*^9, {
   3.8672560759744453`*^9, 3.867256079890178*^9}, {3.8672583209391546`*^9, 
   3.8672583437737665`*^9}, {3.8672595252115498`*^9, 3.8672595336298275`*^9}, 
   3.8672618389440117`*^9, 3.867261882207015*^9, 3.8672619530201054`*^9, {
   3.8672619897062387`*^9, 3.8672620198564835`*^9}, {3.867262051964096*^9, 
   3.8672621652214546`*^9}, {3.867262201991558*^9, 3.8672622198887696`*^9}, 
   3.867262485563817*^9, {3.8673423556302524`*^9, 3.8673423883177576`*^9}, {
   3.867342537916732*^9, 3.867342550026843*^9}, 3.8676884646086593`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[1616]:=",ExpressionUUID->"759d86f9-6d63-4111-a77a-f5770bcfb1e4"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Median (n = 20) = \"\>", "\[InvisibleSpace]", "0.787370075`"}],
  SequenceForm["Median (n = 20) = ", 0.787370075],
  Editable->False]], "Print",
 CellChangeTimes->{3.8673423892884455`*^9, 3.8673425514273934`*^9, 
  3.8676865121379366`*^9, 3.867688682175429*^9},
 CellLabel->
  "During evaluation of \
In[1616]:=",ExpressionUUID->"5ee963d5-a2fa-4058-964a-90d069bd7c80"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Interquartile Spread (n = 20) = \"\>", "\[InvisibleSpace]", 
   "1.8244433750000004`"}],
  SequenceForm["Interquartile Spread (n = 20) = ", 1.8244433750000004`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8673423892884455`*^9, 3.8673425514273934`*^9, 
  3.8676865121379366`*^9, 3.867688682179427*^9},
 CellLabel->
  "During evaluation of \
In[1616]:=",ExpressionUUID->"c12bf117-2aee-4333-884f-da5291e075e3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Interquartile Spread / Median (n = 20) = \"\>", 
   "\[InvisibleSpace]", "2.317135782687703`"}],
  SequenceForm["Interquartile Spread / Median (n = 20) = ", 2.317135782687703],
  Editable->False]], "Print",
 CellChangeTimes->{3.8673423892884455`*^9, 3.8673425514273934`*^9, 
  3.8676865121379366`*^9, 3.8676886821854258`*^9},
 CellLabel->
  "During evaluation of \
In[1616]:=",ExpressionUUID->"0ed33177-0b85-4546-a412-0baeaf650ef1"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}, {5., 2.}, {5.5, 5.}}], 
     LineBox[{{8.906976744186046, 5.}, {9., 1.}, {10., 1.}, {
      10.666666666666666`, 5.}}], 
     LineBox[{{11.5, 5.}, {12., 3.}, {13., 1.}, {14., 0.}, {15., 1.}, {16., 
      3.}, {17., 2.}, {18., 0.}, {19., 0.}, {20., 1.}, {21., 0.}, {22., 3.}, {
      23., 2.}, {24., 3.}, {24.5, 5.}}], LineBox[CompressedData["
1:eJxdy8lNA1EQRdEnVixZkACBgJvZzGDmLRJrUqjQKhRCIATAfCP5fKlVfXT1
dt4+Fu8bSeY/3+9dvs/d6e9ne9y9cbfGnY27Oe407tdseWrl1dtfd+Ec0HEO
6ThHdJxjOs4JHeeUjjOn45zRcc7pOBd0nEs6zhUd55qOc0PHuV33hAs3zh17
XLhxFuxx4ca5Z48LN84De1y4cR7Z48KN88QeF26cZ/a4cOO8sMeFG+f139/P
30JE
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Time of Computation\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Number of Initial Conditions\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Distribution of Computation Time Case 1(N = 20)\"", TraditionalForm],
  PlotRange->{{0., 100.}, {0, 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["0", TraditionalForm]}, {11, 
      FormBox["1", TraditionalForm]}, {21, 
      FormBox["2", TraditionalForm]}, {31, 
      FormBox["3", TraditionalForm]}, {41, 
      FormBox["4", TraditionalForm]}, {51, 
      FormBox["5", TraditionalForm]}, {61, 
      FormBox["6", TraditionalForm]}, {71, 
      FormBox["7", TraditionalForm]}, {81, 
      FormBox["8", TraditionalForm]}, {91, 
      FormBox["9", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.8672620202433567`*^9, {3.867262077139949*^9, 3.867262092574956*^9}, 
   3.8672621393438253`*^9, 3.8672621827647777`*^9, 3.8672622214092755`*^9, 
   3.8672624865454984`*^9, 3.867340659735691*^9, 3.867342389376417*^9, 
   3.8673425515373583`*^9, 3.8676865122429028`*^9, 3.8676886822264132`*^9},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "Out[1628]=",ExpressionUUID->"42fbeee7-db31-4b20-adf3-927c4fd91b43"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Median (n = 20) = \"\>", "\[InvisibleSpace]", "0.455744625`"}],
  SequenceForm["Median (n = 20) = ", 0.455744625],
  Editable->False]], "Print",
 CellChangeTimes->{3.8673423892884455`*^9, 3.8673425514273934`*^9, 
  3.8676865121379366`*^9, 3.867688682251405*^9},
 CellLabel->
  "During evaluation of \
In[1616]:=",ExpressionUUID->"c14cdc96-02f6-4b97-9d8a-d09757bb1e03"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Interquartile Spread (n = 20) = \"\>", "\[InvisibleSpace]", 
   "1.7956381499999998`"}],
  SequenceForm["Interquartile Spread (n = 20) = ", 1.7956381499999998`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8673423892884455`*^9, 3.8673425514273934`*^9, 
  3.8676865121379366`*^9, 3.867688682256403*^9},
 CellLabel->
  "During evaluation of \
In[1616]:=",ExpressionUUID->"f48f249a-9ff4-43e9-8f9b-49071197a9c3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Interquartile Spread / Median (n = 20) = \"\>", 
   "\[InvisibleSpace]", "3.9400094954493423`"}],
  SequenceForm[
  "Interquartile Spread / Median (n = 20) = ", 3.9400094954493423`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8673423892884455`*^9, 3.8673425514273934`*^9, 
  3.8676865121379366`*^9, 3.8676886822634006`*^9},
 CellLabel->
  "During evaluation of \
In[1616]:=",ExpressionUUID->"a0dee3ae-87fd-492f-8f4d-45b985c543ae"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 0.}, {2., 0.}, {2.7142857142857144`, 5.}}], 
     LineBox[{{5.761904761904762, 5.}, {6., 0.}, {7., 1.}, {8., 1.}, {9., 
      0.}, {10., 1.}, {10.8, 5.}}], 
     LineBox[{{11.333333333333334`, 5.}, {12., 3.}, {13., 3.}, {14., 2.}, {
      15., 2.}, {16., 0.}, {17., 3.}, {18., 1.}, {19., 5.}, {20., 3.}, {21., 
      0.}, {21.714285714285715`, 5.}}], LineBox[CompressedData["
1:eJxdy1lKQ1EQRdGDY3ACTsMmPtskxjYam18h+XUKNbQamhqeQtaFS7HYnIPP
r+V6L8ni5//ezfYdDtm+/fEejTfjPcYnfx7fBJ/iYdeFc0bHOafjXNBxLuk4
V3ScazrOlI4zo+PM6Tg3dJwFHeeWjnNHx7mn4zzQcR53PeDCjfPEHhdunCV7
XLhxntnjwo3zwh4XbpwVe1y4cV7Z48KN88YeF26cd/a4cON8/Psb1h9D9Q==

      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Time of Computation\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Number of Initial Conditions\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Distribution of Computation Time Case 2(N = 20)\"", TraditionalForm],
  PlotRange->{{0., 100.}, {0, 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["0", TraditionalForm]}, {11, 
      FormBox["1", TraditionalForm]}, {21, 
      FormBox["2", TraditionalForm]}, {31, 
      FormBox["3", TraditionalForm]}, {41, 
      FormBox["4", TraditionalForm]}, {51, 
      FormBox["5", TraditionalForm]}, {61, 
      FormBox["6", TraditionalForm]}, {71, 
      FormBox["7", TraditionalForm]}, {81, 
      FormBox["8", TraditionalForm]}, {91, 
      FormBox["9", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.8672620202433567`*^9, {3.867262077139949*^9, 3.867262092574956*^9}, 
   3.8672621393438253`*^9, 3.8672621827647777`*^9, 3.8672622214092755`*^9, 
   3.8672624865454984`*^9, 3.867340659735691*^9, 3.867342389376417*^9, 
   3.8673425515373583`*^9, 3.8676865122429028`*^9, 3.8676886823203826`*^9},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "Out[1641]=",ExpressionUUID->"3a5e9634-ea15-4ae7-b976-7ff1c7b78a2a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"N", " ", "=", " ", "30"}], " ", "*)"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"N", " ", "=", " ", "20"}], " ", "*)"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"TimingData1", " ", "=", " ", 
      RowBox[{
      "Import", "[", "\"\<TimingDataComputation30Case1.mx\>\"", "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"numberTests", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "TimingData1", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Tmax", "=", "10"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"binLength", "=", "0.1"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"epsilon", "=", 
      RowBox[{"binLength", "/", "2"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"numberBins", "=", 
      RowBox[{"Tmax", "/", "binLength"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"count20", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"IntegerPart", "[", "numberBins", "]"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Median (n = 20) = \>\"", ",", 
       RowBox[{"Median", "[", "TimingData1", "]"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Interquartile Spread (n = 20) = \>\"", ",", 
       RowBox[{"InterquartileRange", "[", "TimingData1", "]"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Interquartile Spread / Median (n = 20) = \>\"", ",", 
       RowBox[{
        RowBox[{"InterquartileRange", "[", "TimingData1", "]"}], " ", "/", 
        " ", 
        RowBox[{"Median", "[", "TimingData1", "]"}]}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "-", "epsilon"}], "<=", 
             RowBox[{"TimingData1", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "+", "epsilon"}]}], ",", 
            RowBox[{
             RowBox[{"count20", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"count20", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", "1"}]}], ",", "_"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "numberBins"}], "}"}]}], "]"}], ";"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"xTicks", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "binLength"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"IntegerPart", "[", "numberBins", "]"}], ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"1", "/", "binLength"}], "]"}]}], "}"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"count20", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicks", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Time of Computation\>\"", ",", 
         "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Distribution of Computation Time Case 1(N = 20)\>\""}]}], "]"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Bold"], 
   StyleBox[
    RowBox[{
     RowBox[{"TimingData2", " ", "=", " ", 
      RowBox[{
      "Import", "[", "\"\<TimingDataComputation30Case2.mx\>\"", "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"numberTests", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "TimingData2", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Tmax", "=", "10"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"binLength", "=", "0.1"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"epsilon", "=", 
      RowBox[{"binLength", "/", "2"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"numberBins", "=", 
      RowBox[{"Tmax", "/", "binLength"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"count20", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"IntegerPart", "[", "numberBins", "]"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Median (n = 20) = \>\"", ",", 
       RowBox[{"Median", "[", "TimingData2", "]"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Interquartile Spread (n = 20) = \>\"", ",", 
       RowBox[{"InterquartileRange", "[", "TimingData2", "]"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Interquartile Spread / Median (n = 20) = \>\"", ",", 
       RowBox[{
        RowBox[{"InterquartileRange", "[", "TimingData2", "]"}], " ", "/", 
        " ", 
        RowBox[{"Median", "[", "TimingData2", "]"}]}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "-", "epsilon"}], "<=", 
             RowBox[{"TimingData2", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "+", "epsilon"}]}], ",", 
            RowBox[{
             RowBox[{"count20", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"count20", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", "1"}]}], ",", "_"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "numberBins"}], "}"}]}], "]"}], ";"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"xTicks", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "binLength"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"IntegerPart", "[", "numberBins", "]"}], ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"1", "/", "binLength"}], "]"}]}], "}"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"count20", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicks", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Time of Computation\>\"", ",", 
         "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Distribution of Computation Time Case 2(N = 20)\>\""}]}], "]"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"]}]}]], "Input",
 CellChangeTimes->{{3.867253701368676*^9, 3.867253702725238*^9}, {
   3.867253733792187*^9, 3.867253852341834*^9}, {3.8672538837736645`*^9, 
   3.8672539000553975`*^9}, {3.867253942439685*^9, 3.8672539922635665`*^9}, {
   3.867254591183806*^9, 3.8672546415615087`*^9}, {3.8672546788794327`*^9, 
   3.867254681592555*^9}, {3.8672552203022723`*^9, 3.8672552209180727`*^9}, {
   3.867255328226356*^9, 3.867255329558925*^9}, 3.8672559183444414`*^9, {
   3.8672560759744453`*^9, 3.867256079890178*^9}, {3.8672583209391546`*^9, 
   3.8672583437737665`*^9}, {3.8672595252115498`*^9, 
   3.8672595336298275`*^9}, {3.8672611851645226`*^9, 
   3.8672611922242384`*^9}, {3.867261853887176*^9, 3.8672618722292423`*^9}, {
   3.8672619083345633`*^9, 3.867261956077117*^9}, {3.867262149322598*^9, 
   3.867262179476843*^9}, {3.867262210296872*^9, 3.867262217396574*^9}, {
   3.867262463943811*^9, 3.867262473543707*^9}, {3.867342401908395*^9, 
   3.8673424114383364`*^9}, {3.867342478722734*^9, 3.867342531424816*^9}, 
   3.8673425700214252`*^9, {3.867688477721486*^9, 3.867688483237731*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"d2634e35-3775-4b4a-9e4e-935c4ed74f3f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"N", " ", "=", " ", "40"}], " ", "*)"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"N", " ", "=", " ", "20"}], " ", "*)"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"TimingData1", " ", "=", " ", 
      RowBox[{
      "Import", "[", "\"\<TimingDataComputation40Case1.mx\>\"", "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"numberTests", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "TimingData1", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Tmax", "=", "10"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"binLength", "=", "0.1"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"epsilon", "=", 
      RowBox[{"binLength", "/", "2"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"numberBins", "=", 
      RowBox[{"Tmax", "/", "binLength"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"count20", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"IntegerPart", "[", "numberBins", "]"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Median (n = 20) = \>\"", ",", 
       RowBox[{"Median", "[", "TimingData1", "]"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Interquartile Spread (n = 20) = \>\"", ",", 
       RowBox[{"InterquartileRange", "[", "TimingData1", "]"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Interquartile Spread / Median (n = 20) = \>\"", ",", 
       RowBox[{
        RowBox[{"InterquartileRange", "[", "TimingData1", "]"}], " ", "/", 
        " ", 
        RowBox[{"Median", "[", "TimingData1", "]"}]}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "-", "epsilon"}], "<=", 
             RowBox[{"TimingData1", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "+", "epsilon"}]}], ",", 
            RowBox[{
             RowBox[{"count20", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"count20", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", "1"}]}], ",", "_"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "numberBins"}], "}"}]}], "]"}], ";"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"xTicks", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "binLength"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"IntegerPart", "[", "numberBins", "]"}], ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"1", "/", "binLength"}], "]"}]}], "}"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"count20", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicks", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Time of Computation\>\"", ",", 
         "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Distribution of Computation Time Case 1(N = 20)\>\""}]}], "]"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Bold"], 
   StyleBox[
    RowBox[{
     RowBox[{"TimingData2", " ", "=", " ", 
      RowBox[{
      "Import", "[", "\"\<TimingDataComputation40Case2.mx\>\"", "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"numberTests", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "TimingData2", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Tmax", "=", "10"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"binLength", "=", "0.1"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"epsilon", "=", 
      RowBox[{"binLength", "/", "2"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"numberBins", "=", 
      RowBox[{"Tmax", "/", "binLength"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"count20", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"IntegerPart", "[", "numberBins", "]"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Median (n = 20) = \>\"", ",", 
       RowBox[{"Median", "[", "TimingData2", "]"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Interquartile Spread (n = 20) = \>\"", ",", 
       RowBox[{"InterquartileRange", "[", "TimingData2", "]"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Interquartile Spread / Median (n = 20) = \>\"", ",", 
       RowBox[{
        RowBox[{"InterquartileRange", "[", "TimingData2", "]"}], " ", "/", 
        " ", 
        RowBox[{"Median", "[", "TimingData2", "]"}]}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "-", "epsilon"}], "<=", 
             RowBox[{"TimingData2", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "+", "epsilon"}]}], ",", 
            RowBox[{
             RowBox[{"count20", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"count20", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", "1"}]}], ",", "_"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "numberBins"}], "}"}]}], "]"}], ";"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"xTicks", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "binLength"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"IntegerPart", "[", "numberBins", "]"}], ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"1", "/", "binLength"}], "]"}]}], "}"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"count20", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicks", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Time of Computation\>\"", ",", 
         "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Distribution of Computation Time Case 2(N = 20)\>\""}]}], "]"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"]}]}]], "Input",
 CellChangeTimes->{{3.867253701368676*^9, 3.867253702725238*^9}, {
   3.867253733792187*^9, 3.867253852341834*^9}, {3.8672538837736645`*^9, 
   3.8672539000553975`*^9}, {3.867253942439685*^9, 3.8672539922635665`*^9}, {
   3.867254591183806*^9, 3.8672546415615087`*^9}, {3.8672546788794327`*^9, 
   3.867254681592555*^9}, {3.8672552203022723`*^9, 3.8672552209180727`*^9}, {
   3.867255328226356*^9, 3.867255329558925*^9}, 3.8672559183444414`*^9, {
   3.8672560759744453`*^9, 3.867256079890178*^9}, {3.8672583209391546`*^9, 
   3.8672583271821346`*^9}, 3.8672590829036455`*^9, {3.8672591205504675`*^9, 
   3.86725912795807*^9}, 3.867259543497634*^9, {3.867261624550371*^9, 
   3.867261697060916*^9}, {3.867261780050064*^9, 3.86726179246005*^9}, {
   3.8672618263670807`*^9, 3.867261828834281*^9}, 3.8672618890528*^9, 
   3.8672619658689485`*^9, {3.8672621519327526`*^9, 3.8672621769706535`*^9}, {
   3.8672622270284576`*^9, 3.867262235007876*^9}, {3.8672624484848127`*^9, 
   3.8672624511459527`*^9}, {3.8673424039347453`*^9, 3.867342420390461*^9}, {
   3.867342564852083*^9, 3.8673425851215773`*^9}, {3.867342676604207*^9, 
   3.8673427014602284`*^9}, {3.867342737607625*^9, 3.8673427520199976`*^9}, {
   3.867688487332428*^9, 3.8676884923378353`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"4385c50c-6b15-472a-b026-73f871f31bee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Periodic Recomputation Code with parameter mismatch", "Section",
 CellChangeTimes->{{3.867678820449437*^9, 3.8676788349908113`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"6fbbeffa-94d3-4819-b3d6-3bc2457a08fa"],

Cell[CellGroupData[{

Cell["Evaluate Robustness of MPC Variant wrt Model Mismatch", "Subsection",
 CellChangeTimes->{{3.866046972536893*^9, 
  3.866046989974267*^9}},ExpressionUUID->"d4cd1662-0739-4366-903a-\
6c25f7b7413f"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
   RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
   RowBox[{"\[Tau]1", " ", "=", " ", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
   RowBox[{"order", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "10"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"M", " ", "=", "3"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", 
     "the", " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", 
     "in", " ", "time", " ", "\[Tau]"}], "  ", "*)"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A1", " ", "=", " ", "0"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"AError", " ", "=", " ", "0.2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A2", " ", "=", " ", 
    RowBox[{"A1", " ", "+", " ", "AError"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxErrorInitial", " ", "=", " ", "0.5"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"MyAppend", "[", 
     RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f1", "[", "t", "]"}], ",", " ", 
             RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], 
            "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f2", "[", 
              RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
             RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
              RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], 
         "]"}]}], ";", "\n", "    ", "f"}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["While",
    FontWeight->"Plain"], 
   StyleBox["[",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"EInitial", " ", ">", " ", "1.5"}], " ", "||", " ", 
      RowBox[{"EInitial", " ", "<", " ", "0.5"}]}],
     FontWeight->"Plain"], 
    StyleBox[",",
     FontWeight->"Plain"], "\[IndentingNewLine]", 
    RowBox[{
     StyleBox[
      RowBox[{"xdotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Min", " ", "=", " ", 
       RowBox[{"-", "\[Pi]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], ";", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Init", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"ICs", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
        "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"EInitial", " ", "=", " ", 
       RowBox[{"Energy", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ICs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"]}]}], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox["]",
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.4424950922207964`"}], ",", "0.6052619340238472`", ",", 
      RowBox[{"-", "0.36481243427277565`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Initial Conditions = \>\"", ",", "ICs"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Energy = \>\"", ",", " ", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xdotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]f", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]dotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"Js", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"count", " ", "=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxcountAlgo", " ", "=", " ", "20"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"timeData", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
     " ", 
     RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"time", ",", 
        RowBox[{"{", 
         RowBox[{
         "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
          "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
          "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
         "}"}]}], "}"}], "=", 
      RowBox[{"Timing", "[", 
       RowBox[{"ffCartPendulum2", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
         "order", ",", "maxIter", ",", "maxError", ",", "uBound", ",", 
         "maxCount", ",", "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"testWithFBClipped", "[", 
       RowBox[{
       "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
        "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
        "uBound", ",", "K"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ICs", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"xdot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]dot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"errorInitial", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{"ICs", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"initGuess", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Lambda]1ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]2ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]3ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]4ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xf", ",", " ", "x1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xdotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xdotf", ",", " ", "xdot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"\[Theta]f", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]f", ",", " ", "\[Theta]1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]dotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]dotf", ",", " ", "\[Theta]dot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"uf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"uf", ",", " ", "u1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Js", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"Js", ",", "J"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"timeData", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"timeData", ",", "time"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"count", " ", "=", " ", 
      RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Count = \>\"", ",", "count"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Error = \>\"", ",", "errorInitial"}], "]"}], ";"}]}], "\t",
    "\[IndentingNewLine]", "]"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]f", "[", "t", "]"}], ",", " ", 
        RowBox[{"uf", "[", "t", "]"}], ",", " ", 
        RowBox[{"xf", "[", "t", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6"}], ",", " ", "6"}], "}"}]}], ",", " ", 
      RowBox[{"Filling", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", 
         "\"\<x1b\>\""}], "}"}]}], ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
      " ", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
      RowBox[{"GridLines", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"Js", ",", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<J vs time\>\""}]}], "]"}]}], ";", 
   RowBox[{"p1c", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"timeData", ",", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Time of Computations vs time\>\""}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Total Time for Convergence = \>\"", ",", 
     RowBox[{"\[Tau]", "*", 
      RowBox[{"1", "/", "M"}], "*", "count"}]}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Max Computation Time = \>\"", ",", 
     RowBox[{"Max", "[", "timeData", "]"}]}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1b", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}, {3.8654474644860983`*^9, 3.86544746739017*^9}, {
   3.865447584859602*^9, 3.865447593586812*^9}, {3.865952499809149*^9, 
   3.8659525292967024`*^9}, {3.8659525819378333`*^9, 
   3.8659525893724527`*^9}, {3.865971536327427*^9, 3.865971615231144*^9}, {
   3.8659716506068087`*^9, 3.8659716545185547`*^9}, {3.865971738635604*^9, 
   3.8659717394583387`*^9}, {3.865971771360116*^9, 3.865971773325487*^9}, 
   3.8659718432830696`*^9, {3.865971878869669*^9, 3.865971881703761*^9}, {
   3.865972099999814*^9, 3.8659721093028316`*^9}, {3.8659724284015865`*^9, 
   3.8659724335579348`*^9}, {3.865972467781967*^9, 3.8659724678729377`*^9}, 
   3.865972527892706*^9, {3.865972575741376*^9, 3.8659725758223476`*^9}, {
   3.8659727852052574`*^9, 3.8659727853102245`*^9}, 3.8659729110299406`*^9, {
   3.865973909258086*^9, 3.865973915857973*^9}, {3.866046878808134*^9, 
   3.866046926929607*^9}, {3.866047001093678*^9, 3.866047039702221*^9}, {
   3.8660471109532323`*^9, 3.8660471110941877`*^9}, {3.8660471705050197`*^9, 
   3.866047173520045*^9}, 3.8661406529053097`*^9, {3.8661406905133476`*^9, 
   3.8661406905993204`*^9}, {3.866140819599299*^9, 3.8661408196882687`*^9}, {
   3.8665711649558916`*^9, 3.866571165889593*^9}, {3.866571417989247*^9, 
   3.8665714182851543`*^9}, {3.866572132358571*^9, 3.866572174133257*^9}, 
   3.8665722152271605`*^9, {3.866572708667897*^9, 3.866572725315591*^9}, {
   3.8665728020321393`*^9, 3.8665728154188747`*^9}, {3.8665728560299296`*^9, 
   3.8665728724307027`*^9}, {3.8665729695007653`*^9, 
   3.8665729789747458`*^9}, {3.866573043115304*^9, 3.866573053395028*^9}, 
   3.8665735494869184`*^9, {3.866573703021986*^9, 3.8665737072086515`*^9}, {
   3.866573789133541*^9, 3.8665737977058096`*^9}, {3.8665738824937863`*^9, 
   3.866573891690858*^9}, {3.8665752456343412`*^9, 3.866575271422123*^9}, {
   3.866575497520063*^9, 3.8665755162530923`*^9}, {3.866575560451006*^9, 
   3.866575588098196*^9}, {3.8665756738178754`*^9, 3.86657570879373*^9}, 
   3.8665757657245836`*^9, {3.8665764184045687`*^9, 3.8665764350932503`*^9}, 
   3.866576476534042*^9, 3.866576542813918*^9, {3.8665766740420947`*^9, 
   3.866576692525204*^9}, {3.8665778195290174`*^9, 3.866577843192477*^9}, {
   3.8666641527149525`*^9, 3.866664193861807*^9}, 3.8666649366484857`*^9, {
   3.8666650025004454`*^9, 3.866665006550152*^9}, {3.8671675349242973`*^9, 
   3.8671675350712523`*^9}, {3.8671683251655407`*^9, 3.867168325420459*^9}, {
   3.86716836190279*^9, 3.8671683619377785`*^9}, {3.8671684189625406`*^9, 
   3.867168526768058*^9}, {3.867168609091727*^9, 3.867168609125716*^9}, {
   3.8671687123626957`*^9, 3.8671687125066504`*^9}, {3.8671688521659803`*^9, 
   3.8671688554009476`*^9}, {3.867168905295987*^9, 3.8671689053339744`*^9}, {
   3.867169679170464*^9, 3.8671696792024536`*^9}, {3.86716974093071*^9, 
   3.8671697691686783`*^9}, {3.867517978678768*^9, 3.8675180117730026`*^9}, {
   3.8675181522033186`*^9, 3.8675181561960225`*^9}, {3.8675182492707415`*^9, 
   3.867518249471678*^9}, 3.8675182867785397`*^9, {3.867518319760811*^9, 
   3.8675183200537167`*^9}, 3.8675184225923586`*^9, {3.867519084541021*^9, 
   3.8675191050623465`*^9}, {3.8675195807276073`*^9, 3.8675195857729697`*^9}, 
   3.8676887550002565`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[1683]:=",ExpressionUUID->"0f3183bc-66bf-4493-80a1-5286a3b12336"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial Conditions = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.4424950922207964`"}], ",", "0.6052619340238472`", ",", 
     RowBox[{"-", "0.36481243427277565`"}]}], "}"}]}],
  SequenceForm[
  "Initial Conditions = ", {
   0, -0.4424950922207964, 0.6052619340238472, -0.36481243427277565`}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598077264`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"3b58f30a-09be-483c-ba77-fc5a456033f5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.026710738161455097`"}]}],
  SequenceForm["Energy = ", -0.026710738161455097`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887598127246`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"4dc854d7-9ded-4d49-bff9-d8658647ac11"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 1706, 206, 17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760182607*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"0645ad7e-ee07-49d2-b9a5-07f42706d442"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 1706, 207, 17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688760551489*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"59db842a-184f-4c60-9219-227ef621a0d7"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 1706, 208, 
   17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688761066325*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"da63ed13-8a94-4021-a77b-18a073a1316a"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$326224\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$326224\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"2.460859791797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"110.64447423064138`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.11081620512857468`\\\"}]\\) for the integral and error \
estimates.\"", 2, 1706, 209, 17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688761103314*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"b203e623-094f-4bc3-89c2-30739d52b654"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Count = ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.867688761113311*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"da1202d6-5fdc-4d8a-91ad-aa2c5ec7dbd3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "11.091302075269`"}],
  SequenceForm["Error = ", 11.091302075269],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.867688761117309*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"1acfb1be-4813-4356-8d67-168b3d8cf615"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 1706, 210, 
   17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.8676887612742596`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"57e11978-11b0-4752-8761-efd4395e9df8"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 1706, 211, 
   17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.8676887613912225`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"65038caf-1428-4aec-946a-6b0986ca6aad"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 1706, 212, 
   17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688761533177*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"d2442288-722f-4627-924d-bbd8137550ac"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FindRoot\\\", \
\\\"::\\\", \\\"cvmit\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 1706, 213, 17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688761543174*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"636a3b74-e74f-4e50-b5fb-5080e6631a57"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 1706, 214, 
   17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688762985715*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"61932742-be11-423e-a896-bfc17f91e0f9"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$326459\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$326459\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"4.550703541797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"103.86273441839103`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.052692775355068326`\\\"}]\\) for the integral and \
error estimates.\"", 2, 1706, 215, 17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688763040697*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"994d2808-47ba-40b2-b60f-bc64a0b2df76"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Count = ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887630506945`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"4b44f532-7041-49bd-9f34-3465e94fcfe5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "16.114658948786442`"}],
  SequenceForm["Error = ", 16.114658948786442`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887630536933`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"a815ee04-94ac-4d45-8820-760b5f68a3d9"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 1706, 216, 
   17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.8676887648451233`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"9dd70172-3a73-42a3-a0cf-3a4a699afaa5"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 1706, 217, 17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688764863118*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"df723f56-1be1-459a-a890-3f40337ebd36"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$326728\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$326728\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"2.880781666797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"92.72885608363711`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.09759834723000509`\\\"}]\\) for the integral and error \
estimates.\"", 2, 1706, 218, 17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.867688764872114*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"f49a3114-9641-4275-8853-c72c2afb0b58"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 1706, 219, 17552492771688553278, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8676887479554977`*^9, 3.8676887648811116`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"d789335a-5665-4872-88df-459a4a5449c0"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Count = ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887648911085`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"e0d35107-6bda-4059-adb7-57f5fcd06757"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "18.30144511791932`"}],
  SequenceForm["Error = ", 18.30144511791932],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887648951073`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"fab267e0-edee-442e-b7aa-6fbcc2db512d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Count = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.867688766434617*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"6b2b3fd7-f6b1-4ae1-81ce-44ae3fed4e2b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "13.536186433336745`"}],
  SequenceForm["Error = ", 13.536186433336745`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.867688766445614*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"24121b1e-3108-42fe-8661-162a4dce246e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Count = ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887672363625`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"1937e458-528c-44e9-8335-84e19f778029"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "7.550066957018945`"}],
  SequenceForm["Error = ", 7.550066957018945],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.867688767240361*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"359ebccc-9206-47d4-8581-37ed3bf6fef9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["Count = ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887680491037`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"a5e36b60-ddf2-443e-a4a3-c34c43e9516f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.827472501479076`"}],
  SequenceForm["Error = ", 3.827472501479076],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887680531025`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"d6efc57a-c0dc-4c00-8b38-356a812e02f4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm["Count = ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887689108295`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"270014a9-b34d-4718-abe4-bb5f963aa4fc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "1.3053364622913035`"}],
  SequenceForm["Error = ", 1.3053364622913035`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.867688768915828*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"8721438b-4ff6-4ccb-a543-ec52a9cf3355"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["Count = ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887696306005`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"b8113db4-206e-443b-839c-f890c7432ca9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.5963683617052534`"}],
  SequenceForm["Error = ", 0.5963683617052534],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.867688769635599*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"c8c38a5d-2bdc-4dc3-b5f9-e3a3c8e6ebff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm["Count = ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.867688770270397*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"25b9a07c-6b07-4a5a-bc5c-d75ab217c1ed"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.2745893589053759`"}],
  SequenceForm["Error = ", 0.2745893589053759],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887702753954`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"c116a0b2-4f0d-4417-b7c2-0ee337df5dbe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Time for Convergence = \"\>", "\[InvisibleSpace]", "15"}],
  SequenceForm["Total Time for Convergence = ", 15],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.8676887724157143`*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"7c28cd20-a0c9-48b7-8ad4-0cf33a7ac452"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Max Computation Time = \"\>", "\[InvisibleSpace]", "1.5`"}],
  SequenceForm["Max Computation Time = ", 1.5],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8676887479365034`*^9, 3.867688772419713*^9}},
 CellLabel->
  "During evaluation of \
In[1683]:=",ExpressionUUID->"3882f1f1-5d72-4958-b979-a00cf529ee67"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
fqbpt2sE0xD2Uo24knox+6kIe6mLusdeyJvQeF5q/PY1QZLddIS9VJMF4w6F
5L7CXqqk1psj1vpkH/nnpaqJHcvuqCAQ9lIV935fGe5KR9hL9Wg29babIxD2
Uv2KHxkXFVAR9lJ9lKeeydYIIuylxoZtyees5UfYS3VnyU5PjFIQ9lJDusX8
3fwoCHupRWnjP85vJvvKPy91Tueyv6oal429VPMHO/NpC2d4Xqr+u9sZS0sn
eF5qW2ybZc3gKBt7pxq6dFAtn8rzTsdk7UxfJ1YB7J0Kbz/wVdywHWDvlBMd
58/UIfPXP+90yY5Hgcc6OAB7p38c7PLMlTp5nulZ+4/GBskVIMXU2DLb7S0w
9Wm9MHzVBvhdZRUGOHwGZV9ZZr8TPvG809NcU71XCoKwz1naxIPzByxYZpq6
nMGADfNqK+eVT4FvQEXYfUAMFqizuNxcLnB1XUpMfGRC8RW33W2P8MO/X3/M
xHeJQ+ylrro77cR4QIfYS93quM+68SYFrjtfFJhYTMDw35WFB5JGwXx3ttz8
+SJwid7Q5ZnKIYA9VdHTFf0e3iUAe6qL8n3v6yiNsilhf0rjXzLh9i6dqk80
ART3+djX71MSsJmI7n+xh4awt7oqr07jlxSBsLc68f3uwogqKsLe6ueHdxO6
vKk8b9U6MTxY/BGBsLca15ym057BQNhbjcs/qjS9ioGwt5rYsl0dkvuP560C
6wLHeXSEvdXy20lNfF50hL3V9ssLC4qFyPn7z1t9n/riWJ2RMMLeaq0iR/eo
mQBKKVPuOuBN9ucSeeGvJ/kQ9lez/MRUn6VTEM9fDdpnscqGgrC/ujI8t2cb
HwVhf7VNfh+D2zzL81AnMuI+aOkXAOyhruo7GhQw2QiwhyqumVl2SbATYA81
mrF79eZhDsAequsLaaOFqhyeb3rZSFkit/cNSJCaf/iM0AtgZBrz3b45kp3Q
KSoquaMVaBrcXCscVAee+NtTi07MgaUK4gXTEUy4YjX/ts2lfNDuz/Z9Hg5M
yBb9tuWsEgFrgyTqV3z+Ayo6VJUGAxlQzEdf/ojTL7B47ukJ9mEmvPQsYVcL
eT/flbzODk+TgL/vqMxMeFBRhU90xIZeFqQs2eE9qEkgC8bj6mwZKbhW3CZF
SpmGsKc6Nv5FZ9SMirCfevuaW23qAQbCfuq6VwqiSRFkn/7np75evbG+Z4pA
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
D8YyGL8=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{14, 13, 1013, 1754, 776, 1610, 1209, 641, 1520, 
                1118, 1813, 883, 370, 1313, 909, 670, 1544, 1142, 533, 1444, 
                1041, 1770, 804, 1633, 1232, 456, 1384, 981, 743, 1591, 1189, 
                608, 1499}}], 
               
               PolygonBox[{{10, 9, 1810, 878, 1290, 359, 406, 360, 525, 448, 
                736, 601, 1091, 854, 1673, 1272, 1889, 407, 1343, 939, 700, 
                564, 1467, 1064, 1784, 827, 1654, 1253, 1878, 487, 1410, 1007,
                 770, 635, 361, 1307, 903, 664, 526}}], 
               PolygonBox[CompressedData["
1:eJwVziFPAmAYxPFHRFC+Ac5CgM0GTTcNkk0MZ6AgamMaNBgtTqLCaG5WyM4N
3KwEAwmtboLRKlF/hNvz3v3vtjfXOK+cJSJiifZpldI0WYnYS0akmOpyRCsV
Mefr/J3yDt6TD42z2C1W9B7I896/si38wv3iq3ZTu2v8R/4h/9N/wq7cpqyO
39MRNeiY2nRCXZ0MPdiv2Xzbb9jU3Df+dbHBxrKR7FO35D5ih97vWNn7AO/o
7vJ972edF3zdbeGb/lnih3iB39a5xKaLLTazPaUsfoP9A0NRKAo=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0L8v3HEcx/EP7o7Gr9AVpSMjQQcW9WO20PSQtKzOr8SEpSfh/AWq4m40
YLqbFAnpZGBxOxGhJJiweNzwyevH8/Uevt+mH4nByeIQQpGX9Cq8cm+nJIQD
oMO7BX9FQ3jURbwF3aSuXrcir8uRWAgzkRBq+C19Jd+IHduNy2f8JdZql8bi
/IW+ly8rDWEYT2Gv8k/5j7sefFef1R/a19FVvBnvlPfxZvlF32U3T6/lIfzO
fRJ/0l/oo7SfZvFFt/fYd/6j7RT2GyvXJeSE2wZ+tdDbRrFZ21o+ra/ib3RN
+Cg9lQfcnbibwM/1//RX9m00g7fjI3Ie75M/yN/s1vA3eVzedP8V39Pn9Ef2
9TSFt+Bf5L94i9xt899+WX7m83YxOkBz+JLtAxbnp/Ub+gp5qvC97j7xKf22
fsM2RucK/4PPYNX8Z3xM/w57/EGr
                "]], 
               PolygonBox[CompressedData["
1:eJwV0Lkv5WEYxfH3WiuFpURQSOx0MxoqJChcUVJISOyJKaYady6VhAqx1Bo7
f4At0dmDBgkSeleHKeZziyfPOed7nje//Ip7x6KjKSGEiJk2OSbb/BFUpoew
lBrCbkYIa0rZdiwthNLMEIr4HTyfr9EZwu7pDuzG7abpwPexI+xCv8xe1KnT
aeJP8R98hG/Vi+PvfDf/6X7CVOksY+v6OfhfvJjelRfQCVktPmw/8LduxrEn
WUKvQb4lH6Rf5VE6y/t9+DyWKhvkt9xF6QP5pW45tqTbTJ/Jf9Ipem34JJbg
e/gvd3N44HOxGf1vfoCf4Fd18/jfujHdanpFviff0M2147ol9B5WmPw/+Ij8
kb5z80v+LLuWfeg12tvYEP2GddL9+II8jd9202kfyo5lV3oV9rJeC32O1dPt
+FTyTfrbzbw8Qr8kvxnrsk/4WTf/kv+Jjsn/A/tDRyU=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0NtPDnAcx/EfOVx0IBul3LR0YrPFVbpITV14nspcuoh1kM3pKvUol9VN
UfEP6KCD5VLG6EZhqhtCVtyTbCobTbyei98+h/fn+zzPnqzaa2eubg0hbPEm
vN3eLu/tthAiO0N4A1zaHsLHBH5HCF+Ni+gwXoTXyUt4RE6Ua+xu45tyozzo
/hT+SP9E/9I+m/biR/AS+QVeKP/Vn7S7SZfls/hP9134b/2iPolW0Wf4Cbzd
/RpeK++Xm/F7eKquSb7uPofv1Y/r++0TaSy+50ewvfyyLt+mgb6To25n3F7G
F/Qz+m/2x+kIXs9/xqL8ObxH/48fchPRT+ie6l7ZHaR98d/LT2FH+XJ81bZb
/sMv2STTavocL/X9HfbreJ3cgjXb58p9/EO7ATyJ3sCz7TPkUXyf/F1fYHeB
zsuV+Kz7K/gn/Wz8P7YvpqN4A/8Fq+TP4/dto/Jj/jVW6k3Lx/BNNxX6NZtb
ug0+xTutn8TLfFen/S+sXs6QY3g/vkfX4i6P3tEN2iXrW+0y+TF9Gr+iO4Q3
0vdylc+Yczfsxbx8u7v4kJsUmzabA/wDfTr/Q3cYv0g/yNXu/wOlHWFI
                "]], 
               PolygonBox[CompressedData["
1:eJwV0TdMlGEAxvEXuDvcNNEEXEwsiRUdaDqgg44WOBI5VBzcbEdRY19UQJ3U
BUg09rhKuVNnQNDJXg4VjA2YBWuiv2948j7P/3ne77syf1djMp0fQsijHM2h
2dQD1MVD6C8I4YXBRvqHnaFS/Cp+F1tMOeww9hmblhupF0thA9hLeVP0EmrF
y/BreLe8hDLyglgI5VhTIoRRvrYwhBHbI7ov+HP8h20TjWNbbXbjHXhC3mff
Z1/PD+L9+CvbzfQEq7KvxtvwKT4P78Bj/CesSJdyDskXou+q28+fiu54brl8
ne+z6dEXOVv1S/msbiH/HauwaXaOye/cO6r7Gv2G2E/b9c5uXZXP2yxP6Ovk
mfIeu059YfRuOeP+Nv4hPoC/tl/pvGxfqt8iP9WvleNyjV27flrO13Xq4nwx
Xo8P8xej/4FP8/PcOa27E31/23bvq3DewHrtivE2u2X8PXwRP4VV6lucH+X3
7hzTfcN+2W2Ifh+8hZ/EU/ws79mr79LNwNJy1r3t/BA+iL+xX+W8Yl+mr5af
6dfJSZsCuUtOyHPlS/JZz6jEbkb/i7ycPmDHsXHst3wg+uzYDmwYeyvXUIzO
4avxW3hGXkGj2AlsAvsjH6T7WAP2CMvJSYrTeXwNfhvPyiU0hp3EJrG/8iF6
gO3EHmMjci39B4YedW4=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{348, 21, 7, 598, 1182, 1584, 734, 973, 1377, 444, 
                1225, 1626, 795, 1764, 1032, 1435, 521, 660, 351, 399, 350, 
                349, 398}}], 
               
               PolygonBox[{{20, 22, 397, 1913, 1304, 1704, 900, 1135, 1537, 
                659, 794, 1031, 1434, 520, 851, 1088, 1491, 597, 733, 972, 
                1376, 443, 631, 766, 1004, 1407, 482, 559, 696, 935, 1339, 
                396, 519, 596, 732, 971, 1375, 442, 630, 765, 1749, 1003, 
                1406, 481, 558, 695, 934, 1338, 395, 518}}], 
               
               PolygonBox[{{8, 9, 1114, 1516, 634, 769, 486, 563, 405, 600, 
                447, 1863, 1228, 1629, 798, 1767, 1035, 1438, 524, 663, 902, 
                1306, 358, 1289, 1690, 877, 1809, 1113, 1515, 633, 1204, 1605,
                 768, 1006, 1409, 485, 1252, 1653, 826, 1783, 1063, 1466, 562,
                 1161, 1563, 699, 938, 1342, 404, 446, 1862, 1227, 1628, 797, 
                1766, 1034, 1437, 523, 1823, 1136, 1538, 662}}], 
               
               PolygonBox[{{10, 11, 1346, 412, 451, 799, 1036, 1439, 528, 
                1137, 1539, 665, 1705, 904, 1308, 365, 489, 566, 702, 941, 
                1345, 411, 1890, 1273, 1674, 855, 1799, 1092, 1494, 603, 1845,
                 1184, 1586, 738, 976, 450, 527, 364, 410, 363, 409, 362, 879,
                 636, 1854, 1205, 1606, 771, 1008, 1411, 488, 828, 1065, 1468,
                 565, 701, 940, 1344, 408, 602, 737, 975, 1379, 449}}], 
               PolygonBox[CompressedData["
1:eJwVzLsvw2EYxfHH9bdoYuhMxVojEoZaXLp2kopLJNhIJRK2bgztn/ALSW0m
JhshqVoYWGp3G7CYxOBjeHOec77nvEOrW6XNzojo8Mpen5fxDnoiPoXzScRb
d8Reb8RUV8QPHeEv8UnDPF7nB+XX/JnODHZku+Cew574ZWxc95gf033hb+mj
zgZ+o3+PrciGZe+0n29gWd2c7Q6fyFP+hNb0cnjFtoJn3Kl8W57lF/W/ZFX9
c3cRS7A2/ab72IftK7YrK8jy7gv5hE3NPSC/+t/TU3waO7RZ8/8vXpeX5bPu
Nrak23CPyp/dLfqAr2NNu6LdHf4HpV0wkw==
                "]], 
               PolygonBox[CompressedData["
1:eJwVz78v3HEcx/EPd8dmwN1EEPVjqGiPjUUTAxJNLu6Mki6aOCxt09HPFQsD
ZWNqnV9/QCthJK5J6UBCk3bvnQ3xuOGdz/v1fL7e3+Tb9G46NVUeQigzK6ba
1JjfQCuRM1uREJKxEOaxJzOE/TTHeAbfx0ofuTd/sE/YFXYTDWG6IoRurOBt
ko+4Fr32yhAW5AS+Kx96N/Ve83NuP/MJ+w4+i9fLWf0nbFm/Xz6VR/kEf+eN
yGv8o/sxvigv4m/5qNwrn/OD7jfsHVy+9B/eHzppbs/thG7Mvoa/x6vktP4/
bFJ/z/6GK9rv+I/4pbuU3jU3xXXh/72N8iH/QnfeHse+2b/wr/BZd3HvNj6D
1fnGhN4jtqR3Ys9wca7cvoo/uCnYF/BhPOKmRz7jBtwk5XX5JX8hf9cZ4XLu
xks791fOcr26OblPtyDnvbc6H/hf+kl7A38gN/Nt+nNyrd5X+cC7odPJz+g/
A+BwS00=
                "]], 
               PolygonBox[CompressedData["
1:eJwVzb1Pk2EUhvHH77Qm1KBpO9qKOgmOHQCjDlrEhY0Eoq3GRAdJpFUDTOAC
Jm0HZ9tqxMUNGBQW8SORDQYd4A+wdoBqIiRIws/h5Dn3dd3nfVP5kYGHB0MI
B8wL02Zi5u7REM4fCqHpPXU4hLdHQkgqpo+F8FSO4nW5otPBFX2gwJ2w17jH
eFLO6f7Bnuku2W9yx7kd8xxvuWviE/hV7J/3ovyJ63VzwTcqchr/Ki/oZLnX
7obtfdyGnOcyurNyRrchr3h/6DzgV/TXuDvYOeykfRZP6KXcPZEjXE1+5y3r
nOEL7kb5mL2KF/GEfFv/Nzalf0lelPv5KL/u3fbO8Fvuf3Hj2BWsy76M97gr
21P4F/t77zx/nXvlJof9NN+x+9g3rM9/Vt3kdc/i7fY3XFyvakpYWh7VfaTb
Zn+pW8Dj8i39Fjap+8F+g4twf800vuluUK/BjXGX8V1vp/yR7/7/D/tp7LN9
jr+G193dc7fHlbghPCpn5X0cwUqs
                "]], 
               PolygonBox[CompressedData["
1:eJwV0MtTDXAYxvFfJW3MdMoKgzFTVBQLNFO0UMZlBqfYsRHVORbFxqIbS7Sg
G3+AGbphHRVhBqFixUSidZdNiqH6nMVv3vd5vt/3nDlnW2VdRW1yCCHJe+1F
vAyvKSWE2JoQ/qaG0EIoSwvhlXxmbQiZ2JS5YrbhS47P4XP4df1xfZAL5RH8
sPu79hzso/25OcCJYr1uk8123UVdOW9ajvP67CX6efu4OYlfwT67ifr8r/gl
fYF+k/0xtpXb5d3T7ZQbuVe56+33uY0JV67h/9Hd4r60n8YysGWvVb/o7ixv
FruGHdOvmPvld3iZuz14p7xD/0EeMp/xTuE97uN4kr1Nf0G/To7yf+li/GK5
Vz6Iz8lj5nfeZfyT+y9YXJevmzc3yo+wLdxst81yRP8w8f9y8rAGdw32amxJ
vomVcoflCm4E+2H+N+/gv/lH7fvwt3Ipfze/Q97Oey8Pmk85J/FufmXiN+I/
5Rq8iN8jH+DNyqPmN04dPs7fZd+A98mb8Sx+k5zOeyA/MTs5uXg9v95ehS/K
N/AX9nJOun7S/Gfexha4M1iz7ohur/2N/pCbdnu2fsQ+YPbjJ7AuNzHfH+yt
+vOJ38Wdkqu5M96ErlYe464CwWFpsg==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwlz7lOQkEUgOFBkJhYudFbuVSuDY0hIRGXysLOJZYu8AoutTQ0CvgKorU2
NsbERlBeQaGWhob4TSy++585t7hzp49KO8VECGGX2DGPD71hwzzCsXlNB/rK
OivOv/rENXnnJO/mBWbM33rPObnE/wfeZI+sua8vVBhi3K6pt5xQYNWup8+U
WWTW7kcbXLBPkgn7llY5jfdniRST3n1qjTM2WWbOvqMPXHLAMFP2X1qnyFb8
Z9JkvGvrHSW24z2Zt+/qI1ccxjuPhvAHkZInmA==
               "]], 
              LineBox[CompressedData["
1:eJwl0kVsVFEUgOEZggSK7XAp7kWS4q4p2paWChuKb3DXDS5Bguxwlw0OCRIk
BILscJcNDgkSJPCdsPjy33teZzrvvZtaNDFrQjKRSHxndUoika6VguEd3cIk
BtKWylShKtWoTg1qxjWfuatbmcwg2lErPuPaPd3GFAbTntrxXa7d1+1MZQgd
aGr+Ro+wiBGkxv81f6A7mEYmHakTv8e1h7qT6WTRibrUo378Xn/zSHcxg2w6
08z8rR5lMUU0iHszf6y7mclQutDc/J0eYwkjaRj3a/5E9zCLHNLNvupZ1tCV
Fmbv9ThLGRX3YfZTL7KBRvGMzJ7qXmaTG+/C7JueYy3dSDP7oCdYRg/7JNes
R8dzsP6ll9hIH/sS3LRuHM/W+pnuI8O6NHPiu/Vv3Ldejfeq5chnWLzj5P/z
k63ndYCmkMc6+95anFxuxPvVChTQ3b6lfox3pSe1v5aJ72a5fU8tRg7X4+xo
ecbEe9PfejnOqHVZNln31ZLcsm4SZ8P6ue5nLnlx/sx+6AXWx/OildknPcUK
xsY5jPNj/kIPMI/8+F1xZuJcufZSDzKfAnrF+Yjz5torPcQCCuN50Nr8s55m
JePiPMR5M3+th1nI8HhPtDH/omdYxfg4g2Z/9Aqb6WdfitvWmVqRQtLs/wFx
lG2c
               "]]}, Annotation[#, "Charting`Private`Tag$328249#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl2HfczfUbx/HbJtkJGZFklJI9UkTKLFIhI4TsTVpG9payaRElUllZJTMz
e28hM8mmfs/r8fvj87iu9/v1vs65zznf8/l+zp2nWcc6HRIlJCQ8ljwhoaFm
pNXIamyNsppYHydOSEhlTU6WkJAyaULCSdnsSRISGqi/0ctkmmKbeYflivCn
8V/Vp/DYO7GKdHKirsxg/Dr9Bj3a7FP4LP5P8tmwQVgR/WJ+Pv01Xmm8q3qc
rmvuhLk++AX+bv5/8j9ib6vteG/gY+LvsppZza2PrDetT2TusaaYT2XmD/M5
zLyubqCXxwy2hbeWd0T2SfVT7DX9LuxZ/Sv4WNny9Nf6BTJL8AfUwXhBf+eT
9E/4I3QZmW7YiZjFTpptYWXDB2ApvVfj5BPLdJJ5UCY1PRW/hz7FzynXUN1I
V8FXxOdjPS3zDbZUPjs+BC+qX8LPr7/OK4t3V0/GazbTF7vIS7Ce48/n9zJz
jl9fn8Hjt8cmYal4Lc08oA7kjZe715pGp5Y9LZOL30jdRD9v9mf5ejKfqMXU
U2oimXf05801kEvl6TPKduDfw2slM856y0oj94t6VK1vVYprSm6I57ihb2pu
PP6Mudn8ZTLFraV0AfyGXDl+D/WPmJU/Ld8Pv8RPbL0r35qXnTeInkCnjevD
37Uyrhv+Vv4xXgNrAq8C71vecrqEtYwu6PGf4p3BP6T/0iexqnjuBdjTnvs9
2Y68NjITrbbWJKudlQ77Vf0dP64vau4zcyXMvU7v9piV6RT0azJD8Zt0M3qy
uYr4HP4K2ZLWn7z2Vg7+YP7X8hP5SdTO5tLrP8XujesMXyU7xXo2Pk+vfS7v
Z5lS1ll+f/5lXlLrfV5sGjl5Q+L6oJN63C5xzeg/46fR58ZWx3eO3qY/gRWT
+xxrqN/Df06f0muohw/DbtHN6anmKuHf8Rfyf5HPoQ7FC+Gl6eV4Ifomv7xc
T/VUfEfxc+YH4H/z9/CTqc+rC/EPzF7AXtdnku2ETcZS8zrSHc3m0g8NXzYZ
1lU2o/5zflr9GV4evLG6mX7B3Jr4PuPb+eviexbXo/oFXhJvRO/Fq8R1T9eX
G47fpt+kp5mvjM/jL+KvlM+pDsMfxcvQK/BH43qSOS8/kL6i3yuXXH1BXYT3
lr2INdR35k/h30t3itdr7kH9MP43/CmyydVu8X7ov8DS6R/Cm8Sc62ELXdXs
WrMt8R3Y+vhexXdA/RJvrN+HPa9vgI/g39G3MPepueew7/mL+b/K5lKH42X1
P2OP6Z/B3+af1l8wM4j/D28fL4VaVV2M9TFzCWukv8/jd8GmYml4nenOZnPr
h/Nn86fGvUjtHtclfh/9JZ6e/pOfN+4Z6lZ6ndlW2E7eb3FNxXdKnY6VMtuE
3o+/QL8u85l8FfqH+B5hD8qOwB6TLRd7GFaYvsWvINNLPUPXwy+aHRzfF+/x
VWw/llKtpv4k09f8X3hjfWb5rlgXM3l4I/TT8JSyPYLrp/Mz6M/yHsabqr/T
62NPxXbxTsf3mj8j7sH6A3FNe/6q9D2eo6HMSPwu3ZL+3OzzMj/G91k+NzYy
9jv9Sv7j+tu8irG3q3/S9c1dMjcEv8ZPZVWP+yPWz9xlfhP9/XLd4nVgaXld
4jWae0g/kv+p7P3WDDqjfD5eM9lt+mqyv8m2xnbH3ivXNK5f3gu8+XGmkF3D
y6OOMlM+9lnsCf2zsf/zz+r/MjOUf513gHePWkNdGtek5/nQ3N/4G3QWunv8
bXg6Xtd4Debz6kfxv429O85Mak/5PHgW+is8E/2ITHNsu36DuTb8PbwN8d7J
lVa/wkqba0YfxKvRjWS+lK9KL4izCfaQ7GissOzT9CqsCH2HX0nmPfUcfdnc
MOwGL7VVk7+M39/MFX5TfVaP0SOuZyw9r1u8TnMP60fzP4/7IvZ27A1YVnom
dh99jp9f5s14T1xLO3jVZTbGfU5mL7Yx3mszZdSZcR7Cm9OH8Op0arqx3Cj8
X7oVPd18NXwhfwl/nXxedQz+OP4MvRp/kr7Lrxz3J/V87EH43+aH4zf5B2Mv
U2upy/EK+ADz/+DN6Gx0z3ideAZe93g/zOfTj+HPib1cPrXaK/L6WVhm/Xle
AZkW6k66htlNcW/H9/E3xecgX1adFfu9/jBWQ98EHx1nWP0MM9X5i+Isx1sv
97D6Ufy9+jVYUf1z+BXZEfQt/aHY+9QX1RV4Rc8/UP4q3jzOxXF/lH+E/kg/
N/bsOMOp7+B55R+gv8bvj72XX1CupbqLrolvjjMFvp+/Od5j+XLq17HH649g
NWNPwb+SrUEvjj0Uq2itpYvh/5qpwv8nfm/wbuvTWi/xf47vpecaJH8Ne5N+
gO6Ff4Fn5L1tLr86ljddLg3/Xbns+m/4WfQXeYXwVupuupbH2GJuptXLKiD3
MT4jznsy78nk0M/mZ9Vf4j2Kv6XuoV80n951vdVsB5kD2AX5ltZRulacR3lj
5BPot+RnydbU/xRnU/4G2Xzq2HiN+nVY8Tgr4x/wL+ivxu8u/h3e4fguqbXj
/IMNNnMda6F/J/Za2YL0J/rvYs/A06nv4w97/pz0t3i2uBfJ/C7fkT6o3yJ3
EX9K/SbuwfKt6GP4i3GujDOjfC16SZx15Tbij6gf40/IV6LX4yXi/CNzTX40
fVd/JPYQtU6cY/BK8kPkb8TvCPrd2HvlC9Hj9DOx9LIfxB4vm4uegz0QezO/
sExrdS+9zVwn7BBvK++SbHl1NlbO7Fv0cfwl+t7YY+Q+whPxWtPfmH9RvzTO
y/xN8vnVT+SL4JXp3/CS9H/8qnK94/2K+z1+PX5b4v/yM1gvx3kGG2ruJr9V
XItx3o/9GsvE6xHa3KP68fxZcU6w5tLZYy+L3wWy+/QvyW6X7Ywdjs+N/5fs
0+q3eGv9Cax27CP4WH5ieraZl9RlcXaPc6lcAXVc7Bf6DVgpffworybTJ947
uiF9I34f4//xj8b3TK2rrsIr48PM34rrmn4/XreHed/MY7wJ9LzYB2QyqL3j
HmcmN/0dniOuF5m22H59bWyH2W+t2vhy7Bdsi3xBdbzMkzJV6I14aToRXV2u
b7wXcS+kb5r/wCosMzHOsvIZ8T5xz9XP4+eMex+vCN5OPUDvNNMFO8K7LPcM
fw6/jf4kv44+jcdvgX+MJeG1oeeYq6NfEdedbCFsQnx/9Zv4ZfSJ5Wrg/bDL
cSamb5kbiyfQmeLML387rkX6g9jDZO+je8r2ln1cP4n/fVzTspnUvnHP1X+P
5Yr3B2/PP6jfZaYr/yhvG+9vuQrqXKyt/g/s5TjL4Z/wk9Jzzbys/sxbGWdE
uUfVifFd1m/Gysa+j38YjxlnvPhfAz+R/lj8zdgr6mp6hJk78T7pe/Mzerl9
5J/gTaZ/iGtX5j61n0x+rzUv/QP+IF1UZrd8N/qYfrvclbhvqN/FWVO+HX0K
rxtng9jz5OvSv8TrTvz//2FNiseSrUpvwcrRSehaMv3jMeNsFP8DwhLrM/Nf
jTOifqSZu/y2cS8w0yfuD1hmXl8zRdQpcQ6Qy8z/MPZZ/Y/83Pq/ecXwDuoh
uo7H2GOuO3487neyz2LzsPb60/xX9Gljz8LHYcni+el55l7Rr+T/GmdF+cLq
5Dj36rdiT+mTyr4oMwD7J84S9N34HwqehD7Ovx9/TV0b+wA+yvy/eDs6J903
7teRi3sr3c/8k/qp/B/jOoozuNpfvgCej56P56Gv8IvLdVQP03vN9sBO8K7K
dYhrlvcq71feDrp6PH/8n8Qqyp8Wn2XcW+L3Iy+Ta+cH9TVsFbaTX8P6L/4P
Ef9L4n8ae07s2/FbjNeTdzLuQXTH+Ezif0+81bxddE0rwRrAL87/LL5fsT9a
C+iH/O0leJ28jiP6l73OA7JvY3/E382/LtvJOsN7NfZh/nh+8ngv5efL19ev
4a+Kc4dsLet3XvnY1/kD+VdjP+OP5yfVn+BlwerF+ZYeHa8Va6/vFzMetwT9
uX6+zA94FnUAXlC/EMur/4dXUqazepQ+GGcd7FS8h7wbspXU77Hy8RuZ/hN/
jU5Ht5GbgKeI56YXmG+gX8tfHecg+cfVKfLF4rqjt+FP08no2nKD8GuxD2IT
sGT6rPz6cZbVj4nPQd9Bnyt+V8W9P16/7CDPV1L9Iq47uaz8gXKF9Iv4D8f5
iFcK76Ieow+ZeQc7zbspVzneH34X/Vl+PX16z9MWn4il5HWgF5p7Xb+OvybO
FfJPqFPli+Mv0dvxZ+J7LJOEnkgnp7PFeYIe7DFK8b6MzyX2zzjT897lneHd
orvG385ryFvP20fXtpJaQ/il+dP5C2L/ijM07z3en7zbdDdrMa8R7zfefrqO
lcwayi/Dn8FfGPtDnEV57/PO8u7Q3a2feI15G3gH6JdjH46PQR2GlcW+whbF
5xtnwLiv8s7Fd8d7cpfXw1rCb8LfyD9I17VSWMP55fgz+YvjfYzzF6837zzv
X7qntZT3Bm8T7xD9irWDrhDfN15KehKdIs78ca6hE3n+jnT/ODPps+K9fD4j
PNb/APKtJEU=
               "]]}, Annotation[#, "Charting`Private`Tag$328249#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$328249#3"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 14.999999693877552`}, {-6., 6.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"\[Theta]1b\"", "\"u1b\"", "\"x1b\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 110.64447423064138`}, {2., 103.86273441839103`}, {3., 
          92.72885608363711}, {4., 21.306836237747618`}, {5., 
          5.154486228005547}, {6., 1.897041454599994}, {7., 
          0.6945902361075038}, {8., 1.097470294609766}, {9., 
          0.24419366196379674`}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"J vs time\"", TraditionalForm],
      PlotRange->{{0., 9.}, {0, 110.64447423064138`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.921875}, {2., 1.5}, {3., 1.28125}, {4., 0.875}, {5., 
          0.140625}, {6., 0.140625}, {7., 0.265625}, {8., 0.140625}, {9., 
          0.140625}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Time of Computations vs time\"", TraditionalForm],
      PlotRange->{{0., 9.}, {0, 1.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8676887579033327`*^9, 3.8676887724756947`*^9}},
 CellLabel->
  "Out[1711]=",ExpressionUUID->"5f19b40c-e70d-4d14-9fa0-c58a8fd3e074"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Script for collecting Model Mismatch Testing Data", "Subsection",
 CellChangeTimes->{{3.866576800487796*^9, 
  3.866576812032118*^9}},ExpressionUUID->"b464e18c-79d7-4626-91b5-\
860fe36810d2"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ICData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<ICDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<EDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"MyAppend", "[", 
      RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], 
      "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
         RowBox[{"Piecewise", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"f1", "[", "t", "]"}], ",", " ", 
              RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], 
             "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"f2", "[", 
               RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
              RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
               RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], 
          "]"}]}], ";", "\n", "    ", "f"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], " "}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"MPCVariant", "[", 
    RowBox[{
    "A1_", ",", "A2_", ",", "n_", ",", "M_", ",", "uBound_", ",", "ICs_", ",",
      "nGrid_"}], "]"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"], 
  StyleBox[":=",
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["Module",
    FontWeight->"Plain"], 
   StyleBox["[",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{
      "totalTime", ",", "\[Tau]", ",", "\[Tau]1", ",", "order", ",", 
       "maxCount", ",", "maxJ", ",", "maxError", ",", "maxErrorInitial", ",", 
       "EInitial", ",", "xdotMin", ",", "xdotMax", ",", "\[IndentingNewLine]",
        "\[Theta]Min", ",", "\[Theta]Max", ",", "\[Theta]dotMin", ",", 
       "\[Theta]dotMax", ",", "xdotInit", ",", "\[Theta]Init", ",", 
       "\[Theta]dotInit", ",", "maxIter", ",", "errorInitial", ",", 
       "initGuess", ",", "count", ",", "maxcountAlgo", ",", "x1a", ",", 
       "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", 
       "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", 
       "\[Lambda]4ff0", ",", "J", ",", "K", ",", "\[IndentingNewLine]", "x1b",
        ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", "u1b", 
       ",", "ICinit", ",", "time", ",", "timeData", ",", "InitGuess"}], "}"}],
     FontWeight->"Plain"], 
    StyleBox[",",
     FontWeight->"Plain"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox[
      RowBox[{"\[Tau]", " ", "=", " ", "5"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"\[Tau]1", " ", "=", " ", 
       RowBox[{"\[Tau]", "*", "1.25"}]}],
      FontWeight->"Plain"], 
     StyleBox[" ",
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"order", " ", "=", " ", "5"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxIter", " ", "=", " ", "100"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxCount", " ", "=", " ", "10"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxJ", " ", "=", " ", 
       RowBox[{
        RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxError", " ", "=", " ", "0.01"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxErrorInitial", " ", "=", " ", "0.5"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"ICinit", " ", "=", " ", "ICs"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"EInitial", " ", "=", " ", 
       RowBox[{"Energy", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ICs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"errorInitial", " ", "=", " ", "10"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"InitGuess", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"count", " ", "=", " ", "0"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"maxcountAlgo", " ", "=", " ", "20"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"timeData", " ", "=", " ", 
       RowBox[{"{", "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&",
          " ", 
         RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"time", ",", 
            RowBox[{"{", 
             RowBox[{
             "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", 
              ",", "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
              "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
             "}"}]}], "}"}], "=", 
          RowBox[{"Timing", "[", 
           RowBox[{"Quiet", "[", 
            RowBox[{"ffCartPendulum2", "[", 
             RowBox[{
             "ICinit", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", 
              ",", "order", ",", "maxIter", ",", "maxError", ",", "uBound", 
              ",", "maxCount", ",", "InitGuess", ",", "maxJ", ",", "nGrid"}], 
             "]"}], "]"}], "]"}]}], ";", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",",
             "u1b", ",", "J"}], "}"}], "=", 
          RowBox[{"Quiet", "[", 
           RowBox[{"testWithFBClipped", "[", 
            RowBox[{
            "ICinit", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", 
             "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", 
             ",", "A2", ",", "uBound", ",", "K"}], "]"}], "]"}]}], ";", 
         RowBox[{"ICinit", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x1b", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
            RowBox[{"xdot1b", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
            RowBox[{"\[Theta]1b", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
            RowBox[{"\[Theta]dot1b", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"timeData", " ", "=", " ", 
          RowBox[{"Append", "[", 
           RowBox[{"timeData", ",", "time"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errorInitial", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{"ICinit", " ", "-", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Lambda]1ff0", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", 
            RowBox[{"\[Lambda]2ff0", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", 
            RowBox[{"\[Lambda]3ff0", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}], ",", 
            RowBox[{"\[Lambda]4ff0", "[", 
             RowBox[{"\[Tau]", "*", 
              RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", " ", "+", " ", "1"}]}], ";"}]}], "\t", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     RowBox[{"{", 
      StyleBox[
       RowBox[{
        RowBox[{"totalTime", " ", "=", " ", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}], "*", "count"}]}], ",", 
        RowBox[{"Median", "[", "timeData", "]"}]}],
       FontWeight->"Plain"], 
      StyleBox["}",
       FontWeight->"Plain"]}]}]}], 
   StyleBox["]",
    FontWeight->"Plain"]}]}]}], "Input",
 CellChangeTimes->{{3.8675254327139063`*^9, 3.867525435116126*^9}, {
  3.8676781071584063`*^9, 3.8676781084629908`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[1712]:=",ExpressionUUID->"78579b75-f127-47b2-8fa5-c8f1e6e8418b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Simulation Studies (Distribution of Computation and Convergence Times with M \
varying)\
\>", "Section",
 CellChangeTimes->{{3.867678840120178*^9, 3.8676788702495904`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"ca28de38-e961-4a59-bd58-c5f545e91684"],

Cell[CellGroupData[{

Cell["Collect Data for all ICData", "Subsection",
 CellChangeTimes->{{3.867524935309718*^9, 3.867524969144709*^9}, {
  3.8675251197927027`*^9, 
  3.867525126210615*^9}},ExpressionUUID->"8854ab1b-2a9f-4380-b3b2-\
6d7173843de3"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ICData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<ICDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EData", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<EDataComputation20.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"numberTests", " ", "=", " ", "200"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "20"}], ";", 
   RowBox[{"M", " ", "=", " ", "5"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "5"}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A1", " ", "=", " ", "0"}], ";", 
   RowBox[{"A2", " ", "=", " ", "0.2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"TimingDataConv", "=", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"TimingDataComp", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"SetSharedVariable", "[", "TimingDataConv", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"SetSharedVariable", "[", "TimingDataComp", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"iter", " ", "=", " ", "1"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ParallelDo", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"timeConvergence", ",", "timeComputation", ",", "ICs"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ICs", " ", "=", " ", 
         RowBox[{"ICData", "[", 
          RowBox[{"[", "iter", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"timeConvergence", ",", "timeComputation"}], "}"}], " ", 
         "=", 
         RowBox[{"MPCVariant", "[", 
          RowBox[{
          "A1", ",", "A2", ",", "n", ",", "M", ",", "uBound", ",", "ICs", ",",
            "nGrid"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"TimingDataConv", ",", "timeConvergence"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"TimingDataComp", ",", "timeComputation"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{"\"\<TimingDataConv5.mx\>\"", ",", "TimingDataConv"}], "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{"\"\<TimingDataComp5.mx\>\"", ",", "TimingDataComp"}], "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"iter", " ", "=", " ", 
         RowBox[{"iter", " ", "+", " ", "1"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", "numberTests", "}"}]}], "\[IndentingNewLine]", "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.8665777734597015`*^9, 3.8665777929105053`*^9}, {
   3.8665779568602486`*^9, 3.866578201950136*^9}, {3.8665782362332106`*^9, 
   3.8665784799645324`*^9}, {3.866578563917774*^9, 3.866578588424964*^9}, {
   3.866578656668214*^9, 3.866578666525072*^9}, {3.8665787041740737`*^9, 
   3.866578727443657*^9}, {3.8665791504628367`*^9, 3.8665791609974794`*^9}, 
   3.86657924552254*^9, {3.866579793054037*^9, 3.866579799548968*^9}, 
   3.8665798389863987`*^9, {3.866579962581007*^9, 3.866580046157374*^9}, {
   3.866580203154334*^9, 3.866580206696206*^9}, {3.8665803063554435`*^9, 
   3.8665803106150866`*^9}, {3.866580355575756*^9, 3.866580364610879*^9}, {
   3.8665804397299376`*^9, 3.8665804444854207`*^9}, 3.866580527180066*^9, {
   3.8665806021731634`*^9, 3.866580613129674*^9}, {3.8665806585541954`*^9, 
   3.866580660718505*^9}, {3.866580759118144*^9, 3.8665807638636312`*^9}, {
   3.866580794250947*^9, 3.8665807944188957`*^9}, 3.866581490078181*^9, {
   3.8665815332164316`*^9, 3.8665815386916876`*^9}, {3.866581585509765*^9, 
   3.8665816031021585`*^9}, 3.8665817396226482`*^9, {3.8665819016899977`*^9, 
   3.866581927066908*^9}, {3.86658200079641*^9, 3.8665820089328184`*^9}, {
   3.866582187104032*^9, 3.8665822251599035`*^9}, {3.86658229131382*^9, 
   3.8665822954754934`*^9}, {3.866582405143541*^9, 3.866582405543414*^9}, {
   3.866582478361206*^9, 3.866582478732089*^9}, {3.8671676055617037`*^9, 
   3.867167605893598*^9}, {3.867518791217442*^9, 3.867518812246601*^9}, {
   3.8675188528054066`*^9, 3.867518858443572*^9}, {3.8675189327324066`*^9, 
   3.8675189638013*^9}, {3.8675189947552295`*^9, 3.8675190607287693`*^9}, {
   3.8675191560387635`*^9, 3.8675193675639524`*^9}, {3.8675194469241347`*^9, 
   3.8675194685081153`*^9}, {3.8675195314176483`*^9, 
   3.8675195317335453`*^9}, {3.8675196724117813`*^9, 3.8675197167893467`*^9}, 
   3.86751979858174*^9, {3.867519842638406*^9, 3.8675198573966055`*^9}, {
   3.8675199227523437`*^9, 3.867519923999938*^9}, {3.8675199905172997`*^9, 
   3.867520020047693*^9}, 3.8675202162298727`*^9, 3.867520275434613*^9, {
   3.867520664930907*^9, 3.867520669942277*^9}, {3.86752071100292*^9, 
   3.8675207487636366`*^9}, {3.8675209234458103`*^9, 3.867520923856676*^9}, {
   3.867522242265787*^9, 3.8675222515887537`*^9}, {3.86752358639653*^9, 
   3.8675235944639053`*^9}, 3.867525070382777*^9, 3.867525148363408*^9, {
   3.8676888139954834`*^9, 3.867688824225229*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"d828cb66-782a-4131-b21e-781c432a4f8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting the Distribution of Timing Data", "Subsection",
 CellChangeTimes->{{3.8672534295616117`*^9, 3.8672534362214565`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"05cd5fa6-ea31-4f8b-8e68-9888f3f4dd12"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"(*", " ", 
    RowBox[{"M", " ", "=", " ", "3"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"M", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TimingDataConv3", " ", "=", " ", 
      RowBox[{"Import", "[", "\"\<TimingDataConv3.mx\>\"", "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TimingDataComp3", " ", "=", " ", 
      RowBox[{"Import", "[", "\"\<TimingDataComp3.mx\>\"", "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"numberTests", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "TimingDataConv3", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TmaxComp", " ", "=", " ", "5"}], ";"}], "\n", 
    RowBox[{
     RowBox[{"TmaxConv", "=", 
      RowBox[{"5", "*", 
       RowBox[{"1", "/", "M"}], "*", "20"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"binLength", "=", "0.05"}], ";"}], "\n", 
    RowBox[{
     RowBox[{"epsilon", "=", 
      RowBox[{"binLength", "/", "2"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"numberBinsComp", "=", 
      RowBox[{"TmaxComp", "/", "binLength"}]}], ";"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"numberBinsConv", "=", 
      RowBox[{"TmaxConv", "/", "binLength"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"countComp3", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"IntegerPart", "[", "numberBinsComp", "]"}]}], "]"}]}], ";"}],
     "\n", 
    RowBox[{
     RowBox[{"countConv3", " ", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"IntegerPart", "[", "numberBinsConv", "]"}]}], "]"}]}], ";"}],
     " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "-", "epsilon"}], "<=", 
             RowBox[{"TimingDataComp3", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "+", "epsilon"}]}], ",", 
            RowBox[{
             RowBox[{"countComp3", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"countComp3", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", "1"}]}], ",", "_"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"IntegerPart", "[", "numberBinsComp", "]"}]}], "}"}]}], 
         "]"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "-", "epsilon"}], "<=", 
             RowBox[{"TimingDataConv3", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "+", "epsilon"}]}], ",", 
            RowBox[{
             RowBox[{"countConv3", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"countConv3", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", "1"}]}], ",", "_"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"IntegerPart", "[", "numberBinsConv", "]"}]}], "}"}]}], 
         "]"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xTicksComp3", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "binLength"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"IntegerPart", "[", "numberBinsComp", "]"}], ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"1", "/", "binLength"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xTicksConv3", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "binLength"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"IntegerPart", "[", "numberBinsConv", "]"}], ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"1", "/", "binLength"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"countComp3", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicksComp3", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Max Time of Computation\>\"", ",", 
         "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Distribution of Max Computation Time (M = 3)\>\""}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"countConv3", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicksConv3", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Time of Convergence\>\"", ",", 
         "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Distribution of Convergence Time (M = 3)\>\""}]}], "]"}]}]}],
  FontWeight->"Plain"]], "Input",
 CellChangeTimes->{{3.867253701368676*^9, 3.867253702725238*^9}, {
   3.867253733792187*^9, 3.867253852341834*^9}, {3.8672538837736645`*^9, 
   3.8672539000553975`*^9}, {3.867253942439685*^9, 3.8672539922635665`*^9}, {
   3.867254591183806*^9, 3.8672546415615087`*^9}, {3.8672546788794327`*^9, 
   3.867254681592555*^9}, {3.8672552203022723`*^9, 3.8672552209180727`*^9}, {
   3.867255328226356*^9, 3.867255329558925*^9}, 3.8672559183444414`*^9, {
   3.8672560759744453`*^9, 3.867256079890178*^9}, {3.8672583209391546`*^9, 
   3.8672583437737665`*^9}, {3.8672595252115498`*^9, 3.8672595336298275`*^9}, 
   3.8672618389440117`*^9, 3.867261882207015*^9, 3.8672619530201054`*^9, {
   3.8672619897062387`*^9, 3.8672620198564835`*^9}, {3.867262051964096*^9, 
   3.8672621652214546`*^9}, {3.867262201991558*^9, 3.8672622198887696`*^9}, 
   3.867262485563817*^9, {3.8673423556302524`*^9, 3.8673423883177576`*^9}, {
   3.867342537916732*^9, 3.867342550026843*^9}, {3.8675214500974855`*^9, 
   3.86752146010623*^9}, {3.867521491532008*^9, 3.8675216002786303`*^9}, {
   3.8675216863136435`*^9, 3.8675216870643997`*^9}, {3.8675217860891848`*^9, 
   3.867521919316846*^9}, {3.867521976215335*^9, 3.867522106397987*^9}, {
   3.8675221660595784`*^9, 3.8675222294379597`*^9}, 3.8675226274724755`*^9, {
   3.86752350450217*^9, 3.8675235064325438`*^9}, {3.8675244627304525`*^9, 
   3.8675244690723886`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[336]:=",ExpressionUUID->"d48193e9-4166-40ad-adcf-be06a9add258"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 0.}, {2., 3.}, {2.7916666666666665`, 12.5}}], 
     LineBox[{{3.1923076923076925`, 12.5}, {4., 2.}, {5., 12.}, {6., 9.}, {
      6.5, 12.5}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQvXoVELxSdGAAA00orQSlNaC0CpSWgNJqaHwNNL4W
lBaA0jpQmgFK66HJG0BpDihtiCZvBNMPBcZQ/gd7CG0C5YtAaVM088zQ5M2h
tBKUtkBznyUa3wrNPdZo5tmg8W2htAKUtkPj26Oa/wDG13QAAI0RGsc=
      "]], LineBox[CompressedData["
1:eJxdy7kNwkAURdEnInqAhJAqMBizr2YxpEiEFi38qiD9fdAEJbB4Bsl3pNHX
0dXrXG75tSEp+/zvfZTPe9lKEv1et7oW3Q63H65Cj26GO6jbol+96qZxXz1L
0YfosDJ0WCN0WGN0WBN0WFN0WDN0WHN0WAt0WEt0WCt0WGt0WJu6E9hgh7XF
HjbYYeXYwwY7rB32sMEOa489bLDDOmAPG+ywjtjDBjusAnvYYId1wh422GGd
/34DkMpE/A==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Max Time of Computation\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Number of Initial Conditions\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Distribution of Max Computation Time (M = 3)\"", TraditionalForm],
  PlotRange->{{0., 100.}, {0, 12.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["0", TraditionalForm]}, {21, 
      FormBox["1", TraditionalForm]}, {41, 
      FormBox["2", TraditionalForm]}, {61, 
      FormBox["3", TraditionalForm]}, {81, 
      FormBox["4", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.8672620202433567`*^9, {3.867262077139949*^9, 3.867262092574956*^9}, 
   3.8672621393438253`*^9, 3.8672621827647777`*^9, 3.8672622214092755`*^9, 
   3.8672624865454984`*^9, 3.867340659735691*^9, 3.867342389376417*^9, 
   3.8673425515373583`*^9, 3.867521608111082*^9, 3.8675216890737443`*^9, 
   3.8675217378138885`*^9, {3.8675218107231708`*^9, 3.8675218229431953`*^9}, 
   3.8675218635199957`*^9, 3.8675219212062297`*^9, {3.8675220625652447`*^9, 
   3.8675221075616064`*^9}, 3.8675222206788087`*^9, 3.8675234499709096`*^9, {
   3.8675234881194997`*^9, 3.8675235075751705`*^9}, 3.867524470806823*^9},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "Out[352]=",ExpressionUUID->"fce09889-0124-453e-bc23-17b04d85e84e"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd2DmMLEcBBuAS0YYdEGxA0EYIrRCy2pzL6eL0mrMx15qzsDGsMeAGDCx3
cQQbdrgiqnDDDjescMMOX1jhCzt8ISDPGPXXwbQ+/fr1S60ZtWqeeun1F155
Wwjh3//9+N/9zWt7NuyvuOcJ7vDb8Sl+B+7xO/G78LvxGX4Pfi9+Gg/4Gfw+
/H78AfxB/CH8YXyOP4I/ij+GP44/gT+Jn8Vx73z08bl+ihyHT5Pj8BlyHD5L
jsPnyHH4PDkOz5HjcEGOw/PkOHyBHIcvkuPwJXIcvkyOw1fIcfgqOQ7j3hFn
XI8+fj++Rh9nXHF4gT7OuOLwdfo444rDN+jjjCsO36SPM644fIs+zrji8G36
OOOKwyV9nHHF4cWDD7+7+OI+z7ji8B32ccYVh+/SxxlXHL5HH2dccfg+fZxx
xeEH9HHGFYcf0scZVxzS3j2OOOGMy9GH90glbzj8iH0cccIZF1xxw+El9nHE
CWdccMUNh5fZxxEnnHHBFTccfsw+jjjhjAuuuB381nv0FfZxxAlnXHDFDYef
sI8jTjjjgituOPyUfRxxwhkXXHHD4Yp9HHHCGRdcccPh1YMP54j+1X0eccIZ
F1xxw+Fne/c44oQzLrjihsNr7OOIE8644IobDj9nH0eccMYFV9xw+AX7Rx/O
fZE84YwLrrjh8Ev2ccQJZ1xwxQ2H19nHESecccEVNxymvTvc4wFHPOKEJ5zx
jAtejj6cyyv5ihvecPjV3h3u8YAjHnHCE854xgUvuOIVN7zh8Ou9O9zjAUc8
4oQnnPGMC15wPfrwv9NK3vCGw2/27nCPBxzxiBOecMYzLnjBFa+44Q2HN/bu
cI8HHPGIE55wxjMueMEVr0cf3h+NfMPht3t3uMcDjnjECU844xkXvOCKV9zw
hsPv9u5wjwcc8YgTnnDGMy54wRWvuOENh9/v3eEeDzjiESc84YxnXPCCK15x
wxsO13t3uMcDjnjECU844xkXvOCKV9zwhsMf9u5wjwcc8YgTnnDGMy54wRWv
uOENhz/u3eEeDzjiESc84YxnXPCCK15xwxsOf9q7wz0ecMQjTnjCGc+44AVX
vOKGNxz+vHeHezzgiEec8IQznnHBC654xQ1vOPxl7w73eHjLb94j+YgTnnDG
My54wRWvuOENh7/u3eEeDzjiESc84YxnXPCCK15xwxsOf9u7wz0ecMQjTnjC
Gc+44AVXvOKGNxzy3ie4w6e4x2d4wOc44gs84kuc8BWe8DXO+AbP+BYXfIcX
fI8rfsArfoQbfow3/ASHv+99gjt8int8hgd8jiO+wCO+xAlf4Qlf44xv8Ixv
ccF3eMH3uOIHvOJHuOHHeMNPcPjH3ie4w6e4x2d4wOc44gs84kuc8BWe8DXO
+AbP+BYXfIcXfI8rfsArfoQbfow3/ASHf+59gjt8int8hgd8jiO+wCO+xAlf
4Qlf44xv8IxvccF3eMH3uOIHvOJHuOHHeMNPcPjX3ie4w6e4x2d4wOc44gs8
4kuc8BWe8DXO+AbP+BYXfIcXfI8rfsDr//0fRrLlmA==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Time of Convergence\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Number of Initial Conditions\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Distribution of Convergence Time (M = 3)\"", TraditionalForm],
  PlotRange->{{0., 666.}, {0, 51.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["0", TraditionalForm]}, {21, 
      FormBox["1", TraditionalForm]}, {41, 
      FormBox["2", TraditionalForm]}, {61, 
      FormBox["3", TraditionalForm]}, {81, 
      FormBox["4", TraditionalForm]}, {101, 
      FormBox["5", TraditionalForm]}, {121, 
      FormBox["6", TraditionalForm]}, {141, 
      FormBox["7", TraditionalForm]}, {161, 
      FormBox["8", TraditionalForm]}, {181, 
      FormBox["9", TraditionalForm]}, {201, 
      FormBox["10", TraditionalForm]}, {221, 
      FormBox["11", TraditionalForm]}, {241, 
      FormBox["12", TraditionalForm]}, {261, 
      FormBox["13", TraditionalForm]}, {281, 
      FormBox["14", TraditionalForm]}, {301, 
      FormBox["15", TraditionalForm]}, {321, 
      FormBox["16", TraditionalForm]}, {341, 
      FormBox["17", TraditionalForm]}, {361, 
      FormBox["18", TraditionalForm]}, {381, 
      FormBox["19", TraditionalForm]}, {401, 
      FormBox["20", TraditionalForm]}, {421, 
      FormBox["21", TraditionalForm]}, {441, 
      FormBox["22", TraditionalForm]}, {461, 
      FormBox["23", TraditionalForm]}, {481, 
      FormBox["24", TraditionalForm]}, {501, 
      FormBox["25", TraditionalForm]}, {521, 
      FormBox["26", TraditionalForm]}, {541, 
      FormBox["27", TraditionalForm]}, {561, 
      FormBox["28", TraditionalForm]}, {581, 
      FormBox["29", TraditionalForm]}, {601, 
      FormBox["30", TraditionalForm]}, {621, 
      FormBox["31", TraditionalForm]}, {641, 
      FormBox["32", TraditionalForm]}, {661, 
      FormBox["33", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.8672620202433567`*^9, {3.867262077139949*^9, 3.867262092574956*^9}, 
   3.8672621393438253`*^9, 3.8672621827647777`*^9, 3.8672622214092755`*^9, 
   3.8672624865454984`*^9, 3.867340659735691*^9, 3.867342389376417*^9, 
   3.8673425515373583`*^9, 3.867521608111082*^9, 3.8675216890737443`*^9, 
   3.8675217378138885`*^9, {3.8675218107231708`*^9, 3.8675218229431953`*^9}, 
   3.8675218635199957`*^9, 3.8675219212062297`*^9, {3.8675220625652447`*^9, 
   3.8675221075616064`*^9}, 3.8675222206788087`*^9, 3.8675234499709096`*^9, {
   3.8675234881194997`*^9, 3.8675235075751705`*^9}, 3.8675244708568068`*^9},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "Out[353]=",ExpressionUUID->"956867e2-f310-4f01-b007-017d7f1e7b42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"(*", " ", 
    RowBox[{"M", " ", "=", " ", "5"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"M", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TimingDataConv5", " ", "=", " ", 
      RowBox[{"Import", "[", "\"\<TimingDataConv5.mx\>\"", "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TimingDataComp5", " ", "=", " ", 
      RowBox[{"Import", "[", "\"\<TimingDataComp5.mx\>\"", "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"numberTests", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "TimingDataConv5", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TmaxComp", " ", "=", " ", "5"}], ";"}], "\n", 
    RowBox[{
     RowBox[{"TmaxConv", "=", 
      RowBox[{"5", "*", 
       RowBox[{"1", "/", "M"}], "*", "20"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"binLength", "=", "0.05"}], ";"}], "\n", 
    RowBox[{
     RowBox[{"epsilon", "=", 
      RowBox[{"binLength", "/", "2"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"numberBinsComp", "=", 
      RowBox[{"TmaxComp", "/", "binLength"}]}], ";"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"numberBinsConv", "=", 
      RowBox[{"TmaxConv", "/", "binLength"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"countComp5", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"IntegerPart", "[", "numberBinsComp", "]"}]}], "]"}]}], ";"}],
     "\n", 
    RowBox[{
     RowBox[{"countConv5", " ", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"IntegerPart", "[", "numberBinsConv", "]"}]}], "]"}]}], ";"}],
     " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "-", "epsilon"}], "<=", 
             RowBox[{"TimingDataComp5", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "+", "epsilon"}]}], ",", 
            RowBox[{
             RowBox[{"countComp5", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"countComp5", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", "1"}]}], ",", "_"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"IntegerPart", "[", "numberBinsComp", "]"}]}], "}"}]}], 
         "]"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "-", "epsilon"}], "<=", 
             RowBox[{"TimingDataConv5", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "+", "epsilon"}]}], ",", 
            RowBox[{
             RowBox[{"countConv5", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"countConv5", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", "1"}]}], ",", "_"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"IntegerPart", "[", "numberBinsConv", "]"}]}], "}"}]}], 
         "]"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xTicksComp5", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "binLength"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"IntegerPart", "[", "numberBinsComp", "]"}], ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"1", "/", "binLength"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xTicksConv5", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "binLength"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"IntegerPart", "[", "numberBinsConv", "]"}], ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"1", "/", "binLength"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"countComp5", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicksComp5", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Max Time of Computation\>\"", ",", 
         "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Distribution of Max Computation Time (M = 5)\>\""}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"countConv5", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicksConv5", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Time of Convergence\>\"", ",", 
         "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Distribution of Convergence Time (M = 5)\>\""}]}], "]"}]}]}],
  FontWeight->"Plain"]], "Input",
 CellChangeTimes->{{3.867253701368676*^9, 3.867253702725238*^9}, {
   3.867253733792187*^9, 3.867253852341834*^9}, {3.8672538837736645`*^9, 
   3.8672539000553975`*^9}, {3.867253942439685*^9, 3.8672539922635665`*^9}, {
   3.867254591183806*^9, 3.8672546415615087`*^9}, {3.8672546788794327`*^9, 
   3.867254681592555*^9}, {3.8672552203022723`*^9, 3.8672552209180727`*^9}, {
   3.867255328226356*^9, 3.867255329558925*^9}, 3.8672559183444414`*^9, {
   3.8672560759744453`*^9, 3.867256079890178*^9}, {3.8672583209391546`*^9, 
   3.8672583437737665`*^9}, {3.8672595252115498`*^9, 
   3.8672595336298275`*^9}, {3.8672611851645226`*^9, 
   3.8672611922242384`*^9}, {3.867261853887176*^9, 3.8672618722292423`*^9}, {
   3.8672619083345633`*^9, 3.867261956077117*^9}, {3.867262149322598*^9, 
   3.867262179476843*^9}, {3.867262210296872*^9, 3.867262217396574*^9}, {
   3.867262463943811*^9, 3.867262473543707*^9}, {3.867342401908395*^9, 
   3.8673424114383364`*^9}, {3.867342478722734*^9, 3.867342531424816*^9}, 
   3.8673425700214252`*^9, {3.8675226019367824`*^9, 3.867522682357621*^9}, {
   3.8675235110540385`*^9, 3.8675235131173677`*^9}, 3.8675235795647526`*^9, {
   3.867523617735335*^9, 3.8675236665554533`*^9}, 3.867524244329499*^9, {
   3.8675244741687303`*^9, 3.867524477767559*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[354]:=",ExpressionUUID->"70faceff-d01c-4aec-8e5b-e290488577f9"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd0UlOQlEQheETRg4dMHDgAAkxhhiCfYPKs29AUWyZGhy7hVpaLYkliLHK
5P43ISffO9TNK1j5/B5/1SRN55/f/DuzvspTlVyAF+E6vFSVuRzZjGxEtvB8
Hc/z3lV4DXNtzOU9uVcH8114IzL33IzMs4X33sb9O5jfjcy997DHfmT+PgeR
uddhZO7Vi8y9jrDHcWQz8iQy9+vj/avI+B8tnfOnkbGfpfOcoYd1Xn7fYF2g
h3WJHtYVeljX6GHdoId1ix7WHXpYA/Swhuhh3aOH9YAe1gg9rMfSFWyww3rC
PGywwxpjHjbYYT1jHjbYYb1gHjbYYb1iHjbYYb1hHjbYYb1jHjbYYX1gHjbY
YU3+/QMzVFq1
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Max Time of Computation\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Number of Initial Conditions\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Distribution of Max Computation Time (M = 5)\"", TraditionalForm],
  PlotRange->{{0., 100.}, {0, 16.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["0", TraditionalForm]}, {21, 
      FormBox["1", TraditionalForm]}, {41, 
      FormBox["2", TraditionalForm]}, {61, 
      FormBox["3", TraditionalForm]}, {81, 
      FormBox["4", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{3.8675242457250443`*^9, 3.8675244788991904`*^9},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "Out[370]=",ExpressionUUID->"4c530f37-e9fb-4b63-b1e6-37dd5bbbade6"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd2EkOG0UUgOEHK5ZesGDBookQQihCZp5JAWGGYEIYwhCKkABhSAyEaVdH
8BHqCD5CHcFHqCP4CAiljFSfN61Pv56e1JLb1X7g6q2L1++OiN1dEf9d73yO
52L+pJn34BW+F9+H78cLPoMfxA/hh/Ej+Cx+FK/xY/hx/AR+cvh0H56iP42f
wc/i5/Dz+AX8In4Jv4zP4TS74HiFjuNVOo7X6DjOD4/7V87TX2cexxt0HG/S
cbxFx/E2Hcc7dBzv0nG8R8fxPh3HheHT/btA/4B5HJvZCRfccHzIPC644bjI
PC644fiIeVxww3FpeDwH0qW5F9xwfMx+XHDD8QnzuOCG41PmccENx2fM44Ib
jsvD47mZLs+94Ibjc/bjghuOL5jHBTccXzKPC244vmIeF9xwXBkev1PpytwL
bji+Zj8uuOHIsxeccMYFV9xwx/EN+3HCGZeTx3O/0hvuOK6yHyecccEVN9xx
fMt+nHDGBVfccMdxbXicw5Zrc08444IrbrjjuD57wQlnXHDFDXcc37EfJ5xx
OXmceyu94Y7je/bjhDMuuOKGO44f2I8TzrjgihvuOG4Mj/eE5cbcE8644Iob
7jh+nL3ghDMuuOKGO46f2I8TzricPN6LKr3hjuNn9uOEMy644oY7jl/YjxPO
uOCKG+44bg6P98bl5twTzrjgihvuOG7NXnDCGRdcccMdx3b2Ci94jdPJ4/u7
oWe8xQXvcMV73PABd3zE8evsFV7wGie8wRlvcTl5nP929Ir3uOED7viI47fZ
K7zgNU54gzPe4oJ3uOI9biefuXM90Ds+4vh99goveI0T3uCMt7jgHa54jxs+
4I6POG4Pj/Pf6vbcF7zGCW9wxltc8A5XvMcNH3DHRxx/zF7hBa9x+t93rht6
xltc8A5XvMcNH3DHRxx/zl7hBa9xwhuc8RYXvMMV73HDB9zxEcdfs1d4wWuc
8AZnvMUF73DFe9xOHv/bH+gdH3H8PXuFF7zGCW9wxltc8A5XvMcNH3DHRxz/
DJ9N/wJ+IaQW
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Time of Convergence\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Number of Initial Conditions\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Distribution of Convergence Time (M = 5)\"", TraditionalForm],
  PlotRange->{{0., 400.}, {0, 44.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["0", TraditionalForm]}, {21, 
      FormBox["1", TraditionalForm]}, {41, 
      FormBox["2", TraditionalForm]}, {61, 
      FormBox["3", TraditionalForm]}, {81, 
      FormBox["4", TraditionalForm]}, {101, 
      FormBox["5", TraditionalForm]}, {121, 
      FormBox["6", TraditionalForm]}, {141, 
      FormBox["7", TraditionalForm]}, {161, 
      FormBox["8", TraditionalForm]}, {181, 
      FormBox["9", TraditionalForm]}, {201, 
      FormBox["10", TraditionalForm]}, {221, 
      FormBox["11", TraditionalForm]}, {241, 
      FormBox["12", TraditionalForm]}, {261, 
      FormBox["13", TraditionalForm]}, {281, 
      FormBox["14", TraditionalForm]}, {301, 
      FormBox["15", TraditionalForm]}, {321, 
      FormBox["16", TraditionalForm]}, {341, 
      FormBox["17", TraditionalForm]}, {361, 
      FormBox["18", TraditionalForm]}, {381, 
      FormBox["19", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{3.8675242457250443`*^9, 3.867524478946175*^9},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "Out[371]=",ExpressionUUID->"b787e6cd-5d92-4181-99df-fb1bc27db7fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"(*", " ", 
    RowBox[{"M", " ", "=", " ", "10"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"M", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TimingDataConv10", " ", "=", " ", 
      RowBox[{"Import", "[", "\"\<TimingDataConv10.mx\>\"", "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TimingDataComp10", " ", "=", " ", 
      RowBox[{"Import", "[", "\"\<TimingDataComp10.mx\>\"", "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"numberTests", "=", 
      RowBox[{
       RowBox[{"Dimensions", "[", "TimingDataConv10", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TmaxComp", " ", "=", " ", "5"}], ";"}], "\n", 
    RowBox[{
     RowBox[{"TmaxConv", "=", 
      RowBox[{"5", "*", 
       RowBox[{"1", "/", "M"}], "*", "20"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"binLength", "=", "0.05"}], ";"}], "\n", 
    RowBox[{
     RowBox[{"epsilon", "=", 
      RowBox[{"binLength", "/", "2"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"numberBinsComp", "=", 
      RowBox[{"TmaxComp", "/", "binLength"}]}], ";"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"numberBinsConv", "=", 
      RowBox[{"TmaxConv", "/", "binLength"}]}], ";"}], "\n", 
    RowBox[{
     RowBox[{"countComp10", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"IntegerPart", "[", "numberBinsComp", "]"}]}], "]"}]}], ";"}],
     "\n", 
    RowBox[{
     RowBox[{"countConv10", " ", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"IntegerPart", "[", "numberBinsConv", "]"}]}], "]"}]}], ";"}],
     " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "-", "epsilon"}], "<=", 
             RowBox[{"TimingDataComp10", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "+", "epsilon"}]}], ",", 
            RowBox[{
             RowBox[{"countComp10", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"countComp10", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", "1"}]}], ",", "_"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"IntegerPart", "[", "numberBinsComp", "]"}]}], "}"}]}], 
         "]"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "-", "epsilon"}], "<=", 
             RowBox[{"TimingDataConv10", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{
              RowBox[{"j", "*", "binLength"}], "+", "epsilon"}]}], ",", 
            RowBox[{
             RowBox[{"countConv10", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"countConv10", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", "1"}]}], ",", "_"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"IntegerPart", "[", "numberBinsConv", "]"}]}], "}"}]}], 
         "]"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xTicksComp10", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "binLength"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"IntegerPart", "[", "numberBinsComp", "]"}], ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"1", "/", "binLength"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xTicksConv10", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", "binLength"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"IntegerPart", "[", "numberBinsConv", "]"}], ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"1", "/", "binLength"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"countComp10", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicksComp10", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Max Time of Computation\>\"", ",", 
         "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Distribution of Max Computation Time (M = 10)\>\""}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"countConv10", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicksConv10", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Time of Convergence\>\"", ",", 
         "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Distribution of Convergence Time (M = 10)\>\""}]}], "]"}]}]}],
  FontWeight->"Plain"]], "Input",
 CellChangeTimes->{{3.867253701368676*^9, 3.867253702725238*^9}, {
   3.867253733792187*^9, 3.867253852341834*^9}, {3.8672538837736645`*^9, 
   3.8672539000553975`*^9}, {3.867253942439685*^9, 3.8672539922635665`*^9}, {
   3.867254591183806*^9, 3.8672546415615087`*^9}, {3.8672546788794327`*^9, 
   3.867254681592555*^9}, {3.8672552203022723`*^9, 3.8672552209180727`*^9}, {
   3.867255328226356*^9, 3.867255329558925*^9}, 3.8672559183444414`*^9, {
   3.8672560759744453`*^9, 3.867256079890178*^9}, {3.8672583209391546`*^9, 
   3.8672583437737665`*^9}, {3.8672595252115498`*^9, 
   3.8672595336298275`*^9}, {3.8672611851645226`*^9, 
   3.8672611922242384`*^9}, {3.867261853887176*^9, 3.8672618722292423`*^9}, {
   3.8672619083345633`*^9, 3.867261956077117*^9}, {3.867262149322598*^9, 
   3.867262179476843*^9}, {3.867262210296872*^9, 3.867262217396574*^9}, {
   3.867262463943811*^9, 3.867262473543707*^9}, {3.867342401908395*^9, 
   3.8673424114383364`*^9}, {3.867342478722734*^9, 3.867342531424816*^9}, 
   3.8673425700214252`*^9, {3.8675226019367824`*^9, 3.867522682357621*^9}, {
   3.8675235110540385`*^9, 3.8675235131173677`*^9}, {3.867524481888219*^9, 
   3.867524488767982*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[372]:=",ExpressionUUID->"7a4402c9-1130-4c8a-98a5-3fff41ac54f2"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJx10ElKQ1EQheGDI4cOHDhwYIKIiASNvVFzY983SdQ4FR27hVpaLcklaEiV
cH/wQTh8Oam8W7fx/tX/nJL08fsZ5+T57qp+Sv39dHgGmf1sqcfn0pHz8ALc
xP8uRi79k8uYW0GulvocrVKfcy0y91pH38Z5NiJz3030W3jfdmTut4N+F96L
zHvaj8w9O9jjIDL3PYzMez3C+bqRzchS/97S+f5e/XvroT+OjP0snfd3gj6d
93ea/eQxWGfoYZ2jh3WBHtYlelhX6GFdo4d1gx7WLXpYd+hh3aOH9YAe1mPt
AhvssJ4wDxvssPqYhw12WAPMwwY7rCHmYYMd1jPmYYMd1gvmYYMd1ivmYYMd
1gjzsMEO6+3PP0AWW4o=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Max Time of Computation\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Number of Initial Conditions\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Distribution of Max Computation Time (M = 10)\"", TraditionalForm],
  PlotRange->{{0., 100.}, {0, 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["0", TraditionalForm]}, {21, 
      FormBox["1", TraditionalForm]}, {41, 
      FormBox["2", TraditionalForm]}, {61, 
      FormBox["3", TraditionalForm]}, {81, 
      FormBox["4", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.8672611937087564`*^9, 3.867261874149621*^9, {3.8672619183433237`*^9, 
   3.8672619565919495`*^9}, {3.8672621542200127`*^9, 3.867262180527503*^9}, 
   3.867262223291667*^9, 3.8672624749362545`*^9, 3.8673406615361133`*^9, 
   3.8673424239413214`*^9, {3.867342555716017*^9, 3.8673425733813457`*^9}, 
   3.8675233918208265`*^9, 3.8675235138101425`*^9, 3.8675244897496605`*^9},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "Out[388]=",ExpressionUUID->"9f82dc48-4486-4973-8033-e1d7432698da"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd1jluFVEQQNESESEBAQGBQQghhBDzDH5MZjZgRjOYxtgMEVuopfRSKmQZ
vQSWAIjXQZ+Wvr6OrkqV9PAObf/c2N0TEb/+/v79/79+r8byakvuxfvwfnwA
H8Qr+DA+0pZ7jtKP4eP4BD6JT+HT+Aw+i8/h8/gCvogv4cv4Cr6Kr+Hr+AZe
xW3pxHGTjuMWHcdtOo47dBx36TjW6Dju0XHcp+N4QMfxkI7jER3HYzqOJ3Qc
6939+ch1+lPmcTxbuuHEheM58zhn9+e06LHBPE5cOF4wjxMXjpfM48SF4xXz
OHHheM08ztn9vVf0eMM8Tlw43jKPExeOze7+Hm2by564cLxjP05cON4zj3P2
fP/R4wPzOHHh+Mg8Tlw4trr7d7JtLXviwvGJ/Thx4RiWXsFtdv8uDPTEIy48
4fjMftzwgHN2v/9GeuEJxzb7ccMDTjzimt3PMRM9vrAfNzzgxCMuPOHY6e7n
nJWdZW94wIlHXHjCsbv0Cm6z+7lzoCceceEJx1f244YHnLP7+3mkF55wfGM/
bnjAiUdcs/u5fqLHd/bjhgeceMSFJxw/utfaH//mvBU=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Time of Convergence\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Number of Initial Conditions\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Distribution of Convergence Time (M = 10)\"", TraditionalForm],
  PlotRange->{{0., 200.}, {0, 44.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["0", TraditionalForm]}, {21, 
      FormBox["1", TraditionalForm]}, {41, 
      FormBox["2", TraditionalForm]}, {61, 
      FormBox["3", TraditionalForm]}, {81, 
      FormBox["4", TraditionalForm]}, {101, 
      FormBox["5", TraditionalForm]}, {121, 
      FormBox["6", TraditionalForm]}, {141, 
      FormBox["7", TraditionalForm]}, {161, 
      FormBox["8", TraditionalForm]}, {181, 
      FormBox["9", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.8672611937087564`*^9, 3.867261874149621*^9, {3.8672619183433237`*^9, 
   3.8672619565919495`*^9}, {3.8672621542200127`*^9, 3.867262180527503*^9}, 
   3.867262223291667*^9, 3.8672624749362545`*^9, 3.8673406615361133`*^9, 
   3.8673424239413214`*^9, {3.867342555716017*^9, 3.8673425733813457`*^9}, 
   3.8675233918208265`*^9, 3.8675235138101425`*^9, 3.8675244897946463`*^9},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "Out[389]=",ExpressionUUID->"d95792eb-2e93-4d23-b28f-215faf70d55d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"countComp3", ",", "countComp5", ",", "countComp10"}], "}"}], 
    ",", 
    RowBox[{"Ticks", "->", 
     RowBox[{"{", 
      RowBox[{"xTicksComp3", ",", "Automatic"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Max Time of Computation\>\"", ",", 
       "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
    RowBox[{"ImageSize", "->", "600"}], ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Distribution of Max Computation Time (M = 3,5,10)\>\""}], ",", 
    RowBox[{"PlotRange", "->", "Full"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<M = 3\>\"", ",", "\"\<M = 5\>\"", ",", "\"\<M = 10\>\""}], 
      "}"}]}]}], "]"}],
  FontWeight->"Plain"]], "Input",
 CellChangeTimes->{{3.867253701368676*^9, 3.867253702725238*^9}, {
   3.867253733792187*^9, 3.867253852341834*^9}, {3.8672538837736645`*^9, 
   3.8672539000553975`*^9}, {3.867253942439685*^9, 3.8672539922635665`*^9}, {
   3.867254591183806*^9, 3.8672546415615087`*^9}, {3.8672546788794327`*^9, 
   3.867254681592555*^9}, {3.8672552203022723`*^9, 3.8672552209180727`*^9}, {
   3.867255328226356*^9, 3.867255329558925*^9}, 3.8672559183444414`*^9, {
   3.8672560759744453`*^9, 3.867256079890178*^9}, {3.8672583209391546`*^9, 
   3.8672583437737665`*^9}, {3.8672595252115498`*^9, 
   3.8672595336298275`*^9}, {3.8672611851645226`*^9, 
   3.8672611922242384`*^9}, {3.867261853887176*^9, 3.8672618722292423`*^9}, {
   3.8672619083345633`*^9, 3.867261956077117*^9}, {3.867262149322598*^9, 
   3.867262179476843*^9}, {3.867262210296872*^9, 3.867262217396574*^9}, {
   3.867262463943811*^9, 3.867262473543707*^9}, {3.867342401908395*^9, 
   3.8673424114383364`*^9}, {3.867342478722734*^9, 3.867342531424816*^9}, 
   3.8673425700214252`*^9, {3.8675226019367824`*^9, 3.867522682357621*^9}, {
   3.8675235110540385`*^9, 3.8675235131173677`*^9}, {3.8675243587732687`*^9, 
   3.867524359392069*^9}, {3.867524418680781*^9, 3.8675244417522764`*^9}, {
   3.867524494631073*^9, 3.867524545094657*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[393]:=",ExpressionUUID->"b14b67d0-ed31-4cc8-a84f-46483a667718"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd0clKQ0EQheFDVi5duHDhIgYREZFoNI4xV+MUh0TjvBVd5xXq0eqR8ggq
t0rov0EOH+dWp7td/pxOvhuSvn7//rJes77KVdUxh9yMnK/K7xYi1yIXI1uR
S5HtyGbkPr7L+RXsswrzd9Zxrg2cj+fOc+S9ttBv53ysTjjfaSec997Ffl30
e5GtyLx3nu8APsR5jrDfMdyLzHc9gfvYv4qMd7J0/p9Oy+8tnfc7K23pfJ9B
ztfLBujP0cO6QA/rEj2sK/SwrtHDGqKHdYMe1i16WHfoYd2jhzVCD2uMHtZD
6Qo22GE9Yh422GFNMA8b7LCeMA8b7LCeMQ8b7LBeMA8b7LBeMQ8b7LDeMA8b
7LDeMQ8b7LA+/v0D5rxaKQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd0UlOQlEQheETRg4dMHDgAAkxhhiCfYPKs29AUWyZGhy7hVpaLYkliLHK
5P43ISffO9TNK1j5/B5/1SRN55/f/DuzvspTlVyAF+E6vFSVuRzZjGxEtvB8
Hc/z3lV4DXNtzOU9uVcH8114IzL33IzMs4X33sb9O5jfjcy997DHfmT+PgeR
uddhZO7Vi8y9jrDHcWQz8iQy9+vj/avI+B8tnfOnkbGfpfOcoYd1Xn7fYF2g
h3WJHtYVeljX6GHdoId1ix7WHXpYA/Swhuhh3aOH9YAe1gg9rMfSFWyww3rC
PGywwxpjHjbYYT1jHjbYYb1gHjbYYb1iHjbYYb1hHjbYYb1jHjbYYX1gHjbY
YU3+/QMzVFq1
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJx10ElKQ1EQheGDI4cOHDhwYIKIiASNvVFzY983SdQ4FR27hVpaLcklaEiV
cH/wQTh8Oam8W7fx/tX/nJL08fsZ5+T57qp+Sv39dHgGmf1sqcfn0pHz8ALc
xP8uRi79k8uYW0GulvocrVKfcy0y91pH38Z5NiJz3030W3jfdmTut4N+F96L
zHvaj8w9O9jjIDL3PYzMez3C+bqRzchS/97S+f5e/XvroT+OjP0snfd3gj6d
93ea/eQxWGfoYZ2jh3WBHtYlelhX6GFdo4d1gx7WLXpYd+hh3aOH9YAe1mPt
AhvssJ4wDxvssPqYhw12WAPMwwY7rCHmYYMd1jPmYYMd1gvmYYMd1ivmYYMd
1gjzsMEO6+3PP0AWW4o=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"Max Time of Computation\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Number of Initial Conditions\"", HoldForm], 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Distribution of Max Computation Time (M = 3,5,10)\"", 
       TraditionalForm], PlotRange -> {{0, 100.}, {0, 24.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{{1, 
         FormBox["0", TraditionalForm]}, {21, 
         FormBox["1", TraditionalForm]}, {41, 
         FormBox["2", TraditionalForm]}, {61, 
         FormBox["3", TraditionalForm]}, {81, 
         FormBox["4", TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"M = 3\"", "\"M = 5\"", "\"M = 10\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8675244959746356`*^9, 3.8675245455755*^9}},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "Out[393]=",ExpressionUUID->"5dbc446a-6470-46a4-9cbd-1a5c08585a41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"countConv3", ",", "countConv5", ",", "countConv10"}], "}"}], 
    ",", 
    RowBox[{"Ticks", "->", 
     RowBox[{"{", 
      RowBox[{"xTicksConv3", ",", "Automatic"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Time of Convergence\>\"", ",", 
       "\"\<Number of Initial Conditions\>\""}], "}"}]}], ",", 
    RowBox[{"ImageSize", "->", "600"}], ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Distribution of Convergence Time (M = 3,5,10)\>\""}], ",", 
    RowBox[{"PlotRange", "->", "Full"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<M = 3\>\"", ",", "\"\<M = 5\>\"", ",", "\"\<M = 10\>\""}], 
      "}"}]}]}], "]"}],
  FontWeight->"Plain"]], "Input",
 CellChangeTimes->{{3.867524600034786*^9, 3.8675246537163224`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[394]:=",ExpressionUUID->"cfe4ac38-f3a0-435a-a265-051020125d1c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd2DmMLEcBBuAS0YYdEGxA0EYIrRCy2pzL6eL0mrMx15qzsDGsMeAGDCx3
cQQbdrgiqnDDDjescMMOX1jhCzt8ISDPGPXXwbQ+/fr1S60ZtWqeeun1F155
Wwjh3//9+N/9zWt7NuyvuOcJ7vDb8Sl+B+7xO/G78LvxGX4Pfi9+Gg/4Gfw+
/H78AfxB/CH8YXyOP4I/ij+GP44/gT+Jn8Vx73z08bl+ihyHT5Pj8BlyHD5L
jsPnyHH4PDkOz5HjcEGOw/PkOHyBHIcvkuPwJXIcvkyOw1fIcfgqOQ7j3hFn
XI8+fj++Rh9nXHF4gT7OuOLwdfo444rDN+jjjCsO36SPM644fIs+zrji8G36
OOOKwyV9nHHF4cWDD7+7+OI+z7ji8B32ccYVh+/SxxlXHL5HH2dccfg+fZxx
xeEH9HHGFYcf0scZVxzS3j2OOOGMy9GH90glbzj8iH0cccIZF1xxw+El9nHE
CWdccMUNh5fZxxEnnHHBFTccfsw+jjjhjAuuuB381nv0FfZxxAlnXHDFDYef
sI8jTjjjgituOPyUfRxxwhkXXHHD4Yp9HHHCGRdcccPh1YMP54j+1X0eccIZ
F1xxw+Fne/c44oQzLrjihsNr7OOIE8644IobDj9nH0eccMYFV9xw+AX7Rx/O
fZE84YwLrrjh8Ev2ccQJZ1xwxQ2H19nHESecccEVNxymvTvc4wFHPOKEJ5zx
jAtejj6cyyv5ihvecPjV3h3u8YAjHnHCE854xgUvuOIVN7zh8Ou9O9zjAUc8
4oQnnPGMC15wPfrwv9NK3vCGw2/27nCPBxzxiBOecMYzLnjBFa+44Q2HN/bu
cI8HHPGIE55wxjMueMEVr0cf3h+NfMPht3t3uMcDjnjECU844xkXvOCKV9zw
hsPv9u5wjwcc8YgTnnDGMy54wRWvuOENh9/v3eEeDzjiESc84YxnXPCCK15x
wxsO13t3uMcDjnjECU844xkXvOCKV9zwhsMf9u5wjwcc8YgTnnDGMy54wRWv
uOENhz/u3eEeDzjiESc84YxnXPCCK15xwxsOf9q7wz0ecMQjTnjCGc+44AVX
vOKGNxz+vHeHezzgiEec8IQznnHBC654xQ1vOPxl7w73eHjLb94j+YgTnnDG
My54wRWvuOENh7/u3eEeDzjiESc84YxnXPCCK15xwxsOf9u7wz0ecMQjTnjC
Gc+44AVXvOKGNxzy3ie4w6e4x2d4wOc44gs84kuc8BWe8DXO+AbP+BYXfIcX
fI8rfsArfoQbfow3/ASHv+99gjt8int8hgd8jiO+wCO+xAlf4Qlf44xv8Ixv
ccF3eMH3uOIHvOJHuOHHeMNPcPjH3ie4w6e4x2d4wOc44gs84kuc8BWe8DXO
+AbP+BYXfIcXfI8rfsArfoQbfow3/ASHf+59gjt8int8hgd8jiO+wCO+xAlf
4Qlf44xv8IxvccF3eMH3uOIHvOJHuOHHeMNPcPjX3ie4w6e4x2d4wOc44gs8
4kuc8BWe8DXO+AbP+BYXfIcXfI8rfsDr//0fRrLlmA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd2EkOG0UUgOEHK5ZesGDBookQQihCZp5JAWGGYEIYwhCKkABhSAyEaVdH
8BHqCD5CHcFHqCP4CAiljFSfN61Pv56e1JLb1X7g6q2L1++OiN1dEf9d73yO
52L+pJn34BW+F9+H78cLPoMfxA/hh/Ej+Cx+FK/xY/hx/AR+cvh0H56iP42f
wc/i5/Dz+AX8In4Jv4zP4TS74HiFjuNVOo7X6DjOD4/7V87TX2cexxt0HG/S
cbxFx/E2Hcc7dBzv0nG8R8fxPh3HheHT/btA/4B5HJvZCRfccHzIPC644bjI
PC644fiIeVxww3FpeDwH0qW5F9xwfMx+XHDD8QnzuOCG41PmccENx2fM44Ib
jsvD47mZLs+94Ibjc/bjghuOL5jHBTccXzKPC244vmIeF9xwXBkev1PpytwL
bji+Zj8uuOHIsxeccMYFV9xwx/EN+3HCGZeTx3O/0hvuOK6yHyecccEVN9xx
fMt+nHDGBVfccMdxbXicw5Zrc08444IrbrjjuD57wQlnXHDFDXcc37EfJ5xx
OXmceyu94Y7je/bjhDMuuOKGO44f2I8TzrjgihvuOG4Mj/eE5cbcE8644Iob
7jh+nL3ghDMuuOKGO46f2I8TzricPN6LKr3hjuNn9uOEMy644oY7jl/YjxPO
uOCKG+44bg6P98bl5twTzrjgihvuOG7NXnDCGRdcccMdx3b2Ci94jdPJ4/u7
oWe8xQXvcMV73PABd3zE8evsFV7wGie8wRlvcTl5nP929Ir3uOED7viI47fZ
K7zgNU54gzPe4oJ3uOI9biefuXM90Ds+4vh99goveI0T3uCMt7jgHa54jxs+
4I6POG4Pj/Pf6vbcF7zGCW9wxltc8A5XvMcNH3DHRxx/zF7hBa9x+t93rht6
xltc8A5XvMcNH3DHRxx/zl7hBa9xwhuc8RYXvMMV73HDB9zxEcdfs1d4wWuc
8AZnvMUF73DFe9xOHv/bH+gdH3H8PXuFF7zGCW9wxltc8A5XvMcNH3DHRxz/
DJ9N/wJ+IaQW
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1jluFVEQQNESESEBAQGBQQghhBDzDH5MZjZgRjOYxtgMEVuopfRSKmQZ
vQSWAIjXQZ+Wvr6OrkqV9PAObf/c2N0TEb/+/v79/79+r8byakvuxfvwfnwA
H8Qr+DA+0pZ7jtKP4eP4BD6JT+HT+Aw+i8/h8/gCvogv4cv4Cr6Kr+Hr+AZe
xW3pxHGTjuMWHcdtOo47dBx36TjW6Dju0XHcp+N4QMfxkI7jER3HYzqOJ3Qc
6939+ch1+lPmcTxbuuHEheM58zhn9+e06LHBPE5cOF4wjxMXjpfM48SF4xXz
OHHheM08ztn9vVf0eMM8Tlw43jKPExeOze7+Hm2by564cLxjP05cON4zj3P2
fP/R4wPzOHHh+Mg8Tlw4trr7d7JtLXviwvGJ/Thx4RiWXsFtdv8uDPTEIy48
4fjMftzwgHN2v/9GeuEJxzb7ccMDTjzimt3PMRM9vrAfNzzgxCMuPOHY6e7n
nJWdZW94wIlHXHjCsbv0Cm6z+7lzoCceceEJx1f244YHnLP7+3mkF55wfGM/
bnjAiUdcs/u5fqLHd/bjhgeceMSFJxw/utfaH//mvBU=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"Time of Convergence\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Number of Initial Conditions\"", HoldForm], 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Distribution of Convergence Time (M = 3,5,10)\"", 
       TraditionalForm], PlotRange -> {{0, 666.}, {0, 51.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{{1, 
         FormBox["0", TraditionalForm]}, {21, 
         FormBox["1", TraditionalForm]}, {41, 
         FormBox["2", TraditionalForm]}, {61, 
         FormBox["3", TraditionalForm]}, {81, 
         FormBox["4", TraditionalForm]}, {101, 
         FormBox["5", TraditionalForm]}, {121, 
         FormBox["6", TraditionalForm]}, {141, 
         FormBox["7", TraditionalForm]}, {161, 
         FormBox["8", TraditionalForm]}, {181, 
         FormBox["9", TraditionalForm]}, {201, 
         FormBox["10", TraditionalForm]}, {221, 
         FormBox["11", TraditionalForm]}, {241, 
         FormBox["12", TraditionalForm]}, {261, 
         FormBox["13", TraditionalForm]}, {281, 
         FormBox["14", TraditionalForm]}, {301, 
         FormBox["15", TraditionalForm]}, {321, 
         FormBox["16", TraditionalForm]}, {341, 
         FormBox["17", TraditionalForm]}, {361, 
         FormBox["18", TraditionalForm]}, {381, 
         FormBox["19", TraditionalForm]}, {401, 
         FormBox["20", TraditionalForm]}, {421, 
         FormBox["21", TraditionalForm]}, {441, 
         FormBox["22", TraditionalForm]}, {461, 
         FormBox["23", TraditionalForm]}, {481, 
         FormBox["24", TraditionalForm]}, {501, 
         FormBox["25", TraditionalForm]}, {521, 
         FormBox["26", TraditionalForm]}, {541, 
         FormBox["27", TraditionalForm]}, {561, 
         FormBox["28", TraditionalForm]}, {581, 
         FormBox["29", TraditionalForm]}, {601, 
         FormBox["30", TraditionalForm]}, {621, 
         FormBox["31", TraditionalForm]}, {641, 
         FormBox["32", TraditionalForm]}, {661, 
         FormBox["33", TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"M = 3\"", "\"M = 5\"", "\"M = 10\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.867524654802967*^9},
 Background->RGBColor[1, 0.925, 0.925],
 CellLabel->
  "Out[394]=",ExpressionUUID->"af5b7a1a-a874-4f6f-9369-eb75f364f35c"]
}, Open  ]],

Cell["\<\
Conclusion : Using M = 3 increases the convergence time but every initial \
condition has converged among the chosen 200. However as M increases there \
are more initial conditions that do not converge.However the Time of \
Convergence seems to decrease as M increases(if it converges). The Max \
computation time seems to increase as M increases.\
\>", "Text",
 CellChangeTimes->{{3.867524676917775*^9, 3.867524809961495*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"83170902-10c5-4000-aaec-07ba6bf605b5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Simulation Studies (Computation and Convergence time for specific Initial \
Conditions with n varying)\
\>", "Section",
 CellChangeTimes->{{3.8676788914828353`*^9, 3.8676789484357133`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"61406ec8-6194-4a6e-87fe-11c6e69e71b8"],

Cell[CellGroupData[{

Cell["\<\
Perform simulations with varying n and plotting time of convergence and max \
time of computation for a few fixed initial conditions\
\>", "Subsection",
 CellChangeTimes->{{3.867524935309718*^9, 
  3.867524969144709*^9}},ExpressionUUID->"fe4eca79-49fc-444e-8137-\
c109fabbf39f"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ICSet", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"ICData", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ICData", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"ICData", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"ICData", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"M", " ", "=", " ", "3"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "5"}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "60"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"A1", " ", "=", " ", "0"}], ";", 
    RowBox[{"A2", " ", "=", " ", "0.2"}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"TimingDataConv", "=", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"TimingDataComp", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"SetSharedVariable", "[", "TimingDataConv", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"SetSharedVariable", "[", "TimingDataComp", "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"index", " ", "=", " ", "1"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"ICSet", "[", 
     RowBox[{"[", "index", "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"nSet", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "10", ",", "50", ",", "5"}], "}"}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"numberTests", " ", "=", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "nSet", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"nAverage", " ", "=", " ", "10"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"timeConvergence", ",", "timeComputation", ",", "n"}], "}"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n", " ", "=", " ", 
          RowBox[{"nSet", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"timeConvergence", " ", "=", " ", "0"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"timeComputation", " ", "=", " ", "0"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"timeConvergenceN", ",", "timeComputationN"}], "}"}], 
             " ", "=", 
             RowBox[{"MPCVariant", "[", 
              RowBox[{
              "A1", ",", "A2", ",", "n", ",", "M", ",", "uBound", ",", "ICs", 
               ",", "nGrid"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"timeConvergence", " ", "=", " ", 
             RowBox[{"timeConvergence", "+", "timeConvergenceN"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"timeComputation", " ", "=", " ", 
             RowBox[{"timeComputation", " ", "+", " ", "timeComputationN"}]}],
             ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", "nAverage", "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"timeConvergence", " ", "=", 
          RowBox[{"timeConvergence", "/", "nAverage"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"timeComputation", " ", "=", 
          RowBox[{"timeComputation", "/", "nAverage"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"TimingDataConv", ",", "timeConvergence"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"TimingDataComp", ",", "timeComputation"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{"\"\<TimingDataConvIC1.mx\>\"", ",", "TimingDataConv"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{"\"\<TimingDataCompIC1.mx\>\"", ",", "TimingDataComp"}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.86752497775591*^9, 3.8675250249685507`*^9}, {
   3.867525143757907*^9, 3.8675251809398108`*^9}, {3.8675252109480495`*^9, 
   3.8675253518342195`*^9}, {3.867525521220116*^9, 3.8675255213880625`*^9}, {
   3.8675255865678563`*^9, 3.867525593611566*^9}, {3.8675256244295397`*^9, 
   3.867525642423686*^9}, {3.867525673326634*^9, 3.8675257160927224`*^9}, {
   3.867525751429226*^9, 3.8675257553679457`*^9}, {3.867525826905672*^9, 
   3.8675258284501724`*^9}, {3.867525870613455*^9, 3.86752587096734*^9}, 
   3.8675259671050653`*^9, {3.8675260860743628`*^9, 3.8675260945795975`*^9}, 
   3.8675277577175636`*^9, {3.8675279753107805`*^9, 3.86752801262764*^9}, {
   3.8675280668030167`*^9, 3.8675281016526785`*^9}, {3.8675281907606907`*^9, 
   3.8675282214087224`*^9}, {3.8675283282839537`*^9, 3.8675283294945602`*^9}, 
   3.867528446796403*^9, {3.867528550439685*^9, 3.8675285676500864`*^9}, {
   3.867528623652869*^9, 3.8675286586834726`*^9}, {3.8676780773608894`*^9, 
   3.8676780774648542`*^9}, {3.867678331496024*^9, 3.867678334741991*^9}, {
   3.867679090681452*^9, 3.867679168403719*^9}, {3.8676792223065653`*^9, 
   3.8676792861052647`*^9}, {3.8676794859106884`*^9, 
   3.8676794901303444`*^9}, {3.8676799148182087`*^9, 3.8676799247950344`*^9}, 
   3.8676805991274605`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[1727]:=",ExpressionUUID->"4902d1b7-8a0f-4467-984e-7f4095660b00"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"TimingDataConvIC1", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<TimingDataConvIC1.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"TimingDataCompIC1", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<TimingDataCompIC1.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xTicks", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"nSet", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"TimingDataCompIC1", ",", "TimingDataConvIC1"}], "}"}], ",", 
    RowBox[{"Ticks", "->", 
     RowBox[{"{", 
      RowBox[{"xTicks", ",", "Automatic"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "->", "300"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Median Computation Time\>\"", ",", "\"\<Convergence Time\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<ICs = {0,0,0,0}\>\""}]}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"TimingDataCompIC1", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicks", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "300"}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", "\"\<Median Computation Time\>\"", "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<ICs = {0,0,0,0}\>\""}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"p2", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{"TimingDataConvIC1", ",", 
       RowBox[{"Ticks", "->", 
        RowBox[{"{", 
         RowBox[{"xTicks", ",", "Automatic"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "->", "300"}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", "\"\<Convergence Time\>\"", "}"}]}], ",", 
       RowBox[{"PlotLabel", "->", "\"\<ICs = {0,0,0,0}\>\""}]}], "]"}]}], 
    ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1", ",", "p2"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.8675259976021433`*^9, 3.867526069986597*^9}, {
   3.8675261055340323`*^9, 3.8675261168023667`*^9}, {3.8675261744756055`*^9, 
   3.8675262320038905`*^9}, {3.867527728914934*^9, 3.8675277421246367`*^9}, {
   3.867527772299822*^9, 3.867527882247054*^9}, {3.8675283029761877`*^9, 
   3.867528307872594*^9}, {3.867528461500616*^9, 3.8675284641247635`*^9}, {
   3.867529618553219*^9, 3.8675296525751495`*^9}, {3.8675296939876795`*^9, 
   3.867529708870837*^9}, 3.867529738906068*^9, {3.8676784646546526`*^9, 
   3.8676784879482403`*^9}, 3.8676795031831903`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[77]:=",ExpressionUUID->"81f1e63d-5868-4a35-b20c-e8286bab4b9a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 0.7546875000000001}, {2., 0.30390625000000004`}, {3., 
         0.6726562500000001}, {4., 0.30859375}, {5., 0.52890625}, {6., 
         1.16640625}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 13.166666666666666`}, {2., 16.333333333333332`}, {3., 
         16.666666666666668`}, {4., 15.5}, {5., 13.666666666666666`}, {6., 
         11.833333333333334`}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ICs = {0,0,0,0}\"", TraditionalForm], 
     PlotRange -> {{0., 6.}, {0, 16.666666666666668`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{{1, 
         FormBox["10", TraditionalForm]}, {2, 
         FormBox["15", TraditionalForm]}, {3, 
         FormBox["20", TraditionalForm]}, {4, 
         FormBox["25", TraditionalForm]}, {5, 
         FormBox["30", TraditionalForm]}, {6, 
         FormBox["35", TraditionalForm]}, {7, 
         FormBox["40", TraditionalForm]}, {8, 
         FormBox["45", TraditionalForm]}, {9, 
         FormBox["50", TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Median Computation Time\"", "\"Convergence Time\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8675277532940016`*^9, {3.8675278679736958`*^9, 3.8675278827888765`*^9}, 
   3.8675284841932344`*^9, 3.867528625968114*^9, 3.8675296119443674`*^9, 
   3.8675296543185825`*^9, 3.8675297396868114`*^9, 3.867678444499064*^9, 
   3.867678490085558*^9, 3.867678543892437*^9, 3.8676794715632515`*^9, 
   3.86767988011425*^9, 3.867680575955833*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"8f5247e2-8224-493c-a68d-0277f5bf0991"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            
            LineBox[{{1., 0.7546875000000001}, {2., 0.30390625000000004`}, {
             3., 0.6726562500000001}, {4., 0.30859375}, {5., 0.52890625}, {6.,
              1.16640625}}]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 300, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"ICs = {0,0,0,0}\"", TraditionalForm], 
         PlotRange -> {{0., 6.}, {0, 1.16640625}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {{{1, 
             FormBox["10", TraditionalForm]}, {2, 
             FormBox["15", TraditionalForm]}, {3, 
             FormBox["20", TraditionalForm]}, {4, 
             FormBox["25", TraditionalForm]}, {5, 
             FormBox["30", TraditionalForm]}, {6, 
             FormBox["35", TraditionalForm]}, {7, 
             FormBox["40", TraditionalForm]}, {8, 
             FormBox["45", TraditionalForm]}, {9, 
             FormBox["50", TraditionalForm]}}, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Median Computation Time\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            
            LineBox[{{1., 13.166666666666666`}, {2., 16.333333333333332`}, {
             3., 16.666666666666668`}, {4., 15.5}, {5., 
             13.666666666666666`}, {6., 
             11.833333333333334`}}]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 11.56481481481484}, 
         DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 300, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"ICs = {0,0,0,0}\"", TraditionalForm], 
         PlotRange -> {{0., 6.}, {11.56481481481484, 16.666666666666668`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {{{1, 
             FormBox["10", TraditionalForm]}, {2, 
             FormBox["15", TraditionalForm]}, {3, 
             FormBox["20", TraditionalForm]}, {4, 
             FormBox["25", TraditionalForm]}, {5, 
             FormBox["30", TraditionalForm]}, {6, 
             FormBox["35", TraditionalForm]}, {7, 
             FormBox["40", TraditionalForm]}, {8, 
             FormBox["45", TraditionalForm]}, {9, 
             FormBox["50", TraditionalForm]}}, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Convergence Time\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8675277532940016`*^9, {3.8675278679736958`*^9, 3.8675278827888765`*^9}, 
   3.8675284841932344`*^9, 3.867528625968114*^9, 3.8675296119443674`*^9, 
   3.8675296543185825`*^9, 3.8675297396868114`*^9, 3.867678444499064*^9, 
   3.867678490085558*^9, 3.867678543892437*^9, 3.8676794715632515`*^9, 
   3.86767988011425*^9, 3.867680576065798*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"855ef936-3e0a-4b11-90aa-e6ae4e4aafaa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"TimingDataConvIC2", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<TimingDataConvIC2.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"TimingDataCompIC2", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<TimingDataCompIC2.mx\>\"", "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xTicks", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"nSet", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numberTests"}], "}"}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"TimingDataCompIC2", ",", "TimingDataConvIC2"}], "}"}], ",", 
    RowBox[{"Ticks", "->", 
     RowBox[{"{", 
      RowBox[{"xTicks", ",", "Automatic"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "->", "300"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Max Computation Time\>\"", ",", "\"\<Convergence Time\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<ICs = {0,-0.44,0.60,-0.36}\>\""}]}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"TimingDataCompIC2", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{"xTicks", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "300"}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", "\"\<Median Computation Time\>\"", "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<ICs = {0,-0.44,0.60,-0.36}\>\""}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"p2", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{"TimingDataConvIC2", ",", 
       RowBox[{"Ticks", "->", 
        RowBox[{"{", 
         RowBox[{"xTicks", ",", "Automatic"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "->", "300"}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", "\"\<Convergence Time\>\"", "}"}]}], ",", 
       RowBox[{"PlotLabel", "->", "\"\<ICs = {0,-0.44,0.60,-0.36}\>\""}]}], 
      "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1", ",", "p2"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.8675259976021433`*^9, 3.867526069986597*^9}, {
  3.8675261055340323`*^9, 3.8675261168023667`*^9}, {3.8675261744756055`*^9, 
  3.8675262320038905`*^9}, {3.867527728914934*^9, 3.8675277421246367`*^9}, {
  3.867527772299822*^9, 3.867527882247054*^9}, {3.8675283029761877`*^9, 
  3.867528307872594*^9}, {3.867528461500616*^9, 3.8675284641247635`*^9}, {
  3.8675286772974157`*^9, 3.867528687978941*^9}, {3.867529664111397*^9, 
  3.8675296764643784`*^9}, {3.8675297232761507`*^9, 3.8675297549318533`*^9}, {
  3.867678345690505*^9, 3.867678406231242*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->"In[70]:=",ExpressionUUID->"9f74898e-c8df-4345-b2b3-1f5db950b635"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 0.921875}, {2., 1.171875}, {3., 5.546875}, {4., 
         0.6796875}, {5., 1.2265625}, {6., 1.96875}, {7., 2.0234375}, {8., 
         1.3125}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 8.333333333333334}, {2., 23.333333333333332`}, {3., 
         8.333333333333334}, {4., 10.}, {5., 33.333333333333336`}, {6., 
         8.333333333333334}, {7., 33.333333333333336`}, {8., 
         18.333333333333332`}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ICs = {0,-0.44,0.60,-0.36}\"", TraditionalForm], 
     PlotRange -> {{0., 8.}, {0, 33.333333333333336`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{{1, 
         FormBox["10", TraditionalForm]}, {2, 
         FormBox["15", TraditionalForm]}, {3, 
         FormBox["20", TraditionalForm]}, {4, 
         FormBox["25", TraditionalForm]}, {5, 
         FormBox["30", TraditionalForm]}, {6, 
         FormBox["35", TraditionalForm]}, {7, 
         FormBox["40", TraditionalForm]}, {8, 
         FormBox["45", TraditionalForm]}, {9, 
         FormBox["50", TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Max Computation Time\"", "\"Convergence Time\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.867529363191289*^9, 3.867529677743962*^9, {3.8675297440214014`*^9, 
   3.8675297562054377`*^9}, 3.8676783148183284`*^9, {3.8676783973280735`*^9, 
   3.8676784068100567`*^9}, 3.867680563968647*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"7260a3c2-b200-48d3-9db0-109798e62ff5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            
            LineBox[{{1., 0.921875}, {2., 1.171875}, {2.5723214285714286`, 
             3.67578125}}], 
            
            LineBox[{{3.384430176565008, 3.67578125}, {4., 0.6796875}, {5., 
             1.2265625}, {6., 1.96875}, {7., 2.0234375}, {8., 
             1.3125}}]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 300, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"ICs = {0,-0.44,0.60,-0.36}\"", TraditionalForm], 
         PlotRange -> {{0., 8.}, {0, 3.67578125}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {{{1, 
             FormBox["10", TraditionalForm]}, {2, 
             FormBox["15", TraditionalForm]}, {3, 
             FormBox["20", TraditionalForm]}, {4, 
             FormBox["25", TraditionalForm]}, {5, 
             FormBox["30", TraditionalForm]}, {6, 
             FormBox["35", TraditionalForm]}, {7, 
             FormBox["40", TraditionalForm]}, {8, 
             FormBox["45", TraditionalForm]}, {9, 
             FormBox["50", TraditionalForm]}}, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Median Computation Time\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            
            LineBox[{{1., 8.333333333333334}, {2., 23.333333333333332`}, {3., 
             8.333333333333334}, {4., 10.}, {5., 33.333333333333336`}, {6., 
             8.333333333333334}, {7., 33.333333333333336`}, {8., 
             18.333333333333332`}}]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 300, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"ICs = {0,-0.44,0.60,-0.36}\"", TraditionalForm], 
         PlotRange -> {{0., 8.}, {0, 33.333333333333336`}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {{{1, 
             FormBox["10", TraditionalForm]}, {2, 
             FormBox["15", TraditionalForm]}, {3, 
             FormBox["20", TraditionalForm]}, {4, 
             FormBox["25", TraditionalForm]}, {5, 
             FormBox["30", TraditionalForm]}, {6, 
             FormBox["35", TraditionalForm]}, {7, 
             FormBox["40", TraditionalForm]}, {8, 
             FormBox["45", TraditionalForm]}, {9, 
             FormBox["50", TraditionalForm]}}, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Convergence Time\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.867529363191289*^9, 3.867529677743962*^9, {3.8675297440214014`*^9, 
   3.8675297562054377`*^9}, 3.8676783148183284`*^9, {3.8676783973280735`*^9, 
   3.8676784068100567`*^9}, 3.867680564136594*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"8c5d531f-a330-47c2-a6ad-fec5bbc2be70"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"34e602bb-840d-4efa-ad35-5d1b4dca0c9f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 203, 3, 71, "Section",ExpressionUUID->"218715c9-e13d-4d05-9367-f46b46dc3c30"],
Cell[786, 27, 152554, 3734, 5948, "Input",ExpressionUUID->"930db826-3cbc-4bb3-97a6-3a010efa3e76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153377, 3766, 271, 5, 57, "Section",ExpressionUUID->"a964257c-e879-4ee8-960c-c24d2796eb82"],
Cell[CellGroupData[{
Cell[153673, 3775, 18487, 443, 673, "Input",ExpressionUUID->"cdb5bb39-2bd5-427d-9b7c-b452e9e4ae48"],
Cell[CellGroupData[{
Cell[172185, 4222, 458, 12, 22, "Print",ExpressionUUID->"cf9b55c1-6bb8-446b-8030-b32fe3dd7041"],
Cell[172646, 4236, 425, 11, 22, "Print",ExpressionUUID->"596cd3ac-41b3-46b5-9c7d-b9a2e62f89c2"]
}, Open  ]],
Cell[173086, 4250, 566, 13, 28, "Message",ExpressionUUID->"e16bee4a-33be-43e6-a713-5705324bb082"],
Cell[173655, 4265, 846, 17, 28, "Message",ExpressionUUID->"379d0d79-15d8-400f-8213-11e1e8fe8268"],
Cell[CellGroupData[{
Cell[174526, 4286, 435, 11, 22, "Print",ExpressionUUID->"7a510e36-9491-4610-9978-ef7c8cd0c643"],
Cell[174964, 4299, 441, 11, 22, "Print",ExpressionUUID->"430e4783-be0e-4c37-a86e-8b137bf1fcbb"]
}, Open  ]],
Cell[175420, 4313, 347953, 6248, 416, "Output",ExpressionUUID->"c321ad7e-0332-44d6-be2c-384c27987c7d"]
}, Open  ]],
Cell[523388, 10564, 154, 3, 28, "Input",ExpressionUUID->"cf1b83ea-ecb3-4982-abee-0ea8327b6be7"]
}, Open  ]],
Cell[523557, 10570, 267, 5, 71, "Section",ExpressionUUID->"10b8cd82-d3da-46bd-b6bd-9fdb39ab5b28"],
Cell[CellGroupData[{
Cell[523849, 10579, 239, 3, 57, "Section",ExpressionUUID->"4a6cc590-f442-4cf2-ba2b-04683823857f"],
Cell[CellGroupData[{
Cell[524113, 10586, 220, 3, 70, "Subsection",ExpressionUUID->"1acf1d26-5d35-4cd7-a88d-d4dc3918c398"],
Cell[524336, 10591, 3816, 93, 235, "Input",ExpressionUUID->"57df34eb-be8d-4a64-9302-c29f455a1c19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528189, 10689, 234, 3, 70, "Subsection",ExpressionUUID->"40fac5c4-92d3-4ac8-9002-d6b88edfe490"],
Cell[528426, 10694, 3823, 93, 216, "Input",ExpressionUUID->"f0bcb1f9-1023-4c45-b370-ffafaf992339"],
Cell[532252, 10789, 540, 12, 28, "Input",ExpressionUUID->"da68167a-10fe-499e-8579-6514c16ceb60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532829, 10806, 206, 3, 70, "Subsection",ExpressionUUID->"cf3b84f8-1f81-448e-bdd3-b12ef82c3559"],
Cell[CellGroupData[{
Cell[533060, 10813, 1218, 33, 86, "Input",ExpressionUUID->"42375b5b-da59-4dfc-b24c-5a8d77109fa2"],
Cell[534281, 10848, 14928, 266, 242, "Output",ExpressionUUID->"398664f4-2817-43d4-9e7e-21d7cecc87de"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[549258, 11120, 228, 3, 70, "Subsection",ExpressionUUID->"405d1855-8448-4cab-bc06-f99a62d4560d"],
Cell[CellGroupData[{
Cell[549511, 11127, 11037, 330, 654, "Input",ExpressionUUID->"759d86f9-6d63-4111-a77a-f5770bcfb1e4"],
Cell[CellGroupData[{
Cell[560573, 11461, 417, 9, 22, "Print",ExpressionUUID->"5ee963d5-a2fa-4058-964a-90d069bd7c80"],
Cell[560993, 11472, 464, 10, 22, "Print",ExpressionUUID->"c12bf117-2aee-4333-884f-da5291e075e3"],
Cell[561460, 11484, 481, 10, 22, "Print",ExpressionUUID->"0ed33177-0b85-4546-a412-0baeaf650ef1"]
}, Open  ]],
Cell[561956, 11497, 2949, 71, 363, "Output",ExpressionUUID->"42fbeee7-db31-4b20-adf3-927c4fd91b43"],
Cell[CellGroupData[{
Cell[564930, 11572, 417, 9, 22, "Print",ExpressionUUID->"c14cdc96-02f6-4b97-9d8a-d09757bb1e03"],
Cell[565350, 11583, 464, 10, 22, "Print",ExpressionUUID->"f48f249a-9ff4-43e9-8f9b-49071197a9c3"],
Cell[565817, 11595, 487, 11, 22, "Print",ExpressionUUID->"a0dee3ae-87fd-492f-8f4d-45b985c543ae"]
}, Open  ]],
Cell[566319, 11609, 2943, 71, 363, "Output",ExpressionUUID->"3a5e9634-ea15-4ae7-b976-7ff1c7b78a2a"]
}, Open  ]],
Cell[569277, 11683, 11109, 331, 654, "Input",ExpressionUUID->"d2634e35-3775-4b4a-9e4e-935c4ed74f3f"],
Cell[580389, 12016, 11283, 333, 654, "Input",ExpressionUUID->"4385c50c-6b15-472a-b026-73f871f31bee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[591721, 12355, 234, 3, 71, "Section",ExpressionUUID->"6fbbeffa-94d3-4819-b3d6-3bc2457a08fa"],
Cell[CellGroupData[{
Cell[591980, 12362, 201, 3, 54, "Subsection",ExpressionUUID->"d4cd1662-0739-4366-903a-6c25f7b7413f"],
Cell[CellGroupData[{
Cell[592206, 12369, 22070, 535, 1205, "Input",ExpressionUUID->"0f3183bc-66bf-4493-80a1-5286a3b12336"],
Cell[CellGroupData[{
Cell[614301, 12908, 594, 14, 22, "Print",ExpressionUUID->"3b58f30a-09be-483c-ba77-fc5a456033f5"],
Cell[614898, 12924, 391, 9, 22, "Print",ExpressionUUID->"4dc854d7-9ded-4d49-bff9-d8658647ac11"]
}, Open  ]],
Cell[615304, 12936, 628, 12, 46, "Message",ExpressionUUID->"0645ad7e-ee07-49d2-b9a5-07f42706d442"],
Cell[615935, 12950, 628, 12, 46, "Message",ExpressionUUID->"59db842a-184f-4c60-9219-227ef621a0d7"],
Cell[616566, 12964, 515, 11, 28, "Message",ExpressionUUID->"da63ed13-8a94-4021-a77b-18a073a1316a"],
Cell[617084, 12977, 796, 15, 28, "Message",ExpressionUUID->"b203e623-094f-4bc3-89c2-30739d52b654"],
Cell[CellGroupData[{
Cell[617905, 12996, 327, 8, 22, "Print",ExpressionUUID->"da1202d6-5fdc-4d8a-91ad-aa2c5ec7dbd3"],
Cell[618235, 13006, 356, 8, 22, "Print",ExpressionUUID->"1acfb1be-4813-4356-8d67-168b3d8cf615"]
}, Open  ]],
Cell[618606, 13017, 443, 10, 28, "Message",ExpressionUUID->"57e11978-11b0-4752-8761-efd4395e9df8"],
Cell[619052, 13029, 443, 10, 28, "Message",ExpressionUUID->"65038caf-1428-4aec-946a-6b0986ca6aad"],
Cell[619498, 13041, 441, 10, 28, "Message",ExpressionUUID->"d2442288-722f-4627-924d-bbd8137550ac"],
Cell[619942, 13053, 485, 10, 28, "Message",ExpressionUUID->"636a3b74-e74f-4e50-b5fb-5080e6631a57"],
Cell[620430, 13065, 515, 11, 28, "Message",ExpressionUUID->"61932742-be11-423e-a896-bfc17f91e0f9"],
Cell[620948, 13078, 797, 15, 28, "Message",ExpressionUUID->"994d2808-47ba-40b2-b60f-bc64a0b2df76"],
Cell[CellGroupData[{
Cell[621770, 13097, 329, 8, 22, "Print",ExpressionUUID->"4b44f532-7041-49bd-9f34-3465e94fcfe5"],
Cell[622102, 13107, 365, 8, 22, "Print",ExpressionUUID->"a815ee04-94ac-4d45-8820-760b5f68a3d9"]
}, Open  ]],
Cell[622482, 13118, 517, 11, 28, "Message",ExpressionUUID->"9dd70172-3a73-42a3-a0cf-3a4a699afaa5"],
Cell[623002, 13131, 488, 10, 28, "Message",ExpressionUUID->"df723f56-1be1-459a-a890-3f40337ebd36"],
Cell[623493, 13143, 795, 15, 28, "Message",ExpressionUUID->"f49a3114-9641-4275-8853-c72c2afb0b58"],
Cell[624291, 13160, 488, 10, 28, "Message",ExpressionUUID->"d789335a-5665-4872-88df-459a4a5449c0"],
Cell[CellGroupData[{
Cell[624804, 13174, 329, 8, 22, "Print",ExpressionUUID->"e0d35107-6bda-4059-adb7-57f5fcd06757"],
Cell[625136, 13184, 362, 8, 22, "Print",ExpressionUUID->"fab267e0-edee-442e-b7aa-6fbcc2db512d"],
Cell[625501, 13194, 327, 8, 22, "Print",ExpressionUUID->"6b2b3fd7-f6b1-4ae1-81ce-44ae3fed4e2b"],
Cell[625831, 13204, 363, 8, 22, "Print",ExpressionUUID->"24121b1e-3108-42fe-8661-162a4dce246e"],
Cell[626197, 13214, 329, 8, 22, "Print",ExpressionUUID->"1937e458-528c-44e9-8335-84e19f778029"],
Cell[626529, 13224, 360, 8, 22, "Print",ExpressionUUID->"359ebccc-9206-47d4-8581-37ed3bf6fef9"],
Cell[626892, 13234, 329, 8, 22, "Print",ExpressionUUID->"a5e36b60-ddf2-443e-a4a3-c34c43e9516f"],
Cell[627224, 13244, 362, 8, 22, "Print",ExpressionUUID->"d6efc57a-c0dc-4c00-8b38-356a812e02f4"],
Cell[627589, 13254, 329, 8, 22, "Print",ExpressionUUID->"270014a9-b34d-4718-abe4-bb5f963aa4fc"],
Cell[627921, 13264, 363, 8, 22, "Print",ExpressionUUID->"8721438b-4ff6-4ccb-a543-ec52a9cf3355"],
Cell[628287, 13274, 329, 8, 22, "Print",ExpressionUUID->"b8113db4-206e-443b-839c-f890c7432ca9"],
Cell[628619, 13284, 362, 8, 22, "Print",ExpressionUUID->"c8c38a5d-2bdc-4dc3-b5f9-e3a3c8e6ebff"],
Cell[628984, 13294, 327, 8, 22, "Print",ExpressionUUID->"25b9a07c-6b07-4a5a-bc5c-d75ab217c1ed"],
Cell[629314, 13304, 364, 8, 22, "Print",ExpressionUUID->"c116a0b2-4f0d-4417-b7c2-0ee337df5dbe"],
Cell[629681, 13314, 373, 8, 22, "Print",ExpressionUUID->"7c28cd20-a0c9-48b7-8ad4-0cf33a7ac452"],
Cell[630057, 13324, 362, 8, 22, "Print",ExpressionUUID->"3882f1f1-5d72-4958-b979-a00cf529ee67"]
}, Open  ]],
Cell[630434, 13335, 85003, 1504, 223, "Output",ExpressionUUID->"5f19b40c-e70d-4d14-9fa0-c58a8fd3e074"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[715486, 14845, 197, 3, 54, "Subsection",ExpressionUUID->"b464e18c-79d7-4626-91b5-860fe36810d2"],
Cell[715686, 14850, 10722, 298, 597, "Input",ExpressionUUID->"78579b75-f127-47b2-8fa5-c8f1e6e8418b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[726457, 15154, 278, 6, 71, "Section",ExpressionUUID->"ca28de38-e961-4a59-bd58-c5f545e91684"],
Cell[CellGroupData[{
Cell[726760, 15164, 226, 4, 54, "Subsection",ExpressionUUID->"8854ab1b-2a9f-4380-b3b2-6d7173843de3"],
Cell[726989, 15170, 5763, 122, 463, "Input",ExpressionUUID->"d828cb66-782a-4131-b21e-781c432a4f8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[732789, 15297, 228, 3, 70, "Subsection",ExpressionUUID->"05cd5fa6-ea31-4f8b-8e68-9888f3f4dd12"],
Cell[CellGroupData[{
Cell[733042, 15304, 7745, 193, 425, "Input",ExpressionUUID->"d48193e9-4166-40ad-adcf-be06a9add258"],
Cell[740790, 15499, 3052, 71, 336, "Output",ExpressionUUID->"fce09889-0124-453e-bc23-17b04d85e84e"],
Cell[743845, 15572, 5313, 115, 347, "Output",ExpressionUUID->"956867e2-f310-4f01-b007-017d7f1e7b42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[749195, 15692, 7639, 192, 425, "Input",ExpressionUUID->"70faceff-d01c-4aec-8e5b-e290488577f9"],
Cell[756837, 15886, 2244, 59, 336, "Output",ExpressionUUID->"4c530f37-e9fb-4b63-b1e6-37dd5bbbade6"],
Cell[759084, 15947, 3590, 85, 347, "Output",ExpressionUUID->"b787e6cd-5d92-4181-99df-fb1bc27db7fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[762711, 16037, 7562, 191, 425, "Input",ExpressionUUID->"7a4402c9-1130-4c8a-98a5-3fff41ac54f2"],
Cell[770276, 16230, 2582, 64, 336, "Output",ExpressionUUID->"9f82dc48-4486-4973-8033-e1d7432698da"],
Cell[772861, 16296, 3006, 72, 347, "Output",ExpressionUUID->"d95792eb-2e93-4d23-b28f-215faf70d55d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[775904, 16373, 2256, 45, 64, "Input",ExpressionUUID->"b14b67d0-ed31-4cc8-a84f-46483a667718"],
Cell[778163, 16420, 11028, 250, 339, "Output",ExpressionUUID->"5dbc446a-6470-46a4-9cbd-1a5c08585a41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[789228, 16675, 1032, 28, 64, "Input",ExpressionUUID->"cfe4ac38-f3a0-435a-a265-051020125d1c"],
Cell[790263, 16705, 14342, 307, 350, "Output",ExpressionUUID->"af5b7a1a-a874-4f6f-9369-eb75f364f35c"]
}, Open  ]],
Cell[804620, 17015, 533, 9, 74, "Text",ExpressionUUID->"83170902-10c5-4000-aaec-07ba6bf605b5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[805202, 17030, 295, 6, 71, "Section",ExpressionUUID->"61406ec8-6194-4a6e-87fe-11c6e69e71b8"],
Cell[CellGroupData[{
Cell[805522, 17040, 288, 6, 54, "Subsection",ExpressionUUID->"fe4eca79-49fc-444e-8137-c109fabbf39f"],
Cell[805813, 17048, 6480, 156, 654, "Input",ExpressionUUID->"4902d1b7-8a0f-4467-984e-7f4095660b00"],
Cell[CellGroupData[{
Cell[812318, 17208, 3273, 82, 178, "Input",ExpressionUUID->"81f1e63d-5868-4a35-b20c-e8286bab4b9a"],
Cell[815594, 17292, 8618, 192, 224, "Output",ExpressionUUID->"8f5247e2-8224-493c-a68d-0277f5bf0991"],
Cell[824215, 17486, 13776, 295, 223, "Output",ExpressionUUID->"855ef936-3e0a-4b11-90aa-e6ae4e4aafaa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[838028, 17786, 3304, 83, 178, "Input",ExpressionUUID->"9f74898e-c8df-4345-b2b3-1f5db950b635"],
Cell[841335, 17871, 8534, 191, 228, "Output",ExpressionUUID->"7260a3c2-b200-48d3-9db0-109798e62ff5"],
Cell[849872, 18064, 13757, 295, 228, "Output",ExpressionUUID->"8c5d531f-a330-47c2-a6ad-fec5bbc2be70"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

