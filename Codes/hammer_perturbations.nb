(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    700738,      13556]
NotebookOptionsPosition[    698458,      13511]
NotebookOutlinePosition[    698861,      13527]
CellTagsIndexPosition[    698818,      13524]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"xState", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", 
     RowBox[{"x2dot", "=", 
      FractionBox[
       RowBox[{"u", "+", 
        RowBox[{"A", " ", 
         SuperscriptBox["\[Theta]dot", "2"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"A", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"\[Theta]2dot", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"u", "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"fx", "=", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", 
     RowBox[{"L", "=", 
      FractionBox[
       SuperscriptBox["u", "2"], "2"]}], ";", 
     RowBox[{"Af", "=", 
      TemplateBox[{"fx", "xState"},
       "Grad"]}], ";", 
     RowBox[{"Bf", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", "u"], "fx"}]}], ";", 
     RowBox[{"Q", "=", 
      TemplateBox[{
        TemplateBox[{"L", "xState"}, "Grad", SyntaxForm -> Del], "xState"},
       "Grad"]}], ";", 
     RowBox[{"Mf", "=", 
      TemplateBox[{
        RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"u"}]], "L"}], "xState"},
       "Grad"]}], ";", 
     RowBox[{"R", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]], "L"}]}], ";", 
     RowBox[{"S0", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"Transpose", "[", "Af", "]"}], ".", 
         RowBox[{"S", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"S", "[", "t", "]"}], ".", "Af"}], "-", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", "Bf", "]"}], ".", 
           RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"xdot", "\[Rule]", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]dot", "\[Rule]", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"u", "\[Rule]", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     RowBox[{"sol2", "=", 
      RowBox[{"S", "/.", "\[VeryThinSpace]", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["S", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "\[Equal]", "S0"}]}], "}"}], ",", 
         "S", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
     RowBox[{"S", "=", 
      RowBox[{
      "sol2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateGains", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",",
        "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{"ICs_", ",", "systemData_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "time1", ",", 
       "time2", ",", "order", ",", "maxIter", ",", "maxError", ",", "uMax", 
       ",", "maxCount", ",", "initGuess", ",", "maxJ", ",", "frootNew", ",", 
       "errorNew", ",", "InitGuess", ",", "J", ",", "S", ",", "K", ",", 
       "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", ",", "f", 
       ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
       "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
       "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
       ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
       "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
       ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
       ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
         "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
         "initGuess", ",", "maxJ"}], "}"}], " ", "=", " ", "systemData"}], 
      ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", "\n", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\n", "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";", 
      "\n", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errorNew", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
            RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                " ", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
            "\n", 
            RowBox[{"J", " ", "=", " ", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
            ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";", "\n", "\n", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}]}], "\n", 
       "\n", "]"}], ";", "\n", "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "time_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], 
      ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulumTimed", "[", 
    RowBox[{"ICs_", ",", "systemData_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "time1", ",", 
       "time2", ",", "order", ",", "maxIter", ",", "maxError", ",", "uMax", 
       ",", "maxCount", ",", "initGuess", ",", "maxJ", ",", "frootNew", ",", 
       "errorNew", ",", "InitGuess", ",", "J", ",", "S", ",", "K", ",", 
       "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", ",", "f", 
       ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
       "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
       "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
       ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
       "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
       ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
       ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
         "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
         "initGuess", ",", "maxJ"}], "}"}], " ", "=", " ", "systemData"}], 
      ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", "\n", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\n", "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time1", ",", "froot"}], "}"}], "=", 
       RowBox[{"Timing", "[", 
        RowBox[{"FindRoot", "[", 
         RowBox[{"eqns", ",", "sv", ",", 
          RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";", 
      "\n", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errorNew", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
            RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                " ", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
            "\n", 
            RowBox[{"J", " ", "=", " ", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
            ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";", "\n", "\n", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}]}], "\n", 
       "\n", "]"}], ";", "\n", "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time2", ",", "S"}], "}"}], " ", "=", " ", 
       RowBox[{"Timing", "[", 
        RowBox[{"CalculateSMatrix", "[", 
         RowBox[{
         "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
          "uff", ",", "\[Tau]", ",", "A"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "time_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], 
      ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K", ",", 
        "time1", ",", "time2"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.865967298267394*^9, 3.8659673001198*^9}, {
   3.866571893798601*^9, 3.866571940716648*^9}, {3.8665719967138014`*^9, 
   3.86657200493918*^9}, 3.8665721461421776`*^9, {3.8665731331726017`*^9, 
   3.8665731928485823`*^9}, {3.866573291140256*^9, 3.8665733048578844`*^9}, {
   3.866573636752106*^9, 3.866573657335546*^9}, {3.86657481838451*^9, 
   3.8665748273656473`*^9}, {3.866574870351947*^9, 3.8665748910333557`*^9}, {
   3.8665788373566265`*^9, 3.8665788400997524`*^9}, {3.866579031902623*^9, 
   3.8665790413156233`*^9}, {3.8665801062232275`*^9, 3.866580141002143*^9}, {
   3.866664127693946*^9, 3.8666641298202667`*^9}, {3.8667356182927976`*^9, 
   3.86673568611979*^9}, {3.866735735976613*^9, 3.866735746106326*^9}, {
   3.8667357917795067`*^9, 3.8667357922973385`*^9}, {3.8667369179510965`*^9, 
   3.8667371366351404`*^9}, {3.866737410171386*^9, 3.8667375163569317`*^9}, {
   3.866737646330759*^9, 3.8667376465136995`*^9}, {3.8667376988837075`*^9, 
   3.8667377777961025`*^9}, {3.8667386986753044`*^9, 
   3.8667387105614476`*^9}, {3.8667389141044035`*^9, 
   3.8667389332601886`*^9}, {3.8667389783395615`*^9, 
   3.8667389806728044`*^9}, {3.866739043478426*^9, 3.8667390512579017`*^9}, {
   3.8667390870272956`*^9, 3.8667391318757434`*^9}, {3.86674040926027*^9, 
   3.8667404968818393`*^9}, 3.866740531578581*^9, {3.8667406439541187`*^9, 
   3.866740650558975*^9}, {3.8667406893863773`*^9, 3.866740713276625*^9}, {
   3.8671631374388256`*^9, 3.8671631512244163`*^9}, {3.867163285886346*^9, 
   3.8671632877337537`*^9}, {3.8671640717729807`*^9, 
   3.8671641125009537`*^9}, {3.8671641506677456`*^9, 
   3.8671641597128525`*^9}, {3.8671647138006287`*^9, 3.867164760283761*^9}, {
   3.8671650233196297`*^9, 3.8671650773373528`*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[642]:=",ExpressionUUID->"a00d29a6-3b25-4d3c-9c98-adf762342dd9"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "20"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";", 
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"xdotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";", 
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";", 
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";", 
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Initial Energy = \>\"", ",", " ", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["systemData",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    StyleBox["=",
     FontWeight->"Plain"], " ", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{
      "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
       "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
       "InitGuess", ",", "maxJ"}], "}"}],
     FontWeight->"Plain"]}], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"]}], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{"ICs", ",", "systemData"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K", ",", 
       "time1", ",", "time2"}], "}"}], "=", 
     RowBox[{"ffCartPendulumTimed", "[", 
      RowBox[{"ICs", ",", "systemData"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
      "u1b", ",", "J"}], "}"}], " ", "=", " ", 
    RowBox[{"testSwingUp", "[", 
     RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1b", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<True Dynamics \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<feedback solution \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1b", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<FF Computation Time = \>\"", ",", " ", "time1"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<FB Computation Time = \>\"", ",", " ", "time2"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}, {3.8648376392630434`*^9, 
   3.8648376724073963`*^9}, {3.864837714278944*^9, 3.864837730198832*^9}, {
   3.8648378000064077`*^9, 3.8648378125593743`*^9}, {3.8649192769420185`*^9, 
   3.8649193477849746`*^9}, {3.864919494855133*^9, 3.8649194949211097`*^9}, {
   3.8649195280303416`*^9, 3.8649195281572976`*^9}, {3.8653430179727*^9, 
   3.865343036098905*^9}, 3.865343126059147*^9, {3.8653475497269955`*^9, 
   3.8653475530049467`*^9}, {3.8653477236523952`*^9, 3.865347782090714*^9}, {
   3.8653478250659747`*^9, 3.8653479145413723`*^9}, {3.865347947982681*^9, 
   3.8653479716121283`*^9}, {3.8653525506493053`*^9, 3.865352599733616*^9}, {
   3.865352652578721*^9, 3.865352654559091*^9}, {3.865353691929463*^9, 
   3.8653537130737047`*^9}, {3.8653538376038947`*^9, 
   3.8653538378768077`*^9}, {3.86535394844846*^9, 3.8653539491322412`*^9}, {
   3.865356726928239*^9, 3.86535675400958*^9}, {3.8653568966909695`*^9, 
   3.8653569073245697`*^9}, {3.8653569602766423`*^9, 3.865356975731701*^9}, {
   3.865357167158506*^9, 3.865357170606405*^9}, {3.865357223946353*^9, 
   3.8653572240363226`*^9}, {3.8653573936860905`*^9, 3.8653574653461814`*^9}, 
   3.8653581484318137`*^9, {3.8653592129605074`*^9, 3.86535921807887*^9}, {
   3.865449250153057*^9, 3.8654493036779404`*^9}, {3.8659655743007927`*^9, 
   3.8659655800469513`*^9}, {3.865965617846839*^9, 3.865965644481305*^9}, {
   3.865965768794471*^9, 3.8659657912472773`*^9}, {3.865965935003215*^9, 
   3.865965935326112*^9}, {3.8659659868356075`*^9, 3.865966006077441*^9}, 
   3.865966083507631*^9, 3.8659664582355595`*^9, {3.86596655432277*^9, 
   3.865966563962682*^9}, 3.8659666064800587`*^9, {3.8659666379409776`*^9, 
   3.865966662002268*^9}, {3.865966724901114*^9, 3.865966734984883*^9}, {
   3.8659667752089934`*^9, 3.8659667994792185`*^9}, {3.8659670983784432`*^9, 
   3.865967114308339*^9}, {3.865967415398863*^9, 3.865967415558814*^9}, 
   3.86596806058513*^9, {3.8659697572814713`*^9, 3.865969792480193*^9}, {
   3.865969847631523*^9, 3.8659698777298765`*^9}, {3.8659699125237284`*^9, 
   3.8659699227194633`*^9}, {3.8660520784155097`*^9, 3.866052078606448*^9}, {
   3.866299038992057*^9, 3.866299063807024*^9}, {3.8662991135359306`*^9, 
   3.866299117442664*^9}, {3.866299188589633*^9, 3.86629919001517*^9}, {
   3.866299354438949*^9, 3.866299364496692*^9}, 3.8662994378149586`*^9, 
   3.8662994758636427`*^9, 3.8662995455700784`*^9, {3.866309716236847*^9, 
   3.86630980613275*^9}, {3.8663098363239756`*^9, 3.8663098541502047`*^9}, 
   3.8663105182622347`*^9, 3.866310619892336*^9, 3.8663117939323*^9, {
   3.8665656447826576`*^9, 3.8665656490393023`*^9}, {3.86666037409522*^9, 
   3.8666605929433*^9}, {3.8666606653571625`*^9, 3.8666608053664308`*^9}, {
   3.866660839553507*^9, 3.8666608737455826`*^9}, {3.866661162186427*^9, 
   3.8666611737737226`*^9}, {3.8666653738348045`*^9, 3.866665397429268*^9}, {
   3.8667344208606143`*^9, 3.8667344797394304`*^9}, {3.8667353231215725`*^9, 
   3.866735333097335*^9}, {3.866735385339385*^9, 3.866735418014782*^9}, {
   3.866735702678417*^9, 3.8667357070869875`*^9}, {3.8667358235761895`*^9, 
   3.86673582400605*^9}, {3.866735896269603*^9, 3.866735924112569*^9}, {
   3.8667361218833976`*^9, 3.8667361220503435`*^9}, {3.866737159880598*^9, 
   3.8667371629755936`*^9}, 3.8667373705322485`*^9, {3.8667375563659506`*^9, 
   3.8667375763234744`*^9}, 3.866739987559099*^9, {3.8667402825863724`*^9, 
   3.866740283643031*^9}, {3.8667403886539574`*^9, 3.8667403924007425`*^9}, {
   3.8667405674789343`*^9, 3.8667405865157566`*^9}, {3.8667407977972016`*^9, 
   3.866740821291578*^9}, {3.8671630011884055`*^9, 3.867163020098357*^9}, {
   3.8671631676361685`*^9, 3.8671632618360376`*^9}, {3.867164124440135*^9, 
   3.867164198702383*^9}, {3.867164377991037*^9, 3.8671643825185895`*^9}, {
   3.867164416188822*^9, 3.8671644578394985`*^9}, {3.8671644902801228`*^9, 
   3.867164509646928*^9}, {3.8671646858405724`*^9, 3.867164700657834*^9}, {
   3.8671650073557367`*^9, 3.8671650136127367`*^9}, {3.8671650608836164`*^9, 
   3.867165063204874*^9}, {3.8671651961093636`*^9, 3.867165246916115*^9}, {
   3.8671657530352325`*^9, 3.867165754578738*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[652]:=",ExpressionUUID->"0e18f22c-765a-4087-b8ad-25f66c5d9d5f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial Energy = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2`"}]}],
  SequenceForm["Initial Energy = ", -0.2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8671632220987473`*^9, {3.8671632631416197`*^9, 3.8671633103245287`*^9}, 
   3.867164201676431*^9, 3.8671643881018033`*^9, {3.867164418890955*^9, 
   3.8671644603227043`*^9}, {3.8671644908109517`*^9, 3.86716451013877*^9}, 
   3.8671647700346427`*^9, {3.867165064061599*^9, 3.867165082543688*^9}, 
   3.867165758614447*^9},
 CellLabel->
  "During evaluation of \
In[652]:=",ExpressionUUID->"6855f4f9-3fa0-42df-b4a6-5437a5d3a1b9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error First Guess = \"\>", "\[InvisibleSpace]", 
   "1.7306212086135567`*^-15"}],
  SequenceForm["Error First Guess = ", 1.7306212086135567`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8671632220987473`*^9, {3.8671632631416197`*^9, 3.8671633103245287`*^9}, 
   3.867164201676431*^9, 3.8671643881018033`*^9, {3.867164418890955*^9, 
   3.8671644603227043`*^9}, {3.8671644908109517`*^9, 3.86716451013877*^9}, 
   3.8671647700346427`*^9, {3.867165064061599*^9, 3.867165082543688*^9}, 
   3.8671657587893915`*^9},
 CellLabel->
  "During evaluation of \
In[652]:=",ExpressionUUID->"709d9687-7173-4f98-b5bf-0d6931857b36"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error First Guess = \"\>", "\[InvisibleSpace]", 
   "1.7306212086135567`*^-15"}],
  SequenceForm["Error First Guess = ", 1.7306212086135567`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8671632220987473`*^9, {3.8671632631416197`*^9, 3.8671633103245287`*^9}, 
   3.867164201676431*^9, 3.8671643881018033`*^9, {3.867164418890955*^9, 
   3.8671644603227043`*^9}, {3.8671644908109517`*^9, 3.86716451013877*^9}, 
   3.8671647700346427`*^9, {3.867165064061599*^9, 3.867165082543688*^9}, 
   3.867165759359209*^9},
 CellLabel->
  "During evaluation of \
In[652]:=",ExpressionUUID->"6139c82d-b897-4b7a-875f-94f12ba5e29a"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJzUvHk4Vd///32O8TjGTFEqiUIDigaltZIiieYMyZCxZCqVISQNJFNSSSIq
pDKTYpkyFZnKHOd0cCTzeI6De7/v+72P3/X5Xt/rc1/3f3f/1CqOvdfe67Ve
u8fjuddauxy35SAQCJ/JBMI/v8uFzSfGrb65F/ujq4Gh+l79Ql7DPnsEdMYk
kl5qhKJawe18XOb1QP4A56rJknSkHXag+I1RK3i9JrN8QakE2aowBdUEe0DY
0+sDHgpf0REl2zFJXRqQWpmpGq7ahDKbb3hU76QDp8FtpR6bW9FuUeUPXH5/
QZeK89iW/k5kPxf5/JXxKBi+kPfmmGEPcqno3/bhyDhI372FnnubgoJNeRTm
nSbB3eNr1Fx3UdH5Sm87NYdpoMTMqTffTUUlvNLHLprMgkZSxUTOQwpSW+Yf
PXCFCUg75p5f4utBlhNamwydWEC5/VJ1qn0HSoj7IjPzYAEsPE/pc1BtRlmh
mh2NxwlQfJf39l+6X9CVAq2jzw2I0FL1OfAjXweo5tV4kBkH5JCeWuEZ/w04
6u4qdDTmhDuLmLseRHSC2GS1nIsXuKD7PhLfZpU+EDFReNP1GjeUZ25drpc3
BPpSPa46uPPAbFmN9N0y46D8YOSTgABe+NIo6ek9/SlANGqnhvmToNVgsNbD
kRlA2JdLjPfkgzNh+Yvb9jPBveUzRxrvkuHUeqR/KJQFXE3Pl87c4ofRDUrr
LgcvAMpNdRvwSAA6Bx+dO30YO4+HT9uDEgThnwv6o94HifC1iLJn5TMhKPLg
7FCPCgcscV9zYMNbYbj14yDTWoUTxsnGy2idFIG6LsKVVbJcsNCHSXCoF4Gk
8L8+okLccO1hXta6M8tgjf6jB0b82Hl8V7rf1rwMLh4SIxYN8sCQigVVWXNR
uPwQr3JuBS98eHnggmWnKGREZDmVuJCgj8RqYTkTMVjZH+7v30eCKUrcNVd6
xOAcfZMHeS0f5JkkSpecE4dSm3VOzmHjN6oZvnH9S2Ml61TD+UsS7HHHoY+Z
pwaXxo2JXpvBZUn2eDbr2B658aXxYr57zh3n5ezxYdWDB3ymlsaV5iqOFy9L
scfv011nFheXxjURHW50+w+g3lDVassfOyQ7nxc7v70KrG/nWLci6SW6V1dI
O3W6GYQVnZ2gC3xEVydOiPab/QHUo7EnopLaUSCX4tSGJ8MgRGS9S8XvX2jQ
stBB+cQYOHXsq40Tswf5iFzbdNp8Arju8QhynaKgaZGSA48vTIGSbpb4fiMq
irSvMauznAGh9Gqa5jwFeYZ8u6xszwDLa/LCRIZ6kB6HBeWZ6xzouFlz/ORU
FyJU30ySuzEPfBOIvkkrWxHXueeOdU8XgZBcx+Rq9+8oSv6zRP53AlT0SDif
6JWDZA+L/2JJicIaWa6r28x5ociqySPFsaLQkku5yEKWBO+Vc2qVrBCD834J
F9szSDDyRYTT11gx2J4JkLwQH2wNvTUWs2bpep2ObPuqkrg01uQ9mp7zcWk+
qzVvffxr/wIQpFj3dh5UQNShLqvrU2WA9lzsHbf8U6Q8zJhOM2kET0YGUyTL
spE4jb7fWH8A+JlFc3O4tCFLfqXj0feHwA2fLcSTQ11IaYsiJ/3HKDhj3NVm
mtyDrl5USQ/4MQ42vlid8LOUgopzzmvUDE4Ck+1f7V0OUZHX8nUUP9o0SAkk
zuSupaJVNe5U/Z5ZsPoQkC/RpaDPQSOfSseZQJiSExEi2o1Uf1k45E+yQBTX
uah1P9rQcV+1MqrYIri4bSLHntSIkky8rx+IIECy6Grt9XLF6ILgC/XB6WWQ
v5umbKrAC+vcPMGojyhk1VxUz5/khUKx003hc6LwsQTN8lwkCd5tbymc9hKD
56S/nkIsEpQq89o/9CAPVFksEqfi/JC5QGRLwPVvQHLDI0mQnIJaOVCPx6VB
0N74gpejtgOlzK9/8jFpBGQbRM0mVHejdw+P1znVjwFf3k3S+joUdCunKFmp
dwI48UYbbFtFRZucVp+2GZgCb/X7n6boU1FqnttPma4ZsFBx+FFcLQX9MFzP
TR5mgDcj1mGrb/WgZq86Ho/hOVBv694ZUtCJ6rMSe0K4F4Do4UTyAc2f6HiV
89nwz6JQpjXzu8chEuQYEnk9tksMTipqbmPWkmCczeGV8UVi8NSHwo1mK/ig
S4k29xawdH9UhTTqTdmHAQIhPjHXUQXo9LmW5zSXAGvxmqMhrQ8Ra365v7FZ
A/ClHNpQn5+Jzp/N6gwvoYPrjR/733xvRXWhKf5HuIcAh+UyTiWnLlQVZV5/
8PEoyKBe9T7m04PGn/CPP4kYB/ylNz0iX1GQAknj3fm0SaDBs3AwQ5uKnF2+
Jxq/ngZXT6p796hQ0Qj9i3RH7CxYl95nHOxCQVdrdyj9zGICnpPM/Qeju1EV
3VD/VjoLPBUtS1FPbEdeoXMjf+sXwN6I6vCTa5vQpsl2JQF3ApwlDmvxFJai
MGeaBbV3GZz/2ssoJvHCzTJ7dpIuicIt3Nzyi128sJ7X9cXsoCh0NeK2cr2J
zd+sl53ABTEYnmrTpjFOgpOltBN7R8XgQ7FHJzfK8cGFA+pFo/FZYNSKkCR0
4Qoq4lLQLD5TAyjalr+f8L1GG7yDPN/T/gBhENt+U7MDSd58U+G6egToWx6t
azbuRgbMu8++RowB0Zs3btvKUhDhd8wfkDABwhm8YxlkKoooGqmdT5nC1uf7
XXqGVBQnvPrpVNwMuKcT9ehHHwW9ueS5JyaVAUTuy1fwFvSg0CLJK/c+zIHJ
FZfN08y6kENRZOmZknkwPS5zjqXSgjLc1U4lp4nCtPTnnlCDBL8YB7uZKItB
lQKxeJNi7H4PGC7LeScGjWKJeoPifPDxY0P7kQdvQPEkU0re4gS6OaW/qClZ
AYw9Gx22T8chhtYJZyfpCRDFcjD37KIgs/ORhaobp0Dl1Knsl0eo6A66uvqN
3AwQFc9VaxWhosNv17wtWMcAvx41dOnJUNBh1RskJX4x6FbWsTnwJQkKFKpL
UO6LweSihzdFefjgkxOj7mSOpftTDZZUDXh9AgLWPtFqvncQzz2qnZjSJNhn
OD76ZRMVVUkf+VWjOA0s0nKunNOholyLL2I6K2fBGgOvkf4MCgI3H7cHHRKD
W78ecMluJ0F53WT34O9iUOk93zHH1XywQtXNnsfBDxDSPz4dcVQGV6wLPE6W
FwPnVWeu3raPQDTuNzpbOuvBHwtyXE9BBgp+IqW0+QYd1BwatOr3bUWB9QPL
lUr/ApiTMLNOuQtJ6c1un742Cn7eKhoIs+1B6R8Yokku48BOfZo5/YiCjDNW
OaaHTILkreNxlnupyOGZAveBu9MgeOV7mUkNKjK+7qKxznsWzN5mfhYNoKCT
Ix3dFlFMcIRUM3b5RzcSdz74yQHrQ7qlbr2K5+lAodGWPO4fFkCP7eMC6dQm
5FoSHOBiTYA2l8Zmr3KVI7k1d6fMu5ZBh/XfDhkweeBZt+fq4rai8BhvlKZT
Iy/MLNx0exNNFBaPvotMv06C6M43zcdWWL/gQ+Xw/0uChtOToSZ0MWj3Vf1a
OXY93HkjvN1TM4Dqui052w1c0Ii/8+A53WoQJalo62eUhAzzhr/ox/8B17s3
3ZseaUe1pf3mBh3DQMOGINm8uhvFvpPj8HYfA+c2lgm8FaSgIsY9/sN+E+DK
i8anDgQqKrdvDdIPngL3svmipbH998nuK0yK3wxoWb6pxWqcgkTm5Yyp9xhg
p+btPbzNPehiT4GyaPgcULO/KOGc0oWy9wdv03oxD9ZknRJd9qYF9VRGHstO
EoUb41oke5VJ8LWQ7pkHcmLwZVCDhcZHEvwhAp/AV1g/VKermLmMD/quIFHH
4xOBv031JbGQ/SjTLSq9jfsL8B+wccllPUP5J/eFXZsZByRGVZ1PPQWFCnh7
3uCfAq/OFNPbD1OR/+A3v4ecM+BA3PvvcdJUlK1ZXcHBwQBXFNOmvLdS0Ka+
XcNnOcVg7ZW60uAYEqw5fGfg4i0xSNRKPBdO5INJxNV3LgZ+BIS56A283LdQ
eVz93dW8kyCPrHjMWoGKmKUaMcv5pgGPPdYC6VJR+v2VHqqsGfDqWY/5GKIg
2R0niwv3icHe16lPrjSTIOUH46BEpRiMtrVVCpPhg9Fw+v3Eg8fY/S7JEV6x
GoyfMxiT/DYJCjXfbLU6SEVX9ntqO32ZBo5fftWtVaIiHUelyJvuYlCu0PVj
/AwJxoQ1S62bFYMDGWu6tbB6eD+wheDyOAdYTvKbsQo9kfa3tGr1sgnAsAs6
cFicis5J8IpmVE+Bsd2SQ7UGVGQ2ETuinCsG6zevQXXL+WC6+KO/g15vASTb
qYzaWyDFghQiDevLL1g2f/mC1T89t8kDpMOTQOiUQqzHNiqKdrWR89WbBrFb
TG00IBXZ5Z+OW2wRg4GLpF30NXyw5Pr7JEUHF0C4stJ3dcMaECJrUbduTzHI
7DhTGrknHLUGDa9/GlsPVrdLuFVqZaC47YeN5kzpoG8vh53O6VZkORb0Ozr+
L+CNDNheSepCxQkH/hxxGAVcYYSjBNMeJPLJNTHl3DjQe/zGdfABBY1xi1b+
9JkEhmrex1jY85BdRr3Gp2vT4PTeVLminVQkAHX2616YBWcoXO2E+xSkTdjy
KSmQCRLlGRqWk92oQLX0stkNFmg0G3nhtqMDPVnxMCI7bgGU3NpHDh9qQqLJ
1C0JpgS4fvkuzbTX5ejiNePilW3LYJGr2GHSBA+cXFm3dYWVKFxTJhX86Bv2
XCPFf/1gjyi0SbDv3HuFBFcbTiWdNReD01yJ1kEDJMgSvrHJniYGpW5NV7ph
63mTAzDd9iEduN4jf1k+fQGRgJjOFlQF/CFf8Mi1RGR9au1fKd8/4OBNKQ7L
mnaU/PuuUsHHYcATXpjiTOxGOryuOY3WY+DwmJeKDBcFreImxB51ngAftPec
5JijIPPP3/pdvaZArtV6+E8//ejYmo3Grth6VluXQZuhoPLyGVue6wyg+jQ8
OLWnB5mOCfCc8Z8DOVf2+MR+70KmPDx/VULnwfaQ2vJUSgu67l5mVBAvCrU5
1z17o0CCjx0V9N+sFoM7yPzvQnNIUL3VgYMnQQyyfET7p4T54FiHzYsrqQnA
f7fxSHLsDlSjsosv5UY5KM3VMdoeEoOWW+avudE3DhJSHrUUVVPQBiuXlsS5
SZAaUB36EevPbhCvp/NNToOGXa9fFGP9mwNHXPP6sVlg+UROcY8Wdr77pChX
F0WhowCB6hVNgopiH06o+YnBS4eLEtQWSfCc9TebTUH5IKRMlSPX6iaST9WV
kp+eAO8qLS7aYP3vw+XKs1qMKaDd8fvUGaw/fpdQ8er13xmQ7i/z51cFBS2L
3JrVoiUG7wQoJe9tIEH4XC6jvVQMxqQ3GPqv5IM3yj4ozcQ/BIQ9wTRhojII
yYJGWp8nwdeJwfPPsf3QzUT+MjVnGhzZefZJNLZfJqoeZx10FoN3s+Y/T06S
oG7K2VzVSTF4P2zjDoCtZ53e290qsdmgtaNXT4PjGkpoWWeqmTkBJuf3p0cJ
U9Gs45xLy8cpsFyjQDse2+8LCr6YjGaIQevYzDp7ST4o/3Ms5VJgCpAN5PQ9
JWmCSoXiLMi7p0BrYwXtn37mjc/Fn4KakyBlVuaMuioVqXwx9k/aOQ2GLkSl
WmD94Bc/P9KXJjFo3p2xXx1bz9GRB/ayHtwFBOrziMZwFVB0Vok/OHYSzIVw
z8Vi6z+h02ns8F/senMcM+fAjl9ZjLZRPmYKyPMmTP5TP8gmb+XdHr8C8MaD
Z4V3DdBk3p2VZ1ZOgUn7S6easHpk5bxvz5jUNFB8qtqvhtW/AKGGTqOvYrAs
MiD07iqsPhXuUR/1eob1x8aRrvVVRSZk44ejHZMg0uj7QxZWf4c8DLwlWGLw
zDnz9Ruwn/+lWDQ7uG0KPHvaLtGA7QdaJ3aqXHB7B2RrTp3epXQehdnmJBaa
ToGDYabb/9nfSGOb1TU7xaDh08uct2X5YB5Jac0lBwtAkDEz5ddZBtQWrack
RxHYpBCyWfxUGGo8LPoE23hAX/T2guzFdJR828aaeogOgqrX+lH3Yf040bS6
Nuwv0H6AfDhmO1GU4d8yT8tR4BX3o2PTyR5UDNMubjo9Dmh8WYd+BlHQXlWB
6YErk+C8QvmuT5pUZLNnveG0yzTI3eelLYaN+xK36LdZzYLNoxUB1mEUVEBq
Uaz0YYLtvbeGfhB7kKAoob75Cgu837FLPsGoA8We3dRyKnoBzK3qUhARbkbW
z4S4C04T4NYO7g+2M+UofF3JK+bPZfD6k/qh8yM8ELr1qa2yEIXmt62GX1fz
whUHvdxO/BKFzvunnhLdSbA2g88UmIlBQS+dHbx0EmyU2Td3iSoGi4ZS0yFW
v+49ia5+qJYO/Gkfrtf3OSDxONtRCe8qEHmLnh4imIickjQXF53+gM6c1gr/
vHYkOXlGeCx5GExXmHW/HP+FpLIlwxZMx0DfsT+2eos96Fvwbpsm2wkQdmS4
c+8sBaX2VUgGuk+BCS2Z83rY9YrqvLL/ocMMCIswNn/EpKA4RarTExdsf5ff
vbW3rwc1MHIue16fA6e7YtTvUrvQu/79eim358FWDxTzaaEFlVd2GBbGicI4
H8EZrnUkKPI4an+2jBj0Ljm4JzeLBH/vvpFHjxOD/m/2Dwlj9evtHjFfjQ/x
wP/8o3Dt76roZ+j9nPBd5cD9QNsx0ZanqKJ3on+xaxz4fP5EPIrViyv3HXny
JrD1YToQKY3VL5+Q2iqdv9PgiZv0zpI1VKRtd68jnz4LvIJySHe0KSja+W77
rXlRqFb9eptzFAm2Xi0jid8Qg5CDY5A5T4KfItc1h/DnA9ec5Dfu0f6oWeVW
z+uhCZAxcO7yMezzevbJbzg2NgWSj69p4sZ+XtommSIKbQYcfXHCU6eGgoJR
QhpttxgU+mawJ+47CY4QdtgVFovB1vGgW6PY8+hooED/9dQIQLjHKq89uxm0
dmn6Hs2eBAE3dM3T9lORK83z/qr30+A18SwNbqGi41F2GUpO2PN6jferxxPY
/pYre3vHONafRjX/2YGtvwSJLsPw1dngnrgSX3KGBzpqbiFXmDIBBK8YNSkK
Yv1M1FTcn4wpEETrusvA6pfj6nahpg9Yf7PDYneaBB/8tT3+3pagZCDr9Mfn
zIbTSGjXk9BV26ZAesmFSSb29ac53sSFq02CXXsHvgRgx+MzcvxDnuo0YL3r
9rHBjvfK74eFbxrEYHydypsG7PnCR2IxfzH+FiCUfnlGf7MZ8N9dp/k8ahKk
e4jW3gJUdH1Atfj4n3++voS7D7ufr2n9Mt0ROQVOuFjxTGH1q/yjCefW2CTg
36/dbkbVRfuo/voXxKZArFvF3rNY/Xr/ZPdFrmXTYF6cdoEfq0db3XsjtlaL
wZHay5uFsPq1zu/pmFvgU0DYpBv3Vk8EvFY/XsrZPAnu0XvHt2FfXx4goi/D
xNZX4w41DWz+RAcFfj9vmAL+gp1NJ7HPn87qE9x4NQ3Ud1UBSVsr1Bn2obH+
+BTgbdvzfhI7vryT2gMy7dh+pHbtzi6sfj3cTjsrGHoNEFbEOpz5oQAUOD+a
W/aJQbMSi9zn2PmJRDbmmwdMAfeO7jfbsPW00zu3OOvVS0CYehl0nwxQ+3aP
5HDOKXDgvcMZI6x+kjlOOHk8fgQIknE0PmMF4Br7pF9pWgy+cWtX34cd71tA
3Fdegu0vVoO2e7Dr40FLVJ3RngKUMf2bIdjxScpcPEH9IQZFjvXIRmD7yQfh
kLJZr/uAMF3nvVpMFdR8T5Y7MCwGp1KVPaWxz/tFH2CJvJwCeqO+Z//5/uQH
IX/3r5sCzmuSFCH2+XtY3Ved3Z4DQn37D/p5ceSQJvxgal4MZs1lNIhj36+9
+9OVVGvsflEhmP5zfsYPpP3O/BKDOSd0Umtk/+fz7X9+P+H//iUO7cTnREnY
GOcDZ3NueO5bTYQ4H1iheMxlbg8T4Hwg7Nakn9vgGMD5gE3R6Sves70A5wNp
TW+PfxL9AXA+QHDK2+ptEgtwPkBO9Iq/IFDJ5gN9Ruf7jX1/sPmAxDHN4baM
TjYf0DG4Ji6ovsQHmB1KhgPeNDYfODf2dnPxdjqbD0RvC99oO/CXzQdGzF08
U2LH2Hwg97wcCNkzxeYDRlWPMpKPMdh8wOCyo4WvEYvNBz79Sg07N8RCOB/I
bONSqVvGQDgfWP7k21uVG2MI5wMHF+bl3Vd2IJwP6ByxzoqYrmfzgdIrBN+w
5AE2H9ije7Tl14sJNh+o8NTdFpa0xAf0M+6VfMhlsPnAY94uwef2TDYfGM6c
WFX2h8HmA57GK9K/u88CnA8Q+7i4S1SwuvYvH7DXuhxi5jgBcD4gzxDVNT81
AnA+IKfStZFnvA/gfMA+VHh4I2cHwPnAqBKHYmLVB4DzgZiR6BDng00I5wMv
Lb0Lr471IZwPaDNVRPQ4xhHOBzguD/74+HUW4XyAtJ8mvc6SUIzzAcK/v3A+
gI9xPoCPcT6Aj3E+gI9xPoCPcT6Aj3E+gI9xPoCPcT6Aj3E+cNwvwVlvzwLg
mZEZ5tLoBNevHXB9+7cbmKR9WFynTAVTa81P3vX6Agh+bttGQR/YJTflrvg2
h80LQn2O7YscrWfzAj23fPnbJ9rYfGBf1xbdZzVUNh9YayXRvmtXH5sPRJ2W
WRHp9ofNB6JUFFJ+do6w+cCr+d1pUWcm2HzgU89X05CzM2w+YKR1tbdviMnm
A/raP85sEphHMaVuCWLNRCjavNA4njWHxINGWhhtHNAAunRR4qYQx3WNjxco
nHDeSyI+o5OOJOuurRwe5YKqfDdvCx3ORHu+S/v8neSG5sW/vHTzKODH7K27
Hkwe6OjRItUUNAqo+rlaQUQS7HFr7yocnQIEPb3x5di+//iSXrJm9yzQSfu5
4SOBDH8EzRQu12IC1s7NpF5uftjXKgjf6DKB4vDhh88EBOCJ+0Da/xADeJHt
X9isFIScrB4X7wszoKuBkpK8WggqPxT2/dI9CbJL5C2urROGBvuDfYUTx8Di
38cWdHERyHSTFFg8MghwvpG41pMS8J6FcL6BX2+cb+BjnG/gY5xvaI7HqVeu
JkD5/WpnTmu3g9KAIZ9TvVTQPdR8J3UlBVz+Hlegd+07WH/yYuSt/b3AuJGw
+pLFCzbvOLdZgT87+xubdxhxrFAW8Wph8w1Rj/d9p1hLfEPYcuz7iRO9bL6h
Yy79fVZ/gM039kbeMik7NczmG6ddn8189hhn8w2uNN537kbTbL4xF8cbsLiR
yeYbQUNBMr8qWOhuUct143AiPN1w2/v0VRb6k6LfWxLDAVmc6nsKXWdQrsWO
3X9iOeGq31sPFPEPI5NPJ+lp77ig3vqfxcIPviM7yqDvllxuKPSCNDdxqR38
amAtOOfywO0GBe8e3B4CTXryg9ylvNCj8AZPRdsk8D8c8aepiAQvapwjkoxm
wcurFVGbCvmge2eTJS8PE2grir7tqCBD30/njfItmMAgqSX1UBU/LJ9/aWGT
wABbKmqJx1sFIP1v3nbpqRlwPVNLW7pHEGr7Dncbh0yBzY4bnF50C8Hgkajc
GyHjwPL1Bg6fP8Lw9zdixrOzQwDnM8laO3q+5jHRlrJL7rP+S9ffPxOFhEcv
XX96Kul21oZfYHO1RouOSTtouhB8/fnO32CFeo1ft0k+aEu51nx2Tz84lZed
Oru9hM1z4Os7RWlGTWw+szpeZLu2Sj+btzi0N934e24WtcdxkbqECbBkNtys
K24OBY6wMpWFiPB1t0/8mRXzKK2Cv6ZuOQckdNtwdUYx0V6HqBo1aU6YGzpw
3TBhAi0r1PVM3cYDrytxvf/W1Au+reEX8dnLC/X95R7+VRwH4wZ64QL7SFBh
FSVwvm0a+OssMsx288G5plVCSacZoI/SV3BAhwyZp8MGh88yQe4hPdthHX5Y
Mq9Os5BlAq6dxd5DRwXgwmtZ6T29s6DSkKB17ZwgzKA0uh5smgY4D/JMaOEa
T19AOA/C52/SrKepvXNpPnE+VCH8broojgC3OX7iX9RrA/pdFpqeF2jgZah9
zaWoHqBd8OiQwNlGULCXvu/IFxqAjeIDetGWbF7ksZNe2DdazeZFLta/U7v8
f7L50NkNst+fPl7iQ5nvomv/9tLYfOiH6fzXJ0V0Nh+67Jz5UCd2iM2H1l+i
ZHGSxtl86GqNu9KFiik2H/o8sm/icQmDzYcMc8pyxSNYyPdzMM3LmQiXKQ6f
UPrEQic1ZwcVvDkgl5fxug+6syj8xE5WihcndC8vCmUdGEVMtTJDgRAueG79
R/Vp5x/I589J/+/R3LDYPG9xVfEPYL33Y8HFKB54QbDN7kf8IPim27FP5yUv
DLtwJGTTvkkAa3P6Ml6Q4B4lro5N8zOgwWzvYbtnfPDHwg/6DQoD9L4IZJ1+
Q4aC3MZOxbZMcM7vea7sa374Z2FfILGKAUjyxKyqXAHYc+DIp2iNWVDx8mJo
Q7EgpGW/2m3aPQX+fE52zyoUgkVhu7t8WeMgPCQxsaFGGHZbi1JTzIYBzree
0Dwu+RYzEM63yhz54sO6CMUxHXlfOl2W7gf5ezPM+cCl+2GmPnLX2S1dYFWn
XeAd6S4Qzb/qs2UGFRjls6S5i4qBU9TkrfVFfWA8Qbaib/NnNg8rEdG4/Xh9
I5tviVpqRcll9rF5Fe+Fk8etu2dQ55GmPeWd2H54KKh0r84cEgg+azM2TICn
CtY3OGHrK7G8SGNsigiDlM7pKG+fQymz+xoeMThgUqbZ4p5Xk2h9RbrXYXEe
qO9udlin4Tc4GlL59boMLzw6N6R5/twY+HN4sU9/LQm+37qs2MhxGsCKddO7
ZPgg8c4567FVDCBRec7NT44MNz32rERGTGBSUpDrqMAPTd6U1nVoMIGk2J27
5VsEIFmCKKIszQDxaduGh/YIQpFPw1tdZGcAztM2HSnTVHs/j+QVz3vbqCzN
52M1KW29r0vzKYNWVvqmE2ABI5OyepSFwovlBbdnEmGKk0rn69Us1H7oUlQl
hRcGxcS05DpOgeJqp+GpLhK0+Kn/+1gMtg4iDH+N/+KDaZsmK/3kmeBF+gsT
yz4yTNIrcX91igk0q5e9cP/DDw+UWWbyXmOAkKlE+wbhpeOpiH4xdkaNAOmh
elkzrDnEOvmcaLOZCPMLDKQ9+OdRbpXxubRdHPBqs+depw4GKi5tn79hygdP
asRH+gUxQB7LmUvAjgwTBfT3NNswgVjjD7HLNvwwUj16wpCXCXDe1nOsJXUw
dxEdu5Nse2l46fxx/ha+QSUx4hcBavoQ7E58awVFyrJ+Vqq9gKtb1en70R7A
epRb9TS7CXBlv5beeocGRCwyOvcuBAGcx9Ub7z7UHlDF5nFFTw9UNBB+svmb
6/VzaZm2S/zNrDUwNiCdxuZv0d+Fe2S86Gz+llhlls2hPcTmbwGWpzeSGsfY
/C3672WOkJtTbP72e9yISy+YweZvM7rHy3PdWMhzt82KEHMi/Ox2pTLyJwsF
cxiNnLnIAX0O5oxZv59FPrX5nUGOnDDQ55RECXUUHb7EJO7x5oJbnj6xY+i0
Ih4XPqLsXW54VcUwIO1cE0i68ljqwi0eaLthulf2zR+gV7n90vlIXjifa1cX
OzYBZIWqaLLhJPh11azHx4YZ4GDotf5WMB/0DOXMpn5jgNwOrVdRj8nQm+55
YDv2vNLv5L9H4BE/5G75GdXdxgCTjTH8XK8FYOzyKO/Yk7NgKCYge3OGILwR
VaJH4Z0GVXYDHoVpQpDwybvk2LYJkOxndYVVIAwvxGSfV2kbBjg/vJA1OPXt
AAPh/PBQRfHQ6zhCcX3/2RFD+6X7b9pdLFPdZ+l+WPjd8jA9oxOcPLZ1Afn/
ArNmfeall6jANmZ8eaNkGcjlyzLj9+sDk9rFg1OT+WzeaM11Uhc+aGDzQ3P/
HfzKHn1sHpjpPsc8HTeDRk/tPHHo0yK4UJsZwrViDh09I1B4spsAy28MywtL
zKO4/U8ucvQSoaz/t61u1+bQr+InzZUDHLC02IZhvW4KZejbzj3j4oG/zXwd
ltVQQWTpK6Vr/LwwKb0h3GxqFNh9NRW9sAxbn/WcQzxbpoEs7/bJZAE+aPLI
ztJkcRakfYwxiF1GhiNtY5RVWP+sPH/Z4o0EP5QQYJjuAtj6JTgKpq8SgCJF
+rNVagzwwKz2oNImQTigUevadmAG4LxyVixekrl5HvmaXc7127A0nw4y6gzf
0qX5tAz5uoYaT4BdLjJJK7pYKAQsaOsmEOFXRTGDLgMWOl1dhfoaeKFLlsab
RrkpEE/2+2tTR4KbAweW+XjMAnJg8EfhOmy9lz67zyGJPd/+NeaI+0mG32Jv
am4xY4Ky3En5c238MM1ko0FaCNafKGa//Mu7dDz1Kxp9YmQJcA9Lfk7/+xyC
ckdMK1cRYSD5emuF+DzK0N0aVajIAUWSIjo1NJkonnNo7q8+HyxJfjtW7coA
hiOp3YqnyNAmNWH4rhUT0ATDPqef5IecwqnWeuJMgPNNB76IA7e3LSI5t3KZ
pN7/ox9cv7Eh+SYBkl7WKvq9Y6EArYz3jn5EqPN8zUqpZyyk6cjheiiNDx5r
+TFzd5IBxG2+npDOI8OX3S8/gvNMgPNOiW1u9t0yxOKqz2n8oQsEKJjUVacu
M4+SD/QudvNwQA/5vfMHB5nIt1ku2nobGbbkP/fiPMME924ThTZp8EML9UCl
yI1M0Dp20XllMQHePnmb9+ciCz3ad7hFvowIL9bkTbwfnEOdcaKcP0f4IHof
d+S2GhPUXelLl5smQ9KBL+1rsf0o/+5QMkGLCBd8AyROL7CQLHmb0shVMuSa
XePWZscE/s9C3m+fWTp/nIdqyr3SdsaOu4h73cP5B61A9wHrtWJUL1C/K6FF
UOkB07/uj8xYN4Pk4du3k+xowPLq6YjtiVEA56MRX2tOZ1ZVsvkoh4euLw39
YPPQh9Vup1sNlnhoQbmbuUw0jc1DL/X/qtU3prN5KBgxfOsnMcTmoeFnXg7q
5I2xeegWhXNSwhZTbB665lnh6rXODDYP1bZ9pzNpyULTzKM54qeI8PndV+n3
qSyUZMccdT3PATlSMn8F9MwidzLjG8OSE06+tmzUUR1Dk+TojiZ3Lkg4Wy+v
mt6GDDLO79Pz44Z3Z/TaXTY2gi9hd3QHvHjghyeB5y4r/gE8d2kcl4N54VPK
7RTO6gkQvqXhvPE9EmzsXfnI7NMMyNaViloWwAddCumxrBIGeOEZ45kVRoaq
Fnz197H6mvbbbfFmCD8sNNzZ50plgAup/XkJzwXgqKahb/35WUBYHlppliII
zanyMn0rp0Hep6Br2klC8OnvE9UuhhNA3bO4c1mWMAx+KHXGbfkIwHmutdKd
lg8kBsJ5Lumu0H1jP0Lx4CUVLtL5pfV3ziFBsP7a0v0QcIlZbHq5E9DCLw+v
2d4NFLm+bpk4TAXSzxv+GuqWAzOdyMobFn3AjebyZvPxPDb/Tdpo+/UUaGDz
XHtbM+1lZ/rYfPbcZk2TezdmELPtwq/7qYuAqJK+qMo1h8a1bBzvtBDgcDSn
keCyeSTDeZvnficRXi9+mK8fPYcY8jo/eygc0Al4Pr5uNYWmQ9DuchY3tLOp
Ua3QpoLsrijjaQ5eOHld4Ww/GgXy90nJnnwkePPJAcpL4WmsbwCXe7j44Aup
nTu8R2bBbObOAmU+MrwYF/NRVxvrR57Vb6sQ5IchUTI+ofuZwOaaab2ChABs
9WfGlWgxANe2FRMV6wShwY3g4P3GMwDnx62CTyrXD7PQRo+5Ew/WLc1nw7LS
kyuKluaT4/K6b2JPCTChQkLUupGFyIt/ur4/IULnzsRdatYsJB509dR0NS80
EigJiFiYBCIb712MrSBBViVT7ar1LDh9Q3FD3Bc++I7sLqUhhPWbwTk/P9eR
4duxw6YPzbH6sbmvv6meH4YaHF65/jEDPNTeA5mcS8fz4+zF0t1SBDiuYD/p
mDeHqKRXPAwJInxh0n+fR2oebeFdo3JQlgPuso/rEHJgIhH5aS/5/XzwSOe8
Re95Boih6x3JMyDDrZRX52yx5/fat4Ph3w34oQLng0euK5gA581Sh26Erx1f
QPftjl8HlKXzDxa8daPdkwCf7xLvS3nBQoT554fGrxKhcseK/blvWeiOdXxX
SyIftBW7laY+yAAsoqLizg9kSL8evjEB6xdx/nwuzOCG8jyh+EIiVz6aJkDx
Of7A8pXzaD13Y4zDAhEqla07WCg2h2pqiznHlMkw/+c73gcnsP1o3Tmq/mZ+
6L95u26zKhN4tZatOJJPgDnf6k1sZ1lIlLjT/V0BEQZ/aDpcxs1Cik/SXW36
+eAWHbE1alg9zhXdf3vfMBl2/LlcFnCcCUydD5zaqkGEec+3Mi2455ETZ0P0
DWcy3B8oY7WIPY/Rw1eQG8eXzp/lfc2P044IV4c9uORezUJ1WpR6jxdk+P6Q
8EwsVo9xPt3M6rsrVEQofu+aLbKunwBZLMv3Ktj1kQ18W+85RIShjlEn7M7M
Icti1i/BFWS4i75yLuYwExS9unw5PZkApSbOr+HuZ6F7hqzNfr/IMGT/Secg
YyaI2z317pECEXZOLlCjReYRx7SAe4w5GVY7Zx47g+1fGyuc/ZhFZJhqtCEm
Fts/cV7ta978+v0eYvH6nyctzvIQ4bNdjjWfsPne2hGo2LybDCPcXLvWmTLB
dn7x0oFKAlSTfurtzDOPJBMesep0iHBft5DA6WkWahZ59MnSjwyN0kJWnsfq
3fLXC8efzS3ND86z+fY5SJoIEaG/fnZKo3MrcNmd+gpW9AKDjruvpFb3AJ/V
rtNpBc2Aed/jU9dpGlDN79gk6vME4Hw7Uq7sd+OFSjbfPtdb/27rix9snn34
qADdFS7xbNfEt/6sezQ2z77lGvbIR5fO5tlJnX/P2y7+ZfPsjOp0lfGUMTbP
Nl1cp113ZIrNsxeTuCaHLRhsnl1jbBVsZMxCOaaVHG1HibCiWLpGms5CmVL1
bjcsOGB6Ts++/YxZNKwo/SXjLCeMP0uLqD09hqrazle9cOaCmiJ/KPW27ci5
MdzqrDc3PJ4waqce0QBOr1r4lXyVByZG/FBOpg+AXrtPtV53eGE4V3NeQPYE
qCo6te5KIAmmNc1CzvQZYKrTX9N6gw9ulpCXOP+ZAaKqqn6X3ifD2b8KxH94
hNCLPz177vHDoKqevwl9DLBeUijU9akAFOfTzD59Eevvfog1uL8ShPcPHv3e
qjANtvSZzHLFC8GuTuOJQbMJwJwaCZf5IAwzeNWXuW8fATiPL7SPYar8mUU4
j/9ETsgvcCEUz6Y/CaVZLtUn0fMOn557LN0POpn3W1ROdoIVyn4GMKIbQGOt
x/y7sf6+ZCH6YU85eE+5OZ9r1Afu/zzDs80vl83vZVbNmwtLNbB5fGlX+aVV
en1svp7JtfeX8KUZtLiSS37zy0VgTT74YgWDifarhYMXTQToG7gjKl9oHnVY
z50waiXCvt0OEzqv5hBPi/SZoS4OKC94f1jbfwpJv/9r1jrLDfvXVR9TnKcA
nYsCozkLWD+gXbZrLGkUcF7sdr/JTYJ7XGQfQAL2PJRXtpVF4IOXhPn17Ptn
QdwH3rExLqx+025zfML6edKfhec/+Pih5DMut5cHmKBia1NGj4gApF45q5C8
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
PUk=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{901, 2748, 2746, 422, 423, 424, 425, 812, 708, 
                622, 552, 499, 466, 834, 730, 644, 574, 520, 851, 747, 661, 
                591, 426, 813, 709, 623, 871, 767, 553, 857, 753, 892, 667, 
                880, 776}}], 
               PolygonBox[CompressedData["
1:eJwV0slLVWEYB+Bj0sKMypyHzP6BBoeGpUGBRQWBlWWTEBSREY0mGRQ0WalN
uigocFfZYMO1eV40u6zUJoeVLRIabHy+xcPvfX/fOfdyzz3jKtbPrxwSRVEc
7bQNi6IYI5RvlDHy46PoqX0T4/mh20+y/qy9lJG81bVRoH9m38wEfuoOkKI/
Z1/AKN7pblDLQVKdn9cvJIkO3U0OkeasRbeI0XTqblGof27fwkQGdYdJ11+w
l5FMl+42dWQ4u6hbTArvdXeoJ9PZJd0SUvmgu0sDWc4u68pJ46PuHkX6F/at
TOKX7gjZ+lb7UtL5pLvPZP1L+zby+a2bo+sx11HCUV2O7op5GRnhOdv7ZSOf
nc+wd5r3stYcT3G4Xn6TNfK03CgTeeCeKfJV+G5ZJVfLiF0UhGciv8od8qTc
IBPYwx/3z5W9+ipZL9fJoexmlr1CDsqdsjm8M3I4x9w7Rl7VLWdV+DyZGd4H
8xfZRLfrZtq7zPuYHq63f5dneOh8qv21eTtrzHEUhv9MDshT/HXdPHufuYHZ
HNfl6q6ZV5BFj+4R0/Tt9mqK+Kc7wVj9dftKsunVPaaRPGex8JvJoU/3hP9P
hmz4
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{387, 2747, 2744, 596, 682, 786, 392, 503, 557, 
                627, 713, 817, 439, 472, 525, 595, 681, 785, 391, 502, 556, 
                626, 712, 816, 438, 471, 524, 594, 680, 784, 390, 389, 388, 
                437, 470, 523, 593, 679, 783}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVWEABuDj1QyEfkLDda72VtokaZaZlBtbFKSWlppCEIGV2gBR6SZd
pFaW5Y/QJrXABm2wyVZNG7VBjYIiiJ5v8fC+33vuwDn3xisbyxpiURQl8ICB
lCgapN9wkxu84AdZXniI+6xMjKI+23PmybTVM8IK167bnjFHhq2OYZa7ds22
UF/Had6Rb39qnyXduZYhsu29tmR9LaeYZKN93F6kt/OZbbbvtjT9IPfIsl21
leqdzFBmWyB7+cUe5zx5krdscB4L967/ocJ5s0yS9bTpnyjWv4V7kY10247J
OblLpobPlP9ktTwgj8q7MlNe8d6zchFH6Le3yr+ySm6XZ2QyDXQ4N8lpuVMm
yRR5ONyj/pPdeq6MyVpa9Tes15/4vj79N3udC+UFPrLV+avrXfos5c5xWcMd
Mpwvu16iX2SKHbZEuYYWXoff1PbY6wr083xgi+2LbVl4Dtwm3dZji+mraeZV
+I3tj+yb9HO8p8g2Y1uq7+cWaeF52xL0VZzgJXn2h/ZpljjvY5BUe1f4k+s5
HGeCXPuofYrF4bkzQNx+yfYftkRk1Q==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03ecz3UcwPHL3tzZ2xmHqBRJRpnhKCESJTMJnWwyKntUPDSMJqFklJHd
IDsNIqOByMgolArl+X48+uN5r/fnfb/73fe+v+8ld0lr9eQNCQkJfX2JlvZl
n8Zypj6qeRlCT+eWmpH+bHPuoUUZThPnBnpZn9K12lULMsncXnPxjbmXlqSq
+XY9pYsYTlvnbOyKn6GZ+T/dyHTSUcbuO53FEzSlod1fuo7JVKO63WldzAg6
kJ6y9vt1dlwLqXEdZCAjmchMOa87oK/RO64l3pM77H/VJYzkYbKQYn9QX6cP
zeO11LA/o0sZxSNkpbz9IX0j7jn3xmu50/6sfsAzdCQbFey/1zdJ4z4a2f2t
65kSP0tNu3P6Ic/yoHN2vozPNK4rPmw2yUtx/eY87DFnp6L5B32LTuZ89DW3
0kxsNz+uxWhhvkf/0X66QbtpIZ7m+bjvmptB7I57qaUYSU3nWnr+/+dwmXbR
AgzjOed2moOBfBWfuZagU9yzeHb53NxdC/Ny3GNN5FtzDm40/6hvx/NJa+fM
7DDfT2PzFf2YF+KaqG33my5nNJ3jntulY7P5FXJSyfknnRP3IP5PaGJ3VT/h
xXgv6tj9risYE38nuahsf1jn0j/uc7yWu+wv6ErG0pXc3GR/RN9hQPwt8Vru
tr+oHzEuPgfycLP9UZ3HQB6I15LILb73s85nEG2oSxJ5yUd+ClCQQhSmCEUp
RnFKUJJSJFOaMpSlit9xTBcwmLbUoxy3+t5xfZch8axSP67B/pKuYnx8tqRw
m/0v+h5D49mgqd01/ZSpNIj3t/tDVzOBx2hhl54t5lcpT1XnE7qQYXFvnLOw
0/wQqeZ/9TOm0TCuz+5PXcPEeJ1zTr4294jnyZyBrfF7tQgzzB01icHsde6j
yYyignM1Palp+n48b5qfofG/FJ+NZmUAXzj31OKM4DoBYZ5S
               "]], 
              
              LineBox[{146, 69, 104, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$92070#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jnUcBuDXkZGRvfemKHtTFELI0aDS0FJCKZV2jj0yi4wyM9oDxyaU
vSqr7Owyyyy6vp/+uM79+96/53nPeZ9xSnTqntwtTSKR2OVHCtnSJhIzkhKJ
tmRmm24OfehLP7I7Zqa9ZLKwXTeXyvrV5h5U5LyuPzn0s8ztyMoO3Tyq6NeY
X6QSF3QDyKmfbb6H1EyJxA1ypz6VqvbWml/iZi7qBpJL/6n5XrIl/f995lNN
v87ck1u4pBtEbv1n5vvIzq+6BQxmCHnsf66/nxz8plvIUPLa+0LXnpzs1i2i
un69+WUqc1n3Hvn0X5o7kIs9usUMI7+9r3QPkJu9uiUMp4C9r3UPkod9uqWM
oKC9b3QPkZf9umXU0G8wv0IVruhGUkj/rbkj+TigW05N/Ubzq1TlH10r3SHr
YTRnlK6w7jvrh8kf19n8pxzDQftNzLut+9PFOi2N4nh5Xr4lJ8W9lpn53jm1
5Kb43bKX7CwT9KZaXBN5Vr4pJ8gX5PX041/nt5aH9b3kcNlVpiOFFuZO8rJ8
W06LZ0ZmYbRzi8g5ukd4Mj5PFojnwfqkHMvvjmtq3mM9gMZxvPmCnMwK+7XN
m61f4xnrNFSPeybPyYlcdVwb8xHrEbTkfV1R3VzrRynIId1K6ui3mF+nBtd0
H1BMP8/8GIU4rFvFGIrbS43vTGGO6H6Id8D7M1aWsD9f/zhFOKr7kbr6reY3
qEmCD/Ul9Qusn6Aox3Srqaf/Ke4JtUjDOH0p/cK4lhTjuK6Zbq/1QG5nja6+
7ud4HqhNEuP1pfWLrJ+iOCd0d+r2WQ/iDtbqGuh+iXtKHdJyt+6oHMldTHBc
Gd1i66cpEe+x+VR8N/6w39y833owTeIemC/KKayz39C8zfodnrVOom68b/Iv
+RE9rDNxnXVbeSyeAzlKdpPp6UOruO7ySnyenC57yqz0Z6LfV1YuifdWdo7r
IK/Kd2VJ2V6ejmdCjpPdZYZ4B53bQh7QDeG5+HtoGs+JvCSnst5xt5q3x2dS
j47mv+XHpCPZfFyOpnV8R+eU0y2NZ5tSnNS11B20HkozNuhu0+2w7k190sfn
6svrl8U1pDSndBtppN9pTqEBGZikr6Bfbt2FMpzWbWIyN8b/jfiOlOWMbjNT
uMneCl1XynFWt4WpTGN6/H/3LnwiZzCTWVR03sq4X5TnnG4rjfW7zH1oSEba
6U7Eu0sbZjuukm5V3I941qyvyQp0sD4T75UcL5+XGenLfzCQ8T8=
               "]], 
              
              LineBox[{844, 740, 654, 584, 467, 835, 731, 645, 575, 521, 427, 
               814, 710, 624, 554, 500, 468, 428, 429, 430, 431, 432, 433, 
               434, 435, 815, 711, 625, 555, 501, 469, 836, 732, 646, 576, 
               522, 852, 748, 662, 592, 868, 764, 678, 886, 782, 904, 436}]}, 
             Annotation[#, "Charting`Private`Tag$92070#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUYBdADl1ZJpUNaQRpplEZBGqSV7hDFxsLAQDokpLvBQEWlW0Cl
DFIBpfNRBEHX+2M97/72fHPPuXNmJn+Xgc0HJEskEknJE4nhSYlEiZSJxOcp
EonZZmvzA/MeVnKX9XNmgkXMtP7ILBDn8KvzO5mn9fPN983RZi5qyEPNO1kq
f2wW5VvnNDD36gZTjFesU7NA/tvxfvJf8kQa8aGupG613Ib0HNJ11p2J70xN
1uoa6vbJz1Kc67oRlNJ/Yd2WDBzWrWMkoxjNGMYyjtL2f2lfOzJyRLee8ZRx
7CtdezJxVLeBx/T745rxAP/oJlBWv8a6A5k5pttII/0B6+cpwQ3dRMrpv7bu
SBaO67rozsrDqcUmXWPdQfkFSnJT11/3d/xONI6pK6/7Rn6Cu+PzrJMxS/7N
8a7yubjOjJFzU1t+M+4Blsmb7Wsi/yS/yEg5B6XkV800LGGh9RSzcFxv/nXe
APO6foE5yRxv5uNTmlgPMzPF57DKerp5f1zj2O/8B+O+0c8xn4xrYGaN+zT+
dzM5s+VJZkF+d04387xuBGPlPNSR3zLTs1zeYl9T+Wf5JUpzSzdQ9488maYx
dRV0a+VOZOWErrvuQlwL6rJV10z3i/wyZbitm0JF/TrrzmTjpG4bzeM5sh5C
Wf7TTaWSfr11F7JzSredFvpD8cxQjkQ8W/rK+g1yV3Lwh24H05jODGYyiyr2
brSnGzn5U7eT2VR1bJOuO7k4rfuOlvrD8VtTnmTxe+ir6TfLPcjNGd0uWumP
WL/GgyRnrr66fovckzyc1fXQXZRHUY/dusd1R+XXqUAS8/QP6bfKvcjLOV1P
3SV5NPXZo2utOya/QcX4HtZp4z0mp+Ap+UbcqzRjvnMe1m2Te5Mv7nPrJObI
5x3vJV+OZ4Rxcl4ekd82M7BCnmbex/f2tzGPx/c2h8b/Z+bkEyrF/2ami/cj
i62nmkXivUNK60HmTXOhOdWcYN7LZzS3ftfMHPdy/E3rGWaxeI/67Brmdl2f
eK7lbHFu3OdmCubKF+zrLV+JZ4RHecc6IyvlHxxvK/8W7wIqk4qn47mO+44W
8f3sq6nbIfclPxd1fXRX41rRgB917eL5jOeQKqRmkb6WfqfcjwJc0u1lMbUd
+07Xn4Jc1u1jCUtZxnJWUMfeXfYMoBBXdPtprz8RvxVVScNKfV39bnkghbmq
O0AH/cm4HlQjLc/obsVvTEtW2VdPtyfuJ4rEcx+/HfPka473la/J42nIQV1H
3Sl5GNXjHrW+I96fcjoGy7fN6UyU89NKfs/MEvdZvDutZ5rFWRO/v79bP+67
eM7MQeYIM3u8UylqPcRMFfca860nm4VYzf8lrQ4i
               "]], 
              
              LineBox[{1269, 1174, 1100, 984, 1374, 1255, 1160, 1086, 1035, 
               948, 1352, 1233, 1138, 1064, 1013, 985, 949, 950, 951, 952, 
               953, 954, 955, 956, 1353, 1234, 1139, 1065, 1014, 986, 1375, 
               1256, 1161, 1087, 1036, 1397, 1279, 1184, 1110, 1418, 1300, 
               1205, 1442, 1324, 1468, 957}]}, 
             Annotation[#, "Charting`Private`Tag$92070#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8zlUYxvHH3mTvsiMzMxQKEZUtIWUUSkZGoaGsSslIJUQhIyNCGdmU
WZS9s0MhZKR63398Xtd13ed8f9/nOefc5/kV7NCjafckiURiQNJEYnWKRGJR
qkTiLsxImUg8jqy4rL5LrRZ+lHugAtaoL1YrgJlyI2TDX+q71R7EJrknKmKt
+hK1gpglN0Z2XJTb4Dj/Lq6Yt0d+CJvlXqiEROpEopvaFX4C1pn3rVwIs+Um
SG/OK3ICOeRLtC1O8CNw1TN75drYIr8Un9kzg+TUqCwnkV/kr/L38dP4iXxh
/gM+J+ryC+izdL2/+R1fGPXlr8wtST+WW9GmcgbaX25Mk9DqdAZ9huaMNeaf
wqPyyVgvOiU+O31Pzk/fkZvTzLE2dB695t37aB1sNa+c+kS+d6wt/yafBlXk
pHL3eIafhCLyKDkXNvg7S2kRzDHWDLliL+V2OMW/j7/N2x/fH9vkPrFG2Ki+
TK0o5srNkRvX1X/AcvVimKfWAnlwQ/1HbMJmbMFWbMN2/ISfscJzd2O+Z1oi
L26qH1B7GNvlvqiKHerfqxXH1/ITyIdb6gfV6uEnuR+qYaf6SrUSWCC3irWO
Myg/jdP8SPxj3qHYX/wsv4wc1u8tOW3sp5xM7sH/zX+GovJoOTd+8fwqeg8W
Gitl7BP+ST4jP4BvQpPS++lM2p7eGWc2zgkek89EL9DP47zEeZTvpO/KLWiW
ONt0Pu1Ib3vvYf4RNJB3mH8vnSS3jl6Rc9LBcrp4t5xc7slf5yejmDxGzoNf
/b3VtCS+MdYad+FafF6c5UfhX/OOxDuxU+6PB7BLfY1aKSyS26AA/os7I/oe
a42VxmL1tigYvY+9xtapl8ES+SkUin7FUbWGsc78ANTAPvPXq5XFt3K76OHo
AxyLXovvww9ETew3f4NaOXwnPx09Emde7oDf+dGxz/gt9gO7+FdRCwc8v1Ht
XiyVn4kzED0Qe4Fz/JhYXxyXH8du/rXoNWs8RE4f96acQu7F3+Cn4GD0kVwe
y+T2yGTOQDlZ9Fb0E+2E8/zY2BfjI+SsSCGfoI2why9v7DP+9ehTfiifAbX4
OXG/qKfkX4pn6M3oLzo9+iLOn3w3HSs/QfNGL9KF9Dl6KHqbrxBnT15ufmk6
Ps487SDfQV+Vm9Lk9AE6K3o9+jvuVlzgK6t/wX8YZyXuQz4bUsonaWPs5d9A
baQyp7faLf4LHI47Rq6IFXJHFI95OBJ3j3olfC93Qom4L+J74A9+HFLjVPQo
9vGD4g7znmFyRtSJOXIf/h9+arxD/lDOh6Nxv9HKWGmsjLFP4zvymfnXYo9Q
g58d90TcObRznBO1P+UqdKrcjn4UfUHfl1vS7PEZ6NdxBmga46djbaMv5P1y
BTpZbhO/C3GP0uFyM5opzh2dS+saS8P35W/HPcl/yU+LteHH8flxLO5rWgWr
jJU1NiHWjc/Cvx57FHeFfJt2wUX+4+hb4yPlHEgrn4nPgQP8W8hn/G35jjhX
clq5H/8vPz36L34n5PuwWu4cd2rcO3JXXOI/QTqclZvjID8Y9aL/4jdGrSrW
yF3ifMY9JD+Py/x4pMfvcgsc4oegfvRS/D6pVcNauWvsKTLgXOwJDvND8Uic
0/gtU6uOdfLzsV7IiPPRQzjCD0ODOGvm71C7H+vlF1Aueh4X1FrFmeKHo2Hs
tfk7o4ewQe6GrNbsDTkVasb/JXGP0f8BU6RDsg==
               "]], 
              
              LineBox[{1899, 1779, 1690, 1552, 2030, 1881, 1761, 1672, 1612, 
               1512, 2003, 1854, 1734, 1645, 1585, 1553, 1513, 1514, 1515, 
               1516, 1517, 1518, 1519, 1520, 2004, 1855, 1735, 1646, 1586, 
               1554, 2031, 1882, 1762, 1673, 1613, 2059, 1911, 1791, 1702, 
               2090, 1942, 1822, 2119, 1971, 2151, 1521}]}, 
             Annotation[#, "Charting`Private`Tag$92070#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFGUUBuAhlFBCQlIBpVMaVLo7BJTukO4O6U5FFOnuklBBkQZJwSAk
lMagpEG83x/3dc7zzM6y3+zMkqFFl9qdY0RRlDZmFHWIG0Xp4kfR/HhR9A43
5a3Mpph+u64+CTip60h6/QL5XW7J25hDcf33ugYk5JSuExn0C+Vi3Ja/pY7u
F7krGZmrK6HbYW9IIk7rOvOGfpFcnDvyd9TV/Sp3IxPzdCV1O+2NSEx3+Z45
mTOON5Mv2geRlyFyTGbZuzj+pn2xvQR35fby3/bRbJfrySfD+zLenpDM9n7m
U/NT5ntdKXmXvXE41x6fV+w9zPvmInOKOd1MyVp+c15z81J4D3OwOSmcx0ry
yR+ZsVjCbPkzMw3r6er8jOGYfpZZ0hxhxuFfxzqY/+jGMNWeLHxX+vfNU+Gz
McGeiCz2/uYzcwYLvK60vNvehCT0lB+E9+Ks4y3ky+Gakj98L7pMuqX2UtyT
d7CQMvo9uqYk5ZyuO5n1y+TS3Jd3sogeZHFsub4MD+RdLKYnvehNVq9Z4XhZ
Hsq7WUIfsoXrqC/HI3kPS+lLdsdW6cvzWN7LMvrRnwEMJIfXrfaaCjyR97Gc
svq9umYk47xuEDn1a+SKPJX384HudLh+ZGWFrpxun705ybmga6m7Er5zCjBY
lyvcK/ZKPAvPonzTPpYDcn35jL0X2Rgg/xfuE1Y6Xl7eH541s0W4F8yXwjXj
1XCe+dBcbE4L97OZinX87vxW5tVwP5hDw3NlJgnXjoLyUDN2+M6ZI39upmUD
Q5yfO7yXfrZZ2Rxpxg2fMfxOmLd045hmT84P+gbh2dD1JjsD5efhvVnleAX5
gL0lKcLr5Efmx/zheGv5mn0YhcL11OUJz4y9Cs/lgzTUnZX7kIPVuorhM9hb
kZKLuqG8Ff4muSoRh3RrGMZwRjCSUYxmDGPJ67wvvb4aMTisW0sl/UG5Nam4
pBtHPv1GuToxOaJbR2X9IbkNqbmsG09+/Sa5BrE4qmukO2fvS07W66roDtvb
koYruja66/bhFA6/BboCus32msSms3zbHM8xxxvL5+39yMUgOWKmfYPjVe1H
7O3CPWp/OdwP4Rqbj81PuOp1beUb9hFMsSelSPjOzBfCbwJz5Znma+EaMtF5
Bc0t+jlmLXOUGS/8ToTz5C7mHXOhOSHcE+E+D88wPzq/iXlBP8/sb040E5M7
PG9mDL6wzzBTh3/XOdXMo7oPw71qTxA+U7i+5hNzOte8rp38Z7jHKcokXSHd
V/bavEhX+W74dznueNPwnIXnljxs1FXXHbO353Wu6yZTWP+1/B5xOKHbRI3w
t8kdSMcN3RSK6L+R6xCXn3Sbqak/LnckPX/qplJUv1WuSzx+1m2hlv6E3IkM
/KWbxtv6bXI94tMt/L8T/u7wPdtThN9C/gd1diWA
               "]], 
              
              LineBox[{2530, 2428, 2352, 2232, 2642, 2516, 2414, 2338, 2285, 
               2195, 2619, 2493, 2391, 2315, 2262, 2233, 2196, 2197, 2198, 
               2199, 2200, 2201, 2202, 2203, 2620, 2494, 2392, 2316, 2263, 
               2234, 2643, 2517, 2415, 2339, 2286, 2665, 2540, 2438, 2362, 
               2691, 2566, 2464, 2715, 2590, 2740, 2204}]}, 
             Annotation[#, "Charting`Private`Tag$92070#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{385, 386, 384}], 
             LineBox[{906, 907, 905}], 
             LineBox[{1470, 1471, 1469}], 
             LineBox[{2153, 2154, 2152}], 
             LineBox[{2742, 2743, 2741}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJxcvHk81FH7/z9j38kSolJUKNFeUtepFCFaZN8iW5stZScpKdmSJHsqipKQ
EgdJ0mapVNaZLIPs64zBd+7H535Pv9/tnx4nY+Z91us6r+v5mhX2bkcdOUgk
ko4gifSff1dGz91PXXZpN4kUUL7z4vYyvTJewx5nDOXPZpaG0OPwZ+Gt/FzW
9RBVyZEJKQV4b/T+ikdGP2FkZok/1bcKO6ozhDcId8IQWrNu+5tP+JCK4+hi
nS64fHNvsxnfN1zwLdD7w3YaGA/0W9lN/cQ7xVWfcQX/hbmT1hl7brZh59m4
lAdmIzA99Dn879VO7FbTu+nZoTH4u/9KPimLgq9b8KyaOzMBATaigYI7qNjh
vb/TBpcpuOFu3f5ZgYoreWWPnDafAed9mzTDT1DwhkUhCX3nGaC2OzTPL7QD
243vWmd4hgmmrZuTX5T9xhmp7+Snb86D+VMFnRCHJvwiSrOl8SgJzVqLHHY2
fovPv951OMWAjES3Y44dKBlw3YOxCEsOdPdyX0XTxXpw1dlR5mrGifinH2vc
vNEBydkbik6f4kLVngdWmwrRIHa87JL7RW50eLek6KryYeh57H3BxZMHjUUn
jvWuHIfqA3GJoaG8CPRp46L6U0A2+k2NDuFDiQqOl2/2zwBpTzE53ZcfDa6t
Md+2exauSU8fagwXQIdntQPux86Bu4VD1fRlQSShwj1tmrYAlEubT8JtIfTk
qZTO4W4Skrx193dEhjCK8DQe950io4diqr7v74mgXiVvus8sB6r0XL5/zRNR
9HPl2dSrK7hQqkK6/C5jMaS7duRpD3CjsgAGyaVeDL1yPZfiYM+DVujzMhVN
F6G1x+/V6t7nRYVfVW78+rYI/VrtZPbtIx+KrJnXULAWR8oBsrUX5/nRLa++
U3at4uhJRwl24BREAVLLRFeaS6Atbuv3LqEIohwV7rrznRKoKibGNSddCPFM
kGUrbSRRJvnAnRANYfRI43lQaq8kIuv1S4+2CiMV+8eGc2el0Ir6S9VXWP1o
Ofiq4PiAFBo5oqAmay+KyjV7YlPfdAHpvz8H1MUPBQlzI6J9OPpaRtqZRez2
v/X+fz8uuaI3J+ck2L9/mu8+vbAg89+2GKqLbfGgOT+DsKRVS7U/e2GFuZfJ
c1trwWAlT9Ws7wN87UtZ13GTb+CnVyzHa1iKL4wfE++17Afxd1kLLrYtOIxL
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
MKEXcngNfH/1cQYTeiHfvi5ZRTtSBaEXEnodoRcSbUIvJNqEXki0G+/7qYHX
YnZ75sURrZVj/9oLJZ5FV89Js9v6Ggf2B0z+a7+3Vnc97SXDbv//9UISidAL
jwZnnNPVmgeeafkhri2t4HNxv/uTvx1gnvtsQVGVCpMrrI3D/d4BKdhj0wj0
wI6Vk57KT4rY+mFUwJE9cSP1bP1Q16NE6cqxX2y9cE/bep17df/0whUnpH7v
2NHD1gvjTeSXxHn0s/XCePVVOT9ah9l64YO5nbnxpuNsvbC086NFpNU0Wy80
2nWhu2eQwdYL9fZ+N10nNIeTqjwyJL6Rkfi3+caxF7NYMmK4mf6LAxkgtzZK
6iTm8Nny6hSFE835SaU/b6XhxV8uyg2NcCEN/ktXRPQLsNZX2YC/E9zIuqLd
T+clBb7PXA73ZvAgV+9mmaaIEaDqFe+KIPOhTo/fbWUjk0DS1R2TnuNDd87q
Zmt2sPLa3B9rXpEE0PeI6TLpXQxgblfj6+YWRD0/hdEjHQYoD+nfuickhI7d
ANmQg3TwE3BOOyknjDiZnW7+p6ahrYGSk71MBKneEg161zEBhZVKthcVRZHB
vutBovdHYeHvHVuapBhieCwWWjg0AIQeen+FLyX0KRP/jLo8mrT833ozifv1
Uf3+v7Ym7+H8olf/1gOhl2qOpW5+v4yElPZtMDXZ+xuqQgcDjndToWPw29XH
chTw+pr6WvfiV1htfDru8r5uMGskLTtrm8bWT23UVgkWFn5i66dGHEtUxfya
2XqpuPfTnuPMf3qpqN3o12PHutl6qba17NcZvT62Xro77rL52+NDbL3UxP3e
9BvvMbZeypXLm+dpNMXWS2dTeUMX1jLYemnEYIR8ew0Th5c3+5jFkJFJwxV/
kwtM3J+j112ZxIGYnJu1ytyncbHttp39yZxo6Z+N+8sFh7B5qTEtN48L6a7+
USF68yt2ogwErS/mRiJpfLPjZ39DewNz/lwxD9pq8Drv5pVBaNJVGuCu4kXe
ZYE8Nb8mIEQ/tr+pnA+d3mJD5jOagcwLNfHryviRZ2uTHS8PA/Yqiz9pqRFA
QaUORiW2DDDIan58sFYQVc9l2p7MoMP6ms/koz+FEO3vy62yk9PgU7Brr2yn
MNobNNRhFjkJaq5rzqR1iKDrw/HFgZFjYPdwDUdAvyj684n8/J7VIBB6cPau
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
38A6j4vF913ZMySAWvq93oYeZYDFuf3HN24ho5cpGxm23HP4DGdDQuA5AbQv
TP7EAus+RotZItA49q//TP+LwZxOZLQs+uZZzw9M/GUXpd47TQA9PSg6ncw6
jzNaz4zq/5VA35g94SLlpIqn7oViir0kxGTaPVVnzY9C2JN630EyinKNP+Zk
OovtKpjtwksE0A6a3GySPgPKH3h55WeTkMy4w3LuXia+ZshUC24XQJH7jM9F
mDEgdedk3u1VZNQ6MU9NEJvDHFNCnknWAujDuYIjpqz4tbbmXDCjXAA9NlqT
lMyKn4PeBv5STAkUZP3t4VMtcsXqH8a2VjxkdG+Ha10pa7w3toQpf9spgGI9
3NsULRiwVVCyqu89CW2Qvet/jmcOL864zfyiTUZ7OkSETKaY+JvY7VK7YAFk
lBsp58A676Qfzh+9N/tvfIh6K/8el8XmImQUoleY03juJ7jtfPwA1XSDQUv4
A5llnRCwzH0q9/U3YNzwLm0z6QKNkpZ14gGJQNRf41a+/dN46j27/mrTXZ+3
Me07u96qf1iI5o7+1Vvd7z8JYV7rYtdbL7tH3w7QobHrrVmtfx0cF/6y663P
P+Srj+WMsuutFguKe78cmmTXWxeyuCaGbOnsemud2YnrRmZMXGTxnuPXYTKq
qZCtk6UxcYFMvUegLQfKL+rcs48+g4eUZd89t+JE6VZdsZ9NRnHtL4fatHNc
SFOsn1Lv+Bufa4w5YeXPjY5mjDhtjm0Ak6Xz7dkXeND92O+q2bQ+6HYq/ex3
lRfFcH17GVo4DrXlxxXPh/Gh3KYZxJk/DRbavXU/A/mRmpSSlMMbOsTX1v6p
uiGAZv6uIv+nHiGS1t+pdU0QRdR2/s3oocPqxSJR7neFkCS/ZqHJaVZ+912i
wfOBMLpx4PDXn6umYH2P+QxXughqazUbH7AcB8bkcIz8M1H0nHfzIs+tw0DU
k8uckxjq/TOYqCeXCmSUvHYjVczkJ0Z12f07n8QdXEpTvP+tB+2CG83qxq2w
RDXYAMV2ADLbdUdwJyu/r5xPuNVZDU8pl+aKjXrgxg9Tnk3Bxez6s/zSOWtR
mQZ2PbmqrfrsUt0edn24gGt3u+jZabwgx6WklrkA9gIH0pbQGXjfhhhIayKh
oLBt8SUic7jFfvaY0U8y6tnpMq79YBbzNMuaDrZxICXhG0N7Qyax7NO/lj9n
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
fsv3LZvGCC/9LFuLd/glfn3DKQ/FfpCgna1caoMGfj6lnnaK/EuGKmskZgzx
/ZX9/Wl9vwtS8GCtm0JiQxHy1TWzE/GGg5GYze3Kz1giFWh87U8NwPe5Cb/P
bXt/nw9GbN7Crh7nYISn/hddJbH9E/79O6tHSUyTocEjpb138PWF8NTBXbTu
cn8GIDz167dbk98tcbC2H7w/KuPx642FbzUMYYICdYlqpzwy1Np+d7xIjQJ0
pGPNBA9Jwfk3V5O2bqQgX33zdFxUpC0DEL76sMY3H5FmDpa1Td3Ryp8EnR0z
eGxSmaCqeHhCVE4KRouEnlyhQwGabp38wnH94Lb67dstjxngSrvbhRjABy2w
2ou3hKYxwk/bew4rHH/KBEmTUv1YKxlqhjd4bTKmgI1tp76+c8Pv14PJdQ74
/pbw0g/jWlfOP/wGgiLDy8WEpOBXz1Ob3Y9RAJ/ENf1fUv1g4U5VNwv/vHRq
b2w9s4YP1tv+K0gSnMYyZCJbJKvIcHh+66r2IxTkqTMDN3BLeDAA4akvJWks
uI1wMJ3b66RJYSTY6VVquQzfRy1jHpEX3iEF36hH/BHaRwHe9fqlupupoE82
vzDvIQOE0a4n/rHjg5MfRCpP80xjhKfedeqKl3c8E8Q1vBx1ZpDhEbb8iAv+
PBG+etvjcsgZisYIX93Vcb08Y8odEL56491xhbnaBtSzHTgSHPn1dQ8gfHXY
G9Ukrn4qmpf9UuP6lghBBpqXLeB+ueM8fj8QvnrK+t/iww90QPjqmDWjVx7U
UFHvNvlNS+OqffWod0vtoN5uf1uCerdyK/Yb/B15i+Zhpx1gYuKbatG8a/sd
a+ybmlho3vV3naox8rJJNO868O6be+edOWjetfzqx4rZCxw07/phgsI9ueIp
jOjhJpeVqM5cn0B92m8brxRVfuxCXloV2753iyUVeekpV+8Yl9sDyEtnnMks
CDEYRl76fOrDgXv48094aQYX4LkgxUReGmTYPB23HERe+ohgVnxYJRV56cVN
IdUvmzqRlzaTGGSeSyhHXrpg5YL+15AC4EIem8kdlIT1F+rkX14vBFWvD2aw
r5FhiJbFzNnaIqB17L2Fxz8yvGJde+Mc/vyKc+XkH/SQgkf1Hmq7fC5CvdxM
JvvANb9vqJfrEPPRpvFmLurlOr6vbXt4JwP57A7xZDuV9bHIZx/YMmIZa1mG
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{838, 49, 47, 359, 360, 361, 362, 749, 645, 559, 
                489, 436, 403, 771, 667, 581, 511, 457, 788, 684, 598, 528, 
                363, 750, 646, 560, 808, 704, 490, 794, 690, 829, 604, 817, 
                713}}], 
               PolygonBox[CompressedData["
1:eJwV0sdLl3EAx/FHBQON6uRuWBAk5SE0yyKDgnbpT0s7JCh4M7Wdtveh3bGh
TfVkh4IyywbRQYoy92r8BQ1H49TrObz4fN/f5/n9VDC9vDpSFR0EQRSdZLKA
Dy6uUcuoF86RzXfdyjq6dSUJfNTXqWNMn2cRP/RT1tOjd5BIp77BQTawkV73
4S+TxCd9k0Nsos9dNcl06XoOM64vkMNP3cZm+nUNKXTrBo6Qz4C7naTSo29x
lAIG3e0ijV59m2NEGHK3m+n06TscZ0JfZDG/9DMKGdZ7mEG/vssJfutLLGFU
P2dKTBA06nziKHI3YvcykwGd4J0W5xLu6Vhd77yG+c5vbHT4vvNjm2fLbJZ9
Z0/6zB97OfzZ7nLtPPvKrrRjnqfah3q53W4X2g672rZ7PtU26VxbYDPtW7vK
xts5ts2usBXh/4x9b7f47Ge7j1nMDb/PDrpPdH7gvI37epJucF5LTPi+fmLL
OeX5X3uFpWR49tqOu09zfuRcygs9TTc7R5jMVndf7H7SGdKNnOafvsoyJvRL
ivmqDzCbYd3EGUr45q42/JsZ0c2c5T+JfWyp
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{324, 48, 45, 533, 619, 723, 329, 440, 494, 564, 
                650, 754, 376, 409, 462, 532, 618, 722, 328, 439, 493, 563, 
                649, 753, 375, 408, 461, 531, 617, 721, 327, 326, 325, 374, 
                407, 460, 530, 616, 720}}], 
               PolygonBox[CompressedData["
1:eJwV0NtPjgEcB/CnQiFauslFtqxUUtlsZkPksJnoAl1UdKRL7p1SXFDI+dBV
4qYipWWrtTV0sNn8Ceicw33SQZ/n4rPv9/t7nvddb8mVF06cjwyCIIJBssmh
2uEcZ3lANzNke/kGf6iy7/OOabLcrvObSvseXUyxza2OX1TYn1nikN1EZFQQ
NNqdTJLpVstPyu0RFjloPyfC+3ftGL2AV8S6vXWbYKt9jRnK7DhZSDsJ3ht2
K9ffs8lesA/oz8J/hn0n/O16H5vtaDlEln5cvmSt3hH+Fn27XiL3yC65UY6H
3ykH7DSZIXfJGjlNqedH7K/6Tlkt82S/TJHr5WE5InPkKblbtskNcsjnv+g7
9DLZQ5I+7/5Jz9Tz5FP+c9u9SvaS7NkqeYwW1thvPC/WO0m0x+x0/SpTnLHX
yZO0Eu+dQbd/7LefsESDvVLm84LV3nvtNkqafYVJTod/J3Pssx+zSL29Qh6l
mRifb3f7wRb7MhOU2B/5S679iAVu2W18J9W+xDjF9gdm2Ws/ZJ6bdivfSLEv
MkaRvQyzxWS8
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt0ne4z1UcwPGLy0UlhXuNqItQCMlIRnmMBomQWbkyUnZp2mSvklmUlZG9
ChmZ2WRFS5mVhlEq0uvzPP543fc5536f3+93zvmmpnVu0CldQkJCOX+if7Oa
CiZDtLie0yraSlP1R62ki/Vevag1SDY+orO4x/h37UVR47O6krJkNd+pk+hG
YfNTuoxG5Df/TuczkPT8wxqGkkZNUjz3lX5Eb+7jBmu7dDLdaUwG/uUzhtGa
WrFnEslIJpK4wlqG8xy1Kc+NPne3vsdLPEVmrrKOEbTh4Tg7bvL8Hn2fl2lC
Fv5jPSNpyyPk9uxRnU0fKpLN2l6dQg+axrlxjQ2Moh2Pksezx3QOfbmfm63t
06m8wp3mp3U5zShg/r0uoLTxeX2Lu4x/1k9j38aX40yJl+NzGU0J41+1PQWN
T+gDuiTuVy9pNX1M8+rX8Zt0rpbSP7Sq9tNi+pNW1k+uv4d/6YNaSbPr/jgT
/UBL6m/6KkWMz+iKuHvjP7U5txsf14WUMb6gg7jb+BddFfcZWzLfqGN4nkLm
J3Updchn/o3Oo3/skVusfakf8hotuMPaD7qIwXH3pLe2Sd+mA3W5zdq3+jED
Ys/cau2ATuN1Wsbdk8H6Zn2HF3icKuSwflCn8wZPx12TaH2LjuVF6sUZk9P6
IZ3BmzwTZ0pG61v1XTryRNxZ7I9M/rdNx9GJ+nEf8Vvj++MzyUUyKeSOdzDu
Os4s9kn+eMfiLuJ8SI13Jc6YwvE+xv2R5Lu+0PF0pgEPxedbP6wz6cmzFCWz
9e06gS48SfV4j8jifzt0Il1pyP+ZTIfB
               "]], 
              LineBox[{67, 41, 42, 43, 44, 2887}]}, 
             Annotation[#, "Charting`Private`Tag$92159#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl03e8jnUYB+DXObJDyKbQIByVstplrziUvY6RUSiytyh777I32TLLXoXs
vTdF2Zuu36c/Lt/7ez/P+zrvM7LFtYhtHi8SiRzxT1F2RUUijUnFdn0UbShG
cUqw27EmpGaHPpq2XNf7kJ+r+jJKskdvShp26mNoxw29L29xTV9OKfbqzXie
vP62P+3G0p6bdv14m3/0FZRmn/4ladmlj6MDt/T+FOBffSVl2K9/RTp26z/S
kbKU44B9c9KzR/+JTpTnoF0LMrBXH09nbusDKMh1fRWfckhvSUb26RPoQgUO
231NJvbrE+lKRY7YfUNmDuiT6EYsR+1akYWD+mS6c0cfSCFu6KupxDG9NVk5
pE+hB3f1QRTmpv4ryaMjkel6BZJQ2e64/JYXOKyndc48c1Wm6gn08eaS5DFv
lFHhfPMy+YGsF+613C57+sw9OTj833ZFZC65Tn4ibzmeSS7W35e15Jvyd1lC
/uZ4CjlDLyIryhi5WRaVSWUOuUp+KBuGZ0bukJ/57AnZhhd5JXxf1P/vQDrz
fHM1pukJ9QnmUkSH8/XlMo7vHL8vh/AOrzm2Xt62z2xeYq7NGj2lPtMcSzI+
tzsp25KNo/p0evFAH8q73NHXUoVTejuyc0yfQW+qctquffjNHNdn8j0x3p9q
8ox9B17ihD6LH3ioD+M97urrqM5ZvSMvc1KfTR8e6cPDPeGevp4anNM7hWvJ
KX0OifzmiXpp4od33e6xHBGeB+7rG6jJeb0zr3Jan0tin5+kl+EZ+tk9kSPD
PeWBvpHnnDdLr8Sz1LK7ILuQkzN6eucsMFfnZz2JPtlclgThHugrZH36O/5U
juIjcju2QT60z2Jeaq5DfvMfcpN9KvPs8BzIyjKf3CKLyeThusvV4ftkI1lA
7gzvi6zt8xfNXcN7q+cK10GukR/Ls45nkAvDMyFryNflVjnPsaTmKeZy5DVv
kgnDc2JeKRswwHkRfXT4Th7pWfVfzHXZrKfW54T3gxThN9pdkt3Cs805fT7J
nDdVL08iBtrFsxsT3l0e61uoy2W9e7iGnNcXMIgo548N7ypP9K3U44regzxc
0BcymDj+susZfiMX9UUMoT5/h/eRGC7pixlKAxrSiHwuwReyMU1oylXn9wr3
i8v6EoYR7e8bF+4fT/VtpLGbG95dUtLM7prsHe5HeNYcXyuv2Gc0Lwrvlawp
35DbZHH5H/Tn8iA=
               "]], 
              
              LineBox[{781, 677, 591, 521, 404, 772, 668, 582, 512, 458, 364, 
               751, 647, 561, 491, 437, 405, 365, 366, 367, 368, 369, 370, 
               371, 372, 752, 648, 562, 492, 438, 406, 773, 669, 583, 513, 
               459, 789, 685, 599, 529, 805, 701, 615, 823, 719, 841, 373}]}, 
             Annotation[#, "Charting`Private`Tag$92159#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WWUFgUchfEXCfWoKEioNEqHQTcqYNAt3SG1sIB1RClRSpBYQumWbgzK
oKT8IK2kpAJ6ACUEf/8PD/feZ+bdmJ0Z8rRPatArVSKRuOqf2qkTiUxpE4kx
aRKJyTKfHCBvygXyF8c7yOP2TNlfjpIPYLpjNeU2riU+0lPhYT1ZXpZD8aHz
StjL9Gq4Znezz+rvY6PdLL6X3h3ZUIfLzI3V8+OAPQO1uO12KzyCgVxJbrle
HdftTaiLLPxnXAEctGdiEOqhPhqgIRqhMbI6f5xzC+KQPQuD0QRPODaeL4TD
9mwMQSl+BVcDN+zNaIon+QlcYRyx52AoSvMruVfwj70Fb+ApfiJXBEftuajN
7bBbI31cX64Mt0p/Ff/aW9GcO2D3QHY047JxKXpRHLM72if0tzDPrmPv1Ntg
mH4fHtX7yivxvTBOT49hzi8rV3OvYbB+V97ku+vn9FlygBwjH8JSfOd4C3mQ
nyZ7yuEyLRYjh/2OvBY/kxwhJ8oMcY3Q3Oezy0n8FFlMfiBvyV8d66Sf1N/G
aP1BzI+/vdzFtcVj6Gdfjd8THztezl6jv45bdg/7fHxtfG+3tA/pvZATLbgc
3GS9OH6zF8R9xP1kt0MGfMKV59bqNXHb/iG+HnLyU7hncdxeiOGowK/jauGO
/SNaIRc/lXsOJ+xFGIGK/HquNv6zt6E1cvOfc8/jpP0lRqIN2qId2sezjDzO
/cJ5L+CUvRij4h5BXsem8SVw2l6C0ajEb4jnEnft7XH98XS8B7iSOGMvxaeo
zH/F1cU9ewc64xl+BlcKv9vL4lnkdtvtkTHuIa4K97VeDwns5LogHz/TLo2z
9vJ4jrk9dgc8jrFcVe4bvT5Soad9Id5F2BXX2D6sJyEXunL5uVl6GZyLn9c+
FfcoVsS7wt6rd4z7SE+NTHp/+Vc4jI/nKN47zn9RfstNlQ3kEHlPLoznLe4v
eVHOlgPj5453Z7wn476Kv6s8wk+XveUImQ5LkNt+V16X8+VImSIz4k2fLSBn
c2Xjd9Zvy/NxDfXT8VmsjHefvU/vhMzxfrD/jns5nn/HX7I36g2RGrvjnuKO
6n2QB924gtwcvRwu2KvincrttzsjS1wb7mVuk94IabAn3iEoxM+1y+OivRoT
4tlEYcfm8RVwyV6DieiJXkhCb/RBkXgHOK8i/rDXIgXV+M1cY6TFXi4ZRfkF
diX8aa/DJFTnt3BNkA77uL4oxi+0K+OyvT7+f+B+trsgKyZzNbitelPcH/eZ
fUkOwv54Ju1jejLy4j37hhyFfo4XtxfpVTBQvyOv8F31M3E+Ntj/Azn2AEQ=

               "]], 
              LineBox[CompressedData["
1:eJwV0DkvRGEAheFPjGBEItGgE3rLL7AUllJjq6hQWIIZy5BYCiIkEonYoqCx
hegsleUHWFo6HQmmoJF4bvHmPefc++W7uaXdAy39GSGEBB5jIfSgCBuZIYwi
gSTGMI4JVGSFcOidGnzqF9hEg/3G1oYcPNgmUWk/0mvxpV9iC432W1s7cvFo
S6HKfqzX4Vu/QqvtSe9FMbZtTbY7uQNxDOrvPIsnz7v0F3kYZZjUf3gZU55X
6ydyPWbkP07be+W36H2syHFc29v4Obqb+3iBY9G/QIme5DTv8yKvcQHOsON8
M9/bt7iT5zngAHn6EH/wHs/xKufjNLrX+W5+te/yCC9xNsrlFP9G34t1uRDn
mHbuH1tMP/8=
               "]]}, Annotation[#, "Charting`Private`Tag$92159#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XccVlMcx/Hb3kOS9kBbUTRIFCWlvciIMqI0ldGgVEhDqJQ0NKW9p1Kk
Mtp7UpGiTbS9f398Xt9xzn2e5557z3mKtO7YuEOKJEl6pEySRWmSZHq6JMmJ
MWmTpAYy4A/9T7oKWCm/gJJYrJ+huwlj5ZrIiOP6n3UVsUp+EaWwRD9Tlwvj
5IeRCcfkhtjD98YJ8zbKlfCN3AalcUF+Fsf5oVhq3iz5ZoyXayFV+iRpL1/g
M8dv5xthL98HOY2/JafDn67fRCtjtbGixj7kX4pr+df46/zt+JdvhRP8HcZG
8R/x+fl3+Xo0G72PTqHLfPZsmhvVdV+YW4QOjN9DH5FT0w5ybfqvfBcdIz9O
s8Q68o1RU94Xa0iHyU3pO/JN9G05Pe7hJ9K/fO/myFhjTjH9UP5lPgv/Op+g
jPwfbR3rwH+M5a6dI+fBBLk2ssbzkJtgP98XJ83bIt+Lb+W2KIsV+rm6vJgo
10E2nNJ/jXn6fJikexTZcVq/EqvwDVZjDb7Fd1iL7zHfdfkx2TV1cQPO6Lfq
quA7uV08G6zTL9AVwBS5HnLgz1g7HOD74ax52+KZYa38Cu7ERfm5WEv+E6w3
b6FcEFPl+khjLTvK//E34i++GQ7y/ZHLeG85A865fjutiu+NtY91Nf6GnALl
5Ev0eZyM32DsM34YX4B/j69Ps8dn0Kl0g89cRAvhQd2X5t5CB8U7QxvIaWkn
uQ69KN9Nx8otaM54jnxzPCwfij1Gh8d9xDst30z7yBnjWfOT6Hnfu4Pej3Xm
FNd/xHeIZ82/yadEefkyfQGn+OH4wbWL5cKYJjeMdxh/63fqHsB6uWPsBfyo
X6Irgq/kRrGu+CfOozhjsNTYLZiubxy/Oc4J/S5dtVgnuVPcOzbql+luxQy5
CXLH3tbvjn2KH+TOqIBN+uW62zBTboo88T7Lj+EX/r3YR+btieeAH+UuqIjN
+hW6opglN0PeeOdjj+NX/v1438zbKz+En+RXUQlX5Bdxmh+BLbGP5GKYLTdH
OmveWb7E54s9Ec8Xh+PcMjaCHxD3GWcGnynm+px9tAZ+NlbC2Md819iTfHf+
UZqKVoqziz5JKxu/yrdBLfmMXI6OjveIfioXpO/LDegN8Z7Eu0mfpltjr/PF
417lOebfSgfHevLp+S785Vh/flzs+din9Akc4cvE9/AfxLPg+/KZ4xqfvT/O
Smw01i3OCOM95NRxHsrX6Es4y4/Etjh35BKYKz8e+y3WXX8g9gU2ya/hXmyP
M0pXEvPkFnG/sSaxJ+Ls0pfCfN0TKBTfqT8Y64XN8uuogp1xzulKY4H8JArj
XKw1jvIDcd28Q/Ij2CK/gfuil1+Os4UfhV1xZsq3Y6H8FDK4/1flK3wRnOef
wm98WWMj+UHxTvL9+Cyowk+mif4XWjvek3h2ckn6idwk9nmcqbSnXJemoZXp
hPgOWtV4QtvGb6fn5fL083jWcb7F+tABckOaI/Y/nUZ3x9lPy2CRebfph8Q7
xGfku/JX47yLsyN6/M4Pjj1gvL+cFSnkX+P8wza+e5zVxnvJaePdlFPI7fi/
+dHYE/85clksllvGOxpnjtwSx/ghSInDsU+wne+BB7A3/q90d2CJ/Ez8fqTC
kVgr7OB7ohr2mb9OdyeWys+iKFJjv7H1+nJYJrdCMaTBUV097OR7oToOmL9B
Vx7L5dbI5P66ydfiTOLHx16i/wOhRkk5
               "]], 
              
              LineBox[{1887, 1768, 1679, 1542, 2021, 1870, 1751, 1662, 1602, 
               1502, 1994, 1843, 1724, 1635, 1575, 1543, 1503, 1504, 1505, 
               1506, 1507, 1508, 1509, 1510, 1995, 1844, 1725, 1636, 1576, 
               1544, 2022, 1871, 1752, 1663, 1603, 2050, 1900, 1781, 1692, 
               2080, 1930, 1811, 2112, 1962, 2142, 1511}]}, 
             Annotation[#, "Charting`Private`Tag$92159#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XWwVVUYhvEN0t2MOgbdSNg6IEjNGCAhMyoql5K6NAICKt2dJkiDRYNF
dyilhEp3K2WA/r4/nvne5117c865a+9FoZQO9VPTJEmSLW2SpGRKkvezJMnh
zEnSBP/wlZiA2fp06Kd/EL/pmqGf7gh/Hf/ybzARc/Tp0V9fCL/rmqO/7ih/
A7f5t1ivK4xpuiqYpJvLM2AAL4zDuhYYoDvG38Qd/h026Ipguq4qJuvm8YwY
yIvggvwctshHrO+VK2Mhr4uWuoH8uNwU//FjvBpW8e/5RrkoPuNZsyZJG/kZ
+ZrZALvku/U95Cmun29mint0g6xlMFvwR82i/KL8PMrxrbyA2Y1XMY+6f5/8
MEryRdZzmqn8CbNe7I/8Cirw/fw+s3d8J7OV+wfJJ/QpSKtryhP5uFkdq+Uf
XLdJLoYZvBquyw2xW55qfYGcGYN5MRzT/cwfwWL+Et7SDeYn5WZIg1W6D/C5
PguG6IrH5+taY4juFG8e3w+rdR+iDdqiHdpjqOtOW2+Bu7BG9xFSMczamdg/
pMNa3cfogOHWzupaIT3W6T5BR4ywdi6+d+wL1us+RSd0RheMdM15a62RERt0
0/CFPiuG6krghK4rRuku8DbIhI26zbrimMmrY7ruS54Nw3hJXJJfwDb5pPVf
4hnBEl4f3XSj+UW5LTLHZ/JnsUbeZH2LXAKzeDZ73TbW5RtmI+yR79H3jOfX
9V+Z2WPfdcPj95kt+WNmKX5ZfhHl+XZe0OzOq5qn3L8/rkUpvtR6LrMDf9Js
EGeB/Coq8gP8frNPvE/x77h/jHxJ3y72VJcSz0j8frMG1sqbXbc1nn/M5jVw
U34Ze+UZ1r+Wc2AEL43TugP8cSzjDfG2biy/LLePdxdbdDOxUJ8TI3VlcEbX
A+N0V3hq/D2xVTcLPdEL76A3+qAv3sV7GO++q67vgOzYFmdnnKtxjlr7Q9cR
ObA9zkks0ufCKF1ZnI1zNc5R3Z+8U7z72KHbFn9zzOE1MVe3mOfGaF4O53QH
45zAct4I/XWT+DW5c+wXTvGaWCfvtL5dLo25vBbm6ZbwPBjDy+OKXBc75PPW
D8WeYwXPbR87xv7It83XUEl3kD9g9o3z3D2Tzeu6wrou8d6azeKsM3PHHsq1
UIav53nNzvwp80f374i1eK/4vPg7m+1iz83a/JbcGA/xffxesxef796lZl6M
jXc0zsm4Tr5q1sNO+YLrfo3Pw0reGHfkJjgkD7Q+Rb4hd0WeeG54bWyQf7K+
Uy4bn8nrYIFuGc+HcbwCLsYZjam6m/Gex2/FrjgzsVyfH+N1FeOciDM2zlTd
Ld4d+bA7ziSs0BfABF2leIfjjI0zVfdXvAfIjz1xBsX/7fqCmKirHHsbZ22c
rbq/eQ8UiOeR18HG+LzYM/lp83+Zbhz0
               "]], 
              LineBox[CompressedData["
1:eJwV0klIVXEcR/H/K4I0aBGE8/BoEYTNWVlaUSttgFzZQEa00EVFEERZDlub
E5rVxlWDVjbg1LSonWb1bFCrba2aByv73MXh9z3nvoeXh/FN20q3xkIICUxN
DuFyUgjFaBkbQjtPxTE+B5+0ejRqw3wXUvBca0WHnobjWj4+a/vQpP3hu5GK
F1qPNg1XeAmua508HSf4XHzRBnkh2nkZ9mvN/K9dhTR84MV4bCc877Wn4ypf
jl92GRL2Dc+77Ayc5EnjQqiw50Xv665GT/Se+k77q88PuUWYonV4NsHdztfY
I+4GzNYGeK5bw5e6B3z3rP1Pn8T3uGPczVq+m84/2iXI40/4RHdH9Pfcft9/
as/AZH7N8/HuFr7C/h29A/rtTL3Kvuk73W4mTunJeqU9P/o93VL02t987q29
CJ18LYLPlvNB+6Dn5+wRey8y8FLr02aiha9Em3aPZ+E0L8B37R1fjC6+Doe0
8zygOnpfvNKe8Vlo5atwS7vPs3GGL8AP7TAuaDHUaFl4rd3GAy0HjdpC/NSO
4KI2CrVaNt5od/BQy0WTVhj9f2hHcUkbjTotBwPaXTzS4mjWiqLfXXvPl6Cb
r0fMb7eRD9lxu9Ze5jb47H/XSncY
               "]]}, Annotation[#, "Charting`Private`Tag$92159#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{322, 323, 321}], 
             LineBox[{843, 844, 842}], 
             LineBox[{1460, 1461, 1459}], 
             LineBox[{2144, 2145, 2143}], 
             LineBox[{2885, 2886, 2884}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"True Dynamics \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, GridBoxItemSize -> 
                 {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
2HgUE9M5mbfwQ6hybiQW24/74feqEbevQHvXq1qjq8GI1Z9qRpacA3kzKsRX
qlRUtflsV43EAsjsUb4+cYaKcq+Vk1W3LoHR/KM+tem9CDx80RagQYZ/XySJ
vDHG5vN0ikPgbzJkkzKLF8XqhwKDnaGL5yjwut164Rq2/vg0Vuof/aHAcAUd
Tw5s/i/4ptyymRCC+rtyOYsE2WGFnL05q4Un2LKLnP7qEQXdvVHgpFtWDExO
2iv1uD9H/RuTVWU76sD1a48bf73MQoFRQpIyHsNgnp5/+bNiK/KpGxGULBkH
5+SNRuIrOpGQ+tKhBecp0KW45tEZ14MyM5b5ku7MgKF5dkfub71I/9N2y8yg
OfD72i8ltotUZPFq18ZTfguA9ViC56ZjVKTvcueg2P0l0Jo6WS7s3ot0J9u7
r0XQgPTwE+VtX7oRxVbtq0UIHVi67HEcHWpDIZEmrA4Za6A12FSg4FEjsvse
+OjODSz/h/dJaIWUop0ifvNGnbyQb/zRY7twVmhoH6NAucUHN5BN82xvssHP
RdKPpfv5oN+9hzveMBMh8v2p9OI6GcorHz+7aEuE5xbmQq4Mk2GxxKfmOWz/
1g0ZTp4zp0A6T6tOEzafxaWZVixTFHho4dujSuznJO2xpgYnfth6gVC7AXu/
27Vbmk2z/PDoobY/g8lEuOBA/qzgLgQ3za5++MfKDh3Ynt53eP8JBO37Q3s2
7oImvWzHjE9XA0MN1xvTR5LRubyJcs34UWBV1krwj2lHtSVDRmfaJwAx7UWu
eHI3ep22k/m+wzSoSdF2ksLy9bdlfw4tz1nAlh7wVVOYisrMWwI0A+eBZ9ho
K68hFUUdvUvr9VwE7tIXf+TO9CKe1Z36VP9lkGuyyXhfVQ+y6imQ4gtbAY2x
fJTzIZ0o+2Sg/PG4VWAcLJHw+tFf1FMZfiE7iQ8eX7pfcSefDb7jPn05eCcZ
Rr5R/34fEGEzD4yCb8nw7vXKZxvCsPxz1THXcw8Fnin8vqUU28+ivgpvij5Q
4M3Cflt/bH94GaY1ystj9ZKCgzsf9rrFNoXlByVCcJY+9tiAlx0+2EKkzsQn
gtW6jW/HLK+hz/YRma0by0GBQtIBN7d41OYW/Fpxfgo8kvM6+nq2B+XrKoc6
L84A/o38LXdne1EI531XD4550FLj+CwCG7/X2E/PZxsWwbr0KiV3GxVlK1VX
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
//1Cx0dtsYcKFqqODNxG54PaaD8yav8Pmn9img==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{565, 3251, 3249, 564, 968, 860, 770, 697, 640, 
                603, 987, 879, 789, 716, 659, 1003, 895, 805, 732, 1020, 912, 
                822, 1038, 930, 1057}}], 
               
               PolygonBox[{{1054, 3248, 3246, 551, 552, 553, 554, 958, 850, 
                760, 687, 631, 593, 985, 877, 787, 714, 657, 1002, 894, 804, 
                731, 555, 959, 851, 761, 1023, 915, 688, 1009, 901, 1045, 811,
                 1033, 925}}], 
               PolygonBox[CompressedData["
1:eJwV0rtL1XEcBuCvWZl3MzumQtmiSyDkZt5v7f4D6dFKK8o2bSpSK6hBMMK8
dRu6aGUOLlY2l+ZiLbqUmpkuQZCD4PMbHt73/XzhnDOc4/ErTZf3hBASmGYi
LYRxmh3L+JwYwhn2MWPfJIXndjk/9EFaOMUXt2b2897uIZUXdgU/9YfEKSeN
dF56q2RFH6KVCjJ45V7Fqj5MG5VkMu5ezZo+wlmqyGLCvYZf+ijnqOYgr91r
WdfHOE8N2bxxr+O3/oh2aplzayGJD3Yvh3hr17OhP6aDOubd4hwg7A1hQObJ
j976WLG7OMqi/V/e5SQ59qRs4I++I/t5om/K6xRFv8XnDckL7kuyk2y3mEyU
D2SBnPP+T79Drl0iU+WYPCbrvX/VW8myk2WCvC/z5az3v3ofMfuETJGj8pa3
VdkdfVb0X3EflN/ct+U9Sjlsv5ONbOpP2dJvUMxFe1lejX4j83YDC3pb9H18
sm+zpl+jkO92jCn9NFv6My7RSC5H2AXYiVdk
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{516, 3247, 3244, 664, 737, 827, 935, 521, 642, 
                699, 772, 862, 970, 569, 607, 663, 736, 826, 934, 520, 641, 
                698, 771, 861, 969, 568, 606, 662, 735, 825, 933, 519, 567, 
                605, 661, 734, 824, 932, 518, 517, 566, 604, 660, 733, 823, 
                931}}], 
               
               PolygonBox[{{995, 3250, 3249, 602, 639, 696, 769, 859, 967, 
                563, 601, 638, 695, 768, 858, 966, 562, 600, 637, 694, 767, 
                857, 965, 561, 599, 636, 693, 766, 856, 964, 560, 598, 635, 
                692, 765, 855, 963, 559, 597, 634, 691, 764, 854, 962, 558, 
                596, 633, 690, 763, 853, 961, 557, 595, 632, 689, 762, 852, 
                960, 556, 658, 715, 788, 878, 986, 594, 724, 797, 887}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVXEcBuB/JhJ0naqFOZRXLVJQCuoz5NzwEYRGyyGHjbmpoHKMFhHR
IhfN6aqyrDaVlStTG6xF00bdqKUpFIjPWTy87/s7VzjqjdfUH6xLCCGsYZj+
WAgDbHfcRgH7aWWAZQ6sDeEF+fo+WuhnKfqs+3Py9EuMsME+wSTVdjMP+Bv9
vNsz4nov70i3a/lMld3EfRapdhsiV+/hLWn2cT5RaU+Qrbfyi1N2kTzHPPfs
Bar0p2zV98he/vPVzpftzNBtl8gLLPLGviITEkNIlenymPxIhWe59g09JnfJ
DNkplxmP3s2+qifKLLlRtsifNHqeY1/X18lCuUmelXPc9fyyXOGPnupZpf6E
LXafTHbbLXv4xxf3azLJPU+eZpou92J5ngWG7RR5lA+U2ztlB0uM2ZmymR80
2DvkGWa5Y/+mQh8kR58krrcxRaf9mmT9CBOU2e/ZrDfxnXr7NvOU24/J1jt4
Rcw+HP09KbVHyYj+13wj+lLfYo4y+xFZ+kVest4+FP1O7LVPcpNZSt0ekhm9
E6u/hGW6
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt02dsllUYBuCyh+y9peyh/GGUXQr+kL1klgRlD4FgFAQUlI2RIQqI7C0o
Q9EylCUQNLK3AaQoyBIIQ8OQ4PUk/Lh6389p+vV7zzlvYq9hHYZmSEhIGONH
5Lt+5OAvNpsPyZ484G1zmnyVW9wzn5NDaKkvlzW5oJ+U/Vis75WdeKbXZJae
yK/6x+zQ2/JI78V6PZnr+joyMsqck+/0d2jFCnMtfteXUItPzOU4qE+nN5kY
be0FvtdH0JraZCYLWcn2fB9ykaaPpA11mG2tPIf0GfQhO+9Zy82W2DvaksSn
1ipwWJ9JX3LwvrU8bI1noh0rzbW5qC+lLp+ZK3Ik9ot+5GSstbxsi2eiPavM
dUjXl1GPOeZKHI09Yafejsd6fzboTbihn5ED+Uo/ILuRKfbLPE7mY7t+WL7O
GH2LbM5t7pvPy7hIj+lgXi2T4vO5ZD4l+/OQ5eZ9sjN349LxR9wvnlLf0lxZ
mWscMx+TvfmX2eZdsj1P9ItyOAP0jTKFm/pZOYiv9Z9ldzLH+Zo/kPn5Ic6Q
rXqLuOd6R9bodeN7xT2jAfPMVTge58tANpmb8nfcW3LzobkAP8Z58xpfmuvx
Z5w3DfncXJUTcd4MIg/jrRVkR5w3nWjEfGvVOBnny2DyMsFaIXbGedGZxnxh
rTqnYj95k3xMtFaYXbEPdCGZ/EyyXoTd8Rx0pQkFKEghClOEohSjOCUoSSlK
U4YXKUsi5ShPBSb7/KLsiWelGylUZIr1YvwUz0V3mrLA2kucjnNgCJWYaq04
e+O5SGVt3CEux7tBMxaaX+ZM7DtD+cbcjFvxPlCZaeYS7Iu9YJvekn/0HqzT
G3Al7jj79S5k4BXzIlmDs/px2Yf5+u54L/hPT5dvMUz/Nv4u7k+8S+bf5GA2
6r/I1Hi/yBLPwwiexT30+49kSa6y33xEvhHflcnm7bIVd+K9MV+I/xnvDP8D
qh66iw==
               "]], 
              LineBox[CompressedData["
1:eJwV0jcvRWEABuDLgB+hjurFjE1NGDAY9ERiEDXiF4jOrpsQBnViYdAHiUSi
RCKixaAsSBDPGZ687/ude+49OblJjW3lrRGhUKiXHOVBzpPPtB3mQh9nR6/g
V29nXc/nVV/hSK8mimR7SMayp5/KRvr0LVnKp34j26nRl2QuLzza57KZbxbs
PVnFB5Hc0c0fBa7PyEyeubTPZFPwO0zYu7KSt+Ae+1Z28UOHvRF8T3Bdv5Qt
rOrHwfMRTYo9LOPY1/vZ1sv40mtZ1vN40hcpZNbO4kqfpJNURpzFc6APUEcR
aYw6T+BQH6SeYtLJIEwmWYz5XCJHwXungRLmnGVzrU/RxaZdyLu+xoleSwz3
9AR/iEj3iX88akng
               "]]}, Annotation[#, "Charting`Private`Tag$92249#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GV4VnUYB+ADjBgMBkNGDJQBknbR3dL4VWq0EiJhe0lKKIhKt0qZ2Era
AkpLqaS0dKOXcT8f7v2e33NgO9d7/ufNzhnceVCuJEnW+5GSO0nezJMkNdln
fp2HeYC85OMt12qx3zyNLtQkP4vta3PAPJ2u1GKDXRfysFIfSQGW6HU4aJ5B
N2qz0a4rKazSR5HKUr0uh8wzeTctSbrLOvxk3428rNZHU5Blej0Om2fRg7r8
bNedfKzRx1CI5Xp9/jDPJod6pFGYt11rwBHzHHpSnyK8Y9+Qo+a59KIB6XGv
9o04Zp5HbxpSlPfsG3PcPJ8+NKIY79s34YR5AX1pTAYf2DflpHkh/WjCJrse
5GetPpbirNCbccq8iP40ZbNdDgVIUjx3WVquc20cR/QnuZmd+nX5Evdwk/6h
bM6f5n/kVN4wn5YvUDnuxe+bIx+x/10+RoZdZpwLOUNmyU2uXzFPoKR+pywk
F8hbZDPXt5h7UlRPlbnkNFlGfuX6RfM4MvXbZEE5X77o2lH5VPyuOCv2s+Qu
+xvyZe6lhP6RbMHpeCc4Yx5JFR7V98khcY9s1puz1dwr/h5f6+M5Zn6a8uzW
M/nY3JIz8T4xgBaUpFScB+e6tCzDJ/5dK87G+8VAWrLNrnd8NnyjTyCLT/XW
nIv3i0Hs1x+nFFv0Vmw39yGNb/WJlOUz/UHOx/vGYA7oQ+NMsFVvzQ5zXwrz
nT6J4+ZnyGaPXo7PzW24EO8iZ82jqBpnQD8oh8WzY5t+VU7krrgP/RfZjyJ8
r1+K58jtcQb1E/JZKsS77HnOlnvt/5KTuS/u0X5RnF/7L2Rb0u0u6v+aX2W5
+ZwcHWfatWrxPsi5spwc4voh83CK61kyRc6UZeV216+ZJ8XnrN8dn61cGM9e
tnF9p7k/xfR0mVtOlz+4dlmO5444h/pJ+RwV+VX/W07h/ji7+peyHZfiO4nz
5jFUj2etH5Yj4t7YobdlV7x/8d7woz6Z8qzU23M5vsMYSjt2x1mP+2W9PoVs
VukduBLfawyjPXvsBpDBBv0VKrBa78jVONsMpwMVWWPfiWvxXccIOlKJW6kc
e+9DFVmValRnrf/TmevxPcgTdGKv3cB4RmzUp3LK/DyV+E2vwTrzQ9ww/ydf
Y4X5ghxLCc+mhkyV8+LsyP8BaErdzw==
               "]], 
              LineBox[CompressedData["
1:eJwVzzk2g2EYBeA3oXRUUSpS6AwxLiQy/r8qC0hKY8QSHHZgB2Y6JMI5lKrQ
Ke2AGB7Fc95771d9+Uar2MxERML7SMQ6k7xkI4oM5CY5nvQDprnRS3zKx2yw
ygy39jJf8gmblJjlzl5hKJ+yRZk5uvYq3/IZ21Qo0LPX+JHP2aHKPPf2Or/y
BW1qLNC3JwSX+i51FnmwpWS40jsk//8Zi1hyH+1rZLnW90h51VtM8Kwf8iF3
mOJNH7r7rDA+GnHk5t1lb3/qhjBP
               "]]}, Annotation[#, "Charting`Private`Tag$92249#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GV4lWUABuBDN6igdAwY6uhmYwxHDgYGeCmpNCgxfiipNBiESkmjhEGn
dKuEdINKg0GDNKj3++PmeZ73+zbO2b6zqHYpTXqkikQit/0TnTYS2Z0uEnmD
xPSRyB27lFxlN5Lf27nlLLueTJTV5Db5vmup9JF6DBX0DfKU82L6Ir0xb9p/
y/fIyXa7oOvf6fUZa2ezJ+lVuWyXYE/4Wu7q8+hFaveNclaS03YzLofXQi52
2ON4nr12M+7p8+lNc17gRWIoGd4vpdnn3ubc1xfQhxaUYb/zFjzQF9KXllxx
1otn2WmPpywH7JY81BfRj1Zcddab59hlT6AcB+1WPNIX05803utoZ6U4Y7fm
mt6H3PxiTyS7+yaH3wtX7PIc0lvzWF9CHvfMtmvxgZ3WHqOX5qxd3F6sv8xb
9nXZlzyUc22d3O28UHgm9CSZJKvLn+Vr8kvXc8gpdh0ZKyvLzeH7yqvhZy+X
2w1lE5kgd8qmsoLrh8P/H16n/ST8XuRqe6meV5+j1yZW/1F+6Dyd/plehor6
RnnOebS+RH+Ft+0bsh952WMXdn2e3oBJ9lP2VD2Oa3ZFjoSv5V99GQNI777P
nZXlvN2Gm3p/8rHXnkwljtpt+E9fzkDaciv8HsjPPnsKlTlmtyXCCnsQ7bgd
3isF2G9PpQrH7XakYqU9mPZUpRqxxFGdE+5pT2p+sIfQgXhOOutAGlbZQ+nI
P/YACnLAnkYNfrU7kpbV9jA6ccceSCEO2tNJ4De7E+lYYw8ng5/jF+H54oLd
mbv6IApzyJ5BTX63O5OetfYIMvr6sXZ5LtpduKcPpgiH7SLumR+eN2baT9vT
wnPLdfslTuldyMA6O5975oZnmI/sTPY4vQKV9E3yUvgbpS/VX6WGvkO+4/y+
HBKeU2dR4fXJ9bKxPOJ6lFwQnjuZLOPldtlEfuX6M3K6XVfGyypyS3iO5Y3w
t0uusJNlU1lT7pKJrp0Or4GM4fPgfI1c7zy//k34nnxsZ7bHh88Lf4S/l/ay
8DnmXfuBHEpRjtpfk9M9M8J75aZdizPhfjKxwf6ELO6bEH5W/Gl35aE+jGIc
s2dRm7N2VzKz0f6UbtThnLNuZGGTPZLu1KUe9UmiAefd052sbLZH0YNH9nCK
c9yeTUMu2D3IxhZ7NCk8tkcQzQl7DslctFPIzlZ7DFm9z4l2Zf6ye/IkPDOU
4KRd1D0L9UbMtXPZM/UEqupb5S3nMfpK/fVwr31J9iQHZV1bK7c5L6B/q9eX
9WSc/Ck8g/J/MbT4YA==
               "]], 
              
              LineBox[{1431, 1334, 1258, 1137, 1534, 1416, 1319, 1243, 1190, 
               1557, 1440, 1343, 1267, 1101, 1511, 1393, 1296, 1220, 1167, 
               1138, 1535, 1417, 1320, 1244, 1191, 1102, 1512, 1394, 1297, 
               1221, 1168, 1139, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 
               1513, 1395, 1298, 1222, 1169, 1140, 1536, 1418, 1321, 1245, 
               1192, 1558, 1441, 1344, 1268, 1579, 1462, 1365, 1600, 1483, 
               1620, 1110}]}, 
             Annotation[#, "Charting`Private`Tag$92249#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1ne8z1Ucx/GfvSPK3hktI3tvFSote1+7cG3CdRGy3cresmdmhGwZhcre
e5aRUBR6nj9ej8/79T7n+/i533t+58oVFf1hp3iRSCQufiRSP3Ek8nPSSCQ5
opNEIk/4KozAfV0RTNTnxQldA+zXpUBn3VO+GiPxQFcUk/T5cFLXEAd0KdFF
94yvQcZkkUhd3UZdDYzSPeTFMJnnxyldAfs66H7lzdBId5CnQlceQXl7+vEL
8lrrmXg9vonXRB0+jj+SR1v/Wy6OKfzl8PnWh/Fb8mnrBXlH/hvvKa+Vm8tN
5enybDO+OczcbTb2zC/mcxit62ZvG3Men2vG4xXMmPBuzIu8r7mBLzO/83xm
sz7/yvzBehdzBV9k1uJ1zfF8hvmYDzZ38DGe/ccsgan6Dvol8ivhZ5eHy7fl
M/YV4p34Id4CTXS/8tTozuNjnS6LfQ10m/k7GKt7xEtiGn8VZ3VN8ZsuDXro
EmC9Lg7NcEj/PHrqE+J73ZdojhaIQku0Qmu0QVu0w2HPpUUvzyXCBt1XeKwr
hem613BO1x5HdOnQW5cYG3VZ/RwNdVv4u/ha9y8vHd4jfx3ndYXti9Yd5lH4
RHeUv4DPeBJUtKc/vyRvsp6NN+Jb+Xuoxyfwf+Vx1v+Ty2Am72htqVxAriWP
kO/IF+x7g3fmR3ivcBbkluGsyzPkb8wE5nBzj7na/NRzx+QXw++f97G/rTmf
zzOT8kpmbPgumZd5P3MjXx7Ol+ezm4351+Y2613Nlby2XF+eKP8nD5F3yuM9
88Qsi1n6guFsWBvJ78oXrRfhXfhR3iqcRd1xnh59eTJs1k3AU1258F3SFcIl
XUec0GVAP11ybNFNRCdE46S1jIixlgJbdZPQGaf0mdBfnxLbdJPxTFc+vEtd
YVzWdcFpXWbE6lJhu24KIn6OCvo5ujdwRdcVZ3RZMED3HHboctjbRLedv4+p
uni6iuG7z4vgqq4bzuqyYqAuNXbqctrbVLeDf4Bpuvi6SuF3yYuGs8tH8T/l
a9aL8q78GG+N7rpzPBsG8TSobM8AfkXeZT0Xb8Z38g/RgE/iT+Tp1hPwynw+
7yQvC3dxONvyaPmePFDeKl+3v1i45+QJ5nFrvc11fKnZhjc3Z4Z3aCY0R5h7
zTVmD8+fl7NjLP/c/nbmgvD55vO8ijkw3NHmVR5jbuI/eja33Fzepe8mr5I/
khvKk+Wn8gz7EvIqfAEvjtp8DP9LvmG9OO/OT4TvT7jrdRd4DgzmabFbNxOJ
7K2qX6grgZu6Xrioy4khunTYo3vJ3hbh38o/xixdYl21cJ/zkuGs8LH8vvy7
9RLhvfCT4V2E+5nP4onCnWb9kpkLQ621t7Yw3E9yVXmQfE3uH77b8l7788hR
8rjwNyqcEXM1X2zW4Y3MKeF+Mp/xoeYuvtKc7fkkZnUeZy62Hm0uD+/SLBXO
qhkX/h6YD/igcI/wFeYfni9p9uQTzVPWPzPX8/bhjg2fISfGSHlfuGc9c9nM
jS/CHaxfFO44uVo4I+Hcyfvsy8tb8j28LhrzqTwSvuPWk/I35SXWSofzzr/k
D+Vb1kvxXvx0+Bz00V3hL2EYT4+fdPnsaxXeZ7jfMUeXTPdWOOe8DG7r+uKq
Lk+4p3UZ8LMuv72tdfvCnYq5uuS6t3XLeFnc0fXDNV3e8D3RZcR+3TyksL9G
uLd15XBXF4Prunzh/eky4YBuPlLaX1P/ra48/tT1xw1dfozSZcZB3QKkCv+/
CL83XQXc08Xipu5ljNZlQXX7BvMbcqy8OXyG+T/MKVvu
               "]], 
              LineBox[CompressedData["
1:eJwV0klQz3EYx/Fvl5ZLdl0shYMW0jHM2ONgrRwsOdiiiIsZcolUzBhL4UIz
BoeUrYTqYsbBJZLdxXJW2UKFg9f38J7P83k/z69+9f9nbN1XWJEQQujBzuQQ
upNC2ICmxBBSU0JYybXqCzDIVaGPy8QpbhJ6uesY5X4V38YtxE/uCPq5LJzm
JuM514zR7lfzd7lF+MUdxQCXjTPcFLzgWjDG/Rq+nVuM31w1vnA5OMtNxUtu
pttS7om+ETe4sdxa7p6+BEPcMXzlZqGeS8crLtPtLu6pvgk3uXHcOu6+vhTD
XD53kHuvl6OG+6bPRoOegQI3Nfpn82v7LH233qNvxi1uPFfIPdCXoUiv14fM
I/Zz9UP6B30PtulX9CTU2n+XuTgX38Ou2TzNvNxca74o+/Qq+VB/45lsc5n5
vHxmd0C26y2yRC+Rl/TLMkHWycfx85W3PT9BFsX/u+xwvz96vUkW6MWyQW+U
w3q1fKT/8ew8c6X5I19p7jTvNW83XzUnx9/n7oecE9/RbjpW2Nfp/ea39jl6
ud6rb8EdbiJXzHXGvx9/ueMY5PJwgZuBd1wr0tyv57viz8c/bj53mPukV2CH
fk1PwUlzd/weyRNu/wMAk3Ii
               "]]}, Annotation[#, "Charting`Private`Tag$92249#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HWUFlUcxvGhlFK6W5BWWgkJpXVppduWjiUkBASVbiykMRAbpKW7uxeO
eo7Ekrv0An7uH9/zxPxm3nfi3kJdezXvmSyKouLJo2hVmij6L10U1cGGtFHU
FllwWZ8hfRR111+QR6EqVusv6Opio9wOWRGvz2i+h/6i/DGqYY3+oq4eNsnt
kQ1lzE7QpcYC+Yq5TLqe8iV5NF7CWv0lXX1sljsgO8qanahLg4XyVXOZdb3k
y/IYtJSXyWVRXa4hz+Zz4nd5nXMu8w2wRe6IGDNL5KLIIZeTJ/Fp0Y8/SBeF
WX4tXxkj+Dh6zfWy8L358TTeXC+6V/6Eb8Uv56fTcnQYPR3+P63heE36jTyZ
5qID6VE6l/7h+Jt0o/wFrU5H07/pd/Qvvx3PN8RYeav5D+gOuRPfiP+RLxbu
Xy4vT+bTYbHcSV7HV8F118oq9+GvOPZp+G+opZujy41l8npzV/hXsU3ujFy4
oc9mtq/+qvxZOBcb9Fd1r2G73AW5cVO/Edf0Mdih64o8SNBvwmZswXXHG2Fn
eB7Ii0T9VtzQN8Yu3VvIh1v6bbipb4LdureRH7f125Ggb4o9undQAHf0O7AT
iY41w179uyiIu/rs7rFfeO/yWLyMXfpbuubYJ7+HQrinz2G+f3i+8ji8gt36
27oW2C+/j2dQwewUXXp8K983l1MXK9+Qx6O1/KdcHrXD78tz+TxYLu9xzh3+
dRwI3wMam1kqF0dhuaI8lX8K/flD4XsK7zJ8U3xVjOTP0Qeul4sfwE+gN831
pvvk2WE9y23oCnkGrUCH0zNhzdA64Z7pPHkKzUsH0WN0XriX8N7oJvnLsCbo
GPpPePZ++y59AwfNddPv5LvxTfif+BIoIleSp/FP43s5ybm5dQPlBHki6qK2
br4uH1bI+8zd41vikNwdz+KhPo/ZQfpEeRLqYb/+vq4VDss9UBSP9AfwQN8a
R3Q9UQyP9QdxCIdxBEdxDMeRZL4Njoa9A8URhe/c7w/W3+Inoz5OmH+oa4tj
4V2gBJKFb9/8h/rb/BQ0wEnzj3TtcFzug5J4wex0XQb8ICcP60M3RL7DT0VD
1NEt0OXHSvmU6z3m2+OE3BdNzfwsl0Qp+UV5Bp8RS+QUYX3phsp3+WloK6+U
K4a9JLwbeSFfAIP543RVWLf8Zv4rWjPsqfRfetr/iPgO/Dh6Mrw7ukv+OqxR
uRn9RZ5GS9EhYY7Op6Udr0xnypNoJhpLD9M5Yd8MexVdL8+i1egoep6mDPsB
P4y/F54pv5+fzrfjV/GVwp4Xvhl5EV8Qq8NeI2/ha+GMe0gmd+RPOdYfzeVf
5dJ4Tq4iz+IzY6mcKuwtuuHyfX4GYsK3oVusK4Q18lnXTq7rFJ6VHIvn8UTY
a/QfhbXNz0QjxJlPoe8c/pc8AGXwJArrR+iT+FlhP8E58yn1XfRn5YEoi9Qo
oh+pf8h/HtYqzptPpe+qj5MHoYX8W7hPDOVP0QX0fzckM8Y=
               "]], 
              LineBox[CompressedData["
1:eJwV0ctTzWEAxvE3Uc6l3FlLucu4VSoLbFw2JNQMm1y6GJmxMCOXkC4YCwtT
nQgLycItO5eyKWZYWFi0MZzqnPBH4HMW33me7/O+8/vN+Z2ldWeqmrNCCJ/Q
HQthAZ5FQ4igKB7CNf5X78E+JCMh5NiP2X/w89iAKJbb2+z/9F7sx4T7ufbj
9p+8BRsRwwr7dXtAgldh0v3Z9hO2JL+ATYhjpb3dnoU+fgBT7kfsJ20T/CI2
Iw+r7B32GbjHq5FyP2qvt03yS9iCfKy2d9qzcZ8fRNr9mL3BNsUvowTlth7b
Qjznc7DG1sVnop8fwi7bAC/AOz7teXFbI0/xVpSiwtZrW4QXfC7W2m7wWXjA
j/A3egkO8938ib4M73k9H9W345f35PEmPe3stP5Zv5L5DvqQXowyXskT+mKc
07/Jl/Y6/YPeLStlm0zKATnP+Tp5k9+WOfKs/Jr5dvKh86PyLb8rS2Wr/C4f
yxrne+QgvyMLZYscl8POGvQxfQc69ZT87Tfl66f0aXea9S/61cx/pb/W12Mr
38b79CV4xeej2HaL5+IRr8Ve21NehBHeyD/qO9Glp+Wg/OPd/wFj3GOG
               "]]}, Annotation[#, "Charting`Private`Tag$92249#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{514, 515, 513}], 
             LineBox[{1059, 1060, 1058}], 
             LineBox[{1622, 1623, 1621}], 
             LineBox[{2487, 2488, 2486}], 
             LineBox[{3242, 3243, 3241}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8671631791244926`*^9, 3.867163220670204*^9, {3.867163264816084*^9, 
   3.8671633154139004`*^9}, 3.8671642031429625`*^9, 3.8671643894653673`*^9, {
   3.8671644203174987`*^9, 3.8671644612374105`*^9}, {3.867164491808633*^9, 
   3.8671645117022696`*^9}, 3.8671647721079793`*^9, {3.867165065635095*^9, 
   3.8671650845810356`*^9}, 3.867165760705778*^9},
 CellLabel->
  "Out[666]=",ExpressionUUID->"7ffeae4a-2d33-452b-9a4c-e53f86dc1c62"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"FF Computation Time = \"\>", "\[InvisibleSpace]", "0.09375`"}],
  SequenceForm["FF Computation Time = ", 0.09375],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8671632220987473`*^9, {3.8671632631416197`*^9, 3.8671633103245287`*^9}, 
   3.867164201676431*^9, 3.8671643881018033`*^9, {3.867164418890955*^9, 
   3.8671644603227043`*^9}, {3.8671644908109517`*^9, 3.86716451013877*^9}, 
   3.8671647700346427`*^9, {3.867165064061599*^9, 3.867165082543688*^9}, 
   3.867165760787752*^9},
 CellLabel->
  "During evaluation of \
In[652]:=",ExpressionUUID->"4230cce9-00ed-4a10-922e-df387805ac74"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"FB Computation Time = \"\>", "\[InvisibleSpace]", "0.328125`"}],
  SequenceForm["FB Computation Time = ", 0.328125],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8671632220987473`*^9, {3.8671632631416197`*^9, 3.8671633103245287`*^9}, 
   3.867164201676431*^9, 3.8671643881018033`*^9, {3.867164418890955*^9, 
   3.8671644603227043`*^9}, {3.8671644908109517`*^9, 3.86716451013877*^9}, 
   3.8671647700346427`*^9, {3.867165064061599*^9, 3.867165082543688*^9}, 
   3.8671657607917504`*^9},
 CellLabel->
  "During evaluation of \
In[652]:=",ExpressionUUID->"f3b212d9-4bfa-44be-a90d-9c876cb230cb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hammer Perturbations ", "Subsection",
 CellChangeTimes->{{3.867163329633355*^9, 
  3.8671633535357075`*^9}},ExpressionUUID->"360e002c-256f-4548-b902-\
e190c145a777"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomPerturbCartPendulum", "[", 
    RowBox[{
    "xPrev_", ",", "uPrev_", ",", "systemData_", ",", "Tperturb_", ",", 
     "xPerturb_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
       "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
       "InitGuess", ",", "maxJ", ",", "x1b", ",", "xdot1b", ",", "\[Theta]1b",
        ",", "\[Theta]dot1b", ",", "u1b", ",", "u1a", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "Jff", ",", "K", ",", "ICnew", ",", "xoverall", ",", "uoverall", ",", 
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
       "u1c", ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
         "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
         "InitGuess", ",", "maxJ"}], "}"}], "  ", "=", "systemData"}], " ", 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a"}], 
        "}"}], " ", "=", " ", "xPrev"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ICnew", " ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1a", "[", "Tperturb", "]"}], ",", 
          RowBox[{"xdot1a", "[", "Tperturb", "]"}], ",", 
          RowBox[{"\[Theta]1a", "[", "Tperturb", "]"}], ",", 
          RowBox[{"\[Theta]dot1a", "[", "Tperturb", "]"}]}], "}"}], " ", "+", 
        " ", "xPerturb"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
         "u1b", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}],
        "=", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{"ICnew", ",", "systemData"}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
         "u1c", ",", "J"}], "}"}], "=", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICnew", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1b", ",", "xdot1b", 
         ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", "u1b", ",", "A", ",", 
         "uMax", ",", "K"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x1overall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x1a", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdot1overall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdot1a", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdot1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]1overall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dot1overall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dot1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uoverall", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uPrev", "[", "t", "]"}], ",", 
            RowBox[{"t", "<=", "Tperturb"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u1c", "[", 
             RowBox[{"t", "-", "Tperturb"}], "]"}], ",", 
            RowBox[{"t", ">", "Tperturb"}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xoverall", " ", "=", 
       RowBox[{"{", 
        RowBox[{
        "x1overall", ",", "xdot1overall", ",", "\[Theta]1overall", ",", 
         "\[Theta]dot1overall"}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"xoverall", ",", "uoverall"}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.867163464849106*^9, 3.8671634794564323`*^9}, {
  3.8671635127337894`*^9, 3.867163605654069*^9}, {3.8671645657589817`*^9, 
  3.8671645986694565`*^9}, {3.867164634306057*^9, 3.867164663989561*^9}, {
  3.8671647961932783`*^9, 3.867164841244866*^9}, {3.867164966531794*^9, 
  3.8671649911409225`*^9}, {3.8671651042407475`*^9, 3.8671651646904125`*^9}, {
  3.867165261517443*^9, 3.8671653980147867`*^9}, {3.8671654378460464`*^9, 
  3.8671656708705115`*^9}, {3.8671663097541685`*^9, 3.867166317098817*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[701]:=",ExpressionUUID->"f522f0e9-c975-4ace-81ef-7dfcbca5a787"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "20"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";", 
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"xdotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";", 
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";", 
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";", 
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Initial Energy = \>\"", ",", " ", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["systemData",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    StyleBox["=",
     FontWeight->"Plain"], " ", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{
      "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
       "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
       "InitGuess", ",", "maxJ"}], "}"}],
     FontWeight->"Plain"]}], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"]}], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"Tperturb", " ", "=", " ", "3"}], ";", 
    RowBox[{"xPerturb", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"Pi", "/", "6"}], ",", "1"}], "}"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{"ICs", ",", "systemData"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xPrev", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"uPrev", " ", "=", " ", "u1c"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xoverall", ",", "uoverall"}], "}"}], " ", "=", " ", 
    RowBox[{"RandomPerturbCartPendulum", "[", 
     RowBox[{
     "xPrev", ",", "uPrev", ",", "systemData", ",", "Tperturb", ",", 
      "xPerturb"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1overall", ",", "xdot1overall", ",", "\[Theta]1overall", ",", 
       "\[Theta]dot1overall"}], "}"}], " ", "=", " ", "xoverall"}], ";"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]1overall", "[", "t", "]"}], ",", 
      RowBox[{"uoverall", "[", "t", "]"}], ",", 
      RowBox[{"x1overall", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]dot1overall", "[", "t", "]"}], ",", 
      RowBox[{"xdot1overall", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"Tperturb", "+", "\[Tau]1"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
    RowBox[{"Filling", "->", 
     RowBox[{"{", 
      RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
       "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<feedback solution \>\""}], ",", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "3"}]}], ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", 
    RowBox[{"GridLines", "->", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.8671657195039587`*^9, 3.8671659098890643`*^9}, {
  3.8671659551945715`*^9, 3.8671660470182037`*^9}, {3.867166339021806*^9, 
  3.8671663687872868`*^9}, {3.8671664100121*^9, 3.867166474775386*^9}, {
  3.8671666029993734`*^9, 3.867166621694394*^9}, {3.867166668870304*^9, 
  3.867166672623105*^9}, {3.8671667093373604`*^9, 3.8671667121004763`*^9}},
 CellLabel->
  "In[894]:=",ExpressionUUID->"616e0510-210f-4f4b-922e-cd16aac0b7fb"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial Energy = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2`"}]}],
  SequenceForm["Initial Energy = ", -0.2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8671660592063036`*^9, {3.8671663222171793`*^9, 3.8671663699259205`*^9}, {
   3.867166410951798*^9, 3.867166475435173*^9}, {3.8671665897526093`*^9, 
   3.867166622428158*^9}, 3.8671666735278144`*^9, 3.867166712939208*^9},
 CellLabel->
  "During evaluation of \
In[894]:=",ExpressionUUID->"cd6be4a7-82b5-489d-ac7e-a605294ecc41"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error First Guess = \"\>", "\[InvisibleSpace]", 
   "1.7306212086135567`*^-15"}],
  SequenceForm["Error First Guess = ", 1.7306212086135567`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8671660592063036`*^9, {3.8671663222171793`*^9, 3.8671663699259205`*^9}, {
   3.867166410951798*^9, 3.867166475435173*^9}, {3.8671665897526093`*^9, 
   3.867166622428158*^9}, 3.8671666735278144`*^9, 3.86716671311915*^9},
 CellLabel->
  "During evaluation of \
In[894]:=",ExpressionUUID->"b620e344-7006-40d1-916e-5a396e4489ee"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error First Guess = \"\>", "\[InvisibleSpace]", 
   "4.429607479412343`*^-15"}],
  SequenceForm["Error First Guess = ", 4.429607479412343*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8671660592063036`*^9, {3.8671663222171793`*^9, 3.8671663699259205`*^9}, {
   3.867166410951798*^9, 3.867166475435173*^9}, {3.8671665897526093`*^9, 
   3.867166622428158*^9}, 3.8671666735278144`*^9, 3.8671667141038356`*^9},
 CellLabel->
  "During evaluation of \
In[894]:=",ExpressionUUID->"f18c68a6-d7ca-4368-8817-0fd001290dad"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
vx0kfPKO7Zf/8ttpflfX8Nb+ZfLbxS8a/5keHWHy23Z9BWTz8Ukmv21hPWH5
qG4O+x97qqdvzwolF8c5vR7MM3luXi+WCVrJTybPvXlqPE520ygSK517KDDE
A9p3Kz9PRo+heA5FhQM+ZHifwP40aGU/8rcNql4xxgslHtLJJX5luORPTBhb
ED/kzWsavnMfxWfFgg4lkgWh024h9mT7LO54dTBip7EQ/NlhPOPMPYuLB1x7
rLiFoSd6SXOVZTcu17hof+ezMIj0NJiVlY+hQX6PloeXRUBcO5P8TZoEub3H
V858EoNrI+QipxR+cLtfsUHnljhcQLonO2vIELFaT05VWBIEHvLNnfowiOyC
hM0ORUlB73o+m4Z381jvy0RZgIU09HzQbJZM5KRZKI3alPPJgOfPg5X+hJ67
H2/ZR/kqAyFHlUtZa8k0HpmPd/Nuy4L8mdVxHwg9mLCWw0rCQg4M1+x/81Gb
iyaX0NTNwy8PddGS2odMljCDd//Cwi8z48rF5N0nm7r5D0r2Ywbv7slffR2R
6JjBuzvz3ljtu/QTb1UtpJWuVYRSwRsS9V612MW7RXo6UhHMarZk8t+hYfkt
nCE7BxVBKsrS74JhKmbw8Sw3Am5xnL2F1k+pTnMJLCOhmMtPV47MYqUmtQSj
BRbgc0GN+/QWsFvzOqv3C+xw8J/3YJRxN5N3Jyez6f7cOYRmHt86nnSLB4LC
mztIlaNo30SeKoWXDCv0XqSIvPmHvpR6X34iyg8KD0ZyTnoPYtmIhkGxFwKw
2S53+P7VGdy/e8PLVgkh+Hu4y8FYeQ7nyGqsnG0QgvS7CWZSmv/w3ylJ7Qhb
EdCdM/0ZcocTKr7qJRy9JwYiOyVjOh0EAMwchuKcxWH/kf2aL5t5QX1r1Id4
GWmoeFLawMvNQTt39qWyfjtRHz54vCJvhoeWdY675V2CDHBNagb4F5BpB/sS
XZIOy8KN2oxcCw0yrbgi8dCQvBx8vSC33tqOm9Zpebb1jQELrF5c+bXk/Tym
LYh06mazwkW5fUX2e+eYvH3OKmrh/sBxtLHbrTp4JwnC60s8wq+PoTxywVW3
dn643mfYHq00gVufyP9YfUIQvq/v2m9/dw43sN/2yDspBHvqdQ5LL07h4ZW5
QRlvReAlTk1rEuKD58uxaeFzYnBllVKa8RAfRNDVfdtLxKHoVKq0uzUJdjgf
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
EIgOXQ==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwNysk2AgAUx+GbYSPDHpXeRRrIwgs4p22TXVHPorAM8SI08QSIvXHnW3zn
nv/v3GyledRYiIgEh+yQ5Xg54n4xYtftLEUUPI3dFar6p33OJgPtRcvxYLco
MtGT1PQvu8cW19qrtsej3abEVF+lrn/bfba50d60PCP7lH1m+hoN/ce+IMWt
NtcKjO0zDnjS12nqv/YlaYbau1ZkYnco86xvcKL/2VdkuNM+tBJTu8s/LHMr
kQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwV0b8v3HEcx/HPuTtLLVoNPTEYmpIQpTjpYKCD4QxtbsBdl0MijR9pkyZ+
DDZB/Zjo2RkZpT+G+rGj/0CL0rVsfiX1uOGZ1+v5euf7Hb7f6tzYm9GiEEIE
M6hEAi+MP2IhXEVD6MUp/4QoVuwHtgZ84Tn8spVj3BZBs22HX+t9+MMX8M/2
DLO2UsRsq/xQf46v/D9PIs/7+W+9AhO8CGXxEFJ8U29x39Vv9Azq3Pr5mf2B
3qln5Lpbu/zIR+Wi+4VegzSfc2+VI/ydfMirZJrn5DbvktP8g4x7/rN+ZE/x
RvlUZm0D8lvho8o23iPX3F/K93xYDrgf60/wmk+6N8ohHtUf6936lt6hT+it
ntmTt7Ys6gvv4ef2Ev2VvmFf4pd6Leb5IxTb8vyn3oTvfBAntgSmCv8CSds+
v9Pf4i9fxj2zuD5a
            "]], 
           PolygonBox[CompressedData["
1:eJwV0TlMVGEYheELMyOLJgoooEEBKxrRWJnIJqiBRhIKaIgmyCKFDDpoYSNq
r9C4sSS4opWFhdQqsoj2KC4NoBFBE5SS5y/enPOeL3dyZ6a0LdnUkx5FURpe
Yi+K8Np4HlXYjrF4FM3Hougo3vDwUDWm7ek4a//Fb2MHHtg+2SrwliexaNuH
q7ZM1NhmeAztfIXfwTo/gJu2AuTYHvLPeiUmeSzhXWzDvJcv6cXo51k4Zpvl
cXTw3+G9PFPPn/G7/J9ejlu8EMXuzfyVnuv+SF/Qq1Dmdoa/s8f1Cn0kfD89
pV+wL8sSNNmuuR2W3fyczA7fRTby0/IFr5NXeK+s9fx7PYFTvNO9XHbwLrnq
niMbeKt87l4tL/N7bv/lQTTbBtyOyCTfrZfoLfqE3qD363meeSy/hM/BFE+4
VdpG+UX+Qy/Fdb41vK9tjm8J78TX+H1s8EMYtO3BTtsT/jX8x5jmKfy07ccN
2zYct33gGeE34n/4EHbhqe1b+B8xw/twAh/tmei2/+XDyMe47butFrP8Ek5i
E0EVU2I=
            "]], 
           PolygonBox[CompressedData["
1:eJwV0DdPlXEYhvE/xeCCiZBodJJebAm4OMniIhEORRFxQI0MkqCoiYuJSq9q
ouw4SrFgQVgsYPsCCKifABSwIudg/J3hynPf1/O8b968GafOVTYlhhASMI6t
2ILFpBAOY8byKn466EgO4QW3A/e4KuTgCf+VK8NH/Rp+ue/kX3IZGOKqkYvf
dl12r/hMDHNHkIen/DeuHLP6dfxx382/5rIwwh1FPp7xS1wEc3oLVt338FNc
Nka5GhRgnF/mKjCvt+Kv+15+msvBfe4YCvGcX+Eq8Ulvw5r7Pv4Nl4sHcacX
4bZeq8/Km3FBj+o7MaF/16tQsCGEev2M+dkuxTygD9q16wtyFtr0Yruzcqq8
TY7I9eaYftC8ojebUd/VL7/lS/W8+P81a7nT5kPvjcrFqNHv2O83z+uN5nH7
OTkN5fpF+71mgx6zS5MPycN8iXxZ3sVPmj+4ahTyJ/Uv/Ea5RL7Ld+iLcjba
9U3Ybl+hP5Zjvv2G/E7OxyP3ddiNdbubdu/j/w1jXEzfhwH9hD4vpyPinZe4
dW4P/nn2Fv+B+w+jO2HQ
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{32, 34, 544, 1395, 1153, 1354, 954, 1112, 1313, 795, 
            914, 1073, 1273, 676, 762, 881, 1040, 1239, 590}}], 
           PolygonBox[{{29, 31, 1304, 4344, 927, 1086, 1286, 717, 836, 995, 
            1194, 537, 669, 755, 874, 1033, 1232, 583, 630, 716, 835, 994, 
            1193, 536, 535}}], 
           
           PolygonBox[{{23, 25, 1307, 783, 1385, 1131, 1332, 902, 1061, 1261, 
            648, 930, 1089, 1289, 735, 854, 1013, 1212, 560, 766, 885, 1044, 
            1243, 606, 692, 811, 970, 1169, 511, 647, 734, 853, 1012, 1211, 
            559, 605, 691, 810}}], 
           
           PolygonBox[{{496, 24, 22, 1203, 548, 594, 680, 799, 958, 1157, 499,
             638, 725, 844, 1003, 1202, 547, 593, 679, 798, 957, 1156, 498, 
            637, 724, 843, 1002, 1201, 546, 592, 678, 797, 956, 1155, 497, 
            545, 591, 677, 796, 955, 1154}}], 
           PolygonBox[CompressedData["
1:eJwVzL0ug3EYhvGnLYupiTBI00TaWHwESW0GBgbp0g5t2gjtwIIugoVVGBEO
wGpUnTgBegYkdQJGnXz8Oly57vt+3v872WyVDpIRkUAFpaGILE+g4dDBXCqi
ixu3pH6JT1RtfbzYFwc/kY8xrn9g23anL8m/eNLrnB+OmLW/4VpP2M943d62
leWMnJb35IJ8Pth5Sv/ChTf7+qG8zPfuNV7VR7jnvsNNfZor7kX+5mfbgntL
P5FX+MG+yRv6KP+578rz8pHbmPyOLfutXpB/0NZrnPPdjP0VV3rYT3nN/mhr
8D8ixSiN
            "]], 
           PolygonBox[CompressedData["
1:eJwV0LsvX2EAh/H3R1F1qaG1oEkXTbC5/n4YsRkkhg5tMdQ1JJ3LH1AkaDu4
m7AZLe7pxYwWq0vcNiRiaPmc4cn5Ps/75iTnvG7ra+pNCiHE8AV5yEciOYRD
zD0JIduF77hCmxbTtlHLe7CFuH6AWT2L16Abm6jS9zHjLJPn2sMo4bf4pi3y
Bvt5SgiXvJUH/hvVfIk32rnO0+wBFPBTdDmf5Ak7yfkGf2+/sSv1v5jmGfqy
3Wy/cvbS7rUr7aGoexbzG3x1d0Grj75fv+At/AG/tARPtfuRz0/Qqa2jQvuD
Ke0ZH8NdTgj3ONY6+Kfou7x3wr23nnEe81xz9s4utMud7WGSp+sv7EEU8WuM
avO8Lvrn7p/zD/w/fmpxnmJ/Rh4/Qru2ijJtFxPaUz6Cs+i/af/wQ6/iH7GC
Um0H43oafwQx1UKA
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl01dsjmEYBuAOe9QeZ9Q4sUdLxwESe1QJiT3amqW1996boMYBJai9QyJK
jSIOtEZihxgxDpA4srneOLj++37er83/9fuexqZl982KjIiIqOQjZLqPb7JI
5slzsjsvyDTvlq15xCvzdTmAjvoaWYc7+kWZymb9iGzHJ70Zs/UY8vXF7NMT
eKcPIkdvxGN9F1FkmL/Lg0ygE82ZE/n/3i/pSxhMNKOc/ZCHmEhnWlCC0a79
lIfJogstKckY136FeyabrrRirvPKXNaXMoRSjHX2Wx5lEt1Y66wuRfoWWjPP
XIUCfRlD2WZuzJPwXCnNOPMfeYzJ5JrjeK13Z50eS7G+NXyv3p7Pehzz9apc
0S/IFJbr+2Ui7/VbcgjD9O2yCQ95ai6Q/cjVT4b3ynO+mm+H3+EDZczj5V9Z
LI/L87IHL5li3iPjw3vkjblQDuRt+DnzelmPB9w158s+5IS/X3bgix7PAr0a
V/UVHNCTwr3ow9mhN+VZ+F7KkhkWmhNiKj3ZYK7PvfD8acNCc3Wu6SsZQbmw
Z+F/gpP6NHqx0dyA++HZ0ZZF5hpc11cxkvJh75xFcUqfTgoJYeed1aRQX00a
FcIuOovmtD6D3iRSkRgqhZ10vQRn9JmkkhR231ktbuhrSKdy2ElnJTmrz6IP
m8wNw3MPz43ksNPm2twM+0uensxHPYOderOwC/oV2T+8U/aaT8l/6DeDfQ==

           "]], 
          
          LineBox[{325, 477, 243, 458, 351, 17, 369, 262, 180, 121, 82, 60, 
           18, 19, 20, 21, 4341}], 
          
          LineBox[{4342, 35, 36, 370, 263, 181, 122, 83, 61, 388, 281, 199, 
           140, 101, 37, 371, 264, 182, 123, 84, 401, 294, 212, 153, 62, 389, 
           282, 200, 141, 423, 316, 234, 102, 410, 303, 221, 449, 342, 162, 
           433, 326, 244, 459, 352, 38, 372, 265, 464, 183, 439, 332, 480, 
           124, 417, 310, 473, 228, 453, 346, 485, 85, 402, 295, 468, 213, 
           445, 338, 481, 154, 429}], 
          LineBox[CompressedData["
1:eJwV0bkvgwEcx+FaHX+BIzGpK8FicnbAIBISJWLQxTEwORbH5FgcYSuLI2Ex
YKhKDAZx1ECChASRIMLAgNXT4cn383vfvEubGxlo7k8JBAIj1IovW8WkzuRU
z7KpK/jQ3UR1CQ/6yIZZ0zu2jh+dsF3k6UGbyiUxd8w2MqpXbTl3vLiPbQev
tLoXbZBrbtyHtoVnou5tG+Keb/eJ7eSNaveUzeKKM3fcNjGnt2wln7qHZV3K
o15nV9fzq4MM6TT29Rhhltz53Ca/p4Zpdzbnep5e8hn2LJ24Hqct+btTQCFF
yf/C+wwO9ATthJjxLIeEXqCPFXcZT3qDPd3An76wEd4pdv8Dm/ZA7A==
           "]]}, Annotation[#, "Charting`Private`Tag$188529#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0kdwTXEYhvGjDRYYYRhdetNGsrESCxstPRFtgmGGzOjGRk3XGewxo0ZL
URO9WyuRKHtJSEi0FH538dzvfZ/vf849c+aEr1ifsa5XEAS9/bSisG8Q1PYJ
grE40zsIUhGONrsiuzp+HM5yaYhAJf+Fm4vX+g58d76Yv8uNxzkuHZGo4pu4
eXij78QP50v4e9wEnOcyEIVqfoRnbObn4y23C+2uKbW7z03EBS4T0ajhW7gF
eKfvRofzZfwDLhwXuSzE4Kddud1DPgIVXDZicZ3/yqWiXt+DX87v5R9xkbjE
5SAON/hvXBre64X47fw+/jEXhctcLuJxk2/l0tGgF+GP8/v5J1w0rnALkYBb
fBuXgUa9GH+dP8A/5WJwNeT06Tim5+n18lBs0jv1RNzWv+uZiO8XBPn6KvOD
XX9zpn7SrkRvkiNRrCfZrZUHyaPkNDnfrNJnm9v1jWan5zooPwt9H3ps6P2a
edxK85r7dspJyNWP288wN+gF5iL793IYUvXN9lPN1XqXXZg8R67gU+Rt8iT+
jvmDy0ICv1z/yA+QU+RTfKneLEehRB+M0fbperXc5dkPyc/lOFQ6vxiT0W13
2O5F6L2hiuvSk3FCX6I3yMOQ5p5buG5uCnpce4R/yY30XSeY1fxSTEWtXTuX
jU96Gf655ij/iktEDbcMjdxwbOV69Gmo0zv0HHzWB/r/WdxpvVxvkaNRqifb
FchrzCH6GPM/X0qI1Q==
           "]], 
          LineBox[CompressedData["
1:eJwV00dsjwEcxvG3yyaoGi0HQe1RlJaQqJloD9omOtFBG2mJxp5HtPbo4Gic
cKJma5/scbRqn6yDrfV5D1/P831+/Yt/39fA4pWZKyKCIOjmj8zoICiKCYKz
UUEwR27hQWQQHJB3bKMwyJ7Hz9n/yWTU2hfzZ3oc1vJxfq5Mb7PH6vP1QnnK
bYZcz1fKJPcm/bs9gy+UI2WxbZl85d5JpvE8ecx9mlzNK+VO9096IrL4dvdk
WcG76/31rPDfq8/Vt+oRPnNQ3rWNxmB7Pm+0t8pJqLMv4c/13ljHA4y3NfMf
eg5aeDUicch+zzYG53kR4n1sgrzq9tOei9e8BlE4bL9vG4sLvBgvbH2w3haB
ibZr/Jeehzd8Fz7bhmKHrQeibbX8Qfj7x0Xexiejnpfwl3pfbOCR6OW7p/PT
4e/N/br+W88Pn7dbCX9r76zP1PPlcbfpcg1fIXe7f9GHITt8Ju6TZCVfLnvy
ATKbF8tGPk9u41Uyxufr9If29PCdkENkga1UXnIPZArPkQ3uU+QqXiFL3V/p
/bCAb3RPkuU8So/TM/Qzepq+IXzGPnND/rEVhO9B+Pfwd/Yu+iz9hH0P/6oP
RzWPRTtbPX8Uvg+4zJeixRaPTeGzwGTbTf5XL8R7vhcJvk572eD22D4BV/gy
pOCW/Z9tET7wfeiAI/Yn4fuAJl6G17YEbLbFINV2m7eG/yfxkXf1fWbbTvL9
/Js+AjXh80dH21H+NHwHkOjnC3mzPUJP1XPlEbepsoqXu70J38nuQfAffLt9
Sw==
           "]], 
          LineBox[CompressedData["
1:eJwV1EdwTmEYhuEjXU+0YCTBhhmEsVDSdGHDTGbCxgQhiJLoCzMItnqviR6y
YYeVToq20Xsnerfj+hZ33ud+3v9kvnNy/nQrLi8oaxJFUYYff5KjaHNMFDXD
3rgouh0bRQNwlpfila4LlusSkKW7wv/JU/Cet4qPotG6ar6F/5B7oVC/VjfQ
LOPt5XS5UD4lN/fZffKd8Bn0sCvi5/Qxcpa8Rz+bv5bTsIInooP9OH5Czra/
KkeYyht5a/t8foxv5T/l3lgXrkULXSW/Kw/CeT4HOWiJKrt7+sG4wOciF7X6
JijWf+Dbwv1jv+5+eD7o4igXdfOQF86CA/YPwllxiZdhCOr0MZim/8i3IxkH
dQ91ObjMy/FGl46VuiQM1dXzWEznn/gO/OJ9sF6XihTdIf5IzsUVHuv5ZOv2
8vn8rZyBCt4Uw3QNPA4l/HM4l2vG8ON8J/8tZ2ID74gM+wn8tNzG/rD8WM5D
T7vJ/Ko+Ts6R94X7kxfJC/TvzK4o0K2y62+W8llms3Av5nheZJ7kI8xlfL45
3PXX5HiM4zPsM80SPtP8Yp9ijuWTzBr7IeZSvsvuj9kXE3QbwzthlvNOcld5
onxGHitXyG1dc8R8En4Panm8Xa6uki/k7+VuWB3e9XBe3XWeEM7Ev/Ld+Mv7
YZOuM9rpjvKn4W+MOr4IjbruWBPeX4zU3eCJ4Rnxb3wP2qNa9yz8HVHPF2MU
buqTUKr/Hr7z6IBjuue64WjgSzAaad7lVLMjjvvMi3AfuMaXIh+39E0xW/8j
fKfRCTW6l+GcuM4TPJ88XRX/6//Of6YlhOs=
           "]], 
          LineBox[CompressedData["
1:eJwV0Dk2Q2EcxuG/qTFFLUKyBHswJDEUqlSco0XCURiisQULIEFnbi0CSQwb
EENvisqjeM5339+95xZfZrE0V2yLiHkWuiKuOiLGnOXOiGx7RM3ZzZL+Ye8z
yIn2rI1zY2+Qo673sKx/2gckOdWa2gS39iZ5GnovK/qXXWGIM+1Fm+TO3mKK
e72Pov5tV0lxrr1qWWr2NtM86P2U9B/7kGEutDctR90uM8OjnmBVb9lHjHCp
vWt5GvYOaXc263zyboA1737tY1r2KHtakow7LdjX///wvOt53Zn27R9HazNl

           "]]}, Annotation[#, "Charting`Private`Tag$188529#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0sdvz3Ecx/Fvi3LQ1h5Ro2pdcBCrNRJ7VULESkRIdIjUQdKaHehEceAg
4eAgEV26bH+CPbtbdxzESJfH5/DM6/16vj/f/H6/7++TfPj4zpyYKIp+4fSw
KKofHkXx2DMiiorjoihV3tAzZJI+RebqB+V3fau8p7/3bK/cjVf8Gv62+Yh5
vrnMHOGBcy1yMart1iHFPl//be61H6ln6p16Ls5wDXoCSvSp+MBVoZVbghpu
Pfq4s2jkElHKTcNHrhrnkI8CNNmPQpn9dHziatDGLUUttwH9XCGaudEo52bg
M1eLdm4Z6riNGOCK8IgbgwouGV+4vvBu8VrPQB3XoS/HQ30TZvn9Bfof86B9
vJ6ld+l5OM891sfikj4TSc7k6T/MX+37zXvxRl9rd8ecaV5gLjfHYIe5Knyu
850yNTzD1Tu3Wt4Kz8jN+mxZqB+Sf/Xt8r6eIyM9QWbrB2R3eA/yrn5MntQX
ycpwH2Sc3CVr5QWf/USOw2Xn0vib5pTwP4dnzT/NLc4NmPfhrZ6FhfYVeizq
7btkGhrstmCOfZH+zxyDRP2o3mM+hYueeaqPx5Xw3tHKDer78U7PRgPXra9A
Y7jziEUx/4ybgMrwjtAW7h56uJVo4rZhCEr459xEXA3fD+3hHqIUZXhhNwnX
7OaiI9w7lOMlPxnX+XnoDHcM37hVaObSMRQn/Nb/+uOA2w==
           "]], 
          LineBox[CompressedData["
1:eJwV1GdU1XUcx/FrKrOdjdNQseHA3Z5iqak5MSuFENE6JYKg9SBHw6wHaamY
CkIBjrQ6dXqWm+ECKhuOdqeSJbhYek7r9Po9ePP9vD+/3//yv//7uzchY15y
dqdIJFLjT1l0JHI98qIikb74vauFmEgkRXeEz8F2XS0fhs/5BHTFW/py3Q1Y
w/vhD10n16fqjvJM7NDV8SRs5xMRhcvty9SdkBdiuX0V/Ea8yxPxp24n6nXD
sUM3CdFYoa/U3YS1vD9O6C7yuk/rjvG52KVr4A9jJ5+MGFxh31xdrbwIb9u3
j3fHOj4AtbrO9qXpjvMs7NY18kewiycjFu/o9+t6YD0fiDrdHpzUjcBu3RTE
YaX+gK4n8vkg1Ov2YhVW46C1BBRYG4wGXRmadCOxR/c44pGnP6TrhQ18CBp1
Xdz/DN33PBvlumY+Cnv5VPS2Zyn/S74YV/IsXiePljfJi+U75JVydPjMvU6V
eTMKrT1gbb08VO4uvySnmy18nLmVZ5knXdfVTOcp5g/WR5jFfI45L7xXczmf
ZXY2k81PzByzwvWn5EcxjZfZn2QW8ufMJ3gf83X+dzhv8kfyJfJVcrZcL4+R
N8tL5DvlVXJMOHtev9q8BUXWbkcP6wt5q9xkPYrP5D/yHFTqTvPRKOdP4lJ0
C+9H1yC/jLX21fBb8V54nmgO5w5ndGNQoXsKl2Gd/gvdbXg/3CdOhXOG9chH
Ab603hvF1u/C6XC2cFY3FpW6aeE7hw36r3R9UMLvxplw1nBO9xj26aaH7wgK
9Yd1fVHK78HZcNbQohuH/bqUcG5QpP9a1w8b+b04p4v2LDJ0P/FcVOla+Xgc
4KnhN8ieZfyf8Fnhap7DG+VXwnvjq3lseH6u/8ZMxCZrD1rLl++Te8qL5Da5
xb4YPov/zEfKJfL88B2RV8izzS7mFPNTM9esdl2bPAHT+UH7h5tF/PnwGxN+
88w3eIb5b/htMj/m88xu/Bozl6eFc8/Hmlv4q+G5y3lyHKbKn4XP2P/81uyP
zfbcjwRri3m73Go9ls/mv/AFqNG184k4xNPCc8O19s3XNcmvodi+7/gAbAnf
V7SF84UO3SRU6WaE+0aJ/ohuID4Izxft4ayhFEf1g7BV/xA6wrnCed1kVOvS
w31go/6YbjC28WE4r4tzj8/ofuUv4LDuQvi+o4bPRKI9b/L/5OsCfAFvlpeG
88jX8PhwDlx/3ByCD8N9WSuQk+Re8hK5Qx4vb5Mv2B8vPyunmr9ZG2WW8kzz
RT7U/B87GPDP
           "]], 
          
          LineBox[{1933, 1797, 1487, 2040, 1875, 1739, 1634, 2092, 1927, 1791,
            1561, 2073, 1908, 1772, 1667, 1444, 2007, 1842, 1706, 1601, 1528, 
           1488, 2041, 1876, 1740, 1635, 1562, 1445, 2008, 1843, 1707, 1602, 
           1529, 1489, 1446, 1447, 1448, 1449, 2009, 1844, 1708, 1603, 1530, 
           1490, 2042, 1877, 1741, 1636, 1563, 2074, 1909, 1773, 1668, 2105, 
           1940, 1804, 2134, 1969, 2162, 1450}]}, 
         Annotation[#, "Charting`Private`Tag$188529#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1EdwjWEchfGPUYLoBBszVsqERDe6jbZTZogudroVokSKEiVFGVZ69F7S
E31Y6GVG753ERp3Rfu/iOOc855/75Y570yZ5zsjZ1aIoau2flJgo2l4virLq
RlFxnSiKp/vYIbqKn8bfYGOpBi3Cd+Cr8RK9Iz3AvmJPsPq0DDuMXcMK9Ld6
EvWPjaK22Bispt5U/y3H0zZ9sZ/ZaV+jl+qdwuu7icMGYw/t3+SncgPKsM3Q
09yNkHvL0/E9crZ8xP11XoiVYe/cpfBkbJw8QG4n3+Jj3WzlK/TvvJa9Gf+D
X+YdeQ6fb6/k2+1T+bDwvnmK/SjfrP/lSzx7l7w2PNvt3PAMPSG8L7mFPMT2
yN13+ZnckNLtI+19sBnhNe035CL5vW081abmbv5inWiHvtTdbnfr9HI9kR5j
x+gmXox/wCZQDKXi+Xg2XqF3pifYcVpGaZROe9zkuDlj70JPsROUQXttubaz
eFd6hp2kTFpO++x59nO2bvQcO0W38BL8IzaR6lCc9/MPS6Cd+gp3+92t18/r
3SnBTUtsKPbC/kN+LjeiTNtMPcPdKLmvPBM/7e62XCp/Cp9f2zR9kjxQbi/f
5knhM8hX6j94XXsLHulXeKI9ly/Qq/guezIfHj6PfJH9GN+i/wuv47kH5A14
kX7B/bzwHKxH+P+RW8nD7JvlVPmln/nJX2CNaTk+S890P1ruJ8/CC9zdkcvk
z7bJVI9auqmGd8Z366vcHdQ36hf1nvQKK6S7eDleiU2hWMoK33t8E35J70Wv
sV/hd8OahN8JK8LuYRV6Vfge0CDP7hC+V+FvgN5Kr6530fPkhfIXnm+bxv8D
bVijyg==
           "]], 
          LineBox[CompressedData["
1:eJwV1ne4j3UYx/HHnpWGZK/WdTXtkYhCpcymWYg0yHYVEqUie3MUUSo7LXTM
c4zsylZkr6xDWY3X/cd9fT7vz31/n9/vnOf7fJ9fydadGnfMlCRJauYkqZcn
SfbmTZLeuZNkPp2Ak2uSZFDOJJnNj5UvlK/KlSRdaFPZfloFl6GF8Hr6uLnx
tB8+Rw9Zf5k/IF+Bb6QDaUfZQGuf5qvzHeUz+GH8Qmu20aWy02Zaq1p6d8ma
ya7FhXAWXA5/jgdbMwePw6txVXVYdkV2UHaTel+2SLZdtgyfwW3Uw651t6y5
7DpcGGfF5eM74bb4CdwHf2T9XH48v0avq14z/ABfli/Mb6D19CfQd3AGPWLd
Vf6QfCXOH9+HdpIdpR9Y/wytgbdHrv8FHY4v08XW7+CXy1PxWfO9aVtZW/4R
/h6+hf6UuB6fT16Ez8ZXiOvhl/CTuC8e4prz+An8Wr1q6qjsR7VTvkJ+Ltao
69VQ+Xz5RPlP+EF1TPaP7LDsZvWhLFW2S7YSZ+B2qrbPvVfWUnYDLoqz44p4
JP8m/2XM8vX5t+Vf8xP5Ya73NZ0kWyRbZ64bbR77KvYPLkeL4I1xr8xNpP3x
eXrc+n/5I/I0XIB+QN+QHaODrH+WPoR3RK7/JR2Bl1i7m6bJzpvrI38Jt+fr
8PfxrfRuxMVwDlwJf4Xb4wa4Hx7uOgv4FH69Xg11QvZf3H/ZLWqwbKlsjywd
X8Avq5vUCPk38snyDfghdVKW+IxjsoKxN2XP4ZrmOuNl+r/xq/i/9PrqtcMd
+Lr8/fwv9AX9qfRDnF+vOJ+TX0sr642ib+EzdGZ8J9oQ74v9rb+ATsKZnBcj
fea3/MfyxfKN5rvTFvEcxnfD5WlRvCn2orlJdAD+09pMcb9khWIv8Z3lQ6x5
nq/Fd5EvN/c7v5r/W+8V9ah+GdmLsQ9xCZwLV8Gz8ChrvsOf4E1xnqhTshVq
tMrhu4+hY9X35qaY2xxngzotW6n2ytfIL8peVQXUOPkP8qnyLfEcqjOyzD7/
hKywGipLk+2L/ym+hF9Tj5kpK2sd9x+XxLlxVTwbd8CNcP84U61fyH/K/6zX
Q68lrs1X4Ivx9fVS+Hf5s+az8Cdl6fFs0EG0i97xOGeta0ofxjtp19izdCS+
QtOt/4P/Sb4EXzb/Nm0fZxh9HT9Oy+FfaRtzn8azhAvqleLzxLkonxP3CDfG
A+JcdO1F/DT+l3iO1DlZVjN/yorG8yJbJdtvbh2+gjvGua8myhfLp8t/jb2s
MmSr1YF4D8mvyjrFWa4mxZkm/0y+NfaKOi9bow7GeS3/R/ZGnJcqRZ4q/1y+
Le6TuiDL5vudkhVTI2RrZYfizMH/4s6qnpnycSbH34FL47y4Gp6LJ1uzBM/A
2+N/qCqaKS5rEM+pfnZ8mi8eZ0LcG72R5prxj/Dd5DP5UXF/zB+OZ0m2VPaf
uX705TiT437jJ2gFvDXOLnPT6GB8MfaN/q30mrgWfVB/dPwOiD1E58Vep03w
H7G39L+hKTizZ+Zjn7+U/0K+w2xPvVa4Hl+JL8E3jOc0njF8hi8RZ4p+c1xb
vztep3+E38wnqmucQ+o2M9fKq8fvEvyJuWXxrsA7429TF2Xr1VH5Fnkm1S3O
ADVFvlz+lWwXflJdkuWMd6isZPy9sg2yY+Z+xplV93ge1e3mrpPXiPcRnhpn
Bp6Jd+P6qrKZkrJGssv6ufA5vlScyXw3vTHmWvB1+F20R5xLdDS+Guekdcfj
PI5zO37b0Hdoh3hvxXx8d1oRb4tzXH86/QhfoqX076D54nmJd5n+GNoHL4jz
hn+Kf0/+LT85zpI41+gs2R4zveJdEPuQrxLX5BvHs2cuN87gS6ux+i1xXf2e
cZ7qn4hzgM+qesb/Rb9SvCdjDb4TX49rxv7B06xJw7Pxb7ihuirLY+687FY1
TrZZdjL2Ls6mesV+VdPl6fI5st9xI1XV2tKyJvE86+fFF/jb4rcO313vBB1v
thX9H8+Hj3Q=
           "]], 
          LineBox[CompressedData["
1:eJwVzzlPlVEUheEDJMiogPIDSOACF38ARGlAEzoIMrRipSZCZ7iKkJigNtBB
4gBUzBERFW1pcGocmRNRKZ2QgIhReb5iZa/3PXvfDwrOtNW3JoUQpmU1K4T2
jBDumn2ZIbxOC+GrucClSiI9hCIZ5uf5e9wHXC//uGx3O1xMbnJvuG/2FvEB
ucTFZIR/yk9z6/iU/OcOuv/FFcst7i333d4STpPLXLGM8s/4+9xH3CBBDrnf
5UrkNn5n74e9ZZwuHVyJlNrL46u4R3jM3nM8gz/hRjlmp5Br4JJwDv6tl8od
/N7NpvcVnCFXuFo75dzZaA/H8WFcjfv1Tn2Wv6A36tf4WX1QH/d7L8wH3Gc7
Cb4FN+nH9SL9VXTnfcDsxttmsvdcc4+fN+Nmr3nR+xdzwPtpswavmQnvU2Y/
/msu+O5PfZWfw5nmVfM81+m2Tq/Qz/HDeo8e58v0I/oJ/jFuxU34Op7wmy/1
h/qGt2ap9B6L/h8uBefhP3qZDOJFN1vR34izpCv6hhy1l8+f5J7gNtyMb0Tf
1Yf0lOwQJt3vA+E8YqQ=
           "]]}, Annotation[#, "Charting`Private`Tag$188529#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0tdvjgEYhvHXlqBao/Yerf9A0VZrk1iJdWBEjO7axSFB7BFbUWokOKrE
qFGrVZFYbW1FiF17JtbvPbj63Nf9PN/3tf3eDpOzR2ZVC4Igzo96DYLgRsMg
eBMRBN1RyFPQC7/10Ziif8E3oj5u6t7q4nCKp6JjpNfoV+jqI173hzfDVP6S
b0JPd6N0+bouaKC7xd/JPXCaD3WTojvG03gnHs9XhvdI50t4mZxg/1dujmn8
FR9vn8OL+ebwb+Gj+T6+TS6Qu8rz5LVypVwgX5Uj3JeZVbrjup7mInOH7rZ5
xn6YmRq+v3ncPs88yZ+Z6fadzQR+1lxlv948xB+aETzDXMqvmeX8sHmJJ3rt
P7MFpuuX6/fKr/UT5PlyiX4Lj+dj+H4egxy+jj+WG9qXy+/lXjjLM9DFTaJ+
dXiD3rpA11KXwt/wrYhEhe5D+D2iiGciCVG4bfcx/N/jHM9CMqp5r1Z2qfq3
fBsa4Y7uky4R53k2+qC6+9Z2afp3fDsa467uc/j74QKfgb6o4b6NXbq+iu9A
E9zTfdEl4SKfiX5oivt2X/XJuMRnoT+i8cDum74PivlsDEBNn9PWLkP/nuei
GR7qvuv6ooQPd5emO8Hn8K68N1/DIzFQV0vXTpfJP/CJfAG/zHfyBD6WH+Db
5aNyrDxfXi8/kZu7eyT/kPthsV1u+B76EeEzFz4X4TNot8cs5M/NufYxZhIv
Cp91+w3mYf7IjOKZ5jJ+3azgR8xi/tIc5PW1zfa80MyyX2Hmh9+/3SR5oVyq
PyAXybv0ifI4+aC+GxbwDfyp3MK+Uv4p90cpn4dYN8n6dbpGGKyro+ugy+af
+G60xGPdL90AXOE5GIK67jvazdB/5nmo0v0Hu7Gwjg==
           "]], 
          LineBox[CompressedData["
1:eJwV1WWUVXUYxeFDGDRKgxKCdA/6WaV7mKG7jA9Kq8TMMKDSupaSShh0DCXG
ElDCJUgrSCrdtoBB+rwf9tr7t9/3nntn7jn/W6n/4LRBuZIkyZ87SU4XSZKb
hZOkBe0qlCQjqQ3lK5oklc2G6q/hD6kcndHd0rWk3XgU1bDbWP+2rhi11eXX
VdENw9dxPzwGf4s/wk/h7ngZrkmj8XR8Vn7E/Kx8W25Fr5vNx3v0afKL8g7+
RVyLb8SjzWrKTeQt/B2z6XwVPsmL40F8Ej7AD+Mc/g2+zNt5fQH+ON7Ih5tP
5YvwMX7DvD/PwLv4LvOlfAteaPa03ENerp8rb5BryWPkGfI5+VF75+Q7cmva
i9PNX4r3jF1cCzfF03EJaq8rqKuqG4H/xouoPJ3X3dW1oX04g1KpAl0wuxff
Be3HmdSBCrlWNbOX9f/gxVSRLuoSaqc/gLOott1muhm6kpSmK6yrrnsF/4sH
4Ey8Gy/Bz+CeeAWuTRl4Jj4vVzK/JOei9vgNswXyd/qO8iB5k36hvEkeq68j
N5e3xnXMZvAcfIqXwoP55LgGP4JX8x34Ck/3+iK8RlyXv2o+jS/Gx/l/5gN5
Vnx+vsd8Gd+Kl5o1lnvJK/Xz5E/kOnKmPEu+ID9m77Kcm1Lx97iT+WC8GWfj
urgFnoVLU0ddUV1N3Uh8Ey+jJrreulW6ulRZdwXnoQ74IB4X16cq9Gfcr7wq
XbWTl9LsHcLjqTM9ZKeWfpT+Fl5O1ehn3X2Urv8Bv0b17LbUzdaVoS66h3W1
4/nCt/GzeCzei1fgprgPzsH1qLruF3w/dcSH43PYGYK/jGcZ18et8Bw8U14t
l5WHyFPko/Iaeafc1X4xuU78P+MMMXuTL8En+B3z53h2nA98n/lyvg1f5CvN
m/G+eHu8l/l8/ik+w+vjLD4bH+QX8cdxL+AaXvsrf4A66Sfo35eP6LvIQ+Wv
4j7GDXBr/C4uR910xXV1dRn4Ll5FzXX9dGt0DeLs0/2GH6TO+CieQN2phN16
+kz9PZwT5wP9rstHXfTH8ETqEc9rPC9xv8V3SX/YyR//Q3vH8STqSSXj79Zn
6ZN4ZuI7iftJV4C66U7gydTQbhvde3EuUy9dKV2DeD5xrviudC10/XVrccP4
23R/4YLUHf+Iu9oZFucznoJTcFs8N85GGoqnxnkr9zYvjRvibPyWvDSeM/l5
eVzcg3x/3Id8e7y317SUB8hf83VmC/hn8bvCU/BYPgcf4pfwBr4XX4338vpr
ciH6PM5z84n8g/jO+U/m3eK3Ae+Mc8J8Ed+Mp5o1it8ReZ5+lrxGLi8Pk6fF
mSP3sVcmPgseh/PQC3h8/C7J68xb4YF4PW5EKbrruDD1xCfxNHrCXnvdfF0F
6qsrq2ukG4/z0vr4XHRDV4R66U7F/WVvBN4WzxN+EqfiBXi2vFY+zSvi4fx/
Nt8gsw==
           "]], 
          LineBox[CompressedData["
1:eJwV0T1PU3EYhvG/Awoaob5NIlj0K/QNP4IyCG4alBZodNBFnDFUhYEWZQEW
KAmJbpK22i4M6oKDRhISEiDBFxKNziqw8DvDnee+ruc5JzltPPug9/6REEJZ
1mIhbLaG8NpcbQth4GQI5/WEPsY3SYVLyF8uJv3cDi5KVtrdJ/kCf1SqXFL+
cafkNvcVlyQnF9yn+Cf8MalxKfnPnZY73Dc8FXm317l5Li6DXAeX5p7iZnnD
pWWPOxN9A/cdP4+8215ugeuSIa6Ty3DPcIu85a5yQ1wFJyTD7eOzksU/8E03
I/g9foEzuA+X8SV5iCfxlj5sfxF343Fc0l/qx/W7+pj+Ra+7u4aHcRXP63U9
qY/qs/q6+TP6ncxP+Hf0Xs8d6OekgXP242YZb5i79rfMR3jV/GC/ZK7gXXPa
vtu8gd+Zi/Yz5jK+rI/oRX1bX9Y/6nnPxPUr+gQ/pb/ST+j39IK+pjfc9eA8
ruGUPMZz+Ff0f+mf9T/Ru9weAgTnWpc=
           "]]}, Annotation[#, "Charting`Private`Tag$188529#5"]& ], {
         Directive[{
           Opacity[0.2], 
           Hue[0.67, 0.6, 0.6]}], 
         LineBox[{491, 492, 490}], 
         LineBox[{494, 495, 493}], 
         LineBox[{4346, 1398, 1396}], 
         LineBox[{1400, 1401, 1399}], 
         LineBox[{2165, 2166, 2164}], 
         LineBox[{2168, 2169, 2167}], 
         LineBox[{3333, 3334, 3332}], 
         LineBox[{3337, 3338, 3336}], 
         LineBox[{4335, 4336, 4334}], 
         LineBox[{4339, 4340, 4338}]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"feedback solution \"", TraditionalForm], 
     PlotRange -> {{0., 9.24999981122449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8671660615225625`*^9, {3.867166324570427*^9, 3.8671663726690426`*^9}, {
   3.867166414450679*^9, 3.8671664778244085`*^9}, {3.867166592164838*^9, 
   3.8671666252322607`*^9}, 3.867166676085995*^9, 3.8671667158202868`*^9},
 CellLabel->
  "Out[908]=",ExpressionUUID->"75d0ebbb-a5c4-4285-83ae-2efaaa799659"]
}, Open  ]],

Cell[TextData[StyleBox["Animation with General Cart-Pendulum swing up",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.716613652345023*^9, 3.716613661762876*^9}, {
   3.7166171500953703`*^9, 3.716617173133562*^9}, {3.716626783084096*^9, 
   3.7166267858131742`*^9}, 3.845482883460244*^9, {3.8454833355827293`*^9, 
   3.845483336286716*^9}, {3.847433954599126*^9, 3.847433968468281*^9}, {
   3.8474344191285405`*^9, 3.847434424821303*^9}},
 FontSize->16,
 FontWeight->"Bold",
 Background->GrayLevel[
  0.85],ExpressionUUID->"92227f2c-9494-4136-b1e6-9ea58c327cdb"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"AnimatePendulum", "[", "rules_", "]"}], ":=", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"DrawSinglePendulum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "/.", "rules"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "rules"}], ",", "1", 
          ",", "1"}], "}"}], ",", "t"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"DrawSinglePendulum", "[", 
    RowBox[{"cart_", ",", 
     RowBox[{"{", 
      RowBox[{"angle1_", ",", "length1_", ",", "mass1_"}], "}"}], ",", "t_"}],
     "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"width1", ",", 
       RowBox[{"density", "=", "30"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"width1", "=", 
       RowBox[{
        RowBox[{"mass1", "/", "length1"}], "/", "density"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"cart", "-", 
                 RowBox[{"1", "/", "4"}]}], ",", 
                RowBox[{
                 RowBox[{"-", "1"}], "/", "15"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"cart", "+", 
                 RowBox[{"1", "/", "4"}]}], ",", 
                RowBox[{"1", "/", "15"}]}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", 
            RowBox[{"Translate", "[", 
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "width1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"length1", ",", 
                    RowBox[{"-", "width1"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"angle1", "-", 
                 RowBox[{"\[Pi]", "/", "2"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"cart", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "2"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "280"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "Dashed"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"\"\<t\>\"", "\[Equal]", 
          RowBox[{"NumberForm", "[", 
           RowBox[{"t", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "2"}], "}"}]}], "]"}]}]}]}], "]"}]}]}], "]"}], 
   "    "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"anim", "=", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"DrawSinglePendulum", "[", 
       RowBox[{
        RowBox[{"x1overall", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Theta]1overall", "[", "t", "]"}], ",", "1", ",", "1"}], 
         "}"}], ",", "t"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"Tperturb", "+", "\[Tau]1"}]}], "}"}], ",", 
     RowBox[{"DefaultDuration", "\[Rule]", "5"}], ",", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}], ",", 
     RowBox[{"AnimationRepetitions", "\[Rule]", "1"}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.867166573285879*^9, 3.8671665873423815`*^9}, {
  3.867166767829652*^9, 3.8671667848062234`*^9}},
 CellLabel->
  "In[915]:=",ExpressionUUID->"66803c62-8345-4344-8e8d-d3f1eefd55b4"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 9.25}}, Typeset`size$$ = {
    280., {146., 149.98193418979645`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{{
          RGBColor[0, 0, 1], 
          Rectangle[{Rational[-1, 4] + Piecewise[{{
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {646}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1:eJwt2Hk0FNz7APDZZzDDDBpEoSSEylKS3Kd4e1MRkQgVaaFURAuilFaUNhWR
FpIlS9kipLRIkURvkTX7OphhhvldfX/3nHs+99znPM859497nnuuusehzbtJ
BAKBiOe5mcX/jwv5HQXR25jof6qggWW6F6yVPRDzvuXqthRflKhx5JXq2kCU
qZRX1FJ4CUm7yNCVhdeQpXb54re3b6NA/lGnQ8viUYPHzVJmTyKSXmrVnXs+
GVmIRRz3BemoaI/TvXD3LFRvnZ21bclzNGLErFgszkWdI+T8O4FF6GDD1Dei
sBTty5uoys0vR7tujVXsP1qB3AKGS9SMPqCtDv35dcOVKE1lGb+u5As65Vcy
u7eiBqV+b1vRm16L6kwZzr036pA4Xvd4b1A90iHbxfR6/EBE35e9knd/oh9N
C0CnphE5aa77qEFpRhHvLAQx2JJ9SFOK2oxGJFY6hGAXpC4LG8Y6bzTI9KTh
eJQ2cwO9GWnWqO1bysB5copvFCSaUWRqqYuCbDOKsvDicZWb0dWfnMtcjWYU
faRwHlevGcXtspWRPd+Mku3/CFktzSjbIrhLYmULKjaUraPebEHv5z8pIw62
oMf3y94v6m5FYXN+ftnS1oZ23h39HtrYjlYpSDel1Heg2TcWdtTW/EF89uq+
qcpOJBGUEn3sUydS7uAsH8bqbQr85V3ViVBB6+l2rN38DQu3f+5E/nxlP7sv
neh2ZV+RZXUnKkooppvUdKL53R28/P860UUD6eYV7Z1oKGjZp8L+TrT17fb8
lfxO9KD4m+o+bP+L9edvYE0ySgdKsWeSljn2Yz/HpxUrCTqR55XbEX7YydCz
LpXYq4cP62hMdKID35NRnKgT/Wv220Ge0IXmP+B6R5C7kJhuE0qhdyGt36zR
2DldyC63ap+hURcKjIxs/Li+C/k2hX7xuNCFvBb7lU2+7UI7T3nmXCN3o601
jo91VnejtUdWXtxW1I2MZqn5XFreg+bnUewKs3uQrHO3UY9eLyIIqxRnp/Si
B/cKC+3v9SELSHaNjO5H7a3XpyvCB9C58FP3CYGDqITh4O+N5V9euO4bdomM
UNk8aBB5Xfs8mIxNnPWgnBM8iORUrPZ3YM/OG5ItODmIxrViCiNCBpGn15x/
a84Noq8pD2tnXRlE0KO9c1vMIMrQyeyLTxhEkxkDXhtHBlFvzMkyb+IQcm4g
2zyTGELvFC/9x+MMIWNn9l6T2UNI9j+VU2U6Q2hgm/ad9SuH0Mefxtm1G4ZQ
kuuaSlfXIeTHGLyulzmEzJ/Huk6Th5HkznULvmwdRnVSY/0JqcMoMS8x97B4
GJU32aTkRI6gdqoodlyZh6h6KVErnvLQ8kGqrjfWK8vjw11s7JGSPZXYKmMV
iggr5h9P1E3loV3BBr8ise8IfdxBrE74YzvbNB7iZLXHqWTyEP/X/K6uHB5q
YuwyfJHHQ2+MHoScfontVToU3MJD0Ra3qbO6ecgtlhuXPoTzeTcM1gpw3nq5
D01iHuIe/B3fRRpFRtGp/iPUUWT//Nh6EWMURU/KjMvIjKLP8CRx/qxRJHUe
rJcrj6JDVB2f7WtGUe0Zuchwr1G0nDSVlnZ1FMWe+vOpNm8Uqdmf2bNGPIqS
FqgRstaOoUWCojuqUWMo86OzYVTdGDK+N/5JpDKOjtrFVLbFjaN8qsnHjyp8
NFHQ8D4rjo+ojGrLj4N8dGzz6i/d2O64bGeJIT5y6ZzfroWtWnrz4DosCqZN
7MXO43SzkrG0pMp5f7A9phnLFwzzUY3UBUYcj4/yf7n/kB3no4T0lU8vCvjo
XMisIIKQj2zN3hoBVmnSfyAU25an8aQEmxbwzV2MPWp4VhmJ+EjiWVvUK2yc
jgXJfIqPFic9CCjGDpxw4+eRBCjNWvFENl2A9qvXTqYxBUhnLDI4mSNA90z/
izxsIUDsU5oJKwIEKOytXyYpWYDGJEvKKhsE+B4ZfTogN4Ea7VO+s2wm0Obj
c1syLkygirjrvZvKJ5BpGWN8aGoCjaDOzdVukyjl1dtnz4onkfuqR8wrc4RI
qSjM6+BJIaoxda+wbhSiDWOaNw5i3zzrc7+CXeWdvTgTm6dxfKoau+T3qsph
7HyHD3sMm4SI+8GBFICVMG++l4s9/2Vz1toWIaK6v33zvU2Izowsb9jzR4gI
Z5/2jncJUY+BRkYMSYSIGSdfkskipKhd//4QVv/Rku8/sf+oXmr7lyJCrnfb
hnKwF6/ekoqgilDeOStNT5oItQeLwIwuQqmzJzeky4iQbz7fca6iCJk4jrlf
UROhad7IAYK2CMUeKjwX6yZCK3pP3192TYS+77EqrKkQoSOt7G8HhCLE3t7Q
T18yhU5TqtO7bkyhkafvfD5MTKFddiV6T7dPo1p+bv+l8mlkGZ+Rvl9LjF5Y
JvlsjBQjzd57enojYmQ47mBihwUi0yIAa80st76D3aYQ6FSM3Ttv6a4WbJhJ
wnFtnhjF2bCifLG5nkEPC7DFq9+fuDQuRm/mzrJ1mRCjSqG7pq5IjL42ZIhE
02LUcHT7XimxGDXKS39VwrZmF5tpYTttfZKXYfsHVGT/wfJ1gjvdsaS9P4tC
sMyHptdisS9PTvDcCAQYTKmbO4DV+J5lFUIkgBMpyl+aRIC9RQvVM+kECDha
VmXHIsCZJS6BPFkCRPeMat5UJEBpQUWdmwEBBi7cPqu5kQBznLwNB3cTYONC
s9a8UAIEjbOiT90hgMPxTd/pLwmgP3lV+covAtCDv+7kThOgeUou6Z4qEQpC
t/RqrCbCNWLMkjQPImharTyy6QoRCq/+fjHykgjWDWcEN7uIEHNJZm8qttUs
tq4UqzuoafkdezQxO7sXW2pvrk7sJsKW/C3Ti7DdKj4/HbEhp8/mn8auP3TQ
Rb+XCApuTtP/9RGhff2axPMDRMg00bU0GiJCRtimxBECCVwO3P8xiaU7DnPI
RBI8R2vWS2F3al8Pk8My5doLlbG7/4Qv0sW+KlgYZ4ZViPzAtMZGfVY+Moyl
sQ/+uEkiQYhdKTIlk2DsmmxSE/aButXj9ZIk2JQZ+iiXTQKRee7DeQokSKnq
exA1hwSOrvMfTM4nwVu74l779SQw/nercfphEjw2Gw6hxZBglsHl9zuKSRC+
cIFsQRuuq1LiIitJhkiVOgUPYzIsUOmtzdpJhlfKxKvECDI4KitstMsjw8Bs
PUZiKxlUI3fU5GJtxdF3P2FP+77Z1YrNbhvXFWBbt2iPs9rIYGkadWEFNmku
b/ZuLIPslH4V+9/Aut2WHWRI+2/FHMEfMoRU6NSlduF62cqRO3rIcLbrbJGn
kAzapXt0P02TIdNuMiBQTIblbZElWgQKvPJXl6jHnlPv//mJSAGbz/kZr0kU
UAg6ezqfTIEu0xPFm1kUKJz0mejjUuByoYfxeTUKuAVu9VXXoYCU5decSnMc
Z1mPB9hTYF/9OxO1fTg/cU3Qx2AKVHgXF/tHU8B9eOWzZVkUEB0rvC+opkDM
tMm1wiEKGITnnQlmU6FKalmA+RIq7Lv2fA/BlgrDOXJ5t4KpEFjnR9dLoQKZ
X7O1vI4KTfV3T96eoML+5vP+SVhBl//+59jwYXeP11jZSRvnamwCycy2CVsg
xzWfxNZqDC3iTlKh3/ijkgF2qNnG00pIBd7l2oydIiqML3OaODZFhYmWXxZX
pqkgXv6noZhAA1rUoE8fiQbMdgFJmUoDWVPSbSs6DVT/yL9OkqLBomsL+8hs
Giw3N+W6y9PAsmcjvFKkwTeW9iDDmAa7llLj7e1owHNo2RjvQ4Ow48XCrou4
Ttydp4ZJNGB9K1Ll1tCAwWy+IRDSgGJJlvypSQdxkGZosR0dhDlWownBdBjv
PeAVlkyHt0udbe//pENw0tu1uVhDZYNVn7A9V+INW7GJFCkdAdbpxDE16V90
qPCwZZlijTZqT+7GPjAmdUZjh+yDFlo10WGV3+heQjMdLl31eZLXQoeGjD9d
B9vo0NiY6BMzSofjs28MUAV0kN167pC/kA7p148PtU7TYV21t68diQGtTLeR
EioDTlptOqIvwQCFc6tH45gMsBYvGD8hx8DnlRQ4zmZA3vDAhKE6A/q9a4Vs
LQYczinrU7JnAE/4rHFeCAOOWsZ/XpTCgImIiBKjbwwIrgvMXCVmQHzQaPkn
AwkoUT9Y77JHAprfdfb03JEA0kH36RNVEjBf/idHgigJTHL3fTXs2PD4YhNs
YzOlZBO24ouszV7ss1dqjSHY03FmwnTs5kAnpUashpP/ciZJEhxIlz3byJJw
Ni0xupAqCTmO+a+i6ZLQRvjSu09CEl4nZWVUK0tC4sYbvib6khA6ctToPkjC
9tvOfLq9JKwyNys8tFsSLlqOb9KOlYS69ZkdrdWSoG7nHRRHkwKfrRocRzMp
KHRrSpLxkwKa522zD8lSYFxgEj5FZoJ3/WU9dQoTEsaa6iyxdXIGIfuwkgbh
mhFYZNvw+Rk2JSJElY+V/6Bx2JzKhBBqZWk4NsndqtOGwYSq4ncsRSkmjCmt
NWphMUHl6JttT9lMSJZ5/jNclwkGKQ9d3dcxoXjN9UYzTyas+xW2XfEUE2oD
/H7zYpnwVHdrd803JpxuW8l7xmKB0121qci1LFhsR6UfCGUBjdHDXp/Pghre
GYNPIyx4LcGt6MDmqD5xFmMfGZv2K/JYcHPDp1MG2PPu2+U3Yr0iw1aGYjcU
JHlkY/U7Pl7swNLijDgdYyxo2hx/u53PglwJhlr7BAuiSn2T24QsEP/MU2ti
SMNh/tSdhlnS0CxrKVc7Txrs9C9FVC2WBoPd3NDXVtIgH/fAN2+XNIx91fdM
OykN3yVeOibGSEOcPMfH7K00eKjuPVM/Ig1aOsV3/NRkYMBILpNlI4P7iVfF
kyAZ8B82+21ZLgOyCO5Pi2RgbmrgLekpGdBReBExF7v8zGCYPtZiUPuEOdbW
xfOQDdbL8IfLQWyYlM26KGxs22ujDOwNB3vf/mkZeNc67MglsMFC2XTsBbbU
Puz6FiIbJtYdcT5CYcNSc0/VaDobvA23dGRIsqHeTLkrVY4Nlmtbep6osCFr
U3L/4wVsmOvsM/RAnw2C/RNjccCGryHhwlub2ZAezSFGe7Lh/KN7tMtH2eCe
p80Mv8CGK92rp6tS2bjvbBvifmFDv7Vf644RNgREfy7fjxV903l8DHtW8fy5
M1ima9veK9jrCcgqFvtQUyCVg81Oz/z8EVtm5BXdinUJitet5rFhrKz2XfEo
G6IYErtSx9igtcl8+vY4G7Q59tItYja4xhdbFhE5cGWRVlAMmQPl+dey/Kgc
GP9nqtOazgG3nV8dKFJ4PzC5rFCaAzo3g/V9ZTkQ/cwudiGXA8ShYm6NPgd8
l+hcC/yXA82Hb7E0dnLANot0seo4B0qHD1KORXNg2mhp1qksDpgd57ldquFA
0MsXkjeGOVAwfSzvHkcW+KtNPZOXyoJxuIidZScL5P3ftEmhslBtm7bGPk0W
4peddXn0Qxb2q7j6j9HkYAXJKHKtkRzQuqSSYtzl4FtV26uuKDlIzHlZv6JI
DvS+zmlsb5aDauej8TI9cnCk5fMOU54ccL0Wqu8WycG9HmqQ6bQchFM+Od/G
+sy9ZjKOdTBxUnAQy8GhhwE7dmEvSl9P9sO+aq9aHo3lFTLeP8NqRVs4fcae
0SckNGJ/VxZ19GHDDivh56YchJSC44yB7H2nZvTLzP02435bqvYUdteQ/ckZ
N1/+c3XG1ZonHs2o5hpfOeN0dPnIjI3vupSmsRGtroliLCjmZMw4ai1RNKNb
wYvvM77V8BieUXZH4+iMO+44CWYUsDaJZ1zw3O+vdttu/fUkofCvKUmNf63b
OPOjJQ96d9b9Nbzjyl8bl9b/1UbvPnnGV1petBkXaxhIzBgzLrVgRvH7Dphx
T2yJ64xHalcfIWJDpd5cJGEjLNbiAvIg5e96Whp78ZGfhxKWUXfBQgN7jpqg
sRh7rCd4MBa778u2QgZRHpyfm4QHYK3ucG1bsdmXyszm0eRhdvABbQ9JeTjj
o8B9IC0Pfdtfk1pl5cHB1mdQXUEevF7N1k9cLQ8huu8PqB2Qh+t3A1ITbsnD
E8b8nrll8lB8tForvlcevraf3DuHOwu+3DHU4LjNgkqb7mbKo1nwnpxwT9Az
C97kO2zrW8qFMh9JhebjXCieV1pbW8KFwvqAq+9oClD+aP2PThcFqPJVncfI
UoDv5qPeWjRFaJb6kLPORRGGwtudH6Urwv9+CZXg/wCgyUK1
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmykiRJkiRJkiRJ0iVJkqykS5IkSZIk
SZIkSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy7/j/lrf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2fwmh1zyyKeAQooopoRS
yiingkqqqKaGWuqop4FGmmimhVbaaKeDTrropode/tBHPwMMMsQwI4wyxjgT
TDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskim9/kkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE820
8LfkbbTTQSdddNNDL3/oo58BBhlimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpvf5JBL
HvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX3fTQyx/66GeA
QYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyOY3OeSSRz4FFFJEMSWUUkY5FVRSRTU1
1FJHPQ000kQzLbTSRjsddNJFNz308oc++hlgkCGGGWGUMcaZYJIppplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZPObHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumi
mx56+UMf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQyv8AsPhFGQ==
                  "], CompressedData["
1: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
                  "]}, {Automatic}][$CellContext`t$$], $CellContext`t$$ <= 
                3}, {
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {684}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1:eJwt2Hk8FcoXAPC7X3fhXlxbVJQoWVKUpZpTVCQeSotKRaUsIaQilaSdVIpS
epaIUsnyShJFpBCFLNmy7679Xu5vvN+bz2c+3zln5pyZv0fF0cP2EIlAIBDx
fDa7+G9womvdyEVz0P/V+E8jxBqNCyfJmv4Xb0Y3zJCI5OH8X94HlW9Iirvg
E4A2W1TZBx0NQlYHmoI85oajiWi7mrm0KGTj1iZ72O8xUmM+XpfjGo+mEu3d
ePuTkEJ25LelgalIydn1nopVGkrxZJpp7c1ARqefThi4/YOKL5g9NfXPRrtu
dOyyvvoevfPYPJp+KA99lf87Z13IR1SfN36x9EkB6nWxstr9+TMSSifIdnYU
I3aO4LeP2FekdNg2kbikFMVmrwleGFSO9E0r9AoHvqPir4fbjuytRHvsBBGs
kh9osCFsY6pBFQo+rDpu/aQayQ38k8iX/oVS/Cx33j1fi9YSWsQMB+pQxeUT
b+r2NKBDkiyXwC+/0Q0bFVvxtEa0plH2hQe2143NrsA+mCIe1XvdiCwujxfc
xU7J9C2YxO7UranPSW9EWVs+3g3KaESyR1KtN2U2os+nGm6P5TSiU9fY1QkF
jUjjofEcu2+NqD7VZS/lZyNCFUWtjn8aUeyomksevxEFXV8/EUZsQh89Bbps
ehMi26W7XmY3IRND9wSKFM4TG+WnlZqQ6Rfr66PqTejTrXxR3/ImtGG3nnf7
mib02ljGQHCmCS1QGhNy3jehcGFVnupMEyI0ZIUYrm1Gx3IiLawCm9GyevbT
obFmxJ86R4vwaEEZCqNOBp0tyM/gaF7d/lZkuKNh3tlfrUjgaxOwwPYPqmwL
0OW1/EHJdknt1ONtKKig8sE4sR3Z64usu8Lb0fIEDVqdSgdiyGzP/vqqAznt
tSVy0zrQuwSrTVuxsv2bb9zFeqzcVPkLWxxoojD3dQcK4KxOiMPqPNbT1Ujv
QM3LtHJeYhurW/SG33Sg+sDIZytyO9CvRVaqvp86UNVXcnRmcQfKtlUy3zDT
gTIeXzIoEutEL/uH1S2kO1Hyage50rmdKOFqMc1mcSe6r/a4bfuaThSWf+LT
HttOFOxgGefo3IlOTS0MOhLQicJZwwXufbhO6QPD26EL5WuFWp4s60J1a/eE
n4FuxP9L42fQq26kOd73vX1dDzr06FXp5ooe9GiDb0mqYy+q6jUokuL3Is4d
4acTF/pQYvzQC4ZqP0IZ7fejP/Wj6oK6izqHBtBqz3WLypsH0G1u+fwRbPdL
hznyLQNonU0fbzU2csifsx87EM5kBmMfVqiLSrAW0htGpFsH0ORWx67d2MLa
kICl7bjPgRSOoHMA7e8si/3SM4C0PUb07/cPoKKANXsMRwaQ49WQoJrJASS8
V5bkJ8L9f72csqcOouUdk8pTzEH0bWT9pijuIHImXXc3kB1EyVYOi3SMBlHf
/WUNixwG0bIOUoRS0CA6vuLnFukng6iWStDxrBlE62o0JL8xh1BSsh1/yZoh
xDlz7meIxxA68VdKVuvfQ+iWrZtn9vQQemGnteT2rmFUsrO/2SVjGHXufnF/
vSQfUfZ5bp3jzkcqjrrs4SI+KmUdjV5UzEf+GY81d2HV99W8u479Ica1/IA9
n7apgY+to2ZN23/hI/1davPysaHPItYuKeEjTn9/0LIyPrqpY/Z5VSUfSXr9
zULVfHQrbeqvjXV85JossFgt5KNTxMjuzdhLO/Wu7MLefVGufgQbT3MvPIFN
28s4dBFbxlofG4vteXO6MRcrduS1UgNWTb/7HHGGj0xJKm2LRHzkWLbDfDNh
BJ2NDn1+jDiC1ANMaE8oI6hs94RDA30E+Rk/z+KxRtB8RUfuFokRNEY6l0HV
HkHfuh/a51qOoLiKbNFJ9xF0+u2v+OU3RpDDarn9o+9G0Pr32xT/6cX94FbV
aaVRxMovC1+zZRQNmohbEgJGUc2ivVIZP0bRB/rz6qNaYyipSxg9L2QM3SzZ
4lj5ewydfB6tfnnVOOLwNGNWnxtHiaezZYeKxpGs4Xnxy5PjqKzL2v4B9vJ9
5cRU7HqLQX4eViDIhZ/Y9GdhNzqxahI66pypcRTlUfpBH8v67m6/B3shJtH+
t2AcTbk32++fHkfHVyvubpkZR11Mu90HCRNotEz8vCp5ApEiCp/8oU4gCfuz
X+PFJtCc+QbDB1kTKOK7h2u72gTiBif+cV4/ga6ubNzbtXcCUbtkq11OTSCi
X+CZlpgJNE1pX2hfOIGmbll++d47gcaUMzzNpSfRcKqSXJ7hJPqdTc50ODmJ
vhR1bxNmTiKJ876M0u5JZGNIeB8zbwrdGbp63Mt2CtU8lVE3CZlCio6P63hv
p9C+OUtvtvdNofLILV6mGwTosnWpScJ1AWKnXE5MLxCgm1QT1qcZAcot9PFq
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
jFwulfKlwZVBOVcvkAa1qIE/J6eloXlxnbmMCPd55vnJGaupQ0NvsZuWPGIW
YB0Xrqwqw0bKHXZvw35j3aUIsFHXdeizHhIvZsyqG+rInnVaQigxa3FYhOSs
B8KLZGedvCVQnDX8jrbKrOfjNe1m9UrXuPLvuU+Lc2bNd5IpmMYuIJO+ibAH
T5jVzJrYFdo6q1a54tSsY0M+wllzpUtnZk2+9F40q7Rk9b+euT/wrzbPlQkE
Ag9UP9j8q3PAatKsyQbqlFnNbtvKzdrWd0Zj1gtmT9f8u19hPz3r9z3sHCJ2
oj0ngIQN3PJ8koGlpEWfkMRelbvOl8dyz/h7KmMtfX7auM7mXXVWZGILHa/w
iEQekO1bRy2wTiTnjwYUHnxK7r65iI7ftfWYgxSTB8GCoaUiNn5HnO9kD4cH
SavuEzS1eOBa8p7utpkH2vtaJZ4582BomC7bG8yD9BDNuZqxPDgxx0bVLZcH
2a0MIXGQB6Jn+ZX3lGXA5IR/ipaNDFxCehc+npeBErE++11pMsCpSFg+0CID
HbU7vo0pykJuK+PIzDZZuNebTaKFyoLHqPtD8c+ysGlmvoEMQQ7m0ysqlAzl
YJwT7K56XA56PKmRnjly0PQ9JP+dmDz8XC7WJ7ZNHopvX5Gzi5GHtuJP15LL
5OH/v6oK8D84Q+oD
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmSJEmSJEmSJEmSdEmSJEmSJEmyVpIk
SZckSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy74T8Vbf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBIEcWUUEoZ
5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDKGONMMMkU
v/nDNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
+VvydjropItueuilj34GGGSIYUYYZYxxJphkit/8YZoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskj
nwIKKaKYEkopo5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKbHnrpo58BBhli
mBFGGWOcCSaZ4jd/mGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa
6qingUaaaKaFVtpop4NOuuimh1766GeAQYYYZoRRxhhngkmm+M0fpplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZJNDLnnkU0AhRRRTQilllFNBJVVUU0MtddTTQCNNNNNCK22000EnXXTT
Qy999DPAIEMMM8IoY4wzwSRT/OYP08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBIEcWUUEoZ
5VRQSRXV/A9KmU2P
                  "], CompressedData["
1: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
w7q2ZnIQsplJEfo+bVAzkiMfnsRBuC3riR7f2gZajxp9FmI4iNn0Dzlioq1Q
/9TU2SOIgxAvTBYs2/8XTi7t04++w0E4LHVVyCq3wIZQxGV8jYPY6yW+00W7
GQaIJd+U0xzEtBzrpsf5JnB8LHdqnzQHseu8SgfH/QZ4YzBvdoCLgygWzvSV
ia+HdC+Tvpx2dqJV6wSv0LdayHG1IZdmsxNCF1pVO2lVkO7WFnbBh50IihS4
es38G9z7nslckGMngt9eGrAeo8LIIrv+zlYKIfDKzfCxWh7cVOHdP32PQvh3
9v+1KoiHVF3TktdCFKKjMu5+qkwAciw6JauL/3dn5itb/Y2yUOo2OykhYzIR
Ky3iYmRZjHbF9HCT/pCIG2/Lj++xKUUmLh5mTY4k4oFw98K166UoTFS0JRV7
k87OuFT7UqQu7P7fXewRHi806FiKomJ0/xhit1wntUi4lKLtCeGnd2InaiXa
Xb1Zik7JmP9mOJAIv7p9fv23SxHV9m9VJLZ8rUrQFU/c/4BWxWHspfyq273e
pehpeXQxzZ5EfI5KS2vIKkW8193HjG1JRO6cRlZRaylK7b95sdSaRNjmF3hH
ryrDdeNzYflLJIJzWEnUQaEM3cwSFU84RyK8T8qLfJksRy8f64rXqZII8VFq
wc2sb0j2uVJIAT+JKLJTb/e+8gNtKdlhZzHJRuRuPBpJE/iFnA4Z/CisZiOy
bdnjv07WoOzz4R0DF9kI/pnFystn6tGN9Rb8/4aW0f3gadGsxAak811Bbg33
MnqwxUvrJq0JWf99vGSxm4Uyrn8+7bKuBRl8CNASQkvoype+p8qNrejcI3i0
zLmIRtiONjne60D7XOn0xz8WkIdcu6b+oy5EU7LkUvSdR6Jfu//GFNDwYvPN
ekrMIcv1P9sXO7pR1ZM+0qaZGbS6okzesbMbkZIWW4KmZ1D7eUlfGrZcFjmb
C3t329SfU13dqLDA0//B1AySVti7uwKbv8b+/NLkDNKy+e58iNaNSqfrFW9j
Cz9oogh2d6O9Hr7d9owZFDzhG0jq6UYLgRuDLk3MoOn4tlX92KqXHOTNxmeQ
4rl9ubUj3SijlXR0om8GTT3tNf443Y3GKHlefq0z6Ab1Q280qxvlrnbqFaqb
QTK3CZvbXD1INn+7S27FDLrQPeamd64HKVkF/LOymkGBXJ5sPnk9aPr7Be6i
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
doLl4uXTt0K6YepCqdS1D53wP4XFLZI=
                  "]}, {Automatic}][-3 + $CellContext`t$$], $CellContext`t$$ > 
                3}}, 0], 
            Rational[-1, 15]}, {Rational[1, 4] + Piecewise[{{
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {646}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1: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
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmykiRJkiRJkiRJ0iVJkqykS5IkSZIk
SZIkSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy7/j/lrf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2fwmh1zyyKeAQooopoRS
yiingkqqqKaGWuqop4FGmmimhVbaaKeDTrropode/tBHPwMMMsQwI4wyxjgT
TDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskim9/kkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE820
8LfkbbTTQSdddNNDL3/oo58BBhlimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpvf5JBL
HvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX3fTQyx/66GeA
QYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyOY3OeSSRz4FFFJEMSWUUkY5FVRSRTU1
1FJHPQ000kQzLbTSRjsddNJFNz308oc++hlgkCGGGWGUMcaZYJIppplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZPObHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumi
mx56+UMf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQyv8AsPhFGQ==
                  "], CompressedData["
1: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
                  "]}, {Automatic}][$CellContext`t$$], $CellContext`t$$ <= 
                3}, {
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {684}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1:eJwt2Hk8FcoXAPC7X3fhXlxbVJQoWVKUpZpTVCQeSotKRaUsIaQilaSdVIpS
epaIUsnyShJFpBCFLNmy7679Xu5vvN+bz2c+3zln5pyZv0fF0cP2EIlAIBDx
fDa7+G9womvdyEVz0P/V+E8jxBqNCyfJmv4Xb0Y3zJCI5OH8X94HlW9Iirvg
E4A2W1TZBx0NQlYHmoI85oajiWi7mrm0KGTj1iZ72O8xUmM+XpfjGo+mEu3d
ePuTkEJ25LelgalIydn1nopVGkrxZJpp7c1ARqefThi4/YOKL5g9NfXPRrtu
dOyyvvoevfPYPJp+KA99lf87Z13IR1SfN36x9EkB6nWxstr9+TMSSifIdnYU
I3aO4LeP2FekdNg2kbikFMVmrwleGFSO9E0r9AoHvqPir4fbjuytRHvsBBGs
kh9osCFsY6pBFQo+rDpu/aQayQ38k8iX/oVS/Cx33j1fi9YSWsQMB+pQxeUT
b+r2NKBDkiyXwC+/0Q0bFVvxtEa0plH2hQe2143NrsA+mCIe1XvdiCwujxfc
xU7J9C2YxO7UranPSW9EWVs+3g3KaESyR1KtN2U2os+nGm6P5TSiU9fY1QkF
jUjjofEcu2+NqD7VZS/lZyNCFUWtjn8aUeyomksevxEFXV8/EUZsQh89Bbps
ehMi26W7XmY3IRND9wSKFM4TG+WnlZqQ6Rfr66PqTejTrXxR3/ImtGG3nnf7
mib02ljGQHCmCS1QGhNy3jehcGFVnupMEyI0ZIUYrm1Gx3IiLawCm9GyevbT
obFmxJ86R4vwaEEZCqNOBp0tyM/gaF7d/lZkuKNh3tlfrUjgaxOwwPYPqmwL
0OW1/EHJdknt1ONtKKig8sE4sR3Z64usu8Lb0fIEDVqdSgdiyGzP/vqqAznt
tSVy0zrQuwSrTVuxsv2bb9zFeqzcVPkLWxxoojD3dQcK4KxOiMPqPNbT1Ujv
QM3LtHJeYhurW/SG33Sg+sDIZytyO9CvRVaqvp86UNVXcnRmcQfKtlUy3zDT
gTIeXzIoEutEL/uH1S2kO1Hyage50rmdKOFqMc1mcSe6r/a4bfuaThSWf+LT
HttOFOxgGefo3IlOTS0MOhLQicJZwwXufbhO6QPD26EL5WuFWp4s60J1a/eE
n4FuxP9L42fQq26kOd73vX1dDzr06FXp5ooe9GiDb0mqYy+q6jUokuL3Is4d
4acTF/pQYvzQC4ZqP0IZ7fejP/Wj6oK6izqHBtBqz3WLypsH0G1u+fwRbPdL
hznyLQNonU0fbzU2csifsx87EM5kBmMfVqiLSrAW0htGpFsH0ORWx67d2MLa
kICl7bjPgRSOoHMA7e8si/3SM4C0PUb07/cPoKKANXsMRwaQ49WQoJrJASS8
V5bkJ8L9f72csqcOouUdk8pTzEH0bWT9pijuIHImXXc3kB1EyVYOi3SMBlHf
/WUNixwG0bIOUoRS0CA6vuLnFukng6iWStDxrBlE62o0JL8xh1BSsh1/yZoh
xDlz7meIxxA68VdKVuvfQ+iWrZtn9vQQemGnteT2rmFUsrO/2SVjGHXufnF/
vSQfUfZ5bp3jzkcqjrrs4SI+KmUdjV5UzEf+GY81d2HV99W8u479Ica1/IA9
n7apgY+to2ZN23/hI/1davPysaHPItYuKeEjTn9/0LIyPrqpY/Z5VSUfSXr9
zULVfHQrbeqvjXV85JossFgt5KNTxMjuzdhLO/Wu7MLefVGufgQbT3MvPIFN
28s4dBFbxlofG4vteXO6MRcrduS1UgNWTb/7HHGGj0xJKm2LRHzkWLbDfDNh
BJ2NDn1+jDiC1ANMaE8oI6hs94RDA30E+Rk/z+KxRtB8RUfuFokRNEY6l0HV
HkHfuh/a51qOoLiKbNFJ9xF0+u2v+OU3RpDDarn9o+9G0Pr32xT/6cX94FbV
aaVRxMovC1+zZRQNmohbEgJGUc2ivVIZP0bRB/rz6qNaYyipSxg9L2QM3SzZ
4lj5ewydfB6tfnnVOOLwNGNWnxtHiaezZYeKxpGs4Xnxy5PjqKzL2v4B9vJ9
5cRU7HqLQX4eViDIhZ/Y9GdhNzqxahI66pypcRTlUfpBH8v67m6/B3shJtH+
t2AcTbk32++fHkfHVyvubpkZR11Mu90HCRNotEz8vCp5ApEiCp/8oU4gCfuz
X+PFJtCc+QbDB1kTKOK7h2u72gTiBif+cV4/ga6ubNzbtXcCUbtkq11OTSCi
X+CZlpgJNE1pX2hfOIGmbll++d47gcaUMzzNpSfRcKqSXJ7hJPqdTc50ODmJ
vhR1bxNmTiKJ876M0u5JZGNIeB8zbwrdGbp63Mt2CtU8lVE3CZlCio6P63hv
p9C+OUtvtvdNofLILV6mGwTosnWpScJ1AWKnXE5MLxCgm1QT1qcZAcot9PFq
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
jFwulfKlwZVBOVcvkAa1qIE/J6eloXlxnbmMCPd55vnJGaupQ0NvsZuWPGIW
YB0Xrqwqw0bKHXZvw35j3aUIsFHXdeizHhIvZsyqG+rInnVaQigxa3FYhOSs
B8KLZGedvCVQnDX8jrbKrOfjNe1m9UrXuPLvuU+Lc2bNd5IpmMYuIJO+ibAH
T5jVzJrYFdo6q1a54tSsY0M+wllzpUtnZk2+9F40q7Rk9b+euT/wrzbPlQkE
Ag9UP9j8q3PAatKsyQbqlFnNbtvKzdrWd0Zj1gtmT9f8u19hPz3r9z3sHCJ2
oj0ngIQN3PJ8koGlpEWfkMRelbvOl8dyz/h7KmMtfX7auM7mXXVWZGILHa/w
iEQekO1bRy2wTiTnjwYUHnxK7r65iI7ftfWYgxSTB8GCoaUiNn5HnO9kD4cH
SavuEzS1eOBa8p7utpkH2vtaJZ4582BomC7bG8yD9BDNuZqxPDgxx0bVLZcH
2a0MIXGQB6Jn+ZX3lGXA5IR/ipaNDFxCehc+npeBErE++11pMsCpSFg+0CID
HbU7vo0pykJuK+PIzDZZuNebTaKFyoLHqPtD8c+ysGlmvoEMQQ7m0ysqlAzl
YJwT7K56XA56PKmRnjly0PQ9JP+dmDz8XC7WJ7ZNHopvX5Gzi5GHtuJP15LL
5OH/v6oK8D84Q+oD
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmSJEmSJEmSJEmSdEmSJEmSJEmyVpIk
SZckSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy74T8Vbf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBIEcWUUEoZ
5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDKGONMMMkU
v/nDNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
+VvydjropItueuilj34GGGSIYUYYZYxxJphkit/8YZoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskj
nwIKKaKYEkopo5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKbHnrpo58BBhli
mBFGGWOcCSaZ4jd/mGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa
6qingUaaaKaFVtpop4NOuuimh1766GeAQYYYZoRRxhhngkmm+M0fpplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZJNDLnnkU0AhRRRTQilllFNBJVVUU0MtddTTQCNNNNNCK22000EnXXTT
Qy999DPAIEMMM8IoY4wzwSRT/OYP08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBIEcWUUEoZ
5VRQSRXV/A9KmU2P
                  "], CompressedData["
1:eJwV13cgVV8cAHDvPaM0FdFAQpTKCqGca5VdSfoR2orsihRFw45IRkXIyqqs
svq+Mlp2iMxn8xDP9nh+x5+fe88995zv99x7vkfkoqPxFRIbG9t/HGxsNhrq
sUffdUG9Os+Fx6Vj4PaBGcT7vgual9+0Tn8Zg9t5Gs7d2A1+pprW1DEQpQ+K
3cvuAufVG0aPloyB6aOSrK25XRDQ5acvUTgGDWHF6/PyuoC1Y9aK6+MY6CeF
VJeUd4HF5Il9nyLHoD/l5O78xi7w99F9YHB7DL4fP88V29cFSqbRwuX/jQHN
ye7SrekuWNju8nmX8hh0ukU/p8rQILBStiuZOgoRWaKHdlynQWN57tY/R0eh
O/Fj5eNEGixF9XA2/BoBHitLHmYbDaID7kQVHR+BCD+rJXfebhjMG3B9W0+H
za2bn9te64aXOg1SnhvowPL57kAp7Abr+dNLoXrDQBTK5qLVPfC75fDpw4+G
QF/+SfB20x749X4Pq6p4ECJW1wqHx/VAldSGR1FTA2BbdP5xymAPhBNf2f5J
DYC/efXHIZ1ekH79QaqAtx+4RMaO+if2wsjELRHE6oWAeWXPQGYvOBvX9vsN
9cBP4yD5BcM+6PRSzMz50w3rhO8c6H3ZB68mbCwZP2gQkmvkbtnXBxpytMqg
L12w9eXlovt7+6HAsTu36H4n5Ne/WC706ofNj+/Hfu1rg/rEJ0RhTT8Yf983
jZz+QvAjHc5x/gE4ZrCfcmd3M6jf2f66x2wA5l5KX8zc0AQbns5+lIkYAEnr
Yq0/cg3A09Bg6lM1AJqOG8o8Iuoh7ftFuSS2QWD20s1ciDro+jVsZykzCB7t
VSopCrXwWVeyNNByEO5Q7LQnJquh1dxff4v/IHx+mkLatbMaWNQnI4M5g7BL
YP/1DEYVTH69+oy3ZhCm7HPad+2rhtGSE1I7sd29m1x1sTWf6ZRKYRvptgk5
YT89dvysEnZzamd9BLZT5+VJDeyoZ11hJdie5/wDjbBXL3VY9WJLKY8XXcEu
TmlaL7e/Gq43h414YHvcKBu7j731orNgOLZueQqrClt6s8hmj1o83vjJ4V6Z
akjT+rPzct0gZA87ha4/WA3RhOgxg/pBsH0RNK6nVA1aHeE+B38PAu/tNM4X
KtXg2+d7iqMRjzf60Akn9WoAqerApqZBeC1ccCFUpxpSxgflU5sHIZK/umTp
eDV8St7YPtUyCMp9D3LcT1fD2gcapeqtg1Cwtuee0Nlq4DRSGwxuG4RHLrb8
I+erISGTObWncxD4b88FkuyrwU9WeFMFbRBSBOs+F7hXw49YQ8NLvYOQ2fLu
Aq9vNYg9dMwlDQzCz3mbXTzPq+GU2anBqzOD0Hs2xNkc50fKQDiFzDkEHPnB
DnTrGrBLGHnYxjcELySdU13+1UBO+a6BZfEheBi7lqR/tBZ+tNJXuykOQfFV
jqz52FrYr/HxrYfpEAzIL3C/OV8H2u5+2htuD4FYNFKja9aDy5RWsd3LIfC7
n6igfOw3ZP7Y3lJDHQLehDznzmsNwFzlI+M0OAQimjE0sZRGGF7PsfnBpmHY
E5w4asD2B7LYTKWkdIZhe5uw6HBxM8i4CjbTvIfhrFnq9N0Xf2HVbTuBURgG
jQOGW1FEG4Tnx/15QqaD7BGT4NDMDvh4xUltWZcO2pe/iDMdusArMInLLYIO
G1zFxALDaFDIv2bhJXbo7vJevmc0+GoRPkrFdhHUSo3DNjyn3t2HvZTM5iAV
TgMesU3N3JF0uJuyoJCPXfqOs0Ya+yBFjk39OQ3srZTAHXtccHu0aQQN3Ixm
c0qxK7LmVOwiaeCbdDRzXRQdRqp+9HlH0eBqidEVxgs6jlewp8UbGihyLvU1
x9DhrGvxU5UsGkxw9Eh/iaPDM4O57TsKaMA8EaaZ/oYOjR/7tpPKaED6odAh
94UOt57HHs+S7Yb6TSpuMt/oQIsdsq441g2ubH4mClV0uNCUOzti2Q0bW3vu
qP+mw9fmNRMiN7vhQirln0kLHUxVLu6/EtANp+13/w7to0P1/Ppxvo/dIDz6
Q3xkgg6WtwI0WD3d8HTTjjWXWXR4ke+/R5CnB9zPJifPc4/AGmp1urNaD4hz
iW5KPDEC3w5UZIcp9ELcLlkWNXoEEkUb322W64PytaU2F/tHwH+f1xsb+X5Q
D5y7G6U4CvRuXf2NygNgerwwzDlgFFJvsjgDNAaBrzqKNbYwCmsHZpN9XgyB
f/1xGV/nMTCIou3gnR2GSeaHnwZjY7B5eK/r6TMjcHHhcYqR8z9Ives87F44
CidzbLijFv7BhRqF6ULhf3C+9BPd1HAcQiJFFg3OjMMFefk0/fhxQCKRAvzC
ExBY0VO/d34cQsWPj1H7J2D3I2HKRmICKlgbhky8GSBtkV4nhp2Uv8vVG/ux
vk2cMrbMAwtKFvY2YzNHI+w7w/5P/2LTHO+qXcKWGEsT5HrAgF+JNetuY3cE
Qpo89s/DbRnx2PqzNWVB2P0yHwx+YccUZnX0Yb/3Mhqdwu79dXZO7SEDKhj3
rJ5rTIDnzmtjBT4MUDkxIaioNQGOCm21BwMYYNf1RuqP9gRsHX7y+t0TBsj2
hfvePjYBQ+PG5ntDGXByw969xXoTwHA++Uw4igElhW84SEYT0B8Qf4f3NQPU
nCa3Hjs5AXFfx9evTmYA76nRkaYzE+C0b/TVRA4DrN82Jly3moDDMSd/t3xh
gHr3U1WOKxPQDI7RX2oY8CZgKv/N9Ql4e/djZ2o7A8QYL20dIyZgi4b7qUDF
SbwPbf1C/joBez/E1OmETIJGxdkzlmMToK0Y1lo/MAlBoUff3tvOgDTPsxXb
iCk4/ifDmXWWAWUPZ35KF03BoKy/K1ssA8TT3pZ5KExDhKbxsjeNARz9bl1/
sqbBJ1is7v7uSUhZeFu0RWIGQiJa9szYTcIFdi7b9bEzwEo8rSwzMQnpkeeL
JG/Mwpk9exVF7kxBU4fpdmuNORhO77mayDUNm0XLbHO550Fwq1JncPQ0yCf3
DS78nIepDX/030nPQIFynebWBwswMtBXVfVjBjwGPK72H2BCQHCkjfjPGXil
aK+nJc0E1U9unJ7Yak0tkgnYemY+iQ3Yv/sTKWwyTGC3LtXc92sGhmWq/1pi
59Qf6H2Ize95OqsI+6nJRQn5yhnQuiFs5CbLhCdzRo7d2LbJVp1yckwYPj9V
FFo1A6FPeS6OYc+XVJVcb5iBd7tcz6qp4PZyahHHWmfgdFRYrJ86E45oN2mK
d88ATSNRrEqHCdJHRMvZh2Yg6mRH/5oTTPjmmKDwWGQWdjeztboFMOGUxMC5
WOzX74TtQrFXq2oGfMT+kzG9mIb9Ji0/txa77K7HkzLs5lvqnUPY27fnCnZg
W73qWU3ZNQth/q8yZ7HvvTY9p4DdxVZTuTeQCUnrJPKuYs+/KRu2xA7uNVnz
AvuXjSdXKDap74BnqNgsUIajukOeMGHLeo/N/rtnId7qi3pwCBM2B8hXe0nO
guuknFhQKBMCzQ0yb++dhcEj7L7+z3A+3m7RZ5eZBTb+bwdEoplASSZWhSrM
guZg4PfcWCYcOz/fI6Q6C1oeL05pJTLB/atjeyYxCypxrypr3jJBVCzMvcRt
FsaXNzYndjIhO9tBTfHdLHwWUurs3LwIhwdeMHgHZqF5D9p88+giyIx2aJgK
z8H4rfm7Jm6L4Lo1R6jg5hzYO1vbR5QsQr+kW9DAzzkoCqGrflhehOUYWmeD
yDyYm37RcT2yBLFLVt033OeBEeLanue6BETswcr8unkgTWoLovQlSOc+Oi7u
tgBBSTs+Jy0vweAXyhYlISaoHQ1PqlVnwYIY9xXvCrwuLvHXXnRiwYYKVf1w
x0UwNvObGPNnwa827V2zAkvwco3T97kgbKbKrcw3S8DzLHz6hScLhMP/JM3u
Z8GZUR3isCULljXTKGwBLFjX908v5wgLaEVr7olh33o2K5aErSdiMaeDbVj4
fSkC+63LSxd77IhEw0Y/bPusHyOh2GeNfNLvYHP87rfOx07JcfGywy4aZpkv
Y98YypY4gX04ut5IJ5AFAW1ffshjL9dd0AjFPuf02pof+6GSykfbYBa4yITa
LKji68FCPFqhLFg0+3C5VYUFjqs6jguG4/eufnymUJkFXf8duzETwQJ11knV
yEMs8D9376jkKxYIJgoH31NkQRhRVWwWzwJ52Vo9q4MsyLDtawhIxuPcFeGh
KMeCuX93nhSls0BR01GES4YFTNnzwk86WVDQ6+IWJMCCrdufl8lvXgZH18YK
PtYSeLpInk47ugwmey5cf9m1BNrRFq/o7suQI9pgvIW6BJJ5UYmKX5aBIadz
8NaTJZh8OGDKxs5GreAY/ldmsgRJ0cqBghJs1Au0oZo5viW4et0ylK7LRj2r
YLiDq24Rhj8+Jl2yY6O+MzjiMPR4Ecan0zZ+eMNGfaXfffg6iwmFrt9ZfS1s
VD6N7MMR1kyw3JfY08RBor7RL/mX1bYAnunHIjplSNRGz9blpmMLIMby9Bsz
J1FNgxWtNVPngbyq+wnjIYkavDZ97yHWHPh8NJn6m06injqfL7tKbw6Kp+Je
RtaTqGf3hWTyBs3CnRdVMXw8ZKqy1eaBccUZsN+Tn2iuTqZ+Vn16Qm79NKTP
065zW5OphwMOnTXbMgXMMWH3OT8ytXW/6/QA3ySYvG6I5fInUws85Ck3seWO
7i/bgv3a32s9G7Z5954hcezxKQ2BIN5JCHf5uU4B+2jdnZ0C2MnT6+W0sAlZ
SYnEzZOwurPT/SK2kYyDbPGmSeAIIKhe2B86AhQaeCahYUSG4zV2Rcs9+ZGN
kxDw2/5qVQCZGrsje+gv1yRcsU5VZgbi5+2/+35jMeByHdyVfEKmXmqKW5c9
zYCe9rD9p4Px/LZ/9XgxwoDGL3wc09FkagqEvDuC99eNaxpmziaRqepiru8F
FBjwdvN6f//3ZGrR215L+eYJUCr5d9SziEwNzWUEP78zAX3r5Hw+VZOpXFmv
nR/WjEPLumO5cjQy9cr74z0Wu8YhyunY8yEGmbpPYMP7mH58Ht4jrRvFRqHO
bqvYEvdzFOYPR7hXrKNQ2cRUKWEZIzCnwVK/sY1CldGUFXsdRAf7n7fqYnZT
qHWCy5wM22HYOhkmOqBAofI9U6qjDw2CRddjOz0tCvXNYmH5Y+sBmEhaZVlx
kkJVEOUK4Kf1gXlIzx8zKwpVXIv38ZRZL1gqZo5TbCnUhax9cdfruoEkE9PS
fZtCjZv7lreU3AW7tRwPjz+mUHPKzApUZtpg0aRtn1Qohaq6XW1w4lUz6H7w
1n32gkJ138PTZq7ZAJsk72ZKJlCom25pwPbGGiAVxXfTUyjU+yUnvDglvsGi
1+OG9nQK1df4b5nJYjHwRx4pW86kUBMqhNZucEoB4+OvLkhlUajpz3eDETkB
RY4Yca24rzqrWWBDAuqL+JKxF3uCsr+8e3sCMjWaOrniWK57GRmSCYh988DM
Huz1yfHBrgoJaHVf9MsV26VHXic0EtDUm/u9ktgBgxLbG87i+9FX9q14un85
7+qtBMRfrn9DArtgXvAwMzgB3WKeJu3EDm9dohQGv0G9e92lBLBrL+tkOAUn
oljPTxMbsG84fz4gHJyEckX5Tbiw1SV3PS5/koyUs3QKXuL5uT8c24S03qO0
6rc+3tjie3tyH2t+QHF2suVXsC34hy8UaWSjVONHt45ji4T5M8U4c5CDCNvh
Q9ibFSSfe//IQcNeuQI7se85L7HXBeWiIuY6vtEMPP54IR2dzfmo2YXrej62
1oBeaED0R9Q7JbzdA1tZ2CctUrgAfY4qczuP4z9483wz+z1AP7PC+DnSKFQJ
5wfHrUa+opZVz4RtUynUlOz02y38Fcg88FVeSDKF6hg2keag/gN9ruKjn8b5
ZXKZqRJHa9Cq0kcnFGMo1OWKehorvh51H+SdkY2kUD97fTYwiGlEvBnXR3Wf
UqjSSlDL/rwZ2YVW6Nz3w/1X/rCS9G9F/CK9/SZ4vfX4kqLfX+lC7wwEFSyu
UKim7n7rxEg96PeqZ1d/n6JQf+ttFbQW7ENbJvfP3yAo1KfX0k6tUhxAXDUX
1qpLUaj7iu2XBfWHUNfbb9lHeCnUGtnpjEILOtJkCo7aMclUjhejAhO2o8h8
+n5GXReZ+lXxtVj9rX/oyGSSkmg2mSpy6q/tacsJlPxo58WOe2Rq/zedd8FM
Brp9zhoVHydThS6+ua/83xSyHzEmZ2BTLDq2ZGKPHeope4l9+T/PzJ1mU4jQ
5vcNxL4rXK4Zjv2W55/OXezn7/NauMynkGOsLfd1bM41xx3vYiPlt0F6K+1P
/I6+eHYKZf1xXbcX+2X2wlddiyk0dPd30Gps533lwzKWU2hgfp9SmSH+/1Su
NTlkPYWujl87ec+ATD3gkxqFHKeQs5d/q5I+mbp8ZvWHo7enkLl7aOO4Lpn6
/tGHV4beU6iybXPKmiNkak55Xrdf6xS6fTNGdUyaTL1qFMD5QWEaOQy8fB21
i0y9HjV6oSxkGt01C+3i5iNT85kxUl+GppHXrajnLTMk6nuNArP2jBkU9uC1
TdwfEvXQxREOJ8dZdOZvosT5jySqvpyczXnZOWSxP7ZkawSJunXSaiGMMYcq
RRqJ6hskao2K/ZWh7Hl0LkBL/eBhEnX4wKHU0+0LaPr2sRlxMon6reRZeyX7
IpIvrCbSytmoXiM71udLLiGJ9Jd6ImFs1NN0rq1JfCzUynu4m2XBRhV5lbbX
fJmF9NK8lnR2s1G794SpOPQto00xEmFr2/B+fYs4VHSJjZiP17bwuLYMO06y
+T+oZyPitVdlTkywIF60UrtRjUTcHeizvHebBex+hP7dVBLBHZ86Yc6D6443
td92skiE01HxTUapSyBysjw5+SSZ2JpwM/6LxRJ81DnW5hZIJmp8U7p5sKfW
NO5dxB4cnxK6eHYJnlhcvOEVRCaiBSxNs82XoHn9+zz2J2RCSKXLj4xtFlcy
4Yf939N7+cZmSyBqFC6xLphMOG5jcE2eWYIgDpYPXwiZOKPToP3MdAns+Nqr
BJ+SCT36bif500tgxHNgUTyUTMhob+pzOrYE13p8vV1ekokHxj9LkpWXIJ/X
zyoviUzkaN8gNUotwc2ctY/G3pEJHmmtj0zBJZAOmO8WLCQTi5a60lPli/BO
QbfObZ5MfAhb7/XdbhFaxh+uOqxEIT7yX5D12rQIicPzyRY3KMRSU/xq0Y9M
mPltaFeZSSFyb79dU2DOBLbUT5X3+inEz/tLPUIxC6B6XDDzxil2ouTJwvmk
1nnwimBFVn5iJ5qTPnVs0JiH2I3zOm5kDqLUy0TOIRmf2/aIHz10jIN4ui64
vnfVHKh3vbJg+nAQ8qHCOVE2s2AsJN2X/YWDiAYX3nffZ+Bax/mXZ2Y5iKMC
3qcNd8/AKGpwGZTgJKI+P09wXTUN7vOsvfZOnITqkMmjc/hceijnb3jbW05C
3StnsJp7Epql31x78ouTOGXhSXnSwYD6dfKhBnWcRP6N4fwPjQzY42tefq2e
k/j+5t1iYyUD8sPj33j/5iTMdgo0zZcywO3luv2RDZzEmqhztxyoDKBRDytw
NHISozmxlJ5iBnR49L5wwW7MG/M6U8CADIMPlp3YD/jldYlsBhgeOMfMb+Ik
DJaHqiXTGaBQbrgh6A8ncWa5bRNPIgPYLoW/sGrmJJ44yG6Mu8gAb+9lZc9O
TuLDL9GO7SIMsBCrUv/ex0nEGOfV+3ROwOTad6qadE6iJuzk4Z6YCShP0K6a
+MdJpHg81cxSmIBT4YmtZdP4eZNqhUtV48D+n9X1rHkcLyWnGO4r46CrHiX1
mclJ6OT2e5jN/wO+Cc5ZyiInsSdeU/KN5D+Q+HDlc8gCJ/E2+n5Gd/koXI40
umkwxUlc2kiVSr40AoZdgtaPhziJtl1SIrJkOjQ+L7nz6C8nYTe6Iftr/BCI
SBN3Q77heKqxTz3XGISHurPcA+85ieUmR63u3n44eMgspTyCkyjmCzu3f6YX
7JmPlFjXOYkFs88kmzU9IKBrULtJlZPgflLa2OdKgyPoWj5lPSexlKTyx/1X
J/jvo/XubOcgBMf/M9/6sxPotYYe3NhqN7s6Pn3vBOsqL96pNg5itVrd5f++
dYJl0EJ6O7aUmdTIbHknpG8o0viGbVA3djOyrBN2m31tfo/dHabj3/SlEzju
WVEeYf8Q13nDB51gnsQndQbbdGD0q0lxJzjSB47vXemv0UaxKq4T7gSydtr8
5SCYxy52HXvcCcQ4vTa5mYMYr1b/WmbTCVfrB87hwp4oUrrZrmnUCXyb9lQL
NXIQttwSrvmqHfD11QZ1+VIOoqufGTvI3gFs4Zq6T4GDSDycMiNa3Q4ie02b
B4s4iMlVGX7XItvhz7n07MOfOIhnRWcu5J9vB/t8TrfAXPw9HT21y2GyDfxC
w7q2ZnIQsplJEfo+bVAzkiMfnsRBuC3riR7f2gZajxp9FmI4iNn0Dzlioq1Q
/9TU2SOIgxAvTBYs2/8XTi7t04++w0E4LHVVyCq3wIZQxGV8jYPY6yW+00W7
GQaIJd+U0xzEtBzrpsf5JnB8LHdqnzQHseu8SgfH/QZ4YzBvdoCLgygWzvSV
ia+HdC+Tvpx2dqJV6wSv0LdayHG1IZdmsxNCF1pVO2lVkO7WFnbBh50IihS4
es38G9z7nslckGMngt9eGrAeo8LIIrv+zlYKIfDKzfCxWh7cVOHdP32PQvh3
9v+1KoiHVF3TktdCFKKjMu5+qkwAciw6JauL/3dn5itb/Y2yUOo2OykhYzIR
Ky3iYmRZjHbF9HCT/pCIG2/Lj++xKUUmLh5mTY4k4oFw98K166UoTFS0JRV7
k87OuFT7UqQu7P7fXewRHi806FiKomJ0/xhit1wntUi4lKLtCeGnd2InaiXa
Xb1Zik7JmP9mOJAIv7p9fv23SxHV9m9VJLZ8rUrQFU/c/4BWxWHspfyq273e
pehpeXQxzZ5EfI5KS2vIKkW8193HjG1JRO6cRlZRaylK7b95sdSaRNjmF3hH
ryrDdeNzYflLJIJzWEnUQaEM3cwSFU84RyK8T8qLfJksRy8f64rXqZII8VFq
wc2sb0j2uVJIAT+JKLJTb/e+8gNtKdlhZzHJRuRuPBpJE/iFnA4Z/CisZiOy
bdnjv07WoOzz4R0DF9kI/pnFystn6tGN9Rb8/4aW0f3gadGsxAak811Bbg33
MnqwxUvrJq0JWf99vGSxm4Uyrn8+7bKuBRl8CNASQkvoype+p8qNrejcI3i0
zLmIRtiONjne60D7XOn0xz8WkIdcu6b+oy5EU7LkUvSdR6Jfu//GFNDwYvPN
ekrMIcv1P9sXO7pR1ZM+0qaZGbS6okzesbMbkZIWW4KmZ1D7eUlfGrZcFjmb
C3t329SfU13dqLDA0//B1AySVti7uwKbv8b+/NLkDNKy+e58iNaNSqfrFW9j
Cz9oogh2d6O9Hr7d9owZFDzhG0jq6UYLgRuDLk3MoOn4tlX92KqXHOTNxmeQ
4rl9ubUj3SijlXR0om8GTT3tNf443Y3GKHlefq0z6Ab1Q280qxvlrnbqFaqb
QTK3CZvbXD1INn+7S27FDLrQPeamd64HKVkF/LOymkGBXJ5sPnk9aPr7Be6i
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
doLl4uXTt0K6YepCqdS1D53wP4XFLZI=
                  "]}, {Automatic}][-3 + $CellContext`t$$], $CellContext`t$$ > 
                3}}, 0], 
            Rational[1, 15]}]}, {
          RGBColor[1, 0.5, 0], 
          Translate[
           Rotate[
            Rectangle[{0, 
              Rational[1, 30]}, {1, 
              Rational[-1, 30]}], Rational[-1, 2] Pi + Piecewise[{{
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {646}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1:eJwt2Hk0FNz7APDZZzDDDBpEoSSEylKS3Kd4e1MRkQgVaaFURAuilFaUNhWR
FpIlS9kipLRIkURvkTX7OphhhvldfX/3nHs+99znPM859497nnuuusehzbtJ
BAKBiOe5mcX/jwv5HQXR25jof6qggWW6F6yVPRDzvuXqthRflKhx5JXq2kCU
qZRX1FJ4CUm7yNCVhdeQpXb54re3b6NA/lGnQ8viUYPHzVJmTyKSXmrVnXs+
GVmIRRz3BemoaI/TvXD3LFRvnZ21bclzNGLErFgszkWdI+T8O4FF6GDD1Dei
sBTty5uoys0vR7tujVXsP1qB3AKGS9SMPqCtDv35dcOVKE1lGb+u5As65Vcy
u7eiBqV+b1vRm16L6kwZzr036pA4Xvd4b1A90iHbxfR6/EBE35e9knd/oh9N
C0CnphE5aa77qEFpRhHvLAQx2JJ9SFOK2oxGJFY6hGAXpC4LG8Y6bzTI9KTh
eJQ2cwO9GWnWqO1bysB5copvFCSaUWRqqYuCbDOKsvDicZWb0dWfnMtcjWYU
faRwHlevGcXtspWRPd+Mku3/CFktzSjbIrhLYmULKjaUraPebEHv5z8pIw62
oMf3y94v6m5FYXN+ftnS1oZ23h39HtrYjlYpSDel1Heg2TcWdtTW/EF89uq+
qcpOJBGUEn3sUydS7uAsH8bqbQr85V3ViVBB6+l2rN38DQu3f+5E/nxlP7sv
neh2ZV+RZXUnKkooppvUdKL53R28/P860UUD6eYV7Z1oKGjZp8L+TrT17fb8
lfxO9KD4m+o+bP+L9edvYE0ySgdKsWeSljn2Yz/HpxUrCTqR55XbEX7YydCz
LpXYq4cP62hMdKID35NRnKgT/Wv220Ge0IXmP+B6R5C7kJhuE0qhdyGt36zR
2DldyC63ap+hURcKjIxs/Li+C/k2hX7xuNCFvBb7lU2+7UI7T3nmXCN3o601
jo91VnejtUdWXtxW1I2MZqn5XFreg+bnUewKs3uQrHO3UY9eLyIIqxRnp/Si
B/cKC+3v9SELSHaNjO5H7a3XpyvCB9C58FP3CYGDqITh4O+N5V9euO4bdomM
UNk8aBB5Xfs8mIxNnPWgnBM8iORUrPZ3YM/OG5ItODmIxrViCiNCBpGn15x/
a84Noq8pD2tnXRlE0KO9c1vMIMrQyeyLTxhEkxkDXhtHBlFvzMkyb+IQcm4g
2zyTGELvFC/9x+MMIWNn9l6T2UNI9j+VU2U6Q2hgm/ad9SuH0Mefxtm1G4ZQ
kuuaSlfXIeTHGLyulzmEzJ/Huk6Th5HkznULvmwdRnVSY/0JqcMoMS8x97B4
GJU32aTkRI6gdqoodlyZh6h6KVErnvLQ8kGqrjfWK8vjw11s7JGSPZXYKmMV
iggr5h9P1E3loV3BBr8ise8IfdxBrE74YzvbNB7iZLXHqWTyEP/X/K6uHB5q
YuwyfJHHQ2+MHoScfontVToU3MJD0Ra3qbO6ecgtlhuXPoTzeTcM1gpw3nq5
D01iHuIe/B3fRRpFRtGp/iPUUWT//Nh6EWMURU/KjMvIjKLP8CRx/qxRJHUe
rJcrj6JDVB2f7WtGUe0Zuchwr1G0nDSVlnZ1FMWe+vOpNm8Uqdmf2bNGPIqS
FqgRstaOoUWCojuqUWMo86OzYVTdGDK+N/5JpDKOjtrFVLbFjaN8qsnHjyp8
NFHQ8D4rjo+ojGrLj4N8dGzz6i/d2O64bGeJIT5y6ZzfroWtWnrz4DosCqZN
7MXO43SzkrG0pMp5f7A9phnLFwzzUY3UBUYcj4/yf7n/kB3no4T0lU8vCvjo
XMisIIKQj2zN3hoBVmnSfyAU25an8aQEmxbwzV2MPWp4VhmJ+EjiWVvUK2yc
jgXJfIqPFic9CCjGDpxw4+eRBCjNWvFENl2A9qvXTqYxBUhnLDI4mSNA90z/
izxsIUDsU5oJKwIEKOytXyYpWYDGJEvKKhsE+B4ZfTogN4Ea7VO+s2wm0Obj
c1syLkygirjrvZvKJ5BpGWN8aGoCjaDOzdVukyjl1dtnz4onkfuqR8wrc4RI
qSjM6+BJIaoxda+wbhSiDWOaNw5i3zzrc7+CXeWdvTgTm6dxfKoau+T3qsph
7HyHD3sMm4SI+8GBFICVMG++l4s9/2Vz1toWIaK6v33zvU2Izowsb9jzR4gI
Z5/2jncJUY+BRkYMSYSIGSdfkskipKhd//4QVv/Rku8/sf+oXmr7lyJCrnfb
hnKwF6/ekoqgilDeOStNT5oItQeLwIwuQqmzJzeky4iQbz7fca6iCJk4jrlf
UROhad7IAYK2CMUeKjwX6yZCK3pP3192TYS+77EqrKkQoSOt7G8HhCLE3t7Q
T18yhU5TqtO7bkyhkafvfD5MTKFddiV6T7dPo1p+bv+l8mlkGZ+Rvl9LjF5Y
JvlsjBQjzd57enojYmQ47mBihwUi0yIAa80st76D3aYQ6FSM3Ttv6a4WbJhJ
wnFtnhjF2bCifLG5nkEPC7DFq9+fuDQuRm/mzrJ1mRCjSqG7pq5IjL42ZIhE
02LUcHT7XimxGDXKS39VwrZmF5tpYTttfZKXYfsHVGT/wfJ1gjvdsaS9P4tC
sMyHptdisS9PTvDcCAQYTKmbO4DV+J5lFUIkgBMpyl+aRIC9RQvVM+kECDha
VmXHIsCZJS6BPFkCRPeMat5UJEBpQUWdmwEBBi7cPqu5kQBznLwNB3cTYONC
s9a8UAIEjbOiT90hgMPxTd/pLwmgP3lV+covAtCDv+7kThOgeUou6Z4qEQpC
t/RqrCbCNWLMkjQPImharTyy6QoRCq/+fjHykgjWDWcEN7uIEHNJZm8qttUs
tq4UqzuoafkdezQxO7sXW2pvrk7sJsKW/C3Ti7DdKj4/HbEhp8/mn8auP3TQ
Rb+XCApuTtP/9RGhff2axPMDRMg00bU0GiJCRtimxBECCVwO3P8xiaU7DnPI
RBI8R2vWS2F3al8Pk8My5doLlbG7/4Qv0sW+KlgYZ4ZViPzAtMZGfVY+Moyl
sQ/+uEkiQYhdKTIlk2DsmmxSE/aButXj9ZIk2JQZ+iiXTQKRee7DeQokSKnq
exA1hwSOrvMfTM4nwVu74l779SQw/nercfphEjw2Gw6hxZBglsHl9zuKSRC+
cIFsQRuuq1LiIitJhkiVOgUPYzIsUOmtzdpJhlfKxKvECDI4KitstMsjw8Bs
PUZiKxlUI3fU5GJtxdF3P2FP+77Z1YrNbhvXFWBbt2iPs9rIYGkadWEFNmku
b/ZuLIPslH4V+9/Aut2WHWRI+2/FHMEfMoRU6NSlduF62cqRO3rIcLbrbJGn
kAzapXt0P02TIdNuMiBQTIblbZElWgQKvPJXl6jHnlPv//mJSAGbz/kZr0kU
UAg6ezqfTIEu0xPFm1kUKJz0mejjUuByoYfxeTUKuAVu9VXXoYCU5decSnMc
Z1mPB9hTYF/9OxO1fTg/cU3Qx2AKVHgXF/tHU8B9eOWzZVkUEB0rvC+opkDM
tMm1wiEKGITnnQlmU6FKalmA+RIq7Lv2fA/BlgrDOXJ5t4KpEFjnR9dLoQKZ
X7O1vI4KTfV3T96eoML+5vP+SVhBl//+59jwYXeP11jZSRvnamwCycy2CVsg
xzWfxNZqDC3iTlKh3/ijkgF2qNnG00pIBd7l2oydIiqML3OaODZFhYmWXxZX
pqkgXv6noZhAA1rUoE8fiQbMdgFJmUoDWVPSbSs6DVT/yL9OkqLBomsL+8hs
Giw3N+W6y9PAsmcjvFKkwTeW9iDDmAa7llLj7e1owHNo2RjvQ4Ow48XCrou4
Ttydp4ZJNGB9K1Ll1tCAwWy+IRDSgGJJlvypSQdxkGZosR0dhDlWownBdBjv
PeAVlkyHt0udbe//pENw0tu1uVhDZYNVn7A9V+INW7GJFCkdAdbpxDE16V90
qPCwZZlijTZqT+7GPjAmdUZjh+yDFlo10WGV3+heQjMdLl31eZLXQoeGjD9d
B9vo0NiY6BMzSofjs28MUAV0kN167pC/kA7p148PtU7TYV21t68diQGtTLeR
EioDTlptOqIvwQCFc6tH45gMsBYvGD8hx8DnlRQ4zmZA3vDAhKE6A/q9a4Vs
LQYczinrU7JnAE/4rHFeCAOOWsZ/XpTCgImIiBKjbwwIrgvMXCVmQHzQaPkn
AwkoUT9Y77JHAprfdfb03JEA0kH36RNVEjBf/idHgigJTHL3fTXs2PD4YhNs
YzOlZBO24ouszV7ss1dqjSHY03FmwnTs5kAnpUashpP/ciZJEhxIlz3byJJw
Ni0xupAqCTmO+a+i6ZLQRvjSu09CEl4nZWVUK0tC4sYbvib6khA6ctToPkjC
9tvOfLq9JKwyNys8tFsSLlqOb9KOlYS69ZkdrdWSoG7nHRRHkwKfrRocRzMp
KHRrSpLxkwKa522zD8lSYFxgEj5FZoJ3/WU9dQoTEsaa6iyxdXIGIfuwkgbh
mhFYZNvw+Rk2JSJElY+V/6Bx2JzKhBBqZWk4NsndqtOGwYSq4ncsRSkmjCmt
NWphMUHl6JttT9lMSJZ5/jNclwkGKQ9d3dcxoXjN9UYzTyas+xW2XfEUE2oD
/H7zYpnwVHdrd803JpxuW8l7xmKB0121qci1LFhsR6UfCGUBjdHDXp/Pghre
GYNPIyx4LcGt6MDmqD5xFmMfGZv2K/JYcHPDp1MG2PPu2+U3Yr0iw1aGYjcU
JHlkY/U7Pl7swNLijDgdYyxo2hx/u53PglwJhlr7BAuiSn2T24QsEP/MU2ti
SMNh/tSdhlnS0CxrKVc7Txrs9C9FVC2WBoPd3NDXVtIgH/fAN2+XNIx91fdM
OykN3yVeOibGSEOcPMfH7K00eKjuPVM/Ig1aOsV3/NRkYMBILpNlI4P7iVfF
kyAZ8B82+21ZLgOyCO5Pi2RgbmrgLekpGdBReBExF7v8zGCYPtZiUPuEOdbW
xfOQDdbL8IfLQWyYlM26KGxs22ujDOwNB3vf/mkZeNc67MglsMFC2XTsBbbU
Puz6FiIbJtYdcT5CYcNSc0/VaDobvA23dGRIsqHeTLkrVY4Nlmtbep6osCFr
U3L/4wVsmOvsM/RAnw2C/RNjccCGryHhwlub2ZAezSFGe7Lh/KN7tMtH2eCe
p80Mv8CGK92rp6tS2bjvbBvifmFDv7Vf644RNgREfy7fjxV903l8DHtW8fy5
M1ima9veK9jrCcgqFvtQUyCVg81Oz/z8EVtm5BXdinUJitet5rFhrKz2XfEo
G6IYErtSx9igtcl8+vY4G7Q59tItYja4xhdbFhE5cGWRVlAMmQPl+dey/Kgc
GP9nqtOazgG3nV8dKFJ4PzC5rFCaAzo3g/V9ZTkQ/cwudiGXA8ShYm6NPgd8
l+hcC/yXA82Hb7E0dnLANot0seo4B0qHD1KORXNg2mhp1qksDpgd57ldquFA
0MsXkjeGOVAwfSzvHkcW+KtNPZOXyoJxuIidZScL5P3ftEmhslBtm7bGPk0W
4peddXn0Qxb2q7j6j9HkYAXJKHKtkRzQuqSSYtzl4FtV26uuKDlIzHlZv6JI
DvS+zmlsb5aDauej8TI9cnCk5fMOU54ccL0Wqu8WycG9HmqQ6bQchFM+Od/G
+sy9ZjKOdTBxUnAQy8GhhwE7dmEvSl9P9sO+aq9aHo3lFTLeP8NqRVs4fcae
0SckNGJ/VxZ19GHDDivh56YchJSC44yB7H2nZvTLzP02435bqvYUdteQ/ckZ
N1/+c3XG1ZonHs2o5hpfOeN0dPnIjI3vupSmsRGtroliLCjmZMw4ai1RNKNb
wYvvM77V8BieUXZH4+iMO+44CWYUsDaJZ1zw3O+vdttu/fUkofCvKUmNf63b
OPOjJQ96d9b9Nbzjyl8bl9b/1UbvPnnGV1petBkXaxhIzBgzLrVgRvH7Dphx
T2yJ64xHalcfIWJDpd5cJGEjLNbiAvIg5e96Whp78ZGfhxKWUXfBQgN7jpqg
sRh7rCd4MBa778u2QgZRHpyfm4QHYK3ucG1bsdmXyszm0eRhdvABbQ9JeTjj
o8B9IC0Pfdtfk1pl5cHB1mdQXUEevF7N1k9cLQ8huu8PqB2Qh+t3A1ITbsnD
E8b8nrll8lB8tForvlcevraf3DuHOwu+3DHU4LjNgkqb7mbKo1nwnpxwT9Az
C97kO2zrW8qFMh9JhebjXCieV1pbW8KFwvqAq+9oClD+aP2PThcFqPJVncfI
UoDv5qPeWjRFaJb6kLPORRGGwtudH6Urwv9+CZXg/wCgyUK1
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmykiRJkiRJkiRJ0iVJkqykS5IkSZIk
SZIkSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy7/j/lrf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2fwmh1zyyKeAQooopoRS
yiingkqqqKaGWuqop4FGmmimhVbaaKeDTrropode/tBHPwMMMsQwI4wyxjgT
TDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskim9/kkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE820
8LfkbbTTQSdddNNDL3/oo58BBhlimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpvf5JBL
HvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX3fTQyx/66GeA
QYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyOY3OeSSRz4FFFJEMSWUUkY5FVRSRTU1
1FJHPQ000kQzLbTSRjsddNJFNz308oc++hlgkCGGGWGUMcaZYJIppplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZPObHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumi
mx56+UMf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQyv8AsPhFGQ==
                  "], CompressedData["
1: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
V/hOZ8H/ACtR+6w=
                  "]}, {Automatic}][$CellContext`t$$], $CellContext`t$$ <= 
                3}, {
                
                InterpolatingFunction[{{0., 6.25}}, {
                 5, 7, 1, {684}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                  False}, CompressedData["
1:eJwt2Hk8FcoXAPC7X3fhXlxbVJQoWVKUpZpTVCQeSotKRaUsIaQilaSdVIpS
epaIUsnyShJFpBCFLNmy7679Xu5vvN+bz2c+3zln5pyZv0fF0cP2EIlAIBDx
fDa7+G9womvdyEVz0P/V+E8jxBqNCyfJmv4Xb0Y3zJCI5OH8X94HlW9Iirvg
E4A2W1TZBx0NQlYHmoI85oajiWi7mrm0KGTj1iZ72O8xUmM+XpfjGo+mEu3d
ePuTkEJ25LelgalIydn1nopVGkrxZJpp7c1ARqefThi4/YOKL5g9NfXPRrtu
dOyyvvoevfPYPJp+KA99lf87Z13IR1SfN36x9EkB6nWxstr9+TMSSifIdnYU
I3aO4LeP2FekdNg2kbikFMVmrwleGFSO9E0r9AoHvqPir4fbjuytRHvsBBGs
kh9osCFsY6pBFQo+rDpu/aQayQ38k8iX/oVS/Cx33j1fi9YSWsQMB+pQxeUT
b+r2NKBDkiyXwC+/0Q0bFVvxtEa0plH2hQe2143NrsA+mCIe1XvdiCwujxfc
xU7J9C2YxO7UranPSW9EWVs+3g3KaESyR1KtN2U2os+nGm6P5TSiU9fY1QkF
jUjjofEcu2+NqD7VZS/lZyNCFUWtjn8aUeyomksevxEFXV8/EUZsQh89Bbps
ehMi26W7XmY3IRND9wSKFM4TG+WnlZqQ6Rfr66PqTejTrXxR3/ImtGG3nnf7
mib02ljGQHCmCS1QGhNy3jehcGFVnupMEyI0ZIUYrm1Gx3IiLawCm9GyevbT
obFmxJ86R4vwaEEZCqNOBp0tyM/gaF7d/lZkuKNh3tlfrUjgaxOwwPYPqmwL
0OW1/EHJdknt1ONtKKig8sE4sR3Z64usu8Lb0fIEDVqdSgdiyGzP/vqqAznt
tSVy0zrQuwSrTVuxsv2bb9zFeqzcVPkLWxxoojD3dQcK4KxOiMPqPNbT1Ujv
QM3LtHJeYhurW/SG33Sg+sDIZytyO9CvRVaqvp86UNVXcnRmcQfKtlUy3zDT
gTIeXzIoEutEL/uH1S2kO1Hyage50rmdKOFqMc1mcSe6r/a4bfuaThSWf+LT
HttOFOxgGefo3IlOTS0MOhLQicJZwwXufbhO6QPD26EL5WuFWp4s60J1a/eE
n4FuxP9L42fQq26kOd73vX1dDzr06FXp5ooe9GiDb0mqYy+q6jUokuL3Is4d
4acTF/pQYvzQC4ZqP0IZ7fejP/Wj6oK6izqHBtBqz3WLypsH0G1u+fwRbPdL
hznyLQNonU0fbzU2csifsx87EM5kBmMfVqiLSrAW0htGpFsH0ORWx67d2MLa
kICl7bjPgRSOoHMA7e8si/3SM4C0PUb07/cPoKKANXsMRwaQ49WQoJrJASS8
V5bkJ8L9f72csqcOouUdk8pTzEH0bWT9pijuIHImXXc3kB1EyVYOi3SMBlHf
/WUNixwG0bIOUoRS0CA6vuLnFukng6iWStDxrBlE62o0JL8xh1BSsh1/yZoh
xDlz7meIxxA68VdKVuvfQ+iWrZtn9vQQemGnteT2rmFUsrO/2SVjGHXufnF/
vSQfUfZ5bp3jzkcqjrrs4SI+KmUdjV5UzEf+GY81d2HV99W8u479Ica1/IA9
n7apgY+to2ZN23/hI/1davPysaHPItYuKeEjTn9/0LIyPrqpY/Z5VSUfSXr9
zULVfHQrbeqvjXV85JossFgt5KNTxMjuzdhLO/Wu7MLefVGufgQbT3MvPIFN
28s4dBFbxlofG4vteXO6MRcrduS1UgNWTb/7HHGGj0xJKm2LRHzkWLbDfDNh
BJ2NDn1+jDiC1ANMaE8oI6hs94RDA30E+Rk/z+KxRtB8RUfuFokRNEY6l0HV
HkHfuh/a51qOoLiKbNFJ9xF0+u2v+OU3RpDDarn9o+9G0Pr32xT/6cX94FbV
aaVRxMovC1+zZRQNmohbEgJGUc2ivVIZP0bRB/rz6qNaYyipSxg9L2QM3SzZ
4lj5ewydfB6tfnnVOOLwNGNWnxtHiaezZYeKxpGs4Xnxy5PjqKzL2v4B9vJ9
5cRU7HqLQX4eViDIhZ/Y9GdhNzqxahI66pypcRTlUfpBH8v67m6/B3shJtH+
t2AcTbk32++fHkfHVyvubpkZR11Mu90HCRNotEz8vCp5ApEiCp/8oU4gCfuz
X+PFJtCc+QbDB1kTKOK7h2u72gTiBif+cV4/ga6ubNzbtXcCUbtkq11OTSCi
X+CZlpgJNE1pX2hfOIGmbll++d47gcaUMzzNpSfRcKqSXJ7hJPqdTc50ODmJ
vhR1bxNmTiKJ876M0u5JZGNIeB8zbwrdGbp63Mt2CtU8lVE3CZlCio6P63hv
p9C+OUtvtvdNofLILV6mGwTosnWpScJ1AWKnXE5MLxCgm1QT1qcZAcot9PFq
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
jFwulfKlwZVBOVcvkAa1qIE/J6eloXlxnbmMCPd55vnJGaupQ0NvsZuWPGIW
YB0Xrqwqw0bKHXZvw35j3aUIsFHXdeizHhIvZsyqG+rInnVaQigxa3FYhOSs
B8KLZGedvCVQnDX8jrbKrOfjNe1m9UrXuPLvuU+Lc2bNd5IpmMYuIJO+ibAH
T5jVzJrYFdo6q1a54tSsY0M+wllzpUtnZk2+9F40q7Rk9b+euT/wrzbPlQkE
Ag9UP9j8q3PAatKsyQbqlFnNbtvKzdrWd0Zj1gtmT9f8u19hPz3r9z3sHCJ2
oj0ngIQN3PJ8koGlpEWfkMRelbvOl8dyz/h7KmMtfX7auM7mXXVWZGILHa/w
iEQekO1bRy2wTiTnjwYUHnxK7r65iI7ftfWYgxSTB8GCoaUiNn5HnO9kD4cH
SavuEzS1eOBa8p7utpkH2vtaJZ4582BomC7bG8yD9BDNuZqxPDgxx0bVLZcH
2a0MIXGQB6Jn+ZX3lGXA5IR/ipaNDFxCehc+npeBErE++11pMsCpSFg+0CID
HbU7vo0pykJuK+PIzDZZuNebTaKFyoLHqPtD8c+ysGlmvoEMQQ7m0ysqlAzl
YJwT7K56XA56PKmRnjly0PQ9JP+dmDz8XC7WJ7ZNHopvX5Gzi5GHtuJP15LL
5OH/v6oK8D84Q+oD
                 "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmSJEmSJEmSJEmSdEmSJEmSJEmyVpIk
SZckSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy74T8Vbf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBIEcWUUEoZ
5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDKGONMMMkU
v/nDNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
+VvydjropItueuilj34GGGSIYUYYZYxxJphkit/8YZoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskj
nwIKKaKYEkopo5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKbHnrpo58BBhli
mBFGGWOcCSaZ4jd/mGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa
6qingUaaaKaFVtpop4NOuuimh1766GeAQYYYZoRRxhhngkmm+M0fpplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZJNDLnnkU0AhRRRTQilllFNBJVVUU0MtddTTQCNNNNNCK22000EnXXTT
Qy999DPAIEMMM8IoY4wzwSRT/OYP08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBIEcWUUEoZ
5VRQSRXV/A9KmU2P
                  "], CompressedData["
1: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
K/MdP1WocOTmPTVglqD/AZDbk6g=
                  "]}, {Automatic}][-3 + $CellContext`t$$], $CellContext`t$$ > 
                3}}, 0], {0, 0}], {
            Piecewise[{{
               
               InterpolatingFunction[{{0., 6.25}}, {
                5, 7, 1, {646}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                 False}, CompressedData["
1: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
                "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmykiRJkiRJkiRJ0iVJkqykS5IkSZIk
SZIkSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy7/j/lrf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2fwmh1zyyKeAQooopoRS
yiingkqqqKaGWuqop4FGmmimhVbaaKeDTrropode/tBHPwMMMsQwI4wyxjgT
TDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskim9/kkEse+RRQSBHFlFBKGeVUUEkV1dRQSx31NNBIE820
8LfkbbTTQSdddNNDL3/oo58BBhlimBFGGWOcCSaZYpoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpvf5JBL
HvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX3fTQyx/66GeA
QYYYZoRRxhhngkmmmGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyOY3OeSSRz4FFFJEMSWUUkY5FVRSRTU1
1FJHPQ000kQzLbTSRjsddNJFNz308oc++hlgkCGGGWGUMcaZYJIppplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZPObHHLJI58CCimimBJKKaOcCiqpopoaaqmjngYaaaKZFlppo50OOumi
mx56+UMf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQyv8AsPhFGQ==
                 "], CompressedData["
1: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
                 "]}, {Automatic}][$CellContext`t$$], $CellContext`t$$ <= 3}, {
               
               InterpolatingFunction[{{0., 6.25}}, {
                5, 7, 1, {684}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                 False}, CompressedData["
1:eJwt2Hk8FcoXAPC7X3fhXlxbVJQoWVKUpZpTVCQeSotKRaUsIaQilaSdVIpS
epaIUsnyShJFpBCFLNmy7679Xu5vvN+bz2c+3zln5pyZv0fF0cP2EIlAIBDx
fDa7+G9womvdyEVz0P/V+E8jxBqNCyfJmv4Xb0Y3zJCI5OH8X94HlW9Iirvg
E4A2W1TZBx0NQlYHmoI85oajiWi7mrm0KGTj1iZ72O8xUmM+XpfjGo+mEu3d
ePuTkEJ25LelgalIydn1nopVGkrxZJpp7c1ARqefThi4/YOKL5g9NfXPRrtu
dOyyvvoevfPYPJp+KA99lf87Z13IR1SfN36x9EkB6nWxstr9+TMSSifIdnYU
I3aO4LeP2FekdNg2kbikFMVmrwleGFSO9E0r9AoHvqPir4fbjuytRHvsBBGs
kh9osCFsY6pBFQo+rDpu/aQayQ38k8iX/oVS/Cx33j1fi9YSWsQMB+pQxeUT
b+r2NKBDkiyXwC+/0Q0bFVvxtEa0plH2hQe2143NrsA+mCIe1XvdiCwujxfc
xU7J9C2YxO7UranPSW9EWVs+3g3KaESyR1KtN2U2os+nGm6P5TSiU9fY1QkF
jUjjofEcu2+NqD7VZS/lZyNCFUWtjn8aUeyomksevxEFXV8/EUZsQh89Bbps
ehMi26W7XmY3IRND9wSKFM4TG+WnlZqQ6Rfr66PqTejTrXxR3/ImtGG3nnf7
mib02ljGQHCmCS1QGhNy3jehcGFVnupMEyI0ZIUYrm1Gx3IiLawCm9GyevbT
obFmxJ86R4vwaEEZCqNOBp0tyM/gaF7d/lZkuKNh3tlfrUjgaxOwwPYPqmwL
0OW1/EHJdknt1ONtKKig8sE4sR3Z64usu8Lb0fIEDVqdSgdiyGzP/vqqAznt
tSVy0zrQuwSrTVuxsv2bb9zFeqzcVPkLWxxoojD3dQcK4KxOiMPqPNbT1Ujv
QM3LtHJeYhurW/SG33Sg+sDIZytyO9CvRVaqvp86UNVXcnRmcQfKtlUy3zDT
gTIeXzIoEutEL/uH1S2kO1Hyage50rmdKOFqMc1mcSe6r/a4bfuaThSWf+LT
HttOFOxgGefo3IlOTS0MOhLQicJZwwXufbhO6QPD26EL5WuFWp4s60J1a/eE
n4FuxP9L42fQq26kOd73vX1dDzr06FXp5ooe9GiDb0mqYy+q6jUokuL3Is4d
4acTF/pQYvzQC4ZqP0IZ7fejP/Wj6oK6izqHBtBqz3WLypsH0G1u+fwRbPdL
hznyLQNonU0fbzU2csifsx87EM5kBmMfVqiLSrAW0htGpFsH0ORWx67d2MLa
kICl7bjPgRSOoHMA7e8si/3SM4C0PUb07/cPoKKANXsMRwaQ49WQoJrJASS8
V5bkJ8L9f72csqcOouUdk8pTzEH0bWT9pijuIHImXXc3kB1EyVYOi3SMBlHf
/WUNixwG0bIOUoRS0CA6vuLnFukng6iWStDxrBlE62o0JL8xh1BSsh1/yZoh
xDlz7meIxxA68VdKVuvfQ+iWrZtn9vQQemGnteT2rmFUsrO/2SVjGHXufnF/
vSQfUfZ5bp3jzkcqjrrs4SI+KmUdjV5UzEf+GY81d2HV99W8u479Ica1/IA9
n7apgY+to2ZN23/hI/1davPysaHPItYuKeEjTn9/0LIyPrqpY/Z5VSUfSXr9
zULVfHQrbeqvjXV85JossFgt5KNTxMjuzdhLO/Wu7MLefVGufgQbT3MvPIFN
28s4dBFbxlofG4vteXO6MRcrduS1UgNWTb/7HHGGj0xJKm2LRHzkWLbDfDNh
BJ2NDn1+jDiC1ANMaE8oI6hs94RDA30E+Rk/z+KxRtB8RUfuFokRNEY6l0HV
HkHfuh/a51qOoLiKbNFJ9xF0+u2v+OU3RpDDarn9o+9G0Pr32xT/6cX94FbV
aaVRxMovC1+zZRQNmohbEgJGUc2ivVIZP0bRB/rz6qNaYyipSxg9L2QM3SzZ
4lj5ewydfB6tfnnVOOLwNGNWnxtHiaezZYeKxpGs4Xnxy5PjqKzL2v4B9vJ9
5cRU7HqLQX4eViDIhZ/Y9GdhNzqxahI66pypcRTlUfpBH8v67m6/B3shJtH+
t2AcTbk32++fHkfHVyvubpkZR11Mu90HCRNotEz8vCp5ApEiCp/8oU4gCfuz
X+PFJtCc+QbDB1kTKOK7h2u72gTiBif+cV4/ga6ubNzbtXcCUbtkq11OTSCi
X+CZlpgJNE1pX2hfOIGmbll++d47gcaUMzzNpSfRcKqSXJ7hJPqdTc50ODmJ
vhR1bxNmTiKJ876M0u5JZGNIeB8zbwrdGbp63Mt2CtU8lVE3CZlCio6P63hv
p9C+OUtvtvdNofLILV6mGwTosnWpScJ1AWKnXE5MLxCgm1QT1qcZAcot9PFq
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
jFwulfKlwZVBOVcvkAa1qIE/J6eloXlxnbmMCPd55vnJGaupQ0NvsZuWPGIW
YB0Xrqwqw0bKHXZvw35j3aUIsFHXdeizHhIvZsyqG+rInnVaQigxa3FYhOSs
B8KLZGedvCVQnDX8jrbKrOfjNe1m9UrXuPLvuU+Lc2bNd5IpmMYuIJO+ibAH
T5jVzJrYFdo6q1a54tSsY0M+wllzpUtnZk2+9F40q7Rk9b+euT/wrzbPlQkE
Ag9UP9j8q3PAatKsyQbqlFnNbtvKzdrWd0Zj1gtmT9f8u19hPz3r9z3sHCJ2
oj0ngIQN3PJ8koGlpEWfkMRelbvOl8dyz/h7KmMtfX7auM7mXXVWZGILHa/w
iEQekO1bRy2wTiTnjwYUHnxK7r65iI7ftfWYgxSTB8GCoaUiNn5HnO9kD4cH
SavuEzS1eOBa8p7utpkH2vtaJZ4582BomC7bG8yD9BDNuZqxPDgxx0bVLZcH
2a0MIXGQB6Jn+ZX3lGXA5IR/ipaNDFxCehc+npeBErE++11pMsCpSFg+0CID
HbU7vo0pykJuK+PIzDZZuNebTaKFyoLHqPtD8c+ysGlmvoEMQQ7m0ysqlAzl
YJwT7K56XA56PKmRnjly0PQ9JP+dmDz8XC7WJ7ZNHopvX5Gzi5GHtuJP15LL
5OH/v6oK8D84Q+oD
                "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1QFHIAASBtBur0uSJEmSdEmSJEmSJEmSJEmSJEmSdEmSJEmSJEmyVpIk
SZckSZIkSZIkSZIkSZIkSZJ7e8MzP+D7xvy74T8Vbf8ICAj476+A/8/fFUgQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBIEcWUUEoZ
5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDKGONMMMkU
v/nDNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU3
3HLHPQ888sQzL7zyxjsffPLFNz8EKMIvAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
+VvydjropItueuilj34GGGSIYUYYZYxxJphkit/8YZoZZpljngUWWWKZFVZZ
Y50NNtlimx122WOfAw454pgTTjnjnAsuueKaG265454HHnnimRdeeeOdDz75
4psf/h7/LwIJIpgQQgkjnAgiiSKaGGKJI54EEkkimRRSSSOdDDLJIpsccskj
nwIKKaKYEkopo5wKKqmimhpqqaOeBhppopkWWmmjnQ466aKbHnrpo58BBhli
mBFGGWOcCSaZ4jd/mGaGWeaYZ4FFllhmhVXWWGeDTbbYZodd9tjngEOOOOaE
U84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHgH/Kn0CCCCaEUMIIJ4JI
oogmhljiiCeBRJJIJoVU0kgng0yyyCaHXPLIp4BCiiimhFLKKKeCSqqopoZa
6qingUaaaKaFVtpop4NOuuimh1766GeAQYYYZoRRxhhngkmm+M0fpplhljnm
WWCRJZZZYZU11tlgky222WGXPfY54JAjjjnhlDPOueCSK6654ZY77nngkSee
eeGVN9754JMvvvnh7+P/RSBBBBNCKGGEE0EkUUQTQyxxxJNAIkkkk0IqaaST
QSZZZJNDLnnkU0AhRRRTQilllFNBJVVUU0MtddTTQCNNNNNCK22000EnXXTT
Qy999DPAIEMMM8IoY4wzwSRT/OYP08wwyxzzLLDIEsussMoa62ywyRbb7LDL
HvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+988MkX3/wQ8C/5E0gQ
wYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBIEcWUUEoZ
5VRQSRXV/A9KmU2P
                 "], CompressedData["
1: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
w7q2ZnIQsplJEfo+bVAzkiMfnsRBuC3riR7f2gZajxp9FmI4iNn0Dzlioq1Q
/9TU2SOIgxAvTBYs2/8XTi7t04++w0E4LHVVyCq3wIZQxGV8jYPY6yW+00W7
GQaIJd+U0xzEtBzrpsf5JnB8LHdqnzQHseu8SgfH/QZ4YzBvdoCLgygWzvSV
ia+HdC+Tvpx2dqJV6wSv0LdayHG1IZdmsxNCF1pVO2lVkO7WFnbBh50IihS4
es38G9z7nslckGMngt9eGrAeo8LIIrv+zlYKIfDKzfCxWh7cVOHdP32PQvh3
9v+1KoiHVF3TktdCFKKjMu5+qkwAciw6JauL/3dn5itb/Y2yUOo2OykhYzIR
Ky3iYmRZjHbF9HCT/pCIG2/Lj++xKUUmLh5mTY4k4oFw98K166UoTFS0JRV7
k87OuFT7UqQu7P7fXewRHi806FiKomJ0/xhit1wntUi4lKLtCeGnd2InaiXa
Xb1Zik7JmP9mOJAIv7p9fv23SxHV9m9VJLZ8rUrQFU/c/4BWxWHspfyq273e
pehpeXQxzZ5EfI5KS2vIKkW8193HjG1JRO6cRlZRaylK7b95sdSaRNjmF3hH
ryrDdeNzYflLJIJzWEnUQaEM3cwSFU84RyK8T8qLfJksRy8f64rXqZII8VFq
wc2sb0j2uVJIAT+JKLJTb/e+8gNtKdlhZzHJRuRuPBpJE/iFnA4Z/CisZiOy
bdnjv07WoOzz4R0DF9kI/pnFystn6tGN9Rb8/4aW0f3gadGsxAak811Bbg33
MnqwxUvrJq0JWf99vGSxm4Uyrn8+7bKuBRl8CNASQkvoype+p8qNrejcI3i0
zLmIRtiONjne60D7XOn0xz8WkIdcu6b+oy5EU7LkUvSdR6Jfu//GFNDwYvPN
ekrMIcv1P9sXO7pR1ZM+0qaZGbS6okzesbMbkZIWW4KmZ1D7eUlfGrZcFjmb
C3t329SfU13dqLDA0//B1AySVti7uwKbv8b+/NLkDNKy+e58iNaNSqfrFW9j
Cz9oogh2d6O9Hr7d9owZFDzhG0jq6UYLgRuDLk3MoOn4tlX92KqXHOTNxmeQ
4rl9ubUj3SijlXR0om8GTT3tNf443Y3GKHlefq0z6Ab1Q280qxvlrnbqFaqb
QTK3CZvbXD1INn+7S27FDLrQPeamd64HKVkF/LOymkGBXJ5sPnk9aPr7Be6i
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
doLl4uXTt0K6YepCqdS1D53wP4XFLZI=
                 "]}, {Automatic}][-3 + $CellContext`t$$], $CellContext`t$$ > 
               3}}, 0], 0}]}}, PlotRange -> 2, ImageSize -> 280, Frame -> 
        True, Axes -> True, AxesStyle -> Dashing[{Small, Small}], PlotLabel -> 
        "t" == NumberForm[$CellContext`t$$, {4, 2}]], 
      "Specifications" :> {{$CellContext`t$$, 0, 9.25, DefaultDuration -> 5, 
         AnimationRunning -> False, AnimationRepetitions -> 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{330., {181.13403309800196`, 186.86596690199804`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8671665931605196`*^9, 3.86716662986178*^9}, 
   3.867166682545929*^9, 3.867166719676053*^9, {3.867166769181219*^9, 
   3.8671667853670425`*^9}},
 CellLabel->
  "Out[917]=",ExpressionUUID->"e1f0a858-969b-43cb-a8ed-050a00673986"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 735.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8c064991-f396-4fbb-8834-3a4d9c146479"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 150724, 3672, 4121, "Code",ExpressionUUID->"a00d29a6-3b25-4d3c-9c98-adf762342dd9"],
Cell[CellGroupData[{
Cell[151307, 3696, 15501, 376, 428, "Input",ExpressionUUID->"0e18f22c-765a-4087-b8ad-25f66c5d9d5f"],
Cell[CellGroupData[{
Cell[166833, 4076, 647, 14, 22, "Print",ExpressionUUID->"6855f4f9-3fa0-42df-b4a6-5437a5d3a1b9"],
Cell[167483, 4092, 680, 14, 23, "Print",ExpressionUUID->"709d9687-7173-4f98-b5bf-0d6931857b36"],
Cell[168166, 4108, 678, 14, 23, "Print",ExpressionUUID->"6139c82d-b897-4b7a-875f-94f12ba5e29a"]
}, Open  ]],
Cell[168859, 4125, 226530, 4009, 209, "Output",ExpressionUUID->"7ffeae4a-2d33-452b-9a4c-e53f86dc1c62"],
Cell[CellGroupData[{
Cell[395414, 8138, 645, 13, 22, "Print",ExpressionUUID->"4230cce9-00ed-4a10-922e-df387805ac74"],
Cell[396062, 8153, 649, 13, 22, "Print",ExpressionUUID->"f3b212d9-4bfa-44be-a90d-9c876cb230cb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[396760, 8172, 171, 3, 54, "Subsection",ExpressionUUID->"360e002c-256f-4548-b902-e190c145a777"],
Cell[396934, 8177, 6561, 155, 333, "Input",ExpressionUUID->"f522f0e9-c975-4ace-81ef-7dfcbca5a787"],
Cell[CellGroupData[{
Cell[403520, 8336, 7831, 232, 371, "Input",ExpressionUUID->"616e0510-210f-4f4b-922e-cd16aac0b7fb"],
Cell[CellGroupData[{
Cell[411376, 8572, 546, 12, 22, "Print",ExpressionUUID->"cd6be4a7-82b5-489d-ac7e-a605294ecc41"],
Cell[411925, 8586, 576, 12, 23, "Print",ExpressionUUID->"b620e344-7006-40d1-916e-5a396e4489ee"],
Cell[412504, 8600, 576, 12, 23, "Print",ExpressionUUID->"f18c68a6-d7ca-4368-8817-0fd001290dad"]
}, Open  ]],
Cell[413095, 8615, 104996, 1851, 206, "Output",ExpressionUUID->"75d0ebbb-a5c4-4285-83ae-2efaaa799659"]
}, Open  ]],
Cell[518106, 10469, 569, 10, 52, "Text",ExpressionUUID->"92227f2c-9494-4136-b1e6-9ea58c327cdb"],
Cell[CellGroupData[{
Cell[518700, 10483, 4414, 114, 238, "Input",ExpressionUUID->"66803c62-8345-4344-8e8d-d3f1eefd55b4"],
Cell[523117, 10599, 175313, 2908, 387, "Output",ExpressionUUID->"e1f0a858-969b-43cb-a8ed-050a00673986"]
}, Open  ]]
}, Open  ]]
}
]
*)

