(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    401955,       8284]
NotebookOptionsPosition[    400832,       8259]
NotebookOutlinePosition[    401238,       8275]
CellTagsIndexPosition[    401195,       8272]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
In order to have the control obey its bounds we choose a different end point \
which in essence gives the system more time\
\>", "Text",
 CellChangeTimes->{{3.8660355592083387`*^9, 
  3.866035598172765*^9}},ExpressionUUID->"9fae326a-9ba0-4d45-a968-\
df9585f85b1e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_", ",", "maxJ_", ",", "initGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", "error", 
       ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"froot", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"error", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"uff0", "=", 
          RowBox[{"ListInterpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                   RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
             "froot"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
            RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"J", " ", "=", " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
      "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulumFCs", "[", 
    RowBox[{
    "ICs_", ",", "nInitial_", ",", "\[Tau]Initial_", ",", "A_", ",", "order_",
      ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", "maxCount_", ",", 
     "maxJ_", ",", "initGuess_", ",", "FCs_", ",", "\[CapitalDelta]\[Tau]_"}],
     "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "uM", ",", "count2", ",", "\[Tau]", ",", "InitGuess", ",", "J", ",", 
       "n", ",", ",", "JNew", ",", "frootNew", ",", "S", ",", "K", ",", 
       "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", ",", "f", 
       ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
       "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
       "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
       ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
       "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
       ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff", ",", 
       "\[Lambda]2ff", ",", "\[Lambda]3ff", ",", "\[Lambda]4ff", ",", "i", 
       ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox[
       RowBox[{"n", " ", "=", " ", "nInitial"}],
       FontWeight->"Plain"], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\n",
       FontWeight->"Plain"], 
      RowBox[{"\[Tau]", " ", "=", " ", "\[Tau]Initial"}], ";", "\n", 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", "\n", 
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{"uM", " ", "=", " ", 
       RowBox[{"uMax", "+", "1"}]}], ";", "\n", 
      RowBox[{"count2", " ", "=", " ", "0"}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uM", " ", ">", " ", "uMax"}], " ", "&&", " ", 
         RowBox[{"count2", " ", "<=", " ", "5"}]}], ",", "\n", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", "\n", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
         RowBox[{"bcs", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
             RowBox[{"ICs", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
             RowBox[{"ICs", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
             RowBox[{"FCs", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", 
             RowBox[{"FCs", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
             RowBox[{"ICs", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
             RowBox[{"ICs", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", 
             RowBox[{"FCs", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", 
             RowBox[{"FCs", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
         RowBox[{"eqns", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{"bcs", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==",
                  "\n", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                    "\n", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                    "]"}]}], ")"}]}], "+", "\n", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\[IndentingNewLine]", 
         RowBox[{"froot", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"error", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 "FCs"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"uff0", "=", 
          RowBox[{"ListInterpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                   RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
             "froot"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
            RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"J", " ", "=", " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||",
               " ", 
              RowBox[{"(", 
               RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&",
             " ", 
            RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"InitGuess", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{
             StyleBox["xGuess",
              FontWeight->"Plain"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["=",
              FontWeight->"Plain"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox["Table",
               FontWeight->"Plain"], 
              StyleBox["[",
               FontWeight->"Plain"], 
              RowBox[{
               RowBox[{
                StyleBox["If",
                 FontWeight->"Plain"], 
                StyleBox["[",
                 FontWeight->"Plain"], 
                RowBox[{
                 StyleBox[
                  RowBox[{"i", " ", "!=", " ", 
                   RowBox[{"-", "1"}]}],
                  FontWeight->"Plain"], 
                 StyleBox[",",
                  FontWeight->"Plain"], 
                 RowBox[{
                  StyleBox[
                   SubscriptBox["xGuess", 
                    RowBox[{"i", "+", "1"}]],
                   FontWeight->"Plain"], 
                  StyleBox[" ",
                   FontWeight->"Plain"], 
                  StyleBox["=",
                   FontWeight->"Plain"], 
                  StyleBox[" ",
                   FontWeight->"Plain"], 
                  RowBox[{
                   SubscriptBox[
                    StyleBox["xGuess",
                    FontWeight->"Plain"], "i"], 
                   StyleBox[" ",
                    FontWeight->"Plain"], 
                   StyleBox["+",
                    FontWeight->"Plain"], 
                   StyleBox[
                    RowBox[{"\[CapitalDelta]t", "*", 
                    RowBox[{"f", "[", 
                    SubscriptBox["xGuess", "i"], "]"}]}],
                    FontWeight->"Plain"]}]}], 
                 StyleBox[",",
                  FontWeight->"Plain"], 
                 RowBox[{
                  SubscriptBox[
                   StyleBox["xGuess",
                    FontWeight->"Plain"], "0"], " ", "=", " ", 
                  RowBox[{"{", 
                   StyleBox[
                    RowBox[{
                    RowBox[{"ICs", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"ICs", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"ICs", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"ICs", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], ",", 
                    RowBox[{"InitGuess", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"InitGuess", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"InitGuess", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"InitGuess", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}],
                    FontWeight->"Plain"], 
                   StyleBox["}",
                    FontWeight->"Plain"]}]}]}], 
                StyleBox["]",
                 FontWeight->"Plain"]}], 
               StyleBox[",",
                FontWeight->"Plain"], 
               StyleBox[
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"n", "-", "1"}]}], "}"}],
                FontWeight->"Plain"]}], 
              StyleBox["]",
               FontWeight->"Plain"]}]}], 
            StyleBox[";",
             FontWeight->"Plain"], "\[IndentingNewLine]", 
            RowBox[{"sv", " ", "=", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                   "\t\t\t\t\t", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
               "1"}], "]"}]}], ";", "\n", "\n", 
            RowBox[{"frootNew", "=", 
             RowBox[{"FindRoot", "[", 
              RowBox[{"eqns", ",", "sv", ",", 
               RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"error", " ", "=", " ", 
             RowBox[{"Norm", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "n"], ",", 
                    SubscriptBox["xdot", "n"], ",", 
                    SubscriptBox["\[Theta]", "n"], ",", 
                    SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                    "FCs"}], ",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "0"], ",", 
                    SubscriptBox["xdot", "0"], ",", 
                    SubscriptBox["\[Theta]", "0"], ",", 
                    SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                    "ICs"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
                  "]"}], "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                " ", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"\[CapitalDelta]t", "*", "n"}]}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
            "\n", 
            RowBox[{"JNew", " ", "=", " ", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";",
             "\n", 
            RowBox[{"count", " ", "=", " ", 
             RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
         RowBox[{"uM", " ", "=", " ", 
          RowBox[{"Max", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                   RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
             "froot"}], "]"}], "]"}]}], ";", "\n", 
         RowBox[{"Print", "[", "\[Tau]", "]"}], ";", "\n", 
         RowBox[{"\[Tau]", "=", 
          RowBox[{"\[Tau]", "+", "\[CapitalDelta]\[Tau]"}]}], ";", "\n", 
         RowBox[{"n", " ", "=", " ", 
          RowBox[{"n", " ", "+", " ", "10"}]}], ";", "\n", 
         RowBox[{"count2", " ", "=", " ", 
          RowBox[{"count2", " ", "+", " ", "1"}]}], ";"}]}], "\n", "]"}], ";",
       "\n", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"n", " ", "-", " ", "10"}]}], ";", "\n", 
      RowBox[{"\[Tau]", " ", "=", " ", 
       RowBox[{"\[Tau]", " ", "-", " ", "\[CapitalDelta]\[Tau]"}]}], ";", 
      "\n", 
      RowBox[{"xff", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff", ",", "\[Lambda]2ff", ",", "\[Lambda]3ff", 
        ",", "\[Lambda]4ff", ",", "J", ",", "K", ",", "\[Tau]"}], "}"}]}]}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\[IndentingNewLine]", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.8660358966534595`*^9, 3.866035985101922*^9}, {
   3.8660360737963057`*^9, 3.8660361727073936`*^9}, {3.866036696282464*^9, 
   3.866036735451826*^9}, {3.866036782583619*^9, 3.8660367884097395`*^9}, 
   3.866036882142497*^9, 3.8660370136210766`*^9, {3.866043563449813*^9, 
   3.8660436776639624`*^9}, {3.8660437082960787`*^9, 
   3.8660437309397736`*^9}, {3.866043783742737*^9, 3.8660438109379625`*^9}, {
   3.8660447589820814`*^9, 3.8660448105614395`*^9}, {3.8660448479983606`*^9, 
   3.8660449398227344`*^9}, {3.8660449923247952`*^9, 3.866045042203702*^9}, {
   3.8660451043796406`*^9, 3.8660451633636103`*^9}, {3.8660452080891795`*^9, 
   3.866045254470215*^9}, {3.86604545873531*^9, 3.8660454632038684`*^9}, {
   3.8660455680810304`*^9, 3.8660455759085054`*^9}, {3.8660456189926043`*^9, 
   3.8660456471125317`*^9}, {3.8660457956286135`*^9, 3.866045858203424*^9}, {
   3.8660459691496286`*^9, 3.8660460950829964`*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[3188]:=",ExpressionUUID->"841e8a74-92e9-4945-abd7-ad544fb565aa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  RowBox[{"\[CapitalDelta]\[Tau]", " ", "=", " ", "1"}], ";", 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "50"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"uMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxCount", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["ICs",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "0.8888710355107872`"}], ",", 
     RowBox[{"-", "0.0927640141163728`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"FCs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "Pi", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"InitGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{
    StyleBox[
     RowBox[{"(", "*"}]], 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K", ",", 
        "\[Tau]"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulumFCs", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "A", ",", "order", ",", 
         "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
         "maxJ", ",", "InitGuess", ",", "FCs", ",", "\[CapitalDelta]\[Tau]"}],
         "]"}], "]"}]}], ";"}], " ", 
    StyleBox[
     RowBox[{"*", ")"}]]}],
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "maxJ", ",", "InitGuess"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\n"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{"ICs", ",", "\[Tau]", ",", 
      RowBox[{"\[Tau]", "*", "1.25"}], ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "K"}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.8660356458523793`*^9, 3.866035741891393*^9}, {
   3.8660358003635273`*^9, 3.866035814434989*^9}, {3.8660361953940725`*^9, 
   3.866036245916774*^9}, {3.8660362985138016`*^9, 3.866036301720769*^9}, {
   3.86603634950935*^9, 3.8660363613795204`*^9}, {3.8660364072227287`*^9, 
   3.8660364076455927`*^9}, {3.866036537524687*^9, 3.866036538406404*^9}, {
   3.8660368990370474`*^9, 3.8660369232112494`*^9}, {3.8660379263605886`*^9, 
   3.866037949665069*^9}, {3.8660381990036206`*^9, 3.8660383038767834`*^9}, {
   3.866038466100443*^9, 3.8660387460871086`*^9}, {3.86603899211473*^9, 
   3.866039011698412*^9}, {3.86603915687257*^9, 3.8660392000896273`*^9}, {
   3.8660393157143197`*^9, 3.8660393525574336`*^9}, {3.8660393906661377`*^9, 
   3.8660394269374356`*^9}, {3.8660394761635523`*^9, 3.866039659160511*^9}, {
   3.8660431559542913`*^9, 3.866043158008628*^9}, {3.866043192016655*^9, 
   3.866043371315806*^9}, {3.8660450516756477`*^9, 3.8660450740184383`*^9}, {
   3.8660451808329754`*^9, 3.866045198660222*^9}, {3.8660452655976267`*^9, 
   3.8660453215915604`*^9}, {3.8660453643347683`*^9, 3.8660453648396063`*^9}, 
   3.8660454684201884`*^9, 3.8660456806767035`*^9, {3.8660458815478926`*^9, 
   3.866045881955762*^9}, {3.866046140495344*^9, 3.8660461508320103`*^9}, {
   3.8660461987265563`*^9, 3.866046247002981*^9}, {3.8660462844748917`*^9, 
   3.8660463594996867`*^9}, {3.8660464078250933`*^9, 3.866046451421026*^9}, {
   3.866046497827055*^9, 3.8660465255141225`*^9}},
 CellLabel->
  "In[3528]:=",ExpressionUUID->"9d837842-1d34-4d2d-8784-cd09af852303"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
JvsJznwMts7sbcdkP0HU+eS4Wz5MTPYTbL2IH/cS9THZT7Bqyl/jJ2biK/eT
PqqcEkJn71QrbDEj6t37/Tn6a4WRu7/Ycc8f7fN+ycFiKbeNw58x6ZcMFoze
eSrgJSb9kpJaeTpmjUGY7E/Yv0T1Y9fqs9gxX3rzQHIkcL0Qqli3Sx5I/6TT
v3WvBIScoeR43Adj9ggsXbq14imdAdGRl4WOhI3CqpfVFe9SGeAy27VrbvM4
eG85ZrgvkgGU2XePLdonIItZ/vlEUOV8P8J1n2HuPRZMTPYjvJe6eVCEyK89
KmibvD4NKTL8pBYT9fW+2IaOY7JCKHbZuecGnsx5P+Zb7X1xJmHhmPRjBnY4
pO+wssXTC76+tt31CWqzQ7R7gi+C8UrTQsU8DlTmBtqX3GHA7fNezolGYxCd
7+soSazvJofjZXuEJmBwp5j+2y2M+X6Gr8lxc3/iifrePk69bZCKLsUNZpQR
+aQ0Of27y3cacppeOdn2kTnv53ypOPiwtsIHk/0PDhynnaWt6/AnRksCZ+8D
4LrivCXv/ZCGufULpTGTUZCg3vDNIfJ5YKzIGZspon57PZvn8oYBT4WDsNp1
KnJaxc2bSdyPP+pfZBzfRUNfu47n3iPOU9L/uW6y7Yjyqpv4883D1+2XfoS4
ORn1fR2nYZfN9Vz1hxzINOzUlbIk7n8bMmOOK46BmK769X9EviX7Iy5kmXEZ
hTFxZJ6qXEANkU8XVODbRHyHVTScfhVLQ69C5EvbvzPn/aNq0qUH/XwO4sPB
nQLDcc8BPdqdfHVUA6oKlLue549Ce1Lu3dQsBliez5ELshiHuYseTVuI+6mk
lelgWwIVuS0wjF9OnKerFsqEz1wl6vGnvbpuecx5v2nD07CXPY/MsXf1iQqZ
aQ44S2rJ3gtmwKf7h0/NBRH50mrUTBYzYOlKmt52Gg3dWReW00usB9l/UeN7
wynlqwAoDpgFzlm4AZdu+RPd+z2ZWno52QVao8BOMVLArxkQYRvXsaZ5DNbK
1mZtIOoZeufQqi4lGrLzXXW2hDgv5en1m9fSx+Dp6RWoiJgv537usLYCKlJs
TS48Rzwn/ay/fVWOtTYdxzzTzqUclzjIks89ZaWsAqkpR285JY1CZqRVxcMf
xHn9aJOZWgQVme+Ou5Xxi4kf21t0V94cA1khuVku4n45cbgq78EsFV0uOraF
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{369, 2277, 2275, 362, 363, 364, 365, 366, 367, 
                368, 650, 567, 500, 448, 411, 390, 666, 583, 516, 464, 427, 
                681, 598, 531, 479, 696, 613, 546, 712, 629, 728}}], 
               PolygonBox[CompressedData["
1:eJwV0U1LVGEYBuCTUM3KNgkGgglZ2i+w1L0flTaWIxQEE0QQOogfaem+msna
N40KuTG0VAoiiJpqQIzwk6BWjqa/oNRWXe/i4r6f57wMc85blUzFe0qiKDpE
lmIsijZptmihlQtc5BJ3HT7Fpj7DA/pI29XxR/9EljaG7Kop6rM8pJ+M3Tn+
6nme086w3Wm29Fc84pm5icOsmAd4rJ9nT/8cflu/Rjk58wt5mVI+0s1P+zcy
SSUF+sI5+3vyDItsm9/JW7zWp2WC7xwnT4oN0uFdZTPfOMIH7rDGqufz8gbL
VPCFXn4w6PmYrGeJffN7eTucC99AXucE4+YpGecYv8xv5U1Ohr35vqzhtz7H
S72LMjLhO8sWjob/F+6TJ3oDB/pXJuhgxK6WnfAO4ZuTM7cSYz3cL0/1Rv7p
BSa5wqjdWXb1hfCe4X65SicJ/gPgzlSF
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{320, 2276, 2273, 328, 327, 326, 325, 324, 323, 
                322, 321, 370, 391, 428, 480, 547, 630}}], 
               PolygonBox[CompressedData["
1:eJwV0klIVlEYBuCrbRqhWhgYBa4bzWppNq6ayILmwTQ1QiVaNQ/asCpt0jaV
NlNgZNmgiYTYLEU2gLWoTXOmy8bnWzx873vuz+Hce/6MvNIFJalJkqTQyfu+
SfKBYgtFFLKOAvJZSwUnaKGXyTY4QJ5cTg136WGS9f2skS/RQR99FjXs0atp
5icTre1jtXyRp6TqM6lmt/6GQfJ86jiuN9FNlr6XVfI7hsqLuBD04eZKrvJE
X282k8KM2Itd1jeabYyMs9PAa+svzA20MDD2YB61HPP8pVnGPYbRwVKucMfz
52Yht/mhPzQnUBHn0jeZ7WTwjHwaeetZXFQrQ1jI+WA93VxBPY/1YrMpLpXp
cS52Wh8R35VrvNIHmHM5zVE9zVzC5Tif/p1MuTz2l7sYLOdyLuiP+Me02IMd
8Q3oL8/hFEf0W3xjfNw5y+Wz8f78ZWr8ju1yJ/3k2ZzksH6Tr4yL/wDL5DM8
4A858Tu2yVU08oWxcZ9xB3Id9/nNFGtVbJUrucFnxsS3iu8g19LOL7KtVbJF
PsR1PjE63pnF8mYO0sBHRsX78B8BKnU5
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hl8z3UcwPFfmykl1UZGTVvLIrTZNGslRSpdapGK0FJRbEoqoYuEdKJL
hQo5OkQ5KuUIkSNHJFe3sxPlSJ7vhz+ee30+n+/3sX2/n8/3sazS8pKyoxKJ
RFM/onuZwUA60pwCKrq4SF+gnOtI4h9m8gSduJhU967WN+hDI4629qW+SA9a
k25tvb7NoyTzL7MYxC1kuGezvkML0szX6JvUM96lfck2/lmncg7HmC/Wl6hr
vEPvJtP4B22s72ue/qVNtI3W0O/id+gEbaC/63n6mOboVj1XP9J83a0XaAXd
x8fxzuaDtY5u11JqGW/Rd8k1/lMvoarxN/oW9Y1/036cYfyLTqOQSuZL9GXu
Icv8R53C9dQ036AT6U8K+/mEIdzKpVRz31ody0OxFxxr7St9hZ60jTPnAJ/y
JJ25jCKOc/9SHcm93BBnzEFmM5TbaBl7RWX3L9NX6cWNcUb8x2c8xe1cTjHH
u3+5vsZ93BTvzyE+52nu4Io4m3h+/mcOz9CFKzk/npX4uOfKs3TlqjjzeK64
5No8fY47uTrOM56BKpzAiZxEKmlxZrGPnEx10uPbiTPgFE4lI86c08iM8+J0
suNsqU0OZ8Z3Ql3Ool58BzTgbJI833x9nrtoRdN4Nusr9HXupx25JFv/QofR
jWu4MN7D+tc6igdoTx4VrC/Q4XTn2ngva+t0HA9zUeyBtZU6mt7cHO9qbaNO
YgANSbG2UEdQFu9v/r2+R0nsl/m3Op5HYh/Mf9UPaRb7bL5Kx8R+GO/UB2Pv
jH/SIv0g/pb+rR1iv403aaFOjn3TP+L89fHYY92mxTpdC3RP4sj/vXw9DPPD
iZQ=
               "]]}, Annotation[#, "Charting`Private`Tag$388591#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWYVVUUBuA7WIhd2Ch2t2Ii3SWdAkPn0AaKYJFKKBgoWIRiYAcN0opg
t4Tdraig7/f44531rXX3c+acs/edKV9c0rhvUaFQuMePSgwpVSgczUb5UUYy
gMpUoSrVqE4NalKLTaULhdpqHepSj/o04ArXO4ZN8mOMYiBjzc7nN3lJ0f/3
0JArzY5ls/w4oxnEOLML+F1eyr004iqz49giP8EYpuprsRMb9IO5Rb6QP+Rl
ubbchoOYpn9IvYw9WUwf3jd/Vi3mCFYwMOvMr1aPZzWf6l9UuzJXfkRtwTr2
ZyklvMXYPKtam1fYmYX04g1e9/lTanvWcxgv0593GOLzW9WLWMuf+nlq96zL
O1DbcjDT9TPUxuzFB/rn1E4cmbl+qHoCn8lPMkduyQGMy3tW67BL7i/7yXj5
YrbKy7mPJlxjdiKf5xnyzpmmr0tp3sz+MkG+hL/kFdxPU641O4kv5KfznNlf
mtGcFmx21oZZczJf6p/J/WQ/aMl15qfwVfYuvyvPyESzivwtr+QBWjHc7FS+
zrvJujwHk8wu5R95FQ/SmhFmp/GN/HzW5b65zawS2+TVOU+04Xqz0/lWfiHr
mK6vx645E/ph3C5XZru8JvtGW24wO4PvcsayLu9bX58yvJ1nZrJchX/ltcwM
fRP25kN9O26Uz+R7+aV8z+VWlGVy9kJtwG45b9kHtQOHM1w/Ra1Kgfn0yDk2
n6u24xBm6WepTdmHJfTlo7wztTMbKM9KBnG5z25Sz2INP+T+1G75TjAvfz/U
1rzGgSyjX94BU7KnakNeZXcW0TvnjndzVtSOlGM5AxhhfodajSIW0DPXyPch
98WhzNbPVpuxLx/r23OzfDY/yvNzrZwVfSP24L2cAe6Uq1OKdfqH6cBI/Tn8
JC/Iuuw5d5nVYIc8b/6m0JFR+nP5WV6YddlTihltfh6/yIu4O++UTnSmC13p
Rnd6sMX3qafai970If8USujHGNerwK/yYqbmmXNts5rsyHr9nDyT3Jz9+CTn
Xe3CUaxicPaB/j77D1rv2q0=
               "]]}, Annotation[#, "Charting`Private`Tag$388591#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GXYVFUYBdChW0A6pEFAupFupKVEQpQOSZHubhUBRVG6U6QUkA6lu7sE
AWlEQtf5sZ5373fuxPfNuZOxRZe6naNEIpFsUSOR03wWPRJ5HS0S+dOcaR42
m/KED/VfzUrc46Z+wWzPc97W55n5OCKfMlsyTt5t1uWxHI8v5NRslD9ni1yd
u3IFfpJLckH+hjM+Ww/9P3kWjcnOfLv8HJXHE58v9TRskntSkbOe/7ldhNl6
E3KQgK/s0vKb3ItKnHN9T7sozNGbkpM3OO+xC1zkEpe5wlV6uT4qc13XjHdI
yCS7t9gs96Yy11zf2y4a8/SPyEUivrZLxxa5D1W47vo+dtGZrzcnNwv0AhyT
J5CYyXp6tsp92SrXCN+bXJVVcikuyt+yX27Ev/IN79NXjsEC/YjZjI/lDWZl
/pTzsFAuyHH5tNmKifIesx4Pw9nRr5qdecmb+hQzA7fZph8Pr89T+unbzJr8
HeiXzI7h8/Ge/rNZmr+4FL5fsw3T5APhrPIi/M/MruGs+pv6mTFZaH/U/IhP
5I1mFW7JeVkkF+JEOKf8LtcPn01OwlQ5I9vl/lRjtV6Gy/J34f7xfv31WCzS
W5CPxXphToZzStJwvvVM7JAHUJ1bnj/ALjaL9ZbkJ1n4vuwys1MeSA1uu36g
XRyW6K0oQHL+8tgg+7gs1VtTkBTc8dhd7vE393nAQx4x2HPiscy1bShESh57
bIh9fJbrbSlMKqbZZWGXPIiaPHH9ULsErNDbUYTU4f9ll5Xd8mBq8dT1w+ze
YKXenqKk4Xu7bOyRh1CbZ64fbpeQn/QOFGOJXoRT4T4nLdPDbxW/y0PZLtfi
vlyHNXJZroT34h+vPUJPxCq9I5vkquH8ysVZKhfltHzGbM0k+Q+zAc/C/W52
Cb8D8g9mdv6QT4RzyDB5h1k7fBYe6JfNT8NZ5n19rVmOO1zVz5ltw+szXT9o
NuZRuNfCvWx24xXP/R0jzcThrPOzx4+ZzcN7yL+FeyvcU/JFswPvysvMYpwJ
v0vslRvyj5yOH+Uc7JWHs1OuE+59uS7r5PJcC383//oco8LvAKv1TpRguV6c
s/Jk0jNDz8k+eQT1eOH5o+2SsEbvTEkyMNPuHfbLI6nPS9ePsUvKWr0LpcjI
K4+NtU/GOr0rpcnEa4/9R0SOQlSiEZ0YxGSc5yVnvdyNMmRmll0uDsijaEAs
xtul4Be5O2XJwmy73ByUR9OQ2EywS8mv8meUY0X4XjgnTyErc/Q8HJLH8AHr
9QpcD98RcZiop2KD3IPNcrVwnuTyrJRLcF6eyj75g3B25GzMlfNyWD5ptmCs
vCucz3Bmw9nTr5idaCT/YlbkLjf082a7cH6YoR8ym/A4nFP9ptmd18TV/wfi
bCsq
               "]]}, Annotation[#, "Charting`Private`Tag$388591#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1He8T3UYB/BzuffaM3tfe2+Z0VBRNinRuoRkj+wtFYqUhj0qtDRUSntp
UVRURmU3ZDSMrPfzx9vn832O373POb/zuhmZQ7oMTkmSZKZ/LqQmSaP0JPkr
LUleYjwdqEcX81xs1p/gbhIuNTsqX2YCHalPCo1dOyZfYSKdaEAWspJKGulk
Izs5yEkucpOHvOQjP038zOPyVSbRmYZ0Nc/NFv1JBlKApmYn5Homx32QaVaS
3foaGtHNOQ9f6wsZRF/nsvyqP09Bmjn/LV9jCgOcK3AgdqC3Xoo9+loG61X4
LZ4VN+h5+UYfKWuxKPaVlTgUn6GfXo69+mhZlxf0obIaU/jDeZxswCV6c/lP
fA/ydTlC1mRqiO9MVmQSB53HyHpMp5tzH1maifzsfI+swzSedR4iqzKZ353H
yvo01rvLfGzVR8naLI7nKCtzOD5Pfz2DffqLDNOr86deiBb6v/INpsXz4k6z
MvyiPxfvADc652ebviSeC4W5zOw/uYHpsVe8AxShKMUoTglK0tL/PynfZEb8
3PiOKUUr107Jt7iXm+IZU5rLXTstNzKTHrE7ZbjCtTPybe7j5tgrPm9egG/1
pXHvlOVKs//lO9xPz9grfqZ5Qb7TlzGcclxldla+ywP0il3j98R7wPf68vj+
yaC12Tn5HrO4JfaP32NeiO36ingfKc/VZufl+8zm1rgnKnCNaxfkB8zhttif
ilTiWtcTPtQf5PbYN3Y0K8wOfWW8I1SmjVkKH+kPcUfsGzuaFeEHfVW8i1Sh
rVkWPtbnkhn7xo5mRflRf4rRVOU6s6x8os+jd9xD7G1WjJ/0pxlDNa43S+VT
/WH6xD3FfZgVZ6f+DGOpTjuzNDbp8+NdjXuiBu3N0/lMf4S+sT816WCejc/1
R+kXu1KLjubZ+UJfQP/Yi9p0Ms/Bl/pj3BU7UIfO5jn5Sn+cAbFDPFOzEuzS
VzMuPudcnv36uni39Boc0cfLhsyIvzvOFwEfrq0m
               "]]}, Annotation[#, "Charting`Private`Tag$388591#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfcTgUYBuCXhJBCg4xIhRRlZ6SBUDZFySoNm5AZhcoehbL3HpW9t8yI
CIXsyEpGyeh6/rh+z/3c5z3f937nO+fkaNSyeoskiUSibtJEolfyRKJCykRi
c4pE4m0ysF+3iM+o6NgW3TvcxwHdYj7nFce26hpzP7/qlvAFrzq2TfcuD/Cb
bilN9X/ae1GY/3S9qaTfbn+PBzmoW0Yz/Vn7ZxThhq4PlfU/2t8nI4d0PXR3
MNpeieW65vZz8ucU5aauL1X0O+wfkInDup66ZIyxV2aFroX9vPwFxRhrf5gl
8i3HB8n3MsO+xHyWN+RpZm7WyhvNcvTz+armTl0T5sr5eUj+xswUx5gXv9ss
xW/87rxe5p1xjRjr+EKzCPupYp9sPsbPrLKvM1/iICud39K8oN9i9jbnmQXj
+8rjzOwslVebz3PbOYPNdMzULzWL86Y83czDOrm/z1WTf5KbkpkR8TcxXz4S
95GcnHH2qqzStbJflPtQnARDdOmZJddlgM9Vt++Sm5GFo3Hv6VIw3l4tvrOu
tf0vuS8lSMJAfQ39brk5WTmmW0Mb/SV7P0qSlEH6mnEN5RZk47huLR/q/46/
l1LcwWB9Lf0euSUPc0K3jiG85theXSuyc1K3ni/5iqEM43Wf+8Xx1uTglG4D
w6nt2D5dGx7hD91G2uovxzXiOZLxtb5O3BPyh+TkdDyPupRMsFfnB107+5W4
RpTmzrgH9W/oD8hteZQz8Xzq7mKivQabdO3tV+Oa8Tzj7TlYJifnSzkDs+W3
mCE/wfq4P5z/pvyr3I5v5afj/pVHmplZIK80n4v3RTzzZqp45pnk2CKzaHxX
atqnmI/H/4LV9vVmGQ7Fu835H5nX9FvNweZ8s1Bcd16wTzAfiXuN5fY10cd9
Jn9l3scceZlZgnryTDMvG+Kami8z0u+qG8+tbrPZ3vzOfCa+nzzKzMJC+Wy8
i+TUTLbXiudT18H+TzwPvEjKOE//VjzP8kfk4pxuK6OpF3+rrgO5Oa/bxhjG
Mo7xTGAik5jMFKYyjenMoL6fddjP6EgeLui201H/b/xveYm74hroG8Q7Su7E
E1zU/Ugn/fW4fpQhFbP0DfVH5M7k5S/dDjrr/7MPpSypma1vpD8qd+FJLun6
6dIwxf4aO3Vd7DfkYZRjoj0nK+Q08XPl+5kr14/vIj/JRnmO89+Wj8ld+V4u
wFPyaDNrvONYZF9llo73gXP6m3ezg6mOLTaLxb3N6/apZq54D7DGvsEsG9c3
fp7zu5o39dvM4eYCs3A883E/2SeZj8Y7jJX2teaL8Tvj7zQf4Ft5uVmSBnHN
4nvzgzzX73hHPi5/TD7G2LOxWL7s+AA5LdPstdml+9h+K94plCctw3UP8p3c
MJ5bn2tsPyF3Iz9XdAN19zDdXofdum722/GOoQL3xHOhf1d/Uu7O01zV/Ux3
fYIRuorcG/8T/Xu6U/InPMM13R4+0SeJ50/3CumYp39f94f8KQX4R7eX+Xzg
2GldDwryr+4XFtDEsTO6nhTium4fn+qTMkr3KunjGtkz8r3cKO4lOR+b5E1m
+Xg+4pl3/v+D5lIx
               "]]}, 
             Annotation[#, "Charting`Private`Tag$388591#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 4.999999897959183}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
mcj+a1GvVOhu2qk8XLeoV57492qpiEDHol7p3Ce36/d496JemefNvULetX9R
r4x/dFVz4f3Aol55x7nWc0/g4P/rlcU/v/SEDAKpV7pE1soBYwBIvfJZuIXC
2TgmkHplxb+RNzvz+mBRr9zno8l42QOkXqljo216uJIBpF4ZtyTFI62tHUi9
snDXIb1Q0xYg9UqX7A4HjpJaIPXK33KhcUikHEi9UiRp9Fh+5Xcg9Urxv6sm
QilRmNQreU50vXJK/IVJvXI2o9x4b201JvXKyJ8pqYVrWjGpV4Y92Xzb2ImB
Sb3yAI3dB2f3Y1KvtOPkqfCmjGBSr5SoTRZS6xjDpF65v3vFdtntAxB0k73v
WNAk6J0189oQP4RLOp306g5Ow8rDvF1CN0fxevq0PosxAzKjDmtWlrKw57X1
f566zkGpg19w2DcWXv+WgX02/wPhey+/71YbxSWe+jJCfxZA0W3pwNmuQbzw
/T3TpJQLKbc+uC9S2AI/TQyqdMO50U2JhpzDHxmw7kyNteNtHjStEuVj1t8L
uZYnj2w4xIvU8tJ1LuYywVbt2KDragq6qNQ5kgWD8N1swxG5XgpSv7tjY9GX
QfBrw1cEM/nQj1UyBhJ6g2C9ql3n6xMqwiKOnL76A5Bwg/1yzUl+dIB5R/5a
fj9YrhhTVtwogKT/eU+2pPcCqV+euWd90Kl3FJP6ZXLOSIifzCBkfT4itlV2
Enr90yykjgxi/itj5qlNUyDGbsj1sX4E7zL6mU1xnoFA1+2zAyEsrBKEpaXX
zoGGAdcugzoWjmv6a2mRPw8BSd416ngU91/Z9PP+xQVIN3jQlnhwGK/yu/73
dBAXipfkfHPwWhMUfVMbar/OjZalqNwrNeuE608+uNP38CDX5Cujw7M9IKKs
WnaPxovCWGaj7fJMyPG+HGrfxYucfjN/7vs3ALpuosOMZArS3xWs4/9hEGhP
mTsvufOhMDmR6/WOg8BhKOkhcJKKdou5b4mPGgDnRwqvRtbzI4uhF00r9zBh
R+KRVz3D/Gj9ps87O4hzHKlnbqfqbVg/MYJvb05Luc01BeI7pdW22w9jr8u8
aDZ5GuIGPh9X6B/FnEfk+/8emoVjOUvd0rpZ+O9+u/udo3PAzdX84ckDFva/
O7AszZvYL455N89+GsE19bk/9UXY0KbeV8fWEvl+d3f/7DVObqS5Iz11/nEb
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
CzwFRcZZxHqnepzvKmBQkMgCx7UvxPvdcFxa6/FmFtauibeSIn5P8oxaj13n
qFXEeft/PIONrbVh5f6V+0mecVHeacWthjuLPOOAstc690t+izxDj2+d5PSh
mEWeUZPXZfhp5NMiz2g2+bvFij99kWc0+UsMdW/PXuQZK4YiFUXm8xd5xoGP
s2nmeb8XeQantOnwrdVlQPIMXSGVbcLKFUDyjLcNa544T1YCyTP2x0gLRR2l
A8kzVryLi29VqAaSZ6Re2nnP5HQ1kDxDxv3WproQOpA8w0H0wxuJ6kogecY3
kea/ojLlQPIMtsLEtoOnChfrr7c2ihu3KGQt1l+/PBvxQ+rx68X6a+nVe0y3
uiUt8oxMjev/wp/lLfKMDL7zr95Z/1nkGcp+9ttqZuiY5Bl2pwddt6TVY5Jn
hOg9dQo/2IxJnuH0EdMvT7VikmeUvX+r3hrcjkme0fTgzGe5ig5M8ozJeJ1t
n8M6Mckz5AQ7pnjXMjDJM/a5O548r8TAJM9wNUkobuViYJJnyAU3qBTYdWKS
ZxQWtp/n+tiBSZ7RGjlUfs6tHZM8I+X1E1f93W2Y5BnjOt+i3txtwSTPGMqr
vLK8uRGTPMO1u4Nt/4E6TPKM9+/addZuo2OSZ/yVOuKyT6R8kWe0pATc8cwq
XOQZlPp8U5m57EWeoWleXKKe8GWRZ+w2sB+/fD16kWe8fHYYKXBcB5JnLGc/
+jPszWsgeYb2m3UtJ3zjgOQZel/qN49qnwSy/trQDJ7dTHQBsv6aR0CJ3ys5
FMj6a77L4y9+HE8Asj6aZ68c6EhUAlkfPch7tPZWUhWQ9dH17UEf19HpwL3r
YfcnFrF/RwXvqZ2tXuQnCyNP+vpWVwPJT+YuharfbawCkp80ntCI8QuvAJKf
cPh0DYoElQDJT1xn/wKTkbfIR85xv9ratqoVk3yE832ZUy29DZN8ZDdz7f1N
ah2Y5COn02xOP1PrxCQfybt3vfB9dycm+ciTZCXf9TsYmOQjmdsmqGnSDEzy
kYeVd2Mmf3diko+ofTgXZLO+E+cKZfwuGBNAr9cEqJds7MBvL55aGVIgiBq6
EtLLGW2L9eKtvwJvrbqWiMl6cbz21s3rH70xWS9ude5rx1Mev0Xewr3zXrvR
mRggeUtUB4g0P9oOZL14ycaw2W82jkDWi6efVDLVqnkJZL346QqVim3K8UDW
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
/Pz/AECO1U4=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{381, 2253, 2251, 374, 375, 376, 377, 378, 379, 
                380, 646, 564, 499, 450, 417, 399, 661, 579, 514, 465, 432, 
                677, 595, 530, 481, 693, 611, 546, 710, 628, 728}}], 
               PolygonBox[CompressedData["
1:eJwV0d0vlmEABvCnTx2kEzZsNbOh/AFKjlEnZWsUioRZZjJri3LQ51bUSZHo
pBK9m9pqfdBq1kwSsrWQg3IU8QdUdOZ3H/x2Xdd9v3ufd8+bVtV45MzGKIo2
EGNyWxRNUOzgKMcooZQyzvlwOr/0l9zmItedZfNHH6WX4zQ7y2BRf8Uduuw8
NvHNvsQNfS9/9Y885oF9iO38sE/QomeypL/miV5EAh32PZnPZt5xmhnnz2U5
O7lst8l9/NPfylrG9AFZwjRJjNDIHH3uH8rDTBHPMPXhGfwM70RW8pXU8J2c
ZT483/15uZtxftuDsoY3ekwW84VEPtDALJ3uu2UBE2zhPXXh3t0LWcEuRmni
ivN2mcOq/omneinJ9NuPZCE7WLAruKDvYTn8Pu7SYx9ga3gX9lVu6vtZ08fD
f8FJWp1lsaIPhf+b+/ZB4vhuX+OWnst//TPP9DJSiNmVnKKKatYBKYpanA==

                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{332, 2252, 2249, 340, 339, 338, 337, 336, 335, 
                334, 333, 382, 400, 433, 482, 547, 629}}], 
               PolygonBox[CompressedData["
1:eJwV0ktQTXEcB/CTVbHAIgvNmNrmzTJRdqUFLbJgxmhUoofCjvQir8prxjtG
LQrVGGboIWVacFNh4bWQLUJaEvX5Lz7z+35/587/nHPvTckvzy2bF0VRHAPE
4qNohMMWhzhIJRUcoJwmbjPENOsdcJwyuZFbDPKbdfb1lMrdvCZO38wlzuot
PGOKtXZ1lMhdjIcH0zO5yBn9EwvkHFq4qS8xt9PBgP6LNXIt++UUM59HfNFL
wudYTC5tdIZ3NJ+TxBg76QrZtTdmET3M6i/MDC5wWn9nVjLMMsbZxQM+uv7W
3Ec/84mxJTw/N1wPP8QgieTRzlP7AvMxP+XVZk04R042d/OQCX2RuY1W7utL
zR3hvRjV/7NJPs8p+QMJcna4P9f1fn6wSq+mWP7MQnkrd7inv+IfG/VznJTf
Ey9nhbO4pvcxyUr9GHvlu4wwQ7pdMw3yVXr5zgq7qvB9yx3E+MsGuyZOyFfo
4RvL7Y5SKLfzkj+k2TWG/6d8mSd8JdXuCAXyHuYAJddqiw==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Hl8z3UcwPEpurRVdLBcy5gj11g257QZQjnTRSxHhS2VyBHRQakUSocO
dyEkupScna4uikLODhVyFOL5fvTHc6/P9/39bb/v9/P9PpaSX9ihoEhCQkJr
P6InWMpYepBLXRKdXKsvcDedOYOTfMhj5NOc0j77vc7kAeqRZLZOX+Qerqe8
2Tady0OcyX98xOPcRqrP7NKF5JHs+AedxQiqOf5V3yGDCxyv15eobf2X3kua
9V5tpm9rfT2qXahgvV2b6Ly4Xv1bW+jDWkP3a46+rw30X71Gi+opltHI8Tit
pX/GXmhPraS7NVvf0qv0SPx9LrfeorNJtz6oI6lu/Zu+G5/nQscbdAoDqeJ4
ny7mBlIc79A3eYRixAP9WJ6gFy0pY7ZVX+fB2AcuMtuoL3MfN3JW/Lr5cn2S
3rQikxLmX+krDOImzo73wXyFPkWf2B+yKGn+tb7KYG7mnHje5it1PLfHOxh7
y8Xm3+hr3M8tnEtR81X6NHfQhoacF/fr3Gp9hjtpG8+D4nEvzq3RCfTlWhpz
fly3c5/oRPpxXbwHJMY1OvepTqI/7WhKUrxn8Uxi72I/4h7jurmES7mMUpQm
OZ5z7D1lKUd5KsRz4woqkhrvCpVJi2dMVarF+8CV1KBm7Idr+0yfpYD2ZMf3
m3+rUxlCV2rFHpl/rs9RSAeaxbWaf6fTGEo3ase+mX+hk7mLjnHtZj/qG4zi
6rhPs006nWHcGvdj9rPO51HqxF6bfanPMyDu0fEeXUSn2BPHP+kc6lof0tFx
z9a/63tkWf+jObG31pvjOeqM+A49oHk6PPZNf4lr1CWaqce0lXaP/dad8Tx1
gWboYW2pY2KP9Q/N1Q/iPdPjCf//n0zX04X2jO4=
               "]]}, Annotation[#, "Charting`Private`Tag$388676#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jmUYB/D3aGnvoqG0pJ3STnubxx4Zx844NimJ0tCONi2kQlsD2dlK
Gmab9iBCpfT9ffrje67fdT/nPO97nvu6n4olpcVdiwqFwv1+VKd3mULhSL6W
Xy36f/0malCTWtSmDsXUpR7zyxYK9dUGNKQRjWlCH/c7im/k13iAgdxurSob
5Vk8S1P6WjuaNfLrPMjD+kvZjqX6m7lDPoM/5NmM4il9DXZjlb4Z/eRjWCu/
wXNyPfZlmP4R9TK2ZxId+Mj6y+q1HMIg/Z3qmWyS31bb8Z78otqIxRzIDEr5
hNGuP63WZCG78y6d8hmszjNRW7KEw3JPerIsn+/69Wol5vKt/k21DRPlsWp9
FrEf0+jCxwx3/VH1cuazA5PpmOuuvaI251Bm0Z3B1oeqZ7FZnsM4uTHlGKN/
Rq3FHnymb05/+Vi+y/fjIR7TX8GOeRb6W7hLPpst8tzsBS24wVplvpffyn7z
uP5KduJT/a3cLZ/Dn/I8xstNKM9YfUtaUUJrFpjLNmpbbvQ7x/FD9i/7zhDu
sXYuf2WOeZ52DLB2PD/K7+RZchv3WjuPv3N/XqB9zom1E/hJnpT/PzPOfdbO
Z6u8MPNCh5wBayfyszw5/y9P6K+ibPY/M54zKFfjH3lR9iNnRV+bPflc3zFn
Qj6JX+QpuRcj9FezM8szwzl/8gX8Ky9mgtyUgxifc6TWYS++yBlUW3E41+kH
qSfza/ZKbZuZznNTG7A/0+nKCOsj1WtYwC5MyX1Yyoq8Z9QWfEAFZtMje87Q
nH/1QuaxLXuhtudD3te/pDZL5mBm0o0Jro1Wi9mbqXTmy7wH1BIq0kk/WD2F
3+Sp2VO5IQcwUv+kWp1dWZk5Zph8EYV893wPOmfO9aeyTp6Wv83cMtzaxRSx
JO8XumSu9VVYL0/POywzSV7MQ6yfxu/yjLxLMn+U0o3u9KAnveidGTPzfdS+
9Mv7I+czZyxnIDPsfqezQZ6Z85wZzZm1dgll8mzzfmCMXJd9+Eo/UW3NEcyh
V+aKAa79BzJV1ws=
               "]]}, Annotation[#, "Charting`Private`Tag$388676#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4VVUUBdBLCtLSIS3SndKIIC0pLd3dqUipqFggqICi0t3d3S3S3d0h
4dg/xrfmXCdunfcytOhaq0uUSCSSIGokcow20SORJ9EikSPmBHODWYuzfKzP
MktwnHP6brMJ78o/h8lueWs4ny/kFWZl7shxGConZrnckwVyOa7I7/OnXIB/
5Z847n211Z/KE6lPVsbZZWWP/CVxGaYnYYXci/KccH07u2fyJBqQjXicdKy9
Y8/l32lIduJzyrHTnOEs5zjPBTq45j/n/EEjcpCA4fZJWSn35gMuOr+j3Qt5
Mo3JSUJG2CdjldyHClxyfie7l+G7oAm5GG+Xjb3yVyRipJ6c1XJfFsrvc1Wu
yF9yQY7JY7js3p31V+EYTZmtl+S8nJtf5Ozsk7eZ9RklrzSrcFfebzbnLfkL
MwVHWaNvNuuG54N++iKzPCe4pu81P+EiH+p/m4XC7x2eK32H2TC8H8bqa80a
nOKhftBsGZ4Xn6WL+Trcg41y7XBveY5ZigtyHn6Vc7Bf/ppVclXuyYnD8yOn
ZK3cn8XyB1yXKzFFLhw+Q3jOueq1u+oRpujNyMtvek4OyN+QJPxWeirWyQOo
zDXXd7OLwlS9OflIyii71KyXB1KF687vbheVaXoL8pOMG471sI/GdL0lBUjO
TcducZs73OUe93lAT9dEZ4ZzW1GQFDx0rJd9DGbqrSlEyvD92aVhgzyIqjxy
fm+7mMzS21CYVOF7sHubjfJgqvHY+X3s3mC23pYipOZbu7Rskj+lOk+c39cu
FnP0dhRlgp6Lg+E60jBaT8dm+TOWyBW4IddgqlyEk/I4nrp3Pz02c/X2zJVL
h2dULsZEOTeH5O1mA0bLq81q3JcPmC3CZ5W/M9OzRd5i1mOIvNSsGF6bm/o+
sxmX+EifZhYNf6/hedd3mo3Cc8x4fV04j9M80g+ZrbjMM5+jv/km/zDP8U1m
HTrI88wy4bXkPWZT3pMnmXk4HN43a+TqPJDT8r2cga3y5ywLf7fckmsyXS4W
3lP438Fz72OAHof5ekeK87uelyPhnqTjBz0j2+Sh1OI/1w+0i8sCvRMlSM+P
dpnYLg+jNi+cP8guHgv1zpQkAy8dG2wfn0V6F0qRkVeOvSYiRyEq0YhODGKG
5891CVgsd6U0mXgjPFv2CVkid6MMmfnJLjM75OHUIRZD7BKxVO5OWf7Q84Xf
K3wXvMMY/R12yiOoy4zwW3FG/pXY4bfQ32KZ3IP5ctnwLMjlmCzn52j43sjC
WD0Lu+SRLJcrcVuux0y5OGflXWZjfpPXmzXD6/NYP2y25kp43vT/AYhhFOI=

               "]]}, Annotation[#, "Charting`Private`Tag$388676#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV0ne8j1UcB/Dncu81rj2vPdM2MyMtI5m3QWVelFFIGaGMJqHQtlqUUaGo
VBrKKmmRJi1775Hx/v7x/n2+53vOc17P7zmnUvbArAEpSZKM8rMjNUky05Pk
p7QkeYFe1Kc0dfUPyqWM5WZ2Wl9Kf6P6RXrTgDLsMlfa3Cb1S9xJQ8qy29we
9rKP/RzgIIc4zBGOcozjnOAkZez5sz2mcxeNKEc9/UNyGeO4hVPWl9XfrJ5B
H66kmV4KX6mnUD7+p/Fh+T4Pcyst9VJZo36G0/YrZ/yLeiZ9aW2cm2/UjWmu
zsEq9VTaq/PxnbpCfB/1EflBvKO6MI+o28q8fKu+TRano/oGmUYX1hp3lEXp
wbPGWbIA3fjB+HZZgmz+977l5a/6neWsODdZiO70M24j89CV9cadZDGaqFvI
nKyO7yGLME3dQebne3XFOFf1Ufkhj9LOOIMNsR+t1OmsUz/HGe9Vwfg39Wz6
cxWV4jz1j8nlPBbfgrPWV9T/Xf0yd9OUypwzl8gUcpCT1NjL+j/kK9zD1VQh
LZ4z96d8lQFcQ1XSY425LfI1BnItF5Ar1pjbKl9nENdRLe6U/nH5EY/HGZA7
ntP/S87hXq7nwrgn+ifkxzzBHeSJvfT/lnMZHPeUi2iif1J+wvg4S/LGXvr/
yDe4L+4eF8e31D8lVzCBLmTEXvr/yje5P86XS8gXz5n7T85jSNx9LiU/BWKd
+W1yPkPjXnJZnIP+afkpT9KVgvGs/na5gGFxB7g8ziHupfyMiXSjUOylv0Mu
ZDg3Uj3ORv+M/JxJdKdw7KW/U77FA7SmRpyX/ln5BZPpQZHYS3+XfJsRtKFm
nKH+ObmSp8imaOylv1u+w0jaUoti8Zy5PXIRo2hHbYrHGnN75WIepD11KBFr
zO2TS3iIDlxByVhjbr98l9FkUZfMWGPugHyPMdxEvbhP+glfqp+mZ3w341x8
rX4+1qoL8mPcM1mSnpQyPg9qCrOT
               "]]}, Annotation[#, "Charting`Private`Tag$388676#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfcjQUYBuBjZBZll4RKkq1BkVEoRYVkZM8is2FvIpTsvWd2mVnZI3sk
hbK107Cyup4/rt9zP/d7znfeM95zvtyN21ZrkySRSDRLmkg0TZFIFE2VSCxO
mUhU4B/7KkbTjGKOLdFX5F/7l4yhOY879rn+BS7ZVzOWFjzh2Bf6F7lsX8M4
qusP6FqQme91b/Gkfqm9ElfsaxnP6/qDurfIwjHd2zylX2Z/iav2dbyj+8Xe
i0JM0NXQHZLfJivHdS0prl9uf5lr9vW01v1q701hJure0B2WW5KNQfZUTJZP
ON5ZviJ/zEz5QUrKI80MzJWXmIVo5fYlzBW6ynF+8r38p+9rJuFLxjg213yE
LXzleBvzN/0Ks485zczJRorYPzXTsZaZ9oVmfrYxyf1rmt/ol8V5mJPN++Px
5cFmaqbI8818/OA+Xcyruk+YJT9EKXmUmZHP5Hfc7ml5pVyF6/Z+9qSMtW+w
t5V/l/tSNB5bV0t3JO7Pffyo66q7Jg/lWVrrntGtkl/hhn0j7XR/2PtRjCm6
2rpv4z5k52S8ZpSM19T+Kjftm5hKHf1RXRvu51ScJ6X0q+2vccu+mWm8qf9O
15YcnI7z4Fn9GntVbtu3MJ32lI73Q1+NBFt1M+jAu7zH+5Rxu3WOVycJ23Qz
qav/3t6OBzij+4Cy+vX210nKdt0s6umP2duTk7O6jpSLz5C9BsnYEeen+1Pu
z+PM1tXXHZc7kItzum7x+YzPF6XppHtOt0F+g+TxN+zJGCfvjOcnX5Q/5AmG
2dMzS57jeAP5hPwuuRliT8NU+bzj3eXrcb84L/lhysijzUzMkz83C9PZ7Z+P
60C31KwZ1615Xzxn7ojzMJPH+8p4+2dmXrbydbwX5l/6leYAc7qZi008aR9u
3h3vEbPti8wCcW27b8O4VnTvxedQzhHfAfF9YKZlmnzB7XrIN+JvUZYx9szM
l7s4Xj4eT65FCgbEuTNB3hWfFflveSBPxXPQNdL9KL/PQ/wU1xAV9JvttUnJ
bt28eC+pGN8pujqkYo9ufrzmcY70pBe96RPfS3E9058PGcBAPuKFeA39jTdJ
zV7dAhrrT9o/4GF+1g3ixfg+stclDft0C2miP2XvSB5+0Q2mkn67vR5p2a9b
RFP96fgs8gi/6obwkn6HvT53ciCuL90/8kcUZ3H8runOyJ3Jyyf2O5ku/xav
gXxTHkE5xtqzsCDeV8dflnfKDZgkZ+eueG/MFEyU55mPcjCuWfNf3SpzkDnD
zB3vESXiccx74ppmTpyjWTCeO0vit9Y8q19udjGnmg/ENRiPYR8ajx/fQ8yw
LzAfi+/ceC/NW7qRce3JeXhOHmdmZWE8f7erHNeC3JB08XrZUzJJPhTfI/Il
eTBPx/UXv/O6c3JX8vFHfG50t+VRPB/npqui2yU3Ij2HdZ10l+Pa5xm+iP8D
dOflbjzGn7pPeUW/296Yu/lGtzT+D9BfsHcnPxd1w3hVv8fehHs4olsWv/v6
n+w9KMBfuuG8pt9rb0oGvtUtZwRVHduna0ZGjupWMJJqju3XNScT3+lW0kr/
s70nBfk7riVdgtH28oyXs7EonrtZJD67jHLb/wFEFU1I
               "]]}, 
             Annotation[#, "Charting`Private`Tag$388676#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"LQR feedback solution\"", TraditionalForm], 
         PlotRange -> {{0., 4.999999897959183}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.86603563187189*^9, 3.866035689722225*^9}, {
   3.8660357259025517`*^9, 3.8660357508814926`*^9}, {3.8660358204570436`*^9, 
   3.866035828726376*^9}, {3.866036232992942*^9, 3.8660362484399576`*^9}, 
   3.866036305698484*^9, {3.866036352606349*^9, 3.8660363637167645`*^9}, 
   3.8660364122671003`*^9, 3.866036542682022*^9, {3.8660366091165876`*^9, 
   3.866036617732808*^9}, {3.8660367989793296`*^9, 3.8660368164846816`*^9}, {
   3.8660368925851283`*^9, 3.8660369377505555`*^9}, {3.8660369728052454`*^9, 
   3.8660369844674826`*^9}, 3.8660370219743814`*^9, {3.8660378052866507`*^9, 
   3.866037833758464*^9}, {3.8660379283149557`*^9, 3.866037951468486*^9}, {
   3.866038205103652*^9, 3.8660383054662704`*^9}, {3.8660384723504257`*^9, 
   3.866038749036155*^9}, {3.866038997589961*^9, 3.8660390128540363`*^9}, {
   3.8660391824923034`*^9, 3.86603920156415*^9}, {3.866039344433054*^9, 
   3.866039355739406*^9}, 3.866039393986066*^9, {3.8660394308961573`*^9, 
   3.866039450964682*^9}, {3.866039503005892*^9, 3.8660396644408054`*^9}, {
   3.8660431155153365`*^9, 3.8660431194170775`*^9}, 3.8660431594401646`*^9, {
   3.8660431956904683`*^9, 3.8660433728373127`*^9}, {3.8660452873845954`*^9, 
   3.866045327579627*^9}, 3.866045375830059*^9, 3.8660454744832287`*^9, 
   3.866045600117694*^9, {3.866045633538911*^9, 3.8660457145657682`*^9}, 
   3.866045884603906*^9, 3.8660461078588743`*^9, {3.866046154162935*^9, 
   3.86604616332098*^9}, 3.86604624985406*^9, {3.8660462940717936`*^9, 
   3.8660463817545033`*^9}, {3.866046424342763*^9, 3.8660464543760724`*^9}, {
   3.866046498133954*^9, 3.866046526991644*^9}},
 CellLabel->
  "Out[3547]=",ExpressionUUID->"5446345f-a5e4-457c-9eac-a31880747d5c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Tau]New", " ", "=", 
   RowBox[{"\[Tau]", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]Init", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FC2", " ", "=", " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}],
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}]}], "Input",
 CellChangeTimes->{{3.8660358403076415`*^9, 3.8660358682416286`*^9}, {
   3.8660362846122885`*^9, 3.8660362884760427`*^9}, 3.8660369452981253`*^9, {
   3.8660378086985517`*^9, 3.866037827372527*^9}, {3.8660387546723385`*^9, 
   3.866038754789301*^9}},
 CellLabel->
  "In[1341]:=",ExpressionUUID->"27af140d-a3b7-4c27-ac5c-4029a16719f6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"n", "=", "50"}],
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"\[Tau]", "=", "5"}],
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"\[Tau]1", "=", 
     RowBox[{"\[Tau]", "*", "1.25"}]}],
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"A", "=", "0.2"}],
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"order", " ", "=", " ", "4"}],
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"maxIter", " ", "=", " ", "30"}],
    FontWeight->"Plain"], ";", 
   StyleBox[
    RowBox[{"maxError", " ", "=", " ", "0.01"}],
    FontWeight->"Plain"], ";", 
   StyleBox[
    RowBox[{"uMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"maxCount", " ", "=", " ", "10"}],
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "1.7176561578501914`"}], ",", "1.9865343349458087`", ",", 
      RowBox[{"-", "1.0173496185733697`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"FCs", " ", "=", " ", "FC2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ffCartPendulumFCs", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "maxJ", ",", "InitGuess", ",", "FCs"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "K"}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["FC2",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}],
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox["J",
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.8660363414229593`*^9, 3.866036342138728*^9}, {
  3.866036389704382*^9, 3.866036391006962*^9}, {3.866036425446851*^9, 
  3.8660364510635843`*^9}, {3.8660365306119165`*^9, 3.8660365339978266`*^9}, {
  3.8660387607793665`*^9, 3.866038760910325*^9}},
 CellLabel->
  "In[1358]:=",ExpressionUUID->"86422da5-d0c2-438a-b415-153a68829e37"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
oA==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{28, 30, 251, 1943, 284, 252, 253, 254, 255}}], 
               PolygonBox[CompressedData["
1:eJwV0kdszgEcx+G3WqlwsNtqjTQuRqvFxZaYVRcq0VKEJkaiQ6mEkFBaHG2K
mBd773mii8QIXQ5WR2JVolSMev6Hp7/P9/8e2vd9G5+Vl5bbLhQKhRHpRxz9
dB+66l1e7M4lnc0EbtojeKm3M5iT9gAe6o3Mphu7PevBZZ3DRG7ZI3mld5DA
KXsgj3Qh6Tyyp/BeH6Y7e+yeXNG5PNUz+KwncVuPokrv5I1eyF+dyGk9iFK9
iSqdznedQameygfd6q7hiK53F9OOiPBQqCh4X57vdaOI9Oyq/VEvJ08/c2fS
2Wtf7N96HX3tyfYdPZpOdrX9XRcQZ++y3+pFwedv/7PD3EI73h1in9GD6WiX
2c16BZt1tZtBi25zNzBHl7kp1OujNOglhAefq73PjeaaXsEU7tpjqAm+T5I4
aydQrouYSxT7PYvhus5nKsmc8yyRCl1MJtGUeNaLG3olKdyzx1IbfN8M5bw9
hEq9hZrg/fBDz6NcT6NB/3LXckw3ukuD78hnFOG2d4vd/m6M1w/oWDrYN+1P
Ojt4D/Yq+7lOo4v91f6j1we/S993x1GnW9zV7NXv3Cza9DAu6CQe629uPlt1
rTuXn3o+FTqVRn2cJr0s+JuDz8g+GPxvcEt/dnOC5/6uAvuFnkWzTuWBHs/r
4DtlOBftZJ7obdTpTFr1Air1dJr0CWI5ZPemJDIU+g83HoY0
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwl1FdszlEYwOGvRas2IRLRYdS6M2rvcWXXuLL3SEiI1iYkNsWFWLVr75nY
885eVzY3RQhNiBnPGxdPz+89HV++8/1P64yamjslOZFIJFHPl9rWdAbpBdyk
oR/YRxPdhckcp5q99VTRjenMxtREYgOVdSUq0ohOTOIYVf3OOirogcznBg3s
7aWhLuAxrczn6KgncpQq5rWU14W8oYf5FgN0CYP1U+bp62TrIhro3wzXL1mj
p1tLeKRbWs/SQc+2/uRjvJdSiURffY8J5prmSfo9R8wp5sq6gHLmuubFupQ1
yVrDOsb6jq2+n27O1995Hedk7q5vkmvOMs/Xf/kaZ20epJ8w1zzV+plrur51
D9n6F8P0C1brh+ToM7TXH+ij7zJeH473FudAmt7CK7qZb9Bfz+Eq9cy7qa9X
8YAW5tO00+M4FO8lXpuyul+cI1fiTOztSv7/nLVlLAepYG8Vqbovs7hMHXs7
qavbMIYDlLe3kpT4GVozmv2Us7+CMnozL+lqvk4fPZNLcb7mHWTpnwzVz+Pv
6vs016dopd/TW99hVDyH1uK4EzrNupzSepE12eeUsFa3jra+ZVPcK3Oe/haf
Tbxnc5f4/OhtzjTP03/4EnfEPFA/Jt9cyxwX9RMX43XNmXo7meaFcYnt/dBD
9LM4Bz0tnp94bnUz60la6mJ66duM1Hspq5fFMxv3mOdxp81X6aXzuECGeRsZ
ejl3aWo+QY4eQRGp5qVxJronMzgfz769QtLj+Ym7yJ64Q/aWkJT0/x/SP2jE
hHo=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1, 197, 151, 114, 85, 63, 47, 2, 198, 152, 115, 86, 64,
                48, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
               19, 20, 21, 22, 23, 24, 25, 199, 153, 116, 87, 65, 49, 26, 200,
                154, 117, 88, 66, 50, 213, 167, 130, 101, 78, 27, 201, 155, 
               118, 89, 1941}], 
              LineBox[CompressedData["
1:eJwl0sdXyAEAwPFfp/6NsrLqYia5kEq8SCcz6dmKEy3lGdmrdIooebL3SCKc
EhEPlWRkhex56vNeh8/7/gPf8PSslMyQIAiuUhIaBMP0MUdYxwKSCaOBMlYx
g/EMJ5w77GM1M5nACPrQl370p5H9ZDOLOEYygLuUk8NsJjKKCO5xgFzmEM9o
BtLEQfKYSwLRDOI+FeSTRiJjeEI161nIVAbzgErWMI9JxPCUo2xgEdMYQjOH
KCCdJJ5xks0sYywtHGMji0mhgzNsI4uhPKSKQubzivPsZDLtnGILn6hjOW+5
TDGxtHKcIj5yjSV0cpFf7OYrN/nLdF5wlp9sp5sb/GEF76nhN3v5xi3+Eckj
DvODtXRRSwavucAuvlDPFJ5zmq185jqZvOMKJYyjjRNsYilvuMQeUnnJOXaw
kg9B79elfOc2/4miB/OebF0=
               "]]}, Annotation[#, "Charting`Private`Tag$170360#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GlMz3EAx/FfhVIRxowliuKpM/ftkSNyPHKX84E2psgxY3OE8MR9y33N
vTkjnpErHpHzSTFGG3N7fR+8+r4/39bxq/6lTy/InRcTRVErb7bFR1Gq87f9
h7/8I5XIfQyrY6OoAWV6Ct1owx53bbiqFzKcWNa4i+ewnkp3ztmdqdTrSGOv
ncY1XcgIyu2BvNTbiWOtncARPY37egQ1ugfndRce6q/O+ZToF86J/AgPGxdF
K3RbvS+cNHR33f6k59HaLrKr9Dia2l/sP3pZ+Bh7pH1bDyLZrra/6UJS7R32
O51HcztyxjpXOuuFZw9fl6O6xjmH6fqBcyS1OpsLuiuP9Hpe6kn81O3Yr9tx
Qy9iFHfswbzSO6lPiZ3IMZ1HT9JpED6v+ySO63x6kcEBd+nc1IvJIZ4N4Zk5
oWfQm/YcdJfBLV3MaBLY6K4RJ/VM+nDR7sbj8PnowCG7PeV6CWOosIfwWu+i
IaV2Y07pWVTqUXzQfbmku/MkfG2q9WR+6UzKdAdu68/OApbqZ87xNPN7+mr/
1cvDz9fOte/qoeFZ7Df2d10U/vbt3fZ7nU8LO8YZ51wVfibORO/fpFPCa8g+
bdfqubS0Z9sPdU54Nvuj/VMX009fdvbgqa5zLqBUv3JO4bfO4rDO5I5exnM9
gTo9lnt6GG/D65YkNttNOKPn0J8rdjZV4fumI0fsLCr0csaRzJbwGuGsnssA
OtGIxqSw1f+X/xVKg0g=
               "]], 
              LineBox[CompressedData["
1:eJwl1EdsznEcx/G/IoSDotqaiTgYrda42FtrXIxQWoQmRlJ7JITEHkeUmjEP
NrVb80JpS2KEqjrYJNRIjIr5+sXh1e/7829Cn+dp2jJ71oiZ1aIoivNla60o
6uO2JZaNMVHUgHydQ1/accCz1lzTSxlFc/9GfTfX84ac1NPpR4HdhQd6PUkc
tNtwXS9jNA3Y5Fkcp/QM+lNod+Wh3kAyh+y2FOnlZFBkp/FC76Ihm+1GnNbh
hd7Rw6jUA7igu1EWXi9P9UR+6/Yc1u24oVdQpjP4osdwQ6fzUle5C9mtX7mT
iaFG9ShaFfP/Pc5z46nl2Rn7nc5hlr7rDqee732wf+rFtLAH2hd1d+raj+wv
ej5N7Vz7mZ4U3n/7j13NXW63dFPsIzqJOvZN+5OezUr9yB3DV/3XXcpYfdMd
xCu9h9d6CtXD+2pvcRM4q2eTxiW7B+Xh8ySVo3YyxXoVmcSH3znPEjmn55BO
B4551p4SvZosEtjmWWPO67kM4rLdk8fh86Yjx+0USvUaysPr4ZseR7EezGv9
w13EXv3GnRo+I+9RDbemu9pt5Sb6/nbdhNp2gf1eTw+vwZ5n39MjiLU/2r/0
kvB/6StuLyr0V3cBefq5m81f3YkTOpVb+rM7h7X6sZvJdz2eEj2EN3ofb/W0
8DOH98jeEX43KNSV7ozw3M81376vR/JJD+Gq7s2T8JnSmXy7A7f1Oip0FlV6
AqV6KG/1fpqw027GNn9L/gHQB4u+
               "]]}, Annotation[#, "Charting`Private`Tag$170360#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{804, 880, 865, 852, 841, 832, 826, 805, 881, 866, 853, 
               842, 833, 827, 806, 882, 867, 854, 843, 834, 828, 807, 808, 
               809, 810, 811, 812, 813, 814, 1946}], 
              
              LineBox[{1947, 815, 816, 817, 818, 819, 820, 821, 822, 883, 868,
                855, 844, 835, 829, 886, 871, 858, 847, 838, 823, 884, 869, 
               856, 845, 836, 830, 887, 872, 859, 848, 839, 824, 885, 870, 
               857, 846, 837, 889, 874, 861, 850, 831, 888, 873, 860, 849, 
               891, 876, 863, 840, 890, 875, 862, 893, 878, 851, 892, 877, 
               895, 864, 894, 879, 896, 825}]}, 
             Annotation[#, "Charting`Private`Tag$170360#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nccjlUYxvHXrBBCZlZS2SujzNAgpZCVlK1s7ZSMyCp7lL217BUS2Xtl
b0VIdiGt7/3H73Nf13We9Z7nnPt58zbvVKdjkkQiMTFpItEzWSLRKUUicSR5
ItEGabFHtgCD5X/zn6Aorsl6obP8KN8W6fCTbCGGyP/h+6EYrst6o4v8GP8a
0mOv7CtZFkzha2CRbCj/L90fxfGH7GN0lR/nX8c92Cf7WpYVU/maWCwbxv9H
D0AJ7OArYAP9p/EVdAEs5F9CH9kb/Am6HTJgI18aq+j9xr+hs2Eaf0FthGdi
TK2OHfQSxw2nExjIn1VfREl6p1oRaVK6Nn+TboXs/A3nfU8XxJ38IuNX6KYx
N3wT/ljcD+n5ffy/dDvk5Ps6/036pDwp3179hX8BGelNahmsjrlUm+OAc76N
+2O6vBYO0E9gJ73U+Ag6CQbxpeKZZZ/gLdkpvgMyYTNfFj/SB43PpnNgBv+7
2hjPxpj6JHbRf6uv4TvHj1STIrln/9TYObo+MvGP8LvoSrib38TfolvHPfhb
zl9JF8Jd/GLjV+lXYl3wL/PH6Vq4h9/P/0e3Rz/nvq3+LOuI03Qd3EtvUcth
DX3IcXPo+zCTv6i+hOdiTH0Ku+lljhtFJ8NnfGnspitjM/2X8R/owljCN401
LnuH/4XuhMw4LJsb7xaz+NpYLhsdc4TBfBnclg3Au7LTfGdkwRHZPFkufMk/
jxWyMXwKDOHLxjuQDcR7sjN8F2TF0ViPGIT3jf0q64pssQ5jvvG5PCWGysrh
H9mn6CY7y7+B7DH38ZvxhfwODJM9GutX9hk+kJ3j30QOnJDNl+XGV/wLWCUb
G3sDw/nHojfRVbAl3qfxVXQRLOVfievEmot1Tg82/iF9nn4LZ+i68T7preqj
WBu9QW0R+yj6nponfqM187WxS3QTZObrxDuin0Y6fk/8fvr1uCa/2vnjYj3G
fPMjjJ+nG8Ta4stHr6QfR1p+a6wNuk30Dnq1WjT2RvRa9dWAPhlrDgfpIe7R
nf6Nfhs5cSr6rywvvuHr4kfZeD4VRvIVkARD5R/JLtDvIBd+lq3BBHlqjJJV
jJ6CYfIest/pd5E7eoxsLSbK02C0rBKSYbi8p+wi/R7yxP6SrYu+Et8PY5dk
7yNvvBPZItn9+Javh/WySbHvMYavjOTxm/hiWEY3w8j4vvCX6W64H7/KFsvy
YTb/IjbIJsec43O+ClJgDV8cy+nmGBXfG/4K/QHy4axsiewBzOHrY6NsSqwB
fME/jpQYLe8ju0p/iAeip8k2xR6MvRP7IdZ0rJN4PzHnMY/xe+MZ47qYimno
61rXXKM78sdakm2OcXl6jJVVxR2YHj1adp3+CA/iN9lSWX7M5RtEf4trR0/E
OL4a7sRavgRW0C0ww3H9+D/oHngI2/jHsI6+YPw7+kHM4xtG/6Fr4KfYX8an
0xkwPp5FbYjq9F61KrZFL1Pbxp6h16klY83aG9/z1+lmyMa3jHVO145r8of4
hNoh+p060/3603/GOuR7xlrg6yEj/zC/nS4fa5xfz9+gW8badu4y9aHoVcbm
G7tMv4xG0RfVmtgbc+DYGXFNTOCfwD66GrbTqWL90qWwkm6FWdGv+Rt0LxTA
Rdl2fBn/heL/TPzXiG9zfEejPzv+puN6o2D0IdmO+B5FfzZ2S/YxCsWzynZi
pjwTJsqeRGrMjf4s+4vug8K4ItuFWdGXMEn2FNJgXvRn2W26L4rgqmy57GEs
4Btjdzx79EVM5p/G3bHX+EfwA906egv9PA5H/zG3HencMcfO/x/oL23R
               "]]}, Annotation[#, "Charting`Private`Tag$170360#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1568, 1845, 1766, 1703, 1655, 1621, 1601, 1569, 1570, 
               1571, 1846, 1767, 1704, 1656, 1622, 1602, 1572, 1847, 1768, 
               1705, 1657, 1623, 1603, 1865, 1786, 1722, 1674, 1641, 1573, 
               1848, 1769, 1951}], 
              LineBox[CompressedData["
1:eJwV0kWMVEEUBdBGgkOCBXfC4O7u7ixwJ7gT3N1tYIEn2Ab3DS4LPMGCOyvc
N+h5izP3vup0z69fVWTAmM6jUyQSiYL+bE2bSJRIk0jUkm/lHqbRjaYkUdtn
7+ReptOdZrS2/kueZDnDKUkd6+/lPmbQg67W0nFZ30Bz2ph/y1OsYASlqGv9
g9zPTHrG81hLzxV9Iy1oa/4jT7My/r85H4/1kfTTs3JL3844vSiv9NLU0z/K
A8xisDkX9/VesU89A1f1qbI0m/TRshDP9dmyIi31dvKvXCDPyMmyJCtZFfuT
+VnCk9ibLM9aRpn7y2ws4na8a1mW1ewwj5fFWM5r81xZmTJ6fflJHmRinCmz
9SEyNw/03nEWekau6ZtpRXvzP3mW1bE/ytLA+md5iDn0iTOnHA199kUejueg
b5wnHawnOKevYQwDzNm5o++kPI3MX+UR5jHUnIeHcW5x5nomrsd9jD2yJX5P
FmYZL+K5ZCXa6h1lChZy3jxFlop3H+847oQswFKexpnLCiQz1jxQ5mAxd+Pu
ynKsYZd5gizOCt7Ec8sq8Rt6Y/lNHmWSnsR8fZjMy6M437hXemZu6FsZqxfh
ZdwfOukpuaAnM0ovyLO4vwzSc3JP301Fmpi/y2Nx9+J9x1lby8JNfVucMZ3N
qbior4v7RCWaWvshj7Mw3kOcI12sp+aSvj72T2WaWfspT7AoninePVWoSjWq
U4Oa1KI2dajLFt//D5iBipQ=
               "]], 
              
              LineBox[{1950, 1637, 1617, 1597, 1862, 1783, 1719, 1671, 1638, 
               1618, 1876, 1797, 1733, 1685, 1652, 1598, 1863, 1784, 1720, 
               1672, 1639, 1886, 1807, 1743, 1695, 1619, 1877, 1798, 1734, 
               1686, 1653, 1599, 1864, 1785, 1721, 1673, 1640, 1887, 1808, 
               1744, 1696, 1620, 1878, 1799, 1735, 1687, 1654, 1893, 1814, 
               1750, 1702, 1908, 1829, 1765, 1923, 1844, 1939, 1600}]}, 
             Annotation[#, "Charting`Private`Tag$170360#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 4.999999897959183}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
PBeB1ZG91lbvWKDS/f6CvMUkSKHODAy4cf9++Fjmr5Q+0L/LPv8OD/f723s1
qKqmFTC35ha02hOg1/pJRaXX3UCgbJ/WQ00e6OP9Nz4mYByoMA0mH28SgRQB
r1YPNyIsMbb2qGKJwLAbJP4Z03Iwcl3VqOm7KKz+XSvRpr2A4c/jlK98kH+6
5n/P47S/98m0PqEsPY+rkfI5m8HdTy93CWleDKfDb/R28aKvFPTDmLlldpYO
8zAvdVY5GV2K3/Pi9BEGTFkUVtrE7fexXcwBjXIGtOujJSeFUNDz+LNvkeo4
2O2WIB0cwgNbm/tCDNEE6E32Y5q/E4D36x2l+Y8ygcPaiZOJTCpklJ1N3U2Y
BmueHlFt4u4/ieMPs89OzINQrW+WertmwTQfOZ0euwByembfJCuMgtuPSGFa
2mxQxDLVjPvUCbKj33l9aOUA1p0oGYPRNlAi/0zrUhU3XymOvpCIGQISrVtp
5xNEYN7WjfphmkywLMIrheIqCuXMJYrHzUaxl4cXRM9JcusFpz73Uz0vqqCc
iZm9RYNCPt9iPFzIqCTbdsXJCRrcnlj02HcrFR35tUObdogOg31EtQgqVNST
dDD+Rzkdmgbstzixn4KWS60491aZ2x8artqbd5CM8musr6pEMWD6l+sLXZfI
KCdT/N3GWe7PxTYE0+4IIXatSsQPhwmg5p97+6InCVq6XqPJMCfB59wD7dtv
UGH60d7+hOQp4McXXjZUTIWZGrkLhQoLQE4p98uq5jGwrJGtI/JtEWyoa9eM
HugGn07fpit5coBWqvuQwa1WYPd84/mcaAJs7FXqHq3oA411n++pErl5enl0
8/wTAqI4F6y4d5oGD2ZanhA7I4DIDeutgn/R4F219yvN+agobWdGCBvSoa/Q
cBadm7e9Xtz6YcdgwLrlbZpSYWTE0NiXaHqRARcuF5YN6ZGR1lTgN7U2Bmxf
f98lp4a7HwdSA4vWTgKd9ryopu9k2KezQ+VPDRM8py8u38StF/5rFq0nnadB
uC4flHlIgXuanE3PEhYBJWRtytkVQ4DXXaTlUDIbuOSG3WKGtgOD1ik3tfUE
mLxhs1OYRyeIHVENerGZBptX2DrmPOBDVwsUhe0ecevH8aMXb8tx+6Xroc2G
wnQod+4LeT03D0meae9Zc4EOLfMDZvWJVFQUlC28ajcDin7u4nunRUZ7XByc
hJ8w4C/3B5LFXWQkY5eZriwmBn/5zgW9rBZBqi8jKCqlk+BOj/2OUCUqPKMu
Lbjj1BQ4zPdLcaqfCg+OXaH5pi4CHvk3WTfUe4GN7WSHgw53fa5xKxs93wpU
6AcODTnQ4GV7f93AbySU3x9+fkU1DXYeqNNpaqEgg9nG595adHin6Yjmvf1U
VNlTs77lNANeqrqcrqdIRlful7Q++8qAfbcT4jqEqKgscP/62TgmuHKd/3i6
mCA0Gde+cl9zGnytl6hunqJAo+CwwipXNmCWZr8+MtQBwhs2fP9EIcB1OyM7
B7Z0gIcO1fuy73L7rXaJ+Ec1ZLQ8dmy2kUODYrH1cdmmVNT/zRE7pcPtL3mU
hi13kxFr5e9/9+8zoO7EZmdiFhk5c9oK8vjFIJhI5J1JEkYXJT1XMJSYQMPn
aXVUBRW2RuWU/62dAi1+bbnPAqhQ59raXTMZHKCyzHvyArENOL0v3TzTS4Ox
zwI3jK2lIkLEBcdgczr0FzLsrOTut6PXGqglAdz9stWC6GRNRtRRjU3tPFPg
rCc/SFktCN9bxBD/1rLBq/sCNM0bbWChr4wvHhIg/xmbDcMXu8BB3uBqgQIa
3MLweG57hoKqT8uVvF5Fh44vGmtjufUiZOu4ffUBBryybkxogvv9xr/o+HH1
FQMO6h53slSmoP0rt6aI758CM72aDQmzVJhqrmA0LckB7CfZPwRiWsGy756G
Gqp0yChokRC0oiLpbWEjac4MGDG0QXiWm6clz9o5jX9iQE1xlT255RRUoNT0
iH2FCe5mBY3ZkAThael1ZJk57vWnbvxy3oCKrM4nvHaOZ8B4OxnHm5FkdKJ8
+u5KUSaIjLgoo5VOhTe8bHOiwjjgVhtFuPN1K3htNGEA2mmw50Ns2kZxKqo/
KcTcaUSHPz7feeW4k4re/or6FnCVAT+Ra+ZXGZHRbMzbgt5+Jpjo77Y7ISsI
Oxz3e6a/ZIOH1w9zNs23Aekp6xq2GDdPOVqmxdpSkWzXF63zpgyYX76TV0mV
jESOYZcqLDng5rkHmY89WsF5qe1SxXp0eP+i8s0GMyo6EybsKHaOAe/fTj7y
RJ2Mvrd/yh5/xgQcH0V2tKQg/EB5PxRJosPA6p3OmgeoKMxnIElwN/f7kPIT
PNROhWPB/1oOl3HAsubtaszTbUDKKOf1L8kpwGOe5cfHXd/Ju38kbBlgg7rS
lV91JNuAT+ffPI81dGh7x+uSDvd+jsWJB8jZMeCXZUn7tq4nI3VEmQ0+PAZu
J9pLlW1lgf3qReeUJ8fBgO1h3rAWPhg4VProys1JoGX3cXLfSwrcqNdh+UCd
2x9yM789VRCm7dh0oa1iGnw4VRzc8IMMDa+uzTO4NAvibG0U2rhn1hfl3h8O
6+YBr/TXN6vvLQKZ6KbTkS9Z4HunuhfJdxL0R/T7x51YBMP5cjGLtX3g0g5F
8ut5Nnjds2qZfXsrSF0W8P26HQHSUqdEqeHdYGxH86qrajzwTHTrhwn7cTCi
f9j/lroIJG4c3b71FRGm7Wt1ODErAoO2n4mU7PkIaKquswX1ovCngk2afjsL
w98fzUa/NtpC/d/7IxnrLxHdaZSl90dit44JynHv73zTkOGHMDp0bmOUnvtO
QXqblFWdZugwQD1ETbSKjOpUZtNbHbj3v0IrJIxb77N17Cn+iAGZZ5TThH0p
SM6iIfeU4ji4P3e29pYbDxQxUTolWjwBjvFWnCVnC8CVxTffGx5kAvAo2Mr7
HxUKsWbK5+emgFH5SOhjEypMWm3O0RiZB9atH7eInJkFZVti3ppGLIA0hu0u
kvso+LFuel23Ghusc0qZ6+nrBHp3QuqGf3JA/WBrvGp1G3DhBNut/kCA+0Oy
WCP7hkDzOqsHlrEi0MfhUoNYFRPMxbBuZzmLQofPgzNF1iPYR617g62raLBp
08PvvM95kStASTsDaTA958/hN3ZkdOD2utVvx2iQ31KUPsXNqwwR19XX7ehQ
v/zMvLwqFSmpb8ldU8bd78uED7yw4vbbpL0n1yoxoKnC6woPBzLic+L3TI1k
wIZTBzz7L5BRTLJf69VpBoQfJ3grPYWQ+rZz7ik2E6ByY3+Y5EESrDvwsODo
6CT4x/lzI9SHClOS3ATN46aAt9uJn9QyKjzrvJkxKrsAYI+fgBFhHDgc/Pv9
XfUi0AkeN04X6QGHXO3c9rtygMtwUqL41VbAG8Yfbx5JgN76ZZk7IvrAYIbL
+SQeGhw4obp4MZCA8u8RZXtcuevjwserUocEUMrLCdvfP7nnT83QsfccCrK5
XOPuDuhwBZH4w86Yiprvl1SX0xjw5IoNNU4RZORaxQ59782AAeceuKjokJHU
8J+J6y0MKF1gwUgrpKK/Nj3ON6UmgbehvEt7BRkelTteo1LJBJnfPvw8yz1v
fO0Dr2QfmQa6xSZ8DrkUyBD8dzRnbgFsyQh0PmI1BEzGFr3JcWwAtuRNweft
QNi+NbF8DQFGq9x5oHOgE2RW1ByR0aJBi3eqb5Vv8SG5Pj/xtAc02HDFotpt
JQXxO9m0Jwpy6yea8DTnnsf1aXyfo87RYYXXnmOSJO75fLaDGLiLASu3nHoT
pU1GqQuCVtezGNB/z+6GB7/JiGwu/NGXLgZ96Z7qQWkiKCelINv9zSTw3HU3
KUSaCk+czlCbdpoCPmo1NzP+UGHahdO5iomLwHXhHnuzQy8YtEK6ARocwHES
3at5qRXUG2Y4bbLn9mMH8m7nlJDQrs8HfU59okHLq8NS6xspaFZ1Mb5Xkw7V
ZzdqunPPQ8krvivMTzFgh/qhVGdu/+IUvZZNqGPA1YLiMkHTFKTvcf6D7h0m
YG0s+1BME4S7lEtTD6hMg2jHa1gvhwKjqFfMvZ3YIPyWldYG4U5gfYBGcCAR
IDzsuX6C2gEMYqTtJqK5/YBoXdBnjIxyfd4vKLJp8PyaZSv4TKjI7F38q+/a
3Ps9lppVwK0XFgUhXSLJDBjt9mVD0kMyMmcafFsgisFdwyeVnlwURhP80a8t
1zJB7I6fpQolVPizWmPgcdUUWHRT26x2mwqrfcfuSz3ggCNavhs+jbaCmQe3
dY17aPA06zTPOVluv1Fxz2DalFuP+5Sibm6jotfL/Bc2+jOgq9GqueQDZBTU
aNkgw2IC23JJooqUICQ13kxNrmKD7mMbotLvt4FK52yNDdsIcK/s7VvIsguw
t7Q0HHhKgxN6uyW/HKcgR/N/GFmCDpufrFfy4daHv+sULbT2M6BlnF6olBIZ
jRjf+fjvBQPynOsK0F1DQcYW5WXVxlOApV85GLxAheqmzIeSyzkg8Plq2nxK
K/hEiVd+qEKHOQqrPKq568vru277suMMeOLQqt7f3HrPfwIL2FHF3f811CeR
LyhIadk8hF5MsGrex9eCVxCyCeOC52a4ee+IKev/6nMO2Si7MZYBfa+1v2wM
IaPO3JWbDpGZYOVJU82MZG5/dH4d35sADniaFZIyntUKTJSwPdGt3Lxm6bh7
A52KAlM1fz/fTYe0+7vMundREc0DVkz5MqDV2z7l9l1kdMGvZa98JxPMh6Zt
ZnH3n2IPoFrkswHRctxQSrIdFP6S+7qfQYcu9jr/VnPrQVA1UbnVmAFrZs65
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
dWc03HE5yoRujQ+fbn9Jhjt+nzofqMGC9L/YlrwDFNgiDRNvbpWAu552Yd4V
PQBfv9AkKmIqn98Bltr69J0erwICJ21oP1bz2P7y3N+ZGxqAbPCC2R+n+ewD
yzBpeksbMH59PEwTzTcNYf7JDTM9QOFJ2+RnNB9EhmxVJdsPgOPfbcaY6eh5
JqcW6NwaBhltDxLq502z8XzThdzRMr+XNAzPNwVGn4pvn8fANC5YVhqKTIIK
krCPEprf8XxTccWNzmmkX/F8U/DBh6mHI6jY5/PCsgNcEtT98a4hVQF99n/P
T5sWg375hnr7HgnAyujvr3Q/MqFHrcbjMiMKfKITmlQWw4KCGaVdiX1k2DS5
znT4ogQU+/QzfE//T4KPPRT/62C7cgPwULNetzSxCaiGXdeOe8Zn58nw3Dxe
dAC+W1buJNKvkmfTaG+bfwI5MuOfxWU+2zzauKvNqA/w4MbnXkf4bDz/1B2u
FBt7gI7djhfb68qbAMs473V2bmFgFrtKc5zPkeARubUm8ZeoWP9EDMPThAm9
PXW2W7qT4UXF5P4LEiy4PJO3YQrp1zzh/fX74iVgjuvvt90dnaCU8a1/w9l6
0KOQ/2ilFZof9xoNP6W0gcW13koUpD98bP5autztAS0iD6v/If1qdas9+/6f
fqAjxlLcEYX0xX95qNb5J0taJuiY4aKLQ5k1HMCen6JfZczA8DzUvvpvC7Pj
qJiUbvlGcjsJyn0fc5pZR8Vq2u4uN37FhGoSZGElNQr87lCyKM8X6dcdRstN
51Mgvv6l/S3RqjOSzeBRkfnd7t0tYHmUWVhwIZ9d/rMyNfxNN6hP/xTyD+nX
ynsSX/Jl+4HgvJ3RxedRvWlXvOTOMQ4YXShRIIf0a9vJhVKHvVE9snfxphWt
ZKhUrE2KMmHBBHu9cjNzCtymvYyvRmoEYUoj/Ak0Xv8Z22R8IqcdiHsWXJ1C
+lW7fAHHyKUXDAcz5CaQHssONbWZvTMBwvxnghjLGZjMj5WvfxhMAvdPdVwt
bTR/7xZbq9HOhC26QbJ2thSI89JWac4xPVU14KVRVPzvtU3gnTI1Mi+ez8Ze
ftjFu9gB9ANu6gYhfZX6QFJVldUHRgaz7mPo+UefSehRbp8ALn0B2TGoPhPd
gCWOCLGg+IYencVIv864B1p7RLWChZNnIs8jvVWZ/0L1zf4ewKr5oLILtSfz
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
j95tcBNdTfw9qCgCrd9ZdBDH/wfqaKEM
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{28, 30, 150, 1925, 182, 151, 152, 153, 154}}], 
               PolygonBox[CompressedData["
1:eJwV0zdMlVEchvErglgTjcYGSJwsgC32xK6DhSJuUsXYYkEd7CWxJvbYBhEH
Y0w0AoLiaAd7d6MImtgGQbAOlt8ZHp73/37nu3z3nO/2LyjMXBUViUTaIMqf
Sk5EAqLNNVyFCRZdN2ehF77oSpCkv2SeiRjU6lJ1T+XlGIBq3UTdDTkbvdGk
m6+rkTdgJEp1yboSeRbaYZH5Pe9Enetp5mfyCgzEPd0k3U05B30QvlATH0Cz
61nmWnkjRmGL+Q+fQpnrKeZSeTZisdj8gXeh3vV083N5JfbJnTBIXsc/+Tju
WzfZfEvOxR45Fn3lQm7m83yQT3BPXMFX92Vznf4sb+LD3BWXMdq8lf/yBS4K
z81xqAxr3D+Ey/TFPId3cFu0l5fwRz7Hu/kod8cb92Xwi7Bf2C93xmB5Pf8K
z4kH1k0x35bzEIcWXY6uXt6MMSjXDQ3PI6eiAxp0DzFVf8ecj3i06iowTF9u
TkNHNOrm6l6GPUMSHumm6e7KC5CA1WHf+BC+uZ4bvk84VxyRu2GsvI3/8UU+
zUUcj2th7903nCv0Zzg9vGMcHd7ncMbmpfwpnCWOyT3w1n2Z/Co8R3jH5C5I
Du8x/+aTeGzddHOVXIC94TzQT17DLeGc8d26PHNDOGeMw/bwg0SxfFUcEZ5X
zgjvpBwTfiPhvMzL+HP4fLyzdp75dfgfSMET3QxdtbwQiVhrbg17hR+u55sb
w35hfPis2EjkPxgag9s=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwt1FdsT1EAx/G/SgiJorZYpa3xYO+91Xixx5uqvRIzeNAKooTEiBGlVdSo
EILWqJ3Ye7aP9mg92bU+J+nD9/8b55ybe8899x+bNHfEnKhIJFIGjfzUo/WR
yOeghcEjcjFqyhOQj+76a7pClJUH4TCa63N0V7G6fCSyEof5QziIKyhAlLkD
cQjNrDmgK0INeTzOo5v+si6Bn4G7GKZ7Ee6XH4CDaKrL1u3gf2OZ3I4uRmG4
nvzJ+Dr+M2bL1ek4nENX+ZLx2nQbNusO0G90IY2nR2lFpGG6nEnv0KH0ubXH
aQw2YoV+L31Dk0s3N4dGIRX95fTwzDSB7jelLt2B7boSLOXb0sp0AxbxBeGe
+Y/mr+WLMUuuRsfiLLrIF43H8dNwG0N0z3Sp/GtMkv/J/fhsxMv75DbhefEi
XE/3QRfDj8EZdNZd0DXhp+IWBuue6v6ir7wfcbq98ntUlUcjD530+bon+IM+
un1oos+Sz+MxfqN32EM0NrZHPodHKEEvfRZijWXKrfkFeB7uVfdOl8YXYaZc
hY5CLjrKZ41v4r+GdXJjOgU3kSg/NJ7Cv0KS/Cu8QpqCnro9aMRn6E/SOuG9
hbMTzmOYT5fQVvQYjcZ6zA9rw7sIe0LfWn+C1sAWrAn7F85qOO+0Mi1HV2Ek
n0FP0w70jLW16NZw5nRfMJ+PpRXCtTCZvxG+Tf6B+cv5l5go/5R7hHOMhvJu
uSU/D0/DfoXzq4vmR+AU2uvySv8nknE9fMO6+7of6B7uEQ10u+TXqCQPx0m0
0+fq7uE7uul2o74+Xd6J/yc5lPY=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1, 129, 109, 90, 73, 58, 47, 2, 130, 110, 91, 74, 59, 
               48, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
               19, 20, 21, 22, 23, 24, 25, 131, 111, 92, 75, 60, 49, 26, 132, 
               112, 93, 76, 61, 50, 141, 121, 102, 85, 69, 27, 133, 113, 94, 
               77, 1922}], 
              LineBox[CompressedData["
1:eJwtz00vAnAAwOF/J19DhERdRFwIDSeS5uWkkiHGhtRC2WzeasjL9/UcHJ79
zr9o5aJwHgkhbPM4EMKKDvLEJfusM88UUZ65osQGC6QZYpgYI7xwTZk8WaYZ
5ZU6FTZZZIYx3rjhgAJLZIgzToIJJunSoMoWy8zyTouj/7dVkvRockiRHJ/c
ccIuc3xwyzE7fNHmlDX63FNjj286nPHDA7+k+APrPSCY
               "]]}, Annotation[#, "Charting`Private`Tag$170445#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1FdsTmEAxvGvvSAkVhEjRkuNK3vX3uvGaHGp9k7UCC6MkBQhMaJFVRct
EkKoamve2FurdUlrFVd2rd8bF//+n+d5z0n7feekcckrpi6PikQiTf3YVjcS
KZTTkI6DOIQ2OIwMtI2ORDJdm4Bv+gNcRG/7edsUNECV7Qja2Y/qg/Fdf4ix
tpv6XMSiyNbHdkGeioaotk23lckr0Q2Ztva2LHkIfuiz9ZfyRjzSx+m35HlI
leshTk7hz7wHB+QWuOT6vlxoO8rTwnfAddBIXsw1fIxTeT83xzm8dm8il9uz
OYV3cUOcQXd9Hf/kAk7jdG4Vvqfwnbg/lrPtQ7FJjgrX25P5VdjwWB+v35bn
owNW6V94L4qd99MvytPRGEv0D7wdb5wn6c/DfeiBLFucLUcehlr9CUqQjQ7O
cu3D8Ut/ilLkoKOzPPsI/Naf4TL624tsiWiCt7ZcxNuP6SPxRy/DBNsdfQE6
4optQHgechJi8M42w1Yhr0ZP5Nk62Y7Lo/BXn6NXyZtRrk/U78oLEY+rtoG2
YnlG1P/3fKn+kXfgvfOZeqW8BrvDs0cveT3XhueGg3Lr8Flc35nzbRk8Ovxu
jsYpRMJ7zdWcy1vCO8cxOBueg0sm8b3wHHhReE5cH6fRKXxe/sr5vI/TuCWu
uXcQl9hmohmW6Z94J2qcz9JfyGvRGxv0X+Hvx3HnXfQCeQyiUGGbbLsf3nd0
xnVbgq1UnoXm+GDLR1f7CX0solFpu4ECnMBJbPV/5B+giI+L
               "]], 
              LineBox[CompressedData["
1:eJwV1EdsD1AAx/E/LTUTKzVaxImWWrFjj5gd6mYWsWIUB3skZmLHOigOIhI6
aI2b2aq9nXRoSayEVmsejM87fPsb771/X997/3aak5m+rE4kEmnhx46YSKSQ
z0ZC3UjknG4sovBKV4TB+qvyVMTisy4HifpseRzay9G0hN7GEGPX5GlojS+6
XHTV58jjUQ+lumTdY34xOqNYN1R3nZ+ONqjSTdWV8GvQB3m6brpcfgLqY578
jm5FmfEU+Qm/BF1wRzdMd4OfgbZYJlfRPag2Pk0u5deiLzbIf+gxnDeeJOfx
ExGD+fJ7ug3lxlPlp/xS7OIbI4FfRX/Sw7hr3nD5Jj8z3AMfg3Z8Jq2mZ+he
eoTG4iK+WjedlulP0XV0P22GC+gnb6R/6VmaFfZN43A5zLG+Oz2vP0En0S00
Cg34BfQDPU2304O0JV5bl0afhfPCbr4JEvnV9FfYJ+6ZN0K+xc9CHGp0M3Tl
/Hr0R76uR9gPn4yGqNDdx0h9oZyBeNTqCtBTny+noBEqdZN1z8OZoSse6Ebp
ivjZ4V1ieTg3ug/fjM8Mf0+4Vxzgm2MAv4n+o+focZpF43ElnL11vWiB/iRN
DW+MRof3HO5YXkg/hrvEIb4V3liXTl+EfYQ3xjdFt/CO6W96FA/NGy3f5udg
Z7gPdOBX0Jpwz/hu3iy5ItwzBmKzHMEJ/hLbO+yXTwtvkq8XviPhvuRF9FP4
fLw1d4r8MvwOJOGRboyumJ+Ljlgp14azwg/jGXJlOC8MCp/lf8h/Tv+L+A==

               "]]}, Annotation[#, "Charting`Private`Tag$170445#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{695, 756, 746, 737, 729, 722, 717, 696, 757, 747, 738, 
               730, 723, 718, 697, 758, 748, 739, 731, 724, 719, 698, 699, 
               700, 701, 702, 703, 704, 705, 1928}], 
              
              LineBox[{1929, 706, 707, 708, 709, 710, 711, 712, 713, 714, 759,
                749, 740, 732, 725, 720, 761, 751, 742, 734, 727, 715, 760, 
               750, 741, 733, 726, 721, 762, 752, 743, 735, 728, 763, 753, 
               744, 736, 764, 754, 745, 765, 755, 766, 716}]}, 
             Annotation[#, "Charting`Private`Tag$170445#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
VfCz/wF2II3M
               "]]}, Annotation[#, "Charting`Private`Tag$170445#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1547, 1823, 1743, 1678, 1629, 1596, 1577, 1548, 1549, 
               1550, 1824, 1744, 1679, 1630, 1597, 1578, 1551, 1825, 1745, 
               1680, 1631, 1598, 1579, 1842, 1761, 1697, 1648, 1615, 1552, 
               1826, 1933}], 
              LineBox[CompressedData["
1:eJwV02eMz3ccwPG/mjVSm6u9q8bVOFvsUSOxN+FQrjgttbmzEpxH9ioP7JVY
ldBKFLV5YlatBK2Z1EyshNfnwcv78/3+3d3v//t9fxVSx/dIz5ZIJJL9szh3
IlEoVyJRSS/pEobSgpoUprLPLutShtGSWtSzf0838jPdKEIV+1d0Gam0ip+x
97/uIYPa1Ld3Xzcxge4Upar9q7qc4bSO32Hvue4lk2RS7D3QzUykl3V2Tph7
8L35rR5iAcWoZu+armBEXLP1Jz1Km/hb1i90X3xuLsJsc3/NwxnzdzQw/6tb
4jvGPeQXc2/NwWT+sh6jX9PT3EnfxbXqYR2lxZnFQutBmo+pnLcep6XJjP9n
/Y1e1590ZTwn/YrpjIz7p4m4Dv60TtOStI3vpi91PyPNRZljHqBfctZch4bm
/3Qrk+hjnZOTcX/pbH6vv7OIElS397eu4gfaUZdG9h/qNibHvaEk39q/oavj
HtA+zhKN7T/S7UyJv00SNez/o2sYTQfa2nulB5gbZ4km9h7rDqbS1zoXp2Km
i/mD/hG/x1yCLPNgzc80Llina5l47vHs4j3Qm3HGdW28A1qQGaTFWdNsTOKY
9Y+aRAYd437o6zjj+lvcIy3GTOZZD9S8TOGc9VgtRYq5qT7RnfEumAvHdZr7
aW5Ox0xX80c9wmKGWBfgorkUtcy3dF1cHz2tv+B4vCfxDMxv9CDz43zTzN5T
3cX0eAcoTW37t/XXON9xruPc0Nz+M93NjDhblCHZ/h1dH98tzlCcDcrGu+Sz
u7ohzns8ozgHlKM8FahIJSpThapk+bnPY72Khg==
               "]], 
              
              LineBox[{1932, 1695, 1646, 1613, 1863, 1782, 1718, 1669, 1594, 
               1854, 1773, 1709, 1660, 1627, 1870, 1789, 1725, 1676, 1575, 
               1841, 1760, 1696, 1647, 1614, 1864, 1783, 1719, 1670, 1595, 
               1855, 1774, 1710, 1661, 1628, 1871, 1790, 1726, 1677, 1887, 
               1806, 1742, 1903, 1822, 1921, 1576}]}, 
             Annotation[#, "Charting`Private`Tag$170445#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"LQR feedback solution\"", TraditionalForm], 
         PlotRange -> {{0., 4.999999897959183}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8660363837203107`*^9, 3.866036396077324*^9}, {
   3.866036432728498*^9, 3.866036479110533*^9}, {3.866036551886053*^9, 
   3.866036569341421*^9}, 3.866036952529787*^9, {3.8660370321341033`*^9, 
   3.866037079691759*^9}, {3.866037814402709*^9, 3.8660378414629784`*^9}, {
   3.866038766063661*^9, 3.866038791002615*^9}},
 CellLabel->
  "Out[1367]=",ExpressionUUID->"789ef59a-925c-47b3-b18a-102c0d0b401c"],

Cell[BoxData["100.1666526927817`"], "Output",
 CellChangeTimes->{{3.8660363837203107`*^9, 3.866036396077324*^9}, {
   3.866036432728498*^9, 3.866036479110533*^9}, {3.866036551886053*^9, 
   3.866036569341421*^9}, 3.866036952529787*^9, {3.8660370321341033`*^9, 
   3.866037079691759*^9}, {3.866037814402709*^9, 3.8660378414629784`*^9}, {
   3.866038766063661*^9, 3.8660387910476007`*^9}},
 CellLabel->
  "Out[1371]=",ExpressionUUID->"80faf29c-f918-4f3d-a13f-8c0069ebe7f8"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c0dccc37-beb4-445f-b62b-d87672042d50"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 274, 6, 35, "Text",ExpressionUUID->"9fae326a-9ba0-4d45-a968-df9585f85b1e"],
Cell[835, 28, 139240, 3341, 3829, "Code",ExpressionUUID->"841e8a74-92e9-4945-abd7-ad544fb565aa"],
Cell[CellGroupData[{
Cell[140100, 3373, 10385, 293, 485, "Input",ExpressionUUID->"9d837842-1d34-4d2d-8784-cd09af852303"],
Cell[150488, 3668, 125564, 2239, 207, "Output",ExpressionUUID->"5446345f-a5e4-457c-9eac-a31880747d5c"]
}, Open  ]],
Cell[276067, 5910, 1134, 28, 67, "Input",ExpressionUUID->"27af140d-a3b7-4c27-ac5c-4029a16719f6"],
Cell[CellGroupData[{
Cell[277226, 5942, 7412, 222, 333, "Input",ExpressionUUID->"86422da5-d0c2-438a-b415-153a68829e37"],
Cell[284641, 6166, 115701, 2081, 207, "Output",ExpressionUUID->"789ef59a-925c-47b3-b18a-102c0d0b401c"],
Cell[400345, 8249, 471, 7, 32, "Output",ExpressionUUID->"80faf29c-f918-4f3d-a13f-8c0069ebe7f8"]
}, Open  ]]
}
]
*)

