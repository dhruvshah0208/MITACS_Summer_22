(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    630047,      12128]
NotebookOptionsPosition[    627652,      12088]
NotebookOutlinePosition[    628088,      12105]
CellTagsIndexPosition[    628045,      12102]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InitGuess", ",", "J", ",", "count", ",", "error", ",", "x", ",", 
       "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", 
       ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", 
       "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", 
       "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", 
             RowBox[{
              RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ")"}]}], ")"}], 
         " ", "&&", " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"froot", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"error", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"uff0", "=", 
          RowBox[{"ListInterpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                   RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
             "froot"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
            RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"J", " ", "=", " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
      "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J"}], "}"}]}]}], "]"}]}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J", ",", "S", ",", "K"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"CalculateSMatrix", "[", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"CalculateGains", "[", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865358474040723*^9, 3.865358586758689*^9}, {
   3.8653592876706223`*^9, 3.8653592959449773`*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[4762]:=",ExpressionUUID->"400a7af6-aaa4-4593-a9eb-a74de2e22e0c"],

Cell["Manual implementation of periodic re-computations", "Text",
 CellChangeTimes->{{3.8641533433196383`*^9, 3.8641534078207626`*^9}, {
   3.865345899534526*^9, 3.8653459352441096`*^9}, 3.8653595685158424`*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"982e74f5-390b-4bf9-a720-2fed731db11d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", "maxCount"}],
       "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", 
      "uBound"}], "]"}]}], ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]New", " ", "=", 
   RowBox[{"\[Tau]", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]Init", " ", "=", " ", 
  RowBox[{
   RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
     RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
       RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}],
     FontWeight->"Plain"]}], 
   StyleBox[";",
    FontWeight->"Plain"]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636127929494734`*^9, 3.8636129048647366`*^9}, 
   3.86361309340853*^9, {3.8636132740148587`*^9, 3.8636132890980425`*^9}, {
   3.86361367016436*^9, 3.863613704067534*^9}, {3.863614005426304*^9, 
   3.863614044030977*^9}, {3.86361407671554*^9, 3.8636140789588237`*^9}, {
   3.8636141197098103`*^9, 3.863614156970913*^9}, {3.8636143059493403`*^9, 
   3.8636143423397207`*^9}, {3.8636146524377003`*^9, 
   3.8636146681296897`*^9}, {3.863615502417285*^9, 3.863615703473082*^9}, {
   3.8636161037482653`*^9, 3.863616122815179*^9}, {3.863616300467451*^9, 
   3.8636163404706755`*^9}, {3.863616379759131*^9, 3.8636164322373734`*^9}, 
   3.8636164758294525`*^9, {3.8636165064106874`*^9, 3.8636165068755407`*^9}, {
   3.863616588161584*^9, 3.8636166296943207`*^9}, {3.8636166641123295`*^9, 
   3.863616732677436*^9}, {3.8636167693047395`*^9, 3.8636167704293804`*^9}, {
   3.863616826318534*^9, 3.8636168556931543`*^9}, {3.8636168995821395`*^9, 
   3.8636168999240313`*^9}, {3.863619302411866*^9, 3.863619416136552*^9}, {
   3.8636195563387823`*^9, 3.863619570937121*^9}, {3.8636197069376936`*^9, 
   3.8636197273581724`*^9}, {3.8636205744286833`*^9, 
   3.8636207335498743`*^9}, {3.8636207658335643`*^9, 
   3.8636207659625244`*^9}, {3.8636208211778917`*^9, 
   3.8636208543832893`*^9}, {3.863620930334037*^9, 3.863620936617031*^9}, {
   3.864135467525829*^9, 3.8641355031932845`*^9}, {3.8641358508757644`*^9, 
   3.8641358994820337`*^9}, {3.864136005621681*^9, 3.8641360284712887`*^9}, {
   3.8641361588251004`*^9, 3.8641361878597054`*^9}, {3.864149523908724*^9, 
   3.86414952549721*^9}, {3.8641504554392495`*^9, 3.8641504662587476`*^9}, {
   3.864150523008383*^9, 3.864150605221774*^9}, {3.8641506500782566`*^9, 
   3.864150690388214*^9}, {3.8641515284209967`*^9, 3.8641515289998107`*^9}, {
   3.8641516589627523`*^9, 3.86415165924166*^9}, {3.8641517275125647`*^9, 
   3.8641517616755095`*^9}, 3.8641517984915934`*^9, 3.864152052785297*^9, {
   3.8641521525610065`*^9, 3.864152184609634*^9}, {3.8641524131266785`*^9, 
   3.8641526257358713`*^9}, {3.86415267085427*^9, 3.864152694523608*^9}, {
   3.865343316507264*^9, 3.8653433661354*^9}, {3.8653439486171923`*^9, 
   3.865343974084052*^9}, {3.8653442980234942`*^9, 3.8653443296263914`*^9}, {
   3.8653443748479357`*^9, 3.8653443749728956`*^9}, {3.8653444172203894`*^9, 
   3.86534442272363*^9}, {3.8653469695214763`*^9, 3.865346987082861*^9}, 
   3.8653470346556525`*^9, 3.8653527113159447`*^9, {3.865352921100881*^9, 
   3.86535292673708*^9}, {3.8653582294529123`*^9, 3.8653582967913857`*^9}, {
   3.865358599615581*^9, 3.865358639228916*^9}, {3.865358727662645*^9, 
   3.86535873275102*^9}, 3.8653587920620584`*^9, 3.865358828820309*^9, {
   3.8653593086449194`*^9, 3.8653593288444633`*^9}, {3.865359372130623*^9, 
   3.8653593924201374`*^9}, {3.8653594236451564`*^9, 3.865359453367653*^9}},
 CellLabel->
  "In[5252]:=",ExpressionUUID->"c28652c3-ba56-4a0b-8e4f-0e46f1c2c441"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0.9247297973560222`", ",", 
   RowBox[{"-", "2.8137065513982984`"}], ",", 
   RowBox[{"-", "0.09570863682533215`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.865361029035945*^9}},
 CellLabel->
  "Out[5262]=",ExpressionUUID->"0db63993-bfcd-44af-833b-658b0a448a92"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJzUnHk4Vev78NmZ2eapkopSVDKkQcP9lKRRGsiUNKGIokElFJmTqShCJSkV
MqZYy0xJkihU5mGb52HbvOu93vPs3utc1+/6/t7ff+/555x1bWevtZ717Pt5
7vX53PfiEw4HT9M4ODi4BTg4/ve/Fe6ynkbL39zyKGhLuPMtHnJ3Dq9+uzUB
QW9y5aTsecjP9LX8XEcr4dyCd4Wbe7nJbXd1yef7f0BDxtB4tgY3eXr1FF2d
3ghVwoeCkTEXuU/59KC0XiuomCnt8TWdQ76tvnGpbH0nZJ9Ol/1wjkZuFFdJ
4nLrgQIVwSMjVzhJa2bIo2fGAxDFdG48E8JBOhR3aCbtG4K7ZxuyTLxmCT9T
nqUsuxHQWFC5an8RizhZct1K3WYMku7zGLwWnSbyeOcesDWZABfLWw4XdKYI
dTH3+10Xp0BFalvZDakJwnJ480p9u2m4fG67ZGPBKPE4ukhu/M4McErFBfxs
GCJSA7Xrqw5yoMZ2ianDkv3ExezNBo/2cqI3X3/a35noIIiPz4Z8zWhoa9zJ
2iePfhNn9DbknDGeg2oynVyOCHwkohLU023PciG1I+NOvaxsCB7OuXn+CjeK
OsjVvHvoJ7S/vHTZxpEH0RwSXy+za4PCHSERt27xoqU/N1/yy+0Fzv11zXfd
+ZBbCY1H8NAQcGzN4Iy9yo8SjkhWORuMgo/M+L4qbwH0Rk+d/4/qBJw3PZk/
7iGIZuflr8kOm4Kmm2tOwT0hZNSt67l3dBokQx/U+T6moyNrB1f0L5uFeFGV
qyWRwiiz5miXRBgHynNcqLssUQS1BDecVXrFiaIXxcptPiyKTp8vOKKYTUM5
LlMcNpWiqOtzvAFZPgct3sM7rXhEDH32PCioPsuF0r4o+/+sFkMvl4qc/Tif
BwUUz6gtOiqOdsjKTz/dzItCnbrOWjaIo76V52q/LeVDLlLyIgomEkiE1M51
/syHXihzf7zYKIEMRZg9Qov5Ec8I59w8C0kku2r7YSZ1/FwtxTW64++x8omX
+qxzUuzj+l3v3hp2/z2uenptFThJs48nUg9sUhj6ezyb5ZjuZS/DPt6jtkPX
ZfTvccnR1WdsnWTZx2+Sz4/Pzv49/hhcf6HTOgnebjkRZOrFQy5iZUax1paC
0SOlCcENPKRPRU6roVE1iNYIOcrc5yZ5xuX6uLQa4JO081OPUi5SdMHIPjJK
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
dzDMKkXZTgLJGS3NXdVI/R4yFt1eNySB5I/lX/Clxvux1C/9IPk0CHn+PGYV
Fc/PyNcJf0uSQHmq19qnRfnR77WxPqq+CfCppeKSGHV91SJnTXwn3kOIhRdv
yCUqnraE5jz/KoFqt1aenaLirYvUbNZsrAccSb2UJk+Nj3OXGnmQIYF4hUtv
raLOJ1W7QUh8+VtgaCee2EfFw8J3JnM0ouJAb+ZJjR31/RqObcEaZdT3/bHv
dZ3PjxTdHgxe8HwA37/8KPtAzZfCW6K75aYkUOaWqARr6vvGUtvpKy6/gk5/
9eCt1OeZh7d1ydVJID0ieW0/FV9C17aa0wOvwP6fEkXLqPMtnfPuqGW7BDq1
8ZrAV+p5rr+eQaY+ewKO0SNy9tT5BWiH7C6F3wObUfmD26nvOx8V0aE8JoEW
Ny4+7UOd7+wlnU+v3F7Cuxdq/ZnU59Jytoeav1OfJwZXcFPn+/glQUG3TwJF
PT0takv9vcHEtG5ySDxsWh5Yv4/6/k3Tfy7bX3gE75TOHJemjqXP+LwSnpFA
J/Xkp5Sov/cc8jV4YfcG1BbQnr2hnp/xnbluR35LILWq2EMZ1PzH+YlJq8wd
6418COcnAZvuDgvU0RDOTwbnlAztWzYOOD8R9yQP7nvVBDg/WSJHGj7L/krg
/KS5RNo869MAgfMT1eHnBmK5kwTOT0D4SKSoIgc7P0nap19+e5iTnZ8gbvGt
6xJpJM5PuJbeenbqKY3E+UlXiVautxSNxPlJbqCc15dVnCTOT1auWvOS5/Ms
Oz+pP1ua3j02zc5PClv5Dyw8N8nOT2o2zk8usxll5ydyvXturpQcZOcnCyRn
4lcs7GDnJ7QLWVxSP2rY+UmlrNDj/IpEdn6y8wVzU6daAzs/0egQ+bVgTSc7
P7m4q83u2JMBdn6i9tpurrjqCDs/EfJTTk9YMs7OT3LuVlt6/phk5ycxWt+y
NBqZ7Pzk/uX1dZVnWOz8BFYc4No0Z4adnxg82Pre4DoLcH7SVZihEr+XCTg/
eZX+RHjMdBxwfsJlp/suzGsQcH5yyj20s6K9CXB+0qp4OiFe/RmB85OyJR/c
g+d1Ejg/ObFsu9KKheMEzk9Eb/cIqqhzkjg/UfVZW+jTz0vi/ITjn39wfoKP
cX6Cj3F+go9xfoKPcX6Cj3F+go9xfoKPcX6Cj3F+go9xfiItNW9LRyE3wvnJ
mnvP80efz4DJq6RZRZVmOKSbH6D6p43gcLugOQDt8Pmyw5eFUaPE5eFD4h1m
DGjYt33w92kW4cm1fHRZRB+kZd+NjtHgJLstc2xUDg3Cs9Te0I1naaSL6JWV
RkeHoYzHz8I1h0aOiebphp8dhUSTjovW1Och1h/NKizHoUXzROXhRE7yakC5
k4r1JNizDhn9pvL7TV/muvSMcKO0DcEqqadb4PuEh/elKR6Ut/U002qkB5p3
Z2z25eRDHYp+8h+ch2D7q5pl7zgEUMXiBytXB07A9PpVfG3cgujtwjPfhXun
YHnfntBIISEUk302zy9nGq4JWMecmk9Huvt4xYJ+sODX16YXCfLCKCTgnZ1Q
GwvS8pYcu6Iogj7KHJ4RfTwNsz3hxzolRZFV2Zei+tBJeKP/OfBgiCgafhs4
6JQ0Av0t7jNFEmJI6bf2HVK4G87eiSiYuSeGum5F2WUqfwWcv9Xcm2ne68BF
4vwNPx+cv+FjnL/hY5y/tRM/7HtEeRHO3/ob1FY/XsSJ/vRWe72c3wSySdoi
e/j+EEqHbUM8dNog/+cBX55dw4Rka6eO8e4uSMtUUopOZBKWgsoH7/v3gni6
WYN9OgeprLp8Tuf3AaArFT2nr6WRl21XJ9/6PgQZ36bpEdk0kkw/qfWxewQM
LbpYr/xo5DUZxSa31jGYXlPER2/hJBd8dGze3TgB86RdNZ41c5BWTd2uqhnc
SC9pt0Hlx0b4/XV6xj6DB00827rt1xMGfNu5pJs7nxd9qwhTiQkZhCeXi8NW
5vCjzqHR7NhfVHxeLp5YXyyALv82P1BgNQV742pf7ioVRIMbU+bEH54G1eLP
nAd/CKGijvML+F+wwPnt5m1zG+nIvdQ4IWeaBavOLLOL+SOMBD3s2oLkWGAZ
v4zmwhBBJwo6DVTdpyA+M+O7npMoCpkDoe2SY2CUnDMrPSSK1s6305lZ1w87
er4cC74shjJ58nuM4usA57cGK9NNu8toJM5v8fNRLTjnOOH+99j9LREQdP/v
8/t21s/50foW2PCc69Pdjm7i54sr1eabOqAv8wv8KBgnftCIxkvnuuFyZMce
xb4Z4gVLKeJdXD807oo0qonkJF+HHqywqxyE6MbCd1NBNNIjPTdBuW0YBuKu
GvKn08iVdvJGp7pGQfJ7scJKHRr5MvNCjRw1jncvVrYX2HOSGbt2nu7bLogQ
seAlty0TuNaT13sNhJBl2grN4HksKNHn2HzFgo7kWDIG0uMs2DZ4W2z9UWG0
48KVM7XZLNCep3Bwv7UIOrLE7sAszzRU8MjlhqwRRR46UhUO3hOQ0daidzSF
+n0kNS94pDIMOF8nU/hUeJfykDhfx+MxYtb4ra7h7/jg/J2jPV762UtehPP3
TfU+XEIcNPQk0PrjubBGsKwbdrvm9IPI3tK5dV9RKxgyZh3uigwRJ81TG4Ly
OiHgzuXSA++niIrAF+77uHuhS2BJxrg9B1kadrRyR/gAxLYZBz+VppFDEYJD
EcFDQEoPbPVNo5FL+bRen3w1AqHdR25yRdBIe4cvT43jx+CJkH/ZxDQn2d9Z
NLc+agLsppjlVXycpAvjsPuX+9xI6HTa3Z+dv+HElnfZtmE8yGfulWBNhy4o
16vfuv0JL+IIk1jydf4gfDXbsscqkh9VHhPLWHNrHNpiPKeNngug8A9PJ6IW
TYGF26OMRfGCqPyBeF7N/GngW8KZWpohhH66djbr+7Og+Ilt4FeSjtTMq7TW
0WaA8SHBMTVHGE3us2k4u58FQQFPn379KIIehzTMX8WYAgW7FVfzT4qiuwEb
3v54PwZ+0ubu0CSKXMKvXCm+NwBpkd2v66zEkMO2lc/26P4B/H5jXpu79Qrq
fvH7DR7j6Cb+Cj7yYX1mUYPD3+e3xGd8iuX59/ndF1zwwTKlGcY6hSpk+joJ
u7ARD6XcdiiJd+C4kj5GLLvue/VNKwN+Kg14LFObIaRvPi8+L98PrrJGa+LP
cJJ7p7wjPwUPgn7iw03abjSSo+UhAx4Pw3JGftYjKv4E5/Z/Zr0YBWflw5di
jtDIaBH5B6PR45C/Z+mdx3c4SZO87IwzSwVRQKFU8vxVTJCW8PIuVBVCdgf2
r0/rnYbYV5p9vZvoqOf47k4+BjVeTalHBzYLo/luhzI8qlgwfu6p8UldEfTG
ea7r2JFpaJ/8GZizRBTFqiiuihGbBI2Hxt21j0VR1ffni4cHhgG/r/FOabJt
0OMmlyw/ef3U6r/jE64uu23np7/jU2Qrn7jwWxec5PuTIHV3mhjyTlD8I9YH
lch/48MxDtKvZEjLV3IQ5LRTtJoO0MjJzYfs7eYOQ9d6D1Mfav00OxmSo7Zi
FGbM3612vE4jtcvEYhwZgmjMs/2ul980HLZ5aFA/KYQ+eNjo1+azQCVfZMxy
lo4EmnWIhCEWnJeKP+3PKYIeRco+8mqeBtlGQzUJblGUMk+udYPwFOD3R/h6
5Td/W3NTagAe7k5se1LGSQqvWsApLDIEUnW0sIcxNJLHp9lKQnkEOky3Ceq/
pn5P5lMO0k5C6GEV5+9pHRb0DZT7c7jT0ZTjyQr/WRaMcBgXubkIo+XTZS9r
HrHAtTh2z0ZfEVS4Sz919DUT8Puph2LamZa8vOQBr4TT5/r+jh9+X9V4SOmG
6gi17/znfZXLg6jZ/HM0xPVHze6LQSPsjO1POj//O8GVFj9Xw4uKD9dCs3vs
Bwm/CFnlVTc6oarEO+PAlinCs7JLRjm/B5RWOhmn7eIgZXdOrB27MgDLI8NG
ArhpZHLSpHicwxDUyCWM706mkcYpC84kB4zAh7jckpFHNNImcim3rvcYSKpu
y7Hjpz53dtBSvD4BEebfeq/M5yR5HPg5F3lzI0vRIMdNgb8g7mK47FkPHlSp
e/9LeFUn7CxZe+5kCLX+LbqpZP9nAGz0ryl5+PGjPEawZOqhccio3/wsLFwA
Ga7SNK+YnoQOO/dNQvcEUeb+nJKjM0wYqXooyBUvhMQD0hq5qf1w78NbaatS
6Oid0O5KXWq/XGrVdSnnlTBqcVO6ud6KBQluxy9OZ4ugwWwvEWM5JlgWt32c
NRNF22idd44LjUPcrkTy2w9RtHLW75C+yCCcdZo8PGshhjQCm+tUixsBv88r
ETjUbXyfk8Tv81zNljwQtOAjKzvM+/Wt/86fMUeJt2tc/j6/CbP2o/nnmuH1
d2VP3TMdRAZ/qpmgWztILjzvs1xljNDP7CvaHcuAxNnAdUHlLOJzfsfRvfV9
sHrmmw6pz0lGvVagXXccBJ5Md68ll2hk7qSP4B63YXjaEv3a6gONLLT+4bvb
bxR27zac2nCcRkZsvDjV5DYOYhya6o+jOEkVltOx51KCyMBEIdOYzoQYjjP0
5AVC6NNHwS88NdNwx+zzDuWVdKTw2WJlbRMLMn5+9NirKoxu//l4+UwDC2pk
Ws3OrRFB++ysm6/fmAbH4fXjVXKiSL4hMDr7EJXPjIhvlnooih4mqgSqHhgB
/H4y8hRzjkA9F+lq5pThtuzv+NjIrZl0zf87Pj3PPcbfB3aBfcdznSH5aeJF
WWd2dkUvaH9WSUms4SDrrt2JWj86AHs0tG1tttPIrMNb714ZH4IDD1xyLlD3
Hyh0/eoNwVHofsNZvNuDRhZkjCyx+CmIHmuUVY46TMNWmTUvpLuEUMSt+B3n
M1hwIFtJLqefjs6ZzdB3TbBAn2i3uTcgjDYnlnlc4mDBztQz6gemRJBrjeqr
AzunoH152pMe3r/XP/S+neN3Rz/oxUg3qKRykhaNmdY5/YNQrI9aXlHrZ2F0
pbc87wgs6rwzbpxCI6/v/jXKeUIIVf6+ejdzNQvqYqxaNzrQUexOjV/tTBbM
n7TvrrcTRuuNbj7jes0C8/NN+rrOIujLlXRp93oqP/zn/WzusP5pz3s8pMKF
Qrm4tr/j59yUfyY8YwDkdE9v/axEI9fcWvD1TuoQyPmGkWOZVHyy2DsoXT4C
DlumTt8PppHzL1mb3ikRQpL3XMbiH7Ig5uVhm0uVdDTgknVOkGMGhCRsHF5U
CCPdP52rGteyAL/vNTEJTrwP/OT0jt41cimD0FLy09rdh0ZuK39VtqZgGIK2
ZtUuy6KRaawH997uo6Oxk2rlCwdZcKYral3YPmHE0e0talhC7aeWnd53fOMw
TO34ZN1IxXfrdxwTMQJ0lLVxdGZ9BQu4Pk584RIRpvJpg2THHhbkXr310EJ1
CNIeC1wreUYjd14Y0eXbMwK2do7L4xNoJOc2Tc2iIDpK+/np/CznDLhHBrxZ
O/53fPD75JDFG0Balg/h98loBVNeOo6G1nhLbeZY3QieSXkLFtp9IxL6bt+O
s2qF9R7JhnELBonotXv2M02p+DnZ+/7BzCRhOejbcj+2B0Zj9D8GruUgyce6
jH02A3CMGZP4nNo/iL4///SFxRCEnlWRbKDWh0Fu8ZIalxFwe32890MsjbRK
qdR6f2UMLL4/cb4tQiOF0HYdvbMTwJn51f31Emo/kHJy6043an+12GWq408D
FN310uu6xoOWODSW3ffoBB7vVpqTHy/aa0icmyap/YyebJjYLX60Z3caP2wa
h5irD6+m3hVAtZZnsrIYk/Cq5cLszQBBZGuTc9CinwlnX3ZkPn4khJLMFIJ8
HFnAIRNYYvaC+j28mX15koqfme99r2yLE0YvaWJfp86zYM1VskEsVQSZyeTZ
Za9hgttwvpO8sSiazE/axdAcB7WWqsZH1aLITaW9ZcOeQdhxzD1BzIyKn2ki
u38ZNQF+367VEU+8PslJ4vftxV59jEglPrL73GouvpN/f18WNo/plVf+Pr/l
XJ9Uh/c0Q0zgY6mmuHbCbHtIyY1j7WCr3a19vWWUOGG4uEfWlQGWJ79pRz5g
EQkt3srZ7/rA0cwmohZxktt5z6dXnRiEIaNfSR8daOQCbo4oA/thmCn1GeGj
5t/RD+Ud56+Nwtzr7S6/T9PIewcWrjA+Pw7C87MjuOI4SYnISs1iuiCC7hve
21lTcOqKaeVSKSHUe9PPqLlsGrg05w0XK9LRR+u0YcNfLPhoWHP/mpIwct7k
0tXcyIIiO8+jQytEULiOD7/n3WlYf94m8ZesKAqocTkocHES7i4eaNO8L4oy
RZr5g9xHAPODyIzvP/ifcZErLjEP3VH8Oz5fxfIPz8v9Oz4cOzIW+Nl1Qeuk
TcSbNibhyfDxWv66F76Ch9m6Yg7yVnXd/qC2AbCM3O9xZDONlLHMWnijfQj4
eYKDHr2nkcuOO9Q+ZY5AZ2RYtYA3jfRZ1d7xrVIQ7YXWsNMnpiGrz90wrVEI
yQwFnWxIYsGptRqruzvoSHBLmEfCFAu2SHqfndcpjA66TKjmCLOg+lXpA6sh
EXRzot3vxqkpCN22CU3N+Xv9FQ1e5XuK+0Fp5FLSs+fUfkGbe75U4yDUnwuI
6AmjkUte6skuGRuGn+ZPV2xKpfLNvIqsKyZCSN3m2lq0lAUGV1KDflrRUcgR
l6SnkyxQvXRthv+0MBr4UiQ0N40Fe4puGnx0EEGbY2tT3AeZgPmJAYpSmH+U
h/S3OugMTX/Hb9FG0QX98QPwatuv8u/yNDL0Ttjx0CfU+OzorDTJoJEBqWj/
5g8jVF7jxv2Lur6QvWk8KwghtEt1yGRuKAveKllef1pK7fdObNuuS8UfpjXf
BdViYcR7pDDmKLUfxDxmbYIhPOLhJ+NitTudHg9C5uQ1vnFqvXpcq2iq/XYY
hh4XLnJ+RyNVvrdvNdCloxHaSXpWLwtcTifsztel7q+4uknqMxWPNRp+WVF5
ptNKg+5P1Pz9HbQvbjONjjhOPVn6opQFMju4WjR4hVHe+6zR5H4WWH37si9D
fgii14e2lT6hkc9dbGvo2iMA5xm36Ik00nmu+58TPnSkHLNkaQ8V/zuD5glU
Df0dnwNxt25Fuw/BOfHl7p5vaWSd/JXHs1l01Bg8v6GJyscw/3kcVLK47h4f
eaxP7Lpu0DDsjOuUiqDml7Sn+0P/NXTU9+McXaKdBU+PEufl1wqjRcTNAzG1
LDDe9XHmAt8wbMvoWSpF3c+WLfP5747T0a60c4nRo9R+xOts2ulZKv//WS6y
KYpGng41GZeVHYHbplpG1kk08lTp3PXRV+gohmPpkj8sFny/HI98CodAU0w4
zpIazwDVXYZ6P+jojhVLxneG2i/+w5eWbZuOnXDmJ5tJrQ2rq4dhQuee1Wvq
eW9R2tclaURHk7c2OMEIC+rn930w2zsMB05/tiimrm9gX++HGmlhdG/dhYL2
Thb4nW33WvaAyk+leicKqfGQiZ85GMn8O36YTzWa5td9VeZDmE9FrDhzXY6g
ob313s9k5Ruhuqj9fXxoFTHlf+n9L6NW6Pz+MSd/ZIBIuH3qRPMuKu5zvHjg
8HuSqOA0Lft8twdMBY5/qVvJQYbp9xRctRyA8s1jhvITnCSJXtmuNBqC/PDf
F4JeUfejJjTWdXEE9lcfb5Cknv+pTUr6Yw5j0DdNnvMVp5HtT1V3/zw+AbSe
oXGkzEnaVwUdN7/OjVxmq81u+DSA0YKZ3wmXeVDggiTDLrNOaLN6//maFy9a
ZPHbLDVlAEy3d3z8cYMfLRo0UXFWG4ew0tKWfH8BRD5lWD5pmgThGEbjJh9B
xNt2iauigwlK0sKB5x8IoUceqhOa9iwQ+C7x1fEZHS0CE1djav1RbTeZ4IoV
Rm1MLx3NyyyYGu0PkksSQfsTZKQJxARhP/XSVUaiaOfqhlI3vXEYS2ofuFUl
irKkvWwnbQZhzXedqnkmYmhTmU1Db3QTYH43vUmDbr2bk8T8LvCbQzePIB85
kRwR2Gr5Nz6Jn7R5/+jS3+eHjDeHC25shkZb7xPq29qJN003WRn722E6+/zW
FmKUsIvTnp21o9afqjVCNW4sQnrkiMhgQh+Anv7dog2cpGya9N0Z00HgODv4
lf8cjSz323jq2+lhsAzs37eLmk8v24ulPR1HQU0j317JhkaGNVzUCbUZB9nH
NxYkUfGRjzHz6Du/ICr+aVS/anQKijW+pTSKCqHWhb/bPxRMAxGNyu4tpCOZ
jIoAZh0VfyXMY4MVhFGl3M8ozhYWbAo//DttmQiyeKHQYBIxDVGq7twt0qIo
acFwBc1zEuSzLLR1wkTRAb3lKWIRI4B5ZGz7aVlFPy6SdotQCFv8d3y8hHxp
ne//jo/AvS9qF8y6IDLwICdZyiSGpoztjkX1QsgB55e/cjhIo5s3lT/8GoDf
4wfev9tAI4vbhjtmfw3Ba2nJOYup+HDR/wxP5vAIbJn/6eUfaj/J6LQoCywX
RN6XlZP9zabByfT5Co8GIRQ8E/Xk2isW2I9krqe10pFz7kGjD9T+OWPLke6G
FmH0a07/1XQpKj4qT+y70CeCMizidp52nIKz+zlEOGl/r39Tr9HbW+n9YMbB
e6jkMSdZ1544gn4MwrJagZbJEBpZvdqjMb53GKBVu35ZGo184qL3UMNQCGXS
YmP7F7JAqOWnVcIJOmKcyNS2ovKH9ZocfIuPC6PvTzYN3MpkQX7/ga8BtiLo
jCzfGoNpJmAeyystF8ezlYdEx+cq0f/8Hb+RjoyxeTEDsMMQiRTOo/bTEpXK
0g+HIPOGP49zOo388Uvb1SBtBJ7MG3518T6N3JdV1zCZLYT2BhYkbbzLgg+t
bZ7ZhdT17BRUK6HWH8eQH4MDecLo1oGHWo67WID5rkpi/+gOBh/pvK8pL+bB
IGzSdpWJuUkjDY4eU8h5MQxyB2/sEc2mkW2ILrtwKx3N7Qs27+pmgZei6uGf
W4VRRd6lhbVfWLA7Sya+a/EwPCuwFk6m5u+DaadrQjNCaF61lkNpEQsWcfn1
7JpDxfezO9ZqUvt/bffLy5qlh8BCqPj9usc00oj2PDpIfQQIMf4EDSo+ad6O
T1f3pCOb0IS7utT6E+XflBkz8H/tb1Rydy92HoKhQ5wW9lQ+1dow/VI6nY7u
5nc+kaPiBebJGgvDG9qv8pHCF/fplHoPw8JBhRYuKj+s6o8/b6pGR/47cqpY
1O/h1Xzda1oawih6x2svYer3wveFu2RkdgiuP157s4z6+53TseLxw9T+JkRu
O2uMiu+aYoHB44MwQPTeu/aQRkrOvUdEiozAhaQmhdPJNHLhGiR8zomOJmZ/
2fRMs8BzuolP8MMQbD77UuAtlQ/d76mwsKimo/qYM+aHZlmAefXLW2LntM35
yZAdFzjffhqGZX5P6h2ofG0y2IloOUBH1y0qXmcNUed/rHz7t84wTO6SXPGT
Gu8pQafiXnFhZMUavpbBYMGOGqGjY2F0NDtcP2FLrT/lsUUcZyb/jt+YMV/u
9td0ZGC4/8pRarzs3Qq/fb5MxZ8cxskc6n5t6lyOTPUNQWHjs1I6dXxP8E62
gC0djWv+DK+g9netvCYPRBOHYEWuU6oqdX0JNnUXAsrpaIv45mMp1PPCPPz2
4zVCdEV+kvEqVqpVYxhOP1Sa00Bd74fXJvxhAXTEb/frihs1PystB8M7P1Dx
qr7M5h51vck2NW/zI4bBL8jwyCIqHiQUBK7tFx2G7MQ3OYep//+F+fDxL9fp
6PX+bRO51PqN+fjmJO2Ir/f4yZX33478OEyt35WZkgnU33+ZIZKNH9HRDr4q
EwHqfk8krnv2mfV3PDAvp/4zMrTmxhbMy88P1cw5p5wHmJe7Sj9RlpmqZvPy
tX5PdHVV/vJy3W8uKZfpnYB5uambwvfbZ/oB8/K1whHjri1DgHl53PuHl+Ka
RgHz8muPa943wQRgXk5XzrM2aJkEzMu/DQfc+TOHCZiXq50rjTl/kQmYl587
JhiYfoAJmJc/k97Srhk4BZiX7/Jc3WWsNwmYlzeGr6zW3DcOmJfzXtu2PLd4
BDAv1/56qLO8fxAwLw+K7DctKe8BzMs/RjxcoHa3DTAvXztUF/f4Ux2bly+k
uayObihi8/JkkfzoFukEAvNyh7tBTRGPKgnMy1Uv5FXBg3oC83LrcClf+T3N
BOblNzSuvJi7tJ3AvHxxwbO1gvmdBOblWyGprtqNQWBernOy9fAamW4C83IR
2aQFy+MYBOblWQKXXUxlugjMyytXXPK2zGgnMC9fcrFd+OCTFgLz8liNS3xa
R/4QmJenGHMdpxvVsnl5wH5/EYeQz2xebqc+fqCUm2Dz8tshD7IsB+IIzMs5
OIQfLvu9lfj/hZeLGpxMjOJJAszLFyh+TjzbVQ6Yh58tEbmd4TQCmId7RJTy
rF8yDpiH74idVMxXnATMwweDsu+b+k4B5uFrg0ZyhfYzAfPwRRntAgXU/MY8
PK+SnmXAxYSdtGNNkeeZcHnz/a4K5iRwlN2MU7hBxVEuT+XOoxPAZfHoTMWD
WSjxWC1JlxuDsCUfpLK+cKA5zCGxw2eG2bycceeN7+fDNQTHzp1DMiw+9EBs
qvrV8kYC83Pp/ulF4yatBObn7sYtQsdDOgjMz9tTBciVRV0E5ucDOk9ENvUz
CMzPP8YYyRlMMwjMzxXjM7O3czAIzM8XINHH0rROAvNzN3VLgyNb2wjsP8fr
jxSf1CwmsP+s8XGFeUNCKoH5uUj56z+V5f7E/5Sfq33dGiyz5RFgfj506/2i
8rpiwHx8dTXjelwStS78w8eNB2L44r3HAPNx2Eem7s+YAMzH62NMDpRsnALM
xzeeGrytqcoEzMeFHjcpil9lAubjvkFjCopqTPjg2/8+f4iaB9fT9hrtmgK1
38dsskamoeo1d3pI7QQcdFUvaJaYBRutQb4178YgzuS6s24wB7onbPQ5cf4I
m5+fvPl6jNP7G+G+J5jxLZcPuUq0Hgyd85vAPP2ZM/enZWYtBObppw9nutu0
tBOYp8fa5aek7u0iME8fp717fJFkEJinzwu+2u8k1k1gnr5974talimDwDzd
3CljTk1oJ4F5epX6LOMyZzuBfXF3dKkitLKMwL749smBos+y7wjM04/e9TPx
WvOQ+H/l6dgnD7pOy1zolwWYl2fV3dYVzRwHzMuNj5hdk/eZBMzLrSKNJLjL
pwDz8rrdnyccrZiAefnmuOoPIdZM+K6vxC3QNwmTdeYcBhVTUH2tgudSHxOy
v7jJJD+bhMrUp40B3DPwtuhLum3dOLhvn50028iP9nLuXLFsaxPR3tSerbtd
ALn7zPpv2tlGYP7+opoVM6jeSWD+nn5hxcm0FQwC8/dDbgq8SkLdBObvt954
5P+qZRCYvxdV/2zWDesiMH/fanfJOP1EB8H256tMKz/n5RPYn5c8VrH6j/dr
AvP4qg+5Kh5zLhH/bR5/RilD60AAYB6vnGhUW0b9bjBvn5f23NF/9zBg3m6d
tXxhhdYYYN5e98l+81qXCcC8/WDpdrJDdAowb38jFYo2zGMC5u27RSKONl6h
8oV/ePvzpanWWtuouPd5nXJN6hTMzbtsX283BaWd+rs9kqehed3iY6mik3At
kNnfUzkDPHfb+k25xmHlSJ2ykCMHmnnxZelixxE2j5/iKd2SKlVFoM/p7Skx
fIjPvnXj2NcGAvP5FsujxK7vzQTm83kXzRNUvNoJzOfDO3zOP+fvIjCftz3Y
sP7YEwaB+XxT/1JXHeluAvP5P+VxX0pvMgjM51vTQh5a1HYSmM/vk/eXPHq0
ncD1B9UjYu4mrz8RuP5ATMgm05vjA4H5fO50cDX5NZbAfL6za6/LVT1l+E98
Htcn7LSojLXpTQXM31t6mCF/7McB83e12ePXJY9Q68s//H3+lSEu+qspwPz9
6gquuF4zJmD+/sj1F88OByY8P3d108OXk2Cg6DsTxpiCwFzpiz5JTJCe+Lzl
69dJsMkNyT+Sx4JpY4XGEwsmABUrjm2Q40cSO1u6sjIaCakSiwtuCgLofKpI
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
/0D7nGZ6pvcou//AzPtW6Ng8zO4/EDCJDqeGD7L7Dwx1XTacFzDA7j+wgjPh
tcnKAXb/AdHKMh1H0wF2/wF/g8nwdeMD7P4DUTf7U/XzBtn9B6zig1bftB5i
9x8I/xBxade1IVi0R/L3tKw4Ovvr6b5z/oOAfQvX1YsfzFr1AfYtPGNOcf7M
bmf3KxB8M/mrwKkG/qe+ReyeBYvTroSwfYujtRrkwFQd4H5zr/cwL96U7gDc
b47f8Abnjws9gPsZrE9perY1pQ9wP4Owspe33lDzCvsaWx5tTPXZ0Mv2NapD
V3sr3+pm+xpSs+2LUvQYbF9DZrmIothYF9vXsHW12euVw2D7GvCl2y3xUQ/b
1+h2vpXg9qyf7Wtkv2ctLeEZYvsaIcn6r+8XjIB3bq2zcRAnmvTJD5QR4ECM
F7vb8h7S0BG3TgWBfE6UcWzdRkbUHBRytmoTTyENmbw/3PnqNRdyCdZxH8qn
IdwvIWP/yTC1Ik6E+yXIq9joKGtyIOx3JL9qeTJPeZLdL6G4LdKzat0Yu1/C
qeSzCzU/DLP7JZiknM6MGh1k90t49C1g+4LcAXa/hK1cL2xeaA2w+yXcfDL/
1K5tA+x+CZszmLsEygbY/RI6loc/P3d3kN0vQZJaxyV3DLH7JThXPjmk4kvN
P3rMmu4xMRSXzHlhVecgYB/EUdREd+RbP2AfhH+qMbRioJPdX8EmYXKnpdIv
+J/6IDtemWdb7v4MuL/gHJf5qetaqLj15mbVzMEayN5nmBqvxYDOl3y3U5f9
BscQpX3XW3sB92eo0Yyd5W3pA9yfoVL4UEA7Rx/g/gyWe5Zytpv0sH2TJZ4v
DNXLGGzf5O6P5ykvORhs36SwKHDJO+p82DfJ03M+uMKvm+2bKLmd8Lca62X7
Jh/emSS8ahiAV8WCHytkaGjELZi2dZIDbbEJ+6g+dw6auu50+44pDe0P0lzX
vZQLFeg893bspqHqxof6q9dwI2eto3m/qHUe+yfz371R9Gv83+/l/o9/0vyj
otywbIjd/6Flt9fRRJ1Bdv8HRweb8uenBtj9H/alqR84umKA3f/BNTViu9C1
AXa/h61y61u+DQxS6/t21kUtMUQupguPuw7BXdXjy+zSxdCCrF0TN8yHoMbH
11t4ozjacdFG46L0IGBfpXIZX8n74h7AvspmlfeRrfqt7P4R3utN1i28XQH/
XV8laHZ9Mt/dpwT2VQrXJJVkDNcC7v84va97oYFKO+D+jx8W3i4LHu8G3F8i
fNvTcuWAPsD9JTb4o4TXqX1s3yXSdTxojUMv23dJTA9qykjvZvsu1buUtIaP
M9i+iwZX/TYY6mL7LodifJ4V3mOwfZcS3fyeNwd72L7LquITQ+Or+tm+C8+7
yuOK7wfZvktI2Wy8mcUIuH7wa71mz4lOZtxHyvdm4bD2RPfS6zRktz7y55J7
nCjo0PrpF9fmoFRd1WKjNzQ0pV6gLxTAhbh/FKxY/42GcP8KpXxbg0e9nAj3
r4hI/uKiZ8+BsB9THn1nfH/gJLt/hdHrpPCi0DF2/4qLIVXzpmeG2f0romRZ
NU+WD7H7V+Rpv4mWrx9g96/g1AvY77d5gN2/4k7DYfWNGwbY/Sve65axJNMG
2P0rFPV5tfgvD7L7V/x2+OW3VmOI3b9CMzVv7VV/ar7Ztx5rbhNDcyOvmk7S
hwD7NB42N0SaNw4A9mmKTDQzC8a72P0uNI7JQsOyRsA+TV/BHL5raW/+2z5N
pcGVQJXvxYD7fa4WKRS0etoEGbkxZi8Pf4eGOl8jI48uGK8M2WCu+gueaszL
rI/oBdwvY5lTm9zK1j7A/TI6HLtMbVb2Ae6XkaRdO6YT0sP2dUINVdzjhhls
X+dF2yUBaTqD7esk5YeM2coz2L5OTcc7pwUG3Wxfx29wQYf7g162r9MQ9sF/
6f0BeFqYqzU4+r+qu/NoKrs+fvwcJxLJEZVESJKkEg1Se6MiUYqkQZFKSCRD
ydCggSRJ0qRCqaQQksplqKQBIUPmOQfH5WQ+B7/9/Na9d9/13Ote97O+/337
76xWxznX3tfen63X530JQgX+OpMySgA+GdL/fn2YAc2tHVYVrGBAtUDtoadC
TKj3flzxM5sBPbeLpoVKTYDv4pweTkHzDvud0Iag3Z+1+gH2O/em2k9yYPwm
eRy5t74rmRzuJXkcueK6h1jeNMnjMLmWE1+hTpM8jurcwF82jjTJ3zBf6KN7
rKoXvPVr8rurwoIXWw9zb3hwAb/W1zPtIQvelHvhae3CBbyOwpQJ6lJw0uUr
HZKWvQB7nzhN87n2d7sB9j6GQI8Tf6mV5HlkxM55XM0uAf/mfXbUVbsIWpeC
OAXmxsHf7UBGPj4mcVU1yHTtWcGu7wKzzAwM22MagcSc194tXzjgmiOn6XVO
KxB8L5L79TgH4PyP+T7y2w6j8cH5H4decJakL2YD7IniOgqvx491EE8UOM21
tLiDDQJk79bZZDJgSBbzg12XIKxxXuajTgnBWbeShb1+MGDG2rbTZkVMmGk0
JywL3f/YFxUE3FRx+NBL8kJ25SyOzI+lSV6I00elfM4imuSFRI4e2WJvhu5H
k9kBHAYLzjfLNevZzgWVeqks4/Nov5dY8STgLBese7ZDtE9ECgKnU5PevO0F
rvnp6ytDpODWdwGb8+f0/C1fRPqe/QaLLRXASzdHQfQnG1QF+hdPUqoHe/Zc
LTk4lwMkPw9q/6SagR9t8Lu6igNwHknD5/qzmjFsgPNITLQeHxtB9zP2TVLb
HxmlbGGDsoq2vG8rhOCJAAePhScY0OuOltcCYyacGma0N66dAbWcNH4VbZsA
9+/4Zb55JQNi31QQLBtSYUmTvJIgF2/PuoU0ySsRVbZ7Yofqdcvkh76m61lQ
rkFhwr7zXKAcsK5K+QO6Ph80ei8ZcUHyvLW7p5tKQUdW42qHEhr8k4c6VTq1
ukw2mcIeaiojtzTbvhzg/F3hlz8Xxj9vBTh/d4JAQU422m9w3omCQ1zgWU8O
wHknDp8MfRdRHOKpLjI12uyDuomnGk6WU2QVdxJPFZ6fwzN0YxNPpZA75CyL
9iuSdxJd6Btxlk08lTlr4e46zS7iqXaJ/hTR7uMQT5U/eClBK7KXeKoSXQ/l
Nxp94MSq/TNDbFBde1g+9oPlOAhmbO7Z7syANVFwqMBPEPp+y6gJchSCTklx
Sr0PGHCjy4ig3kkmXF0d7FWJzm04T2WfuvvvdgEGxHkqDm9mvrW4JACxv4ro
TBm6mjNM8lTO79/PTssdIHkqMtSa3cZKfSRPJXNWtpWOIZfkqSwb2eF1n02T
PJU51ufSN6J6GPsricjDagGoXsb+Kvjb9zHmU5rkqYi7XG42dewleSrXtas8
bs7jkjyVnOL5xi5ov1KefaHfppYFbUzPffquwAXYa6nxNRJD99EAe623Pb/S
NnixSf6KWHSC5cKuBoC9lnPn+w9RLengf/Vah7f83BR2IQ/gvOXUdNnFk0cb
wL2PmoqnfpQBBxHrvgaVDjDWXHEtKbkGOHk4Lvp1pBvg/BZF6HgnqJEDcH7L
vboE427IATi/xXeeyoj38y7iwYKMy5m/RDuJB5NbGi36VJpNPNhwUMbXGPQa
ezB97eX237U7iQcLFDQ/8+ZwN/FgnlYKXq3HaBBtGOXMaBWEO0KLIm7GCMC6
7Kiy/A4GXD//xfb3qmg/GkutDOYKwVMSS7Ud0f3+MRweyhKcAHtnXp23I4gB
sQ8r3dXyqnN3P8A+zCnj6Nqq2b9JPkxxsJLPw9O9JB+mJXEgWv80TfJhbv04
wrNC9TH2YTOyvWWe29EkD2bNRJVor2+9oDxpSdaSWSx4O2Tru71HuOBlWvCs
n3dZcGJ1y+qNaP8KvXXU+LSSFGRPcpcJdOsF2JOpWUgeLRLiAOzJdq7c/LFX
pY3ky0zyLhXSf1kG/s2TGbQ5aVVUloA5A/2XWBfawazFXXxB6ie4KnpWfd/T
LuB/V6zVeG8jyHYQ2FCJ1o+aumeZ0Wdagbi0UsmWIA7AeTQXpn3NFHPsBDiP
Zrl39ZNPq9gAezVwx/lS7nAH8WqXg3/3yZayQWrj78YrT9G6e+KYVnCFICxo
Td856bkQ7OplDxh9Y8CJp+R1/LKYcO4iVVvL1wyI/dqUkJ+KarW9JL8mXOi9
6t0kmuTXxLs4VV/Qokl+zYORNesijWig53eEOjMiCR86eS832ozqQ+ncjMP+
LCikreOVh9bryt38aNdxFhT2KLPXKO0F0bNmGLYESsHM2qc2Ln49f8u74T/i
Tp5fUg42TJRxvRrEBg038tT3xtUBpbFAQX1hDnCfmVO+yrcZHFeKFXSsR/v7
X/k4ghaf5k9NYwOcj/PDt+ZFFa8DYD93yFBx1hJDNhC9vzp/XE0IZpjlzV3r
xID7pr20ElvOhGo2JxbLonrr7EP72+NrJ8D4kvm+4yYMiP1c3shE9uHdNMnP
US0z1d+rQZP8nATvOU1CZ2lwpKXvbcNqFow9X1ImgfbrSiuLU0bvWNCxOosK
3soFayvbesMNpeAnY4Vna9C4/re3g2ui1cQrG8C8xdEvJ9/nALeC+U6HmK1g
qkdUaMkjDsD5O9y4RmdnSzbA+Ts3i1Z1hP3uALFVr+Q+XxKCCxo5F1LR+D4d
uHS75g4THuc7Mq5/YUDs8bTNi4Mt0XkA5+8YMZq9A9B5YTSvVjj9CFo/j4Su
zgxG9d47/c8HOSz4ltares/rJfk8GT57XqpWRgP6nVm9SEIteJJgeW5idjfQ
fmMxc7yvCaxSzObHoXob5/c8nTH1rJMwG+D8Hrm3VnXu89lAb1Lq9C/STKjz
Yev85+h8jX3f58h40SAXmuT5zNxWZfgT1asxJtdWiy5E88s2ZLWyDxesF3Yt
DEtkQTri/EbnA1yQyT/+4FxbI4juqll94gcH6EpbF1UtRfvk9peZfqpskgck
+mDflVwmG/T0pt00KRaCp88ajYbUMCD2gN0uKfKNqB5ROvDIaU4oCy46wR20
DuCCkqMrvdLv1oM3rnXqI/oc8PyE5rXjQi2gxVjvh0cJh+QHWZ2bXzylvwME
Kadc37iDCZVNwyOmtTAg9oOD4kVf2lC9922i/r05IRIw7GfImipUD+r6W+ll
bGJBN21nmY6LXOAcv1xr7CsLRi373X5yFfcf84ZsYz8+u/k5lcK+MNnbZl1G
1A+A8+uPeT1a6eLaCnB+/YzVrtsfX+sEOI/o+LzpX5QcOQDnES0Q1//u+J5D
fKLGWZVlGyO7iU8UqB3avae2k/jEypOvNqR7s4lP7LeNnuCF6hvsE2W13SV/
+bCJTzwuYehmJ99FfKKmQuLT7xUc4hNjd2a85J7tJT6xeraqjbp0HxgYMU+T
3iYIG/duULfTHgdxB0doN3u0jtl/fN9yVBC6Txr+OmwrBLlr977afZsB+yZF
Vpe6M6FtaLTfRzS+OO9oaGhQz3wSA+K8owCb6uXpNwUg9oyqb/KDd1UPk7wj
dfkzxs4/B0je0cgGH4PHWn0k76h5RX9MrjmX5B3NcE/69IBLk7wjWeFhqca1
NMk7CnrYKvRjKU3yjhJvOM+XfUiTvCNXU8nznH29JO/I12n2O2VlLsk7Sh43
VJBH9Y2zt3W2XBULBgeY3H+niuqrv/xjgbQ6z9IT3S9/+cdlSur7t6SyST6S
uILjmjLTRoD9o4Fm7Umh+5ngf/WParWtzFk1OQA/r+BZ9Zyv6x43gAgTL0bn
9TKwqUI/a3PfL3DGZSR757Ea8CJbR6DBuhvgfCW4zO/WPrR+43wlqwDxb1Um
HIDzlUxSjltffttFfKXkrMAtxjKdxFdGlZ1Q+zyDTXwldVWpTFuSTXxlQWHt
t5vzOomv9Lcu1Xtv1U18ZYvx8xXC9jSYJXRO+FKNIPTurh4quiYAh1XWljc0
MmDVlaOLT8ozoPiq/k8jHULwxo07BvKtDHhkcY2+1TATTvr9vmNeGANib6lU
Nnm5nns/wN4y8b7z56+av0l+08etcrKRIb0kv+lKyM6GqPM0yW/aYOhYko/q
G+wtc8VfHRfcQ5O8ppyMlxkO+b1gn8mOOt50Fky0c/vEdEb1zAOWW9dNFtQV
2xZ6yJsLKrgGU4G8FBxJOBwy378XYJ/5bfWLO4U6HIB9Zs0FuYgtbm0k/4k7
ZcvGgIgf4N985jKnFGmDmyVAUM1MFmxuB/dfS6g/O/UThP9snOQf2gWer6PT
TqxG53GPGo/6DA44LRuiyrJvBaFrD+uqXuUAnBcl233d+5JnJ8B5UQNztR1i
9NkA+8/m2yZB//n9Efafy4amFSz4xAZF6+41P45hQEOF7o66r4IwW3nQxOeh
EAx8krit4BMDJsm/lpBJZ8LyCPjIIIsBsQe1yarv2djRS/Klgotjao1e0SRf
qm3Xj1Mi2jTJl2qUnhZTj+7XgmmR9aYDktAuJPdBlgm6vwU2iAf4sGCnqdEc
KbQ+K6V9c1zIY8HIPJHgn6h+WpZvrM8+JQVVMi7rSj/p+VseFa2uS18LLwcq
W1TGJtmywX6ltu2iB+tA7LDaUEp/N4jJfRh/eGczCA2Zc8Yb1f84v2raa4ss
UYoNcH7VkPxtVZWxDoA9qrpBSaClHhuoMDs+zVASgre5LqvP7GNAa4vf609q
MuG83GduHai+0TAc97ihNwG+/5y1OMiCAbFH1X/ZdMfTlib5Vqs03M4XovmI
862isy5MPelPA57frNqnK1kwrfqsmNxpLkg1+Fm64zUL3nIU8Hi4nQsuL854
aw6k4MXLrZsnC/eC//arR9vODOulN4BYu4Y290gOkGGKlv9saQFSt76vcUrk
AJyPJReS1y6ziw1wPlbpjuYjuWg/uTVtSEz3rBDcO825XTWVAbdGzPP0iGDC
/vTiN+eLGBD7VqGWyxP3rKJJPpatTamnKXpd+WL/zk9OLPjOstR7KVo/10+b
el2FzYJDz8dExSZwSX7Wx4HFk9KmxQMPIzfxlMO1QHbk7YLPz7rBAfsVnYtK
m8Cz+xvPPUP1Dc7X8mZPEooVZQOcr3Usl3sjfw4baBn1iawSZ8KhNzXLbFF9
g73sQ2e+8Qp3muRtLe23KfqE6ptFLZk2pWosCBtMNx1D97MSt18p9gkLVvUE
B5125ILOOBv39PeNoCJi63V+MQc0uTw8s0SlF0xqeOPtv4BN8rrMLlotCRVk
gzbNgaDMfCG4ZY3PTRV0vse+NneWn3CFJg345guzdIJZUODgLPEgNJ5WvF2x
tnvrgdu23j5BbQ6oV5q6/0ljM9j/NubAvnIOyfcqLRjYd3CgA5zayz33xpwJ
49cdPSLQxoDY4/Zd2hpvsoUGDYGmKVsCJeCOuaNnvqKflz/df/cZExZcefRV
EHUBXf9rWeckC1gQfEl2eaTP/VseWOky09vR7g0gL36R7OLTHIDzwTZW7RQT
QfMhpmiPWtxZJqRfLWt+XI7q9b8875le84AqQIMq1gaPFWkScJPfA/7G5Wg9
veAu2L2PBRvl4leFoPHPfyl4+eqVJrA6pmWjUjMH9Fn82DTnTC/oL3BYnIf2
E4Ucj18zeUJw9sdvS1zQuRfnibke2sYXRvfHhumToh0UWdDaU2zW1aOo3i8Q
Ksh/wIKzrRcW0G5cYNavKj3jdCPIvLY+QPMjh+SP3Y2N95Lgd4CSx15Ot9KF
YITy1WenvzMg9sMJc7wt1ZfQIFVt1YGdZ1hwXZvS5dXnuEDfvWaCWHQzWNny
iV9XwyF5ZacYUxK+oPPg4Sr3g7cBE+YPJEky0Oed6GdfmeghAXtmu5pNQfVs
o8m3O9MMWLB5qtfx74Fckl/ms0daNKGvAyhXWr2MdWdBmRZGvjiq/7E3nmSa
5xReEgqYU103FE5rBuazI/jT0fxf/+3YvF3yTHhFee7iVDS/rVyuqhzcJgG1
clvKxND1CbaMKLac2ATeNxVX7a7ikHyzhtPFv9dOZIOhVM8nPyuFYMmx9MLn
9QyI887ezY3KEEefd/2J2dNZ4eg85Wz3guPLBf7fN+QazW0BWlsnvJcp5IBp
ijrtwmu4YLx5m+QgOv+Etx59WG3HhE+6NDXa0T6eGaIT0n9NAoY4P3Jlouv5
vEVzFmcrCy7WS3xVG8T9x/y0oVtXEqvi0insnWeovP90VOsHwM/3Kbs16Y3X
5laAn++jfODLvc1nOgHOV9s2y9L02T4OwPlqN25lH21B44+99IP5gpzkO93E
S2+d1HlQvKWTeGnZkcDHp0+yiZeu890rmo3mO/bSQlc4Kc+82MRL5927UvhO
uot4afaVGsvsAg7x0ru+TS1t8OklXjr6e3N9LzoXp+3MZ1SZC0Lx4+K/lVXG
QcqM4qN+exnw65rswBZnQchRk/2QvFsI2tx32zVygwE/Vdl/uneECbMOj35V
qUP10F/5bdcm3q3tk0Dj/1d+m+B0/UV19wUg9tXb5e+YmfwaJvltRjlWS7e1
DZD8NpGMr/cPruoj+W3+W8K33EL7CfbV9pbWoSkDNMlvG7ODQyvW0yS/zau1
Umwyqqexr9aaoXD8aQxN8tuSWKHXqL29JL/NbVyOspnNJfltHlV3vzeh+R42
J+fhSDkLdmll/LimzgXYY3+RGLSJQPsf9tj2IZw44VI2yXv7+PDN2nzfRoA9
Nm2cOLT25Fvwv3ps67Jgy1UTcgB+ntMLxoOgk34NIFT81jFFrzLgNUlDKbn6
F1ibcqlikWUNgEmvH9ww6wY4L850CidyRh06j/6VF5e9sSzl9WYOwHlxDt4T
ZkfmdRHvrTgmcVNErpN47zfZs670zGQT723cY3dAToJNvHdHuF+krFIn8d5O
b6Z4N2/sJt7bnhf9+dFOGlTv41lsrhSEU46dc7cNEYDCFbLbu2sZsNUKLv4w
gwEv7JDJSWkVgrR+gkNNMwMajD/RVO5nQv3g1osnrjEg9t8yBiI7+3z7Afbf
irvN521b9pvk0Rkd9pwzO7yX5NE5zDawsAyiSR6d9IW8O+IaNMmjS0ttVV+2
myb5c16ZDNfd73uB2nQXToMMC1rl2Qgao/3Vd/qPm/03WDDmx/6zDce5gB+d
MCQvJwXHgpfdqAjsBdiLv0jllZzahM4lf3nx867KW5Out5E8u5fyD6ptmeXg
37z4Yo3yc94nSkBE+N30Ua12sG/sHjxt9xO4Dm/dYXiqC3y8uU8hXKMRdHc6
bp2bxgFl6Sd3m1i0gmkzZYX6IjgA59/9vpxQUH6yE+D8u/VZtRqxa9kAe/SU
vNv5DWi/xh49LLNwoCiXDWoGPfanRTPgg0tyz07kC8JV+tMNtR4IwbGNX83d
PjJgYNd5XkMyEy4Etw/FZDMg9ulyCb4vj/T0krw8hqaVbmImTfLyxKboqZeh
ehr7dBDa5BZmSIOw5ic9S/ok4dbH+Q0uxlxg7SW+7OJxFqzNkxqPQ/X0ertl
m8WHUX22f6b1lOZecGaWHez2l4K7pEMm3c3q+Vu+HrvLxq7AvRyExjAf9pmw
gepB7yN16+uAeZ/OUY3ubpA5bYbkuQ3NwOOX0pPNTRyA8/jahJ18pr9nA5zH
l1h/oWfveAfAPl426d1n/go2WJKetWGuvBA8cICnFbqHAcuOTgVL1ZlQ6yvV
ugztdwJS3+zsV0yADWoyapnb0XnxLx9fufHA2aB9NMnrg9WNg1fRfojz+kQ2
1++Hvui1yeLuK8tZMMV3KXMKqmtiMu6O7nvFgo5iObTsTjRuNYoxi1ZLQdbG
J4lmEr3gvz19sG6/3baHDeBksaHxfnS+OvRgSEz6RwtIMJh0NzIJ1TN/5f3Z
jG1c7b+HDXDe3wjvgYc32k9kdGYwuf5CMCH/goJRMgOq2vfbwTAmtOGMnnVA
9Qj29ime7cWuejTJ+1urlhYJdGnwca5a4PdDLLgqOiZzN6qnnHJP+gj9YkGF
c7cUL4tySR7g5ZZNMtrtT8GyEME5F8xqQWHgAomOmG7g/+qphXFuE8iKeePl
h+oJnBe4p3yr3jYxNsB5gWv5bT+mKLFB4gFpgd8iTLgCPlmqgK4/9vuu3lq3
73nQJD9wTcuQ5ldUTw8kFbpkqLJg7/YiBTEvLpA49Hrjs3gWfG6xoc4DnZ+Z
w0U/C182guk/I+QCUT2RPtN0t82sXqDo3eY7VZNN8gcd4yIXsQTYwM5s2hn3
PCFYcDhiilUFA2Lvb57Bj9qziAbsj3T7moss+MUg2e/SGS6YAbtf68B6sFkm
tOaTBgcMeZ77mlPcDIBYa9nCSg7JK4xaOZyths67PD8p/2OmTBiW6ju/GtXT
uD9gIOf+gJgFen+DkjeHTqF6OoQXswXV06EtVw87GLNgg5Tv8umontYWPfNC
Np8FGfLn3z9Yy/1bvmFXcJbQK7sGIPXNfrPbSQ7AeYeCGy5whNF88IrWkHEL
YMK2Ml6FcSUD4v4C99lyKyT0aWCuJ9s/kiQBlbVP6tstQ+eXUZ0FA7YsOG9q
Rd8ZNP4NIh79T/ybwIoz+ssd0P32ScBXbTOqOwYUD7q8kELnk/qIhpIBIbij
5PAyj18MiPMRjevTmtXR/SHZIv/cVIEFP7BuPB915YKPIJ9bfI8FtRPfvXzo
zgUHN9z0XezWCJyi6KvT8zgkT9F9RL2+bqQDbMqP3Lc1RQjamxp7uaDzIO5n
ONXvWF6G6r+Y6LFQ+1MsKF8h5ylyngt2ftx0ZM7lZkCzvhotRfsnzl98tu6Y
7Bf0fu2D4XssVjFhrm6udySqp6VWdTS+d5OAl6ecs32J9pfH0xuf8QCqF367
7hw4yyV5jIveKQRIo3pactPM2mduLNj+qkbGCdUXuP+haXaCbsecG2CWQ2Ny
24Rm4OM2LOSK5n9O57XZU2WZ0MH+vGommt+2C6Zr+m2RgNY91WI9//n992Ph
lS6DjYCv+0nYv4JD8hqLBB7xTwizgUfp9QfhZULweu+2LFVUn+H8xr5B/Xfu
qJ7W7mmCM8NYcFxBRHWBPxdEzn2rbivdAi5Ni7S0QOdJ9tfqbK1lXLC9Pzbp
JPr8Eszwu9dsmLBuqm2ICNqv35u8uS4eJgHr+kfEnBfTwCPZQKPUnAW5BtlS
Tqie/u/+C1sdnWpVBy44zHjlveY//9/d8dZ/og063y5uNNuI5otkkvXHn7ub
gO+TLo2LDRwQNutHsQFHCLJ72rVN0fzPvmF+2V5dArp1zdlwCc0PnB9ZGcE/
+nqoA/gGn2vy9GXBS0dMHx9F8z/4yFJg6dwMChP2/gxA71erXbopT4sJX4+t
XBLMZkCVV3193EMSUELBaUAKjR/Om4yfnaeniM4P7JUPFlOH0fv91rAaReNl
OuXjmektTUAvPOrGazQ+r9TKppyVZEIr3pwlYWh83OOV9RM2SMDzb8fOfEPj
U2LeKRr9oxEYFuYs2VTKARIX/avkxCTgECVVvx3dr+Gq8z2CVdH99slz/8v+
DsDUL7kstI0JH6lPXSndivaTjU6md01ZMNAvo3Yn2g9jFIwy5dB1jb4HC//j
BWJYLyqa97Pg0DwbZhC6fs/3XlE5cb8JRHk1qmWg82tsjCW9b1wI2iZVzrJE
3/fWvZUOIroS0AfcAp3o8/Vmbj3SbMiExu6qE3aj+0+11+n4hG9coHf3zlVL
9Hm0910LuuXBgqyt3BUx6OfifhHbtl2U+gN/0JXFb0ib1wxmrxzUuY9+3ufn
FotilZhwYkmt2R10PUxfiMlt3iEB5/Nzohaj8XIXUD6kJ9sEtFudmdOqOaDt
isNLaqYE3PbId9ILdP0NjoVOrl6HzjcLrgyfRtf/13Q5cdFtLOhZpNFmiK7/
P/WfWJ9OZtvf6Aa4/8SyEnKo5f2k/8Rca8nSneojpP9E8G04tLvHJ/0nwxnu
p5+IjpL+E82yaNfECzzSf/J9jkbonsQh0n/yXuvWiQnn+0j/yX7F+EGDKz2k
/8TP6w5PXKON9J9ccNlU8/phBek/Of94aOsKtRTSf2IZ8CvwrM8XCvefOOyS
ybTyaSDPn2xiNmxw1ewgz58Mnm2geFa9lzx/8tvkKZOfnfnz/EkDE7cLi4yH
yfMnuQIjUssf8MnzJ1uvFUX2PBojz59si88L01g4TuH+k7pdzEePfo1SuP/k
+KomfZEAHsnTTJQ7lQvGBkmepvBnuc+d2/tIniZrUBHMe0yTPE31fcw4EZUO
kqcZVbbjMbBtJHma5a5l++OjvpM8TUnfwXM/Ik6RPM248EOlO9MKSf/J9vX6
Arva60n/yYDZkae6Q22k/yROuzF3Q2wX6T/RVj/qYoTOI7j/JPjAA/uvQzTp
P/k8KPRgbXcP6T9pVFstE3jiT/9J7t7Fke8u/ek/MT/gIzqw5/+d/hMTD7NQ
0aVc0n9ywDVq4SreIOk/2e2oP/7kMY/0n5iKnuxrkRwl/SfhBTdlo87ySf9J
eJrF+ilwhPSfUInw3pX0P/mX2TkVF0I9BincD3Jpr1J59VQehftBQp7c8RT7
NkrhfpA5k7ellamPU7gf5Ov18MPMd2MU7gcxCr+n61bKp3A/yMy4GW7XyoZJ
vmVUHFQbCG8m/RnDk5OLZMc6SH/GSNrq2WtHOaQ/Y8addyomP2jSn3H5Rs6h
7Jc06c84VWlxL/dRN+nPeDdTIXC215/+jISm7G2q9v/3/Rn1kiMZbsE06c/I
qElV2JswQPozViffVzo/MkL6M/qfHC1IaueT/oyuafcT1pfzSX+G2VyrBDXO
COnPsE7V3D8zc/BPfuXPdUXp/gMU7peY31k9UVZnhML9EgqxlpUP4SiF+yUu
nlZcLTk4RuF+CRdaWX0TY5zC/RJ7lNirSw+OUrhf4pmWWbZp0gjJp2zZf3Kl
SEEj6V/QgVujxc7/Iv0LiWuf1ds0d5P+hR6ZYqOVMTTpXyj6/NK6oIUm/Qu3
/PL27GzjkP4FWFEaHxbxp39hZYfAvAGB//v+hXhxC7PG3N+kf+G6d0NCy9xh
0r8wGK3TX6HNJ/0LYuLtm+rlRkn/wotLGiXOU/mkf6GqPDt6esAw6Sdov2HK
k2rmUbifwHpqdFvX2jEK9xNce6FyI1xvnML9BDdm5nff2zNGsd4ZnXi6VBhO
vOHff3Axn8L+/+rsHY6jNp3E/5+5mFa8i9ND/H/O60HWcS5N/L+q06qjiftp
4v/rohvYbgv/+P9mu5GaJvk//l9eQG9Fqf//7v9N9429N9/VQ/IqlfVcvbr6
+4n/n7bqctqLyBHi/9/xhaqO5/OJ/1dW9pg++ptP/H/2jNQvUat5xP9n5Lp5
N+sMkXxJzqn94/sEByjs8Tu2SD02yR6msMeviORWLfvNp7DHrz888+HxkjEK
e3xe4gNfeblxCnt8Z/fteiJPRyns8dcn9eY7yfJIfuTd4iGbxvoG4uPjpkRu
TstpJz7eYp1e4GejbuLj+xau5n45RRMf/zlv08WdaDywjw/ck5Ff4tZDfPwG
+Mh2aegfH//pxvSOKIk/Pj5aX3NS2Mf/3cc/zy/btnSMS3x88qBLmfH1IeLj
J3ziSvC5POLjwzts42RnjhIf78pQCJu6mU98/FrfHc9KG4eJVx+h1HSt/HgU
9uq9Al91YsXGKOzVj9mvqzFbOU5hr35/zaSNdWFjlOrHJJ+N0sKwJUTk4aez
fIr48ie5T5cns4kv/2CjzBA82UN8eY73lAWJbTTx5XcdZW6KhNHElys+sley
7e0ivvzxxu13V2/548sl16aHdjT+uy8/3W8yrjvtI1A2OqFev30QYG/uI7/t
RNU2HvHml7PGFykJjBJvHtPtQr1N4hMfvlDgrtrWoFEK+/AqsadRV6THKezD
D7XrT2xuGqOw7969UzvXz5NDfPehrQd0jmTRxHdfFD63Z6CIJr771fkybpoZ
5x99d+GRPZ82HOET371vnpCd9bRR4rvbd6lp1RfziNeWqSs1yjo+RmGvbXFl
7HDAinEKe+0LkyufnVQdo7C/TkjYdtUf1fPYX98WdbINQfUU9tdfs/Y2RCz5
Z3/t06rz+qYPh+RR7t1Tf6PjRj/x12oznzpH2I0Qf2377PtBp1Q+8dfmLyNr
Ksb5xF9fTu1jb7HnEX/95Ssdpuk+RPIjlR9y7Zfk9lPYQ2+altwSEzhMYQ9t
/Uuj+cNnPoU99EVZxZdXUP2BPfQxO3eNcZVxCnvozAink10FoxT20O7HEq0S
TXkkH9Jj7NiJuU4NxCd/qrT/csOmnfjk8cSxRw8GuohPtjgw3Vf9CE18soDm
Bw3PAZr4ZAlJyWmfk3qIT15kFMuPm/DHJ9+2t5y9seiPT6b45QmKPf+7T5bo
4bg53uQSnxxvt0PjyIYh4pN/TVh3qKmQR3zycGqCniuaT9gnT+wvkVzjxCc+
uej815FA1gjxwkJZSzbKb+BR2AsHTLTYPdY1SmEvvJH/UnPF0nEKe+E1fVOd
X8WPUckmB3i3mcLwcNyd+CnP+BT2vR8EP7cdsWYT3/v7h5e54+oe4nuLcnLf
Pqujie81cfI0LUf1Bfa9H9cJLmo06ya+V1OQ6ezX2kp874jIkF7qo3/3vSlH
I5KqJnwAKdtUMrMZgwB73/G17LVwPo9438i2D5sb+vjE+1aFqDw6/p5PfK4j
O+bAjQOjFPa50eWrFqcJj1PY514+YBnn+BvVw3/5Wlmbtu8vFnKIr920+Vcl
P4kmvla9/OMik2qa+FrhGcLtRbc5/+hrzZPGdO9u5RNfG2t8bqEQ2g+wrw2r
t1UfQ/sF9rJhs0c0Luwdo7CXnTJD6bb7qnEKe1mz9SlGRoZjFPavtefDg5hS
NPGvD1w0unTR/Mb+ld1plTHT9O/+VcPKK/nphypQ2+y/7UolH2APayTckz+7
jU98a1ZK+byHrWMU9q3rzvg/uzRlnMJ+NXS35q154TTxq5ti2kSPd9HErzpQ
DSu2c6JBYbrkjbLSH6AgX2HWkDSfeNYwTSP9X6jewz41Jlk7sAZ9X+xN+c4h
oUbdNDi0UkM+WEsKPl/UF2R+kgYSk/YZ78ioBl+UFGq9REeJR/1VzlKeeZtP
vOnwV87u24rjlIPoi0L5BiZU2GoQQBWPUdib3td/uDnoMw1SeOnHjktKQfEd
UwsKcmmw4EZZoF9xBaDjZiTXX+ATjxr3MOtKMzq/YW/KN2pc/RbdX9iPLha9
k3VomP5HP2p4UWammSiH5FNaRY/PlD3UT/yo0dUuuVXrR4gfvZ+hZzn3KZ/4
UVZ7iS5jwijxoxfu5n5J8OQRP6q+wNWFfWWI5En6RDk3HI/pp7DntH1uuvjM
wWEKe857mlFFSul8CnvOiIC1S71SxijsOVVSJB+bzh+nsOecK9lm7lo1SmHP
yU1PbRk8wCN5kZSxbvB/Pif2lXLH792QXNBOfOX5S+rFut+6iK9cIybXYovq
Z+wrpaTtOJWDNPGVW3kfYr2Keoiv3K0q+koY/vGVPiGcA+Kaf3yllG6CSejT
/91Xmo7dfep8kEt8ZXKXnNs95SHiKy2uaM+a9JZHfKWa4knLtqmjxFfWXj14
d643n/hK3gID1x61EeId1QF73l1NHoW946Ja4y2ataMU9o45Cq/s9BeNU9g7
vjjS9O0Kuv4DIdSq9/wJMC9YPKSa4lPYJ17Xu2ziuYBNfOIXV5f0ePke4hPn
HjzqPe8nTXxiasKWpAsJNPGJ9zJ33fvg0018oqfuljkGmn984h1eRdHQuX/3
iZ8XrRR94vcebDOX52yvGADYKy6MnL9lnhSPeMUlN+ojz3P4xCtOSbcpv/uN
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{306, 2564, 238, 239, 240, 241, 605, 501, 417, 351, 
            305, 277, 624, 520, 436, 370, 324, 645, 541, 457, 391, 242, 606, 
            502, 418, 667, 563, 352, 653, 549, 691, 465, 678, 574, 698}}], 
           PolygonBox[CompressedData["
1:eJwl0klLlWEYBuDvHLPAzHYZZOlJKAgKAstMIVqZc/UPsixtUYsm3TRtVJqN
giCIQhvFCILSFkG1q6jULIdKG39Dg9n10OLivp/n43zDy8k07t26J50kSYrH
ZOUkSZpXeqULn1w4QRWLmLHfZv9T72E7a3htv8l+Uj9JNQWp/zdutP8lr7OD
tbxxqcp+Sj9FDYvZZzeXB/oBUvEM8295gyZKGfT7avvP+mlqWcJ+u1we6gdJ
xzPNf+RNdrKOw3YLeKIfZcj9asxf9DPU0W4u5LleGO+jz6NfP0RWvI95Wt5i
V7yLeRmDehlH9Hye6ldlGcf0C3Ilo/qwZ9fqX/WzXNJXU693yCLu8cLcLSti
F98n87jLgPmKLI1vp9XcJVdwn5F4R7mRR8yKs5B/ZZ+8LS/Lkjh7muMc5HKG
4uzlBtbHecmFPNOvxY7j+kW5ijH9rW+q07/p52ig05zhpZ6JM9Tnx/vobWTH
GZpn5B1aKGfEvertv8c3sZmlzKY5/rz06rup4J1Vg90P/TxbKGYO710bZYxx
JvjAR/4B7tlfuw==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{203, 2565, 2562, 206, 205, 254, 282, 328, 394, 478, 
            582, 204, 253, 281, 327, 393, 477, 581}}], 
           PolygonBox[CompressedData["
1:eJwV0klvTmEYBuDTwVRTp41hY1YtFQmRSKn2D1BTW8PCjrY+dpQ2oVhgQZRS
Wk1EIgSlqaRJDRvDCgtSiYW5Opp/QK9nceW+n/d9z/nOOfnm7E5V7EtPkiSN
PjKykiSTfAvL2UUH/9nh4KgzeXoxO7nGP7bbG7FXrh+giwnWUuTqy+J62vlL
tfVh58v0/TxgvLV4mBy9kafkm4+wNH6DNv5QZW3I9Sf1l8w2H2e9nuI+48x1
ZOsNPCHPfJgi/Q3z9TNU61f5TaV50L1P6C+YZW6iVH9HgX4unlVfJdvp1DNl
LdP1MnmL93qRbI730FfLDh7rubKeQr1E3uB1fAs5j9NUmR/KFbRyxXxH/pLb
5IDn7JXl3OaD9W5ZTEt8E3OPXMN1nps75UyOsc5cKm/yVl8sz8Z301fKNu7p
GbKGaXofhfr5+Jb6I3L0QyzRXzFXP0Wl3spPtpp/eN4m/RkzzEdZq9dyl3Tz
Xqbq9fSSbT5IQbwzlxlli7V+9yvRa+K7kGZtD1PiXeI3ucQIm61/d36yviiu
p4VhNtn7Zu8rWeaFcZ6LDFFh/4u9SfqCOM8FBtlo77O9ifF/irM0M8AGe5/s
fWQMftJnDw==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 155, 120, 190, 94, 181, 146, 75, 173, 138, 193, 112, 
           186, 151, 199, 61, 168, 133, 192, 107, 184, 149, 198, 88, 178, 143,
            195, 117, 188, 153, 201, 51, 163, 128, 102, 183, 148, 83, 176, 
           141, 115, 69, 171, 136, 110, 92, 179, 144, 118, 2, 156, 121, 95, 
           76, 62, 169, 134, 108, 89, 52, 164, 129, 103, 84, 70, 3, 157, 122, 
           96, 77, 63, 53, 4, 158, 123, 97, 78, 64, 54, 5, 6, 7, 8, 9, 10, 11,
            12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
           28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 159, 124, 98, 79, 65, 55, 
           165, 130, 104, 85, 71, 38, 160, 125, 99, 80, 66, 56, 166, 131, 105,
            86, 72, 39, 161, 126, 100, 81, 174, 139, 113, 67, 170, 135, 109, 
           90, 57, 167, 132, 106, 87, 177, 142, 116, 73, 172, 137, 111, 185, 
           150, 93, 180, 145, 196, 119, 189, 154, 202, 40, 162, 127, 191, 101,
            182, 147, 197, 82, 175, 140, 194, 114, 187, 152, 200, 68, 91, 58, 
           74, 41, 59, 42, 43, 44, 45, 46, 47, 48, 49, 60, 50}]}, 
         Annotation[#, "Charting`Private`Tag$2299640#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1WWYVVUUBuA7Qw8h3eHQICktId3dXRYGoIKKiiCIgoSKragIAioCdmF3
0N1d0i0Nvuvxx8v61to39tn3nCF18PDOw5ISicS//lmiNktOJLbJT9OCAlwx
X0pza9v1k2lJQa6aL2M5ySmJxAq1hdftsDaFVhTimvkg8wvyXG6hBivNW5rv
lKfSmsKxIQabX1TncSs1WWWplfkueRptKMIIs8x8KT9AUnyH/pL6LrdRi9Xe
39p8t/wMbSnKSLMsfCU/SHJ8p/6y+h63U5sxZnn5WX6cNT6vjX6P/CztmKgv
xhK5WOxHzsrX8kOkif3or6jvc0fsRV+a1XIdxsr5+EWepdZhnPySWpFN8lrf
3VbeKz/Ha3JV2suT1Ov5mKX6OWq9mMX1qdn4kMX6mWqtuHZG6Z9Xy/MZ62OP
aiO+IW2chXpVXaTOV99Qq8fZMyTOQS3Dmjh79WZuivNS8/OrPDtmjJdfViux
WV7nmtrJ++TpdIh7UZ/KMjk1zlC+LvYjP0y6OEP9NfUD7qQu631We/P9cU10
pDjpGZIcN2wisUC+i3psMOpgdkB+gU6UIAMbrW1iM1vYyja2k8Z9v0PdSUfv
/8frX6QzJcnILmudrB2M35AulCITu611tnYozoKulCaFPdb20sX6Yf0rdKMM
mdlnrau1I/KrdKcsWeIczJNYKN9NffZ7fTezo3G/0INyjDLLzrfyI2SNc9En
s0i+hwaM0xfgN/kJDvi87vpj8uv0ZLK+OMvl8vEbyTn4Tn40zla+gQ1yttib
nCbuR/lNtQZD455Wy7I2nkG1YdxL8ni1IB/xu/4dtW48X0yIM1Ir8zlb4p5Q
m8S1xW9jvz3U4+YL1Rmxb/VGvqCXfopagk9YoZ+r1o89x9moOfleflutzej4
vdUKbJTnq43jHo1zi2cm9iq/pdYk/uBOV8uxTm4YZykX4g/5SQ7aZ0/9iXi+
6M1UfUlWyhXiLOVc/CA/RnaG6tPFcy8PpxET9IX5U36KQz67l/5knDd9qMho
s9z8KI8hB8P06eMs5HtpzGHv7212Kq6JvlQiZ3yneQY+le+jCUe8vo/ZaXkm
/ahMLo5a62vtTJwn/alCbtJ6ro5ZP84JTtLPa89am8UAqpIn9maeMf5myffT
NM5RX4S/5Imc8v7+yf//XzebGXI1BsrT1FKxb1bp56kNWBz3Rpyvmoef5LHk
jevTZ4r7TB5BM077jgFm5+K+ZBDVyMcZa2fj/1rOcZ4LXOQSA73vvNfNYTDV
yR/XY54S96c8kubxO+qL8rc8KZ59uQpb5QVq03jeuOxz/wNqY/pa
           "]]}, Annotation[#, "Charting`Private`Tag$2299640#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GXYFAUUBtAlRJEG6ZJQCemQTkFC6VSku1FRMVBEsABbsUARpENAwaIb
pKSlQ1BCWhrP/XGe+953Z/eb3Zn58nUe0Kx/kkQikSZpIrGIBskTif3JEokR
1CANZ/U99NflCTxJERbrG+oPyCOpSVrO6ZewlGUsZwWPOvag19+gFuk4r1/J
Y147ZH+T2qTngr6n/ob8Le0pyip9I/1h+S0eJgMX9b30N+WJdOBBVusb64/I
b1OHjLysy8BC+WkuOa63/ZY8iY4Ui/PV5WRZvIc1jmtiPyq/Q13etRdgnZyJ
oXJGfpKf4bL39LHflr+jE5/Yi7BFLh7fXc7FcnmaWY2h8jizNLvluWZd1vq8
puYx3Y/mqPiNzIdYyiP298yC/MJ6+0yzJqu4x/6KmSnOkZ/tU8wqrGCw/Quz
BIvYYf/erMN//nZfM8Hk+D5mJTrLn5pF2SqXiOsj547PjL/HeLkMe+R1PqeZ
/Jc8mnq8b7+PDXJmXo1zje8gP8sV7+lnT8IUexdKsl7fXHdcHkN9snBV31+f
lKn2rpRig76F7kRcOxqQlWv6AfpkTLN3ozS/61vq/o7flYZk47p+I6289k+c
P4+SnRv6TWxmC1v5g21sp7X3nHTcBzxGDm7qd9DGa6fsH9KInNzSD9QnZ7q9
O2XYqW+rOy1/RGNycVs/SH8HM+w9KMsu/eO6M/LHNCE3CZ7Sp2Cm3JNy7Hb8
E7p/456lKXkYpsvMr/JzJInnyH4ns+RelI9nzp6HlXE92ePz2tnPxv1Cs/gN
7Pfzu5yX1+Qs/CY/z5dySXbKSeOZku9itjzZrExveaz5IH/Ic8yH45mI59TM
G/d53P/26Wb1OCeG2b82y7KYP+3z4hliTezO90nznH6BOdacaFaI/wk0j+tk
PhC/BRvts8xa3CsPN7PGcyRPNasyRP7KLMUuORmD5ZTMkfvwmVyMbXIFRsXn
sTp+H/Y6r/b283EsLcjH67ps8V3kF0gez479br6X+1KRfd7fQXdB/pyW5OeO
uJ76VMyV+1GJ/Y7vqLsY/xtoRQFScMBrBznEYTo57lJcN1pTkDvjWupTM0/u
T2WOOL6z7nL8JrThPu5iiD4N8+UBVOGo47vE/yF5HG3jvrcXYpN8PyPk7CyR
XyRl/Bb2tPwgD4zvLBdnu1yV0XK+uObyDLMGw+VvzHLxWey1zzfrsZZjzqWr
eUW/0BxvTjIrspzH4xkzC8e9zGb7bLN2XMe4Z+wjzRwslV/i7jhnezp+lAdR
jb/8rW66q3G/8gSFSMVxr53gb/7hJKc4zRm6e9+1+C60ozCp4+/p07Mgnn2q
M8aeP75f3EtMkMuzT/7BrM+6+H/gc/8HyyoRdg==
           "]]}, Annotation[#, "Charting`Private`Tag$2299640#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1WUYVVUURdEnHSIgId0lXUorXQYKiIoFSCgdtqLSYFCCdEhJoxjYIKlS
AtIh3dKSAo79Y35rz3Xu63PPy9+mW9OudyQSiWJJE4m1yRKJ7CkTibYpEolt
yROJTiiEm/qa+g/1N/lIPIR1+hz6dvrtvDMK45a+lv4j/S3+CR7Gen1OfXv9
Dt4FRdBKN0+XG4v5bdfV1n3Mb/NReASv6JbqymE13+C6XLoOfCfviqJorZuv
y4OveAJ1dEN5AqP5ML7L/DAe5a/yZebyWMMn8xPmZ7DR6+TmL5l3WfvcfMHc
zdzfvNFcC8V4G77AnDde23xLfq0faz5k3iufkCvkXTiDO6zXlcP0f4bLBfKq
PCw/tT5c7o7Xl4/IZTItTqGJ9dfkr/qtsoL8TibFb9amyJO6Z/GbORP+9Jny
yJd1u13THQOi57VxL3+RLzTnwzc8CerphvMkGMMfwybPlVffUbeH90BxJEV9
/Qh9Uozlj2Oz6/PpO8X3wXuiBNrqFuny41ueDA10I3kyjONN8bpuOa+I3/kW
z5df15nv470wkG/idVCSt+NfmAtgCR/HD5tbIDlvyD+JGQvN1+R4/Qjzntgj
aMbf4CvM9+F7czL8oZ8av4Xub/lcvC+ZGefwl/dXQHbRb5B/u362vMgPylf4
ILk57gtZV/4sU+E4SllvL7/Ub5EFY0/J2/E7WxtvPmJ+EivN6ZFC30iO0qXA
hLhv+V5zEzTnb/KV5vuxlm/1PgvquvL9cU+gNDroFusKxWfmKdFYN5qnxET+
BLZ5fCF9N92B2JMog1RxXsQ+1qfCJN4C211fWN89vof4XVEWqeO80I/Rp8Zk
/iR2uL6IvofuUPwWKIc02GmtqLWecc/EZ0N5pMUua7uxB8Vc08s1R/RvoQLu
jPNFP1afBlP4U9jr+nvj99Ed5W+jIl7SfaUrjB94OjyqG8fTYip/Op5ft4pX
wjq+z/MV173Kj/F3MJhv4fViT/GX+dfmInHPmRP4UT9BHtU9hVXmDHF+6JvI
8bpN8k65SF6Pzyc/i7NX7ot7XD4mf43rcBot4zPJ1XHey8rxeWRyHMN665/F
tbEf5PPyD5kl9rDPUkK+pjvuujnmS+be5iGx5831Y2/xjvwbc1H8xNPHuaGb
wNNhGn8mvg/dGl4l7hO+32uU1L3OT/B3UQkZcMBaKWtvWDvJ30NlZMRBa4dQ
2vqb1k/p3kcV3I3D1spYe8vaad4HVZEpzif9RP1dmM6fxRHXl9W/rfuH90U1
ZI7zSD9Jnx4z+HM46vpy+nd0Z3g/VEcn3bfxPxH3N8+CZrrJPANm8udxzOPL
63vrzvL+qIHOuiVxNuMXnhXNdVN4Rszio+K3MT+OF3jv+A8wV8VGPo3/E2vx
u3mdCvxd8zlrc83/mgeYPzBvNTfAA7wL/85cPM7m+I/CUv3E2Ctx7sqn5WqZ
EWdxT5wLcqp+s7xbfiFvxP0kP7c+Wu6P/w3ZVC6X6eI9olX85vJ3/XZZTf4Y
Z1v8T1mbLs/oWsX5Zc6KEz5TRfme7rxr5pkvmweaPzRvMzfEg7wr/95cAst4
tjiX4r7hmTCbt469FWc8rx73GT/pNe7Tvc8vxNmNmsiOU9but9bH2sW4v1EL
OeIM00/TZ8Yc3ganXV9J31d3Ke4d1EY33Q+6knHP8pxxJumm8yz40vyfnKv/
1HzA3Awvxl7na8014n4zp4z/Fv2M+F3ibJat40yK3wjn4/v2PirLfrFPYh+4
fr68Emet/IB/JLfznbJR7EGZOr5z1LHePc4q/V+ylFwik2C5tUnyuK4l1sRe
QK44J+UMXVYsNt+U8/RjzAfNzdE27lG+LvYitvCZ/Jy5Tdxj3nsV3t98OX5n
fMx38Maoy3vwn8ylsYLnRkvdTH4P5vN2cW/HuRf7Iz4HP+u5q+oG8CvxHaAe
eup+1pXBSp4nzjDdLJ4NC3h7nPP4avqBuqvxvlAfeeNsiXtAnx0LeQecd311
/SDdNT4UDZAvzhb9bH2OOOfjfwgXXF9DP1h3nQ+Lx/Cd/CEsNafBSTS01kv+
oi+LVTx/nDm6OTxn3J/xH4SLnvcB/RDdDT4cjVAAl6z9i8u4gqu4huu4gQdj
v3jcf64dgcYoiBf0c/W5Yv/yjnE26jbwmtjKZ8V+jH2M9eZsuBB73fP+D9ny
tas=
           "]]}, Annotation[#, "Charting`Private`Tag$2299640#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1FW4VlUUBdBDd4O0NEgq3d0tICUhId0l3SoGBq0oKgqKonR3d3c3CLbS
7dgP41tz7r/vWedm69Cnce8YURQlixlFt+NF0dAEURSfBfGjqAcVyMVkZ9nY
Kb9Nc+54/jBnCVio96Qi3+vFOSt/Rm6m6NnZJb9DC+56/XBnCVmk96ISP+gl
OCd/Th6m6jnYLb/LVrkxD+SWLJEr86s8hwNyG2Jxz+eMMBOx2GO9WSfX5V+5
MvPkkpyXT5tdmSnvMpvzVL5mDuAleZqZk9/Zo58wO4XvwwR9m9kkvD8P9ctm
X57xur7UrMKf3NTPmT14xFz9oNmWO8TmBoO477eMNBOzxPOOmh3oI6836/Gf
XIUf5VJckL9gt9wifAc5L9PlXOyV36MVy/Sq3ArXkQc+b5SehKV6X6qSjxnO
crNPfp/WPPT80c6SskzvRzXy88hjj3nCU57xnMhjMYhJLMZ4bTKWy/2pTgFi
M9Z5clbIA6hBwbBnzvKwX/6ANsRhnLMUrJQHUpOf9NJclL+kUNizcF05IH9I
W5br1fgt7CRxGa+nZJU8iA1yfW7LtZgvl+GSfMbsxix5j9mS5/J1cyAvyzPN
vPzBQf2k2TnsDBP17eZr4ZqG3dCvmP3C+/CGvsKszl9hF/XzZk8eM08/FJ7H
XeKE+4O3iBfuYzMVq+VjZsfwmLzRbBB2T67Nz3JZLstfsTfsMBGvhN0y83FI
/oh2rNRrhN8V9pD44b7XU7NGHkwdCodr4Cw/h+WPaU+CcJ87S8NaeQh1KUJC
EpGYJCQlGclJQUomeN0LrJOHUo+ipAq77jwt6+Vh1KcYs5wV4Ij8CR1IHXbb
WTo2yMNpwC96Oa7IX1M8/G30ghyVP6Ujq/Sa4T4Pe0easJ96ejbKI9gkNwzX
SG7IArk8V+Vv2Ce3IgYlwueZhTgmnzK7MEneYTYNuxiuv37V7M+b8mqzFn+H
XdEvmL14wnz9sNmOe8TlJoPDNU7o7xjuCTlDuBfYpB8P78t9RuqbzVf5J7yH
ftHsHc7khWYFrslnze7MlvebrYlJyfBbwz3BcXkyO+Vm4TvKnVgj1w6/Iewk
aZmoZ2SzPIpGLNIrcl3+llLMDrvKCXkKnUkX9tVZJrbIo2lM6fA6Z4U5KU+l
C+nDfjrLzFZ5DE0ow3fOinBKnkZXMoQ9cvYi2+SxbJEbhb+bfMnsw9Nwj+uL
zUrcCO9HWeboRTktT6cbGcN+OcvCdnkcTSlHJjLzIlnISjayk4NJXpOVHfJ4
mlGeuc6KcUaeQXfW6nXCNQ37zhG5ffjfwS2GhJ20Hzk99j9rLh7p
           "]]}, Annotation[#, "Charting`Private`Tag$2299640#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.8653610300836096`*^9}},
 CellLabel->
  "Out[5265]=",ExpressionUUID->"08ef3044-6c67-4a31-af5e-e3bca7c51245"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
s8ZviJi/j/Ri4WJSEPAu2XJmnnh+6a/bhSTWv4Y9DyIWeYj9R39ruEQ9PgWG
A69t4CPut9rv8ahT8GO4YOwe2E+Mp970CG9wfwUn76vbXCT2T5RWt7FwmAfM
Dsrd8SDut807H3/z/CnwySvr2BLXC1BO2bk9egDS2pkL34ixjdu+D6/80iHx
wkM9LWI+WaKh5TNed6F9NPz+ReL14zPzOtmRqbBSQrc1hLjfzvmf7lednoDf
e0W5duJ1Mv8ZdtPuWe3gQ3/1e2f4uEArBZH6Pbqkcuzoumkg9VsiGD959NUv
IPV7jSx+5nnRZ4zU785KqnHhhxGM1G/V8RfHxUtmMVK/QeRcnNhqjr/6nXVU
v/bGOOdf/UbcEnu2ZlBwUr+51gY+v/SMgpP63V+5peSWNAUn9bskTPbmp42c
OKnfKhs103k+Lv7V7zabqrzBqfm/+k3v5j+xwn72r34371ieXW09+Ve/ZYcO
B6hIjf7VbzmphdQNK3r/6jfFqZBLuqX5r37Xywgll9Vl/NXvgy9ZO/vU2v/q
t3qv6Hc5zX/67Xrot92Fp//0Wy3TbqmE6sRf/Ra6o5SXtmb6r34XhzeaBbf8
0+/ELV8K1TtYf/X7ofu21vor7L/6DRtOcO1csgCkfh9/vOfdcW82kPrdT89X
Tj3CAlK/X+U9FZk6Pw2kfnPZ6byNvjkKpH5f8o/qq+v5BaR+d6++nJa6+TlG
6nf1mvf+95f1YaR+W6zbr7hhxTRG6rfYDaag8mZOnNRv1RAtesgwL07qN6m/
L9Ryrif0/hsrWaTrs+2l/47bDr19fWbw37jhmddGcKH+Hc+8ObFTYezfeLHQ
Oe/mVdrf8WG1Azo+k//GlSabrti6yPwd///1n4OD1H+q9LLdvXRuROq/5oMX
ZZMvFsDwVdbiauVOOKVTFqr68zfG4eekMQI98NHd4dOK+EnMffyURK/RALQf
3T/64zIbC+ZaP7ku5g/kFoUnJKpz4oNmxdbKp0bh+ZuhqB02FNxHzEPlrMk4
VPPcMb1eTMGnxEp1HtlMQoZhr6sV8XqkVY1Rndk0dGlY1J/O4MSvhda6KFvN
wlX2qbM/IjnwnZ+W+jAnuFHu9vvKby53QdNM0C23OR5Uuucyy3KCCZ16+btu
c/Kh3tV35N97jsH+V83r3nIIoLpVj1U2hc3A/LaNfL+5BdHrFVeaRIbmYP2f
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
P8Lw/wHOK3sb
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{228, 44, 160, 161, 162, 163, 527, 423, 339, 273, 227, 
            199, 546, 442, 358, 292, 246, 567, 463, 379, 313, 164, 528, 424, 
            340, 589, 485, 274, 575, 471, 613, 387, 600, 496, 620}}], 
           PolygonBox[CompressedData["
1:eJwl0UlLlWEYBuBz7CeUY25alNOmtE1Kc1IQBGk0aEUqCGXDptxpVFqWplk2
/YYGh5xa5LBTQUstSBAUhMwhIVqZU9dLi4v7ee7v/eA779lWfCPvekwkEonS
Swbp3GFZ2cheVuzDtLLZC290Z4hlVneXv+an7GPVPkIbW5x/qztLHD9191gx
P2M/a/bPbHf2k/0yKXzQxeremc8Rz5yuilVzEwdYt39hh7M99iuk0q6L0703
F5DAvG6nbsB8k0yqdWvyOQfZsO9xZtRcwag9xd5rLiONDl28rtlcSGL4Fvt3
WcWC57vsg+Zb5JsXZBZHzVOylvvOrcsXHOK4ZzPR/39KtnlMlshKeVouyTGP
U8195iJ5VZ6Uc+G3y3R5RE7KUlkTvlH+kddkp/cTZIv9kjwvT8gf4e5lUrgH
ORHuJty9+bdc9F6mechczinzotzNMfO0rOOBcxvyJYeJkuP5uLzNuOdp9v7w
PWTQpUvUtZovsJVfuhoi+lfhNxHDV1U3Sfo2+0WSWdI9DFenf23PZRPfdB95
RC11PKaeBp7wDzV9ZCM=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{125, 45, 42, 128, 127, 176, 204, 250, 316, 400, 504, 
            126, 175, 203, 249, 315, 399, 503}}], 
           PolygonBox[CompressedData["
1:eJwt08lL1GEABuDJ3Le6l8vUza2gtA7VwWhfNCGCKLSpKBBcurScqkNS0CHN
Ftc2/Qds33O7aJ7KStM0BCOIyvLe80GHh/f93m8GZn6j0VhtRU1cJBJZwAfy
KWCQryx2UUE3mV7YaRtgmkW2PXSR4a7DNs9y56M8IWrvt02R6VzOPdLt7ba/
LHM+wmNy7X22lfoJBimyfbFl6GXcJc3WZlurn2GEEtsfW1Q/zCNybL22FXo9
AxTaJm3n9VE2OKfL3dwh1bnV/Rr9NG8pts3ZGvRxNjrnym/hO+kx+ZBs/U34
XvoB/ZKcZLNeJL+H56nXyX4K9Amv/6nv08+FZyHfy/UyTR6XM3Kn3CUr5W2Z
Ilu8N/yA884H5WV5TE7LbbJEVssfcq88JWNyWK6Wv71/Tt+vX5BjlOo5cjY8
b/2QfECW/trrL+oTbHIulLX0ke/82f1Z/R3rnFPD5+YWyc433RfrJxlile2X
LVuv4j5Lba/C36FeQy95tnFbir6DTpJsN8KzIys8F3pYYn9pGyPZeTsdJNqv
217wiaTwjGgnwd01WzPP+UiifSttxLu/anv2//8kwbaFVha6a7I9ZZT48HvT
Qpy7RtsV/gGN2mgj
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt0MNyAwAABNDUtm2datu23aZWUvvj+zLTw5u97GFnq4LhtVBUIBD4JJLn
rPHOJE8c800/IQ7++8u8EuSXDu7Y5YMFXjjlhzEeOeKLVd44o5kbtpnjmRNG
CHPICr08sM8SE0RzwTpTDNDJPXssMk4Lt+wwzyh9xHDJBtMM0kUrscQRTwKJ
JJFMCqmkkU4GmWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXUUc8Vm8wwRDdt
NHDNFrMM00M7jTRFfjf4D2ZuIBA=
           "]]}, Annotation[#, "Charting`Private`Tag$2299751#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1WW4VGUYBdDh0t2dl+5uCTtQlC4RFRQLvXaA0irdKd3d3d3d3dLdDa7v
8cdiv+8+Zx5mvjkD0U1jan0TKxKJ3PPHH/K+7MkLPLRvYQateaDrRSUe2bcy
kza0pSDteOh6byrz2L6NWaSOikSm6OqTlvO69jwy96EKT+zbmU0a90/VNSAd
F3QdeGzuS1We2neQx73L7F+Qjzm6tLpp5oak56KuI0/M/XiRZ/ad5HXvcvuX
5GeuLp1uurkRGbikK67baP6Rkvypeyr78xLP7RXcsyucJ7vs+ewrzF9RgHm6
9LoZ5vfJGN6L/aDsyGXXS9g3mX+itvmyLMUb5hOyK3+575kcwMu87dqZ8GVS
0bxbNpOtZT15Te52Ob95pflj2ULWlBfDZ5cF5avyqGwuO4X3KG/Lr+V8r88g
Z9o/ko3lu/JcOHuZKZyDPBTOJpy9+aa84nUlzZvNP1PHfEWW5k3zSdmNv933
XA7kFWKFZ9H1PbINe1wvYF8V3g+FWKDLqJtl/oDMXNV1IqIfFD4TUexVLSST
fra9CVm4puscjk4/2P4asdmnW0QXutKN7vSgJ70oRG/6hL/O6//xuteJw37d
YvoS27Uh4TskLgd0S+hHHNeGhrMgHgd1S+nPAOK6Pkz/FvE5pFvGQOK5NlxX
jQQc1i0ns36O/UOycl03iPj6EeF5ISFHwm9Xt9oc/jEozApdFt3c8D2TjRu6
Urot5l8ow2BdAt1I8zskopJ9r2zL0XA+9jXmGIqEs7Ufk51Z6XpW+7zwPPKe
+bzMHp5p8+HwnIffoPmWvOn+0uat5qbyV1lXXg2/L1k2nJE8JT+T3cMzIe+G
zxa+G69PKEeFc5HVw/uW/8rPZWJZWe6Tn8h2sr68Lo95bWHzWvO31DJfkkXD
920+LrvQ2HxHrnJ/tvCbCe+VGuYLMkd4ts1HwvPOLfeVsW8z/0Y5hugS6UaH
3xdJqGLfL9tz3PUi9nXm7yjGal123QJzM6K5rSur225uSXmG6hLrxoTzJikn
dEV1683fU5w1uhy6heEsyMkd3TCS6MeGz0QyTurWEq1fZP+UXNzVDSepfpy9
Jsk5pVvHCJK5Nj6cJyk4rVsfzpqRjGI0Y0ju3gnuqU1Kzug2kFO/2N6c3NzT
ldPtMLeiAmN1KXQTzXWobj4rU1HVfCC8b9lBNpA3ZIvwbHhdMbnB/gMl2KjL
pVsSnjPycF83jpT6SeG5JDVndZsYzwQmMonJTGEq00jldZPdX480nNNtJrd+
aXg+ycsDXXndTvPvVKSa/bTsQZOo//8/jwn/f7n3P8hL/g4=
           "]]}, Annotation[#, "Charting`Private`Tag$2299751#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1XfcT3UYxvEfzyMZJbKSklGhqJBCUlZRKIkohYzIqMheJaOMsrOp7ArZ
I2STmZkUpazsGRm971d/fF73dV3fc37Peb7n/t4nd4NW1VumSCQSQ1MmEu+g
fnIisSMpkaiHm7BG9gV6yv/hP0JBHJO9iwbynXx9pMZa2Zd4D63RBu+jLd50
7S7XNMDNWCf7Cr3kl/meeAB/y9qhoXw3/ybSYL1sInrLr/C98CCOy9qjkXwP
3xBpsUE2CX3k//K9UQgnZB3QWP4z3wjp8KNsgiwzxvMVMVn2MX+V7oPCOCmb
IcuDb/ka6Chrwu+lGyM9FvOFsYjeGPtIZ8EE/pl4Pro01tNTrH9CX6M/xs/0
83iIXqkWxwr6lOtm0nkxgz+gvoSX6a1quXhP2BLvSK2LFKkSiU7ue4v+JZ5f
baLuVJ+NvcEt/JL4e7iAxfxBtSZuYFO8VzUrzuAL67+qL8RvxN6pT2IDfUR9
FVPd01e9LvsEe+kqeJhepT6GlfRp182i82EmXxOdZU35ffRbuBWbo19k2fAl
XwnTZP3iGem+eARnZF3QTP4r3xQZsEU2Hf3lCfSTFcFZWVe8LfuNb4bbYj9l
X2NA7CH6y4rinKwbmsv2828jI7bJvkF3tLB2QNYcmfCT7Ft8gA/RAx/FuYr+
j55GS/f87toWuB3bo8+if9HK2h+ylsiMHdEH+FSeEgNkxXA++jXOsuwg3wpZ
4l3HHuMzeRI+lT2KC9F3cZZlf/LvICt2yb7DQHkyPpMVx8V4p3G+ZX/x7yIb
dsfZlGXHV3xlzJYN4lNhIP8YLsXv8vdiFl8L/WJW8Ifo95Ad30efYAm9J84x
fQcm8s/FeaLL4Ed6jvXB9E0YxP+iVsXj9OqoWEUfUmvH+XD9bPU+nMN31n5X
a0Sv4pV4l2r5mEvYGjNJfT322lnqH3ONPhznUW0d+6VWijkRz8kvVR/BRXzP
/6nWinnj3slqDkyS/6a+GGed3qQ+hY30XNcNoVNjMF8Ca+gSWE1ftj6Hvh+z
+doYELOWP0K3QY44c7Ipsjsxma+CebKh/M0YwpfEleilmNOyo/z7uDP2UjYf
w+RpMFRWCv9GL8Wclh3j2yIn9skWRN/ETLb2t6wd7op5IVsYPRHvK/6/mMOu
OW6tPe6O/ZAtwnB5WgyTPYGrKf//RnWUneA7IBf2yxbjc3k6DJeVxrV4ZnSS
neQ74p6Yl7KpspyYwleNuScbwafH5/yTWEuXxBr6uvW5dH7M4evEeaYrYBs9
3Hpn+hTdKc4CXRm56WVqESyNHnPdNPqumI18tejzePb4+zGz5Kdj9iEP/pAt
xciYTzF3ZV2QFwdly2JNfgtGyMrghmxUzCfZWb4r8kX/xeyT3Y1p/AtYHtfy
t2Ik/xQS0R98AcylX8XomGlxVuhuuDfu5YtiGf1XzEk6F6bzL2Iz/TQ20T9Y
H01nwKjoEbVarNPr1FJYSx9W68SspeerBXEe82Iv1JfxWsxFtSKu4Cf+uPoG
kpzNMTFj4z75abV7zA/1OVyLMx/PoxbDJSyP548zj4T7D8UMp++J/cPX0WNq
9YDeopbFZvpoPA9WuGeMehtGy8tiPf0E1tEpsYB+APPpuhgb3wH+Av0B7scK
/lH8EHsR34voIXzDv4SVsrF8RozhyyEJC/kHsYB+HePi+xKzh/4Q+XFEtgrj
5JkwVlYeyRgf36LYD7oHCsT/JluN8fLbMU5WAamwiC+EhfQb2EE/g+30CbUe
ku3lBPf/ByqicNU=
           "]]}, Annotation[#, "Charting`Private`Tag$2299751#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
f7S/lYE=
           "]]}, Annotation[#, "Charting`Private`Tag$2299751#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1He8zmUcxvGHsmcphMjMyMpWFMqIjJOZraSQPRpGRRklor2MrKzQRNkZ
UUbZ2XvPzKj394/P67o+3/s+5zzn/t2/J2+H7kndkiUSifrJE4l8qROJHWkS
iadxUZ+CnmiMy2b9kRnL+bvIj528JS7pU9ELGdJaN7sfO3gTXNFfwh1YwUej
AHbxVvhHn4beyOjnR5sVxk7eFFf1l3EnVvIS9nyj18YYnpN/rpfDUV6ZL9Ib
oyD/W7bGZf1Ra8v06fr9+nS9GvrwTHyMXgS19DVyl3k5/Qe9g2wgk+Sfsqts
Zv2a/gpa8CzyMfmrfC7Sekk5l7eVdWQDuVF2lu9ZzyW/iLOU5eUTcp08Zu0h
/We9Sfw/+hZZyHy3bIMrejXz5frXemH9a706+vLM8Tf0ovibN8d1/VXchVV8
LO6170teAcfjbLAnPjOu6jPQDy1ww2wA7sZqPi7+Lvbydrimz0R/PI0iKIpi
eADF4xnGuaAUSuNBlME+P98e1/VZeAkt8a/ZQGTFGv4+ymJ/PBfc0GfjZdzh
fxlrVgy7eSvc1AchG9bG37VnXpw1PuC5+Xi9Ik7wh/kvetO4V/yAfAb/6tWt
rdDnxP+mz9BrxB3gd/Jx+gNxP/W1co95ef3H+B2yoXxK/iVflK2t39IHx/vH
s8vH5SrZSf4WZyTnx/nKurKh3CS7yA+t55ET4n2SlWRduV6etFZFX6w3i3uk
b5XlzQ/KZ3FT/yaekbWZcX/jfvAs/H29OPbyNvhPfw33YB3/CPfZN5FXxile
AYf0jrilz8UAtEVFHI53A//p8zAQ7VAp3t2483H+8blRFY/Eexv3PM4eR+Jc
kMB8PgjtkfA5XjfLgfX8Y9TAUf48kuFbPhh32fsBL4F9vAOSmb3Bc+J3/gny
mk3iD+E0fwzH9BeQHN/FvbZnVjyzOBt+dzwTvST2x3nwn/RG8fx5cj5Ez4Wa
+mr5R7wD+rdx/2W92C83y0+t5dO/0lvLh2U9+Xv8X/JMnJNcEs9TNo97K7fJ
bvJx68fj+wbN+W1xX+XKeEby+3gv5ez4TpE15ZPyD/m6taz6R3op1In7KA/E
s9QX6Enxd/ltfKh+LzbE+8y/i9+Fz3h+PlmvgrO8Jk7EHcbt+IG/gWz2fcxL
4yDviNvN3uS5sZF/jlo4ybsiBX7kQ/AcUtj/llkebOJfoDZOxTuHlPiJD0Un
pLR/mNl92My/RB2cjjNEKiyI7y775ui1UF/fEHchPpu17PIT/iAOxX3mC+Nd
j+fEU/Hhel78Gd9fcfbxezCeF+BT9Ko4x5/AGb07UmMhfwv32PcpL4PD/AWk
NhvB8+EvPgEFzabyR3Ce18VZvQfSYBEfhhz2fcbL4gjvjDRmI3l+bOETUQ/n
eE+kxc98OLogrf1vmxXAVj4JT+I874V0+IWPQFeks/8ds4LYxr9CfVzgvZEe
i/lIvIgGuGjWBxmwhL+NbmiIS2Z9kRFL+TvojkZIwj/m/ZAJy/go9EB6n2OU
WSFs55NRyGwafxQX4vuHL9VboJm+PZ6JfMra/1W+K3o=
           "]]}, Annotation[#, "Charting`Private`Tag$2299751#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.8653610302055707`*^9}},
 CellLabel->
  "Out[5266]=",ExpressionUUID->"9bb822af-6f44-417e-8055-2e8600c22fe6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
zme/d7kXCPX90ztjXkrF3FkY+qd38tjnBBZvHPundzZwP0pI3jX5T+/09vu1
9FjT9D+9U+rQGerldYx/eqedo/sY/Qbzn955uFWrmPMOE7De+dNH6MNQ1Sxg
vfP43h/OvOpTgPXOfs9Z9e/hI4D1zke9bKPaxi2A9U7xGnDR6UshsN7ZeNl1
02xRD4H1zs+n1GZ4daYJrHfi9431TjzGemd2npbL3dx2AuudK4qfhuiuaCaw
3ilTkCm1062OwHqn0sTQJnXTKgLrnTHrvX7pfiglsN6p6O6Vnx5TSGC9c0Ap
5d7lZhqB9U5a4nkxC/0MAuudPw2afT1vfCKw3qnUuGGmvyWCwHontgesd+Ix
1jvT+Q0slNkn4Ux8woL8hjbYanJj4HtqM8HmYa8yAl0QOmXjLbR0nHAaPyHa
fa4P3p8tU+I6xSR8ONdNrg0d+rcf+41zLDacGP03ZvvuFbvSfe7fmPP8S8uy
5wv/xsGrvlAzy9mQvOrm1Gr+GUL8/nDtbD07aqOqPhk/U06wO2/9bNXKgS7F
e3zUelAJEmU3lgyNcCJ1V2vhBUo77CqXdhuY4EJtx97ElAh0Qc2Mt+91Bjcy
ravuOzvYDW266Rr3F/Gi92dmOLYlDwBr+2beTi4+xKrZ6BbzfArWDR18EsbP
j4gTr8xeycyCy2LzSNMlAqjpwy7/MxMM+FPZ+i5OVhA5ZnRxHHrLhNSvqy7c
kBdCA5N+u0uGGLAwEHKhR1wYrTLcyXipMwOf9Er9jwcJoweXf7AxPo7DcLvn
fIGYCNLuSt/86FIvWD0K/Tb/VAS56aZmxbX8BKwn76z0zXf9PkpgPXnvxk0r
ZX6wCKwn4/eF9WSmNm9yK1sXgfXkzCGr+Q8PWgmsJ/ucS6ZKvWogsJ7ssv2u
U0VlDYH1ZOn14wuL2SoJrCdPpY+u4Z7/TriptTnrK0mi5it8nr5R34jX1wzd
FyVLonuvL0s56X4hKEXqtY6qUqixtrX5rUwKgfXne83bk72evSH+6c3/219Y
b3ZLZd70EZmF5sHqu++XtMLcSqHRn+Z0Yo3+lSDvPZ2QrPh98NC7EUK8o2fP
ad1eKNBuOB7kOUsY860//uzhIIywtMzPli8Qx28pf2sT+2//xJ5xddYOZEPt
rqNyvicZRN873c6vL9jRkrLIr1e21xPpF7bt7AvnQC52NFagfT6cydbvif/I
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
S6oJ+aOrxl4bbsXXm4Q/GnqY1pYgOIn80VsbTfukls8hf3R+Imh1dgQH+aPK
DxlNkMFB/mhXoSr2Xn8e+aNPee9oDmnPoPMEsLfndmXHTGKEv3k52jnVYO0c
Rvibv+fIbopaCxjhb5pl9n21V1vECH+TUyPGvtzJwQh/M+TYHm21bXPovIDJ
m7aF5Q87kU9pJq5Y9UZsAPmUb0/uxGQdRpBP6eRiJ3bh3xjyKYcWV54Sk2ci
n9J0jUiV6elR5FOKp7jHhHANIJ/SLuzJl29r25BP+WXd74T98YXIp9x8u/7n
lhaIfMpwnxeemqQ8jPAphzJFeR64lCGfkuwTeprsXIV8ypt6c5NS4AfyKXnu
9BxmGTUgn3I0xvbM86BG5FOOLoTLNTvTkE/pbPzWOZq3CfmUttkfevpzppFP
GeB8JU4geh75lOebfRbv8S4gn3Jzgaz2eWMO8imHfEPeRUzMAs8xTrbcam7I
JfAitnNsGiP8xqtOZUmc0XmM8Btf/fG5IL98ESP8xpRNPL1N9QsY4Te+PCYv
kf9qHiP8w3XYvptm9CHkHwr0v/Fc8GQg//B+16xKHr7/JfxD+c93O0/pjiH/
cIsFq8DuFR2dL6DpqfbVI7Ib+Yga66+QOv0akI/o5HhVRPdHMvIR3Toe81JO
JGKEjxgkdLNMLeoLRviIl17ttTkXXo58ROZKb/4moe/IRyxSe/PaXLge+Yg8
dpX1cXMNyEcs8WldzSHTkI+YUXLuxIMKGvIRk4Fkw5p9TchHXB1ROl9LY6Dz
C1xo60PPX55APqJgLq+wudcs8hGHykUOqdpwkI9YVp5mtI17AfmIjzsb+GRf
ziMfUSdtjDxYNIPOF/B/Wv68ZPkkRviAWGVMg7ffLEb4gFTtd8EKHA5G+IBZ
vQpQ4MAiRviAs29aybrbFzDCB9yUkHKh8skcOj9A7o7R0k+lf8jPu2UkJRx4
qh/5eWdGub3sfw4jP0/xgutj/sgx5Odt4l8roqXORH5e+sq386t7R5Gf9/CB
0bnO6QHk513l5Fgs5rcjP28h4ZhiTW4p8vPedlwdUXbyQX4eTyD5tndGNkb4
eQ5BKSUZMaXIz7t3suixc2kl8vPWHrjwKQSrRX7ejQLS7KEtDcjP002dHeO3
a0R+3oZdEuT9ljTk5wlOYCbu0zTk592qiSn4u3Ia+Xm+ynvygo/OIz/P7lV3
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0LkuhFEYBuBjl7gBsRSiNrZCrdJZJrYZxvJHQoNSp7IzY7sMZnEH04s1
0UlIrIVGorM+iifv973nnL/4m6LF+EJpCKGEWe5rQrhjUPHpIEOMB/sRq9SV
hZDV9VLOmW6IL/MurTzaj1mj3v2cro8KznXDfJv3aOPJnmWdBvfzun4qudCN
8GPep51ne7d7N+YlkuZ3mdO3mIvmGRnJN2pZYcP5JaNskiDJGOOkmGCLSfJs
M+BtFT2+eSvn5LJMyQ955U6X+dQ8TzNTul95QAcv9gI7TBP9/3RvDp118mo/
IU2jvqCLU8217g/XjDcQ
            "]], 
           PolygonBox[CompressedData["
1:eJwV0TkvpWEYBuAPpYIZezfKQUtL7AYNrTA0kpkMEvtyLFGSzB+wHsc+P8Fu
xlhKOglONEqJxM7MdYorz3Pfz1t9X3ZLe11bfBAEcfxkzHKdGARROu1dJCUE
QdijYh7kHab4rN/QNZLKha6bZP2CXMKjvEu+7lD+xiemdTm6TXsTadTIUXM8
1tnvzUvvCu2n9laz27wllwl63GfopVR+Ms/NEA3e35k/zD19gXkkfyebWV2u
bsv+lXSudH180EfkMp7lfebo56Pbor6cF/k38wyQ4rakr+BV/kOYQVLdlvWV
vMkHLDBEmtuKvop3+S8RQqS7req/8E8+ZJFhMtzW9NWxn8iRbokRMt3WY9+V
OI51y4yS5fZLV0s8J7oV8vTbcjMZRHVFurPYtyaPevnGnKTF/mR2mP8BRLFM
8w==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{336, 3042, 3039, 339, 388, 426, 482, 557, 653, 762, 
            338, 647, 740, 847, 546, 876, 750, 856, 620, 714, 460, 515, 387, 
            425, 337, 386}}], 
           PolygonBox[CompressedData["
1:eJwV1MdzTWEAhvEraoRoq2hRIsJCjZIQnVGGIXodRHRJlIU2o8wwWKiJSPQ/
QYI0ZfSN3lIIwWCEiM7S7yye+77v892zOOeeuR0XpyenhYVCoTqI8lEVEQq9
wXH9Kv5guC+cRWTdUGidnYsr+I1h/Bk0dbbWrkQrez5KEMfncJfxC0O502jC
Z9gv0dKeh2J05Y9x0foK3EE8d4n7iSH2KURw6XZ3fQMeYwj3gtupV2GC3ULO
RRFi7Wznu/V3mGS3l8txG33tEudb9QqMsX/Y1fp0PUmeRGM9jf+nL9L3yY9I
1rvJWszW18ul8pFMkhWuSZO/7QVyR3CP8rUcL5vLVfKznCHnyBRZKLvIo65P
l3/thXKXXCnfyomynazBTH2ZTJW3ZB9Z7NofwbPQt8hyjNa/85/0afpgeQLh
+hp+r/4BU+w4uQ4PMdgud75df4VxdrPgnlGAGDvLedvg/nETvbki7hsG2cfR
iFttlyHSnoWL6MxncoWoRSKXi4b8KrsUTYP7xAV04o9wBfiKBC4HDfiV9gos
x2FcRA0GOj+G+sGzsrvqa/EAg7jnXJPgd8B5dOQOcW2C54ob6MVd4DbrZRhl
f7EH6NmoZy+1Y/UM3Eci94yLCN4p5KMDd5BrrS/BdfTkznOb9FKMDN4Lu79+
FHXtVHuP/h6T7S4yHfeQYD91vk2vxFi7cfA7Iw/R9gHnUcE7hmvoweVzG/Xn
GGFX2/30LITZS+wYPfjTuIuB3BMuXJ+Kc2jP7efygncL8Vwm6vAp9n+cFIql

            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl8z3UcwPGRa3Mlm6TEMpJpYi2VwoYyM8eUhJQpQjm6pBIdlEKH+yxS
FBFydkchclSUKOXqoBzpJj3fD388vT6ft83v8/18fw+phf0L+hVJSEho64/o
SVaSbfOoXqpHNFc7a039Xlvoa9pI/9R8zdZK+pk206l6uR7XPL1bM/RnvVaX
aGP9RzMpbb1Wn+Uy62N6OxdZ79cFcU7Ot/9aX+JB6tv/ossoyn+s4jG6UMvf
79F55HC2/ec6jXviGSljtk6fozftqGa2U2fzEGdwird4nK7xnGRRjLjAt2U4
N9E8noPilKAkpUgkKZ43PpeylKM8Z1KBs6hIMilxr3FuKnMOVTiX86gadxLn
pTqpXEAN0uKdxdGc7R0dQbd4fzSMzzZfr8/Th/ZxX3GP5u/qE9zMNfEu45zm
n+hY+lLAhXE35u/pk9wS7zfOavaFTuderohnNNug47iDOvYHdCEd4vz2u/Rl
hlA77tbsfR1Jd1rGHZht0xncx5Vxd2YbdTx3cl18d+L+zT/QpygkN+7PbLu+
wCAaxb2bfaoT6Ee6/Q/6BtfHvdp/o6/wcJw93qvZh/o0PeIu7PfqfFrFO7L/
Ul/kfurZH9Q3uSres/0mnRjvw/o37U9d6x91EVdb/60d471af6vNdU48t/6h
rXWoNtBf4450uTbRf7WNpmtJXa05Okqz9GicVW+N+9Z98b719Tij/qV58V2z
/kpnxru0/l0Hc4n1IV0aZ6Wi/WadxAAutv9JF3NDfC/td+tchsWzUspsjY7m
tngeqprt0Fk8QGOSzbboZAbSKf59Es0/0jH0JD+enYy48zgj9Unycx/rM/SK
e6EpKeZbdQp3cSNpZt/pqzxCpv1hXRG/Y30i4fT/mw30f8mGjiw=
           "]]}, Annotation[#, "Charting`Private`Tag$2299863#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1GXUVVUUBdAHSEiXdJcCAtLdEhZKSyugpDTSISmpEtKdSks3WHS3dJeA
pDTOM/wxx95rnfu+wXv3XjI2blutTZRIJJIlaiTyiaUfVfmJ/kTT7zZ3mq35
NFokcjvsZibzY/OSOZhqrntqjiAXF+SfGUB1zsaJRGqYz5yNJDcX5QUMJJW/
tUhXhdfYo6vJc/t35OGSvJBBpHb94vBvIDp7dbV4Yf+ed7gsL2IwaVy/JHxP
YrBPV5uX9h/IyxW5rOuO2LtQ137XXKzPZd9ib2o2Nv8mBQP41vl+PmUIdahL
PerTgIYMpRFLGBZ+a5+NSSV/85TZ3OxtNjAfmAdcU9i+y/4VmflM98ocRT6u
yksZzuc0DjfUZ0Y7y881eRkjSKtfGu4VsTioO+e+NDGjOBujK8B1+RdGkk6/
TFed1zmkK6LbbW8T9f9np6kuqm6svSA35HLyUXtXlsu55a32JqQM91SXXveL
vQaxqSyfNvtw2HlReY+9LVnDvZMvh9+bL8LzKf9oL8RNubx8zN6NFXIe+dfw
7yNVeC50GXTL7TWJwxFdMd1eezuy8aXuNd04e+Fwr+V35eP27qyU35F/C/8O
UodnSJdRt8Jei7gc1RXX7bO3502a6aLrxtuLcEtexSia04KWxHDNBOdFuS2v
ZjSZ9Ct1tYnHMV0rYuonysW4I69hDJn1q8K7S3yO61oTSz9JLs4/8lry6n4P
3580jNVl0a221yEB78lnzL6ccF5C3m/vwFtUla+YQ8Iz6/x1ebK9RLjP9uvm
XX0F+wl7D+rZ75nr9Pnsf4Tf1WwWvqd5y0zLR/YLZktzYHgXzH/D8xGeA5/N
aq4Jz5hZN9wH86bZykxovm+eNVuY35gNzYfhOTb/8vmS5oHw/c2O4Tubd8zs
4Z2xXzWH8rn9cficz8S2T7GXDM+U/YZ5T18x/E17T9bL+eU/wztOOqrIF81B
jHOeTV4bfgsS8YF8zuzHSeel5IP2TuQI31kXRzfVXor78gYK6LaF70h6xuve
1K2z1ycxp3TtiKufJpfmgbyRCbylX69rQBJO69oTTz9dLsNDeRMT6UB8ZzP0
ZXkkb2YS5/3/0tHsRALXzHRejn/lLUwmu35DuB8k5YyuMwn1s+TyPJa3UlC3
PTwDZGCKLoduo70Rb/ChfN7sHzr7I/Os60rbD4V30OwcnntyMoyvnU+lS3jX
5SfmSbNX+N1cfz88z+H/E30hc0d4rsjINF1O3abwTJKMc7quJNLPlivwVP6N
6XQjsbM5+oo8k39nBt1J4myuvhLP5T+YSQ+SOpunr8wL+U9m0ZM3nM0P7ykv
5W3MphfJnP0U3gNeyduZQ2+SO/s5PHdE2KGbSx9SOFsQfleisFM3j76kdLYw
vJtEZZduPm/rN4d3heSc15XRHQ6/NW9TXb5mDqex/YnZLrybrv0PJKEUDQ==

           "]]}, Annotation[#, "Charting`Private`Tag$2299863#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1mf8TgUYBuDXCpGSStlURqWyN5FEZTZEQlairJC9V5Tsyt6zbLKSiKwQ
DRIyy2zYu+v5cP2e+7nPeesd55y/nI1a12qVJJFI1E2aSLRNlkgUSpFILEme
SLzETft3TOMV/U+698jGcV07CuuX2qtyy76R6bxPEceW6atx276JGbSnAx35
gKLOW+6c6iT4XjeTThRz7CtdDZKwWTeLV/U/21uRnRO6zhTXr7DXJClbdLN5
Tf+LvTU5+FPXhRL6lfZaJGOrbg619b/a25CTv3RdKalfZX+Z5GzTvas7I/en
KHN1r+v2ym3Jxcn4PLor8nAq0E1XSrdafoUU9LEnZZy83fH35LPyAKbIOSkm
f2LezWx5nvPqyPvkdkyUs/GwPMhMxRqmxLnm43zPqfjOzKv6FeYIc4b5KN/x
rH2UeR9r+dK+wHyKzXT3+tLx39YvMV81x5qZWMcd9r5mMsbLs828/OB1rcxz
uoFMlXNRXB5m3sMc+Qvn1ZV/k9/nET60p2aqfDp+Q/maPJKK9NCV0X0tv0ZK
duha6/6O74MSfKl7Q7dfbs+jnNH1pGx8XnttUrFTN596+t/tHcjNWV0vyum/
sb9OanbpFvCm/oC9I3k4p+vNM/H92OtwJz/qFtKHvvSjPwMYyCA+pLzXfev8
uqRht24Rg6ng2HrdG6Rlj24x9fUH7R+Ql791Q3hWv8Fej7v4SbeEBvpD9k7k
4x/dR1SMa8L+Jun4WddG90/8JpRkqa6h7g+5M4/xb9w3uutxLfEcH+ue022U
63M3/ezJmSD/4nhb+V95MKXinrGnZ668zPG35MNyFybJ2eO6jvPNO5kW14/5
BP85v5t5Q7fSHG3ONHNTSR5t3h+/IfPtC82n2cJQr61kborPZzYwx5mZ47eI
azXuezNFPBeYaJ9j5ovPF8+QeE7Ge9AvN4eY0+LepLQ8wryXeXFNmvnjWeg1
jcwjuq48wRB7GqbL5x3vLt+Ux/B8PA90z8d9LTckPXvjOaw7L39EGb7SNdYd
jecP+bmgG0bluK/tb3Ev+3QraKI/Zu/Ok1zUDadKfEf2RmTgN91KRvCCY1t1
jbmP/bpVjGQUo3nROdsca8L9/K5bTVP98biXeYpLujG8pN9ub8oDHNCtoZn+
hL0nT3NZ9ylV41ljb0ZGDsbfHt2FuAYpy9e6t3V/yr0oEN+VPS0z5CuO95Bv
yZ9SOb5z+wMskD9zvJq8Q36b8XIWHpQHxDOQSfKh+JsnX5SHUo61uua6v+Te
FIz3Zb+LmfLVeB7Jt+P/wyw5D1XivZgZWSgvMgvwufOrmzvjHjGbmxPMrPFs
4CH7QDMlq5lsn2s+Ftd33LfxN9m8FNeJ+Yk53XwknhU8Yx9pZojnK1/Y55tP
xr3jte+YJ3V9mCznoFB8XjMds+Rr8cyUE/F+7S/EZ4vvi0XyWMdryLvkd8jE
4fh3gu6yPIzyrNO10J2S+1KY67px1NT/aG9BZo7ovmU8tRzbrWtJFo7q1jOB
iUxiMlN42bl7nPMuWTmm20BL/el4ZlGEG/Fc1yVhrP1FPo/vm8XyYrNg3A9M
de7/g+BCIg==
           "]]}, Annotation[#, "Charting`Private`Tag$2299863#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
P5V66Zw=
           "]]}, Annotation[#, "Charting`Private`Tag$2299863#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfYTgUYB+CXjIxIGcnOTqgkyczIKAoVMjJDRIqys1JW2XskO9l7V7aU
ERFKogilZWV1P3/c1/N7fuc71/d+5z3nfHladKrbMUkikWieNJHokyqRqJIm
kdiSOpF4mVTs1S3hXao6tlXXiNTs0y2lpf5ne3cK8YeuL0/rt9kbk4b9uj66
m/IYKrNM10p3Su5BYabYs7FMvuj4UDk1M+zP009Xzb5dbkJaxtozskA+EJ9X
vhU9y+VHqSLPNB9gbfR+rrV8Wu7JErk4D8pTzex8zXL7JrMc3/On84aZadjF
J46vNh/nEHXs881C7GWz/QuzIsfo7/zq5g79NrOpudB8iAPcZR9nZuIzeZ1Z
mm/jupq34zgr5BJUlWeZeVkXvZ97Vf5F7kURptlzsEL+y/Hhclpm2usyQFfD
vlN+hXQc1K2kjf5Xe28e4m/dQGrG329vRnoO6VbxHoN4nw8YzJD4HuO6xe/m
Q55x/m7nNeduvtOtpq3+jL0PRflH9xHP6r+ytyADh3X9dAnG259mja6d/az8
LsX4N35fXFdm2esxQlfLvkduyT2Mt2dmoXzE8f5yEibYqzFbzsd6ea3jr8m/
yX0pznR7TlbKl+Izy+mYHZ/LLMUL8qdmYfbxuf1L8ymOM9J5teO+0283W5mL
zKLx/XOvfYKZJa4Fi+zrzSc5HPen8weYSeO7ZKLjK83HqC7PMfOzQf7crBD3
jHPam+fi2WKp/HCQPzZzsUq+7OdGyOmZY3+RUbrn7N/IrcnIUd16OujP2/vz
CFd0o3k+ngv7q2TimG4DYxjLOMYzgYlMYjJTmEqduHbOa0Nmjus2Mo26ju3X
tSULP+g28br+QtznPMpV3XTqxTNnb8d9/Bj3tu4OJtlrsFnX0f67PJASXNON
1N3NXPtLca10L8T3JL9GViba72OxfCKeDTkZk+01mSsXYGN8H453kv+Q34t3
o/xIfHfyDDN3XGdWx2cyy3OU/5w3yswQzxPz4v40n+A76tsXmA/GteEL+xaz
Ej8ww/kvmgf1O8z25mKzWHTcb59kZo3nhSX2DWYZfopn3UzOFP0qsyTPyPPM
gmyK95+fe0O+KA+iJJ/Y87BGvh73hnwP8+0N4rjuJfshuQPZOBnvFV0Kptqf
jedH19n+p/w+j3NDN5P6cQ3sr5Odn3VbeFP/l/0DSnFTN4sG8RzZO5KDU7qt
vKX/2z6YJ7ilm01D/RF7J3IyOa4XS+WNZtk4zul4F5opmeZYLbbputj/kYdQ
mtu6Obwcz7L9DXLxi247XfX/2ofyJIm4h/SN4l6QO5ObX3U7eFt/yT6MMiSJ
70XfWH9MfpM8nNHt5B39ZftwypKU+fom8X6S3+IBzup20U1/xf4h5bgj3m/6
pnFvyV3Iy2+63XTXX7V/RHmSxb2pf0X/o9yVfJzTfUUP/TX7CCqQnM/0zfQn
5LfJz3ndHnrG82AfSUVSsFDfPO5V+R0KcCH+L+nuZLq9Nl/retmvy6N4ipQs
0rfQn5S7UZDf43+aLhUf25/jG11v+w15NJW4kzHx3uZTuWF8frkIX8pbzcrx
t8c7wvn/A/yUWzs=
           "]]}, Annotation[#, "Charting`Private`Tag$2299863#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.865361030509474*^9}},
 CellLabel->
  "Out[5267]=",ExpressionUUID->"45a5189f-5e25-4d83-a0c0-220fc331bbbe"],

Cell[BoxData[
 RowBox[{"-", "1.4935730106405747`"}]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.865361030534466*^9}},
 CellLabel->
  "Out[5269]=",ExpressionUUID->"b44a5826-39e9-44d1-9ee8-0c1d5e8b69aa"]
}, Open  ]],

Cell["\<\
We were able to get this bad solution to the given well behaved solution \
after a few iterations. \
\>", "Text",
 CellChangeTimes->{{3.8653459472042875`*^9, 3.8653460042180605`*^9}, 
   3.865346104423029*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a4d3e002-6aa2-45cc-a329-b64caecefa39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", "IC2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", "maxCount"}],
       "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", 
      "uBound"}], "]"}]}], ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]New", " ", "=", 
   RowBox[{"\[Tau]", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]Init", " ", "=", " ", 
  RowBox[{
   RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
     RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"IC2", " ", "=", " ", 
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
     RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
     RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}],
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636127929494734`*^9, 3.8636129048647366`*^9}, 
   3.86361309340853*^9, {3.8636132740148587`*^9, 3.8636132890980425`*^9}, {
   3.86361367016436*^9, 3.863613704067534*^9}, {3.863614005426304*^9, 
   3.863614044030977*^9}, {3.86361407671554*^9, 3.8636140789588237`*^9}, {
   3.8636141197098103`*^9, 3.863614156970913*^9}, {3.8636143059493403`*^9, 
   3.8636143423397207`*^9}, {3.8636146524377003`*^9, 
   3.8636146681296897`*^9}, {3.863615502417285*^9, 3.863615703473082*^9}, {
   3.8636161037482653`*^9, 3.863616122815179*^9}, {3.863616300467451*^9, 
   3.8636163404706755`*^9}, {3.863616379759131*^9, 3.8636164322373734`*^9}, 
   3.8636164758294525`*^9, {3.8636165064106874`*^9, 3.8636165068755407`*^9}, {
   3.863616588161584*^9, 3.8636166296943207`*^9}, {3.8636166641123295`*^9, 
   3.863616732677436*^9}, {3.8636167693047395`*^9, 3.8636167704293804`*^9}, {
   3.863616826318534*^9, 3.8636168556931543`*^9}, {3.8636168995821395`*^9, 
   3.8636168999240313`*^9}, {3.863619302411866*^9, 3.863619416136552*^9}, {
   3.8636195563387823`*^9, 3.863619570937121*^9}, {3.8636197069376936`*^9, 
   3.8636197273581724`*^9}, {3.8636205744286833`*^9, 
   3.8636207335498743`*^9}, {3.8636207658335643`*^9, 
   3.8636207659625244`*^9}, {3.8636208211778917`*^9, 
   3.8636208543832893`*^9}, {3.863620930334037*^9, 3.863620936617031*^9}, {
   3.864135467525829*^9, 3.8641355031932845`*^9}, {3.8641358508757644`*^9, 
   3.8641358994820337`*^9}, {3.864136005621681*^9, 3.8641360284712887`*^9}, {
   3.8641361588251004`*^9, 3.8641361878597054`*^9}, {3.864149523908724*^9, 
   3.86414952549721*^9}, {3.8641504554392495`*^9, 3.8641504662587476`*^9}, {
   3.864150523008383*^9, 3.864150605221774*^9}, {3.8641506500782566`*^9, 
   3.864150690388214*^9}, {3.8641515284209967`*^9, 3.8641515289998107`*^9}, {
   3.8641516589627523`*^9, 3.86415165924166*^9}, {3.8641517275125647`*^9, 
   3.8641517616755095`*^9}, 3.8641517984915934`*^9, 3.864152052785297*^9, {
   3.8641521525610065`*^9, 3.864152184609634*^9}, {3.8641524131266785`*^9, 
   3.8641526257358713`*^9}, 3.864152761298999*^9, {3.864153148514683*^9, 
   3.864153171941102*^9}, {3.8641532143853645`*^9, 3.8641532502927427`*^9}, 
   3.8641533364128733`*^9, {3.8653433741568346`*^9, 3.865343389585903*^9}, {
   3.8653435025178013`*^9, 3.865343556974392*^9}, 3.865343662550641*^9, {
   3.8653439817835903`*^9, 3.8653439830341897`*^9}, {3.8653443150880394`*^9, 
   3.8653443220478144`*^9}, {3.865344369751565*^9, 3.865344369894519*^9}, {
   3.86534442575966*^9, 3.8653444262555013`*^9}, {3.865358620302966*^9, 
   3.865358628368388*^9}, 3.8653587956619086`*^9, {3.8653594336949434`*^9, 
   3.865359473096348*^9}},
 CellLabel->
  "In[5341]:=",ExpressionUUID->"539af9eb-2787-4ce5-94ed-3f323d9493e1"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"30\\\"}]\\) iterations.\"", 2, 5343, 393, 17537164222911338272,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8653611027683744`*^9},
 CellLabel->
  "During evaluation of \
In[5341]:=",ExpressionUUID->"fdb70001-01b8-4516-83de-b1817c58e716"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
WmmENYHzb2D3NXu2uLMA599sDEa67r92BTj/dsy+/cmjZ74A5988dxZdrVQP
BDj/dmRTWEMWAxXg/BtX/4NrfG1UgPNveSCM6tZDBTj/1tI8GzWtQqXz2/aW
bF1/xE4RmN8mLQd+sr96lsD89uPVZzxTn5sQmN9+J8KqaRJlTmB++37mjf5A
BQsC89see/LsKCfMCcxvm7fxiZxJMCFwvu34YCYTB1mJwPm2gCaxN/2MkgTm
u/cu9+82cPxR+f+V7+52UQkpnsgjcN5NJJdJqT7mEYHzboXmz6TllNMJnHdT
uC96jSqfTOC8m0B28t6RuVsEzrvJje9I3EIOI3DejdEzMdZgnTeB825x2oUW
8u0nCZx3Y9+gHjLYaA1w3i0/7tKaG9YeAOfdgnOnFH6r+QOcdysyLtp4gTMI
4LybjXcLm7I9FeC8m1VHYPjLSSrAebezkXwmNaVUgPNuZmsKKzN7ggDOu527
PHFsJS6QzucHNo9t7VZ6V4n5/Nsu6gCEHSUwnx/Gu3ItmVuXwHx+crVJzpYq
QwLz+Y/7BLOHuM0IzOffXtt3/yK3BYH5fP7Gg6dUhCwIzOcn6cnwcrubEZjP
n3BJmeXcZUxgPp/tjO7VAEt9AvP3NTBKT635KJ2/v5ya+4ovbS+dvy/POp3Z
KCVC5+9F4l3iLBbLlP4bf4/zbu/0fLUta4MInHeL9mqKzcqzJ3DezbLiY7Ku
4imA827G76LHhgNdAM67+TSaSb6r8gE47+Zv+SiRYz4A4Lxb8J+NjqpfggDO
u20m8xQJvKUCnHcTknJ6c22ECnDerX147yMTCypdP3BaZ/LDbp82gfWDTYIt
VIUCfQLrB90vkh5FypsQWD+46CaY0H/anMD6gdry7uCQPRYE1g9SLq11XB9m
TmD9IOk5JcF3tSmB82xy79Kb1A0hgfNsc90R8QrftxNYT9hKrlMrPrNQ+d/0
BJx3Y3o5IuTtEwRw3o19Pv94RBoV4LybnLMc/2l0XuC8m9iG6DGTGCpdf5i9
meFhzmlMYP2hb8O4czthRmD94cjaF+fypC2IdV1n5MjMvLCXtLtBdNScwPm2
xiuFEyfX8hD/qU8Um78iq4rMgobrg2qUbVSA826JXolxmX1UgPNu8ubnKma+
UOl6hbfs9xKpV+bE5depxw9d44FRz0+Eg50WRDHZ7McFVV6oeyNPEbKbE1jP
YMkYne4V/1z5P+kZn6UL25r35RM47/ZB+3ZEqkAugfNuegmDTq4P0wmcd9NI
Zim9+SmZwHk3tYNTVl+uxRI476bSKFPjPhxG4LybmtxH/9lrPgTOu+0CWalP
j+oROO92vVHHmVnTCuC8m/U73cmht+4A591U55R3pPVTAM67sa1y+ydnPBDg
vFvGHj1XkhFar3/zbldAx1TeBBXgvFv+z9Pnjr9E+/3fvNtM5zwcnQoCOO/W
8/qm5d7HgXS9pott5Ap5hpmu1wSNWJ3+eE6VwHpNtmPRlYYoHQLrNcFtbcrF
toYE1mt4lj33N341JbBe0xUuOZbIZEFgvSZUc2vywgZ0H/hXrylYf9Dk+l0z
Aus1X31tcr5fMiawXnON1dblXr4+gfUZvd1xm1VD1Oj6jJUWX71v0z66PuM4
pDOo7SdG12dkLHQa/X4WKv03fQbn3b7pF4tvCKUSOO/mac/xuuTgRQLn3R4k
BbiP/tAAOO+mVHA0/3q+M8B5t28imcFZyj4A592O5Xu8GnkUAHDezc9fZGxP
VRDAebfnywu8mlVUgPNuQh2Trx/9oAKcdzvxy8Os9CKVrg+Rzevrr8hqEVgf
Uno/wvBATZ/A+tDnqO+2W34YE1gfOiIUuaAuZ05gfShAoEHLGZ3/WB8SO7+5
0v6BOYH1oYerzPSu7DUlcJ7tYbCoVd5qZYKeZ0v44J/VvYPAepGKZ8Hxxy6r
/qtehPNuwtcnrLLNgwDOuwUI3c/edJsKcN5tRdheaRTVI5x3W0+Em59PptL1
pdiPp85MlhsRWF86nXJjf1icGYH1Jag38/Ioeh/WKLDbdXqeB7bcaSi7tWJO
4Hwbaa/+jhE5fuI/9aenESIecosz4MA/GeuZ1lABzr8dm42rU/9OBTj/Vm55
+EngVypdjzoV+PPmvkfmhIlLt/ZRbx4odbRkwga9/xzhqjjjf5gXdnxR6t4p
Y05gvephgSkPh0lv5X/qVSGGossxlbPgZ/eZl4E+VIDzcN3C7S+2ofnAebiR
5rf3E/KogJNs65zdyA0n/Y8vbVlrQXgn9DdntPPAC7LOqpl8FgTOw7nKSikZ
rlpHYL3LXJ+BN4dcpKT0rUlcp34OzOWHtq1qpgKcj5u3kjj5boAKcN6NUrz/
cZyrObGuxvKMoT4PPCbDNhyBzjOcf4udjNUqTJyu7BHxjHI7OgfkuC/NsT6m
ApyH073WncL3iwpiHKwtg/h5oFKgAwsLqtc47yb4YzuZkGInElOl8nfpzoN3
61cG5IepAOffDMo2tLZ/oIIGkvK9zde54WLa2RX5r+ZEqqiFxq5EHuifu6DK
ud2CwHm4h2tTf/vpV1f+T/qbh7yan4wJuvz/m48b03U9kn42l8D5uLiNG62Y
WtMJnI870RZwVl8ihcD5OFXJw3I3mmMJnI97LBdnWnLmGoHzcd/W+SuvqPoS
OB8n9Ok5v7SPPoHzcalcBs1TwecBzseJjoQma1DcAc7HtVx/qcdcSAE4H2d6
NyfZ4XsgwPk4r4tBdTdOUwHOx2n4vmG/ME4FOB8Xedjz6aladJ7/m4/b/KNF
2HwxCOB8HGSRs1V4FkjXF20HnvTcnOSl64tqZhXlyg0qBNYXGQQkiOsndQis
L3KcYLXLPGRIYH1RRdr28dUaUwLri50HspdvLJsTWF+8mMw8vGqzBYH1xcDY
oLOl/5gRWF/8NmF5qzLWmMD6Yinp/nHzdn0C64kN4/NBN7rU6HoiVU1q0sV2
P11PLHXQfBQsJE7XExPn+c9+is5S+m96Is7HGQjltDEOUQmcj0OXtpMnrzgR
OB/XF3Ih95zwUYDzcdJUDoHLJGeA83EHGckUGwYfgPNxgaTMC0tXAgDOx+XZ
brb+XBQEcD7OnDPdJ6qcCnA+7oZinP0qdF7jfBw0Fbm1251K1zOve27ek511
gsB6Jns8ScqfR5/AeqZ7u3yfYJ0xgfXMHSU8ki/EzAmsZ37Ivx1HkbcgsJ65
GK0t4PzUnMB65rTExu1XTpoSOP+2982VGxRDZQLn3wpUh46/GJQlsL45pe5w
vsFn9X/VN3E+briAJdJaJwjgfJzNb9dvsZFUgPNxM5vOZcyh+obzcUls0kq5
96l0PVTYv4PVMtaIwHroI0W9ui1BZgTWQ9l4ibltmyyIltw3CTa/eKDjGg7b
2+i+gfNwT33Hj4bHkon/1Esfp71+mDE2A3iuXHjhxk4FOC8novMwU72TCnBe
7mcIaYizi0rXTw3YG7aGJpsTx18FnXrrzAO1IrjzbqP5JYWPsYXt54WF0rk1
4YfNCayvnl358stIZqjyP/XVgxsnOUoez4JTLEMNK65UgPNzYecq68NRvcT5
OWnDkBMqxVSwcIHkKvuaG9pmXH40xm9BMN1SPVTezAPXC3Xl3BSwIHB+LvcU
Wcc0WojA+uy3L1dOVh4vVfr1MF3Ws2wOkMwsQiQaqQDn6TaMRc9WDKHz5d98
3OnVtx8snDMnSEKrz37T4oH5h8KMHqF6j/NyYRwVIy+/zlTG9WomxynMgcYx
53GbTHTf/Dc/J7Er9+sr1P+gF8xWLOw88KoKT+CyjAWB83GXmArCy2M5CW3b
ZeLMkXlw7xBcYR2kApyXo7y6mrnQQgVdwSfyTwdzwyvsEdUOH9B+dWXQLL7J
A0uCtmiq77AgcH6uWs5IusiisfI/9WLrb9eYRNLnAdyn+vT9Typo4zvmvr+I
G2a1M73MZLMgREMYOQereeByYSFzuagFgfXknR82q3/fWaqE83UTwo99ZMfQ
fqhWMRo6zANVjqsfWI/mA+frnrKfnnm/aqXyp/6c1PTGBTB9h/F3PtrP5vZq
F3jnuOGby7PBYpIWxLOZzI5k8XlQYTKkzd9DBRdFlLVeBPLASQP15mk5CwLn
6zpNRc80zX2tzElUvsPaOw92tpx7ege1h/Vq8XBiPPpWlpKUc7VuixkPXN1w
xFQS9WcvOa+8y2IBiKVMJClMUsEDwVcWi8I8MMRwg+gb1P5Aq146l9U8+J0U
9Wj7KBU8rSXUcu/zwPGGpn8iUf9wnu4uJJzcdZ5W/k/69uAmThVHp3wC5+s4
xTVK671zCZyvmw+6etd+Mp3A+bqcbDsp21MpBM7XdbbqyKybiSVwvo7Lb33+
huvXCJyvG9n45CDfA18C5+vkX96RKYo9S+B83f11mp1VG88DnK/Lzbitm67n
DnC+LqlGNXI+kQJwvi5Qkb+44EsgwPm680H7n+7XQuflv/m6Q9Kbxp+i+zbO
152+FZ6hUkcFOF+3dH/E+QYDFeB8XXH60tSjikC6fj9dfeeB1QSZrt/7hN3T
uE9VIbB+z35pVHXvTh0C6/dXi/VFRrYYEli/z894HZFfYkpg/V7D0+Yfpjlz
Auv3StE3g523WBD0/NyYZ4vMMzMC6/eGdfe4OB4aE1i/T3u60iA9rk9gvT5w
yDzgJZc6Xa+f3VRvZ1i0n67X81q8sTx2TZyu10s2cTrtq0pU+m96Pc7XiRbW
2hWvu0LgfF1lA6UoVdKZwPm6p3UXPU/sUAE4X5evaMzfke8EcL7umce6V97f
vQHO17na/LO+yTkA4Hydxdr9drxPgwDO1+0+4vBBtJQKcL5OdWZKLRmdnzhf
l6Ao3GPhRaX7BeSepx6wtD5BYL+AwjdAKpg6Q2C/wEHSDVJ7sTGB/QLlWaET
DQLmBPYLCJsfPzeM7vPYL2B9+hXlTbE5gf0CKmStom5jUwLn52Li6tRCgpUJ
nJ8r+zHOv+Swk8D+gYPpj5erQ5n+q38A5+uehzsb5x4PAjhf56Xvf3FfBBXg
fN3ji4d4JlF9wPk6p7qLU8oPqXS/gTbl2pm+ACMC+w2aq5jcVD3NCOw3qDJs
OeovbkEkSs1quY7zwPu15+QGWCwInKd74lvSFqK5hvhPP0KujGhld98MEP3C
9j2WmQpw3m6ue6NZQTsV4LxdyvVrbqrdVLo/IV3sCCkozpyonjj94boDD0zj
+EGQ0fuogwaT1Y29vNDO3/J1tKo5gf0LzgNPa/wqRyr/07+w5moH/7GHs8Dx
A5CRdKICnL8balxJkEHnD87f5RmXjYU9owK3mNbJn1XccHRZkKGY14J4y+M+
8bqRB3bkpca7ovcnnL8b5s9feWssTGD/w1gtx2WD2DKleraoPaSCOcCvE3tr
az0V4DzeEx+GF1nofQXn6+5J32JgMDInAlU+fkk9xgN/sUr5paH6jPN2hTue
XpS5NVfpor4nXVJmDiQ/N/QMTKcCnL/7zpGbzIvWc3bkU98bZh6os6KT0YXe
b3C+rv2ruIDQRy5Csn7o9eCBeVC/NGzxrR/V+3/zdsWcX7Quf6aCkSPNZbaB
3FDW4s6c4TtzgiXp/VvvG+g+bsn7+risBYHzd8OP3rlaRjRX/qcfo3Ngt5ti
0jx4fnChWQ2dn6cOC/2ef8oNXzrZ75dmtSB6GHe/mKzkgYMW7LOWYuj981+/
RqCz/8GBpRIlnM87aC3B9wudn2Y/yB05+3lgcJpueyNab5zPi214WZrgwUDY
mt+/Iyi8AOoOWp5uQeP/HCs41DzNDd+F6vaWbrMgYoxjenaumwdBXN3PC9B9
rO8oXyOVwgNtTJ2OFe+yIHA+T5H/8OtDYt2Vmx6MMEl3zAPNgsRYK9Qe9oOo
yTNLJGzMU0pNiGmJM+KBlK2RDyzR+vwjYiS92nABnA7+tisLnZ/Cyre7KwV5
4NC6b+UT6H31xWHw6J7xPCj7/kl97wgVSP6KqnVK4YFCwpVvPklZEDiPNxs5
OVzAWlr5n/6RdzPBWtTr8+AyOYaNH9UrnM/T4Du8fYCUp6R9pLBzpxwPjBPR
i1xG90l9l2k3Y/YFwEReWzCD+t+SmNfE6s4Dc+r+VLKgv/MWHu5yejcPWInf
27+h/Y79J0c7Gz+rb3ymFD2++7OIDg8clZuQSEfjS5LJZdY4tgD4xkU6XNDn
2eP29Kpw88D4kndT7Gg/4Hxelb1avrH4m8rxT11xs4/mwS/z1bdPovnA+Tzb
zPVLG66WKTnFX2rbqswDX8uucTFC7ftonyr/ILUAagKP7Q5F/ZWPiZfqH5kH
u9v11r9AGPtbIjsjd+ZsT1TKV/3VzHce3T9uzop8RftBZmz6+4ENPPAEZZ9U
FFpPnM9j7wnX4z6UUvk/+V0YbCX7NkfUAux3OVrL9MDz0EuA/S5H3z9rjH9S
CbDfRY66MmGe+wxgv8vh0T7B6ZoCgP0uz43zOKk1/wDsdxlJjmT6w5UFsN/F
QMIrtG79fYD9Lm5xSbG3mxPpfhcx0bO7Hxbfovtd0pMf8r9jiaD7XbpC7atd
GoPofhdDVVdHCXkPut9ll3bQj8Kf5+h+F4aBg0oRPex0v4un4Z3PLEnG9Lye
RWzClZv1F+h5vXMHPk8P7Xai5/WChm26/yi70vN6+8RIfFHQjZ7Xk1jf8sjV
3o2e1zudKNZ2570rgf0ul5SK9frzXAjsd2lkO6Y3+fsigf0u4hHFlj+X7Ajs
d8nLOJo9e9WawH6X3JDzhxTQ/R/7XYw0RI5tzj1D97s0V8bKMmip0P0uvK3T
FhUmm+h5PekDa3bKXNak5/X+YZk6945qQM/r3SuNXLnOcI6e17uoaizeNGZF
z+v1C4z2nmKypef13LK6HWvs7Oh5vbMhKlxaVbYA+10yTBgEnXysAfa7UFVK
B+YEzAD2u+xjZqlzWDkE/m/xuwCL+XGF468A9ruckDbafntXFcB+ly+vDwTf
Di8D2O8S/ppJ7YtIMcB+l4vxfu/FvfIA9ruUyxTa1IBHAPtdQjlnR4//SAfY
73Jo6/CQmdo9ut9lX/FZxzcCd+h+l18mBY1HnaPpfpf50AOP0iVD6H4X9cHk
kzuX/eh+FxnBTntN04t0v8uLcr3U3fKn6X4XDbPz4DCTFoH9LurWF2d5wXkC
+12Ui1Uaz592IPC/90xNqbNwOuNCrLk28WWujRH6kXU+VX11JRi99zy3714N
z30Rzdro6kYINnqJjP9kgr+0fl3SlHcjDjcJUcammaGGU5Nv/ylX4tPslVCP
eRYYlq4uPPXWmZ6HdOwUqd/O40j3uxhpaCkr8J+n5xHXrNr1ZvChDT2PuGtB
9bromC09j1iuseEZq60dPY+ooLdKm83vAsD+l4LarXvCCy0B9r84/HYubv2m
C/5P/S9iG1qPjFi9Btj/siiZWQ/kqgH2v/R39zZ+I1cA7H/5zNyYnGBSArD/
JdnU9eKduHyA/S+SUs7pp2ZyAfa/rNhopi+7ZQDsf1nTteHR6tZUgP0vXQyt
r34NxtP9L5Vhrk0zLDF0/0toVQufZ0gY3f9C2vkE9uUF0P0vb11FlT5/cqX7
X6YnL1OyDxvR/S9Zhf77DIMPE9j/Uh0TrGSSbkFg/8seeZmms+l2BP73nzen
bNQsueJMjGRr9lclMsIijX2tp++4EsXm/6uaO4+mqnscP457zcK9ITyEUhqk
QcmUs5UpKcmQKbM7mO81Z7jXUMqUDCVUoh5DUcYM5ZQGTVJKZFaUyFDJEPE9
37U+Z7fW51mtnu/vv1//WSucc5y79znr9d57p9ZIDgHMXxKMWeHERG3qLYav
lRCBR2hzRIYFE6UMjEaqVHOD0oUxnjfpDLT35cKiTzUPkLjcV3rF1A+u99Ta
9Oq1Ip837F9EqudIpSIucL1lTMJCacsrd7jeclOMd2lq7K/1loWbb9qsCKfD
9ZZuIr1blbbTELjeki/12uRWNwTvYcCL+3c8jW2Q/2sPg/cqfHV6fJasENir
yJg2kqcCqbBXuWar/00qXBf2KqEK20U8zS1RfL/m+MfP107kuqOxEwvlG4Q5
gcNBOZ28Ni/02kPBJ89XcAHdwb4QpTY/VIeW/mSrFAHsOajoNyXORE1TVHeO
riGCiUzTXtsAJvq6P+vA5u3cIOd8FFjJy0RJtw1Di1V5QCDTJlKOmwH7lebK
0g3zPG5wfaZjR2+flTMVOaXirORVRQI7qXpnV2vQkTcnTsYJa5FBQkdYVeMG
OoL3LpQJS/bKNAqC9y6pZ3885lp0gus7swYvB7Wn7kP+be/ymG+o1Wf6IYL3
LgEhnst0KxsRvHcJXi923LnvNoL3Ljb2nKapXDUI3rtcVTUV7N1YgeC9yz7B
D2fXdJUgeO+irarif3dXAQJ7l0H5+PqQSwjeu2h+jzq3uvMc7F3iV/Q43+pK
hb1Lte/ZKrXGk7B38TjO8XXdCzbsXTaydr07FeEPe5e9joE3Ns07wN7Fz1Ry
YaFxPYr3Lp/5BoUKohxQvHdp6LhWPHqbhuL7Ow+4zSX+3e+DWmjOjq4J4wIa
0bwjiT4MNMVcfaHoKAEYfEu/p3KIif7Yeu+AUCIRLKzPPf0D+7yFj1iwW85w
g8Ok8E+NFQzURae2zjOdB2ys/oY+jvKD62f9Yt//DGV7w95FxMp128WTznD9
qlauhGCziztcv1ravoHb25AG16/e7zJLSQ6mw/WrmsvXbVnGpiF4/zJZdz5A
s9sNwfuXJjuHzKx7dgjev3S3KW3tz1NG/tS/4H2K4uuwHBP1o7BPif6y5oTw
EQ/Yp3TkFA0TmvfCPqV40mzz3gUzFN+PWSC05PW3IDdUKN7e7cs4ByiP1Hkd
KemF5t9v2PHlOye4ErFHt/asH1o0q/syY44LbHidaJQ5z0DXxW6fLSYQQZXj
phRf7PMVeJi/KpnMDU6e6h6OW8lE1z68cXSfGA9o1VBTm9nIgL3Kz61Hw1yS
XeF617ToPaaneKjIQk94YNUVEqDWfxIUlqAj85+el3NvIIM1C44X6w7QEbxv
ObFicbvMMiqC9y3ym+6nXOx3hutlt8WN7l/6dBD5U9+SckdxmVo5J/CoGF25
WdgPZUmd7z1SxwU+HdXdYH+LgXZ7qh3dgBLApEVbmxP2fFuj9yFqfwsRUKUz
Wiz0megqYznWOBcJ5ErpRmQjFKRDu5JkdJwE/rrWVRtfT0P0r9nwT/GSwayj
qzQfdj/4NlUbdCSSwdT0m/o9PVRk35YIvvWCy8GQb9+2TUdd/7H+9nX7h3vN
6gQgNONXM6LMRINytgVtNCICpiF7z5IfE93moTzcYskNfkaxFFeOMdBVLP23
qx6QQNuOV/Nyltj1UtKzX2FCBrQLfcboPA35KnvNNeQZGZjmls5eF6Igv+tZ
Fkc3mLmAJgTvWXjjercHzDQieM/y4haX0JBBA4L3LEqFvrt+WtUgeM8Sa+XX
MBZcgeA9y3IJrWl501IE71lQ2RrfjVcKELxnuSIdrFD95BKC9yw+Y31qqZZZ
sGd5VuDZRzdKgz0L38e6za6u8bBnMVUNVqEdiII9y9tmQ98sqwDYs+zQ3UjK
r3SCPcsdj4ePnlsvR/GeRUfF4W0l+QiK9yw6q+Ndcw1oKL5/s1H7uwsKCT5o
PJfpxGFPLjDRYxt025qBhjfXdJ+kEwD7oo5h+14mus/7B6d2GBEEJPrwiVOY
KI8vP6d8HDcQ5b+hxGhkoJcDzkp6xPAA48XL/lJZfnD9c6/R7rTUem/Yszxx
SrIJ0HeG649f5kdLeaxzh+uP36yMdsxaS4Prj+V47lk9Y9Dh+uPIvc3RC5do
CN635JM5hv2U3RG8b8l7YxRy+os9gvctGs+G2yN27UD+1Lfg/Umos+dItlQY
7E8MixLtFt96wv7keWbUXLzoAdifxJ+MG83bcxDF91tOHWQK3ut2RQ8eFrpt
0ccBzqE831SrPdELezI9uYY4geyln9QtwX5o753M102fuEBe/srLstj9Lb5Y
2RH/lQCIg60DO/yZ6MNUQGvg5AZ3BqvkkfVMtMzYfT6byANUL4jfu6bDgD1K
s8XJ4vqDrnC98kHe4OZvbyhIRVW8TOd5EtBf2sU7xklHkrMYRlEKZKAbP5R+
w56O4P1K5Wen4WR9KoL3K0r5Fgw3Exe43hl5itx7Tj+E/KlfSUQWdxte4gR1
epQe85e+aOXAt4FTxVxAvRd8NSlmoI+Hqm0FSgng24uKglJ3JsrHlt0R0UAE
n4/Hh5jux94fInzQ6B+ioP5wc4qzAAU5JdZY4xVJAqcDqofbc2lIh/3CBd8l
EjhmJKXz6CgduSAjuWcwlgyOPr11Q1qAhih/0Bi3J2DP/+UmgffbXf+xfpo/
d1fT0joCCLc7LNylwERdJCqsBHcSgWqWVI4Ydr1jrrhmL+lxA41s2x++Pxho
h5U52/A2CYQ3BL/kM6Ijeh0fvqTuIYPWC74ZhWJ0ZJX/MqfY+2Sgou7MCDOj
IP/dq+S/vfnXkwQCSNl06VimDRMtnk7I7s4hgpgZ5IKiHRNduK37hDJOAu5f
XodzhNGRxYedWgsBZDAuVX0kwI4G11+Teie0HozIIAFbRptd+QlAJodkv50f
u14ClSueihFBm7Q3rQWbnwx4fJ+nlJBA5PuHUiHr6AhNQ1k2fhsZ3OkdXJLS
oSMTX6rOGb8ggGstyh+2+DDR8vlq/xBRMrhR+ebmUz/seoqk3Mk2wuaDdzHD
a3Yy0ZOryjP22RABiHzgLYv9f8+CndsWn5FAi2b3ZmcnOrIy+NLDbAsyML5s
ZvWjj/bb9dwBe86oF7k3IXhP8jSowdFO6h6C9yTaSG+FZFgDgvck+mGOgaei
ahC8J7mlvjBsdqECwXuSdAWvxMsnSxG8J5npmnF1e1uA4D1J7cfiYzJTlxC8
J/ksfIF7IC0L9iQfEgSjLFlpsCfZnum5r6UyHvYktF0757clR8GeRL341Ljv
/QDYk1DqtB0EDjnDnoSj17lQQHu4Ae9JtmfzdFhZ26N4TyKw8tinL/w0FO63
XKa9z97RB71M+THp58oFCN2bdUL3M1CmwNyzOScCaCbd9jfD5t8pgTNdr5hE
UL+or2lHY6ImZa66Rixu8IJfJyHjMQN9cOq44aejPMBBdX5O5G8/uF6+KznF
4m2HN+xJtAa1Z1esdobr1bW7E7fdE3CH69VNJjaTLovT4Hp1+YITvqI+dLhe
3Urqw/RMGQ3B+5KGGvshS3N3BO9Ler7XKX+PPYLgfclYPfLger468qe+BO8/
ej5cjQlPCIP9h3GlVlZ7lhfsP8YEezZmyByE/cfxgQGdhaYDKL4/8lmxoC7b
ZFf06y43+vF2DvDeW5pDNtYTlSEc40no5gTXQgweBVH80DlFvTf9A1zAQuiz
YOIQAxXS+v7oxycCMLKaWW/IZKI+W7p1reaIQDtfkm6rwkSnE1Gt+wvcgFn/
bqzDkAF7kNE7SrfTtrrC9e2NFeLu2Q0UJPkSye/zOez96WqYruYMDWn/uns5
IksGkpajetdd6AjejyS9P0QvdqIieD+yoLvRZYTtAtfHX94p+L5ojTnyp35E
YGmkpyWTE9gQuY90FPuiLfoX3xfmcYGpluBlY7kM9M6qGeOjVwjgXZ/0uyUX
JnpDtlZYvJoIrK6cVOU3Y6KPJc70mUyLgtiZv/N3T2DzL8deIdZREmi3KFP6
mEpDFKqa6ZvmSWC9PJ/WbWx8Umsy0h1hY893zcuSQuVoiKyu5EDQEhmMcs+v
NeR2+8d6e0Xip0eSCgRAGy59wCXDRK3NvxmEqRDBzP5Pj19i463ynqWAs9rc
wO3r7PUuDiZaubvzlU0tCUTFfA9pAXQkaUvNrYMIGZzrDr0vLE9H6mR1HOLv
kMG0xEHdMiYF+e9eJEtiVlAzhgD+Lj6gzGnFRA+lKwUGpBPBj1SHd2sdsPFR
YnmG4ggJPL4dqpUaSkfOMAQ1uRhkUO9flS/hQ4Pr9Y/+pTHRd2YNkpx+piWc
kwD0jdbMR3Fhz6OGU7xaQkQwnJqmWoeNtwpfvyvkF2Hz60yFx1E5OlJ++udH
QxUyOBQ943rHgI58UJk+WddEABnhiVNuXth4b35CR00Iux+sx9doBtCRWn+t
xkqAHa8XpWbVNibKdvx6rP4gERSW8qAFvtjxpjUcE31MAq5Twq/nbbHxvIV5
2uYgGTjyRYhojNP+sf7/eErIZykmAZz08vssf4CJ5rU4rLscQwRTxZ3OF12Z
aMfDqg25AySgHRrZOo39/pV3A4al5wngwRcBpXHs76G3Ozfi3hrs/jSZ3CJg
RUdaC4M8sqoJYP3yl5sVsfEnmbjxdRmBDP4Surukhl0/r7dMSjZCBNm9rYWr
sc/PT49nyjvuksBspeffz7H3mQp3v6XCryTALTnwox27f/A+Y8JqWd+yOSHE
oNlfyU6WCEQIrbHXses5WxlY1NlBAEelrYkPsPOn5w8V1omRgZevmGu9Fx1J
HWJc6XImguLUs5ecsOuZUn+jd/QFCbByDgmbutN/u98AK+kjySmkCcF7jKwP
g6EuG+4heI/R0FyobJrRgOA9xtchjaGJMzUI3mNIS/RqZJdVIHiPMd0VzctX
UIrgPUZh9l6JvG8FCN5jrCtVUx7hy0PwHoN3iDdRpSIL9hiLZfzPJ7PSYI+R
ncZQru+Jhz1Gv7Fy4J7SKNhjTH1xP3x9PgD2GByh3XI7LznDHoNdLPqlHp3S
wXsMjkQ7I+8fdijeY3h/Cydaj1JRfL/j6cfVDPW9Pmi55AtGhCMXuFS4sRPF
xrfxdVIPyuwJoDX1SOfMbib66K3ro4s+RKBc8crXi46Nj60pzvZh3KAkX2RW
upmBWsku9hYG8YBPXsiLxat+cD8HxWHPrZ4fvWGPMdx7wKCD5Az3U3hw6djd
1nk3uJ9C6DsJfp5lNLifwoH3NfYLnnS4n0J/zmX1m7U0BO8zYl9Is8Io7gje
ZzSq7JO713wEwfsMu/RFt65Dmsif+gy8n9j4g5ZSfz8M9hOSNz4U9Mx7wX6i
hVtn5lzBQdhPOPANRV79sB/F9yee5g5Xa6W4onu2piAXX3EA4VqOhtcenmiX
y7y5aQcneF54MHDhCDY/t0sdHuvhAsWkG/ylAww0zkb8bvkQAWw0fGBYz2Ci
u5eKVFZ9J4KKxOjO9i1MVKr0s13HLDcwWfZW0tWEAXsKp2PnP44ouML9F57L
Hhs3Kacg4Svazn0/SwIxiVzVNV9oyMKFq7Oyf5GBjGKTih/2+cD7CxGDvsNf
vKkI3l8c65yYepPlAvdvcOP3PXYm2hz5U3/xyMF5Y3o6JwC7rM/Yn/VFu2cC
3KoucIEcHe93a3MYqJbuij3bLhFAx9W40VRnJhr7+fh8fxkRvCUZCLYdwj6/
74smtk6Jgj7Wxpy0AXfEOkhI7UQICVRoCFo8TqAhBs5qpkJz2PsMdVnKT2z8
iJZxBmORZKAcusnvw3oacsYnrjPmJxmU2y9+r/7L7R/7QWytbti7RpYAfjrG
O3NJMdHXjOWI6gYi6BJL7pbBxhsOcrOzqzo3uMQ5K89FxMbLmvM/XW6SAFi6
9ph3Fzaed8vnbd5FBhLHV3yOXENHePytjiQ1kMFdm5BOjhgK8t+9hfgOSeLX
SAKI1njqKGfBRNe6fncGKURwZ0Dz9BlHJurRGHaUMEwCn8gXf+aF0JF3D1dr
cPuSwcUIxj6lYBrcT+L4txxqktx6JMfA6+DJn9j9ErqNJLbEQEvcxTi+8WLj
JadURjZ2/MK02n3XCkigu12cq1WajrzZRWleq0wGF+zvj7ca0xHn/RLRzHsE
4FjkP0n3ZKLyHF9Wiwtg7yvnrkhWBdKRh2tIe+5qE8CaZJPDSZuZ6HwEOdLf
hAiKDJb6bPyY6Hb+6OtSTdj808MukLGmI4lhXUHqB8igc/js6uXfaf/Yn4Lz
eubgS28C+JR67hzBhIkGXVAW92MRQTKRT67fDZsfmCtFWX0kwC+zvt3fn45k
9aX3t04TwCFN8+ZMbP6hj/O55q0mA9MdU35MGzpyoOmMy6FyAujeUpM0SWGi
FTfSalM4yaDYwX3Xcuz97+NMqoO5FhHw7x7NyMPmn5H+U1Y6KAlcvCKlfXQf
HekgvR2MmyQBo8mp9Szs/sH7hpwhd6XlteLI3dE0ueVSRKAnekjsIXY9A15l
XEp9TQCcDTIjnNj8k2x6IPkcmQxSHbYPtGPPw8LE1PNpR4jA49w3M31vJhq5
NYDv+3Ps+dl6YOVH7Pnuv3sGg6cTndpdJHA+5XgYB/Z+lSLT9mL3ODY/D1+1
eYAd7wKfe+yBnyQwnBeuYoUdX8/2VwfubcOeP/d/vhGKXQ8Fj+Lr+p9J4OXd
kZX22PneXPdaJEaUCBjrvIOeYsfrIfrmNNczAkj87Dxmhh1Pe4GczWFhMtBy
7RA7y6QjldL79e++J4EgLdeVlkF0JD/PYtJliQAKVVrmdvzv91s3jrdyk8Gq
He7Wqtj9+KXukM/7PUSQdl6j7yw2HiXX8ko/mSIBO3v++wLhdNgnXC1fMD3y
ekHnSan55nwFIig3yrqfgP283/UHn04b7FCJaYT9wVxN3JgLDwr7A2X+GoEg
31rYH/CmjbX4z1TC/iBb3Hfh6rYy2B9IXe2/CuhXYX/APTO2vbv7CuwPptdK
D/Hfy4X9QffZY8FS0udgf+BupZA7EpoK+4P7jHuZJR9PwP5AuKT2qcJfLNgf
VL4//b20xhf2B5kZWt4lN3fD/mAxS3XVflVHuF9wLzPo/GNfP9gf1Njkide1
BcH+YN5MfJX+pjDYH6x4qj0aahkJ+4M15YmHVnKwYX8g/ZN3ImgfG/YHeYKs
YZIQG/YH0nPjnpbNkbA/EDlIM2+8GA77g63CL6c7ZkNhf8Clov/KezAI9gcf
+zoMK+X8YX/Akbal99gFH9gf9E7O9eV+cYf9waxI5IU9CbZwvw1jv53tgcr6
cL+NqFUhVXMnd8L+QElNxfBTjznsD/gyzyVJ5zrC/iCPV+acdJkb7A/WBjUa
ilGosD/48Dchb/wOFfYHQvl2ozzCv/oDes63Hu/WI7A/iO+4O+3V8/9Pf6Dw
8Q7D/Psd2AMgmTU5N//OgD3AvtvLee5fSYY9QGXrgW87iLGwB3BpcfDaLR8M
e4Bi81KxxGBn2ANoyJQmuJGNULwHKHm8rE2ohQZ7AJPUMjf9fn/YA9SXl3BQ
t4TCHuD9z26fJ1/CYQ/QM6v74IEpC/YAM2Lag3XqbNgDdOu6RKRosWEPQGMs
04iLZ8EeINcg/RHteQTsASiFvfGVR8JgD5A73nnYn9cW9gBO1E7R8VAX2AME
skKXK5pQYA/w1HevX9Q3KuwBIgMYW6+3UGAPUGJlkHEq8FcPoHKf+urmnf/3
HkAElZcoqbkLfX5EcyjO8PBZ6PMl7gtJpJ4U6PPWXSWRfdTj0OfXbDrfQOYJ
gz5fMxMkyqLSoM+zJxJ33+eWRnGfD8vu6gW2btDnI4vsecd2MqHPR2eGda0X
CYE+n9+znSUoEw59Pj537Sql7kjo8xUNI2xzBTb0eWlTrfZsQzb0eRY76GVk
Owv6/EO16CuSFpHQ56nN8eeNCOHQ50vO0s/RCYehz7/iDGZZbnOGPt+fR3z+
Iskd+nyHyNI593tU6PPveUuIAs5U6PMRz30nOnpdoc+/09ATs5D5v/s87u9O
89lF7u8tUdzf432HlQt+eEF/l4kn6PbRA6G/Jxt/JW7TPAr9PcRmWbDl9Qjo
74feRxhN3mBBf5fiqFQtNmBDf++REEm8qMSG/s6nfSutaCsLfSYnKBquwwuS
YyU/P9GOgB4vFFW/2fijPfT4ytuk0O7LrtDjla5oOO8YoUCPN1sc2HcZu99x
j+8pG9AFAr88HlVpULNo+eXxj5Y8y+J9/r3Hn/opuYxbtvGXjyvVyzuoZUIf
16R4NcsWnYY+/sxlMGzb5Tjo46s4Du8/JxABfVzx9peGmwQv6ONOdQmVCtYq
0Mevb/hsnklwgT5uHcRe/uEwA/p4jalqRmxgMPTxAOemqTcFYdDHb+rdUdHO
joQ+HkgxUJ0lsaGP8x69sC7dmA19fC3Xrasucyzo40TsuWx/aiT08afRRXrX
D4VDH89ylXIsCbCEPu7wl5YiJdYJ+nj//lVPFFe7Qx/Ptjsfqp5FhT7eGEXb
wHWWCn1c0Trxw/GIXz5+M3wVz6mEXz4+5vpifQb7zz6O+/f42mX2b3jNUNy/
l6ke9mgf84D+bdxdVNFZGAD9W34weFGlJhT6t4Z9R3S8eQT07xIhEik3mgX9
W2AnoagbsKF/b7lLlkvZxob+HYE+1Ux2ZKEHE5uehsjwgnaDZ3YicRHQw4tf
739KCreDHl5aN/9Markr9PAx1oMM84sU6OHMW6XG6BwVeji3rMmyK/4U6OEq
6k4JOsW/PNxn8Hm2buu/93B5zQiTxZPh0MPvPnaPOSDJgh4+1KlP0VJhQw9X
OjUcfnY3GzXriI5IauMG0rPRNsfLWSju4W8P91gPTrpDD791n9qkP0CFHn4j
gXyjcuUvDxerF4m5vPX3Hr67Yh/v404W9PCco19CN2P3L+7hL22Wv2qSZkMP
byg36IpXpkIPj10tlvuqnwo9fF5EV3d9mvtvPdxn7jSxz7QR+rR7nO3olYJM
6NNPkhbqRkRToU8XazCF+fVPQJ9epXtU1pYUCX36iRojUKzLG/o0bcnweJum
JvRpymcuQeGXTtCnE7+33u4e9IM+PdXrleC+Nhj6dNPIDMPOMwz69J3Wnh0z
IZHQp82RK4/t+NnQp28ST74xwp6XcZ/2WvFJK53Ihj799umog/qNSOjThRtI
orGh4dCnOa0vcRsWW0CfjrbgESRsdII+TTNu6eYddYM+vWqr93dWFBX69OGX
ia0BJVTo0ydP6KnENblBn076/nR8ruKXT188xvlqbPWffRr3548ZKtL9UvtR
3J+3SqXGVPfToT9blj18HqMfAP35mezfy7kDQ6E/Zy85W3qsjoD+bH5HyfYB
nQX9Wd70zIDELjb05ySTpx8O7GRDf7ZyfwrogSw0tfHK+mBBXlAVoBMqfTUC
evSTkMjrnxptoUd/rdj+1avJBXr0ZOKPa3eDKNCjQ31tbq+ZpUKPTiBMCRzM
p0CPvrJF48hr0i+Pzv8YAxYO/HuPLhJPpj81D4ce/WRGXqj1RyT0aMeK7M3i
69jQo2V266bb6rPRbvudiz0PuIHzV4m9bg9YKO7RzDc3zMzuuEOP3ifw9fb9
V1To0XUffq7106VCj5a3c5UTj/+9R7dvGvX1eMiCHi2reWhnlREbevQmIV+i
H/a8hnv0kqXl+UAhKvTo76lj8R2jVOjRC5l1KX4v3H/r0bLSLbNTUmzo0YTr
TEnbvWzo0WxhYaB6gwo9WlEoOScxggo92uDgsZJNj2QQ3J9jEhLllumxUUWZ
Vk7H1dxg+6ksY8tNbOjRIMtYvPUBBXr0gc9dhbuxv3e07AvrnEoyaC0neOUD
CvTpk4q1MU2qbJTKf/25bD8RpCE1t8wRNvTqAZvz1T3Y+QKmpfGzdDKQevf3
9uZZCoJ7deqeN0bS2Ocf92pWkJ+0tzEVenWeBqnwZCv1t1498r7/QzC9Efox
h9hjkbr+TOjHLtwCCnr6qdCPuazlLRXOnIB+HFvYV9adEQn9+MlCzwqpxz7Q
jzkEBJTsXiDQj5XzO/OndzihuB/X+G4tTS/2g35sLKqborsYBP34guPDrhiT
MOjHRaaDjY7USOjHXxVCDV5i4x3ux7wOtx75YdcD92P16otNjnxs6MezI5E3
+xsioR8fE/ksU50YDv145RoRTys9C+jHfx1v4w2Yd4R+fHTC6pXxczfox9xt
J7vkAqjQj2XfBexIuUmFfhyLHPZTw8ZP3I+n+V8+8tP75cf9d7sDRo792Y9x
H75zzivSNtMYxX14dcsbqr81HfrwzPfIZwrLA6APp1hvaBg8FAp9WLQ0L+mJ
QAT0YSV1YDZiz4I+XBP6pHZekw19uI6a6sHSYEMflpBQ5RFls9DKnnTraS5e
4O2Ybff2VgT0Yrsd384Gu9tCL5a0SEc+5rpALyZJh3RVOFOgF998Oqa+fZoK
vXjtgoH3cC0FenHckmmqst4vL/54hvZ4J/+/9+J476h9surh0IvjP9MS80Yj
oRcn1Br3NCmyoRdvkRSPScDebxQuntbhaeAG71l/ScQ/Z6G4F2826jM6UOAO
vfiF/xEw+ZQKvVipYGd+rhkVejHSLjQ2Wun6Wy++5Db29UU9C3rx1/dJ7+5i
76e4F0sYu0ycwY4P9+KT6nWOWfMU6MVB3mdeKU5SoRcX6gldfTjm/lsvruFa
HiAgwYZenHW7rJYXe97Cvdhq/q1O8hUq9OKMthHnwngq9GIu+zY+oYg1CO7D
vFOP3OOw58Vntd5d09Lc4GCJhiLXFjb04m+NIw1t5RToxVskGoLdsOdd6Ucc
h/NukMFOemfDKVsK9GO9zkN5YlvZqGiBcWFVOxGQLPUvcuuyoSfHaNqkTXyg
Ih0yx41aU8ggsShFWgmbH3BP7nKRra/+3/P5jyermQd1NWpRoSfLhi/nluyk
/sOTcT+eq+FClrDvx/3Y4KmtvmoyFbn/0EtNmE4GDvfaNLLzqNCTb/kFHRfC
xmvckx9eMky1wM7P6V2U3dBDIohSO7KFH5svcE8OdLSoGsB+P+7J74f77GKx
+egHS1ypzZAMVPrA7G3s/LhsJu/qXSECXZ9ZjwRsfsQ9eSb/+Z4jb355sjLv
XQ4fbP6WG7A99EyNDBgm+Z7W2OcJ92SKzvgzYez+wD0ZbPM0scXGx7aVL+Z7
rMng6xMCn9IT6m89edfyCgfToEbou/Hp/FZOPzOh78bU1t9MckyFvjtVYjvR
0XAC+i7f6NYBSkck9F3lE5cay4Av9F2usQunLE11oe+uDfueMNriiOK+u932
YzKS5Ad9lyq5aa/ASBD0XRUbmscX7TDou2tDSguDHCKh78bH+veEc7Gh7w7d
eLwiBDt/3HcVPm3j1RZgQ9/l2RQWr/AwEvrut2TtaXAmHPpujb695WaSBfTd
qm2oVH+zI/Rdh3Sy8F3UDfruzd4vnpu9qdB37wVfmLa6RYW+K5YvwahbcIO+
mxxVYNKQ8Mt3Jd7vEvqx7c++i/vtQPDQ2zHLvSjut8Nj9ZcGl9Oh33KLZow1
zvlDvzXhNUst0w2FfqvHUXHKajEc+i1hnzNwtmJBv/VK8ODtx+YD3G9XlbsP
JmDzBe63UzWtSWbHWKiep9Bk1SIPeFn2nljwIAJ67unKv/+OU7OFnivcxOQN
TXKBnuudtrB2wYoCPfeNIPvD1ykq9NxD52+NDd2nQM810+/PW7D/5bmWO7b8
OOD+7z33GHFyQH5DOPRc4cmjNuPvI6Hn9lbKpZFXs6Hn/vzU0bgCG5/17jQ4
SNdxg96WiHMCr7Dx+z+em0qZfHIhyx167sxEVM7dJir0XDp/wSofGyr03HZB
cHrpsetvPVcxYDGOXs2CnpuzxHVOE/v9uOd+d7nDL7eWDT3XHbnFN/eVAj23
BkXIi1+o0HO/SNVPrlxw/63nBvku7OcRY0PPfbKsTeoQNh7invvogovj3EUq
9NyWQRZjLIUKPfeE9HH1cM71CO63sgTf4mps/M49ofWoUYIbNB67v2SCje+4
55L9V1quKaJAz20AuUXF2PhJkZWyulJKBktnOrbsoFKg7wYL2bZe28xGBwMl
M6JeEUHrY97TrdjPx73X9K89QtsGqYgi84JhWzIZHCHb2caJUxHce8tXJ6YF
Y+eDe6+qt3OM+nYq9F413jfklB7qP7wX913tzXy71mHjB+67RzdX7puIoyKi
Msd2kKjY/Tox2S9XSIXe2zx601lChw2912nT8fQ27H1ge5mpUVkjNr6fzRyv
wuYH3HsP8pkBj3Yq9F5fN8J+BWx+kFOOFKrUJ4N1vrGr3D9RkTdKDaWil4jg
4s3u/mlsfsC9N+6Zb5zYxV/e6/UtdV0j9vP1ku7tvLqdDG7X7L5OmaEiuPca
f6qdWzZO/eW9RWa1Otj5/XiiPnDLCruea0/NMp9T/+G98tqPxnmDiaA2p4rH
Gfv/5Qadm5zkyGCYZqGpj/183HddZtLEAXZ8tFjTdoYuGYxL9DhJYr8v8oHN
icJMIlhm+UOoCju/pKF0LvoWMgi5+eH4Z+z64L5LHjfeEomdL1G3NYlgSQQW
Pq3fP2N/v+ccp7U64ohARM9goBn7Wv7MzsxBJex4vcZP5GH3D+67vtOy9F7s
5+OeO+ibf/Jl2YLOD+w1fUydDLi/0q6v+I69X86E3+uSIAMXBS9CP/Z5WdFk
VrKaQgTrdQx5vbHz+2/vld2y76kA9r6Bf02zb5ferE2GX8P16P/59z8HibSc

      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2439, 2441, 549, 809, 747, 695, 652, 619, 599, 550, 
            551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 
            564, 565, 566, 567, 568, 569}}], 
           
           PolygonBox[{{636, 2440, 585, 823, 761, 709, 666, 633, 613, 586, 
            824, 762, 710, 667, 634, 614, 587, 825, 763, 711, 668, 635, 615, 
            839, 777, 725, 682, 649, 850, 788, 736, 693, 588, 826, 764, 712, 
            862, 800, 669, 854, 792, 873, 740, 866, 804, 877}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0kdsz2EYB/BfWzUSJUiIFakGib0PqL1ixAhRm7ZCjNbmVru91J43exyM
4GDvG0qRWNEmBJXY+8bnOXzy/T7P+1+/N//M3MLxBalJkqTwlOJaSVJCvuVq
9nGHv/RMS5LhMo9V7OU2f+jhbJgs4QRPqGk3lFx9JXu4xW+6x5ks5jiPqWE3
hNn6CnZzk190izO5iWM8orrdYGbpy9nFDX7SNc7kRo5STrrdIGbqZ3hJXfNo
luk7uc4PusRr5XkqaWAexwb9CA+pZh7IDP00L6hjHsVS/Q2N9Ins0K/xnc7x
PtlGzuGD3lxO5ZyeFXdAhT5P1mcs680FshV5vDPPl03I4bB5ocyMZ+SBea5M
YwDTzYWyNfm8Ny+QTZnMKXPLuE+e6xlyJEv01zTUJ7BdbxGfx1X9G53iO2QV
zfQpnNVfUU8fwzr9LY31SRzSy0jV+zNNP8kzaptHsFjfxhW+0jFeK9dykPuk
2PWL+4vnYyuX+UKHOJNrOMC9+LPb9Y3fGPfJFi7xmfZxJovYz13+kR13JBex
mYt8op19tsyJu6eUC3ykrbM+sje9+A+YtWiI
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1mW0VlUUBdBHSnc3SIN0pwqCQXeDNEpJd0kjHYqEdNmBhHSXdHd3p4KA
8wx+TNba+37jfbx7z2WQsXmnGh0jRUREZI4cERFyrj/yc0T/iloUxOWIefYF
OKqPpTaFiMJ8+4Ic08dRh8JEZYF9IY7r46lLETbYVeOx/j1dicZCu8Kc0CdQ
j6JstKvOE/0HuhGdRXZFOKlPpD7F2GRXg6f6j3TnLRbbFeWUPokGFGezXU2e
6T/RgxgssSvGaX0yDSnBFrta/KP/TE9istSuOGf0KTSiJFvtavOv/gu9iMUy
uxKc1afSmFJss6vDc/1XehM73Cu7kpzTp9GE0my3q8sL/Tf6ECfcK7tSnNe/
pinHzW2Jw2ZzGXbo9fhP/52+xA33zq40F/RvaMYJczvissVclp16fV7qf9CP
i+YuJGOvOV64t3oZLurTuaH3Ji2fmk/Kz4jHVvMTOYwcvGveJRvwKuLNwZyg
L1fvyYG8TSz7b2V/+0uyK8mJZj9V7rN/LkeT0i5P+D45W2aS8cMz1cuS0HzJ
/FIfS5rws8039T7hdzOnkzHkNzK9bO76Kf1zkoSfJ6PIyXKba0/lcHKGZ2A/
U75nv1s25LX+J/f1QWRmgPmy7EYK9psThLMU7guX9Rm04LS5PQnYbn6fPXqj
8JKzQgwkYThb4bu5os+kJeVIFM6R/ftc1WfRivIkJglJSUZyUpAynB2fL8c1
fTat+YC/7RoTiZXmQaQKZ8Vcnuv6d7ShAnvtmhCZVebBpGa5+QNu6HNoS0X2
2TUN95nV5iGkCffRXIGb+lzaccbcITxbdpg/ZL/ejKj8ZX4gB5OFL81XZPdw
XjhgTssKvSK39Hnc0vuGMxDOsPmsDP/AJgo/13OeInfaP5MjyBXeIftZ8iP7
A+EdILFdtHCv5ES5xrWHckh49nZZZWw5Q2aUQ12/qvcgqTmVjC6nyXTyoOsv
9DGkMueV8eV34X0J59f1lfqH3NZfyXHM12/LfmQI59l8TnYKf0d2mf+RI8nN
x+aDsnn4ftaaH4X7RzaGma/JnqTmkDk9q8Lvzx19Ae05b+4c3h92mz/hkN6C
t1hnHk4GVofv5q6+kA5U4rBdy/Bust48goz8Zf6Ee/oiOlKZTLxNZrKwxmcq
cV9fTCeqcMSuFTHZYB5JVtaaK/NAX0JnqnLUrjWx2GgeRTbWmavwUF/KHb1/
eKZ8Yb4QMjxT9pj/laN4h2rmY7JNOAvhPfEcJ8lN9o/lULIz2nxd9iJNuHc+
97U8bP+f/Co8C7t8MoGcE+nN/weyu75erxrOr/mR+bU+nrTmZea7+gCSmzOF
+yGnh7Miu4R3nuqMIQc1yEkucvMOechLPvJTkwL8D+4ZBM0=
           "]]}, Annotation[#, "Charting`Private`Tag$2353227#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03eA1nMcB/DfXcghIZWIOlo0lHLdihxFe9DRkq6ou7q7rKwohaKFQjRo
hyiKlhUZldUulIayM8poGK/PH697v7+f7/Pc8zy/3/eXXlDauSQlSZL2/tRM
TZLzyyTJj3IJYxjAtdSiNnXiNVxAXepRnwZcSEMacRGNacLFZNCUTLIYmZYk
2TKH3Ph/PvcnuZSxDOQ6msXn2PtZLmMcxXSNPfP/5FqeYyiXxHcy3y+XM54S
usWeecLH+nSGcWl8f7Nf5AoepZTusWeewif6DO6nefxWs1/lGzzGIFqbncRW
/SV6xGutU/lUnxnXUa/CXn04HfRT2a6/Gt9Rr8p3+mVxPfXf5Jv01KvxuH6N
rMRu/Wba6OXYpt8gz+XluEbyLAbwrXVfWYtSesZnyDL04zPrXjKdgcyK6y/P
pIh91n1kTUoYYd1RnkZ/dlj3luexKK6fPJvv9RtlbfLifMjf5VtMoIt1Zfbo
t9BWP5kv9AVcT571MXyuz+YBOllX4Gt9MZfHubM+IN9mIrfSzqw8X+oL4zfG
a62PZZ0+hwe5Is6s2UH5Dk9wW1zP2DM/jvX6XB6iRZxvsz/kSp7k9rgGsWde
lg36vDjrtIxnwexP+S5PMZiC2DM/no3684ziynhuzP6S7zGJO+IecBUZ9v6W
q3iaO+P+xns9V61kU/uH5Ps8w11xH+KckmnvsPyAydzNTXGOyLJ3RH7IFO6h
X3wf8zQ26S/wMJ2tT2en/lrcO7Ktj8qP4t7p1Zmq58szKOSb+N2yBsUMsW4v
T+Er/RX6x++0PoHN+os8EveTHLN/5GqmcS+F8T/imYpzGecjvh9Xx/MS54xc
7/tXruFZ7qOIVuYnskWfz+h4n3VFdumv00M/hx/iWsk6DCLf+n9YWZvL
           "]]}, Annotation[#, "Charting`Private`Tag$2353227#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4VVUUBdBLSwgoJUh3t9JISkh3l4KBgtIt3SKS0iDd0kg30igtgiBI
t3Tp2D/GN9ea+x64cc5L16p9rXZRIpFInqiRyDfRIpFkMSKR2dEjkXK8sO9i
Nh14x9kcfXle2nczh44kdzZX/yGv7HuYSydSOJunr8Br+17m0Zl3nc3XV+Q/
+6/MpwspnS3QVyLCPt0CCut32VuTkn90XUmlX2ivTBT26xZSRL/b3oZUXNF1
I7V+kf0jonJAt4ii+j32T0nNVV130ugX26sQjYO6xRTT77V/Rhqu6XqQVr/E
XpXoHNItobj+V/vnpOW6rifp9Evt1YjBYd1SSuj32b8gHTd0vUivX2avTkyO
6Krp/jD3JD/LdCV1+81tSc9NXQPdZfMgitNbl0G33FyDWLSw35LfcdR5dftZ
cy8K8KX9qZzEcucf2A+Engzh+7P/K8dxy3lD+z/mwXxrjksJ89fypZzGEHMi
+nh9RvmzboSsKbvIqEzgDXtLeVuOlqNkfxmfyfzm+hryT/0o2Tt8RhmbSRS0
fyWfybHhmvBdyLfC/+naUvJgeA09zDHJGH5j+VCO57bXNbJfCe+bknxjfyWn
h8/oPJN9hbkWsWllvyO/53fnNe3nzH14jxW60rpD5nZk4o6uL5n1K+21icMx
3Ur6kcXZKl0d4nJct4r+DGAggxjMEIYyjOFkde1q19QlHid0qxlBNmdrdPV4
k5O6NZTRH7a3JzN3dSPJrl9rr098TunWUlZ/JPzWZOGe7jty6NfZG5CA07pa
uvPh++N91unK6Y6G75es3NeNIqd+vb0hCTmjq637y9yXQqzXlQ/3hLkD2cKz
Z38kJ/DAeWP7VfNQPgivs7+WM8Jv5TyX/RdzI7qao4V7xfyxvBvuQf7wujr2
C+Z+4Tc1x6Fw+C3l8/AsyCnhGZBvMy38u677UP4enjXZMTy/MhY/kj08+/Kx
HCMnyoEyIVPDM+b6JvJaeK9yWPjsMh6lzB3lf3Jm+HzmxIx2TW65QdeYbubo
4T2ZP5H35A+c9bq69ovh+aIIG3QVdMfMncjBQ11T3XXzcEqH63V5dBvNTUjE
n7qNVNQft3cmJ490Y8ir32RvSmLO6TYxlnzONuuakYTzus2MYzz5nW/RNycp
f+m2UEl/Ivz9IBePdRMooN9qb0EyLui2Ull/MvzO5OaJbiIF9dvsLXmH1vb7
4TfhovN69r/NAygang37CzmVbc4/sp8K3zW9wt8w8pjbyifyR556XTP7DfOI
cB+Z36RM+K5lhPHMsg+TSZge7hPXvSe360fKVrK7jBHuF5Lb28gH4XeRY8P7
lAnC/Rjet+vry0vh3qIY23VVdKfDv0Venukm8b5+R7j/ScEl3Q4mM4WpTGM6
M5jJLAq5bme4x3iXy7qdVNWfsfcgH891zXU3w+ehbLhX7FH4KdxjMikzwu61
/wOzjiK5
           "]]}, Annotation[#, "Charting`Private`Tag$2353227#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GXYFVUYBdBLNwLSIXx0d3d3dzcYSEgpoGAnNooi3Z3SjXR3N0hLd7rO
j/W8++wzc2tmblTn3o17RYtEInGjRyLjY0UiBeNEIltjRyLvkZv7uv1MoJC9
bbq+5OGB7gATKWxvu64feXmoO8gkitjboetPPh7pDjGZovZ26gaQn8e6w0yh
mL1duoEU4InuCFMpbm+37n0K8lR3lGmUsLdH9wGFeKY7xnRK2turG0RhnuuO
M4NS9vbpBlOEF7oTzKS0vf26IRTlpe4ksyhj74DuQ4rxSneKxvpr1r9Sl5TM
1pfVH5Q/ojgRTuub6K/LI6hHKuboy+kPyUMpQTTO6Jvqb8i/UZ/UzNWX1x+W
h1GS6JzVN9P/J/9OA9IwT19Bf0T+mFLE4Jy+uf6mPJKGpGW+vqL+qPwJpYnJ
eX0L/S35DxqRjgX6Svpj8qeUIRbddS/NaXTkguNa6m7Lf9KY9CzUV9Yflz+j
LLF5U/fKnE4nLjqule6OPIom4XpYJ2e1nIE+clwWyO+EzyOn5R95kfOryCfk
z/lKzki5cI+Zr7FMjsNbcoQZ8nAzK53D72emZizrw3U38/Cv125t3g3fzfzL
/NbMzASahnvBTMEY1lj/YuZmKm+E59GMF85lofUPZnYm0SP8NmY6Nob7wczH
3963qnlS9wVfy5koH54NMwnL5bi8LUdjptyFS85tY31PHk0zMtJXF59F8rss
dlw161Pyl1QgHpf1bfX35TE0JxNL9NX1p8NvTEXic0W/lBr2zoTPSiUScFW/
jOWsYCWrWM0a1rKOms496/hvqExCrunb6R/IY2lBFOv1tfTnwrWgConCfaGL
ziy5K9cd1976oTyOlmRmg762/rz8HVVJTA9dDGbL3bjhuA7Wj+TxtGKodUrW
ylnoJycI10v+0cxBz3AfmunZFJ5ZM3+4V71eHfNCeM7M4eH7mlGMp5r1IDMp
o1lh/ZOZk8nhPg7XzYzJKOZYf29mYyLdw3NtpmEcG6xHmHnDf4f37mg+1k0I
31vOQmt5mJmKdXJW+ssJWSz3CvefnIHN8kavU1e+GN6b6gy2TsZKOQk95VjM
Dc86N53TyfqJPJE2ZGOALhFL5N5scly98MyFZ4QaJA2fQRebeeH55ZbjOls/
lSfRluxs1tfXXwrXgpok47a+i/6ZPJl25GCLvoH+cvidqcUQ69dZJf9s5mJK
6MJnNOMwPzxz3HF+V+vn8hTak5Ot+ob6K+E1qE1y7uq3sZ0d7GQXu9nDXho5
72r4D6EOKbin76Z/IU+lA7kYqEvMUrlPeIbD/w1b5JFmAaaxz/n/A6dtEmE=

           "]]}, Annotation[#, "Charting`Private`Tag$2353227#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03WAFHUYBuA5ibsDpLuP7u4uEwE5UAQRkBAE5WxFpMMEu7vo7pBukO48
upHu8vn98dz7fe/O7N7OziR0TkrsHRNFUbI/Y2KjKFt8FE2Pi6LOFOaqbg9j
Gcd4JjCRSUxmCtmdN8PxXSjCNd1eppLDazN1XSnKdd0+ppHTa7N03SjGDd1+
ppPLa7N1L1Ccm7oDzCC31+boulOCW7pkZpLHa3N1PSjJbd1BKug32PtRj4zM
0ufVzzO/SCnu6A5RUb/R3p/6ZGK2Pp9+vrknpbmrO0wl/Sb7ABqQmTn6/Pp/
zL0owz3dESrrN9sH0pAszNUX0C8wv0RZ7usa6w6ZP6MlR3VVdFvMg2hEVubp
C+oXml+mHBFNdIfl5yRyzHFVdVvNg2lMNprpzsgfeJb5jkvQLTL3pjyt7Zfk
78TwkP2I/IJWdLDfkeM57vxq9m3mIeEam2NpYm4rr8tRvGrOQHZzc3lW9pE/
hu8h0zKI9uHelBH9mWx/Q2ZmWLjOPq+QXKx/WyaF+0emZAAV7E/Jy7Kv/EMm
yQd5wPywPCq/DL+XOZ7W5o7yrpzACZ9R3b7dPDR8f9rZb8jR5KCF/Zz8iedY
4JzCuiXmV6hICh7RHZNfhf+Lk46rodthHhb+H3KyUF9EvzRcKyqRklP6mvqd
5uHh/cjFIn1R/TLza1QmFaf1i1nCUpaxnBWsZBWrKebc5Y5/nSqk5oy+ln6X
+X0eJTdr9MX1K8JvQVViOauvrd9t/oDHyMNafQn9SvObVCMuvJ/uuPyapznn
uDq6PeYPeTzck/abcgx5edL+n/w53Hd0sccwxbzO+SXNq8xv0d2ciurh/eUV
+Sfx4X+zn5DfhOfOnIY25k7ynuwnJ4brITMxNHyu968r9+rfkR/JnjKOgTS1
t5e35HtybPgtZEaGkM/eUp6X78pfwjMm09HR3DXck0wN10lm4V+fWUquDvc3
PcypqWFuI6/Kv0gTrpf9pPyWZ3jefl9O4rz3qWffZ/6YJ8J9ar8tx5GfRPsF
+Wu4Dqx3TmndmvB9qUlamupOye9oywXH1dftN39CMwqwQV9Gv9bch1qk46K+
gf6AeQTNKchGfVn9unB9qB2+h/2a/Ds8R+b0DA7Pb/gO8rT8nnZccn5DXbJ5
JC1IYJO+XLiW5r7UIT2X9ZvZwla2sZ0d7GQX5Z23Pvye1CUDV/SN9AfNn4Z7
kkK00l2Uv4VrTzd7CqaF+1FmZXh4Ppz/P4lh/UQ=
           "]]}, Annotation[#, "Charting`Private`Tag$2353227#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361103972989*^9}},
 CellLabel->
  "Out[5345]=",ExpressionUUID->"73035527-4372-4b92-947e-af33a5e40ce5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
kj//H4/ixgs=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2164, 2166, 507, 767, 705, 653, 610, 577, 557, 508, 
            509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 
            522, 523, 524, 525, 526, 527}}], 
           
           PolygonBox[{{594, 2165, 543, 781, 719, 667, 624, 591, 571, 544, 
            782, 720, 668, 625, 592, 572, 545, 783, 721, 669, 626, 593, 573, 
            797, 735, 683, 640, 607, 808, 746, 694, 651, 546, 784, 722, 670, 
            820, 758, 627, 812, 750, 831, 698, 824, 762, 835}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0Udsj3EAx+G3rVKtA7oHUYKE0Fa1paLRmrUOEnsc7NX2Qm0OVMqh9rzZ
42AECUElRm03rdkDFSQVK1KCpM97ePL5/b5v/of3/WfOrZhUHhkEQQQNrIgJ
gpUUGidSwWGe0SEqCLrqYCYQ/vAQT4nzrIvOYRNnaSTDPkjHU8ZBnhBrz9DZ
bOQMb0m3F+g4lnOAx7S3p+ssNnCaN6TZ83Usy9jPI2LsaTqT9ZziNan2PN3K
RT7Qw1aqS9nHQ9rZUnU7V/hMb9sMXcdJXpFiG6hVXKCJ7rYxeo0v9HVfont5
QFv3FP3PEOdb+pMc5236hwLny1qkn7SXTtcR+jf8D/SGDtNv2l/Xaom2aJ6e
0KH6UpM1V0fqPy3Um1qs3zVLt+hv8p3P63synUfrVZrp475Yf5HrvEfvE+2c
rLX8INu9Wi/xkZ7u0/Q6X+nnvkaP84Ik9wG6mXO8o5ttlC5iN3W0sSXpVFZz
jAYS7Tnh+7GQXdwjyp6oU1jFUepJsGeH35MF7OQukfYEnUwlR3hOvD1LhzOf
Hdwhwh4ffv/w2zOPGm4TeNZZO9GRVoOWY1A=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1XWUFQUUB+Clu7tZurtbUhqWbl1CpZYOJSQNsAETGzswsOju7rQQUURQ
sDC/e/zj2/u7d+7Mm50357zE5JSksakSEhJu+BN1oT+J7JHvIYnapI7evBR7
5XvpQR3SRG9emn3yffSkLmmjNy/Dfvl+elGPdNGbl+WAvIje1GeFWQsuya8w
nvSxY1aOg/Ji+tAgdsxu4gf5VSaQIXbMynNIfoC+NIwds5Zcll9jIhljx6wC
h+UH6Uej2DFrxY/y60wiU+yYVeSI/BD9aRw7Zq25Ir/BZDLHjlkljsoPM4Am
sWPWhqvym0whS+yYVeaY/AgDaRo7Zm35SX6LqWSNHbMqHJcfZRDNYsesHT/L
bzONbLFjVpUT8mMMZrW+d7wPrNE3j3Pkm7kmv8N0NusHk4kt+uxxDbkaJ+Ul
DGGNvg+pWatvEdeQ23NdfpcD8ijyc6d+izqEzGzVH1cnUIwccW21OqfkpeyW
R5CLW/Rr1b6k4fO4JuvMj6gpFOYCc+K9iXtQO8T7wy/6s+q0yKzUH1RHx/Om
AOeZze/c5fjW+Nx4P8jCl8zgV7Y5fkKdGM+f4lxkHjnj/tUanJZPq1NYJu9R
byM3t+rXqf1Iy3p9S1bKHeNz5PeYwbbYJyvb9blYJtfkjPw4ybSKc8w68Zv8
PjPJHTtmtTgrP8FQWpOHvOSLueO1OSc/yTDakD968zrx7OWnGE7b+AyzzvHc
5A+YRYHYMavLF/LTjGC9vj/p2KBvF+fIXfhD/pDZbNcnk40d+oJxDblefA/y
M+yVbydPPFP9BnUA6dmoP6qOo0i853FttSs35HPqdFbJh9QxFOQb7g7mO9Sh
XCE7XzGTnY6dVCdxjRJ8x/z4HygU96fW51Kcpz+jTuU6y/X71Du4Sl6+ZlZ8
Z/E/Ob5RHchlMsQzjHeSTY4dU8dTlG+ZS3vzVWo3/pQ/4rAcPwSFmKPfqQ4j
B7v0hVkuN4jPl59lvzySfHF/+k3qIDKyWd8hri135y/5Y+ZSJM43a8h5+TlG
0jF2zJL4W/6EeRSNHbNG8czl5xlFp9gx68E/8qfMp1jsmDXmgvwCo+kcO2Y9
+Vf+jAUUjx2zJvGM5BcZQxdKRG/elIvyS4ylKyWjN28W36n8Mil0I5FSlKYM
ZSlHeSpQkUpUpgpVqUZ1alAzrue6zfleXsE4usd9m/UifrBXKwvZJQ8nJ7v1
p9TJlIzzWZDq/9/4Wo79B85F/bk=
           "]]}, Annotation[#, "Charting`Private`Tag$2353338#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03lgj3UcwPFnG5kxNkU6WWyyFkUHKUfTQq4cJaKS6GJiipSr5OgQhRzl
yq1LUUpRotKpi0opXYpOVNqo1+eP197P8/n+ftvzfJ9nOX2LuwxKSZKkox+l
/JeaJK9yP31pxemUWTvMkfhMfMEshVTSKEd5jqIC6VQkg0pUJpMqVKUkPUmy
NJtqJGlJ8po+wLVcSAOOjr9jbZNOoR+FNIw18090AbfSnWPimsxf1we5jtac
EWvmn+pCbuMyqsf1m2/WqfTnIs6MNfPtuojhXE6NuFfzLTqNARRR22y3Psld
NIrPmu3QxxkR++j8N32JHuQ6/1GfZWJco/M/9RWOjf10/oY+RGPHB/V68h3v
0xe4mBzn3+pTnOP4H7079sjxH/EM9WU9T8vi/rRx/A39TC/QxXq2/h17r7fH
/uvv2lLXa1Mtjf3UKzRP92hzfU7P1UM6KfbP8X7dQDPHh7VmvB+O39SHuYHT
nP+i62jDKc6/06cZz1nxPbPPdQkj6Uk9s590DZM5Lt47s7d0OjfSljpm3+sz
3BP3GJ81+0KXcge9OJ508606g5toF/sZa+Y7dRl3ciUnUNH8bZ3JzVwSexBr
5l/qckbRmxPJMH9HH2Eg7WkSa+Zf6QpG04eTqGT+rs5iEB3iGXAyla29p7Mp
pmM8X4b5v6qlmdbf1zkMplM8h3hPqWLtA53LLXTm/HiPqGptmz7KEC6N9yOu
x3yXrmQMV3Gq2c+6lnvj2ZFl9qE+Fs/O8V86lALHv2oLfTHuW//VQu2idfUH
Xc2EeKfiPs2+1lWM5ep4nmSbf6TzKKFr/N74HeSSF+9HXB/1yY/3jGq+97HO
j32iGy2pZf6NPsE4ronvme3V57mPRs4P6MbYK8dHtEgL9H8UTpP8
           "]]}, Annotation[#, "Charting`Private`Tag$2353338#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAlVUUBdBHiigCdiJgd3cnXYNKp0rD0N3d3d3dFlhg0N3d3d2h6/xY
7LPv9waY+52XrXxyUo0UiURiuz9ypEokfkidSHxFGhbo/WhETn509jVpWaj3
pzG5+MnZN9zCIn0ATcjNz86KkI7F+kCakodfnBXlVpbog2hGXuY4K0Z6luqD
ac4qvSbZ2KPPIh9z9eLcxjJ9CC1YrdciO3v12eTnV70Et7NcH0pL1ui1eYx9
cScU4De9JBlYoQ+jFWv1OjzO/rgnCvK7Xoo7WKkPpzXr9Lo8wYG4Owrxh16a
jKzSR9CG9Xo9nuRg3CdJ/KmXIROr9ZHsM7flDS7obdlgrs9THIo755i5Kx9w
Qy/MPHNZMrNGH8V+czve5KLejo3mBjzNYf2SHEgu5ujHZTc+5KZ+Qw6nQOyW
Pl+W405Spkkkxsi1zs/JvnwR79D5VDna+QHZnrudvRU7JifKS55dk0N5wFm+
uGs5Q2aV7T3fZG4Y/5b+TOy1HC8fkkc8v2wexH167tgFOU1mkXM9P2Huzj36
R7GncrL8z7ObcgQF43uh/yXLcxfr9POyH18yRj8oO/A2l/UObDY34lmOxk5y
0tyDj0nE98rZ3/LbuAPW62PpyBa9Mc9xLHaUIvyjfxf/bzbo4+hEUYpRnBKU
pBSlKcO/Pv8997JRH09ntupNeJ7jsduUZYFeIe6PTfoEurBNb8oLnIjdphwL
9Yrcz2Z9Il3ZrjfjRU7GblOeRXqleL9s0SdxyNyRd7iid2OHuTkvcUq/IgeT
h3n6KdmTT0gR74+RFIp79XyxrMyDpPKOx8qtzi/I/uRgsn5YduJd0vncJHnV
+XU5LH7eWX6ZUc6U2WR3z3eaW8Ru6C/LtHKCfFie9vyqeUjci55XZpDT5aNy
vuenzb3iveifyvRyinxEpow9kaNkEpnMs+L9+7klskrsO6mdj5PbnF+UA8jJ
FP2I7Mx7XNN7sMvcklc4E/vNGXNvPot7il1xtlRWjd+F7fpUjpq78D7X9Z7s
NrfiVc7GTlOBZXq1+F3YoU+jF3v01rzGudhpKrJcr04WdurT6U0lVjirEffG
Ln0GfahMFapSjerUIJma1KI2dahLPerTgJX+rmSyslufSV/26m14nfPx3eGs
uQ+fx33Hrrnz0bIwmc2zZXbZ0Gf/B221ARg=
           "]]}, Annotation[#, "Charting`Private`Tag$2353338#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WYFWUYBuADCKLSglIqHbt0d3ftsggKKgIqLa0oZSyCYrM07JIrqNiU
hQEGWKAYhBiEEgoYSIhyvz/u8z7fM3POmeubmbKDRqeNypFIJNJ9lM+dSPTO
k0jk5wt5MWOjowJ99AXYIS9hXHRU5AZ9QXbKmYyPjkrcqC/El3IWE6KjMn31
hflKXspd0VGFfvoi7JKXcXd0VOUm/ZV8LS9nYnQkcbO+KN/IK7gnOpK5RV+M
b+WV3Bsd1eivv4rv5FVMio7q3Kq/mt1yNpOjowYD9MXZIz/DlOhi73RVOSZv
5HFqMlBXgr3yaqZGF/upS+K4vIknqMUgXUn2yWuYFl3ssS6Z3+TXeZLa3KYr
xffys9wXXey7rhq/y2/wFHW4XVea/fJz3B9d3AtddU7Ib/I0dblDdw0/yM/z
QPyHdUPOyh/EOXG/rGtwUn6L2dRjsO5afpTX8mD8p3UjzskfxjlxT61rckp+
m8fkduQhw/ohszn/y59QnyHW1/GT/AKPyK3JRXpcq9mY8/Jcszsfxd6ZHbmM
IfHMmLX4Q55jdmNz3EOzPUu5lEWksZI5js8wW5BFgvmksJxPYw/NzizjChbT
i1U0cHyoWYZMfrbOMLvyojzLbMMlLCCV6bF/ZhP+leeZPfg47q/ZicsZGs+6
WZs/5Xfi+ZI7kJe51jPNluTgM+uGDJPLckB+KfacdOumXJC3xTnxrljX4S/5
3bgOGjFcV46D8suxP9HF+6Ory9/ye8ynMSN05TkkvxLXFB1NGKmvwGH5VR6O
jqY0ozktaEkrWtOGtrSjPR3oSCc6c6ffq8gv8mvxvEQX77CuHqfl91lAF0bp
KvGrvI5H5bbkZiE9WcEsx6abzfhP3h7fZap1ff6Rt7CQrozWVeaIvD5+Nzq6
0Z0epJBKT9LoxRjfqcJReUO8I9ExLZ4nzshbWRT7Zd2KnHwe76PZhXws4Xqy
Yzp2ESlMvRk=
           "]]}, Annotation[#, "Charting`Private`Tag$2353338#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAFmUUBtBZYnfp7ly6QxHsRLERRBQQJcRAabuwCwO7O+hu6Q5haaRT
urvBc38cnvs+M7PzzbxDRoduzbumJEmS6Z+/UpMkW7pMS5IHKM0R3Wr60Z8B
DGQQgxnCULK7rp/zW1GGo7o1DCPVsf661pTlmG4tw0lzbICuDeU4rlvHCNId
G6h7kPKc0K1nJDkcG6RrSwYndRsYRU7HBuseogKndBspq59m3ZOG5Ga0Ppd+
iPlhKnJat4ly+unWvWhEHsboc+uHmttRiTO6zZTXz7B+msvJy1h9Hv0wc3sq
c1a3hQz9TOtnuIJ8jNPn1Q83d6AK53R1dEvMb3ALW3UVdLPMz3Il+Rmvz6cf
Ye5IVc7r6uqWmt+kCdt0FXWzzc9xVfxd613yOwrEM1ivlR9yDxNck1830vwI
1bjeeqv8gguO17NeZn6LluZT8lbuMO+XP8e+mBP+c34lOSf+nnxetpAn5NXx
O8275ePy+/gO5AXZXRaMdybXyU7yo/hm5Rn5lGwmm8rD8gn5e+yvTKEHf7t3
ATkq3rPsJJvLY7I6N5i3yS+56Nz61svNb3Mbd1ofkL+w3fHK1nPNL3BNPLP1
HvkDhWJ/rNfLj+M+THRNQd1o86PUIOES3Qr5Drezw3lVdPPML3IthZmkL6Qf
Y36MmqSwUz+Zwo6NjXdHLbKwSz+FqUxjOjOYySxmM4e5FHH9uHh31CYru/Xz
KOrYeOvO1CEbe/RV9fPNL3EdRZivL6afYH6SumTnUt1K+W58G+x1XjXdAvPL
8V1RNL5L3Qb5CfeywHnFY/9in6nHjfEtya9IpYH1Kvle7BN3WR+Uv7LP9dWt
/zG/wn3mk7Hfsa/mvfJH2povymLxLZo3xj7JvrKVPCu7yBbxf0Meifch/5Dt
ZBZ6xn3cr4ScqO8ou8RzyOPxPmR9eZPcHvsov5at5TnZVabJy+S/8n3uN5+O
Z+Ju8yH5G/vdp4b1QvOr8U7i+7HeJ3+ieHyX1pvkp/HcLHRNSd2kuFd8ezS2
3iG/IZ2G1qvlB3E/Drimpm6RuXf8dkrEd6nbLD+jJYucV0o32dwt9pubrXfK
b2ljPh/HZA7ZSK6RfWjKQdfX0mWaX4vfRUky9aX1U8zdY6/JySH9YpawlGUs
ZwUrWUUZ1011bo94p+TisL62frH59fiNlIrvV7dFfh7vnGbWR+WftDdnpVfs
i+v/B4CX8s4=
           "]]}, Annotation[#, "Charting`Private`Tag$2353338#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.8653611041169434`*^9}},
 CellLabel->
  "Out[5346]=",ExpressionUUID->"e0c6e0ce-8682-4b1e-9589-41bc5339151b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
1h2TaZxs0Pm05+0DyP+Zr+4eTuRjh8xV/DseIX/IL3paPaEhfwtJ79uA7PtM
TlzZaznhN55iiTbkzyizBi05BS54wlc3g8znBZ/rww9v5oYjid3mpcj+KNhn
5qbMA6kJ49MzyPb4ozrTIsoLV4dsfUvGU3ftjaN5KfxQ9PlczCDydyq39oko
SSoMP738+Aby7wdeGA8fU+E8c3gBG9nvmXkWBMsIQEsp9Vzye1IiQvlhaYYA
TNSCA//15+bPWrdto8G8tP2RpD+DqiZWB+fR4GGN3dKkv304a1jfqNCh16uz
VuTvjqLKc+cqheBy/KZrZD4PGXwXfHPlDIhpmDwUhc5fnvqbmhUr5kD9h12j
m9B+fXM4tEqN/y+QPcqjzYX2s8/YcaaFvgh+vvglRn5/7fZ5l2mxfRk0hdtY
U5D9umByveVnDngwZnKkD73/HkHlp/RfnDBaY+978vwfLdogWjqK8qFC/zry
+0mP6He8NcYNu9I1A8nr6w9F/HIJp0LTa39ZJ8h5l2zewyFWAfgizWCO/N6Z
LajTiYgUgPWXddvJ7x0J3izxRD4ajD0tJUy+Xwz76LDsLRrkeZsqRb7/bD7t
aSONDqdNKVnk764E41cFzzz4fpZHtRC934yx/JFBrgWQ52YdshOt//zmzDNP
ZJbA/V+J8TuQHXjw6xSzDScMCenyq0Hr+3Lfvm/nGS54btDgLpnPReZOD3a4
csPEs01qteT87MOcFq2WCkvHnluLkOfJMPnvZIMALHhy7R2Zz7vTMi6+NaDB
DapZn8n1OJ2bFv/QSoPh7/z5yfVKnq0STfkhBC9X/7lP5vM7GTc9DrfOg5SM
n2ILaL2MUyc+32tZAG0KqnVkPRXxdjCNquWElomWlJfo+ffTDRy9m7jQObML
I+vn3WttQlKzVMgcFtEqi+439itLs4mJBgPNT7aR5z1hk9v3oAs0qJFWuoZ8
/qvLpf7NLHRoxdr9nlxfTqJH6VLjX1CizyS3DT1PVC3hqEfvIrBIj+Ml61+U
9CPmz4ATTn96+fMdOV9ZvHMrV5cL3jL2KCf3x+lXokqsLje8tdplpgLZZn8S
R+ULqPDFIRVjKrp/dljms+V9NKinpJNPPs/zgRdVvooGn/Xpi5HrOaznT6OY
LYJrOeN2ZP/u8Ipp9j47F3RP+WlK9s8s9bPvWXi4odC5785kf33xp/t8awr6
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
zMeLwit9uwUJ5HXDv7zN3Hs/FnvdpQGpM6ULodjr2sqNptYbOWGvq8+pKSSu
soFAXnfWb68L9xofQjjL3X/qCweUG/WYj9FjEOdb2HpT3znhm/kZjuvloUT5
rNnzo7+4IG+6xTr+9+HEihTd2QpuCoz0u2yzNplJ7N0pUHuQygPd/KnHjtox
ieWt16K3SPDCmR+WN8Xiw7HXHRktEymK8cM9mp3Zjq0eXwLBwpvYvbVl4tC+
Re2jDicDzH96Us2zigrVBPlkf1gzALpf2aPxAdc1akEAed/Pwhsbtmj74p7N
Pf3hOZl19tj7clH/pLyNX4q97yaupVfCJoWw951g5R9N/j5jiryvMJW7xcq/
g428L09s5xa3vu9s5H0dLTnlXzlzEsj7chRafLI7x0Mg7xtywvN26BF+Annf
/pHgeV47QdzTSRDtvjW8Rog41KSySL+aE8YNWJ93Ze0mWEtPD3g0ckG9WMPY
7hPhRH+wfvQqgpzHuXbSfmFMosFyJHHbUwp85Ncv2Ej+bNeTFJf7kgdG3r37
9To7nFDaLM/6wiUOA4SHGubUAkGPSY24dZo4nPu15yJHGR1sqHQRmOGjQrrs
YNBEMAOEtdVZ9eRQYSkH37qjE0Fgi3Yc/0qhxfD86oEj3I1+2P/S9WaGHjTJ
YL/rxblf68IUH+FafOdbrYoUNPg26to9L0C86U+XU74kBb+VlCbaCwkRL7pH
7j025IaUohCwWI5JRBXpRKlbU6BX4ac3tplMQmeXxuhTJx6o96r1XOEKJqHE
2vBa6b44lNX6OXfWnDzeapbuklupsHJa81jwAh18k630299BhTO3W/kX1gQC
KcPqlCo/Kaj6l3u0v1DwXw/o1Ys55a1CuAe0THWPnJhZG0Bed8XFJI4jnPcA
8rrVB7mbLXaxAfK6SvZzA5tSGgDyuiEg6PG+yzcA8rrLQsU+yt+5ApDX1Tmf
8nNO4hJAXjd+fMKozbAEIK/79+fZ7ZIrT2Gvm1tQHJAnVoC97kXaUId2dzb2
uscYdn3GZUnY6z7i6DP69iAKe92TpzyyN8kFYK+7vfzLVttP67DXvaHRy8gV
3kEgr/sl5nu5i1YAge5XdkZiyyePZ8FEFtf2rzuDuaD2y/GGmJXhROzjhv5M
Bje03s6Xbm/OJLbsnuM0iaHAo7s/KrikMgneMAFOhXQeuDnFlj3FzSRKI49L
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
Kcnnx8LeZlH2WWdzVTr2NmVc1VsfS/7zNrWfPMbuLw3C/TrR4HfTj8XEsK9p
mfiTvqDLwr6GkfTm2vGLLOxrusIDpgaf0LGvSX50UEnnxj9fw9mxQVV6Wg8g
P0PL8y/ZeYSF/cz42amqs+T1G/Izsk3vo2b6g7Cfufsx6q4hOV+SZJ85F9VQ
Yf28xJVjqUEA+Rmdrt3mLbtZ2M+8bmVeUCxkYT+TwkzZvEOUAWCE0+aOAir8
sqYYlOnRsafJFBVf6nmBRSA/0/kxIOQSJwP7mdmkByMy4WLYzyxvrYgpZjRj
v2IyP2Bufi8f+5XdNn9l8tIzsV9ZGzRocFj7X5+tPrTf4S6Nif3KxqZjTiaF
W7FfeW3VvDs1zpVAfmVNP1fr1NFQ7FeyUs9dH2zYi/1KHb/eFqZcNPYrPAEh
U622cdivNO7JaAzjY2G/wp1XtqyH3M8hv+JTaHC1mDy+yK+ceNRpNzwVh/1K
V9HiDY7k9TfyKz21YUMUhx3Yr/gE6n/4wuuD/Uqxwuj0toEA7FfkhKgF8ofo
2K/c0y3Vlfv0z68c3S70p8EkEPuVBt9J6gclb+xXcmuOCe8PtcB+ZZ3xnixV
Qg37lbxz/rFc1xSwX3l40CVKQZz2r9fG+2vi7xlB3Gu7qbbty4qZ76bIryzc
VMmI0W5mI7/C5uk6pq3zg438ykIhEWsmTMF+ZUdBRbo9jxCBfErvuQWPxPMm
BPIp3A125OVkIPYpfR4dkY+bIrBPca+ym7Vduh/7FPcq6/rK0RjsU7Yk2VRf
t43HPoWlcPEQNZ6FfcotvpacVQdZ2Ke8lz9FrbocT9S8KXD+wcUHHdadWEH/
GYu9ypa8yvsr9rpjr7Kbnn3kYaUf9io7bt1aPhIVhL3KlxyHoxeX/fMqi2x/
3776659X0Vbb2NZd4Ye9yo7pyaaf23ZgrzI4tSUyJlcd98/Uw0Zokb4i2Iu0
i1adEBeLwV7kq0VxwYbeOOxFrMwVKvO3srAX2dFy07iO3D8hLxK1yEB6x494
AvmQDc9tr9++GYh9CKcuR67TOB37kHe7zUTfZv7zIZYi3eeixQIA6qFtfOWr
dPCUG/YiSz3/hjCOaQLkP/rf6DLO18Rj/wGDv5afLmJh/0FrkFz9gM7C/sND
pl56bjEd+4/k8uZxp2X//IerDGvjH70g3B+rLPr2dvWUKPYe/bm7RRI1WNh7
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
DzAwk1U=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{2885, 2887, 677, 957, 891, 835, 788, 751, 727, 678, 
            679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 
            692, 693, 694, 695, 696, 697}}], 
           PolygonBox[CompressedData["
1:eJwV0bkuRFEYAODDIBIVnsC+9WgUFKI1dqUEjVgSUXgD+9KjUZCoRKHwApix
06IwdpUoJJbvFF/+5d7/LPeWDIwlR7NDCFlMcaNoKwihlUP5cSKEGdop5Ufv
gSNS6lmSlPGrl4kzpNVzdFDOn94jt/I1BqmnkBe2GKeZlPdOxHk6+WKPCj7Y
ISsnhEnxm31y1UHMsMkITTxZ605cZ4gGikjrn4oLdFEZ1+Q57s2ZfJFuqsiO
54wznMuX6KGaBK9xhgv5Mr3UkMNbnOFSvkIftfHMvMeZ+IwrrmPUX6WfOvLi
vfXvxQ2GaaQ47ss2E7TwyS7T8X9wQL5v8w/4gUSr
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0kdMFkEYBuARiA3bxV6528vBEvUgWFHj1Y4eLBESjS2x97u9HCwREwmW
GDVi7+WuYC9g1EQjxQKC0ec7PHln3v13dnfmzykomlGYkVJqRjm52SnlUaVs
Iiczpens4gmPdJU00sd8Gjt5zENdBzmMhRzhDR/0f+htPJUdsQ4PdO3lUBZw
mNe81zfQyzif7bE293Xt5BAKOMQr3unr6Wk8hW2xNvd0beVg5nOQl7zVj5JL
OcFHfut6yMlsjWdxVzdWFnGKL7RhEPM4wIv4Rr8bKZdwnCp+6VbIEr7RnUls
iffijutX5V/Wcp46xnCZBgpJWSkVy89k09z8imxkFRnmZ2Q1A8kyvxjfw1z+
sZ/nsbee2cL1MuMmVpNpflbWMIJL1LOYY1Ty033L5Wm+0o0L0TORzbFX3Pa7
NfIctYxmGSf5RGtWUsp3BjCHfVTEWbp/uFzE0fjf8EPXVU5gU+wbt3StZH9m
s5fyOFt9HV2Mx7Mx3ombupayH7PYw7M4O30tnY3z2BBrcyP2SfZlJrt5Gnuo
r6GTcS7rY22u6yqopqP5ONbFOlyLc6aM/5qUfY0=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1ne8l2McxvFTSkTaNJCm9l7S0qJktGhSp6kdLdpbk3baO7Q0aWtqW9Gg
pVISsrXk/X3549P1/Vz38zud8zz3c5+TPbFL3c5JEhISFiZNSIhMKrsZrpln
ohFKRI87/POqtevmWWiMktEjmbXXrN0wz0YTlIoeya11t3bTPAdNUTp63Gmt
h7Vb5rlohjLIq5+qz4YdfEBcixT6nrp/zfPwEsoin36a/hHs5APjWtyl76W7
bZ6Pl/EY8uvf0WfHLj4orsXd+t5xI7BANEc5FNBP1+XAbj44rkVK/eu6JFjI
W+BxFNTP0OXEHj4krsU9+jd0SbGIJ6I8Culn6nLhEz40rsW9+j66O7CYt0QF
FNbP0uXGXj4srkUqfV9dMizhrVBNt5aXx2leEUV0s3ke7OPD47O4T99Plxzv
8taorlvHK+AMr4Siujn8UeznI1BPt5M/jZ/jayG1rj+/E+/F8+KHzS+gDa/B
15sr4iyvjGK6uTwvDvA2/GvzS3iT1+e7zLUx0Pyb/EXfzXzW3B5jzP/K1Po0
5gHmt2UK2VtekrPk+7En5Kd8inxRDpN/y3myrfUn5Yd8oqwk+8tf5Bz5nfXO
8hSfIdvIUfKmfMJacfM8cz70NV+RB/VtzUfNL2Mkb8B3m5/BVf5qfG1zB6Th
aflA811YytvhKd1HvDLO8Srxrurm8/w4xEfFZ5FOP0h3N5bxV1A1eqS3Nlif
Est5+9gz0SMDMuJ+PIBMyBy9zwxx/T1YwTvEPonzQL9AVwCH+Whkia+hH6q7
Fyt5x3j2cUboF+oK4lM+Blnj/9MP06XCB7xTPIc4N/SLdIXwGR+LB+N70w/X
3YdV8UxQU7chngPOx/2Ks0W3mBfG53Ef+TFzc4zjL/A95mfxK38ofmbdiNhL
WB1nAv/M3BBdeC2+0VwFA8xX5QV9F/Npc1uMNt+SNeO8Mi8xT5BFZD/5k5wt
v4hnI4/zd2SL2PPyepxH8i3rL8pP+GT5nBwkf5dz412w/po8x2fKjnKsvC0f
jmdnfjP2FF43/yDXxLll/tzcCF3503yTuSq+5135GXM71IozlL9rLoovY8/w
E+bEeM94Q77X/Dx+59liH+hG8rRYG+8raus282q4GP9vnLe693gxHOHj8Ujs
C/0oXTqsi3ckPh/nbbzHuuL4ik9A9tgX+tG69Fgf9wXPIAdyIhdyxzN23RjX
ZMCHvDueRXn9Ul0JfM0nIg8e1o/VZcRHvAeeQwX9Ml1JHOWT8Gj87Ppxuvux
gfeM70O3hVfHJf48KuqW81I4Fu8U/8bcMp41b8T3metgsPkP+Ud8v+bz5k6x
h+MXNfLGPYv9ohsvH5BvyMtyo7XE2GvmqbKxHC7/kfPj92X8/HIrr4EfeB1U
0q3gpXGcT0G+uNf6t3WZsIn3jvuh28afxGVeF5V1K3kZnOBT0Vi3n9fFnzx/
PB/deJ4Zm3lL/qW5SezZuFf8Y/NT+JHXwxO6D3hZfBPnC//W3ArTeBN+wFwP
Q8x/yr/i2ZkvmOOPoAKxL/gEcxb0Mf8ot+hbmY/E15JN5Qh5Le5p3BvzdvMk
WTPODVyJ91jWl6vkY/gZ38ZZ5rqT5umytRwpb8T7bq2p+WB8DkPNf8m/Y8+Y
v4/zBgVj7/KJ5qzYylvzr8zN4vuO+813xLuKn3gDVNGt5uVwkk9HoXgH9JN0
D2Ib7xvnIArHfrc2Wf8QPub94vxBERRFsdjjrpkS5wu28/7x/qOqfo3ucZzi
M9BMd4g3wD+8F78YZw7eMidJ+v/fosWt/QfTZjiN
           "]]}, Annotation[#, "Charting`Private`Tag$2353450#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HegjlUcB/DnDiNKJKQhWqiUQkSUWSojo4WIEipECVkVUohKiaIQ7rX3
du1VRHaZRaRoWBUan98fn/v9nd/7nPd5nnPOe4u17NCgfUqSJK39GZ+aJEvT
kuQ1qnM5v+ntYgITySCTSUxmClOZxnRmMJNZzGYOc5nHfBawkJq5k2SRXMwS
styrBzUowO96u+N5WGbck5oU5A+9b9mh/oAm3EoOsvSXy17UohAn9b5jp3oY
TSlFTpbpr5C9uZ8rOKW3J95b/SHNuI2LWK6/UvbhAQpzWu8H+TltuJu98fzy
I57i9lhLpvIKuTjKeF6kSjwnM+jKCvNXydepzRlmcyXHmUSn6LvukBxDW/5i
HhVjnZhOWnqSvCovsCjWyXhfrKF6OP/RnD+ZS7rPS8ceMI1U4y7yPAvJbpxb
/sQEEuP28m/mc2+sITPpxj8sZqV7rpZv8CBXcYLJdOaszw/LsbSjEvtj7+TH
tOAOLuYYE+nAfaxy3Rr5Jg9xdbyP3o9yHM9zDwdib+UInuZOLmG1/lrZl4e5
JtZS7yB71SNpSRnysEZ/nexHHYrE++t9zz71J7SiLJeyVn+97E9druVcnBv2
qz/lGcqRl3X6G+Rb1KNorH/sdXwPXxoPoD7FYm9j7ajld7VBfqX3No9wXexB
rEXMY6PxOzTgev7VOxJz2GQ8kIbcEGdD7ygH1KN4lrvIx89k0JGqbHTd13IQ
jWI/mcON/MoUUpyVl+PdWUA240Qe4QteoHKcrVh7OZrWlOcyNulvloNpzE3x
nXEe4t5sUb/LoxQnNZ4z5vCNegiPUYI0fok5bFUP5XFKks7xmMM29Xs8wc3x
zJyIOfEZ2+N/UaT++zzJLWSP944zIT/jOSqQP+5LJi9RjdPMonvsB0vIaW12
mv8/1XnQ4A==
           "]]}, Annotation[#, "Charting`Private`Tag$2353450#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfcjnUYhvFHGWXvqCRpaGgoZNNEm6ZkpbJHlJLMokTILGRUSIUG7dIe
2kXLaGioSAtpfs8/js91ncfvee/nfn7rrdWtf7t+RQqFwuo9CoW9ixYK+xYv
FG4qpsf98uVogpLYz9jNfEkslbujKUphf2Nj+VJ4QL4CzVAaNYyN40vjQflK
NEcZHGDsFr4MHpKvQguURU1jt/JlsUzugZY4iX+QOw7vy7ehHA7kx3PlsFzu
iVY4mX+Iq4cP5Akoj1r8bVx5rJB75dk4hV/GHY8P5YmogIP4CVwFPCz3zrNx
Kr+cOwEfybejImrzE7mKeETuk2fjNH4FVx9r5UmohIP527lKeFTum2fjdP5h
rgHWyZNRGYfwk7jKeEzuhy7cm/I5+DnfhdbcI3JDfCxPQX/uU7kT/pWr4FBu
slwFK+Wh8mZ9T/SXu8pr9Odie94LbbhH5RPxiTxa/kk/EHfIA+TP9J0xX18S
/2WO1F3cjVl3/T6oyh+mTuGqYno+q67ib9B/k17tpd6rlsWLGGC8m/pW5k09
T52jFsfz+MX4ePV3/in1+uxRtQpeQWvjbdXHsq5qI/VOdc/MkbEx6lbuaizR
V8RUfqD6OdcFBUyS/1SHYx/jdeQ70uNxeZj8rb535idnS35b3w6/Zi5xBrdS
bozP5GmohsPznVw1PCFfnXfGmfwqrgk+l6ejOo7gp3HV8aQ8KM/O+c45znnN
ucz5yznL2cl5yB7Hkf52ur/bN/MlD873ZD/jKGMz+P3wtHwNzgr841xTrJdn
ZD+jLj+T2x/PyNfi7MA/wTXDBnlm9jOO5mdxNfCsPCT3DPeO3B6/yecE7km5
OTbKs7J/cQx/J3cAnpOvy13EvSufj9/lcwP3lNwCm+Sb5G36QVn7zK+8Xt8V
RTBZ3q2OwGHGj5Xv0tfEDH0he42/Uf2O64P79OWy33Lnqe/lnKoXqHPVEliN
P3KHpWZO1aG5J3Me8Gr2s/Hz1Kdzj6gt1bvUongOXxi/Wf05e0MdnLtbrZR3
zNqrG7huWKAvhT30U9S/1JGo43PHybP1B2K1PFz+Xt8XQ3M3y+/rL8QOuV3g
npFb4Ut5dvYLt1G+HHvicK4eN0dfCy/kPKN94J/lTsJX8pzsXRzPz+UOwos5
Ozg/exMnGLubr42XMue4IHsz+w31jc8zdjBezu/AhdlbaGBsPn8IXpFH4KI8
O3PJnYyv5bnZS2jIL+AOxavySPTgPpAvwk754nx/1l8+BZvlsfJ2/TW4O+dE
3qTvjoX60lm/3JHq3+ooHOtzJ8oLs8cwU18Er+U91S25R9R+6iK1PF7CKOM9
1Q/5i7FLviS/OftLPhXfyPOyxmjE35M1x+u5s9Eh88C/wJ2Gb+X5WTc05u/N
OuKN3Ie4NL879y93Or6TF2Td0IS/jzsCb+ZsoRf3kXwJ/pQ75h3z/nJrfC8v
zNqiKb+IOxJrsrfRm1srd8Bu+bK8M/ey3AZb5HG56/XX4p7cNTkb+itQDPW5
Ztxi/VF4K+sp/6Dvj7FyH3md/tKsm36vnBF+grqDuwGd8vvzv0PfFrP1xfIc
/hb119y56hB1qVo575k5zH2mfsmvVK/Me6plMu/5fyVPVf/JXamOVpep1bIH
0MDfN1eX8CvUuuqsnOWcofwvMT5K/ZEfgMX6ChjH91U/5jpinn7v7Dt+orqT
G4bOWZfcOfoz8KN8q/yb/rrcZ7lP5a/0V6EEGnItuPv1R+OdzAH6cZ/Il+Ef
uUvWLL9DPhM/yYuy39GSX8odg3fzneiKTvzr3FnYKi/O3kUr/oGcF7wnj0c3
dObf4M7GNnkJrue+lntgL0yT/1XHYLm+er4DjX32f3xVXXc=
           "]]}, Annotation[#, "Charting`Private`Tag$2353450#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HfcjmUUB/DH3iGjQhmJspJVKJJIJKuiiEIqM5JdGckIlexRZmZ2yghF
QsPeM1vIKiuj7/nj+znnd+7red7nve/rvvI2bVe3bZJEItE1aSKxPmUisSB1
IlGCNakSibfJz3/mG1hoXpKfzVryADfMf2WReSnWmrWiADfNf+Nb89L8Ytaa
gtwy/53F5mVYZ9aGB7lt/gffmT/KerO2PESCja59b/4YG+R2FCIJm1xbYl6W
X+V3KExSNru21Lwcv8ntKUIytri2zLw8v8sdKEpytrq23Pxx/pDfpRgp2Oba
D+ZPsFHuyMOkZK9ZQ87qh1KT7davMKvAJvk9ipOKfWaN+Fv/Bc+zw/qVZhXZ
LHfiEVKz3+xVzumHUYud1q8ye5ItcmdKkIYDZo05rx9ObXZZ/6NZJbbKXShJ
Wg6aNeGCfgR12G39T2ZPsU3uSinSccjsNS7qR1KXPdavNqvMdrkbpbkidyYN
c+T0/Kl/nUv6UdSLe+jza8yeZofcnTJclbuQlrlyBg7rm/KPfjRZ0riP8gO8
EM9L7qu/i+Vxv333z/oq7JR7xPdYM1jOHXtPvqZ2JR35XZuizjO/Rz9aX5ii
+m/UO8yPqM34V5/PfJJ+jD6rflh8p1pALaLOjueqvhj7Rf043hP1brWA+nXs
OfUH13Op42Jfq8XUh9W58ZzV/f6Ptfqq8e7Ku6zPo06Q39ffoR+iz8ND+hnx
7phfV7uRnvlyDtfGxG8jo3xUbc5l/ViyuT5cLshLsWflfvp7WBH7y+/4Rf8M
u+UPKBvnh9ydDCyQM3FM/wZX9OOoH/vN59eZVWOP/CHlyBx7y7X15s+yV+5J
ee6MfePaYY5wlGMc5wQnORXnl89VZ5/1vXg89gfHzVpwVT+eBvwVZ5pZDfbL
vXmCG3KPeM4sjGfKCf2bXNN/ycucjnPP7DkOyH2owM14HnFvWRT3k5P6t7iu
/4rs7ukI+UFeifdc7q/PEfddP01daX6vfnzsA4rr56ln4kxVa1LS7KB1edWJ
ceapH8kZ1U/lMmpetZA6M84vtaLrt/QfUErOFO+OOlUtr37rek51bOwftaha
TJ2jZnftlPo2/+nvN5+sn6C/Sz8y9h4N4yySB+hzskq+T/4y/g/OxtmvPs8h
1/rGfnH9Mzlf7Hf5tvohmVkc3x/PTN+SG/qJNIozzOcGmuXiR/lv371RX4s/
5Y+pRMK6nmZ38p18dzxDfStu6ifxKud8fpNZbQ7L/XgqzgLOmLXmln4yjTlv
/WazOhyR+8de9rc+l++Ps0M/S62gVnYtidpLzsL38T5yVt+G2/opNOGC791i
Vpej8gCejmcT/6NZWxJMlV/jovVb5XockwdSJc6U+J/M2pGEr+XXuWT9NvkF
jsufUDX2XPxPZu+QlGlyU/6xfrv8IifkQTwTzzV+q1l7kjFdbsa/1u+IM4ST
8mCqkTt+q1kHkjNDbs5l63fK9TklD+HZOOPit5q9Swpmym9wxfpdcgP+kj+l
Oknd395mWVkS70b8dn1HUjJLbsFVn98tv8xp+TNqkMzn+5hlY6mcL/4X/Xuk
Yrb8Jums+0S+l5/ka75vT7zP8Y7Kn8e5Zc1QOX+cE3LyeD/jPWJZvD/xf+s7
kZpvYl9aMyre2Tgz5PTyIP19cV7op6ur4z7qv9I/EvTz1Urqdb/jf5alTTc=

           "]]}, Annotation[#, "Charting`Private`Tag$2353450#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW0FWUYBeBDd3epGIiIiGC3dLdKt3R3g4R0t6R0SHeHdHd3IyXd4PP9
eNZ+9zsza82dmXMzVm9cqlGUSCQSLWokkitOJLI7biRSi0Rs14fTgtzkIS/5
yE8BClKIwuxxTW0Ss0MfQUuKsNeuDknYqY+kFUXZZ1eXpOzSR9GaYuy3q0cy
duujaUNxDtjVJzl79D9py229J9n5V19KCQ7qDUjBXn0M7bij9+ITbujLKMkh
vSEp2aePpT3/6b3JwU19OaU4rDciFfv1cXTgrt6HnNzSV1CaI3pjUnNAH0+U
eP4OPTcv9Y7cM/flU27rKynDUb0JaTioTyCq68foeXild+K+uR+fcUdfRXzn
TdWLEZuf7Y7JpqTlkJ7MOX+HY0zUo+ljzXl5rWfQl5qr0Fl/IPvzOZkcWyf/
s09tXmAuTzbzVrnaPoF5mvkLWVxmkf/IOGQ0r5Tfyhrh3cgd4bnIX1x73Nws
PBM9nXxXrpHfycOOJ5dz9K/C+TKr3Cx/kH85Hl2OC/cq88nMcoOM8IZ5maxK
F+c+lAPCfXJXT+P4QnMF1ugJ9enmEsTlV7sTsjnpOaJPIobzxuv5icLvdo/k
QL7knr6WspzUW5CBo/pkuvJYHxT+Lu7r6yjHKb1luHeO6VPoRnkqUJFKVKYK
ValGdU67phVvclyfSnee6IP5mgf6empwRm/NW5zQp9GDp/oQvuGhvoGanNXb
hHfKSX06MT2LCXoBovKH3TM5NLxzHulpnbPIXJGNeiJ9hrkk8fjN7pxsy9uc
0lM4Z254B8zQY+kTzQX5wLxRRgt/q3l5uFdZTWaX22Uu2dN1z83Dwm9G/06+
L9fL7+Vjx9PJxeHZyEryY7lN/hS+YccTy5nhvcpS8kO5ScYP92peJWuSw7xT
1nLNedmOd3jPfq08bZ/SPM9clpl67PANmwsRPbwHfYWsTi/HX8jh4V55oqd3
fIm5Mpv0JPosc2kSUNvugmwffkec0WcRx3mT9MLEoLfdSzki/I54qm+mDhf1
DuG+OavPJq7rJ+tFiEkfu1dyJD/yTN9CXS7pHcnEOT2Va+eby/GReUu4Jvw/
ciyenKIXJRZ97V7LUeH581zfSj0u653C++O8Pod+1OeKXWcyc0GfS38acNWu
S/hmuKjPYwANuRZ+u2Thkj6fgTTiul3X8L65rC9gEI35164bWbmiL2QwTbhh
1z38rVzVFzGEpty060E2rumLGUozboXfTvj+uK4vYRgRz2h0+J55oW8jqd1s
vQwJw3emrw6/I3Kad8k8srlz/wef7RU2
           "]]}, Annotation[#, "Charting`Private`Tag$2353450#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361104329875*^9}},
 CellLabel->
  "Out[5347]=",ExpressionUUID->"38625336-ad96-4163-a331-8b7674d70276"],

Cell[BoxData[
 RowBox[{"-", "3.139173281038448`"}]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361104356867*^9}},
 CellLabel->
  "Out[5349]=",ExpressionUUID->"87726a6e-632f-46e3-b69a-00be5991b1b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.008959173877837219`", ",", "0.000665747121922202`", ",", 
   RowBox[{"-", "3.139173281038448`"}], ",", "0.002470149761769465`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361104361865*^9}},
 CellLabel->
  "Out[5350]=",ExpressionUUID->"f713d242-aeaf-4352-8417-5e22789e8fa8"]
}, Open  ]],

Cell["Periodic Re computations Skeleton Code", "Text",
 CellChangeTimes->{{3.8636129580817432`*^9, 3.8636129685064144`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"605fa9bd-d2f9-4de1-8459-5ae1aa1ed3d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
  RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"\[Tau]1", " ", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
  RowBox[{"M", " ", "=", "3"}], ";", 
  RowBox[{"order", " ", "=", " ", "5"}], ";", 
  RowBox[{"maxIter", " ", "=", " ", "100"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "0.2"}], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialConditions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MyAppend", "[", 
    RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f1", "[", "t", "]"}], ",", " ", 
            RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}],
           ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f2", "[", 
             RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
            RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
             RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}],
       ";", "\n", "    ", "f"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", "initialConditions"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Js", " ", "=", " ", "0"}], ";"}], "\n", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
   RowBox[{"i", " ", "<", " ", "M"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff", ",", "\[Lambda]2ff", ",", "\[Lambda]3ff", 
        ",", "\[Lambda]4ff"}], "}"}], "=", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], "   \t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "!=", " ", 
       RowBox[{"M", " ", "-", " ", "1"}]}], ",", "\n", "        \t", 
      RowBox[{"(*", 
       RowBox[{"If", " ", "condition", " ", "is", " ", "true"}], "*)"}], 
      "\[IndentingNewLine]", "\t       ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
          "u1b", ",", "J"}], "}"}], "=", 
        RowBox[{"testWithFB", "[", 
         RowBox[{
         "ICs", ",", "\[Tau]", ",", " ", "\[Tau]1", ",", "x1a", ",", "xdot1a",
           ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], 
         "]"}]}], ";", "\n", "        \t       ", 
       RowBox[{"ICs", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1b", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
          RowBox[{"xdot1b", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
          RowBox[{"\[Theta]1b", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
          RowBox[{"\[Theta]dot1b", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"InitGuess", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Lambda]1ff", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}], ",", 
          RowBox[{"\[Lambda]2ff", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}], ",", 
          RowBox[{"\[Lambda]3ff", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}], ",", 
          RowBox[{"\[Lambda]4ff", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Bold"], 
       StyleBox["\t         ",
        FontWeight->"Bold"], 
       RowBox[{"xs", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"xs", ",", " ", "x1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"xdots", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"\[Theta]s", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"\[Theta]dots", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"us", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"us", ",", " ", "u1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"Js", " ", "=", " ", 
        RowBox[{"Js", " ", "+", " ", "J"}]}], ";"}], "\n", "        \t", ",", 
      "\n", "        \t", 
      RowBox[{"(*", 
       RowBox[{"If", " ", "condition", " ", "is", " ", "false"}], "*)"}], 
      "\[IndentingNewLine]", "\t       ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
          "u1b", ",", "J"}], "}"}], "=", 
        RowBox[{"testWithFB", "[", 
         RowBox[{
         "ICs", ",", "\[Tau]", ",", " ", "\[Tau]1", ",", "x1a", ",", "xdot1a",
           ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], 
         "]"}]}], ";", " ", "\n", "        \t\t", 
       RowBox[{"xs", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"xs", ",", " ", "x1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], " ", "+", " ", "\[Tau]1", " ", "-", 
           " ", "\[Tau]"}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"xdots", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], " ", "+", " ", "\[Tau]1", " ", "-", 
           " ", "\[Tau]"}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"\[Theta]s", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], " ", "+", " ", "\[Tau]1", " ", "-", 
           " ", "\[Tau]"}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"\[Theta]dots", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], " ", "+", " ", "\[Tau]1", " ", "-", 
           " ", "\[Tau]"}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"us", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"us", ",", " ", "u1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], " ", "+", " ", "\[Tau]1", " ", "-", 
           " ", "\[Tau]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\t        ", 
       RowBox[{"Js", " ", "=", " ", 
        RowBox[{"Js", " ", "+", " ", "J"}]}], ";"}]}], "\n", "        \t", 
     "]"}]}]}], "\t", "\n", "    ", "]"}], "\n", 
 RowBox[{"p1b", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
      RowBox[{"us", "[", "t", "]"}], ",", " ", 
      RowBox[{"xs", "[", "t", "]"}], ",", " ", 
      RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
      RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "\[Tau]1"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
    RowBox[{"Filling", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
    RowBox[{"PlotLegends", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", "\"\<x1b\>\"", 
       ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", "\"\<xdot1b\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
    " ", 
    RowBox[{"AspectRatio", " ", "->", " ", 
     RowBox[{"1", "/", "3"}]}], ",", " ", 
    RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
    RowBox[{"GridLines", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", "Js", "\n"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[366]:=",ExpressionUUID->"a1e062b3-c19b-4de5-9c5a-758815bd1a87"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
pVZf9d8gn2Fz//pneDji8nVlP+dXsHpYo2QyMQu4rx9reB5zF5Vwb9WkWlYD
49O3nr7iT0Xb7zzy+tw7DPBr4Vt/97Uj8XvvKlylJsCU1QxjV1c3OsYIevEz
cgoU5rZ8fHGChnD/4oZB0gw4+GSz7+btdBRZMlG7kjoHniRIfRBijf8EYanY
uYQFoC+4ZT0na368c/E6EJe2BIqHXaz+fuxBAsG2DlPjOLhnVvLRgbhmlPy9
ZPfUHAdc3nZV7Zj0L5S6qPPr6RInNO/Z0/tV9weSD9BYTOPihiUJFalc9QXo
+XOTyxOh78Be/3h5Yb9L6N6c4ZqmeAXQ2zQQ6EF6jYIrp3c/okyB734tNBki
DS1pm11zXjcD1NWXBpirNGRjH1WsumMOzOoX1W87Q0eB6JbUO5kF4NYkdrtC
lI6MPmz+UCi7BJR3KWo9FGHtz7C0asj7KzgwNnUowzIUEf6jXyIrzIIrB6bW
OejRUdU6465q+XkwcS34a+wxOms+lpP1NiyC2NjXxlqseKBC1e0ywdEPNC/u
+a50n4JuXij0MP9OBX8KJr7Nez1Fvfh3esodDeAr8Wv2zudZKDhGUmGn7yA4
7mIys3vfXxTQMCShUDYK6s6vHrKo6ESSBot75m9Pgny+gHOFr3pQ+pcl0TfX
p4HqZje5vmIaOp2x6Up6yCwQVwcGtaZ05PhiK/5w0Dx4XaT5LF2Ljk57Xt8t
e2cRHFap8fW/Q0PmE+3dZ6MZIGNHtEJ1bjeiXDvy1TFsGTRwf1ZdlelArqXB
969fwMEQY+NZcdUW5KXlsD7kDAfk1euzyNVuQsGcxycsnThh0+Mzl8/fq0M+
tfkdj65wQT+z1V1C/t+RkQuD48AdbuhPsM5/ev49Ilzn5ZAOwkOT0iXRJ0/z
gTsx8o57WgbQ3NmxQX7YE034Xxux0/8BvhOWB57teYdM8sbLDROHQf62yJNK
L9tRbdnAmWPt42Cv5I/NXW+7UfwnGc477lNgR9qEDAHQUMnSf/xGfjOA81cM
cZ0UHX2/3PrIMHgOvBH4gPtpQ0cxWjcZNL8FcDul03XfNA2RVmRO0/9bAk8M
W9/aVfagE5YCxebdOPhjWUiH/KMZJRyKceLs44By4YZlr879Ql3UmObKIU44
JxelW0r/gcRWs1uDp7mg5qqfSu2rr+jueh76dGIyODm35df85bMo0y06/S++
HMA+W1Mpz0TU5h0av29uEsjG5g96zvSgfHOd8NsL06Bo8VGg/gwNhQnc8fLl
nwMx1taup1j7rf9Ijd8TrgXwMJU5qb+RjrI1f1Rwci6BL3rt+h7yNPSGQyrQ
KaAAGKqUPL/m+gh9T2gIkiLOglOVx802HKQjRtnuOAneefD4dA9l5gQdpT/e
4KG6vAA+hXFd288aL8/g/OeZ0OdAdfVFEL71CJq2OzYlXjMLVjwOyzacpqOb
h7x0ncvnAUdz5M9jO+noccAf3PXnOWDbeqde9yv3kW7Nxx8a32bAhh4evKcK
HdmJEUUzfsyBAeNToR8tWb+P8nR0xPsDCDBq9Va6dQ3JF6Zy9BrOAfPUdXIW
rPln4DZ7mMdoFpgdNZ1lHKWjZ64OMncN5sG7xtRXz/RZ8bLn5zfyjteBtf2H
w8/CZ0tCpM/WyR6gAruSlvGju6JR66PxbbHxDUB+6Om4ECULJewxOs60HgTS
SXFCW0l/0bmpR/+eJY4CdcnbKbJvOxE16fCwseMk8D5eW5IR3YNIX12TU+2m
wYfQp199c2loCi9a2eIzC66vx5UNsfrrUkbD7q+358HnL642NFZ/CkC9Q/pX
F4FAVmXecAAN6eKUv74JYIA9GSuVrb+7UaFq2Q0b32VQQ7RR8TrYgUTf05WT
rHGQWVZ8+sfhFjTPOJFDOcUBt/z0r3ls1YTeXGJMutpzQrlXEbvp5XXInW+p
ZukcFzSoPRSN6N/RLN+z9iZ3bkgKzbq3djkNHcuw1zHww0PwZ9hZ7EIeUHIE
1upf0sHWLfx/VAxuIR5A1lNGVWC7pYXAvZNv0YVTW0Yl7w6DNsfj//l5tqP3
/4IUCgvGQXiyMqgJ7kZ6RNecxgtToGrca5ZnDw1twuPiT1ybAe9J0XTzdXR0
pqhmwNWb9T4LfY2dWOPx6cnNO067LoAWrqRJkUUa+v594SLBcwkkjtKlDJtZ
+6W2w5XAPzjY2Dyyw6SnGW3kekh43MEBqw0Djc/4/0JLcnotPTROeP9b36cs
tWokoDVXxRjigjTWbsP7sAhNtTu8upmWBMDm+ZtC96xQtcp+3lTf70BtSUMZ
5/AK3W9uOx7RNwl6fDlz3Yd6kMS5/M2+/dPgAkObtnOMhrafv/4nmTkLrr4R
00tnzXdfDs903tl5QK69mlclzVoPOROat00tgoo/aVMx6jRkd6HGQelRPqjt
eZzm/zQIyaXpS8rNzwBpkntgtiYdPZFQXNRemgP//H5e6WGtp5+SKlLeji6A
m3w6wh7facj32xeFhcQnAPz69rO+DqCQLHhcu2gWvA72Hg1mjX83K7kb9BzW
eDbXeiCnRkd6fQ+7VeKzAbHXZGl3oz9K+iNrrZk5A/r5QsPO76CjxSvM638K
5sAHX+QwzZp/ci1TqS4BqUBRfX6Dy6mrqEwo4Syf1hyYafvww5Q1f975OLUI
as6C8FyR5sOs+aJSftr/zb55kLXP/tZOQ9Z8ijp8cDk0CGQHtol4cm9HJbYK
/MHxs+ARxyv7R6z4TJHcu0Mubg58ibnmx8HqLz6rD3Juz1OA8S+v5KyZC2g2
L3CD5YY5MHJvnVkj6/1ffGK1ICk5C85e4es7xTrPnr+mc2BKch7Ich6MaGed
d9OLD2hMer8At6nn/qVxHUdWfKefTLbPgqSXR++NWdFROVU0O/jvHNizvRev
zYqfwi/mJBdbz4EF+SulqqznyeNR2OzieBZka28bvRHXXKK2dmFOfBKB2U/r
D/+OfIIajURj6nwawLFzCt4LjZno/UOHC/Sjg0A73FyQb7kV1XFY/6gNHwXp
PCqfp592omiT0W9e5yZBWp6k75bwHkSFH52ULKaBPtfkk8JMGjqoKjA/dHMW
cAqrgKHjdORwYJvJ/HVW/H5ru8ZVSEf9ycqGf88vAjFH+p3Hj2iokOePfKUP
A3yMOfF6b183EhTFNTTfXAbT1bJ/jh7rQBdeCOELLXBQsYJfMv5EC8qxruT8
e4IDblrL+O/C5SaUKdng5nuWE8alHlQeGqhD4/LryjNsuaDcKtGyhFyOqv7a
V726xg0PhhXxPb3yAV1rjDhvewcPXxVmpgn8yAX/xTz78UQtHWQfXT34jtsD
URIuTordqQKmxLiHlj0pyPmN5tqa8zCwVCo8RL7EiudmLYWn3o8DygGHp6k+
3UgyWzx81XoKdEf+rPVVo6GaYC2HposzYLDFOJkuzorX+yvEA9zngFJcLO9H
1vuO7rh56InjAjCP/nNqnEFDCfJ055jrS0Co96hiWlsPOqQWAV414WDRlNJA
90gzar/ANDveygGzj3702RLxCxH+rLMc6+SEhBMN/kOnq1GQlVhpZh8XXCu8
/l/3fBH6cIB8d/eXRGCzPc9SrdICtYQ9zonY/x3MU/m0ZxMTkMW9ewpFnZNg
bf1na/veHlTRNzOw1jkNzF7wAJFhGrr5+Aohb2YW3D914oUJa/z6hNRW6Y3O
g/frpJWWZOhI99J/7fmDiyDUqrdKbD8NfY2SbQ7hzwfMNoN4g8+BqFnlQc/b
sRnQglt+MrmPjnp05LafnJoDuwM9j1Wa0dFHpY0ltN4F4HH5twBnFQ1NBggM
eKZFgujbrjcJNftRa6fm3RPZs8DJI8DxL2s8u/Z6Pd70eR44OMBknDodJYl1
mkRIZYNhvlACRdAfnThzVqY4dQYId2stHFZgrQfRcwnDGXPAO0M6/yFrfnTt
SfxP+dF70KzHSx8454iE9seEbVKfA197m7p0WPPDgvNdQoTaLNhcMx7Udpj1
vBOmX/JU54E2n9CQoxGrLbaWv5b4AJwdlLcfxkkj/iBZzZfRs2DXE6ZeOut5
bmt3We+NmgO5r/wcnVj99b3AimtX/BtQ9mBayMrwPNKh+xteJc8BPcHs0RjW
+6ese4peCM+C/9Zlbi0BdPQ5RsuJW2QeULIfx42y5ousX+yUW0AsWDt8oTOh
whC91TAt42pmxcfU9fX2rOcRHRH49/LXHBizDOVgsPqnI/xLY4PpHOCc0gkx
YD3Pkz29toJht8FFdXXRxHVERIpqzD9zfw4Uny01kmb9/rY9Hu8juFjrhd4r
GpHV5uM0c/Z4/hTYZVE3K+87hMCjI9KK32cBx7j2vV2s9dKjN1l1QZe1ntSm
hlix/v8vwiHfFr0fg7H3DiqWhiqoa3BomfR6DiyVxuiEss4r70NDRg/JzgHQ
tfCKg/V5gZ4zDp3/ZgGu68weF9bPdbW+3ky7MAd2/P6NhFg/x3gNM/+Mp44U
B8T4IzEpxWRclgHY/NHcPU2mdgpg/LHk7eW47p4+gPHHk242fYFXfwOMP1q/
tblOLHoDMP4YL2BTNJH8nc0fzyaJ3ZPa18zmjxpbnahTd9rZ/HGTg1jKh8Ie
Nn80+D2r1ruzl80fv9X/cIsSG2TzRyhDHUkeHmXzx2rVY765aVNs/njk34Tl
mM80wPjj7otxcif29AKMP/bGnKp3HCwFGH8cFfrYztjwP/74+jOldZ4wyOaP
bR9zzbbvm2bzxwtHD00Vri6w+ePt9wIKuvpMhPHH1zfOC7l7MRHGH9MGGCt/
4SLC+OPqobJA24fTCOOPpvf/7LxcPYgw/nj1oH/mfZnfCOONvLoNOFrwGsJ4
Yzan3zjfq39s3sgZq7jjziEuiPFG1fbz261T+Nm8kTN96OWu64Js3rirbg/z
VCQ/mzfanU+JPLyVm80bKyxEu689ngIYb5SHb/Zl3+hCGG9cUsglbd+yjDDe
uHLuUi1BB09NVcBX3+whw8zjzhJFGjxUwizHulI7CnTjDFjhN8BT36lm3E0Y
oMD3AK+r9GEeKVxIM1lxEYO3qz69fj1IB+1HCzJPjYhB+g1mBCWfADF+eJbv
ty9TWZjND2vJVzd92LkKMF4osS38vYvnKCAsbBzn3t0BCmQsRt4udwOrj1/W
ZBXpwGfDJ1uupAqA83NTnwT9QFelUFctMIPNF994pWc6nK9n88XyVUZMiWAr
mydGnOSUnHH4H0/0vuyr/YKrn80TM/Jrav87N8zmiatHs59WTk+weeKTw7c3
8V6dBxhPfBYRs0IMGAUYH9zZHqOubDHH5oPyxglWA2tLCOOD2i7fDmmUMtHv
xQdBHgwCJKopFAqeYiC6Ya72Iw4euDB8YlNXwBzS+9iyvQDHB0/NXck79ZWG
5MeNnrwQEICqb3m4f0XyU735Lr9y2CAIHRofBu0q+oc6f9FS30sJwZMeeOev
H5ZAdqnc2duywhBP5bN2tOeBa6PPzw5SSPDnm4Dc+R2C8LNJbZhpFAkOH3lv
spMiCCf++a+Wk0XgoEOuMTOEB14Njfm2+lQE7kuu3Lt4fgWQNs0aU+NF4d6h
bT+7vafRf9+5tEvXk6GpnNH+7+Kc1KhXkc4/48kw7n7SlcvuRGpr2IOpuM0U
qNxyipDgTaRaRP39qZJMgXVV74+cVeegOv741F+rKAb3NOne/ULqQZwtGf6p
H8XguW7cT98wJmiZX+dqqCIO92nmrW18LAwxnqr5brSGtp4V1/wfP72ttb5g
79IEkDukZmmh2wayi9ULszvooHusOTBtAw18UFhqv6raALaZO0U9ONQHHqRM
V4V4RbB5qxr3zgwdUM3mrYcZWp4k9RY2X/1A+KxRGPI/vqpvIBS7KNLH5quS
k/Emp3YNsfnq6xsyKVvtx9l89eq6UKsk20WA8dUtyTveRJ6ZBBgvHfDr7lNp
mmHz0nyfc0lDlCU2L2VcesC1I56Jun4tr17LJUBK1ei0GScTNRnIjeDLiFD6
XS4RNzGPXt+qiFYq5oVC8ZlBAvp9SLmilsO0VQDmt/mold2dRZ6Z2rrregSh
aXj8x0GxabDzynbnV91C8HkFX7uyCAGee7ud02dYGLb5iPzRjhaAb/Nyf+vf
IMEd62XSHRwEoUV68Zr4NAlmXx/zE9bmg0dG689G3hKBX616TcrvccA6Ny8w
6SMKH3bYCoifHUZC8fNNEUxRWByzsf+oEo4a1PaneN6bDD9ekTYJCiBQoe33
TiKOAtVcYoS+43moyt9c3Bf9KfDCsUb84m0uKo/vl117eMWgkFaI6tKlCSS+
8fNls1AxyFf9c+b3zWlwOvGKyAlBcWjRqkNQMuKHg2k8D7O2dwHeUkbur5A2
0HQ12PPlvn+AsiHLbLPcV/A39Xaz7YEBUNrEe4neX8zmyxcDTK8N8zeyeXBv
yUjRq5pJ1OxdR/AYZ4Idhvanmm/MAoz3HkjfP9PwdR4198SZqGiw9gvfquWQ
rwwkUqzvlaZOgMmfedte5DBRzWZ+ks9BItz8OvCq7s0l1E/rLzysxwfFnJ7R
pE92oEoTnPZtO0FIYhIGZ0iRQHfqoci+M0LQQ7ri7wzAQc31MqbHLwtD+eNv
QyNZ/V1H2FgSpUGCs7qLjwbdBWFu3z/9MxkkmK/a337ESwD+J6G3cnO3CPx2
7ZAjTwABmlZds40oEoWtPyOZFp4LiHOM9HZqPxk2Jz968LKai5rgYLQhsYQM
NybJTptx81Cvl+rilQEFFu5p2toVQaDePX946+VyCnysZOMUuLCMqsQ+xl08
JgZ7Kh2LpC3DwXh4TuzaTzHYfQAcO2DMCTH+zeQyPlwcj4MY7/b6ctFykj4J
1K985V8z+As4+hl9m617weuwy9Uu0T2gLeJshlRZIyg8OKhjXN4L3l82xr/6
FwQwPj76z/Dlk3uVbD7e7OP2nKD5m83Dl+VaNorJ/o+HXx/Zbnk6oZfNw6v+
7MurSxpk83Da5PFprjdjbB5e9Owcn7vZEsB4+J8CvxSa8xTA+Hb07iu7rHhm
2Hy7dXbswGTYIptvB0qPySXcZqILBwsKnaIJkMvjF1eNHuv967fr6L0mQnyF
Ef7OiwX0y+ag0aUXvNBMrbK9iXcA9b0KWLZ4xwebBpcCWyp/IR45jqyqXAFo
udXgvfHiEqp47RT2iyoIJzN3iogIj4LhovfuWcVCUGzqZntnATeMCElO/lUt
DLcdT+SXlBeAMs47vMrsSfCon6WJk5sgDBa39Qc0ElRe23CXOs0Hs1+MfGq7
JAI/4D4Nb23jhDs3HtjH4yIK6a+jTl7s7EUNRNdXiyOi8ESHTmmowSriXPS+
JHCVDPME84OEx/DU2bJes4OTZGh1y2DuuTwPNa49r7zjOgU20E+FhV/jprZa
pJ++ukiBlpZuKRT9GSQNlGze+4pByyyhGpmuEbDeQ4RuuiwGiXflt9jz8cKF
hqj9tsqdYJyZNCes1Qme8W8qOpdBByLFsztyuMqAc/Tsg20l/WDT+p+MoJY8
dn7gTWH5o/jeBjbPF/6gXhl3fhKFlYjf/O8LE5iu2ySncn0OYLw+eXuPOIfg
PPKw5M0JE8XDt25VTT32DLStIt3biEKAOkG6G/1Z+/GJkMqfnhuJcNN8z6mh
4SUkVmnn5ifDBzPfePk4s87XiR/Vx8cOCMKzk54cFeONKIKWdWZSWwjSnj93
pCuvgAWX5NP2h4Uh40javPJZXti/9DesWI4EGbk9O+SsBOGuuNMjf5JIcL76
7rhmgwAs8qX7vpQTgS2cmx6aPiHCDHe1U+8/ikKdVaZ8CdccKj8d7GalSIZK
kZWWtAVOquT98W85n8gwYOASRbOSSJWTt7/joMKKv9wbhtNFiNRhr3BPo2wK
5Izv+On1cw3FTHykxmqJwXGDgL+vcurRYqZ6qHmRGKxfvFxiKYCDnEfemXxR
YwLpd6mKa/YLIF+v/55xPTcMOOpcRYlYQidb7/uG/sbDhA9dmUXZTGR9ER5y
byXAQhN7/uOZDOQq9vbiYw5hGBK99ir6KBFK9pxSJeNJ8HzrrpyYYQGoyKW7
q/Y+CZ7Dy1q4HRaEMoab/cY5RaBr6bm6c6680EjVl0eBnwxtTWkzOHkOqkCx
hhjtMRmqT6cnRhOI1JC55Mu/hClwume0lPaTSC1Lk91MiaLAweaMRQ0HTurz
n6XQWEocXreLipC5LQi5VJtqvdQYgCYvo3lGcwrtuqo0WH8KD21jCM/CCUy0
nNV1m9eMAOVjrBQjXjKRQZaJud85Ijx+yXm+bXAR5S1f4xa4xAdt+iK++xe2
orsViUZaj4Th1huhdhZrfDCXbDd2WY8Ei3PkjPDeglBT7fobOpUELdSE//AL
C0Bw73nbo6NkOOskN7g3jJsqp//ePbieDLdcLjHlVeChFlrLhC+YUOCnGVrL
3AKeiuVjFkyy5EI7WeeY/8u/XHWNfB1hOQU0fXCXzGpaQa95mKHlxj7A3a3q
XH+iB4z0fPfxJjcD7uy363YF9gKrs4lCGpFxAMvXuHMupLSJV7DzNZ4+V821
CpvZ+Rn7+kubS8Z72PkZv1YV56KLvez8zNM3jUnyNoPs/IzvnYLS+CNj7PyM
fH6DDbN7ip2fYVxS2NU8OwWwfEsOd6sdLXGanW/R/rUUTjZYZOdbFm9sqOo/
x0Rvbj6XvPqAAIXtuWU7WW2Dyj0u9lFE+H3m6J7NEwvI0cR724NgXpisfjv3
4vAAym3XTol+zgejonWDN3k0odnGOH7utwIwYkCaN7xkGY3F3c/emSEIybwm
N6VpA6Dq0pBH8UchqL6/gBnGyQ3f+52/uVwoDHNJdj9ihvjhuYq+6jUbEqyn
RC2dYq2Xb45+oDa1kuDVrNStE3r88OqNJfM1OxGYvpsxcuceF7R1e6lBuSgK
i147dhUK01FmsdJDpV5RmK/hzJW9dwWhwBrN5+fJkPNFwrnwWDzVZH42zGqQ
DBOZT/K81HioDQO2EyaXKXBzr3jCeBc3lfot3Yl7kjV/72/J2LM2i96cGGlu
9BCDdfjyJf5zA8D77EXD5hkxuGHx2d89/4hw9d+fJ+kZHcAm0yXWLbYLLNr0
nylzoQNFIGTVeew7yOXNsuH36wdPJVXtvXKz2fmq2RvlCQbHGtj5pVcrE15y
OyeRU0+homgEE2z4ICyXOToHsPwRk5awPzRzDlVEQccSDjwM8X6Xe0mdgTIM
LzJfcLP2N62w/T1lTBRVlqJwm58Iv702PRS1hYE+FsQdixfhg8cVz13R+tOD
Qm1qjygoCULXdwcvycl2oty/1Q+OKQtBYZlfR+/cYMX3Er02LhrC8Ha2eBBX
Hw90n9m30LiRBJHJ7h4Ca71wnRXVFosjwR6+1+bhswKwJV2tRG2jCNwbmX2/
X5SHFYdEncx+IwoLGJucq0tn0FshfctQGTLcFBckTn7ESf1NgjEwhQz1rlRF
FL0iUu/a3Mj1206BHO79CdJHiVTpQI3XxR8okH/qx80tETiqv+2nJnV1Mbhd
uzOsltSKfL9PE/yyxeCaznymafMK6L5shN8vygSZ+ft07/csAB7/Tbt9S1jx
4MMd0zSzJdRhu3e1sxwPO7d4+8+lMlH8C6kk10oCnH7nprjazkAmqN/x6aQQ
nFwMea2ZQYAGWVfUTjKEoa28bbFEmQB0PLP8gO8OCUpPi08pWwrCA77X0H0G
CTbXVD6M/ssLlfr3j9tykWF9kPX2gg84arVR4JDTAzKsqs8LNKgiUPvls1+P
EinQx465rXCESF3MrTIIfESBxsPPL36d4qQu5oil1omJw8Lo95vm7AWgM/IZ
KhVmgIv0YD4Frin0IMX+xZoeHvrr2D9JoTNQ4L4ni1aHCBB++jy37gMTBQ8p
ZfoeJ0J5zrZ6W40lZDKR1i1/ig++tefTEgxsQ7auNJPDnsLQR3PiBCOJD+oK
Fp/yPUCCjmMlG6megtDzscL85gISTFDh4n52RABK7zWnFuuQ4c+a0Q02ytxU
2u+lI2KVZHiZImVXvo6HSgnbVS2qzzovZpbtua5PoMZ+eOJ+rIkBFlTFjx1r
XQRTFxPX7r7FQy3PwUfnHzORNE+7rUsKARZY3NxwZCsTecb2Nb5tE4brcaqq
U+cEYK+I2/aHTiRocOfdns0ugqxxoRB1z50Vz+xRMXfSIlDjwpslZRfJULLo
rBTfeh6q3MZGjrOyeGh087GVfiQDxessLzFkCVBJalsGuZiJhCyGXLx3EmHU
opqSdMYSkvx+4ZSVhTDMLtq6gGvkhda4O9veK5GgpdYJ3cuOgnAWJMTGpZKg
tQXPr63vBKDNTPyEYi4Zirc/0P4xSKRWz5rCo3sp8LPD5if6zQRqhVnd8oE+
PIx7o7jdt4iJQvrnK1cESPCEqK1fm6AgHH0f1BMeTIJlyxEXNqsIwuPK/6BF
NBk+zOIePgmI1F1lT5RyJShQ/dB1uupbIjUuUSFTzYwBjt19cmef+xSiK89p
JF7CQ/GXkYuh8kzkpqK4kH+BAJ3tPmdxhDIRwdd13t+NCG0b1f9ufLaIFNev
BZgeI8Hl2O7PdbcE4aV8i4S1P2ToGfTrqMAuHqr/i5DPexYkobpZw9mlRWGI
5UsfX5LdMLKCg1h+dGRRplEragqU4GWfrIS2gp6qA3En7/YBjSAxbZxKD+jb
J+lsWNIM3o8/fPjmUi+42O6X0LSSCLB86qmgvZnX7MrZ+dS9mueonl7N7Pxp
8RfjhY/NPez8aUB6hGn+0V52/hSXNFmitW+QnT99dr4tz11yjJ0/XX12YFm/
fIqdPxXU/XGvY980wPKh9/v22nxwnmbnQ9O31z/KkV1k50NLDB0/uZkzUXl4
oP6QNwFe/njj/nMXVn8G9XLeCCbCnUbUOS3JRZStLxktcp8XOiv75HtaD6JX
XnFeWeF88CcltbTOqBldTRvIS3opABPsbycvyq4inERYpU2qIGx1EJYIL+sD
eV8f3dZ9IwRb/uWErCRzQQ0vaodIljAEx70Wd1XxQ7+ZshtSp0lwLN/gY9p1
Qaj6r7HnZTMJFoDdV9qd+OGRs/7vRWxEYH22wOLvJi44u6Fu1/rzotDMf+Na
TUoPei3J73mkRxSWeHaVbvm0jKRM5t7YniHDfKdUx2EXPHVZ2Ffpci8Ztunx
rtWq81BHXFS4eewp0PDWDPEiBU/VYKh6/BqhwPWDO+K+tsyhS3+rRQbdxGCS
8BWO67J9IM08fDV6Qgwe1+Uq3GRChPddGFTrGx3gcPpeAXfDbiDP/VN5xogO
4i0IHuEe5cBGL6rS92w/CMWtbTgnncXOJyvZvuesX6ln53+3Osya7iRPIusp
AYKlPxNk1zcM2O+YB1h+t4mjrzg2YA5dU+3QsVjihue3VVQS1jPQfAjS+r6M
h0/B3lwn1v6W3Rl9ep6TCEXr5F1ztRis+HlfoSIvH9xvru1scZSGuNXXz1TI
CsLz6neWuuVoqPpUyzPvbULwvZyfoGwkA5Q7B5yZ3iEM52Rt921N4YH7XB0/
dEqS4EluiRyp/YIwfMtkn/ozErzWRfSa5RaEFwytupgSIjAId2At6QQP9HT/
drwwURT+7hSxnpaaQc+vbDV8J0WGokF4XesTnFSNVkdOQhIZKl6RCvz5iEjd
4cE0C5WlQIMDwrIvLxCpWgLEvFvvKHB/oua6t3QcdTZqZydORQya/xUa7NzU
gaBx46HodDF4m3Nkd2jGMqjzfNnjy8kEuMOZBq+kFkH6pgIhsVxu+FXK6Xwx
a73f8iryIKEED3m73zq5JjNRca5gw0QJAbpXb+6LnmCgg5Sgq+sHhaCu15aU
Hax1pPljVeylaWE4vNLx4M8HARgU/FdJ4TYJTtJLGFZ2gvCH+LPuY/MkeKT4
djyvAB/cpCNJu7UmCjvIiQoXnXFUefIXMzU/MryqMjZGeUegPtE9ABlcFHhv
TOCI5xKRStZ+cQY8pMA8SF/3bTcXVf4DOBMuIg4pZ5XeabfyQ+mgkwt9q0vg
7a7hurqBSaR0aO3m8wN4uPxg2zu/egaq8R7bd1+LAC1lHgoXpTPRB+6NtOUj
RMg87fn5i/kSihs0MM47xgfhO7zEe6d2ZFR+70T1dWFYP3FUN9WVD/IEj/L+
t48E9e7/FHZkrYfP8wmvDuaQoM+nayqPWPuNSNSurD/aZNjbfZk2v8xFhS9l
MtrKyHDjl3jyL2Eeatm7wsvShyiQsr4obcCZQP2vqM848hsD/JYlj0yKLYE9
7xngXQIeEt6HFXbdYyId2erHo/EEGJOZtuH2bibifqKnVdQoDF82pFfuPSwA
uYBJQ/JlEtxuvE6rkTXfk1VNl49cI8Mvgd3Z/ygEqn6qba7qLBmeko42Icrw
UGsKXNrn1+Ph/pzEKwveDER7YKEpu5EAyWd3XfmAmEjFrTV+SY4It3w+xe1Y
t4R41nFZdhkLw6QHdp/vxfJCad+0tkx5Epxte+x59jwr7na5o1uQwjrvaqqQ
jhYJwMLCcqvJDDIseuvfRW0lUm8LtXdaqFPgwcZHPV9nCFSBZ/LaFzvxMPYf
eWYln4lM7bf58PCSoAL38mD3sgDkb3F49DmQFT8Etb5p1xSEn+f4P2yIIMOp
nczMt7JEanf7hupvZAq8sNiz+r2ASDVxXEWndBlgx7FczT0WUyi4JkJonx0e
tm3Vs1qQYKJct4C9NGsCJLwlmaY+ZaLtMWe34q4QYWOStz7rdIwmnynvP2NA
grYHjhMXWfFKuZ8fT3kTa31rUZc0V+ahXux6xL3hDQOMSVNIDYwpVKr0hboQ
hoeZ2fNhic5MVKdNa/B4xQfzU6aabiQ0Ip1YHhnaWRIs5GwkjLLOF0kdzlNG
o2SYJVDwpHgnD9WZh//rDQECTG+tz41krTcfb/EeqpImQed8gkXmcUF4snJ3
9PxL1r8XOBW7TBeAt45KKN9JJUPmWN2XvdlE6rP1ncU5tXioqEZBBV+YqMv2
Ye8mDhLcevFWPscfAXhUdXP7yF0STJfNmKCZCML9wkr4bn4KfJs75/BfB5Gq
M78vX82IAM1e8HbkvGEin4jQJHfI+ry6efSMlyC8L/Sr4/hPMtSk2ekrs8bL
R9kjyOIzHt63JrRtjWbtb71P7l66ToKBsd3PT1wRhGMex+6ILZNhzWnQmUDi
oVqsJRU07iDAtZIvGwsKmCj6gZH7S1VWPI9GYg9eE4TLO24+vFhIhnbCOd4n
FojUeyI3iyhjeGjDWMelyRp/FVcqyTMkVn9wzmU+3iQIa++k7XULI8HIx9Xr
tWQEocPL+gb9EyQoWryb8fiGIOSZ2qmh2UGGgykXvqho8FAl3q6avmBKwj3H
HDZFRwtDzOfw/LBgICHEATF/Q2fLx9/vvkwBf8Ps1MZrrUDpOX5n4Jc+cKw9
KEVSqgeohlaIaFF+A8Zjj6+dFr3g7dq3x7XtrwHme7xA99bcOMrZvofakc3V
Xaeb2X6H+3t+x7TKHrbfES7yzLRKq5ftd0jqbPrYtW2Q7Xc8mtOZ9OMYY/sd
Kiu7Fxl5U2y/Y+NEwPg/62mA+Rpzetcm3E2n2b7Gv/aHqUYii2xfY7e8scKU
MRNZbFrten+LAHuUQuoTbzBR36Wvtd6BRNhyRVryhdIistYbqG715YVrwuIh
N6MGUXRV1b+yx3zQ3G7hk3xeM9omLhTmGsuKW3ecOaX9ZxXx/Sb/ck8RhN+9
JEeuZPQC5X6rRe5EIdiq7+nGuMEFGXMTERu/CMMXo29l5nL5oVCwWtVOCxLc
eOh8uAvr/c9/6Z+830iCdsZ4WsVdfqjx+1DjeisRyHAJC/ywzAWhW7/aprOi
8KjAbt3tPd1o/RFvN7MuURhopLjr5OVlVJvBaw1syHBfR7N2oiWe2rhRh+lC
J8NbR7Jy3FjvfzE9Jqz3HAU+EXxk766Mp14Tm1rKG6JAfMovTkudeVT1UjN9
+roYrN9Uea0G3wt0j7857TEmBnv//j6+h4sI9TIf/1Ex7wAjTa/nLyZ3A3ha
+zm/Fh0MbWXyTfFVgM+0eyu5x/uBVlBsy0+zTLbv0lu6waj+Sz3bT/FC9D+6
hEn0aynnhpcnEwSeL9iZbzgPMP/E8ad7vbvLHNJdS1WWmeOGZmH2/4QEGWjd
51Gb1kU8PPtP22qwlIn0nAQmc1YJsPGwZ+UdAwZK+EKcmuJmxSNObjFW92kI
JcAfTzcLwifPl3j4XOmomWybGCkjBCvWg4IGKQY48Ny8K3u7MNz1YrXsfgAP
jFf2x/8TJ0FDM/5/mbsEoVS+neahaNZ5olLbOldAEMpLuIz3iInAz8VLgsxr
PPB7ZbtJcYIo7KW1q5JqpxHpefSh7I1kKD03m52mzkn9p+WbN5hAhkGxvh/0
7xKpnPeRTPQWCrzv+myp5hqRanDcVccshQLLnpjtP8DPQVX+PHZ+QEkMTgtf
iGiS7kJJIrr0hM9i8ELUaV9B6WVwcJlb/KqaOLT7mGtU8VMYHr53xCSRwQC4
LS4NydqLIGA0kNmTwQ0rn5boDsktIT1qid36QjwUe725oO8VE5noPbz8pZAA
vTZ03xJeYqDcg5YjHf+E4PpGF8GR/QQYp7Bo7DYuDFtPnxLekygAxbcY3Nvn
QYIdOm1HHrD2s4h/qRNqsySYK7v9XqEcH3x2LajtwYoolNkM9F2P4aitt77x
UHzJsEG8TGHpKYF69ThOmIOTAoMZ+Wdr1ohUaX/uwQ0PWOdXqv6ohCUXlZpi
nnddWByKJI0d747kh4xhrdXb80sg+DFnm1rbJMKJ1p6334eHqR1nG1+VM9D4
i/VWz/YS4Jhhqa5eFhMdiHriWaRLhM2m+1QjHZYQ7JMIuGvABxuOZzIcu9pR
2cTJXyFOwvDof6nuFpZ80MmA2yF0Dwmun711tfamINx23GPGOIsElbYrpgi5
CMBglPSxV4s1X8K/vB38x0WdwO29VEwlw2jJDI9DfDzUmOy7e7brUKCNV6gU
2Y9AXfse9jXrKwPsfz0ilKuxBKx+bD/3NQ4PK3QvbWzxYaLGdB3ZjzEEKFvx
aau2NhNVC9+cqKgThpPnhwaa9wjAqN9FclkXSZD+3X+w1FUQmkZfylBwJsO0
uW+LMhwEqlSu9MO902SoZyK6wXcrDzXxP62qMnE8/P7wRGvAdQbiTnlgvVeS
AD9fF9r6mcpE1NXjGgXSRBh9uCuytGMJ+R9q+pN4VBh2K2ydjPLhhQ+0yjTy
t5EgbUOLu+MZQfiaa/hZVTIJrnDlrHOsEIBXpNqEmr6wxu+fZ+t3NrDihw2v
Pp5RY51XalZhPyeRqpx36ozXXzys22sePpfLRDlbDrYIEknwmUCsWP+MAIxz
buosDmCd5wXi9xpBQXjGSvrcaigZLpznMTcUI1JzB7tjqkUoUPqo+T7Ob0Sq
fM1gxcB+BtC4XfNIz2AK2b2wY3JZ42GD7Ne7Z4SZ6G9UhuWcBQGax4HO7Fgm
yt/6pwg5EOFCRIHB1eZFZHbqyJMLR1jx5RcT89es/fnmvyfF736R4dbAjH89
O3ioHf273LXjGeDS1Pno82NTqNe4o4f/MR52iB2Ua7/ERGUhwloPX/DBw263
3Cp5m1CDyu1bk2dIcE+DZfE3VnziOaRKNR0mwxg9969VKjzUMIV97UE8BCgl
Z239ixWfCO/e8rJWigT5DX/iAgwFYc+ZN4P4eBL8/toJjYwIwG2fdvw7844M
eYfi+RTSiNQCLb6uHz/wkBi7vWziIxPd36Ppe2RVGL4LRiZ5NQKwtSJUhenD
igfSt1QrmQlC0sbJpj5eCszV8Ks73kukOkhcaj2sT4C2JlMyuPdM1G2Swrx9
kAQvRetq32U9/y73vshdP8hwk7Pc5R1SPNQ6vRvdV9PwsJKcGtIezkTmdzib
PFxY+4vUMw8bJ9Y+dZ9kuJFBhuftNp6+L8ZD9ZKu/9u/nQBTwzagu1+ZaEHH
vua1Mgk+9N/805P1+Y/h/2ka5LPGhzVhh/YkkfpmV1KH/BAepg/F9c4UM5GC
fLfLohAJxjfQRTrEBKGt6LoQ/xASbBtIsGiUF4SVNgOKxiYkOMGpZ37CQxDm
mesObWwjw4E/PfknWOflmsRy3JUlSfgkYs57rEIY/lwIML4fwgAGrUGeLxun
0KSt+WZhaxIMe5Tb/Zo1X7ZyFZw510+GqcVnixp28VCbnaI2pOMIsH9G0bKE
9X5WfR2kpkvxkPGPm/fnWyZanLnaus6LBD9WCMcNWgvCVCuq5DVAgIPJkgZc
n5ko5Wfzl/uarOe13vsn/zZrvdsvtLzwnQyt0u74LFN4qDffd9+JvkKCxPIR
kXjWfu0aHzOgMM/ab8UVzu1h9XfJBYX1wtIEWPWrbOR2Ces8WBLl/0mRNT7H
9V/yXhSEQzeZG0/S8PCQ58um34VMFNoq3m1pSIIUancmgRVfi290MqP/JkPS
3I13F1R5qOO/e54tfmAAn007ouXcl0DbeOalS8l8EP/J8biseiPK5Iyr/XWe
BN1CB+PrWOO1uv69zOFx1vqxf6Pgadb4PzrQGXeWRIAb5rmNt7D6Y12jh76L
Lgkuzd26I+0tCJvSira71JJhtm/jl1rW+rLHZKuipRsJRjxzuLR6SRBqdN2M
LVEhwMPPOevL8phIrVxdMmYX6++9uU24gNX/dpNH4nFTeHj60w3v46z1h6M7
75auKQny3FCZv8f6e06HrvOz7CLD1oHR/ves+OPCh70ptSuS8HrISv/YeWH4
/6oX1sZ8PT2RtbM4RhTb13t4ZcPGpc+ZbF9vy2TRxpjPZWxfz+epVhD/xVq2
r5cu3rFk1tn8P1+PLHBww9M2gPl6HQqb1+nu6wGYr8eNI+8LbqQDzNeLjRbZ
GzLVCzBfT8oqVeLX336A+XplU37thzQGAebrtcTlaEcKDwHM18t9ljyw13YI
YL7e9uz0uO9BQ2xfT830SV6d/TDb13NtfBscGTfC9vW+7jKpD6gaBZivN3i6
esvrhjGA+Xpyv4Ljm/XHAebrlaqeDONaHAOYrye8e8as++Uou15YQUCjRdpi
mF0vrLscVfvvdz+7XhgmB2/63Uxn1wtLWWTrP+DsZNcLl0uWOxWYNLHrhavH
dlyUkaSy64Vzyux3b2wrZft78/1U6xs67Qjz94R0tgqS8voQ5u+1r1QoKq6N
IszfSxHhfaExOokwf2/381TH/45MI8zfk5i19p6Nn0aYv3erP8r4oPg0wvw9
dYsJpT3SU2x/b30xdF+4Psn2977MX3j77sIkwvy9u15KOxis/Qbz9257OIu9
pMwgzN/rkON6vDI9x/b3LrwcyYtmxReYv5fSy3tnf+4yakz23gluiMOlx/Pf
R4vX0GLWyQMy0+KwMdlMNTcDR13Ld88JvCYBzZx2v0NFOKqR6pHDPnMS8NTQ
aLFU2hqqPKNyxemGJDSIdU7137uMMB/Qcdt8g0PSPMJ8wK8FBufKft4AWD1x
wEzu97x7KWw/sO5M+/o9d78CrF44q9cj/PToP4D5fTRHhm/+TB/A/L74XXLw
2NMBgPl9ORO9uusyBwHm9x3dpurZc2wIYH7fp0P2LXtshth+31OPkbBdvUOA
2+7llbrYNWC6d7/yp8VhgNUPT8U+UrXSGAVY/XDstpPqz63GAFY//Kf66Fjy
5nG2H5iUbV+kAsYB5ge+Sb/w88W1MXb9MCGxfbdh7AjA/MBU0QsBEjmDAPMD
g5V66VoDvQDzA+9PelwNVWwFy/t28vTh+SEhaUsGrbgGYL4g9Pbwysrbz/YD
LU8sJnBX0xDmB8bpxmf9iBlCmB8Y0vSew+jTBML8wLxIxyTXwimE+YH9nW8i
dz+dRpgf+Orh6I2LLtNI2ojStSwpCh+fIOxpfTmFMF/Q0qdG4UDBJNsXvDCo
atJ2YhJhvqC6cU9gU9YkwnxBc6H4ncsi0wjzBXfvPrHW4jiLMF8wuLgxtS1h
AWF+4N1tukdUrVZR347+7PRMcdj/jeo6YYej+uyhe5qrSsDKgzb7rv/CUVNu
2vpyZErAiu4gxTVHHJW3UvPPDQ1JKMQdqvxDbhVpEk+k5xRIwp/to1OKiUsI
8w1rt9i7WWqYA6x+2+jOThv7yZcA8w8Fpw//2DSZC7D6bJ1XLeaj5/8BzB/0
+T2M57rVBzB/UDlYjWNZcwBg/qBVXWKW4O1BgPmDLhdwM5/VhwDmD07PPA+y
thhi+4N3VIO1+tKHgOldtW908hooxslfX/owDLB67c2PTIvfDYwArF570V2t
9gt5DGD12t8lqLoPl8fY/mHTPppao+E4wPzDV89N2ziLxgDmHz60U+QIlB0F
mH/oY1weNRA6BDD/MJJ0kT/lXx/A/MP1yh03yDFtQFde9EN7BR9ss/FruMD5
Cxx78yftaBU/TMs/VOoSmQ4wH5GpGhtw9lY3wnzEnACjV1y5AwjzERVlb6nv
uDSOMB/x4S2j+kibKYT5iPFNGTIqt6cR5iPyPZ+J5XnMGp+CrzRG5kVg4rwA
aX3HFML8xOn/rn0YHJpk+4mXreQvlFlPIsxP1OHnGem7P4kwP3Hqg22m5Nsp
hPmJUr1VXGfzZhDmJ4psuxaU9X0eYT6iw9GKwq7QFdRxWXVqIUocXpEt3y8v
h6NqzsVaa4lIQP+8x0qzlThq47PL6/QiJODDOQmN4TgcNe0OFFqksNbH77fs
WmdXkX8mCol4JgkvpATPdbPOr1i9fPU1/vUn6h8CrF6+aawex83xCWD17yfq
mzuvXO0HWP27vmbCrM/gAMDq3/lEHHDCfYMA8x3Tzxv4PrMeApjvaHy4eJTX
eQg0ZCX3hOBXQUGsmZGR9DDA6uMvxKxTTmbFFVh9fHe6WQ4zZgxg9fGlYU0u
AvvH2b5k4pkznH2y4wDzJQPP5AebC48BzJf0OuPveXZtGGB+ZM4BHXeJot8g
96jBxXE9fphgY/rKu6gCYD6km0tKa7ztCMJ8SO2yv541VyYR5kMa7JDbUcwz
jTAfUvvRtW/OSdMoXPn8duccERhCuYpvODyNWv57FCSkJQqnOA0UjeymEOZL
jt0i7OeLmGT7kjuKRdbtM5tEmC957Nqm7zVzkwjzJc/bl8adCJlG5sbVdXon
xeF677ryEcoaGp944XmlkdUuiB87H4ajltxWfO5yXAKamGSq/qjFUT1NT9JK
miRgDiO4ErcdR3UU3Z04YSYJH6ZYl2RorqBZm56mtg5JKLUv1S1QaZF9vwBs
SeTOd9QA2P0CFPxmlQDlGID5lm8+106eLs8G2P0Bqlv5R1vW/wOYLxmXIv31
hUYfwHxJz7teFdr8AwDzJTeof7N8YTEIMF/yFE5GaE5mCGC+pJOhiUrR6SG2
LxlsPKSzFDcEvMOYE6MNqyDhz26rg0HDALtPIDjw/Ipk6QjA7hNYJ+X8+fP4
KMDuExAxejIbPzDG9i1HCpuI4kbjgO1bOiTXbesYA5hvKf1c6W36hVGA+ZYW
Zuk+W2eHAOZbUgV5zTbZ9QPMt/z0zbv2V207wHxLznd1Vbk7G4Gd38tc6bf8
0NM2xIMYmA8w31Iv90GSjV0nwnzLlNO/PnQV9CPMt9xCkRuMzh1DmG9JfrfO
dXLrFMJ8yx3cakv7z7Pit//zLT+2lkWHs/bL8Gu9Z+l9IrBh/z1i59IUwvzL
z6MxPd7cU2z/UlyH4wO3wyTbv/Tn1CnMd51EmH/ZJqmw/NFjCmH+ZeQprlBx
hxmE+ZdzOcXvP1nPI8y3pIiK7Lggu4L+PDwVvuGBOPzoEvGrhhNHjW32+PmZ
QwJ6bdb0vlSCow5ud7l80U8C/vigGNryCUdlnPqmoImXhEMy2bQu0zUk998C
YyVAEtIuNcyejGedN//vPod/bzLCA+PvAuw+h4Rz13cpyqUC7H6Gw0oZq3Mq
/QC7nwFynxCqRQMAu58hxwRFxtcMAszn5BDT1NU4NQQwn1Pf1uXcrgtDwLEk
qsyydAXsXN0XpcUxDLD7G/zzCXu1rEcBdn/DQz2t5zu9xwB2f4PqPbuilzvH
2T6oaobRapj6OMB80A3jvTKaOmMA80GvbDk/dthkBGD+55nVP+D4TAuwKi3M
vbKVH66j/ddKbPrB9j0378z1Krg7jDDfs4Pf5+QxmUmE+Z79vjN8qf+mEOZ7
mi/twN15OY2WO308clJEIJAsTyu0nkbMobpMvKIofPp501Ghu1MI80H3ZfGa
xiRPsn3QsTvtme6s+AnzQSOPGUynNU4izAfNtq5fszOeRmIy7q/0oTist7My
1ihYRcOCpeL/D1FnHg319//xYSY7GdsghHZKKZSoe1GSJGQPIaRIsqXNUllS
shRJtlKRVKiI5E2W9uz7kj17DIYZ2+/9Pedz378/HWfGmHvf9z5f5zwfz2fk
ZzHoc/HfC1l/Uqm0BQdXD6DBXwZkkYO4PrrbZ769+zMNCifYC7Lpk0o/jBV8
VD4gDlPFJVMn85awB8ri2no/xOGETo/qheF5Iv/CYDRvFS3IBaD8C5P3Mcrv
pZ4AlGcxGLMjPjpuCKA8i/G8iZlXWsMA+U+lrV+JqFsMg4R6z9DxPUvgVWn4
KZtvwyBQIrnLtogdztRL2WmungAdbmqXFTAy3LtPkmtQd4Lwq+66KvT25oNx
kJqTamU/yAPrTCWv0y5XA+Q//b7+jJBw5BSG/KcGfv0SV8LpWIvmO6peKBV2
nyjuj71Gx85/yddtuSMEPbmsr2A1kxjyp7r7eIiamk5iyJ/qUBdaBR5OYsif
avHYdpta2xTWfZj3eMMTMbjJOClkSJtU2i5aMvxFlgZJvHeeGf0mlRavcvwh
/5gGo7UeMeZukEpRnofd6zmvrScjAcrr0FLXuOe0MASQn/XFWH/BND5fS+4O
feiwbRHM6xzzeOSP39fNg+W/9pChPf/EZJ3WBPBL2umnqEeBr8SutYkITgDk
Ty1eUTyeswW/n3KfXTXQpcIhDVkrZfw+lA882Cpfiev30G8fBpToGF06+5T/
TyE4pPa+vCJgEkN+1k+NUYnaVvj++s/PqpcoeF5TegqbrvVrO9grBnN3lIo/
ekwqtUsw3Miyo0E+K4P1M1WkUseyI/eS+2lw9vdBPTKJVGocmul8bkIceuZu
Nv14Zo7II+no3Oiicl0EoDySv2o82ruuxwHkh3VZvvLkVsFbgPJGZF10ac2M
XoD8rL18g8F6wgMA+Vl1yaolxfRBgPysn8qKHr48OASQn3XWaJfVA4lhgPys
fw3v7vqB6x/kZy1pNNVZFYOfP/H2HF5vlsHVnc0h1r4jgMgf+Z5sVPdqFKD8
kfKq18eK28cAyh9pFPk0dPJ/99V/fljPUIdPfYcnAPLDFpKCvyaNjAPkhw3X
OBD1JWgMID+stLS07KsNIwD5YRvfTahZJeL/z39+2PxjPwuNXDsA8sNSvl7m
kC2pA3/dgzT54nih4otLnENOxQD5YX85L/7yMerAkB9W85oBt676IIb8sMo6
So+bT4xjyA8ro63vEsc9hSE/LEWw5cslU1xP/+eHjduebfXiIb5/1obN2nZS
IRtbzSWA6y3kjzVTDAzaLTRF+GMlqFeNs3B9hvyxFeLpzdvwn5E/9iY1fn0H
rr+QP/bi7B/OLo1pDPljP5a2eodtZGDID+t907BaanwRaxBxtdt2RQwK+n6u
se1dwfQq+m4MMcVg+wH11xc+kEp9Js8LMPxocGE/XefHe1KpfPnN3SeWaLB6
56Fyy8AVjOElnKdyVRzOnW0waRxZwFD+i026xMGSMX+A8l/krc8/9T6SAVCe
i2efweBqoUGA8lxqV1F2VGX9BSjPZVZo8HASNgSQ37ZxsNL2tPEwQH5bH9nZ
RXO7YfBOJ2LXvtQlENYs6u9NHwYo70Vl8ouPxaExgPJetiY5zYufHQco78X9
nMfpyY0ThF935eaWJ1243kZ+3c615F+XLccB8utKty7zHPQZBcifq162N3nq
bjNQWPI+mSHKCy9dL7ggafiD8OOeLgs7WcI3giE/7s9kRx4W8x+G/Lh1G1df
iamewpAfd0i7aa4f3w9v30dItSVT4T22zOkTTnTsbuIFvWA5IdjfcGhmDj9/
kV93dIN9o8LrScKvK++yPVAbv8+QXxe8mDmQ/3kSQ37dv/7HKvdup2N+fFWc
33aLwScp45ff31rGhpLqB1KKxOC5akmffjdS6U9dn1LJPTR4pa2yqRy/zySz
rZo8i2gQnohLI1mTSrutLn0z0RSHglS58JdjS5irlAoz4LM4rNH9IPzwIJPI
y+FV1XRhuJ4EKC9n0X7+7M7raQDl31yTWCmKDB0CKP+mqGrDAIfGMOEPzvzx
uOEUPq/3W7rO1YktgXJep611xfh690z3RGWxQ8OHHh2bOSbAt4F8a57XZMg9
fNDgOH4+ID+x6pSwolHWOPAcs2RPaeKBNZzdoYOONQD5gy2eDRU1+UxhyB9s
8dLsr2sQri9FPn9wD6DCqUvlGpk36ViKlLhO/00hyKIrCa3rnMSQf9hElJGu
ZDGJIf9w+qvTNnciJzHkHx7WP1+ci01hXS3S8oOJYvCUQHhe5y5SacSqrU/Y
JGjwbON+51s/SKWHfjt5vU2gQf2Izr9TUaRSlP/z66LGKJvfLYDyfQRiuqUD
JocA8hvzyTvMbcTvszlLBaNR/kXga3UtdunCMOBO2/dlZTMZaptwhlbtmwCO
Ym/NeXdToKhk/oUbkhMA+Yd7p6RiiyTomEf/THH3Piq0OyJBq8Pvsxbz40GH
PlGhr8zEh/i9+PnkzW9/swLXU7nH7daETWLIb9xVvNWg3mwSQ37j7FMFFSyu
KWzS/tYLizYxuL7+zLR9AqlUILy4a5cFDa6eLVb+/p1UOn7LcK9SBw0WV4gZ
sIng58mFCqmnA+Lwrunq/OYfc0R+kWnguSa9Fl0QaiW1HFsyD2xe3j2cqTgM
kH8Zdn09LIfrnfTWgjXfb5PhpeNnllzweSeLcftRRxIFDjh6MVJ+4uvfxwdf
DgvCRoWDlB/udGypvJMj34MKV1fN7n0VTcf+Gb8trJgWgt9F5xR4T05iyM98
7OPbXP1Lk9hIP6ewLzcNJnM7PootJ5Xanjxb2hBGg4GUrOXup6RSlJ90ROyg
pIn7dbC/q1rW5CcT6EjEVRzA57vcJK9Py78XwPiamsoKl2Hgs2P01yluMrQS
7TucietnTZ53tB8iFJjY5LasuXUCIH+zZIZLYAFjCnuif28f9zYqvOzRTl1M
pWPXpWssk94JwZzUOv3buH7qf/Lr9oadwnC/8NOdHsaT2FjA60NXvovBB7Wr
29JwfeRxOuFYxiEaNKDptExVk0pRflPHTtciYX8P0LvGL8rrIBNI9QwPPD40
DDasJydsMF4Avwx81jXhn//f1PuH+jVkmODlohaqgz9ftJr91rxUOHy7sss1
io7JOT8/u+4uFV6dVYip9sXvt8ul8rNCwlA8375QzQR/XjYaKd/dTIM/+iId
9WpIhH/6rvia3Sx8/+4T7e1tNlgEDwWlVP8EDuPzTHTpIz0yDL0hv17p4AS4
JZ8Xd8SKAl9OyM3HUXA9FmCu+cGQChvUfDdF49/H56/6p90bhGCnYSDkuziJ
2f1omzEzFoZspYLR4baTGEPbiVdlRAxORPXn8GeRSl9ndp8rdaFBUWrdTt3P
JMJvfXAlh0OTY47Ip7qf/o7nYdTMfpRPlbCUm3BL/T5A/uscc571D3a+BSh/
yn7cU7Oovxcg/3R96IDHRfYBgPzTAy9lt5sODgLkn96YvficY98QQP7pO6Uz
u1+IDAPkn/7+aaXuwYlhgPzT/76abjW8g+t7yXsx71KWQWg0PHLLfQSgPKrP
HtH/djwdBSiPilf9Xe/mOlwP/ZdHZVQr2BXdNE74rz+sOxg4p4fvt//818e2
+A5emBoHyH/dp2tn7h01BpD/+sO9wGzu/SMA+a+TtWbmVT4MAuS/nn9UKuvz
vgMg//VmTUHR0xz1ILvvwkrwHV744NhopejREoD819c72gNEv7VjyH8d3bih
3XZ+AEP+69Jnl5NKto1jyH/dWOr2YtXCJIb81+TVKtYZ+HyG/NeXY0Skzzyi
Y24XLUvXtFJhAFstt8FqOob82Lxlamu2S0wRfuz9Wythsfsk4cdW1Egy/u48
iSE/9hf2cu1fx6cw5Me2y6U7yGyexpAfu3F4MvI1HwND/usZxY/CJbWL2HGb
qYNqF8WgJNers0dqVjDZYkn7VQwxuG12XfpWXD8VmU45lHjhz2Pdbj/nQlJp
/iXnEjcmDcY88LKj31/B7Fwf89dcFId6xdIeLtRFDOWB5UrMHwf6fgDlgY0n
1B/NcXoOUL6X0bpn+nT2QYDyvcZcdMJpaX8Byvfqt7nLOfphCCB/t+PTvFUa
x4YB8nc/4/XY/wZ/Hq05OMa2310CxXnClVqjwwDlfz3/luHYvm8MoPwvGts/
twGHcYDyv7ZWtDXYrpsg/OGdOwfLnmtOAOQP/6BxU/HNqXGA/OFrPGvpg6Gj
APnBi5xftJZ2NAPhRzW7qvh54Wi868lznD8J//f+U8fT2OuHMeT//vbovWN/
/T8M+b9p05/3yFdOYcj//X3dn5ycB7h+ekz1HHtIhTdnJTbNuNKxZrq2MJAW
git/T84Ox01hyB/+KIZf+OnbScIfHnCE+sgX11PIH754capA/uMkhvzhP/Zx
ZwXI0rHnbJMfb+0SgxtUeLtjLyxjLv02vzLyxeCji8LNQc74fb7/ZdJuFVwv
e1/teYvrKXvB9i3q+TS49dx1vjQHXF8LWhud2iMO70yoaE5wLWO11M+mkiXi
sJd72lrUm0nkpz0toUblB1sBlJ9WZDa3b7dfKkB5aIXb8w51BgwBlIfGuCcy
4Ll7mPCj31x4eO4grqci1vS/qVy1BEwutOR9yR8G1QdT+zKfsMOS54ONrmwT
oFR+Tv/yMzKUfqF+aIf+BOFfNzDjumzwdhxYRbxvKv7NA7dnbj7s/bYGID+6
hmXRMTPXKQz50WmuaRumruD3AekwX+Bl/L5wf3LxXxgdU/uipzUSJAQfbIsS
v9w3iSG/+lZns9Qey0kM+dUTwy6m0sInMeRXf+b9q/BL3hRmK5vB/S9eDBY4
OgiIb8Xn4yXHABlR/Pmxk/No+UYqvbNzsPLKffx+1mPTuhuHz9P/5cHdvDG2
TzcxDKC8N4WU4NjmkSGA/O0Rr/K5L+Ln7eCZq4o7lheAybMtKhMew2A9Zfir
uBwZTkWHzQZoTADL49O6V5QocPOqymdmaycA8qsrx63usqHSsYVrUp1Z6lRY
WXb9Zimup95pt9VbFeJ6qkC4TRvSsSLp/XYRpUJwi9c9+aDbkxjyt/ORmqzd
TCcx5G9nzf86qrUyiZ3PFIqxbxKDSaYHuy/dI5UOBk4XGR2nwfFlvztOP0ml
OyeqIxnNNPhGyWcoTRrXIy4m/qBHHK6rNfG2XZwj8uwWsz4GUasB2Cs3xVvw
ah4YTytLOW0aBsgvn31Bbq4e11OJYvO8e2+Q4YZNRjPWuJ4yub/J1+c+fj/c
FNENaRgHS1dV7H0HBOHWt7pam0/jevGNk/XXs1S4nKNN232PjnVnx2R3/RPC
h5BOKS+HSQz553WHNN50+0xinzv2/4tZRYPpljdLRMtIpU/KR4WTb+Dzhab5
0JUXpFKUpydT6CrysCEI0J89VfL7yARslxiqDfj+TXtVkaCDLYCjSxUMJ6dh
cPd+fPVVNjIcqdgRX7BjAuw8NMOpwUeB26h6Nznwn5Gf/liyiJPx+BS2vb/I
tn4zFS5wkP50ptAxya8kiyc5QtD66L33QSmTWMPSywCgJAyvFm1pbMKff7eq
3dtvVolBj6lwn/lrpFLdk9WKFTr4fHS7WyQf1zMoz09Q3nCl2fwsiO/TT45X
YQK75XW+JQeGgYiqmfdZrQWQZPGwfwL/fgeVGLeKvpDhtr29eaa4vonLmbNb
z0mFbfEZ5mJ36Nii0bYS1QgqFOh6El51iY5ZN6aIrl4tDHdVZN3cdnwSo8iE
8b9cT4ORsatuu+B6Dvn1hwu9hlbbDoOtG1VKpPYtgsOfOFs3Xx0Ghd4an99B
MtTl2TUcj+u3oJP0kI9GFHg7qv75RZ4J8IUWYHNdH9+vf8meQWn43/O+4uxV
IwQvRz12arg8iRluLPx7/qgwFH4XmqB/YhLziRinaw6KwZf1nUHjz0iloWk0
/U5HGpQsKdj1oYJUOhQtyVNHF4dKI3ttNu2ZI/IKZQa9HkZQNgHk/zdaX1FR
azWM6xj/MQkvMvzR8b0yAT9vosK82MYdqbC1UmXsPX5+lzkaxgoNCcFk/zLt
zy6TmD2WXlPrLAwPvza9XYff354/szN+LOH37cE9vCEfSaU2qob6JQ+ZIMRl
TtX5+DC4Wu167FfqAuhdKYjYZj8MZMp8hiQXyHDeffFPk9oEOEzjSTktS4Ub
zF/11eH6If+tq5P3RmHI67Z0Sgtf/xnDff1LGjRol10+nYKf3yhP8dM9Mx2P
GUcwac7cMiO3AIJXXd/zHt+fdZl+ZxPzyXDweHzhXlxfvenTTf2wLAg5n+aX
xePzpObtEwvanMKwTCdq5gU+P+Xxz1b2S9Fg73rNLo5fpNIPcxntybIs8NWI
MvcMv48nNGIrB3eQoRHG/7IXTIAe/V9JYtpU+Px2wPon+Pmyo8P3V/pBYVjq
Zq/ric+jatEh7LQTNOh0zm8N6yuu9//Lb/RP2PdlI+UYyErUesDZxwIeXb7P
0vHPm510UdH6PhnuqC6IU8ef92VGQ1XWnBCUEh85XWMziQmN16hZ8tOgxxGZ
ho5KfH4VWxBS6mQC72u7Hofg6yea6yYNlKlwo2a0QhO+f6YP/UvgVROGCjsv
Kajj+j/+vIN3xBH88+RXwfnfpFI14dzibvsF0Pfl1JEJ/PXz73xftLWQ4Qm9
eoHLWhPg6rVMmejVVFghBdZ6x9KxS2t7t7eLCcMN6w0VPPH5xlRJwuzCVho0
23SIxMCfv8EW06f8TiwwGmxhkod/Xzdf9pdcNyLDndJ5ygm6E+B1v5LUhAkV
jpU92OeAP+/nPBfZNM2E4YSpXf0iPu8hvsG8R7iAVc8g8ip3DuoH+yY27Ed5
lU/eOJ9MTbgHEO8Q1EA/kDyZB1Ae5XRtT/LT9l6AeIWg70miq1j9APEKflU3
6KLdgwDxCj0fh5iZe4YA4hWUWDMX5IVwvf8fr5Ce5Xh2HL+PEK9wSqs1gxwx
DJJstjabxS+DPwcV5Le4jgCUT/l5reesfeooQPmUkdWv+yx/jQGUTznFZ+iR
XD9O8A55ttat7vj+RLxD1LWCdeUz4wDxDoqOwDA3fgwg3mFTUO+0tP4IQLzD
4R3BPEJfBgHiHb7s/GK43N4BEO+g+/NG312FeiCQOtKtGc4Lm7CVBUOAAcQ7
fKAeu2UQ0o4h3mHLg7d3ypsHMMQ7VN5tqLohNo4h3uFhs6f+s2l8nvuPd5B+
peorp0/HEO8ADQSdVJPoWPS6smesJir88s749lchOob4h/EwvqocqSmCf0j+
vvmjqcckwT8kZ9gP7nCaxBD/0MITomljOIUh/mFP0dlhM5lpDPEP/Re3kmtX
ZjHEO9zWYLmSKhYxIVJ+4V5fMbhmtvzuhi8rGN8etd/CM2KQcxrGXnxLKu3g
yLv9xJMGm8auRkri5xWpsZHNZ44GlV5/Vo9PXcGETrl+TPYVhxo9Tr7X1y9i
KB/Ux1gq+wqHL0D5oMFRfuOF9GcA5X3CJDhkuTAAUN5nv8Yqv/eJfwHK+9x5
onBn6PshgHiKl2sXgoQNhwHiKa41bqL9b7+9+quj9yJkCYTEWFe//zsMUB5o
KV/IqjXqYwDlgYZlGz4qsx0HKA90B3StCJGbIHgMh0rmmul9EwDxGHOs655K
Z8YB4jEU7da6yUaPAsRf7A9cCssgtwCukeXkRm5e6CWwQqOc+knwFsKn1Itn
3w9jiLd49GjHuszSfxjiLbTnOgpqsSkM8RbzI/Pkq/F07Cqt8eHsAypc15hQ
qOyG368pL+el1whB4Wr5pz0PpzDEY9id3Gjsnj9J8BgBiuZfH+PnP+IxHA7T
47wKJjHEY9wwWFBRk6BjiK84vPfApTPOy9jGcDmt7Hdi0CvFo2mfI6k0uqiK
R3cnDebEr5VLwO+P658fHZd+R4Mtt2qeWeDzQYnb93tuauKQ+/OLd0Niy1go
3y32oY/icFS1ReDVLSaRp/pj+cSBgi/mAOWp/nTLvQXzUgDKR5V5oHiSeXkI
oHzUy24cLnGqwwDxHs/1dK8fxs/7zkU5PrC0CORk/7jVvh0GHXM+Tu9T2OGl
NcZ+C8vjQEOLprPzMRmSVanx4fh9jPgQ3wWnUzkF48CwtQ/+/M4DhXqO869t
rwGI92BTkq5dcJjCEO8xIP/0wkNcv1j68amF++N6Ztm1NfgWHbsu5QDHA4Rg
9a6ewNeD+P3wHw9i80Hc6KfVJIZ4EB/unNN+IZMY4kHUEh82uGZPYVIVbtem
74tBdSsbxw2bcf1zKWBsqzANJlPd3o7h992b/uf/TsbS4J4h8UMHEkilKB/2
fq4qJScvFKD8100KLmFzf4cA4kceKrnU8eH739Zrw0MTBn4/2ZCe+Z0bBsr5
JYc3SJMhVnWM+8jeCdBwQRjsUqDAs4n0jGf4fkc8yKqGxIOi/HTss/6O8ajd
VFgoZzuTgt/PTz4kLzkWUKHYaJ8dvw4d4/A2t40sEYL6py5FlUZOYogf6ev9
suUHru8QP/JoZ6FbAGsSUzJopjg3iMExPrml6WhSad2CwJaTxjQ4VqUdK43r
BbO06IK2Rhr8/NG61lKeVAodJDby/xGHauHXUq+JzBP5tq9v8c4p/1QHIiHt
QoefzYPtZWvHlTcMA8SjAMoPKy1L/D5XFafQA8jw77PHMQDXAxtPzTrAaAo0
GkhJsWsZBxWH9Tyt+wRh+qWNsXud6FjVhs03a12p0C7e++6Z+/h6t5Gej44L
Qb60GOZ7x0kM8SkZPhcuVnhNYq8trW3TyDT4NCDYuQIjlVb6Zu8LDsb1z+4Q
7dyXpFKUr5vH9vsYWB0EfnJHqXK9ZYL+MPo6Hnz/0vLPcbgULIDwlqWFg6fw
+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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwNyjtSwmAYhtEf3AVdUAHvbEHsJDMqqAtwxlKtFYWGinEBIkm8FK5BGGEb
qHEfXipPcebP+3yJTi5a58UQQoGYFWokwiXbCyG8+mGXb/uNPSL9Tltlbqdc
0dDHWpMfe8o+ZX2orfFuZ3Q4oMWi+73bOh/2A9e0WXIb6Rt82o/ccMiyW6Jv
kttPdDmi4pbqW3zZz/TY0SdazK8941TL7TNK9O0/7y3H7lU78/3irXsH3sA/
X3QmpA==
            "]], 
           PolygonBox[CompressedData["
1:eJwVyzssnXEcBuCPCopE0sQltmJkdutAsdcpA0VcFto6RwdMDBUSJPS4NGki
sRhMqGskpi7FOdqNdlaTulQNOulzhifv733/3/e0KxIKJwdBkMQMpZTw1lD2
KAhWPVZzqW/wgRf2r7ZmUonZ+ii3r+k1XOmbdNhO9B5yiNoabAfuFtKIJ/63
nbkHKCRsq7Ctu59zrQ/oF+5htvRO/dTdSy7v9Xs5yaz3kH7ofpXo7vSExP/y
rxxjyZ3Dse/D8pdtVQ7KTzKbfYr0Cfkgt2VULssCvhDxf6X8bF+RtXJaprDH
jfdB+du+LkfkonzCtrcu+cP2mo/uLPLco/KfnGLOdy/1I3crjxnR7+Q437xH
9HP3EMX026psG+46/ug7dNt+6m/IZ97WaIu528jgu+0dz+ybej23+i4LNNnj
tnYy+Q/wO0uv
            "]], 
           PolygonBox[CompressedData["
1:eJwV0jlPVGEAheELhsICJCGxUUgoBRSDCPoDFLUQwUoWgZGwNCA2Ao2gwGhE
LShISEhwYbcxFiSEHXugV5BNacDKChSer3jznnO+O5k7c29mrLm0KTGKogRM
IhtZKDOUowIXTkXRkIvysKEP4zlu2Gdsd3GoL6ASWfb3tiv4qY/ggW1Fr0EK
Xthu2mblYhzpT/V9+RkW9Tr9uxxu8By69UN+g4fOs/UPcj5eywnYtLfwb1sb
BuRUjNrLeNU2wTHu49M4E76T//JXjvMQn8UCuny2iOfs43yP33ESpvHPeSsf
2L9wBw9yWvgMlpzX8w/7Z27mfk7GebmHj/gtqlybo3+Ur2JLf6Lvye0YC89F
X5MfITX8L7Zbtnm5BP/1Nv2P3IllvUFflx8jHfFw3+F3oNr5Rf2TXIBtfRw9
qEEMl5wPOyvEjj6BOG6H/8hWimP9GxptG3oLMsJ92nJtI/I19MqJmMKus7kU
7wFeyrW4HJ6X667jlz6JV7hjX7TdDy8sTgDTIFto
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{41, 42, 345, 344, 385, 420, 478, 561, 671, 808, 343, 
            447, 506, 589, 699, 836, 384, 525, 608, 718, 856, 419, 632, 742, 
            880, 477, 950}}], 
           
           PolygonBox[{{45, 47, 372, 963, 795, 933, 658, 3775, 3776, 855, 407,
             537, 620, 730, 868, 441, 500, 583, 693, 830, 371, 465, 524, 607, 
            717, 854, 406, 440, 499, 582, 692, 829, 370, 464}}], 
           
           PolygonBox[{{329, 46, 40, 470, 553, 663, 800, 334, 443, 502, 585, 
            695, 832, 376, 411, 469, 552, 662, 799, 333, 442, 501, 584, 694, 
            831, 375, 410, 468, 551, 661, 798, 332, 374, 409, 467, 550, 660, 
            797, 331, 330, 373, 408, 466, 549, 659, 796}}], 
           PolygonBox[CompressedData["
1:eJwV0MtLVGEAhvEzoxUUBJMD2kpnXZssW5jlH+AlEDMXaSDV6IwUOK7URRcX
ml0UFIRCKBeaM2ZKiyBEusyoLbvsq42OtbAWuot+Z/HwvO97znfO4SS6brXc
jAZBEMFTnMBJpA2PsYzfqHfTIs6WBEFK/4QDejsKuGh/ZIvLSXzDVdsr2y9c
0HOosfXoCbkfP9Fr27QNy38xpJfyIZ7AZTmPZvmh+yr4OUZt+7gjl/ERnsIN
OctfuZOXnFnlGJ5gyL7EO+E3hHb9DZeEz8d5+xxn+Qx3u/6Oj2MW4/bX/I9H
uIrf8lFMIxP+K/7Bad5wfo3jmME9+wr/4cHwvXwwfC7a5I9okh84V87PMGLb
w235GB/mSVyXv6BDfun+QbmIjF7U6+QFnNaTeqXch+9I2dZtd+VdDOhRvoQP
aNTHXI/J1/AZV2yLtm2c01+gOvznegERvRXv0WC/b8thC7W2eZwKv1vP4z88
nFDQ
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt0necz3UcwPEzQyLrIsXdWVmVUaTMVMhOyEjZklmUKJtKlJ09SkRlZp5R
VMpIIZRdyGypUMrz/Xj443mvz/f9u7vf9/v5fpLb9mjcPU1CQkI1P6L/s4kq
Lt7QcnpRa2pbLa5ntLqu1Er6jz5IAesjuoh7rf/Wwdxl/aumUoYcrr/VmTxP
KdfndQ2PU8T1SV3Gq6Qlbu4TGU27uB8Kmh3VDxhCWXKa7dZZ9KEp6eLPzT/V
MbTnoXg20pOBjNwQ3+X3NuubdOBhypPLfI/Opi/NyBT/23yLvkVHHuEecpvv
1Tm8QHMyx/eZf6Zj6UQtksyO6YcMjb0jj9l3OpcXeYIsca/mn+s4OlObZLPj
+hHDqECi2T59h36Udn1B19KCoq5P6XIqWl/W1+L9WP+uG7gx9sX1Fzo+9sH6
T+1CCeuzWkNX6f36bzy/1tEU/fH6uVoc96SXYj91uN6tv8W50fVaWf+L/dCK
eovu16r6buyp/hXvTV/SO/UXXccD1le1JcWsf9YV3Gd9RV+Ps2H9h24ka7xr
11t1As9Q0vU5Xc2jFHL9ky5hRPwv8pod0Hn0pxV3mJ3WjxnFTXEuzL7UiXSl
LoXNTuhSRlKJfGbf63sMoDXZ4pyYf6WTeJZ6sb9kjzPgs206mW7Uj+fnZnLE
O/P5dn2b7jSIveVW8x90Pi/zJDljL8x36BR60JAq5Dc/qAt4hTbkiucz36lT
6UmjeEfcZn5I32cgT5E7nsf8a51GLxrHmeB288O6kEE8TZ54RvNdOp3ePEZ1
EuMZffaNzuA5msT5i7MS7yb2M54z7j3uJ76DAhQkiWRS4t3G+6AIRePMkGrj
rwG1M4tA
           "]]}, Annotation[#, "Charting`Private`Tag$209080#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Edsj3EcB+AXcXBQEokDtSk1ao+bvaqlrV27Yh3MBFWrVpuYB6tDqS4j
LiIp2trO9t6bC072fH6Hp9/v5/N7/6P/1SpjcdqiWlEUJfgzktg6UbS7dhS1
45acx3ISGUUz53ucxXFbzmcFSTR3tlffnjtyASvpr6/UjeCLXEUyLfT7dB24
KxeSyQD9ad1IvsrVjKalfr8unntyB8/7gLmKgc7O6BP5Jtcwhlb6PF1H7stF
ZDFIf1Y3iu/yOVJorc/XdeKBfJDVpJJGG+cFzjrzUD7EGsbS1lmhvguP5GLW
Mo52zg7oE3gsH2Yd44lzVqTvyhO5hPUM1lfpkvghn2eO7rG8kCZsln+a25ng
vL180F5hdjO3mhHxRqX51DVLzHfOMimVJ8nX7DOpT7ZuiK7ansxP+QITw2uu
P6TrzjO5jA3hPphMR4+Tbk5hKvGuL3ZtD57L5WxkqL5GN5pf8kWmhdvrD+t6
8kKuCPeruy7PIoZNumG6c/Yx/A6fM/mjfT2X5LnyE/simrJF/mXuYLrzTnKJ
vRfb7LV4qV9qvtetosDekCP6dPOG7riZYe4269EgPKb5xTxl5prFZmMustlt
h5vn9cfMFHOXWTe8t/wJn3nzk/6kmW0WmY3CbbjsfF543/QnzMXmfrM+sfYc
87e5kxmu7SyX2nvzSl4mf7BncTS8L/JN+2wahtdFN0J3wZ7K3/B9kj/bN3BF
ni8/sy+hGbnheYf/I3xmnHeRy+x9eC0fI4dZZJDgvNxZX97Ix8kNvzfhNdKl
8U++ygLdc3kpzcPz1HXVVdj7hc+5vXb4feBt+E7ERNF/FSia6A==
           "]], 
          LineBox[CompressedData["
1:eJwV1FeQTmccx/GjrmAYot+od2FGjV6iziASvWQRNcrGRp+JMkpidItowyQj
MbNYy9pVRwzReye4SqL3OsoN+fwvvvv9/37POe87+5zzvFUHp3cbky9Jkq7+
7C+RJHN5KGoXSJLM/EnSGHflLMxDR/1fuu5I8Bkd1Q9DHWsbdU1wT96C+eik
P6TrgXw4phuOuvpNclPcl7ORqrskD0UpLNB11h0290R+/Cg/51k4bn2U/I95
HCrjO1093WZzMzyQx8sPzFOwVe4vXzYPwy/moihtnsFveC7Wm8tjoeu/5CO6
XsgwF0aB+Dx+wbk8m3/lMjiAE+4bzf/qs3k8r+YS2Icq8T38gXdwBv/BFWOP
McL99TlLn8nNeVF8L/bgofUJYf02nspruRT2Y5v1AXxFn8XDeQUXw6fmmfyW
5+F3cwUsck8XPqrrjaXmFBQ0T+WX/BNOui5N/s88AVUxUtdAt8XcAo/kHAzU
XY3ngjJYrPtKd8zcB4VwKp4jPtdnyy3xWN6OJbGPqOldS+OGrtlqvRWeyLnI
wNf647q+KIzTuu/RKPZC/gJP5Tx8q7smj0DZ+D91XeOZmfshBWfift0t80RU
QxyWxrocc2s8kyfKj8zT4jnKg+S/Yz9QLt5T+R3PxzLr3eST5m8im4sEcT+/
4p/xm7kszrp+DN+O95Yn8RouiT9RPZ4ff+SdvJQ3cKU4c0h3fxPert/IbWL/
43lib5wj65P4sT6Hp/O6OAvYaW0wX9eNwkpz8TgT5tn8Ps4nlruuu3zKnIpP
MF1+zXNwznq6fMc8GTXwg66pLtfcFi/kXRiiuyGPRoU4m7oeutPm/iiK87qx
aKbPk9vhpbwbK9BTf0Y3AMVQy3tzQT8Oza3t0LXHK3kPVqJX7LVuIIrjYvxm
oEXsg9wBr+W98fuouymnoSJW6XrrDvr9/B/RXq41
           "]], 
          LineBox[{3775, 658, 933, 795, 963, 372}]}, 
         Annotation[#, "Charting`Private`Tag$209080#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1WUYVVUQheFLtyggIUgISksrCEp3dykqFg2iYndRBqWEdHe3ICDdSCit
IqGUClKC+M6P71mz1ux7cp+5+Tr2bNYjSSKRaJUskViPIikTiS4pEok/6P7k
icR39DafIlUi0Yn/mv+Rv0qr0R9pNuTRe4kulOXGdnV6zJfPpudlbXDFOZrz
Q9T/6Q3CBP5XviHq8J/ym9SlsYHf4DdFZV35A3xn5MXLskWyPFjAX7WuhWwo
f5sfjLrYKC8m7xbXy3dBPlyTb8JmbMFWbMN2FLe+u/U/WdcV9+G6fAce1Ouh
d1DWDflxQ95SPkyewBBZPeyUl5D3lB3iu6MA/pW3kn8lT4KhsvrYJS8p7yU7
zPfA/XhFtliWFwv5m9a1ln3NJ8UwWQP0lW3my2Ajv9u6UrIX+SN8Twznf+Kr
4wG+D79EnQ+L+Dn8BXVb3PL7NvxwdbI4pjplXLd1E+kJ2Q3aKI5Pc+Eue6Wh
fj/1FvklWpb+QDMhg/4m/cXqf+L6+afoSf7+2E/8Huctre4tP0uPWr+GJuL8
+r34EeqD+tdojXhXNDsy6hfUf1W9VP4nvY/uiHMjnf5i/bnqi7EPaTv6M82L
/5y7LR0hS45N6lTxrP1mEv1N1hiN+P78VnU5bOaX8FfUT8f9Ok4Z/iX1Mb0X
UQivyZbJ8mMJf9u6drKR8Z1huKwx9srLyl+WHed7ozAS2KdXTu+VuO749lAE
SdBePkqeEiP4Jthv/UPyPrJf4ttBUSTF4/Jv5Kkwkm+KA9Y/LH9V9mvsPxTD
67LlsgJYyifDE7LRfGqM4ifzJ9VN0IwfwG9TP4S96syxL+RL6dXYV95HR3qK
fyDmi3OXp6/JzsUes3YtTRLvwdo+/Ej1If3rtGZ8izQH7tQvrv+GeoX8r9hT
dCe9I2aS/jL9eeo/Y07Q9vFMaD4k1+tAx8jSxDtVp47nI59CT8maojk/kN+u
fhhb+WX8NfUzsRfdQwX+dfVvsRcxij/M18KD/Jv8yvgGsZxPgSdlY/m0GM23
wEHHekT+RnwjsX9QAinxlHycPB3G8C1xyPqK8jfjmcY7Q0mkwmG9Snpv6Z2O
54RSSI0jekfxqP7b+mfiGlEaafC0fLw8PcbyrXDM+sfk78h+599CmVDZt7KC
WMGnRUfZBD4DxvGtcdzvK8vfjf8c/m2URTr8rPcLqui/F3NA9g7KIT1+1auq
937sE/5dPIQMeEY+UX4HxvNtcML6avIPZOf59/Aw7sCz8knyjJjAt8Vv1leX
fyi7wL+P8nGNslWyQljJZ8Rzssn8nZjIT+VPx/5HO/4zfoe6PLbxJx27huwj
/iL/Ab7hj/C1USHulV+tLoxdMdfimcrn079kj8e3GbMt9r38eTol7i1mMN1C
08T+tecn6U9Tn5H/S5vTo/TemMn67fU/V++UX6YV6D6aJb4b/e36y9XXYyby
z8b+4QvGzOVPuZ+a6o9j3lq7Tp00np16dMxveR08Eu+J/05dBKv4Bfzf6idw
F/8CP1WdCZNjPuEL2a74fcxx/rTz1ZJ9Et84/xEqIhM6yafJM2NKzCecsb62
/FPZ3/zHqBR7QLZGVhSr+czoLJvOZ8FUfjr/u7oFOvBf8rvVFWOu8Cv4G+rn
4htwnjp8X/Ulve/VyeI61WPoMXldHFLfg0djX9G1smLYHe8yno98Ib0kS3i+
HegJPj/u5rPod1HPiL0ZWcwgmjbeuf40/RnqP+Q3acv4D6K5Y/7qP6k/SL1H
/g+tRPfHceI5662k/8qejzmgLhTHcm91ab/YI9asj3kZz1Q9lh6X18NjsZ/5
deriWMPfja6ymXxWTI/ZhcGyH/hH4975s85RT9Y/rovvi8r4UPZ9zE2s5bOi
m2wWnw0zYj7hnN/Xlw+QXeH7oQqy4bxeA72Belf5/qiK7LigdxEN9T/TvyYb
gGrIge7y2fLsmBmzDH9a30j+efwP8QNRPfaibL2sBNbx96CHbA6fA7P4mfxZ
dav4v+CH8Hvj2WEP/y1/U/1C7G/nacx/ob6ht0GdIq5TPY7+LK+Pw+qcqBH7
m26IvU5LxjFjJsQz1FtEL8uSxD6I/ye+ALLyOfV7qufGXIo9GvOKpou9pT9b
f5b6nPwWbU2P0zwxK2Iu6A9V74vnTyvTA3HseM96q+gtWae4NvfVhP8yZlLM
H4znf+EboCb/Cb9RXQrr+VzoJZvH58ScmL0YJtvPV8Fe/pJjN5UNiv0f8wO1
cC9elM+X58LcmJu4bH0z+eC4r/jGURu50Vu+QH4v5sV8wleyA3zVmJP8av4/
deeYAerCyOF5/OO4/wPzYscl
           "]]}, Annotation[#, "Charting`Private`Tag$209080#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
H7CWJ58=
           "]]}, Annotation[#, "Charting`Private`Tag$209080#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfcjnUYhvEHZW+SFFkhkr0yoxCFZCWRvVeRFUJlb2nYq2GvhpEVyqy0
rYyKMiOjjPpefxyf6zzO67573/fx3L+7PG16NuyRJJFIjEyWSJRJk0hsTJdI
nEubSNTDYT4ZHfG7/m701yfHBl1ZfKY7z+vjCJ+CTjilz44B+hTYqCuHTboL
vAGO8qlIkT6RKK9/R1cQnXWn+T0YyFPiM115bNZd5E/jFz4NKd1fQf+urhC6
6P7gOTCIp0JF13Tj++RN9jl5Pb6CV0YF3Rb+l9wQx/jDrmml28Lf5Kn4I3xG
/Ax5hvygXEvuL/8sD5VXyl1d/6d5LybqXrFra07jqeVKcnd5prmfDzKX8tXm
ZvfmMuvz6fHfs+9lzovf16wSn7f5Kl9oHuevmx/zdfE7un+rfEk/lj9jPmeO
0x23Kya/IG/VT+epecX4XXhh1OYD+EG5m/0Z+T4M5mmwRXe/axroVvGq8fnq
tvHLciOc4G+hO87qc2KIPi226irhc93fvDFO8rfRA5Wx3e6Kvgl+5e+gJ6qg
Kqphh2uu2jfFb/xd9MKj2Gl3Td8Mv/MZ6I1z+lwYqk+Hbbrc/pan47Pn1eK7
yYfxE3J1+y/k6/I4/bNmC3O87n3zlH1xszXfZjeTp+GV+CxeBC/qzvP78SpP
j891NfCl7h/eHKf5LKR1f2X9bN1DeEl3gefGMJ4B23V5XNdQt4Y/isd0u/i/
8e+NP3gJ17TRfc5n83Tx/eFzeFE8wQfyQ3If+4tyHgzn7ezelDPGMyL3kL+S
d7gub3yv+FreW54vV4/nUh4uLzJP8jfMT/h683H37ZZv6MfzFubz5gTdB+af
9iXNtnEWmNvtXzbf5yvNOfbpzap8qjnXvqs5kz8s15EHyYflV+VVcl/3/GXm
xQh9e/10OZNcRe4pfy3vdF0+3oh/xGugpm4Pvxm/J87wucjgumr6ebpi8Tvq
LvF8eI1nxhe6Wtiru8Vb4iyfh364rM+P1/VZ8KWuNvbpbvNWOMfnoz+eQB3U
xX7X/Gf/As7zBRiAv/UP4A19VuzSPYmvdAm01l3gC5HR3/Cobr6uOAbqrvAC
GMnvwm5dftc11n0c3y88pfuaJ0EbfpEvQibXVdct0JWI80x3lRfEKJ4tzgnX
9OLfyHvsH+BN+Cf88Th3+Qj+q1zP/hs5KdrG52c3Mc5nfSm5nbxD30/+QH5P
n1muEWdinFvyLLmkXDfOX3mueYQPM1fH3xS9+67JhTCJj7bvYL7Fl5h3x5lg
9o7n2TzAXzGXxXNn7nV/AbMpf8v8NJ53cwGvKT8jvyb/Jo+MvVzfPQfMZGgX
/9b6SfKH5iW70mb7eJ+ZO+37mx/GeWOXRX4sni99KQzWXY/3EMbw7Nina4Bv
dXegve4y/wBZ4zmMz0tXGkN0//DCGMvvibPENS/yb+X99gV5s3i3xLsuznf+
Ov89nnf77+Q70SG+k3aT41zXl5E7yF/oB8iL42/U3yXXlKfFs23X3ZzNy8hP
yoPj2TKP8uHmmviOmEPd+69cBJPjfWbf0XybLzVzxHltvhRnp/ldfD7m8jin
zK/cXyjO8DiP4lyVF8q14x0kvyGfiu+h676Xk6MjvxL/r2PfkX/JF/NsvFac
W7xsnDe6G/whjOf34mvdM/hBlwKddFf5EgxDI/yoT4nOdtf4UgxHYzTBT3ap
0MX+Ol+GEbipK4oJ+vvwja4pftalRlfdP3w57va71o7PXlcOr+luxZmJiTxn
nHeu6cO/lw/YP8ib8w3xjkATPpKflpvZH5TToBtvbTcl3jv6cnIneZd+Bc/O
n+CLeY84w+XycY7IQ+L8MX/hI8y1/NP4brnvtlwMU+LZsO9kvsOXmbniLDL7
8jnmD/E9NlfE2W1+6/7C5nP8bXNjvNvMRbyO3FQeJf8hj5LXyc+655CZFt31
N3h5u858N1/J7+F14lzgFeLdpvuPF4/vI78f3+ma47AuHXrobvJVGInn0AJH
7NKjp/0tvhqjkPAzSsTfrc+N73XP46guA3rpbvM1GI0kri+pn6rPgx90LfGL
LiN66/7ja5HDtXXjWdE9gjG6pLpS8SzyvHEO85f5j/KP9kXiPc0/433l9+S6
8R2IszLOkXhv89Hmet7KPcfMTPHdjHPEro05Nb4DZiI+O7MLn2HuiXePuYSv
Mj9y/73mk/zNOGfte8a7ni83K8a7Ic6CeNeYx+L7HPfF+eXeZHLpuFffWX5X
zifXlPvJP8k/ue4h/jzfFGcOnuVj+Jk4w+yPy5nxEk8Sn5d9V75X/tj+Pv5U
/E68Esbp7tCV0U3n+fGzrjVO6LKgjy4pPtGNRxuc1GdFX30yfKqbgLZoh1/t
7sLLdndgnW4i7vSzysY7R/cADura4zddNvTT3Yn1uklI7vpy8TzoCuCQrqiu
pW5zPI9ozsfys/HdkDfE8x9nuGv/B2cQ7BY=
           "]]}, Annotation[#, "Charting`Private`Tag$209080#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8641498053006544`*^9, 3.8641498163830686`*^9}, 
   3.8641500005034804`*^9, {3.8641501587812567`*^9, 3.864150182278652*^9}, 
   3.864150219213699*^9, {3.864150367042856*^9, 3.864150408971287*^9}, {
   3.864152289892559*^9, 3.8641523173406763`*^9}, 3.8641523981195335`*^9, 
   3.8641540457742987`*^9, {3.8653427117485933`*^9, 3.865342740051545*^9}, {
   3.865342819885024*^9, 3.8653428391798563`*^9}, 3.865342879248047*^9, 
   3.8653431544190807`*^9, {3.8653431900187006`*^9, 3.8653432862689314`*^9}},
 CellLabel->
  "Out[377]=",ExpressionUUID->"f5c13382-25da-431a-bf8b-ef206a9c3dfd"],

Cell[BoxData["72.29442895632862`"], "Output",
 CellChangeTimes->{{3.8641498053006544`*^9, 3.8641498163830686`*^9}, 
   3.8641500005034804`*^9, {3.8641501587812567`*^9, 3.864150182278652*^9}, 
   3.864150219213699*^9, {3.864150367042856*^9, 3.864150408971287*^9}, {
   3.864152289892559*^9, 3.8641523173406763`*^9}, 3.8641523981195335`*^9, 
   3.8641540457742987`*^9, {3.8653427117485933`*^9, 3.865342740051545*^9}, {
   3.865342819885024*^9, 3.8653428391798563`*^9}, 3.865342879248047*^9, 
   3.8653431544190807`*^9, {3.8653431900187006`*^9, 3.8653432863019204`*^9}},
 CellLabel->
  "Out[378]=",ExpressionUUID->"d1c4ea6c-56b3-4dcd-840f-1ba8c5f8ffc9"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7e518428-48d0-4ac3-961b-c04116ec4574"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 94559, 2337, 3012, "Code",ExpressionUUID->"400a7af6-aaa4-4593-a9eb-a74de2e22e0c"],
Cell[95120, 2359, 307, 4, 56, "Text",ExpressionUUID->"982e74f5-390b-4bf9-a720-2fed731db11d"],
Cell[CellGroupData[{
Cell[95452, 2367, 11862, 305, 534, "Input",ExpressionUUID->"c28652c3-ba56-4a0b-8e4f-0e46f1c2c441"],
Cell[107317, 2674, 1287, 20, 48, "Output",ExpressionUUID->"0db63993-bfcd-44af-833b-658b0a448a92"],
Cell[108607, 2696, 64515, 1149, 238, "Output",ExpressionUUID->"08ef3044-6c67-4a31-af5e-e3bca7c51245"],
Cell[173125, 3847, 68486, 1219, 239, "Output",ExpressionUUID->"9bb822af-6f44-417e-8055-2e8600c22fe6"],
Cell[241614, 5068, 76492, 1352, 238, "Output",ExpressionUUID->"45a5189f-5e25-4d83-a0c0-220fc331bbbe"],
Cell[318109, 6422, 1164, 17, 48, "Output",ExpressionUUID->"b44a5826-39e9-44d1-9ee8-0c1d5e8b69aa"]
}, Open  ]],
Cell[319288, 6442, 315, 7, 56, "Text",ExpressionUUID->"a4d3e002-6aa2-45cc-a329-b64caecefa39"],
Cell[CellGroupData[{
Cell[319628, 6453, 9933, 247, 325, "Input",ExpressionUUID->"539af9eb-2787-4ce5-94ed-3f323d9493e1"],
Cell[329564, 6702, 416, 10, 30, "Message",ExpressionUUID->"fdb70001-01b8-4516-83de-b1817c58e716"],
Cell[329983, 6714, 59951, 1078, 238, "Output",ExpressionUUID->"73035527-4372-4b92-947e-af33a5e40ce5"],
Cell[389937, 7794, 57245, 1033, 239, "Output",ExpressionUUID->"e0c6e0ce-8682-4b1e-9589-41bc5339151b"],
Cell[447185, 8829, 70987, 1259, 238, "Output",ExpressionUUID->"38625336-ad96-4163-a331-8b7674d70276"],
Cell[518175, 10090, 1210, 19, 48, "Output",ExpressionUUID->"87726a6e-632f-46e3-b69a-00be5991b1b0"],
Cell[519388, 10111, 1340, 22, 48, "Output",ExpressionUUID->"f713d242-aeaf-4352-8417-5e22789e8fa8"]
}, Open  ]],
Cell[520743, 10136, 212, 3, 56, "Text",ExpressionUUID->"605fa9bd-d2f9-4de1-8459-5ae1aa1ed3d4"],
Cell[CellGroupData[{
Cell[520980, 10143, 12946, 301, 889, "Input",ExpressionUUID->"a1e062b3-c19b-4de5-9c5a-758815bd1a87"],
Cell[533929, 10446, 93054, 1628, 226, "Output",ExpressionUUID->"f5c13382-25da-431a-bf8b-ef206a9c3dfd"],
Cell[626986, 12076, 650, 9, 35, "Output",ExpressionUUID->"d1c4ea6c-56b3-4dcd-840f-1ba8c5f8ffc9"]
}, Open  ]]
}
]
*)

