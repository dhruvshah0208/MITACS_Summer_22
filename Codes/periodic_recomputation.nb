(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    831282,      16018]
NotebookOptionsPosition[    822837,      15906]
NotebookOutlinePosition[    823311,      15924]
CellTagsIndexPosition[    823268,      15921]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "maxCount_", ",", 
     "initGuess_", ",", "maxJ_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "frootNew", ",", "errorNew", ",", "InitGuess", ",", "J", ",", "S", ",", 
       "K", ",", "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", 
       ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
       "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
       "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
       ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
       "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
       ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
       ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";"}],
        "*)"}], "\n", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errorNew", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
            RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                " ", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
            "\n", 
            RowBox[{"J", " ", "=", " ", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
            ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";", "\n", "\n", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}]}], "\n", 
       "\n", "]"}], ";", "\n", "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.865967298267394*^9, 3.8659673001198*^9}, {
   3.866571893798601*^9, 3.866571940716648*^9}, {3.8665719967138014`*^9, 
   3.86657200493918*^9}, 3.8665721461421776`*^9, {3.8665731331726017`*^9, 
   3.8665731928485823`*^9}, {3.866573291140256*^9, 3.8665733048578844`*^9}, {
   3.866573636752106*^9, 3.866573657335546*^9}, {3.86657481838451*^9, 
   3.8665748273656473`*^9}, {3.866574870351947*^9, 3.8665748910333557`*^9}, {
   3.8665788373566265`*^9, 3.8665788400997524`*^9}, {3.866579031902623*^9, 
   3.8665790413156233`*^9}, {3.8665801062232275`*^9, 3.866580141002143*^9}, {
   3.866664127693946*^9, 3.8666641298202667`*^9}, {3.8671674568252773`*^9, 
   3.8671674734489603`*^9}, {3.8671675035743246`*^9, 3.867167504014184*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[1052]:=",ExpressionUUID->"c06eaa1a-1a94-4921-93d5-81325d0c5150"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListBadICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5919233888024076`"}], ",", 
       RowBox[{"-", "2.626560404936485`"}], ",", 
       RowBox[{"-", "1.8337732091632066`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8988421797170734`", ",", 
       RowBox[{"-", "2.781568090526754`"}], ",", 
       RowBox[{"-", "1.7208327942083077`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.5130003928325353`", ",", 
       RowBox[{"-", "2.7638782645015807`"}], ",", 
       RowBox[{"-", "1.5499618641831363`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.1258783007678108`"}], ",", 
       RowBox[{"-", "3.075660607934064`"}], ",", 
       RowBox[{"-", "1.8180933102904318`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.0862158325400353`", ",", "1.389077323652403`", ",", 
       "1.2418614212135708`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.410811763077299`", ",", 
       RowBox[{"-", "2.6799695626956286`"}], ",", 
       RowBox[{"-", "1.249504352429808`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.8018187254571911`", ",", "0.6312196180519329`", ",", 
       "0.3007314035275339`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.6639286656315342`", ",", "0.3762926167702396`", ",", 
       "0.9290478726251834`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.03706862009377243`"}], ",", "1.2622064778502988`", ",",
        "0.8466788889730772`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5434651973062383`"}], ",", 
       RowBox[{"-", "2.601835119680123`"}], ",", 
       RowBox[{"-", "1.7656478532020108`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.277167056780228`", ",", 
       RowBox[{"-", "2.939647560942354`"}], ",", 
       RowBox[{"-", "1.4975993973103163`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.591878596354511`", ",", 
       RowBox[{"-", "2.898678940703004`"}], ",", 
       RowBox[{"-", "0.8043365992636904`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.8881446664424688`", ",", 
       RowBox[{"-", "2.3394205463410316`"}], ",", 
       RowBox[{"-", "1.837011306641183`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.0744667175310116`", ",", 
       RowBox[{"-", "1.7285609705780498`"}], ",", 
       RowBox[{"-", "1.954902635840356`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9498789296971752`", ",", "1.4434997322554963`", ",", 
       "1.0211631207173442`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.9096980484776003`"}], ",", 
       RowBox[{"-", "1.6160359759348495`"}], ",", 
       RowBox[{"-", "1.9523905732877624`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.401393896381272`", ",", 
       RowBox[{"-", "2.488365977780391`"}], ",", 
       RowBox[{"-", "1.3431904393576986`"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",ExpressionUUID->"c1017f9a-a17b-486d-bcf4-2a776a5e392f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.865967283387162*^9, 
  3.865967297681583*^9}},ExpressionUUID->"869f2bbe-d630-493f-a109-\
ef8e8d83ea6a"],

Cell["Manual implementation of periodic re-computations", "Text",
 CellChangeTimes->{{3.8641533433196383`*^9, 3.8641534078207626`*^9}, {
   3.865345899534526*^9, 3.8653459352441096`*^9}, 3.8653595685158424`*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"982e74f5-390b-4bf9-a720-2fed731db11d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A1", "=", "0"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A2", " ", "=", " ", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"uBound", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxCount", " ", "=", " ", "10"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["maxJ",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{"2", "^", "2"}],
     FontWeight->"Plain"], 
    StyleBox["*",
     FontWeight->"Plain"], "\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uBound", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
        "order", ",", "maxIter", ",", "maxError", ",", "uBound", ",", 
        "maxCount", ",", "InitGuess", ",", "maxJ"}], "]"}], "]"}]}], ";"}], 
   " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
      "uBound", ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
       RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "6"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
        "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "6"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
   FontWeight->"Plain"], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636127929494734`*^9, 3.8636129048647366`*^9}, 
   3.86361309340853*^9, {3.8636132740148587`*^9, 3.8636132890980425`*^9}, {
   3.86361367016436*^9, 3.863613704067534*^9}, {3.863614005426304*^9, 
   3.863614044030977*^9}, {3.86361407671554*^9, 3.8636140789588237`*^9}, {
   3.8636141197098103`*^9, 3.863614156970913*^9}, {3.8636143059493403`*^9, 
   3.8636143423397207`*^9}, {3.8636146524377003`*^9, 
   3.8636146681296897`*^9}, {3.863615502417285*^9, 3.863615703473082*^9}, {
   3.8636161037482653`*^9, 3.863616122815179*^9}, {3.863616300467451*^9, 
   3.8636163404706755`*^9}, {3.863616379759131*^9, 3.8636164322373734`*^9}, 
   3.8636164758294525`*^9, {3.8636165064106874`*^9, 3.8636165068755407`*^9}, {
   3.863616588161584*^9, 3.8636166296943207`*^9}, {3.8636166641123295`*^9, 
   3.863616732677436*^9}, {3.8636167693047395`*^9, 3.8636167704293804`*^9}, {
   3.863616826318534*^9, 3.8636168556931543`*^9}, {3.8636168995821395`*^9, 
   3.8636168999240313`*^9}, {3.863619302411866*^9, 3.863619416136552*^9}, {
   3.8636195563387823`*^9, 3.863619570937121*^9}, {3.8636197069376936`*^9, 
   3.8636197273581724`*^9}, {3.8636205744286833`*^9, 
   3.8636207335498743`*^9}, {3.8636207658335643`*^9, 
   3.8636207659625244`*^9}, {3.8636208211778917`*^9, 
   3.8636208543832893`*^9}, {3.863620930334037*^9, 3.863620936617031*^9}, {
   3.864135467525829*^9, 3.8641355031932845`*^9}, {3.8641358508757644`*^9, 
   3.8641358994820337`*^9}, {3.864136005621681*^9, 3.8641360284712887`*^9}, {
   3.8641361588251004`*^9, 3.8641361878597054`*^9}, {3.864149523908724*^9, 
   3.86414952549721*^9}, {3.8641504554392495`*^9, 3.8641504662587476`*^9}, {
   3.864150523008383*^9, 3.864150605221774*^9}, {3.8641506500782566`*^9, 
   3.864150690388214*^9}, {3.8641515284209967`*^9, 3.8641515289998107`*^9}, {
   3.8641516589627523`*^9, 3.86415165924166*^9}, {3.8641517275125647`*^9, 
   3.8641517616755095`*^9}, 3.8641517984915934`*^9, 3.864152052785297*^9, {
   3.8641521525610065`*^9, 3.864152184609634*^9}, {3.8641524131266785`*^9, 
   3.8641526257358713`*^9}, {3.86415267085427*^9, 3.864152694523608*^9}, {
   3.865343316507264*^9, 3.8653433661354*^9}, {3.8653439486171923`*^9, 
   3.865343974084052*^9}, {3.8653442980234942`*^9, 3.8653443296263914`*^9}, {
   3.8653443748479357`*^9, 3.8653443749728956`*^9}, {3.8653444172203894`*^9, 
   3.86534442272363*^9}, {3.8653469695214763`*^9, 3.865346987082861*^9}, 
   3.8653470346556525`*^9, 3.8653527113159447`*^9, {3.865352921100881*^9, 
   3.86535292673708*^9}, {3.8653582294529123`*^9, 3.8653582967913857`*^9}, {
   3.865358599615581*^9, 3.865358639228916*^9}, {3.865358727662645*^9, 
   3.86535873275102*^9}, 3.8653587920620584`*^9, 3.865358828820309*^9, {
   3.8653593086449194`*^9, 3.8653593288444633`*^9}, {3.865359372130623*^9, 
   3.8653593924201374`*^9}, {3.8653594236451564`*^9, 3.865359453367653*^9}, {
   3.865444950539036*^9, 3.865445024576361*^9}, {3.865446050861164*^9, 
   3.8654460571241617`*^9}, {3.865952145761594*^9, 3.86595214986728*^9}, {
   3.865952199585349*^9, 3.8659522182973533`*^9}, {3.8659603685998144`*^9, 
   3.8659603767552023`*^9}, {3.8659604947234*^9, 3.865960520358188*^9}, 
   3.865960564993886*^9, {3.8659609071592493`*^9, 3.8659609263660946`*^9}, {
   3.865961860067914*^9, 3.8659618679653835`*^9}, 3.8659654827151413`*^9, {
   3.865966916471731*^9, 3.865966942550375*^9}, {3.8659671518243213`*^9, 
   3.865967156179924*^9}, {3.865967206640753*^9, 3.865967238990388*^9}, {
   3.8659673141932907`*^9, 3.865967351676281*^9}, {3.8659674264683175`*^9, 
   3.8659674265732813`*^9}, {3.865967462005929*^9, 3.865967508030183*^9}, {
   3.865967548370256*^9, 3.8659675668793263`*^9}, {3.8659677463418226`*^9, 
   3.8659678159435205`*^9}, {3.86596784633578*^9, 3.8659678729282613`*^9}, {
   3.8659679163953342`*^9, 3.865967976588047*^9}, {3.865968140783433*^9, 
   3.8659682509141455`*^9}, {3.865968287893297*^9, 3.8659683248484554`*^9}, {
   3.8659683827519045`*^9, 3.8659683981569653`*^9}, {3.8659684305215964`*^9, 
   3.8659684309144692`*^9}, {3.86596846558936*^9, 3.8659685457466745`*^9}, {
   3.865968580020693*^9, 3.8659685824779053`*^9}, {3.865969104561618*^9, 
   3.8659691127210045`*^9}, 3.8659693634616613`*^9, {3.8659694114932704`*^9, 
   3.8659694935339813`*^9}, {3.8659695285567617`*^9, 3.86596959443765*^9}, {
   3.8659696286047025`*^9, 3.865969631037925*^9}, {3.865969673164426*^9, 
   3.86596967499084*^9}, {3.865971493789056*^9, 3.8659715068088856`*^9}, {
   3.8659716882007627`*^9, 3.8659716883647113`*^9}, {3.865974154847394*^9, 
   3.8659741580303764`*^9}, 3.8665732156743083`*^9, 3.86657333593898*^9, {
   3.866573373610974*^9, 3.866573379876976*^9}, {3.8665734121177006`*^9, 
   3.8665734375355988`*^9}, {3.866573666031777*^9, 3.8665736662597046`*^9}, {
   3.8665740977401857`*^9, 3.86657410732813*^9}, 3.8665741515230446`*^9, {
   3.8665741974374113`*^9, 3.8665742560887203`*^9}, {3.8665746295316987`*^9, 
   3.8665746382579193`*^9}, {3.8665748985349655`*^9, 3.866574931306522*^9}, {
   3.8665749733131332`*^9, 3.866574973781985*^9}},
 CellLabel->
  "In[956]:=",ExpressionUUID->"c28652c3-ba56-4a0b-8e4f-0e46f1c2c441"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJzU/Hk4lOH//w+PfezLUJRKkmyJCiV1nqHNliRJiUoIWctWSiVaJCEkO9mS
LVvEiWxJZSv7MtaZyL5v87s+v/tzTd/jfRzf430f93+3fzrOZuaa8zq31+s1
j+fz2n7VweA6I4FAyOEgEP7nX/GXawnRWx8cIRC8g1Wz9x3RKmHTG7ZCIOty
0zYf+AJ951ZmZzZtAIZZji36+7KQ+stjZcmn28CmZu8qzeAydH3PMrcidx/g
aD9s7re3DulKX5/acGIQ1J9jszJ51IRyWrxufz1AAV1y8Tz1hq3okIBMJvP9
MeBm0iq1a7QTWa0ERb0zngQ+Y8Vfjz7uRQ7VI/sydaeBRfSkLWGmDz0zYd25
ZjcLiqVPvtkfR0bXau5YKlrPA5FdWzXd4smonE3kjO2FRZC5hbs2a7UPKfJ7
h1JvLYNdG0yXixd6kPnMYTk9u1WQIlHe8fhuB4qLrhJdeLEORp9vSZhLaEYf
A1Q7mwwIkOOr6Vzr4yp0q+iwfpQOA7QOGvvUKf4Qobp3008vMsLYt29jZjJr
wY0TB0tuGDPB9ujC8z0F7SAyRTHP1oYZbmhQ5uV2GQSvZkoeOLqxwIAblJ+v
u0fBcNptV2tnVhiyJ9reSmUKVB4PCn/4kA36NiKfrx6zgOF0R/9LbyI8IJO6
WUFpARCO5jPEerBDEXfisFHkEniycUG3yY8DMliUtMGlFeBocq1i4REnJKKr
wl7M64D8YL8FeM0FT8U27v3JR4CCwW86nsZxw80XySvHhBhgEp+MR81bHhjU
UHjRk8gIy523Hdv1nhdKlTt+2EhigtFisaKHDfmgjCZngB0PMyy5u0ywbuCD
WWT7kr3MLHC7NtvqjvP88EWXxn05IivM/Sn9vL2FH9adUCfcGWOF/tXrCmKm
AvA7V9xt8a9sMNiFamPeJQBdt9Du5jsR4V2hrbziF0jwJqNa5sowEaZKs9Td
6iNBmua2rRVi7JB1lkGk/LIgFN6tabiynR0mK2Tfix7515a+mqa3dlOI3u48
9Snn3Oi/dlOC527gsoHeXvx4Rk18+l+bVuic52u/kd7WVjh+7O7cv3aN6Z4b
ti7C9HZGluMCjfavXfeq04lilQn42G6zFCtZIrG1gsg15VqQ1vKiuYcYj578
KBk8Z9QCLMRnOQn7C5HrzFmBkYt/AEHLd2vqp3bkwyw1tyt8HDBu1SNdautG
o+Yl1jJnpwDg+Rq32bYP3eVzkzMynQHa5z9eNzUjo3m+8mNhNnNg8m9Wp3U+
GQVZ1V38Yb4A7g0YxPBdJyMP/3oXGaslsMX5p2GccR86yWhGfuu4AngzRE5z
T3YhwtcHieJea+Dz5GSE57lWxHw56saPNzSgb/oaCs78QCESn4UKfxKgiEln
2q6nBUhMW7BnVVgAnpnxvy5ixgb5tszqlkUKwKL3cg2V4kT4pJLpcPkmErQO
dLi25SMRBsW8svsWSYISw1435rjZYVvAo6mIbf/myyio/duehH9tVTb9rLxP
/8bzq+qjT2NWMYCweEF7JFkC9f/tvuI+9wWkMf9dAOfCkcz40nz6hSbg/fni
82q+XCQ4SNEw1qICZdErGqQXbcicU9og9PlfoJN1NeU6tQtJy0sxUX5Ngldj
RzUbN/UhV9s9WQ9/TYNxtcK71+TJqCzvmlLd6CzYMmCwuSWLjDw37iDfH5wH
/AaiN/mektGWOud+rb5FMMAE97zI7kOfn04UV0wvg9uKvzP3M/QghR4z68LZ
VaAbcOYk43IbMrin+KWfRAOi549cp8U0osQLd9yPvSLA3LXVSNGKMmTDHbN/
dJ4f3hD6GVAmyQZ/OHmAybsC8IbTzvQ9C2yQJ3K+OXBFAG7ibzlJCCFCv47W
knlPErTcta+3fZUIhb94avx9UQD6TgdcHIy7h0y5glofuteD/cG8YuINKaiN
EfXdvjkKEr1e377S3oFS1yTDPyVOAKVtrqRDBT3oQ7DBD7uGKeAj5pUDPvah
R3mlKdJDM4DlAN+LlMdkJGe31ciCOgfemx44kptNRmkFTr9FuxcAY9W4k6oy
Gf3Sk2ThGF8CYxNFV/kGelGL5w/W2+MroDNyLPnjl07U8DGhz59lHTx06XPQ
DfiFDGrtLwV+FoArvUybM7SJkPEvX9LUQRKUa30e3PaDCKMttDfHlpIgswTf
BMsmduhQrs4iD/6tj1r/ppNzVi8BYep8RrSzPNAcdqzMaykHWz/zP7JUDkar
axu9jS82gqL8QNdPwjno2qWPXYHlFDBYlLPVYLoV/QhI9dZl+QvUuut/bbfr
QrUhpg3HwyaB7BeJ89d6e9F0OOd0+KtpsN2y9sMyPxntJCp9uJY+C5IEL387
mkZG9g4/E4yT5oGiSoM0KYyMJihVIp2RiyCGHJrR2Iatp+8q0r8/LgNjY6+x
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
6ZW+
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{881, 2738, 2736, 420, 421, 422, 423, 424, 794, 692, 
            609, 543, 494, 463, 814, 712, 629, 563, 513, 831, 729, 646, 580, 
            425, 795, 693, 610, 853, 751, 544, 837, 735, 873, 652, 862, 
            760}}], 
           PolygonBox[CompressedData["
1:eJwV0dtPj3EcB/BH6fTr5PQHCCVcYXNqc7rAiJTDzGzGBSlqMxe4ihtFZ+oO
EeKGWzo73JUrmihUZsumzaho3Xh9L157fz7vz/Pbb8+erJPlRWVxURTNoY9n
sSh6yjVFfHwU3XbcTTIfdM9ZrG+3nyabP7pK5urv2PeQwqDuBVn6DnsxOUzq
qkjQ37XnE+Ojrp3r3CDRvUW/l1Q+6TqoJsntnm4faQzpOqkh2e2+roB0hnVd
1JLi1qrbTwafdd3UUU/M/YG+kEy+6HpYou+0n2E5U7oGUvUP7UXM46tuta7P
fJF19OqW6rrMJeSywz4ia5h232h/Z65gc3gv+7hsotE9zf7IfCD8l/mnnM82
85Cs5Jh5Wo54fo25P3wjeUkekb9luVwfvpH8Ls/KRnlCzsoL8qXfL5Pd9lOy
VB6Wv2SZXCF3ytHwPrJWHpcz8rz86/eb5Hv7FY6aJ+WW8E3MP2QzNz2Xbm8z
HwzvZp6QC9huHpZVjHpurf2t+TIbeKXL1vWEd2Alu+xjso5/7nn2AfNVtnJL
l6F7bD7EQsZ0r8nR99rPsYoZXROZ+ifh/VnEN90bmvkPKelnqg==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{386, 2737, 2734, 498, 548, 614, 697, 799, 439, 470, 
            519, 585, 668, 770, 390, 497, 547, 613, 696, 798, 438, 469, 518, 
            584, 667, 769, 389, 437, 468, 517, 583, 666, 768, 388, 387, 436, 
            467, 516, 582, 665, 767}}], 
           PolygonBox[CompressedData["
1:eJwV0klIVWEYBuBT7VpVzpVBK2cbaKCywGGTKIQEWamJEQRRVtaqYVNtdKMo
NGg2uMvKIWif5ZA5brRNbjI1yyAiAkvz+RcP7/e9/z33nnvu3VpVXXJhdRRF
q3hNx9oo6qRN8ZQnjLDAFi+s5BVJa6LosW6Y7yTrTtFNorNHuiG+sVlXQRcJ
zlrDh5l3coV+svQf9PNsspfTSbz+oS7ffIePHNL91+0w19BHpm5Q12Sepdie
I28yzl77V+d/wnub6+QUBeaN8gdHzWXyjOyQcbLFNVflkv20vCvPy3l5RObJ
i/K3PClvy7NyUh6Uy66vkYvh2ckGeU5Oy0K5Xf7kmPmy7CXD/N51/8xV5kY5
Q5H5gPzFcfMNOcYe85zX15o/kW9PCvfDS2Ltzc5zzbeYICd8J129+TOH7dvk
Jd6Rbh9wvt98nVF262Z1ieYTvCBG9yDcK9nhWfCWNH2/bp/5GiPs0s3oEsL9
85wNuvu6v2TZq+khVd+n+0K8vZR21uvv6RbJtIc/7xtS9L26aeLC8+QZ68Jv
plsBT/lhdQ==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl813McwPHprm21zrWta+umFJuiJB3SpagkqdSGLFZL90nooIQH3SEU
KkeJQheiKLci5dZBocjVRc/3wx/Pvd6f977bvvv+fltm7rAeQ89KSEgY5kM0
y4fPNJYL9HqtyFjyna/S4ozgHefBmsFEOjq30791uL6meZrKvea+WpaPzbdo
TbLNF+hP+iwT6e1chvfja+hi/k/f5CGKUNvuc13IEDrR3u4fXc9Mcmhmd0if
YxLXUZQ69rt1UdwLneM+KEZxSlCSuq77Qhdza9xLfE+a2x/W55lMP0pRz36P
PkIBXeNaLrT/WV/gdvpTmvr2e/XReOZcEddykf0vuoo7GEAZGth/qY/Fa0Y3
LrM7rhuYFV9LC7tfdTVTuMY5kQ/iNY37ihebLfJw3L85hU/NiTQ0f6VLGGiu
RKG5h5bgXfPNWo3u5g56Qm/TjXqDVmUC98Vz13KM5pN4llqLybRwbqlHtFBf
1FytwnjudO6jSYziw3jNtQYD45nFe5e3zDdqGnPiGWt5dpqTONv8tT4e7096
Opdku/lKLjef1E3MjnviYrujuoa7GBTP3K4Ib5vnksw5zt/oE/EM4u+Ejnan
dDP3x/eild1v+hJ3x+9JWRrZf6tPMiKec1zLJfa/68tMJY9yNLb/TpcyMn6X
uJbW9sd0LdPidSCFc+2/12WMoldcS3ma+NwP+hSjuZpLqUBFKlGZKqRSlTTS
yaAa1alBTWqRSRa1qUNTP2OfPs0YetOGupznc/v1GcbGe5W2cQ/2f+g6psdr
Sz3Otz+gyxkX7w062Z3W13mAdvH97f7UV5jBTXS3K8pW8zzqk+18UFcwPp6N
cyl2mK+ls/lffYMHaR/3Z/eXvso9cZ1zMh+ZB8f7yVyMbfFzNZ355gFagTHs
ci7QTBqYc/THhP//F6+M95pWZlz8HcXroqUZyXvO+VqdSZwBe/2d0Q==
           "]], 
          
          LineBox[{146, 69, 104, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 71, 
           50}]}, Annotation[#, "Charting`Private`Tag$191621#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1HWQVXUYBuCzSy/dpYR0KqAgISgmHbZigIOCKJgz9iglXQoISLcBqKA0
SCulQ0t3CCgpKT7f+MfD+33v795l7znnbsl2XVp3TkmS5Bf/dOVGapKM4AHS
s0k3m250jxemS5KR+gfJwGbdHHqQ4myU7iEyskX3I8X0c+3tKcUZXU9S9V/a
G5GJrbqfKK6fZ3+R0pzVzUhLkk9lOmejdY3JzDbdXEro59tfogzndL1Irx9j
b0IWtuvmUVK/wN6BspzX9SaDfqy9KWns0M2nD33J6HycvhlZ+UO3gH5kcjZe
15xs7NQtpD+ZnU3QtSA7u3SLGEAWZxN1LcnBbt1iBjKINOeT9K3IyR7dEm7R
L7R3pBwXdIPJqp9sb00u9uqq6daa36EmS3WldIvML1M+7rl9n+zPRee17ZvM
H1M/Ppf9mBzKEOfZ7FPMD8f/ZT4pc3OPeafsRRvzRbnP66ub18U9ku/KJ+RZ
2UXWinskD8tX5BDZVl6Vb8mfvb+0XBzPhewkH5N/y86yQjyTcn98HjlAPicv
yzfkP95fR262f8JT5vOyQdwT83E5jM+8Lrt9qvmR+GzmUzIPDc27ZG/2e10N
+3rze9zJMl0Z3ZL4DFSM74L9gBzIJed17VvMXbmbz3U5dNPMj5KXA7rllNUv
tb9KJS7rhpJTPz0+P/k4qFvBMGb6ngyXubzmK2ePk59DupWUi2sZ14zKXNF9
QW7913FPKMBh3SrK65fFPaIKV3UjyKP/xv4kBTmiu123wfw+tVmtq6Bbbn6N
qlzTjSSv/tu4DxTiqO4O3UbzB9Rhja6iboX5dW6lkf2gHMR15/XsW83d4rlj
lC6fbob5aQpzr3237MMx5zXtv5k/jN/ffE7Wpan5SDwDtDNfS/3/72Il88p4
juJ6ms/I22hsPiQ7ycHyeXlFvin/9b675DZ7B9k9fh95Ia6FbChbyhNxf+Vw
+YK8Lt+Ov4ven1/OtLeXbeJ5lKdlEe4z75F9eSaeb3nce2qZfzd/RD2a2Y/G
c8avzivbV8XvSDVu6Orrtpt7xLVitK6Ablb8bIpyQreWKvrV8Z2kOglj9AX1
35mf5Sb+1K1jLIWcfR/fR27mpG494yjs7Ie4dhTjlG4D45nARGZ5pifJyUxh
KtMo4r2zvactxTmt20hV/Zq4jtQghQa6HbJnXDume11R3Zy41/HdM/8lS3C/
ea/sKPvFZ5KX4hmU/wEecelo
           "]], 
          
          LineBox[{824, 722, 639, 573, 464, 815, 713, 630, 564, 514, 426, 796,
            694, 611, 545, 495, 465, 427, 428, 429, 430, 431, 432, 433, 434, 
           797, 695, 612, 546, 496, 466, 816, 714, 631, 565, 515, 832, 730, 
           647, 581, 849, 747, 664, 868, 766, 886, 435}]}, 
         Annotation[#, "Charting`Private`Tag$191621#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4FVUYhuGBQ0lKq5R0o3SqtHQq3SglggoGSBxa+hAi3Rgo3SVp0tIo
jYIgKVIqcK8fz/W+37Nm9t4ze81k79CzUY94URQljx9FfWOiKEfCKPoqQRRN
lzXkYJk0OPxvvbu8w8+Xk+R4mRFL8LP1JvIUP0f2k5/Ip1FU7yPjYa4+WWbG
N86pKH/gOiETepn/Db8Bl6x3MF/RR+JlfMzl5BbrNfHIvBtNudPm/iiGJVwl
7ke9MzLjMtcPufivzbXw2LwHS9EfAzAQsRiEwcgdfqtjayPCXm4ZhiBPuH6u
DuJhH7cclfmfzF2QBX9yQ5GXX2qui/jYz61AlXAPzV2RFVe4YcjHLzPXQwwO
cM24M/oAFMdKriq3W++GbLjKdeSu6qPwCoZz+bnlen0kwNvmf8J/goPWm5vP
6gPDPddTo4TeV8bHPH2V46rpe/S3wufqKfG83lv+JxfKGXKifC5cA/5y3hsh
+blytBwj04X/AxXDNclE+ByLzFNkVqzACOcXCJ2fIRvIITIZEuo95F35KeL0
Z/CLc1rIc1xsuBd6GpQMe0nGYL6+2nHV9b16d2TH+2Hfy5m4Zv1N87Xwm1Ep
7G+uILdSb4hEOMS15M7rg1AKa7hXuX3hfiMHrnMjUYhfZW6ExDjMrUUNfn+4
JuTEDW4UCvOrzY2RBEe4dajJHzD3RC7c5EajCL/G/BqewlFuPcbgBWtrudeR
FMe4DRiLcRiPOEzAi45d55gmSIbj3EbU4g+a30Fu3OImoii/3twUyXGC24Ta
4T8xv4s8uM1NQjF+g7kZUuAktxl1+EPm95AXf3OTUZzfaG6OlPiVa8Vd0Aej
NLZwdbnDei/kwx2uE3ddH4vKYb9wJbhNegukCvfRfC/sP/xmvbX5YthvGK2n
RRm9n0yABeFzZBZ86/h68gg3W/aWI2Qq5Nc/kI/kIjlLTpKZwnMZnkXndpY3
+HlyXPidMn14B6FKeDZlYnwRnhPzZzJb2IeY4vyScnPYt7KlHCqTh3dx+J/k
/XAOTjm2jfn3cAzKon94lrBQ32q9vn40PAsogA/Nj8N14a71Luab+nhUDZ/L
leK26K2QGqe5ttwf+jCUwzauAXcs3A8UxD1uKkqHe2hujTQ4w23HNJSxtpVr
g7Q4y+3AdMzATMxCWcdts94W6XCO24nZKGdtO9cO6XGe24WG/PFwjSiE+9wc
lOd3mNsjAy5w7bhL+nCUx3dcI+6E/hEK4wHXlbulx6Ea5nIVuJ16B2QMz4L5
gZyKi9bbmy+HPYMK+J5rzJ3U+6BI+A5zhDn6Q+vd9Nv6BIzTM6C6HiuT4Muw
X8J3hPd0eI875yW5i5slO4b/RqbA4vDuDM+cfCgXyGnhs+WzWIonMsoReA==

           "]], 
          
          LineBox[{1257, 1160, 1085, 967, 1364, 1243, 1146, 1071, 1019, 930, 
           1342, 1221, 1124, 1049, 997, 968, 931, 932, 933, 934, 935, 936, 
           937, 938, 1343, 1222, 1125, 1050, 998, 969, 1365, 1244, 1147, 1072,
            1020, 1387, 1267, 1170, 1095, 1409, 1289, 1192, 1433, 1313, 1459, 
           939}]}, Annotation[#, "Charting`Private`Tag$191621#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8j1UYxvEvMiI7IpG9N4VsUig7I7LXK2REiIwWIUUJhTRFoRTZRJG9
9yqUWQkZEXrff3xe13Xd5zzn93zPc5/zy9OpT9PeSRKJxMikicTi5InENykT
iRz4NEUiURdpcFZ9l1pVrJN7oDiWqC9QewCfyfVwD86p71arhvVyT5TAUvVv
1XLic7k+0uIv+Wkc50fhvHl75Or4We6FkrglP4uL/GQsM+87ORdmyU8gdapE
YqB8m0+HC3xrnOBH4w/P7JVrYIP8HDJ7ZoScEqXk27QHLvHljM3kp/AP8uP4
zPFu/Fd0ufUW0gfxqNoX5hWi78pPxv7xg/gG9I5cgX4qt6Hp5b/Do558Ui5F
p8mt6Bvy/XSU3ISmo1XobNqB/ulv7+Nr4jF5o/nF6BS5N38vP5JPhdLyHdoT
l/mpyG38TflerLDWIpobs401QAZclJ/Bb/yY+Fbm7ZdrYZPcB2WwUv17tTyY
IzdExth/9VVYrJ4XX6o1Qqb47eqr8QPWYC1+xE9Yh/X4GUs8lw9feaZxfK94
L/UNWKqeH3PVmsRvxiX1A2q1sVnui7LYqL5MrQDmyU2RJebLbfE7PxaXzTsY
3xNb5H7RB0jYr15q//DvY5N5y+WCmC83i/43Z7CcQNZYi7bDKb60sen8OD4H
P5pPH+tZ5xCtg8fVt8b5olPlFvT5eE/6styI3k0fobNibVreeBL6nPwEvSKX
px/FuaIfyHnoeLkZzRL9T+fSTnSzv7+CL4SvzS2sNol/Ks4n/yKfBPfJ/9D2
OM2/iQeiT+UMuGKdw9GL2GasPx5CUnN6q13lp2GLeSvlwvhGbo5suKp+JPYA
2+UBeBhbo4fUimCB3ALZcU19W/SQelF8q9Yyzgyuq2+P3lIvhu/UWsW+41/1
o2p1sUN+Ic4ldkQfqhXHQvnp+H24oX4szih2ygNRETujZ9VKYJHcGjlxJc4n
zvDjcdO8X+T62CUPQiUksy991K7x07Er+l8uie/lNsgV+yJ3xFn+Lfxn3q/x
rbFbHoys1npFTh29Id8l9+Wv8zOQV34rejKeiTMWdx0WGyti7L0453Fn8kP4
pHGnxR5Hj+BcnHNjM/i343fyY/imNCOtSufEe9Jb1j8e91/ssbzH/BL0fbll
9JN8H31VbkzT0Mpxd0Zv0crGk9N+sQb9N/qIfiy3ph/K+ejb0ZNx//Hz6J64
N+KuwxJz2iK9saFysrjboi9oZ5znJ8Rd75kTcgPslYegCvbG/aNWBkvldnGG
4g5VP6nWEPvkoaiKfXFXqZXFMrl97Hn0mtwFf/AT4w7Bb3GOsZ9/KXrfO74m
34Nqcoo48/yN6H/+E34mn5+fEOeSZqO16Pz4PXR/3Id8ubhH5OXmF6WT5ea0
g5yBvhTvTu+iFeln8d1pvuhzvmv0afxviTsz9lp+J/qQH8tninfkv4w7Qf33
+IY4wJeMu4YfFueTf51Pi+pySrk/f5P/CAXkiXL2eNa7b6TlscJYR2Q0PkxO
jvxxhmg3/MW/G3cKTslNcJAfjhpI5bkBav/xH+OgtTfJD2Gl3Cn+dpwhuTsu
8JPiLOJ09DMO8SNQE4c8v1ntYaySO6NgnC+cUWuGw/xI1MJh87eoVcBquQsK
RT/jbHw7HOFfRm0cMX9rfAv8IHdF4egBnItvh6P8K3gUR+POU6uENXK3OL+x
vziv1gLH+FdRB8fiHow7AWvl7shkj4bLKWId/nPalv4PU/ZKFg==
           "]], 
          
          LineBox[{1896, 1776, 1685, 1544, 2028, 1879, 1759, 1668, 1606, 1503,
            2000, 1851, 1731, 1640, 1578, 1545, 1504, 1505, 1506, 1507, 1508, 
           1509, 1510, 1511, 2001, 1852, 1732, 1641, 1579, 1546, 2029, 1880, 
           1760, 1669, 1607, 2057, 1909, 1789, 1698, 2086, 1938, 1818, 2115, 
           1967, 2148, 1512}]}, 
         Annotation[#, "Charting`Private`Tag$191621#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HWUlGUAhfGhlAUpYaWVTikF6W6lpVtKQroERBZYQmpFRZFO6fYcSrpB
BSUEREoElJIuAX/vH8+59z5f7MzsN5O1Xc8GPeJFIpHo+JFI58SRSNokkci0
qEikOK7Z6zENRfn1XEMkxlGuC9Lx0+0SuG5vwHQU4zdwjRCFY1xXpOdn2CVx
w96IWtxh+yNkwQzuHW6j3hhJcJzrhgz8TLsUbtqbUJs7YndHVszkinOb9CZI
ihNcU+6MPggFwt/jMnKz9NK4ZbezL+sjsdmuY/+i90CMnhDZ9J7yrvwcs5xX
wt6sN8VQPR5e0bvIG3KaHCfHyxT4zTXN5B/c13KwHCWjMA8F7X7yUbi/nCLj
ZGosRnfXZ5Kz+S9lmfC+5DM5R/7reHt5xf5Wxsqx4TXhB8fqyl/D+8BwPRGy
673kPTkZs51XMpyvN0MydLVvhveBk443t8/qQ1AofE5cZm6OXha37S2oxx0N
90eO8Bq5UtwWvTmS4xTXE6/zc+1yuGNvxVz0whvh8+HL4669DfPQG33QF/3Q
HwMwEB9jELK4dr7rKuCevR3zUZrfyrVACpzmBiMrv8CuiPv2DixAGX4b1xIp
8Ts3BNn4hXYlPLB3oj53zO6NnFjIleW2662QCt3sW3ICzjjewj6nf4LC6G8/
Ds9JcI5nt7/TK2Ow/lw+5DvoV8NzhF12A/u43gcj9JeQK7wWeT98T+QXcpJ8
FYvCfV1XTu7gp8jW8lMZP/xPwnnhexOeLzldTgyvW6YM7z08z65vKc/z38ih
crRMgiL6APkkHAvfHT1NOMc1OcLf56qEZ0l/IR/xHfW/wz2w237fPqH3RW4s
4spzO/U2SI2zXCvuQnjteCsklzN8d/SqeGzvwWJU4HdxbZEG57hhyMUvsavh
ib0XSxCD4RiBkYjFKOR2/lLnVsdTex+WYjTyOLaMr4H/7P1Yhor8bu4DROM8
NwZ5+eV2TTyzD2A5KvF7uHZ4DRe4scjHr7DfxXP7IBqG35nwO4I8WMFV5vbq
7ZEWF7nW3EV9GN7GZ1x+bqX+Hl7Ynex/9DE4ZDeyT4ZnEyP1l5E3PGvyQfhN
wkrnVbH36R3C/fUESKd3l7flDDlJTpSpwvOHP13XJiQ/VcaEvyuThu8vitoD
5dPwGyWnyskyOvy/wu+s69+Uq/ivZK3wvZGRgP6hvCbHhveqJ8OPrmksT4Vn
FLF6YuQLz5p8GO6FVc6rau/XOyI9eth3ZBwuOd7WvqQPRzGM5wpwq/XaiIef
uCbc6fBekB+ruWrcAb0TMuAvbgIK8mvsOoiPn7k1qM4fDO8JGXGZm4hC/Fq7
LhLgMLcWNfhDdmdkwhVuEgrz6+x6SIgj3DrUDJ+N3QWZcZWLQxH+e7s+EoX7
2dfD54lxevLw24n/Afe5H4s=
           "]], 
          
          LineBox[{2523, 2424, 2348, 2228, 2634, 2509, 2410, 2334, 2281, 2192,
            2610, 2485, 2386, 2310, 2257, 2229, 2193, 2194, 2195, 2196, 2197, 
           2198, 2199, 2200, 2611, 2486, 2387, 2311, 2258, 2230, 2635, 2510, 
           2411, 2335, 2282, 2657, 2533, 2434, 2358, 2680, 2556, 2457, 2706, 
           2582, 2730, 2201}]}, 
         Annotation[#, "Charting`Private`Tag$191621#5"]& ], {
         Directive[{
           Opacity[0.2], 
           Hue[0.67, 0.6, 0.6]}], 
         LineBox[{384, 385, 383}], 
         LineBox[{888, 889, 887}], 
         LineBox[{1461, 1462, 1460}], 
         LineBox[{2150, 2151, 2149}], 
         LineBox[{2732, 2733, 2731}]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-6., 6.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.865361029035945*^9}, 3.865445408672529*^9, 
   3.865445465281426*^9, 3.8654456787461615`*^9, 3.8654457684634714`*^9, {
   3.865445884836256*^9, 3.865445921420556*^9}, 3.8654460587696333`*^9, 
   3.865446443250679*^9, {3.865952125553069*^9, 3.8659521516667013`*^9}, 
   3.8659522247202935`*^9, {3.865952279668687*^9, 3.8659522923016386`*^9}, 
   3.865960380517995*^9, 3.8659604237811317`*^9, 3.8659604862431183`*^9, {
   3.865960526854105*^9, 3.8659606215087757`*^9}, {3.8659608307097435`*^9, 
   3.865960868038782*^9}, {3.865960935615129*^9, 3.8659609432706757`*^9}, {
   3.865961026919873*^9, 3.865961042898753*^9}, {3.8659618737415323`*^9, 
   3.8659619220130653`*^9}, 3.8659621773942356`*^9, 3.865962208141383*^9, 
   3.8659653341237497`*^9, {3.865966920464451*^9, 3.865966952803088*^9}, {
   3.8659670377118826`*^9, 3.865967084214981*^9}, {3.8659671567557373`*^9, 
   3.86596716982355*^9}, {3.865967354328431*^9, 3.865967365694789*^9}, {
   3.865967429099472*^9, 3.8659674436738024`*^9}, {3.865967497088687*^9, 
   3.8659675719317055`*^9}, {3.8659677533835645`*^9, 3.8659678198432693`*^9}, 
   3.865967879244236*^9, {3.8659679215246882`*^9, 3.86596797117278*^9}, {
   3.865968013975065*^9, 3.865968049366725*^9}, {3.865968179144141*^9, 
   3.865968295722787*^9}, {3.8659683292590413`*^9, 3.865968337405431*^9}, {
   3.865968399526526*^9, 3.865968431918147*^9}, {3.865968471686404*^9, 
   3.8659685928285875`*^9}, 3.8659686585365334`*^9, {3.8659690928773613`*^9, 
   3.86596912452522*^9}, {3.865969364031477*^9, 3.8659694647951903`*^9}, {
   3.8659695001958475`*^9, 3.865969589464244*^9}, 3.8659696214759865`*^9, {
   3.865969666100687*^9, 3.8659696876527815`*^9}, {3.8659714896133933`*^9, 
   3.8659715124820657`*^9}, {3.865971671047258*^9, 3.865971706849786*^9}, 
   3.865974159481908*^9, 3.8660468621315126`*^9, 3.866572018043004*^9, {
   3.86657320750891*^9, 3.8665732165980134`*^9}, {3.86657330942043*^9, 
   3.8665733505073357`*^9}, 3.8665733817473783`*^9, 3.86657341653929*^9, 
   3.866573451408177*^9, 3.8665736708992233`*^9, 3.8665741122335663`*^9, 
   3.8665741531065397`*^9, 3.8665742791683626`*^9, {3.8665746317060056`*^9, 
   3.8665746395135174`*^9}, 3.8665749401956873`*^9, {3.8665801236386766`*^9, 
   3.866580150905987*^9}, 3.8671671575120125`*^9},
 CellLabel->
  "Out[972]=",ExpressionUUID->"9683348d-679f-40d0-b7d8-b9352ff00015"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
CS5UXj9G/p9/76BPxOWRsPp8j2TZZex+yOJPUfx6Okjr7SQkYPOTyjPwPfMg
CWYtan1c+p/9PuG9rmJ1WD33L+0SBauvZO4+n3YNeA6gbdEsXccIvVU7XcbR
RAfvx4IPvn6O9SdclM5EDxL8+xGqq2Ljz6+ZpI6wU2CGquGgAna9yCOubNm/
ZoH/vVHxrVi+Sv5ZE+IeQ4J7STmjV7B+W2TThMc9WQocOShgexSLR7FjhT4P
jOlAkkmb1MTub/CFw7K+MQk+IYtfXMOeX+3iP0k1GhlOrbmaLmG//zv5G8F+
UQz+yXMK7nrMDaPU+y0Ewm8CwuinW2I7+VFKu2hseQAd3A5ftZfDru802jN5
+yIJ5sa/dS/C7nepy2VqdJwMOSuCKqew+739KS7R4B4JTgbPr1Gx+Tu/0znF
fz0FfljruX8Q+9xDlt/o5dosUJS4fFAXuz9eduPrns+egm13itl2mOoh+m8d
PRsXEnR6Tpvywb5fnsvlZ/4aGY4tV1/Xxv5+5tTwk4KiWeDqbm0vgr0/waec
fA2kKPB+iKUYE/ucMb9LMESXDjrNc+qfYd/fzDg6YWVIggm84RvjsPF/Wh9a
zvAKAVJiqolNPKooy/zxpkk7EmTyUO79wq4n7ObSaTSPrceB2s++2Pe5lTo9
GRalQI/rNxRCsJ/zBTbvipGig4RCTvAD+371/f/cWm+R4Dql4UN12PfrxjoX
SKyjQDVPq6Ud2O+raC25ZHTMgi6v03lELF5q9hwYv2tDBy62g/9lYj/TdcO4
d5mS4CnR7ScMsetbvd/7pnpVDF4/FQwdorj/n37rf+9/Ev7//8jwie7957v9
iBD3MoMfHs2LD3NC3MvIXs9UaqtfAbiXEXxDlJzTnga4l8nZnajD9oYGcC+z
O+vBpIPuN4B7mdD+FCX+w1SWl0k5ebZyPq+R5WX+VEV9+vGineVlEtYbN+13
/79eRvndrYHLr3pZXuZnhfJ9BdsBlpdpIb1Qu1M9zPIyzcAhkW3bOMvLwNZG
uyrHaZaXcXVScWk/R2d5mRrV3T/fyC6wvMwOo4LW9xYMlpdpm3llGn92AeFe
hi21xMjhyCzCvczQ0YoN1kljCPcyIlpZdnW/OhDuZQhqcm1rDr4I9zLBxetN
6IQOlpdRKM5nmM9MsrzMq3eG4vPZCywvwxl+YFfUxArLy5ifUbvFzGayvMy8
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
cDlOXHMK90MHz1zetTp9CvuetQv2E25CU9j3/MLLj6vi+QT2PeckfOSZVR7D
vudTqs9O3pcfxL7nHSuSWQZ1vdj3fGGrQYPj1ibse9bgWPXj9ucc7HuemXj6
fDQiH+eTpncJPA+6QcP5pB/eIJky14PzSZ/8wpafWP6/fNKD0gu3T14exvmk
+v4tRkvuj+J8Ul3xAK8o3xjOJylKuMR8dh7F+aSCUUcfZ9khnE+aiBp637+P
gfNJnEHqHW0n2nE+SVi8I9OuMBv7ntnLpR5uul6Ffc9jcTt/2V7pwr5nGc/Y
9Qce9ON8UvKejAaP6iGcT9KjHn2hIT2G80liyqtfPH80jvNJfy6afDn/YgLn
k266OoTJmE7ifFLUB4uJrFeTOJ/UdTZ+6VjSJM4nFezlvmwfVoR9zw1PLCWb
+dux75lRWvBOPLgX90Pf3akcVMHPwP3QXGulQ08EMHA/9GLvCv4k7z6A8knR
UhNKlT692BdNfUD5fqCxC/uaYfHpz/bmQ7i/OYzn2KfKDeO4v3nY/ec7p7uT
BMorfbJ5J8l6OUWgvNLAskD5xptTBMorsSoTdCqdJon62YDga/O8kJ9qtVo4
aBz3P5vxHc0KuTaC/c9VlKAlL573Y3/z23bz76zvnTh/dHblMy6jHQycP2of
lF9z9+ogzh/df8lvEL84gvNHxaEvJ3+NjOL80f0CL0uF1lGcP4qao/JPmYzg
/NHpPYtZnr4snD+KeP6GHnO753990S/5PVfeqcX+59Urlt2ghWZi/7NFcvez
7+o07H9+9EdNeKcGHeePRvL6OV6eGMD5o8SLRn1uEqM4f5SwpaT0TN8Yzh+N
bNLQst80gfNHdw4UrI/nnsT5o0n1yYU9AZM4f7TX/PjBxq//80lHcS48efkw
A/uk/9n4rDghRMM+aaH8KyvafHtw/3StckybU3wf7p92io6SGgpn4P7pkzEb
U3c29gGUP1LecTueKU7HPmqdkSNvG0O6sQ86/fnLynn3AdwP/VLS5Zea2Rju
h+beOhZvIz1JoDxSLNeH4zw3pgiUR1q2J1Nj6vUUgfJIPZNbqc/zJon2avbf
S+m8UNX3TY/98gncL/3v9XqbK96j2C9tK9B+l3Xxf35oDu9YhxqOdpwv0pSq
WR4VT8f5ot+BdpOppgM4XyTn8aTTYO8IzhdtfCyaPFI8ivNFq6LlThvPj+J8
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
6aB6QjbjsDxQp6Cxo8aCTWI9YI+xo5rbJ3S+l17W/7eeCTKLLDcb2wSmuIzh
1gWi+neoTtr4iRAmhERle6Dzwfl7Fd7Kd/wpBlxuPXbns7UASm11d1BC9Vpq
y9JZXSYUPN23XyEZXQ/O1xu0tf18jNYHOF+/86zMw7lRHgDn6ycLwzSommrS
X//p6amvvls1AZyvpx5SLgEKbQDn639zP+vbzzAA5+tLbyV8yJFH9dqffP21
ysyPd6JbSX/+nBgPF4/FzaQ/fo+qOZiX/p3GefsLes+NQrxYGuftpalKXekr
fTTO2y+U0KyNRusPnLf3OpIQfvYJmn//5O1vhZ/m1cfytIX8SP19NwmY9s4p
mIvqo3H+PiRu5Y6pC3pIv/0Jhyf4m03oIP3yXUD4ifqMWpKfv7knwH3p1BaS
n+9vm7/VT/V/+XmHZUyhuVcXyc/PZczmDEeyJD+v0bTTLRnVZzg/H73vSiVt
z5L8/JeJ139GTuwk+Xnb0zGvly9kSH6+6r3K7WGpepKfnyQia92/9jnpt7/s
1yOX1H/KSb/9FwP83v1hjaTfvgaUk3qb9I3k54Meehj6tnaS/Hyt0yM/tdk9
JD9/L3/bqeCYXpKfr2gYN0E8vo/k58+9fBo6YMKR/HzWO3PON4Ej+fm836fW
lmqVkP794fsM6o9sqAc4P6/YtkJ3ZnQLwPn5j7kvL8BJDMD5+Y8fDhfRqN7H
+fmrT0Plz7u1AZyfn372Ul+BcyeN8/OWOQv8rNR7aZyfb+xQez8pAs3Xf/Lz
No+fzCmL52mcn0/QL6dnofl+emrH7k+/xOHYkNilE+w4Wu/wePbJiAQ89hRW
mXv20jj/nrA07XH5Nobk392Pd6Y1+3eQ/HuB3VVJTQFL8u/ZW/Z6XO9hSf7d
ot1yQ+6/LMm/ix3MqxzW7Sb5d8OSB14DB3+Q/Pu1j2qWarbNJP9eOJ2O3b24
kvT3D25uMe6qfwZI3n2MbP09s1aSdy9aN/FnoFM7ybtLqBhlz5dnSd59kZbT
zd0dPSTvHhqekui5uI/k3T3Xpt6zleRI3r3FpqTa358jefcARee+EfT8wXn3
5tfPJCS21wKcd090cQ/KCkPf7z9599KY7L6O+20A591tpsbOGRPKgKqs01b6
pq1A8E/HTNGKNpJ3f+qiprFlDkfjvPv5gT3jl6J62r8jcLAhQwA/tFuyOujz
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
f0LzAd7G54O3cR4Ub/8fP0HVeA==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{613, 3240, 3238, 918, 833, 764, 1038, 934, 849, 1057, 
            953, 1075}}], 
           
           PolygonBox[{{1071, 3237, 3235, 598, 599, 600, 601, 602, 979, 875, 
            790, 721, 670, 639, 1003, 899, 814, 745, 693, 1021, 917, 832, 763,
             603, 980, 876, 791, 1042, 938, 722, 1027, 923, 1063, 838, 1050, 
            946}}], 
           PolygonBox[CompressedData["
1:eJwV0ttPz3Ecx/FP9YtO5sLMzIxIbMxWripCoYx14UaRU7dRDpVDrjGHymlc
sImtkDQzc9X5yPwF6KjLpAvKHY/vxWOv9/Pz3Zql9IrqQ1XxIYQ4vvA8LYRm
ahJCWMNXH1vIoVsfJp5OfZNKRnUta/mmW8mlR5eSQJe+xWnGdB3pfNcvyaNX
lxGjW9/mDNvZQZ/3IyTSo+8Q/ePH9UXWMapfkU+/PsoienUD1UzoS6xnTL9m
JwO6nMX06UbOsotBb8dIol83cY7dFDDk/TjJDOi7nGdSXyaDcd3GvLuBHH7r
QobdJ0hhUP+zjyjgnp6118hiRifFQnjmPsAFPWWvsIEJHfP9iXuTLbKr7Hv7
xrcF20guK7x32D/eU90v3JttSfT/bz/abLvH9xH3yej3rFPtUttqt9ih6I/I
PtaZttCutO/sVnvf91/u69HvQmfb5bbd/vQt2d3sPshq9wdb4/2HrY9+Jsu8
t9lJ74nup+5i2vVf20Qe83ovn9ynSGNYP2DOfYNtzOpapt1X2ciUfss+PusK
ljCiH1JHEcXs5z/maWZm
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1013, 3239, 3238, 1022, 695, 747, 816, 901, 1005, 644,
             674, 726, 795, 880, 984, 612, 643, 673, 725, 794, 879, 983, 611, 
            642, 672, 724, 793, 878, 982, 610, 609, 608, 607, 606, 605, 641, 
            671, 723, 792, 877, 981, 604, 694, 746, 815, 900, 1004, 640, 755, 
            824, 909}}], 
           
           PolygonBox[{{564, 3236, 3233, 988, 618, 649, 700, 769, 854, 958, 
            568, 677, 729, 798, 883, 987, 617, 648, 699, 768, 853, 957, 567, 
            676, 728, 797, 882, 986, 616, 647, 698, 767, 852, 956, 566, 675, 
            727, 796, 881, 985, 615, 646, 697, 766, 851, 955, 565, 614, 645, 
            696, 765, 850, 954}}], 
           PolygonBox[CompressedData["
1:eJwVz0lLFWAYBeBPEwW5lVPRIiQJwSkwsNxUbmqhpl6nP+CQ1qKWjWq1S91o
Yo4JlmAQZSXSX8jZ/kI55MYRHGrRcxcP55z3W31ZDQ9q7seHEOKYZDwSwjvq
HeuopZ1RljlzIoR7/KTGbmOEJTLc7rJCtT3NBpfsl2zyzB5mkXS7lWWi9jEl
eh//+GavU6C/4A9P7V2K9W72GbJvxZL4hBAW7A96qp4mW1iiyv27vOAelROc
1I/cp/Rz+g2ZLV/Lv3z1VmhP6+dlmcyVYzJJrsX+Jz/aGTJfXpTP5QZPvF+2
Z/RMWSHz5LhMljveP+ln9auyiz0G3W/Gkjhv8/aknqKnyjssUuleJd8T8XZo
X9d7OeaLXSrfkuh91c7TO1jnsb3NFb2TXQbsOVL0ZhaosA+4pvdwxJT9m1y9
nTUe2VsU6a/Y4Y09y2m9iXlu25/5RY7dxioP7X5+cMpuZI5yu4z/1xZZAQ==

            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GmUjnUYB+DXjLIOxpJ9xjZGSiRbkT2VnNKQrbIMX7LvpGMnZD9tsoVC
Za8v9pS17FsLQtkKOcdWfLBc94drfr/7fue877zP83+mfHa/rL45EonEJ35E
LvSjIiWSEont5nv6eCqbR5rP6e+Qbs4jU+SH8lWv7ZdZ3NAfsZ+qr9Svy2EU
5xnzBtmQ0/ocLuv9KRTvbf5Ndua+vh5vlfjcXIkd+iheoxYb7RpxRv+MniSz
yC6DnfpoWlObnPG38SiL43uxSx/D69QhF0vsM9mtjyWLumyya8xZfS69yM0X
dlXYo4+jDfXYbNeEP/V59CYPX9o9zk/6eNpywNyGm/oqnmWLuSl/6fPpw+/m
LjyIa0lelpqr8rM+gfN6T/LyhvmgbMut+O4u6DR9tX5DDo/7zXPmrbIZ5/Qc
fm+SvkC/IgdQwS5VpspPZTXZ1+sn9K6kxc2Kz5Wz4m+SG63u6KPiHprTZFE5
Vz4l83l9mf4EJc17zff1CUzUL8he5KOA1z+S7ewPxXfjdtwz++n6Gv2mfDfe
i/rm72Vzzsf55qo+kML0M5+U3eL8s8mcn+X6k+zT36c9h+Nz+U9fSwO2mV/g
QpxR+pPCV3Ft2K9PogPP84NdCy7GGWUABfg6rgUH9Ml0pCE/2r3IpTivDKQg
39hV56A+hU40YrvdS/wdZ5hBFGKFXQ0O6R/wJo1JZaX90xzWp/IWTShMEYpS
jMcoTglKUorSlKEsaaRTjvJUoGKcZe9dkyP6NN6mKZVYHf8TOKpPpzPN2GH3
Mv/Es8VgMlhjV4tj+gy6cMTcnv/1dTRnp7kll+NZYwinzNkksdlcOe6jXpvj
+kwu6r3JH+fZfFR24I7+Lbf0EZSK+27eJV/hip7kDE7Wl+r/ykEUYaj5D9md
5DjHfm+23GJ/V44mwy5dFpPz4t7KzPg+ep34PPMv5gfxTJAZz5f5kt6HcuYU
WVB+HM+S7Ob1Y3pHypjvmnPLGebv9NvyPUrHs2A/J86m/W7Ziqt6sv0UfZl+
TQ6OZ5dh5tOyBznZaq4S10ivy6/6bLJ5CLdKu80=
           "]], 
          LineBox[CompressedData["
1:eJwV0DtMU2EABeBiQCUhaELAQZpQXKwUrE4qOiOPojKiLkgfE50gqDVRBwcW
EsESCcwojEp18zEpuPoCDY8JBm1dMKE18bvDl3POf/v4cyND2YGRqlAoNMug
si9f0sUHO8EvfYFxNuwkNbyxo7zQz/FNf8yOHvxoPbfsz/I6ZX2ZPT1HM5ft
j7Kf3/ozivoojdy2N2WKg9Qd8B/yrfN9eZ8WmpzPyVPB/eV5jjv7bofkI/uk
nDJ39SwR+4g8KvMyJoc9/6LfIGxX7Fo5aUdlwf6r3+OEHZYN8qns9mxFXqGo
Vzuf0J/rJTkW3JM79pZMc4h3dlk+CO5EW/Ce5AXW9GmSfLVv8k9/RQ+r9lVK
+iJ3iVFw1sm6/oQUvbQH33V+kR96njR9dHCaOGd47TOX+KnPkCHBJ2fX+KMv
kWPbznCY93ZFPqSVY97DvIzLs579B9QbTcY=
           "]]}, Annotation[#, "Charting`Private`Tag$191738#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WUVlUABdA3QQ9ioxKCBYqBSHc3CEODBSotCNKNLmkJAWkUhu4WpXvo
0LWU7jIo6XTfH5tzzr3DzPriZW/SNrFNTBRFyf7JGxtFv8ZFUSIP9JV8S1Py
scp5LR7qv9CPZhx01o7M/GEnkZ/Vdm0ehd9Lf5pzyFl7svCnPY0CrLHrELHK
HkALDttfkZWD9nQKstauSwyr7YG05Ig9JSGKOsgXOeRsBoVYZ9cjljX2IFpx
1O5INg7bMynMers+cay1B9OaY3YnsnPEnkURNtgNiGedPYQvKEoxNjpvSArW
29/RhuN2Z17iqD2b4myyG5GSDfZQ2nLC7sLLHLPnUILN9gekYqM9jC8pyRZn
H5KaTfZw2lGK0mx1/hFp2GyPoD0n7a68wnF7Ljf1oRTiul2GbfrHpGWL/UiO
oTTf25dkP97lHzt1fBT9pFcJn699SnbjVU7Y8e4n6jllBZlJLpXz3N2SwyhM
RucL5Q3n6fQkPZesHj5/+bPMI8u6T9Y/Ce+znU5mkDPlm3Kr+0iOtV+TZeTz
crF8W450f1nvH94LO498Rs6X/7pLo0/Rq4bvtr5cdnB+WnYPv5OnnM+VJ52n
0CfpFZlv35bDKcJNuxzb9cYksM0exRV9AO9xye7IGb0HOThlL6A8O+wmpCfZ
Hk0nKlCRSkz1rFSWVdjp5z7lMbbbP9CZs3bP8Flw2l5IVXbZn4X3kR32GK7q
A8nLZbsL5/RevM4ZexF39BEU5ZZdjd365zzOTnss1/RB5OOK3ZXzem/e4Kyd
0ns5Wa/EYvtu+M5RjNt2gvtp+vtUt/fIpjwR/pa7WXKX8xh9nF6WcfZ/cjD5
edbdAnnVeVp9avj7sprMKleE77bs5v6C3ic8n3Yu+bScJ9+S59ynkj+G90NW
lpnlMplbLnF/Tx8ZngW7uHxOLpJ33KXXp+s1yKavDK/L+V7ZjCfD63I+W+52
HquP18sx3r4uh1CAa3Z3Lup9w3PAeXsp9/VRlOCuXYN9evPwPWaPPYEe/GV/
HV4fF+xl1GS/3SK8fvbaE+lJIgectQzPEPvsSfSiFrWpQ5LvZl1Zj/o0oCG/
+T+twmfCfnsyvfnb/iY8r1y0l/NAH01J7tmN+F1vTcbwfnl/5sgDzuP0CeE5
kuXlC+HzkO/I/wHSTOio
           "]], 
          
          LineBox[{1013, 909, 824, 755, 640, 1004, 900, 815, 746, 694, 604, 
           981, 877, 792, 723, 671, 641, 605, 606, 607, 608, 609, 610, 982, 
           878, 793, 724, 672, 642, 611, 983, 879, 794, 725, 673, 643, 612, 
           984, 880, 795, 726, 674, 644, 1005, 901, 816, 747, 695, 1022, 3238,
            918, 833, 764, 1038, 934, 849, 1057, 953, 1075, 613}]}, 
         Annotation[#, "Charting`Private`Tag$191738#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XV0VnUcx/FnsA0Ug+4a6FFpJDYYqMBoBUQZDYoBEoMxujstGqT1HOlS
0qJTQMpGQDrlKDlCff3+eO/zfX9+v/Pc59773Lu4Dt2bpkRFIpF0f+KjI5G/
YyKRVPSIjUSyyGT5sxwiv7X+gtzM+8qW8h15Xo6z9ox5kbkG2ppPyBv6hub9
5nfxHs/KPzaXwHGexHea2+NzXoGvNTdCBAm6f2RPPIbv+Hh0RjZ7J+lK4g++
CFVwg6fhcWzmE9AFVZGIaqgezgc37emFJ7CFT0RXvIhbut54Elv5++iG7I47
WVcKJ/hivITbvA+yYhv/ACnIYf8UXWmc5EtQA3fCtUQ2bOcf4ll7F/OauMm7
I6duKi+DU3wpauIu74fs2ME/wnP2LuG1cIv3QC7dNF4Wf/LafJf5DSzjFfk6
c2O8aT4to4KbD8nO4fPsS5f9kQPNrf0id4ZrZd4SvotsFe61vCBHhnttvYRc
Gq6zTJLt5Ek5TN62/rI8wAfKjrKLvCrHyFTrueX08BuQ5WQr+bs8ba2OeXf4
3uH3Zb4sl+srmdebm6CD+YzMENx8OBwDSfbdkwOQE7vCfbS+1dwak3hJvsxc
G3d4T+TRzeDlcYavQGXdBv4qMob9uvvhnJALu/lklLJvOa+DuzwNeXUz+fM4
y1eG88IDPgi5sYdPQS/ks3+WrgLO8VWoi4d8MPJgL5+K3qiHf8NzjLzYx6eh
D+qjQXhOw33AK2iE/+wbinz4nk9HX+R37E90FXGer0ZjRPTDdPmxn89APxTQ
z9ZVwgW+Bk0QpR+uK4ADfCZK61bwukjn/VFQN4dXxkX+BeJ1G3lTRIdrrsug
G2EuiIN8FsroVvJ6uMcHoJBuLo/HpXDd+J7wG8GXPIFvMr+GmPDZ/IjsGo5n
PSMfaS6EFuZf5Q/heTZvC8+HbCM7yotyVLhe1svKVeF9IuvL9vKUHC7vh+su
D4b7LTuF48lrcqwcaL2wnMfTZEL4fcrj8nK4v+a95rfCs2q+IteGd6H5K/Pr
Yc18VsaG8zAfld3CedoXzUeZC+NQeLfw7ea2mM3L8dXmBnjAB6GIbj6vgit8
XXi/6r7mzZApHFcXoxttLoLDfA4Go6h+ga4qrvL1aIZY/RhdURzhczEEychk
baw+Dkf5PAxFc7RAS7RCa2S2d5x9xXCMz8cwxOkX6hJxjW9AGzyiH68rjh/5
AgxHMf2numr4i29EWzyqn6B7Cj/xhSivW8Mb4iEfgeK6z3h1XA/PG99nfhub
eCL/xpwcOvM5mTncF/MxmRIwX5ft7M9inmhOlU/LlvK38KyG/9XWa8kdfIBs
JzvJS3K0/B9EXf4L
           "]], 
          LineBox[CompressedData["
1:eJwVz7suw3EYBuBP0kqIwzVIaFnNTrNgEEITiR7UYaAmmwXFoNwDrQtgc7oB
g0mDxuAGpHoBeDo8eb/3/f2X/0C+NL/TEREZbpIRe50RMzIrv+SB/E1EzMkX
fV9uyW35LQ+9Dbqr7glW3J+yaZ92P7uL3Olj+qN7iS4W9FdZYtV7j37mTvGm
XzJqu9Vn+dOPGLLV9El+9Huy9NortjTv+hVlcvR5O7cP86FXOSZPgTWKrLNB
v+8vfDtCQ69xQsp+bZuipT8wbnvSl+lmUa/L3fa/uZvyVG769h+zdi+h
           "]]}, Annotation[#, "Charting`Private`Tag$191738#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8T1Ucx/HvTzISkYjsFbIryd4zRTuhECK7vY3MkPWzMrKVvYVCVtkj
m9ajVGY2ZfX8/PF6vMc593d/33PPPTdfqy5PdU5KJBLdUyQSg1IlEufSJBIP
Y2LqRKIUjulWI1vaRKKpfqPuOaTDYP15XVl8IZfGn7pK5nbXHZffxxpddl0z
3Sb5edyJRroRuhv8Z4F5F+RHMEkug790lc3roTshf4C1uvt0zXXfyy+ggzxf
zo70cmM5mb/JD8FH8ndyMQxx/UVaDpONPYiXjU+Na/G38SpyT/6ksaH8Xv5D
/i1+BV8A0/i/6Xfm5+Bf4ufTH8wbSHfK62gTuSNdIC+n98V60d/pFprB+JN0
pLyI3pJH0cOx3nSo/DFdJ39Li9OZ9CQd6t6X6KOYYl5f/Rb+Ib4FP43PEM/C
vKpyL/5UrAfellfKBeP/NJ5TfpnfbOxF3IWndKN0CQyTh5l3mS+PqfLDOKFb
j1zmtojfpGuKjBiuv6KrEOsll8VJ3QaMQDJGYhRGYwzG4nOMw3hcdW1FTHft
Izil24jc7tdSv1XXDJkwQf+vrhJmyOVwWlfN3E90p2MtsUmXR9dKt01ujrvx
tG60LgnD5Ynm/cdXjjWXH0VLc6bLd+GM8epy7/CxPvw+vjv/Dr+KLxT71Ly8
8iv8dmOD+F38S3wnfiH/Nc0Re5/+Eb+LZjb+DB0jL6Yp6Gh6JN6leH+Md6fr
5dW0BP2SnqK76Bfue42vgrnyl+b3o1tj39Lycis6Q86Icfwv9B/X1eD7hI/n
yO/ne/Dv8t/w9+MH8/LJrfkd8R6hs7xIzol75GflsfxtSJYnueY6XxVfyRVw
VrcZ+c1to98Z+xdZMFl/Q1cNs+SKOKfbgimYipvGqmO2sUo4r9uKabilr4E5
+sq4oNuGAu7VNtYpnimyYro+oa8Z6yVXwUXddhTUv6rfHWuGezFDn6SvpZ8n
V8UlXU1dX91ZuSd26Arp2un2yK8gG2bqU+hrx9khV8NlXS1dP905uRd26u7X
tdf9KLdGF3mxnCvOvTiX5c/5lBgp95A38CVjT7j+NrkOv8BY9fgf5JlyJlwx
Xlvuz583NoI/wH/Cv8d/yxeOd5A/HmtmfmH+tfh7cT7G94DultfHM5S70iXy
Cpo7zlp6LN63OAPjO0DHyUvo7XQMPRrvSpw5sW50o7yGloq9Qk+HundKvi6/
0Lz+/LZ4xrEuscf5u3HVvDryAP6Csd7YrSui66DbJ7dFDszS366vF2ewXBP/
6vagqL6jfr/uVeTEbH0qff14L+VaaCN/JWfGf8bryp/yF431iW+hvFouEs/Q
+ANyJ/5AfPv4PXw7vhu/lF9J88S5Tv+Mc4Pmiu8dHS8vpanoWPpTvItxdsV+
oZvktbR0vDP0TOxbOsd9U9MGsV/j+Zg/gG6Xa8d68LPivcV4/ld6zTX1+IH8
JXOS+YN83/ge82v4othrXjG5M3/QWHu8Li+T8yK33ESewKeO5y3PdU0a3WPx
e+Q6scbybDkLrhuvLw/iL8fZhX264rouukPya8gT3yzdRF2aWBN5nnlpdQ3l
ZXJd3NA10A2OPR97B/t1JXRddYflDsiL+fo79I/rl8v1cFN3ACX13fRHdB2R
Dwv06fRPxFku18ct3UGU0r+uPxrnPfJjof5OfaN4R+QGSOCQvrT+Df1PcZ6i
ABbp0+sbx96QH0MSDuvL6N/U/xznAgpisT6D/kn9Krkh2sUekLNiAv8b3Uz/
B7XsYI4=
           "]], 
          LineBox[CompressedData["
1:eJwV0stTT2EAxvHXrQvNuMs2M0JhRlGqP8H9V8m1hR0Ll1JJaUMLijBjg1Bm
bFxmzOgiIpcZ2WSGlaHbr1zGhqWw8HkX33me5/t7z5zTOWUdOJI4PC2EMIgL
aSH8Tg3hLD6lhJCXHkINN2ofxXI84ufyCf6pvQXT8ZnP52v5MfsYstHFz+NL
+X57K2ZgmF/P1/HjdhVWoJufz5fxz+xtmIkRfgN/gk/a1ViJHn4BX84/t7dj
Fkb5Ar6en7CPYxV6+YX8Tn7A3oEUjPGF/El+0q5BDh7zi/gK/oWdQCo2cW3c
lH4O485t5Bq4L3YtcrGXu8ml46rd59xibpf90i5FGjZzF7k/eguSzhVxjdxX
uy7+zXaPnYXV9j77lj4b1+zT9ht9HZ64fom9W38Vn1Ef0sv0g/p9PRM39GR8
vvgt9Uv6X/2K/lFv1Rv1gfi9ZY68I3/Id3LCfYrlKfuh/OZ8m/xgv47fK757
2RufSS6Tt+M5OSTX+H2/7LC75Zz4nuSIvO63M/qgnoe7+s/4HO6Zqe+J93Cm
HIfsB/bS+D7i/5l9Wf+nn8eka0q4Ju67XY+1qOQ6uQy02832Wz0f9/Rf8r3s
d/1/iE5sXg==
           "]]}, Annotation[#, "Charting`Private`Tag$191738#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWwVWUYhuEFFqWodIMzJqC0SihdKnFQutsxaDh0p45BHdKgYcYWBJTQ
EVAwEJTubgw6vd4f9zzxvWvtb68q0r5bypvpkiTJlz5JtmVMkuOZk+QlbM6U
JN1RHBmQJUuS9NRf5KegIbabP6Grhz/kHngSRc2+r8uOr+WMuFfXS77ET0UK
djj+pK4+tsg98RSKmZ2oy4Glcibcp+stX+bT0AgVdHN0D2OdvNP5TvENsFXu
hZpmPpFLBPF/5El8TiyTG8ur+MrILGeV+/BX+GmoJy+Vn8HLckV5Lv8IuvHb
6Hp9K/5HvhYG8YfpLvs5TRtimO5Pcx3oRvm9+D9yLfqpPI6WpL3oLjolclxP
OlkeRXPR1+gWOpF+Y70JXS2/TavQAfQgzWLtfr4vf5Xvwv/GT+fr88v4Z/GK
XEmexz+KDXJreR1fG7v9hzM0BX9Z64NScZ/MTNHlxvK4v3hA10++xs+Ia4s9
jj+ra4Rtcl+UjvuJvdbOxXXFdrkfysQ9wD5r+3EAB3EIh3EER3EM52P/2GE+
FWXjP+NB+0jVX+dnxjXCcfN/6xpjp9wf5WLPyGa+v/4GPwtNccL8P7omcR/l
AXgaJcxO1eXBivgtZNcNkG/ys9EMz+nm6x7DT/JJ5/uXbxrXVB6I2mY+k0vF
8yWXlNP4vHid30pXxn74NXxVZJNzyAP5W3xX/nf+A75BPBP8eFqe9qP7aBpt
bv15ukAeTR+n3el2Oon+bL0NXS+/Q+vQwfQInUlP2f9/fDMMl/eY70g3xfPO
1+E/50ujN787nq94VvhpfD58G9dGXstXi++DnFMexN/mP4zvirxcroAWcmV5
If8ENsqn7eMC3xx75cEoH8+Uuem6/PgurhFy6QbLCT6SW+KM4y/GubFPHhLf
kdgHcpsfok+Hj+Odxlnzl+SW2C8PjW9AnBvnrF3Wt8IBeVi8S3EenI/nLZ6h
uO9x7XDFXGsctD48nhHkwQVrV/VtcEgeEfcKeWPdnobq02NOvJu4aP6a3BaH
5ZFxnZAvjjE/TH8H5sY9xSXz1+V2OCKPQpV418zO0BXAKjl/nEM3XL4T8+S2
MatbJBfFJvmy893g2+OoPBp1zXwhl4nnNN5FeSZfEKvl5vL3fPX4vfgteQR/
F17lN9P5+hR+BT+BVqSpdD+dRttZr0oXy2NoMdqD7qCT6S+xX7pBfpfWpUPo
UTqLXrHvm3wHjJCPme8Ux8X5+Bf4L/my6BPPeDyn8Z3gZ/GF8EZ8x+kafQv+
B75G/E+5gDySvxsL5EbySr5SXCu5mryEL45f5av2c4vviOPyWFSP74y52brC
WCsXQkHdKPkeLJQ74Jrjb8udcEIehxooHMeYH63PgEXxruK6+UTfWXdSHo+a
KBLH6MfoM2JxXBfcMJ9O30V3Sp6AWngojtGP1WfCErkzbppPr++qOy2/hRfl
r+Ry6MvvpVPp/4FmJW8=
           "]], 
          LineBox[CompressedData["
1:eJwV0KtT1FEAhuGDIAssqOBfwMUbMhoRAhRkRFZkHGkWCQgLLEpzDAQC1+Wm
RWZAyIAo0LQIBAzqGAg0x2DyhpjR54R3vu97z8zv7NnyzoE7mZwQwhoWkyGU
411RCJWoKA5h1E5ixX6A48IQcvke7rs9iRuowj9nec7Szn7YWbTgXPweP8YX
Y9XuRsBJvpf7qU/hJs7H7/HjfAnW7B7kIJ/v437p02jFhXgHP8Gfwks7jRNI
8P3cb30GKVyMd/CT/Gms273IRQGf4Q71WdzCpXgHn+XP4JXdhzwU8gPcH30O
bbjGveAqsG1Xxzu5KbsUr+3++HYU8Q+5I/0pbqOOW+IqsWNfjr+Bm7bLsGHf
td/oDcjYTfaKfgUf7fv2nt6KfDtpP9L/6l36B/1ZfJ++pdei3a63l/Wq+F19
X+7y9/QdPSub5RP5Vc7LmvhGOWMPy7MyLT/LWbnpvEO+tSdko3wsv8jn8f9z
fl2u2iPyqhyUB/KTs079vZ7CkP5NLsiEs/9HUlKg
           "]]}, Annotation[#, "Charting`Private`Tag$191738#5"]& ], {
         Directive[{
           Opacity[0.2], 
           Hue[0.67, 0.6, 0.6]}], 
         LineBox[{562, 563, 561}], 
         LineBox[{1077, 1078, 1076}], 
         LineBox[{1674, 1675, 1673}], 
         LineBox[{2516, 2517, 2515}], 
         LineBox[{3231, 3232, 3230}]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-6., 6.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.865361029035945*^9}, 3.865445408672529*^9, 
   3.865445465281426*^9, 3.8654456787461615`*^9, 3.8654457684634714`*^9, {
   3.865445884836256*^9, 3.865445921420556*^9}, 3.8654460587696333`*^9, 
   3.865446443250679*^9, {3.865952125553069*^9, 3.8659521516667013`*^9}, 
   3.8659522247202935`*^9, {3.865952279668687*^9, 3.8659522923016386`*^9}, 
   3.865960380517995*^9, 3.8659604237811317`*^9, 3.8659604862431183`*^9, {
   3.865960526854105*^9, 3.8659606215087757`*^9}, {3.8659608307097435`*^9, 
   3.865960868038782*^9}, {3.865960935615129*^9, 3.8659609432706757`*^9}, {
   3.865961026919873*^9, 3.865961042898753*^9}, {3.8659618737415323`*^9, 
   3.8659619220130653`*^9}, 3.8659621773942356`*^9, 3.865962208141383*^9, 
   3.8659653341237497`*^9, {3.865966920464451*^9, 3.865966952803088*^9}, {
   3.8659670377118826`*^9, 3.865967084214981*^9}, {3.8659671567557373`*^9, 
   3.86596716982355*^9}, {3.865967354328431*^9, 3.865967365694789*^9}, {
   3.865967429099472*^9, 3.8659674436738024`*^9}, {3.865967497088687*^9, 
   3.8659675719317055`*^9}, {3.8659677533835645`*^9, 3.8659678198432693`*^9}, 
   3.865967879244236*^9, {3.8659679215246882`*^9, 3.86596797117278*^9}, {
   3.865968013975065*^9, 3.865968049366725*^9}, {3.865968179144141*^9, 
   3.865968295722787*^9}, {3.8659683292590413`*^9, 3.865968337405431*^9}, {
   3.865968399526526*^9, 3.865968431918147*^9}, {3.865968471686404*^9, 
   3.8659685928285875`*^9}, 3.8659686585365334`*^9, {3.8659690928773613`*^9, 
   3.86596912452522*^9}, {3.865969364031477*^9, 3.8659694647951903`*^9}, {
   3.8659695001958475`*^9, 3.865969589464244*^9}, 3.8659696214759865`*^9, {
   3.865969666100687*^9, 3.8659696876527815`*^9}, {3.8659714896133933`*^9, 
   3.8659715124820657`*^9}, {3.865971671047258*^9, 3.865971706849786*^9}, 
   3.865974159481908*^9, 3.8660468621315126`*^9, 3.866572018043004*^9, {
   3.86657320750891*^9, 3.8665732165980134`*^9}, {3.86657330942043*^9, 
   3.8665733505073357`*^9}, 3.8665733817473783`*^9, 3.86657341653929*^9, 
   3.866573451408177*^9, 3.8665736708992233`*^9, 3.8665741122335663`*^9, 
   3.8665741531065397`*^9, 3.8665742791683626`*^9, {3.8665746317060056`*^9, 
   3.8665746395135174`*^9}, 3.8665749401956873`*^9, {3.8665801236386766`*^9, 
   3.866580150905987*^9}, 3.867167157910885*^9},
 CellLabel->
  "Out[973]=",ExpressionUUID->"73a7ff5b-7b09-4d9e-8160-7582222a8b42"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8659610922599387`*^9, 3.8659610956218615`*^9}, {
  3.865961325815102*^9, 3.8659613437903414`*^9}, {3.8659613901624837`*^9, 
  3.8659615902083845`*^9}},ExpressionUUID->"95c2d440-5f34-4096-8d7d-\
805c19f73e37"],

Cell["\<\
We were able to get this bad solution to the given well behaved solution \
after a few iterations. \
\>", "Text",
 CellChangeTimes->{{3.8653459472042875`*^9, 3.8653460042180605`*^9}, 
   3.865346104423029*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a4d3e002-6aa2-45cc-a329-b64caecefa39"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", "IC2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"error", " ", "=", " ", 
    RowBox[{"Norm", "[", 
     RowBox[{"ICs", " ", "-", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
        "order", ",", "maxIter", ",", "maxError", ",", "uBound", ",", 
        "maxCount", ",", "InitGuess", ",", "maxJ"}], "]"}], "]"}]}], ";"}], 
   " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
      "uBound", ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Error Final = \>\"", ",", "error"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
       RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "6"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
        "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "6"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636127929494734`*^9, 3.8636129048647366`*^9}, 
   3.86361309340853*^9, {3.8636132740148587`*^9, 3.8636132890980425`*^9}, {
   3.86361367016436*^9, 3.863613704067534*^9}, {3.863614005426304*^9, 
   3.863614044030977*^9}, {3.86361407671554*^9, 3.8636140789588237`*^9}, {
   3.8636141197098103`*^9, 3.863614156970913*^9}, {3.8636143059493403`*^9, 
   3.8636143423397207`*^9}, {3.8636146524377003`*^9, 
   3.8636146681296897`*^9}, {3.863615502417285*^9, 3.863615703473082*^9}, {
   3.8636161037482653`*^9, 3.863616122815179*^9}, {3.863616300467451*^9, 
   3.8636163404706755`*^9}, {3.863616379759131*^9, 3.8636164322373734`*^9}, 
   3.8636164758294525`*^9, {3.8636165064106874`*^9, 3.8636165068755407`*^9}, {
   3.863616588161584*^9, 3.8636166296943207`*^9}, {3.8636166641123295`*^9, 
   3.863616732677436*^9}, {3.8636167693047395`*^9, 3.8636167704293804`*^9}, {
   3.863616826318534*^9, 3.8636168556931543`*^9}, {3.8636168995821395`*^9, 
   3.8636168999240313`*^9}, {3.863619302411866*^9, 3.863619416136552*^9}, {
   3.8636195563387823`*^9, 3.863619570937121*^9}, {3.8636197069376936`*^9, 
   3.8636197273581724`*^9}, {3.8636205744286833`*^9, 
   3.8636207335498743`*^9}, {3.8636207658335643`*^9, 
   3.8636207659625244`*^9}, {3.8636208211778917`*^9, 
   3.8636208543832893`*^9}, {3.863620930334037*^9, 3.863620936617031*^9}, {
   3.864135467525829*^9, 3.8641355031932845`*^9}, {3.8641358508757644`*^9, 
   3.8641358994820337`*^9}, {3.864136005621681*^9, 3.8641360284712887`*^9}, {
   3.8641361588251004`*^9, 3.8641361878597054`*^9}, {3.864149523908724*^9, 
   3.86414952549721*^9}, {3.8641504554392495`*^9, 3.8641504662587476`*^9}, {
   3.864150523008383*^9, 3.864150605221774*^9}, {3.8641506500782566`*^9, 
   3.864150690388214*^9}, {3.8641515284209967`*^9, 3.8641515289998107`*^9}, {
   3.8641516589627523`*^9, 3.86415165924166*^9}, {3.8641517275125647`*^9, 
   3.8641517616755095`*^9}, 3.8641517984915934`*^9, 3.864152052785297*^9, {
   3.8641521525610065`*^9, 3.864152184609634*^9}, {3.8641524131266785`*^9, 
   3.8641526257358713`*^9}, 3.864152761298999*^9, {3.864153148514683*^9, 
   3.864153171941102*^9}, {3.8641532143853645`*^9, 3.8641532502927427`*^9}, 
   3.8641533364128733`*^9, {3.8653433741568346`*^9, 3.865343389585903*^9}, {
   3.8653435025178013`*^9, 3.865343556974392*^9}, 3.865343662550641*^9, {
   3.8653439817835903`*^9, 3.8653439830341897`*^9}, {3.8653443150880394`*^9, 
   3.8653443220478144`*^9}, {3.865344369751565*^9, 3.865344369894519*^9}, {
   3.86534442575966*^9, 3.8653444262555013`*^9}, {3.865358620302966*^9, 
   3.865358628368388*^9}, 3.8653587956619086`*^9, {3.8653594336949434`*^9, 
   3.865359473096348*^9}, {3.865445033367549*^9, 3.8654450388677907`*^9}, 
   3.8654454578238106`*^9, {3.865445645297858*^9, 3.8654457040770626`*^9}, {
   3.8659521591313095`*^9, 3.8659521801135883`*^9}, 3.8659522440960875`*^9, {
   3.8659621904140654`*^9, 3.8659621913027797`*^9}, 3.8659622596528797`*^9, 
   3.865969703875583*^9, {3.8665736821686335`*^9, 3.866573682592497*^9}, 
   3.866574139250957*^9, {3.8665741749615755`*^9, 3.866574189372981*^9}, {
   3.8665742596365895`*^9, 3.866574275584506*^9}, {3.866574591925684*^9, 
   3.866574649815235*^9}, 3.8665747081046586`*^9, 3.8665749859661007`*^9},
 CellLabel->
  "In[978]:=",ExpressionUUID->"539af9eb-2787-4ce5-94ed-3f323d9493e1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "0.0032143067022231816`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "0.0032143067022231816`"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 0.0032143067022231816`, 
   "    Error Min = ", 0.0032143067022231816`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8665734718076754`*^9, 3.8665734783595877`*^9}, 
   3.8665736835981765`*^9, {3.8665741177738004`*^9, 3.8665741644299307`*^9}, {
   3.86657420986545*^9, 3.8665742239699545`*^9}, {3.8665742857892523`*^9, 
   3.8665742987011375`*^9}, 3.8665746062671127`*^9, {3.8665746506509676`*^9, 
   3.8665747679285903`*^9}, {3.8665749875016108`*^9, 3.866575058210075*^9}, 
   3.866580159452263*^9, 3.8671671616316943`*^9},
 CellLabel->
  "During evaluation of \
In[978]:=",ExpressionUUID->"35bc9b63-c731-488a-8002-2f6368ba3f8e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error Final = \"\>", "\[InvisibleSpace]", 
   "3.704166434143802`"}],
  SequenceForm["Error Final = ", 3.704166434143802],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8665734718076754`*^9, 3.8665734783595877`*^9}, 
   3.8665736835981765`*^9, {3.8665741177738004`*^9, 3.8665741644299307`*^9}, {
   3.86657420986545*^9, 3.8665742239699545`*^9}, {3.8665742857892523`*^9, 
   3.8665742987011375`*^9}, 3.8665746062671127`*^9, {3.8665746506509676`*^9, 
   3.8665747679285903`*^9}, {3.8665749875016108`*^9, 3.866575058210075*^9}, 
   3.866580159452263*^9, 3.867167164900649*^9},
 CellLabel->
  "During evaluation of \
In[978]:=",ExpressionUUID->"a694c5bc-2c3d-4876-b337-5351b20191cc"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
YJQ=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{648, 2354, 2352, 265, 266, 267, 268, 269, 270, 271, 
            566, 479, 409, 356, 321, 300, 582, 495, 425, 372, 336, 600, 513, 
            443, 390, 272, 567, 480, 410, 621, 534, 357, 607, 520, 640, 450, 
            629, 542}}], 
           PolygonBox[CompressedData["
1:eJwV0c9Pz3EcB/CPcqmt5tBmRulbW0K0JDXCJf3AqZJ+XKplIVNzUKwtWmb9
kP4BkjN1kpMutTGXQvkHpLpE+sEhbT3eh8eez9fr8+P7+Xw/seb2yrtxURTt
YZTchCg6yar+i99kOWHWCf1Uk8ch1hw74ticPsA1TpHKWfsf8gU3KeGP87Pt
v+iD1JBPhd26fEMnaZyzW5QvucUlKu225Tsese5+R+2+6kNcp94czwf9NJf1
DfmWDv0AXXqLTOKj3iVjHNaL5U/ZLUdl+HP284Tb5kaZwGOmzffDdfRTaq6S
/2WPnJT35EGehmvMrXIffXw2P5SZ4Rm9yzH5ze4ZbXoKtXqD3MuUXsAVfVOO
84Ab5mQ+6emc15fkq3AfmsyJzOhl4RvqO/I9vWz67eN28/owdZzhqt2WnAjP
SYwLdstyjDuUs+X6HPsF/Xn4BhSSwV/H/nHC8e/mkfA+FJHJRfsV+ZpdaL1O
bw==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{233, 2353, 2350, 236, 235, 234, 283, 304, 339, 392, 
            462, 549}}], 
           PolygonBox[CompressedData["
1:eJwl0ktIFAEYB/BZKysSokCIKMgwywK1soP56nmwfERgXlarFaQgXV8g4uOg
1sGbZeo9raBL1iW7WAeF0Hua1V2tjtaqqb/Bw4////tmdmZ2dtNi8dsNSUEQ
RHhD9t4gyGGPxW6S2cVOdpBEJLL9gTNcopYRfnLBxTYdPq0XE2OYH+Q6tuFY
hd7Ca/5w3T5TdvOeBLfsiuTn8Dn0Gu7rQ3znvPm/a83qB/WHPNaPyBY+hs8o
qyjXj8k2pvUemUItzeZDMs4rvUv+ltfkKdkvj9POF3Ov3E8dXeYn8jBNvAu/
g/wnK2ShPCpb+RS+S1nNPT1VPuK5vsA5fd0jz+gH9Af06RNscsdcJqfYp8fC
e+ov+cVV80nZyTh/KbcrkJPhb6hHuasP8o2z5jX37NU/sEGlXalsZIxlrthl
yA7eskKZXb6s4Rnz5Nitut5NPc4oS1y2PyEvUs1T5si2Tzj/ht7ACxbD/5R9
uswjygBfyQrfrfNL9Hq2AC69T/o=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 189, 153, 121, 92, 68, 51, 204, 168, 136, 107, 82, 2, 
           190, 154, 122, 93, 69, 52, 3, 191, 155, 123, 94, 70, 53, 4, 5, 192,
            156, 124, 95, 71, 54, 205, 169, 137, 108, 83, 6, 193, 157, 125, 
           96, 72, 55, 206, 170, 138, 109, 84, 7, 194, 158, 126, 97, 73, 56, 
           207, 171, 139, 110, 85, 8, 195, 159, 127, 98, 74, 57, 208, 172, 
           140, 111, 86, 9, 196, 160, 128, 99, 75, 58, 10, 197, 161, 129, 100,
            76, 59, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
           25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 198, 162, 130, 101, 77,
            60, 36, 199, 163, 131, 102, 78, 61, 209, 173, 141, 112, 87, 37, 
           200, 164, 132, 103, 79, 62, 210, 174, 142, 113, 88, 38, 201, 165, 
           133, 104, 80, 213, 177, 145, 116, 63, 211, 175, 143, 114, 89, 215, 
           179, 147, 119, 39, 202, 166, 134, 105, 217, 181, 149, 81, 214, 178,
            146, 117, 64, 212, 176, 144, 115, 219, 183, 151, 90, 216, 180, 
           148, 222, 186, 120, 220, 184, 227, 152, 224, 188, 40, 203, 167, 
           225, 135, 221, 185, 228, 106, 218, 182, 226, 150, 223, 187, 229}], 
          
          LineBox[{118, 65, 91, 41, 66, 42, 43, 44, 45, 46, 47, 48, 49, 67, 
           50}]}, Annotation[#, "Charting`Private`Tag$193730#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl02dwFWUUBuC9EAgJgSBjJYCESI8mkFAsoEBAsQCDDRQ1UpSogIJKQBFM
IIRuwTqjYMEyY3cEhBGw18FewMaMgiY0RVqk+Zzxx5P3/c7u3eze/W7uqInD
JqSSJJniT41sVy9JNujVXEwhOdQ6to3tnJaRJDvkTnbR3mc+d85cLqErLfnL
sQ6OfaHP41K60YozzH+TjzGOEv52fkfzL/X5XEYRg8x2yxdS/99na840+10+
ThkDGGZ2UL7BTHa7Xiezr/QFXM4V1vV5Sy/mfP0f+SI36ydRro+RTfhQL5e5
nKyfJbfIO+VSOUGewGxusC6VGdzNu9a3x+eYy8D4TuUhOUOukJNkDnPiM9bX
y2bM4hPraTIv7tGzdJZfmy3kRv1YhutXyjTW6t25QN8jX2IqY62b8pHeht76
VrksrsO11pm8p58b71A/LFdSwR7/u4vZN/oiRtCDC832ypfjPsmlj9kf8glu
4jz2+ny++bf64ngH9KQt+xzbz6mOf2d9TzwPvcjjbPM/5ZMU2HfjYz9wIPah
Y9/r9zKS0zmFc8xr5FPxfuIdU+f8AvMf9Pu4KvYg7ehrXiufZmJ8f/zr/ELz
jfr9XB17jovM9slXuIP29DPbJpfHHorvJfa62RG5ikoOul5Xs036Eq6Je7Zu
wLrYVwzW98tXY3/Rgf5m2+Uz3MIo68a8H/cSvxH9qHyTWYyzPoZP9UP+Zzf9
R/2BeB/6cZTG88uGrNdvla3orQ+RB+Rd8rX4n7IFVUy3vk5mU8nHsb9kW+bR
0bpE7pDT5bPxfcoTmaSPlllU8IH1FNmGwfHblAmr9cmyZfym9DLZnM/0w04p
0n/SH4x9G+/FOp23Y+8xVK+Tr8cz0IkBZjvlc3HteEaOuFax+c/6Q/G9xl6j
M0cd6+7YL/rDcd+xp+hCQop61CeNBjQknUYU2qcZMpPGZNGEpmTTw7V/lY8w
JvYf+Qw03yWfj3cSz8JwsxRr9Cqa0dN6s3yU8frxjI09JRsxk3esb5OtqeY/
zNWuHg==
           "]], 
          
          LineBox[{593, 506, 436, 383, 301, 583, 496, 426, 373, 337, 273, 568,
            481, 411, 358, 322, 302, 274, 275, 276, 277, 278, 279, 280, 281, 
           569, 482, 412, 359, 323, 303, 584, 497, 427, 374, 338, 601, 514, 
           444, 391, 618, 531, 461, 635, 548, 651, 282}]}, 
         Annotation[#, "Charting`Private`Tag$193730#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Hf8VQMYB+DblHYfNGgvpVJGaSkttDXQkCgqpT1RtIfVJO29056ipD00
lZZUSIuSFiHP+8fzeb/v95xzf/d3z7k3T4uO9TskSSQSBZMmEsN5JnkisTVZ
IvEqC+Qi3CuPNu9hkXzKeb3l2/KnLJcfo7o8zczDQb60bzArcoqNrmtl/qLf
YfY1l5glOBqvYZ9gPsB+Vtm/Mp/kJP+5fqiZim+Z4fgqsxQvyDPN/GyQvzEr
M8I1z5rbdC1YKBflPnlM/G8slk87r4/8jzyWGvEauta6s3I/HueObpjubmba
X2Skrrp9u9ySzJzRbWIUNRzboXuNLPyk28xoajq2U/c6WflZt4Ux1HJsl64V
2fhFt5U2+l/t/SlJgk/0tfW75dbcz1ndu7p/5c+oyTbdG7pz8gBKMdGendVy
Et6XUzNLbsQsuQBfx/12fZ34/OU2fC4Xi3sW7yE+V5bIX5hl4306/724d7pd
5jhzhfk4teTpZl6+4yv71+ZTnI7P07VtzfP6neZAc6n5CMd4wj7JzMEB1tjX
mxX4kaT2D8w07GG2fXVcR2N5tlkwnkt5k1mFsf5m3Thf9wbZ43+2Z2apfM7x
vvIdeTy141nWtdNdkAdRmmR8qEvLHLlJ3APnPWffK7clB+d1/XQJJtjrxP+q
e9N+UR5MGZIzTl9Pv09uR04u6HbRXn/JPoSypIj3p68f3yX5TXJxUbebCTSI
z03Xntxc0n3LRCYxmSlMZRoN43vtvA7k4TfdHqbzfNxDXUfy8rtuLx30v9mH
Uo6UzNC/oD8kdyIfl3X76Kj/3T6M8twV32v9i/rDcmfyc0W3n076y/HM8iSp
4nnVN9J/L3ehAH/o+uuSMNFelwO6zvYr8ZxQgbv5SJeOuXLTeE6c19h+RO5K
wfiNsGdhmXzV8QHxvDHJ/hwHdV3sf8RzQEUm23OyVk7Nx3J65slrzNK8JM8x
H+QbebNZNZ4hr9ckfifjO2x2MxeZD8f/GefH82VmjeeL5fZ1ZjlO8KfrB5rJ
4jeCyY6vNEtynHpxX8x8cV9Yb99oVor76tqu5tX4bFgmPxrfU3mKmYsv5DQM
lzMwX27GXLkQmyJ7nabx3ZW7U4hrukG65Eyx1+eQrlu85/iMqERa5ulfivcr
96Aw13WH6a6/Fn+fyqRjvr5Z/P9yTx7ihu57FvCyYz/oelGEm7ojLORzFrGY
JSxlGc1dc9K5b1GUW7qj9NBft4+gCulZrn8lfovktynGX7pj9NTfsI+kKhlY
oX9Vf0p+h4f5WzdYl4Kp9gYc1/Wy35RHUY2M8bd1GVkgvxz313kt4rdU7k3x
+A2xZ2OFfNvxIXJKptkbckL3lv2WPJqnmWrPzTo5U7xnORML5bVmGZrH/TEL
x/eUzfYtZjVWec2W5hnddrOPudgsHt8pStjHm/fHbxsr7V+a5eP+8D8ysCmL

           "]], 
          
          LineBox[{1031, 930, 853, 733, 1146, 1017, 916, 839, 786, 695, 1124, 
           995, 894, 817, 764, 734, 696, 697, 698, 699, 700, 701, 702, 703, 
           1125, 996, 895, 818, 765, 735, 1147, 1018, 917, 840, 787, 1170, 
           1042, 941, 864, 1194, 1066, 965, 1222, 1094, 1250, 704}]}, 
         Annotation[#, "Charting`Private`Tag$193730#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1He4j2UYB/D3cM6xS5uyjr3KqgshI3vFKWREDso8x1Y0zIYGhTRUrigt
K3tzitLe47qicZWVnS30uf/4uL/3/TzXz/v8fs97MrJyMrNTkiTJ9c+e1CTp
m54kF9KS5F0GUpdiTDQvwU75cbqw1/4ss4vyewyiHrPMavCr/DLFmaQvyafy
E3SNNX1d/pLfYJ/P66e/JL/PYOoz26wmu+RXuJ7J+lJ8Jj/JIrk5x+RusU+u
x9/yOrUrC+SlanvOyvv9f/3lhMX6FWonhsTzqI35hIP6jWp3vuFW/Ry1FjvY
rV+j3sVXzIvnV9vE83FKv03tzXfcoJ+ilmY7n+tXqZl8yXT922oLjstb1F7c
Lc9T67NHXq92Y6G8TO3AOfmAcw2QU1iiH8oCuQmH5Aa8INfmN/lVSjBVX4Yv
5KfoHmtxXvbKb/KPz75Pn4el+mE0pCTTzDLiDPLT9OCg/feb5WWZPptGlOKQ
tYHmqSzX53AbpTls7QiDrKXxgdlwGlOGo9YGm6ezQj+CJmTwmFnZ+C3kZ+jJ
MfuHmOVjpX4kTZmrr8Pv8muUjfutL8fX8rO8I7fkX7lX7JMbsE9+i+M+e6g+
P6v0o1goN+Ww3IwX5Zv5Q36dxXJbTsvl4p2Qy8f9klerdzIj3kO1Vbw3nNBv
Ve8J8TlqQz5mv35D3JF4bhbpl6sd435xXp+r9uH7OItnHqYW4CNWW1+pdo7f
n9Hxe6vN2MkR/Sa1B7fLL6m38Ke8Vu3CfHmJ2o4zcvl4N+UKfCvPjL8TcmtO
yr2ZLzfiQNx5TniubH1B1ujH0JwKTDerGO+Q/Bx9OGl/jlkh1urH0oKKnLJ2
muHWCrPObBwtqcQZayPMi7Be/wCtqBz336xSfFfy89zLWftHml3GBv2DtKZK
3Hezyvwgz6Iv5+wfZXY5G/XjaUPVuJdmVfhRnk0W5+0fbVaUTfoJtKVa3EOz
qvwkz6Ef/9k/xuwKNusfoh3VmWFWjZ/jXac/F+wfa3YlW/QP054buWhtnPlV
bNU/Qgdu4pK1RE0hT3xP9lzNNvlROlKDvPGdmF9DrjyRO6hJapzf/Fo+lCfR
iVqkxVnNr4u7KE+mM7VJJx/5KUBBClE4zmt/MbbLU8ikTtwzs+r8Is9lAEXi
vGbF2SFPjXc37jJH5c1qz7in/A+xUen3
           "]], 
          
          LineBox[{1590, 1507, 1441, 1332, 1681, 1581, 1498, 1432, 1382, 1294,
            1662, 1562, 1479, 1413, 1363, 1333, 1295, 1296, 1297, 1298, 1299, 
           1300, 1301, 1302, 1663, 1563, 1480, 1414, 1364, 1334, 1682, 1582, 
           1499, 1433, 1383, 1697, 1598, 1515, 1449, 1714, 1615, 1532, 1731, 
           1632, 1749, 1303}]}, 
         Annotation[#, "Charting`Private`Tag$193730#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4FGUYBuClW7o7VTpUWqSUUpBWASUkpUFSpUM6ROmUBgGlu8tLuruk
WxqE+/txX+/zvDNnz+7szGZu1LZ6myiRSCRb1EjkRMxIZFzsSCQlS2JFIg3J
STyW233APrkXFTjp/F/tUrFUb0Qu/tGrck0eT3xW6IXZL/emIqf8/W92qVmm
NyY3+/RqXJcnkICVehEOyH2oFP6/Xo9H8mxOe73xehr+1JtwWW7KazkP++XP
uSFP5IHciQS8pa8yi3JQfm32pq98y2xDLOLFiUSGmZXDZzDrh2tg91iPYQ7U
s5pz9MdyVzLqic1E5mjzXfOM9ztBTksy/S/nv5R/JJP+rX5FbhY+kx4xY5s/
m3kdO2BW56Yc1b6fPEl+aHYOn4eE+mqzGIfkftyW24bXokq4bmYDnshzOet9
TdTTsVxvSj4O6jW4JU8mEWv04hyW+/Mp5/z9JLv0rNCbkZ/ErLUrwRF5AJ9x
3vmT7TKwUm9OAZJwwbGLXOIyU8K1ZJVjLShIUtbZleSoPJCq4do5f2q4lqzW
W1KIZKy3+5Bj8iCq8a/zp9llZo3eivc4pNfktjyF5GzQS3FcHswduR1xwv2l
nzG/5qk8jydyN5Jw1f+ZbmZhrWOvzJ/4LrwHszlReF8/bNbijhzNd9xfnir/
Z34frrFdwvBdmyPNt80Ujm+UPyK5fkKPmH3CZwv3j35Xbh++Yz2uGd8cbuYw
q4d7QP4mPJv6Mz2mOUifLz81u5OUxPZjwrPuM80I9z3rnNOaq3ILoobfDv2I
WZu78jRSskkvzUl5CDXC/aM35Lm8gOtee6aejfV6GwqTis12ZTglD6UmN5w/
yy47G/S2FCE1Nx27xW3ucJd73OcBv4drwEbntqMoacIz5djscH3ZpLenGGnZ
YleW0/IwaoXvx/lz7N5hs96B4qRjq105zsjDqc0j588Nvwts0TtSgvRssyvP
WXkEdcLvivPn2eVkq96JkhzV63BPnk4Gtusfc04eSd3wzOmNeCEvDPen15uv
52Kb3plrckuihWdFP2bW5b48g4zs0D/hvDyKe3IH4vFFeH7NxryUY7lXBsuL
5GdmD5KFZ8J+bHhWvIcFZm62O+d/s1e4z8M9YLYirXOjh+fMHBLuCbOU48fD
/yOl/kCPbg4Iz5g5M1xfuUv4jdETmQnNUeH7MTM5vlOuQAr9gh7F7KuPlu+b
HcMzQgL7EeaX9hfNJrySF/Nc7hmeOZ75LAvNPOxwrEu4L8MzTozwbOonwuvw
UJ5FZnbpFbkoj+Gr8Lpea5FdXnbqXSlNFnbbVeKSPJZ6vHD+Yrt87NK7UYas
7LGrzGX5F+rz0vl/2OVnt96dsmQLv02OLbEvwB69B+XIHr4fx16z1LGC7LXr
SXlysNeuClfkcTQIv0MssyvE3/IP4ZmUWxOTuK7v0PDsmm8AS7gloA==
           "]], 
          
          LineBox[{2139, 2036, 1957, 1831, 2252, 2125, 2022, 1943, 1887, 1793,
            2227, 2100, 1997, 1918, 1862, 1832, 1794, 1795, 1796, 1797, 1798, 
           1799, 1800, 1801, 2228, 2101, 1998, 1919, 1863, 1833, 2253, 2126, 
           2023, 1944, 1888, 2275, 2149, 2046, 1967, 2299, 2173, 2070, 2323, 
           2197, 2346, 1802}]}, 
         Annotation[#, "Charting`Private`Tag$193730#5"]& ], {
         Directive[{
           Opacity[0.2], 
           Hue[0.67, 0.6, 0.6]}], 
         LineBox[{231, 232, 230}], 
         LineBox[{653, 654, 652}], 
         LineBox[{1252, 1253, 1251}], 
         LineBox[{1751, 1752, 1750}], 
         LineBox[{2348, 2349, 2347}]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-6., 6.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361103972989*^9}, 3.865445422662055*^9, {
   3.865445460925819*^9, 3.8654455200369153`*^9}, {3.865445694161232*^9, 
   3.8654457264389095`*^9}, {3.8654457751293397`*^9, 
   3.8654458752613173`*^9}, {3.865445930590624*^9, 3.8654459730440483`*^9}, {
   3.865446061236844*^9, 3.8654460689573755`*^9}, {3.8654464469315023`*^9, 
   3.865446455577737*^9}, {3.865952161175655*^9, 3.865952182002981*^9}, {
   3.8659522359946814`*^9, 3.8659522660000668`*^9}, {3.8659523006049786`*^9, 
   3.865952342510551*^9}, {3.8659523726628895`*^9, 3.8659523935431986`*^9}, {
   3.8659621960792484`*^9, 3.8659622764384995`*^9}, 3.8659654667182627`*^9, {
   3.86596970915989*^9, 3.8659697322444935`*^9}, 3.8659715219700255`*^9, 
   3.865971717628332*^9, 3.866046869867017*^9, {3.8665720394731736`*^9, 
   3.8665720524250455`*^9}, {3.866573475318557*^9, 3.8665734798920994`*^9}, 
   3.866573684548873*^9, {3.8665741219444714`*^9, 3.866574165526581*^9}, {
   3.866574213935153*^9, 3.8665742254104958`*^9}, {3.866574289889945*^9, 
   3.866574300757482*^9}, 3.866574608906272*^9, {3.8665746546247015`*^9, 
   3.866574771211544*^9}, {3.866574991587308*^9, 3.8665750599865084`*^9}, 
   3.866580159608213*^9, 3.867167165024609*^9},
 CellLabel->
  "Out[983]=",ExpressionUUID->"1c66afe3-ff88-4464-88f6-564d5b170c2f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
VKT2+G9ygT0R5vOeNGtJp6Kfvr7En01kaDfQvV7hUQXr7xP83te8uXUG28/D
tdSXQgPB35Hjz/hjh8D7Lyd0f/wdBxlqF8cOY/1QCE9w65kYHuiYuHzuYiwV
pU0UXBp5ToRreX2+9mPzF//7hcDS6/8PWXceDWUb/w9couxLtilrKJVSRKnU
55YsCZUWEWlVJEVCQipFobSjhEISki0JN5It2RljHfvOjHXsv/t7zve+nnO+
v7+e85wTz8w911zX53p6fd4fhR05xZAR0/H+e3QyGKuoGen698JYpP6L1vkR
OLTS+/DycWK/4U3wsFjNhSVzzD7/QKyvKu1BipOyKEb78Fp+n0kJ8Jh/VXR8
Gw2srWJ3OIifL481GDViDEP/K51Ny4jXE8wtuYlKW4kd8tTnWkbs57sEN3O2
8YpiU4zz6fqDxTAQcf1z3N1MuL921Urrd73wYYOSA2/tIAgdHnu9dWIEMvih
ouUU8fpZMw9cif0nKVtLneH+Dsol10UefE7UL5tLpDnshmHHurTRIWL9kV7i
fo92zb/aYqhW2Cif+CIdDtcf3OlA/Pkkvql1Uru4sIos3WxZYn3sPaa51c4x
ARYe9z5bRXz+Z9cV574m6sh5J40/F4nnEMFzsSZ4hli/TQUaQ8Tn8zCW91ms
pCgWv/fByGeREjBJsqyrthyC69wck+wLI5Ar4OcW7saFqYuvrkgg1gvpKzhM
fnonuY8D6Sv4u+PvKRP1BdmvO/ubO0rgWy+Q/bpacvVz9C99QPbnDjfVhJh8
HQSyPzf6RLzUnQPDQPqMa111O2SvEPvF//qMfaZGijbE+iV9xgtlY2pJ+gjq
z526sU6M138YSJ8h27VC5gs2CKTPKJW68Nl2bx/yFJunW2OUTYpx0lO8Lxsc
nWmqxklPobWib/mjrAac9BStdlZjEstbcNJTPNRaK/Apvg0nPUXcIf1SE+L+
X5xzQsHZhwuTvWOfmkmsD4sDvaUNntyYrXTTpUodOv6quLgz358HG788rv80
uhUXCB+ga/nxYoYPxL81r27GyX7hMCrl0oWnCUD2Cx+XlfhLE8sCsl/4uu12
P0GB38hvZDxUCX34vhBIvxExET4I8UQ9/79+Q1/9NW3f61Ig+4Vb06Hpyt1K
IPuF/e8xFbe51CG/8fWZpq6lIhPIfmCDncGlV4n1RPYDD+p4UtaJ9gHZ//s6
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
b01Y5zOngOzfdy8LOLbhOQN5KYHXZ2zldIdR//4OecuCTo0B1L//dYNutXpe
L+rfx114c+J5elD//gfPzECBti7Uv18tcljVZXkXkF7qWmvyu3a7TiB91D6/
kii43AGkjzrx5WpPW007qBT+W2bawIc9Foq83yPYDm7Je/evpvNjlZ6nXS5I
0mGLrZJ9eJsAFnl41EqmvQXOxiixewwIYkW6P1XCWhqRl+pdHXix6GUpygu4
oqe84FmXh5M+6nr1abpXfQTyUZa+dkXQ9BvIPO5tux/eDKkpBzKPG0uvsqiw
roHdkyEWe4QlMKc0eV7H33Uof+Cc+cOoNnEqyh+QfNz/3jSQirxVXMyzFV+N
qMhbRX9Xr7aOaUbeKtA8iy3xQQ10J96rXjSthzG9K+sjTSuAzPNe8+VGXMCe
SuSx/Fo695RN1iKP9dBaIzVUoQX5qh6201e7ZyaAzCsQq3RJ5XaYhrgfjvVS
LdPAFTQ5X/yGBXUm6zl5RmZgq9z7NjVfFtS6l6+4NTIHFP93TaXe0yjPICVl
WdmexP+81oU12zyC2vtQnoF5zza/KxU9KM9AlWocVW7XjfIMROQOSNRf6gIO
zdw7w0f4sJWWuf/iXduRt/J2su7NpFSjfAO9O5eoh7dX4KS3qrETe7ch/DNO
5oH/1Zp3Mnr2E8g88GaFw/ZD30rguHFp+YGj4lgSsz/EOLIKRkbfudlWi2O+
q0qEJzNqIcd109trhyWw2tmZnV/86sHN9Gh7Tg1x3jRubE0hzpcrqzQiRo9R
sKZrDo+V7lGR75LbmrT11Wg98l0OQQ3tgVgH8l1CxQd/rf/RgHzXF527fY9d
qoDMF5+IVAsbLC9H3uvI4ZnZA3eqkPfyf1rBSMqgIu/VlHtNKtiPjjzXlanF
qw+rx5Dnol0M930tOIU81xm3k7mflrOAzGOokqreTU9jAZnHwMrCYpR2sYDM
Y4g/UP/EgjkFZP7CVMvbtbvqGMiDZY8VFId/H0b5C47xpUoCLwdQ/sKoDP8B
E44+lL+waPbMSHRnD8pfyB9v27liWTfKX8h5+ftv7uouID3YxmedLsV3OoH0
X91St2yCXDuA9F+3/uZQNPrbgUtxWUpxOh9GPbR6qHlTOxR+vPq0Kpcfe9yv
kfh2Dx0GsmKdUrIFsKe7lJ0omq0QFPDpU1WpIKauV4V5azchDzZ2JTZ3s24x
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
cBuvK2ZNwatmZ52XV6bB/HeTTO014vuzocM++PoMdHGt2/oihgVVM2k3b7vN
QTCt8/XTf9MoH6ulcY3x7cv/eUr/C/WOme79KB+r3ubJz3d7elE+1mmPo5qn
krtRPpZr0CP13nddUKhW850uxIfxhAoknIhqRx4yWurm8YB3FSgva/dfRvnE
eDVOekgtd5sODr90nJy3Mu9+97N+83cg560YPNpx8K9wEeyb5xC3UxXHzsgO
cFlEV8J6v7Xa8animNElbzeltbUQlFnIo6cmgc3qBtRyqdfD/fx3x6RTJbCp
4t2ThkZUyLla+vLqDgr2+L3+zQzifCL9pXgZr0ukLBV5S6XnCXndxHm1bXP9
Q9fb1aD4uOPP4d5KOL8Yjt071whrO9PithH3pcKQ8zIvNrdDcuRFWrNsNZB5
Xp5lFOfCK1PgEfCv+MDQFHQt25l8eStx37Dxa8roY8HLczs2ryT2S917eiYR
s7OwXYb95Gsx4jwpuOo5/kocC02Z8am9WgMmt72GNotIYOzv33i9KK2Db10x
o9YvJLDC6F1yXmuocFausnRUnNjPYzvEA4jzquwHqzU/mII5zG7vP2xIhSMJ
oPwuqww4++Jve9nWwMCQ1bkSp3qQU2HGsvQqYL2Nq0OrXisYWMqMFuhWAl1b
UekocxLoZuKLu25NQ/xmqZz2rmkQcFtxfiiYBbMDexZdp2Yg8gd7d5APC6rn
BDZaH5XANv4rdawNrIcTEUE/GusksA0rdYW8rlNB5keBZe8JCralNaFggzcV
+Uxl10Yf6aF6YNeaEFC4UwXr++cT3C5VgZPipsmNV2hwSPtl6HhFOdzouu0v
nTgFk9+CaBVcLBB92LTqYDQLVr97/kGTeH6kt3znJHCTe7YO/3Mrfu+9exJY
ylqnoKq5ekiaNe1RXUnBxmJ+1gU/Ie7PgduMt/lSsMKD7KfFLamQNX9nwNm5
Dm4Fe198nFIBOwKWKfgat4B1w7/92ycrIMKn2DszhqgXhr2a8h6yoIz7mQZX
ygx4HPJPK3jLgquqbzjnCySwfN/golhrKjg813fbqEfBKItJrtK+xP1FKmP+
L1FX2pV0Xne+UwnHG8QCGiyaoJzyy3O1YgX4qa9dYb9pGrYpCdsIHWXBDX2N
qA2bZ+CQsvfJrCQWCOkZf0tYT8Fkbn2420V8vmtaoEGaqPMk6iyE1BfKIaP2
+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

      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{487, 2868, 2866, 548, 806, 722, 654, 601, 821, 737, 
            669, 837, 753, 854}}], 
           
           PolygonBox[{{850, 2865, 2863, 470, 471, 472, 473, 474, 475, 476, 
            772, 688, 620, 567, 530, 506, 789, 705, 637, 584, 546, 805, 721, 
            653, 600, 477, 773, 689, 621, 824, 740, 568, 810, 726, 843, 658, 
            831, 747}}], 
           PolygonBox[CompressedData["
1:eJwV0DlPVFEYgOE7DIuA0IrQMA2LCEQLEkNYtCBGJEGhUxCBGhMXarDCigIS
gzFxAYRfIIuAyFZJZaEJ0YKEEFFARFnUwucUT97vfHPmzs0k2u9c70qKoijG
U8oyo6iUaYs3zLDvwjNuUECMr/YZ8Sh6bb5LFaeYtf+lz7lJIUls2We6P2G+
RzU5zNn/1he0UEQ8fObukvZQzzf3TtpNmu9TQ4nzRx3gNPnO77WPJs45f9Yh
3vr+gb6klQqfrWtxeEfzB72i/eHddEuvaXJ4ti7rZe3VSt3URr2q5bqmDfpY
L+mONut3v5ulU851+kAv6IbWctb8SQfDOdzXXBLmVX0UnsN55y/6hHnPPNRh
bnGGlPA9d1b0YXgXtt3Ltps2d3ORPN7ZH+kIbeF/JJUd+wWOzaPcDu9HGrv2
i/wxv6KdUk7ww36Jv+YxOigjnT37Zf6Zx+kM/xcZ/LT/D6QQTuk=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{438, 2864, 2861, 441, 440, 439, 488, 512, 549, 602, 
            670, 754}}], 
           
           PolygonBox[{{799, 2867, 2866, 586, 639, 707, 791, 511, 534, 572, 
            625, 693, 777, 486, 510, 533, 571, 624, 692, 776, 485, 509, 532, 
            570, 623, 691, 775, 484, 483, 482, 481, 480, 479, 508, 531, 569, 
            622, 690, 774, 478, 547, 585, 638, 706, 790, 507, 594, 647, 
            715}}], 
           PolygonBox[CompressedData["
1:eJwV0btPU2EYwOFTOhZpi24CUnSAwYpcNCEygFVDQlrQoLsJKJDgqKCb4qAO
MEBMdGBFvPwBgjBxVagKg4ZEExKDg9FE5TIgPmd48nu/N+ec9rSpqzcu9hUE
QRBhjHQsCE6wZrHKRz7wnjwrLLNL0o2n6OUV0WgQvLNPmS9whxkO2e/YJ8z1
9PCSAvu39uXm89xmmoP22/bt5vssUmYX12HWqHKu025eEHFecs8vc8b8VL9S
Z76i32k0P9IWzesxPaKX9Ic26ai26mdN6znN6Tdt0IHw3fSNFuuWz+zQn85n
9bFmdV2rtU03OWMe1AVKzUU6xCqVzrW6wWnzdX0e/inmRc9/Yv5CrfNlfcgK
R53LdIRPHHfOaD9TJJ3/uj9nvsc8JXYHtIZrTLAffq/wPfQBy1S4rjR8J24x
ScLuj+uy5rvMcdiuUE/SxTP+hZ/luhJt5iavibv2t30s/G3oZJy98Fn2s/wH
XMxP6Q==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0ldsjmEYBuAqtUetUru1nZAopTWqRMTemwN7lwOjtWdCUntHrNiJvfeZ
vY+ME5yQkEhI7HU9B9d/3+/zJ9/7/u//pY3J6z+jSEJCQk0fkb18fJUnmE0P
WjLevDy39ELGkkhvs2/yJHPoSQYTzCtwW1/LOIrSx+y7PMXc2I9WFKOv737I
08yLZ9OaiebJ3NHXxVlIop/ZT3mG/Hg2mUwyr8hdfX2cheL0N/slz1IQ+9GG
yeaVuKdviP0owQCz3/Ic82M/2jLFvDL39Y2xHyUZaPZHnmdB7EcWU82r8EDf
FPtRikFmf+UFFsZ+ZFOawb77Jy+yKJ5NO8pQlnKUpwLJVKQSlalCVVKoRnVS
qRH/M7WoTR3qUo80hsQLwCWxOM5He9IZGu8Hl/UlcT46MM2sKg/1zXE31GeY
WSJX9KXxbDoy3SyFR/qWuBsaMNysKFf1ZbFfvB/W9Xiu7yGHeFmr8Vjfymq9
JR/iLHFXehNe64fj/9ez+Kw3ZIRejGtxXtmB5fpK2Zx3+i7ZlWHxHso0DvLC
ervMZa9eKDM5xifrvbI7p+hknSerc4AncV6Zw3G2Wa+RGRzlo/Vu2Y2TTI//
QDblEG+sd8ouHIn3VGbzRW/ESD2J6/oKVukteB93S76ezkt9H7nMtE7lafyu
uNv4b62b8VY/SmNGWRfnRtxT3CEF1vV5pe+nM7Osa/BM3xG/nyaMNivBzThX
nJX/hk14Wg==
           "]], 
          LineBox[CompressedData["
1:eJwV0EkvnVEABuDbnbb8grYaCZqaSYgmRJriolb2tMXazKYsDEm1RBMi0l7V
tChBm/ALavoFpo1hYUhICAl7z1k8ed/3y839zneS6ptrmh5EIpEJkpV9OU0p
bfYTtvTvtNBrp3OsL/CSd3Yc//VPgZ7LuV7LRz2FA32GEb2Qa72Mdv0p2+Ec
8jUxfUjmc6n/lJW06n0ygzlO7Jgs4x+L9qgsCp1b+5d8yzJp9nv5kGlW7XFZ
whKD9qDMY54L+4eMUqd3y1QO9W/yDbP6V/mKG72cDv0ZO/okw3oBV+Fe6dcz
OdWXSOeD/Yg1/XO4V3rsFxzpf4jSaSeyG84W7o8M6j17zLr+JXwnFWTS4Hk8
G+Few7uoJItscsil0W8S2AxnDv9JFV2ePWdPnwrfx4CdxZn+lzG9mDv9t6xm
JdylfQ/4BEov
           "]]}, Annotation[#, "Charting`Private`Tag$193847#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03e0znUcwPHn3mvEtcdBKW5RNiEhq5SI7HXskRl1TkZJzoniNDii7I5R
NoV/uDZl771Vp5SVvZXx+vzx8v78Pvf7/O7ze+4jrdv7zd9LSiQSffyznOvJ
icR02lGcBOfsV5DOSsqmJhKrdDVruOHMDNrzPEmct8+a4p7mD6hJAdba39SZ
dOAFkrlgn+r8CvMAalGQdfa3dBYdKUFK/MzZTfopDbnoXDa7dPNAalPa9VH9
lkIUdb1Lv6AFL7o+rVNY7/W39Qc6UcXP/tSS8R7NB/UtHRvvTS9oM80Q99bN
Wl+H6yt6VptqIy2vJ/VtnaSv6WVtqf/6vdl1pet6Okir6d9ahzLmY/pdXMd5
fZI08279Mu5DRde/6VQ2uOcd/ZHOlCJjvM6ZLToi3guXnMtht8o8mFd5io32
d3U2XeJzJBOX7X/hnnkOXeP9kZkr9r9y3zyXbpTlCa7ab+I/8zy6U44sXLPf
zP/m+bwTnxdZuW5fzndti27lgd0CelCBVG7Y5/QMq80fxmdLYbbZP9SF9Iy/
Ndni+Zzdqp/RmJvO5bJbY/6IujzNs3Z79Ctasd25R7qIXvF5kz1+l3Pb9HOa
cMu53HZrzUN4PT4H18d1As/wnOu9+jWtqeT6d53GjvjP6HqxuTcvm/+KM5Qw
H9JvyBHv0/V2HUkN87n4zsVnYz4Vz6eT45n0SjyH3nb/PLrO9Zv6sVbXf+L9
6xvxt9ET2kgnxvdCL2kLLaLFdJ820NFaU89rGyqb/9Dv49nNV3Wn35lk/snc
J85Q0vVhHUfO+Fxc79BRNOOO1+S1W28eSj2Ksss+2f5nc19eIhd37fPZbzB/
Es9GGrvtU+yXmN+lCrm5Z7+HvexjPwc4yCEOU95374ge5RjHOcFJTpHBfZe6
V7/4O5GH+/b57Teah1E/vksUt9uvY2jLaecy2i0z96eq+UyUUuYj2lDHa229
qM31Mcn8tNI=
           "]], 
          
          LineBox[{799, 715, 647, 594, 507, 790, 706, 638, 585, 547, 478, 774,
            690, 622, 569, 531, 508, 479, 480, 481, 482, 483, 484, 775, 691, 
           623, 570, 532, 509, 485, 776, 692, 624, 571, 533, 510, 486, 777, 
           693, 625, 572, 534, 511, 791, 707, 639, 586, 2866, 548, 806, 722, 
           654, 601, 821, 737, 669, 837, 753, 854, 487}]}, 
         Annotation[#, "Charting`Private`Tag$193847#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XWQVmUAhfFvWUBKpUuJ1Rm6U6UMkFZYQAXpXBbYRaWXskCQWGATJHVG
JaVRadSRVpBSAUFJqQXBUQl/7x8Pzznn/S7M3b33I6Z3YmxCVCQSyfJHl+hI
JFeOSGRK9kikHOLlK3zS3k4+JE/nRB7Dd3mpswbyZnkKd+a3+DZncH7uwWd4
Fo/nCRyF+Zjm+nL8qX0yN+VEzuI0/s/5a/yzPpNH8jh+wN87ay7vlvtjpPwP
l0If+Ry/g9d9Lrc+VS6PU3p7/bA8FMv0hvoWuQsKhPu0lbd9JjfDXX03uiKP
/UNbBZzWl2MGuqE78ob7clYRv+krMBMV7J/bXsQ9fQ96IJ99uq0SzugrkYyK
9qW25riv70VPPGyfYauMs3qs/pP8BlbpjfSt4b5RMPzcbZVsy+QWeKB31n+R
R2Gf3kLfIw8Im/wvl0Zf+Ty/G5BzoJfPP8IzbZO4Cg/iq5zKvzvvwEf0Gfwm
J/E9nsdfOG/M2/Sp3JWH8R3O5ELck8/ybJ7AEzkbZru2Mi+3tQy/P/kmR8Lv
Tv6VR2O/z7XU98pxKIN++gV+D72dP6ony1Xxh95RPxqeX6zWm+jb5W4ojDm2
KrYVcitE4YCtD/LbZ+nVcE5fgxRUta+0tUY2HLT1RYFwL3p1nNfXIhX9UNDZ
HHsNXNDXIQ39MQBxGIh4DMJgFHJNis/XxEV9PdIxBIWdpdpr4ZK+ARmoZl9l
a4No/GBLQBF7ml4bl/WNyET18LuztUV2/GhLRFF7ul4Hf+qb8Kxth94dRTDX
VsO2Wn4JOXDINhTF7Bl6XVzRv8Rztp3huwNFw3Njq2lbI7+MnOH51k+G7yIc
dt5K3ycPRNnwnaBf5PfDu+G8uJ4p18Ng+RpftXeSj4VnEF/pz+u7wjOI4fLf
XAy9wrMdngOeyG9zND5yTS1ea/uA24V/j29xOj/EXfkUJ3MSj+dIuDa8u65v
zfvt0zg+PMPhuy/83DgmvJd8iVN4UniGOWd4t1xbgufa6mOIfJ2v2V+Rj4d7
wNf6C/o34T5QHPNttW3r5PbIhSO2NrYD4Z3GE+F9sJW0zZOfwnV9M5ravg3v
Ekpgga2Obb0ci9w4ahuGx8K96k/jhr4FCzEcj4f/C+zPIEvfikUYgZEYhdEY
gySMxTiUct0C1zTATX0bFmM8SjtbaG+IW/p2LEFd+wZbB+TBMdsElLEv0hvh
L30HPkY9+0ZbR+TFcdtElLUv1hvjtr4TzWzf6X1QEp/Y6ts2yZ2QL3yX6Kd5
LE44b6sfDM8jnkScfpknh+fLeYy+RG6CBPkG37G/Kp+QR4S/S77Pu+z/A4za
AAQ=
           "]], 
          LineBox[CompressedData["
1:eJwVzrEug2EYBeBXtDHhAlhKew+YlMRI0gimDk07GLSJwWYoSuk9WFB6CWUt
7chKB4PNKmlr6tPhyTnvyZc/f6pQyZWnImKXbiKikYwoyhM5lAsU9B9Z5UxP
8DAdsSLbtj2O9T85S17/lqd8erftftePSE++YVuy3enrDNwdtmw9d4lFmrZV
27O+zxxftnOW7ffuLEP3K49ckJ78n32DkfuNJ2pcckWda27IeN/0dpN/d5cW
a/YX2wHz9G07tg+9TIZD96+sU9NnuKXh7RgK3i4y
           "]]}, Annotation[#, "Charting`Private`Tag$193847#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GmYTnUcxvGDmLEzQ3v2bDG0L5aKNru0aHtjohIZXPWirkRaXCXKvm+z
Yya0IYxlrNW7soylzT6Uoq5QQ5/fi+/87vt7znmeZ875/0/TzKwBIyolSVLq
T3bVJJmSkiQpmFEtSTrhIvcDVnPtsY4bhMbI4adyqZipd8a/3Pd6D+zVx2A3
t0bPwHo9E03wsz4QR+WJyHXeNL06ZuldUC4Pwhn5v/gtck/s09/CeTkLFfIe
x9fKHbBBr5qaJG/Kz8tnzaH4R07jP5Cbyr+YT+GYXJMfL38kV5ivoiVX2bzS
nGTebOb5nulyDVyrz3Z+ZfN1vbXZVT8lZ8Z36H/odcz39HZmhet3y73QSC9z
PNUcq4+VL5gjcUlO5z+Me+mar82OKOEH45z8Ms7LzfCr/DSOy5OQ75oZek3M
0e/FJW6P3hv79XHYx62L/w0b9SFojgJ+JlcLc/X7cJkrw3ruFmziXkALFPKz
uNqYp9+PBPv5pViG5ZjteB3Md6wbKuEAv4G7FZv1F3Ejivg5XF0s0LvHvcZe
vQ8OyG/joPNK9NuwRX8JLXFYfwYn5Mkodt5cvR4W6g/gdKwR/ClXifsh98VB
eXzsAXkULsuHXL9Rvh2l+lD8JQ/DBbkVjsjP4qRcy/N7R/447r35GlpxVcyr
zMnmpz5znlkf13GL4neYb+htzAf13+TBaKaf1eua78eeNK/Qy+R+aKwf0qub
4/S28f2xL+XRaKEnZgNzovmj795k3oGtzqvGj4l1Jf9tDsdFuTWOys+hXP4E
K1w7X0/DYv2h2HPxvPX+8dnyu/jJeZv1O7FNH4Y2WMkv4NKxRH84vj/eC/wq
fIbPsTB+L7IdewQpsW/5L7CIb4gcrkfso9gH/BbuLmzXh6MtvuQXx15Grt4z
7lOsEb6Uuxs79FdwE77il8RzQp7eCzXi+fJbuXuwUx+BdljNZ3NXI1/vHe+U
uG/8Nq4TdulZaI81fA53DQr0PrFecIzfznXGN/pIZGAtnxvvHBTqfVEbx+Pd
gLxYP1jK9Yt3Dk7E3o79inzHrscyvn+sIZyMfYcC/gYs5x5FPZTzO7gu+FYf
hQ4o4Qvj3YUifQDqxzsv9kbs9ViHKOYeQ1rssVhn8Q7gm8Sa5x5HeqztWB/x
boj3JVZwT6ABfo9nGc8n7nncx7g38buwE0WxJ7DSuU+iIc7EMa4rvtNHoyN2
8cVcc6zSB8bny0NwLv5na3+CnGH+D5Sa8Wg=
           "]], 
          LineBox[CompressedData["
1:eJwV0sdOVVEAheF9E4oxceBABQQjsZdEBftErDgV0dgocaBOxAEKKMbExALG
xPocKtXyBpRbAHUiii2W2BFQI4l+e/BnrX+xzzn3Xk7x4RMVdYkQQgq7ckMY
yQnhIr5nh9DDNyHJ67EKvfY7tvlo5/swEz/svbYypPhJlKDPfte2AB18P2Zh
1N5n24w0P4VS9Nvv2Raikx9AHn7a+21bkOENWI2kvc22CF38IPIxZk/atmKA
N2INUvZ222J080MowDNegZf6JYw7l+LbMMibsBZpe4dtCe7zKszGMN+NV/pl
TDiX5tsxxE9jHd7xKnzSbyDjXCdfige8Gt/0IxjTC/Fcr8RrvQW/XJPhO/CY
n4nP04/jr74e7/VqfNanTQnhgn5T/ycbkIU8+7X4+7hfl1yGQttD57JkM6+J
74I8inm2cT5dtvAVsoi/0PdgLn/Dp8rz8X6ylU/q9fEd4Ak5Q16VK+Vvzx7Q
y1HEnzifK8/x5vhdZR0m9Q34ED8Tvui3EJxt5Nnx/+Re3XI5HvlbbXwv9WOY
0OdgRN+Lt/oV/HHNIN+Jp/wsNuIjr8VX/TYSntPEc5CvX5clcsj1/wGtV3SK

           "]]}, Annotation[#, "Charting`Private`Tag$193847#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HXQFlUYhvGXUAmVD5AwBwQBlTBp4SM/upHGEUelu1usGZM2aFAaR6W7
u1M6FZNOAcHf88c1577us3ve3X13T+5Wnep1TJVIJEqnTiSKpksk2mRIJNan
TySScYgPRWsM05/TtUYqLNQVQ1v9Bl4Oh+M4zNVlwie6PGijG87PR0ZqLNIV
Rzv9Rl4eR+I4zNMl4VNdXrTVjeAXIiMNDvJX8aO82PxaORfG8FdwVq6AFXIJ
8+3lTXIFnJOr4ah+p7EgpulH8PlyZnzGrxvr4xn5lLEMcmb0ezyt8U2e39jO
eSPli/qHwo2XeW08ydPGs5SLIhv/KZ6hsWWsbVzi/HVybmThY83fkhvFPcq/
GytipZzO/NtySed0MG7WVcR5uTqO6XcZC2G6fiRfEOvic54P7XWj+KXIuA9L
det1T2McL4pSuo58i1wJx+O8+F2M1l/WdcD9WKYrjU76rbwyTsRxsQZeQ2dz
2/QpOMm/iuNRBmWRjC6O2W6+Sjxz/nWcF8fqr+g64gEs15VDV/0OXhWn+Tex
Rpynv6rrFM8MK3Tl0U2/k1fDGf4tFuqy4gtdfnSNdfg1uTPSY6WuArrrd/Hq
+JWPwSLdI/hSVwDdYl1+Xe6CDPFt8GL4WV5lfoOcB+N5sfgPdT34brkGfuO7
eWHM4GP54nh/MJTfMDbAs3HfxrJYEv+l96OV3D2uzXhD97Cuq/EKr4OneMb4
3uTiyM7nxndpfIPnM652/kY5bzwbPsH8bblxvCO8OP9DroTH+ap4TsZ3onNu
T+MeXU1ckGvgrH6PsQhm6sfxJfH7GMafi/9ETsZSuYf5sfLNeKZ4EEd5CcyT
15jfFN8QJsZ3Hu+drhffK9eKb4ePx1JdDgzXPY+eunH8X7l7fLdYq0tBb/0+
XjvukU+INWMd/a24rnimWKergj76/bwO/uQTYw1URTVURw3URC3URl/nHHB8
XfzFJ8U6qIN+5n7R18PffHIcH9ehvx3XjkxYr6uL/vqDvD7+4VNijbgO/R1d
LyRhg64eBugP8QaxF/LvYo24Bv1/ut7IjI26+hioP8wbxj7Dv8ey2AsxQlcQ
A+I6+V25D7Jgk25zvE+YxEvGb+oG8SPy6/Fu8L38BcziU/ly+VGM5IUwMO6J
35P7IiuOxR6I+fJm81tiL8ZkfsfYBKXi/zBWxur4Dr2f78oNHT849v94p3SN
jBd5TTzBL5rfJ78Y3zWfbf6u3Cy+WT7N/Ar5MSTxUeZvxrrIxQvH3iCXi/vg
y2KPNL7FB8XzNibQT3/VWDd+J/bXuGYskLc4bqtcAFN46XhP5BSsiWdn/r3Y
7+XGuMT385cwh0/nK+PbxGheBIPjv+Op0J9nw1ZdIwzRHedNcJnPiPUxVZ8a
A/TZsU3XGO/rTvCmsa/wmbEGpunTYKA+B7brmuAD3UneLO6Zz4o10BQfmjul
b45rfHYcj2Zojo/MnzbXAtf5nDgH0/Vp45nqc2KHrgU+1p3hLWOf5Af4y/iB
3zM2j33N//E//MI2xw==
           "]], 
          LineBox[CompressedData["
1:eJwV0blPFWEUQPHPENkeaqiMyOKzEm0ULEUSK2wsKCxMhMfjCVb6L7iyqICd
aC0mrrihNCaglrIIuHRaiAvQWJgoKvq7xcm958zMl8xMNn+y9cS6lNI4qstT
ulKW0m70lKZ0k6/HKb4FM1ob+rRPvB0/+T304pZejNN6FWa1dvRrizyHX3w0
zsBtvQRn9K14reVwQfvMO7DK78cZuKOX4qxejTmtAxe1LzyP3/xBnIG7ehnO
6TWY1/K4pH3lnfjDH8YZ8R56Oc7rtVjQOjGgfeMF/OWP4ox4Dz2DHr0Ob7QC
BrUlfgxr/DEmtBoMa3swEO/FK9DLt+Gt9orX4zpvijO0Ib5s78I/PoZJrRZX
tQYMxnvzDejjWXyw78NT+zvXp+w7McL3Y9neghdxtuuX7Sv2bny3H0KKZ829
GLWnTEpH7U/c/9ysQ6V2Lf6t/TCyvJEv2g+gij/jJWaB7zCH4rvbN2IT73f9
h701zuTb+Ud7EzbzcV5k5vh7z06bu3Aj/ol5BM32FfMgXtoz7j8e39Ps9sx/
E5BlCg==
           "]]}, Annotation[#, "Charting`Private`Tag$193847#5"]& ], {
         Directive[{
           Opacity[0.2], 
           Hue[0.67, 0.6, 0.6]}], 
         LineBox[{436, 437, 435}], 
         LineBox[{856, 857, 855}], 
         LineBox[{1440, 1441, 1439}], 
         LineBox[{2100, 2101, 2099}], 
         LineBox[{2859, 2860, 2858}]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-6., 6.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361103972989*^9}, 3.865445422662055*^9, {
   3.865445460925819*^9, 3.8654455200369153`*^9}, {3.865445694161232*^9, 
   3.8654457264389095`*^9}, {3.8654457751293397`*^9, 
   3.8654458752613173`*^9}, {3.865445930590624*^9, 3.8654459730440483`*^9}, {
   3.865446061236844*^9, 3.8654460689573755`*^9}, {3.8654464469315023`*^9, 
   3.865446455577737*^9}, {3.865952161175655*^9, 3.865952182002981*^9}, {
   3.8659522359946814`*^9, 3.8659522660000668`*^9}, {3.8659523006049786`*^9, 
   3.865952342510551*^9}, {3.8659523726628895`*^9, 3.8659523935431986`*^9}, {
   3.8659621960792484`*^9, 3.8659622764384995`*^9}, 3.8659654667182627`*^9, {
   3.86596970915989*^9, 3.8659697322444935`*^9}, 3.8659715219700255`*^9, 
   3.865971717628332*^9, 3.866046869867017*^9, {3.8665720394731736`*^9, 
   3.8665720524250455`*^9}, {3.866573475318557*^9, 3.8665734798920994`*^9}, 
   3.866573684548873*^9, {3.8665741219444714`*^9, 3.866574165526581*^9}, {
   3.866574213935153*^9, 3.8665742254104958`*^9}, {3.866574289889945*^9, 
   3.866574300757482*^9}, 3.866574608906272*^9, {3.8665746546247015`*^9, 
   3.866574771211544*^9}, {3.866574991587308*^9, 3.8665750599865084`*^9}, 
   3.866580159608213*^9, 3.8671671653585024`*^9},
 CellLabel->
  "Out[984]=",ExpressionUUID->"0abe5079-30ef-4af3-80f5-ec5817925c42"]
}, Open  ]],

Cell["Periodic Re computations Skeleton Code", "Text",
 CellChangeTimes->{{3.8636129580817432`*^9, 3.8636129685064144`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"f03e7ea6-c5c3-4d65-ba41-05cf4f23e612"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
   RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
   RowBox[{"\[Tau]1", " ", "=", " ", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
   RowBox[{"order", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "10"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"M", " ", "=", "10"}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
    "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", 
     "the", " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", 
     "in", " ", "time", " ", "\[Tau]"}], "  ", "*)"}],
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A1", " ", "=", " ", "0.2"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"AError", " ", "=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A2", " ", "=", " ", 
    RowBox[{"A1", " ", "+", " ", "AError"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxErrorInitial", " ", "=", " ", "0.5"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"MyAppend", "[", 
     RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f1", "[", "t", "]"}], ",", " ", 
             RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], 
            "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f2", "[", 
              RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
             RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
              RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], 
         "]"}]}], ";", "\n", "    ", "f"}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["While",
    FontWeight->"Plain"], 
   StyleBox["[",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"EInitial", " ", ">", " ", "1.5"}], " ", "||", " ", 
      RowBox[{"EInitial", " ", "<", " ", "0.5"}]}],
     FontWeight->"Plain"], 
    StyleBox[",",
     FontWeight->"Plain"], "\[IndentingNewLine]", 
    RowBox[{
     StyleBox[
      RowBox[{"xdotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Min", " ", "=", " ", 
       RowBox[{"-", "\[Pi]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], ";", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Init", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"ICs", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
        "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"EInitial", " ", "=", " ", 
       RowBox[{"Energy", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ICs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"]}]}], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox["]",
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.890184845673109`", ",", 
      RowBox[{"-", "2.5057726775028693`"}], ",", "0.7512357141518535`"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Initial Conditions = \>\"", ",", "ICs"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Energy = \>\"", ",", " ", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xdotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]f", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]dotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"Js", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"count", " ", "=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxcountAlgo", " ", "=", " ", "20"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
     " ", 
     RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}], 
      "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
         "order", ",", "maxIter", ",", "maxError", " ", ",", "maxCount", ",", 
         "initGuess", ",", "maxJ"}], "]"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
         "uBound", ",", "K"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ICs", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"xdot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]dot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"errorInitial", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{"ICs", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"initGuess", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Lambda]1ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]2ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]3ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]4ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xf", ",", " ", "x1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xdotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xdotf", ",", " ", "xdot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"\[Theta]f", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]f", ",", " ", "\[Theta]1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]dotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]dotf", ",", " ", "\[Theta]dot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"uf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"uf", ",", " ", "u1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Js", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"Js", ",", "J"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"count", " ", "=", " ", 
      RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Count = \>\"", ",", "count"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Error = \>\"", ",", "errorInitial"}], "]"}], ";"}]}], "\t",
    "\[IndentingNewLine]", "]"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]f", "[", "t", "]"}], ",", " ", 
        RowBox[{"uf", "[", "t", "]"}], ",", " ", 
        RowBox[{"xf", "[", "t", "]"}], ",", " ", 
        RowBox[{"\[Theta]dotf", "[", "t", "]"}], ",", " ", 
        RowBox[{"xdotf", "[", "t", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
      RowBox[{"Filling", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", 
         "\"\<x1b\>\"", ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", 
         "\"\<xdot1b\>\""}], "}"}]}], ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
      " ", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
      RowBox[{"GridLines", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"Js", ",", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<J vs time\>\""}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Total Time for Convergence = \>\"", ",", 
     RowBox[{"\[Tau]", "*", 
      RowBox[{"1", "/", "M"}], "*", "count"}]}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1b"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}, {3.8654474644860983`*^9, 3.86544746739017*^9}, {
   3.865447584859602*^9, 3.865447593586812*^9}, {3.865952499809149*^9, 
   3.8659525292967024`*^9}, {3.8659525819378333`*^9, 
   3.8659525893724527`*^9}, {3.865971536327427*^9, 3.865971615231144*^9}, {
   3.8659716506068087`*^9, 3.8659716545185547`*^9}, {3.865971738635604*^9, 
   3.8659717394583387`*^9}, {3.865971771360116*^9, 3.865971773325487*^9}, 
   3.8659718432830696`*^9, {3.865971878869669*^9, 3.865971881703761*^9}, {
   3.865972099999814*^9, 3.8659721093028316`*^9}, {3.8659724284015865`*^9, 
   3.8659724335579348`*^9}, {3.865972467781967*^9, 3.8659724678729377`*^9}, 
   3.865972527892706*^9, {3.865972575741376*^9, 3.8659725758223476`*^9}, {
   3.8659727852052574`*^9, 3.8659727853102245`*^9}, 3.8659729110299406`*^9, {
   3.865973909258086*^9, 3.865973915857973*^9}, {3.866046878808134*^9, 
   3.866046926929607*^9}, {3.866047001093678*^9, 3.866047039702221*^9}, {
   3.8660471109532323`*^9, 3.8660471110941877`*^9}, {3.8660471705050197`*^9, 
   3.866047173520045*^9}, 3.8661406529053097`*^9, {3.8661406905133476`*^9, 
   3.8661406905993204`*^9}, {3.866140819599299*^9, 3.8661408196882687`*^9}, {
   3.8665711649558916`*^9, 3.866571165889593*^9}, {3.866571417989247*^9, 
   3.8665714182851543`*^9}, {3.866572132358571*^9, 3.866572174133257*^9}, 
   3.8665722152271605`*^9, {3.866572708667897*^9, 3.866572725315591*^9}, {
   3.8665728020321393`*^9, 3.8665728154188747`*^9}, {3.8665728560299296`*^9, 
   3.8665728724307027`*^9}, {3.8665729695007653`*^9, 
   3.8665729789747458`*^9}, {3.866573043115304*^9, 3.866573053395028*^9}, 
   3.8665735494869184`*^9, {3.866573703021986*^9, 3.8665737072086515`*^9}, {
   3.866573789133541*^9, 3.8665737977058096`*^9}, {3.8665738824937863`*^9, 
   3.866573891690858*^9}, {3.8665752456343412`*^9, 3.866575271422123*^9}, {
   3.866575497520063*^9, 3.8665755162530923`*^9}, {3.866575560451006*^9, 
   3.866575588098196*^9}, {3.8665756738178754`*^9, 3.86657570879373*^9}, 
   3.8665757657245836`*^9, {3.8665764184045687`*^9, 3.8665764350932503`*^9}, 
   3.866576476534042*^9, 3.866576542813918*^9, {3.8665766740420947`*^9, 
   3.866576692525204*^9}, {3.8665778195290174`*^9, 3.866577843192477*^9}, {
   3.8666641527149525`*^9, 3.8666642404629173`*^9}, {3.8666643009855795`*^9, 
   3.86666430972279*^9}, {3.866664360277635*^9, 3.8666643758186717`*^9}, 
   3.8666644545994997`*^9, {3.866664806987911*^9, 3.8666648123811893`*^9}, 
   3.867167371242651*^9, {3.867167517862755*^9, 3.867167517960723*^9}, 
   3.867167587337535*^9, {3.8671676663382645`*^9, 3.867167666376253*^9}, {
   3.867167739269939*^9, 3.867167772175415*^9}, {3.8671678970744643`*^9, 
   3.867167909527481*^9}, {3.8671680289013*^9, 3.867168028943287*^9}, {
   3.8671680796890554`*^9, 3.867168079729043*^9}, {3.867168209668482*^9, 
   3.8671682160654364`*^9}, {3.8671682547130747`*^9, 3.867168263488268*^9}, {
   3.8671683008613143`*^9, 3.867168300901301*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"1bec3645-5e1f-43d6-906e-b0d31dcb7ae6"],

Cell[CellGroupData[{

Cell["Evaluate Robustness of MPC Variant wrt Model Mismatch", "Subsection",
 CellChangeTimes->{{3.866046972536893*^9, 
  3.866046989974267*^9}},ExpressionUUID->"5bd1fbeb-86ec-47eb-b2f4-\
64cad2ea694f"],

Cell["\<\
Test Conditions :
Energy <= 1.5,A1 = 0, A2 = 0.2
n = 20, Tau = 5,uBound = 5,M = 10 (recompute every 0.5s)\
\>", "Text",
 CellChangeTimes->{{3.8665721863483653`*^9, 3.8665722466961317`*^9}, {
  3.8665767857135057`*^9, 
  3.866576792390377*^9}},ExpressionUUID->"6a3abf9b-d55b-483f-8f44-\
d33cec9f6985"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
   RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
   RowBox[{"\[Tau]1", " ", "=", " ", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
   RowBox[{"order", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "10"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"M", " ", "=", "3"}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
    "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", 
     "the", " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", 
     "in", " ", "time", " ", "\[Tau]"}], "  ", "*)"}],
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A1", " ", "=", " ", "0"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"AError", " ", "=", " ", "0.2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A2", " ", "=", " ", 
    RowBox[{"A1", " ", "+", " ", "AError"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxErrorInitial", " ", "=", " ", "0.5"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"MyAppend", "[", 
     RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f1", "[", "t", "]"}], ",", " ", 
             RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], 
            "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f2", "[", 
              RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
             RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
              RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], 
         "]"}]}], ";", "\n", "    ", "f"}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["While",
    FontWeight->"Plain"], 
   StyleBox["[",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"EInitial", " ", ">", " ", "1.5"}], " ", "||", " ", 
      RowBox[{"EInitial", " ", "<", " ", "0.5"}]}],
     FontWeight->"Plain"], 
    StyleBox[",",
     FontWeight->"Plain"], "\[IndentingNewLine]", 
    RowBox[{
     StyleBox[
      RowBox[{"xdotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Min", " ", "=", " ", 
       RowBox[{"-", "\[Pi]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], ";", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Init", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"ICs", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
        "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"EInitial", " ", "=", " ", 
       RowBox[{"Energy", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ICs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"]}]}], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox["]",
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Initial Conditions = \>\"", ",", "ICs"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Energy = \>\"", ",", " ", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xdotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]f", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]dotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"Js", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"count", " ", "=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxcountAlgo", " ", "=", " ", "20"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"timeData", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
     " ", 
     RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"time", ",", 
        RowBox[{"{", 
         RowBox[{
         "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
          "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
          "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
         "}"}]}], "}"}], "=", 
      RowBox[{"Timing", "[", 
       RowBox[{"Quiet", "[", 
        RowBox[{"ffCartPendulum", "[", 
         RowBox[{
         "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
          "order", ",", "maxIter", ",", "maxError", " ", ",", "maxCount", ",",
           "initGuess", ",", "maxJ"}], "]"}], "]"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
         "uBound", ",", "K"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ICs", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"xdot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]dot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"errorInitial", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{"ICs", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"initGuess", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Lambda]1ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]2ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]3ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]4ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xf", ",", " ", "x1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xdotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xdotf", ",", " ", "xdot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"\[Theta]f", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]f", ",", " ", "\[Theta]1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]dotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]dotf", ",", " ", "\[Theta]dot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"uf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"uf", ",", " ", "u1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Js", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"Js", ",", "J"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"timeData", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"timeData", ",", "time"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"count", " ", "=", " ", 
      RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Count = \>\"", ",", "count"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Error = \>\"", ",", "errorInitial"}], "]"}], ";"}]}], "\t",
    "\[IndentingNewLine]", "]"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]f", "[", "t", "]"}], ",", " ", 
        RowBox[{"uf", "[", "t", "]"}], ",", " ", 
        RowBox[{"xf", "[", "t", "]"}], ",", " ", 
        RowBox[{"\[Theta]dotf", "[", "t", "]"}], ",", " ", 
        RowBox[{"xdotf", "[", "t", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6"}], ",", " ", "6"}], "}"}]}], ",", " ", 
      RowBox[{"Filling", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", 
         "\"\<x1b\>\"", ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", 
         "\"\<xdot1b\>\""}], "}"}]}], ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
      " ", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
      RowBox[{"GridLines", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"Js", ",", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<J vs time\>\""}]}], "]"}]}], ";", 
   RowBox[{"p1c", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"timeData", ",", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Time of Computations vs time\>\""}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Total Time for Convergence = \>\"", ",", 
     RowBox[{"\[Tau]", "*", 
      RowBox[{"1", "/", "M"}], "*", "count"}]}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1b", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}, {3.8654474644860983`*^9, 3.86544746739017*^9}, {
   3.865447584859602*^9, 3.865447593586812*^9}, {3.865952499809149*^9, 
   3.8659525292967024`*^9}, {3.8659525819378333`*^9, 
   3.8659525893724527`*^9}, {3.865971536327427*^9, 3.865971615231144*^9}, {
   3.8659716506068087`*^9, 3.8659716545185547`*^9}, {3.865971738635604*^9, 
   3.8659717394583387`*^9}, {3.865971771360116*^9, 3.865971773325487*^9}, 
   3.8659718432830696`*^9, {3.865971878869669*^9, 3.865971881703761*^9}, {
   3.865972099999814*^9, 3.8659721093028316`*^9}, {3.8659724284015865`*^9, 
   3.8659724335579348`*^9}, {3.865972467781967*^9, 3.8659724678729377`*^9}, 
   3.865972527892706*^9, {3.865972575741376*^9, 3.8659725758223476`*^9}, {
   3.8659727852052574`*^9, 3.8659727853102245`*^9}, 3.8659729110299406`*^9, {
   3.865973909258086*^9, 3.865973915857973*^9}, {3.866046878808134*^9, 
   3.866046926929607*^9}, {3.866047001093678*^9, 3.866047039702221*^9}, {
   3.8660471109532323`*^9, 3.8660471110941877`*^9}, {3.8660471705050197`*^9, 
   3.866047173520045*^9}, 3.8661406529053097`*^9, {3.8661406905133476`*^9, 
   3.8661406905993204`*^9}, {3.866140819599299*^9, 3.8661408196882687`*^9}, {
   3.8665711649558916`*^9, 3.866571165889593*^9}, {3.866571417989247*^9, 
   3.8665714182851543`*^9}, {3.866572132358571*^9, 3.866572174133257*^9}, 
   3.8665722152271605`*^9, {3.866572708667897*^9, 3.866572725315591*^9}, {
   3.8665728020321393`*^9, 3.8665728154188747`*^9}, {3.8665728560299296`*^9, 
   3.8665728724307027`*^9}, {3.8665729695007653`*^9, 
   3.8665729789747458`*^9}, {3.866573043115304*^9, 3.866573053395028*^9}, 
   3.8665735494869184`*^9, {3.866573703021986*^9, 3.8665737072086515`*^9}, {
   3.866573789133541*^9, 3.8665737977058096`*^9}, {3.8665738824937863`*^9, 
   3.866573891690858*^9}, {3.8665752456343412`*^9, 3.866575271422123*^9}, {
   3.866575497520063*^9, 3.8665755162530923`*^9}, {3.866575560451006*^9, 
   3.866575588098196*^9}, {3.8665756738178754`*^9, 3.86657570879373*^9}, 
   3.8665757657245836`*^9, {3.8665764184045687`*^9, 3.8665764350932503`*^9}, 
   3.866576476534042*^9, 3.866576542813918*^9, {3.8665766740420947`*^9, 
   3.866576692525204*^9}, {3.8665778195290174`*^9, 3.866577843192477*^9}, {
   3.8666641527149525`*^9, 3.866664193861807*^9}, 3.8666649366484857`*^9, {
   3.8666650025004454`*^9, 3.866665006550152*^9}, {3.8671675349242973`*^9, 
   3.8671675350712523`*^9}, {3.8671683251655407`*^9, 3.867168325420459*^9}, {
   3.86716836190279*^9, 3.8671683619377785`*^9}, {3.8671684189625406`*^9, 
   3.867168526768058*^9}, {3.867168609091727*^9, 3.867168609125716*^9}, {
   3.8671687123626957`*^9, 3.8671687125066504`*^9}, {3.8671688521659803`*^9, 
   3.8671688554009476`*^9}, {3.867168905295987*^9, 3.8671689053339744`*^9}, {
   3.867169679170464*^9, 3.8671696792024536`*^9}, {3.86716974093071*^9, 
   3.8671697691686783`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[1634]:=",ExpressionUUID->"8e38cdaf-ed5f-437a-9ced-be5bff917c65"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial Conditions = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["Initial Conditions = ", {0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, {
   3.867169741640483*^9, 3.867169769832466*^9}},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"80a4c4cd-d1db-4d26-83db-c02a25e52a74"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2`"}]}],
  SequenceForm["Energy = ", -0.2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, {
   3.867169741640483*^9, 3.867169769838464*^9}},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"f515baa5-c349-4fa4-a978-98f6a87eec59"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Count = ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, {
   3.867169741640483*^9, 3.8671697702353373`*^9}},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"4b602546-ba21-4e4d-8acd-a0ad749bbbaa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.704166434143802`"}],
  SequenceForm["Error = ", 3.704166434143802],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, {
   3.867169741640483*^9, 3.8671697702403355`*^9}},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"43aff010-64da-4167-b672-5487bc6d9b16"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Count = ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169773743215*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"51d04d9f-769a-48f6-adda-ec8437da967b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "2.9690717250706937`"}],
  SequenceForm["Error = ", 2.9690717250706937`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169773748214*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"716b0d80-921d-4c56-bbe3-cb827290cd85"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Count = ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169775374693*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"208c01cd-5e78-4172-b3ef-cd890b8471bb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "1.1541369517175613`"}],
  SequenceForm["Error = ", 1.1541369517175613`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697753786917`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"43faa120-f35f-4668-aefa-2dbd956611c9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "6.563772306918304`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "5.361925830015514`"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 6.563772306918304, 
   "    Error Min = ", 5.361925830015514],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169775629612*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"6d742ef6-e189-4ebc-8177-d64c8eee9905"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "7145.916716313134`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "5.361925830015514`"}],
  SequenceForm[
  "Count Shooting= ", 2, "    Error New = ", 7145.916716313134, 
   "    Error Min = ", 5.361925830015514],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697757465744`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"96ccfa4e-d81d-4456-96d4-12fe4fa118dc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "2.8641597339030826`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "2.8641597339030826`"}],
  SequenceForm[
  "Count Shooting= ", 3, "    Error New = ", 2.8641597339030826`, 
   "    Error Min = ", 2.8641597339030826`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.86716977588453*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"f4e8b08b-9b1b-45bc-9524-802a29ed6cd7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "7.656946018439464`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>",
    "\[InvisibleSpace]", "7.656946018439464`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 4, "    Error New = ", 7.656946018439464*^-15, 
   "    Error Min = ", 7.656946018439464*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697759695034`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"cf92053c-c930-4713-abe2-e44342d162ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "4.829156102140908`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>",
    "\[InvisibleSpace]", "4.829156102140908`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 5, "    Error New = ", 4.829156102140908*^-15, 
   "    Error Min = ", 4.829156102140908*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169776060474*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"06a3c621-84e5-47d4-93f3-70cb763a25b5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "2.537066082426128`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "4.829156102140908`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 6, "    Error New = ", 2.537066082426128, 
   "    Error Min = ", 4.829156102140908*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169776170439*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"ef18e862-9a47-48dd-bed1-9d849d44d70e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "4.7734963064918`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "4.7734963064918`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 7, "    Error New = ", 4.7734963064918*^-15, 
   "    Error Min = ", 4.7734963064918*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169776257411*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"b10f819a-78b6-41dd-b6f8-d77c4f93aa75"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "8", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "5.4414069804848354`*^-15", 
   "\[InvisibleSpace]", "\<\"    Error Min = \"\>", "\[InvisibleSpace]", 
   "4.7734963064918`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 8, "    Error New = ", 5.4414069804848354`*^-15, 
   "    Error Min = ", 4.7734963064918*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697763193913`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"92dd3928-c81a-41de-adad-20fdfa9b0bfc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "9", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "2.25632227231641`*^-7", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "4.7734963064918`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 9, "    Error New = ", 2.25632227231641*^-7, 
   "    Error Min = ", 4.7734963064918*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169776425357*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"7c2174bb-eee8-485d-a7fd-88ea36516a12"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "4.9993285957077685`*^-15", 
   "\[InvisibleSpace]", "\<\"    Error Min = \"\>", "\[InvisibleSpace]", 
   "4.7734963064918`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 10, "    Error New = ", 4.9993285957077685`*^-15, 
   "    Error Min = ", 4.7734963064918*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169776482339*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"4bfa6371-71f6-47c1-a3a1-6a27f17990f3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "11", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "59.686387712081405`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "4.7734963064918`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 11, "    Error New = ", 59.686387712081405`, 
   "    Error Min = ", 4.7734963064918*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169776598302*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"628642e4-921e-4d91-a469-369253fd4aa1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Count = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169777007171*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"dbb60653-6343-4936-b87b-f9a29885d117"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.2555137031709056`"}],
  SequenceForm["Error = ", 3.2555137031709056`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.86716977701117*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"8649294c-3289-4e62-bc38-ab1c0981cb24"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.7821073555044775`*^-15", 
   "\[InvisibleSpace]", "\<\"    Error Min = \"\>", "\[InvisibleSpace]", 
   "1.7821073555044775`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 1.7821073555044775`*^-15, 
   "    Error Min = ", 1.7821073555044775`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169777243096*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"df855134-300b-4a05-be2e-9ffad420c09a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Count = ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697775779886`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"2a53c9c2-8bcc-4b69-9fac-c7ac3df01b1f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.5204015540022935`"}],
  SequenceForm["Error = ", 3.5204015540022935`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697775819874`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"c9b0c204-ad58-4caa-9ae8-2fc8a854132b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "5.025915688668864`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "5.025915688668864`"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 5.025915688668864, 
   "    Error Min = ", 5.025915688668864],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697778099146`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"b83aa623-bfab-49bc-853d-a42d164835ce"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "2.3818606141901103`*^-15", 
   "\[InvisibleSpace]", "\<\"    Error Min = \"\>", "\[InvisibleSpace]", 
   "2.3818606141901103`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 2, "    Error New = ", 2.3818606141901103`*^-15, 
   "    Error Min = ", 2.3818606141901103`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697779098825`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"367edd9f-abba-46ab-8220-d5b3ebfc1fba"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["Count = ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697815947037`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"627be8e7-d605-4c13-b50a-c7e6fa369357"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.494380148633529`"}],
  SequenceForm["Error = ", 3.494380148633529],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697815987024`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"42798a37-ce03-4da9-b6a2-c52a188351f9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm["Count = ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697820125704`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"dcd23342-6636-4e6a-bfa6-b8d24833f9d0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.6445574123715345`"}],
  SequenceForm["Error = ", 3.6445574123715345`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169782016569*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"0b792c17-3628-47b4-b3c2-8f0341c57d53"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["Count = ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697824204397`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"a3f0d0e4-e9fa-403b-b188-0ce5716a13f0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.792905269370592`"}],
  SequenceForm["Error = ", 3.792905269370592],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169782425438*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"61c4cdb8-6f8b-49ed-96ee-9dfb01b4f936"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "17.297302458538045`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "4.312651206212615`"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 17.297302458538045`, 
   "    Error Min = ", 4.312651206212615],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.86716978263837*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"4e8624bf-c269-43ef-b0d1-e87dbd908199"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.7357518621719087`*^-15", 
   "\[InvisibleSpace]", "\<\"    Error Min = \"\>", "\[InvisibleSpace]", 
   "1.7357518621719087`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 2, "    Error New = ", 1.7357518621719087`*^-15, 
   "    Error Min = ", 1.7357518621719087`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697827223434`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"579154de-54ce-4c8f-abba-fd2eb054bfc4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm["Count = ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697849696245`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"bb6cded1-7aba-4e88-87b3-378b81e4bf8e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "1.49332616386252`"}],
  SequenceForm["Error = ", 1.49332616386252],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697849746227`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"458bd8dd-a2bf-4fdb-8d3a-9e770d16c2a0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "6.962016942633137`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "6.962016942633137`"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 6.962016942633137, 
   "    Error Min = ", 6.962016942633137],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169785257532*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"78498aee-bad4-4991-9cbe-9e7ae4c3bb74"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "6.904976965149072`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>",
    "\[InvisibleSpace]", "6.904976965149072`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 2, "    Error New = ", 6.904976965149072*^-15, 
   "    Error Min = ", 6.904976965149072*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697853445044`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"3c674c3c-774e-446e-8009-02475df9aa6a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "9.885619253490889`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>",
    "\[InvisibleSpace]", "6.904976965149072`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 3, "    Error New = ", 9.885619253490889*^-15, 
   "    Error Min = ", 6.904976965149072*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169785396488*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"9e69bf34-f766-4082-adec-3e428ce33bd2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "9.712091954996005`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>",
    "\[InvisibleSpace]", "6.904976965149072`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 4, "    Error New = ", 9.712091954996005*^-15, 
   "    Error Min = ", 6.904976965149072*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169785459468*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"73fca8ac-f099-486b-a850-5484e3b23961"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.6002015165980728`*^-14", 
   "\[InvisibleSpace]", "\<\"    Error Min = \"\>", "\[InvisibleSpace]", 
   "6.904976965149072`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 5, "    Error New = ", 1.6002015165980728`*^-14, 
   "    Error Min = ", 6.904976965149072*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.86716978551645*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"a658319f-4250-42f0-83a5-9ac147129f58"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "7.880338398512506`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>",
    "\[InvisibleSpace]", "6.904976965149072`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 6, "    Error New = ", 7.880338398512506*^-15, 
   "    Error Min = ", 6.904976965149072*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697855704327`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"b6b347a1-a661-4930-9b7e-4580225618fb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "4.934657772928937`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>",
    "\[InvisibleSpace]", "4.934657772928937`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 7, "    Error New = ", 4.934657772928937*^-15, 
   "    Error Min = ", 4.934657772928937*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169785650407*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"834c5ffe-b339-43ec-8833-26a552cfcf39"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Count = ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169787772728*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"7647a704-f737-4f4b-90c4-a395703c42a3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.746564593928254`"}],
  SequenceForm["Error = ", 0.746564593928254],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697877767267`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"364f7a30-87c4-4f2e-93f9-5a74dc10eb38"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "6.179917749468299`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>",
    "\[InvisibleSpace]", "5.638687104805515`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 6.179917749468299*^-15, 
   "    Error Min = ", 5.638687104805515*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697879156823`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"72ce5302-37ec-4c85-b068-bbacf824564b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "40.12557952511779`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "5.638687104805515`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 2, "    Error New = ", 40.12557952511779, 
   "    Error Min = ", 5.638687104805515*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169788025647*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"8c9e5ddc-ccc1-4e70-9367-7c34ba4fec13"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.4098358738502981`*^-15", 
   "\[InvisibleSpace]", "\<\"    Error Min = \"\>", "\[InvisibleSpace]", 
   "1.4098358738502981`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 3, "    Error New = ", 1.4098358738502981`*^-15, 
   "    Error Min = ", 1.4098358738502981`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697881076207`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"40275ac2-628d-4402-a0c4-b1987c7c66c4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "11"}],
  SequenceForm["Count = ", 11],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.8671697888473845`*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"b5a9c872-0104-4b66-9470-2d9544bd5386"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.24555602239803706`"}],
  SequenceForm["Error = ", 0.24555602239803706`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.867169788851383*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"d42fe296-6e77-40fa-8c40-7ab9bb00ceca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Time for Convergence = \"\>", "\[InvisibleSpace]", 
   FractionBox["55", "3"]}],
  SequenceForm["Total Time for Convergence = ", 
   Rational[55, 3]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9, {3.867167527608638*^9, 3.8671675386151175`*^9}, 
   3.8671683260382614`*^9, 3.8671683627735114`*^9, {3.867168505920727*^9, 
   3.8671685336388607`*^9}, 3.8671686096945343`*^9, 3.867168713083465*^9, 
   3.86716885670053*^9, 3.8671689061427155`*^9, 3.8671696797372828`*^9, 
   3.867169741640483*^9, 3.86716978967312*^9},
 CellLabel->
  "During evaluation of \
In[1634]:=",ExpressionUUID->"0fa9d5ec-756b-4eb0-a8f3-20cc7e627a89"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
Znfvvq25iI4rassecOaC74/SWN6NryFOE12+8zRuMOusquv1o4Oz8zT2oBu8
oC8h1rLgxgCdyeGpe4b4oPkZyWPWmQCKz0mz2g4CsBxk0Vr+nB5kZdtvpi3s
gDXlHZUFkhvIui/S3+uyENSe961atV9GAgwbhU4zwnDdBwaGuWYQq5abT/tl
Ebj8MXfM9h4NdSTVEIIXRcGz7bc852cFpN2imVPyWBz2Bg3sYz3QiJ0YLz+W
cSVBf4aZ9YxJHn5mcZ/qARJw/TZz6EVSFbIhXHz934oE/Ge0SgqoTkdcEqqr
0Tlk+ODBFhpkmIg9l/X/Bt6TBJoa+2/LvjzE0X9f6SN1q2+kx7+WkgbQs7PE
IxzLUsAqXSH4h2kEGWZS74WVScMBW+OQ1n1tSIPz0orpXRnY2dNfVMmZgIYU
RgkyWhSY7TTde+TfR6QXuhcPzFNgJM3QPvF2HXrl6vxkb4YsuOq3XjlyJBgF
Caw3R9+Wg6acD4yFypU4tzTompa8PMCVo+HeB7PxG1HngJ/T8lB0Lzy84VsX
0myWt3HLUICzPWd0ghnGUf5sA8q1VYTsrJCDfzQX0FRnfsKCnBKE29i/CJVa
Q/+Y6XV8+aiQWOOdsujLDMnh7zeF7lOh9IL57ooPrFD9RSNUvIsKYrX38MN5
NtA7rr37HlUF5N8mCups5Vk16iqP8RsVOPBpYPMtFxHe7l3k7ptUgf78A9w1
NWxwOzJMQLmiDomfEbp3TzAFU4sejA7M0lBQeZUBs0IHPjJF2whmmEAGYbE7
P50cxuMf0/Yerp1Dya92x22PpGHHx98mNktXkGBL5PK7//qxvOGtg6EWdJDR
2gkxpC/Y+rDj5qY1AYpeXvPsiqrFpQ67VkbdmUF2vZu54Fwl0nZxJao7sYOl
iq749rOzKCiE/r9KZ04ISnjJw2u0gv4i9icK73lg6XtWu9JWHpsMbQelpfnA
U6juAdmIAIFnS6aOJfPDUZYhA+cCBlghWDzqyRQEw6S9at+GV5Ezay0fVVEY
+BeF7WKoC2hNaf1XpbIoaPsF6TThFnTw7HLTQKkYfOdZig2ZrMJSi7wT30RI
kJ90zie0rRaHH1Do+DtAgmh+3/JzqAB56O9UTXgnAarKr2U6vMvQWyOLoxwm
ZOjLzb9kne+KLwk/uJHDJwl58svLSbJvcXy6y3ZCpyR0PTp9IuhKKzJUnyL+
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
0yDxvTvU12prRI4i8L1xVFCW1VkaBb636a1lJbN8phD43vOL+JqE87sw+N7K
YRe6H/J1IPC91amDbVRrDwLfe8GyLUlGt3ow+N5tO9eraLrnYvC9g2b+0Lz3
nonA9w540a3FqupF4HsbPE7f8eZtJwbf+8CXd3VaSXUIfO/rogb6bXYtCHxv
ZeOODq3T4xh87w5P5a69O3gYfO9uhwKjvW5/sYeV3lLfDhVq5p8Aztet1cTz
nrNru0O8JYN43ruuh2zOF2ITz9tGuTruMLuHeN516U+FCjXLief9Iz1C7FH8
TQSe9+nmQJnotv88739XS4MPVWYTz7uKPT/Db083As974tb3ZaV1DASe9++b
Zsz4us/E895jWP5hm0gTWnJh8I3cRn6K4hWtPeGRTjxveZZgePfYELYqWBDT
ri9C1VzvuqhDcTH43vvN0vU/ew9g8Lubksr2H3nfhMHv9g+MfJtZxiU+N4Pv
xfWR6ToLPvcWkSOCNZI0Cnxue41amaDvX4nPvaZ+69LJXXQEPveZSuNHB1Pa
Efjcqik3xkZMBzH43ObB5SPnV0zPJ//zuW2S8mV1rvYh8Lk5GctMu0c6EPjc
a/PnrTLj1mHwuaNHJQJkMiMR+NwWfRXls2e1I/C5s4w0lRTFKhD43HMXmNTd
yRvB4HMza14Muo9M4jy7Cx/vblaiAsruD+2XnMTgb5vWnxqPW9ZJ/O1cgfaX
awxZxN8eYxlpxLj0En87mHWSdbqyhfjbQScMJFXffiX+9uId/adu8CUSf/vv
nqTr9IeY+Nvhw3vbnkTlEH976y9ZF5esfAT+9v3ONOXthQwE/naYMMeqybGa
+Nvn7HUexpbWEX/7WFoc63okG9//li7fYClEdWal3tUe4uBow/zJ466i1EmL
MJnCtxwMHncHjyt50yKDeNyMscIVG8/3E49bZ0GAazF7iHjbRYrdZ1YeplHg
bXfePmorlPoPgbeds9XZ3aS+A4O3PbDx7/Pz+5sReNvSxtGFqh50BN527bWE
3IgkOgJve/ZupzUrBdgIvG3+YItg4RQmBm972PFaRvLHKgTe9vINHi4lgm0I
vG3HawNThnZ/scCZ59c0CxQpuWNVK2v38fD8mUMmMZeUqPCAL5wuvXEM3vb6
WdXuOjvoxNse+CS9sWYhG4GfbdL+pGWzWzbxsyP9HnAiTnQi8LNl1DO2Cesx
EfjZthbyS4T+eBI/2+9Bz0uP0UbiZRv1tn0sODOEH9zVCNzZLUwVSe1Pip/u
R8DHHoq94sDM4hL/um/9eP3XG1MI/Gv9bGuvWBMaBf71gtlCr3SknmPwr2c+
STR2D+pB4F/HJm5c5OzficC/blOkKgTjB/Dkjy3PJD+uppS2tgX9eVhFPOyG
2zL7q9T6EHjY3t5RgS1RGRg87B8qXaduzWxD4GFrLYzMqQ2fxE8KA88kr1Si
Lr6MtYq+OonBv17s++7OnexeZH6jbMjeUo1CZ69aJ8xmEQ+bPY9WVBjRgcC7
vrviT+GRjd+Idz140iA1IiCH+Nb8T0/4md5iIvCtk/LLb57ekILBty6QGi7Y
MF6Pjkh3/NgmOJMSPBj4ef3TSrRQ3sdKdJkwNfmQcmFO18e0NVrBjqvEqHM9
D14cHxrC4F1H0oS0lCwKiHcd8kJ4n/NRDvGsa3Q0RoQu0ijwqzsuj7qmszoR
+NVWo86x2rQeBH710Slrqzx9FgK/+u2idLFZRkwEfrUJnwH/9vZGBH61wI6O
1UGLmxD41ePsEqWx/RPY/Gk4b3hYkQo/MZqxZzEP2+JaWd9tatTWZ+vnTjWx
iF89mb3Kxb+xG4FX3VN72y1DJod41bY1ZlfCCnrQpPaOYL0aBtK4auRWTDEQ
+NU1xz5ktp/5QfzqgrIvr93vNRKvOmpIkNlhz8ESE9yP59+IUF8FGd5zpbkY
/OqaycGmo5e5xKeWLD/YcoGPRoFPbW/o1WlayEeBT72LEfyS/oaOwKdO9O3e
qO7Uh8Cnzi10cQs72E486hTRgZ0G6jwM/rTsq7mx9h9ZCHxpD+9zlzlPcogv
LZW83z7JiYE4E7x2X9EZVMHdt3VhmfVIY/Xux3NXCVGfBYpyZldxcJUl82H/
VlGq7w/r/J0yDgZvetRzR7GN2/T8HB5k6y4mRd0/JxMjv5dGgS/t+uXffuHH
dAS+tJFln4HIJTYCX/rQuZSqUgkGBl+6ortqcii2DXmti2Pmf1Gk/JQEzXKt
eBg8aY7T3UbpuWwEfrTBfH/7luNMBH40X0XYkQvJjWjjn7wxn4/C1Kb6TOls
cy4GP/qDHbfXLZRLvOh5lksMVBym+4j/edGXcNblUIEeBF50pCr7zpJ2NgIv
2uCenfwSqhWBF+1REag0f98kttxnqiVvrEY9W2OjtnUPi/jQvOmC9zNvur5o
d6R7K6pTra/yqjieOcSHTrXOc399honAh2bdrrsctagepdwRKKbYQpQkrtRv
Vudi8KEHxJWFLtNziQ9tktQmrpw3hLvs/Srl3KSo3gd5e2ZM70vwoKdWnm6+
Xd6GwYPWX3e0epVvD9oR94X3aIscVTpmszniZi8CDzo1aJfQpF0D+mYZeTiw
V5GSlNrbIKLGw3Z39p/S0lSjWK/WPdg5xiLec0RB7pqkiWziPceZRe21WdiD
wHsuNb0wFd/ZSLzn8ZqN5xrUODjtSMCaJF8Rqjbg+/zy9VwM/nNd/OnT48lc
4j1bi0X6r+jgo8B7Nqx+6O8+zEeB98wvNCwQH0hH4D2/V3nytfZKHwLv2SXR
x1xWrx2B9yzmejnOTZKHwXdWXj/jTNpVFhq4k/1ki546ZdlZcXLv9PkA39mT
2XrIQYKJRqzXpry6LkRF9c4QuzqXi0fPz4gs1JKijJbW1Ru40yjwmjkKI6vU
bnZh8JptRcQUlqrREfjM1+apy8XE9GDwmWMTgkNCd7eih/jJqleVitTJB+2K
XGMedlQ4OOenvBol+OHSGatFbKRhume+4IUeZNjv72W7gInAZ764uU3zxMIm
NKr4Umz+IhHKJXvZ6JU9XAw+80Vdo8vJVVziM3OFhkNvbaRR4DMbPEipdR7p
QeAzt8k/4X8qNYTBZ7a9K7dc17kPgc8c/kK/Vzm6DYHP3HB+y1j2z+n9zzB9
a7VZnfp15fdkTlgO8ZdFlv8JfhzCROAv/xUxDytgZGLwl6Ufewfppjag0zn0
zua9wlRdxsNV3dPPD/6y7EYDAxdmKtLfKSZ7I3wRhfZfGxrq5OCyPSNCV6Ol
qDHpo/mbz9Oo5/dVujTM5aj+CfmnPBYL9bBCYxz+KVLBaqH3xCcm8QGORV2y
jhqlc0NOTjqFhWQjT+WFrVCn7jfkhbylcnCc59mGpYk06oiurpeOTCMCn/lb
7bnlS4M52CfCXmt3iwgl+97jQdFsLgaveYvMp8eMTVziMW+omL9C8ysdgcd8
4nlxfIxqHwKP+adJi8Vxg3akJjXsVPhCkVr0dt+KQD0e8ZlXe4+eUqqfPl//
85gDo9YuSIrJIR7z1xumL4+8uYfAY25YenPp4WI6Ao/5esXk57EXdAQes1pD
YOGWhS0IPGYf4dP160Qyicd8Aqv6P1hXTjxm3lspgYoPDcRjruCL2h9xJBGD
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
366qpPbf8//Pv4UM/ifk/weiz7B6
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{6742, 6741, 2385, 1700, 2329, 2022, 2423, 1229, 
                2097, 1790, 2353, 1565, 2277, 1970, 1411, 2216, 1909, 1684, 
                1321, 2172, 1865, 1640, 1486, 1180, 2052, 1745, 1520, 1366, 
                1276, 1230, 2098, 1791, 1566, 1412}}], 
               
               PolygonBox[{{6748, 6747, 1195, 2067, 1760, 1535, 1381, 1291, 
                2149, 1842, 1617, 1463, 1245, 2113, 1806, 1581, 1427, 1337, 
                2182, 1875, 1650, 1496, 1196, 2068, 1761, 1536, 1382, 1292, 
                2150, 1843, 1618, 1464, 1246, 2114, 1807, 1582, 1428, 2223, 
                1916, 1691, 1338, 2183, 1876, 1651, 2307, 2000, 1497, 2256, 
                1949, 2396, 1724, 2343, 2036, 2433, 1197, 2069, 1762, 2349, 
                1537, 2270, 1963, 2399, 1383, 2206}}], 
               
               PolygonBox[{{6738, 6737, 1553, 1399, 2210, 1903, 1678, 1309, 
                2164, 1857, 1632, 1478, 2244, 1937, 1712, 1168, 2040, 1733, 
                1508, 1354, 2193, 1886, 1661, 1264, 2130, 1823, 1598, 1444, 
                1218, 2086, 1779, 1554, 1400, 1310, 1169, 2041, 1734, 1509, 
                1355, 1265, 2131, 1824, 1599, 1445, 1219, 2087, 1780, 1555, 
                1401, 1311, 2165, 1858, 1633, 1479, 1170, 2042, 1735, 1510, 
                1356, 1266, 2132, 1825, 1600, 1446, 2229, 1922, 1697, 2326, 
                2019, 2421, 1220}}], 
               PolygonBox[CompressedData["
1:eJwVzTssg3EUhvFToe1Hghh1sghiIC6JRG3mukztRInBgMGC1SISrIgVacKm
g8Fi79i4NVZmiQGDX4eT8z7Pe77/11feXNhoiYiUKTWnN6JoLlsjOrMRr+mI
n7aIJZM2T/w0n2QiBnRH3Li54rv4N+4XL5uMWeFG3Bb4O/zsLs+1c4PcMXeD
d/EpnsD7eB5v4VQSUZPrfI0/l+/5fv5LvvZeN9/ghrk/dw1c0ZXlC3ldntUd
uEnsevNtO6tf1Y/iKTyn/8aPeA1X9Q/4EC/iij5nf+Ad+8W/Z/QdeAwP6T9x
FZ/49lbek8/4Hv27vG1P6v4BYT4vUQ==
                "]], 
               PolygonBox[CompressedData["
1:eJwVz7suhFEUhuHlMIMKQ4KJxiU4JxJU6BRipqMYBTMmNDQSPaFHIuYCSJwK
iWPjBigpnAbhBrSeKb7s9b7f2v+f3ZVbnlqqjogqyclsOmJGjmsj2uojysmI
GsknIhplgeuvi5jmLvGbvTEuxXVzO9ywnPDt/CdXKwWuSfLcgN0Md4Xf7Y1z
LVwPt8uNyAaX4Va4J/yAD/ANPnWnA3+ZE/JiPtIt2iuZi+YtvhkX8CAeaojI
cn/4Hs/ja/0d3q68Bx/qO50/eM354T8T+lbch3v1v/gCz+G9yjvxOp7E+/oW
5yse1W3qsuZV/hk/4hK+xWe+ncbf5qQU9Skp8+fyD+Q7Mtk=
                "]], 
               PolygonBox[CompressedData["
1:eJwN0Lkyg2EYBeCPsY6tlMVMhMYdxK6wFbYZZRIMFxB7gYrecgOIcQEaVeyJ
a9CiRIJG7ynO5D1Pztf8yZXV+Vx1CKFK1uShJoTlWAhLUnAnGkIo14XQJOu1
IbRLjg3Uh5Bmj3pJP9Gv9ESjvfvD2ykecadYyn8VvaCfenPt3nfn+ah+qKf1
Hf1Vv/G+k1X0ZtlgEVllg3YZ9qR/2k2zKOtlZ2xMjliG7bI3/dYuyb71Ftlk
UVljQ3ZZVtS/7GZYjPWxczYud7yL/7BW2WIxWWfDtguspJftZlmc9bM8m5B7
3s1/WZtss7hssBHbRfasV+zmWAcbYBdsUo5Zlu2xd/1Fv9SLeo/v++c+8PsP
cJw4/w==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0DkznQEUxvHDWIu0tgqXxjI+gcI6o5FrC11MJC1DYZlxKXwBW0KdYSyV
pNCoLZd8Ai2FMFHFvv5u8cw5//9z3ve9cyu+jHQPZ0dElqSktyyiR5ZzIp7z
I9J5ERe5EZ3yn+sriKjkm/gN7oCr4e5wkUxzlTLBtbob4tL4u7sXfIz/4o+y
6OYzN8Pd6D/hBG7G1/Y9+6a7XfucPVkY8VNXbJ7jcfPQc7X6e74BF5tneEc/
iFOeX8OjuAPP6z+Yp3jUTOgn9W24EX/VP+LDzG/V7dsX7b/4cv0/+w/ffDVP
uEs3Sbnl+t1W8S38FnfE1XEPuERmuHU85mYBV+Ep3I6/4Sf7Uea9mf/VvmTv
983fugrzGqfMFe99s//hr9x2yZL7QW6Wu9MP4Grcirf1aa6ee8SlMstVyyr/
DuImSNM=
                "]], 
               PolygonBox[CompressedData["
1:eJwVz80zlXEYxvEbx/FSC23PrmITKS1Ky5p2UY1NhhIWyQzOwkarqKmO+gO8
1KaXGQwb1KRhUevYcEhvtmwVaZfPs7jnur7XdT/375zjndmmvsKIKDBTpjkT
cdPsFUe0mDCrqYjzpRFFJREn0hE5Wa0ZlDXKemSr+JW9MtkG3setZgzftfNY
VoDv4Bp8Ff/hP/Gz8kU+x0/I19y5gFP4JN7m3/HD9qb5Ab6hLGJEV0F/4TO6
Id01/pKsV/cfL+NevKb/gkdxC/6gr6S7+AF97c1y/Vf5KfzX/nc8ob+Nb+Fx
3IWf2EknN/lCebv8dPKb5HM471a9rFhWKXsmO2seyq7L+mR5vIzH8AJ+45sj
eJM/0P3gJ5O3+Rf8Pf6prsS7eb5I3iGv5Rvle/xnfl6+xA/zTXYndRm6jQfo
uncu6tP4HK7S7+D3uBM/9/0Mvp/cxaP6Y3QL99M6/SP9DXwZZ/VBV5L/ldzX
r+jHcSv+qK+iv/Egfev9o/pv8mr8z/5PPKVvw234Je7GV3DOXmlyF2dpSn8I
THdZbw==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{6738, 6739, 1313, 1403, 1557, 1782, 2089, 1221, 
                1267, 1357, 1511, 1736, 2043, 1171, 1480, 1634, 1859, 2166, 
                1312, 1679, 1904, 2211, 1402, 1967, 2274, 1556, 2350, 1781, 
                2088}}], 
               
               PolygonBox[{{6748, 6749, 1340, 1430, 1584, 1809, 2116, 1248, 
                1294, 1384, 1538, 1763, 2070, 1198, 1339, 1429, 1583, 1808, 
                2115, 1247, 1465, 1619, 1844, 2151, 1293, 2007, 2314, 1674, 
                2374, 1899}, {6744, 6745, 1331, 1421, 1575, 1800, 2107, 1239, 
                1285, 1375, 1529, 1754, 2061, 1189, 1330, 1420, 1574, 1799, 
                2106, 1238, 1705, 1930, 2237, 1460, 1986, 2293, 1614, 2360, 
                1839, 2146}}], 
               
               PolygonBox[{{6746, 6747, 1336, 1426, 1580, 1805, 2112, 1244, 
                1290, 1380, 1534, 1759, 2066, 1194, 1335, 1425, 1579, 1804, 
                2111, 1243, 1289, 1379, 1533, 1758, 2065, 1193, 1723, 1948, 
                2255, 1495, 1999, 2306, 1649, 2371, 1874, 2181}}], 
               
               PolygonBox[{{1166, 6752, 6737, 1778, 2085, 1217, 1443, 1597, 
                1822, 2129, 1263, 1660, 1885, 2192, 1353, 1507, 1732, 2039, 
                1167, 1477, 1631, 1856, 2163, 1308, 1398, 1552, 1777, 2084, 
                1216, 1442, 1596, 1821, 2128, 1262, 1352, 1506, 1731, 2038}}], 
               PolygonBox[CompressedData["
1:eJwV0DkvhGEUhuFj7I1a0FDMqPALdJYoLYmlmpGQKEhQ0SD8AVuC0lagEBIK
avvSkWjpMEpr4pri5Nz385w332SqMyPtw4mIyDOjprMiosvMFUccl0TsFUac
4g/cUhRRi/vwT0HEDO/ny7zLXdbcy/L5mr6Wz5gq2Z9pkF/Ld2XNPOVtr+xb
Ns0zfIl36jfxI37Hd7oEXnWXldeURhzKuu0lfq67cTfEL/gvH9Q38lY+yVP6
Uf7Ey+wFfZs9zrf10/o03+fPvDL3e/mvXc+vfPtFVy5bl83iI/mOdyc4i5vk
SdyDv9xP8TRf5B3uNvADfsO3ujy84u4AL+rOcv+PboC38Ame5PN8jG/xKV7B
f0wdv/T+07TLX82NPOT/ErhCOA==
                "]], 
               PolygonBox[CompressedData["
1:eJwVzTkvBFAUhuFDDKPSaxDVzFChpsSoFJgEhVBYQiNURmGZX2BpLA0JBRIh
oaA2CnshUast9eBRnNzvfb9z720YmemdLo+IMjNr+moj+s1LZUQyGbFbEXEu
b1RFFPFDImKqOuIW/+BJXQfuwYu4Wb/OzeNDXMANuBy3/d/33j4u4Et8or+W
v+RuPiMPy7/2HuWEt5f5MXmTz9nfl1/lbzmlf9ZX4R138vhD3+g843POdXyj
v7c/iYu4hCf07TiL87hJ/ybXcGu6rHMOH+hWdafyu1yvK5Nb/9/05x5exRf4
2N6V/Cl38Wl5SP6xt4RH8QYesPdlnrhKvK2/w+O4284Cl8Erpo4LroW7s3fE
dXIpbpArcf3cp3nkE9wWl8Z/rSFAzg==
                "]], 
               PolygonBox[CompressedData["
1:eJwNzUlLlWEYBuBHcdZdHgMn8D+kVLpQN2kbQTB1oyAFip6jKxMKde2IW4fU
1ink7MIpqL1okGChQTmcfkDtuhYP73099/e+X1XPYGsqMyIyzJzpKo3oNvtZ
EXvm1pRkRwyZgpyItKnMi9i1P5Hf50Z85R/6Ee7kKW7kn3IiP2LZvsU5zpu6
Rd0r3uc/XKOv4Yf8nG+8/ZbTXOlc179wzvIn/ZH7ffyF/3Gnvo6fcpIT+gu5
yG5a1+RM8apuULcuX8v5untTIe/457G8qjvn7757zR08yQ18LRd76539mLxh
v2D/0m6P01ytq+YSbubf3n3D91zhXNO3OWf4RH/ofi9/5r/coa/lJzzAxfpv
cqHdlO6ZM8krupRuTb6S83R3plze9s8jeUV3xpe+O5Wz3B22b5cn7Ovtl3iU
P/I8P+IEN/Ev73zgaT7mA307P+Z+fsBJk2t3a8rsttz5D4bxUAA=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
AXcM15Db+DOcSqp7nwUT////F5Vz7f8AONYvtg==
               "]]}, Annotation[#, "Charting`Private`Tag$836143#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
2umYS7jOIl2M3N36W/Ab4t7qe5DLwJXlpnL3iVe5R2LfwX0V35W+rNyZ+GbE
s9wd4lmuUnyv3Eb8vb6HuIxcOW4atxIPwXNwNTwGPxrfJE4Wa5H8a/4w/7b8
ce4jteLGa7EvMS533mzqZ2N9wEmM3+Ol6h1jLxTrLX7cb38u9i7ca3rSGr/E
6dW7qN8Tz57fhE85Z20uU8zB3HSuejxnPjv/QzxD0ZXLIE7zD/N36q/Az+Bq
iCdcc6VaDrUf4zeJbnxG0ZWrHPssbjM+o68Ol5mryL3J1RQf8jn5n7jkojuX
SXTjqsQ+iduCz+qry2WJOZCbydUSY7lW8T5y3+AjeC7+GK9yzF3451irxSn5
stgH6Jsn7yEfH3Ml7o6r4mruW+uYz/Fu3CWeifo2PCF+D14a+0Hjb3hQ/O/n
OvXUs+J7cCX1c3gDfgbPit+Jh+Km+C31LMbTsUdRG6fWWt6XPxlrN56Ht8ba
5Ny58C+xfoke6pnFj/ya2Hd4BmuNufX8GmuN6KmeRTzH3es8bbiP8XY8ES+L
PaVj6uNs8Tfj2eqr8DD8Nn4Av4bb4H7xbGL/If+WP8bPl2+LudB58uDfYs4X
p+XLY13RN1/eU17PsRPU0hm/wlnVeqjdJ6/OtVW7gffgrnir+g48KZ5/fAPq
eY3n8ODYK7tmA/XsuDKurH4eb8Sd8BzHr8bD8Vy1rNyZ2GPw4/m28v78d7Hu
4wV4O17vvHnxuZhfxRn5iljDYp8kf15e37kmqt1h/BpnU+upVk1eg2sXaxP+
BHfD29R34sm4NV6hns94Hg+JNd41G6rnwFViTlW/gDfhzvGuOH4NHhFrT+xP
1bMZz8ZarjZBrV3sE2JewF/ghXhHzHPOnQ+fj/lA9FbPLn7lN4pNoqP3Z7Mx
v74L8YxEHz05xPNc9dh7cdvxLjwFr8T5/Q0X5L85thGfU16Vq6p2EW+O98gx
a+Uvy+fztfFE3D7WnfgeYw/p+ALcxbin4gUup+jF1Yj9CLcDn9PXmLsr9g/c
XO5hMYl7LL7DePdiH6WvIHcJpxcvcneJ3lzNmGO5nfi8viZcrlgzuXlcndiH
8IX437kM4iUul+jD1Yq9HbcLX9DXlMsdcwY3n6sb6yxfmP+Dyyj6crnFC9z9
sV/iduOL+ppxeeIb4BZw9cTkmMvjPY/3D5/A7+CduIT7+6d8ZLxXjv8fLQyg
lA==
               "]]}, Annotation[#, "Charting`Private`Tag$836143#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nccjVUcx/FL2XuUrcz2kOxR9t5bKBpIWZVRouw9Q7aMFKGUFFmFomSr
ZM9siYSo9++P8/r+vp/v79zn3uc+zzknX7suDTsnSSQSQ5MlEgNSJRLl0iUS
B9IkEjPSJxLHUycSxenetBitxB+U9+VX84P0daEZsBPmTqNlZBXxBvif6g/M
SaderP4CX67vVX3p+Kz8a/K7jLXYs9hL2EZ+oL7y2EH+BF/ZOIl9aXTG0+u9
S/Y6frcxCH8KP4Sd5KsYp7AVRhc8g/67ZW/g2YzB+NP4YewUX9X4A5uOldVb
CZ+DfYV1xTJi2bAe2FV+Ij+dz86v45/j2/PP+a0JfhN+j3otvgkfpy6CD/F5
FegRbCb2h74S9Bd9B2k1/pC8H7+GH6yvK82I/U1Pmz9DXU6+hK8sb0gv82fo
XPPT0yX8NrpcPogWMudrc7vRTLJ5WHZZJXqMP0p7mvu3fBK/kZ8hf5PmxG7S
HPL16rbyL/kO8rY0Cfa97F71Otn3+Hj1E/hQ16xIj2Kn9VQ3zmAzsfJ6q+Dz
sJVYdywzlgPrheU0huGV8GPYGb6GcZh/R98Q7Kx8Fv8UX5WfL8/g2kvjO/Kr
5K/Js/A5+crxXKt767uGT47/B5spe4vmwnLJvqXtZCuwjrJ2NCn2J/1Bno+u
l/8WXj6BFpWnzJBIDHfNyurj+Cz8rP6S9Ff9h2hN/oj8XX4tP1RfN5oJO2fu
bPq0rBreCP9L/aE5GdWfxnfCv9H3ur6sfK74n+T/8O/zs/jc/Hf88/zL/GZ+
hDlV4l3lz/G1jPPYauMN/C69ueM+4HmMkfgoo6rsJH4eq21cwNYYPfC7zckj
64PnNUbj1fBT2AW+jnER+wCroLc6viDed6wnlg3Li70d74uxAXsB64Rt4cfo
q479wV/k6xpH+f56hmGX5HP4inwNvrF7dEX9kb5M6s/UX+Hr9PXSl52/h68i
O6Huq+86PiWeW2x2/BaaG/uX3ivfqH4xPod/Rf48vQO7TH+U56ffyvfRzfL3
6JPyVJ6Fsa5bQ30an41f0l+K/qa/nvqYbIB6uLw7njmeMXPm0kp4TbwJflX9
sf7M6mXq7fRr2WBaWG8S11pvXm91Dvn8+O7yqvQkf4z2M/+GfCr/A/9B3Hea
B8sn20Rfkr2Kv4Dfyf+EF1B/h2+Jdcw1auJn1H/K6huXsXlYZT218IXx/mBv
YjmxfNg7cZ+M8Xgt/Cx2mW9g/IXNx6rorY0vimcXeyveRSw/9i52k5/Gz+EL
8N/z7fnO/Iu+YzJ+K15QvQH/EZ+oLoZP8Hm14/3CPoh3Sl9puk/fYdqQPy4f
yK/jR8TeRLNg1+KZMv9DdVX5Ur6OvCn9mz9LPzE/C/2c30FXyofQ+8zZYG4f
mltWAK+Gn1L3N+dffLp6Ll6Q/4HvwHfhf+YL6d3I/xTPlc+pIz+vviJrZJzg
B8lHYlflC/hqfF1+cTy72NtYHqwgNiA+05iI18UvxDy+caz92CajL55XfyHZ
QLywMQmvh1/E/uabxPqJfYRVj2cZXxL/CdYPuwcrHHsPdp+xGeuIdcW28ZP1
1ccu8df4prF+YR9jNfTVx5fG/cDewe7F7ovnHbvFz4g9jL+f38K/zHfjt8f3
dc828Vv5981vEO+U+h9ZGdnvsmZxnsAHq0fFOQLPyl/Xv5DWxD/FGsia0Wv8
uVh/zctKv+B30lXyofR+c5J6Bzeb/268T7FmB5dXj32eP06HmH9bPpPfzM+X
96V5sQdkP9JOsu74S3hyfkfcQ/X3+M/4FNdoGOuP+rqseZx14mwhH43dkC/i
a/EN+ebm/qP+LM5acSZQ76LfyIbRB/Te4btvMa+/Or98QXB5jThz8CdinzL/
P/msWAv4D+X96D3YLfqg/Cf1K/Kv+dfk7WkK7C+6U35/7JdxNpFNUheP9ch1
G0VPfHc9LeIsFmcHfWOwm/JP+Np8I35Z3CdsAFYAezB+B/aQMQ1vjF+JeXzL
eMewxVgdvY3xz+N7YgOxgthD2HDsYWMr9ir2OraLfyDW9Fhv+enmNJFfVf8r
KyvbL3tGfRofph4bZ0z8rrgn+pfQunHvsSayFvR6nIXj3Kr+Ur2bro7vEPdQ
/53+i63mDlIXir0Mf1hek57hT8b6ZH4i9qtY5+iCWGNjzTfnNn1E/rO6s3wl
/4a8A02J7ZY9qN4SaxU+w7WaxvlSfUvWKs5o/HD5OOy2fClfj2/KL4/PxgZj
hbFHsJFYkthT4vvyj/Lb5F34HnxHWSp+T/xPsW/G+4NPVpeI98HnNYu1Nq6n
pxx+QE9r9Vl8hHo9Nj7O4PRu7B/6n3mfquvLl/HN5C3pDf583F/zs9EV/B66
Rj6CPmROMvd5m/lD1PfF/oo/Kq8VZ7ZYF8xNqp4TWexB6nx6H8O30654T3xv
PDuyn+K9ijOfz2we30/9n6xN/FcxBx+K36/vMdlo7HFjNt4i1h4sYTwb99L4
DGugtzm2gt+hb1isE9jj2BjsDtedyy/ki0SPvBvfi/+Ff0S+NZ6x2PfMbym/
oU5ilJcdlD2n7xw+Uv0tNkHWk2aLNU22jDaUfY61kD1Db/IX6Ffy7KH8Xro2
noV4Xs1J7v7udM3h6gfjO+JF5LXpOf4UHWv+nXRe7HF0kbw/zW/OE7KdtLus
N/4ynpr/FX9U/XP8p/gc13gGv6lOarSNcy0/Sv4efwf/Od+Ib8m3MvffWKPw
HHGOij0fHxXvjb5dPm8EfQhfhD0hq0PP83/QceYli7U79pjY+2NfpQXM+Y8W
le9SvyZfxb8p70TTxLpEf5M/RrfJf6d7Y5+iJeVzXbtVnD3jextP4Yf0tYtz
Nz5aPRG/k/+CbxzrD7+S323uSOxhrCg2HnvSmIe3jvUo5sX5Nb6/sRxrorcV
torfE+d97BHsSWwCljzWeX4xXyyuIX+df4t/RZaW3xfPsXo7/kvsT+pS+Hyf
1ybWo/iP4nxGn6aH9R2hL5h3UT6G/46fJO9Fs8e7EHuf/Et101gv+dby1vQW
fzH2L3nOOGvFden6eKfiHTZnr2uPpo/KiuF18QvxPJiTItZL9RK8ePxufW/w
ffjf+SLyHfyv/Ic+59n4X9XJ45wpv8SPlU/mU/Ar+GZ8G341/4s5Y2KdwIrH
GRQrYezFemBvY/v5BfqewxJYitjvsZTGr3GuMtrKkshSxj6KpzJ+w8fij+Ml
Yg/FShof4+3ifcVTxVqPpTb24ePwInjJWG+xUsZC/PnY9/HUsT5jaYyvsObY
s9ga/nd94+NdxErFcxrf0f35KM7BfOn4vfKefF/+AL/InBdiH8PSxHuL/cmP
49/n0/Jf8y1i7eHb+Lzb6rV4rjhTxToU65v6MX37fd4EWhT/BCstq0cv8qfp
lLg39OM4H8UZLc6ttGDcW2tQmbin6l7yb/B+8ldputjLYw2UPxHnE/n+eD/l
U+M68k9c+8XYK2Rp8Qr4EXUncy7j49VT8HT8Sr4l35Zfx+eOZzSe7bgvPuc9
+ZN8mfj8OD/E/4n1xt7BDvGL9b0UayeWLt4xLL1xMM4SRntZCln6+A14BuMQ
PhEvhpfFp8X+aSzFO+Ap8Qx4ZyyjsQp7JtYUbD1/WN8krDhWLs458ez47gvj
3BL7RDxH8jf5d/nD/KfmdMRSYRmxLthf/AR+Kp+J/4ZvxT/Pf8vniXMOv4E/
Yv5keQm+fJxB4vmL9T/28Vj34tmTv8X3j+8uS88fwYuqd+H74reqy+Cf+byX
aWp8LpZJVpEe5buac0X2XlwbmybrTXPEXkgzy1erW8uXx7oUe3CcLfhL9Dt5
3jg7xJpAN8rH0sfjv/B8HXXt99UlY53En5LXp5f4meamjT0i9s9Y//j9evvw
A/ijsUbLd8dewC/zWZ3kafjMfDd5FmMN1gZ7EdvAH9M3BSuFPR1nDqxC7HP4
K3haPAveHctqHMen4qXxCvhsrKJxAHsbG4gd44v5LnviPYjnQF027qnf+IX5
/wOnGx9s
               "]]}, Annotation[#, "Charting`Private`Tag$836143#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV13f8juUbxvFHZCSZlbJTkYhSklWUvSlUyIwoilCkQUv9ZKfsvffee+89
swkVirLL733+cb7O43Mc5/V91n1f1/3N1aRtrTZJEonEmbsTidRpE4l7MiYS
P6RPJDqnSyS24vm4eIZEIg+vDX4HX6APyvOry7ijvAmvpLw4Xk5Plv2H9+LX
5WV5w3FvnAkncKVMicQ2urbZe+gf6M78LvQd+l7zqc334n3N62Iuuz5KtjLW
yhfIS+AxOK+5evoveJ/eVt5KfpE/AB+yvpi+TL5VL4CvyDvhWbipuXb6VVzK
2hKyFbwp8Vn5M/h3+Pv4b9DlZCNwH3w/ToJfNZuGdy+vN/4Eb8fvqxfVfSqN
rI+sq2wH/kC9pEryV/Kn8hNqJC9trOH35X/K24nbqda8S7zDvKfU3/gj76EZ
r733eo0+pZc2W0q2iv8DnmY2idrPe9NMef4oM33xA/gu/Jo8tdleuAtOF+9D
3o/+TJZDNlq2i7+QX5J+QvY6/wjdnv8u/0/ej/F7WFNcXy7bphfE/8g/xrNx
c3Mf6tfxab1MfFfy1fxeeLr5AvpM+Ub9LnxAXh9PxhXMva3/hn+J92Z9P/mD
OKmsMm87Xce6e+ne9Cf89ObSmetPfy7bjRfhUvJ88Z7we/gv+oi8kHo5five
Gt4MnFSN4WVQ6fkD+F/w9uAOqg3vMu8o72n1Cq80by1vJk6mDuIGXrMib6y8
P86Mk+G6cT15z31wV5wxXkv+I91NllM2RraXv5j/Iv2k7A3+Ubojvy3/Cu+Y
+RL8Ffxn6Kv8zvQc3tvyDvoNfEYva10Z+Tp+bzwrrrPo8k363fiQvCGegiuZ
a6H/jo/o46wfIH8ID4l5eRV9B65n7X10X3qh/mncJ3oi9gbrMuoDed3N7cOd
4v7h/c07ziusyvFe5q3nzcbJ1Xje/SoT/yf+l3Gd449UefUKfwN/Dj+FmsD7
kfew95E8rl/eA/E3eD/jr+I6wx/HPcr7h3eC96yqwCvL28ibi1Oqw/gtf6sy
b6J8IM6CU8TvIX+Q9wBvUOxn8bvjJfglM/ljz417G1+lT8qfU9dwF3kLXkV5
ObyJnidLpX7BjeRVeJPkP+GsOCV+U56Z9yBvMP4mfjO8FJc2UyD2WtweX6NP
yUv6HVbKitDX+Z/Qc3kt5R31m7hSfJ+yzbz5sXerybyfednkqfj1eQ/xMvOG
4G/j+8HLcBkzT8Vvjj/E1+nT8lL+/irZ8/QNflf6nbh/zVXAW+gFsoLmZstS
00f4jemqspb8P+J6ND+In52+h1+Vv5NuYD4t3Y9epH8We7CeJK4Bax7Sh8b3
xOthNpc+1uyq2MPky+Uv47Gxh8X3qx/D+/Wucb/Lb/AH4jPWv6ivlm/Xi+Kb
8k9xq7gXzFfEW+mFsS+po7iJvFqcAfLBOEd8TlzN39hFNzSXju5PL9Y/j3Mh
9kSz5/Us1j1MD4vvHH9n/pG4H82vjv1ZvkL+Ch6HC8VvpR/HB+JelHeU3+T/
hH+1/iV9jfwF+pbsM7q1vBP/Vnz31lTib+Mtin2SP4efhj7Gb0pXl00zNwTn
jLMdvyVPb3YA/gJnlWeRD6e/j+8Dr8Rl5U/H2RN7Ab5Fn42zXFXjVeZt5y2O
fUUdx82sqcGbLh+Kc+GhXisNr7q+G+/UG5nPoP+Iu8mymc9qfgT9v3j/eBUu
F3tmnBOxn+Db9Lk419Rt/Ln83fjb8ip4B70k9nx/e64sLX2C35yeyqspf0e/
gI/Gs4V1w+SP4GH4PnkNfU+cs3pj6zPqA/ESvXt8H3pSa37Ts1ufjR7J74F7
ms+tjzd/XLZaVp4uLG/APxHfeext/H955+NsUP/iL2TvxevLq+Kd9NK47tRM
Xg6VnT8qninic+FuqqbKGblsdJzdspO4u6qlqvF38ZfF765m8XLFGv6YOGd4
p/AaXMF7eJbX0Hs9SR/Uv5R1lv3H/znOe/Ol9bXyknRteXX5bvny+F3j9fHb
8lpxTsiH49zxe+AmcW/Ee+CNxX3wabwWVzTzXJwBuAu+Q/8ee1Q81+Ju8jbx
vCevgffQK2TPeD/zZBnjs/BbxPOtrBX/Ypy15kfwH6WH89LJaup78e54BrUu
k/4TXhqfOa45PZk1v+u5rX+EHsf/Ls5Q84/qE8yviX1Hvk5eCY/HReI+00/h
r2WfyBL0H9aV4a+jX6Tv8LvTbeP5L35LvJdeGe8nvhfcUv5qnHfykfgxnB43
i/fAy80bj/vhX/E3qk789vx9/FX8+9U83mPqUf4Efn/eWfyt6spL4u9eiH1H
1eXV5u03tzrOZ3UGv2PmNV5rn+ESfUyfb3aU7HGcQdbc7OPxWryJeAA+h3uo
T3l3mbsY15Cqx3uVd8Dcmjir1QLeaF6e+D3jGZOXh/c4b1I82+LzeD2uHOdW
/Cb4M5wUX4rvWCXid8TvxzOG/DX5QXptPMvE+5Zlju+M34qexqsjf1f/M56R
rBkjy0uP4GWS1dL34T16i/he9Z/xMv2reAaNZy5r/tDzWp+Hnhz7auwh5h/T
J5pfG/eRfIO8Ci5qphHvNP09/3N+MvrPePblr6dfppPE69AfxLNN/M7mDtHr
4txXi3hjeU+YuT/OZt4TvLy8KXG24N/x/9Sbqi7/MH89/2G1mDeOl8/6B2Kv
5OXjPcGbGvd//LbewyT5ujj3ZRtlVfEE/IKZxnE/4J6yL2R303/FM7iqz6vH
+8XcBpwlrkHc2kzd2Lvl4/GT+MG4f+VP8vLxpuFB+ALehKuZKRZ7YeyDODm+
HK/j9TfQZem76K/pdrH/mnvd3BF6YzxPyhbIssb1yX+Xns6rJ39P/yv2cH2p
dRPk+fFInFleW98fz/9667g/9EF4ebyevJue3JoLen7rn6Snx9mGB8f1rE82
vz72J/lmeXVcPPbHOP/pXrGH81PQV6wpy99Il6OT0t/Q7WOvNveGuaP0Jlk2
tYw3kVfAzENxTfMK8PLzZuAh+BLurd5ST6kCspmyobI/cR/VKK4T/jH+Zn52
tZw3ifeUv/1wfFdx38bnwt/ggvH35LPoYbK8silxDfC38GvQJWRN+Wfpvvwv
+SnpQby/rSmnb8Ll6WT0t/Q8/UPrPtJv41/jfLa2vrXH4xzBW+L5XV8o36zn
iL1C/h6egV8310a/jE/oK6yfLC+Is8S5wjsQZ0w8w9ND6G/5hcwVNDebHi67
jPupr3ipzPzDq6Ca8BrwTpjbinOqlbynVSH+HP4I3hXcX33Nu8f6q7yKqimv
Ie+kuW3xLKxW8abwCsW1ym8b5138Td5cPBL/jbfimnEmx54b5wBOja/JK6lm
8VvzTsm3xxmsfsNtzLwR+7x8Kn4aZ4vzyOc/GPtn7C30ULoHv7C5Z8zNo0fF
/iKbGt8Bfxu/Fj2RVyrOKP0cPhTPenHWyO/Fg/F1a8vrm/EOvTK+W++B5+sd
rP9Y/xef1ZvH9Wj9aX5fvMN8EX2RPHfsa7K29JvxHfGvxNlszTT+M3R2/gdx
3/MK8+bj0fgqHqjeVo35Z/g742xVa3nTeYWtz8FvF9cX71neAjwGX8Pbce04
02OPjbMOp8E34rqI65KuQieP/w3oBXpHs531//C5OE+sa2Ldr3GW413mn9cX
y7foj+E/5O/jmbi+uffjfsEn45nC+hnyZ/EonFNeRz8U+0Ts7/Qw+jt+dzqF
2SLWPKcv5I2NvZ4/zcx1/g7+q/RLse/j7/B9+Ka5qqolrynvrHx3nAtqPW8m
7zlzufgfxmfgFeEtwuPwDTxIfc9La+4Wr5pK4bW/x53i3JE3k5+L55R4HpcX
1ZfI88QZIPuAbhDniNlZ8VnwI7hDzPKe5y3G4/FNvBO/ZqY0b3CcgTgdvi2v
rlrxmvPOy/fGvqUu4nZmGsaZIZ+Nn4/rDXeUv8AryluCJ+BbeBeuY6ZM7LO4
J06P/5XXUK3jWuP9Jt8X90/sxbi9mbdiD5fPwUXxo7hTnJM++/B4NsDF5C/I
l9ITZbfxblw3nhFi/8Y/4Az4P3lNldL6/+GP4iyQt4jnWnp/fIY442T5Yt/n
f0g3inuF/0/so+bn8l+gR8d1KKurH46/Z01WegS9Il5D9qWe0vxFvbi1xehl
/J7x3BDnuT7d/Ia4t+V75PXwJPxKPD/q5/HhuF7lveQZ8Z3YI3lb6Vp0Kron
/XGcQeZaxnMXfSBeQ/2FO8gb87bI5+Fi+PHYV+KctH5kPKfE/xt0KvklvYTZ
/wNX8Vc3
               "]]}, Annotation[#, "Charting`Private`Tag$836143#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV2Hf8T2UYxvGvlT2zs1fKyEilyN4zyiyyKlQiZGXvPcreLbSMrCiEQkPJ
SKQoSmVkZab3/cf9Otfnuu7n9z3nPOc8z6Fgxx7NXkySSCQ6pEgkzmdNJN7I
mUg0yZFItMieSKzOlkjUyZVIXMTXcXOcFH+A1+LMqhBvvzFDeWPwr7iDnvS8
rLyRuCj+jv5Bvo1+QXY/PYmuSFeV/eO336Sb0i1l82V18Rrj69KX+JlzJxI3
ZN/gAbLHZcnoD2XJZOtkH+GnZeVxFtwfF8V5cUl9J/BkXBcXNv4APYx/gz9W
/zLHx3n3yX+Td8QZcDY9h+gR9Ch+MXof77AxFdRk/LCsGu+Ca3mLfoxuFeek
/wlVRB3kD+eP45/Eo9VF/W/zm/Fb89fyWsR9U4f4I/jj+afwGHVJ/zv85vw2
/HW8liq5c1jJW8+7Uw3AxfSV4v1KT6Hrua5ien+gR/Jv8ifo/Z3Xic7Iz84f
i+/G39M/yh9QU/Aj8uq8y85hWcwB3Va2Xn89+eX4m7gVToFX4Q1xTXSHeCbo
gfTddGnZb/RU+m79h+Pe8m7xJupb7vgEr4xz/kPeGWfCOXCOeJ7wyLjneJy8
ON7PT4WPGP8ZflH+AH4QT8WVcCFcQ98ZPAdfcS3LHZ/gPalvAb8e3uBv1qev
xDnxW+M78Gq8EWdTg3DxeF54xeU/0qPpSbLTeLy6R88B3lHeQ+pfv7dCXwve
U3ijnjbRp47wx/An8//EE9RV/e/yW/Lb8T/mNfA3/8X/4bY4JV6DP8bZ1b28
o8aM5U3Bf+EuejLzcvIm4nvxQfon+Xa6h6wiPY2uTBd2n2rKz+K5+JrzeM+x
Fa+9voX8+niTv9WQvsq/zd9LD+Q/yU9Ff8TfFM8p3THmj36VvofO5zfKyE/i
abg+LmHcT/S4uL54PvSvcGzBKyv/W/4MzhLXgnPFe4hHxbOJJ8lL4EP81PiY
8TvwS/KH6en0o3Qt+Tl6Hn3dtb3v2Jr3tJ5F/AZ4s7/ViL7GT8R84dR4Lb1Z
X041GN8b58YrKT9Gj6enyc7gyaqknh94P/MeUTf83gf62vA64E/0tFOl1E3Z
h7K2so6yT3ntVWn1M38Cfzr/LJ6ibulfGfeb34m/hdfY713HSeJ6cBq8jv4k
3lW6k/5c9BC6BJ3ffSonP4Wnx/NszC+OE3kz9J3DU+P85Id5v/Aqqf/89ip9
T/E64616mui5gZPGteG0eD39qXwD3Vl/bnooXTLWatnv9Ix41/Ufd5wUzxLv
NX3vOrbklXOO5+XP4jvj/HHuWJ/waFwDT4v7hH/kp8HHjd+Je8ofxJXxDFwF
F8G19Z3H8/Ft17LasR2vi77F/IZ4m7/ZlL4Z+0zMCU6HN9Bb9N2lyvJO6J3M
ex3/g6erhFrDb89/JtakWGdVOfUrfwp/Jv8CnqGSqI/4T/Ofjfcy1j2V3u9t
5G3l5VHleb/pm8qbhS/i5/Rk5d3Few3fh4/QaV3nCT2f417yh/Cj+DVcFdeJ
udK/lu5APydbImuEd/Afo2/xsxiX3PFbPEhWGXeRZ8Af85PjbbGe4S6xx+O8
eBguhQvg+/X9EfOKGwQbf5KeFu8Xnq3/PXkr3iVZVzobnUd+hB5Dv84vQx+N
fU3/F/TL/Cr063S12N9jrvStozvSXeM5wM3k/+EUMR84I95EfybPF3s575Qx
03lz8GU8M/ZWtZ7fid8t7mU8h+qB2OfUBllnWfc4n5gL9aD6nT+DP5d/Bc+K
PURt5HfhP8/fhZs7j9v4DvUd/ar8UfejqywT3hznjLfH+o+fiXc29hP5H/Rr
8nmxt+Bu8uzxzcObjcvin2KvlVdVKXkfy5/hvYB348f1JHgp4/pwZvwJvUNe
QA3HpeUVeBXlp2Me6Pmy92Wt8VV+dzpHrOux38U3FT0nnnf6GC+dazgZ14x7
x36Dq+GZuDouiuvF9yBegBviVMZvop/l/xt7uv6ljo15JeR74vsKJ8F3Rr++
fXgw7i7LQn/K22ncJvpZfkF6BH1ffB/IHtb3Jz2TXiC7hp+X54z7HPOHy+Of
Y42UV1epeZvlz/F64C9jjHpE/cWfxV/Iv47nxRqsPuF35b/E/wq/oO70d7fw
Po/v6VhXeX/rm81bFHtF9OnJFe9Q7Nf0OLqma50vux//Emuo3hoqLe9TeTde
T/w1flFl1beV9wWvsKrMOxPzw1uMb0afntxxf+I+4Ar4eLyz8poqHW9L3Fde
r/gWxy30JOWljvuAs+Ft9C75Zvq5WGvpkXSZWIdlp+nX4xnXf9ZxbuxVrmeJ
vg9kbXi3ZD3ou2K/kBXScwyPj70bL4z3D5/gp8en41nGfWKfx7XwLFwDF8P1
9V3AC3EjnN74rfTz/Jf1viFrgvfyW9LJ6DQxVzg7/ozera+oGoXLxlrKqyI/
R8+jl8aeiBfF+6/nV96fvNoqA2+bvhd4vfG3uKeqqs7z5/Pf4N/Gi9VDxv/G
+4tXR2XkfabvRV4f/Ka8KS7pWr6TtcLJcVacVs/3eAjuJctBb+ftMa6Yqsb7
R7aA9yZOqJf05InvPt4SeUV8kv5bVldl4m2X9+D1xftwaz0peOniHuKceAf9
ZXzT0F1ld9Oj6XLxvsuq67tAL6Tfkn0oa4uT0D3pvLGHuYYi8b2EJ+DaeKlx
D+NT/Az4jP49uK/8kVg38GxcM34TN9B3ES/CjXFm43fQL/Gv8l/R/5bjY7zv
ZW3oO+j08v30ULo3Pxe9k/eV/uJqDC4fzxivhvwivYh+W5Y0nqNYA/T8zjuL
66ssvJ36evL64f24j6qpLvEX89/hJ4t5jTVBfR5zx+/PO4D7qlrqMn8Jfxk/
eVwDr5Lf+4N3DjdQWXlf6HuZNwAfxG31pORl4L2Cc+PP6a/l96ix+P64l7za
8iv0Unq5bKXsSZyC7kXni7U6vgPpifTb+ivTp3kZ4zst1sO4x7GG03PoWnRx
WUM9l/Bi3ARnM3ZX3Gv+Nf5A/W87NuOVkh+SP4lT4Ww4o74DeFjs+bif/C78
Reyf+Jv4Zsbd5PfS4+gKdKV4F+mZ8c1jzL+Ob/BW6LlDvSzLH2tFzIX8Ufxn
7EWyRio7b7e8D28Q/gE/pSc1L1PME86Dd9F75SXiveFdlb/Jezf2XrUs3ke1
h9+X/yrvMB6g6sU7pL6UvSIbLPsRD1T11TX+W/z3+KnU8ng+1Vf8fvwhvCN4
kMrrXHbH9xqvZDwXvOsxV7z3Y/9SK3hV9P0VayNurHLzvtbXnzcUH8Xt9KTh
ZY7zxfnwnvhWkZdSDXk35O/wPsBpVG89BeJdjGuPdQ7/He9k7H10v5h/ei5d
m77H3DWSX8ZLYg0w5hvHAbzrMd9633Fsziut9yd5e5wWZ4//79F3EA/HVfFg
eX78JT8l3mf8Ftw9vmNwaTwePxD7XfzbINZaPCv2B2NvOi7jfahvFf8pnJbu
QxeMZznmQV81fCaeaVlTlYe3Vz6QNxwfw0NUAX1fxbrMu09NwA/GHshrLL9F
L6eTOpeV8tXydrG20n3pQnGPYu70Vsdn417JHlN5ed/KB/FG4J/xUFVQ39ex
nvHKqCa8//St4K3C6WO/5dXQd453BTdT+Xjf6XuVNxL/goepQvq+ifePVzau
l3db37u81bHHxXoe65q+8/G9hpur/Lx9+gbzRuHjeLgqrG9vzBuvXFwLL8F7
j7cm9jz1Ci4c7zJvZayB+J9Yw2WPqwK87+VDeKPxCfy0nnTxPRj3AxfB39KH
5Fvp52Xl6Yn0Q7GOxD5Hz6ab6U9Cv8/7SM8aun2843Q/ugidJ/6fQn4cT4r1
BK8yrja+wM+Er8W3F+4faw9+As/DdeJacOO433gpbooLGv8/Ve0YYQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$836143#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 18.33333295918367}, {-6., 6.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 7.501161668118749}, {2., 4.232658722973338}, {3., 
          1.6817521501353343`}, {4., 40.440401494040835`}, {5., 
          9.679150132696913}, {6., 9.030876871500313}, {7., 
          13.813797054286152`}, {8., 9.834585882973897}, {9., 
          4.3292010063651665`}, {10., 2.2957642176187223`}, {11., 
          0.44292622441736834`}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"J vs time\"", TraditionalForm],
      PlotRange->{{0., 11.}, {0, 40.440401494040835`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.21875}, {2., 0.203125}, {3., 0.1875}, {4., 1.375}, {
          5., 0.359375}, {6., 0.453125}, {7., 0.203125}, {8., 0.21875}, {9., 
          0.40625}, {10., 0.765625}, {11., 0.390625}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Time of Computations vs time\"", TraditionalForm],
      PlotRange->{{0., 11.}, {0, 1.375}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.866047075660619*^9, 3.8660471382914114`*^9, 3.8660472260430984`*^9, 
   3.866140681571192*^9, 3.8661407121024823`*^9, 3.866140871490795*^9, 
   3.8665711962149277`*^9, 3.8665714575256453`*^9, {3.866572829961238*^9, 
   3.8665728662966576`*^9}, 3.8665729128228292`*^9, 3.866573002355294*^9, 
   3.866573090261278*^9, 3.866573528101734*^9, 3.8665735834560924`*^9, 
   3.866573752972066*^9, 3.8665738279301763`*^9, 3.866573926696698*^9, 
   3.866575304671526*^9, 3.8665755470522766`*^9, 3.8665756179656754`*^9, 
   3.866575688735121*^9, 3.8665757462617865`*^9, 3.8665758172531605`*^9, 
   3.8665763101170807`*^9, 3.866576396727477*^9, {3.8665764702890325`*^9, 
   3.8665764772708073`*^9}, 3.8665765554638863`*^9, 3.866576589669985*^9, 
   3.866576630555954*^9, 3.8665767292485*^9, {3.8665778490206184`*^9, 
   3.8665778685294003`*^9}, 3.866579088540572*^9, 3.8665802074059796`*^9, 
   3.866664966444965*^9, 3.866665122519099*^9, 3.8671675311744967`*^9, 
   3.8671675669650497`*^9, 3.8671683538133774`*^9, 3.8671683867478433`*^9, 
   3.867168529807086*^9, 3.867168560753188*^9, 3.8671686371897397`*^9, 
   3.867168741292443*^9, 3.8671688704131436`*^9, 3.8671689573723297`*^9, {
   3.8671697329302692`*^9, 3.867169754988214*^9}, 3.8671697897410984`*^9},
 CellLabel->
  "Out[1661]=",ExpressionUUID->"26c0064a-9406-4091-bdb0-1db73549efba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"prevPlots", " ", "=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"p1a", ",", "p1b", ",", "p1c"}], "}"}], "}"}], "]"}]}],
  FontWeight->"Plain"]], "Input",
 CellChangeTimes->{{3.86716859064563*^9, 3.867168603098645*^9}},
 CellLabel->
  "In[1493]:=",ExpressionUUID->"ccd81f7a-ab55-4ede-ac8f-e0e84d99c36f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
CxAG9LCJqGBhljRVlNeXarTk765RhMfC0zOdk/ca8WiYqTeD7SoOfiw+ndb0
A0/xL956Z/5RqcWjPf9C62NDbz8VHdzzL86uTGpaZW2APf8iiXT00RWfOdDU
yuM3dbkHLPtUdrWp9YHEK/QlCirDYMsYW/fD6ifY8zf+eQcekr+HKP6GnQxr
YvKlvxR/g+3XvzM3Q9op/sZDBr3nVDqlFD9jLd1fe+ZDG8XPGPr4haPdvofi
ZzyIf+HCUhtK8S++hCaK5ax2UvyLM5Wrf/4SfoI9/yIoMRZ+LWil+BefIl+s
l+ePUPyLYPYLpR5asxT/Il9UlK7Wbxkdtzoh73iXHio9OJUq/ZKEkkv/YyY4
MsBTN0a6DXKXUf17LuXvLxhh/MAX/m6whHrn5v6LjGGGSbs/8iPJ+/2ZNZOt
C3ks0OG8lX7auU6k5DpdDMtYodD7UO7UY5nIVUKyoKmPDaqZ149+jv4DEs7o
4d0X2eHUlsI8iWMIuFaEyrivccDylBvXma5NgT4V//cy/pxw7Y2ahDx2CmwZ
mbB9ZsHA6hsp9RipJdAY38ODC8bA56pbEeA3ERgykcxYcVzwRZmE7jmNZSAd
/3XgSCQXDHEdilLTJu/ptwnROUe54bbr561o03nQqKM6UpDGDf+0rSuLck2B
UAe1X92yPHDf2yWTiMZh0CSKYTmoygtPQz0UdqkVnEkNmz70lxc6Blhm9Oni
QZj1R8P8W3xwsVt+2v2WP3kuqlfHPOSHYsT568l/s1F4tbfEhVl+OOVfdXtN
vgQpaFpx0Nph4WOTO6rWp6opftHkn7mv7uR+tecX/bVb6dZOw1P8oaTl+Yob
H5aBSHxZjtStAVCgFFZrx/QXvF/lpq6zGwGOiqPHlzXj0J1wpuv7EsaB0XY4
4yC2muInneonRop0tVD8JEut274A/4viF5nvaFsZuHVS/CLBlW8TXSO/gMm1
3Fv7lnZA53zgbM9sP1IRfvbH+x0VjHq/teN8pgyJK1sf7EujgRJuglZV2RPo
wV8X95FCWniy/EohZ/gCkkxkM4xsooM9f5R4ZcVI6Etd7vr1KXpYK21QdsyM
hNKsXDfMVhjg3Vx0+b84Ijp9bOugsDQLpL/XbXLpxwA65lKfdV+JFZJqblZN
KRSjb/skSo102GCodu2zn4KfwOtz/C2RjhwwRfApE6f7P2Bm816tQY0T6jwv
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
841f7q1rXmnWTCC+USI+bfa4QQeB+EbRuW4eW6EuAvGN3Yzn756p0IntL23d
sxso8P3xbfbmeXQC8Y4zk382Jb4h98f/8Y6P8jb5jwz98+U1NDXdN74eQSBf
XoebimrJJ2OwyvfaheVH2eESPptqdQ0WcKce2squyQGvOVZpWZDjGfGI9brK
WWscWADxiKHBRRbW3CzMB9IZvctuR9OI+OU1DDcp8nll6Zh48Qo6Idq6Y1wz
lQKj/QO/1qTQCX515lEzJXJ93Tqk6Zr8z7dXpbTNaPLkU7DDoPT2cD47pFYa
z78i65WFMYtX9GYOqBxbMWdEzkfE+z3i73MuJ5/PAm5MazTZUiBzh5zGZyc6
oaD9lV1ijgJfvb+eX0vO7xtdm3r9valw3yGJY2FudMzXle4tjOqxf0sgX5/3
9WUbp+nHQPAah6LiXRwwcbWpRTa5n9ue/lb6Di6BSbvic4+R8+eZp0/iy3AK
tDUJ6En/SCf2bhU2aJaiQrNO3w9bMv/5/LQGBZh3U+8B094U1+sf2OH61KtT
RWYssHb+3YG4bxzQ2YxcJsnxg3i3ocpLg17nWUC0/XOKtxEF+u48cY9lSCcS
xgVznfrI+fL7tO88WQ8h/9/uJoeBls0OQJ+X6/Z+ew7404ApNkmu52H7yhQ4
CyjwsWmHFVc2nfht90Vy5BQ5PhxUR8LJ39vRLzexepEDnnDp6+wj729ugp4K
nZcKoy3LbBbI9QrxW+Onn1T01bwkkB9wX8iPv3c1pEHMe943kqIcUNpsOsLb
jQUkebdNS8osgZW6CvfbyH8ff57QE7iNfJ4K2FTzkVwvJW8pruCP4oBJT79q
/ldv9x+Da193UuDeI9+tH5Hfh3yC5p/GzR3SrwIr//AzIUYcMNq27+cvcr9s
ezQbtCub3K+d7ksVp9GJQduKAq8B8r/TN947TZ7v3N/7kcuWUGGkm92ew+T9
Rr5Bf8eTIjHaOmCFK4elajEH7E7mHhclv98xgnHp9CgF/mzPccgl/179wbXE
+tsccNvJk7fKyfFl1vuuiVZBgcunNs09I+unSvPXm9P4yfWdjffKLvL5/46h
eG+OEBU2r6vcQiXrBcQPpc8tyac9CsL80B039zp3mVYlxA8Jc1h+jRx9jfmh
FPkeh6KDaQD5AXum3fYB9SHM7xxsu35K68UwQPyOtcrVtcJxIwDxO4YrrkdU
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
nRTLUibhzWO65egWCjz5vOBSPVnfXTSV+9WeRoU3dmXOu5L13cLHvfxgvgO8
CTFxVSf3q36FUZnDG7jhOQGXb+PkeDR3feQbbkaB3y/xRnmQ4wP5oMS+qJaf
Is+/7rDRVMhEG7ixSnXfY3J9kGl9RfVq4oLTgna+FbqzwAlO6Y4dpUC6V8/K
s+TnHx1891aziQoDreXyX5GfR/6nqj3Cz1wzaOBDgPqphSvcsIlvv4uR/iz2
Ob2gLWxuIdc3xAO/sdDlKU4uAsjf1D70qslvphMcizp1aXVaO6gwjZCNmWcS
QYZvcjnHuWCW/VBbPjn+BK5/5t2rRYHib5SSFsn7+WZwywPX7v+el3Sy/usP
IH/Tjs719fsPfAVrlVY3+uymwPyFb4q85Pi8JpSZw5VPhb8tzyo/IO8X8jXx
3YnLKx1jEqcyxlrz93PDZaCIo4F8PkD+pqTmgvIMsj5pat4/YJXZAdYL6Rol
k7/PkVdV84owNxTlkebI/+95eOV01BNjCvzkfllOjbxeSU1N1okTVFjTuVb2
Jvn7kuxNa0tS24Dt/u4Dp8nvS08c3P2xigsuZ01cKdGZBS+aTR3aAAW2WH43
9SU/f5fNLgLUUeHkWdUxJ/LzkhbvrbYacsOhcLDnGrn/Iz/TcFu9xj4ZBvYz
3cpctAlWpYGn5BXN29cBNB1/ZFWT88Pny8i9r0u5YZ8fN82fPL8y5V9Nl/Qo
8K/3bR8e8vuiLnu5BQ5S4ewOd5k08vuQn+nMRUHhZRvTQDMv+JCkSNZ36rFX
JMnxivxLv5baJNz9zSSUVqpFOp/khiqFLelJl2bBZufdstRDnaDkoCTl/Ay5
fl9+J7RqJzdMS5MUayOvl0rHGqe0qxT4VHUdfyb5/ci/ZNw5ESpMfv/c8gti
juQ+xZ428UWC/PyZ6IdK3CfI9cZpmcVO8u+fupQEGbRRYR/vxEgy+ffIz9Rt
c//zk0Qa5qtXn/QsLn1SBDBfrfT3P75aCfHVtGQLo+5DDdi/FJrEu/AzlY79
S0fen9/kaNyD/Usp1vVbrX16sX9JfEhj73r2XuxfUk+edM1MZGL/0uWTwdrr
PzGwf+mnjphu21wX9i+1GHRPq+TQsH9pnu/mYWpdO/YvVcydH/v+uBnz1SUS
m0Ur0hoxX52dm/f+WHs95qtF48+1NV3+hflq3o5HLz7olmC+Wufj0w/Htudj
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
ubOyCwifJN9f/H70Vx8QPslU2XCdrA4XCJ90uObK1vf2XHg7tPGnqiYXqnS2
tpQ4coBmURsd4z0MMSuezoy/7QNOy5AWhz0OoWcw61febDgZhpreC/+A3w/8
q/QdeoDwTfxPlrVO/8cCwjctenEq2AnP63coIRtEr8yBitnmAalFDLJffOCb
NxaWhi2kfyrv7wrwt28g/dMoMhTQ+f2F9E8fFH0nzh7CyH7x5WIqH8LoD0j/
tMlllo+ry8YI/7RXM9XbQnYAI/xT+sENzhmOIxjhn55LbtTUWTmOEf5p/bH+
TWr7edgSg8GltqIUpPcmTuxeHA879/OlxrtVwqgq+u37+6E8bI9HJmPfVhE0
fftTGb8oD7uqqT9Xf4CKtJqlNrU9GcOyhgsb1pmJosd9ZUI3REcwwlMN9w4N
CGsNkv3lLfqV1/4NKSD9U4BExER7SQ3pn5iDXgHuys2kf/rsm3jo3nwb6Z9s
ZPgLZ1M7SP8UO/tyaBDP6x+ua+9+9pCGXlVo6k90MqFtYq4sS5KOYjUK/5uT
Y8Ke1kMCqgl0xFPTqDb91Q5P1Qum6uSl0RY27OSaM0g/JcSXUebBaST9VOCO
opjnMni9/Z+fEjvm06Qx3QuEn/outvqSSx8HCD9ltcIhNu5fLqR6vnKPqhkD
g+cGBXUreoHwVIof06YL97fDzyVDvtXcWTBiscK3OTOA74DH+j7qArTLqY4K
yLaS3ipL39VdAKsg++vH+NtbvFpeSnqri5y2GXHPYYzwVn4PtvVlho9heoz0
jL2fBNHAJuXsSCUe1prB/qhQJYRG3nlHDD/iYSMa02brOinoT9ktSwqeX1uO
hdwXWUpFypiF1zvqOEbf9jWfJiaGDpUIm+TnDWKOPTv0lU9IoWvNKrddRDtI
X3XktO7C4QEmBA+N7aG60JCPMNsvdI4Jekuiz139S0fWeq4Gvnh+I7zV9qTX
B7LL+oHwVhM18SpwmQtpdJ4+v2gfPFVePtevxYXtSiXxwR0zEJo+8pXxjQHS
Epqtx/jmoUBD23TmehsQPquxH9+g29fCp99bCnM/8CFvxxaHlcXloLqEM1Sx
Rwj184bvvbDjYWp944dST1CQ5KVS9xf49caMrmrdHi2Kzs7fmzuuP4zthjjb
ZyfF0LWjfT7hjwYwwl89lb+5PJldD76f7707Gi+FLmUVtXMVmdDeL6iQvZ6G
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
F+FliPH/Aeo3J5w=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{3246, 3245, 621, 509, 433, 390, 342, 343, 977, 
                778, 622, 510, 434, 391, 1016, 817, 661, 549, 473, 1062, 863, 
                707, 595, 1111, 912, 756, 344, 978, 779, 1164, 623, 1121, 
                922}}], 
               PolygonBox[CompressedData["
1:eJwV0DkzQ1EYgOGPxFJo+AOEUdkqrUbHIC61IoUtJv6AGbGM1vYDNLpEotUq
rTPWVq20b4UnxTvf977nzJw7N5NbTgr1EVGHHMotESWsCi+piB5su9COW20c
Z1oKc9onL6GIV60XO3oH7rQJnGtpzGtfvIw1vGl92NUzuNeyuNAasKB98yO0
piNGtIo2hDG+xZ/tRfuJfd29d7O/9s3anrNZ84B32oftK/Yn+4O73XyGn/IE
k9olb8Qi/+EVbCDBFK6cNSHv/JdXsYkPbQD7ehcetWlca81Y0v74oDcL/IYf
8zY+WvsHZlXLm4f8H1eTNV0=
                "]], 
               PolygonBox[CompressedData["
1:eJwVzztI1WEcxvG3y2jpmOWgqdVqtpSXaqgU00RyqCRPgot3wToXipaEvNIg
mARx0kK0gtSUFi2oUc3msjnJS7pq4OcMD8/3+/zev5echvaatoMhhAMyKgkw
kxbClCRxl9yXv4dCyJOnHh+TRdsrSTscwhX7hO28bNgeyLotX3psmVLqXZT/
xA/xLP6gl7zN1rf4kJ5379ATvBLfxAN4G496e4Rf5ZP8gmzaCmxNtmV+V6K2
DX5KevlxuehNjP/Cy+45/DZf4FUyZjtqu2Z7y4ukgj/hf/CW+1nezL/z+tTv
4sN8F8fcN/Fp6eONbi/xCXwJx/EqfoTnUj/D+5P4Dv5s78ST+AauxYM4qXd4
t17gH/Vr36XrMv5Mv3Nv0mN8XBfz67qbv9Br/LH+xKf1P98X6hY+rFdSf7ue
4pHU/4Wf4z3ci7/iuG+29Bnpt2fJZbcE/41X3HN5Hf/Cq+WNLcNWbnvPS2Tb
ds7WavvB70mEj/D/uA9/w3N6H+GpV+o=
                "]], 
               PolygonBox[CompressedData["
1:eJwV08lTjwEcx/HnV9lmsqUsRxctuAjVzRYXlMbSYqlfZlwsbZYO1gNl72fG
FjPM0AxTllQohoPlD1ChskRHjhiyvZ7Dez6f9+f7PNWvpunRHQXb44IgiGAI
dxKD4DaWx+sOC1Dn+JPPwVk+A322IryyJaIi/CJos9WjGN32sai0R9BuO4pf
tkycs6Wi31aCHts4VNni0GFLTgiCFba7fCGO2Yb5XJznaVjimb18UB9wT+Wl
/Bmv1pv1FrmaF8oGflV+44flE77ee71yPKrt8bhvS3FfaWvli3Dc9pvPwwWe
jlzP7OOf9HfuabyMP+c1eou+Ri/SY/p3/Yj+VN/g+ddyAk7YatyispFfkwk8
S1aEn1d281rZym/JB96fLPN4TN5z3yqv8xtyMc+TdfyS/MIPys7w+3n3j5yP
i/Yt9it6hr5U369/1t97Lp1H+Qu+FsX8DP+hb3R/o0/ETj4CD21TPJNvawv/
Rjhp+8uz0Mhn4oNtE97akrDLNhKdtlMoRRmi6HOfhN3uo9BlO41/tuzw89lm
4aOtHP22ZOyxjUa2n6eS9+iP3KfyVbydb9Ob9Jsyl+fLen5ZfuWHZBdvCP9R
9JzwZp+NZfwAH9IH3TN4OX/J12GzbYCnoJaPQY5nqniv/th9Gi/gHeHvHjFb
xPYf4XFzFg==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{3246, 3247, 1043, 435, 723, 879, 1078, 511, 
                1187}}], 
               
               PolygonBox[{{3244, 3245, 777, 976, 341, 472, 548, 660, 816, 
                1015, 389, 747, 903, 1102, 575, 1192}}], 
               
               PolygonBox[{{329, 3250, 3243, 426, 502, 614, 770, 969, 333, 
                755, 911, 1110, 593, 1196, 939, 1138, 705, 1173, 861, 1060, 
                466, 735, 891, 1090, 542, 654, 810, 1009, 382, 425, 501, 613, 
                769, 968, 332, 381, 424, 500, 612, 768, 967, 331, 465, 541, 
                653, 809, 1008, 380, 423, 499, 611, 767, 966, 330, 379, 422, 
                498, 610, 766, 965}}], 
               PolygonBox[CompressedData["
1:eJwV00dwjWEYhuFf9EQvUYIES72bRGeGhA3RxUaL3qLMJLroxkaUIIkeM2Yk
BqNFr1HWyowuQRgssXJ9izvv89zv952T/Dmn/Ywl4xbHRFFUDUl+lNaLovN4
Krew2IaO1aOoClncD/TnzmAEF1cjioq4C+YNPdf8bVdk7tbTzTHhvLxELpMn
y4nyE/de66v0gXq8vBUd9G9Ybv8d/bhiDOdinSvkytGc24L2/Fcs45aiAI/R
zC4XSXZfwvtz//T98nSvM10ulVfLz4M35+ndzSpnz5uX9XXmF/vNcprcVz6N
YXpd/Yizo/XrmMS14x5xTcMdJHKVWMx9Qx/uFIZydZw9zD1EE24T2vEVWMQd
wgM05jeiLf8ZC7mv6M2dxBCuttfK5+6jEbcBbfhPWMBdsr8r7zD/2h039+kZ
ZoZeIq+Sn8lz5W7h73avMvxeeqreK9yT58kn5MFyLfmgc2XyZvkXX2ju0seZ
afpZszg8A/OavtecqLc177lbYl7Uc8xX9ofMlfoAs2F43maBPstcr+8xE/SP
mO/+HXM798cuT54mT5PPySvlp3Km3FWudL4iPE99lN5TPibPlY/Lg+Sa8gHn
fuo79bF6qnwVE/Q24Vnav9RX6Cl6A3kdWusfwjOyn6o/wRy9izMVXI/wfhjI
1eD2c6P0KxjPJXB3uPr6WrTi3offj/uM7txRDOCqh/8hN1K/jHSuNXc7fCfl
bPkFn29m6clmvfD5C59bfaa5Rm8pv0Ome1P0cszWO9t/4rqF7zRSuBguj7uF
OC4HLfi3mMPtxU3E8tmI599gNjdZf4xZeiev85HrGj4vSOb+AzvnkEw=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8j1UcwPFbkoxQ7qVlh9ybEansPSrJlqyIUCFCMjLKHmW0CBmVvUJR
VmayS4uyR1aFlBXv78sf7/s55zz3/n7P85zzurlbdarb8aaEhIQafkSvsYay
JqO0mJ7XyvqCFtA/tIIu1cf0klYnh/F+nUsJ4391IIWM/9SvKU4W8906lZ4k
m5/SZTQhr/kRXcQwbiZu7ht5m7ZxvzxMovUfdRq9aEqq+HXra/Ud2vF43BO3
kJpb43P9zjodTXue4BHSxGe4tl7H8CJP8ihJ1n/S6fSmGbfF51rfoGN5iZrx
bshq/Wf9hD40J23cg/WNOo6XeYqSZLP+i37KG7QgXdyv9U36Lh2oRU5rB3Qe
gyjFXdZ+1c/oS4r5aV3Oc9xvflQ/ZzhFzP/WlaSPZzf/Vt+jIw+Yn9AveJpc
5gd1frwr4/90MIWN/9JKuiLuRa/EudDSerfu0XI6I/ZOL2gV7acP6hmtqF/F
u9DLWk1baj49puV1ceyFXtSqOkKL6lldRWnjq5oh9sZ4s74fZ8/4H+1EQeOT
+iW1yW1+SBcwhDLcY22vzqQ/rbg99s/6d/oBr1CHPNYO60KGUpZ7rf2msxjA
82SM/bS+RT+kM3XjvXCf9d91Nm/SmkyxL9a36ni6UC/eA5njGV3bphN4lfpU
4I64V9e260d0pUG8X+6M+3Bth06kGw1j78gS3+naTp1EdxpRmcT4Ttd26WRe
45nYQ5LISrY4g7Hf8f7iHcRzkZ0c5IwzFO873hl540zG/pKfAnHmYn9IJiXO
BoXijFEk9jqez318rx/Tg8ZxFngons+1H3QKr/NsnKO4B+v7dA5v0Sa+09px
XcLI+Hvzc7o6zoDx/wk3/jcW0+vE7owK
               "]]}, Annotation[#, "Charting`Private`Tag$745844#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nfclfMfx/G7XTRoioZ2SSqySTZtTSnaae+9tLeKUpqivXdJCYkm2qQ9
SFulvX7Pz+P3x+vxeb9f3+u6z7nPua7vdXLVa1WpZaKEhIQOSRIS3hZ+Mu8k
Tkioh4v6DHRDafxs7S5fH5f0meiOf/lC+JjPju1cGWzgEtCA+0+fhR4oi418
IjS0dlmfjZ64wD2C4XwOvJLU6+uH5B3W8+rv65+ZP3Btzbn6PPMdvZo5Qr8k
l3P8JjkxGulX9DmYmzoh4SPzIl8YI6zlxE6uPDZzSfAhdzWORy9c4h7FSP5h
7OIqYAuXFI25a/o89MZ/XBF8wufCbq4itnLJ0IS7rs/H/d53aW4BVzLeuz5A
PyX3klfJfRx32Xws3jP3qbVG5hd6bvlVubt8WN7j2Hz6B/o6vRLe4X7Rk6Op
fkNfgL6ohMr41VoKNLN+U1+IfrjCFcUoPg9+56rgNy4lmnO39Ce9Zkt9h75I
T6+Xic/AXMg1M6fF9+U7mCW/xJU3B3Kn5f7OuSoXw2g9L/7gqmIblwrznduC
v80txgBUQ3Vst34PWlq/oy/BQFzjisd1w+fDXi6/163N/ahXRnV9pP6f/K71
HfK9GMa34uqa4+M78vpT5buOeSrWuJ3Wl+oZ4v+0XpZbxJXCIP66/jjG6Pnx
J1cDO7nUaM0lYBk3GO9hF58GbfhEWM4NwQ3uCYzlCmAfVxO7ubRoyyXGCi6j
91OOW6y/jKHcTb0EPtcL4jXH9NCPyPutF9Dr6Ov1dvK8+MzNKvG5mJ/oX5qX
9QHmd3ot5+0x06EdnwQruUzWy3NL4l7GMO6W/iTG6YXwumN66kflA9YL6nX1
n/T28ny5qlwjrnn5ijxQ/l5+3/G/m/fF/sO1j73LnKBPM5PqT5ut4/81d+ld
zCXxPZpfOz+zWUH/1Fxqvbk5XZ9tvqpXMAfpE80zem/zm3g95942n8J4/kN+
Suxf8hvyR/Ix+aDjCun19J9jj8J7+ij9qvyB9T/k+9FBT4ZVXBbHVOSWxXeE
4dwd/WlM0AvjEFcbe7n06MglxzfcCNRBXdTDn9YzoJP1FFjNjcRd7pn4/7hH
cZirj31cRnTmUuIZ76eNvlteY/2B2HP15XoLeYY8x3xdr2gO1ieZZ/U+5urY
B+JhIz8ba3wRvKn30o/LR6w/otfXN8Q9iQbcfj0Tuuip8Kxj2up75G+tZ9Ur
6Svis8enXCJukXvxOX4y9xiO8oX5BtzGuJ7RkDugZ0ZX/R6s5UahEQ7yWdCN
vxffcaOR2N95nv+CK4pj3KNcQ25TXK9xTXCH9AfQXa9vfaI83UytP2e2i3vB
/F3vGteg/r3zHpQryyvjM8JnXBLuBW6KXgzHucY4zGVFDy4NfuAeinuW+1p/
C2O4pNyLcf/qxfEXV4RrxG2O6xJNuCP6g+ipp8XzcW/pf8jrrGfTq+qr9Lfj
2aIP0c/JY60n00vqX+mN5S9j/4v3IfeW/5L/dtxj+of6Fr2DvECuKdeUR8vX
Yv+MZ308sxx/1HwIw+P+imvDnKTPMNPpLyT9/2+Z8eZevZu5TF9o/uj87Ga1
eI7FPWy9pTlTnxvPX72SOTSuF/O83tdcE3uHc5PH80qeGp+R/FXsw/H/y33k
v+UTjiuqN9a36h3jeRD7o1xL/iw+E/O6PthcF/eP2cx5x+Rs6GXtPqznxiGF
9VKxn3El8A/XHMe57OjN3Y+fuPFogb/4HOjDp8fP3ASk9LdejuuPexInufgB
+DeXE325DNjA5XBsdW61XgYTuVTcK/F560+htN5XPyH3lFfGs8Y85dhiZhN9
jPmL9U5xP8aeLb8vj5FvyK0ce0J+GP30jNjITUJrtME/1nKhv7VM2MRNxj2x
R/MzY5/Haa4tTnK5MYDLjBcd11H/U95sPaf+rr4mXl+eJZeVK8vD4p42/9X7
md/qS+N3lvPuNV/TZ8V+iDNcO5zi8mAglwVb4reJvWeK2R4dcNp6Xgyy/gC2
cl8ideyZ8byJfQ1nuY44w+XDYC4rSjquk75P7i4vlxfFZ+vYh80a+uh4v9Zb
m7P1cnIV+WP5gvyVY9Pob8ReHfsPznHFuabcr/E8iu+KO6vnxxD9QbzkmM76
fvlX67n09/S1enlM5dJyb8b9FHtGXDd6P/0f+bz1x+Na13/Ta8dr6WP1m3Jn
6+fkAhga+7K1yXG/y6XkLvIBuYe8Iv6G43PLNeXv+DbyHLmCXFUeHvukeVHv
b67Vl5nTnJfOfEsfac6z3tScGtdR7K96WbO/PsE8qX8UvxX0JXFdOP8Js7k+
1twW791crNeJ/0v+XL4lD4l9J55bzjlvFsQwPhtettZVPyhvs55HrxV7v14R
07n7uLe5+XEN4wJXgmvBbdfroo4+Tr8tD5XXx3Mw/rZj/weQhMUt
               "]]}, Annotation[#, "Charting`Private`Tag$745844#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02WAFlUYBeBZ2F26u1m6Q0xAQlRUJARskZJSBGlMbMICu7u76VpSuku6
G2mk9Hl/PJz3HubON8xcMrr1b98vJUmSTH+MT02SHOlJ8l1akvSSXWRHeUoO
kFXlNXKn7CvfkZ1lCv/ZW1+u1I3iLvN52ZbW5iPyc/a5rpz1TPNQrqal9T75
IUVoaL1RjuMOJtiTU/e9uSvVSNivL6/PNA+jCUWZqM+l/8HcjeqkcEA/iclM
YSrTmM4MZpLJLGaT2z1+tK87NcjCQX2GfpZ5OE0pxhx9Hv1P5vuoSVYO6Svo
Z5sfphnFmavPq//Z3INapHJYX1E/x/wIzSnBPH0+/S/mntQmjUt0q+Ro2nHE
dZV0c82PxvfiBuv98iNK0sh6k3yVO5lvT37dr/HdudV8WtahhXmXfJd0Gliv
lmO423xB3kIb8z+yv/wi3rtMZVj07l9ZztP3lo/Fd5Vn5UDZQt4oD8gH5cey
i8zCEEpZN5ab5f3yNdkpzlycs/h983H5dbx7czp/+c0C8rf4TW4zn5F1uda8
W75HNi61XiNfoD1H7a2im29+PK7nJuuD8hNKx7m13iJfj/fAAnsK6n4396Ee
2blMt1a+SAeOua5qPJ/5Ca6jDAv1hfR/xL+R+uTguL6afoF5BNdTlkX6wvo/
zQ/EOSAnJ/SLWcJSlrGcFaxkFatZQxH7x9vTN74ruTipr65faH6SlpRjrb6o
fkJ8o3hn5OaUvoZ+kfmpOGuUZ52+mH6iuV+8B/JwuW6dfImOnHZdTd1i89Nx
Dshgvb64flKcqdhHXq7QrZcvxznljOtq6ZaYn4nvRCvrQ/JTKtDEeqt8g3vY
YE8J3WTzQ3HP+A7We+T75ONK6w3yldhjvhhniLbmo/JLupvT+Nf9asul8e3l
s/H/Sp6Tg2QrebM8HO9Cfia7yqwMpaJ1U7ktvqV8U94rEwbTKc6lPBHPK7+R
PWQ2/vbbJeUU3QBuj+eJ54+zYt4rPyA/V8X1cmxcRzvrY/IrzrpPHetl5ufi
ealEM912+VY8ExtdV0o31Tww7kkBzunr6pebn6c1ldmkL62fFu+ChhTkvH4z
ZfzddOvBNKIQF/Rb2Mo2trODnexiN3soa+8M1w+hMYW5qK+nX2EeSRuq0Fy3
Q75NZzpYn5Tf0tOcneHxvuz/HxkC5cA=
               "]]}, Annotation[#, "Charting`Private`Tag$745844#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1ncc1VMcxvFb0pKVKMpISFZkjyhktGWGUMlWNoX2VEllVNrZGigKJVQa
SqW9syWhaFjxfv74vL7P85xz7++e8zvf87qVW7Rp0rpIoVBYXrRQaFu8UHiq
ZKHwc4lCoQ32w0LZmxgv3w8DZafhd1k79JZt4e/D/lgk+1x2It7ir8BY2QR+
fzzLn44/ZGv58/EJ3wKPy/rwv9D3oywWy+bLTsLbfBOMk73Fl8Vz/BnYSl+J
5fR24+voC/Ap3xL/0c3xLf2E8b70r/QDKFGqULiTP4DepNbDF/TB8sfpL81f
oFbHO9kX+QN5Hv2negPOlK3nj1A783XV8T73dr4X1fjnjZdRW2fd6pn8Nvoq
nMqv4Cup7flL1B0+v56uhZP5GcYPVB/lL1Zv5QtqC/47+knzn6Z/ox9EOfzE
18dCeonxL/JdmMhfhQmyd/hyeIE/Cztl7dFPtpV/KM/F0uw7OuAZY9tkD+Mg
LMta0RGd0Bld0N+8340/gvJYnudhovxADJKdjV2yrhgg+4N/FBWwmW+ARfQK
4wvpU3K+rHtSzpz6IH+hejX/F30jNtATzZ9EH4TB/Dl5X7JuGCjbzj+W94yV
mYvueNbYDllbHIJVsnfRA88Z2ylrh4pYLXsv4/LyGCI7N79DtoGvjZl8K/SU
Pc/voo/N2VJLqnfJaqqV+J/phlhMrzF/EV0D7/LXYHKex1fAi/x5+FvWCy/I
/sz5xqFYK5uCyfKDMVRWE/+kzzFI9lfODQ7DOtn76WkMNva3rD0Ox3rZB+lP
DDH2j6xDzjs2yD7Ms+SHYJjsfPybPsOLsn/5jqiMjbKpeZa8IobLLsDunF8M
le3mO+FIfCVbnB7Be/y1mJbfw1fCCL5W7iT6aqxMvxvfmHOBWfxtKGKPW/Lf
0/2MD6P/ozujCrbwjdLv9NfGv6RPw+TcRT77EH1d9ltthrNkG7MmtQv/UfZB
PRTHyUYa21ttk7tIrZ17j74m38uvyntSO/CXqoWslb4oZ5z/LL2lPsbXUW/n
i6bv+XPVH/ij1R78M549XC2gi7yU/G76KPoXtTGW0N+Yt4Q+HVP4ppie98Ef
hlH8hdmr7EHuGcym70B/80bwRdA1z8a3so8xTXY4Rssuyu/EAPlIWVF044/B
d7JP0n/ps/RTeiJnF6PM2wPdzauK72Wf4iPZERgjuxh7YJB8tKwYeqSf8INs
KX8G3uevxwzZdL4yXuLroBgGy8fI9kRPvhp+lC3LXY4P+BswM+vjj8TL/CXY
M/uYd4I59J0YYt5LfHH04o/DJtnynBN8yN+IWVk/XwWv8JdiO30tVtPFs6e5
/zE3d6b32Ja+K+umW9HnqT9mP9WeuQd858tqCTwlLy2/hz6e/lW9Aktzl8mf
oH8yf4V6Nk6STTV2gPpwzp7aLHcEfVPm8F+lD9WufL2cy7yXnK08g3/V+D7q
fXwt9TJ+R3ol54xfk/tF7chfppbIOciZxzy6gqwdfXfeDX0bvYke6jmv0CXR
mz8Bm2Ur+XMwjb8Js2Uz+KPxGn957lUMk78qK4U+/Im5X2Wr0j/pV/5mzJHN
5I/B63xd7KSbYm16KWcxvx2f0/fkDKQfs5f0cJ9/jS6Nvvxexu7N3tK/qU2w
jK4of5LeYv7qvEdUl003Vk59hL8l96Z6c9Yo+zp3k9qNr6/O9dlZdFWcwL9h
fF/1fr62Wo/fRV+fPuDX5f5WO/GXq6XTJ9Gowc/n78UI3/u6bC88zVfPvSGb
h89kx+JNWf2sDyPlb8jKoB9/cs5a/vthtqwaxsoaoAxG5X+kbO/cVfwp2Zv8
t8Oc3JcYJ2uYOxOj5WNl+6A/XwNbZWv4mviYb47d2TN8Qx9lPd3pBuoCc+fm
fGK8sUY5oxiTPk2/5GzlfOTdZe0YZ+6+GGDeqdiW/0vZg+w1JsgaZ79zV/B1
sYBunb71zDv4zbm76F50w7wfn/8fPxGFuQ==
               "]]}, Annotation[#, "Charting`Private`Tag$745844#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8jWUYx/GDbIrslZnMkL1J2mUUhZSUEbK3pCiSkE2h7BGRLZFSSqjM
7JVdlE2S3tcfn9d1fT/39TjP75z7uR/5W3Zq2DFJIpF4IVkiUS91IrElbSKR
Eb3TkFjIvY3rXHXM5EpgL1cfW7m70YdLgs+5vOkSiVe5zfIzGMjdkGtgllwS
+7gG+JnLhL5cUizi8rm+FbdFfhaDuH/kmpgt34/9XDlzfbgjcls05H6RM6Of
nAwPmRkq/61fbD2/3FreKjfCc/JkORnesX5TrYU51l6z9rm+lL6efqz+pv4N
/Tf6A+bL6/vqR6pHrXVTV8kz1NfkFuos+SM1XXyGukmdqz7j+l/1WTBEfsN8
K3W+PFm9Q66rvi+PUi/IvdSv4ntUv3B9AbWN/LO1jvql+sb65/VT9HfgXXP/
qrXjc62VRn3r4+R/9QetV5D7ycfkdvG9c9vkrOgvJ8cSbjBucQ9iHlcGh7hG
2M5lw5tcCizlhuA/rg7mcw/gMNcYO7jsGMClxDKuoPtoy/0Svw2ayFPl5HhL
/736nrnb6kN4n/ss7lldJJfVN9CP19/SHzH7HHbKOeLf4FJhOTcUCbN1+QVc
ORzlnscuLife5lJjBfc+mmA3nwsD+TRYyQ1DEv/Ww/xCrjyOcU3xG5cbg7i0
eNjcMPmifpX1QrFX5OHqr1wndZk8TX1ebqp+Ik9QU8Q9qRvjWVA/cH1S9RF5
WOxX8+3VxfInaoV4LtQJ8jj1P7m/+q38u2srxr6Lnu+uX61vr39ZP1ufHs3M
7VHzxP61lg6PxGfLl/Srrd8rt5O3xW+G4Vwy7lFukVwRx7lKXH/uuNwBL3B7
5Xtin8rp8SVX2Fx7bnv8/RjB3cE9xi2WK+EE1xz7uLwYzN2JNdxIJDf/OP8F
Vxknucrcm9wJ+XW8yO2X88W+sjaEax17Sp6i3iU/qg6XR6uX5d7qWvkr196n
76DfwXfWL4/vS99M/6k+JT40l0J+Qr/EWpU4F+WJ8m39KetV5AHyyXiO8RJ3
QM4f9yVnwFquiLnXuZ3x3WEUl5J7klsqV8VprgUOcgUwlMuIddxopDL/FL+M
q4Yz3Ms4xBWMZ4q7G19zY9ASh/lCscf4TFjPjcUrOMLfiw/4zPiGG4fUPudp
fjlXHWe5V3GUKxz7ncuCb7nxSGO+Hr+Cq4E/uFY4xt2HEVxWbOCKmu3I7ZKb
YwKXlqvPrZRr4k+uNX7nisQZzWXDd1wxs5243bEHMJFLxzXgVsm1cI5rg+Nc
0fgduez4nitutjP3W/xWmMSl5xpyq+XaOM9V5d7iTsVzjbbcCblYnOlyDjxm
ZoR8Rb/Regm5i7wn3h/xO8vT5FTxHrF+Z7w79F/GMxTvgTiP48zWT9In4gzW
b1D/Ml9N/3bcv3raXA/1S3lm/A1yS3WO/LF6ZzyH6k9xvse55PqT+uKxj+TR
5tuoC+Spak75cXWkPEa9KvdR18k/uLakvqt+L99Fv0I/XX05fjd1ujxRTR3n
qfpD3Ifr7tI/q19jrg7+5trhFFciPovLhR+5ychgvlE8k9xDuMC1x2muJMZy
ubGJu99sN25f/O2YwmXkGnNr5bq4yHXAGe7+ODu5PPiJm4q7zT/Hr4vzHJe4
6txA7kz8rXG+cGflUhgfv731hXHW6Z/Qfxj3pV6T+6pfy5tdU0rfXb+ffyX2
pzxDThNnuvVM8V7Qfx3nMC5zNbhB3Fm5a5wh3B9y6XhvyHmxhfsUnfAnXya+
ez4ftnLT0Bld0BXdcM7MA5hkJj9+5qYjs89rwq+P8xFXuO44z5WNfcoVwC/c
DGQx35T/JvY7GskfyUlw1XpN+R39H9a6xR7l/pLLxX6QC+JXbiaymm3Gfxt7
D9e4nvibK4/JXCFs42Yhm/kX+A3xveM61wsXuApxznP3YjtX2mwP7oD8KmZz
2bnm3Hfyk7jB1eLe5f6Uu8c7gbsoV4znQi4cs2ZGydf1O6yXkXvKB+M30q/U
t4rzQz8zvmM1rTpI/VGdE8+l63KoL8b5Gv//iX2lLpE/jXNcbqx+HHtMTaoO
UL9T/3Ftbf1g/TlzPfVr9D1iX+nn6u9CH3OX1Eqxv6zdh6fiWZdv6Hdaf0Du
JR+SW2Mul5N7idsoP42b3IPxDuXOx+fFvuYuy5XjfuUi2MXNQy6zLeKc4Orh
X64frnBVMI0rit3cfOSOc4P/kauPW9wbuMpVjXOFKxb3Ym5M/P36fvr1cU6b
K6vvHe8R9XCcY/iMzyO35DfJDfAf1x9vYgCuWauGGdaKYw+3APe47hX+J64h
bnN1uPfi3JV7xR6S58kZMFi/WZ0f7wSz/wMhktCd
               "]]}, 
             Annotation[#, "Charting`Private`Tag$745844#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.499999867346939}, {-6., 6.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 7.501161668118749}, {2., 4.5104360133941706`}, {3., 
          3.3444551291690363`}, {4., 2.70773539729761}, {5., 
          2.4447400310492005`}, {6., 2.2374633631731715`}, {7., 
          1.4420087862571644`}, {8., 1.1863192754506102`}, {9., 
          1.1744709364720949`}, {10., 0.7817624480015795}, {11., 
          0.19080159281182962`}, {12., 0.08740986988066074}, {13., 
          0.07271047263479972}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"J vs time\"", TraditionalForm],
      PlotRange->{{0., 13.}, {0, 7.501161668118749}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.21875}, {2., 0.34375}, {3., 0.296875}, {4., 
          0.203125}, {5., 0.203125}, {6., 0.3125}, {7., 0.3125}, {8., 
          0.171875}, {9., 0.15625}, {10., 0.296875}, {11., 0.28125}, {12., 
          0.15625}, {13., 0.140625}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Time of Computations vs time\"", TraditionalForm],
      PlotRange->{{0., 13.}, {0, 0.34375}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8671686034905186`*^9, 3.867168707548236*^9},
 CellLabel->
  "Out[1493]=",ExpressionUUID->"aa4da905-2900-470d-bbbf-474a0438c884"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Script for collecting Model Mismatch Testing Data", "Subsection",
 CellChangeTimes->{{3.866576800487796*^9, 
  3.866576812032118*^9}},ExpressionUUID->"e06065d7-44cc-42d9-8b73-\
2c2e93440186"],

Cell[BoxData[
 RowBox[{
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"numberTests", " ", "=", " ", "200"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"n", " ", "=", " ", "20"}], ";", 
     RowBox[{"M", " ", "=", " ", "10"}], ";", 
     RowBox[{"uBound", " ", "=", " ", "5"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"A1", " ", "=", " ", "0"}], ";", 
     RowBox[{"A2", " ", "=", " ", "0.2"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"MyAppend", "[", 
       RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], 
       "]"}], " ", ":=", " ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
          RowBox[{"Piecewise", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"f1", "[", "t", "]"}], ",", " ", 
               RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], 
              "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"f2", "[", 
                RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
               RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
                RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], 
           "]"}]}], ";", "\n", "    ", "f"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], "\[IndentingNewLine]", 
   RowBox[{
    StyleBox[
     RowBox[{"MPCVariant", "[", 
      RowBox[{"A1_", ",", "A2_", ",", "n_", ",", "M_", ",", "uBound_"}], "]"}],
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    StyleBox[":=",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["Module",
      FontWeight->"Plain"], 
     StyleBox["[",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{
        "totalTime", ",", "\[Tau]", ",", "\[Tau]1", ",", "order", ",", 
         "maxCount", ",", "maxJ", ",", "maxError", ",", "maxErrorInitial", 
         ",", "EInitial", ",", "xdotMin", ",", "xdotMax", ",", 
         "\[IndentingNewLine]", "\[Theta]Min", ",", "\[Theta]Max", ",", 
         "\[Theta]dotMin", ",", "\[Theta]dotMax", ",", "xdotInit", ",", 
         "\[Theta]Init", ",", "\[Theta]dotInit", ",", "maxIter", ",", "ICs", 
         ",", "errorInitial", ",", "initGuess", ",", "count", ",", 
         "maxcountAlgo", ",", "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", 
         "\[Theta]dot1a", ",", "u1a", ",", "\[Lambda]1ff0", ",", 
         "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
         "J", ",", "K", ",", "\[IndentingNewLine]", "x1b", ",", "xdot1b", ",",
          "\[Theta]1b", ",", "\[Theta]dot1b", ",", "u1b", ",", "ICinit"}], 
        "}"}],
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox[
        RowBox[{"\[Tau]", " ", "=", " ", "5"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"\[Tau]1", " ", "=", " ", 
         RowBox[{"\[Tau]", "*", "1.25"}]}],
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"order", " ", "=", " ", "5"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"maxIter", " ", "=", " ", "100"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"maxCount", " ", "=", " ", "10"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"maxJ", " ", "=", " ", 
         RowBox[{
          RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"maxError", " ", "=", " ", "0.01"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"maxErrorInitial", " ", "=", " ", "0.5"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"EInitial", " ", "=", " ", "2"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["While",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         StyleBox[
          RowBox[{
           RowBox[{"EInitial", " ", ">", " ", "1.5"}], " ", "||", " ", 
           RowBox[{"EInitial", " ", "<", " ", "0.5"}]}],
          FontWeight->"Plain"], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox["\[IndentingNewLine]",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"xdotMin", " ", "=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"xdotMax", " ", "=", " ", "1"}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"\[Theta]Min", " ", "=", " ", 
            RowBox[{"-", "\[Pi]"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"\[Theta]dotMin", " ", "=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
           FontWeight->"Plain"], ";", "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"xdotInit", " ", "=", " ", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"\[Theta]Init", " ", "=", " ", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"\[Theta]dotInit", " ", "=", " ", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], 
             "]"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"ICs", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
             "0", ",", "xdotInit", ",", "\[Theta]Init", ",", 
              "\[Theta]dotInit"}], "}"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], 
          StyleBox["\[IndentingNewLine]",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{"EInitial", " ", "=", " ", 
            RowBox[{"Energy", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"]}]}], 
        StyleBox["\[IndentingNewLine]",
         FontWeight->"Plain"], 
        StyleBox["]",
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"ICinit", " ", "=", " ", "ICs"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"EInitial", " ", "=", " ", 
         RowBox[{"Energy", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"errorInitial", " ", "=", " ", "10"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"initGuess", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"count", " ", "=", " ", "0"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"maxcountAlgo", " ", "=", " ", "20"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&",
            " ", 
           RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", 
              ",", "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
              "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
             "}"}], "=", 
            RowBox[{"Quiet", "[", 
             RowBox[{"ffCartPendulum", "[", 
              RowBox[{
              "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
               "order", ",", "maxIter", ",", "maxError", " ", ",", "maxCount",
                ",", "initGuess", ",", "maxJ"}], "]"}], "]"}]}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", 
              ",", "u1b", ",", "J"}], "}"}], "=", 
            RowBox[{"Quiet", "[", 
             RowBox[{"testWithFBClipped", "[", 
              RowBox[{
              "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a",
                ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", 
               "A2", ",", "uBound", ",", "K"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ICs", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x1b", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
              RowBox[{"xdot1b", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
              RowBox[{"\[Theta]1b", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
              RowBox[{"\[Theta]dot1b", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"errorInitial", " ", "=", " ", 
            RowBox[{"Norm", "[", 
             RowBox[{"ICs", " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"initGuess", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Lambda]1ff0", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}], ",", 
              RowBox[{"\[Lambda]2ff0", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}], ",", 
              RowBox[{"\[Lambda]3ff0", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}], ",", 
              RowBox[{"\[Lambda]4ff0", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"count", " ", "=", " ", 
            RowBox[{"count", " ", "+", " ", "1"}]}], ";"}]}], "\t", 
         "\[IndentingNewLine]", "]"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], "\[IndentingNewLine]", 
       RowBox[{"{", 
        StyleBox[
         RowBox[{
          RowBox[{"totalTime", " ", "=", " ", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}], "*", "count"}]}], ",", "ICinit"}],
         FontWeight->"Plain"], 
        StyleBox["}",
         FontWeight->"Plain"]}]}]}], 
     StyleBox["]",
      FontWeight->"Plain"]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{"TimingData", "=", 
      RowBox[{"{", "}"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"ICData", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"SetSharedVariable", "[", "TimingData", "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"SetSharedVariable", "[", "ICData", "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"ParallelDo", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"time", ",", "ICs"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"time", ",", "ICs"}], "}"}], " ", "=", 
           RowBox[{"MPCVariant", "[", 
            RowBox[{"A1", ",", "A2", ",", "n", ",", "M", ",", "uBound"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"TimingData", ",", "time"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"ICData", ",", "ICs"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Export", "[", 
           RowBox[{"\"\<TimingData.mx\>\"", ",", "TimingData"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Export", "[", 
           RowBox[{"\"\<ICData.mx\>\"", ",", "ICData"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "numberTests", "}"}]}], "\[IndentingNewLine]", "]"}],
    FontWeight->"Plain"]}]}]], "Input",
 CellChangeTimes->{{3.8665777734597015`*^9, 3.8665777929105053`*^9}, {
   3.8665779568602486`*^9, 3.866578201950136*^9}, {3.8665782362332106`*^9, 
   3.8665784799645324`*^9}, {3.866578563917774*^9, 3.866578588424964*^9}, {
   3.866578656668214*^9, 3.866578666525072*^9}, {3.8665787041740737`*^9, 
   3.866578727443657*^9}, {3.8665791504628367`*^9, 3.8665791609974794`*^9}, 
   3.86657924552254*^9, {3.866579793054037*^9, 3.866579799548968*^9}, 
   3.8665798389863987`*^9, {3.866579962581007*^9, 3.866580046157374*^9}, {
   3.866580203154334*^9, 3.866580206696206*^9}, {3.8665803063554435`*^9, 
   3.8665803106150866`*^9}, {3.866580355575756*^9, 3.866580364610879*^9}, {
   3.8665804397299376`*^9, 3.8665804444854207`*^9}, 3.866580527180066*^9, {
   3.8665806021731634`*^9, 3.866580613129674*^9}, {3.8665806585541954`*^9, 
   3.866580660718505*^9}, {3.866580759118144*^9, 3.8665807638636312`*^9}, {
   3.866580794250947*^9, 3.8665807944188957`*^9}, 3.866581490078181*^9, {
   3.8665815332164316`*^9, 3.8665815386916876`*^9}, {3.866581585509765*^9, 
   3.8665816031021585`*^9}, 3.8665817396226482`*^9, {3.8665819016899977`*^9, 
   3.866581927066908*^9}, {3.86658200079641*^9, 3.8665820089328184`*^9}, {
   3.866582187104032*^9, 3.8665822251599035`*^9}, {3.86658229131382*^9, 
   3.8665822954754934`*^9}, {3.866582405143541*^9, 3.866582405543414*^9}, {
   3.866582478361206*^9, 3.866582478732089*^9}, {3.8671676055617037`*^9, 
   3.867167605893598*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"0b1435ee-0c32-4e55-bc78-ed2d59e37a58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TimingData", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<TimingData.mx\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICData", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<ICData.mx\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8665821777070293`*^9, 3.8665821786917133`*^9}, {
  3.866582240280084*^9, 3.8665822768624287`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b1b115b3-ef15-4622-ad79-0561f4c1e8b7"],

Cell[CellGroupData[{

Cell[BoxData["TimingData"], "Input",
 CellChangeTimes->{{3.86665307172631*^9, 3.866653072961914*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"618be144-caaa-4de6-9c10-bda6fd86c965"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["13", "2"], ",", "6", ",", 
   FractionBox["9", "2"], ",", "5", ",", "10", ",", 
   FractionBox["11", "2"], ",", "7", ",", "5", ",", 
   FractionBox["11", "2"], ",", "10", ",", "10", ",", "6", ",", "10", ",", 
   FractionBox["13", "2"], ",", "6", ",", 
   FractionBox["7", "2"], ",", "10", ",", "8", ",", 
   FractionBox["19", "2"], ",", "10", ",", "6", ",", "8", ",", "6", ",", "6", 
   ",", "6", ",", "10", ",", "4", ",", "5", ",", "6", ",", "10", ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["17", "2"], ",", "10", ",", "7", ",", 
   FractionBox["11", "2"], ",", "6", ",", "6", ",", "10", ",", "8", ",", 
   FractionBox["11", "2"], ",", "7", ",", 
   FractionBox["13", "2"], ",", "5", ",", "8", ",", "5", ",", 
   FractionBox["11", "2"], ",", "4", ",", "6", ",", 
   FractionBox["9", "2"], ",", "4", ",", "6", ",", "6", ",", 
   FractionBox["11", "2"], ",", "4", ",", "6", ",", "7", ",", "5", ",", "9", 
   ",", "6", ",", "6", ",", "9", ",", "6", ",", 
   FractionBox["19", "2"], ",", "8", ",", "5", ",", "5", ",", "6", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["15", "2"], ",", "4", ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["7", "2"], ",", 
   FractionBox["13", "2"], ",", "10", ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["1", "2"], ",", "5", ",", "3", ",", "8", ",", 
   FractionBox["9", "2"], ",", "6", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["9", "2"], ",", "10", ",", "4", ",", "6", ",", 
   FractionBox["13", "2"], ",", "2", ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["9", "2"], ",", "9", ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["13", "2"], ",", "5", ",", 
   FractionBox["13", "2"], ",", "6", ",", "6", ",", "2", ",", 
   FractionBox["7", "2"], ",", "5", ",", "8", ",", 
   FractionBox["9", "2"], ",", "5", ",", "10", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["1", "2"], ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["13", "2"], ",", "7", ",", 
   FractionBox["11", "2"], ",", "4", ",", 
   FractionBox["5", "2"], ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["13", "2"], ",", "5", ",", "6", ",", "10", ",", "10", ",", "6",
    ",", 
   FractionBox["9", "2"], ",", "5", ",", "5", ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["11", "2"], ",", "6", ",", "6", ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["9", "2"], ",", "10", ",", 
   FractionBox["7", "2"], ",", "4", ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["13", "2"], ",", "6", ",", 
   FractionBox["9", "2"], ",", "10", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["7", "2"], ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["11", "2"], ",", "6", ",", 
   FractionBox["13", "2"], ",", "6", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["9", "2"], ",", "4", ",", "10", ",", "2", ",", "10", ",", "10",
    ",", 
   FractionBox["11", "2"], ",", "8", ",", "10", ",", 
   FractionBox["11", "2"], ",", "5", ",", 
   FractionBox["11", "2"], ",", "6", ",", "10", ",", "4", ",", "9", ",", "10",
    ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["9", "2"], ",", "6", ",", "6", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["13", "2"], ",", "6", ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["13", "2"], ",", "6", ",", "6", ",", 
   FractionBox["1", "2"], ",", "9", ",", "10", ",", 
   FractionBox["11", "2"], ",", "10", ",", 
   FractionBox["15", "2"], ",", "6", ",", "10", ",", 
   FractionBox["7", "2"], ",", 
   FractionBox["17", "2"], ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.8666530739735913`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"b48dc724-de36-40f4-b245-bfe9b8b6c9d1"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<TimingData200.mx\>\"", ",", "TimingData"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ICData200.mx\>\"", ",", "ICData"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8666531048617244`*^9, 3.8666531134969664`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"f8a192b8-9a82-488f-9864-2f55d2c5e8f0"]
}, Open  ]]
},
WindowSize->{1428., 735.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1. Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7e518428-48d0-4ac3-961b-c04116ec4574"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 96600, 2372, 2951, "Code",ExpressionUUID->"c06eaa1a-1a94-4921-93d5-81325d0c5150"],
Cell[97161, 2394, 3053, 77, 181, "Input",ExpressionUUID->"c1017f9a-a17b-486d-bcf4-2a776a5e392f"],
Cell[100217, 2473, 152, 3, 28, "Input",ExpressionUUID->"869f2bbe-d630-493f-a109-ef8e8d83ea6a"],
Cell[100372, 2478, 307, 4, 51, "Text",ExpressionUUID->"982e74f5-390b-4bf9-a720-2fed731db11d"],
Cell[CellGroupData[{
Cell[100704, 2486, 14048, 346, 504, "Input",ExpressionUUID->"c28652c3-ba56-4a0b-8e4f-0e46f1c2c441"],
Cell[114755, 2834, 71842, 1275, 206, "Output",ExpressionUUID->"9683348d-679f-40d0-b7d8-b9352ff00015"],
Cell[186600, 4111, 84643, 1489, 206, "Output",ExpressionUUID->"73a7ff5b-7b09-4d9e-8160-7582222a8b42"]
}, Open  ]],
Cell[271258, 5603, 257, 4, 28, "Input",ExpressionUUID->"95c2d440-5f34-4096-8d7d-805c19f73e37"],
Cell[271518, 5609, 315, 7, 51, "Text",ExpressionUUID->"a4d3e002-6aa2-45cc-a329-b64caecefa39"],
Cell[CellGroupData[{
Cell[271858, 5620, 8935, 201, 276, "Input",ExpressionUUID->"539af9eb-2787-4ce5-94ed-3f323d9493e1"],
Cell[CellGroupData[{
Cell[280818, 5825, 1002, 18, 22, "Print",ExpressionUUID->"35bc9b63-c731-488a-8002-2f6368ba3f8e"],
Cell[281823, 5845, 734, 14, 22, "Print",ExpressionUUID->"a694c5bc-2c3d-4876-b337-5351b20191cc"]
}, Open  ]],
Cell[282572, 5862, 63928, 1147, 206, "Output",ExpressionUUID->"1c66afe3-ff88-4464-88f6-564d5b170c2f"],
Cell[346503, 7011, 76449, 1362, 206, "Output",ExpressionUUID->"0abe5079-30ef-4af3-80f5-ec5817925c42"]
}, Open  ]],
Cell[422967, 8376, 212, 3, 51, "Text",ExpressionUUID->"f03e7ea6-c5c3-4d65-ba41-05cf4f23e612"],
Cell[423182, 8381, 21001, 513, 1110, "Input",ExpressionUUID->"1bec3645-5e1f-43d6-906e-b0d31dcb7ae6"],
Cell[CellGroupData[{
Cell[444208, 8898, 201, 3, 54, "Subsection",ExpressionUUID->"5bd1fbeb-86ec-47eb-b2f4-64cad2ea694f"],
Cell[444412, 8903, 310, 8, 81, "Text",ExpressionUUID->"6a3abf9b-d55b-483f-8f44-d33cec9f6985"],
Cell[CellGroupData[{
Cell[444747, 8915, 21646, 530, 1186, "Input",ExpressionUUID->"8e38cdaf-ed5f-437a-9ced-be5bff917c65"],
Cell[CellGroupData[{
Cell[466418, 9449, 1608, 27, 22, "Print",ExpressionUUID->"80a4c4cd-d1db-4d26-83db-c02a25e52a74"],
Cell[468029, 9478, 1529, 26, 22, "Print",ExpressionUUID->"f515baa5-c349-4fa4-a978-98f6a87eec59"],
Cell[469561, 9506, 1504, 25, 22, "Print",ExpressionUUID->"4b602546-ba21-4e4d-8acd-a0ad749bbbaa"],
Cell[471068, 9533, 1537, 25, 22, "Print",ExpressionUUID->"43aff010-64da-4167-b672-5487bc6d9b16"],
Cell[472608, 9560, 1500, 25, 22, "Print",ExpressionUUID->"51d04d9f-769a-48f6-adda-ec8437da967b"],
Cell[474111, 9587, 1536, 25, 22, "Print",ExpressionUUID->"716b0d80-921d-4c56-bbe3-cb827290cd85"],
Cell[475650, 9614, 1500, 25, 22, "Print",ExpressionUUID->"208c01cd-5e78-4172-b3ef-cd890b8471bb"],
Cell[477153, 9641, 1538, 25, 22, "Print",ExpressionUUID->"43faa120-f35f-4668-aefa-2dbd956611c9"],
Cell[478694, 9668, 1797, 30, 22, "Print",ExpressionUUID->"6d742ef6-e189-4ebc-8177-d64c8eee9905"],
Cell[480494, 9700, 1799, 30, 22, "Print",ExpressionUUID->"96ccfa4e-d81d-4456-96d4-12fe4fa118dc"],
Cell[482296, 9732, 1802, 30, 22, "Print",ExpressionUUID->"f4e8b08b-9b1b-45bc-9524-802a29ed6cd7"],
Cell[484101, 9764, 1819, 30, 23, "Print",ExpressionUUID->"cf92053c-c930-4713-abe2-e44342d162ef"],
Cell[485923, 9796, 1817, 30, 23, "Print",ExpressionUUID->"06a3c621-84e5-47d4-93f3-70cb763a25b5"],
Cell[487743, 9828, 1807, 30, 23, "Print",ExpressionUUID->"ef18e862-9a47-48dd-bed1-9d849d44d70e"],
Cell[489553, 9860, 1809, 30, 23, "Print",ExpressionUUID->"b10f819a-78b6-41dd-b6f8-d77c4f93aa75"],
Cell[491365, 9892, 1822, 31, 23, "Print",ExpressionUUID->"92dd3928-c81a-41de-adad-20fdfa9b0bfc"],
Cell[493190, 9925, 1809, 30, 23, "Print",ExpressionUUID->"7c2174bb-eee8-485d-a7fd-88ea36516a12"],
Cell[495002, 9957, 1822, 31, 23, "Print",ExpressionUUID->"4bfa6371-71f6-47c1-a3a1-6a27f17990f3"],
Cell[496827, 9990, 1808, 30, 23, "Print",ExpressionUUID->"628642e4-921e-4d91-a469-369253fd4aa1"],
Cell[498638, 10022, 1500, 25, 22, "Print",ExpressionUUID->"dbb60653-6343-4936-b87b-f9a29885d117"],
Cell[500141, 10049, 1535, 25, 22, "Print",ExpressionUUID->"8649294c-3289-4e62-bc38-ab1c0981cb24"],
Cell[501679, 10076, 1827, 31, 23, "Print",ExpressionUUID->"df855134-300b-4a05-be2e-9ffad420c09a"],
Cell[503509, 10109, 1502, 25, 22, "Print",ExpressionUUID->"2a53c9c2-8bcc-4b69-9fac-c7ac3df01b1f"],
Cell[505014, 10136, 1538, 25, 22, "Print",ExpressionUUID->"c9b0c204-ad58-4caa-9ae8-2fc8a854132b"],
Cell[506555, 10163, 1799, 30, 22, "Print",ExpressionUUID->"b83aa623-bfab-49bc-853d-a42d164835ce"],
Cell[508357, 10195, 1829, 31, 23, "Print",ExpressionUUID->"367edd9f-abba-46ab-8220-d5b3ebfc1fba"],
Cell[510189, 10228, 1502, 25, 22, "Print",ExpressionUUID->"627be8e7-d605-4c13-b50a-c7e6fa369357"],
Cell[511694, 10255, 1535, 25, 22, "Print",ExpressionUUID->"42798a37-ce03-4da9-b6a2-c52a188351f9"],
Cell[513232, 10282, 1502, 25, 22, "Print",ExpressionUUID->"dcd23342-6636-4e6a-bfa6-b8d24833f9d0"],
Cell[514737, 10309, 1536, 25, 22, "Print",ExpressionUUID->"0b792c17-3628-47b4-b3c2-8f0341c57d53"],
Cell[516276, 10336, 1502, 25, 22, "Print",ExpressionUUID->"a3f0d0e4-e9fa-403b-b188-0ce5716a13f0"],
Cell[517781, 10363, 1533, 25, 22, "Print",ExpressionUUID->"61c4cdb8-6f8b-49ed-96ee-9dfb01b4f936"],
Cell[519317, 10390, 1799, 30, 22, "Print",ExpressionUUID->"4e8624bf-c269-43ef-b0d1-e87dbd908199"],
Cell[521119, 10422, 1829, 31, 23, "Print",ExpressionUUID->"579154de-54ce-4c8f-abba-fd2eb054bfc4"],
Cell[522951, 10455, 1502, 25, 22, "Print",ExpressionUUID->"bb6cded1-7aba-4e88-87b3-378b81e4bf8e"],
Cell[524456, 10482, 1533, 25, 22, "Print",ExpressionUUID->"458bd8dd-a2bf-4fdb-8d3a-9e770d16c2a0"],
Cell[525992, 10509, 1797, 30, 22, "Print",ExpressionUUID->"78498aee-bad4-4991-9cbe-9e7ae4c3bb74"],
Cell[527792, 10541, 1819, 30, 23, "Print",ExpressionUUID->"3c674c3c-774e-446e-8009-02475df9aa6a"],
Cell[529614, 10573, 1817, 30, 23, "Print",ExpressionUUID->"9e69bf34-f766-4082-adec-3e428ce33bd2"],
Cell[531434, 10605, 1817, 30, 23, "Print",ExpressionUUID->"73fca8ac-f099-486b-a850-5484e3b23961"],
Cell[533254, 10637, 1823, 31, 23, "Print",ExpressionUUID->"a658319f-4250-42f0-83a5-9ac147129f58"],
Cell[535080, 10670, 1819, 30, 23, "Print",ExpressionUUID->"b6b347a1-a661-4930-9b7e-4580225618fb"],
Cell[536902, 10702, 1817, 30, 23, "Print",ExpressionUUID->"834c5ffe-b339-43ec-8833-26a552cfcf39"],
Cell[538722, 10734, 1502, 25, 22, "Print",ExpressionUUID->"7647a704-f737-4f4b-90c4-a395703c42a3"],
Cell[540227, 10761, 1535, 25, 22, "Print",ExpressionUUID->"364f7a30-87c4-4f2e-93f9-5a74dc10eb38"],
Cell[541765, 10788, 1819, 30, 23, "Print",ExpressionUUID->"72ce5302-37ec-4c85-b068-bbacf824564b"],
Cell[543587, 10820, 1807, 30, 23, "Print",ExpressionUUID->"8c9e5ddc-ccc1-4e70-9367-7c34ba4fec13"],
Cell[545397, 10852, 1829, 31, 23, "Print",ExpressionUUID->"40275ac2-628d-4402-a0c4-b1987c7c66c4"],
Cell[547229, 10885, 1504, 25, 22, "Print",ExpressionUUID->"b5a9c872-0104-4b66-9470-2d9544bd5386"],
Cell[548736, 10912, 1538, 25, 22, "Print",ExpressionUUID->"d42fe296-6e77-40fa-8c40-7ab9bb00ceca"],
Cell[550277, 10939, 1582, 27, 38, "Print",ExpressionUUID->"0fa9d5ec-756b-4eb0-a8f3-20cc7e627a89"]
}, Open  ]],
Cell[551874, 10969, 159042, 2734, 223, "Output",ExpressionUUID->"26c0064a-9406-4091-bdb0-1db73549efba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[710953, 13708, 378, 10, 28, "Input",ExpressionUUID->"ccd81f7a-ab55-4ede-ac8f-e0e84d99c36f"],
Cell[711334, 13720, 87574, 1562, 223, "Output",ExpressionUUID->"aa4da905-2900-470d-bbbf-474a0438c884"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[798957, 15288, 197, 3, 54, "Subsection",ExpressionUUID->"e06065d7-44cc-42d9-8b73-2c2e93440186"],
Cell[799157, 15293, 18331, 481, 1129, "Input",ExpressionUUID->"0b1435ee-0c32-4e55-bc78-ed2d59e37a58"],
Cell[817491, 15776, 477, 10, 48, "Input",ExpressionUUID->"b1b115b3-ef15-4622-ad79-0561f4c1e8b7"],
Cell[CellGroupData[{
Cell[817993, 15790, 179, 2, 28, "Input",ExpressionUUID->"618be144-caaa-4de6-9c10-bda6fd86c965"],
Cell[818175, 15794, 4219, 97, 159, "Output",ExpressionUUID->"b48dc724-de36-40f4-b245-bfe9b8b6c9d1"]
}, Open  ]],
Cell[822409, 15894, 412, 9, 48, "Input",ExpressionUUID->"f8a192b8-9a82-488f-9864-2f55d2c5e8f0"]
}, Open  ]]
}
]
*)

