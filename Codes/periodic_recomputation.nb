(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    949810,      17961]
NotebookOptionsPosition[    941871,      17846]
NotebookOutlinePosition[    942306,      17863]
CellTagsIndexPosition[    942263,      17860]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_", ",", "maxJ_", ",", "initGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", "error", 
       ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"froot", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"error", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"uff0", "=", 
          RowBox[{"ListInterpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                   RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
             "froot"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
            RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"J", " ", "=", " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
      "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.865967298267394*^9, 3.8659673001198*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[4258]:=",ExpressionUUID->"c06eaa1a-1a94-4921-93d5-81325d0c5150"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.865967283387162*^9, 
  3.865967297681583*^9}},ExpressionUUID->"869f2bbe-d630-493f-a109-\
ef8e8d83ea6a"],

Cell["Manual implementation of periodic re-computations", "Text",
 CellChangeTimes->{{3.8641533433196383`*^9, 3.8641534078207626`*^9}, {
   3.865345899534526*^9, 3.8653459352441096`*^9}, 3.8653595685158424`*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"982e74f5-390b-4bf9-a720-2fed731db11d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxJ", " ", "=", " ", 
   RowBox[{
    RowBox[{"uBound", "^", "2"}], "*", "\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.8972307770974721`"}], ",", 
      RowBox[{"-", "0.9070811023479912`"}], ",", 
      RowBox[{"-", "0.7842332462088191`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uBound", ",", "maxCount", ",",
         "maxJ", ",", "InitGuess"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uBound",
       ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
       RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
        "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]New", " ", "=", 
   RowBox[{"\[Tau]", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]Init", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IC2", " ", "=", " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}],
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636127929494734`*^9, 3.8636129048647366`*^9}, 
   3.86361309340853*^9, {3.8636132740148587`*^9, 3.8636132890980425`*^9}, {
   3.86361367016436*^9, 3.863613704067534*^9}, {3.863614005426304*^9, 
   3.863614044030977*^9}, {3.86361407671554*^9, 3.8636140789588237`*^9}, {
   3.8636141197098103`*^9, 3.863614156970913*^9}, {3.8636143059493403`*^9, 
   3.8636143423397207`*^9}, {3.8636146524377003`*^9, 
   3.8636146681296897`*^9}, {3.863615502417285*^9, 3.863615703473082*^9}, {
   3.8636161037482653`*^9, 3.863616122815179*^9}, {3.863616300467451*^9, 
   3.8636163404706755`*^9}, {3.863616379759131*^9, 3.8636164322373734`*^9}, 
   3.8636164758294525`*^9, {3.8636165064106874`*^9, 3.8636165068755407`*^9}, {
   3.863616588161584*^9, 3.8636166296943207`*^9}, {3.8636166641123295`*^9, 
   3.863616732677436*^9}, {3.8636167693047395`*^9, 3.8636167704293804`*^9}, {
   3.863616826318534*^9, 3.8636168556931543`*^9}, {3.8636168995821395`*^9, 
   3.8636168999240313`*^9}, {3.863619302411866*^9, 3.863619416136552*^9}, {
   3.8636195563387823`*^9, 3.863619570937121*^9}, {3.8636197069376936`*^9, 
   3.8636197273581724`*^9}, {3.8636205744286833`*^9, 
   3.8636207335498743`*^9}, {3.8636207658335643`*^9, 
   3.8636207659625244`*^9}, {3.8636208211778917`*^9, 
   3.8636208543832893`*^9}, {3.863620930334037*^9, 3.863620936617031*^9}, {
   3.864135467525829*^9, 3.8641355031932845`*^9}, {3.8641358508757644`*^9, 
   3.8641358994820337`*^9}, {3.864136005621681*^9, 3.8641360284712887`*^9}, {
   3.8641361588251004`*^9, 3.8641361878597054`*^9}, {3.864149523908724*^9, 
   3.86414952549721*^9}, {3.8641504554392495`*^9, 3.8641504662587476`*^9}, {
   3.864150523008383*^9, 3.864150605221774*^9}, {3.8641506500782566`*^9, 
   3.864150690388214*^9}, {3.8641515284209967`*^9, 3.8641515289998107`*^9}, {
   3.8641516589627523`*^9, 3.86415165924166*^9}, {3.8641517275125647`*^9, 
   3.8641517616755095`*^9}, 3.8641517984915934`*^9, 3.864152052785297*^9, {
   3.8641521525610065`*^9, 3.864152184609634*^9}, {3.8641524131266785`*^9, 
   3.8641526257358713`*^9}, {3.86415267085427*^9, 3.864152694523608*^9}, {
   3.865343316507264*^9, 3.8653433661354*^9}, {3.8653439486171923`*^9, 
   3.865343974084052*^9}, {3.8653442980234942`*^9, 3.8653443296263914`*^9}, {
   3.8653443748479357`*^9, 3.8653443749728956`*^9}, {3.8653444172203894`*^9, 
   3.86534442272363*^9}, {3.8653469695214763`*^9, 3.865346987082861*^9}, 
   3.8653470346556525`*^9, 3.8653527113159447`*^9, {3.865352921100881*^9, 
   3.86535292673708*^9}, {3.8653582294529123`*^9, 3.8653582967913857`*^9}, {
   3.865358599615581*^9, 3.865358639228916*^9}, {3.865358727662645*^9, 
   3.86535873275102*^9}, 3.8653587920620584`*^9, 3.865358828820309*^9, {
   3.8653593086449194`*^9, 3.8653593288444633`*^9}, {3.865359372130623*^9, 
   3.8653593924201374`*^9}, {3.8653594236451564`*^9, 3.865359453367653*^9}, {
   3.865444950539036*^9, 3.865445024576361*^9}, {3.865446050861164*^9, 
   3.8654460571241617`*^9}, {3.865952145761594*^9, 3.86595214986728*^9}, {
   3.865952199585349*^9, 3.8659522182973533`*^9}, {3.8659603685998144`*^9, 
   3.8659603767552023`*^9}, {3.8659604947234*^9, 3.865960520358188*^9}, 
   3.865960564993886*^9, {3.8659609071592493`*^9, 3.8659609263660946`*^9}, {
   3.865961860067914*^9, 3.8659618679653835`*^9}, 3.8659654827151413`*^9, {
   3.865966916471731*^9, 3.865966942550375*^9}, {3.8659671518243213`*^9, 
   3.865967156179924*^9}, {3.865967206640753*^9, 3.865967238990388*^9}, {
   3.8659673141932907`*^9, 3.865967351676281*^9}, {3.8659674264683175`*^9, 
   3.8659674265732813`*^9}, {3.865967462005929*^9, 3.865967508030183*^9}, {
   3.865967548370256*^9, 3.8659675668793263`*^9}, {3.8659677463418226`*^9, 
   3.8659678159435205`*^9}, {3.86596784633578*^9, 3.8659678729282613`*^9}, {
   3.8659679163953342`*^9, 3.865967976588047*^9}, {3.865968140783433*^9, 
   3.8659682509141455`*^9}, {3.865968287893297*^9, 3.8659683248484554`*^9}, {
   3.8659683827519045`*^9, 3.8659683981569653`*^9}, {3.8659684305215964`*^9, 
   3.8659684309144692`*^9}, {3.86596846558936*^9, 3.8659685457466745`*^9}, {
   3.865968580020693*^9, 3.8659685824779053`*^9}, {3.865969104561618*^9, 
   3.8659691127210045`*^9}, 3.8659693634616613`*^9, {3.8659694114932704`*^9, 
   3.8659694935339813`*^9}, {3.8659695285567617`*^9, 3.86596959443765*^9}, {
   3.8659696286047025`*^9, 3.865969631037925*^9}, {3.865969673164426*^9, 
   3.86596967499084*^9}, {3.865971493789056*^9, 3.8659715068088856`*^9}, {
   3.8659716882007627`*^9, 3.8659716883647113`*^9}, {3.865974154847394*^9, 
   3.8659741580303764`*^9}},
 CellLabel->
  "In[4958]:=",ExpressionUUID->"c28652c3-ba56-4a0b-8e4f-0e46f1c2c441"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
9NN3pno9cvU09HWHrLsVsX9YrV/foGQ/DI/LJvfG/+8+OueDhRWdhr7Ltqa6
Ev3VuGO5raeL6O+qygdM4u91CB6Nkng5DLx0y/JnRNs1JrJLhU1Dkl9SeWyI
vx+upHIuSGkYfu7Xd39D/J603OmDbVU01LTtyUs7ot55umRnzqJbw1B37dRj
RHz+83fS8h0MGrLaVK20kvh+W11B/SbBYXBs1xdx+t/3HW+mis/Q0IO8OP+l
xOd6HiFiDTuG4dH+J9/+tx+a3Vnoe6SZqC9t1mVtJNYnqV/vpSzpLyTqLlK/
Fq3KuVK9th9I/Toystp8kWEXkPo165hi1813nUDq12/sLvdf0aUDqV/n1EVt
ea3bDaR+7V8iWi2e1Aukfi3bbry1WGwASP16SWenh6EfA0j9WnwRxVM3nAGk
fi108G/HNKsfSP262/KhnV9BD5D6tfdyEeMd8p1A6tc+HQWiVzY0Aalfq0m9
nl9+swRI/Xqf+u3HkeqJXP26Qyteq/tCFVe/1tcO9mW3tnP1az1sv9pYk8HV
r8emj21pTR3h6tdXl9WVNp8Y4+rXqUbbpHU2crj6da71ZL6Jxygm9ethBzm3
89/pmNSv400zVM9ficekft27ttos9W4HV7/O/PDcoiR/hKtfa3Oe0Xb5jnP1
6z9OUsP2P6a4+vVch32Wca7TXP26p8v5sfniKa5+nbX5co9RDgdI/Tq4dKH7
wewRIPXrTyGZS9pRL5D6tcTSrDcBbWVA6tdFtd9Dz0tWYVK/ftoaZJuoysSk
ft0S6zG45tYEJvXr3fV0n82OfPmkfq3MV2vTc5iaT+rXPP/9R+rXZJvUr8k2
qV+TbVK/Jtukfk22Sf2abJP6Ndkm9WuyTerXZJvUr9Xi7tfJFg+C/PS7mOkN
32FV6bkmvh09cLM0t+PQ4Uo4crIy7446HUh9O1qtrCu3sBNIfftK2P2OeYu6
gNS3O1pXO/me6QFS357c7XRaitEHpL5Ni2hVix8YAFLfZvG9/JWQxQBS3155
xUI4dXYASH2b/dRlcENoH5D6Nj/95qJdcV1A6tv7zzX0bhFpA1KPXpj9S0b3
0hBXj+ZN5tmw6h1x/pZ6LmIw+dGLq7cteg05WPf3Qp/+UQpat+9cxjeJMVzF
uRZ4fkIAjStfKe5xYOI2w+wtt3ipaNeSUu/5VrWYZ9eu4QXTVPSdD53KYlWA
fmq18gceYbTmflSyksAgTGmvoXZSRNDzszHrrCfYsJKx5160qCg6vJZdXuk1
CZeE7eNsF4khU/6QWBmnaWj605qctEQctQSH+TEmpiDzs+IJTwVi/gZuHnv8
agJm+x+e6JaSQLGOro9t3Njw2rgk5EC4BMqoy3uwPZYJg+1+M19p8xD/ErlR
/KMVSP3ctzJzRnQvJZ/Uz8nxJvVzsk3q52Sb1M9znlRUBE0woW2gyfoiqwAU
T6sX5j3qhVWMcXbq0XJIiL+w5NMLOpD6+kltFuVgWieQ+nosTvQPfEIHUl9/
uKZzlUc5cS/9T19/nextdcK4D0h9/auIibLGjQEg9fVNl+tzg54zgNTXFezc
Ap2PMIDU1y/Fz8Yu3tcPpL5+YUjYXTK3G0h9fSL5zNnMJ+1A6uHSY8E+/UZM
rh5u9DrteAMexUc/mnanvuJHuclL3p0ZGsN2rX1X1LIpKJhxuyHs2xhu/jM1
45ItgLSEowsLwoZxxS7FPsoXQVSx++mhkchW7LcnrLcij4qCu388Spn+DE8v
FEWo5goh6s5bRQKsHtBbKfmyoUgYPXLJTHU5x4K9z2pSdn8XQVJ5xRFiEROg
VlTCe6BWFH16LCJYv2YaLmZs0VvYIobyhx4/eKk3DWsclZ3j/ooj2LeFf/L8
JFglKvP59M5F4fXnZeyfjUHiu+yqnR4SSLdl7+Y9G4fh8JvcWelhCbRPBw/G
rqADqd/v3dRbyl8zJ5/U78nxVis4487x+9f2y8DBoQ/+zQeZgkvbB+68g+yb
MooeLQNgIRpe43+xGE7dO9S8e3U3dL6+Wj5zoBqkJGSTA1o7oTuFev2tcjNc
f16wsHi0E0h/YL/TC7tjz7uA9AMK+1dWrw7oB9IP+NggqtuxjQGkH5AYDhbX
0hhA+gGVP2h7rYIGgPQDbFelRgVn9wLpBwS9zZtX5ESHrQ4RP9ctnIM0vWaK
lkYPY5NQzY19K/gRMyCq8uojot5seWS8VouCZhuryoNsOXhe7k6vFE0B5PrY
jsroYeHipSISPlsF0f5mh0Yfvn7spz87fmyzEKLQzp7bkdUM9FZ6zg59YYT2
PM/w/zgE2bt3nWLoi6B2IfV26kEO8Gvnew/sE0WnAl7bympPwTdjni2elmIo
JS5Jodh3GvSGrs/TthBHtsEM2sFHU6Aju/yAif1cNKEQEGNROA6lAnJ54VoS
KOlUSnbpMhaQfoV8VVgr+6dAPulXkOMzeqylor7x33iR/oXJC8cfcaFDoE93
Lcyq/Az33HIYqyz6YGp6gZ/ZsT9gKG7oeWiEDqS/cXE9dUUQsX5Jf0PaQ/XM
Bmc6kP7Gq0WzRR9udAPpb1wSSWyrnewF0t/gmTy8e3zPAJD+xuLor3Sf+wwg
/Y1+ic/ddhcZQPobB36oeuxP7AfS31i44YX71u09QPobkbH+W0RsO4D0I2oP
PXqs7DjI9SPm/+r/cXnTKJ5YV2AsGsyPbGsWhiuljWGfXlO/3w8oaMic58Jc
Kgef3Poh53SEAHor+Wpw8PYILt7ZsE3/qSDKn59vw7+pA6OSLHp6HBX53d5U
XVDwEv4c27rHLloIuXU91Cje0wWdcQFTh18Io997d98zjR8FS9/H2fKJIuj9
pb7HLXMngKrI+/Z7tija3+515zPPNBQ9PR3yJ18MVcZqdp2ymIbeT0nub3PF
kWS1XHhxySSEBick/Pk5F0WeOtXco8GB5c6rvb7YSCCP0wqN0hPDECR93A9a
JZAz3U1mg043kP5Jz02PGxZL5+ST/kmU/9uTKvOF8h81vPvaePbffFC8OTYx
HfBvPszs0Mpjxr+F8ODMo/mlDMjjX6GTf+QnqF69XN34phuy8+KOpZhWQeR2
5e/r+ekwVha+6bhaE/zeS78aX9cJpD9TtGHkgrllF5B+zGv1VDt/nX4g/ZgM
aecfu2QZQPoxn8V73Z2I85z0Y6rLvPTw9wEg/Zg1cut+Ryj1AenH6MvETJQL
dkEyZ9uf++N8SOrRK9tDosN4ZYAWJ2UOP7JLMBfhX8nG548IZYVIUlDRJjUH
VSsOVip6c2mPlAA6IdsYl/y/+1zwt18X5QSRTGLs7LuLDIyKFNib5ITQxH74
c9CyDuZ/s3TzXS6MLp1cFxbxnAlHP+dkO64QQcdOnhw5kDoG0rQbgYVqoqhD
DHJfN09CfKomY0BXDN079nFOstc0hLa+tWBuEUenE0sF1UunYOxMgpnNjrlo
xPZLh8yWCaCP14XkKkqgmx3R1otKWED6RUUfPbylhQXyFVfaeNuu/TdeD9fJ
6O369W+8Hj40th+88wJ+jRkePOXMhKssw1kd6SKIMD8gt6q7B442N5zhNasA
2Yybmwbt6DB/8YunrzY3APVtulJAdifIGelt73raCgNrMJ3TQAfSn3p36KO5
6qcBIP0pC7qhuvEbBpD+lILS0Ib1axlA+lOPjIRT7Ef64L0+/arRb37UP9rp
/noFB++v9b98p4pYX7LVHjvPj2GPMOPm4WYh9GbnHuEjt/oh7k3cUSu6MAqo
uvdZdgsbdH7Mi3PvFUGpGBtJiU6CqcOjfQ3joshB9uDpzn3TsOrLXLbVrBia
PpVuHSk/Da7zE0/d5p2LkhYLm/TOnwTS/yLfzxRt9tyOqFLIzj82Uve2C6Ti
bHYf3F8D9idOUhZ874S6gCtlwsv+wplnSZUt8+lA+mWFdAEbqi0DSL/s+lOZ
+eUJDCD9MgrKDpbSH4ALMRoXVu/iR40G9YZVfGNYw0m1+/chCsrMMluucoSD
p942ewodFECyt9Pb92xk4eHjE2elPUSRrZaZ684bU8BgFt/m8RND7PGZg+98
pmGUx+yrr4848r/lrXrixBSQ/tvuLQaw4K5g/v4bSafOMP6NP+nHdfIYHHrd
PATnTuacNy3Mh1WLWk66F/ZBB+WFvlpjGTx4Ztuyd3EXkH6dhrhjbFBGJ5B+
nfYmnta4g3Qg/TrDIT3Pi9bdQPp1Uo5LOPPLe4H065pkt904vmYASL/uV0Zd
8fXbDCD9ulnr2CStGwwg/bqKw23VnNJ+IP06LW/az8UBPUD6dUypPXMYXzqA
9NdiNxdp3ytlcP21lhf9jf0jI3jPmQleXW9+ZMVzerXkrTEscFaIVz6QgnRC
lDqLlnHws3MPZZyuCaAiEddaQb5RvOvbhjM24YIobX2h4Kh/J5YX/94hH0pF
+aHbwpcH3QAH40tK14KE0CUL3ytjg52Q3bDlecRDYRTXV7Z6Zt0odDn76Yre
F0El93S6VvwYh9HyRyL8iUR9foux0Io+BQOP/DPXpIuhho31u1n20/Ddrud8
bqo4WvkHH4lhT0KSr/W5qZy5SKS7pMvXkwNWRZ0/Z49JoHW/2V2CR0fg2e6X
+RW1RP2l62dkDD1A+oEHEi9Lyxfy5ZN+4JGWhddDsqj5ZV3HB43t/81vtjst
Q8vn33xwFwzzdk9Jh0iLIpvAPYMw6OfSZ7nzB3zRlguSHu+GuCI1eb+qStBf
aP1BaSEdZtpr7r1Jb4Rt+9YvsCrtBNJv/JBf9XajbheQ/uJJGN8WK9UPpL94
TH+KFs7PANJfHHy5n6OTTZwX//mL1htFpRU6B4D0F5P/nDypebwPSH/RJnzt
8DbTLmjOj6z81sOH3M+Hrn9ZMITnz2TWBg3PQW3UKB5BJgsXhSOHPF4Kcm17
GBBFrKd0w1OT0fwCaNnVnEWrKtk4/MtzFU8RQbT3oOvVucmDWF5ww2iSqBDS
XmYdMv2yGlI/PNobM08Y2b1WFG8j1vWqaY8TL+aLoLNtf3YWmI5BHI+j2JvF
oij2sYRrxqtJuHOsxEBFVQyV3FxXPs9jGrLrfl7bqyaObB6cifLonILqBR3H
zmjNRZktVsdOXpgA9xHtsXI54n510vmlvDwbSP/zauusbG4KJf/KMY9sX+V/
4+UgpzV+5cu/8boiS20bjk8AnXd9m30ymJDhFvGmjvIVEl5GS/lBL+jRnTRq
asthbnTaSr4bdJBT75/ixfWwolghkJ9Yv1cei3TuOtEK92WYHxTy6ED6rbT8
208/PhkA0m8tMvtDjXzJANJvndo61bxJnwGk36pTZeAbvrwfqH6L11/O40eH
nzdOWIpxcOPxjTNNXyno6JPB9a/ix7BwQNCHuaVCiPf4sFnftj5w7Tfji60W
RpU8R5Q16llQkD2qaFkngjQir6iF/ZmAbQu0kqV7RFGUSuS8WDQN+3OU5HIH
xRC6NZwYpDENxpjucJ8pjlZ8694/YTAJ9JWZT/sF/70v1dBdSh03S8BkOz2y
cqALphKHxVTKq8H4T33Cy4pOaHlYsOrEs2ZYvm3QJI6oR0g/ONSjVPfDQQaQ
fvCH7TFpp1IYQPrB4ZqFs8YOA3BS+u1hkY38SFlepoavjI2vPbeJntWnoCTF
HZpLiXrhhvY9ztHtAig3bNvpP+Es7G3YxOI9KYrK7umk3Leagvo4u47NZ8VQ
slK9wymiXl807tLX4CyOZKZY4R8vTwHpL7NjfqpEqgrmL3crlHvW+W/8aeyb
H/3r/4CQPd96lWI6qB6+kJ7ytQ4S9r+87/26E7h+dLFV2apYBpB+9PkTFl2/
HRiQwr4d3RjDj5KrAz5O/BnDQ6fiZ68kUpCXaS51Tu8YXnTe3vzON1H0Nb3k
bbjMNMSlmDqcLxNDWgn9B9jEeUr61z8ePo78dl4ovzRb4mFlRRXsYEXcfT3U
Ccxco7+CL5sgzVRQ1YPeCVZgv/a+9SAElPau/KTGANLvPrNp8pzaWwYoypXz
nlCgoPdhGWo3iPtSzLap8QkFAXSkOuZdqC4b31mRwFsHoiiVed3lt+gUZE5H
3c8wEkPdOZ87Oi5Pg2NPzMYII3Hk85rZqJg1Ba7Ve5NX11SA6J6TKz0N6SAu
fHLX0fcN8FWMw/j6qRNI/zxiNKU2ifj79kJppYtb+NGJ73phujocXHSwdEq3
k4IiXVMlTHeMYfsPPJw4YTGk0fo7O9tyGlY/rAy4XFYDaUcOGebkdYKenKYj
bSMTsu/lPmxyJ/az//x36+iqY1+jGdCmxtKKt6MgbFxw/u5uDubV09T8GiqG
tuRs8PruOQ1+0cGvN4z9G1/Sn39uYW11UWAYguVPlCro5sOR73PmxY/3Qe0t
hlJUTBnMo56/bKbZBaR/L/3qk+GPzE4g/fvze/Tz/+6kA+nfXzxW8mmOSTeQ
/r0S77Zlsrm9QPr3dm/ktTMWDwDp3wubZB2RIM5j0r+Xe8OzwC2YAaR/b/7T
53VaG/G9//x7xaq+PzMJPUD692Emucd+DXUA12/X991Eucrg+u16RjbS98tG
8Kjwg4YKd350vN9Nv/7cGN6bbrNtly8FhR+vGBRcw8Ff797Y2XNJALXOe3Vz
5+ZRLBDYwecRJIh62pc3GSjRcajaHxuzm1SETAUsp99fx5k7ZSLm+QuhAxpC
546jTojzeuT19q4w4lF9OZE/PgKp7W6zV4NFkFCc0N/oZ+PglNL17sljUZTV
vUpvY+0U8CwI+XYsWQwlGJruC3Sehncfb3nqPRNHepLXs7YIT4GWV37jvLdz
UaVLDmNpFAd8R754LDGTQBceUi62BY6Aent5y+NKCXR38+6Xt/J7gOQDWnZy
1iY84Msn+QD5to2SS25Q8/vOrOWn2vzbvywdnoiVef6bD6oOYK6Z9gYWrnPh
PXJ7EKhA01fD38F1W9a1+0t6IMLwAl/f/Uo4j4wygxTp4H9mIt/coxHupZ64
aP6jE0j+QMpUBQJWdwHJG2ytjTh4hrcfSN5Abv2KOWh8AEje4MZBW1k54nwm
eYPnwWGlT4cHgOQNbnfPj3e40AckbxAuYGc07NUF44r61S2tfCgxyPOYSNwQ
Ft3M+j7RMwcdbtxo1ljBwi7qjdsOj/Mj/stCzwr2czA7GG8unKIglob7QOEo
G2c2RZix+QSRxtfSvVpLmThUGTxa+IUQdb2+6L79VcDJ0M5ZJSSM0mmG6GPU
INCiyzSLxERQy8XxnH7lMbD1NC9bMV8UnVHuV5SPmAR+TdmRIgUxpNf2vb3V
ZRp+Hqp+cElJHO2226XlxJyCr84BFsOr5yKt2NSebeEToO3q8LJJRgKd/7bN
f2IXUXf+x0O4iR96ts+bkr/6/OTBOwr/xuvPvC+msnn/xmuowTbuXMoT6Fc+
aaxfzYSfazcJJV8uhEzDwKtPnHthg1OGlF5UOYRXF/jdekCH+A/iq1L96mHq
3rXtbm864fUOZpbXllYIRdIhr9LoQPIXKoGBZxZGDADJXzzTfcDzKYkBJH/x
7nDvLjFjBpD8RcbdvVLBm/rhzeIP4vOz+dHB7lURtbNjeFlc2FaBPAoqF0iq
fZ05hg9fXqkc+1UITU2fM1eM6YWjQVnVn0qFUdHL+qqXL1hwcw29q6JMBHX+
2ktRfzsB7xl+hzJbRNGqeA3R4I3TYLtBY21flxgKU/n+oEpnGrZKBTrJdouj
xoPaMZ8sJ+Geni6amPPvfekbD1x5y1MCb1TM+ZeKdgNzlQ7zXng1xPz88se4
vhNsl9GPCNk1g6aBx+rAqU4g+ZAYIY2ocUPiPvUfH7J0iddchVfE+fEfH3Jk
pZLJY68BMDs4YuCtxo8Ud/V03c9iY9Xts+ce6hL7+Z3tmR0nObj40oC2/2YB
pKS5hTGQx8Loc+l7z6OiyFDeNDp97xTs83wbWmcnhoqfoUVtxPmsdv7SjNAp
cTQlVjMFwVNA8iYfj1x6nTopkH/b7sBFaP03/tRLZY8HHv2Bh6zoN3Z/6fDm
b2SzaWAd5FU+tfxKnM8knxIsttlkOooBJJ9y3ESvoNKVAQcilM+fi+BHb5Pf
44n8MbwhaQJexFKQ/e7DrRHjYzh8b6bAaiyKdt2SLJgUnYYMJSvvhO9i6PyI
RrnjkWkgeZYDqTZaR3YI5X/RMfOCiCpoNxnOeT7RCed2uopmODfB4KrvxrV/
O2GzleAkHxoEPWk325eKDCD5lzmz7MWXMhlQ/OFMA1uWgnzcQrXaiPfXeu2w
joKcALKV3H54rS0bH4iJKDTeKIrkDx1WlSXuL6uq6Nv27RBDOeuNRuYR91Of
U0mGX3aII3aG6aH2z1Ngax5x+8HDCig4uCfSyowO4fcCzs+51ADzFTSvn/nQ
CSRPU3bmqbZyBnH+vDBMyqrhR/nVfvFn1TlY9MHKLaeaKOh2r4Jmi8UYbg41
eraFTwzZ+pg5yJlNg/wiOfvu0BoY2M7xWF7QCW9U55gYKjFh7UONuLjTDCB5
nBWbJsQm4xgQVBwqrm1JQfFPI3cO7+Pgiwv9/p68KYb69z9+EHhpGrpDZYXL
h/+Nb/Zwk3aycB1Iveaz+0WsV1dGyrXYQCa8l01clxLKAJLn+csnmXvDlwGf
VdPyx0IoyFZ71bdz8zm4fonnk9n3YmhEXIbZc3IaSN7Hut7wlG4nNT9Fr2vL
/PlV0D8vY7uVOB0umWfZCTAbweRQi34JUb+SPBDtmlLPbBYDlrCehSgJU1CE
8Yb9Dsc52Jkq8tFDVACJdzv+mE5jY+kAv0e3tcRQ4pn5KPnCNEQm/vh9ZLoe
Vp9wOCBC1Asay1BPC/8QmCQ93LnkNQOs2q4e6yziRzvf3uqfWsjBP6Fr6uKQ
KLp/ObZXYvc0UBVers6bVwPHV3y/G1VC3H//448cGMMVhi8YUC/4/bO9EQXt
sW2bt5Hoj+33hdqxnmIIxy1pOXxlGpKKDwbw8NfDpFTa3pfEeigLPJ8NRUwY
d+7+w/+UASSfpLK11dQnUSif5JPcIsb4A9MZ4HNlw8pvqyno7JXURqlTHLxV
yahH6rAYattV9Go5sV6D/GBRGrsBjrZ1d9zO74TwHGE5/+1DwDEoCion5nPe
aRrrejc/Gs3qdZq3nYOZrW/38NHEkJzIdtUs22nYQLvzVFKiFlTOfWM35hD1
YtjRY9SzFLR86EXGNOLgICf6DeUoMfRrRrT40rlpWJA4cyB68t/8IPmoPTqW
xiGyw7Bu9iRLmokhb2+m9CPiPly+RzKy1KcMmNqn+59u7QKSn5LQW9suk90J
JD8VYLTXWEGPDiQ/ZeljPVO5oxtIfspPy2vfg4xeIPmpe+vUHxfNHwCSn9r8
wdVx4zUGkPxURN/nVtu7DCD5qUZX92ab/n4g+SlUXRfy620PkPxU6lexn1JC
nUDyTorLFyeomTO4vFOzwQ//orwR/L3O5nucCz96vmj/+3NOY9ilPNT6uDfx
viJFPulpcPDhxTPNSRcEEMta7qf7kVHcafex5NINQVRyvWjTNU86/p53SOFc
ABXJFwSd7em/j831u37WXhZCxh8trih1d0DE9+/tX24Lo+2969kWTSMgHtfb
ontTBAkWLt0mEj4OStLiIa5Roihf/+f5jrIpEK6i/XF/LobeJ+H4p8R5r0Y/
yuGPF0cHbiR8aKRNwQRrMFQubS5ydd+q9jWZA+JB676vOSyB1Nvnr14ZNwLs
NDrTv1wCLfWWfFvO0wskn3X15Cfc78uXT/JZg5m5x31cqPmcN5EhHVb/zjdJ
G4ePj8//mw83Ix/8uLfuDZwUOmz66OUgSMWeYs73/g46T5R3v17XQ9ynH3nI
X6iEHqHZrRdX0UE/43bNWtNGeB5vxp4p6gSS/9plm1emp9AFJO9lqev47etY
H5C8l/tvnO81MgAk73VMdsfCPmJ/IHkv33Z17Q1EfUfyXlnE1eD4tT4geS/d
L09uJwV3gUDNwiMDTXyoP35LUHLwEA48Ov9zRuccJJyoLhTxlYX1ZpPVlrP4
UfSYuoanMQcvfN1/rJZDQUq5Hj59fGNY/7QoM2tGAI0e3r9RTZ+Jv78r0Jji
EUKy/KV2cQmVEJsmODTEL4w80g7qL99H1LO9M4+rhERQ0L6Q6C3zxqBIoyK9
RUIUrdQrfTEvcBJwLPpxf6kYeqjt5BVK1OOVtOPxYcvF0VqRe4k5rCnQfWja
nKk8F3UlqlvzxE9AjJofpV1aAgnviVbZYsEGkkf7kckoTbah5PP54+URy/6N
1w3RW3zdH/+N10td2pX1afHA+9Qs50g3E6pDbmeFbiqE6IaCO6HXekFdtfq6
p1c5jFdkG4vF0eHkTBy6al0P1U7znSvSOqEo6uSScNVWkJ0vYxeaRAeSfzMI
cjNXuzMAJP/G+nN1eg2xX5L8m/AeJYdfBxhA8m/5oU8bW/X7IaD/xmRLOj+a
p73+HOYQ7zc/z1I2h4Ku5yRK6ueN4SmvMYtTn4XQaIh+F97VC8Z17aj4pzBy
uPZusWIIC3q7LX+EFIugQL5t1HcJE+Bh/mL1tUZRdESpSPqbxjS4jL7T5usQ
Q2d43Lf+3joN2VuP9DW2i6N0dTcjZ6dJcDLhmcvL9+997XsFq6M/FcOxa+t3
Ri7qht5+C+sf7tUgEr3XpKapE5TsPF2aDZqhoMyo+zGnE0g+j6IcH+5lQJwP
//F5g2H9fyyJ84bk84zC3/8S8x+ASjcaaK7iRyV7flyST2JjHskSaxttCnIS
Pu7dYMPBjGjZow82CqBlXvtSwipZ+KnPzkcah0SRZ9QRNx+9KRBtr7NLOimG
dj9jXe0hzgNtTR7qMmtxtE3IJvPIvSkgeT+X3yJqe9oF8pH1QiWxv//Gn093
VFzB+w+kLo8p39lDB3fFVSwVhzpw9j9oKEOML8kHvpgycvn2kAEkH8gnFaKU
eo4BSjYsaxTKj+o2aA6sej+Gj/5Qtvr4iIJCn/uPjvJwsNH7+sbxHFG0PLRy
8YjANHzq6AzIKRRDRoskKy+YTwPJE36o2D1fe41Q/qcp795z54h6oP16sPls
J2wI5lUINGqCWzkHGWmNnZDkWtOyae0gAKVkW8BSBpD8oaNLystp4ryLv7n5
+xdpoj74dnlfsjUH8z+/Zr5RRgAZC9csD/Mk7ltHxBKFNEWRsY+igXfvJHQi
MZml28TQ057nu5hE/XNDQc20bps4ooXv7FnwfQos5d5P/fKsAKG1pqvunaCD
ae384FrzBmgqi2rsfUfUA//xjH9N50btIM7rjvMy969W8KPDUQYH16zmYLV3
hyy86iiocGud2XvHMRw15XFJdEYUvTedCo4wnQbZJqhd7FYDxstipW9/7YQu
rb7PnYuZMLFxi9xfewaQPOR1zi+r4ScMsIy2nJxjTkE3+G7M0TTlYM3riVnr
AsTQktHjLune0xBzu/VdHPPf+F7ceNbkSl8tFGy+sjo6vRP0o/db/PRlwil9
49XLQxhA8pR+Owx7+vyJ/hs1tojcpiAdl37Z/EUc3NE4lSKdJYa+bFqYe+XU
NJC85fOPmakWJdT8Z/wiaYasSvBVu0tPo9FBN87gckNZI2Q+Va4U+tMJJI/J
SRbNXkncr4cL3L2HKRT0/u0vweXmHByiot0QSBVAv/lWUDd9YePywURXc3Ux
JKr7+zaTqDfM+8zpqs31EGCXc288oxMESulfRKeZwOHZ3NuZygCtdJNd6V/4
Ubl6/7ZfNA6+8VKsYueAKBJVcDrcpz8NfJ2lMSND1eAo+eBuaFknkPzniNnX
sXbiHHldff+15m4KWq35N9nEkoOXaiHxMx5iKOIE7QCTqN+c5nU+quqog/Vf
BI8GEPXbMy250NN5TDjXct1weTwDSD60wHuxycIQoXySDx1YOKJrR9Tz+4z4
599TJuoDEQM7pi0Hj4d54Pb9Ysjm2YTVA+L3934tWxdQ0wDVryz2Red1gp19
OuvV5iEIqX7/bhcxn8N1Wlv3d/Cj99u0txZt5eBUo/plf8TFUH2X0Ykf1tOg
XvWGtotZA3+T+ixzPnWCuJXyrkonCkrQMHrivIODDapFLdgRYiglNN5ek6iH
i+O/8jiO/5sfU/lhPitf1cLpR/sYUW+J+t78R0Oi0xBEbt2JNxDj9cha/FDQ
ND9y6Nug+5uYb7u+jchxlMVQCXbniLpNQ/O5y7SauHr4K+F5XJWYX6+VtS7Y
DjChcQVvllYKA0i+1erHBWrZSwaYnVt38xeioNcq+6USifV5X+ROjvBpMVR6
R1w4m9i/GI8Ev/sm1kHfL2ONMOJ9k/yr5wwf54aFUH7ZyD3xXclDYCOt/fHv
WwZweuMYq5ZSkJ1oY0I1sV+edcw/fXW3GFpwwGWJ+OVpEP88k0RRHYLN7jIz
w8R4KB3lsDLe1ABVxaCvkaiXs6e/LHM+SUHaOnF37Iw4+NOro0IRwWJowKqF
vslrGkZf7V1eqVIHyq42SxYR9x/5F2rnx24Ngf1Hd/98ot4wVKp5Yi5OQX9X
8w+cJubPMRnzwk/aYkjxfrGQ7sVpqLbW/uAv1wCaumb3NmUR83fTRGX0fgoy
F1soUHWUg5OPj1j/9hZDdjTTNVFEf+mBX86sVqiHX/zdiEk8P8nnBlt8amfm
CeX7ofEXkd+HQOE1BYe+YUBSmsPmybUUZFDXrjhCzC//HCWagbkYmt3wq/MW
8T7zxGz1Du8Zggjss82A6O/Jlxufl0z/G3+S5+XhabH5stY3j+R5a6ZOepe8
zuHmUVxZfPTn7MwPbh7FRnqcwI+N5dw8iqden25q4mpuHkWRXUI6TNVz8yhu
bjFLU4Nmbh7F85IFLQqeLdw8Cr6NebS7+1q5eRTXBFlOu1JauXkUbd4PlQTD
Wrl5FM2TjfcZoq3cPIqk7pwMG80Wbh5FIu+emMesJm4ehfmL/AsXDzVw8yhe
ybbd7rSr5fK83x/urRT59o/n/X16dvXJrgouz/vkkYHJ6f7yf3kU+KNbulUF
l+d1XHZXcTvxfZLn7ezfVP1qQz2X5z2aJtvrLNDC5Xl3G67JWVrdzuV5M5b9
jhwK6+LyvAfLHOIPzfRikucV19CoYwowMMnzUlos5YVGBjHJ81597HSo052J
SZ63d6li2BoTJiZ5XpuLFdf1jAYxyfNOys+d9fnVj0me9+gatc9OIT2Y5HmT
eN79ds/qxCTPG/L5kNy0YCsmeV4N2YRXK3jquDzvUiOTI8LoN5fnrf88bKip
k8/leTcdvuRSWPcckzzvSmnPbdcTduH/r/C8fhrWHwSjXnLzJ5j0L9eorFpu
/sTc9sPpLpmN3PyJZLn8pD2Zf7n5EzPoV6j+SAs3f6LaRH/Xktut3PyJW3tL
dcxftXLzJ66KZz4zOtbKzZ8I5x9cQElp4eZPTFG/DcRu/cvNl1C/l7DeWqiG
my9xZDS8YS2u5OZL6LwOvia8rYKbLyFw48DMLVY5l+dd3NJiedG4ksvzfh0q
M1fFNVyed3mIe/eSwUYuz5spv1RpbUsrl9/dvObpPIdDPZjkd017usa/xPdj
kt/d2eR++eyiQUzyu9723Q/bdjMxye965c2V1j/HxCS/+8HBMCFZmIlJflfA
7/DmdDUGJvldRWvf5/oGfZjkd1dcM3gnnNmFyTyMYvTVlvfQN0zmYVhuV7r9
62omJnnep3fsd1qfuoP/3/K83xefyqmWjuHmX5i7V6uW/K3h5l+Y22sfr29q
4OZfHDO1KBjl+cvNv1iqvm/h9PsWbv5Fzsc03e1urdz8C6+sEpPvaa3c/ItZ
E+Oco16t3PwLQb/mIKnmFm7+hfCnvOk9NX+5+RaRzk6vj2TVcPMt1txGVlVb
qrj5FlazQj1BQRXcfIvtn7fH2HeWc3nensNmp1d9q+DyvIhV3tmdUc3ledd/
3Bx3/0YDl+c1WFEvU8lo4fK7sWuNHXZd6MYkv/t2aU96Q1UfJvnd4tVJvtcj
GZjkd6OCf1gHKzExye9u+czxcbjIxCS/G/Fit3eXOhOT/K7X3MLC8iIGJvld
K74dWmFz+zHJ7y4/Qs9WS+zGZB6H3w2/O6WavzCZxxHS1MgsWZ+DSZ63+VPh
Uge3aPz/lOcl8zkMP1/9+dK3iZvPEejaft9ZtYWbz3G/z/VO44pWbj4Hshn6
vSS2lZvP4bd7l5lMQis3n+OGxeoH0htbufkccCHbh+rWgutj+alNc3nQk61n
bA1sq3HA4FTGKnFepGSTPXRnbyVOLRL5WbqAD0UE/Q4eEKnAJL+LFORMNiyp
4PK7cl0rx5eMV3L53UnrtnjHvlpM8rjVyvLWp48NYJLH1Ug/iWXvDmKSxxXS
uZBqYcPEJI+7gDe339eOiUke91BXD6z8MIhJHnevmJ7nyesD3DyRNQkR4VtT
CjCZJ0LRi4uz+/kak3yu19dNW7zbL+D/u3wuz8Kbl1XMgrl5IpGfjml176vh
5omY5/L8dXBp4OaJ6F5k1dQ9aebmiajLFKfyRLVw80RePuKhFFq3cvNE3u94
5Sr4upWbJxK9XmTb7PVWbp5IzbLUQFV2CzdPxMiabbtUooWbFxLFdKFfE6vl
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
//Khd81KVascekk/6doIs1nriA/pJb2eVZ7/Gu1fN1kY/1z4iQbNxD6yDNhl
xHuu//U5dina32HPuazjdgErjkWZnOCuF97MBfE7ubeMIlhU5kbfBXc30WDO
at40UU4Z2g+F5941EYDVIycrIszKKQcXuQ6Ni+Jw8Ubjlf0uvcR/qmyv1mzZ
3kv6TLUXaWH9dbup/+RBc6P3VjtccSJ9pqtpYsWNjUzSZ9I71/9CdMZP0mfq
s126R2tXHekzbdzAqC/0rSd9JrfCMjPB7SzSZ3K43zjbHs1n2HeKikQYOoWy
SJ8pQl765n46i/SZCoySDydr1JP+Uuvn9Gw38x+kvxS9xy5zX0ol6S/t222/
uaimnPSX8gy1blqi/Qv2oEPxezpzHMuJB70RkRHc2VBJPGjGHJnlxgdqiAct
23YuumtOPfGfF/eYv0p/2Ur853dbMbH2GZ0U9p+Ldzapdc7oobD/rG/tYOxE
8x32n2GCxm2K7r0U9p9V2hzbqs29FPafGz7MPuCqz6aw/3xgeoyV87aLwv7z
y7YHfdwT7RTuRQV5L50Hs0oo3ItqEpJZ4vKEorAH3fDuyGv1nMcU9qAavNJ4
+TJ96r95UNyP6vb8XeRRUkv6UUHj8Rovi3+TfpRXomy6wEg96Ucl68ga14Ww
SD8qco0c1wftV7DnPKHuNDpzJ4v0o7ZH7u9bEFtPjVQ71F1NmAQt7z9dseYy
KY6+7bFLVXxQee7It4XJFZSiQIDQ1Vp+eMHG1MpsZTmF/af+LD9+A7Tfw/7T
aXntSLZNBfGfj6fvvzbUUEVhz2lprdDfkN5FYc+p2HpIKVuDTWHPmTVP2u+e
WS+FPeftsEJh6ZNofv7Lc55WXKS3A+1HsOc8V7WH467QQ3pXLb6aN1/UFlC4
d2UTel3/ReUbCvvOA+1Po1Myr1D/zXdij/k0V+pZcm496WEtLZK5VufOIj2s
ipBmhXY0n2KP+SB47pHeUyxKdLLj17c7/NAqdDTJ8Hw59W19dOOzRzT4ZZqM
kTI63+bOGdx09okAlPV0qTFkllPYY1YJSW5/E99DYY/JOrm0xndhL4U9ZmZH
gYgjWr+wx3yzJ1w6WLOXwr2ttab3hUTiIqm/e0zsKzkmtp2xC1mkv9XlqxIr
EMMi/a3Sfasr16H1TIuupG2sTINJvX61r9B5TXVKe5G8igDs6E9UkFUrp7C/
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
FIcqyS3RVuj1YL83QyxbJgTth3Dv0KPP267E7jD1d8+Hvd6nqMmUn2i+8TI/
47zZhQZTlZ3mVaD9xcqj7suWJaD9y6wz9XFo/cReb+UU4RW73s6mprqbGRUF
9gPAW+Q2itan71PzLd9106Bx45hsyGQZ8XclH89/m0D7C9xPvCbb2FKHxidO
e7bNhZc0aHu/3KsJ/T7s7Ywm60/MQ98X7OukP/fejkPPN6f1nfGwJg2mS8tf
voT+ffkw2+kb7MThvLy26E3Hekl/UdbXndNXdZzC/cVpe9Ue7EG/Tzr389HW
UBrcHqUrw4eet4MiBhdzPotDE+9DqxTR78P+LmJVzQ6R7jngykP1gDqjfvDB
5Z2dPXp+10S7WiuV0CBH3cMmqbeM+LlQ1+r+AjQ+uN9YqDoUF4Cer9F24Z/M
LTSYppzg441+XvjtA2HXy2j/rmKcl4PGA/cd95svu9oss4P6u6fDvcd37qnD
nYks6vZbVVfbozSoEJJ80r69jEpa+55V9lActnQmrEhA52/cg5w2oJCy0XcZ
ZV/jtXOkBz1fUeIPutH7z7tRfOjeUxq8/MUyOBqdl8b8rX2bm8Sha6JMxT70
/nEvskzxjVMner+aqp7H+AJp8JKLZuwiNF7M+hCdvfni8PHoe7kM9PxiT/fa
+nVGXYsa6HgeI9O0uB/E0NTX89Df3ymguFevgAZ97Rbd6eouo+aozS9xFpKA
IMA4+Q7ar56J5506YEyD1dcjpyb1l5H+5A9XhwtOnfso3J+8oCjmn4j2v4e6
vjot9qRB/oeDx+6g158fNj/o9mtx6NLV2u6D/j3cp+Qu40b1/aCBZ/mhy9lS
/WCSCrmejN5/8Ge3Aw6pNGhWCKoC0fhJVuTOS+CJw2qJoJNF6P3M63M4LfiV
AwTfCgk+Rz8/uEfZriQCjdfJOCkt9P7bdblVyhXicHqnWOYuNF7Y0+mwOQ1o
nwE0I15zf1j1g009dspZ6PXi3qWf/yGVGQ+2UP/Jy+XMPrvJVb6d3N8k7nZC
XlG8jXg5uyFad1NTM/FyOjWvAt+aNxIv90Mzsf++dz3xcqOWK2XEfP94uQ0K
A+J7QQXxctsCXqlo3PtEvNzNeO1By8sZxMspS2sY2z87RPqXOkGVtzpo2aR/
WRV/Y5rq18+kfxm8b9bHYbcK0r/0XvCkO+TFT9K/rFAW/N2zm0X6l0anA2fO
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
WiRFg0tDokbGTIThTk7KsdJWfoh7b1+uH7h8fSMPbP7oZ/7JRRKeXfjG8Dh6
vbfThaLXpkhBqeuHLzjo8MCot+KvhJUM2GayQqcY7bfeGtaU785gQC9L3xjr
3Vzwd7/knZ+kPhhzA9R/fn30Ma2dMpj76WrXPSH4YVZjxY2b/HDq5UXPlybQ
4WHdeU6n0HowelT4hFbBVJg07+JiIWkemHJj3eqsMklY8DP912a0Hox7LT14
qlkKnisPHFBE68GPJFvrIgcGPMVcnbIDPW/YK1n1GVjazo0D2id+3BtWpUN7
+Te8k3w0qBlsYbFaXRhqFoXtDRrnh7jX9vA+t+LuQR4QniGws85MEj5SFBPu
QOvLtOPnDDOeSEHbs4Lta9F5Srspc1/5AgYMNhFZfxCdt1ZuspjeXy8EP64T
TdtVzg8Vr1ATae10+MHQ4my9Ag365QraColKwg0xlV9Ch7hg2+F5XsIiUlDP
M9/1GPr3byUP7lelM2Cz+9Ed2st5YP6dA2p8x9DnJRPkvG4mDYad4NuUeg2d
d7Y+Fh9A89fMKddH8z9IwQbho1rXlvJAoZzPXv9NaD3IsY+XY/D+0W+LuL5+
7VhIILDSdDA5KN5OXaEHVVlG0SHddLmOBBpvxUs08dY8SXjuqfzkE/TvyyVf
iBH5JQXTFr71CEXP44m41JHBaXTY2m0+VjfAD1vyjKzb1kjCMqFTXwY6uWCj
nOiDo8oMeMuq8c7NRTxwR2SmRlU1HXoekv4aPJsGDzgYH5UangpH+DTWDYxz
Qd3egKZZ/FLw61ypsRUtXJDUaBydPiEFPV6qSn9F8++xEv0LEzvR3x9gPTKT
pcHjMw3Mcs9Lwm/qh8/2o89/935TM/5sKbht9qsrDxfzwHXhsvMymXR4Ufdj
QxU6b3RFX3K41iAJtTdVWW9A+5nGjc1KrG4pWPx+j7cuel6wRxLdebS1/0co
UHfJs6zYLwnn5lt42KPXEyNqW35nmA7r5rQxddDv9/J+NjtcEp2nHzVf4aLz
WbONXyH/WTR+W/KtpZRoMLmQMn7+SBKWCkl8dkHjVxtfFX/pixS8Z3HMaAn6
PP+TP3owbUn1Y9l2CvfSFq9qPwYE2yjcS4tg7K5w+9lM/E/WITmpj4wOgP1P
foZHSacwm/TKisqrgyu+cgD2PqczDdPGlUYB9j6n33XHnUmcBNj7HD/n8qn8
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
rOJEn5XaRTyOuxD/UId8O/E4DUnJbPH5LcTjBJ+Y+t3l0x+Ps7Tkgxa/N4t4
HOlhR7WpF38RjxPYXyjZl1tFPM7ecs8b/e9LiccJtWueJhObRzzO1ce7Q21s
HpJ+Vd0up48r3VKIx7nMXyutdKaQeJzTemsLy/tKiccRzZ0zVjpQQTzOHs1y
Zlwpk3gc5sHkVcJ7mcTjrH1YPuvK9HLicYxN/OPcDn0iHqd3j/kVaJVAPM6U
qWFnlKzzSL9qi1P4s5Lb1aRfpbDrflPL6mbSr7qavzTuS3Qn6VdZ+DouPWvD
Jv2q8X1ZTM5AD+lXfebtlNYa+dOv8vEJ+X2nq5H0q3b4GrDFk6pIv0pzbk2x
7Jk3pF8VlZYeJDbjM/E433QfxLMYdcTjHLq4pOH26lbicTxuSoR9KewmHmdL
/S0T0+19xOOoG4nKR3/jEI/TkTUvY1sVh3gc5tUpspVafzyOztq7pz6UdhKP
I2yze3ugxB+PY7D/TD7r7v8/HufymIWzfl4H8TjL7S28eoNaSW9qtk9R9ejW
9+Q+2GTnra7c8S/kPtjFSQo/gW45MKEdYN11HQUWC2dldM1lAr5iv8dzvMdB
88lVVt97mAD3qLpaYwTGplUC7HuMD68889O/lPieQglpxV8O74nv6VW7ttXp
6WPSo3o/LLfSSOA76VHlxgdzxmewSI+KT3yv5NaMNtKjOiarqqw32k3ul725
RVQzIpNN+lSzPW2UFu3uJn2q5HNjxWmvW0mfivtGenmSQD3pSzFDL67nT+gg
XifSoJSxY+Wf+2E7Hhcq+a7lEK9jyosfC+TrJ16HcdakzRz9OfY6NZoCYgUX
2cTrCN8r1f+264/XqS/up3d9+t97HaG8lofXXnUSr3O0TrMmcVMb6UfNEzOY
J6GSRe53nX0zJ+qF2Sdyv2tcyOrLLKUykBXEfpfHGQEC2y+cLLtXCXTqDtin
c8eAu/fWDxI8JsB9KfiK/fTct0qA/c+OIRU5wcbvxP8ojp3yAHMKiP85b91p
H1HiBXBfqnFhOyeB/on0pfhPvjt0oP0X6UtZND0ql0PnKeyBWBCyBTu6yH2x
JeE6AZXP2aQ3FcX3RlXYsIf0pk4d3hi23bGd9Kau/T6zYR2tgfSiLn1bw902
2kY8T9XWb7bhGmzied4LvrtjU9FHPE9CA58/l8Mhnueeh6TapkgO8Tz734ae
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
//4PBzvhsQ==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{478, 2832, 400, 401, 402, 403, 907, 751, 629, 537, 
            477, 444, 935, 779, 657, 565, 505, 968, 812, 690, 598, 404, 908, 
            752, 630, 1005, 849, 538, 978, 822, 1044, 700, 1022, 866, 1060}}], 
           PolygonBox[CompressedData["
1:eJwV0btOlFEYheHNQEJwFEIDxIKERlCooIRGoKFSJpHCgsIIIiRwAQzoIKeE
O0BmrmBGNFpIKdpggiANdByn4kxBQQE8u3jzrXd9+89/angzlhpNhBBKsICq
ZAiVSCsmMIkPGC8NYdfBAVRgXZfHov6WT6MJJ7qPSOv3+CAe4J+ugM/6Oz6D
pzjVreqeIM9fIhPvzffld0jG63krfsob9t/lWmT5tfkaz+VdswtrcllZCEPy
F+eXzICHulm7S/kV6vkzvi23o4b/ih/EfBufyzxz/W+5EdW8YH8j96OB9/Ki
3IPHfIOXmyN8Kn5D80A3hGP5RXyO+B5mG1bkTed+yHXI8U7syd34Ky/bZ+US
zPErsw/N8o7ZgVX53Lk/clN8b57Cp/gP+aH8Ho/wX/cVOX0C87oWXOim4z/U
HfFhVGJL9w0zyNgVdfcPJkmC
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0ktTjmEABuAnFWFMCZ2cRhuDoVKWskgxViYaCwszzbRopKh+QdJZ+QeV
Dlskp7SrtLDJhCgbm0RpJiEzbVzP4prnvu/3+5rvfXuPVNaV124JISQwTurO
ENLoMbzmC1k+0MgqHYkhdNvGWCDT1sBP2l27b/tHkf6AHbZhXtnmybDVs0Kb
vcu2QaHew3bbEC9tF/VBDuljfLbt0++wTKut01YhP+GEPs1f25R+Tl7gtNxN
ijzIC9cv6AMcjL+NT/F+9TPyO/bKl50r3JZ/0CJ3+FyNMyUphBnbfuclfZGr
eq5+Q97ksZ6uH5ff8Md3j+pVcoJz0vVMZ7E+T4F+WL8mr8dnqe/St8kDPPf9
amey7a1rpfJXyuTrzg0eygfi82Mu/p/0InmGPXId37mnt7t+RX7EMX2K37YJ
/Wx83uTLXWyNf5tnrpfq/fHe47Pkoy1djy/SEs22Nts6eXonybZ+Rm3n9T5y
4j3xwbZbv8U37tpabb84Fd85kmx9PLWV6L1kx9/De1uaXsMiTbYW2xon43tJ
oq2XEdssqbab/AfT72KT
            "]], 
           PolygonBox[CompressedData["
1:eJwV1NdvT2Ecx/GjpYTEJiSKaotEYlzZ8wJBSXChthISiVbtPf8AW63ErlI7
xo2q3dLWhbZ2JfZKkJilxeu5ePf7/nyec/Lr7znP+SWkZYxOj4miqAY6+TMH
jepFUX0s58uQi2LUceEMPMOy2ChaqvuIDvJ6VGOn/piuCLXl6ajAUv0S3Qe0
l9ehCjv0R3UD+B40l8/iji5OTsNTLNEt1o3iuUiWr+K9Llleiz/I0uXo+vPd
aCafwW3dRbkbL0EtPtL8gGn8CRbzRa67y4fyVxjJJ5mV4XvxhjWjKIlfwbvw
2fJ0/i904fPkXvw+kuR4eSz/gjVyPfm3uV0+4v6O8iweaxbqW5iD5GfoJ6ea
37GLN7DWlJ9GoXunmdW4YK2rWYyaPCXsC6byx1jEF7q+hA/hL5HCjyKR5+Ot
9Xy5Jy9HIl+NSmyTs633Dc8XTeRTKNDFylPwCAt1C3Rv0E5ehV/Yqj+su4UY
eTIeYoF+vu4QbqJG2Gs8wHxr83SvkSCvxE9s0R/U9QlnB43lk7gRDrA8Efcx
T5epG8Fz0E6+HJ6p7rLcg5ehLR9jfsYK/gOb+QHXzTRj7HmBbiCvQG/eVjeO
f0OWXF9uxE/guvsS5am8CufDfsldeFE4J9ZbySPC+cEE63XlcjNTnmt9thmn
K9a1NAfLLzA8fD/zVzg7PMHMC8/TPXlyd16KNny0+QnL+Xds4vvDM+AD+FP0
CucwnGl+HNesn5M7h/cPf+XxchnmyhnyMJ4d9kC+FP4vXevwe4Bv2Kjbp+sZ
zk04s3JueFd11UjVlSJDly4/R3z4fcBXbNDv1fUI5ybsbXjvwrulq8I43T2k
6/4DtAOfqw==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl8z3UcB/CdbM0529hss1WyonQodKLWgdWyJZ1uNtYckXTn6nB0EooK
0ak70eEo0YkuFZ2uLoXSpdLz/eiP5+/1fr+/e3y/v+/n89mvuN+wHrWJCQkJ
NT4i8318Iu9nON05hiSSSaHA33wqH2AEZbQjlULXPpMPMpKzOTbuYf6zfIGb
6E8dWphvkvO4nHM4Lu5nvksu4WYGUJci881yPqMop308w3y3fJFbGEgaxeaf
ywWM5lxOMdsnV3EXHeKZZnvkUm5lEKWxJqxVzyadA/VfyIe4gq76Oryr7kEn
9d/yNe6O5+nr86G6Y3xX9S9yGeermzA51kkewAb1JTKXwerTZRL9eFN/gcym
mnv1FbIhA/lYf6nMY2jcT3+Q/FL2kQvlebJx3Jsx+m6yLv15T3+RbEqFurP8
R75OL3UW0+M9ZQM+Uh8f66f+Vb7ElNhDfQbvq6s4Q53MW+r7yOBg/VdyEVdS
SRezf+VqZnBCrJnZXvkyU6mmHi3Nv5YPMzbeixPj+5j/Jl9hGkOozyHm38hH
uIqenBTPMP9dvsptDKUBrcy3yEe5OvaKk2lIiWtb5WNcE2sTZ4pGHOraNvk4
18Z+xZmgMYe5tl0+wXVcGGtMJq1d2yEXc33sQ6wHTWjj2rfySW7gYk4li8Nd
+04+xY1xdjiNbHJoSjNyyaM5+RRQSAuKKI6zHecl9oYj3Pd7+TTj4lxRGutO
W9d+kM8wnt5xTmP9zf+Qy7mdmlh3jjT/UT7LBPrE9zfbL9/gnjgjsR9mf8oV
3MFlnGmWwtvqObEvHKXfKZ9jIt31aaxT9433jx8y1oiZcY/YO/1fciV3Uq6v
xwfqWs5Sp/JO7IvMYa66UjZiEBvjXWXzxP9/L0v0R8uf4rny+ThXMpMqJunL
ZDoDWB97J5sxJP6n9bPi2QyLs0PXOCdxHmLfY39jL2LNYx3j3ekWz+U/1HWZ
DA==
           "]]}, Annotation[#, "Charting`Private`Tag$1324954#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1ncYlmMcxfG3YSQNSYlCyciIlJWRvTITpcwGiRYqWyIkI4SsJk20FzLa
y2gopWlUqChFGeVzLn98r985577v632eez1v1WbtGrQtUigUPi1aKLQh2hYr
FBbQjfEP/ymGyUqjl+wU9JU9z/9O34cqWJOxaCdfyF+Hf/nPMFxWBi/LTkU/
WU9+K30/DsJ3so9kh2AQfwnaydrzi+gm2MnP4WtiLD+Ff5cui1f4ulhOn4UZ
dH/tL9Db6AewiW6Ag+mF6smYTH+v32S6Kgbz29XrUT/PpV6ASsULhXn87mpr
vr0xHdSvZXvJmqrr+UtRmd+lfS59HPblx2U+6ZtxKD9V+3v0Pplb/lXtW+nG
mQP+NH4FfTZm0kVlt9IDjHtR/UP2IH6lr84YepF6Cj6mf9DvY7oahvCXooPs
Ln4xfT0KmCZ7X1YOvfnTMVD2Ev8n/RCq4seMxd3yJfwNKILpsreT4x5t38hu
zPNihuwd9JJv5x9GNaxNX3SUL+VvQjHMlI3IfOE1/gwMkr3M76AfwaH4mj8V
n9DrtH+SOcVQ/rKsJ30hPqc7au9EL6Nvxk/0ZShOz1OPx/jsVfUWzNJ/pFo+
e9acv65tG30dzqRXqudgf22z8tzqbfyR6mBjX6H/kpfku6i/8Q1Rha/OL6br
Yr/i/5+5XXRzHMavz3mjq2dP88O076BvwOVZU/UifEF30rcz/S19C35OH+xG
f67WwgR6tn6j8nt4g6+HIbJX+b/pR3FY5iVnNc+B4fwV6Cy7l19ON8vexxzZ
aFkFvMmfhaGy3vw/dFccnufJWNwnX8E3xx6Ym/sEr8n/5R/DEfglfXG/fCXf
AntmjXJ/JMcDKF3SvlcfwsN4JLkxq/RtiRJ5/9wLeF2+k38cR2KDrAselK/m
b83ZxRc5i3hDvovvhhrYKJsiOxzv8ldmvvLb/Br6tqxzxvMnYCL9pfYxdEW8
xf+hNsk5plep52I2Xdz6tqLf1/9NtYC9ZU9o20xfg4P4o/gl9GmZc/6znFu1
RZ5L3WT8VPqI3CX8e9r/om/MfcZflbNLX4wD+C+zDuodfNfMofqdrFXWgL4i
z5H3UGtjEv2VfmOz59GHPwer6fMwhx6h/S26CJ7kt6jX4mj6G/V0TMldpd+0
nJW8N98g65815L+nb0cpzM8ZRB95UTwlOyZnSfZ41lD2A98apbEgexzd8Ki2
H2Vl7JM7UrEwexZ9tRVDd9mxmWfZE+gqW8vfibJYJBsnq4S+/LkYI+uXewNP
8zXznrIn8ZhsHd8G++R+ko3PfKMffx7GyvrnfKIHfxx+lz2Vd5Kt59uiXO4I
2QTZgejPn49xsgH87niGPx5L6TMwld6qfTpdAyP4q9E9c8L/RLfDvllLvg4+
yL7SPpGujAH8n2pTXECvUc/HXHo3++X23JP6D1T3QCnZs3kHuhEO5mvxy3JP
Zv/z0/giasvsT3Wb8TPoo1COH6n9b/omVOMb8mvpS/Lu/Fe5A9Q7M+dZK/Vn
WfucZfpKlM9+UU/Eh9lv+k2iq2AgfyEm5BvF74nn+BPwLV0P03NGtc/MfsUo
/hr0yNryv9AdsF/mW/ZBziXe5i/CxHzj+BJ4nq+deZQ9k7WVbeDvQoXMTZ4N
g+R7oaesDrbLnkV32Ub+blTMM+b38Bye1rZJdg/2x3LZh/kfhrL2es/818l/
g3y70UP/X/XriEpYkf9XGCwviRdkJ2KHbBZ/DEbz16JXnp//je6Ue5C+Kvs5
Z009KfNuXT7id9LNUJ1fmWfKXsA72i7GZNmQ3Cl4kT8p91O+6Xln2Wa+Mw7M
/Zj/LPmG5vuUb0q+E7nHczfnnsw9k/kwbov+96Jy7qL8B8DQ7Eu8JDs5e0s2
mz8WY/hGWEfXx3y6hGdukzOj9tH3P7WYc+0=
           "]]}, Annotation[#, "Charting`Private`Tag$1324954#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfcjmUYxvHHplJSKWSLsilCRlaisit7vGSPJHvvkZktRZkNZGZEKjKK
klLZGkpGUsjue/7x+xzn77jux+u57+u6n1xJ3ep1TZZIJHokTyQKpEwkrqQy
Iw3W8YFoioIohMIogqvWX0VafMQHoRmK4pquJ9JhPR+M5siSOpGYpnsYP/C3
UAzXeS/chg18CFogq+un6x7Bj3weiuMG743bsZEPRQnXfsCfxF+8JR7UzeAF
8BOfj4q6Dfw5XI/P4aa5D+7AJl7TNdvMDTGMP8qXmSvhPG+FbLqZvCAO8vp8
j7kV3uZP8o3mWuhmPiVvxD0y/2DuhH7mf+Wj+luyLwbr0suX5DE5SX5s/Rm5
nY+SjeIZybNyhhxu/TG5nA+XlWVneVJOlX9bbyy/4+Nk+7h/0cs5Msl6djmL
F0IH8y/ykL6Bea85Ce/wSnyTuTZuxnPlP8bfw2M8wfuZ78RmPgIldSt4FVzg
rZFDN5sXxmG+IK5DMn1/3V3YwkeiDXLq5+iK4AhfiFJIrh+gy4BP+Ci8hMdR
GmWQwjUDrd+NrXw02iKX/g1dURzli1AWKfWDdBnxKR+Ddsitn6srhmN8MZ5A
Kv1g3T34jD/LvzA3xtj4f/IPzVXxD2+PPLo3eXEc58/zr82tsYRXjuduroOX
zX/KW3EuzD+ZJ8gusr+8KMtZS20eYh4i75Vt5XE5WX5u/Tm5g4+WTeL8ynNy
phwX90yu5CNkNdlF/i6nxT613kR+z1+THeLMyAuxX6zlNb9lLoGO5l/lCf0L
5m/MbbCUV+GbzXWRQEt+UHZFeetp+FDzfdjGa/Gd5qbxd+OZ8lXmp3CRd8RD
unlxjvAzfxdVdVt4PSRDBV1a3TBzJmzn49EJ+fTzY//iF/5evCeQLs6W7n58
wSegc5xt3GZthP4B7OAT0SXORzw73G59pLXM2MknoWt8f9xhbZQ+C3bxyeiG
/Pq3dSXxK38/vgfS60frsmI3nxL7WreaV8cl/jIe1r3DS+E3/gGq6T7h9ZEc
1XR36saYH8SXvDbfZW6G1+MM8DXmp3GZd8cjugX8cZzkL/J98Z7CMv4U32pu
gO7m0zIFWpkPyW4YYL4Uz871d5nHmofKbLKdPCGnyK+s15G7+RjZXPaUf8lZ
cmqcO7mWj5Q1Yv/IP+R0+Z/1pvIAHy87yr7yH/mKtQLmhebS6GT+Tf6ub2j+
Ns4NlvPq/FPz80iJJH44zmPcd+sZ4tyYs2MPn4ZyunW8Jq7wHiioW8TL4A++
Ak/jbv1ruhzYy6fjVRTSL9aVxSn+IWogo368Lie+5jPQEzVxj7UJ+lz4hs9E
r/jdiPdRnP04S7jXdRNdkxv7+Cz0RmH9Et0T+JOvjH2B+/STdHnwLZ+NPiii
XxrvHZzmq+KZIZN+si4v9vO6/EtzC8zh5flH5mdwlfdFUd27cf5xhjfi+2NP
YHXcK/6Z+YV4fuYzMhVam4/IibK7HCgvyzdkXZ+7X07hw+RDsr38OfZ4/BZa
rxd7jY+VLWUveV7Ojt8F6xXkev4srvF+KKZ7L94nOMvXxL+DB/Sv6/Lhez4X
/VEfDeL9Hu/CODexz+I7ojEyx372mfw4wN/EABTXv6+riHN8beyBeI/zF5Ea
bfjRuCcYFPtezo13u2v/BziqObc=
           "]]}, Annotation[#, "Charting`Private`Tag$1324954#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Hf8TQUYB+CLbBnZ2asIlZ0RsleRkRGSIqPsLUVbO9ole++dWSkrJDvK
yt4rJEnP+8fzeb/v99xz7+93zzm3QMeeTXskSSQSFZMmEmNSJBKPpEok1qdM
JDozQS5KHvltMyNz5TNe11e+IX9OY7bq2umOyK9QkZQM16VgstyWb7yuhn2D
/Bx5Oav7lfb6o/ZXqUQqxupr6jfKXcjHOd02xjGeCUxkEpOZwlSmMZ0ZzGQW
s6nl/X72Pl3Jz3ndduZQ27FNum4U4IJuB3Op49hmXXcKclG3k3nMp67jW/TP
U4hLul08pT9mf43KpGaBvp7+F/kFCnNZ10/3j/wFTdit66A7Lr9OFdIwQpeS
KXI7FnpdfftWuQdFeMeeiXnyFcf7yzflL3k8rp09L6vkPY4/LZ+Q32CKXIKH
5VFmDpbKaeP6yqmYKs82y9BeHmMWivuHNfalcT47WOT9G5i/6leYPc2JZrG4
ttxjf9e8K85lvn2eWT7+J/5y/gDzX/1q8ytzuvkATeP7MvOxltX2xWZltvOb
czuaJ/VvUpXR9px8K6eLe05OzTT5qTjfOQ3t2+Re3MtV3V6e0Z+yv0U17mSJ
vlF8ntybolzT7WMpj8b3oOtDMa7rfudZ/Wn7SKqTnm/1j+l3yn25j791f9BJ
fyaeRx4hA8v0jfW75H4U54ZuoO6W/DXN2K/rrDsb9wY1yMhyfRP9brk/JfhH
N0j3X1xXmnNA95zuXFwravKx/W6WyZniHpfTMF3uENfaOY/b98gDKMl79sws
kG86Pli+Hb8NzJAfpEXcp2Z+vpMPel0X+Xycz1S5JLXkT8xcLJcXmZXiPorn
xUzLD8ywzzHLxjPH0/F5ZuH4LeLH+N7NqvG9s9LnNY17R7/SHGhOMu+L3w7u
t79vZolzWWifb1aIe9S5Q8xE/O2MdWymWSp+P3jC/pVZgO/lQ17fVb4Q70lt
MrNK30y/Vx7EA9zSDdUlYZy9JYd13ewX5Q+ow6f23KyQs8QzLadjpjzXLEdH
eaxZhJ/iPjKrxfPj/Zqb++JvMAebk83ibIrrE59jZo3z4tm2LzAfiuc77hnn
v2gmjf+P8Y7PMkuzhVZxT5oFWRfXJ54fswp/Ore7eUn3IdPiu6au/JmZJ66N
nDWeZflOZsnPMC5+R+I3QP7O+7SQf5eHUCrez56NxfJtx4fJyZhgb80R3fP2
y/JH1CNbPOe69MyWn+V7r3vC/oc8lNIkeEl3BxPlNhz1uhfsV+RR1Cc7P+hb
6vfLL1KGJBzT99D/JY+mATlYo2+lPyAPoyxJOa7vqb8azyENycmP+tb6g/E3
UY5knND30l+LZ4ZG3M1P+jb6Q/LLlI//356dJfJCsyLb4v+L15jJmSQ/yUnn
97Zfj/uOR8nFWv2T+sPycCqQnFP6daxnAxv5mU1sZgtt417w2hE8RApO6/vo
/457gcfIzUhdBubInRgv3xv3lrzcrM6ueO6d/z+15zox
           "]]}, Annotation[#, "Charting`Private`Tag$1324954#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GXYFFUYBuAFqY+SVGkQaRAQpEMJkZQQkEZAQlK6W7o7BBRR0kC6U6VE
6e7uBiW9z4/7ep/nnNnZnd2ZzdCkffV20SKRSKHokcjhOJFIv7iRSCx+iIpE
6pGZOMyy9g7b5B6U4Yjj+1uLzY96fbIQxVF7xzjOCU5yitOc4SwDvC4O8x3f
gKzE5Zy9gdajWKA3JBvxmG0tE9vlnpTlvOMHWYvLQr0R2VmuF+W4PI74zNEz
87vci4+44PWDrcVjkd6YHKzQi3FCHk8CvtWz8Ifcm3/k2jyWy7FF/pgr8jWz
A7PkY2ZjXskXvd/XcnwW62fNFnwu7zSr8pI7+i2zc/ie4kUiOfWVcnGecVK/
bLYlpv0J+mG5AdH05/pDuVf4bvSE+ndyVv7lz3Dt5pf0kfeZn/FEvmd2D9ci
bzXLc1W+bn7FbPl4+MxEuOSahpgJWGKvCbvkatyVc7FKLsEpeSKvM1fPxg65
L+XDNTnXUGsJ+Ulvyrus1ktyWp5EIr7Xs7NT7kcFrnj9MGuv87PejNwkZp61
HOyS+1ORq44fbi0Rv+hfkIck4Te0N8J6Yn7Vm5OXpOG7sDfSehKW6i14j2T8
YC0nu+UBVOKG40dZS8pvekvykZwfreVijzyQytx0/GhryVimtyI/a/QPOCNP
5g3m6+/ylzyI/XKd8DvLVdgmV+Ba+BxmR+bIJ8wm4X7hlvcbYyZneXgOzZbh
/pB3m9XD/cs9/bbZhfflteaHPOds+P7NduF/xD03JfxPyA2Jrr/QH8m9w/Om
v6kvkHPzH3vD82G2ZrB8wKwb9uT7Zg8+kbebFbkenklOyk3De3DbdYw132CF
vdbskWtwXy7AOrkU5+SpvMVCPQ9/y19TlTvONc7am6zU21CQFNy1N976W6zS
21KIlOH5sXefBzzkERMcl4LV9ttRmFQsspaXf+QhVOOx4ydaS8kavT1FSM1i
a++xTx5KdZ44fpK1VKzVO1CU9XppzsvTSMMSPR/75WEclOvxVK7B73IlboT/
C07JzXgt3E/eZ7KZmnX2zputwn+C/Jf5KQ/C92Z2pZi8wSzDCy6E581sT2y/
/3T9qNwonF9/Ga5d7kN8Pa3+k5w/fD4O6JfMNsSwP1w/JNcnoj/TH8g9w2eR
/zArczM8T2Yn5sqnzS/COcK95ZqmmGlYb68je+WaPJSLs1Euy0V5Bun4Odz/
HJRHUJM/9SrhWQr/TTx17ql6WjbonSjBJv0jLskzSc8vegEOySOpxTOvn2Yt
HRv1zpQkA79aK8hheRS1ee746dbSs0nvwge8zVJrhTgij+YzXjh+hrUMbNa7
8rdci0fhHje7EeW7/VDfLJfjsvwNGflNL8xReQx1eOm8M629zRa9G6V4h1f2
ImY0ovMaMYhJrHBer8nIVrk7pcnEMmtFOCaPpS47wv9BeObleZyRmxOTJ/Ql
gc8e297/JQE8uw==
           "]]}, Annotation[#, "Charting`Private`Tag$1324954#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.865361029035945*^9}, 3.865445408672529*^9, 
   3.865445465281426*^9, 3.8654456787461615`*^9, 3.8654457684634714`*^9, {
   3.865445884836256*^9, 3.865445921420556*^9}, 3.8654460587696333`*^9, 
   3.865446443250679*^9, {3.865952125553069*^9, 3.8659521516667013`*^9}, 
   3.8659522247202935`*^9, {3.865952279668687*^9, 3.8659522923016386`*^9}, 
   3.865960380517995*^9, 3.8659604237811317`*^9, 3.8659604862431183`*^9, {
   3.865960526854105*^9, 3.8659606215087757`*^9}, {3.8659608307097435`*^9, 
   3.865960868038782*^9}, {3.865960935615129*^9, 3.8659609432706757`*^9}, {
   3.865961026919873*^9, 3.865961042898753*^9}, {3.8659618737415323`*^9, 
   3.8659619220130653`*^9}, 3.8659621773942356`*^9, 3.865962208141383*^9, 
   3.8659653341237497`*^9, {3.865966920464451*^9, 3.865966952803088*^9}, {
   3.8659670377118826`*^9, 3.865967084214981*^9}, {3.8659671567557373`*^9, 
   3.86596716982355*^9}, {3.865967354328431*^9, 3.865967365694789*^9}, {
   3.865967429099472*^9, 3.8659674436738024`*^9}, {3.865967497088687*^9, 
   3.8659675719317055`*^9}, {3.8659677533835645`*^9, 3.8659678198432693`*^9}, 
   3.865967879244236*^9, {3.8659679215246882`*^9, 3.86596797117278*^9}, {
   3.865968013975065*^9, 3.865968049366725*^9}, {3.865968179144141*^9, 
   3.865968295722787*^9}, {3.8659683292590413`*^9, 3.865968337405431*^9}, {
   3.865968399526526*^9, 3.865968431918147*^9}, {3.865968471686404*^9, 
   3.8659685928285875`*^9}, 3.8659686585365334`*^9, {3.8659690928773613`*^9, 
   3.86596912452522*^9}, {3.865969364031477*^9, 3.8659694647951903`*^9}, {
   3.8659695001958475`*^9, 3.865969589464244*^9}, 3.8659696214759865`*^9, {
   3.865969666100687*^9, 3.8659696876527815`*^9}, {3.8659714896133933`*^9, 
   3.8659715124820657`*^9}, {3.865971671047258*^9, 3.865971706849786*^9}, 
   3.865974159481908*^9},
 CellLabel->
  "Out[4975]=",ExpressionUUID->"12c337e5-3819-4589-9326-449a0f23d100"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
Rhjlyh6wtlnGAC/V9g2RxP5imLc4eWDVOMiP6R30JeonHf8Lyp3SxPOzbq79
//Xt3RVZ8PIXFfV1ZkYZbxBG8bc73ifSZVDI1TuDfBkUxKVaaLjq4hgUulbc
UCCef3FAo+jwIBVZpi/ddB0JozIuvzUHLzPATdgxbAvxPfxVvV9E2XQ4NOlB
nSSeJ/iT79vE/Bg8zbeL30O8T+jGRXfvTzKgRX7y4//vb4FzHYIin8ZgUdBi
3nXE/FoTa2BFz2PAwcfRcS+J5w1WtBZt2DwGvw5taPz//b0iqYTLZVoGvdgk
fTY/j4LsNm1qVTo1Bg4Zd6p9id/fcMdWb6CPAcVlAb7/X/9Uj0eK7U1lALVl
52Nb4ucRSireoUrE9whOHfv/eq+z+WvLVgGinnwqdeD/7z/+aPpldBkD/Idn
Brv+vx7zuktp3T0GyfS5p/+vNzi82vKiki2DGO9SYXkhBZF69wE+ueFiou4i
9W7R+vyrDeuHgdS7o6MbLJca9gGpdzOtFPtC3vcAqXe/cboyfFW3F0i9O785
ZnuGbj+QendApWiDWMogkHq3bJfxjgrKCJB6t1xPj5ehP7Fu/9O7xZby+ehG
0IDUu4VM/3azmcNA6t39to+c/L8OAKl3+8qLGO9e2QOk3u3X/VX06ubfQOrd
6pIZUjUhlUDq3Yc0bj+O1kjm6N3dWkla/RfqOXq3vnbYNVZHF0fv3olPrTXe
SOPo3ZNsq+0d6eMcvfv6quaqP8cnOXp3upGetM6WKY7eXWA/W3TQi9g//tO7
x5yXeZwv68Wk3p10JEvt/NUkTOrdg+sbLNLvdXP07uwPL2wqi8Y5erf21HPq
3mvTHL3712nJsVPlcxy9e6HzIdtEdzZH7x7oc31suXyOo3fnbLsyYJQ/BaTe
HVa1xNM0dxxIvfvT3Wy5LjQIpN4tviLnTWBnNZB6d2lTWfh5iXpM6t1PO0Id
k9XomNS72xO8RtfdmsGk3r2vpddvmwtPEal3K/M0nRgwEywi9W6u//6QejfZ
JvVusk3q3WSb1LvJNql3k21S7ybbpN5Ntkm9m2yTejfZJvVu9cQHzbIVo7CS
/T6evbkMVKu8f/PsHoCQqoLuo2Z1YO5QV3hHoxdIPTxOvbqvoLgHSD386v0H
3YuW9gGph3d3rD19zW0ASD18dt/pM5K0ISD1cGpUh3rSyAiQejiT59WPZzk0
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
o5y8kW2hLMWrR0swmTeyRG/A5bHzG0zyuPq6Yat2H94NJI+bWKJeGxh+F0ge
t9zCeKmr/ScgeVw7F2+lT6O3OXkjy6qm10/ebOTkjWSfVjZ8U93KyRuJEi/a
q6bxl5M3Mt9wa9ltVjsnbyRGXvdBy68OTt6I4vxng6m1nZy8EcE8GZcYSicn
b8RF50HB7oAOTt7Ik5n1Z3bHt3PyRERm5o/OTzVx8kR2n1rM/9qkgZMnMlx6
YPKsUx0nT6ReN0oWn6nl8LiMLS3FP0drOTzupJzPQOaNBg6Py1OqoP3CqpXD
42Z91z6nxdXB4W/XbyqYXWE6gEn+1meC/cN9chiT/K3ra60oXy46JvnbwYTE
wlo6HZP87Q6uhAc2xxiY5G+V6+a4uxQYmORvd+zWVPt6ko5J/na9ZfTJx3I0
TPK3yhaRGj1vBjn5J3O/gu7GPf6JyfyTxI7gS0X5GJM87nP5uMaZ4ieY5HFX
LRLNCHK+CSR/m+dgvcH+1wcg805URN4GRkf+/l/eiYNEwbhZOyfvpDywLrfO
u4OTd3LxF/vMvGgnJ+/kr4uUYrRaJyfvxPaua/Cpug5O3sno2ugbn2Q7cJtR
rW5x2zxw7YtnfItsxKKh1o4MGhdqPO5Zv8CgHj8rLtzEYHKjQzcW3S8sqMUk
b3uQ+fMD82Ith7d1fLCipo9ex+Ft/bdbFvmlNnF42sh5CU2q1hAmeVrNIv/H
7xNpmORpf9cfW60cQsckTxsRqpxjtpWBSZ6WLytx5qYJA5M8bYbLxpCTDXRM
8rQ0IUzJjhrl5LWsfBrgmbPvGybzWgoEIXps3TtM8rWnrk0OWY94YpKvFdX+
cHJHdxiQfK0vu3J/SetHDg97t8gkJ3FrBye/pcKxU4A91sHJb8ESKhJOGp2c
/Ba3v81T+yY6cHiRImVzFjeyDOi8dEiwDl9b8viPTT4PMt79IN6ZOJ/azmy+
rIoXoNRbgzLPbOswyc82RfesOnKjEZN8bIgu9fmRvcT+8x8fK52iT1kqy8Ak
H/vzy7O1Ry0ZmORjl55q+6PHzeDkx5h5Cw4mWkZgko/1nBmzXR5zi8O77ohx
uyCS0sHJj3Eclrj5d0UnJz+m3H5Hz+uVnTi3zMI2fSsPepB/FGeG1OK6xt6v
ldoL0NvFMZpCL2oxycMm2v7+pZlSj6k19VQvRxEUZ3vmRjGmc/hXmq15l7cx
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
aw0vNA/QDiw1p0Dkn3aPONNYm2ZxT7B128RIndM/3BNcW+XnkBzAxj3BxXfg
Yt8NFu4JTsWJRyqQ8wHqCTYd0zqTf4UF1J4eHW5+IQIXrgleTppkgQK/Lr/n
8lR4LeRmtfVuNphr972U/ZoKpz32x2cyWWB2sCZjqZIoDM85d6HJYRIgTzWi
UGypcZ4BkKeyjc98tlxnCPcK5XU/WQjk/QbIU6mtH+Of21WGPVVbMDf7QEEX
QL1C8VDtM07fBnAfcHmfU6TaV3KetoOGni3cUEFCOCZ2LwX+MncNL+/kgfEh
uxP2XSb3ff95pwt/jjlc7GHjHuDLrv1bKWks3AM8qrG72HAnC4h3HFJdvlQE
CjLf5iaS98faXbL+YxQq3L5p3HEHZIMWnSyq2R0qDLZ3+bpajg2M3x3jm+QR
hTlBocXp9EncE/w7N5i6LKwUoJ7fHNt1Rd9bTmiWaXXQ/wwP3GQWbB4aQYEz
lmE7as7wwqtz+4z5llEg8k0C22KGuMj7F/X9birJ33hGHs/1soTdO+8KQ+tH
xUG39cjxbKt7YleRCPzeBabeUtng4MfXvhYmVOjxWv1q8i42WOtv3Lq2lApP
8r+viyKfD+SjeKP3pF+z7sY+qtZcd2ee4CCBeoAuFrrhvYX9BOoBTu1dv3La
sRf7JNXX+58r7BgCyCcVnYsdeKc0jnt8XcIKqaerJwDySTc5Q3uUb7EB8km6
Hm/19xrPAuSTsnkO9W6T5IDIJ7V0Nm7so5Pn678e30W7/W+uh1Mg8kp564bl
Uus5IfJJSyfiTMYn5nB/j/I+QyJv8P/6e443q+e8Lk3h/p7k5SdmS1gs3N9T
cXc7vGjJwv29AVltq3ByvEE+iddjdEfPexbu7+mYDhy8tp6cTy9OH1w8TYUV
muHZ6vrk+ZYNYp1qp8KOJCXZQh8WQJ5JM7fDRk+XCZBnWnPakXX01Dju992W
rbW5ENsLkGfSu6Z1tVu8DqB+n9vNM7dME8uxb7K9XhqicbIToH7f6aE1YPbu
APZCv0v93ZaXzwPUv+tdcp0dIccJUf/ujXj3sw5vCrT/flzUicoLfzSFG/w5
TIHID207QrmvcnIW9+4+niR4s8L+4d7dleqlUUbRbNy7G5Ls+tFzj4V7d/av
nxUvarJw746LOPxW4CL5vE2K6q58KgJDOuKUFkbI3/+wtXCrNBUyhmw+PDVn
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
xvuhxTDuY529UtXTmPUXIL+ifry+uvVfKfYr38ovr9Hx7gKoj3X8moNKSucA
7lERU8+qc+9yQCuj2w7pedzw1b6kuLvqFDjpaCm3UMoD9+pPmWnepkDkS9be
772VsGIK96ek6jd+qP/Gwv2pt3may/+Q49/Tjf8sL4wJwzU6g7fVjrDAo+63
41snReCdJLFxqMUGR70Ftgf7UOE2uwqaDTlfmJzdvkdgmgrHQ5zLEuVZuF/l
uW/WMF2/FKB+1MYrGW6lvpxQ5/ETnwIDHmgZqXMmiJyfyFVm6RJjXqj5oGCl
uyK5H/nPk/g6Be36asXGPammecqxDlcWKBnf9/O+Mzl/xb4vf0mO/wp7LjEt
M0UgnTtg79GlbFCyS3X0oSYVivL0q0SS49HLz8/nz32iwutKYwf5GljYo6T6
iFyPEesG9FsC/T4pYWCpi5CQ88IAUf9Bf927aG5INXjU4iJAgaMOSy7rJPHA
G4IBe83I+d/zcQuDXiwEDbbndaeZskCVsNd4WY0wjNBWv5RryQLfzM08jneL
QO97Fzn1N7NB2XrFWz8dqXBOq2W7FLnfRD6FkbX79NfU76BoYc+2XDkeaLz8
2nP3QApc5qIobbieF9499XzkgAkFoh7UIbtOjkB/FggwbGhOMBeGc4n7tvzv
/mV/qHH9rECFq8zUKjLJ8V3IMXf3uzdUaPd+Nug4nTy+5orUjN/kfvp79MyJ
g+R64HxkJdHLA+e8X/9aeokC/w019VQsJY8/2KqhlDyfJ/2WufMtpcK6h/Z8
O/TZYKiM3q8XTIXxMUlGTTJs8Hl9cwFhywMpzYwvnOT4PWRQn+8YIARXzN6m
dZxmAe5ndVU+D4ThpQePcjTI+ym0J8zFwYwKJYfpAkrk/Ib8yci/UwN157vB
+X7rlycieWDxjbNu9eR8uldHgjXzgdwft49J/+/fm33nNTaxz1DhKbE7HWKQ
DSgaKo8/CfPAigizELsr5P5vdHlbipYwTLgfvjhDzqciPTJpFqup8FrYtI4M
+XmXBxmTf5p4oJWaanKhHwXSwlcN1E8KwT1yCmlz5Hzq/eF4+vM5EfiU0SrI
pcsGMyeyJQsP8MC1AtajkeTx9BhTawJ9heERed6bb8jfTxbrfDcLqJDXlPdz
DXm+Lwwk75bJIe/n1fpJDuT8GD4QNdZXT14vWkGqqyEL95lmzqVvX5wvB9cr
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
0O5Hns+Oh4f1CCpUmJmpPUTO5xsDJfzk2+aAvtByqRByf4F8zHpvK8pz8vNE
rCTb33lQ4RXzBucmPyb2MWNZorOcAxmg8sgp1r/hefBKYDFdhtw/Hn2UmhiU
ToXWmk4nt5Lz67TLztxQm3mwfGiy9Dm5/vYf0o5LYJHHo6lPTSXP37bxLij5
iAq7q1e0XCLnb+RjHrlJbt3/jNw/b/XiZdWQ64+okOpt/kzsY5qXiXLZzxVi
HyMhv3fhfSqd4Flf8TAnch5kD1+Mlckn5/9NVibdsVTyed6x5n///q2pnXTA
Qmge+NvHX9tG7vc13saHjP3ggaNJVwqukuNJWfWqlL355P1QmH9ibRgT1BpF
aIhVzYE7dvanUj7TsI8RVsvzU/lEHr+v2r+YVCrcw5uw4E6Or/FbPl24sX8e
yM3E31tJXj/dlAH1D6M80GpY7cWXDDoh1HY+XPk+FU4EP4xODWdi/7L2eAt3
FPnnQwdgfOErKoxctmFZGXm8w1lpXfaq8yDI11Rhnvz7cjcaWde288DspWt2
aJOff5N4/m3ryBxYldAZUkzQQIbibLZgIQ8UKy/64UN+H+RhxgvkxqooacA3
UX7fpUwqTDYXrXoYwQQHUgiOZ17zwPDk+IfLxeT14zo5yhNOhTG6b651kNcP
+Rd/Y9PYHgEChJcam6VpLgD8Pm+Pdqh0nxe/H2wLz+kPwg+p///3hf333/8D
0qrC6A==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{481, 2799, 403, 404, 405, 406, 910, 754, 632, 540, 
            480, 447, 938, 782, 660, 568, 508, 971, 815, 693, 601, 407, 911, 
            755, 633, 1008, 852, 541, 981, 825, 1047, 703, 1025, 869, 1063}}], 
           PolygonBox[CompressedData["
1:eJwV0TkvpmEYhuGHj0jEmmgQhURjGCpKGkujYiQUCtPM2P+BffcbZvh+wWeL
KSgtDYmxNKPDDA1jLRQSx1Ocua/zup8371b+daR9OD2EkIYl3GeHcIcxxTgm
MInRRAiXDn5HDo51KfzQp2FOV4X/uimM6a54H3LxW7eKn/p0zOuq8aDb45VI
8Q5Mx3vza7kfefF6Xodt+cR+Sy7BCn8ze9AkX5otOJSzMkIYkNecXzYTyNct
2L3IXSjnn/kfuQHFfJcnzG/xucxH1+/Ln1DEV+3f5V5U8C/8Vm5DGT/h2eYw
n4nf0PyrG8C93B6fI76HWY8d+dS5X3IpkrwZV3IrjuR1+xU5A4v81exGjXxh
NmJPfnLuQK6K7807MRv/If8nD6IAZ7oNJPWZWNLV4lk3F/+h7oYPoRDnuk3M
Y9ruVvcBzulK2w==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0stTjWEABvA3NdSJGSO5RJQZm0ZNrlmqBamxyQxNC4tWFsaJxF8Quh7l
P6hUtsqlmyVlYZMRUTY2oQ4zCpkxfu/iN+/zPN85zfm+vuLGZN3VDSGEDCZZ
SYSQptfwnE/s8YFb/KArM4Qe2xSLFNhu8p1O1+7Z/lKh32eL7SGTtgV221pI
02FP2dY5ofey2TbMhK1WH6JYn+KjbZd+gxXabd22enmUMv0Vf2zTepW8yHG5
h1x5iHHXa/RBiuJv40O8X/2k/Iad8nlnmmZ5mTa5y+eSztysEGZt+5zn9CUu
6gf1RvkfI3q+XirP8Nt3S/TLcpbzpesFzkp9gWP6Ab1BXovPUt+qJ+RBxnz/
ijPb9tq1avkzZ+VLznUeyPvj82M+/p/0CnmWHfJ1vnFX73T9gvyIQ/o0v2wv
9FPxeXNUTpET/zbPXK/WB+K9x2fJe1u+fo2v3LF12NY4oneTbRvgqe2M3k9h
vCfe2bbrTXzhtq3dtsrh+M6xydbPE9tpvY+98fcwZ8vTkyzRamuz/aQ8vpds
tPXx2PaWbbb44v8HGHRmfQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwV1NdvTnEcx/FTNSskNiExW+vKuFK1ygViJrioWVRIjFJ0qM0fYG+JXa3a
MW6U2kW5sEdJbCpGona9fhfvft+fz++c5+lzzu+c1qmzR86qEkVRDDr7Mwef
46KoHIt5LgpRitoOnIYXyI2NokW6T+gkrw4fotuGQ7pbiNOl4TkW6XN05ego
r0IltuoLdMl8J5rJJ3FTV0ueijLk6LJ1I3khOsgX8VHXQV6Jf9iiy9f14zvQ
VD6BG7qzcnd+GzX5CLMcU/gzZPMsx93hg/kbjOATzT/hd/EGVaOoPS/Gh/Dd
chqvYhaH7zOT5IdoL7eSx/BvWCHXlf+am+WDzu8sz+DVzRJ9c3OA/AJ95bHm
D2zn9a014cdR4twpZqQ7Y60bL0UNPjxcF0zmT5HFMx1/mw/irzGcFyCBX8B7
6xfknvwBEvhy/MEmOc96H74NjeVjuK6rLqfiCTJ1C3XvEC8vw29s1B/QXUM1
eRIeY6F+gW4/rqJquNZ4hAXW5uveop28FL+wQb9P1zvsHTSSj+KKLlaegIeY
r8vQDeP5iJfPh3uqOy8n8vtoy0ebX7GE/8R6vtdx081qru91XX/+HL14W10K
r8AWuZ7ckB/BZeclyJN5JU6H6yV35bfCPpFbysPC/sF4uY78wMyQ5zl/pllL
V6prYQ6UX2Fo+H3m77B3eDuzKNxP5xTJPfg9tOGjzC9YzH9gHd8T7gFP5mVI
Cvsw7Gl+GJesn5K7hOcPMXwc7mOePNf6EJ4XroF8LvxfutbhfYAKrNXt1vUM
+ybsWbkwPKvhBRP2M+5hri5d9xKtwvsB37FGv0uXGPZNuLbhuQvPm64SKbq7
SNf9B8+knug=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1He8jmUcBvBj7723Y68oWxRSmRmHIiqcyuagYZQoKrTMMip7No2shlE0
SMMqs5RRVLas+P4+/fF9r+v+PWc8z3PfnzcxOSVpQKqEhIQUH5GlfOyXsxlI
S2qQmjSkpbSfOSDnMIhW1CQdZVw7KOcymHuoxa3m5+QaxvIw6SlrfkjO4zFa
U5v65uflWsbxCBkoZ/6LnM/jtKEODcwvyHWM51EyUt78V7mAJ2hL03hWNutT
qctt1hflx7zEvdY52KH3iOfQM7BVn0kmKlgflgt5kiTrrHyvt6OZnpotendZ
hNf1+2Ue9uj1uF3/V35CN70wL+v3yZz0YWc8kyxBf3rGu5IZ6c22eKeyGP14
07qLzEdffo7nkCWJDc9sXVH+JnvJRfIhWZAhenuZjR/i3cviJOnNZRq+1JNl
Ud7QO8u8/BR7TUP9kvyUV+honYtd8f9i3/RMfKu/RRYqWf8uFzM07oEWZmn5
Sp8W54JG1pflZ7xKb7JS2fyIXMIwOsS5oLH5Fbme1+hDNqqYH5VLGR57HueA
O8yvyg1MoC/Zucn8mHyHp2J/Yu/IQVXXjst3eTqeN94BOanm2h/yPUbQKZ6B
XNzs2p/yfZ6JsxH3S25uce2E/ICR8Y7j3shDdddOyg8ZFXtNE/JSw7W/5DKe
5QHuJB81XftbLuc5HuQu8lOAghSiMEUoSjGKU4KSJFKK0pShLLX83X/kCkbH
WeLuuCfza3IjE+lHOWqbn5IrGUNXmsZ9mv8nNzGJ/pSnjvlp+RHP042WZun4
Wp9Os3gW6+vycybHu7bOzW59AG3j7LNdfzvejZ6fvXoF6upn5Kq4J70QL8RZ
ktn5Ue9OKz093+gzaE5FKlE5zlaclzgXsf+xz7Gf1PM7Z+VqXiSZFvGu4suX
L8QUUmhnnYXv9FmxV3oB9uk9ZWKq/7+3q1vfAO+lmlw=
           "]]}, Annotation[#, "Charting`Private`Tag$1325065#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1ncYlmMcxfG3ZVR2UYoGKTMlMkOIzFRkl2igpaKBjJaRjCKbJg1KqBQK
7TIKlUSTVFJZRRmfc/nje/3OOfd9X+/z3Ot5q7Ts2LhDkUKhMKNoodCJuL1Y
ofAVfS3+5T/G67L9MER2GobJnuT/oO9GZazLWHSWL+GvQwEzZW/I9scz/OkY
LhvEb6fvQRV8L5suOwyj+UvQWdaFX0pfjyL4hK+FyfQs7ePpA/AsfwZW0udg
Hj1C+2B6B90L2+grUJVeop5a7P/3/kG/GfThGMPvVJvj0jyX2hAVixcKn/F7
qu35LsZ0VZfJ9pLdoG7iL0Mlvij/KV0bB/JTMp/0TTiCn238BLpM5pZ/Tvt2
+trMAV+PX0Wfi/l0Cdkt9EjjnlL/lN2LX+grM4Zeqp6GD+n1+n1IV8NY/jJ0
ld3Bf003RzHMkb0pK4vn+TMxSvY0/xd9Hw7HjxmLO+XL+RYojrmyV5Ojm7Zv
ZDfmeTFP9hqGyHfy96MaNqQvustX8C2xG+bLJma+8AJ/FkbLnuF30Q/gCCzj
T8dH9EbtH2VOMY5vlPWkL8TndHftPehv6ZvwE90Iu9OfqSfg3exV83szvUD/
t9SDsmdlL2rbQV+Hs+nV6nmooG1Bnlu9lT9aHWPss/Tf8r353uqvfDNU5qvz
X9NnoBz/MV9Ubc3XUDflvNHVs6f517Xvolvg8qypehEW0T307Ul/R9+MzemD
PejP1TqYSi/U7+38Hl7i62Os7Dn+H7oPamReZDPzHHiDb4yesrv4lXSr7P2c
P9k7svJ4mT8H42TP8//SfXFknidjcbd8Fd8aJXMmcp/gBXkB/WRH4ef0xT2y
1XwblMoa5f5Ijl7YXNK+V+/D/XgguTFr9G2L0nn/3At4UV4E/WVHY4usN+6V
reVvydnFopxFvCQvigdlx2CrbBZ/JMbzTTJf+W1+HX1r1jnj+RMxjV6sfRJ9
MF7h/1Svzzmm16gNsJDe3freRr+p/8tqMewje0jbb/RVqMIfyy+n62XO+Zk5
t2qbPJe6zfjZ9FG5S/gJ2v+mb8x9xjfN2aUvxiH84qyD2oHvmzlUv5fdljWg
G+c58h7qSXiP/kK/ydnzGMqfh7X0+fiEnqj9Fbo4HuZ/V6/GcfQ36pmYlbtK
vzk5K3lv/gr0yxryP9DtsC++zBnEUHkJPCKrmbMk6581lK3n22M/fJU9jgfR
R9uPeRf7pIO6P5Zkz2KYtt0wQHZ85ln2EPrKNvAdcUDuUdkUWUUM4xtgkmx4
7g08ytfKe8oeRj/ZRr4TyuR+kr2b+cZw/nxMlo3I+cRAvjb+kD2Sd5Jt4m9H
2dwRsqmyQzGCvwBTZCP5PfEYfwJW0GdhNr1d+1z6GEzkr8SAzAn/E90ZB2Yt
+bp4P/tK+zS6Ekbyf6k3oCG9Tr0An9J72C/tck/qP0otiX1lj+cd6GtQla/D
f5t7Mvufn8MXV9tmf6o7jJ9HH4uy/Fva/6FbohrfjN9AX5J357/IHaB2zJxn
rdTNsi45y3QTHJT9op6MD7Lf9HuProxR/IWYmm8UXwpP8CfiO7o+5uaMap+f
/Yq3+aswMGvL/0x3RbnMt+z9nEu8yl+EafnG8aXxJH9S5lH2WNZWtoW/A+Uz
N3k2jJbvhUGyutgpexwDZFv5O3FwnjG/hyfwqLZtsm6ogJWyD/I/DFvs9UH5
r5P/Bvl2Y6D+v+jXHRWxKv+vMEa+NwbLTsYu2QK+Jt7hr8aQPD//K90j9yDd
NPs5Z009JfNuXabzRdRWfHV1dZ4pewGvabsYM2Rjc6fgKf6U3E/5puedZb/x
PXFo7sf8Z8k3NN+nfFPyncg9nrs592TumcyHcb/rfxcq5S7KfwCMy77E07JT
s7dkC/njMYm/BhvpS/ElXdozd8qZUYfq+x+xHHXH
           "]]}, Annotation[#, "Charting`Private`Tag$1325065#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfcjWUcx/FjKyGjJCXKiGySlVCKqKySFR6UEQqRvbfs7MhKoVJGdvaW
ymzYUlZaojJ6//74vL6/z/e6z3nOOfd1X0/upI51OiRLJBLtkicShVMmEv+m
SiTewu1YyfuiKYqgKIqhOP6z3hXpsIr3QzOUwHVdN9yB1bw/muPe1InEu7qC
OMJnoSRu8LeRHmv4ACQhh+sn6R7Bd/x9lMJN3h0ZsJYPjPdx7Sf8SfzOW+A+
3WReCN/z2aisW8tr4xZ/FLfMPZAR6/ig+Duu+5Q/hT94S9yvm8IL4wdel39l
boE5vApfZ66DjubzMoEm5iOyPUq7LsF7mu9EK/MJuV5f07zdPEQ2ll3kZTlO
Do7PKpfwgbKqfF3+LEfLP603lAf5CNk2fiP5l3xXtrKeU07l/WUR2UaekT9a
q2feZ24Z9yLeT87VP2leb66LN8wXZDK8Yv5OdsBjrkvGe5kz4Uv+HN8R3z2+
Dy/NPzM/jb/4q3hAN40XxVE+D2WQXN9blxkb+FC8hlz66bpiOMbnoyxS6Pvo
smAjH4bWKIfyqICUrulrPSs28eFog9z6GbriOM4/wONIpe+nuwub+Qi0xYP6
93QlcIIvQEWk1vfX3Y0tfCQe033On8EV3g4P6WbykjjJX+Rfxz7Ah/wp/qW5
Ht40X5TJ0dT8fewr9DJflU+4Po15gLmvzCZflSflVmvPm3eah8pX4rmWv8nx
clT81nIpHySrxf6Uv8gx8m/rjeQhPlK2i2dEXpGT5OvW88hZfIAsJdvKn+Qp
ay+Zv4nPg494Vb7B/CJSoBn/IfYUKllPywea78E2/gLfFd8b78R95svM1XGV
t0de3fv8UZzmC/G0biN/CSlRWXebbpA5O7bz0bE3dMv5s7jGOyCfbnY8ozjD
F8Uzjdvj+dPdix18DDrGs4F01oboc2AnH4s34j7Gd8Yd1odauw+7+Di8ifz6
OfHs4Ce+OD470uuH6e7Hbj4enfCwfq6uDM7yj/EMMuiH63JiD58Qe163gtfA
P7wzCujm8bL4mX8Sr9dt4vWRCtV0GXUjzA9gL6/Fd8f9wsR4lvgX5pr4l3dB
Qd18Xg6/8Pr8W/Nr+JRX45vNL6OT+ZJMjebmH2Ofo7f5Wtxf199pHmnuJ3PF
+8hTsQ/ivLVeW+7hw2Rz2VX+LifE/5d4fuVKPlg+F2eUPCfHyv+sN5aH+ajY
x7Jn7Pd4Pqw9Yv7AXB7tzGflOf3L5v3m1ljCq/Mt5gZIgyR+NL5f7CnrmeIZ
M+fGPj4pzgndKv48rvOuKKRbwCvgPP8MNZBZ/47uQXzNJ6MbCus/1D2OC/zz
+L+BLPrRuofwDZ+Ct+McRlZrY/R58C2fiu5xPsRzFvc4flPc5bqxrsmL/Xwa
eqCI/iNdRVzkS1EHd+vH6fLhAJ+OniiqXxjnEy7xZaiLbPrxuvw4yGfgCd1q
/gJu8F4oplsU5wJ+5Q34AXMbLOfP8q3mhuhs/lWmRQvzsehQz3X38Anmh+O+
mU/LQ/HZzXvNw2WS7Cb/iP0dZ7v1SnINr4WbvDeK6xbHeYLLfEWc3XHOxX6P
/RGfEw3j3Iw9hibI7nUTvaYADvOZ6IMS+o91VfAb/yLuu24bb4Tb0JIfl13Q
x/yPnBxnuWv/B7lONgI=
           "]]}, Annotation[#, "Charting`Private`Tag$1325065#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HccTmUYBuAPZZVCtpAVsleyQ6FsocjeVLTQniqVlkr23qFssrfssiN7
r7JCRl3PH9fvud/7nG+d854vd/uejXskSSQS+ZMmEoOSJxLFUyYSv6RIJFqS
iV7WCcbIxx1vI5+W+1OT9bo6up3ya5QiKYP1JfQL5VZk5oRuA0Mo6dgiXWuy
cFK3kaEMYzgjGMkoRjOGsYxjPBOYyCRKeb/F3qcNWTml28RkSju2RNeWbJzW
bWYKZRxbqmtHds7otvAjZR1bpmvP/ZzVbWUqDzu2XNeBHJzT/UZd/S7r1ylN
Mqbpy+lXyB3JyXldW90Z+Qtq8buunm63/AZluIPndP+Yg2jMdOc9olspdyIX
va2TMFb+y/F28ln5S2rzofU9/Cxvc7y+vEd+k6/l7JSV3zZTMpUp1sPMAtwp
P29eNSeZg82BZm7m8JR1P/O++IzorEebRWIP8JPPLG+u0o8zO8fvNrMwkwes
+5hJ+ZFxsYfMfPztte3Nc7qv+FbOyRNyX/NeZsjbnddA/kN+i4d5xzpVvKec
nBfka+YQmvCz11TQrZa7kJsLuh3MYCYVHV+j70oeLup20lC/N64Z5UjBLH0l
/Vq5G3m5pNtFI/2++E48Qkpm6yvr18ndycdlXQfd+bg3PMluXWPdn/K7lCcV
PXTXzaE0ZY7zquh+jX1Dfq7oOur+kr+hDnt0T+n2y+9RId7XOnXcezk1PeV/
Yw/QjE+tMzBXnuv1VeX1sS9in8lZeTD+B8xkjI/rbOaP/ev8TnEvdRPNAeZ3
Zi7qyh+ZaWOfxH6wHmk+FP9FcT+9tol5QD/efD9+h3k/s6gYv8G8i2nBerhZ
kPnRW79o3jAnm8PNH8w8PC1/ZmZknjzPZz0qb4i9QoF4lq3vYIJ81fHO8oXY
h9Rjr66p7qD8AZW4m/n6avqNcZ8oyDXdPprpD8VzSWXS8JLupjmCZ1jgvOq6
TXEvKBT/C/EsMlG+7ngX+WJcS76P54j68sdmurg+8iizcOwd5z9tHtZNMPua
A8wczKaK9fvm3UwP8V3MQiyI/w/rl81b5hRzpDnIzBt7gubWn5uZ4nmMa289
xiwa99Fn1zA3x72I51jOFvc4/oPM5EyS/3VeV/lS/B4a8Il1+viO8n7Hn5GP
xJ6halxz6zSxd+R7eUW+Hb+bFiz0msd0W+IaU5gbum66y/JAGnJA11x3NK4f
j5KWRfrH9Vvj91OEm7qDtNAfi+9INdKxWF9T/1t8F4pyS3eIZ/XHrftRnfQs
0dfS/y6/SjFu6w7TUn8inj1qcB9L9bX12+ReFOct6xRMjv+CeA5jP/Ofc7ub
V2LP04gjula6k7H3eYwMLNM/od8u96YECY7ql7OClaxiNWtYyzqe9Lodzu1D
SZJwTN9afyr2BY+TMX5jfC9zNM/S3zpz7DF5rFmMRfEf5vX/A6WSKNQ=
           "]]}, Annotation[#, "Charting`Private`Tag$1325065#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4lGUUBdChu1GQkg4BaemUFkFBpDuku7sbDGwFRVpQGunuku6Q7kZa
cL0/1rP3OfPFzL3fTIbmnWt2ihKJRPJGjUTWxo5EGsWNRC7FiURGUpJ43LXv
ax9hmrke2Vhn39jusj6KUsTnnv16NrCRTWxmC1vZxnaaOPeK40dTmgTct99B
U69dNY+hDAl5YN/PPgq/meuTnZ32zeyu6WMpSyI+t3uTv/TOPHRcf3NUppsb
kINd9s3truvjKEdivrBLwQq9C48cN8AcjRnmhszXC3BYf4ef9Uxs0bfJDxmg
L5MlOKPvdp0W+g19PGv09wN9pszFafaG9yY/Dn8nkpi/lCk5wUrzZlk1/M/o
al4si3KOk+b9sk64F/+670AZnWPM9PoGWYlG+h+yIEf0fbI2OfUpMjNb9e2y
OgP15bIkZ/U9rt1Sv6lPoDyzzLnZpyflK/0tVundeOycQeYYzDI3JhdTzVnY
pg9ir+NamW/pE6lAMibbpWK13p0njhtsjslscxNyh89i39rutj6JiiTnqf0Q
+1jMMTflXf62/8zuTniGqMQbPLPfTxuv3Q3PB5V5k+f2BzhIW6/fC/8rqpCC
F/ZD7WMz19yMPByyb2d3P/x9qMps87v8rafkaz01a/QevHTOMHMcfjc350+9
EEf1vPyiZ2W7vkPWYLD+lywVno9wb1k/PLuu114+sDsqJ8u1sjwX+MA8R+YJ
zy/7wzMsa4bvaPifmr+RacIzx1rzlnBe+G2gp3mJLMY/nDIfkHX5z72Hy7jM
s98oK9NCXyDfC8+qno9f9Wzs0IewQi8drqkfcZ0O+sPw96IaqfjWLi3r9F68
ctwIczzmm1uSP3xu+452j8Jn4UNS89r+GMc5wUlOcZpO4TsV7kF10hBhpH18
/tBbUYAzju9s91j/jhqkJQqj7BPwp96agpx1fBe7J/r3fES6cK5dOtbrvYnK
aHNCFuifsVAvzHG9ENP07OzUh7JSL8N5/Zz7dNWf6j+wTq8QfnP0uTIvB8L3
W9bi7fB+QrJB3yqr0UdfKouH63LafFDWC78JRDOPkYnC+2KheZOswkXamBfJ
IuH3hBPheyg/5Xp4Dsy/yRzh+WGXeaf8iGH6Klk2PK/6YdkgPBc+Wzf5zO5H
1usVw3Or/y7zcVBPHz67np6Nel+iM9acmEV6Wwoz3fwOu/XhnHeP7ubn+k/U
IkO4n10GNun9iME4cxIW6+0owgXn97B7of/MJ2QkJuPtk7JEb09RLjq+p91L
fQq1yUQsJtgnY6negWJccnyv8D3Tp/Ip88z5OaTvlZ9wjczhM8iMbNb7E5uJ
5uQs0ztSnMuu29vuVfitoQ5ZiMMVr13lGte5wU1ucZs+znsdvs/UJStxmWT/
Bsv1TpRghjkne/QRrNbLhWcmfOdlQ25xx3X/BxDpPSc=
           "]]}, Annotation[#, "Charting`Private`Tag$1325065#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.865361029035945*^9}, 3.865445408672529*^9, 
   3.865445465281426*^9, 3.8654456787461615`*^9, 3.8654457684634714`*^9, {
   3.865445884836256*^9, 3.865445921420556*^9}, 3.8654460587696333`*^9, 
   3.865446443250679*^9, {3.865952125553069*^9, 3.8659521516667013`*^9}, 
   3.8659522247202935`*^9, {3.865952279668687*^9, 3.8659522923016386`*^9}, 
   3.865960380517995*^9, 3.8659604237811317`*^9, 3.8659604862431183`*^9, {
   3.865960526854105*^9, 3.8659606215087757`*^9}, {3.8659608307097435`*^9, 
   3.865960868038782*^9}, {3.865960935615129*^9, 3.8659609432706757`*^9}, {
   3.865961026919873*^9, 3.865961042898753*^9}, {3.8659618737415323`*^9, 
   3.8659619220130653`*^9}, 3.8659621773942356`*^9, 3.865962208141383*^9, 
   3.8659653341237497`*^9, {3.865966920464451*^9, 3.865966952803088*^9}, {
   3.8659670377118826`*^9, 3.865967084214981*^9}, {3.8659671567557373`*^9, 
   3.86596716982355*^9}, {3.865967354328431*^9, 3.865967365694789*^9}, {
   3.865967429099472*^9, 3.8659674436738024`*^9}, {3.865967497088687*^9, 
   3.8659675719317055`*^9}, {3.8659677533835645`*^9, 3.8659678198432693`*^9}, 
   3.865967879244236*^9, {3.8659679215246882`*^9, 3.86596797117278*^9}, {
   3.865968013975065*^9, 3.865968049366725*^9}, {3.865968179144141*^9, 
   3.865968295722787*^9}, {3.8659683292590413`*^9, 3.865968337405431*^9}, {
   3.865968399526526*^9, 3.865968431918147*^9}, {3.865968471686404*^9, 
   3.8659685928285875`*^9}, 3.8659686585365334`*^9, {3.8659690928773613`*^9, 
   3.86596912452522*^9}, {3.865969364031477*^9, 3.8659694647951903`*^9}, {
   3.8659695001958475`*^9, 3.865969589464244*^9}, 3.8659696214759865`*^9, {
   3.865969666100687*^9, 3.8659696876527815`*^9}, {3.8659714896133933`*^9, 
   3.8659715124820657`*^9}, {3.865971671047258*^9, 3.865971706849786*^9}, 
   3.8659741596178646`*^9},
 CellLabel->
  "Out[4976]=",ExpressionUUID->"efda1d4b-93b0-4419-a7cf-44cb5a379256"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
a3xXGqX9cX2Ru1wImSZcWGgoKoNiM+uWOKgJoRbbTSOc+zKIPbQkqWc38XxZ
T8x2LpRFsqfXPTI9RMSTR7aL9obLou22fz9yjgqhVG8kNi4lh1zpvxfsPymE
/LPwnfBHcmjwkK8V11wIVduHejzd/g9aQ39dfRU7hhtTrtac1uqBbwaF3z3O
sXADL253dxiAu1ZXF59hs3AKV+nxx8RheOqeYvvMmI3THhiVX6oYgWXn//iN
uLNx0LvC5HXdo+C5UHrlBSIfqlxaamLVxwKjooAEOxk2Tn1/uU6hlQNWdttU
5aNZuNZAiX8BnTj/OUdDy9rGsNEPx9PhnySR+ot9Gd+vCyLeIYlXIzuoKGjR
dMOq/RQUZ6W3OKGQijyu5gcMFlCQU5EOvypIoWwjx36dHuJ8SW5JGDaWQ7ky
C3dvPS2Exk61Vze1yCG2MS0m0kII/bhTdZBlew/wRsuutReG8OYL+cKzBxvh
tcYuLYsRJn4eZlvqENkOsaduNcTxjOG83b3a+t+6wL3Fd1CDPoYtT2e3hBf1
gkPfsg8nn7JweViKvz7/EIRopDheVmTjH5FnKvZHMYBhk/9dwZaNmY+FmY8j
mPBtnZ/aeuL+rKZsSbN8MwY31v0t6dJlY0enPy9MX7Ehpnm/ptUQCw/3flvU
HDsOG6I1XrecJuLv723r6rInQcehclf1rTH8o9dANyhjGhRG/j2pvzmKvcKm
hgcrZuAs1bJkyRYmVhlrWifiwoMKt6RsN3jOwNc+hXZ5Oc5DccYnmvdlDOFj
muMDq7150SVfkS+rFPtwuPH26RSv+ehPyoLbmT3/8KTaVwORO3zo0IH06tnj
TfieY9fZzu6FaDBcUkQxlx9tUNDaTnGQROXh7kH3egVQhaBz/PiAJNJokmLY
1RHPa9zLRsSeil7btw9WelPQ2Jcu490MKko9sPOjeA0FRTe//9biJIVujOhY
ZY0Q8dIkw9R+XAoNxyxO3yYshBRB5VSyrzSCSbW1D5YJIXn3hZ1G09KoI0f8
TuBGIVR/4/i9xUEyaGfmvp+XdwmhJzXuv9LnySLPz5RO5YNCqHeNg621nyxi
aTklDhgKocnjX9dp8suhPHsncV9TIbTqJmeSe10Ovb5/oP8Qsf8fCS/5dC6z
E7R3uKxX8hvDlyLHgpQKaXBwb2W9kh4Lr/G+5Zne1Q9TAUo+tjQWlglIKnFe
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
fBRLKVSmKbKIn4gvGpOb3CsHpJDLiIsWlYgvNo2lC3svSyOb9pWiDKJ/Tj12
byZyWBrF9C0+uoCIL8anR/ZtvUr0z6J7bIyJ+KL4Sf4cP1sG2fHJFO8h4kve
sRGLQhdZJLRm7OsSIr7keloXXpyQRUt/fijrJPpnc7tnohVX5ZCthFs4JuLL
Wr5fqqN6ndDZasxxtxvDp/be/+57lgbv9rptSNZk4fPHlw/KXesHuMA3W93I
wsn/QtblfaRDqpaU+KG9bLxX0Pld1fkRaK0bsp5PxJcl/Dyxho6j8CLuxfcZ
ezY+86msx9mLBSYbbs9bvJ6NHx5dtt7UmQM6tgmMax9ZuLiYYy3gMQFylpJ3
n4iysIfL1yN5CZKIbr1qdaKhIIq6sFo3aSkVzT57echjBXG/Gux4BZ5RkaHh
i6VtqRS03n3K+O5KKTT15tZ7LtF/ukmYGVpul0MGzVeWcoh+sHLhl2PyhXJo
sXrOuA8RX6733wxemzYE/poRcqc2snFgTdOR8G4GPLhlkJJO9O+y5z4s86Ux
oemf93cHor9fY+FU/2JqDBoao99nABuvpb41VvOjokQd/Y+59yjogY4Wmpwv
hdZarEz1a6Sg8pbgMr2SYVD3wBGPjxP5X5N/sXT7CKjmeOesI/b/qtQDcqvY
o/DV1jOk/Cwbo6crMpu+UNGFi+vohz5T0G0bIw/okENiewp18on4orhTYsnw
KwZ0vNl2wtiOjR/cjbR48JwJvidmhz4R8eVAyuncTWNUtC7q/F+9WgpKTNDs
dX02AiepvM7TxPvP6leaaWaNwvC7kOo2azbOy/t2kpFJRb37N8nq5VJQp8PL
QLVVxPOTXYV3E/VPtHpLq43yKNzevc1elaiPbKr/6OcuZYL6roMLbxPr/+bn
R/lWTUXajSKGzT8oqDdcfkEVk+i3NOWyjIj4cjQxMDDOnwnvzpm7hhLx7VnL
pRG9QSr6KxZUhKuI+ti41mBl4AhA/HaLRcT61Jejvna+EdhLFVsWTsQz00Ol
M5cpo+D94ZXiILGe3GD7HOvZEeBx6uhwJa5fe+UVulnMhItq7ueyif12bCg+
oPjzCNhlK999Q1xPRnFLj8BuJijUxu12Ij4v+2rGKGZKDiUmfbkZS6zvPWXd
Mge7szBR5rN4GXUI++vmpFQ5NkDMobItJyqZ+HBzyEu5pe0QXK2YturfKJ68
7Z7fatIFt0zna6GGMZx8w+p856FeOJp9aIf9baIfmmf28/e9QTD1LqOsl2bj
SIPBr57nGHBazWfM8zwRD9GbiyomTNAKfDW6lVjP7k0i7D63Mag43Z0yQcQ/
Ky0lA7YTG/hD9baNTLAw7YWqbqMFEf+2a7cHOrNwHqV+7XefSbi569gig+dj
WFSSp6LGbRpCAlfrDKWM4tjTKvXHH83A6puP30ieYeLzMWL8eSY8KMe789aB
Pwz8zuw7b6PhPPTaint43yo6zpKruOx7lhdl1qkL/Hzeh+lrF33LPD0fDR78
us00ogv/aLT8Ee/IhzQst/oZ9TXj8JVFLyfrFqJk3TCdRff5EbpMU1tyVhLl
nba8KvtLAMnv97ps3CaJXHZsVenGguh3ppAZnCLyf9QC27uXKKhKQXvKoZOK
Lrcfk1tOxL/xjMdhXeekkNb1i48j6BTkKD0y8b5PCjmpnanKpRD96lPNDKaT
NCoNvOGdQsQ/nSOJpu5D0mi7Z2pv6QYhJMmT+1HTXQY9j05et5KIfyLbt5ZT
x2RQ0JRnnQIR/1oEsm4/d5ZFnZqZwlNHhBBPbe08N44sMj7SVPqDiH+Slnb5
T93lEN+fm5uSifiHTHdFCe/sBM4fv/FnVmM4vSOAm3uEBntdNye1bmPhS4ma
s7OX+oG9mN8vvZ7oh8ZOiI8k06Fe+aSe9B6ins6RuTdjNgLt+V+Y74h4URa6
06raehQm5Xa0R1wk+n9aicx1FxYocmz6/vf3osgWtz0P7DjwavONoy/zWThu
beelx04TYMu/YLpGgoiH35sNCuIkUeDKpBvlhwWRRFTknhwFKjpsz/e7ZBkF
/dvp+743joo8j354b5JCQbyBeEXkcikUArq+N4n4V3ix9MHFrXLIZdS+4C8R
/4JFbvH25ssh5xwbC7v/9UOTppfOxg5Bq/+i0KENbGwSELDuUysDPj3YfUqV
iH8l3aM9s61MCPs9Vl5MfB+32xcE3o+OwR1OPGpDbNxw5StFypeK4kTyzlff
pSD7Izzi83il0MPBm/l8RPzTGjLJCnw3DC9vW/6OO0bUb7TXY6hhBIQKB9XE
if1fszGo/dXQKBz0Fct9eo6Nh3m22RR8piK5Oj7qUkxByGKRkuhfOaQvFDaR
RMS/sZ5ctnw80a/Iub38SPSXOtSKdTLRTChlTwyziPixNFfxxjYmFS1vdtyf
QfTbHvodRfFPRmAy5IfLD+J9wzNnVxSkjMLKxEL2PRs2vrC0Saz6LRW9cKkI
GMmhoFz5w6fPKIzABqlrzfVEvNP9IPuqb/koBH+w8HxBvNb0v7KmU4YJzMCr
oqHE+t3+PShIqqSi+j3p8q3fKSj2dsf7eIYcWmD7cgEi4guPcqHucg8mJAxX
ueYQ8cijb9Nno34qqnybbiJBxL8fPD5rj3iNwJ2OM8kNRPwSKKd9EeEyQJRu
fUOBiH+UP/zfx2aZYKhVtN6IqPdCNy8Mi+CMwPjyjUttiOtfn+6gCH9iQu32
Uqsp4vfXRu8/xfgwAhXcr4dvENfrL2v+rL6VCav2Zk15EZ8vS/jGc2FCDvlv
b9oUSqzv3JYtzUq2TPh+hKLBJT6vftdcu69nBMZYFwW1ic9XjD4QO5hC5Kuz
y3ZvIN6/r7TOLVSJCbvKOV03ifc7G7827RBkwu7f2e7XiNf+aCLp8Y8REB7e
HFfxv3rWNUy0eR8TdPs2HT1HvH/+9baXv7ly6AljoCyduD7Jr977FA4XE3Ur
ya/KTpRH+IcMAsmv7Ibqlx9u6QGSX+28ODX89xwNSH61qO0a5UkXDUh+Nd3G
z2dY0Qskv1r/oapZY/EAkPzqpvWiQDg+BCS/8sq1otyNpAPJrwrK5wcEu9OB
5Fcl+3bx6r0aBJJfNZT8KUrU7wOSX7lKWAWIRXYBya/aAtX71UVbgORXK15+
uXTv9C8g+dUlxo24j5/T5viVv+i1+H276+b4lX9UxHKpHV1z/Cr4UpElN5Y+
x6+mjvjV7WkdneNXCwqkluibcub4VeNj+YIzepw5ftVHu/TFb2IEk/xKY3fA
AP7dgUl+xRPinZCbZDTHr758PFAjodY5x68UAzac1ZwemeNXqWtCdXdeGJ/j
V5f+Sadcujk9x6+Ejmt9CMvkzvGrkNJtw+Ovpuf4lfjygq3Lz04Aya+unDmy
xMVoDEh+ta/nQKvYhgEg+dVp5urot7WVQPIrc44YpeJ1DSb51VZXhv7zJQxM
8iuPnIP9u/wmMcmveP7/v88kvyJfk/wqR39tT8XfPEzyK3lalBC94T0m+ZX/
sx94U9g7TPIrYUbXyuaObEzyK8nggONSblmY5FfyV4JHf1llYpJfNW+QTDpw
JwOT/Ergje/utQ/fYpJfMR6UfrttlY5JfrXimPejxt1pmORXtaEeDP3pYVDk
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
cxwMnmrP5EP7KL5uGyo5eO/nQnP5PH602dktrcuZjft7zX+GlQmjV4cKZ/9W
ToCrWdL6oBYRFO26vmKPPBccx95v5+0SRRanjzWpE/k+d/eJgZZ/YujLqwfV
ujzT8MgxpCmIK4ne0g93V2/jYtI/9HJ82vrMoQAbpsH6mE9lULzmCOvYi17o
Hzxj8dOlDrpnr/7Suk4DJZurjm3722CvTJ3F5+c0IH1FmcebbnBtiHzyf75i
tI0vW+kpHUhfsWedW2n3riGouUyFzcp8KJWiEmaczsY8kr8tLLfzo9MQGJH8
nYOf+xyIVj8ugiKcnUMNG6dA5F+jTfJ5USQlePV5WhIXtm/moSy3EENj/k/F
qRJcIH3H0/lHg1b4p2FerTGxld6V8Ke+I8HTvwdcVimz1tk1guvvouhgIn+R
PuTLNW8YW17SgfQhN0qfKAsxpIOSJcsChfOhJqWWpRLPOfjkzzXn8qP5EWfh
yuq6TjbW/9DUMpEngkaZl93HmqfhU1f39bxiUVTx/YH0lmQufJr27ndzq4VN
8yP2RL2gwdY781aG6LdC8Y49XgEhRP/vXN++Y+MwNFv0o7f76UD6lqE33HYO
pNAhzVqKZ1SQD20+untZFrBxws2dP77I8CPzUvWwD30cnHNC9JXQZhGUrmP7
2cN+CrqRqNwybVFUnpqbI0jU98ErVY81aouhPfH6L+q1uGCu8GH619VqcAnT
11WfocGxBuk7DWbNcHKnd+UmIh+S/qb5m/Hr3kQ+7XKXexhQzYfws5tx94c4
WPX98TOejfzIGE3EOgyw8JNpVy+RGRFUb+0fc0+fC4p8oYOH5osh5zwxFHuN
C1W8YuIKolTEt7Tl/Sv/GSzfCg1LLtfDin3u29460KBHY6CoewkDwC2CXhpA
B9IPdRC74BYVSocpX8lrroeJ+uZZ2Zpb4hxsHmM+Nd+MH12vdrqme4+DN994
9U7tuijC25vXaxP5g/RHE1W+nKeeScMe25yOXBtogMFS298xRP+1N+bomVI/
BigFrS+LjqPDlTgVaWc/PnRpCbu7M4iDu1qmU2XeiSJen5repDQuJPIJv9Vl
1cAjqRDzt7nE/o7f79tc0QJf1RvOy/jQgPRPH57tFVhHnF/mVxdvJj8/ivrI
2xbB5OCq4VfOZptE0XOmxAezYKLeHTCjqbQR/aBCP0XZnAakr7q1ZxW/ClHP
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
sPUXMD4A8uZHEQ==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0DkvRHEYhfG/JRQkJHYVoaNhrKHRKJBIMEaio9AMKsFIVJSEgg6FRqOx
FWLnA9j5ELZYOhK/KZ6c85z33tzJlA+N94ylhhBSkEBXVgidODIc4wSnuE4L
oQY7Hu5DHl7sn7ZePPBJNODMfmOrxS6PIh+v9i9bHx75FKrSQ1jgOWjkJTyh
/+rraOFrvAzn3r+VEey5tblt6v16hT6nZyR/j34gC+xZelwfkW+8Q27zKbnE
I3KFj8tiOShP5Gzyed/71qMY5k+eb5dbfEJO82q5yOMyV8bkoWxyK9Vn9D+9
W9/RN/RWfV0vx4Vv3Mk67LvFUOk+zzNRyLP5qP6uL6OOr/KS5Ob9n+R/gGe3
BJpxab+31eOAD6AIH/Yr/APdfj5x
            "]], 
           PolygonBox[CompressedData["
1:eJwV0MtOU1EUBuBdihMYSRwaEyig6AM40wptcUJISJyJQFsvoJEEpyamCsoL
gGFGgiOfwJnKVR2Jgnd7r7wATpCC3xl8Wev/9z49zenMTo/cbwkhxFigaBlu
D2GIj/ZtivEQLvPGxSydHOgPdaOU5AJJPulLuiRv5RxdnGwNYUa3b1/korwk
n+a6/bX5z7NN8wZ5Xdm9l/bH5inzirnC5+jd7LAq55l33sY1z70yH5oJfYf5
QP5rf07TM0fyGBX5Cf3s6svRO1iTb9LNkf5YN05VnmWAL/qKrp91+RY9HEcf
0jsn9DV5jhRf9VXdABvybXqjD0/M/ay+bn9Kmm/u13QpNuU7nI3u8t1ZXZ9m
S57kHC38cNbQZ3gnT9FHnJ/O/ugHeS/f5Tyt/HL2mz1nV/mgu8cFTkS/7T/m
9A37MzKc0T3SxXghX5KX7Yno+9pXzYL5H61SUQ8=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0btLFVAAx/FTORjiq5b0allgWzZlpl4DF4cMQoQsTaspEDVpCs2ccuwp
umnhIkJLQw9fNJT2dFLz+Tf4yFeB9TnDl9/v+zvnXrmek7fbaloPhhAOYATV
aSFcxoxhDwUOb2ESFYdCWMFP+y5O2G5iAkn7Mn7YL/JurKLB9hc79uO8CeMo
ty3hu72CP8QK6m1/sG3v5Zto51kpIeTrjRhDmW0R39x7FX+A3oV895L8qP4U
Z3kXX8Z1voctn0nIfhQ7f+FsA3d5Js/T3+q1+mHZLHvkaXnD2T05xCvlaPz/
yFK+gK++u5t/1BvlKdkuB2RSvnT/vnzDr8h//I58wPNkOR/V6/QjskU+kUXx
jrNhvUpf0q/pu/jtb+bKPpxz9tzZa/2Svq636Rl6Qk/VH6GQN/APuMB/4Yvv
GeT76OQJd8r0bP0xzvBOvoi6+KbY9JlnfA2tPN2d3PiOeI8S2zym3SvlHVjA
1fjG2LDnxLfBO5y3zWHKvo5j8XfG90CxfRaf7Z/wH+3jWug=
            "]], 
           PolygonBox[CompressedData["
1:eJwV1FdsTmEcx/GjQ9Ha84bardmBBDckiLaqtBIJiUTEKrFrR6wbqkhwgXJB
YlZbtWskEnvVvLdVh3Vj3vg8F9/+ft//85xz3vf0nLfHrCUFi2OiKGqCXv6U
Iy8xiibgmn4VDWhn0xRUIT02ip6i2rwebc0KcBZp5jW4Yj6Mr8KrsG72A3Xm
bXg+KjHY7Akumx/m/7CWd4mLoqH6SrwM+82+47N9u/kXLOQt7Gutx+tb0ZNP
5hUYxB/jkmOS5SGMtH4ofA89T/+rr9E760P0an2q3kqWoL9eZF4kT/Bx8gWf
Fa7Dv6HW+TfwG/p02Vkulvtkptxl/2p5hmfLRj5XLuDNw7X4enmRF8g4uUBu
kT3kJOtH9dF6uT5Qf4SLrttNlmKEtdLwP9An6n/CNfVOeqbeUt+BfnwFf45J
/Cs+Oc9O3oBC3syelnoezmCA2UNcsC+DL8ezsG72BR/Nk/hElKG/2QOcN/+A
RLNcnEY/8/s4Z57Ol+FpONasEe/NS3g95vMEn6WFPgGnkGp2D1X2HeS/wzPG
O9qXpifpxUjlS/lxfaxeEz6D3oB3jr0up5l3knuRoe8I55JlPEvW8TlyHm8q
m/N18gLPl7GyUG6W3WVOuDfyCB8lT/KZMoXfxVnX3chv6jNkV7lUHpTD5YHw
Tui5+q/w7Osd9MF6or4dKXwJP6aP0Z+Ee6PX463zd5R7kG6t2Nrn8KzxeN5M
j9E3IZln8xPoy++g0vH7+c/wvPP29gzSww/EY+SE9xdv7NvOa8P94XH2JehZ
4X6jj9ltVNg3kC/CI2SH9xevzbfxT5jNYx3fVB8fvhd6m93Cf/pIjYk=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1XWcFWUUBuClQbo7lpTuULq7FlQUE1tULFTsoEMEW6RTMLG7uxu7u1sx
8Hl//vHc855zv2/m3pnZu4XTZhQdX6ygoOA6L6l7eSnFA/JsJtOV4pSgJHt7
vzQPynOyh26UYh/zMjwkz81aunOqWUs+kDcyk9JMMSvLw/K87KcHp5m14kN5
U/ZThn3NyvGIPD/76cnpZrvzkbw5+ynLfma78ai8IPvzmfXd+V6+lV7M0rfm
Y3lLjscifW9+le+mHFP15XlMXsjF8gB25lz5znIPfpBXqeO4Tb5cHZYLzB7K
GWobPpFXqmO5Vr5EHcxm/tGvU4vYyiz9YrUPm/hNv0adkL3co79SHcEWirOe
SWzLdfD+/moFNvK4foU6mkXyMnUgf8lr1YlMzX1Re/KjvFodz+3yFerwPDfs
qT9Tbcun8lYulYfwb74vS+S+/C7fS3kO0FfkiXy3fL7cV30vfpLvoDdn6dvx
mbwt56ICB5pV4skcP8ejD2ebtefzPNvZT0UOMqvMU/JF2U9fzjHrwBfy9dlP
JQ42q8LT8tLspx+VOcS8Ks/kOcha+lOFaebVeDbXNWsZQFUONa/Oc/LyrGUg
1TjMvAbP51nIWgZRncPNa/JCrm3WMpgaHGFeixfly7KWIdTkSPPavJTnMGsZ
Si1qU4e61KM+DWhIIxrThEKa0ozmHOV4dXg5z0HOwTBacLR5XV7J85i1DOdc
s458Kd+Qa05LjjGrx6vyVdnPCM4z68RX8o3ZTyumm9XnNfnq7GdB/q74Wb6T
kZyv78zX8k25LvJQduXYuf9yP/6Q78u55ZGUyG+J/li1Aa/L16hjWJF7pg7i
73wWFub55xf5LkZxgb4L38g357PQmuPMGvJGjplzMJo25Ie4ETvklVnLGNoy
w7wxb8qrspaxtOME8ya8Ja/OWsbRnhPNC3lbXpO1jKcDJ5k35R15bdYygY6c
bN6Md+V1WctEOnGKeXPek9dnLUVcaNaVb+XtuQZ0ZqZZC96XN2Q/k5ht1o3v
5Fuyn6X6/vwp35/7K4+iJBuYXOz//1VdvPcfts28rA==
           "]]}, Annotation[#, "Charting`Private`Tag$1325177#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1ne8jmUcx/GHc5RRCqUdUmZCe8neZERSKY69jpC9K6OdlRENo6FsZZSR
lZ3Ilr1HGdmr9+/VH5/Xd1zXPZ77vu7rnFwpbWqmpkkkEpvTJhITmUVJicT9
GC+Xx3VISk4kGukO8AOw07xDckWslFvjQUzSL9Y9gK/lCrgeyY5vrDvIv4td
5h2WK2GVnIpCyGbem7qz/HBMNm+JnAffyBWRw5zeclqkl9PJTfhD/HsoIg+S
b8Vuxx+hlbHaWGlj4/k2fF7+XT4THpJvkTvw5/gq/GR+BP8kP5J/g95D69EF
tBed4vxL+byoL39rfnH6ldyOVpJz0j5yc5pEa9AZtCvNEM+XNpUb08PxzOj3
ckf6vlyUDpazoy7/C93jukdpFawxp4z+67hHPh//Hn8DCsu3yh358/xITHXs
b3I+fCdXRsZ4T+Y10x3hP8Be847JVfG73DaeLabpl+nyY0I8K2TCPv10LNcX
wPe6qrgB+/XHdc9jrdwufhdm6FfoCuIH+XnciPTupbnuKP8hDpj3t1wNf8jt
kT+ej3wjHpazy534C3HdeDf8Z/xT/Gf8vfjReVbSBzHRWAljY+K8fC7+Lb4F
TaY16Y+0G81sPANtITehx2It0h/kTvQj+WE6RE6lt9GX6Vzagx503X/46kiR
15lfln4jvxlrXi5AP5Az40V+Nn1Efxvfmb8Yz4efyo/in+ZH8Tnwk/OvooUw
yVh13Gf8bTkdbop3LLfkj/Mf45BjTsR6xHq5Ax7F7eZ10V3iR2OmeavjG8Fk
uQZuxmH9yXhO+FPuiMcwS78m1h6myDWRBUf0s/G7vgim6l5AVhzVz8HPqJzJ
GqdzMQ/zsdb8ophmbq3YJ3BMf0r3AjbInfA4Fuj/iDWB6XLt+LZxXH9aVwsb
5c4o6Ld+GM8HT8h3yF35y/zneEYeLefEr45fF+8EM4yVNDY23hWfm3+Hvy7u
h/8p9p/4LvhWfFP6t1yJTpQ700/kR+jQ2I/o7fQVOo/2jPmu9y9fGw3lTeaX
iz1G7hDvKPbcWHtyK3ozrUPn0CeN3cl346/w1fhp/Bf8s/znfC4sdI319NH4
NozVwf3G+8rXx54T36/cmv+HHxhrRP5UviM6x5+JZ5D0/9+PrvG9YZH+T91j
sTbll2Id40T8fUAV73hJ7J3YYM7jmGm8bqw/nIw9ChvjvWCW7uV4PzilPxu/
FVvkbvEtYJl+U/x2zJZfiWcQ+4n7TdWd4AfhtHnn5JewVe6OQuZ8LGfBM/Jd
cnf+Kv8lljtms/wU5siv4gFz+snpcZecWW7Dn4w9lZ/ED45vgh/G34l/nec8
rYttxsob+y72CP6hWBN8a5o17o/+TJ81djffg29Gr8X3TafLXeJvjVyMfiG3
pffR1+ivtDdd4Zpb+KfRIM5pfik6Tm5P68l5aH+5ZfxNim+EzqR3G7uJf4M/
xQ+Jb0weHr8ZZ5z7Qux12G6sJwobHyhnQzH5Hrknn8AYeaVjtsZzxi/yazEn
9hTz2upO80Nx1ryL8U3gL7kXnsMq/bZ4Lpgrv457cU5/Sfcqdsi9URyr9dvj
XjBPro8cOB/7FP7SP4f5ugbIiQuxT6Gqdbo29hPsMKc4FhhPib8XuKi/rKuH
nXIflMA6/U5didg35IaxH8c+6De2i3XAf4on5BHxnOO++fmx7zr2SrxDNNLt
Mm8C/1bsY7QkHYv1ce34zrBQboQBxjPGnuG4WbQ7zR17LG0f74sfhiuOuSq/
jt3y27EmsEG/K66BRXLj2A9wVX9NVx975HdQGhv1u3WlsFhuEt8FrsU/lK7Z
QL9X7osy2KTfoyuNJXLTWHtIII35Kfp9fD+UxWbz9+rKYKncDHljLrYY26cv
i9/k5siHtNhqbL++HJbJLZAfSdhm7IC+PJbLLVEAydge6wEHjVXACl0rFES6
OLd7bKjfz/dHuVh7ul66NBgXa1T+ks8dz5dfSPvQHc77H0T7cCA=
           "]]}, Annotation[#, "Charting`Private`Tag$1325177#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1mW4FGUYBuClOyUUSQkFCRFQGlS6pUNASukG6VakU2mU7pSUlk6lQSWk
kZRuvL8f9/U+7zOze+2ZszPnZGjcrmrbKJFIpFrUSGRA9Ejkk5iRyI4YkUh9
4nNMt4qBDOJbvuNT5+10vAEJOK5bzWA+c2yXriEJOaFbQyP9JXtvsvNA9z0l
9LvtX5KIk7q1NNZftvchBw91Qyip32NvRGJO6brrXsg/UIJ1uia6K3JfcvIo
fD5dXGbZqzJUV8q+V25MEsbak7NUPu14D/ml/CMlWa9rqrsq9yMXE+1vs0p+
HH4uOR6z7SvMvFSTZ5iZ2CT/ahZhmPNLm/t0m80m5nzzffaT1D7OTBGuOcvs
q8yP+YM/vb6n+Ur/mznBXGrm5iCl7NPNDOG68at9rVkwZK9tZl7T9WeRnJMP
5ElmalbLT8K1l+Mzx16dmXJmNsvDHS8TPq/clDf4S9dL9zpcH0qzQfeV7ro8
gNw81Y2grP6AvRnJ+Fu3ka/1/9oH8iHPdCMpF34++1ck54xuE6MYzRjKO+eQ
Y1+TgrO6zTTX37APIg/PdWOpoP/d3pyUnNNtoYX+pv1b8vJCN46K4Xdgb8Gb
nNf11kWYZC/DVl1L+y35O/Ix2Z6GNfJLx4fKCZhrX2nmo4Y8y8zClnDtzKKM
d34l87Bui9nSXGBm5y15vJky3IMst68284fz+cdr+5hR2M5kx5eZH4brRFn7
T+Y74Z5gQ7iXzEIcZZvXtzJv67eZg83FZi4+kqeYaVkrv3LuMDkh8+w1mS2/
y9ZwrzpeWT4ityJV6OxvskK+4HhfOSpT7OXC91vX2n5H/p6Pea0brkvEfHut
cK/qqoTPLLfmbS7q+umiMdVenu26Nva78hDyE2GC/nP9MbkNqbmk28FEqjp2
XNeWNFzW7WQSk6nm+Al9O9JyRbeLtvr/wnOHAkQJ10xfXX9Sbk86rup2005/
zz6MgkRlqr6G/pTcgfRc0/XXRWeavQJ7dO3t98P9SSGiMUKXmAVybaY5r6b9
tNyRDOH6he8SK+Xrjg+QYzDdXpG9ug72B+H9KBw+lz0d6+TojJSTsFD+JXw/
qCPPMd8L3yV5o1ksvK/3qxWeZeF+MTuZC80c4ZkQvo/hd2KmYje/2NeYBcL3
Jzwfwt8oMyY7+Mnx5WaecD9Tyf6zmZF9bLSvNwuH3Ws7mg/DZ2ZJeP5RJFwb
Mz3r5RiMkpOySK7LXDkrv4X7xvvUlv+SO5ORG+Hvpi4WP9srs1/Xyf4ovB9F
iRk+n76O/m+5C5m4qTtAZ/1j+2iKEYsZ+rr6M3JXMnNLd5CZ1HPsrO4bsnBb
d4hZzGYOc/nCeecc78a73NH9Thf9E/sYihObefr6+vNyd97jru4Puuqf2sfy
CXGYr28QnjtyD7LyX/g/QhebGfYqHNZ9Y38mj+NT4oafV/cGi+V6LHBeQ/sF
uSfZuBf+J9HFYab9c47oFrKIxSxhKctYzgpW8qXXXHR+L97nvu4o3fTP7eP5
jHjhOuiSsUT+IlwLOVt4jsqbzOLheRG+m17/P2+sRH8=
           "]]}, Annotation[#, "Charting`Private`Tag$1325177#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4VFUYBtDh0qV0I41Ip0h3iyKodEiKdIdKl9IiiIUS0kp3dyjd3d2t
guDaP9bzve/ec8+cOXEzNe9Uu2O0SCRSICoSORIrEukZR2Fq7EikHhvkatyU
szNbLsgh+WtiM1HPwEa5F5U46li9rEVjml6fN4nDMXu9rUcxXW9ADuJy3N4J
TnKK05zhLOc4zwUuconLXKGPY0VnhmM05C3icdVeX+sx+E1vRE7ic83e59Zj
MlNvTC4ScN3eDb6wF4tZ1pqQm4RMspaRTXJvKnPT57+0FpvZelPyMEcvxGF5
JK/xnZ6JzXIfqrBML8P5sM8tx+unx2GO3oyNcnVuyXmZKxfmiHzKbMUo+U/z
I56G32l24XV5spmZu2wJ19tsTl95h/kBT3ioXzY7hnsYNxKpqi+Xy/KAC/pZ
81P+Y7K+32zA3zzXb5jdwn3x97f9lv5yXG4z1/4RsymfyJvMGmFPzsc8uQhH
5dH8JX/MMzkR38tZ2Cp/TjVW6OW4GPa54zsH6PGYpzcnP4m5a+8eA+3FZ761
FhQgCT9Yy8o2+Quqc9/nB1lLwO96SwqSlB+tZWO7/CU1eODzg60l5A+9FYWY
r7/NMXkMyfhJz84OuR/v8tDfD7H2Ggv01hTmd70ox+WxJOdn/U12yv2pyUq9
PJfC7+GR4w0NzwEL9TZslt/ljlyEP+R3OCGPY49cN9xTOQVT5Bzskk+YLRgg
7zRr80i+YnbiPXmVWSE8T1zWz5ltecmP+gGzIf/wIrxDZvfwvnpmHjvfYXKi
cH4sCv9XzGb8G549fYtZM3xveKb1C2a7cH3lBWYxTsqnzdaMl/ea9cJ3yin5
RX6L3fJA3me1XpEr4d7wxLkM1xOzWG9LURbqxTklf0MqftVz8qc8iFqs0Stx
NdwrDsqNwrsjP3XsEXISlujHwjvBZ/LWcB15zD39otmeV+E+6YvMEtzntH7G
bBOuJRP0fWb98N6Ea6ZfN7sS5fqm1qfKucKx+Us/abYM7y+D9V1mHZ6Gc9Cv
mp35QF5rVuaafD6cL1PkQ2bjcI/lZ37bV3JSlurt2Ca/H85ZLsZiuSRn5G9J
wzQ9N3vkIeyWP+SJXJt1chWuh/vH377naz0Zy/T2FGeJXoqz8kTSMl3Pw155
KHX4x9+PtJac5XoHSpCOGdbysk8exof86/OjrKVghd6RkqTnub3R1lOyUu9E
Kd7gN2v52C8P5yNe+PwYa6lYpXdmu1yLB/IlswMR96y0vlQuzTl5EhmYqefn
gDyCj/nPccdaS81qvQtlyMhLe+Osp2GN3pWyZOKVvfHW07JW70Y5MhMJz7n1
dKyTu1OeLERjgvX0rJd7UIGsRBGdGMQM99ln3mCD3JOKZGOWtQIclL+iLuv1
qtwI7xaH5SbhHZBvmT2I6drE0v8HLTA4iw==
           "]]}, Annotation[#, "Charting`Private`Tag$1325177#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWYVGUABeABpLs7FglBuhuJVUo6FJGUEKQVkLCQFpDGlu5GkBSlu6S7
QZCULt/vx/ucc77LsrP3zkxU6671u8SIRCLRMSOROPEjkRUJIpHSHNaH05hS
/O2sCf/ps/mYuKx0VoYj+giaUJp4xCcBCUlEYpKQlGT87ufKclT/hncoQ3JW
OS/HMX0k71KWQ87e4b4+h09IwWpn5Tmuj6Ip/9idScB6uxyH9Xd5oM+lFylZ
46wCJ/TRvMd1uwsJ+cMuzxG9KQ/1eeFvTOi123nobT+S/UhHDtdmyV3hd+gT
9aIU1JfKVM7Xyorh3NlJO7380f5Wj6kPCvdXZpe55VxZRTZz/YbelZJ2Ihkl
p8vKckO4z3JsuC+yoMwnF8m3ZAXXj+rvUdx+ZGeWv9rzw3PTR+p56WM/lv1J
z247leuT9GKkttfJNziljyGW64PtV3nf/ld2IzF/2hU5pjfjsb6AT3liDyAD
e+w0rNcrcVofS3Nu2t1Jwl/2GxwPv4sn+kL6kpY/wj3hjD6OFlTihLPmPNUX
0Y90bAj3mLP6eFpSOTwb/nRelXP6BFpRhQz85Tya8/pEWlOVk85a8ExfTH8y
stHZm1zQJ9GGW3YPkrLRjuaU3pLn+hIG8NT+jIzstTOxKTxbLuqTecUzGBLe
h3xg35Y9Scam8Bl0fZxeKLwO+7RsxQs9i2tT9KXh86uP0l8Pv9N+Jj8nEzld
my33OU+tTw7vZ1k8/L9ymawuM7u+Wa8W3jP2pXDP5E/hfSO/s2PLoeE7QeaU
r8l54X7Ltq7f0T+mlJ1cZpcz5ObwnaGP1wuTX18c7oXzM7I1L/Wszqfqy8L3
kT46fCbC32I/l1+Qmf3h72dLeO1c1r+nHXftT0jBFrsaZ/U2RFhufxF+F1vt
GlzRf6A91cnGNuc1uar/SAdqEEV2XiUHOdnu39Ximv4TH1KTc+G5EoPf7C/J
xQ77bf7Rf6YjtTjvrC0xWWF/RW522rW5rv9CJ+7ZvUjJVvttLujtiMVKO7F7
+G243wy0X8gvycKB8NkNz1UvEZ6lvUvW4UZ4/7v2s/6rHkcfpucijz5ffuT8
P9mbVOF7xPlMuc15Cn2CXkEWkQXkkvDekrVdv6i3D7/XfkVmk9PCd4j83fUk
coxdThYI72u5MHwG5Neuv9S/orSdNbwuOUceDN8n+vd6yfBe05eH1+x8t6zL
v+Gz6PwXfYoeVx+u56azfV/2ITXb7Tpc0jsQm1X2ICJ+bmB47fxt52WPXo+b
+lS68MD+lDTssOtyWf+QOKy2B/M6e+363NKn0ZV65GOf8wbc1qfTjfpccdaR
uKyxh5Cf/XZD7ugziOf1jgjPmbz6Ahktu7v2UO9LWnbaDbiqdyIea+2hFOCA
3Yi7+kx60JCCFKIwRShKMYpTgoN+pjH39Fn0pBHXwnuJ+KyzhxEjPGc7ikN2
OvuH8L1CEf238LmVJV37H123IdU=
           "]]}, Annotation[#, "Charting`Private`Tag$1325177#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.865361029035945*^9}, 3.865445408672529*^9, 
   3.865445465281426*^9, 3.8654456787461615`*^9, 3.8654457684634714`*^9, {
   3.865445884836256*^9, 3.865445921420556*^9}, 3.8654460587696333`*^9, 
   3.865446443250679*^9, {3.865952125553069*^9, 3.8659521516667013`*^9}, 
   3.8659522247202935`*^9, {3.865952279668687*^9, 3.8659522923016386`*^9}, 
   3.865960380517995*^9, 3.8659604237811317`*^9, 3.8659604862431183`*^9, {
   3.865960526854105*^9, 3.8659606215087757`*^9}, {3.8659608307097435`*^9, 
   3.865960868038782*^9}, {3.865960935615129*^9, 3.8659609432706757`*^9}, {
   3.865961026919873*^9, 3.865961042898753*^9}, {3.8659618737415323`*^9, 
   3.8659619220130653`*^9}, 3.8659621773942356`*^9, 3.865962208141383*^9, 
   3.8659653341237497`*^9, {3.865966920464451*^9, 3.865966952803088*^9}, {
   3.8659670377118826`*^9, 3.865967084214981*^9}, {3.8659671567557373`*^9, 
   3.86596716982355*^9}, {3.865967354328431*^9, 3.865967365694789*^9}, {
   3.865967429099472*^9, 3.8659674436738024`*^9}, {3.865967497088687*^9, 
   3.8659675719317055`*^9}, {3.8659677533835645`*^9, 3.8659678198432693`*^9}, 
   3.865967879244236*^9, {3.8659679215246882`*^9, 3.86596797117278*^9}, {
   3.865968013975065*^9, 3.865968049366725*^9}, {3.865968179144141*^9, 
   3.865968295722787*^9}, {3.8659683292590413`*^9, 3.865968337405431*^9}, {
   3.865968399526526*^9, 3.865968431918147*^9}, {3.865968471686404*^9, 
   3.8659685928285875`*^9}, 3.8659686585365334`*^9, {3.8659690928773613`*^9, 
   3.86596912452522*^9}, {3.865969364031477*^9, 3.8659694647951903`*^9}, {
   3.8659695001958475`*^9, 3.865969589464244*^9}, 3.8659696214759865`*^9, {
   3.865969666100687*^9, 3.8659696876527815`*^9}, {3.8659714896133933`*^9, 
   3.8659715124820657`*^9}, {3.865971671047258*^9, 3.865971706849786*^9}, 
   3.8659741599587555`*^9},
 CellLabel->
  "Out[4977]=",ExpressionUUID->"3368465a-8efe-446d-932c-6c2606ad4347"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8659610922599387`*^9, 3.8659610956218615`*^9}, {
  3.865961325815102*^9, 3.8659613437903414`*^9}, {3.8659613901624837`*^9, 
  3.8659615902083845`*^9}},ExpressionUUID->"95c2d440-5f34-4096-8d7d-\
805c19f73e37"],

Cell["\<\
We were able to get this bad solution to the given well behaved solution \
after a few iterations. \
\>", "Text",
 CellChangeTimes->{{3.8653459472042875`*^9, 3.8653460042180605`*^9}, 
   3.865346104423029*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a4d3e002-6aa2-45cc-a329-b64caecefa39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", "IC2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error", " ", "=", " ", 
   RowBox[{"Norm", "[", 
    RowBox[{"ICs", " ", "-", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uBound", ",", "maxCount", ",",
         "maxJ", ",", "InitGuess"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uBound",
       ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
       RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
        "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]New", " ", "=", 
   RowBox[{"\[Tau]", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]Init", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"IC2", " ", "=", " ", 
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
     RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
     RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}],
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636127929494734`*^9, 3.8636129048647366`*^9}, 
   3.86361309340853*^9, {3.8636132740148587`*^9, 3.8636132890980425`*^9}, {
   3.86361367016436*^9, 3.863613704067534*^9}, {3.863614005426304*^9, 
   3.863614044030977*^9}, {3.86361407671554*^9, 3.8636140789588237`*^9}, {
   3.8636141197098103`*^9, 3.863614156970913*^9}, {3.8636143059493403`*^9, 
   3.8636143423397207`*^9}, {3.8636146524377003`*^9, 
   3.8636146681296897`*^9}, {3.863615502417285*^9, 3.863615703473082*^9}, {
   3.8636161037482653`*^9, 3.863616122815179*^9}, {3.863616300467451*^9, 
   3.8636163404706755`*^9}, {3.863616379759131*^9, 3.8636164322373734`*^9}, 
   3.8636164758294525`*^9, {3.8636165064106874`*^9, 3.8636165068755407`*^9}, {
   3.863616588161584*^9, 3.8636166296943207`*^9}, {3.8636166641123295`*^9, 
   3.863616732677436*^9}, {3.8636167693047395`*^9, 3.8636167704293804`*^9}, {
   3.863616826318534*^9, 3.8636168556931543`*^9}, {3.8636168995821395`*^9, 
   3.8636168999240313`*^9}, {3.863619302411866*^9, 3.863619416136552*^9}, {
   3.8636195563387823`*^9, 3.863619570937121*^9}, {3.8636197069376936`*^9, 
   3.8636197273581724`*^9}, {3.8636205744286833`*^9, 
   3.8636207335498743`*^9}, {3.8636207658335643`*^9, 
   3.8636207659625244`*^9}, {3.8636208211778917`*^9, 
   3.8636208543832893`*^9}, {3.863620930334037*^9, 3.863620936617031*^9}, {
   3.864135467525829*^9, 3.8641355031932845`*^9}, {3.8641358508757644`*^9, 
   3.8641358994820337`*^9}, {3.864136005621681*^9, 3.8641360284712887`*^9}, {
   3.8641361588251004`*^9, 3.8641361878597054`*^9}, {3.864149523908724*^9, 
   3.86414952549721*^9}, {3.8641504554392495`*^9, 3.8641504662587476`*^9}, {
   3.864150523008383*^9, 3.864150605221774*^9}, {3.8641506500782566`*^9, 
   3.864150690388214*^9}, {3.8641515284209967`*^9, 3.8641515289998107`*^9}, {
   3.8641516589627523`*^9, 3.86415165924166*^9}, {3.8641517275125647`*^9, 
   3.8641517616755095`*^9}, 3.8641517984915934`*^9, 3.864152052785297*^9, {
   3.8641521525610065`*^9, 3.864152184609634*^9}, {3.8641524131266785`*^9, 
   3.8641526257358713`*^9}, 3.864152761298999*^9, {3.864153148514683*^9, 
   3.864153171941102*^9}, {3.8641532143853645`*^9, 3.8641532502927427`*^9}, 
   3.8641533364128733`*^9, {3.8653433741568346`*^9, 3.865343389585903*^9}, {
   3.8653435025178013`*^9, 3.865343556974392*^9}, 3.865343662550641*^9, {
   3.8653439817835903`*^9, 3.8653439830341897`*^9}, {3.8653443150880394`*^9, 
   3.8653443220478144`*^9}, {3.865344369751565*^9, 3.865344369894519*^9}, {
   3.86534442575966*^9, 3.8653444262555013`*^9}, {3.865358620302966*^9, 
   3.865358628368388*^9}, 3.8653587956619086`*^9, {3.8653594336949434`*^9, 
   3.865359473096348*^9}, {3.865445033367549*^9, 3.8654450388677907`*^9}, 
   3.8654454578238106`*^9, {3.865445645297858*^9, 3.8654457040770626`*^9}, {
   3.8659521591313095`*^9, 3.8659521801135883`*^9}, 3.8659522440960875`*^9, {
   3.8659621904140654`*^9, 3.8659621913027797`*^9}, 3.8659622596528797`*^9, 
   3.865969703875583*^9},
 CellLabel->
  "In[4566]:=",ExpressionUUID->"539af9eb-2787-4ce5-94ed-3f323d9493e1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
tI6baPqQodOOJ3K6Cwzk005eehnXcZ6Gvd8/PNK0OxsMprftvPGAhSnezSvL
TXkOrl84JmiPv17dXpAwVTIOtGnuV1n4finL3ejbx1oydKjuaZ7G34/waTKJ
P0sq8P0SL7uB7c3IcJAcwHjWFM7CvE2U3lP3jwOTfoktWvj80HuFlbqSSoZZ
WyUaHuDXl/Bqr1/JTfrq0DCbm0feZd5PB8ES1JPy+PXyjP6sFDtKhpZV1F2x
0/j+PJa6wm/nGBhaOvjbOglfXyknMEkLMtSJXOn6coqBPNt4mtejGnw/ejD+
joX37BhYa7MA9PHPdzZc7ikVSYYKRhS7fny86y7+OpoVkgousbQlbnuwsLXB
osJF7WQobnJoBptjIO82HsFlT8f3/wd/9TjbOcSCLVrW0XsC8fu54fv+epdx
sGOtbNEm/HprOIW/mykgQ5nRu9z78O9HeLg04+NHCtrVMcK/icqu7P1pSsO8
px/q0mxfAm9dkxOP8M9XMz1SMXoN/36OFXqj+PUm/NvKp6GWjKv/9G81Ozd+
kdbzA8Tr9V83OSfoj6DXqaeeLonz8KJ/b95c4CnSSUGvCT9HvP4/DDD+gg==

      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwVzjcsRQEYBeDraYkYJBKJaGFRd21VVkSZ9FUbSRAGQUh4SkiIQZ30GCza
qszKqs5sDL47fDnnP/fd915uV39DXyQIghgmqE8KgjpeDfu0xgbBow/0ksGc
rcp2qTcS4dbWY/vQhymizZZv29RLeXMf0GZ7coc/msm8rdp2pTcRy5j7N3zG
nee97k99hGJm3Ams6e2eF+hbehlRPZl3+6D8tk2xoadzaG+Xz7Z+VvVUsvRJ
GeGMFfe2zAn/G1Hv1chr+75slssyhXPi3OPyT56Gn5eb4fdywb33++SX/VCO
yjWZRok+KxNZ1/dkHh3eKZTbtnI+3EPuH32aI3eH+0UfIJsFW63tRm8hngdb
J0X2HXcFn+5jFumi2LNdeyVf7hOW6OYfKoFEIg==
            "]], 
           PolygonBox[CompressedData["
1:eJwV0E1MjwEcB/CnzKEOkWRtTm15OXrZKG/HiLT883YkqXRgQ3pP5eXQ0MGw
tVGJms3aoijL219OeXcgSsvLMRxQ0cHnOXz2+36/z/85/J/U/EORg7FBEMQQ
JS8+CCKUGcqpYNWsIOj2o0x+6fdpIdc+ZNtDAu9slay239I38lt/QCvb7M9s
e5nDe1sV6fbb+ib+6A8ptI3rx0ijzRaxPZfzmcuw7bBtQm5gGdW2DFuPnMWk
Xq1Pymd4pBfpn+UyFnHVlmd7Ie8jkVN6wAX5g+dH5O/yCS7LKSyXz7lx3OWK
fsNNI0qN99a4vfab7mb3vJtAH1Oe14TX3u2edVvdhQzw2PNi94u9yy13m91k
7rFYb3Rn0yx3uKm0e2+7+9JWwCV5Xkg+7cZwUf7od0flH/JJVtCkx9Mi13q+
Vr4jb2Far9Wnw/9NVD+gf5UrWMI12w7bK3k/SYzYSm0/w+/KSo7b1oXfTc7m
r/6EEts3vZKlXLfttL2WC5nPqK2O9eF31LfyTx+kg132N7Yikvlkq2eDvV/P
YUZ/Sie77W9txSxgzPYf6aVo0A==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{349, 2644, 2640, 566, 673, 806}}], 
           
           PolygonBox[{{2643, 456, 957, 796, 929, 655, 946, 762, 895, 511, 
            783, 916, 593, 700, 833, 388, 564, 646, 753, 886, 481, 536, 618, 
            725, 858, 425, 455, 510, 592, 699, 832, 387, 480, 535, 617, 724, 
            857, 424, 454, 509, 591, 698, 831, 386}}], 
           PolygonBox[CompressedData["
1:eJwV0UlQznEcBvA/mbRwaKYZMw5SXVWIm73MIMvohCyjxVLpbT/oYD1YpkvW
kA6mUZaYUZHMGCPEJftJOFf24SY+v8Nnnu/z/Hvf3t7Si2OFVZOjKJrEEBuT
oqiQRkMD9dRRSw3VxLjMA36x0hvcZmFcFFXpbQzwk3z7LRZ4tk9/z3R9By/Y
YL9ky3Q38Jky233bD/L0bnJtlXqO+xDj1Nje2U67/3FUnya385z1+kXPW91T
3MfJcNfziVK93/OZsp2Ttj80ub+HzylbWGG7Lm/K+bLCs0cyk07a7H0ygWay
9QE5I/xtHAzfjxyT1fKt1z+Us7jCKXuPnJBHZLJMkWfZ5h5infuC182WHZy3
xcljpLtTZSt17o+UuO/5+RPu3+zXv+nL3TeYp5frWe4DjBKzvbG1uP9yWE+S
W3nG2vA7wmdw1zJCse2u7SvLwvfEXNte/TWJehFPKQif25YW/nd8YKetz/aF
pfo1cmx79Fck6Ft4whr7OVsv4yyxdZFt362/ZKq+mUFWh+/Q1sMYi22dZNl3
6cPE65t4zCr7GdsdRllku8oce5leyn/Mamhf
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl813McwPGtba2tUY4iRFm0yEI7SpFKVFtbtjI7hIWUbJIo0eUodOhA
KfetUpT7KHKFEqLkLDlC6NJB6fl++OO51/fz/j62736f72drXl1bUpOYkJBQ
5Uv0AF8+1LsZTE/aUockDnT/I72HKykgh2QauLdCZ1JDIbmk0NC9lTqLWnqR
x7Hm3+tcxnIhdTnI/GO9l6soIp9M8/U6j3FcRCoHm6/S2QyhmHa0MN+g87mJ
i6nHIeaf6ByupjftSeNQ9z7V+xjKuZxGOo3c+0zv5xpK6EB9MmL/Yo9iL+Iz
x+eI3y2eFz83vp/GHMbhNOEIjuQomsZ9z1itDzCMUjpydHyfe5/rg1xLH07n
OPMf9Blupppj4hnmX+hDXEdfzuB48426gFvoT7P4fczX6MMM5zyyzX7XF5lE
J1qa/agLuZVLaB6fxXytPsIIymhjtllfYjJnkmX2kz7L+Nhf6126jEtpa71F
X2N6PNN6r74fZyb2y/pLfZQucXC5XvJ0uy6hh+tUznd9sv4R71Jf1rM1mXKm
xB7qP7E/+q720vpU0tm6lf4c50Sf07O0TvxsJsQZ0N3xPvRtLdA0LnOdo1v1
dc5xncKM2Afdp8vJjPdvvU4fYyT51jt0KeWcYv2nvsKd8bk5wewXXcRtDKBF
nCPzr/RxbqCCrpxovkkXczuXx9mJs2X+tT7BjVTGZ4xzEufIvW/0SUZRRTda
m/+qz3MHA+NcxDky/1afYjTtrP/WN7mAU63/0leZGufR+l99L94LJ1n/pi/E
c1wnMdF1R92j71DoOp1BrnN1m5boG9pd63KX6876X5xj/UCLNCPx//93WXFm
9Tst1qdjj+L/IGWMsW6vO7VU39KeWo8K+llPi3fKFXFG4tnxTmKfY3/is5Ad
fwNxBuMdxrmMPWA/L7GSpA==
           "]]}, Annotation[#, "Charting`Private`Tag$939568#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nf4jmUYh/HXT4hQShQS0SArm8xoKSNZyc4WsvdKEpJKyJ7Zm5aiQqlI
RlLZ2bvMzPpcR3+cx/f6ns/7/Lzv89z3fcjZrGPNDskSiUS7pESioeGh5InE
dHNx1EiTSBziFqEh/xvXHlkxiqvMfWWuhSRs5F7ljpr7Ii8acQ9zM8wlcFhf
jEbc73oHZMO73JPc1+baSI6B+rW4hk2ut9ePmfvhUYzQU2KiubHrj5hnmkvi
PXNaHOF7yvPcW5hivhdL+MbyD64jPjTfhfvMQ2USPsY4fZa8P74b3nPfU/Ib
fpGsI8fIO/A5btEHyetyRXxezoi/izX4yf0d5HF+iewvJ8pMyGd+W6bCJPMc
+QCauCePnMWVwlG9l37BPAxL9Sb6LvNryI73uae5tea6SIHNXFPk5T/SS+OY
vgyj0QyPujabfxzH9eX4AK/gBeuhuWyBfD43x2fK4IS+AmPwDL+Oq4eU+Jlr
ifz8XL0sTuorMRbP8uu5l5AKW7hWKMDP08vhlP4xxqEK/y1XH7diK9caBfn5
enmc1j+J38rt1jvh/njH3HPcd+aXkRrbuDYoxC/QK+CM/mk8D26P3hk5MJ57
nttgboA0eF2/Ec8b213vqJ8wD0B+tOUe4xaaK+Ks3lu/aB6Oz+LZ6nvNXeLf
MGdEzlivMjk+NH8kc2CCz1eV38d+xVhzBtxmHixvypVytJwps8cexS/ue02e
jPUiB8pJMjO+QAF9pLwVn2CyPlfmirWOdu4vLBfxC+QT8ZtlOvzlWh95KfYk
ppqzxH7gm8t9XFc8EOs19gjGx7p3vZr5hzgnkBZv6P/KD7DD9U76qdhTKIhX
uSLcYnMl/K2vijXJ7de7IVf8Nq4692OcDUiHX+MMQdHY/3plnNO/wOTYlyjm
2lL+SZzXv8SUeK/x/OL7oDO6oCu6oTtq2hs94qyJvYni/s4yf+MpXNBXYypq
8Bu5JkiPnbEeUIJfrj+Ni/oaTIs9x2/imuJ2/BbPGiX5FfozuKR/FfuMO6B3
R25Mj+8VZ465Ge7A7/H9udOxdlEIfblS3Erzs7is99Uvx3mEr2NP6n+ae+DB
ONO4F7nN5leQAUP0BMaY/4hnZD4T6xKTzffgMfM7MjU+xRR9nswdZxX6ua90
nL38QllFjpbp8Rn+cb1fJL9MjpTTZFZ8GWs1zgN5kF8se8oJ8m6swkOx72SK
2Evm2bHXMNN9teTPXHOMM98ZmN+UyTDWvCveu/lsrFUUxig9Daaa+7v+eOwh
83O4ovfXr8Tvxto4b/RD5l54GLO42twWcwvchd2xtmJvxXNFkThTuDLx3MzP
46q+Dm25w3pvPBJnBVeH22puiYzYww1E2XiOelVc09djNury27hWuBt7uUEo
F/tYr4br+reYg3r8dq41MmFfrAd74HVZPp41Vx039O8wFy/FOcS1QWbs5waj
QpxBeg3c1DdgHurzO7i2uAcHYq9xf8c7QdF4B1zFePfmF+LcMN8eZwg/QF7l
lstRsR9kNqyO89P1dvII3wd5MJ97mfs16f//D92LP7kheCLu02sigR+4BXgT
Q/EWhmE4RuBtjEQl963x+ReRDD9yC9GA3xnnGbLgINeDO2ceimJ4N851TIvv
Jh/EOrzjs/8BPr5BfQ==
           "]]}, Annotation[#, "Charting`Private`Tag$939568#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWAFWUYBtC77NId0rVId3djYACKgIEKLiiCwEoIii0KqCAtbXd3t3Sn
wNIlId2N5/1x9nm/Z2bu3Im7qWnpnQcmJRKJDH/mJicS5TMnEn+mJBJDaEwe
TuvnMZ8FLGQRi1nCUpaxnBWspILP+cuxQ2lCXs7oV1HRtr+tH6Ep+Tirb67f
aH6ZW6jIan0l/VzzMJqRn3P6FvoM81hupRJr9JX188zDaU4Bzutb6jeZx9GZ
yqzVV9HPNz9KCwrSUfefnEMaF+zXSrfZ/Aq3UYXbdSflezzEOvtV1S0wP0ZL
elhflJ9RiE7WB+Vr9KKvdRZ+MF90fGvzFvP4uEfmAnQx3y8z8Y35aVmSquY7
5Km4b/J9OUIW4VX6Ww+UOZnIr9YjZVlm8o/zVZML9aPlCDlY5mUKrax7yktx
3fJz+aQszlXxnOQh+Xrcv+jobe4ns/Kj+ZJztDFvNU+gKw9YJ/OtuRp3mk/L
DxjAesdU1y0yP05rCsdz1h2Wb8T94LL92uq2mSfSjeps0NfQLzY/QRuKcEW/
kZq2LYlroS1FSZBh2yY2s4WtbGM7O6jluKX2e4p2FCMpZv12OSneCWqw0/61
9cvieXENxckUs36HnBzPj5rssn8d/XLzM1xLCZJj1u+UU+JeUYvd9q+rX2F+
lusoGe+27oh8M+4zKbFNt0tO5S5qR+rOyA/jHWGPz6unW2l+juu5z/qy/IJS
8d5bH5VvxfttLkyfePdlNn6KY2UZMsdnyN3ypXgf5TBZkO7mPjKFCXwX1yxL
MYM61t3lWTlWfhTvgSzKNNKt02UuJvGb9fMylVn861rqy1X6MXKkHCLz0d6c
Jq/ILylNF+tj8m0epL91dn42Z6G9eY+cxt3UjdSdkx/zMHuds4FudXwXbqAM
WWOO7ySncw/12Gf/hvo15he4kbJkY79tjWxbax7FTaSSPfbT75UzuJf6HLB/
Y/0682huppd1gq/M5ehqPi7foS8DrHPwizlHnMO8T85kuLkQPeJ+xLPk+3jP
ZGkaxHXI83Kc/CR+Z7IYg+J+yNxM5ve4PlmO2fF/1XdtEv979C/KMXKozM9U
Olj3lkmM5+v4vckSTOdq627yhHyXfuSMa9btl7PoSUMOOldT/fo4Fx0pTy4O
2XaYIxzlGMc5wUmaOW5DvLt0ogK56aA/IGfH74NG8Rx0F+SnDGaQdR7+iOcX
35k5nPK5/wMhNu8m
           "]]}, Annotation[#, "Charting`Private`Tag$939568#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4FGUYBuClu7sFaZCQ7hAQEFBaQKW7uzsNMDAw6G6Q7u6QbpBGOkVE
Be/vx329z/vszNmzszuTuUXXOl2iRCKRilEjkSkxIpGasSKRYzEjka68yQPd
EaYyjenMYCa1HHvcMd3IykPdUTrqH9nHU4H4zNK/rz8hdycbj3TH6KR/bJ9A
RRIwW/+B/qTcg+w81h2ns/6J/UveISFz9LX1p+Se5OCJ7gRd9E/tX1GJRMzV
19GflnuRk6e6EbpYzLJ/yEldV/sz+Wsqkzi8ty45y+XWzHNcXfsZuTe5eKYb
qYvNbHsjTum62f+Uv6EK0+zZ2C4nCf+nnIJf5TYslAtwSJ7v/HryWbkPy+Qi
5JZ/NDOyQd5kVgzv4/hRZhwOMsdra8zSNA7XzcwTvnP22reb73IhXBvndjef
6/ebE80VZvFwncNx9ulmdo6ww77VrMw5koZrZqZkhbzeLEdbeZFZkMPyAu9T
P5wj9yUPP9kzsVF+7vXRclzm2ptwRtfD/pf8LVVJFq6VvoH+vNyPvPylO8si
GobPpuvPW7zQnWMxS1jKMj503EWvDyAff+vO01P/wv4d1UjOcn0j/SV5IPl5
qbtAL/3f9u+pTgp+1TfW/y4PogD/6Mbo4jHP/hEXdb3tL+UfeI+U4XejS8VK
uV34ThzXxH5ZHkxBfra/wSb5X6+PleMz3/5x+P3LedknX/J6H/kfeRIr5RLU
kGeYOdgpp2KinJpV8gazPO3lxebb4XnAb/ZdZvVwDcP/6e9/ZF7R7zWHhGtm
Fg33dzjP/ouZOZzLZvtm851wP/Gf88eZCcI9wAKvrzXL8Em498y32C/vMKuG
a+ucvua/4b5glVySmvJMMye75NTh9yOnYbXcIRzr3I/tV+WhFOKV7lNdQhba
m3JZ1y/8f+H3Si3SsFr/if6aPIzCvNZdob/+Vfh+eJ+04X7UN9Vfl4dThAhX
9QP0r8P14QPShc+ub6a/IY+gKFG4pl9Hc6/dtI+kGFG5rl/PBjayic1soYXj
bzlmFMWJxg39Vlp67Q/7aEoQnZv6gfoIk+21Sc82fSvdbXkMJYnBZ7pELJKb
cctxg+xRmGKvQ4ZwT9nTskbuyHbHtbbfkcdSisn2LGyRY/K5nJjF8jqzLM3l
+WY+Dsg7zWrhc/h7g82ooWdq+K7MUtSVZ5m5OMru8HnMKuFZQsZwD5vpwjOL
tfaNZgVO08m+xCzECY7Yd5vvhecCO7x3G/Oufp85LjwHzGKUlqeYb7JVjsUX
chKWyC1YIOfnoHzb3xoiR2OavR6z5dzskTOF54WcnnVy53ANnNPWfk/+lDLE
ZrwuKUvlltxx3FB7dKbb6/NGuJ/17XT3w/dJWabas7JN3mJW4ixx7BPMZCyT
W3HX+cPsMZhhb0DmcI307XUPwndJOeJyT7+HvexjPwc4yCEO08F5D8O1ojzx
uK8fro/JTHtDsjDJnoH1cheWyoXDdy3vMWuEZ0Z4/jj/fz7uQC4=
           "]]}, Annotation[#, "Charting`Private`Tag$939568#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Hf8V1Mcx/Fve2gn0tIuKgqVlpa0h0S0VBpCS7SLdqhoamsboUGDBtKm
iIzS3tFetD0/f7we79f7nPv9/e4995ybr23Xxl2SJBKJbkkTiQOpEokP0yQS
ubE0dSKRJW0iMZK/wK/IV1DOWBJZQE6RNeWD5v/iT6K0fkzPKcfqj8v39RSy
n15JZpL3y1mynsxifj0vj0f0n/S75Cj9TX5LvoY0KGp8ZvzO+N+yNS7zBUhn
brB+Nw56lo9kHnxhrh1KYo/eGMf5ZGTFBr0CfuaDUB+H/P5jY/fiS709SuFO
HDZ3BJ+Yy4tlxjrgIWTDRmMVsYMPRgMcdf1CY/mwXO+Ih7FXfwon+JR4bmyK
dcIvfAga4h+9Da7wD3HM3/tUz48V+ov4l3dG0lhHfZ9sgpN8KlJan/565lgj
fbN8DL/yu82N5kP5bfk60qKRfkq2xb88r+sm8Y94ej6EV5bZZQk5V9aXx93f
Z7FPUEpfGWst39KryU76f7xLvHc9mSwop8pasrT5/fxplNH/1nPJcfo0nooP
4FlQjM+W2Y1vifvBTp7d+Bg+jCd4T35H7FP9dOxr/Mc/xgn3+3ncA77SX0IZ
HNCfwT98Ou7BVr0KfuPD0Rgn/X6RsUL4Wn8ZZZEDPxirit/5CDwVe9f1i40V
xir9FTwa5ybetblTOI0zOItzOI8LuIglflcEq13fGeVifXDJ3NI4J1ijd0F5
5MaPsfb4g49EE1x2/RfG7sNavSsqIA+2GauOP/lbeDq+A67/Ms4vvtG7oSLu
xfY479jF38YzsSddvyzeEb7Vu6MSDupNcYrPiH2Fn/Qa2M3fQVOc0dvhKv8k
9oy/t1wvju/0V3GVd0Xy2M9xduWzOM1nIrV3P1DPGudP/1k+gb/4KCQx30tP
F7/Tz8r2uMbzxfeLL+QZ+NB49/Ie+YCcF/fmnlbE/sdDxtbFd0K+Hesne+jX
eLf4zugpYp/IabK2rBzfFP4cyupn4n3J8bEe8gM9jXwjnk/eGc8v58T5N7dD
1sSe2J/G3+WjeVLem6ePv62fkx1wnX+KjOaH6TniWT3DyngmfG/uNVTBEb0Z
zvJZKIBf4oxiLx+DZrju918ZexDr9ddRFQXxazwn9vF30Rw3XP+1sZLYoPdE
NRTCTXOr4ruBjXovVEdh3DJ3G4l4b/GMWB3rjk28Nx5HEew0Vgf7+XtogWRY
Y+xhbOZ9UANH9eY4x2ejKH7T6+IAH4uWOK93xA3+GZJjrf4ItvC+sRa8O1LG
PtOPyRY4H+fKmk/gc3ha/ibPFudP/13Ww8H4bph7j4+Le+Z9eEWZIa6NPRH3
JluZv8BfxKP6TT2/nBz/W36uZ5LD4xskc8Y7kvNlg9iL5r/hpWNN9K16NvmO
3i/ek3wVqeJbZXx67DXjx2VLXIizb3win8vv4IP4XfGN0P+Q9XGIj4/1Mt9X
z4jn9YuyE27xRUiJb/Uy+IH3Ry2c0FvhIp+HYvgzngGH+QS0xiX9Jdzmi5EK
38W5wo98QOwv3gOpUcT9zIh9ImubOxn3hUt8Popjl94QR/hEtIlvCtbFmmMb
H4g6KBFnNd5trAXSIX18O+K8xbvA935TDtv5G6iLB7DbWCMc5ZPQFpf1l5HA
Ej2z+xzBc8XZ4Qvi3mRmc/8DmyhAfQ==
           "]]}, Annotation[#, "Charting`Private`Tag$939568#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361103972989*^9}, 3.865445422662055*^9, {
   3.865445460925819*^9, 3.8654455200369153`*^9}, {3.865445694161232*^9, 
   3.8654457264389095`*^9}, {3.8654457751293397`*^9, 
   3.8654458752613173`*^9}, {3.865445930590624*^9, 3.8654459730440483`*^9}, {
   3.865446061236844*^9, 3.8654460689573755`*^9}, {3.8654464469315023`*^9, 
   3.865446455577737*^9}, {3.865952161175655*^9, 3.865952182002981*^9}, {
   3.8659522359946814`*^9, 3.8659522660000668`*^9}, {3.8659523006049786`*^9, 
   3.865952342510551*^9}, {3.8659523726628895`*^9, 3.8659523935431986`*^9}, {
   3.8659621960792484`*^9, 3.8659622764384995`*^9}, 3.8659654667182627`*^9, {
   3.86596970915989*^9, 3.8659697322444935`*^9}, 3.8659715219700255`*^9, 
   3.865971717628332*^9},
 CellLabel->
  "Out[4572]=",ExpressionUUID->"94eb21f5-debe-46a2-bb61-70ad933a055b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxMnHk8Vd/3/w33modrVkmSCCWVJGHvNEmopJKhMoRIJHNEESWhKDMNkqmM
UaZtds3XNXMVGUIyk9nvfB6P7/H+9U+P9Tjdfc7Za6+1136t52mnqZ3uLQY6
OroANjq6//0tHrz2IU70kdr63Pw2psv0ULOIWWfYEoHLU+1ZkYoMsIFTkZVg
TAEHQ/k35tgZoXrwqZJP5zvB0egO8pdsRnhr/zLnAc4+IBF7oStZmQC1pW9N
C54ZBOoneTmcvhBgVqunU43SCDBe+fXIi54Ij/HKpBO8xkHUrmNdF08RoeXK
q9iP+lMg7ssJ2SpnIrSr+n0oXXsGPLhlJ08XRYQBBky71+7MAZnCi2Tbb0Ro
Vv3A4oDVAmhoVjj1nkKEpcxbLtpcWwSlqhpSacNEeIDH+82o4zJY07h7yHed
CG/Oqu7VubMKVNuv13YLMMF3cZUi/16sg85HBFGhA0wwO0i5h6pLB+cSX1rx
6jBBx3zVC7Fa9PDnpIM+gw0TRLUfZ54ZMkD6jdnXnIFM8PaZo0W39RnhLD+U
b05lgjFJB77aWBNgjRFTg2YjE3w5W/TI3oUIVdIF5FgmmeBwipOzlQMTPPa5
9J8ZOzOsOP0q4vFjZvh279xebUlmSH+++1ewNwuM7DlzyliZGdIdz6V/68YK
g6prQqlnmOFToX/aVH82KK8mc6FQmxnaG5iV/fNhh+Pl0M/iLDPsf6RgDl5z
wBM51xVWjzBD/tDI7mfvOOFMoXvjqhAzTCTJuFVHc8Hzu934mP8wwVKHHaek
Urlhht/Lvz8+McE4sbciqnokGHMmcduJK0ywyGOZzopCgo52167KzRLhznPM
q7uu8sCDYNB82z0izGmSft7VygOtt8PH7f0EGFi1Li9mzAvPVYb+1pMjwND7
o9Y3abzw96WpJ4ftGaGHgCi3+DU+OOw59eXCOwaYLE2sdezjgwev3SH9TKGH
THP0W0qv80P9sc+Seul08JN85sO43/zwfXupug5hA0ibpuis2QpAYue/Pk2X
VdBz9nvW5T8C0L3EZMeHniVA/eC+D9wXhLY3RS1vlS+AxeyLKuIzgnCl26gu
K2oWbHxz+Op3Vwgm3R7jPqQyBc7Jnz7lMS8E77w8qCvvOwKqjffftrkvDDkX
zeIOePWBLxn2/zY2hOEoO+fU8EgdqH3Zc2/EMh3wE7qaOGvo4dPGosHLV1rB
ixZmm1QzRsj0T2SCcJgGRnSW3hYsM8Jraekbu2R+AZXH3y0vuhIgnde9Q1Ng
GHTo7Fj/3k2AzrOXeH8bjgHR9+lSc7uJ0JewZ14qYgIs3lVx77hBhH9uFlnJ
XJoGf75Re5yeEaEHyWXvFeNZ8Lu+8uJ6MhG2Lfr4Oy0zQZoit869Lczwl2au
6jN6Fmit1TvPegBbPxoaM0JrLDBsl6zK3HFmeDKtXeo7HRss6tmjzaTFDFeV
9rEMEdmhSIK/VS9m75k4FxrNwQHTQus03NSZoTubZbz5Nk6olm2wfUGaGfY2
9ycniXJBhQEZzJ3MMKdU4obLLm6oHnDpy3wdE9wYD78xwk+Cct1HB+89YoJf
dBqCdF+RYEFgRZyUFBOcHPBer+TjgUkgl0fiKxEqM1/I+PpdGGo4hZRXRnSA
GmWf7+OW8aDe9mRtczA9lJlYWki7RgUl3HciqpQYocSJA1evqHcDILTxW6ST
Ef782+qXsq0fZDOZNzgbEKCkns0rnxNDILr9gMyFSgLkHxw5oa85Ch7o/Nxq
xY/FP7u07pvnf8FKh2wIzyUilJbbwzjSNgW6X574dtubCJ1t9mc8bpsBQ5ws
FkrvifBH8+r63VwmuK+Zwe4FLzNs0ZD4QyxjhqzkW7VtsszQ+9zLsZZiFnir
LLXfSI0ZvneuCttbxAq1254rKGkyQ/U9vKk9VWywYT3jaQwWr1oJHSlnyeyQ
RXUx2Pg0M5SraqDX7eSAp++ruN7H/OWapaq+pY8ThlSXtMlxMcN9t6XuxP/k
ggt1mXu30ZjgzUQpBo8xbqhcndSn+poJJubltp25T4KH/9mt6wAmeCWjaENw
BpvvIu+jv1uJ0DsLBYa8EYYxx/in3+hh6zKF5Um21A/Qp/zuzKttBNhiHeAa
qzQAyMktKZphBNiV7NJqpPIbHFROp5VPEGAnA+pzsv0DXPnrHysrEmHymmTE
94RJ8KKuhJJnQ4T1O9hJHth7Z2qod7CIMcMZLY0QjuMscDDSoGbgMDY/JzeW
DI+xwqxRE6ftp5jhcP9w/qmTbFD9ncW6AjYfuWc1bk2cZIe8pa+0XM8xQ4JS
yYO/Fzjg8/YqjkxVZlitQ6fqcp0TChp9mn2wE5vP6Sc8SsZc8LKTr03+Pyao
vFVc97wlN3yQ21QXlM8E5wz7WrppwlAJ7XTb20AF5ECqxrxlMHj3gDAU40AP
V9eEvPUNm8Ez59VT0eKM8NDtAvYNjS4wYyshKVbFCN8HWdbahvUBTw1CTJMm
AearjRzXrhwEw1M5LTz5BGhmlE0LKR0BIpbvGsTYibAxKNlbm/gXJJYMKepq
ESE5zJhyOnwKXHBVIac+IMKZCPaZiJczQFi/LUA2jghN1b7n24QxwRJ5/1U6
bmZYf6bn+Mn3zFDVgzttGxZfsOHrcGY8C5TXYCq+rcIMmw3VzllEs8Lrb+w6
hLD8PhTvu3rlExts5LP6i7D5u+4VmyuWyA6nDh35s4rtDywS9NnkXA44Xdcx
3KbADKve2wQ1l2DzJ2/28BAfMxwrTHLILuKChWdZ2vMGmGBI4IcPzbXccPWj
8u3sOCYofkfWrcyMBN/9iNo7qckEAwSNvEE/CYaKLzApDxKhxNN/y2u+wjD6
SwWxN/UH+Ed5ddRIrhc4iDHcv8FOgG/YtxfezPwFhJbCBZ/5EeCdsDkfyeJh
oPEwkjo6SIBSD565fRkcA2nxfPFqckQo+OhTlb3oJBgLOrht4BYRXgisrnMV
YYYpBAe2auzvsXMbw5o7WaD+/tpnjw9h81O1a+GoCCs01ptceXOCGQpUX7/n
Jc4Ga5AhTxaWv66V5ufe3s0Oi05bEiBmC/L5+VfIccCsU5mHDkJsn007NPFX
hRNKT8rv7trNDEP6s42nVLkgJWdLTM4aE/xn+0Hf7BQ3bCigDlmXM8HwA8Lq
GnXC0E/+0WKNQhsoqbkzMd/LAg9t65w7jI13/6XOj5kfrLDocXL6QWz9xmfE
X7s5zAZ3Pu3Uvoj5R7mGJ95hjB32z2fc9D/JDPWsoi70LHHAPr2m/pZ9zLCk
rHvN04AVjiTsHPHD8kHe6l0ChwUb9C2P4wvCfs9HbeO7b84Oay2g9RMsn8wY
LdsJ3ueAv1oHiuew+uCiX9It2wlheF2PweyUKQVUyd+zZLLyAg7Jz6N7zejh
IPHTSTkaBXBw+Dy4KsQIlT3oLC7Vd4Jblx8KLhQyQsJP+TtNF/qAC+eX1Hp1
AiTkJG456DcIXARO3jifQ4ABEcLS+zxHwNpn6htDJmx/oowKSZeNg/6zcrrd
GkQorLGouOAyBWLvNXGouRFhRvoSb4LdDCgd/le/JYYIExzDha19mGDlVeil
wMkMNaoVbc1eYet4K8/fXClmKMZFHhQLYYFwX9hbi2PM0ErHXdIngBXm8FWU
uWlg+aFH9WNYOBv80N48XYbNx+873iocr9lhlkvMjW/Y9TlqFDshkQPq7dV9
ZK/IDP9GPc7Zl8kJaU9u+8YLMEOyxahTURoXrJ324r39mwkmeZk4ruZzw/0t
azd0P2D5tGqodsOQBC8+I79/f4EJJpxNLWnpJEHCB54F9IcIFxz4shQ8hOHF
28wfC9p+gvWBjtCMTBr4afEyfxsjAS4aDhuX2f4CFhZuUh5eBJjLmm3I7jUM
3PuuVtJ+EqBO3kSl5tsx4Jd/0myXDBE2lP021uqZADsltp8fNCXCV2UfpV2w
OvCOdEiM6DZmaFFnwGvNwwIlCy+Knj2IzQ+z4lwSByu8fZ8qXIPtx2nfo7Ri
eNjgp2OyyibY+pZZu3/jkwA7dGh7MxuK2fF0tzkztnPAQy5yk0bYfv/CsOG0
9F5OqCkmFDGJzXduV62PlhwX/PKgWS6Kjhm2Cw0a2ipww9ywXvP8aiZoJaKw
9LBMGD5Ooj993LIdvGXzGjdvZIGjAszftQAzZPMN+M7dyArN3fnV8rH1aD+u
zxDXzgYtb+rMPsD8U547J3G9C1uvk6Lmbli+Py6kkCw4isUfl41p6n4s/hj/
roxrskLXu3E9bdh1ncmUn3sus0FKElurBfb7Qc7gwgw9dlh6aq8OAYunB5q9
8/SmHDCPj9vIAMuH4vcqRBKGhOFCWoq+SEQzUL7NYH82jRW2P/fJSsPyI795
3aUteWyQfPL5nmxsvLaX+fKH89hhRl4TkwKWHx+2ir8xPcQGh0cbshax+Xr6
hJ5r72F2eKz6mnc/dj9aHC9j+yQrXJ5vv/0OsxsdhzPEF9jgk7AKTxFsPDG2
Q9KTzmzwUg5zbApme0cHflH8JwyLqN8PW15tBKWuXxL2WNmB6ZDBXkcjetj5
bEIyMoYCGI4+5k3hYYTFxF2hay86wT/tXuEr3xihgr+AKt3+PhB+I1odqRFg
0sSTJwkWg6AgJeXwrUwCjFM8d37FYAREJMK7U4xY/TL9bODN23Fw2+ruPuEz
RFjy7tSYttUU0Dj90pzRlQhJBfYfkq/PgOiD4euc0URYGex3ZtSdCQJd8QIt
DmbI5D/IcD8A2yc4vqUyYOshRK7ZTP8pCxwKOPj9F5ZPcs4Ih/E8ZoV61Pda
Ulh8xbtFuWUHs8GI+e2tJdj7pg3c23gUyA6vtD7eyoPNt3XK77x3sRxQLO/b
YSXsvEEnFFRtmMwJv//R3mgSxPJZwTMX9QQuWGpi6ao8ygQV3EpoPNncMOe5
3UzURyboNVt2X1SfBCnD31WdLjFB+QFqX2wrCcbO6Au5TxLhdat3nBQXYch9
0sBk2+E+8Nh2ucTgPg1wzUwfm1xnhHsIdXKz536BjDdcfmMPCNDw5KtqzxvD
wIpgul2nlwBNL+8cF344Bjx8xc5x7SHCpAF/6fzvE6DZ92PKDRPs/NIbpr/A
wAx9TqUHa2xlhhLPWZLcWFmgmfExmILVYyFS4H4fgRVGpMo/vYHF32KWUr4M
KxucPWZDOIytH75oyqEqTnb4yeLLynfMNncxoOwW4IB23dzD41j8EQ5tna3a
xQnlR0za5/Yww9rL7W/cJbkgZ/P0TmbsvpV3fI1nZLlhb9bVoO4aJtjMU6a3
tVgYPh/q9RGn6wAk2ac2MVUsMGT+UnwbVmdd8dwjFVfJCscMr1q7Y/F3LeBr
e2EjG0RW1x6+wPzzdN/w7xYKOzRebz34F4uvbxPel3P6OOC56Lf6L+WZIUli
wV3iBCs0C1R85Y5djxrR0M7TYoOtE4tHz2O/b0j9E9KkxQ4XKCZJAFv/sLTx
m8s1DjjE1xjMjNVjzy10XUG/MOz6eWKt6CAV+Jm+7e34wAr5q3fdNcPWwyr9
nj1K6WyQ93NGRT42XhRL2mzKF3Z4KGWPdBQWf7UNJYzTMmzwxvnGlHZsvux3
Xf+luY8djuonC/L+7/wRkWFv/psVPrmbcMoGu38u74knxyfYYNtG7V4lbLw7
jM1vPO+ywSW9rZmxmD0SspWNOiMMy5XUJSSDmkCjaj/FKZ4NyrYxJP5vv7hZ
svqDcysbrHzvNhbwv3jXWd3n9QNbz8/UBi2x6wwLHA5RxmzwjWUE+X/5S7bq
rtdyMRsseZgokIzZB3t897Qew85LUld3C2P2UPszGuM6G2QYu6+6jo3XSnpd
cNOLDU65mbXkYNeFEtd1o1eEYd5U55aLYg0gj0V6h63VDVBn6aZSrE8Pqed4
Ixo9KEBX9J8nhYsRemvmJFPvdoIDupcNGXMZoVaP/0dh0T5gfss16KsKAS4/
dyrovTIIetTN+v+mY/nhibnpr7MjIDB5LuMbA1Z/0hvUNASPA4OO0WeHTxNh
mM54udtN7Dyj57f1lguWH2Cazd4rM2DZev2qfxQRXtm+/iPJmQlej9vt1ont
O0MWBQ3uflidktzGlySJ7ZfFl3c5+rJAqke8/FssHxic/F3b6ckKOXvPK61h
/gsjkwfKnrNBz6G8H8XY+3LFj/WpPGWHX40YlFUw/0sKcgXZR3LAn8KPU6Ow
fMDWxtfs8JET5v+RpFkIYeed4WuLhLdc8PRv1hs7x5iwPDsZIpLODduK8x8X
JTJBroAD5H1XSHC4SraCpscEF9KHpx5TSbBI+sas3jQR8ppZFcQ6CcOmx5L3
ZA36wMms5x37sXNNZsFx3fZVRgj1VcPZj/0CfJMcv0XdCfBL/6O13PPDYNvV
w0UEGlaPJihvbNwZA0mW/j30Ulj9OXeVezppArSef06IuUmEJ204pr6uM8H2
SCjQi52nGW1+OjwissDjUhYaBlg+IOeVH1ylY4XvDtpskcHyQVw68/Q0gQ0u
2hUsbsfWA8vYemwbKzsUytcm1mN21cGWzD4SB4w8/fnZIezfozhY83oHJ/wk
7r/ohNX7rXxGb1+Kc0E1VX2pQiwfqITr/ciR4oZnFk+jkVom6MfxjGGkQBjK
Htmx+ECrA2gUcMh+K2OBZxObHCOxfLDq9s/4VikrTPd0jL6G5QOdrgFYX8sG
tQItLr3G/DM2cr0mqJ4drjRfatqN1Zf3DT7J+tA44NWWjV8M2Pto5LgrQ8AK
J7+zqmlh+QAOCfk+1GCDjAk77NWx35ctb1n5ocEOA0jEi0ZYPL73OBN18DIH
pFJ7K4ywfABNtkhy/hSGUg738la8qGDvDTv++HhWeEavbVwVWw9TF668OpPK
Bn+ynfpUhI23Wi7RdiuFHT63mpuvw9aTfW2w8jdJNli4nzGj4n/50yFQy0Ca
Hd77Zm4qjdmNYV6fZAdY4bHt7zTOY/dPMbk3eWGMDUbW9nCdwsbjpXvbcNKa
DbKI6Ci9weyY5/158VPCMMrn2mImPwWUBXIfexLNBmvHdLaUY9eZiuoE2gTY
YGwTMHPGxveIlYkI6maDLyU8VByw60kzPUkm19ggv5r6h3v/2+8FYkdZC9gg
GNh99wtmd3ZcuhF9hA3+CqBHLJjdvfvbab5lNvg3ZjmdE7PdOc1npB6wwRa6
PdwZmF3/tpLu9pIwfBrp2TNc0ABSZO5wJ4SyQRHS3P7/5SfzY/53PlPZYLzV
DtYnmD33x01w6gKWz/kdDA0xmyV7qWhPNna/RngqD7OrmBhu5jqwQXN6H8+E
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
LLeEox5puUY6fj/aD2ZewSlXzi5UfCok923oEFhn/mvxK78uVN0W+HEvewyM
boxc/PpcF9K6G/Vr3ogPvrebV1tIncdElaa9lHbyQ68WCT1lJxaIGjDal2Us
AAvdpo9ZMpjgrnp2vhkQh/KO00bl88Uod6nu8TtMcci153D8gXg2EovQTG/S
kYChGgahv4//r09qi4toiYVLEfGZpA2YW595+gV4FyWvnom5D8pun9ANSKxD
ZgXX6YU9A6CKNbo2dwe13p/jz+xcOQL69s8+rafmz9rERAevt3xwYk6Wv5Oa
rwLtYtqbYqn1inE32cuIBR65CW7jchOHP5Jz66c/laCuxPDEjjFxOFKRtWHD
RzaKVd8/b+AiAW9cM59//qaE9Es5TofLNwSwkP63gM71TzPAH1f/zPK2OiTZ
bmnRxTsE7Pdc63t9lVrPTiz8zQXHwO+V+0WPXulCqiHm5tqr+SA0i9MO4WeB
2jcyl7mU+OE7tSLjEup5lCnjOPQqRRzKvLV6GBDCRp/+vPcBatR4c0RHlQVS
573PE+/O+b8DJw03S46nUPvBqiF/86lBMMIXL6ROnTdpDnxWbhuo9ZNbcnYZ
dR41e3fSteAbH/ToWpfsRI3PkcbnUiIiEnDZ7TqZsVw2ujTMWua6eBgccFZa
o3y7C22/1xNb4MgHVZuzIiu2sIDZqzofAzt+2HKUu/afHfX3F67au9eKQ6Et
sXdO5rORycqcftd9EpBPTU88eR2b+FD8HQyujy1oAY8idunO370Ftv8bPbg0
rQ69S95tnNczDB7oGB/6SI1PykiB/eBjPqgoPzaxYz8LyB1sy56M4IcWFlYT
FWYswLIziRAfEIeRdxrOm1D7mey47qepb9KAWzqSOVFdh7YtyX9xrfA7qP16
1TXrEjX+Lw0jOuZHwY9j1Ud7rlHv36fq4SbJD3215j12UOcFerrjqQsrJWBQ
JNin9ZiNBA6/V3J7/AbosN18pt7Xoep4ozHj8REg2nH3uRN1PdS/e5xb95kP
Di2899XagQW2Bx/9vWOhBLzLfZl5vpCNnquschH8NARovvVv0wKp1/f0XMvc
zw9PyxkLcFOvv1PWZutTJg71hrmOW6VT+x/Gdq1xr2igYOqT8IGaj7arli/l
cRoBEqM/O3dS12PcOeqMYBZ1/a9e0Xt8nNrfTX9iJ8yIw3XPvSIEqN+P+a2v
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwVzjcsRQEYBeCLaG8xSCQS0RKLumurMlqUiaeM6kiCaAlCooeEGHiY9Bgs
2qrMyqrObPje8OWc/9x7X15OuKuuMzYIghjGmAgFwTivhn2a44Lg0QvdZDJn
q7Jd6vXEc2vrsn3ogxTRYsu3bemlvLkPaLE9uXvIYt5WbbvSG0hgxP0bfcad
593uT32IYmbcyazrYc8L9G29jAU9hXd7v/y2TbGpZ3BoD8tnWy9rehrZ+qSM
54xVd0TmRv8bC76rkdf2fdkoV2Qq5yS6R+WfPI2+L7eiv8sF977vkV/2Qzks
12U6JfqsDLGh78k8Wn1TKCO2cj7cA+4ffZojd6v7Re8jh0Vbre1GbyKJB1sb
RfYddwWf7mOWaKfYs117JV/uE5bp4B+ff0YX
            "]], 
           PolygonBox[CompressedData["
1:eJwV0E1MjwEcB/AndWhWhxBZm81mKxzDhlBHyvu7bl6iUp289aIXSR0sHAxb
GxWVtZmtkFhEcRJ5OXgLoxzRIVLyeQ6f/b7f7/N/Dv9n7u7CTQVTgiCIoIfa
qUFQQ5GhmBKWRgZBux+tZlR/QAOb7c9se4jjra2UZfYOfQ2/9Yc0ssXeb9vL
NN7ZjrPcfkvP4I/eQ47tq36MJJpsW23P5X1M573tkO2HfJIUymyptttyJmN6
mT4m1/FIz9W/yUUkc9W2zfZCzmYGNXokF+QPnh+Wf8rVXJYTWSSfdWO4yxW9
zU2il3LvrXDv2G+4a93zbhxd/PW8PLz2dveM2+jOoZvHnue5Q/abbrFb7yZw
n/n6aTeaernVncc17213B2z7uSTHh+RaN4qL8ke/OyL/kk+xmHN6LA1yhecr
5U55HeN6hT4e/m969YP6sFzCApptO2wv5QPMZNB21DYSfleWUGlbFX43eT0T
eh/5tu96KQtpse20vZJzmMUn2wnSwu+ob+Cf/oRWdtlf23JJ4LOtinT7PX0j
k/pTrpNlf2PLYzZfbP8BlPhrfA==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{352, 2698, 2694, 569, 676, 809}}], 
           
           PolygonBox[{{2697, 459, 960, 799, 932, 658, 949, 765, 898, 514, 
            786, 919, 596, 703, 836, 391, 567, 649, 756, 889, 484, 539, 621, 
            728, 861, 428, 458, 513, 595, 702, 835, 390, 483, 538, 620, 727, 
            860, 427, 457, 512, 594, 701, 834, 389}}], 
           PolygonBox[CompressedData["
1:eJwV0k0s13EcB/Aftlr0dGiztTnowTUUuvWstvTk2oOY0BPluUMOhLbUuuhR
JQezqJSNFNpaKz1deu5UdEYprW69vofXPu/3++fP35/kgrLc0tgoimIYpTk+
ik5zwlBLDdVUUUkF5dzkMX/Y4hv0sTouio7r7Ywww2b7fbI8O6Z/YaFewBty
7TdsKXIt3ymxDdt+k63fI9NWpqfLp5ii0vbZdlGOlZtZIOfzml36dc/b5Nly
C8vlGsYp1oc8T3I7OGf7R538K7xPt5VNtjtur5vhlnr21E2hm3b7oJvAedL0
EXdx+N1oCJ+PO+lWuJ+8/ombTCcX7ANuDE3M1xe5l9kvv2KnfM3rlrpdXLXN
cs+wTE5026iWxyiSH/n6s/JfTurT+kb5Lqv0o3qqXM8E5baPttbwDyE3Mk/O
4yU7ws8I70Gu4hsHbA9tP9kQPidW2o7oH5ir7+MF28P7ti0Jfzu+UmgbtP1g
vX6bdNth/T0J+l5G2Wa/YnvAFOtsPaTZD+nviNf38Jyc8BnaBphkra2bVPtB
/S1z9N08Y6v9kq2fCdbYbrHCXqIX8x+Zr2gg
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1HmYjmUUB+CZsQ8zDIZEhEJlzJBtFNFCkzWizAxlJEIoWwmV0k5JC7JX
SmlfKUSKyt5CabGVfSlSEbnP5Y/7+53nvNd87/s+z/mmesHgzoMSExISbvQR
WcHHd3IGg8jhYpIoREXXv5czGcw1NKQwZ7m2Sc5iCG1pRF39ffJdHoh7UYRK
+pvlbG6nHY3J0N8v32M8N1GUs/V/kHO4g/Y0oZ7+Afk+D9KLYlTW/1HOZSgd
aEqm/kH5AQ9RQHGq6G+RLzCMjmSTpX9IfsjD9KYE5+j/JF9kOJ1oRjJVXftZ
vsQIruUSSlKKFFIpTRnSKEs5ypMeZxH7TTXf9Yucx0g6cyn19Q/Lj3iEm+MM
OFf/V/kyd9KF5jTQ/0Mu5FH6xBlQXX+rfIW7uC6eVe+4XM5kWsQc6P0pF/EY
t9BS73+5kilxRtTQ2ybnM4qrrAuzWt01nl19Qn7G0zFD1iXYoL4s5kl9RH4c
Z6BO5XH11bIY6+KdZFn6qlvF4NKdVbHXsgxTY6ZkSfL4Ju4vy9OTytY15XZ5
vXw1ZkSmkM/d1q1lEXJZE3sv0+hBt9hX+Z+8Qa6IGZCleUbdViazMfZUlqOl
upE8Kj9hAjnWxVmv7sfl8VvkS/W0mEvOs94hX2M0bayLsjaePc5HfVJ+zrOx
JzTW+0suZiK3coVeEl+pn48Z5nzrnXIBY+Jd4hz0TskveC6eiSZ6x+QSnqB/
zDm19H+TrzOW7nEfmur/LZfyJANilqmt/7t8g3vI5Uqy9f+RnzKJgTHL1NHf
Jd/kXvJipmJuucC13fIt7iM/zixmkAtd2yPfZhw9Yt/izGM/473j2eN54h7x
XfE3XERdMqhHJlnUj2u+c698h/vpGXNJM/1/5TKe4rZ4J71CfK2eTnt1Kb5V
d5PpiWf+7zawPg2DhZPE
           "]]}, Annotation[#, "Charting`Private`Tag$939679#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nf4jmUUB/DXrESUIgrRQEIKDbPslVnIKhSS1UC2KHtmh+ydvWUlsx2K
bKGMrDILfc7VH5/rnPN93ufnfZ/nvu9L9sZtarROkkgkWiZNJF7T5E6WSEzT
P8fHqRKJ32ULeU2+T9aWrAyXlZN9qa9NCr6TtZGd0ncnL6/LHpdN1z/PH+ZF
vC7bb25HNj6RlZdt0tchJb3MN+Ma37ve1nxa34N8DDbfwUR9Y9fz6GfoizBC
n5aT8s7qZdkAJusfZLG8sXpA9g6f6jPwkL6/moKVjDPPVHPEd2OE+yqoX8kX
qnXVMWp6vuA2c2/1lro8Pq9Oj7/LRn5wfzv1jHyx2lOdqGYiv36ImorP9HPU
R2ninifUmbKinDJ3MV/RD2SJuYn5oP5dsjNSVlG2Wf8qt/OjrCl55bPMxTht
Xsoo3iCfa7PlxTljXsZo3qSP9dBMbU5+n5vjMyX407ycMVSSb5HV4w5+krXg
Sflcc0nOmlcwlsryrbL6pGKn7C0KyOeZX+CceSXjqCLfJmvAneySteQp+efm
FzlvXhW/VXbI/B454h3LXpJt1zckNbtlb/O0fL65FBfMq+N5yA6b3+dhxsuq
ynboG5GGj8wJRup/dv0d/Z/6D3mSVrKCsgX60lw0dzVf1Q9iTTxb8xF9+/g3
9Bl5JNarmpJP9bPUh5ng89XUr2O/MlZ/L3fFflWTsIJR5hlq9tij/OK+d9Wz
sV7UXupnambWUcA8VL2TVUwyz1Ufi7VOHBKF1IXy+WqZWGNqOv5yrZt6LfYk
U/RZYj/Im6lHZR14NNZr7BHGx7p3vbr+mzgnSEsfc1JG6/e4/p7+XOwpnqKN
rLBskb4sf5vXxpqU/WbuyGPx22Q1ZN/G2UA69sYZwjOx/83luGRex6TYlzzr
2hJ5eS6b1zM53ms8v/g+vE97OtCRD+hrb3SKsyb2Js/5O0v9jQpcMW9gCjXl
38macDe/xnrgefkyc0WumjcylVry72VNuYd98awpIl9ursQ185exz2THzB+Q
k2myl+PM0b9BevbH95edj7XL03SXFY11o6/MdXN38/U4j9gUe9J8XN+JXHGm
yV6R/ah/k3vpa07GGP2BeEb6C7EumaR/gIL6YWpqVjPZPE/NGWcVPdxXLM5e
+QK1ijpKvZs1/ON6j6jypepQdaqalfWxVuM8UE/IF6md1Qnq/awld+w79fbY
S/rZsdeY4b7a6k+yZozT3xf0/dTkjNUfjPeuvxhrlUIMN6dhir6n68VjD+lf
4l9zT/O/8bvZHOeN+Xd9Fx5npqyObKe+ORk4FGsr9lY8VwrHmSIrEc9NX5Ub
5i20kv1h7kqeOCtkdWW79C3IyGFZL0rGczRX46Z5K7N5Vb5b9hb3c0TWmxdi
H5urc8u8jTnUk/+c9P//N2TiqKyfPfCR+mI8a1kNEmyXzaV+nEPmt8nMb7KP
KRVnkLkmSdghm0cD+R5zKx7gWOw12d/xTngm3oGsdLx7fS1G6++JMySel3pD
XaYOj/2gZmNDnJ/ua62elHfjCT6XNZTt1bfmQY7H3qZM3Gd+mWR8I5sfv5n+
DGAggxjMEIZS1n0bff4VkvOtbAGN5L/GeUYWTsg6yS7p+/Msn8S5ztT4bmou
tjDMZ/8DLVlDkA==
           "]]}, Annotation[#, "Charting`Private`Tag$939679#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4FGUYBuCFQ0kKijSIpALS3SLdICihhFKKhKSUdEiI0o0S0iGhgHR3
N9LSoIR0eH8/7ut9nndm9+zOzpz0TdvWahMtEolUiB6JbI+KRHrEjESiMSVG
JFKDFDyx38FOdrGbPexlH/s5wEEOcZie3iM6U72+Jil5an+EXvZRTLOrRSqe
2U+2S89avR2FOWr/nV0Mpuu1Sc1z+yl277BOb08Rjtn3tovJz/pHpOGF/VS7
DKzXv6Eox+372MXiF70OaVmmF+KIPIiXzpumZ2SD3oFinLDvaxebGXpd0rFc
L8xReTCvnDddz8RGvSP75Y/4Vy7OevlDzsujOC035rl80uv7yXGYqZ83m/Gx
vNOsxg35tvkNb8srzCI85Zh+1WzNkHCdzAbhN4oViTzS78ldiKdH9J/lzDxm
k37ZbBWuk+Od9ANyHV5xV//H7MhrjpfQN8hlecYF/YbZltHyGbMJL+RTvlf/
8Dpm6Z+wS67OTTk9K+WiHJe/Jxq/6FnYLHemJBv1clyUx4Tr570H6HGZrdfj
HaIzwy4rW+QulAqfy/kDwzXgV70+GYjiL8cG2cdnjt6AjMTgrGPnOM8FLjLY
eQmY63hDMhGTmXbvslXuSmkuOX+IXULm6Z+SmVjMsnuPbfK3fBB+C+d/b5eI
+fpnZOF3vRgn5KHEZraeje1yN8qwSS/PJXksf3u/ofrrLNAbsVuuwS05K3/I
xTkpDwvPjdww3B9yHH6Vs7MjvJ/5Jd3lg2ZdIu6Le/q/cqdwn8ubzQrh/uay
ftNsF+5x544L11xuGp59/aX+QP42XFf9is88TE7MIxY6fsFsHp59xxvre+Sa
vOS2fsfsEK6/vMoswSn5mvk1w8PzbH7KE/k15sg52Cn34FB45rgvl2WLXJG/
5fHhGfO5hutJWKQ34T1W6yU5LY8gLnP199kl96Rc+CxeP8LuDRbrTclGPObZ
5WS33IvyXHf+D3ZvskT/nOzED8+cYyPtk7JU/4IcJAjX2rFb3OZHx9/iN/tm
vE/CcL0c+8k+Gcv05uQkUXjeHRtln5zlegty8Trz7XKxR/6OCuF3d/5ouxSs
0FuSm8QssMvNXrk3Fbnr/DF2KVmptyIPa/RSnJF/IAkL9Tzsk/twWP6EB3Il
tsqVuCJP4J73Hqun4nf9otki3LPyXrMWd+S8/CmX5q9wrc02jJRPmp8R5V57
qt+Xu4b/D/ob+iI5b7iP2K9fMb8ituN99SNyPaLp/4XvK3cmrl5Z3yZX5gVX
9VtmeyaG/zfm57yS/zO7hfvRdxpnpuaP8D/FbBn+przPrM0/cj7Wyh9wVv6R
U3IjnslvsljOxwG5H0fl+jyUq7BdrsI1eVJ4Lv3t8XoaVumtyc86vQzn5J9I
yhI9Pwfl/lQN38HrJ9ilZbX+NQV4i6V2BTgkD6AaD50/0S4da/Q2FCQZjxyb
ZP82f+ptKURyfrMryGF5INXZoVflujyZc/IXRML3pTsJ/SaPve//0q0+Bg==

           "]]}, Annotation[#, "Charting`Private`Tag$939679#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WcFlUUB+AXA2w6pVa6u7sbYelukNqlLEDpDlEQixIM2gAFRRDpsEVE
6bAFA2wUnvPh2fM/Z97f7J07d5L6pianpEkkEkf9SZ82kbg/XSKRlX3yTLpR
jwxkJBOZycIDfpeN/fIsulOfx8zKcEZeGfckKw+aZeeAPJseNGCBWVnOyqvi
vmTjIbMcHJTn0JOGPG5WjnPyC3FfsvOwWU4OyXPpRSOeMCvPefnFuC85GGuW
i8PyPHrHevX1uSy/QWMW6itwQX4p/g85GWd2N+/L8+kT69c34Ir8Jk1YpK/I
1/LLbJU7cytj9evVlvwnv0suxutz80HsJ5vkdtxE33hutSG/y1vYLvfgLprq
n1Qr8Y28Tx3IavkttQu38TEjGGe+QW3FMf7XH1aHcpqd+vfUPhwnE58yKt5B
7IHrj6h5+JwP9XvU/pxkgX6z2p4vuTmei+H0i3eiNuIP+aA6mK3yDrUn6Wmm
X6xW5lt5DW/LXbmd8fqNamuuxXrJzaP6vHwU54b+NOcpsyp8J6+N9ZOHCWb5
Ym/i3DCAFuQlHxNdy88ncS4YSEueNqvK9/K6+L/kZ5JZUuxXnAMGxRnSN+bP
eB+04hl9NX6I8xDr4BX9vSTYpU9isnwPn8U7jjMqdyAt98X5UpvwV+xPnCe5
Fxlib/TPqtX5Ud6vDmKDvE3txh1M1L+qtiFNnG+Gsdt8V5w/TpA51sHo+LZi
Xa5PUQtwlCP6veoATrE4vgm1I1+RLs4KKZyJ9+766ji/fMHf+kPqELbJO9Xe
ZIz9Z2Tsj/lzag1+kg/EPrBRfkftzp1M0r+mtuUG9ugLMFUuGOc2zgRD4mzF
eeOfuAdtWKKvycV4L/EeKMg0s0LxvHEGGEpblprV4lLsZewLhZhuVjieL945
w0hmmVltfo51xroozAyzIhyLd8dw2lGEmeZF45uKPSCF9hRllnmx2OdYO6l0
oBizzYtzPNbJCDpSnBKUpBSlKUNZylGeClSkEnPco0SchVg/I+nEcrM6/CK/
HntEZeaaleRk/IYtciduie+TVM4yKr5JtTn/ytvpTBWqUo3q1KAmtajNPL8v
FWdNXsFoukQ2q8uv8qZ4B9RhvllpTsvPMya+XX0Lrso76BrX9PX4Td4c7ySe
S5/MjezV71b7kSXOPWO4EP/XtevRtfOF
           "]]}, Annotation[#, "Charting`Private`Tag$939679#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XccllMYxvG3oqnS3kvRHijtpaFCQ4mKNGhq7701hahsEqI0REtGNKmo
tJeivfcy8r3/+H2u67rPeZ7nvGe9Bdr1eKJ7kkQiMStpInE0RSKxI1Ui8TA6
pU4kfk2ZSNSnS+WBtJ9cir4j96SFaUu6ng6jFbVnoMPlF2lq2pSuokPpl9qr
0XlyX1qetqGbaTZt1+nzuMA3VF/Jz+TL8x/zZdBKvkd+hc+Fn+Rjxr2Tr4Xf
5P6ohIz6jVBLg8VydtzgX8BF/k08g+Oe36VWG1vkAaiMHDihbbd6HWyVB6IK
cuKktj3qdbFNHoSqyIWbah1wiX8Lz+KU/nvVHsHv8uCYD2QyzpFqd+ErOTdu
8R1xmX8brVFQv1fVcmO1fNr79vH1sF0egtL6vCsXQXU5szyKT4uv5eryF3wF
5JH/jrXGFb6Rtm/5d/gK/Cf8/XhOLiS/Fs/gKX4NXaNei1/E96dVYv3oVjqG
njG+/Xx9dJZ36N+ALpMH0aFyGfqe3IsWjfWlG+hwWkN7Fjpa7kbT0Wb0R7pE
Ww1+Pl8RbWO/0rzq/8T3cJVvrP4d/y5fkf+UfyD2nXyvPC2ewVr5rPEe4Btg
pzwMNZFVvzFq6bFUzod/+S64xr+Htjjn+YNqj2KXPBwPIz/Oa/tD/THslkfE
3KEALmi7iEu4jCu4imu4jhs45LnHsUf/kagd5yD2mbbD6g2xVx6FOrFX8J9a
V1zn30e72Ff6/6nWCPvk0agb64vbcW5xg/8A7WN/6P+XWmPsl8fgEWQzJ2PV
7saymEsk1LrJN/kP8XysheePqDXBAXks6sVZ1HecWgYsl+9DErXu8i1+Vpxh
eY78YJzZ6CO/zufDupiDuFP4qvjXd47SJ3BQ26PalvPj+Pv59/lieIb/OfZk
nG/+JT4jnuR/oitizfkFfD9aibajv9HRcedpT0p7xNzSv+Um9Ht5CP0o7g76
mdyHlo3zQzfRUbSD9sL0DbkHzU+fpmvp+lg7fjFfLX4zv43+57cdo03xhz6P
qa/gX+If4D/gi8e+jXtJHs9nwjdyESRT6yn/w89Gx6irTVcrgA2x9r5xPM4X
DsnjYw5RFHfo2yvmmP8YnWKt426MecNhfkKMC8Vwp/69Y9z8J+gcaxv3pVpz
/MlPxOMoHvMZY4zvxLNIjhRxX8Zdg7/4SWiIEtHu/X3Ub/OfogtSxn0Yc4kj
/OS4z5BL3wlqmbFSLhnvVusrJzBH7hq/U22GfA9+llPhDN8CR/kpeFCfD+US
cR7k3PJEPgu+lUvFOOJ/Uk6Cz+Qq8ud8uThbMT/yTL5gvJtfR3+JM8h/xQ+g
1WkH+jsdG/+jcTfxLePOkY/F3NFv5MH0ZbksnSX3piXps/QXOoI20Z6HTpK7
06yxDnQ1/S7uKH4hXxnt+S20dMwB359PGueK/4F+rl6Vn8s/hG6xhvKbfCFs
jPtB/pqvgTRxL9JWOM5PRbk4J3KpeK+cV57MZ8P3chmkVhsgJ8NcuXusvdpb
8r3YJN8V92qcaZzgX8FD+syO8aM1v5GOpE215aNT5Oz4Ie4FpFEbKN+BeXIP
pMWFmEOc5F9FM+SPuVbLgVVx9mIMaoPkO/GF3BPpcDG+j1P8a3gy9k+8W//B
6skxX+6F9LgU9wRO89PQPNY03qX/EPUUWCD3xt24LLfBGf51PBXzigy4ot4W
Z/k38HTMCzIiEzLjatxrOMdPRwuUj7HE/7J6SiyU+yALrsXewHl+BlqigL5T
1XLiR7lCjE1tmJwKi+S+cebU3pbvw2a5nryEr4mO/HY6Lvaltv8BmwFUtA==

           "]]}, Annotation[#, "Charting`Private`Tag$939679#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361103972989*^9}, 3.865445422662055*^9, {
   3.865445460925819*^9, 3.8654455200369153`*^9}, {3.865445694161232*^9, 
   3.8654457264389095`*^9}, {3.8654457751293397`*^9, 
   3.8654458752613173`*^9}, {3.865445930590624*^9, 3.8654459730440483`*^9}, {
   3.865446061236844*^9, 3.8654460689573755`*^9}, {3.8654464469315023`*^9, 
   3.865446455577737*^9}, {3.865952161175655*^9, 3.865952182002981*^9}, {
   3.8659522359946814`*^9, 3.8659522660000668`*^9}, {3.8659523006049786`*^9, 
   3.865952342510551*^9}, {3.8659523726628895`*^9, 3.8659523935431986`*^9}, {
   3.8659621960792484`*^9, 3.8659622764384995`*^9}, 3.8659654667182627`*^9, {
   3.86596970915989*^9, 3.8659697322444935`*^9}, 3.8659715219700255`*^9, 
   3.8659717177512927`*^9},
 CellLabel->
  "Out[4573]=",ExpressionUUID->"ccddf69e-4b95-46d4-9235-01afbde972ac"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
+6xSx/B80432ftV5gu+/v+KNFr9vXNHhMn+8gwKzXHmNt+N8sPGw7cihDxQ4
ep1ysxrHz3xdxb9PdlLh78TcDd/xeRxg23kxO1cE1j9faR6G80FomsuOTfto
cHOWovhxbC/rVaxw7xIanB3TD1XC4/tO99Lv6tPhqYLLjEX/f1ymhetlOjT5
9gzswP3w7PKNgj/EIaNEqIAb+3fhAR1rk58UaPkl/RAHXn/xBmnPakscz5ZI
8nnj+azKWHNv57AIZNtpaRWM1xupNljrMU2DhQ7ajQt4fHQnK+v5XTo0jR4y
n8TtaM6eYEYMti/rTakqfn48ueJq5kYqLGIfzFiJx7+0qnlZbRLOb42Xkp7i
88fasbH/WgYNyjEM1h3A8zvN7FP7sIcOu57xiy7O39R56XV+bip8okZTWcwH
8/f776+QpEOpH0rX+hfrp3A2g9p8CrSKMXHSx/by7fS3stChwtO/y0564Pat
n4HZb6pFoFTxR0Ye9kcunoD9rxtpcJTn0tPF+1TOmt4BXTM6TD/S3f3/8fBR
+8cXg+JwPDr5+1Zsn+9OIcn9zRSYfBsYL+6Hwx/F3KM9IvCJNb9IFbaHV9xg
18phGuzcwODnWayvO1e+11tFhVEr6tZuW/wevO+v/qHtdLjhg2DS4nrskk2S
ns9SIGUi0Fgd93eN9oeni+D7i/9Y+qL/x4m1J8wAKlwwdl2dht/3+nEvx6/j
dHiv6pnAYj6IF51SKO6lwDC3xr+rFvOjO0VXcloELq9pHbyI58NyvrtlvQIV
PvLPPMWO++0s+qSXa9Mhf3zK6sX3q+tmydsKUiHvDZ/Bxe87oiv6b7mtx/ng
s1fD4vrrP/Swki3ocOrmNpNF+36LKmK7NCUOUyK1Th/A9ohw1qoQlaBCCsfK
XWqL+d3+qrGEEvbPwuRdi/7JoeteaTFJgRZPtbbvxv0ShVcEUo/i9+8+ZLTY
vyN5jYHfbwr0+FZyn4r7rSNCf8uMi8A1IdTzznj+Pc+ttnbto8P+yjyexflW
/PypD/ipcGX5hcnF/fc+cs1Ffw0dfuwbFlisB9x1xx+7S+H7W67UQRncX7Pk
qpbrLjrccWP20OLz3aLbntSy4fU+cn+vjfslnauFZgco8OEpNTdZ3OZQslqt
p0uHg8UXziz+f0Zy0LJ3VCp0N1GRWvz/6M6rV9Kk6dDy1+3yRfufe7fzVfmc
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
WDhb7l6L/zy+kW1emf5sMPJC8bQ0vj4eD6U92DZMgnTBrHbuoSzslLMGi7k7
Gb6PsO9SxL+P6Ddbv6b6z4Nq46mkz/j38XCPbI8/BxuMFvzL/qOaDiIod3Vy
UklQ/nbU/dX8LCxqlcNP7SQZHjiwY/5+DRV4G98xv8w9D56lXbxhUYDvrzek
cebU45+nuqRYqgo/nxfSZ7RYeWFjRsMZz+tZmOy7DbSmrWQoRLnga16ErzdP
5a1YeOaAEMb/TZy3BLxlqDacZV4A+wplVzgbaMCU/2bXmbNs8Nj5zGwb/PN8
Epk19qomwbiTc1vYGLKxOVVmrWojMuRh4jyQhX8/ToView82zoFf6eGnV8pp
IPTujaqXGWyQ40RJkDSdDpzElUoLZkkw6vK4ROObLOSxR2WuRodZ3cfiXvBF
LT4iw5ZLjDYL+H4w9TJlW1PVPCj8ctbAgEYDLqLNn4d3scED41rSa/jPO1pb
oP8snwQ/vlN79GQkC1MW97PkOEeGkgHv6iTx9fQhR32yh+o8ENu23FWLr3c/
uh4kBkuRYWrPp46EMio4t2HlU/JNNnh81zFxGfz6OzkcumXxiQS1FoTcL61l
Yam2njK+1mSoU5jAwY9/PsJnNx29yBtxhwoOM218s8eDDZKP6p9IxL+fvWPP
3eW+kuB1o22yaxNZWKZ19zWmu/j5Idq36Ah+HoqqriOJOM+DY1Grpv8/D7k7
7Xja9HcOuAftHU3Gz2MZ+qVkG8AGWUse5i7h7zOb2p3X/MtJsJhlpEV+GX9f
MXzv+KRPhoxXYva743/Pm0idGclENugZkJokir8vXtiIaCvlzwOHJJdTScU0
UGKyR3CjKBuMm/6yLIp/X02UH3rxb0mwLbSvOKsvC+vuvjlFViPDn++Fiu/g
f1/QVqeOWbl5sO24XaMm/vdFaOvxN15lgywVLxT24t/Phq03btq24ufTcc7f
o/h54LjE9eIICzJ8+not5jb+90zXS+vsC2WDfuH5dQn43x8T7ZAj/WQe9GU/
/3IdP6/4qjUc/So4D4xC/qyLxc8/Wzu4n4posUEXbpeZGvz7O+lQaeJKJ0F7
oRWLk/jzZxK+ozbvOhkONxSxF+A/n+gf+jw/eOd8kTcWJ+J/JbyYBBnVn7xn
+J2FvbVO+TZ/ngzdou7oYPj1D53eRuXUnwfdWb2L/z8PcDa8iLpnwwb1PKfE
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
4ULGP9+dtU+L69Y/3x3Prvel5dQ/3z25f7/Eup5A5Ls/fsq74itigXy3Rb5z
QjZNB82H9vYdWOKptUe+u3hWkzx61xX5bu9D2Y12eV7Idx/f/W3e3M8X+e4F
4UqXied+yHefMl/p3ywdgHx3oiPrr2DpQDQf2iLycWTHxxY0H9rruNeGjA9t
aB508wWTmbvS3VgUt8gH45yvwPnsi+MVEn0Y4cNtOMYkaPsGMMKHf9000jWA
rzeED9dyShnRw9cjwoermM52CGb1Y4TfTitYag/r/YD89iV9J8P5qTLkt/Mp
5s8jXlQiv10dEHVE/2o18ts3ti9pUCRrwOaaq/YeO7jg4fB7anHba4B+WXG+
xU5uuJ3DqU7yZDXYwuvnXym1Di4ds7TzvV+JvLenmWB3QdQT5L3VLWS/J/xO
Qd77g+re7Vm7/nlv5e0/wjq+ZiDvzXpbSPf603jkvWfMNoykaTkh7704Zr39
OZs68t6fxn0FeG+aA8J7ezzIZfL/4oS8t9vaJQ++cg/kvQs+O1zeJ+uDvLeI
+mX9iRf3kfcOKz8SVH/XH3lvh8+Cb0s+BCDv7T6UliMWGojmTx9R2HxDJ7sF
zZ92T1krHCe1YeEWk1+LyoZAyduSdNvqfqzKamvWtrZR8Ks7tvbUMv68+6eL
DfBMgs75wlYGfL8aVDN9JJBvCtgFrp6PXTeAEb670jNa8zd7NSituz0528cB
rV46GZxfXwMcHp/rn+7nhO4N3X85j9eA+Dfx+sbDXNB6zfxZakA18uAxOXxR
Z4qSkAfn8OlOUr2diTx44SUHsv+XTOTBFTM7nQ/f+OfB/fNe55zwdcUI373z
ad6fDaaBaD61zxRF9Aq5FVPGlsTDi0dANWtlPtVzAAsKmjmrMDcGRo/J3nmP
n0+3KrQd9tr8GxwTayq6lzGALWk+lmsy5oC97GJqfan45yvvXnEz4IRhQrp5
PidrQMGyDcu6m1ywo8VL3HepGnlvI3cZwX0dach7b+eaODjiloW8t1J1rUvL
jX/eu8BzZJ/btyjUF/W9+KJNMi8Qee7QCf7ZH3ktGDGfWlsjd8e0aSuaT/1s
TGTEi7cDzac+4r881Xe1C82nXtx2eneMXw9G+G+dGEHjjQfx8/Z//ltu9uJ+
5fwBjPDfQ/EJ7T58g2ie9UcZoV0VDgMY4b8Pxi7cLxjowwj/bbSensZ2rQf1
SMW3WPDRFbOQ13bR1Hm/fqoAee3HoUp+MaKlyGvrT36pqJauQF77YYd55qWA
KuS1WSq6Rr63VSOvXZPcvPUZ/v4nvDYtoX8lpf2f1x5dn7usFFuF5l1fuur0
ptCzAhD9U0eDiBbb96XIb8+FxP692+GD/LYRqULg3oME5LdLf44pH1hLR377
VTvtefOdf347YA+fssNAKvLbjlY+QuV/HiK/HR5YprYz3Ar57SnmNO+pWU00
r/qiu5WMh4A98tuHngFHoZG7yG+/f8riAb28kN8+o5jzpemaL/LbpcrW7mJu
fshv54W6cVkJByC/XWUoIH9nRyCaV10cfSjiTGULmlcNWReiVx+1ofnUK++9
jgqufsYWrgwblVt/BbNfK+nyy70Y4b+Pk5q6ZngHMMJ/p+z7PRzHPYgR/ju/
9Nc6s98DaL61e7Nbck5lP0b47J+uZR0/9T4gn83FyHk6oqwM+WxhdtbHd90q
kc+2+Kr6eZ1aNfLZ+TJ7Hn3fWQOyi6I1Yni4IPYu5LPQnhqwd8XhWtpmbugh
2S41dr4axDNYrH8jsg5+sXpX0pxWiTy3fNnWxFyJKOS5Z7tbBBUsU5Dn1o7d
bcnI9M9zv4c6pkek/nnuq37ZzrUVCchz11yd+lYReQd57mE16muRnvPIc9fs
T573opkBwnM7Jfn6/1B2Qp479eNxmauKHshzS8/qyBZy+SDP/alLuzjZ6z7y
3NkG2q/Ervsjz528uUT8Q3YA8tzh3RIn6+8HonnYPVXiqtsyWtA8bM/Q/CHn
8Vastz+7OM57CJzT1N76KLMfG0/zmX//cBSsZXLCKvz6ZdT9KC5umgCXk95d
6OAaxLrvhsTIzv4GPySGBn/vGMAIvx3x1/nAnt9VIIHLY9y0iQO21F1McmWu
AVy+QUUbmzhh3OMnEm0KNcBu/DJT3Ccu2B3b+uP6s2rkvZfv5ZhabktC3jvS
kcXCD/++Ce/dWXozXGTDP+8NOd6Yd+775735MkkT5/vuYYTfFhWuKPiuF4jm
ZatbZ2y8xdyKhR4uWr7jOgKkuQ9ldN0ewHKq9SM+54wBG2/Z9F/4+276/TBD
/8gvMO7I+rimCD8vN46bTmhzwOcOBWycUdUggXni77gaJ6RqZ+kfk68B535l
Duy+xAUrE5dq0lhrkOeu3P/1l4JpGvLca8uRToDyz3Oz2OstbPqYjjy3+GQm
14ejz1Dfddr91IOH2YEgCs69+hPyBDzjEvU9k9mCnRA9FzrDOgoyt/Mycnwa
wPg1LUbtVSbAuchzys2bBjHj4KQfp15zQCXuHaf1JqrBcQsmO9VsTiieqWPx
5FQN8toXYyQCvyVmIK9dlZheD85nYUoWe8K8KLwQFGqNOD1PQX57Up+FSy3M
F3vg28lg+yQP8OnQcyMHWjAGIL6ftGcM9MddCvLmwX8/MD8QeR0/PyqeeX6s
cwAzvs+zQN/HCSnXungOHKoB7u07okxkuOBBFq2GIwI1yGtbubE9Yzr7z2u7
WslN2z3KwN7wRY6P3c0C4VzS52dyWrC4A0VXffh/gtvL9Vsh8yAmr3wrmPnS
JGDtrBeIYxrEBgMMfvtNcMCwvaUeF7fUgN44EvOnX5xwQ6SIr86RGuS1z26h
eBxKzkReO25wZ7f1y0ysxN2U+5Y9DeTxaq2CA62YyblHfxOOj4Nzdn8/j+H7
g0Gv2rUNlpzQSvpRN4NiDfLYC6I39f/X1L1HQ7m9cQCvqLwTKbeSlEqR3JPc
ar9FJVKipFIRUQ4iQgq5z3SREw5JiAYzI7mWW23XmaI6RooSM4kQipSjon77
rHXe7ee/d63XmHfv197Ps9Zn7W9NOAefD+tksF/H8SFj+nxYs71EVAUfUvna
EksNLQ3tWnC+9jPOw6l/86mofO3R3FVpZ8zacb52ktmZCH/PDkh5bd3Fbw7V
K3VBymtLHFr268pdNN7/eW2XZVx9WfR9Ka+dlW+1u+eCAFJeewvZFXdzpBNS
XvtGYkTaUb8OfJ4sl5blpBvLxr56vteay0+zH2BfvYS+o/GpaDX21UrcM8+7
5Ouwr85t61rpGNSAfbVvbHubyDMu9tWmPy5c3Ir2b8pXy96JWKjdMe2rRZ/U
vXjLbsB53XxaqyKZUAeo82uTDLvNvFuqsbcuOM7IGjUMx976IMhqNdLLwN66
e6a0k9qLXOytHzW5LF0SPO2tI1yF3U/XTnvrv/Le+ak8iMPe2naqpOw23wN7
6/hiCeaIigXO2/Z5RKszqPHG3rq8rWXD1tQg7K0b0xLHW1zDsLcu39QgDnZF
Ym+99dnqXcGe0dhb96qww92k6NhbFwgkuk0UGDhvW/Hx2+DWR3yct93ItBjT
CXqB87VLHpZXVve8hqqiTZpjlt0gsXKjzY0PbyHltbN1s87cnSuAlNd+M3Gn
v5YQQsprJ0V/Z4mMC3A+95sQsa3a/C5IeWrNlZqmH2SqsKd+vtI2X4pVgz31
3l4N1lX3euyprez8N8cDLvbUKeLFOntW8lA/ZFChRtBIXTtxk3DUz0nfbF7P
lZhHjoN3ReGHucAl4FDzalk0/1uGPrLK6rG/9tuzNj/JIxH7a9Vri8qUVzOx
v85elXywbYiN/fUM4arVn6yn/bXbkG+PpPG0v06/lC9zzSgQ+2s6vzEuQWIf
9tcRXlKHCz+4AMpfGy3/lVcycRb7a93vDzatnRGK/TXfatHNwrFw7K9jNXR9
67yjsL/+AJu+yOyLwf6a3XyvNe4OHfvree2Rln4XGTjPO00pYptfLh/neZ9x
6Svufd0Cw+SvrFnojPo3wY2fm1K74Izt9xUveQyAAyrHdsZ+RPX8R3q06t1h
UKKa0sMQF8Lw1jd74npHgIjZEeNGDQGkvPUab+UZX943gAXr6H+kcsXIonnW
ZVt+cYFdsKpKWgNBbhThLD8KUH99qfRV1XMaOVQu9PC/zcU+W73zG1nfnIl9
9t+1/Z3nJaZ9duvAX3/dXjHts8XlLhgOXp722TIBPzWLLgdDyltHhnhcytzL
wHnfP0ZzpPK/86He6eSTHw/3gcQL5u+YxwWw3uVKRc61QfCZN6K3B+3fz99G
P7XkfgbM2Avl9BoB1Lua8mPSXIxs3nCSZ3mVCxYojwcpmxKkRmDNblNDHkjp
N7d6sItGOhZlpXXTeNhf9z8Wf3wPrQeUv36XJavcf2raX59+ct93jsi0v2Y9
2zJRbpeCz+eV2j2/Qy6XAYLr7q39JyMefL8dGqCB+m/rRxfv177vBzN2ys+K
e476a0+iVLBmGFyo1jccQ/tnc16eW1COGLn0W6iMRR8XRB/P6GzLIkgpi21W
umi9pHy1f/eTVeA8C/vqzL5z7JgjHJilbTO53UuaVJD7xQgZYWJvTWdFzCkz
iYFmvVECrdQSIHSKSRlp40OZTjtb4ZxBoFp7bsQM1Q/GjnN/ziI/g81bzX8N
dApgM3NJwCxlgux+/Z7nrsUDjc+qRUbVaOSJgfWHYhR52Fdnfd0jtcpg2lc7
6t2ZWl3BgsqvRlmekSzgxjgR/Cof1Z/PBiP3fhsA7v4RD+tnCKGcm5i9z/pP
wAOorHsnKoTWLOfTj3rR+zdoaTS8kAdUkwu8XfoIkmkxPNm0kYd9ddFWB9Wf
dDb21QvCBngej9kwUCD1UdW/CqS1JOyJW9UC/YdqVpxePAS4awrF+tB+aJ3J
D9l+nCDHo6LWvEXvM+Wnd+kH9mqFcfD5vkfDbz22LUf11/VtmyevxoAmfrXc
FKo/WPd27qp8PwSuk5fSn0kL4dL9b8u+XifIJmViUzGaH8pPv9i4IrvJmwPL
srtTC5lFoPCpaPL2Rj40kq9Kv1D7ETwrVNOxlRDCgg/qZ31kCHKy6kX8NtS/
UH6aSRpnpMlyIO0gR9kniQk6aB8nT6H6r53Yyx8uGACcm/YL8tD6/DzX/POu
kWEwLLV7aFJMCB9dGrIMe0WQdTp0N3ETHvbU3Tlryqon2DBNVcVrXusg4K4t
oJ1C46H9/v2FUhuCvGV6yf8fdD/lpZ0d3eUHAzmw4KGJ3kjQTWBLMzo8G/UP
JupPFEXdh0G1gtJUtKQQfjrtMquyhCD3Broeqkb1EOWl5/65j6tpOu2lR8N6
rPI6wuBQxugcM8tBMHS0pCJZSghHXMTOxa8nSGLdcgOox8M+Wk0p9822fRy4
ydZAy93nLni2xaGPVcqHcUy/xB0TBHkt4Qn7Fqondxc4vGxxGAJnYv+Z3Yie
x9sJXmzzIcj4xwPvRtH3oXy0zs1zpUmoPqM8tJKxjolNDQN76FDlna2yD/mQ
yhff8r1aU3JPC84Xl5aSn5HzaTpf/ELB3PNGG9txvvhv5ztn+I4dkPLT0oGr
U2MWd0HKT6uLxVlLsdB8/eenbYbFJa3R96X8dMfLzY+PhQkg5adlzw3JfZ/o
hJSfdvNzlZ4K6cDnC9PH58TL6rGxd64NrPYKC3uAvbO6g1hc5jDE3jn1aNg8
2/l12Dv3hqf4WPs2YO/ctWaZe+gTLvbOusllQTPQ+0x5Z5GqcZ/j/+edt99y
SUwobMB55RUiiW+/3KoD1HnGO8prPXs6q7F/frjyg6XjH2HYP5vRivsNxDKw
f+7ME5nNrsrF/vm3ViVNIXTaP1/uHd33y2raP8/5ahmQaPsn9s8ZImMTT308
sX82Yar9lttsjvPGm/Lkm18meGP/nFcAY5L9g7B//mPSoDj6YBj2z26l+jqu
WyOxf/4uFG+4cSIa++fldyVXHJKgY/98xGU2jF/EwHnjghetMTZVfJw3rhq0
/63X6Rc4X/x87y41WvtrSNpvSppn3A2m3oHCgo63kPLTfcSUiM9MAaT89CRd
YyYX/X9TftrYcvubsgkBzie/dvCYiUNbF6R8c8gX5uDGsUrsm113+Hx4mFqD
fXOuKmvTb8d67Jvr63/HbzHiYt883zyq01uJB9LuzR0dFaWRRV+tdyzX5AGx
j79uvSTmkQr1zPMmjlzA1X1RKFwgTn4+50cTranHHtrTwjBVVDIRe+gcVedc
pVlM7KHZESXF+e/Y2EObOickxzr9n4c+ICOVeHbaQyuvXd/rcjUQe+jMyTdW
Aar7sYfeHpFawQxyAZSHVt9mq+XEP4s99FjHhrcHBCHYQ9tYHe9e0h+OPfSs
1eKBpiejsId+U7OUG2IVgz20c0VAkncGHXvoiIX5ko+CGTjPPNGxYNthVJ9R
eeYa5Z3d3OYW2Hr/vIOFbS/wtby+eyqhC9IS/9b2OTwAjEWNK/f1of3/h73H
sdRhIBdaV2iH9gO7sLC1VZ0jgGYZmbdyvQBS/nmyIiakprMBmFeKryurFSNX
+GX8iPvJBZPn/jlyooYgBwbE1CRItB6+fk8+baSRW8+62HsxudhLF8G4UlFW
JvbSe5WcP3lOsrCXNpwnFlasNu2lA1vfWPVX3MFeemrRnEz798GQ8s86Aery
/rsZOO9cmpnOn/mND6PF6WmrdvWBIIMJe98jaL0rZj6LDRkEK95n7hpB+6XJ
sF1ReOlncMx9h6J1gwBKe/o0iG4TI5kG84+007nAvCTIiAQEaT9xr2mDAerX
exdFhpjTyOrMGZvdJXjYQ7NHk270zMvBHtr1sbmV4olpD60x7hNcpjDtoU+2
e6nZ9aTg85oVHjGbmpkMMBIp3hfI/hPImaWKON3lw0MSKU9YLf3AvOBpT2kj
6qdDXqfIyQ0Da914egDar8Q26aj8lSVGfkrbmK3VwwXqx07LpKcTpFHoOtVT
aL2kvHO+dmzOKTcW9s4uUdYnZjpzoE2Ca+FaD2nSb5Lj+Es+G/vn9hX5X52v
0uFt2c7dcctKgLr8lvt7W/lwmbq3K+/bRzD3QNz+JLTf5nq3CQ21PoObbhox
a98JoJh+uv4yJYKMUzi+8JsGD3g3XjMqW0Mjq3w/qaQs52HvrJ/jOCCvPe2d
R9m9uo+es2CXfgZdk5ELlpikyIeh569aOjvZoGcA6Bporxj5hfqHgPZNuSs/
gYCLHl7fZgsh3bBf8807MfLavX1dTEkeeJ4QmrPuPUH+pa3v+QXNF+WdLyuc
PsMPYmPvbOktuU3/JRu2SrofZExUgri6OvMPii3wonGHnt3cIXD7cq78K7Qf
0nXtNh8/SpCpYzdc9VF9RnlmlaGfG2rRfkD55dJXsZmmDxjgguzvst8ZEWDc
Pn9FZzEfylXL635pGQLVf1+00UD9QO1ezufKWIKM3phedRfND+WZY0/vmx/l
x4GybYbiUqpF4EtU/kY9Hh+anXxZ5FyI1tuA8JkhqF/q9y/Uu7qAIKP86m7e
VOFhzyw6R71rpjgH1pcfFNFNvQMYf3c9LUD1Ube9e09r+gDIk16SVzsmgCbl
i19GCIaB1U9G8jDqr11iKsPNWwhy8KLh5n/rLco3f/4QG8oW4cDcADLsS+0g
EFoLDXXQeJz0PWnC302QO5N7ehTR/ZRfziEyfjae5cBVoTdGfSJvAMVrcklx
6O+zTW6IGB8cBtlBV9laqJ5P8FhvGF5AkELl0hPrt/KwX7ZXSczztpj2yw6s
gxHhBhFw/DNtyTqjQdCm7RArhd531W9XDO5pEeSw6K3c4PU87JUbdyjPaLfi
wPHiDxLr/POA8W930yo0/vqZpk/nfyXINPAp7De63/732f5yyyGguelbrQA9
T+6oKTnmSZCfxhpbQlF9RnnlSGtNlR5Un1E+Wbg+OdQBMkC8fo+DRGwAiHb7
8VKpjA+/CMunjhUOgVwn0ZV8NL/zLXcesYgmyJO8745n0fxSfvlw80ATJ4gD
Dc7fry5mZgLFO76FpWh9Lrh4cOTVE4KszvZXzNjMAxWyvjnVGYNA956DzR30
eZRX7v+SMXunF6q/Z9l6nE1KBMzq487KHD4UnuBnL8glSE3W0uNDaDxPhq4s
5o9KkUGnFG6nHkD3x24ivy8aBDKtw5x+NP6UV2acy1LiAg50P2valBfKBl4R
V/fYFPChx63c+fS1QyBxcf6OT2h8FktZQTVXgtyXq/KPH1rPKa+8UFuiQQuN
zz3JK3UTQZdB1TzVOHP0+ybp51wjvw6B0i2Z0AWtr/72EuEaSQRZtTA/k4XG
w3yDIHn2Rylyf31Sb6YHB1pPTG4ruJ4NImtib1ig50l4LXFYuXcQHFsquiwJ
/X3KL5eaZ+xLP8+BJpMCfy+fW6heybqWhcbP3DexaayMIP90um6xGc0f5Zk7
RBRu1Z+/CLv3to85OAwC8V8LpGTR9zFzMq0d9BxCfdbRbDb6fAO+UU3lWYKU
iPxBHEDjR/nlA/1W0R2o/6K8csn2YY8tdQzwU/xo55UABpjx38/yFX/uoIUP
4Ov4AwpzIHrfqOtRmcimB21S+JryztQ15T2p6/8BCFP4XA==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwVzzcvBWAYhuFPWXQGFiWRY2DRWyRKbGIR0YnBrlsFM4uyWFgsWiKRyGFR
EuU/qFES5ScocZ3hzv0875t8pXBkvHMsPoQQh1k0p4bQhFHDcnwnhDCJOOzo
qXiW+/AuL6MLSYkhzJllIKrfOvBUrsGlHrukAj/6FOKxq6fhRe7Hh7yCfGet
6hF068n6vJyJY71Y35BLceeeM67FlV2p3ZY8LmfLi3IuGuVDrjT/5Wm0myVw
He/znl1EXpc7uYRbOcrDnG7/Kg+gTf/Uq3hb7429WS/gNb2Di7iFj3iIe+xT
eEHPQoN8wCfmJfKmXIZ7fzqPvQvXdhPIsV/S81Cl//EMErGvZ+BNHsSXvIZe
PDjrwqweN/okqpGJR7sn/ANQjzrt
            "]], 
           PolygonBox[CompressedData["
1:eJwV0dtPz3Ecx/FPKiY1sjmHfmzlIhdsbDajpHKaC5su3JR0chjXKKQc7nDF
hVCYCzZbqgszh7lGVKT+B8ff79fZPD4Xz72er/f3/f3+Pt/fN1F35tDpOSGE
DLxHWW4IpUgapJDGh8wQyjFosQU7sQo/zOqR5J2oxbj9j2a7MaS3ohQF+GnW
gBS/h6OYsP/JrALD+gWUITMrhLNm89Gjr8Yv3og0v486LLR3xWwJXuuTnjfA
K/FVv4gVdm7oa7FLz9LP8Ry80Iv0u7wEa/TfsgnjfItrT/kDnuC3eTGO6Yv0
q3wptvMe+ca8hHfzw3JzPIt8JWvklPN95lXYo3+zv0k+0avlJX2lvKkflIVy
h+yVR2S569nyvH5ALpDb5HPZ61ox7+Qb4zfgL+N7m/+RzZjgW82f8S6+jt/h
G+K31PP1a3wZ3urTzvslnhUjelv89nZu6Yn4G/pcvYXnok8vxF9+HJO8Gw1Y
bO+62XK802c8e5DvxXf9Miowz16rWR764/+OJD+BKf4QjZh1/5DZPozq7aiM
74SU2UlM80dowj/7w2b7MaZ3oArrkTY7hRn+GM34DwbwY8c=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{474, 3138, 3134, 708, 820, 958}}], 
           PolygonBox[CompressedData["
1:eJwV0skunWEYB/DXrDQ2bDQ2GlNxNOECGrEwO2YLG7EzHa6gO2NVG7cgMVyA
WNlwD2idY2y5BENi+L2LX57/8/+S78375aucnB9MZYcQslii9WMIbRQrJ3JD
OMwJod1sMbdIyMeefZLXKLPP2vfiS+wLPPPVPsRv7hnTXVMkNzHIL+4Y1V/x
QU4wwAb/GdFfUig30s9P/jGsv6BAbiDJOrfxbH2GfLmePn5wE8/Wp8mTv9DL
GtfxbP05uXIdPaxyFc/W/yVHrqWbFS7j2fo/ZMsz7PLGvO6JGvmAEvl7vI/v
1mUfN/ft38zPZtLcNCvM5fgeuVm+iHeQz8iSjyiXVyn1fNq+wysp3SPVcidL
ZOI9dacEeYptXpjTPVAld7BIOt5dd8Kbn+MdtDtA7g==
            "]], 
           PolygonBox[CompressedData["
1:eJwV0ctTzlEcx/FTuS1iRiVqxm2mLGohM0I9qJg2zVhIi6IL2TODbtrFVrsi
WdSChYXLyjRpRdKF4j9Ad8/T9Q/gdRbv+Xze33N+13O89W7tnfQQQhrGUZEZ
QiW2DbawiQ2sYw0pJJHvoovoxk9cyghhBn+t5fELeIgfqDKfxqq1Fv4C27ht
lsIh/Ty6MIdKsyms2D/Gc/TH2LcjhGY+iC20miVxUC+Wgyi05z3fo3cinSf4
Eb03Pot38ld6iT6rV+iTWPa8UVltfkrWyWFZLD/a1xDvzRMyW16Rj+Re2WS9
SX7gVfKEvCr75TH53Hq9fM1Py01eI2/Ff4ZcPiIvmxXJa/EaWSDfWXujn9N3
yw6k6eXmh/Un8R/wDv5SP6l/j+ejf8WS7yqRQyiyNmotS+9BJm/khXofjvIB
voGb8cxwQH+LXXo7gj1lvB3f4lmbTWDRc27wZ1hHSzxD5MT3x069Df/it/A2
zMSz51+w4Prr/CnW0BzPBNn6WTzANBJm45i3v4H3IxX/f/xWZOlncB9TKDf7
jD/21/M+JNEY3xn79VLcwyTKzD7ht/2/8B+7YGR+
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1WW4VVUUBVC6Q1I6VECUFpASpJUuCSklTewASQMLExMTFTFQUVG6w1YQ
RbG7u1vH/Pwx7ppr3ffuPWfvfd6rP+GUIdMKFihQYK+X1OO8FGelPJ3+HEIh
CnO890qwSp7BAFpThBPMS7JaPo+BtKEoJ5qXYo08k0G05Xyz+uySFzKVYpxk
Vpq18iwGcygXmO3Hy/J1uV6Kc7JZGdbJsxlCOy4025/d8vW5fkqQmy7LenkO
Q2lPSU4xL8cGeS7D6EApSlOGspSjPPtQgYpUojJVqMq+VKM6NahJLWpzqu8o
z0Z5HkfRkTqcZr4Pm7JGDKcTF5kdwCvyDVlz6nK6WQU2Z40YwWHMN2vAq/KN
2QfqcYZZRbZkjRiZ9dQfwofyEjpzsb4he+Sbsi/cpu/EV/LD1OdMfSW25hoZ
lfXWt+Yj+V66cIm+Ea/JN/Og3Ic/sofcLh/G1/IjPCYPztnMvuvPUiuzTV6l
jmB+Pl/tyQv8rN+sHpP75uisldqG5/hYv14dk3VkqX65OpCd/Kvfrk7KdXK4
/lL1QJ7hdf3afG7OIYv0y9S+/ClvVScwTb5D7cw38kZ1HMvlx9UhFMr51J+t
VmF71pylci9+kUdn7+S2fCLfR1cu0zdmr3xLzi0HcI5ZVXZkvRlDNy43O4g3
5Ftz/mjAuWb78lTuk7F0pyHTzavxdL6PcfRggdnBvJnzkPNKI2aYVc865fsY
n3OjP5RP5fvpyRX6JryVPechuR9/5Sxzp9yFb+VHWSEPpXD2QX+eWoNn5dXq
SBZkbdTevMiv+i3qsTkLOW9qOz6TH6AXV+qb8nb2Ks8Fi7PnfJfzR2Nm6mvm
/OTaOZZF+vZ8nnNMb67SN+Od3EOeD7k/f+cZ4S65K9/nDPCEPIwi2Rv9LLUW
z8tr1FFcmXVTj+A3eUL2W+7AF/IGdSzLslbqIHaRP+g7mJwzm983ulptnnXj
Xf06dTS7WZxnTh3AS/yj36ZOZA9n6e9Wu+X6+EG/SR3PCvlJ9SiK5iwxJWfE
fLZamxeyPll7+Uh+lyfmLMod+TLngCO5Rt+C97JmeT64R9+dH7NuNGGOvk72
O/fGJPpwrVlL3s8155mgKXPN6ub+8h1Mpi/NaE4LWjLPz9RjZz6LKfRjoVkr
Psj15Nlhib4HP2UNWCkPp1ieG6YW/P//ayvv/QdY3N9N
           "]]}, Annotation[#, "Charting`Private`Tag$939791#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nfcz1UYxvGfB9kkVEoyskVoJyNFNo9NMkpoUGSkIdkaRmWUVSh7j0r2
qJTMUvbK3qsye9+v/vi8ruu6z/l9n+/3nHOf15O3dcfkDikSicT7SYnEdmZp
ykTifqyWy2VMJF6h9+GK2mtIgalyRuznG+MIPxT1kS5VItFTLQu+kXd45jL+
AayRO6AUrsqdkIRpciYc4JvgKD8Md3nWx3J+NJDTy+/yN+NbubA8li+Bnf7O
cvog1horYWwi35HPwb/P34nH+Xm0tPo12hnV1VLSh+gMOt1Yfn4Un0yL0Cfo
N/RZmtn4Qb4pqsrH5DJ0itwo3lnOTT+R69B7aAW6kD5DGxrPQHvJWfEoP5t+
p16EH8eXxC7ftCLeCz8YexW3Gv9AzoUy8nX6OlJhhpwFf/HNcJz/BI2w27NW
qj2MH+XXcD9uxh5je1Hefu+j+7HKvEfwk/FOeABZcSi+ASf4T9E49s381fEd
WCd3xoO4BYfVmuMkPxxNYu3MX6P2GH6WX8dDyIYjscY4xY9A0/ge89eqlcUv
chc8jBtyF6TGTDk7jvItcJofiWbxzn7/Q+w91std8QgS1rKr2k2YFecEx/iW
OMOPwt3mfCoXiO+Ocy+/x9+CxXJReTx/Hw77Oz/ScvjVWEljk/hu/G38h/xd
sU5yCrkbnyb2hJ9JZ6vfw3/G16NFaSX6Lb3V2HHaCtXUzsb+0anRg/EbOQ8d
LtelBWlFuijWnzaPHqO95Zo0W6w/nRM9R783Xox+IdenpehTdHH0t+/6iZbH
hrgP1L/iu/O38x/xueN5cpLcnU+LOXIB+XO+GG6TT9DWOMd/jmeR2Zw+atmx
JPbQ31sXPYON8hsoG38LJ9Wew3l+NFrEnpn/c3wvNsk98DhyxpoZ+yX6F5vl
N+Newx3xLsZO4hRO4wzO4hzOo4J+uEAv4hLWx35gi9++hfK4E6fUnscFfgxa
4m/zf1V7Elvlt1EBuXBarQ0u8mPRCv+YvyHWHL/J76AiUlqbN9TSYW7ciTjD
v4BL/Di0jr43r69aDiyV//W8jXxl/C73jPUwZ7B8d6yHnEruwafHPLmgPJov
Hvspn6Vt8Xf0v7Fp/Hg+Lz+CLxR7EXeI3C/OaPQoP5cuUy/Of8k3oKXjXeKc
RX/Sy95vE18FT8vbzC9Fv5Ybxj0fe0SHyLVonugrOp82pZWMp6ZvyjVohriv
6Cw631ghfgx/b+wB/118t/o52g7/xB2lPp3/gs/Hj+QLx17GXSf3jzOL5fIV
77s53hV/yL1i780ZKueNvyHfJL/FZ8SC6Eec59vjX/5LtIl70bwBardjhXzV
s7fwVfGn/B6eQhrz3lbLhIWx7rjAv4jL/AS8gGt+vzXuBWyXe6NyfBMuqr2E
K/xEtMV1839Tq44dch9UQX5cUnsZV/lJaBfnUB/c8JvfY62xU60vno77Ks66
2iu4xn+F9nG3YlvcNdjF90PVuA/irKt1wHX+a7yIbL51oFpOrIz7EX/E3mM3
X9r4ZL5/9BA/jK9N88W9RBfQZrSa8bT0HTkzFsW5jn7gO+IGPxkvxV2FP+M5
2MMPQPU4O9F32K5eB3v5gaiBwtE32KFeF/v4QaiJInEmsVM9GfuT/v+/qhaK
xvnALvV6OMB/gNooFnuN3er1cZD/EHWih+J7sCf6CH/xH6Eu7kU67I2ewSF+
MJJRAumxT70RDvNDUA8lcVntVSQwRX4Z2a3bIPkOrIrnyxP4MtGn/BLaMnrN
2H+ffz5z
           "]]}, Annotation[#, "Charting`Private`Tag$939791#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XWYVGUAhfGhQ7pTGqRbWrpLUQTBIqRZQOkQkG6QUDqlu7ukQSQlTBpp
JQQJ/X1/vM97zvnmzs6zc+9uluadGkRFi0QiRaJHIs1iRiLRYkciw2NFIm/g
D30VJqI5WqAlPkMrtEYbtEU7tEcHdER07zPCe+TGJX01JiEKMZyNtOfBZX0N
JiOjfYGtCl7oR9EJMe2jbHlxRV+LKXjd/p2tKl7qx9AZseyjbflwVV+HIrYt
+gdIim9smWwL5Wp4pf+ALohtH2PLj2v6ehS1bdWbIBm+tWW2LZKr4z/9ON6y
7dc/Q0Z8botjGysXwHW9pn5C7owNejF9m9wUbeT7nByN5N/4S3wh/8tTvT6L
vFiuEX6OfIcjeFs+x19xj/D+/A+P4R9dV54PhPfjVtye/+aR/Dp/yFd4KA/i
7vySx/MXro/L4/TeXJCb8U2+4ayWfFLugij5MW+0F5e3h/dGCjTWf+f+mOY8
q75EroloeEc/zz1xwnkF/aDcGpnQ1RbPNl4uhJv6Jrxp26F/hJSYbstmWyrX
QnSctHVDfPsEvTD+1DdjBrrjNWdf24vglr4FM9EDPdELvdEHfdEPXyKB6ya6
pihu61sxC9nty2y1EQOnbP2R0D5JL4Y7+jbMRg77clsdxMRp2wAksk/Wi+Ou
vh1zkNO+wlYXsXDGNhCJ7VP0N3FP34EStp36x0iFubZctpVyPcRGA/0C98JZ
5xX1Q+G+ROZwb9mS2L6RS+C+Xls/Fe517NRL6rvkT9BWfsCpw7Mn/8FDeED4
Lvk5z3PNG/IquS/X51Z8l0dwHH6XL/Ig7h3uM37KY/kn11fiw+G+4rbcgR/y
KM4S7gu+ysN4MPfgV+H9XJtU/lYuiebyn/zAXkc+HZ497NJL6bvlT5EG8225
bavDs4e4OGerbDsit0NWDLYls02VS+EvfTcWII99TbjvEQ/nbUOQ3D5NL42/
9T34DkORwtl0exk81PdiIfLa14bvEPFxwTYMKe0z9LJ4pH+P0rY94RlGWiyy
5bOtC79rvIb39J+5Dy46r6IfDX83kC3cR/q18H1iuPNU+ky5HFrIt/ixva58
Rh7IXbkTP+F9zsrIe8PvHemw2Jbftj78fCRAQ/2XcG/gZ+dV9WPhO0b2cI/Y
UttmyW/hiV5PPyt3w369rP59+Fzhe5H/4vRoIl8Kny28Vn7BS7y+gLxB7scN
uTXf44R4X/41fK/cL9z3/IzHhc/p2mr8gz6AO3JHfsSjOUd4Lvh6+J3xUO7J
//GE8H/R9Wl4dvi9c3luybf5H2f1w/0ud8cBvZy+L7wGGdBUvxyeUyx1XlDf
GD4zEuFXW3XbcTkKOcMzYktrmyNXwFP9IJahkH2TrRES4zfbaKSzz9Ur4pl+
CMsxBumdzbNXwr/6YazAWIzDeExABq+b7zWV8Vw/gpUobN9sa4wk+N1WI/wP
C/cOcoVnUL8Rnmf0kiPh73bAa/8H54ojoA==
           "]]}, Annotation[#, "Charting`Private`Tag$939791#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfcllMcx/G7tActiZKmFEWDKAmpiFJRRrT3VkREykhUor1Iey+0d6G9
S1N77z1UvH9/fF7fcc513fdz7nPOk7t+m+qtkyQSiX1JE4k+KRKJX1MlEpnw
Q8pE4lGc1P2BvuiH/hiA38zJjB/NeQyndH9iIH7XZ0EffVGc1v2FHbonMUtX
AxkxSD9Tdzf6ysVwRrcCO3VPYbauJjJhsH6WLiv6ycVxVrcSu3SlMEf3BjJj
iH627h70l0vgnG4VdutKY67uTWTBUP0cXTYMkB/Hed1VuSa2yu2xWrdHfhrz
5LdwN1KlTiSa6I7wX2KYeXPlezFQfiLmmfO+fJG/YPwa/wa2ye9jje4fuQzm
y2/jAc98Jt/isyK13FQ+yj/L/8x/xRfhe/Lp8JP3zKP3YVD87cb68CXjHfwH
/CW+PD8qvo/51+mbge5vY0/TIXKTmC8XoF/L9WhyWoVOpq3pWs/v5Z+Jv0de
YP6TdIDcmNaSc9HO8rv0tlyJjo/fh0/DN+OP8c/xw/mvYx/yvfj0+NlnzKfZ
MTjej3uMd5Av85eM3+Dfwna5A9bp9sllsVB+B9kwXL9AlwND5KdwWbcev2Ch
/n4M1ZfCFd0GjMBIjMJoLDInJ4aZUxpXdRuxX/csFunexb0Yo1+seyB+n1hf
XNNtwgHdc1isq437MFa/RJcr/na5DK7r/pXfxg75Q2zWHZSfxxK5DrIjrbVp
rjvOd8M485bKuTFcfibWwpwP5Sv8DeM3+VrYKX+Eh4x3k1Ngi/FDtByWxpoZ
G8jX5XPzn/O16X/yy3RCrC+fjm8Rvws9IT9Pf5Gb0m/iDqHfy/XpnbQqnUrb
xP7wmcv4PHg9notzSfvKjWjZWFv6kfwOvSpXoKPlfz17K3rsivXTD+U78gXj
s/mUca7NO0xfwDJj9ZDHeBc5EftATi+35E/y3THBM8vlvBgR5xA3dbdjf2O3
/DG26Y7I5bFcro+cmBh3qy4fRsaexy3d3ziqq4A/dA3i/GNS3LG6/BgVa4jb
uu2YHHes/kGM1pfDf3HnYkrcp/oCGKN/AQns1E/FNEzHjLj/426P+9TchzA2
7gckwa642+Pu1BfEuFhnJMVu/TFdRfwpN4yzjpn61bpCGC9XxB3x3WKfYA//
CfaYd1x+EX/JjWI/4U5r3kp3iv8Ws8xbIz+MCfKLcU7M6Shf45PF3ybXkf/h
O6GQ3F1OFZ3nT9CXsCLOtbFBcT/xefmufB2ahL5CJ9KWNI/xu2jrOHf0dKwx
HSE3o9/JRWlvuQG9i1aj02hbOtvnruUfQY14b/wvoP3iu8RZ5T/mr8ca8WP4
5LHufF1+b5xVfhj/Kf8w/y2fOsa8+ySthJXGmiCf8S/kpLE/5QxyG/4M3wNz
PLNOLoxJcQ8jRfyW5tXT7eM/wz7zTskvY5XcNN6NjOa11Z3le2Ju3JtyEUyO
s48c5nwi34jfiR/Lt6ApYw/Q+vJ+vjP2e/50rDlWy82QH/PiztU9iinyK0iF
A/ozuspYIzfHg5gfd6/uMUyVKyM1DurP6qpgrdwCBbAg7l5dUUyTqyANDunP
6V7FOrll3INYqN+sK4bp8qtxx+Kw/nzcW1gvt4r7BYv0W3TFMUOuGnchjugv
xB7BBrl17FMs1m/VlcCvcrW4d2JfW68GugP85zhq3kW5OjbKbWJPYIl+m+5x
/CZXjzOE5J5vqDvId8Ex8y7Jr2GT3DbW25wv5Ttin8qZ5Pf4c3wvLI27SX4C
v8uv4X5zOsU9G+cj9pDcSD7El+V/4rvyj8QZ4dPEmvJT6HHvuxx3OjabU1o/
mH8vfkv+K74uTRa/M51EW9HCxjPTdnItej7uNDpSbh7/R+Ri9Ae5Ic0Q60Sn
x7vpsrgz+ZKoKc80vyTtH9+Fz8l/yt/kX+LH8Rn4lHxj/jD/BQrLPeS0OOGd
V+JsY4uxdiiCLOa0113ge6O4/KOcMdaen0Hb0eWe/x8pfoZu
           "]]}, Annotation[#, "Charting`Private`Tag$939791#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nXcFkUUxfGHkg4pSUkJSZEQLEowUcBCUEoFpFQUULobRVS6U8ICRJAu
6e5UKRVBBRSQ8nv/+H3uOWd2ntmdvTvvW6BZ+3rtkiQSiS1JE4kOqROJvmkT
id/TJBJ3p0sk2qkJ9U1ZGTUDf4p+EkX47XwmtSNfUd1s/ka6NAry3xpPFb/D
36/W4y/Tr6AEf5zPoXbnZ5j7hZoRI+XJ5W/FPPq8Wh8H6D9dd5B+BGv4ZrhO
N8Vp+j3j/ehzdHtkxBbZpngGLODrY6ZsDp8Jn/Ll8ZfsffSX/cG/Hc+HrbJZ
6IgBxs7L3sGd2CabjbnyO/GZrAL+lnXCQNkF/l1kxvZ4TsyTZ8bnsoq4KOuM
QbI/+Q7Igh2yzbKyWMg/jzmy+XwWjOIr4ZLsEP8o1vLN8YFsMP9X7Auy4jT/
FHbQO41voe/DIj61PW9Pv0D/ozbECXqu676ks2I0n8J1rekH6Avq8yguO8hn
U7vwldXL5h2mq6Iwv854erUDX159nb9BN0NJ/gyfS+3JV1E/NH8I/bc8H/++
mkRtEfuhZuPP0E9jZ7wPWSd6l3lb1XL4Tp5G/jb9Iv2v2gg/0fNc9xWdDWP4
ytFf8fw4FHtg/AhdDev5N9BFNpS/SHdEduyWbYtexWL+JcyXfc1nx1i+Sqwt
64phskt8J9yFPbG/6Ibhxi7LOse3gb1xj+iOHuiJXuiNPvG9Rr9Hz+Ijc/+J
946c2Bf3ED2Lj439K/sw9hj7Zd8E8rswTvYgrkTPYoTsSjwvcuOA7NtAngPj
ZQ/havQsPpFd5bsiDw7KFgTynJggexjXoicxUnaN74a8OCTbHn2B7/mXsVC2
kM+Fifwj+E92lK+ODfybGCL7lP+P7h5nF87yz0Qv0IeN76ArYAnfIJ6TfhU/
04uML6JzYxJ/h35pE99SnAnRNzgc71relb7u+mNqDfwozyB/j25B31Sbo5Ts
bOyd2ot/UB1q3mcxX56f76EmVVvGN6jm43+l66AovzvODLUzX0k9Yv7OOGtR
iF9qPK36Tpyp8S7U1/BLvP/4/eh/c75T82CyvGqcTfRLOBLfn/HjdE1s5Fti
mOxz/gbdM+4VR2W74j7wA98Qi2WL+byYwleL548exijZTb4XCuCY7PtAfjem
yqrjVvQtRstu8b1REMdlS6JvMcbYbVkfFMIJ2dLo0ei76KV4/7G3GOvaBPq6
rjB+kv0QvyXLh2myGrgdz4hxsiToJ7sHP8t2x9mGZXwjLIv1+PyYztdEIu6D
fwyb6FYY5brxfFL054vgN/pZ7KF/Mb4nzkYs51+N74FujJP08rhXugBm8Cm9
w7axBn1RfRn3yo7GuaF2i3uPZ1Rr4Z74G8xnjLMy+j3+hsYe06+jNP9rfJ9q
b/4hdbQ1J9DJYl1+gPFkaqs4P9Wi/O/0cyjG7+WzqB/EPZu7N85qrJCnk78b
PRjfqdoEp+gVrltGF8RMvhYu0Q1wLL6B2He6NrbQrTHGnIl8cgzki+EcXRf7
6FPG98V3hZV8Y6yULY9vA7P42vEsse/849hKt8FY103iU2AQXxx/0PWwn84a
f3uiB9TTrt0fe4VVxppglWwFXxiz+ceRHOPkk2V3YDB/L87IVmNlvB98IXsC
KTBePkWWEkP4EnFuydZglawI5siejDMJE+RTZakwlC8Z54VsbawRZwbmyp6K
3sFE+TRZagzjS0U/ytbFGvE+MU/2NFJhkny6LA2G86Xj3cvWxxqy4pgvewap
MVk+Q5YWH/Fl4h3JNsQa0av4UlYHaTBFPlOWDh/zZWPfZT/GGrIS+Er2bJxr
mBr/d8nSYwR/H87LNsYaspL4WvZc9B6mxf9isgz4hC+HC7ID/MNYzTfFpliT
L4Vv+LpIj5P8E9hGt40zgn4Dv9F59UKf+B11uvn/A2M7i7U=
           "]]}, Annotation[#, "Charting`Private`Tag$939791#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361103972989*^9}, 3.865445422662055*^9, {
   3.865445460925819*^9, 3.8654455200369153`*^9}, {3.865445694161232*^9, 
   3.8654457264389095`*^9}, {3.8654457751293397`*^9, 
   3.8654458752613173`*^9}, {3.865445930590624*^9, 3.8654459730440483`*^9}, {
   3.865446061236844*^9, 3.8654460689573755`*^9}, {3.8654464469315023`*^9, 
   3.865446455577737*^9}, {3.865952161175655*^9, 3.865952182002981*^9}, {
   3.8659522359946814`*^9, 3.8659522660000668`*^9}, {3.8659523006049786`*^9, 
   3.865952342510551*^9}, {3.8659523726628895`*^9, 3.8659523935431986`*^9}, {
   3.8659621960792484`*^9, 3.8659622764384995`*^9}, 3.8659654667182627`*^9, {
   3.86596970915989*^9, 3.8659697322444935`*^9}, 3.8659715219700255`*^9, 
   3.865971718060194*^9},
 CellLabel->
  "Out[4574]=",ExpressionUUID->"ecac3e5c-f89c-48c3-824c-4843c0067336"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.13393085829463436`"}], ",", 
   RowBox[{"-", "0.26906430995679637`"}], ",", "2.771564582860469`", ",", 
   "0.1239692940474736`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361103972989*^9}, 3.865445422662055*^9, {
   3.865445460925819*^9, 3.8654455200369153`*^9}, {3.865445694161232*^9, 
   3.8654457264389095`*^9}, {3.8654457751293397`*^9, 
   3.8654458752613173`*^9}, {3.865445930590624*^9, 3.8654459730440483`*^9}, {
   3.865446061236844*^9, 3.8654460689573755`*^9}, {3.8654464469315023`*^9, 
   3.865446455577737*^9}, {3.865952161175655*^9, 3.865952182002981*^9}, {
   3.8659522359946814`*^9, 3.8659522660000668`*^9}, {3.8659523006049786`*^9, 
   3.865952342510551*^9}, {3.8659523726628895`*^9, 3.8659523935431986`*^9}, {
   3.8659621960792484`*^9, 3.8659622764384995`*^9}, 3.8659654667182627`*^9, {
   3.86596970915989*^9, 3.8659697322444935`*^9}, 3.8659715219700255`*^9, 
   3.8659717180861855`*^9},
 CellLabel->
  "Out[4577]=",ExpressionUUID->"c3ceeef5-f66c-471c-8aec-7a4d7c046867"]
}, Open  ]],

Cell["Periodic Re computations Skeleton Code", "Text",
 CellChangeTimes->{{3.8636129580817432`*^9, 3.8636129685064144`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"f03e7ea6-c5c3-4d65-ba41-05cf4f23e612"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "50"}], ";", " ", 
  RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"\[Tau]1", " ", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
  RowBox[{"order", " ", "=", " ", "5"}], ";", 
  RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", "5"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", "the",
     " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", "in", 
    " ", "time", " ", "\[Tau]"}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"A", " ", "=", " ", "0.2"}], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxErrorInitial", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MyAppend", "[", 
   RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"f1", "[", "t", "]"}], ",", " ", 
           RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}], 
         ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"f2", "[", 
            RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
           RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
            RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}], 
     ";", "\n", "    ", "f"}]}], "]"}]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Js", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxcountAlgo", " ", "=", " ", "10"}], ";", 
  RowBox[{"maxJ", " ", "=", " ", 
   RowBox[{
    RowBox[{"uBound", "^", "2"}], "*", "\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
    " ", 
    RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}], 
      "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
         "order", ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", 
         "maxCount", ",", "maxJ", ",", "initGuess"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", 
         "uBound", ",", "K"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    RowBox[{"ICs", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"xdot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]dot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"errorInitial", " ", "=", " ", 
     RowBox[{"Norm", "[", 
      RowBox[{"ICs", " ", "-", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xs", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xs", ",", " ", "x1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"xdots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
    RowBox[{"\[Theta]s", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Theta]dots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"us", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"us", ",", " ", "u1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Js", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"Js", ",", "J"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"count", " ", "=", " ", 
     RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "count", "]"}], ";"}]}], "\t", 
  "\[IndentingNewLine]", "]"}], "\n", 
 RowBox[{"p1b", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
      RowBox[{"us", "[", "t", "]"}], ",", " ", 
      RowBox[{"xs", "[", "t", "]"}], ",", " ", 
      RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
      RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"\[Tau]", "*", 
       RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
    RowBox[{"Filling", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
    RowBox[{"PlotLegends", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", "\"\<x1b\>\"", 
       ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", "\"\<xdot1b\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
    " ", 
    RowBox[{"AspectRatio", " ", "->", " ", 
     RowBox[{"1", "/", "3"}]}], ",", " ", 
    RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
    RowBox[{"GridLines", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\n", 
 RowBox[{"ListLinePlot", "[", "Js", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}, {3.8654474644860983`*^9, 3.86544746739017*^9}, {
   3.865447584859602*^9, 3.865447593586812*^9}, {3.865952499809149*^9, 
   3.8659525292967024`*^9}, {3.8659525819378333`*^9, 
   3.8659525893724527`*^9}, {3.865971536327427*^9, 3.865971615231144*^9}, {
   3.8659716506068087`*^9, 3.8659716545185547`*^9}, {3.865971738635604*^9, 
   3.8659717394583387`*^9}, {3.865971771360116*^9, 3.865971773325487*^9}, 
   3.8659718432830696`*^9, {3.865971878869669*^9, 3.865971881703761*^9}, {
   3.865972099999814*^9, 3.8659721093028316`*^9}, {3.8659724284015865`*^9, 
   3.8659724335579348`*^9}, {3.865972467781967*^9, 3.8659724678729377`*^9}, 
   3.865972527892706*^9, {3.865972575741376*^9, 3.8659725758223476`*^9}, {
   3.8659727852052574`*^9, 3.8659727853102245`*^9}, 3.8659729110299406`*^9, {
   3.865973909258086*^9, 3.865973915857973*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[4932]:=",ExpressionUUID->"72a8bca2-8c79-47e1-9329-ba71838bf03f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "0.8972307770974721`"}], ",", 
   RowBox[{"-", "0.9070811023479912`"}], ",", 
   RowBox[{"-", "0.7842332462088191`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.865447542535137*^9, 3.8654476074003935`*^9, 3.8654476592648077`*^9, 
   3.8654477353554745`*^9, 3.8655289565223103`*^9, 3.865952621495158*^9, 
   3.8659526890505114`*^9, 3.8659528221198735`*^9, 3.8659528837451277`*^9, 
   3.8659715598758802`*^9, 3.865971633235374*^9, {3.865971739898196*^9, 
   3.8659717475087576`*^9}, 3.865971789775215*^9, 3.8659718682840586`*^9, 
   3.8659720875028167`*^9, 3.8659721409766817`*^9, {3.865972461999819*^9, 
   3.8659724918342595`*^9}, 3.865972566978182*^9, 3.865972621749632*^9, 
   3.8659728434206038`*^9, 3.8659729987618284`*^9, 3.86597337320185*^9, 
   3.8659739179393034`*^9},
 CellLabel->
  "Out[4945]=",ExpressionUUID->"682e0c40-2cda-4a1e-ba3f-983fcd81aeef"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739225468273`*^9},
 CellLabel->
  "During evaluation of \
In[4932]:=",ExpressionUUID->"4352cdd4-f21b-4513-890a-13d7220ca4f7"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.865973925852768*^9},
 CellLabel->
  "During evaluation of \
In[4932]:=",ExpressionUUID->"c09efd6c-9e21-43f3-bf1a-0ee63e72823b"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739289047904`*^9},
 CellLabel->
  "During evaluation of \
In[4932]:=",ExpressionUUID->"a17c7c64-8dcd-495c-93e7-f26f62bbcc94"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.865973932660587*^9},
 CellLabel->
  "During evaluation of \
In[4932]:=",ExpressionUUID->"85f9b0c4-5563-4438-8fe7-457850b4eb34"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.865973938040863*^9},
 CellLabel->
  "During evaluation of \
In[4932]:=",ExpressionUUID->"1444aa57-2147-4b95-9fb5-94476bdc4956"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739433841505`*^9},
 CellLabel->
  "During evaluation of \
In[4932]:=",ExpressionUUID->"0ef3e736-c67a-4922-9eb8-59dc7569af96"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739481286306`*^9},
 CellLabel->
  "During evaluation of \
In[4932]:=",ExpressionUUID->"1a08aeb2-3f15-43d9-9785-f599e953aa84"],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.865973953705844*^9},
 CellLabel->
  "During evaluation of \
In[4932]:=",ExpressionUUID->"9a533957-5a53-4964-80d0-ab985932acc2"],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.865973957531617*^9},
 CellLabel->
  "During evaluation of \
In[4932]:=",ExpressionUUID->"86076bef-26b9-45ea-a3b6-261d3fd32240"],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739655840373`*^9},
 CellLabel->
  "During evaluation of \
In[4932]:=",ExpressionUUID->"ad8a33c8-aa81-423e-afbf-a64e7b3b5988"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
dWK1t/XEDMog6nVu2kT19zjymuh16l5uznhzqZXodTolDcw+5x8k+pubxgNd
WxqWif7mj2WTe87v14nzx7dku10ZFTcBdP74rXjjVclL9AD1Nl81HKSz4MLn
4/96mw3ul1SZJukB6m362Nds5jenB+i8su2N5hI7V3qAept7xO8vJu5kAOj8
stuQyIvD+PsKnV9W/6V8gJTCCND55UNB70UT5hkB6m2es1Kwe/2QCaDzzBX2
XGzeP5kAOs88oP+EzRDfb6PzzFVzPExqr5gAOs8cqD6tXFWK7yf+621Oeqts
jQ9iBOh8875n6poVxYwAnW8+utPhuzA+/tH55obkBB5LC0aAzjfH6sl/dBxi
AKi3qSBz4Kok/r5CvU2j93lQlhGfP/47/wy3vzj5HF+/ofPNC64LVs4CHURf
83u3eVySdB/R17z35N3KYD6N6GuW7tvWZPF9kOhrNgfOZKtVDxJ9Tf8M82/y
AzTIdWyn3ZZCehDBYBz3RqoVChe6lxy5wAjk8pt7G1NqITrffM1h9u7VNBJx
vnmbuPxXXatKiPqbfi9eqJXsqYKov9n+RFJPrisbovPODmfG3ggIdBO9zQtR
qeIfC4aJ887hA5kn7etXifPN/xiyFR2bNgF0vnnen9JHasTn2/96mU632wbL
hRgA6mXGslwh54fSA3T+OSjDx77clB6gXmaT/xRjdg0+3v7rZSqU10lkBjMA
dD76epEcV6M1I0Dnoz8eCh5Wx9eTqJf5tXL/pmp8v4jOS197WFP9kYUZoPPS
9ZI8b9/SmADqZX5xqg0K3YLv/1EvM8wrtyuUEaBe5txZePdbAj4f/tfL5FXQ
cu/E5yt03lrfW4sijo9vdN76nprQ8VlORoB6mbahq43e+PyKepkuT7Qrf88x
ANTLNM/XKvzfn9+j89nXcgPjjrcyAHTeuqKwsq1dj0b0MuVHqrTOhw0SvUwB
+k0+1N5BopfJccFLhl55EDaZfMywmGIAl3JeREZ+rodR4bc2GwczgUZDs9Kk
W5UQnde+OMn7MDOYBFk30kJth/D96DmZa8GHq4ne5pjcPnWhx0XEee19g/cv
MofTA9S/jKWq+1fh7yPUvzyOz5VplfQA9S/D/W4xnjpFD1D/UtG2/IxHDD1A
/UtdbOK0pTojQOe/56RaxYfx57XKIoLuR6g40FzXGpEOYwKohxlbOfhv+zoT
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
RPK+xbMu8AxSXk08V3eWnDIH0KvR/8Re1DubC+jVjCsXGprPzC96NYdvd/7U
DO0B9GqOnY9aesCPDejVrCiNvnmqvRPQq9HfftXnk3cdabbrbfL3RFmiqO7s
196gMBL9Gn1JWW6bOhPQr/m8JXm97zEWoF+TkfToQ295PaBf0zz44F/SmzRA
v+bLsZ1GztnlgH6N+hMJNx92BaBfoyv3d+i7WSagX7PhQ+AruYutJPo1TENl
jYaAbBL9mqsSuucOPogF9GuuyIe2WBvFgH6feuvH8Jl9v2Ku9FutLMqzCc9b
l5NArybRs/lw2rzwqv8XyrM5SqptCpCPB/RsVq7Mqr5tEwpaWZfNkl9PwPKw
425xJhUQ2XjEd70fjThR6Z4WbM2ElL8hbgmqswhv07xNCgmVgP7Ny4bfjH6J
XBL9G9uDzwRfOnEo/+aJaNnpbZbDlH8zp/XuqNB0LygFqY/snhQnWtwVJ1Tq
hygPR91tcGlsDQfQw2EMMaa+3eAA+jc3Qgou+N/pBvRv8jpFTipJsAH9m0CN
4hPa69sB/ZsHH95nWOs2Avo3uypKh9+vYgH6N3rmxzvOhdEB/RubUeljs9kF
gP5Nd9aJya1TdED/xsvnlFR1+R9A/yaL33L1IOse5d/cKzoeTy5MAfRvBAqC
pYYuulH+jfVAfYzDvEoS/Zv1zWFqg6EfAf0bnokB+rK/sYD+jSXviYAOk2oy
Yf6RP92lkzB/xVXDK4/psG1FoN2rlzyEgdK2NXWzquCZ3sHn8qt4iUz1RUHd
pkxAH0e1w6kzYhsXshLHpxP0JYgDN3i03zQMU15O5t9T5bUz/Qy9nCtKSUNX
nYcBvZw7Fm/jaq+yAb2cbatpATp+XYBeTsiIlFT/KJNEL2ebS5GvuQwL0Mv5
Eliwbbl1I6CXE1ciVHzVIAfQy9nsHiElHFUG6OVcueHe3H2bDujlbP/n87L0
ZguJXo7r2D7dut1RgF7O418ntRVz4wC9HMO9wUPHX9aT6OXMWmPwVHhLLKCX
80dk/MzUxkhQSzZf6nCWRkxozNUu2M0Eg7OZ7tMDvMTIgTm5YpuqAD0dI/WI
lGnnXBI9ndDNSy4MNg1Tns6THEsR4Zm+hp7O3DVOw0ouPRAV9GWNwk8JIiXq
QW92AofydV7Y54bVfeUAejqGpqeWZE51AXo623WjEn6YsMF8fNfv+JoFxGxt
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
7q7P/b+Mnhdm9Iww/z9DuwPx
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1225, 5293, 5291, 1223, 1224, 1744, 1593, 1468, 1374, 
            1306, 1267, 1771, 1621, 1497, 1403, 1336, 1796, 1646, 1525, 1433, 
            1824, 1677, 1558, 1852, 1709, 1882}}], 
           
           PolygonBox[{{5286, 5285, 1209, 1733, 1582, 1457, 1363, 1295, 1256, 
            1765, 1615, 1490, 1396, 1329, 1210, 1734, 1583, 1458, 1364, 1801, 
            1651, 1530, 1296, 1781, 1631, 1859, 1510}}], 
           
           PolygonBox[{{5290, 5289, 1218, 1740, 1589, 1464, 1370, 1302, 1263, 
            1219, 1741, 1590, 1465, 1371, 1303, 1264, 1769, 1619, 1495, 1401, 
            1334, 1795, 1645, 1524, 1432, 1823, 1676, 1557, 1220, 1742, 1591, 
            1855, 1466, 1826, 1680}}], 
           
           PolygonBox[{{5280, 5279, 1351, 1282, 1778, 1628, 1505, 1411, 1242, 
            1758, 1607, 1482, 1388, 1808, 1659, 1538, 1320, 1789, 1639, 1518, 
            1839, 1693, 1876, 1426, 1821, 1674, 1869, 1554, 1707, 1195, 1283, 
            1243, 1608, 1483, 1829, 1683, 1872}}], 
           
           PolygonBox[{{5282, 5281, 1198, 1726, 1575, 1450, 1354, 1286, 1246, 
            1199, 1727, 1576, 1451, 1355, 1287, 1247, 1760, 1610, 1485, 1391, 
            1323, 1200, 1728, 1577, 1452, 1356, 1800, 1650, 1529, 1288, 1779, 
            1629, 1858, 1506, 1834, 1688, 1873, 1412, 1547, 1248}}], 
           
           PolygonBox[{{5288, 5287, 1212, 1213, 1736, 1585, 1460, 1366, 1298, 
            1259, 1767, 1617, 1492, 1398, 1331, 1214, 1737, 1586, 1461, 1367, 
            1299, 1260, 1768, 1618, 1493, 1399, 1332, 1793, 1643, 1522, 1430, 
            1822, 1675, 1556, 1851, 1708, 1215, 1738, 1587, 1854, 1462, 1679, 
            1368, 1652, 1531, 1841, 1696, 1877}}], 
           
           PolygonBox[{{5284, 5283, 1249, 1202, 1730, 1579, 1454, 1358, 1290, 
            1250, 1762, 1612, 1487, 1393, 1325, 1203, 1731, 1580, 1455, 1359, 
            1291, 1780, 1630, 1507, 1413, 1251, 1763, 1613, 1488, 1394, 1811, 
            1662, 1541, 1845, 1700, 1326, 1792, 1642, 1862, 1521, 1694, 1429, 
            1555, 1204, 1252, 1205, 1360, 1292, 1508, 1414}}], 
           
           PolygonBox[{{5278, 5277, 1188, 1189, 1721, 1570, 1445, 1348, 1279, 
            1237, 1755, 1604, 1479, 1385, 1317, 1788, 1638, 1517, 1424, 1190, 
            1722, 1571, 1446, 1349, 1799, 1649, 1528, 1280, 1777, 1627, 1503, 
            1833, 1687, 1409, 1814, 1666, 1545, 1847, 1702, 1238, 1756, 1605, 
            1856, 1480, 1828, 1682, 1386, 1807, 1658, 1864, 1537, 1844, 1699, 
            1878}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{5286, 5287, 1258, 1297, 1365, 1459, 1584, 1735, 1211, 
            1330, 1397, 1491, 1616, 1766, 1257, 1550, 1670, 1817, 1416, 1874, 
            1689, 1835}}], 
           
           PolygonBox[{{5282, 5283, 1289, 1357, 1453, 1578, 1729, 1201, 1428, 
            1520, 1641, 1791, 1324, 1540, 1661, 1810, 1392, 1684, 1830, 1486, 
            1857, 1611, 1761}}], 
           
           PolygonBox[{{5288, 5289, 1217, 1262, 1301, 1369, 1463, 1588, 1739, 
            1216, 1431, 1523, 1644, 1794, 1333, 1879, 1701, 1846, 1542, 1663, 
            1400, 1494, 1261, 1417, 1300}}], 
           
           PolygonBox[{{5290, 5291, 1222, 1266, 1305, 1373, 1467, 1592, 1743, 
            1221, 1335, 1402, 1496, 1620, 1770, 1265, 1418, 1511, 1632, 1782, 
            1304, 1532, 1653, 1802, 1372, 1871}}], 
           
           PolygonBox[{{5278, 5279, 1447, 1572, 1723, 1194, 1319, 1387, 1481, 
            1606, 1757, 1241, 1880, 1703, 1848, 1546, 1667, 1410, 1504, 1281, 
            1350, 1193, 1240, 1192, 1239, 1191, 1425, 1318}}], 
           
           PolygonBox[{{5280, 5281, 1322, 1390, 1484, 1609, 1759, 1245, 1285, 
            1353, 1449, 1574, 1725, 1197, 1244, 1284, 1352, 1448, 1573, 1724, 
            1196, 1427, 1519, 1640, 1790, 1321, 1539, 1660, 1809, 1389}}], 
           
           PolygonBox[{{5284, 5285, 1208, 1255, 1294, 1362, 1456, 1581, 1732, 
            1207, 1328, 1395, 1489, 1614, 1764, 1254, 1549, 1866, 1669, 1816, 
            1415, 1509, 1293, 1361, 1206, 1327, 1253, 1704, 1548, 1865, 1668, 
            1815}}], 
           PolygonBox[CompressedData["
1:eJwV0klsTWEAhuGfaCsxJxV0viphgQirzhOxIBYkqA1axUqtDImhVogpFoTb
ubUhYp425mFhHmqqYW24hgWttlqes3jzfd/7n3PvzTk3VlW7cN3gEMIgJHBk
SAgnU0NoRLvegQFUJIVwDLHkEK6gjRsjdyMjJYQDzhr06XpCnyNr7D5Mstvk
LC7IzRipr+XvocLuxAufWWd/xDL7J/q5crsdOfZltHK59hrcRTn3Fs/5vyiL
vg/Z3CW0cBPt1biDMu4NnvF9KOVakcVdRDMXs2twG6Xcazzle1HCtSCTu4Am
LsdehVso4V7hCd+DYq4ZGdx5NHInZL5nMFrOl7tkutzvunp9mv41+ky9F9n6
P2zSRzir1m+i2H6Jxz5zu/0BlfYP/OGK7Cak2+fQwGXZVbiBIq4Dj/huFHKN
SOPOop7bZ39Btd2DTH0lrqMwem946LqhcgfG+n3bnB3Wp+jv9aX6d3S5rlnO
4Lv5uXK9nSwL7AXRM7BjsiH6fXKCfQZx91bax/U8OUrOkztlmtzr+kUybk+V
n+3Zsip6FtH/NHrPciY3oG/Uh+sr9IN6rn5NL4j+S3jg+1JkHVKdbXV2SJ+s
v9OX6N/w23Vddq2e5Cw/eocYb5/GUed77E/Rc7O7o3et92ODPsw9y/WryI/+
l7jvni12JxbbCfzi8uw4xtmn8B+gTYBz
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl2HXcFGUXh/FHQkJJQUBCQUC626K7S0K6QUFUQkFJAREFpBUQQelOAenu
DmkUu5Wweb/n8/7x85zrOrP7zM7ec89izo59Gve+JyEhYVqShISo5RMnJDyc
KCGhAdiKO0tJoRIqmD2iaWi2DXeRUtKTb8gP5X/GU4RKeNx/cvKN+O24q5SW
Xnwjfhj/C54q/nzCE3wuvjG/A3eTMvIc35gfzv8a5ypJ5Un+Ub4JvxN3l0nc
K9wiLrOU5Z7nmnAj8G/4Et6Jf8PT8Uo8Fe/FpeVPfBWnkXvNn8K59U3NUjjR
n/W7+IP8Sv01viSfBffgJ6uv8s9yi80eVpNyWfQ/qafN+nJJ1ErqY9wktZzX
9tY35Z/BIx2fQf0LD1F/N79svgs/F2z+uJqTG6/OMF+ln2beCe8zz6em5sro
/1KvmaWV2nwxnMxrnlbzcM0ck5L/Rb+bP8Sv0l/ne8b3igfhJfghKc/14Zpx
b+Cb+D1ZzU3n9sf1l+RcRS4v1xzviTUQ3zs3mFvKZZUK3Atcc24UvoXflxRS
iX8srgu/N9ZErC/pyz/Dj+Zv45mSUirz+fgW/L5YA7G+5D6pYpbfrKXZ/rjm
sZbkfqlqVsCsldmB+Hzx/UsqqWZW0Ky12cE417h2klqqmxWK79zsUJxXfGZJ
IzXMCpu1MTuMX4zPE5VvwY/h7+BZklZq8kX4tvwR/FJ8nqh8S/5N/g88W9JJ
Lb4o344/il+Oe4R7jVvGZZMq4blW3NhY4/gDWcPN4A5w5SQ9V5srxrXHx/Bh
vBp/jvvh6fh1vBxnj3sen8FJpap5P9xa/5ZZRuvpb/1f/BV+t/4mPwevxe/h
gzi/49Lg8vq/1et8OqnDF8cPOL6OWpzr4Jj7+F/1x/kj/Br9F3wp/iHcn5+h
DuFX8DmkGtefe5Ybhx907D/6v/mr/B79Lf4JPhf+kF+nvs8f4gvwaXEF/T/q
53x6yeC4uriEvqPZCXwUr8U38IC4L/BQvDL2A6nODeDacG/H++FreC++jefi
9XgmPowL+tvp8OP6f9Uv+AHcA2pdtUTsYWpGr6unLxn7Iu7k+PvV3/Ag9aT5
MfN1uBv+MvY8NSv3ljow7jn9sFiveJX5I+q9sffHfq2ejX1RKvP5cA2vGai2
5d5xTCb+X/2//HV+n/4OPw9vwLPwkbjO8R1w9blSXGd8Cr8S9zE3nFvN5ZSa
4bl23Hj8H/5IMkkDvjTfhT+NX417QjJLw9j7zLqancGDYn3HMXx7fgJ/F38s
WaQRXzauDX8WH8fr8Vd4cNyjeAReg3NJnXhPrgM3MR6gMl/5hJvNHcVPxn7J
NebKcd3xOfxarBsZzHfk3+XvkQVcVmkS9wPfgzuPX497nhvJreUelXrxPlwn
bhJOJAu5jdwH3DH8VFwvfCPWqmQzbxrrWN/TLFU8S/Sf8Sf4Dfqv+TJ8triH
Yq9Q34g9iVsX34maLM5FzR3PZf058xfDq1XU/NxktX6cu75z7Md4cjyb1f/i
N4OaGH9uvh8/j/+Ia6Y+yk1QF3n9Jv2cWCP4uHkhNT33dHx/6pdmGSW7Y5vF
faLvZXYBn8Sf4G/wUDwHj8LrcR5pwA3hunBTcBJZzG2OPYA7gSvGHsI1556I
5y++iIfJh9xobgOXVxpyQ7mu3FScVL7AB/Cf+iXmn+K5+CSuFHsC9wz3ZFwD
fAmfwhvxt3g4novH4E9i7fn8yeOZGL9p1PN88th/+QK4UZyb2i2ec9w0x2VR
7+JhcT/jG+YHce/4jRHrJL5LbqK61Ou36OfFfYVPmReO/YZ7U60ca139ynyg
+qBaTy0Z+4RRC/WpeG/HpeZv6i/zp/lN+u/4EXhevB/eGL9VpDE3nOvOTcfJ
ZBm3lfuIOx3Pslh/XMv4/rk++AoeGfeMjOB78DPit4cs53JJK74i/wJ3Fb8R
ewg3ltsUzyBpGu/D9eTewylkBbeN+5g7g6vGvce15ipxffE1fAZvxt/jUbGn
xJ6KN8ezQ37Hn+EU0iz+Pu6lf98spazktnPzubPxvJLc3LNc5bi38HU8Otah
5JE2ZlXMXop7CI+JdSSj+Of4mfGslFVcXmnLV+VfjjWJ35T53Dju03jOSIv4
G9zz3Kx4fsiX+FA8K/WrzXfgBfgcLuL7zYCrx/6l/5p/Rc2k1ldLxTr1mnZq
Na4p18+xadRbeLB6w/ys+aexP+IfzMuq2ePc1LHmC/Rvm7fDW+I7UFPEvqQW
wjf1F+Ja4JRqNbUg1zKui9qbmx17cfxjA6fSf6Ue5v/Rr6F34oX4PK4R+6lj
v8GZJZ95+/ic+v5xTfBbspB7h9sa94i0iuvK9eE+iPUvX+Mj8UzUrzXfhRfF
nouLxnMb19Qn1n/LZ5EG+tJ8fsd3iOdsrBtugOPSqrfxa3EPmp8z3xLPCvyj
eTk1R1wvdZz5Iv148/Z4W6yruEaxD6pF8C39xVgX+D61elxTrrXXjlVf4OY4
Lmv8OxGn0X+jHuX/069z3G68GF/AtWLNcx3jc8UeEdcAvx3rOa4b35f/MD6L
rOcKSie+VqyfeH/8jiyO5wC3Pa6VtOHGcS9yc3E6+RYfw3f1G8z34CX4Iq4d
e7rz/g4/JIXMO5vX1r8arze7E/ssf57fGs9F7iez8urDce3MlsTeaNaB2xHP
jrhWsffHv6Xwbf0l8374frWGWpiboraNz65/iW+F5zk+m5oofufEswx/pz8e
+1msT/VpNU88u+BedSl3yXHFYr/FdeLZov+ezyqFHdclvH5QvB/+DG/DP+MJ
eCl+F++MZ1WcJy6uv6Ne5lNJzVgTuF1cf/VlrjX3keOyx/OaGxHPAvy9/kTs
qbEu1Ipq3vgb6kav36dfxnfFlx1fPPaF2HPVuvjeuNfje4jfGmpDtYx5Ea/t
qtaN/cFx6eN3Qeyt/AV+u/4XfiJehifhXbiEtOfGc/24j3EG2cQVlW58vbhv
uB/wu3FvyQS+Pz+fzyibuWLSna/Pv879iCfJcm4yt5srKR25idwAbgF+MN4b
n8SJYl8134+X66/EOfosmeM84vkW92v8bpFG+rLxfTi+h9qAa84NcdwD6p9x
HrEuzS+a78C94t9B5hXUR2Ifit9X5iti3Zl3xHvMH1NTxe+H2I/xH/orsY/h
1GottSjXKa6JOpBb6LgcfBKcKT6/eopPLFscdwCv0F81qx/P2jg3nEMa68sl
/v//Vyrh2P8BsjA1oQ==
           "]]}, Annotation[#, "Charting`Private`Tag$1321238#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfcjlUcx/HblihkFGWGIhFlREZZJYQQpaRhRqiMomgnK1nZe4vIzsqu
7L1H9p4No96/Pz6v7zjnWvd1rvM8uZu2rdMmSSKR2JI0kRicPJGYkTKRyIof
UiQSpXFVd1aujz3yR1iv2yw/iV/k13BnqkTiA/kWnx1/8a/jJN8TQxzzo3wv
hspPIoVj2srX+WvGz/ENsFcuYGwA35XPxH/Cp8Jv5m2hZbDEWF5j/fgmfFq+
I3+bL8aP5u/n/6ZNUUl3Sn6E/iDXpd/K2eiXcnV6Ny1NJ9OGMc/1ZvL34Sl5
mPm5aW+5Ji0jp6TvylXpX3JROjKey7Hn6UvYp39IP5Dvxmfmu/Op8bt5W2lZ
LDX2Oh7AP/IbOM33wlDzZsnZMFwuG7+z7g9si/vDMl1T5MAw/U+67BghPxW/
he5CPBv2yx9jg267XA7L5TeQzv11kv/jc+Jf/k2c4QsbG8r3jnfNf8U/T9PH
mqBT4v6cc3b8/hhpXrl4Ht1G7NCVxwrdm8iFEfo5ugcwSi4f19Rtwk5dBfyq
eyt+f4zU/6zLgdFyBdyIdYlduopYqXsbeTBKP1eXE2PkirgZawm7dU9jla5Z
rCmM1s/T5cJY+Wnc0l2UG+GA/Am26vbIz2C13Bx3+Q06ywkU58fQB+P+6Fuo
rDsrPxrrSe7D389/zWeI+3PO+TQ3xhl7BrfjHWMshmfS0/FYYE4ejDenEv6L
d4m9sd6xRtcC+eJ55bdxju+LCeYtlPNiglwZqdxHO/lvPoFL/Ms4yD9sbBDf
nc/C9+DvQEl+At3hfPvi+eJ96daa9yD9Tm7J38134avRJPRxOjb2FjrCM+U3
px8mxjvHpHiXmIwq+iQ4hB741HFpUMqxE+Mbo7vN289XwTpzWsU+gin6RfEO
MDHWjmtVpUlxWfcKDsc5scfcA/EtY73cGumd+0M5KR6KdUCb4TxfxNhw/sV4
zvhu6TdyDZqRTg2cM5mxvbRa7GHxPoz351+go9zPO7oM/Ee6ZHg43jltjgt8
f0xz/GI5HybJ1ZAc+/TT8Ys+Pybrno39Ffv1B3XPxj4jt0HBWN+uOcPYEn0B
TNE9F3sZDsRejaXxvHH/uuqxNnBQf0j3HP6Q26IQZuqXxX1jmvw8Unue9vI/
4XGFbxzfmv5I3AcdLNemn8l38oecZ4x7O8xXj+/Y2AZj+en38rt8Rr4rnxyP
xJqnLXCR/x6znGO5XBDT5Rq4A2PjvLEnYoWxQpihr4k0OKI/EnsZNsrtYq/D
bP2vcS38KNeKe8VV+VUc5T/HUfOOxrvHJrk97nGv3eQUeIIfRx+Nb4tvGWuV
Xor9jx8Q8+kc5/kz9je8oEuLP/EFxnmGrPF7xTulaWMt4Ji5RYzPpbVpOhzD
l7jXvM/jndF09Hicn9bEZuMdUBTz9Ct1hTFTrhN7GU7EfhT7jWsvoKviGTDL
WN34rnFSf0xXC1vk9/AYFupX64rgJ/nFeBfuo4P8b3xbuMa/Fnuo/njsS65T
iB+iqxN/X3T30S/ku3DKOY/Ht4Otxt5HMSzSr9EVxWy5XnxTOK2f6JyL4xvB
WuOPxe9srH6sJ5zRn4i1iG3yByiOJfp1umL4WW4Q7whn9Sfj/rBd7ojHY49y
n610l/mByCH3lDOhDD+NLnXseloc5XRzzesTe1j8bvRG/HaxL/D16CT3nkn3
Nc7F30/aCR8bT4kS5oynDegTsa/R1vIVfhCWOea32G8xT26IzDgf30nsr86/
gv4eaxTzjTVCFlyItR//Y8R1sED3MrLiov6Uri52yp1RAslc/x3dVX4wcsb/
WXJmrHTMBloS5fULjeehfWMPch+1+Ffie6Tv627G+sV1vglO8N/gkvOcjn0X
u+QuKIlV8T+GrhQWyY1j7eByrENMdY01sQbifwtzSmOx8VeRLfYo/Zn43bFb
/hClkNz9tNFd44cgl9xLzoKy/HTaiK5z/P+OnH4n
           "]]}, Annotation[#, "Charting`Private`Tag$1321238#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
y7fNM6r28Vn/Bz07d2k=
           "]]}, Annotation[#, "Charting`Private`Tag$1321238#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1ncclWMYxvGTSrtokSghW1nZKS2KltFSRotCiki0VVKyo2RFKA2hoYhS
RqlshSiVImTPJN/rj+tz3b/rfs55zznv+9zPqdX12vP7FCkUCpWKFQrryxQK
88sXCq+WKxT2oOsqFAo341vLFgr11PXVw+Un4aK4DG6N38Pl6Uu8FR9JM/Al
9IX3XCB/TVaURspOpgpZr7eBNtJXtIk20xb6mrbSNnrJ65d4bTEa5XWn0F60
Qb5NdhTNxJfSN9YvlC+VFafRslNpb/pWb5He6/I96TbZaVSRNsq/kR1Ns/Bl
tN36l+XLZCVojOx0Kua7l5W3kb2PK9FX+Ft8DN2ifyueLT9b3Vr9Br9PbxKf
gjfzy/Vr8ENxb73v8Heu+QpejkvS7bIzqDJ9r7c47yUvRWNl9akKbZJvl9Wh
53BX+sH6V+VvykrTONmZVNw1y8nbyj7AVWkz/g7XpTn4HGvayO7H3XBNfBi+
Ct+pfkD9vfwK9bXqF+U7XO819VvqMnS93i34DutOUp+Z356P0JvAH8EN9PZU
l1cv4ufnHvPx+FP+oX57fil+hz+pP4VPz/3i++hvyWeRv4CP5YP4SNlH/Hn9
5rwtnqD3kPoJdXf5gerD1VfLf8BX4r54Lv7Rd1mifltdlsbrN6QS1lSQXyD7
CHfAl+GpeF/8tfoH9Yvy4/hgPkr2MX9Bv0W+I35ArweuhY/A1+T3wz+57lK8
ApfLby07i6rRVvkO2fF5f9yTfrb+dflKWXm6S9aISnrfveQXyj7G+9E2/CM+
gebm3tFB1h0p75PvjH/xfsvyW+MKdHf2qzUNMgdwY1wK740vyv5S36n+RN4x
z7T6KfkT6mfV1bMn+U+5puxEPoSPls3TO1d9QZ5R/qDe5NxjvIVfqX8wPwov
znOW75d1+Av+k34v3g+v5vP0p/E5eZb5r77LcvUq+ez8Hrw/HyS7J3NE3VA9
Ut4El8YVcTu8FnfCXfHTeP/MD/XP6no0H5+nf6FsIu6FD8FH4774Z/yb67+R
z4b3pntlTamMdZXk7WXr8MW4G34GP6mekVnCD8gMUv8in4dP4kP5bbIFei3V
F6knyXvj2vgY3A//gn93/TfxGlyR7ssstOYs2SjcDJfFlXGHzEP1Xdl38s7q
7upp8qnqmeoamU/813x/2cl8GB+T+89f0m/F22UG8If0H+ZT8df8Kv1DeZ2c
Mfy6PF98Iv4y90u/d/J8Zj5ff3r2MP7Dd3mLvyurRDfIB2c+ZYarG6lHy8/G
5XAV3BF/hrvgHng6rpk5qv5NfQotxFfTYdbUlV8v+w3/6Xpv4/dw5cyrzMTM
jMxV+e+yU2kRvob+sn6F/H1ZFXogcyf7m3bk88tOo5dxH/rb+pXyD2RV6cGc
LT5DY9ltuEXOVFwVd8rZo75b/Rn/PGcr74mf1TsI/6j+U306vYKvpX9c4x35
h7J9aGL2W/ZU5oz8L9kZtBj3pZ3Wr8rczCzLWZVnPGd15qz8Ytn6POeZO/hv
XJ9exf3o8MxfeX/Z7/hf77c6sw9Xy+zNWWZNE9kY3DLnON4Xd85Zp74neztn
ufoK9Qz5U+pZ6tqZT/wf2YKcJ3w4vz3/L/Raq9tnZvPJeo/wp/KfJM+U/hGZ
yVnLb9C/h0/CG/gf+lfx6/OM8QX6z2Zm52zhu3yXNXnOc77i/fiNfIhscs5h
dVP17fJW+b+Bq+Eu+Mv8n8g8wzPxofhX9U51A1qC2+h3kD2ccxMfiY/HN+I/
8X+u/y5ei6tnX+Ust6aZbCxujSvmc+GX+SWysfxe/DnfoH8574Vn6R2W+aT+
V92QluL+dJQ1J8gHyP7Cu133PbwuMzC/qayBNWfLxuE2uBKuji/FG/PfA/fG
s/HhmUPqXeqzaITe2PwPkLdVd1Q/In9U/bT6BvnROSfUS/hNmZuZJXgj/zv7
lffP3szM0Z/BX8y5ywv672eGyedkhvIBfGj2Gn805zg/By/jd2SvJsdt9Sqr
91dfJh+nvk/9lbxb5pf6OfkR+A/1f+pGtAyfr99J9mieC3wMrocH4n9wEfog
+xfXoMfyGqqSzyi/XLYp9z2zB+/OWUvL8QDagz7MvcwMo8fxBblfmT3yAjWR
v4FvoqL0kWy97ECakv8RrtVcNj7zRv2YelPOML2qvAbuqrc59yAzChehprI3
8UAqRh9nj8pq5ZzHF9E+Xl9T3k22Jd8/8wfvQc1kb+XzWnMxfgzfjOvkTMM3
4524OH2SsyAzLWchbmRNC9mduB3eFx+Iu+M71PfnbJF3V1+tniN/Wj1bXScz
jRell/LM6t3Kx2Uf8bf1L+Sd8Qr+eO4LfwZv47fo1805h5eGc4ZmtuSZ4P9m
9meWZO7zhfoz+Vy8p97azBbZwXSTfBieKm+sPld9l7w9roZr4R54K+6Br8HP
47qZo+pidA5egQfRsdacIhsk24VL0LrsEXxIZibukHW0S16cmstX4sF0nNef
Khss+y9nEr4RL8Il8af5jurn5bX5QD48Z0n2qX4Tfh6+W68j3g8fhHvibXn/
zKz8DtRC9g4eQqXoszx3mYP0DO5E1b3+YPkVsm/w8Zk9uASdK1uV58yaLngK
Hpo1+DQ8BO/OmYcHZP7h0vhz9ebMujxveiPwNHlTdUv18pw3ORdz73O+6e2v
PkT9Sua13ng+IfuIf6vfk/fBq3I25PPz5/D2zE39Ai+JF+b30R+ZGZP5yVfr
t8tsxiv5E9nHfBoepneC+nT1UPn96oezr9V9MwfzmdRlrFuv3pLZStNxM/1W
sntxZ3xA7hnuhbfjEzN/ZKVkLWVr8HAqS19k/2Sm5bzDXahe5o31pfVayd/F
I/I+sjPyWWVFqB8eiBerZ6nnqXfwctb+D20hR3U=
           "]]}, Annotation[#, "Charting`Private`Tag$1321238#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, Annotation[#, "Charting`Private`Tag$1321238#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 9.999999795918367}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.865447542535137*^9, 3.8654476074003935`*^9, 3.8654476592648077`*^9, 
   3.8654477353554745`*^9, 3.8655289565223103`*^9, 3.865952621495158*^9, 
   3.8659526890505114`*^9, 3.8659528221198735`*^9, 3.8659528837451277`*^9, 
   3.8659715598758802`*^9, 3.865971633235374*^9, {3.865971739898196*^9, 
   3.8659717475087576`*^9}, 3.865971789775215*^9, 3.8659718682840586`*^9, 
   3.8659720875028167`*^9, 3.8659721409766817`*^9, {3.865972461999819*^9, 
   3.8659724918342595`*^9}, 3.865972566978182*^9, 3.865972621749632*^9, 
   3.8659728434206038`*^9, 3.8659729987618284`*^9, 3.86597337320185*^9, 
   3.865973966277815*^9},
 CellLabel->
  "Out[4956]=",ExpressionUUID->"bdea9f1d-0f04-4188-95fd-f68d288d25ab"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 5.999290106256353}, {2., 1.557077978348725}, {3., 
      0.7805364463377169}, {4., 16.672729645941654`}, {5., 
      12.678844991110434`}, {6., 7.943021219813425}, {7., 
      11.75092834421731}, {8., 6.987134508376827}, {9., 
      7.8185391853004775`}, {10., 6.823372328555119}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10}, {0, 16.672729645941654`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.865447542535137*^9, 3.8654476074003935`*^9, 3.8654476592648077`*^9, 
   3.8654477353554745`*^9, 3.8655289565223103`*^9, 3.865952621495158*^9, 
   3.8659526890505114`*^9, 3.8659528221198735`*^9, 3.8659528837451277`*^9, 
   3.8659715598758802`*^9, 3.865971633235374*^9, {3.865971739898196*^9, 
   3.8659717475087576`*^9}, 3.865971789775215*^9, 3.8659718682840586`*^9, 
   3.8659720875028167`*^9, 3.8659721409766817`*^9, {3.865972461999819*^9, 
   3.8659724918342595`*^9}, 3.865972566978182*^9, 3.865972621749632*^9, 
   3.8659728434206038`*^9, 3.8659729987618284`*^9, 3.86597337320185*^9, 
   3.865973966352791*^9},
 CellLabel->
  "Out[4957]=",ExpressionUUID->"3362f793-5b37-494f-891a-0207eab4159d"]
}, Open  ]],

Cell["Problematic initial conditions", "Text",
 CellChangeTimes->{{3.865447697626542*^9, 3.865447705171129*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"1f326168-d612-4bfb-8f00-5d26c5302aa2"],

Cell["\<\
{0, -1.7176561578501914`, 1.9865343349458087`, -1.0173496185733697`} -- - \
Works with n = 50
{0, -1.3903695773492997`, 1.2310181542446177`, -0.6104047394312593`} ---- \
Works with n = 30
{0, 0.08036047668264246`, 1.3496547583989287`, 0.6830225774268248`}
{0, -0.6909899189385493`, 0.6897150795907763`, -0.7182564346929077`}\
\>", "Text",
 CellChangeTimes->{{3.8659724022849545`*^9, 3.8659724170252304`*^9}, {
  3.865972499946662*^9, 
  3.86597251318442*^9}},ExpressionUUID->"4f96a2c6-1db1-40df-892e-\
51cb2ee045f0"],

Cell["Periodic Re computations using previous estimate for costate", "Text",
 CellChangeTimes->{{3.8636129580817432`*^9, 3.8636129685064144`*^9}, {
  3.8654474939926615`*^9, 3.8654475026988783`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"605fa9bd-d2f9-4de1-8459-5ae1aa1ed3d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
  RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"\[Tau]1", " ", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
  RowBox[{"order", " ", "=", " ", "5"}], ";", 
  RowBox[{"maxIter", " ", "=", " ", "30"}], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", " ", "=", "5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", "the",
     " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", "in", 
    " ", "time", " ", "\[Tau]"}], "  ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "0.2"}], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxErrorInitial", " ", "=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialConditions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MyAppend", "[", 
    RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f1", "[", "t", "]"}], ",", " ", 
            RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}],
           ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f2", "[", 
             RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
            RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
             RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}],
       ";", "\n", "    ", "f"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", "initialConditions"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Js", " ", "=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxcountAlgo", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
    " ", 
    RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
         "order", ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", 
         "maxCount", ",", "initGuess"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", 
         "uBound"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    RowBox[{"ICs", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"xdot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]dot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xs", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xs", ",", " ", "x1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"xdots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
    RowBox[{"\[Theta]s", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Theta]dots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"us", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"us", ",", " ", "u1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Js", " ", "=", " ", 
     RowBox[{"Js", " ", "+", " ", "J"}]}], ";", "     ", 
    "\[IndentingNewLine]", 
    RowBox[{"count", " ", "=", " ", 
     RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "count", "]"}], ";"}]}], "\t", 
  "\[IndentingNewLine]", "]"}], "\n", 
 RowBox[{"p1b", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
      RowBox[{"us", "[", "t", "]"}], ",", " ", 
      RowBox[{"xs", "[", "t", "]"}], ",", " ", 
      RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
      RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"\[Tau]", "*", 
       RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
    RowBox[{"Filling", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
    RowBox[{"PlotLegends", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", "\"\<x1b\>\"", 
       ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", "\"\<xdot1b\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
    " ", 
    RowBox[{"AspectRatio", " ", "->", " ", 
     RowBox[{"1", "/", "3"}]}], ",", " ", 
    RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
    RowBox[{"GridLines", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", "Js", "\n"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[266]:=",ExpressionUUID->"a1e062b3-c19b-4de5-9c5a-758815bd1a87"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.8654472366449585`*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"4862f4bc-a5fe-4c18-b2ab-7942cad26f35"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.8654472407386494`*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"d4a601e7-2397-4df6-b408-ae8073848ef5"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447244385483*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"6b7d41ac-9732-4954-ad0f-c14782216c14"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447246236891*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"d13988ad-0619-4550-8526-5c5b7817c018"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447248060308*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"35011865-bc40-4696-8abb-cc48ce8ee770"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.86544724921194*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"6204e8e8-28ef-4f14-96b6-ffe2df356b6b"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447250238611*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"c64e2e00-9ac3-4a44-bd0b-afa5face8fb8"],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.8654472511493196`*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"ff3e670c-c52f-4df5-826b-016f8ce893a4"],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447252062028*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"aea7e719-f71d-461d-819c-91e02e2edc30"],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.8654472529297504`*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"c7046757-e870-4e1d-8208-9584ea5224f4"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxE2nc8le//OHCbg+y9RyGkREWp69WyUokoJTMZoaymJAqRWSSKFKJUkgrJ
ZaXsQvY+5jGyZ/jd79/jc3z943E/rvuc+7qv8Xq9rvN4SttcMrKjo6GhUeSg
ofnv/zMfGybV8yH7aGg6nV/sP/otqSLRbUSyHAGj8lBgXip+9/5+m7NKKwro
ejf5/ksptke/n4y6k9EJ58Pn9RvrsGv/ZnL2u2FUfvSL/PWQVswqfVe+S2MC
cUJ89K5L3TiMq1IxyWoarTF7Xtvu0ott2k5i+qo5dErYbP74XTJ2+37X5pL8
EhLHeicO7STjD5fZjYX0VtCL7KA4D68enHTzImXbKRrQjhaPFDrbhv0S/52Y
GaWFfiFr9sizvzFNfTfk36AH5BeatDciE8t5Xrh2UpER3m7mzjlQXo36Zh+b
sn1jAvYn2uom0z1Iv9/pVpQbC5BDhZ998RtDx/oilCQkWCHiXv5utvZpRCmx
8f35lg1I2Zmb1EbnkQp3o/hByw2wTHfbMujpMmJFs9bt0xwwFZdLfnJnFemM
nZmXMeGCieMnHnk/oYHm4vO0Z5S5Ydp2WzR7IS18Ciq1kJrlhnw5rrNM+XRw
gdGru6aGB9x8tfS6C+jB1v3mJ/Y4Xlj1fBcpl8oAW+2Vagys+UBKgafi/i1G
qOVRZvPS5AdTXLo0bswEX9/5xSvTC8BZoWdHBZmZ4SatomFVhwAIzsTbS2cy
A2v7DV3XbEHg2OIYq76HBfpTpR8legsBv7Vgn9FLFnikIMyQayIM1cxPh/pn
WSAi7sIPaykRWGiUpV1QIsGZR+dq2AdFICKhRY/dkAQLh1IWEwtEYSyZ66+N
AwnI/QeuFQeKQap2avJrDxK82KsqWm0tDs8CNk8JeZHg7T0vbvstEkC+rU4/
cYkEgSa2R+hnJeDyH97tJvYk2NGelB5YLQlplEqGtbMkiN0c/7b6iBTQf9JX
yCKed7swNPZIrhT079V9dOsQCY6KmqRUbJSGCstDReaaJNjv+uMs931p4Dnw
KE15GwkSxWw2Vs1Kw4d5/s5v8iTYWPIq5thZGQgxfLX/tjQJIrYUK9YVyABv
R4HFiBgJLkwz/C5XlIXb74UV7YRJYPNhSup+uCxEbNhisVuQBAXTcotra7Kw
JzZ5rYWfBMxtvfJjkrnowjbFFmW1IHy7Qllf1bIeUXbpHeXrycGJbJX+3Ie7
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
s/g1pzxjgRUzfLOMKzTdMIL7aFxvmhqyQ/DZkbO7P5KRVbH1439zG6Dm3ftQ
Tm0KMr/+be5gLCfYnppK/+Q3iiyeScQ3pXCBkzZH+LWmYcT61uF88lVuSKg8
4xQQTUHbXL8VlPbxwuOvPnb2li1IzKGl1HdNEORMfgT8mSHqrf95tXzn+K6D
Yt+xU6lYwCt2KShVVXYxDHqOufdocXaIysBQVu7mYSLfsL9RHU/0lQGFmsio
ieMR6PaVB9LnnvxFg08Yj8Zkt2CN+mNG7VI00MAAmhl233GEAcNBej16eL2q
/Xl+bgbTFnq5Wc8wQKbsruttF+bxucCIWNo9LCA05kDb5deOA17JV/Bu3gCy
ATqJD94PomNmbpp6RRzAM/OnwXVgBIWRwyzyNbngrLEm69lzA0guSFbKg5sb
3k9QPorTj6ClcKGHzO3cMP3XiaKkOoxiHPgrz+vywbvRhOQbh34jK7ZW8atZ
klA2uVsh1fQFbig7Vqk+JA2vtwfyPBkMQCc5LHUTjsnAZqnXtmlE/Xage1+O
dZYMKNIt6X6QIuLV//xcMTlmSy53CKL6OWo+pfq5MpOkb2pvZxDVz20IupqR
2dWDqH7uTvfuP/P3PyCqn+uPLYnpFalZ93MvX+tYkXOyENXHOe2h/ymr1rPu
4wZYr1MUJYfWfZx1w9bQ9x/r1n3cTgXlryF6Y+s+biSjL79zeRYfeKA3cPsg
IzBLKojLz87h1o2M5cbNTHDRT1grMGgC7z58VOPsAxaYX7V5O8TYuO7pBMy4
0z1ji9c9nWKrQwhbSDdiZxDKenBtAyhLlcRJ/R5CxbpFSwc4OWHa4IuO5L5R
9Dx42T7GhgsyoiX+UVYG0U68235Agxv80smzKasU5BvRpf2VjgfuLQl5Hb85
hHY6f//m18YDNUuSB78/IKNMN6YvvqnEeaOOhW7nk3Y07LZ8otaVD4ZlubZs
vVWLwrxV73Jp80NApH+gJC5Y932KvcaxGvuiENX3pbFL1dQxZGGq71P4Vrxx
QLwIU33f/axb3v8EqzDV7wlsNyk/LVeKqX7PPKpiWOBZEab6vcO18qG3HYow
1e9tjGloMLPKxVS/Fy7gzJDunIWpfq/ugPHmjcvpOFn2a59CqyRk8Er8e1f3
HDMZ6z9IMZKChjNDQueYY7DyzjP36QuJenHXQjid0B3sDflcnErSYKtueZrt
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
gCK0GNj7sCeGgvpy+ZpMrzP2a5f9oQ0FFPTO2PRVRP8PMCVdO51g1INyxF7d
tWrtAmvedilKHOtFuF9d3MC5zfTzD1Swv0xjzyMOaHtf+VeK7wKIXq6G2/MZ
96Unb5pDBxIQ2xbTEmsjRZh/tnaP4wwFYd63zszMk9Z/CkmxfmV9erINODEx
75Lq60E2RdtZZns54AoF/Z3PohdIf5pvjTKXlxoFfex/5iVkowh9gyQO/PpD
QdZaI48yfnWC7vP7yzZG9iL1n1a8l6U44IG563bFIgvAhfk+tURJET7cvPXe
qxoKomnXS3mG/gZf7Z+q/HToRRuvj1dLWXFCXt7CwsfujPvNFRsdH25F2H63
3iDpFgVdDz0xfemyIhTVuno6qoqCtlqMKcW6dYEPwZ6t7RcZ6/d//ejKHCnu
jsSf6IluZ5n8LQ6YuEfpebjbAjALL1zFpqcIuz02Tq+bpKBF2dqwkOl2MNGi
P0zR6EU7pMX778lywi3uRmeSQhdI/1l1+NFEnzkFJWxj0i05rQgtQyxPOnVT
kEmp6/GV6TQw2tNzeHtQL3Lglh6o3MsBHybfq7U2WwDtpkkD9hsVYYTh6qPX
+ijIPs25XlO4E2geSrz/PqAX4Z5zi9ypTYKnaKTX3CPpdLV+/Q/U7PTiqfsr
Dqi8WWRrVcgCKGppPJFiqggn9edvWzHOW5jvbZx7MivUbYcw3/vza4/gOUcf
hPnegwnaQsn6bQjzvSn8saaamT0I95sfDckEh2zsRbjfHC/amzJcSSP9ZpMB
GV3d9haEeeC9HFFar71rEeaBtwkofV8VnE36zWUhvXcEJfoI7/sr3vsts/4o
4X0FH5+6yFz+l/C+65abNkabzgHcbzazcf8ywziv437zUbkfusbc84T/5c7k
HnDn+0t6zdFVu8ZTUsdIr/lv3/6d13iGSa+5u4N+cWrb/3rNSp80RAyKe0iv
OStHLVnbq5v0mks1q1P1o7tIr1mW3be78AuN9Jp1VjF3sj3vBJj//Vs9/q8s
9ivA/O9hg/LrEerlAPO/f1p0Lc6vKAKY/63yX1rL7Z9D+N+0NFf20OXnhP/N
AD23VsyGEP5X79pq95FiT9JjnuhLd7GPiiQ95srL/IttAnGkx7xlxkU3SJRC
esxBkcOV3oz3HfeYqzvF7F4w7l+4x3zyenWBFnMcwrywrNbHPTFKwQjzwhFi
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
Ayhev+pW0PAxzsv890PmBcjj/wPQN8zV
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{3620, 3619, 649, 1276, 1081, 928, 811, 604, 1241, 
            1046, 893, 776, 694, 555, 1197, 1002, 849, 732, 650, 1277, 1082, 
            929, 812, 605, 1242, 1047, 894, 777, 1321, 1126, 973, 695, 1294, 
            1099, 946, 1364, 1169, 829, 1339, 1144, 1413}}], 
           PolygonBox[CompressedData["
1:eJwV0MkzFmAAx/HHVmHGXSopSaXFDdf0etvj0K0DHagspV5tcnGOaB0XLdoY
9Rc0YwZ539dS7vUPtIcWYqaPw2ee5/d93neGt6CupaY5NYSQwgjFOSFsp19s
5VO6TVdaCLlMaPsZ1QL12pz9kIt81orp1tcT1yoZ01Jo0ObtwowQau24/cjO
tCP2sF3t3uV+01lmlzljdqfzg13vHLAv+d4X5w5u6XkktAOMa6mc0Rbsx8SI
UEWUt97TOOszv+wntPFV20mPvoGkdpAJLZ1z2m97m7+jzk7YA3aWXWXHnK+0
Gmf36m/nLLfLnW32R/fLPv/NfRe99kYmtUPEtQwatT/2U67wXSvhtr6JKe0w
CW0NTdpf+xlXOUJSX0uzt0X7Odf4oe3mjp7PtHaUSW0dLdqS/YLr/NT2cFff
zIyW6/85qb2xoxzTpuxMztsR753u//Qi99Pu7c6kt1POvtXf2PnSe7Yzar/2
VkG7Nmfv5Z5dwDvtONNaFhe0ZXuQG8xr+7ivb+G9doIZLZtWbcUeooMFrZQH
+lZmtf9ONWJq
            "]], 
           PolygonBox[CompressedData["
1:eJwV0UtQjWEAxvG3ZFNUWpW7BQt0UbHRhbFhhsy4MyklkoXTzmWGCplpUJwz
dphxqZahy7jPmFrHSgupcyo7d3v8vsV/nuf/vO8355zvrGqM7TmTHkJIwzus
yQ5hNeqMhShCMQYyQvg6L4S9mOI3UI9P9ny02TPx3FaCJ7ZvfB+m+U38tW3G
Q1shjtkmeQHaeRbWzg+hmY/r9fpd/YV7OfpO/awcdLZfxnmVXqGf15P6Bnef
6t+jO0jybjTgs30xOuwL8NJWime2H/wAUrwH/2wVeGQrQqNtii/BZb4Qr2y5
PnuXbYhXo8w2yH/qBzHDV7hTaxvlt6KXzSv5Y16jX9eL9VI9Fn0/+ZE3yQf8
jjzuuWl9KWL8ivPtspN3yWy+Tp7iF+X76P3KezwuX3t+kazh5+Rw9HtlgvfI
LbxSXuAp/bTer5d7bkj+sh3CNns7n7Wv1I/qY/bbPI1X8V5eEr0L3sonot/i
PKkvQ6v9qi0Hb+wbMWz/zQ9jjseR7l61vS/6X3HCluLL0cl3OL+m5+rr9Rb9
kvzAG+R9npBvPZcnd/MRZ1uxyTbC/+hH8IUncBL/ATAXX4I=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{3620, 3621, 651, 733, 850, 1003, 1198, 556, 1190, 
            1385, 991}}], 
           
           PolygonBox[{{551, 3625, 3619, 731, 848, 1001, 1196, 554, 693, 775, 
            892, 1045, 1240, 603, 648, 730, 847, 1000, 1195, 553, 692, 774, 
            891, 1044, 1239, 602, 647, 729, 846, 999, 1194, 552, 691, 773, 
            890, 1043, 1238, 601, 810, 927, 1080, 1275, 646, 1175, 1370, 962, 
            1402, 1115, 1310, 728, 845}}], 
           PolygonBox[CompressedData["
1:eJwVzj1PU2EAhuGXUrcWlBFxIBFa2UCURB3AxYgwWJS2DA4qiYOpQ8XioHzV
xOjCYIylalwcSPwo/ACEGROxH7o5of9AQQf16nDnee7nPe85p/vqrVQuEkJo
QQnJthD6kDGuHAhhNRrCTfmjNYQ5/aw+pm9hih/hXz17jL/EkO0PHtjWEbXd
RYetgbStiDW02mdxyF7HpO0LkrYXOGn7jSVbBRFbAQdtNVy2XeCbyPIu/9Kw
JfhznLDtY9F2hq9hlMc99972kU/zJG/R76CdV3HJ+Xd+Xx9xPqo/1bP6Bz2j
H9brnnsiX/Frze87m5c53i97+WP5iI/LMs/LQb6HBfef8df6DfnNeVEW+Cl5
mi/rE3ql+Y/yPI/Jd+6W9Sv6trPrekIP+kNZ5OfkDM/JNv65+S73dm339OHm
+/QNpHknrznv4Ss4bvuFedtb/MNte9y2gxSv4qithAHbT8zZ3uAv8vaY7RMu
8v8CqUuj
            "]], 
           PolygonBox[CompressedData["
1:eJwV00lQj3Ecx/GHCiczVOpGRU6WobJTKWYwI2GYESUKLRIuhhmjgxRmHNJi
neEgy12yFuVsOVhuWZLdjH1//Q7vvp/35/t75pn/8zyllNYUbh0cRdGggD/p
w6NoPD4py2Oi6B+6Y6Mol9fiFD6iTP8XXXY5fBtO4gM26v/gll02Xyhfw0qe
HBdFvbqHvJpP5slyg7xEPixvN9P5AGqcbeFn5XLzqf1OeZo8Tb6EfD6Mn3D2
PTbofuOmfh7vQRI/hHG6Vwg/+jjeoVT/Czf0c3k1juEt1ut/4rrdHL5AvooV
PMk97+hG8YMYq+tHle4J3yFnOZMlX0QeH8rb7NvkIvmuvkROk9/o6806nm+W
hGdk/gjPTzc7XMfb5UrzmX6/uSf8TjOfHzGP8tVmJ99lLuejzNuuPy2Xyg/s
9ppVfJKZyA/Ii+VGOU1+Ge7jmsfhnciZdpnyYblAviDPl4fIrc718mKeyl/z
Yv49PC/dLJ4nX0EhT3SmW3efV/KJPEFuNOv5IrOB15qp/AUqnG/mZ+Qy85F9
nVnLM8yM8I7NQ3ypeT58K2YujzNbXN8qr5F77Hab63iKOWC3T84Lnd03dPKZ
+r5wNnwbdvPlJnmV3CEvkxPkLufu8Qo+gceH54kU/hxb7KfyduTwWGeada+w
Vvc1PBv9DJ4rX0YBj3fulm4kr8cY3TNs1k3h55DNY8J71/WjSPcFHfrp/CZG
hG8Fo3V92KRrwkus0X8O9wz/V/w/YMiC5g==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1mWYVVUABdAZUumWLmkEpLtLKUlBkJZUupUG6QYBg5BOm0bpEpRQuru7
23U+fyz23uc+mJl37+ObDC061e4YGRERkSVKRETI+f4oRBL7qB1FTrbTyXH2
HX0QKe1MMo6cIeu6dlp2JjExnU+XO50/k6PJTX57u6zPM/1HHurDyE4P+6r8
nDQcCN8DC/TCHNPHU48C7HDWgOf6T/QkKgudFeG4PoEPKUg0Fjkvygl9IvUp
xE5nH/FC/5leRGexs2Kc1CfRgMLsctaQl/ov9CYGS5wV55Q+mY8owp/OGvFK
/5U+xGSpsxKc1qfQkDN2l3Af2GUXZbf+Ma/133ikDydHeL/sa/IL0hLLm/at
/Mf5SzmOvCR0Pke+4XyZLElSZ2fC+yan2F/pd+VgUjnLLOPKmTKjbOT6Wb0r
ye2k4d+TX8sM8k/Xn+tjwj2088j4crbMJIu5vkdvTLJwc2V0OVWuMB/LEeQM
P499XfYNzyD/2q/kePLxpr1cluKsPpV7+hCyhPfLPie7ha/Fbrs4f+lNiGSl
3Zcbej/Sc9COxQ96ac7p02jMebs7b7HHLsHfelOisMruR+zwfNtlOK9Ppwkl
2eusGVFZbfcnTniG7bJc0L+mKaXY56w50VhjDyBueE7tclzUv6EZpYlHfBKQ
MDyfXlOeS/q3NKcMicKz6LwCl/XvaEFZEpOEpCTjLZKTgpSkInV4Fv3dilzR
Z9CScqRhhfNKXNVn8gnlSctK55W5ps+iFRXY76xFeCZYaw8kHavs97iuz6Y1
FTngrCUxWGcPIj2r7fe5oX9PGyrxj7NPiMl6ezAZWGNX4aY+h7ZU5l9nrcIz
zu/2EDKy1q7KLX0u7bhg9wifC/6y3+Og3jo8q/xhD+Vt1tnVuK3Poz0X7Z6k
4G/7fQ7pbcJnmg32EzmSd/jSvin7h88eh+zXcgL5w+fNXi+rc0eP5nP2lT5f
vy+HkpVP7UuyFynD9+p138i9zl/IsaR19q5MIL+XmWUV1w/rbcPnwY4d7oOc
Fj5HcqPrT/VRpLZzyXhylnxbDnP9lj4g/Mx2RhlbficPuxb+85+oFyCRPjd8
Xce/yxrc1RfwILwXZOMz+7LsTSr22VU5orcjDpvs4WThD/sD7ukL6UA1srLB
eU3u64voSHWykZ0c5OQdNnpdLR7oi+lEDY46a09cNtsjyMUmuzYP9SV05gOO
hfsR3ie22CPJzWa7Do/0pXShJsfDz0x8ttqjyMMWuy6P9WV0pRYnnHUI95Ft
9mjeZatdjyf6crpRm5POwi8JCdlujyEv2+wPear/QHeu2H3CvWa/XYdTeqdw
/9hhj+W2PjA8AxyxI93bSXpBEuvzIv//nSSfa/8BCDYFHg==
           "]]}, Annotation[#, "Charting`Private`Tag$221994#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nf8jtUfx/HbigilIitkr1AUWVkZ2TMUURnZlE0ysksZSTaVn5BdIVRG
qOxslVCp7IiMnp/H74/X4z3Oub73dV/3Oef65mrbrWHXJIlEon+yRCJ/0kSi
Dj1IH0yRSLRMrqdf6VrQd+U3jP1LS2OWvhCa636Q703+/7+TAit0BbBQ96tc
F4fkkWiBA/r7MEB/B1bqCuJj3W9yPRyWR6ElDurvx0B9SqzSFcIi3e9yfRyR
c6dLJEbTG/oymK0vjGd1h+SMGCSnwmpdYSzWnZEb4Kg8Bjd1T2COrgie0x2W
M2GwfCcKeibt5O/4T42nk5+Wl8uN+bf58nxZvi8/guZxfz/qOvIf6oq4bgn9
Q9cQx+SxyGteK1oUD6MYPjHvT3Ma4bg8Dq1xRP8AXtOnxme64liq+yvuBT/K
43FLVxZzdUXxvO6onBlD5DTxm7q39vL3fGt+Ov+5een52nwfusJYE/qOXIEv
x/fjf+JLmLuMPxtz8JP8JtrgmD4LXtffhTW6R7Bcd05uip/lt3BbVw7zdA+j
re64nBVD5bRYq7vbZ9fRrZQr4lHdCvk83wwn5BzmPKv7Wp4gJ+Ty8vxYm/xY
vhj/CN8t7o/+IL9I58iT6Quu+5HPhm7yMOM16Ah5NE0Xa412iDVGd8bzpTPk
d+g6199D68p96ar4vnSi/BZ9Ui5P+8s/8y/zH/ElXbeSXtA9gyr6IfIv+pz8
c/wm/dtyErmC/IFcPJ6F3F0+EN/F+E98dnTXD9elxxf6Ulilvxj7GSfld5DU
vIr6D+N3xUu6n+UHYz3LNY2/wd8d+4TvGPuD7pLb0JnyRLredRloPXm1sUp4
TLdavhTnC07JE9EO+az/x+mnxi8ba4nT8iS0xwl9jjiP9Pdgg640PtP9Hfsd
v8qTkSyerf6j+H3RQfeLnBMj5QzYqLvXvPq6T+XKKKP7XL4S+x+/yVOQ3LxK
+gXxfGMv607KuTBKvjf2ljkvy7v5L43fJzeQP4s1yU/iq/AV+AH8Cf4J89bw
V/lWqGrs9Tjf9Ln4VnFe0s3xPOhU+V1jKfjK/Cv0f3F20nHyOFpSLkl7xJ6h
B+M3pHPlKXGPrj/FP4Qe8mjjtehIeQy9L/Ye7STv4b8y/365YZwJcY9xvunW
yv/EeYEz8kPmtNZtkafKd8hV5IVxVvPj+VJ8Kb4nf4jvZN5pPnd8tvy0sVFx
7vPF+M5xxtG9cRbQWbGfXZORb8T3o2tij9DJ8gRaLc4EOjDWCv0lPocukN+j
5Vy/jr+m7yI/T6vRobE26B/xTole3hrrin8vrtWn5KvyH8daDuRe8mG+s/Ff
+TwYK2fEJl0mcxrr1spPxX7XfSFfj/2CP+Vp6IIKWG/s3/i++Et+H13xmz5v
/Mb6TNisq4gNuhvyCzgrT0eqeA76RbrHA/kV+Qjfjp8X6yjOPXN/5/OhZ/xG
xmvHmoj3S5wnfBd+H7/F3AfkJvI6uTqe1G2Ub8ZZg3PyDHRHJXxp7FasP5yX
Z6IHKuMrY7fjfnBBzm//z6I9ccZYfrxpLDO26qrga10C7XUX5dnohT90BeJM
1WfBN7qq2KRLgg66S3Ie999G/kaeI98pPyUvlhvwb/LjaWm5NH1VHkaPyu3p
/NhzrvuTFoz1ps+Kbbpq2KxLio66y/JcvIqnUB01sMV4Mrxszt/yPPTGX7pC
eFufDdt1NbFVlxyddFfi/wT30VbeJs+XU8vV5VfpEl1D+lY8O1omzjTaWz7G
9zH/LF843k9yduzQ1cI3uhTorLsqf4C+OKcrEme6/kF8q3sa23R3oIvuH/lD
9ENtbNenRFdj1+SP0B/ndUUxSZ8D3+nqYIcuFbrprssLMAAXdA9jsj4nvtdl
9n2a6r6Qa6Cu7lv5znjHxR6L93TsoXinxDucH0i3x5lOp8UzjnPTeBpaQ/4k
zmIM1F2Ui8VZKefCTl09fKdLHWem7oa8EINwSVc89pP+IezS1cf3ujSxr3Q3
5Y8xGJd1JTBVnxu7dQWs/QZ0p/4u9NLfkhfhNfyteyTOIH0e7NE1xC5d2liT
utvyYgzBFd2jmKbPi726LL5rM916uWbsXXmQfJJvZHw3ny5+s1j3sb/j/wV5
FE3I+emL8o54V/Hv80tcdxdfk+9Nl8bfohPksvFM+T78cHpc7kA/iO8e7znX
XuVLxveNv2e8Dh0T5yfNJ5egXeUhdH+ccXR2rB+6z/VZ6TPyBmPN+Sl8Lb4S
P5g/xTc2bw+fPu5RToICxl+Sv+U/MZ5WriUvk8thqO6feF9henx37NdlM6+5
bmO8q9BEt1e+G33kpFiqG4ZruscwIz4PP+iaYp/uHvTVJcMy3XA0w359BvTT
J8dy3Qhc1z2OmbqCOKDL7l5a6L6MMxuV5dfk0/EuivUdv388H3P/Az0JuWg=

           "]]}, Annotation[#, "Charting`Private`Tag$221994#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfclmMYxvHnbU/tIaEplYZSqURDQ4P2EFJaRIWGlIwUaVKinfbe0V4q
pG20NNGipVChfM8/fp/zOI77ut77fq755m/XrXHXpEQiMTZZIjE+ZSLxXupE
4u9UiUSuNInEu+oN/gUU5UvwR+nHkY8/zKdX+/KX9N2iPoBN8mTyV6IvfUF9
Br/RO7WbS+fBLL4hTtHN8TOdDfvo6thNv4YJ+rzPX6MHoiQuy3ZhnvwOzJY1
QnZMlA+WXacHoRT+kO3GJEzGFHyGD7S74fl7KI0rsj2YiiGe/SN7H/fjqmwv
5svzYo6sMXJgmnyo7F96MMrgT9lWWTls5rvEb5Mt4O/EXL4JcuI7vgb20H0w
Xbth/H/0ByiLY/wT+In+y/NtdHl8ySc33q/SL9IX1Tb4nc4qf4f+TvuF6l0x
XrJ5nt2ku6IpfVptgUKe/cJnUt/kS6m5+O/pR+O7+b18GvU1/j719fitdAfc
w/8R86gO4EurM7x7OH1Tnpsfov7Dd4n1Qh9XGyK/Z0f4DGq/WIf6faVWwBZ5
CnkP+iX6kvoszse3abeIvhvz+VtqNzSjz6gt8Wu8Gz/QNbGP7hvjSHfEFXqm
vzOCvkUPRTmc4BvhKH3N86/pB7GV7xp/T7Y49gMW8M1xO37ka8W40/0wS7uR
fALD+PK4LvuGr4htfLfoJ1sSY4GFfAvkwWz5h7IkDOcrxN6U7cec2FOxF/CR
58kwwvMHY5xlB2LNYpQ8OUbKK+Jf2UEslRXAIllL3IEF8tGyFPiQr4T/ZIew
TFYQi2WtkBcL5R/LUuIjvnKsL9lhLI91hSWyJ3EnFsnHyFJhFP9QzJtsO18J
X/Hd8ZNsBV8YS/nWuAv7+dr4nn4Di7X7hE+N0XwVnKQb4xidwLd0ZXxNvxxn
CN0WF+gj+n8e6xfLor211p1+ij6rtsIpOrP8rVhr9AG1Tuwp2Q98WrUP35/+
W+2EIrKrcS7Fecrfry7xrk/pNLid/zjmIvYuivEP8z/TTWJe+ON8RvUNvqSa
xO+gH4pziP+GT6n25F+Js05th4v0Ue/6Ir4Dy/mncY5+EqfpfDhIP4Yf6Tex
VJ+xfFqM4R9BMuzkq2A7/WqcR9qt5O/FCv4Z5Mcy+ThZOnzCV43zKfZ5rIWY
zxjr+K7oj/Hapcen2lSLfR77Tr4KE+QZMFZWPX5nzGs8kxXF53wbFMBq+URZ
RozjayBVjKV8dYwtvuCfRUGsiftAdhvG848iNX6Rr5EVx0q+LQphbdwdskyY
wNeMcxC/ytfGWYhVfDsUxrq4Z2SZMZGvFWsEu/iH8S3dA6e0W8eXwGr+OdyD
9XFHybJgEl8b6bCbfwQ76J44rd36WBtYw7fHb3RrnKGL4BBdF/vpt7Ah7jg+
KybzdeJ3001xgk6PPXRV7IxxtL560b3oK+pzuESf8Xc20KWwlk/S7mW6A/17
7J/Yu7KzfBb17Vgv9GG1Xuwj2YH4XXGPxBhEG/4a3Tna8n/yOdSBfBl1o3dO
o7MhDz8lzib6pZgz/rGYE7pZnFP8Sf42tX+sJXqvWg27Yr7lvene9FW1PS7H
nveOjXRprOM74jz9NM7RReNsouvjIP0ONukznc+Oz/i6sW9jv8k3xd7Her4T
imGzfIYsB6by9eI7Y+7kX8b/U/H/Q9zzcQ/G3YOZ2ubENO3qI1OMc9wjmCXP
hemyBnFWxTfHmYrZ8tyYIXs85gIX5JtjTLGB74zicU7GnRJnE2byTyArLsZ3
ycpiI/887sMRvgEO0QNwnX4ef9E5je+g6KPu0P9/9iFoBg==
           "]]}, Annotation[#, "Charting`Private`Tag$221994#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfclmMYxvGnrEpJCJWVTbbSnip7FdESUVIpCkUaotJUVrIpI9pTkZQR
SqLSkhUqoUFWGd/jj9/nPI7jup7nvZ/7us7zrdi2a5MuRQqFwsKihULlYoVC
oxKFwqTihcLZWM6PwBDZr3xPHIr2sltkn9MtsYufhSpoLJ8sq4wV/IMYKvuN
vwvlcJOsi2wV3Qq7+Ql8WTzBz+afoPfAA/yJmEMfjZfpc6yfR0+hq+Bt+iSs
lL+o7oeH5Z+o1TBSPkzdKbsbi+gzUJ6erh6GH/A8/7laF9vRwee6qqvlX6qt
1XfVU/ET/rE+UT0Y3+HJvDO1FrbhdetPqnviawy2vlitnOel56rH4BW6qr3n
01Pz+/Ic/Et8aTzCj+KH07/TvVABN8tula2hr8W//BxUwwXyaflerOIfQkfc
Jl8ra4P/+Ll4SrYXhsiWqFVwMv2Geiw2Yjy/Wq2P6j5zoTpdVi05/zA6oZt8
new6FPIdshq4SD6Dr441/CPojJq42NpMeQ2s5R/N/UIt1EYdXGLPLOs1sY5/
LHdT9gd/Dw5DF1l32Rf09SiCN2V1cal8Nl8LX/Cjc7aoh8tyVvLaWM8/nveK
2+XrZW1RFPNkT8v2xlC+EurLLufn0HVyT/iX+f3xKD8mPUD/SffG4ZjBH44X
6Nus30F/Sd+A9+jTcvfpSeoheCq9pNbGW/Y/o+6DYfKP1XNwSn6rehw24dW8
Z7VBejfV565Q5+b3546rC3LO+BFfWX9FLYNv8Zj1ZTlr/JK+tD5S/Uv+ldpH
/UA9E0fQM1Mxlu5m7535TvpG7InJ/KF4mp5v/Vm6GIbzp+JcWRP+Dboevk7v
5DzRMHMJTa2/mXeOb3Jvc0bokf6StcNemQeZQ7hSPo9vgG9zdnnX6Cn/JnMM
e+c9ZJ7gqrzfPAs25D3nd+CuvJPMLeyDhelVNJPP5xviu/wmjJL9zffFkegh
u1u2ge6AYngn/Ymr5W/zjfA9/1z6VLaL74ejMnNlvTJf0u8onhmU/sM18gV8
Y/zAP59nTa+hubWF8vOwkX8hz4F75N/LOqJE7lv6Dy3k7/DnYxM/Nj0t283f
i4qYxR+JcZkpaj3sQC97e2eGyjthX7yfnkVL+bv8BdjMj8szpB/Td+md3Muc
PVrZ+559F+LHzPJ8L/pkBsk6oyQW5S6gtfx9/iJsybzMXvRND8huQanc09wF
XCtfxF+Mn9Kn2Yt+8s2ZH9gPH+YuoI38A/4S/Jz+yN6cO66z9qH8UvzCj8e9
If0k64rS+CjnjOvlH/GXYSv/amZg/ofw/XF0qqy/bAt9K/bH4pwz2soX85dj
G/9a5qTsX/4+HJMquy//mzJXUAZLchdwg3wJfwW28xMyQ2X/8ffj2FTZ/bKf
08M4IPMl91JWHCP409BCdiP/Md0EO/L7+QMwmp+Y+UoXMIA/DgNkAzJL6O44
EFP4cniGXpr7S5fAg/zpmEcfj9foltbb0UvppulBulJmW96leiAel3+q1sBW
TMosV4tgYM5VPSvfSc9Wj8KL9ED7BuYz9O25u/TpOIieqpZPz+BZfqVaB5+k
p9R9M0swMr9BrZr3hzP4t9QTcrcwgV+rnovf0Mrn2+d75OvVKzMXMsdz/tmT
M84zZHZgjPXP1JqYbG2MWhSDcsfUs/O36NfViniJHmTfIHobfQfKYhpfAc/R
y9LndEmM4s9Ea9lN/DL6Kuzkp+CBIN8uuxMH512np9BB/infDL/zUzE4/ZM+
yd3HzfZ8Zv1q/MFPw5Dca3S0tlx+Df7kp2No7iw6WVshb46/+BkYlvuHztZW
5j7ib34mhudvZy7JeuCQvLfMHVkpPMSfhfn0iZhIr1MbYifa2fs/1beLDA==

           "]]}, Annotation[#, "Charting`Private`Tag$221994#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/KaxSTwH9rKUuf8BKA+y3Q==
           "]]}, Annotation[#, "Charting`Private`Tag$221994#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 9.999999795918367}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8654466261281967`*^9, 3.86544666786285*^9, 3.8654467269099674`*^9, 
   3.8654467658875027`*^9, 3.8654468227773094`*^9, {3.8654471081240582`*^9, 
   3.865447131300647*^9}, 3.8654471686976876`*^9, 3.8654472149538946`*^9, 
   3.8654472536035347`*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"8422c06c-0a54-450f-bf30-82fd245b3abe"],

Cell[BoxData["13.131296596794906`"], "Output",
 CellChangeTimes->{
  3.8654466261281967`*^9, 3.86544666786285*^9, 3.8654467269099674`*^9, 
   3.8654467658875027`*^9, 3.8654468227773094`*^9, {3.8654471081240582`*^9, 
   3.865447131300647*^9}, 3.8654471686976876`*^9, 3.8654472149538946`*^9, 
   3.865447253633526*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"60eddc4f-7de6-45ca-9031-103521e3ce42"]
}, Open  ]],

Cell["\<\
Periodic Re computations without using previous estimate for costate\
\>", "Text",
 CellChangeTimes->{{3.8636129580817432`*^9, 3.8636129685064144`*^9}, {
  3.8654474939926615`*^9, 3.8654475142641797`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"5e902872-386c-441e-a1fb-71cf8c39bef1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
  RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"\[Tau]1", " ", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
  RowBox[{"order", " ", "=", " ", "5"}], ";", 
  RowBox[{"maxIter", " ", "=", " ", "30"}], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", "5"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", "the",
     " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", "in", 
    " ", "time", " ", "\[Tau]"}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"A", " ", "=", " ", "0.2"}], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxErrorInitial", " ", "=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialConditions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MyAppend", "[", 
    RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f1", "[", "t", "]"}], ",", " ", 
            RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}],
           ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f2", "[", 
             RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
            RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
             RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}],
       ";", "\n", "    ", "f"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", "initialConditions"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Js", " ", "=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxcountAlgo", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
    " ", 
    RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
         "order", ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", 
         "maxCount", ",", "initGuess"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", 
         "uBound"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    RowBox[{"ICs", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"xdot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]dot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xs", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xs", ",", " ", "x1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"xdots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
    RowBox[{"\[Theta]s", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Theta]dots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"us", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"us", ",", " ", "u1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Js", " ", "=", " ", 
     RowBox[{"Js", " ", "+", " ", "J"}]}], ";", "     ", 
    "\[IndentingNewLine]", 
    RowBox[{"count", " ", "=", " ", 
     RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "count", "]"}], ";"}]}], "\t", 
  "\[IndentingNewLine]", "]"}], "\n", 
 RowBox[{"p1b", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
      RowBox[{"us", "[", "t", "]"}], ",", " ", 
      RowBox[{"xs", "[", "t", "]"}], ",", " ", 
      RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
      RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"\[Tau]", "*", 
       RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
    RowBox[{"Filling", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
    RowBox[{"PlotLegends", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", "\"\<x1b\>\"", 
       ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", "\"\<xdot1b\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
    " ", 
    RowBox[{"AspectRatio", " ", "->", " ", 
     RowBox[{"1", "/", "3"}]}], ",", " ", 
    RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
    RowBox[{"GridLines", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", "Js", "\n"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.8654473718577185`*^9, 
   3.865447380483961*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[284]:=",ExpressionUUID->"db1fe012-3c00-41dd-bf23-d956f20ffc05"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.865447385776267*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"e24d5fa0-1925-4b91-a6c5-4b3a0948a4f7"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.8654473897140083`*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"042e9e3b-099c-4e9f-9b60-7737234042ea"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.865447394935339*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"e4a9ea77-aef1-4256-afeb-43647d389980"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.865447398142313*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"d8e5a864-996e-49ef-9668-635c7ed12e67"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.8654474004075885`*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"abc38e85-a5cb-4755-bf7d-359408195a9d"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.8654474015802135`*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"64161f47-8839-446d-ad3b-a4b9ef25f4ac"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.865447403910468*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"a529319e-a79d-4789-b379-26c13e1c5fb4"],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.865447406214731*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"7dc6844b-8e20-4c36-93fa-3e649567c9cf"],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.865447408268075*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"50af0c08-a1cd-411c-ad57-7951aaf420ab"],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.8654474093067427`*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"e5a0acf8-e273-4885-b0dd-0ab36f8925bc"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
++dFK4M2SJ4eB7h/fqC+VC/84SThy6VhyoHSHQyA+fJYh1x9y0UG6Z+nT7vs
ZrvJAJgvX5kpwZX3bhJgvnxLq4nTrfExwo8/WpkQPavQSPjxjHsPL4lvrST8
uPnjT2+DtXMJP/5uMPf295Qgwo8vf7miruz4RyRp8veui50ojLGKDenPyESY
J5c1Dv3qw7zvYp68W1InpaEYEZ58x+F+6vC5H4Qn57RduHLO/RfCPLmdjiLb
zdoqhHlyeXjE+DKqRZgnt/OP3lAdQkGYJ/++5fQKs+EahHly2WLfsny9Hwjz
5OZWHr2HLEMB5sdbdp1mlFo0AsyPn3k+u7VfqBPgnnrTwknFb3PdAPfUJenA
19+JBjBf/rDVulZ2mAYwX2785ifHsvs0gPnyget8pjybqQDz5e99t/cM6HYB
wpOf+Bx0abYJYJ78nvryw5XvrhCePKz5k7hf7lfCkyd5Gqb02v4CuJfOfuyL
3axBL8C99PKs80fqfg8Qfnzsy7s7EVeHAebHyyL45cfGRgDmx9OGCwGLJx3g
Xvoqzbtcq3tGAe6luyqIr3UuHQO4l37s5TLLK4sThDc/d4/7zWDDFMC8uVsp
F2XnMANg3tzJ+feRjckMgHnzLWUFhXbbpgDmzYPuVWsrx48TnrzgIZuzLGcL
4cnXODtY6JjWEJ78xPsDVUlrCwlP3mz42sT1QyzhyYuf3At104hBV90SPSk7
RKHY4qfsyovpCPPlu1TcnOa/5CDMl9d02GdwuyCE+XLacbnLkeKFhC93e29x
lXW0lPDlB8JOxB0+WokwX+5SFxAuLVyLMF8e4qcy6neMgjBfbif6xPmaZh3C
fLn0u2aXfSt+IsyXC8+HpqyMfUl48qYNbZ1D3/8CzJPf3JJ4I1G8A+D+ehJb
cNVXq26A++sb6sRWRGrRAObN9Ys9PDN7aADz5nNjb2JtE2gA8+bn9OeFvgZS
AebNbUcPnZ6u7AKYL/90ZOD6Pf0WgPnysJyfuw89Cid8ueM9+fq/7/IB7qmz
Omw09NEeApgfXxDme1ppOAIwP+4hcV7GcCcd4J66TvA31c/bRwHuqa9/Ui7d
XPAP4H76xvSRX0bTkwDz5l472S1YvRkA8+Z19Fcl92YYAPPm1r7pW3ZJMgDm
zY/QJh9Wsk0Snnx/2Y1nrCO/CE+uyJWnmf0ug/DknheOqcQVWqB8zuuZedUi
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
LahX+uz/MCgA+0WJUs8GtZZyAN63OM9qKlbyXZ34Ro5G7r97+j8T38g9y2hV
3ZV04hsdtJiptj4TSvYvJJ+J2xZINoCPA5LGKzql4bYT96L5rnaTPYx1VTOS
4zt6yB5G4odn1aY+NID9pE/VsyqmrzqIn3Suz6x4/4U64icJ73AeOaBWSPwk
zdvuHmKHo4iftPnPzbubbRPJfkbpzochpl8KyH6Gq8NRp/qTv8h+Rl7zzM77
1f/bz7jUtsg/pVJB9jPuMBJnX10uI/sZXRqLK7bxlaKtgX8sL36qAaP71EQy
OTuR6UKQy7bxNjAu9Qr+tKMhvK9hJJR7rNqASvY0+NfsULRn/v1q1YOOrHFl
gwuu3E/Lj9aCG/QU41ApdnjrUOsHH5kyUMmexXumYDl0fWa3WOxbS/yntvTw
/bPM+xP2nYa3eAassZwAeH/D9zW/Hd16GpwvvPBifmoFNFTyEp2UmyF7Gy/t
Rb15n1DJvsY/JcnkvU6NZF9jYLVF1y/+IoD3NfL2nL9w810o2K21bKDTVgJW
S4tMPwHxKMzh5WK3piQcvizIfig8jfhSyg/034woJxNfKp2N7WWtaS2Ia/Cu
V/wiDcfsugbqRbtAdKrqh733ZeAvepMyezsNcP3MHtm6fw08wPHoYDtnD8B7
Ha+U21b6Ms/P2J+6KxAgHpyZi/g+bRmJfiwPFbNevzzSXYryNSW5DXrlYfyE
WquuXjmKlVj0DzRUgDrP7hzlY37/6B3mSEnPUoC7wooX09jL0UUHdcZrpwYw
sZ26OkCWiu6mGFDufugC3ZzNcm5W/9sDqT8bdHJ06//2QJLcCi/QNKkg4Ci7
7rJDy2CnFIdX7+cKwJp/99aFCXYopJUapPS9gvhXm0T1X3VlTgH3D+t/Cymt
gE6/W3ziNs+AY2du7ThUsBJeZhXQa783DeTSH17XrJSAgyYa1Y8OfUXUY7tD
Pr+ThHEffz6QCk9HifOJteNCMnC9kqjJNhcq8I1YV8TfIgNLuqOkNM/1kP2Q
4V1f54fbqMS/MmSR3viuLAXpdOz5diFFHi5dZfW/6PobfQrf3XJYWgGmTiir
T62vQDEzE9v/uSrAjQfvOBkMlZO9Ea3I1XEKn38j7GfpjpzqLLKORtjPWmaP
Kuf2tCDsZ51+310cU0VFeG9kbXGgtfhqGsJ7I+/GJp0+enWSvRFt/6dciv71
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
NQP3ipzyuCtnbWh4/3gkQjSo52gX3j/GdpAu5T8i4/2j45H1LtabP+P9476c
Z03Wyndxz+jmh+SLa1xycc/ob6hp6Oj1ctwz6rc0u7+CVIN7RlObLFqp+8m4
ZyTl8zzzTE4t7hm5PeLYtvClHhF7yNJvnl+YqhRE9Iw6OE88mAyjI6JnpOu/
MvpeLRX3jHiVm8RvZPQgwwY9zb/0SRCjOj9ts6YF941aXXRlJUya8H7yj8Gm
nS5bKXg/6bwYdSKmpRvvJ9NEkmVPLjWA+Iazsjy23PCIwHXljjM1eE/p/eeR
irJSy397ymDZR4hEwXvKqocS0j7vWHhP6bUnachtxwzeU+rtbwsOLJoDwa94
g9Q1hODz3MP1Hn/mQEpkgVtZtzD0XOOlov1zFhD9pOSqizL99hO4nzTSaMbI
gCN4j3l/iG9cWoCJ95h1OuPx1dI03EvSWUw280/uwr0kaXqAbkh8KyD2leYn
WV+S7xQBopeUkHHtzjllb0DsLXenfjMqGHyP95ZbLdZ3Jm7LxXvLlGUCJSuq
H+K95f0LSqUC7PvDoC8PY5YsA+37uSOCpyi4r1S5lkNhP/v8RvSVyhbfC7HY
5ztinykcHhw+fXwA7zOFuaKvswJa8D5zv0d/16fWUrzPvKXlHBP/+Q3eZxZ8
dxqPqUjBPabsl4e7v70vwj2mEKn3xz41VuEe0+nbBerWr2txj+lNVHemjy4Z
95jOu4bZhb2pwT0mvqiik9RHxUhb8YmW/3n2ufXBM7KAbj8aTz1qzlXSAxxG
jBJnTOmI6DVdctLS2BFNw32mtZyHhe5Z9YG/5K2hLdac0NKOZ3RhezMwu+Qt
IjfNBUNojpv+7q4BSbY0xtM4Hpg4V2HxPKsR7z9XkkhrjbT68N6T8qbBo4o+
BYie07ObYNcepTkg1vp3j1CjIAw8LaE4qDKP+01gVWnX4yIa7jWdcDT7Z53X
gXtNLq3NcjLnKwDRa7I6+i00ujwBNIhYD+hZSsG8k5tevelMRnzfA1U/kKTh
3XlJ24mNOXgvWingMXQlNQfvRS1W8aq5SjYAhovbJZE4GVhUnDEk/nAAkC4V
LQu+IAsPnc16GfOB/TqN0B4OqsjBjoznpzQ3MXAPaogvXOuHFRXvRxVczyo4
2BWgVSpHYg97bIDzyZkfqw9UIvUZv8YdPRtgcM7ypDmOWtTS4PNS7iD7fhbw
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
7t1VigpMrSmowr27o7eumo8/q8W9u6Nqv42bARn37jLz5p9/zqjBvbtSrz3C
/tFFaBVYbiO4vQHwWFkvj5TsR9kHJl4rhPeArsOz4SRDOiJ6eMqsnkO8iTTc
v7O8sbA1UqAP7NR1ufriBCfsnRTe6HGiGdQdS/xoO8YF1SUdP3XAGvDiudNK
k2geuD9Xb1govBHvxS9/XWvswOrF+/DuF4tvtzRMAaKXd1xq/OVT6TlgfYrV
XFAtCPO5Ot/yqM/jPt7A2ntHT9bQcA+v5Jihs3VRB+7hUdzmk7hqKgDRw2v0
O8l9aGsiGFKHu5QspKCTp2lt7vVkZPCym35kvTRc1e+yYCicg/flGyim3o++
5OB9+Zfv3IOmN+pBhW0cB+WpDPRNCasgOw0AWmZ7xBV79u/VnrHhwmQ6MJl0
cnu0XQ7aK/NGrdzOwL29zFHa3nueVLw3rzWnh0ctfEWXKv8GFrpvgL3/quOz
tlQimeGRXz5dG2CKxAXq+HQN6mZ/lEP2kyBkLeT7ss8bnI9tsy9lkCCKDf8e
tK8WwY0Xxw2XWoG/svZy5zgq2nDSm3l1ZgDoDs1dcH1Axz2/v81V8Tfed+Ke
3zuXul73lzTAOkE9f1+GC8KiDAGb5jpgu+FczdZybhgj8jdMKLcW79V/iWjP
f9KfBatWjtumzQtAPrcawSWJeXBoYsmdP1oIsmpyCpRT2PeVrIJ8z3wpuHZI
cKuweSaK8rh3VzJEGi7e1zgqGZuLqv0K/3xYkoGnR+brcwVooCG2PkOrQhY6
R+dNWFkwcP/PkoP+aHzHf3t1Xc0ry17+zEQJiyvNfd5tgHcPWhaX8FQjfhPB
iruiJPgt/w25hX1f7pzTODTqQYLXP3J7KLHv08SevVAzIFuUo4b9ez8mvmeu
C5wo6H6whoeOivLky8zNaKDxNDmVY5yG0l58TLn6mQvGfcmREflcAy44Ju+Y
teeBDiEaY9vCG0DlwqPvhcMrYe2Xrsml3N/g9Q3H98qxgrA8bvymHPv5Tuzb
NYzbdm8UYZ8/Um/cO8MjDR1OK0g+N/6E9+5aLfHhboq5aHD2+fLbRrKQ/CQx
lHaCDjzWJw26r5aD5M2S2m3GDNwflMxs+DS4jIb3779S4Jqnrz8j+0jSX466
DfBv8VeXheAaJGu/L396DwluSnIPNWWfx6eHhVbeMfoJ7LqzlskPUtDO6kX5
35sGwCahumVXI+m4V9gjy5P1xoQKvBt4HapGOOH3FV2XJ1UagM411zLNcG4Y
Kzk+O9peAy6/goJ3SwXgP3K0vdXEHIhYccfE3V4IrknNilVtnwPe98XXKrlI
Q9NFifvB7Od/9Z/pb9o0GWg2cOjVSm8qaOmNVDyYIQvR/TDz5v/vP54rFc/3
kYOXktQXx+6zvz/TBo2LXCTY9Xhk19W2WrROT9PW3IkE/ZMXbKs2kVGM7dS2
1Yp9YHD5nVroTke/eCLzzEjcsL9oZceobA2QrKNeWHdSAC4dUCP3u8wBCeC6
aLokCPdnR+SUyc7jfb3hgfHe5Xs6gGX0/sP7tKWh6vjhoML3OXhvf7vD7lB/
UgbqdVwrYXtXFhaTdp88xqADUokax1Mj9n0/TVIsZhkDtO/LYf4d3AA3Zt+e
TDetRfGNuiEbj5Ng28q8jj4TMgo5U9gsntUO3p9J3FmnQkNitH/ptCIKWHV8
xyZnO/a//3+9xT0S3vqf/rbj3uKVZhvOBGEasOlB9lpHuKA430CYVQAZPGo1
a5L7ww1fD69XpdPJoMDtRU7HDkFomzWgrqg2D95eHepf+Y79eZu658l4motq
jwvu2t4nC+8lDo41ss/zJck/vy7IkqBG1/uE2i3s50OmurqfHwl2JGt4mjFr
cX8xWUMxei6xGnW/dDpevLULuD16HSDQRUNP9XcruMVzwaxQgYF3orWg7J6y
eJ+3IKQoSTqlsO/PQdGB70/UScPVsgc5Mo/kIoE9Ra/HeOTgcPTd+1MnGIDo
M/J6cmSt25KH9j7SL01RJcHNS46dew+TUR6XDtIu6welSWvmfrI/n5vFFiB0
44YfjZL2vQ2qAdFXLp87lyIAq1d789xonQNuvOeoGeekobDWm9EFk1zUtmzK
npwoC+l9tO/C29jfn8r+E7pL7O/HUnTPafZ5TeeClhP/BRIsd1cWrdxFRknN
LpfirXqBP4v11o79fvS/l1Cz4ueG4KN7vLlCDdAy3nmJhyYIz3vFm7xk3z+J
/f+TP7qTFrEdwFQqUuLHNmmYLvT77RH7HOwB8PxiRK3elYMGQj3MGddkof6T
FWk1lXSQ33Hkq5COHIzYa3DJS5IBvs3sfdp+mAR3jdhWlB9jvx8y4NCm0xQg
WOIbLe9GR0Q/8hVDpS+89b9+pK3x9+3GWTSg+LyRekaDfZ8djzFfr1AHbnh2
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
TPofHz/CPyDyf5pyUzA=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{4437, 4436, 1418, 1260, 1475, 1132, 1454, 1296, 824, 
            1357, 1199, 1070, 971, 899, 782, 1324, 1166, 1037, 937, 865, 1383,
             1225, 1096, 997, 825, 1358, 1200, 1071, 972, 900, 783, 1325, 
            1167, 1038, 938, 866, 1384, 1226, 1097, 998}}], 
           PolygonBox[CompressedData["
1:eJwVzjsvg3EYxuEnymQyNgxaceiHoGr3as1IdHaY0KShPkBnYWxZfAc9LFbd
tQurpFNTh5D0Mlz5P/cv7/Bmyqe7J1MR8S9HaS6iyGoqYix+8sX8TMTldMSv
fkuRNQr6vZ6lY1/w7fsF/Ur7s+8ocaB1tTwDO8eW9mAv0bWv7Xd3mUf3LBX9
2NvTnrw7/i9hW9+z2/o6r/Yyea1hL9Kyzxj5p7Re1X7sGxL2tY62Qd9eYVNr
2hnads1+cx9ybh/ZL+6EhjvFh173DrVn7wQi1yzn
            "]], 
           PolygonBox[CompressedData["
1:eJwV0LkzHGAcx+HX1egU7vt/2F1X5WaGRtgVDaMLQjKDjh4JZsy49VrB7joK
ZQrMuNPRJq2kiMqzxTO/9/Nds4Pa0am+yewQQhYLJApCiHOQE8InmvmQF8Jx
bggRbvQi07ZHHedVFxOxretCNrz/uz/sc97P3hfusLvv5nPNmM/H3Et7D791
C/22pI5yq5coIWrfsBVxqMdppZQyyon5mU2fF3OkJ2hjwJ6yxbjT35ixPekE
f/Wa/uc9S4Wu01veSbfE3XTf3J+Z/4nP590XPcLnzO+jr7x7+aPbidvSuo57
/Z1K6u3bttLM9+tJOkjYT2z1POhlqmiw79jKSOkpOhm0n9oaeNQrVNNo37WV
k9Zf6OKj/czWyJNepYYm+17m7+ZEf6WbIfu5rYlf+h1JdkUd
            "]], 
           PolygonBox[CompressedData["
1:eJwV0LdLXXEchvHfLYJDCIh7LDFmMCb+CfZZr4kJWTSWIYsaXWyD14KbujjY
EkFigmQJBMRFsCyCYBmFxEEdHGJbHKyfMzw87/t+OZzDyWtqT7XFQwgxjKEu
K4QU7oz3eJYRwkAyhIdECDOoQxEq7N/tBZiSb3jNnpaPoszNvMRPsIMe9zbe
tdfgvz6mX8hfond4X46elgNm3d+iwbaml+Kv/gqVtkX9Bdb1Qf1YbkGv3q7v
ybVYkDNwZh/nS1snfsvZCPZcHrT94RhP8jXPuXXLB/Iqf+RFzsQ23rk38rp9
hcuiZ/iBt/if+yifRt/Jn/kXP43+A4rdq/iHfZkLeZpvecNtSD6RW9Gnd+j7
cgrn+oR+JXchpufpQ3IcX/V6fLJt6OU41F+j2vZTf4lNvR9x5NuHbQl809/j
DRJI4rn7iFsS8/oHlOARK0NLhQ==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{4431, 4432, 847, 919, 1019, 1148, 1306, 757, 1298, 
            1456, 1135}}], 
           
           PolygonBox[{{4439, 4441, 801, 1491, 1301, 1459, 1143, 1270, 1428, 
            1013, 1112, 1240, 1398, 913}}], 
           
           PolygonBox[{{4433, 4434, 764, 763, 810, 850, 922, 1022, 1151, 1309,
             762, 1136, 1263, 1421, 1004, 1284, 1442, 1103}}], 
           
           PolygonBox[{{752, 4440, 4430, 917, 1017, 1146, 1304, 755, 884, 956,
             1055, 1184, 1342, 804, 844, 916, 1016, 1145, 1303, 754, 883, 955,
             1054, 1183, 1341, 803, 843, 915, 1015, 1144, 1302, 753, 882, 954,
             1053, 1182, 1340, 802, 985, 1084, 1213, 1371, 842, 1287, 1445, 
            1113, 1469, 1241, 1399, 914, 1014}}], 
           PolygonBox[CompressedData["
1:eJwVzbkyQ2EYBuBPUMuJ0LsBsnTW1FGIzKBTEFuRuAGtbTRB9Hoitk6ry1iu
QBtN7iFPimfe/32/M3Nmdo6rjVREjLDFRhKxSXYs4o7ieMT0aMQlvxRt71Tt
Jf2QZyZtLQr2KX2FAzpk7Lfk3bL6BT8UbG+s25f1RHZo2D5lX17Jf7dV7335
NPwX5yxRt/dk13cp7inbPmRXHsk9923vP0709vBf3jfk9Ix+xjd52ysV+6Je
45G07Zo5e6IvsMsDE/Yms25p/ZQvcrYX1uzz+gDIDCe4
            "]], 
           PolygonBox[CompressedData["
1:eJwV0ctTzXEcxvGvyynnqDFm+gfMFF20cO0PQIVWOi2SMCGNZjJuCwzKuB2y
YGFTwxQKXRaNZhobG3XKjIWwkhnJyLBxW9hkvL6L9zzP+/mc35lzWdV0dFfb
4hDCIjxF7coQ0vi8JISXCTvuoWppCJNo1ve7NeofcJY/4nn6TZTxfH4xPo9y
2zBq7BV8H/qx3NaJUntedGzGXvQh5XYDJe4p3oEprLUNYad9E59DJc/ikK2R
P0SSX0exLclP6X9wm//idfo7nODtvEX/iit8kv/Tu/UyOSYH5Q650e21XIEh
tNq/I6N/cgvyLrbZnskJeVDucXsVPwv6o9ufyxl5Rj5wz8q//I5cJkdlRq6J
7j4tCzCCk/YJ+Vvekj/dc+L7IG17i+P6BXu+HMBh2zwu61n7gt6ll8oBbNc3
2I/o33CNz/Kt+jgO8AbeoL/HaX6f58bXYjXP5T9Qy9/gmO08b9a/4FL8TXiJ
/gTVfD3/iC38BZpsu3lv/E78KopsOfwcxlFse4wq+zpejx4k4n+IQnuC/wcu
dVqs
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1ne8z2UchvFj7713yN7aey+ljDKa0h6iaClR0bDSJmXv0Q6VBqGIQksl
tJCG9la971d/XN2f635+Oud8v8/znNOwb/9uVxUqKCjYXbigINlS3mF4SxaW
j8vS+AyTrI+Vu/Sb5MXyVVkXva31l2/qTsAic2V8rp8q9+huxD68C19gbo4V
fDz/2TwAQ/mt/BNzb/zCaUEr/7mTF8Fkfib2RVf9Ql0LrOTDUASt9XfpimIK
Pwv7oSjaWLtbXwxT+dnYH930j+taYlW+DxRDW/1IXXFM4+fgAHTXP6Frhdf5
bSiOdvpRuhKYzs/FgThd/6SuNd7gt6ME2utH60piBj8PA3Rr+Yn4gh+EM3RP
8TZYzSfwX8xXY3i+Pt9iPhNLzTXxq362LIKh+jWyKUrqO8gxurdlKfmELIOZ
1u6RX+s+lJfIZbIedqKP9avlOv278iS5WFbBdnxpfZr8R79FDs7zkY3z/8TB
1nvIp/UbZFv5tCyPNdYeyfetuwYj8pz4VvNZ+I3P4UUxjJfiHc1jzaUxi4/j
35gvxfn8Gv6WuRO280PQU/cMb4c3+R0YrtvGz8bvvDT20d3Dy2A274tD0Uv/
rK491vI7USZ7Uj9OVxZz+AUYqHubn4wd/DD01j3HO2Advwtls0f19+rKYS6/
EIdnv+sX6TrmbPK7US77Vn+frjzm8YtwRPa7fnHOW94vH4ny2bf6+3UVMJ9f
jEG69fwU7ORH5kzolvB9sZ6PQoXsY/0DuopYwC/BtboNvDO+4kfljOie5/vl
HfPRqJh9rH9QVwkL+aU4OmdE/4Juf2zkY1AJB+sf0lXOXcQvwzGojCqoimp5
pz73sM9UyT7ml+NYVM/7sjZeXxVP8itwHGrkXViboK+Gp/iVOB41UQu1UQd1
US/vwucf8dnq2bO8H07ImdW/qDsA7/CxqJ93oZ+oq4Fn+FW4TreRn4pd/ET0
0S3lB+ZM5fxhhO5Tfg7+4A3ybnSP8pp4lt/LvzVfhv78ev6O+TR8zU/C+bqX
+EF4j0/kv5kHYlz2fu5387n4k8/lxXAr3yvv0/yYuVaen7ls9q7+Pvmd7nIs
N9fHAP0N8l1dFywxV8151E+X/+q2yptyB8q9s4ZOOVvy5bz/3BF5XrICvsD7
1h+Vv+s/loPkCrkXvsqZyRnM75v8jPI8+ZKshb+szZPFcVvOu2yGhtl7cpKu
Nhbx+/lu8xW5V/mN/D1zV3zLT86Z1r3CD8EHeQ5olH2pn6yrk/sw9w5OyRnW
v6o7FJvyNdA4+1M/RVc3z4k/wL83X5l3wwfn5zZ3w/Pmanne+hkyvxS34WZr
q2WT7AN0zh0gl2UfysOyT2TF3Mv40Ppj8g/9ZnmtXJlngV0527mL8sz17+eu
ly/L2vjb2nxZArfr9845Mk8118v3yB/kP5j7YRC/iX9g7o7d/NTcObrl/HB8
lH+T+yzfX+5r7OFNcg5103h9vJB7BqehKZrl3Fmfbq0BXsy5QpfcSfrXdEdk
r/CH0DznTD8jexpLc1bQNXeQfoXuyDwT/jBa5OzoZ+oaZi9lX+Nm3SZ+Or7n
3XIn6Vbyo/AJH4+W6KSfpWuUZ5i9hCF5B/wM/MC7567SreJHYwufxP80X4cJ
fCTfbu6Lf3ir7EPdbN4Yr+Rn5D+a88fcYH4L/8jcI8/OXD3r+pmyEIbkZ8hd
aH7dfAyeM1fCVv3knJv8PPJ6uUo2yt1nbZTckb0vL8jXl3XS5XxbXyBL5u7C
cOtrZfPsXbTOmZBz9Otz/nPvynI5uzknef7yp+wN2V++JhvkzrA2VH6s65l3
bq6Rz+pnycK4Jc8297j5DfOx2ManZP+ab8BEPprvNF+I/OHbRnTWzTU3wbK8
awzTbea98DPvkTtft5ofh09zL6Ft9rZ+nq5p7sO8a/REO7RHh+xfn5lvvVl+
rrwn9MrvBf0a3fH4LGcUY3K38YtQCAt5KYwwr5MtCv//d3tHn/0P61t0nA==

           "]]}, Annotation[#, "Charting`Private`Tag$280907#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8lXMYxvHTpr2nlpWVGSXtXaT60bSzkwYVimSTpnbZhIwUkWRk7+w9
s7e00/K+/vi8rvu67ud3zvN7zve+n8aDhxcNK1YoFP4uXiisxaYShcItuKRU
ofB5yULhWTqQLqRl0EPvJPqsrBU+5/dEK9ntfH08zV+Ef31eTfmlss38DByL
vdBafoe8AVbyF2Od62vJL5Nt4WfiOOyNNvI75Q3xDD8K611fWz5WtpWfheOr
FAo96cny5+St8QW/D9rK7uIb5f/iR2ODz6gjHyf7j5+dz8ApsudlbfAlvy/a
ye7mG+M5/kp+jfoMjOGH8qvVx+MudQn8IZ9E/5a9Qnu5v+HqJeqq2Oj769LL
ZdtcOwe90Nt1Tegm/c3Ygnquu8J12+Vzcw32Q3v5PfI98Xx+O2x1/R7y8bId
/Dz0wamyVbK2+IrfHx1k9/J7YRU/gf9ePRiL1OXyG8ovpO/m+dM+7q+X+m51
SfypP5n+IxuRZ+n76/NXqnfqzUcRDsA2ve0o8hk76E40cO0E1+7SX4ATcCA6
yhfK98Y89Tb6gvwq9Q+p6Zn0QVo+95fzoz+Mvifvjb/4Kfxa9ch8h+9ryF+l
LuBW/RNxmuwFvh2+5g9CJ9l9/D54kb+a/1F9Fsbyw/n31X1wj7pUfmv5VPqv
7CIsVVdDQd6IXi1bRovRWXQzvU3vUvUXOVt0EL2P7oa30Vf/dPqifAVtn7+h
u+gb9Bv9G+hvuU96Pn2YVsxzQFP9zvR++XK6L51Pt9OX9K5R/6Q+G+P4EfwH
6iL8w0/j16kvRjG+MX+Nujhu5/vhDNlLfAd8yx+MLrIH+CZ4mb8cxbMz5NfK
SuAOvj8OQQmUzI7Qv06vJO7kB+DQnAtnplR2gv71eqUya/xAHIau8kWy/TJv
/BUonfmX3yArnTPLD8Jg2ct8R3zHH45usgf5/fEqfy3/s/ocjOdH8h+qT8Ba
vkx2g+xGvkzOAH8Z/6X6pMCfyb+i7oQ1/I387+ohOILvzj+kPgAL1Dvoa/Lr
1L+oz8VD6gqZp+xW+pHsRNyrLp2zJp9O1+e+6Sj6GK2e3zHnSL8JvUn+RDyd
TbfkuzL/+mPpV9kh9GR6P90d78Trn0VfzX6nnfO750xnV+jdlF0nuwCPqCtl
LtBMrwd9WP4UPTDzRnfS1/WuV/+qPg8T8h7gP1b3xbq8i/gN6tHYPfuOn5ga
C7OncbbsNb4LfuCPzHtG9gh/UOYj+wJls+/kN8vKZr6yD3EUyqF89pP+JL1y
+f+zE9A87yH5YllTvJk9gArZUfLJsvJ4gB/Hf60+Bafz5/Cvq7vmnGfm8WZ2
SHaOszwxuzMzSIfSxbQyWuj3pI/KDsZbmVFUzF6ST5FVwKLMHc6VvcF3w0/8
0XmPyZbwh+DtnGVUQlP5VFnF7M3MAc7LffHd8TPf1721zLtIvlR2KN7JmUTl
zLZ8mqxSzmbOOI5Blcyx3nR55eygnBu0Qm/5Y7LDsDq/PapmruW3yKrk7GRH
ZJ+pT80+4s/n31KvpD2yD2jxZJmPvJdkrbP/UA2L89xzBuS/0ptd91f2Dx1G
H6VV0EavD31cdjjezWyienaJfIasaq7P80Vb1Mie0Jspr4YleXZohyL5ssw0
3stMoCaOkM+SVUc/z3Vp/ie0zz7Te0LeDO/zEzFK9kmuxXq+FprJZvM1MEe9
NfOd/ab+Vr2KnpYzSMtiNYboD8n7Q34cfuM75NzJnuSPxAd5PqiduZHPkdXE
4/wF6Ig6qIt6mRXXzNWvhWX8UHTKeZEvlx2FD/lJGC37lO+PDfwMfqN6DPbI
XPHz1E/S2nQu/S97Ic9Efzz9LnOEC3M/2UXqnvid74x+sqf45viIn4z6aCGf
L6uTz+eHoQv6y1fIWuBjfgoaZF7kC2R1sZwfjq4YIH9adjQ+4aeiIVrKb5XV
y17jR6AbBspXylriU34aGmU25Lfl/8YKfiS6Y5D8Gdkx+Cz353xMp2Pkn8kG
YCM/k9+kviS/jbpG3kNorPc/eqF3sA==
           "]]}, Annotation[#, "Charting`Private`Tag$280907#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1WXcVFUUxeGhSwlBul66W+kGwaBbQQETKRUMQMUEA1RQ6QYJ6bIIC8HA
oLulU+nUZ3/4/9Zea5+ZO/fOOfsmde/buk+yRCKRlCKR2JwqkSiUNpF4Nk0i
sYkeSp1ILKL/8UfpS/xwupvfQ5vTn2g2lNfrSb+RlcEKdXp8L59Cz8q6ITV/
Pz9OfRum8qP5I+qOAf8y/5u6NjbyW/yuwrLn+L/5AaiANHhAPl5+O6bxnbDV
+iLyfrLD/EBURFps09uOHdiJotb1t+6I3iBUQjrs0ium93zce/wmVEZ6NJNP
kGfEdP5B7La+uPwF2TH+FVRBL9kKWVn8wGdAc9lEPhNm8A/Fetl6vk48e36P
7yshe5E/zr+KD/g9fAvcxffmV6rLYaU6A36UT6XnZN2xXp0Ht8lb0EmyzTQz
/YKmwmd6Y+hR2V7aif5Mc+A0Osf16e/ynbQu/T6+A6ewWX8WvRTPkT5FN9CC
2Os+SsbekZ2wbrE6gcHqD6Mvb4m7+T78KnV5rOGn8f+oH43/l2/JT1ZnwUy+
CwbL/uDrYQu/z/VKyQbwJ/nXUBUZ0Uo+RX4HZvEPY7/1peUDZaf411ENmXBA
r4zeIL3T/BuojsxoLZ8qz4rZ/CM4aH1Z+cuyM/ybqIG+stWyCnFe+CxoI5vG
Z8Mcfix/TP0gusbv5v9U18dWfjZ/Wd0Dh1ynHP+K+qzeEnUyvKX+iO6Tt8Ja
9Z2oKX+GfivbTivSVbEnsFZvOv1XdpA+Rn+neWMP4Q79tnR6PN/4PvolTR2/
F5/rj6PH5fvoQ/QXmhNn0C2eKf1Lvos2iHNAs2Cb3hx6RfZ0nG33VZ5/VX1O
722M4PfzrVGLf5b/Tl0J6/isaCebwWfHXL57/FeyDXzDuGf+sO+uEPuO/4cf
gtrIhvZxBuQ5MI9/FEesryh/TfYvPxR1cCeO6h3DcZxAJetet+683juoi+w4
qVdZ7w29C/y7qIcc6CCfKc+J+fxjOGV9Ffmbsov8e6iPnOgonyXPhQX84zht
/V3xv8su8e+jAXLFHJTPlufGQv4JnLH+bvnbssv8MDRE7phh8jnyPFjEP4mz
1leVD5Fd4YejEZ6LuS6rHHOCzxMzLPYCnxeL+adi/8s28o2wgz/n+6rJhvJX
Y56hMfrJfpBVib3D50Vn2Vw+H5bw4/kT6s5xBvi3+E3qxjGT+M/5q+qe8f+6
TnX+HfU1vaXq5PhQPZIekLfBPXz/mJkxT7FafTt+lc+g5+Os0cfpHzRfzKPQ
mD10njw/vlKnwVL5BHpS1iX2dOzhmI9xrdj//Fz+mrpX7Cu/swb/rvp6nF00
wfOyNTET8RufP2aVbD5fAMv4njjv8zXl78luxFlBUxTABb1aeu/r3Yz7xr0o
GLNKvkBeEMv5XrhofW35MNkt/mPchyR0lS+UJ8U7g++NS9bXkQ+X/cd/Ep/h
D/JtcT//Av+Tuiq+VWfEevln9EKcd/oE/ZPmjxmEQvrd6KKYe+Hp1zRtzBh8
qT8x3jvy/fRh+ivNhbPoE2ebbpHvpk3ojzHHsFtvHr0u6x1nwD3U5T9QJ+K5
qlPg07gfekjWDg/wL8asVFeL+cgXjjkjW8wXjj0Qcz7mhGwr3xR7+CuuUS/2
Hp8Mo2TNUARX9errfSRPjtGy5iiKa3rX0UB/hF4KjJG3QLGYUfIlsiLxfGK+
44b1DeUjZSkxVtYSxWO+xP6UFcU3MUdx0/pG8o9lqTBO1govydbx1WPf8yVi
3siW8cWwImZAzLqY4fy92Mvf8n2NZZ/wqTFe1hoDZD/zNeK/5kvGPJIt54tj
JT+JP61+BP1iVvLb1fdhHz+fv6HuE/vNde6J/0mdJvawOiUmWPcp/VvWPt4P
6uxoIx9If4k5RGvS72imOKvxbtKfSS/KD9Mn6V+0QMwAlIp5SL+Qb6Ml4hnS
dDGTsEp/Mj0jP0C7xrmludE/5jjdEWcCa9RZ450mX0BvyvrG/ouzz49Sp8VE
fhR/WN0hzhQ/KGaTuhY28KVjzsaZ4EvG/IrZEe8B2c7Yt/F7+GQxF2Sj+XSY
xLdDGfSQfyUrFWc0ziySx6yQj5Glx2S+PcoiBVLGbNAfq5cBU/gOKIen5V/L
SsczjnODYbJdfDMc5Bfyt9TPYKM6KeYBUun9D/Lbs08=
           "]]}, Annotation[#, "Charting`Private`Tag$280907#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
FHft/ww+N1s=
           "]]}, Annotation[#, "Charting`Private`Tag$280907#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV13f8jlUYx/GHNJTdsvfM3iNb2StbFImIskfJjlI07NkwSma2IlRkb9ka
omEUKiOk3tcf39e5Pp/rPD/Pfe77PueRo0OPJt2TJBKJMskSifQpJU0ikTl1
ItEyVSKxG78kL3K9uEVcTqnL1eTqcqPwTfyxZIjwWfhW/B78snTnenOLuVxS
j6vF1eNew7fwSvwZ/gvPw2Pxu3gnriYZuYxcVq413otn44/xKTwQ98B98BKc
W77B23Eyqa9fG9dXv673i/qc+l9+lfpz9d/8HWkTibvxJ/xbxnF8Vm6X3hX8
D66Cq+OD+AgugtMZUxrTcnWMmXw+kzob/wB+0vzv8ClcCu/Tn4Pn4dz4J/1/
cRJ5Ra+nsa/ep/x59UV1HvUW9Q71ndLAvDq4gXq03m28Gq/FV/B8/DYej3fj
GpKZy8xl59rg/XiQNJS6fEP+Df4/vAavw1fxAvwOnoD34KvqG+rH1N+qj6qL
uo77jaliPeL5MGbxuSzqHPyDuK353+OfcGl8QH9urHdcHz4d14GTymC9XsZ+
ekv5C+pL6rzqreqd6rukkXn1cCP1m3oJ+Qx/ga+pF+q/iyfivfhxycpl5XJy
T8W9xEOkN9efW8blk8Zcfa4xNwYnkUVctgifi3861gAPlSekAf8EP5ZPKou5
7BE+N9+OO4SHSZNYe74J/1Y8f7KEyxHh8/DtucN4uPThBnDLufzSlGvENeXe
xsnkc7weXw+2pvfgT80bZ5zEZ4vnT+8avolrxvdRH4tnVXKamxPnVT+jdwSP
kGbSmG/Gv8PfKUu5XBE+H9+BO4pflb7cS9wKroA0j/XhmnPv4rtkLd6A/1Ev
0x+PJ+P9uFa8x1xuLj/3LD6GP8Lz8Rk8EvfDL+OV+Hf1ZfUj6m3qXepC8U4b
7zWm4lrEusfIpefGmfsrPo/Lx1y8Dm/EBfCNuFZjcq6mcbnPT1BP0c8ez7D+
dXwLV8W1437h47gYftCYOt6NuJ8+m8dYgOto3g/q0+rjsYeqF6h/5kfh/ngg
XoULyna8G98T+7N+U9xSPV7vHlnBTeSmcgdxHcnL5eUe4TrhE/g1GRD7DLea
KySt4v5yrbgJOLms5PJF+IL8c9xJ/Lq0lvwRvUJ6nWN/w6PlSWnOt+Yn8vfK
Kq5AhC/Md4l9AL8RZww3iFvDFZY2XAvuSW4Svk9Wc49E+CL887F2+M04Y2Kv
4D7jikhbriXXhpuMU8gX+Et8U71GfxKehr+N8yzWlyvIFeW64h/xPLwQ/4LH
4IF4CP4c/6H+M/Y89Q71HnXy2EvMa4XbqqfopZT1+Ct8K555z8G9cdaZN9k4
nc/BHdL7B/+Lq+F68d7hE7g4fsiYxvhAnJvGQj5fSF2Mfwh3i++Mz+Ay+JT+
J3hR7Jf419jT8R1SA4/Vf0U9VH+t3kX1X/G8qneq98b7Entb3Gv8lHqqXirZ
gL+OszP2Gv0peAY+jOvHPeQKc8W5F/BPcZbGOcMN49ZxxaVdPCvc09w0nDr2
A65IhC/Bv8idjnNM2ktRKSbFpUSweSXN627emTij5BkpGfP0Sun10Ps5zgDp
IG34dvx0Pk2861yp+Jt8ab5n/D6I/VKelbZ8e34GnzaeJa50/Pt8Gb5X7B94
Pl6Mf8Pj8WA8HH+BL6n/Vle09iXwLrwP3xf7gLlP4WfUM/XSxTPDTeVmckdw
AykT18WV5Xrj3/ACvASfxRPiDMMj8HpcUjpxT3MduPfw/bIRb8K3417qT8Pv
4aO4Yezf+CR+WMrG2uBy6j56p9Q/x7/HL4xzRX2OnxjnH34Vb8CX1VfUpdS7
1fvVKeJ6XX9q/Jz57YzPchm49+N68AVcIZ5z/CXeHHs5/g/fbbyPq2Xc6PPT
1e/HeYWP6d/At3F13CjOCvwdLoHTG9PGXhzXEvfPWJ7rG8+n+pe4Dn6Reqn6
PD8pzmg8Em/EpWUPPoBTxp4XzyTuqP5A78H4ztwM7oPY03FjKc+V4Spw/fD5
ePfjPOdGcV/GvZUu8exynbgP8UPyFVdByvKP8v25C3gxXoYv4ClxPuPXcCbX
+BX3J76KK+GyeC8+iFPF3hnvQdwD9Sy9h+Vr7lEpx1fkB8RZGs9gnOXc69zX
XDnpGu8F15mbjdPLJq6ilOcr8S/FHhnPlozkRnObYi2kG9eR68LNwRlkMzeT
+5A7gZ+QSnHtXGXu5dij8BK8HP+Op+NR+A28GVeQffjbOG9j79HvhJ9Xz9U7
q/5dnTHWVf2NOhHnqTVKEWz+e8ZZXC7upHk38X+4ifq4+nt1Sb0MxnSxL3P1
jZVj/dRV4r3BA2Pfwr/GO4Qv6X+KV+B8+A/9hDEZ95hxRpzL6jf1M+Nv9P/C
1/Cj6v3qQ3EGxJ5o7nO4q/ojvUxx//AWnES26L+PZ6u/02sqVeL+cFW5V+L9
xEvxSnwRJ/Fv3okfN86MM149Jv6WXkXpznXmunEf48yylasqlfhq/KB47mIN
pYdUk8p61fUGx/XE95KeUl2qxFmkN0Tvb/yB9JIa8XdjXfSG6l3BH0pveSz+
bnxPvWGx56t/U5fzva/qLcOr8CW9WbiPdOFe4OZxWWQb93h8B74mP5y7hmfH
7xduLLc1nj/pyz3Pvch9grPKdq5mfM/Yi/gR3HU8J37PcG9x27jK0o/rynXn
5uNs8XshrpWbw32Pm0mtuDauNvdq/BbAy/FqfBnPjd86+G28Pe6n9Oe6cT24
BTh7vId4K04qO2Pd8Fz1D3rN5QT+Id4BqR3rgOuoR8YZqT6rvsGvUK9R57eu
f+olNd7FfaQ3xviOXhZuR9w7fB1XxlXxAXwYF47/D8e+b0wT12Yc4PMvqHvG
d8ALzT+H/4jnHOeIvQBvwwXxHcbkxpTcLp+dFd+B+9G8W+qEtFCfNP4Y+5/c
b/7DuIGxjs/8D8VeSKk=
           "]]}, Annotation[#, "Charting`Private`Tag$280907#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 9.999999795918367}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8654474099795275`*^9},
 CellLabel->
  "Out[300]=",ExpressionUUID->"0f56444a-5d44-4e7c-a35a-9ff38e9907ce"],

Cell[BoxData["30.60656839765041`"], "Output",
 CellChangeTimes->{3.8654474100095177`*^9},
 CellLabel->
  "Out[301]=",ExpressionUUID->"5a51d711-45a6-4982-9c04-b0d88b4338c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Time", " ", "Index", " ", "at", " ", "Clipping"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xloc", " ", "=", " ", "3.6"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"f", " ", "-", " ", "xloc"}], ")"}], "^", "2"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"loc", " ", "=", " ", 
    RowBox[{"Position", "[", 
     RowBox[{"g", ",", 
      RowBox[{"Min", "[", "g", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"f", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"loc", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8659591292689247`*^9, 3.8659591912240734`*^9}, {
  3.8659592263248253`*^9, 3.86595927611687*^9}, {3.865959439578494*^9, 
  3.8659594774573584`*^9}},
 CellLabel->
  "In[655]:=",ExpressionUUID->"4d37da18-9ae9-47ac-97ef-2fd489ebbe42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "4", "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8659592293938403`*^9, 3.865959277963278*^9, {3.8659594457125273`*^9, 
   3.865959478082155*^9}},
 CellLabel->
  "Out[660]=",ExpressionUUID->"c81eff13-d2d9-42c9-8ad9-50ec651a257b"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.8659592293938403`*^9, 3.865959277963278*^9, {3.8659594457125273`*^9, 
   3.865959478086154*^9}},
 CellLabel->
  "Out[661]=",ExpressionUUID->"d9e008ec-6213-4562-b590-6bb135a64dd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", " ", "^", "2"}]], "Input",
 CellChangeTimes->{{3.865959259202291*^9, 3.8659592666259108`*^9}},
 CellLabel->
  "In[607]:=",ExpressionUUID->"a7cd81ac-df61-4973-9d28-39b2e2c7e714"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{{3.8659592595641737`*^9, 3.8659592671737347`*^9}},
 CellLabel->
  "Out[607]=",ExpressionUUID->"00778090-112d-454d-9ca5-0a37f00dc490"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.865959292089753*^9, 3.865959299126498*^9}, {
  3.865959346393353*^9, 
  3.865959432245843*^9}},ExpressionUUID->"d4c8edde-8eee-46bb-999a-\
20fdebc1a30e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "2", "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8659592996853175`*^9, {3.8659593495953255`*^9, 3.865959426221772*^9}},
 CellLabel->
  "Out[625]=",ExpressionUUID->"0aa831eb-24e2-42b4-9f1e-defe2b82d28b"],

Cell[BoxData["0.04000000000000007`"], "Output",
 CellChangeTimes->{
  3.8659592996853175`*^9, {3.8659593495953255`*^9, 3.865959426225771*^9}},
 CellLabel->
  "Out[626]=",ExpressionUUID->"138d06b0-04f8-4f02-ad5a-4ab75dd92f1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"loc", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.865959416128009*^9, 3.865959417322625*^9}},
 CellLabel->
  "In[624]:=",ExpressionUUID->"404e6b01-6f3e-4fef-b83b-18bf0edcc7b9"],

Cell[BoxData[
 RowBox[{"{", "2", "}"}]], "Output",
 CellChangeTimes->{3.8659594177434893`*^9},
 CellLabel->
  "Out[624]=",ExpressionUUID->"58ef284d-88ef-4516-b73c-bf1bf8fea1ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["f"], "Input",
 CellChangeTimes->{3.865959339501561*^9},
 CellLabel->
  "In[615]:=",ExpressionUUID->"19bdce7f-403a-40f5-8525-e5f855d04403"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.4400000000000004`", ",", "0.04000000000000007`", ",", 
   "0.6399999999999997`", ",", "3.2399999999999993`", ",", 
   "7.839999999999999`"}], "}"}]], "Output",
 CellChangeTimes->{3.8659593399224243`*^9},
 CellLabel->
  "Out[615]=",ExpressionUUID->"2b5b8364-5f86-45a9-9139-4384eff9593b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{"-", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8659602742720404`*^9, 3.865960276190425*^9}},
 CellLabel->
  "In[662]:=",ExpressionUUID->"ad533eb5-62b8-47b7-9811-c292590585df"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8659602765922947`*^9},
 CellLabel->
  "Out[662]=",ExpressionUUID->"3ebe8a9a-421f-408e-97e9-097f21278918"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
Magnification:>1. Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7e518428-48d0-4ac3-961b-c04116ec4574"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 94445, 2328, 2775, "Code",ExpressionUUID->"c06eaa1a-1a94-4921-93d5-81325d0c5150"],
Cell[95006, 2350, 152, 3, 28, "Input",ExpressionUUID->"869f2bbe-d630-493f-a109-ef8e8d83ea6a"],
Cell[95161, 2355, 307, 4, 51, "Text",ExpressionUUID->"982e74f5-390b-4bf9-a720-2fed731db11d"],
Cell[CellGroupData[{
Cell[95493, 2363, 14680, 360, 561, "Input",ExpressionUUID->"c28652c3-ba56-4a0b-8e4f-0e46f1c2c441"],
Cell[110176, 2725, 72386, 1279, 206, "Output",ExpressionUUID->"12c337e5-3819-4589-9326-449a0f23d100"],
Cell[182565, 4006, 73367, 1294, 208, "Output",ExpressionUUID->"efda1d4b-93b0-4419-a7cf-44cb5a379256"],
Cell[255935, 5302, 75876, 1335, 206, "Output",ExpressionUUID->"3368465a-8efe-446d-932c-6c2606ad4347"]
}, Open  ]],
Cell[331826, 6640, 257, 4, 28, "Input",ExpressionUUID->"95c2d440-5f34-4096-8d7d-805c19f73e37"],
Cell[332086, 6646, 315, 7, 51, "Text",ExpressionUUID->"a4d3e002-6aa2-45cc-a329-b64caecefa39"],
Cell[CellGroupData[{
Cell[332426, 6657, 11012, 272, 352, "Input",ExpressionUUID->"539af9eb-2787-4ce5-94ed-3f323d9493e1"],
Cell[343441, 6931, 67915, 1209, 206, "Output",ExpressionUUID->"94eb21f5-debe-46a2-bb61-70ad933a055b"],
Cell[411359, 8142, 72114, 1279, 208, "Output",ExpressionUUID->"ccddf69e-4b95-46d4-9235-01afbde972ac"],
Cell[483476, 9423, 79979, 1407, 206, "Output",ExpressionUUID->"ecac3e5c-f89c-48c3-824c-4843c0067336"],
Cell[563458, 10832, 2071, 33, 32, "Output",ExpressionUUID->"c3ceeef5-f66c-471c-8aec-7a4d7c046867"]
}, Open  ]],
Cell[565544, 10868, 212, 3, 51, "Text",ExpressionUUID->"f03e7ea6-c5c3-4d65-ba41-05cf4f23e612"],
Cell[CellGroupData[{
Cell[565781, 10875, 14400, 345, 882, "Input",ExpressionUUID->"72a8bca2-8c79-47e1-9329-ba71838bf03f"],
Cell[580184, 11222, 928, 17, 32, "Output",ExpressionUUID->"682e0c40-2cda-4a1e-ba3f-983fcd81aeef"],
Cell[CellGroupData[{
Cell[581137, 11243, 738, 12, 22, "Print",ExpressionUUID->"4352cdd4-f21b-4513-890a-13d7220ca4f7"],
Cell[581878, 11257, 736, 12, 22, "Print",ExpressionUUID->"c09efd6c-9e21-43f3-bf1a-0ee63e72823b"],
Cell[582617, 11271, 738, 12, 22, "Print",ExpressionUUID->"a17c7c64-8dcd-495c-93e7-f26f62bbcc94"],
Cell[583358, 11285, 736, 12, 22, "Print",ExpressionUUID->"85f9b0c4-5563-4438-8fe7-457850b4eb34"],
Cell[584097, 11299, 736, 12, 22, "Print",ExpressionUUID->"1444aa57-2147-4b95-9fb5-94476bdc4956"],
Cell[584836, 11313, 738, 12, 22, "Print",ExpressionUUID->"0ef3e736-c67a-4922-9eb8-59dc7569af96"],
Cell[585577, 11327, 738, 12, 22, "Print",ExpressionUUID->"1a08aeb2-3f15-43d9-9785-f599e953aa84"],
Cell[586318, 11341, 736, 12, 22, "Print",ExpressionUUID->"9a533957-5a53-4964-80d0-ab985932acc2"],
Cell[587057, 11355, 736, 12, 22, "Print",ExpressionUUID->"86076bef-26b9-45ea-a3b6-261d3fd32240"],
Cell[587796, 11369, 739, 12, 22, "Print",ExpressionUUID->"ad8a33c8-aa81-423e-afbf-a64e7b3b5988"]
}, Open  ]],
Cell[588550, 11384, 123142, 2117, 208, "Output",ExpressionUUID->"bdea9f1d-0f04-4188-95fd-f68d288d25ab"],
Cell[711695, 13503, 2182, 51, 245, "Output",ExpressionUUID->"3362f793-5b37-494f-891a-0207eab4159d"]
}, Open  ]],
Cell[713892, 13557, 208, 3, 51, "Text",ExpressionUUID->"1f326168-d612-4bfb-8f00-5d26c5302aa2"],
Cell[714103, 13562, 526, 11, 104, "Text",ExpressionUUID->"4f96a2c6-1db1-40df-892e-51cb2ee045f0"],
Cell[714632, 13575, 287, 4, 51, "Text",ExpressionUUID->"605fa9bd-d2f9-4de1-8459-5ae1aa1ed3d4"],
Cell[CellGroupData[{
Cell[714944, 13583, 11748, 279, 730, "Input",ExpressionUUID->"a1e062b3-c19b-4de5-9c5a-758815bd1a87"],
Cell[CellGroupData[{
Cell[726717, 13866, 327, 7, 22, "Print",ExpressionUUID->"4862f4bc-a5fe-4c18-b2ab-7942cad26f35"],
Cell[727047, 13875, 327, 7, 22, "Print",ExpressionUUID->"d4a601e7-2397-4df6-b408-ae8073848ef5"],
Cell[727377, 13884, 325, 7, 22, "Print",ExpressionUUID->"6b7d41ac-9732-4954-ad0f-c14782216c14"],
Cell[727705, 13893, 325, 7, 22, "Print",ExpressionUUID->"d13988ad-0619-4550-8526-5c5b7817c018"],
Cell[728033, 13902, 325, 7, 22, "Print",ExpressionUUID->"35011865-bc40-4696-8abb-cc48ce8ee770"],
Cell[728361, 13911, 324, 7, 22, "Print",ExpressionUUID->"6204e8e8-28ef-4f14-96b6-ffe2df356b6b"],
Cell[728688, 13920, 325, 7, 22, "Print",ExpressionUUID->"c64e2e00-9ac3-4a44-bd0b-afa5face8fb8"],
Cell[729016, 13929, 327, 7, 22, "Print",ExpressionUUID->"ff3e670c-c52f-4df5-826b-016f8ce893a4"],
Cell[729346, 13938, 325, 7, 22, "Print",ExpressionUUID->"aea7e719-f71d-461d-819c-91e02e2edc30"],
Cell[729674, 13947, 328, 7, 22, "Print",ExpressionUUID->"c7046757-e870-4e1d-8208-9584ea5224f4"]
}, Open  ]],
Cell[730017, 13957, 89287, 1566, 208, "Output",ExpressionUUID->"8422c06c-0a54-450f-bf30-82fd245b3abe"],
Cell[819307, 15525, 399, 7, 32, "Output",ExpressionUUID->"60eddc4f-7de6-45ca-9031-103521e3ce42"]
}, Open  ]],
Cell[819721, 15535, 303, 6, 51, "Text",ExpressionUUID->"5e902872-386c-441e-a1fb-71cf8c39bef1"],
Cell[CellGroupData[{
Cell[820049, 15545, 11877, 281, 749, "Input",ExpressionUUID->"db1fe012-3c00-41dd-bf23-d956f20ffc05"],
Cell[CellGroupData[{
Cell[831951, 15830, 175, 4, 22, "Print",ExpressionUUID->"e24d5fa0-1925-4b91-a6c5-4b3a0948a4f7"],
Cell[832129, 15836, 177, 4, 22, "Print",ExpressionUUID->"042e9e3b-099c-4e9f-9b60-7737234042ea"],
Cell[832309, 15842, 175, 4, 22, "Print",ExpressionUUID->"e4a9ea77-aef1-4256-afeb-43647d389980"],
Cell[832487, 15848, 175, 4, 22, "Print",ExpressionUUID->"d8e5a864-996e-49ef-9668-635c7ed12e67"],
Cell[832665, 15854, 177, 4, 22, "Print",ExpressionUUID->"abc38e85-a5cb-4755-bf7d-359408195a9d"],
Cell[832845, 15860, 177, 4, 22, "Print",ExpressionUUID->"64161f47-8839-446d-ad3b-a4b9ef25f4ac"],
Cell[833025, 15866, 175, 4, 22, "Print",ExpressionUUID->"a529319e-a79d-4789-b379-26c13e1c5fb4"],
Cell[833203, 15872, 175, 4, 22, "Print",ExpressionUUID->"7dc6844b-8e20-4c36-93fa-3e649567c9cf"],
Cell[833381, 15878, 175, 4, 22, "Print",ExpressionUUID->"50af0c08-a1cd-411c-ad57-7951aaf420ab"],
Cell[833559, 15884, 178, 4, 22, "Print",ExpressionUUID->"e5a0acf8-e273-4885-b0dd-0ab36f8925bc"]
}, Open  ]],
Cell[833752, 15891, 103385, 1800, 208, "Output",ExpressionUUID->"0f56444a-5d44-4e7c-a35a-9ff38e9907ce"],
Cell[937140, 17693, 172, 3, 32, "Output",ExpressionUUID->"5a51d711-45a6-4982-9c04-b0d88b4338c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[937349, 17701, 1380, 38, 162, "Input",ExpressionUUID->"4d37da18-9ae9-47ac-97ef-2fd489ebbe42"],
Cell[938732, 17741, 277, 7, 32, "Output",ExpressionUUID->"c81eff13-d2d9-42c9-8ad9-50ec651a257b"],
Cell[939012, 17750, 232, 5, 32, "Output",ExpressionUUID->"d9e008ec-6213-4562-b590-6bb135a64dd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[939281, 17760, 205, 4, 28, "Input",ExpressionUUID->"a7cd81ac-df61-4973-9d28-39b2e2c7e714"],
Cell[939489, 17766, 258, 5, 32, "Output",ExpressionUUID->"00778090-112d-454d-9ca5-0a37f00dc490"]
}, Open  ]],
Cell[CellGroupData[{
Cell[939784, 17776, 201, 4, 28, "Input",ExpressionUUID->"d4c8edde-8eee-46bb-999a-20fdebc1a30e"],
Cell[939988, 17782, 251, 6, 32, "Output",ExpressionUUID->"0aa831eb-24e2-42b4-9f1e-defe2b82d28b"],
Cell[940242, 17790, 225, 4, 32, "Output",ExpressionUUID->"138d06b0-04f8-4f02-ad5a-4ab75dd92f1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[940504, 17799, 228, 5, 28, "Input",ExpressionUUID->"404e6b01-6f3e-4fef-b83b-18bf0edcc7b9"],
Cell[940735, 17806, 177, 4, 32, "Output",ExpressionUUID->"58ef284d-88ef-4516-b73c-bf1bf8fea1ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[940949, 17815, 152, 3, 28, "Input",ExpressionUUID->"19bdce7f-403a-40f5-8525-e5f855d04403"],
Cell[941104, 17820, 331, 8, 32, "Output",ExpressionUUID->"2b5b8364-5f86-45a9-9139-4384eff9593b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[941472, 17833, 225, 5, 28, "Input",ExpressionUUID->"ad533eb5-62b8-47b7-9811-c292590585df"],
Cell[941700, 17840, 155, 3, 32, "Output",ExpressionUUID->"3ebe8a9a-421f-408e-97e9-097f21278918"]
}, Open  ]]
}
]
*)

