(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1042154,      20310]
NotebookOptionsPosition[   1027813,      20128]
NotebookOutlinePosition[   1028286,      20146]
CellTagsIndexPosition[   1028243,      20143]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_", ",", "initGuess_", ",", "maxJ_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "frootNew", ",", "errorNew", ",", "InitGuess", ",", "J", ",", "S", ",", 
       "K", ",", "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", 
       ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
       "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
       "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
       ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
       "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
       ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
       ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";"}],
        "*)"}], "\n", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errorNew", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
            RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                " ", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
            "\n", 
            RowBox[{"J", " ", "=", " ", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
            ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";", "\n", "\n", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}]}], "\n", 
       "\n", "]"}], ";", "\n", "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.865967298267394*^9, 3.8659673001198*^9}, {
   3.866571893798601*^9, 3.866571940716648*^9}, {3.8665719967138014`*^9, 
   3.86657200493918*^9}, 3.8665721461421776`*^9, {3.8665731331726017`*^9, 
   3.8665731928485823`*^9}, {3.866573291140256*^9, 3.8665733048578844`*^9}, {
   3.866573636752106*^9, 3.866573657335546*^9}, {3.86657481838451*^9, 
   3.8665748273656473`*^9}, {3.866574870351947*^9, 3.8665748910333557`*^9}, {
   3.8665788373566265`*^9, 3.8665788400997524`*^9}, {3.866579031902623*^9, 
   3.8665790413156233`*^9}, {3.8665801062232275`*^9, 3.866580141002143*^9}, {
   3.866664127693946*^9, 3.8666641298202667`*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[475]:=",ExpressionUUID->"c06eaa1a-1a94-4921-93d5-81325d0c5150"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListBadICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5919233888024076`"}], ",", 
       RowBox[{"-", "2.626560404936485`"}], ",", 
       RowBox[{"-", "1.8337732091632066`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8988421797170734`", ",", 
       RowBox[{"-", "2.781568090526754`"}], ",", 
       RowBox[{"-", "1.7208327942083077`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.5130003928325353`", ",", 
       RowBox[{"-", "2.7638782645015807`"}], ",", 
       RowBox[{"-", "1.5499618641831363`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.1258783007678108`"}], ",", 
       RowBox[{"-", "3.075660607934064`"}], ",", 
       RowBox[{"-", "1.8180933102904318`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.0862158325400353`", ",", "1.389077323652403`", ",", 
       "1.2418614212135708`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.410811763077299`", ",", 
       RowBox[{"-", "2.6799695626956286`"}], ",", 
       RowBox[{"-", "1.249504352429808`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.8018187254571911`", ",", "0.6312196180519329`", ",", 
       "0.3007314035275339`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.6639286656315342`", ",", "0.3762926167702396`", ",", 
       "0.9290478726251834`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.03706862009377243`"}], ",", "1.2622064778502988`", ",",
        "0.8466788889730772`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5434651973062383`"}], ",", 
       RowBox[{"-", "2.601835119680123`"}], ",", 
       RowBox[{"-", "1.7656478532020108`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.277167056780228`", ",", 
       RowBox[{"-", "2.939647560942354`"}], ",", 
       RowBox[{"-", "1.4975993973103163`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.591878596354511`", ",", 
       RowBox[{"-", "2.898678940703004`"}], ",", 
       RowBox[{"-", "0.8043365992636904`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.8881446664424688`", ",", 
       RowBox[{"-", "2.3394205463410316`"}], ",", 
       RowBox[{"-", "1.837011306641183`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.0744667175310116`", ",", 
       RowBox[{"-", "1.7285609705780498`"}], ",", 
       RowBox[{"-", "1.954902635840356`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9498789296971752`", ",", "1.4434997322554963`", ",", 
       "1.0211631207173442`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.9096980484776003`"}], ",", 
       RowBox[{"-", "1.6160359759348495`"}], ",", 
       RowBox[{"-", "1.9523905732877624`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.401393896381272`", ",", 
       RowBox[{"-", "2.488365977780391`"}], ",", 
       RowBox[{"-", "1.3431904393576986`"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",ExpressionUUID->"c1017f9a-a17b-486d-bcf4-2a776a5e392f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.865967283387162*^9, 
  3.865967297681583*^9}},ExpressionUUID->"869f2bbe-d630-493f-a109-\
ef8e8d83ea6a"],

Cell["Manual implementation of periodic re-computations", "Text",
 CellChangeTimes->{{3.8641533433196383`*^9, 3.8641534078207626`*^9}, {
   3.865345899534526*^9, 3.8653459352441096`*^9}, 3.8653595685158424`*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"982e74f5-390b-4bf9-a720-2fed731db11d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A1", "=", "0"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A2", " ", "=", " ", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"uBound", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxCount", " ", "=", " ", "10"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["maxJ",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{"2", "^", "2"}],
     FontWeight->"Plain"], 
    StyleBox["*",
     FontWeight->"Plain"], "\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uBound", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
        "order", ",", "maxIter", ",", "maxError", ",", "uBound", ",", 
        "maxCount", ",", "InitGuess", ",", "maxJ"}], "]"}], "]"}]}], ";"}], 
   " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
      "uBound", ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
       RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "6"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
        "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "6"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
   FontWeight->"Plain"], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636127929494734`*^9, 3.8636129048647366`*^9}, 
   3.86361309340853*^9, {3.8636132740148587`*^9, 3.8636132890980425`*^9}, {
   3.86361367016436*^9, 3.863613704067534*^9}, {3.863614005426304*^9, 
   3.863614044030977*^9}, {3.86361407671554*^9, 3.8636140789588237`*^9}, {
   3.8636141197098103`*^9, 3.863614156970913*^9}, {3.8636143059493403`*^9, 
   3.8636143423397207`*^9}, {3.8636146524377003`*^9, 
   3.8636146681296897`*^9}, {3.863615502417285*^9, 3.863615703473082*^9}, {
   3.8636161037482653`*^9, 3.863616122815179*^9}, {3.863616300467451*^9, 
   3.8636163404706755`*^9}, {3.863616379759131*^9, 3.8636164322373734`*^9}, 
   3.8636164758294525`*^9, {3.8636165064106874`*^9, 3.8636165068755407`*^9}, {
   3.863616588161584*^9, 3.8636166296943207`*^9}, {3.8636166641123295`*^9, 
   3.863616732677436*^9}, {3.8636167693047395`*^9, 3.8636167704293804`*^9}, {
   3.863616826318534*^9, 3.8636168556931543`*^9}, {3.8636168995821395`*^9, 
   3.8636168999240313`*^9}, {3.863619302411866*^9, 3.863619416136552*^9}, {
   3.8636195563387823`*^9, 3.863619570937121*^9}, {3.8636197069376936`*^9, 
   3.8636197273581724`*^9}, {3.8636205744286833`*^9, 
   3.8636207335498743`*^9}, {3.8636207658335643`*^9, 
   3.8636207659625244`*^9}, {3.8636208211778917`*^9, 
   3.8636208543832893`*^9}, {3.863620930334037*^9, 3.863620936617031*^9}, {
   3.864135467525829*^9, 3.8641355031932845`*^9}, {3.8641358508757644`*^9, 
   3.8641358994820337`*^9}, {3.864136005621681*^9, 3.8641360284712887`*^9}, {
   3.8641361588251004`*^9, 3.8641361878597054`*^9}, {3.864149523908724*^9, 
   3.86414952549721*^9}, {3.8641504554392495`*^9, 3.8641504662587476`*^9}, {
   3.864150523008383*^9, 3.864150605221774*^9}, {3.8641506500782566`*^9, 
   3.864150690388214*^9}, {3.8641515284209967`*^9, 3.8641515289998107`*^9}, {
   3.8641516589627523`*^9, 3.86415165924166*^9}, {3.8641517275125647`*^9, 
   3.8641517616755095`*^9}, 3.8641517984915934`*^9, 3.864152052785297*^9, {
   3.8641521525610065`*^9, 3.864152184609634*^9}, {3.8641524131266785`*^9, 
   3.8641526257358713`*^9}, {3.86415267085427*^9, 3.864152694523608*^9}, {
   3.865343316507264*^9, 3.8653433661354*^9}, {3.8653439486171923`*^9, 
   3.865343974084052*^9}, {3.8653442980234942`*^9, 3.8653443296263914`*^9}, {
   3.8653443748479357`*^9, 3.8653443749728956`*^9}, {3.8653444172203894`*^9, 
   3.86534442272363*^9}, {3.8653469695214763`*^9, 3.865346987082861*^9}, 
   3.8653470346556525`*^9, 3.8653527113159447`*^9, {3.865352921100881*^9, 
   3.86535292673708*^9}, {3.8653582294529123`*^9, 3.8653582967913857`*^9}, {
   3.865358599615581*^9, 3.865358639228916*^9}, {3.865358727662645*^9, 
   3.86535873275102*^9}, 3.8653587920620584`*^9, 3.865358828820309*^9, {
   3.8653593086449194`*^9, 3.8653593288444633`*^9}, {3.865359372130623*^9, 
   3.8653593924201374`*^9}, {3.8653594236451564`*^9, 3.865359453367653*^9}, {
   3.865444950539036*^9, 3.865445024576361*^9}, {3.865446050861164*^9, 
   3.8654460571241617`*^9}, {3.865952145761594*^9, 3.86595214986728*^9}, {
   3.865952199585349*^9, 3.8659522182973533`*^9}, {3.8659603685998144`*^9, 
   3.8659603767552023`*^9}, {3.8659604947234*^9, 3.865960520358188*^9}, 
   3.865960564993886*^9, {3.8659609071592493`*^9, 3.8659609263660946`*^9}, {
   3.865961860067914*^9, 3.8659618679653835`*^9}, 3.8659654827151413`*^9, {
   3.865966916471731*^9, 3.865966942550375*^9}, {3.8659671518243213`*^9, 
   3.865967156179924*^9}, {3.865967206640753*^9, 3.865967238990388*^9}, {
   3.8659673141932907`*^9, 3.865967351676281*^9}, {3.8659674264683175`*^9, 
   3.8659674265732813`*^9}, {3.865967462005929*^9, 3.865967508030183*^9}, {
   3.865967548370256*^9, 3.8659675668793263`*^9}, {3.8659677463418226`*^9, 
   3.8659678159435205`*^9}, {3.86596784633578*^9, 3.8659678729282613`*^9}, {
   3.8659679163953342`*^9, 3.865967976588047*^9}, {3.865968140783433*^9, 
   3.8659682509141455`*^9}, {3.865968287893297*^9, 3.8659683248484554`*^9}, {
   3.8659683827519045`*^9, 3.8659683981569653`*^9}, {3.8659684305215964`*^9, 
   3.8659684309144692`*^9}, {3.86596846558936*^9, 3.8659685457466745`*^9}, {
   3.865968580020693*^9, 3.8659685824779053`*^9}, {3.865969104561618*^9, 
   3.8659691127210045`*^9}, 3.8659693634616613`*^9, {3.8659694114932704`*^9, 
   3.8659694935339813`*^9}, {3.8659695285567617`*^9, 3.86596959443765*^9}, {
   3.8659696286047025`*^9, 3.865969631037925*^9}, {3.865969673164426*^9, 
   3.86596967499084*^9}, {3.865971493789056*^9, 3.8659715068088856`*^9}, {
   3.8659716882007627`*^9, 3.8659716883647113`*^9}, {3.865974154847394*^9, 
   3.8659741580303764`*^9}, 3.8665732156743083`*^9, 3.86657333593898*^9, {
   3.866573373610974*^9, 3.866573379876976*^9}, {3.8665734121177006`*^9, 
   3.8665734375355988`*^9}, {3.866573666031777*^9, 3.8665736662597046`*^9}, {
   3.8665740977401857`*^9, 3.86657410732813*^9}, 3.8665741515230446`*^9, {
   3.8665741974374113`*^9, 3.8665742560887203`*^9}, {3.8665746295316987`*^9, 
   3.8665746382579193`*^9}, {3.8665748985349655`*^9, 3.866574931306522*^9}, {
   3.8665749733131332`*^9, 3.866574973781985*^9}},
 CellLabel->
  "In[2223]:=",ExpressionUUID->"c28652c3-ba56-4a0b-8e4f-0e46f1c2c441"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJzU/Hk4lOH//w+PfezLUJRKkmyJCiV1nqHNliRJiUoIWctWSiVaJCEkO9mS
LVvEiWxJZSv7MtaZyL5v87s+v/tzTd/jfRzf430f93+3fzrOZuaa8zq31+s1
j+fz2n7VweA6I4FAyOEgEP7nX/GXawnRWx8cIRC8g1Wz9x3RKmHTG7ZCIOty
0zYf+AJ951ZmZzZtAIZZji36+7KQ+stjZcmn28CmZu8qzeAydH3PMrcidx/g
aD9s7re3DulKX5/acGIQ1J9jszJ51IRyWrxufz1AAV1y8Tz1hq3okIBMJvP9
MeBm0iq1a7QTWa0ERb0zngQ+Y8Vfjz7uRQ7VI/sydaeBRfSkLWGmDz0zYd25
ZjcLiqVPvtkfR0bXau5YKlrPA5FdWzXd4smonE3kjO2FRZC5hbs2a7UPKfJ7
h1JvLYNdG0yXixd6kPnMYTk9u1WQIlHe8fhuB4qLrhJdeLEORp9vSZhLaEYf
A1Q7mwwIkOOr6Vzr4yp0q+iwfpQOA7QOGvvUKf4Qobp3008vMsLYt29jZjJr
wY0TB0tuGDPB9ujC8z0F7SAyRTHP1oYZbmhQ5uV2GQSvZkoeOLqxwIAblJ+v
u0fBcNptV2tnVhiyJ9reSmUKVB4PCn/4kA36NiKfrx6zgOF0R/9LbyI8IJO6
WUFpARCO5jPEerBDEXfisFHkEniycUG3yY8DMliUtMGlFeBocq1i4REnJKKr
wl7M64D8YL8FeM0FT8U27v3JR4CCwW86nsZxw80XySvHhBhgEp+MR81bHhjU
UHjRk8gIy523Hdv1nhdKlTt+2EhigtFisaKHDfmgjCZngB0PMyy5u0ywbuCD
WWT7kr3MLHC7NtvqjvP88EWXxn05IivM/Sn9vL2FH9adUCfcGWOF/tXrCmKm
AvA7V9xt8a9sMNiFamPeJQBdt9Du5jsR4V2hrbziF0jwJqNa5sowEaZKs9Td
6iNBmua2rRVi7JB1lkGk/LIgFN6tabiynR0mK2Tfix7515a+mqa3dlOI3u48
9Snn3Oi/dlOC527gsoHeXvx4Rk18+l+bVuic52u/kd7WVjh+7O7cv3aN6Z4b
ti7C9HZGluMCjfavXfeq04lilQn42G6zFCtZIrG1gsg15VqQ1vKiuYcYj578
KBk8Z9QCLMRnOQn7C5HrzFmBkYt/AEHLd2vqp3bkwyw1tyt8HDBu1SNdautG
o+Yl1jJnpwDg+Rq32bYP3eVzkzMynQHa5z9eNzUjo3m+8mNhNnNg8m9Wp3U+
GQVZ1V38Yb4A7g0YxPBdJyMP/3oXGaslsMX5p2GccR86yWhGfuu4AngzRE5z
T3YhwtcHieJea+Dz5GSE57lWxHw56saPNzSgb/oaCs78QCESn4UKfxKgiEln
2q6nBUhMW7BnVVgAnpnxvy5ixgb5tszqlkUKwKL3cg2V4kT4pJLpcPkmErQO
dLi25SMRBsW8svsWSYISw1435rjZYVvAo6mIbf/myyio/duehH9tVTb9rLxP
/8bzq+qjT2NWMYCweEF7JFkC9f/tvuI+9wWkMf9dAOfCkcz40nz6hSbg/fni
82q+XCQ4SNEw1qICZdErGqQXbcicU9og9PlfoJN1NeU6tQtJy0sxUX5Ngldj
RzUbN/UhV9s9WQ9/TYNxtcK71+TJqCzvmlLd6CzYMmCwuSWLjDw37iDfH5wH
/AaiN/mektGWOud+rb5FMMAE97zI7kOfn04UV0wvg9uKvzP3M/QghR4z68LZ
VaAbcOYk43IbMrin+KWfRAOi549cp8U0osQLd9yPvSLA3LXVSNGKMmTDHbN/
dJ4f3hD6GVAmyQZ/OHmAybsC8IbTzvQ9C2yQJ3K+OXBFAG7ibzlJCCFCv47W
knlPErTcta+3fZUIhb94avx9UQD6TgdcHIy7h0y5glofuteD/cG8YuINKaiN
EfXdvjkKEr1e377S3oFS1yTDPyVOAKVtrqRDBT3oQ7DBD7uGKeAj5pUDPvah
R3mlKdJDM4DlAN+LlMdkJGe31ciCOgfemx44kptNRmkFTr9FuxcAY9W4k6oy
Gf3Sk2ThGF8CYxNFV/kGelGL5w/W2+MroDNyLPnjl07U8DGhz59lHTx06XPQ
DfiFDGrtLwV+FoArvUybM7SJkPEvX9LUQRKUa30e3PaDCKMttDfHlpIgswTf
BMsmduhQrs4iD/6tj1r/ppNzVi8BYep8RrSzPNAcdqzMaykHWz/zP7JUDkar
axu9jS82gqL8QNdPwjno2qWPXYHlFDBYlLPVYLoV/QhI9dZl+QvUuut/bbfr
QrUhpg3HwyaB7BeJ89d6e9F0OOd0+KtpsN2y9sMyPxntJCp9uJY+C5IEL387
mkZG9g4/E4yT5oGiSoM0KYyMJihVIp2RiyCGHJrR2Iatp+8q0r8/LgNjY6+x
ivs9qJaip/UoaxX0De544oHakWfAysRYwzpQrm9NOJHUhORmO6S5nAlwMKR0
40nZL+il/aBZ/xA/DO3cOd3KzgZ3i6odIN4UgD/vbBq81ccGG9gcYxZHBWBl
kH7m4UfY+C16WnLZkKCqo2jsvWkinK0YPHtkkgTDt3xdWcfGa/3Y/tLJ2I+A
2L/P+U+NCypl3qladr4OcHQ7izKeeYd23XnqkTH4BxTlujfu1e5AGx4kVztu
nQDTUa+7Ok71IJ1lv7ffXk2Bsi/yRsqBfYgwEPEHxM0AO7Vi0W4XMnpVOvF9
LXUO6KdUvruYR0bRvFvfzEUvAAvH9P3Mp8ko+aaHWkTaEuCt9vzYJ9mHAko3
3HqSuQL0dcrCT5t2IevSoIrz5WugxFqp7Kjrb5TtrHguJV0AsvKqqAapEGGV
8TOnCzIk+NZz4bVNObbeH45/yftAgvBXYGSCIDsMC9OzmniRDGKnEo7q1xqg
B3NaNNUN1aDo1Ib8qbkotHT4rL2dyAwY/fVwSfEkGV28FlSiIDsHjvHnFA/k
kpEvct2aLL4AvHmEXK3cyUj7/bb3RTuWgKfqUPRv3z6kreBFlOYkwRe3OIoW
EoiQq2S/EPk5Cf5qYPNgZmWH4WcnnTkY/61PRVheS/UsBouXdvqM1D5GrE/6
LUnSsyB882aebyFkVCui21MnNQ8Ed30pt3lPRvlmVSTNzYvAUnjK/usmMgIP
wjqeniLBmB1PX5p3EqHEiRTnZz9JsDb44h7SVnZYreBkxWp9HxB4/Xw1IqXB
ratFtw0ry0C/THTaj/ZANMiSrCnf1QD2947zRu3IRs/ChaV3e1HA7xLtXUMJ
rcingbpRumIMVP6UfiMi14WETy4qz7tNgn0zWXXfc3pRVuaSQKLDNNBI+S77
k5GMjLO33MjynwXJzq38HElkZP12J8sxv3ngMKweJByFve7uoLTjziLoE3qw
ZfdoHzKc6Ow1C1kG6b81hgM/9yBB++PF1gGrQELCIoJzWwcKCDVndc5cB73E
IUdFyWbkWP7socNVAhR4w/H5ukklEt/mN2fazQ+dXVXCVVZY4SWnqP2C1wXg
4qkVtZ4WNphTIvdYblAASmr+hUGeRIh861XDrpCgn8eFl+QxItSbnw24QCFB
jfYD8k+w+XBme3XHOS0b6M9470gytEcT3vajl098BcIRRnu73yUgvYLxKq3Y
P+CKzsHdrYwd6HvFiKlO5zjgkhupieLvQZEfxBnvOE8BGdX36X+8+lDp0hNO
7fszQOa2wdGZG2RUadX2VOvZHDDQ4GBXwuJv+KFby+T7C8DlzMXwKyZkxLcm
btz/ZAnAapUD+2Afsu0rkhEIXAEcN9kknyZ3oVyNZ/sOx6wBQhrLi9nh36iv
JuhMbqIAnPC4rHN0NxEm8Zw4/0KcBD/UbXQzKyLCX3wwHL4jQaGFF3a3+dnh
vU3E/unYBECogFHX5tRRjlNIVjtLFaj8m21ZJ/QWFRoefem2MA1Eny+9ij5E
RgFcdzy8OOeAVeiNUrmPZOQ9Wn8/mGkBlPUN7uV/QEa5ql+rGRmXANFuZCY2
sg/JDR8cv8REgikPBRqEIomwTtuXavuIBJ+T3zW8ZmCHiQxbfW19PoGT/cQx
DbuHqDK6wW8r2yzY3/LF5fkLMlquUIrYyD4PNoruPDqYQUZZzzffVlhdACmc
PlvqpchITMWwrOQoCTJkCKGDv4iQ/GvpuFANCVqEbK9SEWWHoXA+Y+ZFGCAI
Pgpq+LYFTF/WmdpQPwtui1nUd3wgo1saHup2VfNAs2VW2DKQjDRvSAc9cCbB
l545lY0LRBjxskV4xyIJ2ms7BO8UZ4fPfVoJDmF5wNxhLLl40h2p16d/3f9l
BgyXHR8W8SKjy0JsAtlf58CWS0r5ndj4XJyJnJDJJ0GrZykt9zaywyzB12Oj
nu8BLFeL73a6jKSKUhkGteaAuvuc8CJ2/p10mj1G1J4FTTbOshfeklGoo4X4
vZPz4GLvkYrjyWRkWWgUTWslwXsPrFjCtrHDcveMRClrB0AozbYCHVuBv5jZ
jx1qZSD8zKs5RaeXqO3puOSbyAagVTfm2pGWhaKVtU+vmFDAH+qm+pt3W5H5
1NOB0Ngx0L1qYF/C2YXK4o790bWeBAbnpV0lI3sRX7FjQurlabC5+On21eU+
NMUiUPP77iwIOtmxlpOA9Se7QanYbR5sKPyb0xVDRlxQU+OEzSLwLSI2sc/2
IXWCfHGizzJIeGuYZNLRg4oUKlwueq2Cp37bH3PqdaDwTcGvcqPXAU/Luqzx
9WYkkNIvH2dCgLNoz7OQyUpk62ZctrmdHxorp1R3zbDC2c0/9m66IgCjOJon
mX+ywXhhTvfjfQJwJOD9JRlXItyqN5d4yZQEE8dckheoRLjK6yVnNUiCT77o
0OSx/SxnDUz2ZWaBLLbwTK3tNogISJryqBak7PHMCPoVj66e2z4mfO8P+Npt
LmfS045SBvykiz6NgyqLx/pb5rqRJptjXtPVKSDKMPUo+FYf2sJCiNS3nwGP
ZS0rSizIyPRz/Yij5xxYUCkOuYbt59dntskaOy6A3ysjrT+wfLuycuE6q/sS
YFRzLPLV6UMmU1ys571XgHHfzBeG+i5kwso6tidgDQQ+OkX02tqK3J2/nC6K
FYDCy/3ORCkiDLuxUyt5KwnK6189UpVPhPvbrBlZ40gwZFA8GPGyw6lOi5hb
aXGAcLjP2ZKijOr2HGRP9aoE4cXqJJ/sN2ijeeE2r+FpcKIxcFRIiYx2XXFo
TViZBbQjC68Ec8jIi8E9i312HgySOfglsfzNmjG6RXJqETwtuFW8Nxm736PC
ZFeaACSP9zjzhxOhFCnzrOJ9ErymSXQ4SiPCy1frLeSeFoI2mV5pk9/eSCLt
hLDE/Aw4paJzJAPLf4M3yiweXpoD255vN7+C5ccf4qrfJY0tAE2DLu83e8iI
P2jvx9bDJFheTbPkayJCGCWe3VFBgtsSN7yW3swOvb5kSi/EBgNCt2DPg73S
wP8jPH348yxYL3m6VzydjJwuSLj0580DLcWQd43BZJSgYLB63J4EfXdVPVCc
I8ITqZfyFWZJcIT9takotp81hx737onMBW3xOSKbtF1RXOsOE9WcGaDe+WP/
KyyeL95YcWj9NAfW7h17mYXF+6KiqguT2ST4m3MqdfMGdijxeyr1pk8q8LZt
6zhvYIwqeKLNOA7NAdH3y7oPsf2cfNf2N7fqLFiWeWkmFU5Ge6qMvRMPzIPH
w5Tt9qlkVHX/PrGqmQSVBm5t68Pic2jQsSOrL/wAgS91YemNPCi9JM35LHIW
NJYJ5B9MIaO4Lrsp7TESNOry8f+OrWcZ0qCsRMQcMNbaJ9KNfR/HhfcSTmHv
QNm3Zv4nadpotsB38/nNc+De1RsPRLH+X7E/qjYlPA8m7MLK1bDz7yFPY9fp
byT4Y+2gicIW7HwqUds/6fkWELzbRfaUfC29wGEcPNk5CyaMP3nYZpLR39s6
d4RWSXD9z697m7DxqyoTyH3WPgfGejhXurD1c/jsgT02Th+A400nSk7QVfTy
el5CickcuJh0ek0T2w/Eqd37Vbuw9XqI+FkFq8cLiNLbblqbAYL96vqpUj6g
SLs6t2ESAetAi9YYowDUpC0Q/uNuA8iNa1IZt89CKY8trvafogAtRoU98dZY
Ps5g8vX7yzGwqTzPz2OlE4XojX3xMJ8Eowoh1cWBvagMptvKGU2Dsf0DF5gW
+tARBa556q1ZsCqQ/dE9nows1CT15h3mwZ8dwbJ74shoOEFeq/3KIriVl8Ng
sdiHioitUjV3l8G93nVjYWoP4hYgNLTcWgVyNQGXLlzvQJGX5FrPha4D9cFy
7kKfZnT1LQ9LkREBEt2tcs8eqkKBO8rfLf/mh6eNrcrkJlkhdBpW3GImAH3k
/VsF69ngpuOeTmd7BKC3SOKfKRci/J7NbgIukuCnRZnROxQibBI9unKznwS7
44SZVrDxehIe+jVYMQt4s59P9RK3RoLR1yeF7tSCyG+Zm6rs45FdoiqNZoel
2LqSW4n17WjD7HneqZRxUGh+u7JyuBsJ5254uW4yBaLNRFI6HfpQ/bNDFs3X
Z8DUodi/Alex+my4eoOPM1av8bVetsXmK6Trlkaw9QJQ+JEtdRt7PVqq3y7c
YQmMFrhuf2vQhxqX8lw83FeAQKrLLqGeLvRhRONk6uM14GO3U4ZbtRVV1nTq
lUQLwIpXHEtWO4mQLyxEI1eUBMU2P2SaySXCgUNeBZRoEjTu5mXt5mGH79VI
95QyYwFhh2s+j74C+h3wPC/wYCUYM6JymTO+QdVDMyO07mmwd4kwWq6Ixe/n
N1gLZmaBpMOCqQdWX971/16rOTYPOFtvvhDzIyN1yyedhZRFsKsmucsyvQ+F
2vt1PFoTgCFx329zhBJhm+sXoqAXCTagRA6+dSIsDtrR4s9ZCCa3x28O5vdG
LXse9SX9xerZO1bkLOx6fUcldp2ZmgNHdE4L8WHfly4nWkoeXACNMXmPJ/aS
0TMUlz54iAT12le0XBuIcIKgYllSRoJqfx/ZR2D16KQP14h72itAUD49PHBL
DrR1q97Tz50FP0fT5pWxfN5x0OP5lox5EPiqPcntNRkZhFhmS9th+fwT/6sd
M1h8yxd7rDKN5Sf3jynwYfsvTqhbL3BrLkg5+klDnuU20jc1Ey9JnQFxWa7B
aq5YPhMyF/0new7IrfXoc2Lnw42tHTzNmSTYG651+KoQO+xRjn0i/zQFiMW3
efl7nkM8B8MDtuybA8Vbv20+gL3fiDE5OlBxFvQdEj92PxQb3wmDzAKFeXB1
R3ONE1bP3hoILkluJMGibhPLu9j5dVeIVkiLfQQInJvtfMvkAKffDtWokFlQ
Jd/XLInlL+5UhTKDP9h8i1+48AE7v9wO95ioBM2Bq24RgAdbb5WfLjDtjUwE
ZSnlVsnSJ9DRfm8tG9IcSFvjzEzF8qmM8EO2zPzzINPX9qcQlg/udR56tfcr
CWrxXqrKx/K9HfffTDn5vAEEC6Xjq568IGm/QQVTyyww/xQknoK9v/Ihn5bo
Mgnq+lwIEcfGT2CUayCqcQ68i+0KvYJdf/7jMLesazrIeuDyIrLLHHW9zGxq
MJgDHSxjqTuw/hUYqlNFO0jwm86c1B8s/wpWHrzEHeAGCMetXd/J7gQ7mT6Z
mg+T4JvMSZ7L2P3xBTUVmj7E+p/q6HEG+/yBO/llH9/FA8Jp0bCDokdQh/Lt
lECmOXA30ubjO+z85GA8a3c77DUgkJyaCB8kgGNk+Ij0PAkK6FDu78D6+x4w
HK0snwMS/Wym2th5fnswQWFBfQ58bjPSq8Dma4Oo7dn+XyT4zIHF6AjWv0xe
/y+Lns8B4b21urTMHlD3M0X82DgJOnwd/0LB+tdDoa7yxc+BydPDr+Kwz6e8
8B/T2DEHQvjfKD7Grq+22utq7xQFCNa89y42k5B1Ou+LuTWsPpLsFeLB+qN+
qPhW2tU54CmhxHvpf+qX/6hn//P9hP/3TxBmpPLnMWNtnAcY22pu2ERhhjgP
yMndnOnsQgM4D/gheoxg2TsLcB4gfGJZ7pIDBeA8wPqK9GWRzy0A5wFd5Cus
1+8l03nA1acnZNs5m+k8oHHv+5Q2qV46D5hV2Xy9oH6AzgPOb7c5WSM6QucB
dc+3m737/YfOAxTvNeyX4J6g8wBCut0zWdFpOg/I3fvG9/eDOToPqL+VI57B
v0TnAbpXj53NaFql84CWhfwSgWM0Og9YsnrQonKORucB+gXcNtyPVhDOA4Qt
9/Lf75pBOA+wNhmYG3bqQzgP4JmXXkOTTXQeEESuRgzPJ+g8YOu98RyTv4t0
HuCit+Eln9s6nQdUmGS8EX1DgDgPOMvs37EwToA4D1jyjHpMvUWAOA+4uuWx
9OmQdYDzAN1W0+54uAJwHkBherk+ob8AcB5gVP55u+P+aYDzgKN3brEJmlAB
zgO2/shXTfbtADgPEMvRthLZEItwHiC6JtT1+UgPwnnA2c1xXArsEwjnATkF
fJsvKSwgnAf0m8TyqxNoCOcBWSl5bOYszGU4DyD87x/OA/A2zgPwNs4D8DbO
A/A2zgPwNs4D8DbOA/A2zgPwNs4D8DbOA+K1Y8N+6jJC/Pf/RwvKWQJmk4B1
QXScWakLjLtOKPSxkMGF9EzaDpl+sHU8e18dRxkg3HfaNwmGgWhI5y1ngxo6
L/g9/dpeIOMfLzBt8jxH+E2m84EsOf6dGlQKnQ+0BN2stG8eo/OBQ29/hlSh
STofCFwtnSZ/nqHzAJkgh4ws4gqdB1SafuVzVl+n8wDVO8zyR1JoKKLCKY7U
wgAN+tXRJNs6Enw60brUzgj3LsdJ929dRIzuSp9syExwv7jA9UTs+9V+itwd
m2WBZ96xzh3ZNgR+LT7yu73MCjc2bPROKZkF/Vr5h58yECFXhwqni9AqIJw8
Ob1xjQhnX/kXF/MRoGb6712fCBzwhqVhxUUyAa4e2E0cYuGECwcOfc6sIUCp
ce3gt1xcMI9HRutSPw14cljFWGzmhsHZxrVn2ddAdyM5NWUrDyw9lWT/7soS
yC2XMHPbwQt524wM27uxuvh/eYWWuc9VvXyGMpxX4POJ8wq8jfMKvI3zirTB
hkNcb5kgzid2r/N0o5BpIKGheN5IvQMEWC2HlMUPgt6/Lb5pm8lgNTcmSup0
PZA0tA16pDEEPu8s7VwcLKHzjLqdV16OPv5N5xmcNYS17rJ//MJr3KrwHIFC
5xcO748ekfsxSucXxw466dRtnaTzix2d5eTwkWk6ryghnf5zl2+ZzisoH7gm
pMLW6LwiRWXps+xzGvIrbXU3DmSAwXEvko41rKM/qVpD5RGMcG6b0MEL40so
30zl0J9IJijYajQ0dWgKWZJH78nns8Ct8mkHJit7QE/j6rp9PivMUIO9Vy5M
g+aTEqMsFWzw+scMF8Y3y8Bb+9Wf5lIidN8UI/LSnAbiXatD5ErYYdBN3VXt
agJUlxJ431nNARXv6AZKYfOvk9iadqqWExqG8snTVAhQvvo7g0EbFzR/8MO8
9vcacM85rC7Sxw2ZxFt5755fBrtv7LKL6eWBvrFhLSe2zgOcpyjv37MlOJxQ
Jv/lpvOi97/59c5B/oGh/+aXkkZ8/HFXD4g3i/dh3tcJmm2euUcdGAAHliqs
7KLjQXuqW8sltRGQM2/Pqsf2k85frMJNgKZ/F52HGPibOXycW0Ed0czEbl4C
nNBVjm1vXEc+E6s5MjwMMGfvrxcZYTSUXs1Z92MjI0zSit7cPrmKjliH1CmK
MEHzO0vTWRvnEX/JCY+0fayQPE+aO3/nD6jfxsl39wgbVHDQuR83MQ+mdU4G
ch0lwn26OX2SpmvAW5O2dPEQOwx3pmTPmhLgMHm46JgmBzRk9jzTO0GA+adO
Xh/X5IQ/zfetXUggQOYDZXf+6nNBmwblkbOaNIDzmS0TdSqqHYxlOJ/Bx2f2
Yl9zR9e/8cJ5zW7dhpH8o8wQ5zPtemTH5wUzYN+NYk7ayXYg5ihrsuvRMIgP
sKq7GdIHVAVFZT2uNYKiI5SjulWDYF7AViyflkvnOU7MrpkRzS10nhNnfHmm
cXcfnd/sqEkQEgoYofObv8tp3N/1R+n8pk2puXdfwgSd30Su/N4Q7T1N5zXZ
Jd1u8a+W6LzGz+LFZIXKGp3X8LOIJM7Y0dC9z88GPe0Z4PImMs/fTTRkqLo4
uvMOI5QYsljbX7aMAs8eWE31ZIKX2i34fwVNo7t/DL1/hrLAHppfqP5gG7h6
5FORbQgrzMzN/KgoNAXqT3Qe1Yxng0zt5/O4vi4B+D1vODuGCEuPP9rKOLUO
Gi8e0bZ8yw53ZjMLCeYQ4FCMz6pRMgfskdkQGEQlwMv3o/LFkjjhJ9dy75rz
WB0rwfCxNp8LbonvngpSWQfV8bYBjWXckFE082n892Xw53OK88cSHsj/hTB6
/tM8wHkSc+elTaWchDKcJ/GaLCRWBTOXRXQWVHU5/JtviScLy2s+/+Z7oSHo
4CX5bsC4HBavENwDQjm3fDbP7geXrusyp3vmAruQ2UeSpcMgSngr6fPRb3T+
dFm28vbwzk46Dyrb81xz0HsFdek2q1V20YD28rDsxhfriOvZJYspLI+ZrGVW
n3pHQwmVpUpTcwzwHB9XhMPTNZS6eLTx9RIjdDSQVWMXX0CS1Vme2oKscJZn
8a1V+wjQ96/55i7KBgfuDWgKdM+BP9q0Ya3tRCgupHJaFK0CWL1j/iBWhwS+
Mn344SABCtVcdrovzgEnmHqNI/8Q4IXyovwbOznhgaQkwZZ8AtxA8vWrlOeC
4TcGyO9e0wDOp2g11Nv2JxjLJKSu3bHY82+8whSF1U9++zdesvZWoW1GNGCo
UNuhPrmGRNHmmntZ2HUlvh7aHkNDgWUS3Mo5DDBf5Bex4tY66jh1M6SGzAZF
2nlSFU1XQNlXu/G5biJUsqV6zlXRgMsrvZ7pHna4aa1v89IvAozJirlgPswB
k2ClQQvW9p9LsGrk/def6tCYqfOKBDh/w/DKCT4aWjWMYrDYzQD3KrMaTd6l
ofxa48vpBxmhpV+8arv6Kiqr6FjzMmGHqmEFBgVeBFiwas/MZckBd4UYvj8x
RYCkpl8kFwtOeIOqbXnhBYHOrw4TtajN9kxlZ3xTrt8c/3f/OM96JpaiNxfC
DHF+pSUmxdqhNQtU7xIsz9a3AYHFPKs6txHA3Ktg91O/DyTyuWgpcDUD5twk
kb2+g4D16Yrkgk0WnXdNtK2Nuk4303lXm9SZM0Nf/vEtxYe1Z43OjdD51gmR
n7PnSKN0vjUgfVM54fwEnW+FRmlMC+hN03nWyo1vzF/OLNF51pVNBh8GWdbo
PEumsMhf3oSGPA5ZbPI3ZYABm0f9hFRp6Bnj6Ynztoyw3nNMzHfHCrr7vbDr
6Q0mGL7Y1mR6cAaxOrAziPmxwOPnlC1Sx36BxFthwjaPWGFeJ69ehf0kOFmj
fPNaEBvMd449nnZpCYjx1A6KBWL50kb7txfy1oG1nqfko2fs8HXtnVf7krDz
vPPwu5AwDrj5zx/35DECHLHzVuN6zQl33GRYz7AkwNmmCE7mJC5YeeWM2C3L
dfA34mHu7mxuaKr0Z8KPbQXUWlJvl6TzQKR33yyYZQHgvI3niaVqCJYP4LzN
rXZR10iHuaxh5NKEntW/9TXvTMrZf/fffK8PtAZnZXcBisq3bmXJPrB4cdi0
4mY/4IuqddyiWgTy2T9e5Lw/DBpea9Sanf5K53PVs96Dh+w66LzsrqSo6e5j
K2jy3IGzp4ppYDIjoQtZryP981wlhr0EWD63+9cLLD+N1gi3ZRxigFw7dqeN
1q2hnrLwlhoqI9zO/XZdLn4BZWtdX3nLzAqrN6yOnn44DIIq3km7cbLB8LPh
n2b15oDlNxMBG34i7LsVMlRiuwrE2JRnU7jYof4HlmP1Owkw/VOETiQ/B6wM
M5r3Gsbmfc3FLFmIE+6Zd1cLQ9j+I9zgztrCBVPUZ5xCP9MAzu8+8Xgzv19n
KLt30SX//q5/42Utun/pXsW/8TriWp9uqkQDZ6ujtZ9WriFz/2/b+mMJ8O4+
tZPuoTTkD9bVT8QxQOv1v9+TEteR0ddaNNzIBgXs6vcGry6DWI77YxY/iPCw
3C6BRyE0wOHz7BPvD3Y4Kv4iJOsHVg+OGTNG/+aA+uyWGzs6sXxAKjd+jO1f
fxo2Nd2NECPAiN1UpwPT6wiK65rUbGGABW9al4ex+c8+sTekRIoRquY+UtgQ
uYpimf6ujGmxw7A6+V0W9gSoN5HWK3WOA45/C0zmws6HQe6Xn7MMOSFcaGFP
DSfQeV8Nm6GwtgRTmbhTpWji0P+Rb0nKNqY8IMA2hro7el409PBwdsaN+wxw
C9e1gx8W1pHqDUbHU+nsMITMk135mQAFLb6dFSnggEF8fHc/DxHo/G9bZ/Lx
nE7mstpj9pJgnQbitjmwWGSuo9rP6ZwB6wRY8UJI4nwsDaUcG6L1sjLCs/nX
josexcb7Mf9inSw7fFtzVNBChwDvtYiHXt3HAZmte88V/8X6NWVrv7mMAKfd
PiyRsHjUFS3A9HuCHXaE/1CS6yLAH7eGs8TnOWBc/jnPTVjd9FngpqWQOgF2
9Tdk/pWloUK/vymEwwyQmvabVmRDQ2Ic+6QnXDmguGZLUsgkAXq/9c9QXvg3
HjgvHKsMsXheygxxPkgMbUWLIbOglGVH8NqLNqB1tqFKaWYE7PcTOkzY0wfq
M1mcjgw0g5Txx48TLQfB4iDt0dSedDpPFNndJ9Z+v5nOE8mHFJrqXP/xw6NJ
29PYD47Q+aHzvu8GQ7N/6PwwTzo54+jeCTo/jFP4nMmhNE3nhYGug0qlikt0
XlizEKbtMrZK54VLPmNH/5ymofll/TzBcwywv3XcWPIkDSVaLk86XmOEIUVG
vl/OriBnjqX6JXMmaPK+/M+l5zNIJ/va0ZP3WaDzsWGo5NACql76nqB6ssJ7
DOl/PDdh9bXfIKPLMzZ4Of/GitlOrM6Vb7xm/IQIGRtcw5+GroPcE8Ih/A/Z
4YspZ52fMdh+9Yjw+PiSAxZY5TlSsPlNH3CiPfDnhFSltI39NwnQJm2kIC6K
C8ZpSIY89FoHhI0BNRdTuaG64/kqeYkVUFD81E09kQeyPTsRZiq7AHCeWTrR
Wtd2DIuv/8sz3wwf0a6XYi4bvbmHmXjt3367bB3H3eD2b74f3lwuM3HpAgm+
UXppr/uAFPM3+RntfqBj8KrznEQJuKgZVONlNgw6D5RcO2xQS+efnFcyN3zi
7qDzyLmxbH/WXStoud2m53kaDbw7V+b7+9w6mj5sccO3FVu/5TKOFdh5Kcr0
mPV5FwM0mj5ov0pdQ0sSmr/7yIyQoJV8ar5vAc37o0OVqyxQo9AnZKJpCOR2
hxjPM7LBsmczlI+sc0DiOTHFg50I476Y6cxDbN53AZc+ZnZoHU3da7OZABdz
DhTJsHPA4raAKO5BLF9427CvmpsT2mzKZ/z0hQAt3EwadgpxQe8qx9nonzSA
81GLXicRxw6GMtnbK2df7Pg3Xo38FYabSv+N18nldZVYCRqolK78xJWxhhhd
dtST3hDgs6NLJ3e+oiEO2p/un+EMsCK8VmC96H9+r3A9N/+VDdbund4g/W0Z
8Mk+sY2sJkKGvt5v7Z40YOQltSu6ih3WbinZH1+H5X/P8n5//sEBTQr2OIX3
EGCwuhpcZvrXn1+XbCsOCWPvG73tfqZ/HfUT37EuCTHA9c3jyXuCaEiebdue
42KMMI2me4qtZhXxScx7SmiwQy0PYU19LB5HUE7qFuhwwCOXvj//n/3//f1o
4E8dTqjOwPtEKJpA56mqm7Kn99EYy55bGrgD8r/7f8b9yKvDgwB36AYEONym
IcJa1KlpVwYY75y3qZGdhnyvxna3JrBDKZ/y+VcFBLjKICV1IJMDChdzu6IR
Ap2vqjsXsqUXMJc1fY3NfvAXmwftSUnv6HVkk8BciOYJUDg3fs4ngYYkWZoi
rNcZIOWQIZnBag01vNvkxijBDlVO1//arUGAdd/LmKZkOGDEQJSXNpZ/eLZ9
2aRbiNUtCV5PnONpSCo8y9FihB36+Z0Z29+O5SsCGo+PjnNAVEfJe9GExXFD
1vR8LA9PunJ/142tNGRif+zcXiUGKD9w2vXILRqyY2oM9bLH1tONjnecWHyh
BG7iaJr+Nx4/Ovb+PmxDgOZvZ6S6r2H7747bfSZLBuiv/VGKCTt/fxwmN9yO
4YBPPW6ZKY0SIM5n44PsQ9YdmMsyHHP5dmDj0lkoLROdTEPmZas93Js44D7z
bpMPFAIsfefikpWCfe7YQ3PxtzRU+mxM+8FvdlhqKTrphvU/+tDch9c7GSDv
7G2/Jh8aYpznco4w5YD3mAblT2L9PQ6bJdyeEmBZpB9jAPa6bLX9/eVSDqjz
+TjXswECxHltSUbA3zYac5nkb0OzS6wMMCnhZ871SBra2+kj1XKIA368Q7k5
htVFypyCFdQaAhwdOnCCCetv4Ltbr08sssNGYf/6Xmy9tvC9Lja/zwGbFJiV
B7B6f2PSusHblX/jhfPcgL6eT2ebmSHObye3hUfuLJoF3lq5qU32bWBc82+8
oiIF6HT6vRPe2gfSWxi1nU+3gOXnt4u7jQbBpauvWKLbUum899qX0Hcsx5vp
vLetZGZ27PQ/vhvl2KA1IjNC57t6Rk8N0NAfOt99G8fgmrZtgs53o0dr519L
TdN57oHmDy4F25foPPf2QZvNb3tX6Tz34MkgFKhFQ3kmNYzt+gxQ8ZF59w89
GsoRbnDyMmOEFqF2i762K2hcSqQq+xITDPpwr549dwbZNwVeuXSHBab8Yfwm
ktUMjLas96S4ssIfp96pSPVNgCHL4u+evmzQ83Rs9i32JVBbem7HLR+snrz8
Ur3fdx2YaI7UtXmxQyJDzff7kQQYUls7UPGcA3JUS112xeaLJ+ZPn9oTTlh+
gFfb1okAJTfwBDi+4YImH/nFpp6sA45fpEbnd9xwLp5F1mHvCpAfvrDIHMsD
vUNyqncfWQA4b64f3DxA3EFDOG8GjN88BDYyly1mhQcMmv87nwSuWRdH3f43
35o5z1v3GHaBh7F/59K/9wFofDiM81A/CN9kKygYWQoyyA/W8k8PA8IRtaMf
mmrofFrhV/p9jp52Oi/eHal+gbxxBdE2M0vsjqcBlsg2v30660hDMRDENBPg
wq5zJ8Kw+NJ5deXs6TYGOJfiyrtpaQ2xtoqc/9vNCF8GlzMSCYtIJGPsYtsi
C3TTrvRR8hgCmrZck3nrrND5YebtE/2zgMm21/kBCxE6tGyR1pFdBbUFX/au
Etjh+9VJf9EN2H7LZJuaYuaAmiG7qJ/7CZD4Zz3qFzsnbD+sWfOpigCr9zZn
9/FxwU9J81xs7TSA8+sPiYbbLtUylDE+ROIh2/+Nly/XU0ZK8b/x0lUL9zoq
SgNRT/8EJ8evobOWp+PlXhOgT9sX+cMBNFR7+YpsSAgDNH1zJe9L1TqatdYV
W69ig74828/tzlkGJ4u5ZAsriDD1tm9W7U0aWPVYML1ezg7LErrFvGuxfLl9
ANbXccDMXeF6w1gdg/M4/Pvb1lSucwkSYGjjA9ddHeto32pDF78AA0woebGP
+JqG/lq+vsshygj5ngRICnatopO5nqoQsEOKWIynLFaXwqGNPvdOcsB2zS1v
j2LxpWJZZKXnJCeUY4j5+hmrK3Defbm8y/HjGGMZvCIiyd377/47CZlnZ24T
4E+dYwLHnGgIXRIMy3dmgIMtr6buC9CQnJmDYEwMOzy/tubWlUuAk/pGQSfe
c0Cl9EKWTOy8xPm3jdXdgdx3zGWtnKoL4kM0YOvMtbPr9ToqDlUIaJvG6qjx
lzLNiTQ0aHGSIrfMANX9Gn5dcl9DROUY5a1i7DD9kNii6xGsfql7qVooyQHP
e4V138HO72/fJiavY987L08u7MXy+R8h95NlB9jhrWm1+Bgsz0m74jSh/4cD
7uB8Hq3cQoCVc016fkoEaGDbW2S7kYbeX3GS1VZkgA/j0zyz3WlIgBD7XdOG
Axad1OZTxM7ryOfkgpjJf+Ox7cfldCMsbh+36S8QNqOhos6/9TVXGKCG5K4P
6XtpqMKf99Djt1h91fDu6SzWP5yfW764Eit5mbmMdq1v+BB2zutmx/nsxvYH
a8k3oV9CHDDypUZpFBZ3eN/EnPqaSIBRTJ9C+8NpyMKv+OHJJmw+K14LRTVg
8yW/3SdjOwPUZX5zwfUJVr9Md6ZcucABL2yVm/uf/obtoy2/fEyAX7/bGDA+
wOoLoSgqezEHvFZ1Qi4Vy79wnj5zW9en/C9zmdtXb6XbjAxQ2L6R4BZNQ22t
Z83eqnBAyg/Z7IvYeeW3DsIZKwkwefsBdvEkGlKO16jnmWWHnjc0bQK6sfjO
bTG96w4HpAXs2a+Bra/62CrCjaV/45UmY8ebGMwBAzbUbNPD8us4rQPBN7G6
841i3BWE3X/2/YW5ZeycDFeaQAPBNDQ76rFhUp8Dzn/s3N+GXQ/n6V2Vi+Lv
vzKXiWS1kZOWsTi8/4wZK5ZPSDRO1Uvv4YAsc75anNj1pYfCNPdjdWF4ws4r
7Vi+Us3KaJ7vjOUL60SvVux6pl5PVDmwebGMPePdi93PzZwTUWHpBCi0vmSi
EkVDl5YOH2q+gsXr10PXT2PjifNwP0tyMj8/S9mvfqmnGhwM8G9K1YJ4BFaP
9+RNcUFsvK49jbqJxdehjZTRhm8EyN91y7YAi8fygtU+bx5h6/WiYskt7PWr
71XefV/7Nz7/ud//8/v+P/8rCI9Y/097Dv0ffrzyuo69pTh/J7S86egsfkHn
7+NXTnq/c8ui8/fZwAH3s0tldP5+bK1odMP2b3T+HrHjx/1bXs0A5++osHyP
I087wPm72PULB8439ACcvx/fw+ohsEoGOH//NmNTYrBxEOD8Pd9D4TffyhDA
+btk5BY7bv0RgPP3qBQN4zQJCsD5e8evgNMnblIAzt8v9Q49u8FIATh/t/h9
XPZt7jDA+fuZBreKDbcHAc7fA43O3v3iQgY4f1c4+CZU07WD7sfrjoe1VkyN
dD9ekuaYuKN5Pt2PN7pfdLn+RSHC+fv890oO/bYGhPP33MXrYcR7nQjn74Rb
Pg11NDLC+XsKzwbW6DNDCOfvj/1DnW27RxDO37uCdUpzlKkI5+/3zJ8mD4dQ
Ec7fS97kyNhQKAjn78oUE02mWyMI5+/G6xZcE6JDCOfvldK6Z+6Z9iOcv/Oz
snT/iepBOH+f49C5WBPSSufv+v79gZo8jXT+LmM0wbSDq4rO38Hw6qTQhzw6
f1f9NS6vJhZF5++Mj7aKnQ1VR///wt/FeCsLOGmWAPfjOTyPFMrRiQc4j88f
OFjHm1EIcL+dqi/z9inSAMB5eoaVQrHhxiGA83RqRrfwVmz94Tw9eW4mz7Fu
BOA8fQk0LjiaUQDutzMrk/I20aMAnK93Nb3xavUYAThfD06aFRnOHQI4X7ff
7uFmyjcAcL7+rvC4/o2/PQDn604uWw6eGv5F5+U6IvLU4JlehPPyAw94ws9V
DSCcl1+TcxpvLx5GOC8frTJU+JxKQTgv3z4UPSP7lIpwXl6RWBIzaUpFOC9/
d7NJv+8YBeG8XPal+Bcjs2FEGwszowjywfJd053T3wbo/kDxTz1+1mbfEO4P
fDgzVU44iRDuD/y0lhk3Zvge4bz90MZlkm7JI/T/K28nVCadaSqWAbg/MLH5
72prdjjA+bugQbPHsF0uwP1/W+sI71ye9QOcn2syUMmlEYMA5+fjM2mBGy8O
A5yfzx08tCD1agTg/NylerLa4QQF4P6/5ssHxnSvUQDO06PMQ3fdrRoBOE+3
23vwxxu1YYDz9IXrgbblXwcAztPDv/V1C3r1AZynkxbKlO4fbKPzcaaNtJS2
ym6E8/Ecca0kX2o/wvl4PM9xuUzeYYTzcRaxI2eeaFMQzsd3/45enLGmIpyP
XzNSI7k+oCKcjxumzweeiqIgnI8LFKwzoYlhZJ60i/HuH154RHXsyW33Qbpf
cdvuI7/Wc34g3K9oEC6bnXS8AuF+xUf2nm3ud7IRztfHbHJ1ps4Gof/G13E/
ozfNyT3p2H2A+xnPWsdet1FMBbg/ccODYrF6/yGA+xPjG+RDullGAO5P/GB+
Pi1iZQTg/sSli480lO0oAPcnvkiOqOOWpwCcxxcMFn5j2TYCcB5/6isLw+4t
QwDn8dcvh8ivneyn8/TNeTSNR0xkhPN0hU0nJRuCBhHO02+SLzwrOzeCcJ5+
f2k2ZMMiBeE8/TEpZ+FLGBXV6BEOu13GzvupmxGVMlSkPvWY/4ApDxzkB4qJ
/SN0v+Rx++03WPWLEO6XJEw/iF97mIhwHn+N/a9X1UEH9P8tjydU6153tZZF
uH9S0zynX+1hMMD5vGC0bu1h6xyA+yPr5JKzOjWw+8f9keQh4d4LgwDn64Pe
Tl0TssMA5+sHJ29ve+U0AnC+zhZxSOayCgXg/khBZv6OhBsUgPP2aywHBSqG
RgDO26XngLq/5zDAeXuI1yt7+e2DAOftiyaOGdbLfQDn7QbK1a5fTdrp/Fzt
+zjT+cQuhPNzwVMXj5m59iOcn78t1ZfszRlCOD/XE7L2dttAQTg/J/TU9YsY
UBHOz28CZ3eVF1SE8/PcDVte2VZSEM7Ph76feOa4bwQF+ickNNZh+0WZnFLy
bZDu5yziGryZtLcB4X7OYfb1qePvviDcz/n3itKbtCcfEc7fdbz1guKdwhDO
391EDNnld8wf+W/8ne73bAz7oaJ1C+B+z9zl8wwu8e8A7t80exVYuWgwBHD/
5oetxcqj3cMA92+6/aBs4RkcAbh/U3KTd7S6FQXg/s3Lqrv3vAMUgPP6h5KP
jl3UGwE4rzcRkJQVsh0COK+vv7dXyDajn87bLbVd5bW9+xDO25+rOmsN7B5E
OG9PDGFXInGOIJy3RzI6iA80URDO2+UFNLnSg6goNn3f+F81bri49a3kyeNU
FEj+aDp5mAcSWo7F5wtR6H5Sh6vTKj3lnxHuJx1VWjBiakxGOK8P3xRkxK/h
if4br8f9pt6fSmMuTZwFuN/UQO5vrYFlNMD9pKUN9QPfMkYA7icNl0owaTCk
AMbjyXqZiitA/MgB14MmFBDe7Oj798AaaFXT1XkSNwJwXi8fk5sVfZeCVL/y
xzj/4YRmu+M0T92hIkPrCP3OJS5o0sqkm+lERTIVvPPmNG7IIoAsBFwodL9q
QXwYTydXJsL9qnV2Rt7rYc/Rf/J/3K+aOGJvvLLbF+B+1OeX7TR28lMAk0Lz
dw9FLL5pVbWq2VPAJhXfN1d2rwKv4TsLWSIUgPN+vftndUxEqGj60rLDBhcu
mEitMb0XTkXjk/XPCd7cMIPMqXebk0r3t7qrIMdiuziE6wMUem+8vG5/Gf3f
9AGEQQvKEyEphPtd/7SoFmpsfQVwvUDTLFOn6c1sgPtZPbKSykTF+gHO+88d
1Pj7/cAgwHl/c/2JT/mkYYDz/g+ibopcV0YAzvszvPvensfiA+5nPRhBEv9m
SwE4/z8x+SD2yewIwPn/GF/lM97wYYDz/+EDaorB2oMA5/81b4Mpr1XIAOf/
AuSHSxrUdjrPH8xx/zvE34Vwns/nZV3y4FA/wnl+qraIeP3DIYTz/F2KS0OO
yyMI5/ljPfz2i5pUhPP8H5lPtwS9oiKc57ebnZBp+E1BdJ4/F71hm+EISrl/
5dZqES9MTZX0iJgdpPtvTcp/csjGNiDcf5t4JpGUd74S4f7bThX9VrbwXITr
AYRTDOK3qUTQ9QAun1wabo1Ko/+mB8D9uXwHiEV1qg4A9+dSrgezqU0mANxv
e7V6XMNcaQjgfluO9r/24OswwP22Ntlef71bRwDut+XjuBeRi+VjuN925JuD
2UUsX8P1AyVuElnBFiMA1w+ce5ER5RU4BHD9wLMt1svNvf10/s/BV+3kfLgP
4fzfNz2znXd5AOH8P6ZEuoFtcBjh/N+l66nej1IKwvm/n6xDikcAFb24+P24
tBwWP0rLc8Ox+JLfXvdIR54HKj1xfywtT6H7fy+r9QTdZixFuP934+tvHhf8
UxGuH3jUu9Fs6rg3+m/6Abo/mNPx1LtuTYD7g+dPXW3sufMW4P5fAectUQdj
RwDu/+UtPCzmhtUrvVbaWGReAUvPTdRFsXpm0Nh6oWnDGlBi1B1d/DgCcP2A
TmdsUZAFBX3Jn5W43M4J82p43mc4U9HRjftTN1C5INNFlycCnlR0pkhStGSC
G0alJRa+fEKh+4tfagr793plIdxfHPglLXZo6SX6Tz0C7jeWk1Sbu17zEOB+
4sUlq7gwVgqwQ3ep5bzLgLoeJxZ+kwIWjGX0R7lXgdQxMx5lCaz//6s/uBdW
JaHMTkV3tLrnGK5ywa4vBtLp2HnVEWM5eMiBGyocl3V6vZlK9ydHNx3gqp6M
R7he4UXARGKDvyX6T70C3a8cn2z4J0sQ+V4QXQ8qXQT7pOpkP2Px8s37YGed
5mVQiNJnflpSwK9XRQpKBZzwrexlPuHLVLT5tpXJixou+PCUokabH5XuZ5bL
sHlm1hCCcD0DT/whk9SxDQD3MyvYu5epPPIAR3p+ihnUL4EEqqS4iA0FZEc6
l6z/WAHHH1t5KGP514udCQztgAvurcq/UvmainLX3rzO0eWGq5WnGgkHqXS/
s/CUhEFo5C2E+529LeHg6+9moH+z60vnY0vggF12mAcWv3ZKMIXvPLMCdo9F
sSdi8S27U17Eb4UT7uq9O1H5kIqsPhEWYzi44e9ZbSE9rP6IiJXOUTy7DFb7
Y/zEsXhi47Dxj4wPF5w9uI+ohuXDuD+6k/b5TcIdA/R/0z8Q/ly9qGewBeF+
6bK7Sj7yMy8Broe4x3rhXsdUFsD90EzvSItiPP0A1zOkbWx4tEVqEOB6Bsaq
x3pObMMA1zO4xrUuvDUeAbiewab7/MfX0hSA+6GDRtofRWP1BK5vOMCkm/Ya
qzdwfcNoInYyJQ0DXN9A3e+/zcl8EOD6BsamvZ/rz5EBrm/wdLozOLOng65X
mBbyvCBR24lwvUIoY4Fh+ZZ+hOsVPpXwXDO2GUK4XqGmWY+NZ2wE4XqFDqgu
t3yYinC9gq++4hHTYCrC9QqW16Xf5PdSEK5X4D4ZniBjMYL2e5R18X/khaUl
S9O/iEN0/3ZV9/7Sna0NCPdvBxyvY/qQXYlw/7Z9Z2hsx/Y8hOsdriu/jdFI
fkvXO5gNVhecblVB/03vgPu7Y422n/y1aANwf7ew15rVW9EEgPu1U6IcflhL
DgHcr22TmHqtpHQY4H7tJ26l29gbRwDu13ZfG7qceoUCcL92oc3xoiktrP2/
+ojxl8U8hg4jANdHfEwnf2+MHwK4PqJ7wP3D/sV+ur5BMKSIoXBzH8L1DV4x
nXd+9g4gXN/Qyj62U6hhGOH6Bh5FNG6RS0G4voFlqVl7/jkVMe/bNFO9gxvu
XmXqumZMRXXnfod6SvJAB94j/qKqFLp//DxnbGR0YinC/eOXjrRK0+zTEK6P
8OVZNhZcfID+mz4C95d7/4R7RM+pAtxfXhhxWK5cIALg/nE+r0Km8vARgPvH
TxtHiLBrU8AP96g+L8YVEFEVtUMbG89nmwczq1jWQF5Rxsa2zyMA10ewSFw/
v9uYgp7sHh5pbuCEHPH8VnM3qahw3Ptcbh8XvLBaf3nQi4oslPfuGR3hhpvc
3RRZgil0f/pgVYgEdSUL4f70mzt6LIp2vEL/+fs47lefjZOvr5Z7AHA/+m2Z
cC4ZBgoQ8zuzMLS+BIT3FhauY/t1+MZdWYX1FTDpb6++D9vPuL5C3/ZzUxWB
imD5j0K3C1yQubt/2ASLB/puHwPbLbmh6VCtpvYOKt3fnsTru7ytMAHhegwJ
y9M+GYU26D/1GHS/e9S2gQHLnUh1+xRnwYdFsOYiYxJ/iAKefB7SffVlGbx4
0B102poCIojpM2kZnJClK8PgMLYegnRyWWURF2x2KjVKeUal++GZozzFHUVD
Ea7XUOss3bZfnQRwP7wxp57s5V+uYPpdorxr8RJYF/Aar8SuH/uhMlwDrYAD
R9VXfbDvN4gMqdRTwdZjoITFxRCsnvg1fFT/GDfcqFCg/AVQ6X75mhr+le0X
3RDulxdjD7fzDL4AQge0okL3LwGb67Ubis9j+bHSOReboyvgV/w32cdY29VA
rGt1mhMikfJBmftU1BOom3iYkRtSp1nObcXWg571Ojqnvgw+P03LOIHFA/lh
4ofYO9h5JRiaTsPiAe6vzxYx8zPeYoz+U99B99uXxnzUPyOHrvc8Zd6cuAzc
bZOX6rH4d29F18wygwvaBkzdfvySSvffX4s66h+0RwBdUtLTKn2zBLy1b9oH
XaeAjqduWqqSXHCg7I1CfiCV7sf3/jjkYFilCwgus4U9AktgpFQu5tMZCpg0
WpKe3b4C3ry+L1x+iQLWAdNVCpkTlhTHULa5Yet9IbkzSmwZ6ChxAkbs/vKb
R/f623DBp2snxgqw9YX795+6xtyvzb+K6P59H0L81i5WkBZxNIxtYBmYxu+t
l8D6h+tB6iOvlsu684FnG1YE5LuXgJHqkbUjWH1Sm5F95NpJLmh4QXXPSCiV
7ueHlVe9t+tdA2MWh434mblgR4m9xyZfKhpuM0zktlgGh8pCJb9j+VLS4s5d
ef5csOJEV+w+7PO4319wXkSNQUgb/d/0IoQG45N/Z3gR7v/vmpkXOforAOD6
kYxtvqOvc7MA7u+34brGLcrSD3D9x2/PpRvF2wYB3d9vQHHSZBgGuP5jsJHJ
09hwBOD6jxdztxR27sLi7//6+6tT7Q4uYvsb14NYEEqLWWkjANeDvJJZsX75
YRjgepD532eW62wGAa4HsZpS3d5gQQa4HmTZx1NB6mwHXd8R+nEpc3tCJ8L1
HUOnJJrqefoRru94dr2UhfnyEML1HUP7kz5WDo4gXN/xkfo60kyVinB9R3pA
tZwMtt9wfceXOpbyDYMUhOs7thlWGG2xG0HLcxOBopm8MG3ha8OwwBD9eQQL
FO28rOkGhD+PQFWC17ytpxLhzyPIEPztrG2Vh3B9iJZg4tOkq5F0fUgf13xe
xb4j6L/pQ/DnFTSwmDb2TlsD/HkFSvPepD258QB//kCjtaZR/9YhgD9/4FLk
3DWnT8MAf/6AXS5htez7CMCfP+D6jfg9yJwC8OcP8GgM1b/XoQBcT1KZHWMe
dWsE4HqSd+xfxwfeDwFcT5LTdpdPn3mArgeRiX1+o4ajD+F6EDmOLwVvmgYQ
rgdZUk2KIFQPI1wPMuwneFc4k4JwPUilUxhDBHa+omj49fU2bvheaY5770Uq
aiFdin31/1R35+FQtv3jx8kgsswgJEskFZVIpVLnmbQQypJkqahUZGlBmzVt
RLIVZU9KWgiJ6mrXRkKyM8yMZZixjp3f9Rzf+zz7/e7neI7nPr7//f7UcZeZ
ua45z/M67tfx/qhJwOcPrtlRYAfuIVTF7/uyiPeaQD2EPAvTg+H0LAJ5Em3+
MfflNcHEf/MkuJcQd9RoS9gKgHoJkUZKx42c4gHqISjuje4ciWkHqIeg5ChW
vdG4A2wO2mKeMjYGfurxzbR07gCNE6piYHICzDx9OEDnbTtAniT+u+CXVosO
oqtj75eI77Ogy9p9z/3cOomTdplaFxrEYMGsWJhPrs8eg8/1ZzDE4aKaGVeW
3urAvQWfeh+fwHU5BOoteMAn6g+KbhCot3CkdmNz3qFAgHoKmQlFUS5T5Hmq
a92UL28UUOIEHFLI76fjiQXxlrxxQFHJO3hPqwMgfzL10knKZ6KDSDu/NUF3
lxjcd+bJQnlyfRRrq3W57ywOT7mbXJBc2In7DI9nhf1QVrpLIK+ylU8i8w7n
GPF3r4J7DVPBckKiiwmZi/VSxhkjII1lHHpxTQeY/hBR/Kx4DHx1OK48Te6P
E+/Vfx3KmgVzjgk+09vVSZgV1jWMFonBDRqTM0fI8xrqOZwnOq1ZH+MI5FkE
9/pmvTSdBXDP4eRtOc8wb/Bd5PrKmc9GAVVm8yUR8t+XK3AXcnk+DqqsyhoS
1neAvN3i90RWiMFAD4VL18jzOROKy6tsFIf33dSdxDd14t7DuujLMv1fThOo
9xBo5jod89gGeG1deXfRklHwfcVeg+02HSBs/VTLtTXj4PpM/k6GbQeoEY9/
9ZwzC1ZafxXZRJ634idOnhWbEoPNtNOvPDw7iUXfOz61rxkDruf0wDZyf4pM
DYqw9xWDd2/euLeV/PxRH6K5e95d4eX2xN/9C+5FdNSufVOjSTSwdE+svzMG
9nQWHbUg96M1h0+tXJklBhtlrg9Hk/sp8i+751+00W6bR6yK17fYeYN8/dVL
Vz442AEMNvdqDamKwTKtWx9SyP0a9SQC5+2Tk9cyBnXVTYSX6ChIDTtcpbSz
AxzZl3ZTVmEcWA35rRl07AD7x89tSm+cBaO77Lf1niLPT/ZRrdryY2D2xy+K
leT+Jn/9oMxWFzF4oKbleRH5/lB/omqlEXXmzYME7k/MDD9MDxx+rZbeRdGs
HwPd3ycqp8n9F3kZFbXxnm3DMuDgWeacN1WjYD79SlMOed7QdNWcp2wkBgs/
lYXtJfdP1KOYtzTVR/+GEzCfV7D6+/QsOOOOzGLfkE7ijQF4mGw/BsSC5rZO
kq9vZl7STK8rYrBLtf7oG/Lv417Fpwt+NbU7iL97Gtyv+NJnoSWkTnwbDjEL
vjYGpKPeLVpLft+ebHhLr0gVg5eDPtIDojoJ1Ld4eXKFUKmcLjHjJZ3jOoe8
3u0av2F455++RXGvq20jBFvmH+61Eh4DssNzLC3I19ckaPP7paMYdBZuW3uN
/Pxw7+LczZrQwHkE8jnbDwfJmdnJAnnDooWM96PglUXKj1NHyfNSy9y26HVi
sFvi1kP5WPL+osi8eG8yBt4eu6u8jrz/vmtGfmMGiMFN+7553yPPf6iH4fkx
3Stg1S4C9zBM3jcWBi4hUA8jSlfktpTl4Oum6FdVsxaPgdEXLQELyH/PWv6k
xU8PMXir2vx7Ovl6//QwQk5PrlIByNfknlKrLcsWAE9zqWJ3mKMgip/weUPe
vy4D+o73TcnX273PYi/5esS8XRPPHRsDkuJRZpHk52G0/tHmsUgx6HvZ/lks
+X7+qedBv+9//lQGWvj86+eBDX88TyRs3ByHPY+GyMsNl9p+4r72Sy3X9cEX
mnFf+965B4XpV9twX1vTUtnKSZaJ+9raDfdsXhMM3NN4QOFnfelvxT2NgYZu
9dasPz2NnWp2X2Xrf+Oexs0Dg73Lp8twT0N319vMsK/5uKehGSNgAeyfYc9z
yiD54cayH9jzGBk2+6RpNWLPcyVFaW7rGSb2PHL5psmfHvRgz6Nld+rITskB
7HlqsnW7drN42PNQerfFL3MYw55n8JO8efHJCex5PLIUHvlKT2LPM3i+KJcr
MIF7GuvWmBwwGBvFPY3FTlHspXrDuKfBTT+7pCtrEPc0Ih+fknC+2Y/72sRN
pyd13F7c187emGf1lMfFfe2dYamAGOfgnsZyyVQ5Xi0H9zQ2PLZ2ub+ci3sa
UukTuj55XNzT6A/8uvLVGBf3NNx1JfjOFHFxTyPm6oM9ziEcgDyPKl35zez1
3QB5HuusiFe+mzsA8jyxQ1nCKUOtAHke/xdp49oaNQB5nrFoi8SQA3ng/xfP
c7/LAv7SfI/72nqD49ZHj9fivvalURdGXh+dQH0NN9eTpfA6g0B9jZzybSOL
FjIJ1NdQbu6RCuRj4L7G5RlB5cYX6biv0XUhYryXU4/7FyoH7We/EBrCPueK
8uviWe9GsM/heGetgTfGAepfTCUHJ/DNmASyZb5zOb0UqHH00aXJwgmAehi0
xZLBhXLjuIdRanz/9XTyCPY9GkYCItmtQ7iHccdU7aJQ1ABAvsd55ZT16KM+
gHyPnd6LdYYHewHyPdKsmNn2dlzcw2CYLr4o+YuDexgJ8wIthCY4uIehtqV4
zv2TXIB8j6nGE/eQNi54bF4aYRlFhV/rN1tL9HIBty1w6qM0DbpmKz6xMeIC
1/Bb76diabCK6lb15XIPQB4Ivnn5rcqnCyAPlGxreGd5BRMgD7TV8fsdkdPN
uL9RF3jruIRjGfjfeiD9p3EiS0qf4V64b0V6b3DdL9wLVxxbOs+op4VAPY67
e9kSXEUGgXoctJja3nfLmATqcWw2G5IudmXgHoc/f6yg9OZW3ONwWJIwrlDb
iHsZrrN2dUuID2LfI2c9d9O8+mHse5RLebVOfOMA9TJOm5UsePd5Auwptu7I
fkSB+bEXvL36JwDqZ5zev6lmImYc9zM8mh7Vpu4cxT4onqosJR/Kw/0Mb9kR
82mFQdzPSJuVb3dWqR8gHxTW2DEUndELkA8aeSX4pj+ZC5APynJrXWPWysH9
DGvt5lqZDg7uZ3i1q2klW3AB8kHW2w0rjcu44N7zgl9bT1Kh/zJ5vsXk+mXz
9NW0bD8VJlQ5MpSvcMGW7h/7bvjQ4KHyZHF3SQ5Ankhhy+0nLS5sgDxR2JqA
wxny7QB5otsKkfweLnTc64C3W4ctSivBP/VEulRhMf1v33AfXX2dJBc+aCCY
j4MqpiyrwWnxejGl8lYC9T12MaYiuXQGgfoemdNb7YP4mQTqe8w/sl73VnAb
7nMYjvIMr9waBajPMf+Ua6q7+ATYEbliNXsBBRJxGnuDFSZBVUuCubaeILSL
CMmuPjIBUL+jTFf5rFrEGO5zAK/bRzKoAwB5os8HTh5IMO4DyBPZHBRISdHq
BcgTvS2uCz47nwuQJ9JZMrStuIIDkCe64fOJGSfDBWsV1Cx3HJaEXiUepxbE
ckGZkOLrKD0qZNUIB3/p54ICZttWxxwqrJ645adfzyX3O6PJUytp8CgR8WwG
hwOuL3NaeCyfBrM8M14ndneD6itXL0usk4KmXhYj026dAHmlwCTv5CPHGQB5
Jev4prFwdj3uh4THnllzPvID+KdeKbAq5m41+byHvNIV+Rfa0uxK3Hu3bArf
dMqhhUA9kXcyuy39frcRqCciPVNU86kGk0A9kYWeKvcmbjJwT8TSQ7jUOKkV
90SEdGZvWvaxCfc+fgV3UGIjBrA/Ss/Zc8zCeRj7o+AgxzO3n44B1Ps4+3b5
pazUCTCm895c7BoFzrzi6KogNAlQ/+Phg9/i+8rGcf+jVZb+7Oy9UeyXwo3D
Y7lNPNz/sP0qM0fNeRD3P0bOlV7U2NMPkF9SVDq2OPZLL0B+6cwJ7rj4Fy5A
fqliG+eRWw8H9z/idn3SWtnCwf0PRYHxinbIBcgvxc3zi2l+ywVqx7TOvDtA
hTK0qsOR41wQKusQCOhUWOS0yWlHOhfk3WY/qnOhwYbIAE9tU/L++Ms7FS9e
lqTxiw2Qd9qwc+jJ6tx2gLyT0+F7Qgd1WnFvJKJ2edShGdUAeScX7W4fSspd
8E+907LXG1dGXS/BfXul578mVefUEwWvk+2zrH+ByWf2G28daiVQn6SA3y7Y
5yWDQH0S8EK0ZFiOSaA+ya3FG450vm/DfZFvt+NmRmmPAtQX+bCoWoG/Yhws
CtEbyRKgwCpfC7kY8rzpvVskP0JKEAb4FGekRU8A1B95GumWubtqDPdFkjoz
WXt2DgDknSwC9Ld5n+0DyDudBhUnW7b0AuSdEt/6xw0YcAHyTj5zei4lkt9v
5J3eD0X1fxXmgmH3dNsDmyUhfPF9bVQIF7BGayNeqVOh8PMdneNsLtBNsGX/
TqXCrjN3m8TbueClX6tfojoNst4UXbkwlwsmGs9752fQIF+7/6Zcgx4w3lmW
K6gpBWW8PllWDHYC5KkCbn7pVl3ABMhTOdxKvlZV2Ij7JycTtxz8feUL+G+e
ak9TvTu/bSXgOxnaZX6KTsxWykx7tK4eZDrZKarZMQhFM8NN7Wl0kDUbPKkm
9+Poo5zWF2+ZYJtSYLaWPoMImJPY5Fg0A9521T1kuX0cNLitOqtJCMBnW+q2
szomQKERK8jsBwUK3vl2PqtmAvuqOrlkq/ILvQD5qtGdrTv0z3EB8lX5O+pV
DOo4APmqAf2kxZ59HCDfsmu5tCAVauYvLwqv5QJNAUPd0mAqbH9lxtpHnv/V
TFQCODNo0Em+JjrtCBfUGOTRtl2iQUGtexLTpT3g7/5KJvmAsZXFb1Aespp6
VKeNqA3xLxdVbQZTY7eW1k4zCOrXYb06og243lGUpTAYRNVv1vtSfQEonFDk
5rRpAvjc0fXR2kaBG94+FHQn9xdd1yUdP3YJwsvHvem1+hPYZzkc7rP2leoF
yGd5pdgofxPnAuSzEpRvU9aT58EC6b09h42ocOX1rvx3w+R+oeN5t/UNFXrW
xsUe+U5+PjkZ50230GD5hRkxj4s54D95rV7nmZ/EtsRgr1XFWOxq0VWB5xN4
8uw7bKktBOq7vPLqEU7JaSNQ3+VV4wPRGBUmgfouLO8vSZHZDNx3kaqMYMz/
0or7LgVXq1/U6Dfj/kpQR4bPzB0D2F/pRTkuyVcfxv5qpmHWd96lMYD6K5aJ
051hYRNgu/sYv8E5CqTdcAiIFZ8EqMeS8PmVeUbnOO6xBHwo/JRePor9lnHF
r5KLIsO4x8JWsxG1ujSIeyznB1arDPj2A+S38i6uE/Bs6AXIb134ITC4vZkL
kN8ad17ovGSQg3ssXB5Fr7mBg3ssK87d78nX5wLktzjWNUrbisnz2Cfm12l7
KixxC3vkRq7Xd40fvqmsoUKDI++WOT8hz+cnR62n99JgrlDprNojHIC8V1hX
glS7SDdA3suH4hKTMtEOkPcqv1svYhvTivsvb6aLy7xkfwPkvSrvLVjX/P4x
+Kfeq8N/z/xdzh/xPIYFDqUf122rI5I/LZsX+KsK3LG98rRqSSuBejFRuqHC
1fcYBOrF7Li7qPv8PCaBejFGDz2kf7S24d7Lz7FSvV2jIwD1XrxUnpRvyx0H
s6fyakL7BeDIB9tMxqxJ8CkKHnnNLwgnrvIrzsicAKgH0y32gN+FN4Z7Lwaq
sRv7vQYA8l7ntqfrtEb3AeS9rrn0HTPd1QuQ96rzDd2+cDsXIO/lbxBTF1RJ
fr/+8l7CC522f+Tngmo5hr27niSckabyUf08F5wY0B+uUKTCiiTB1/3k+uw1
KLV+dgIVSldW2bLI9bv6qc5rHUUa1DDgegYu54Jn+aGKdYk0qHblkkCDcw+I
SDi+LUhVCoov+Zr/cFUXQJ7st732er/zTIA8matrccWyhCbcozkBriscH/4G
/psnM2S56v6uqQD6e4K0+XTphOLy7gl+og68UOv7Hm7AIPwTZzG37aMDt9/v
6j5rM4mGpuyipGAmaFjGnZxjySDy6AP061kz4MeXac99NcbBF2aBnehjATg5
95t2Xu0EmBmotNLvNQWO/j7yzow1gX2ZfUoS2zWmFyBfVrnaqn1WOBcgX6YQ
yr7CbCTXo798GbQdpcV2c8C2Z0d1LMYk4U2axwCtiguOOE5cED1HhZZ+TXLR
I1xg4OdBBI9R4c9uRuPQaS64LvOu8Jg/DdZEftpgxu0Bf/dnE/f6xRdXVINZ
MZuK2vnbiJab7zX33W0CKmXgRGUfgzih8LZ63fk2IHnV91HyAIMQSVlfMr1I
ABpTHn6QXzwBnGWf2cxaTYFxfc8kbOZOggsZB25PGwlCiwP7DM5aTGCf5vtQ
r+uLci9APq0wu3tQS54LkE/7bkkcyyXvJ0PxV7v8DKhQcW6V+YUhLjgdtpin
8oIKH1U+19Yl368HY/Bly3oa9ADf9nqT6/vfvdoSG5+crI+1oKT+SgocbyPg
hqRFYjUtINzxvuErLSaRXvt87tcwAchcarNQumACZPHCbjfcocCQns2yYpMT
AHm1mzkFm0+3c0BylvUR73JxOP/oHNOBNg5g0I4vvOhGhSaVF89qkOuRV5sY
fNhJhQeeq9SujeMC5Nm4q+MWJxbEgN5XZs3CDxvBtMm88oXlDEKv2EpherAV
XDT8ZJkqziQMRPPkvslQoLUC61GP3CT2bMveGAUXa5Pn0b88m3s930JH8nxk
x3dO4/4SKly/ft3tBC65voKk+IQHVPjsasfCQDoXFE2cTr3IooOQ7R/UB8n3
y+3LjzcpF4ClpvS6XbwJcFjkSZlSCwXOOXz3cPgX8ue/PJuqwtu67b85oPv+
5ZbroVT40cYwNnSACyqOr/EpSGwG1+W8rgiJMYnHZ5ZFnxZgAMGjH/YXVDCI
q2q5sdv3UKBUmhjrG/n6kX+TVM5cZkXhAn7DFSs+RopDm4og713kv6+pMB1i
aUqF1t8kPINHyfNZdZ5lxmfyeh9Vkvj9ngv+k4+bNzekYaldCPZxaRfL5j46
XIHniazJdI96UdFMoF7QHco9KiuxjUC9IFvdsLH1c5kE6gWFpd/KtC5g4F6Q
dgrjh1JTK+4FqSr+0JA60Yx7PiJC5e462gPYuwk5BFCTBIexd1Mw3f6m4PgY
QD2fG5Hy8bUBE2BQNK6+8gQF2jIeixZRJwHq+4yP7TrRxRvHfR9720NlwcxR
7OXk9m2dU6M8jPs+NhFrRKJuDeK+zz5xB5e4y/0Aebk6wjZGitULkJdb510i
UdtF7o9/ebmEHekb6oc5uO+zWj2ScKjn4L5P8HsH/Sw9LkBeTupRpirrORcE
DLw7qWxLhTfnXbNbQN7vy9sqWhKrqLC5LLxILJ8LtuwLvE+zp8EIW9kLb304
APk6+GXY+en8boB8HWVVr+4G1Q6AfB39YqKTzsdW3BPqjHS7UJv0GyBfF/us
/vd7Rg74p76uv0zOonHrBzw/JW/BMrfIxloixsRnBju2CpxM/RAfKdlKoP7Q
sZPjdia3GQTqD82zqr0hoc4kUH/I3/fr1bK+NtwP2jKz8uzPxhGA+kH5GTcA
J3UciK0b+jzWKQB39T6/oSU8CTyWN2y0GaXAp1vEvy95OgFQX2jZgWG5hcLj
uB9E7+wTcQ8aAMjXrU+c9K9J6QPI1x24LCxY4NALkK+LaU9qT7HkAuTrhpMP
aK+o4gDk6/Kmrz9smOKAj8dCHPu1JKGI7UxOuy8X6HsdedgoT4W+eirMEia5
H6j2MlfEUSG7aIsClcMFziZ7msblaNDFIVouci0XRKTSvLrjaZCzMkbvrHcP
+N1vKA2UpGDUAhNJnk0XQH5POXIXEZbJBMjvrf7VXRMm0oz7Rl0s3uW9WqXg
v/m9Va65MobxFWCDeZZUrySdSHkhoZkdWAf8TxhT+ZYyiMebe/PPrKeDfN+E
AxfJ/TdozjUN2gEm4G9/ER2zl0H82Jzcdj9tBrxvk1MVLT0O3qgNm5zNEIDR
RsLjJ35OgKdKLyRmF1Bg+u/Gm9e7J7Dnm3KIjOq50wuQ50sTW3fbgVy/kecT
OVu5hb+FA5Dn+22s6m7cxQFV2Z/jXfolYf7XtEurf3LB5dDaJYt9qTBfLfzw
cXI9+yIb12zKo8L4hRqO2YHk94/PWCzgLA3OUKcWB0/3gL///7NezbW90VHV
oGWBVuP2zlbioCprt4hLExASgGlKXQwi7V1G5jG7NvAyYM+Gz2MMQp3S+Vle
VQBWqX8EnnMngK3VwJZzyyiQaF8lo07uv0s2TZ+6aSAIJ+12n7ZwnMAekPbY
6r76gl6APKCL4g/9fCUuQB7wbaWmtDq5/84M7Ra5ok+FV7f77V85yAU3C4WS
N+RT4SLtCu/S31ww7qfYmLWGBgv0VnJa6Rzwdx/4tPlWk/XlWhBWd7c9tbON
OM4KHjUoaAHd1llKpxcziQTZkVlrL5DnI/M7FbOzJ4BlzELvUzEUmOT+weQj
/yRAPvC7Q3OSLfl552rsP5f+WRyuTd0bLNzKAQLAvDz9MBUWZcfEuJPr0eR5
vf3eTCpU/9D3hHmHC5Af9EwWVLsukAxObfUSyz3WCPbtW5p/7RODOHRAn61d
2Qqu58mtFZJmErpbB4XXiVHgLSBQNDp7EvvB4uVn9+uvIp+H//KD819u0T5K
7r/z/LLqchdR4Yq7iayaHi6Qdj9n+CKDXA+bj/McGVzAvut4ouADHWg36Y2l
LWUSrGW8q0Ul5HkpZ3dYNXcCUDNN7uf/psDfFLdXJuT9ifzgJF++1qMaDphV
ffDq40tU6HGPXiZCnn9sxu3T9+9rBqWF5qGaQkyiWVX64AN6G5BxDJsRXc8g
Avf1XyzeSYG77vRqWs2ZxN5Q/E7I7v6Z5PlpTmCz8xVxuK9FuWF1NQf0xi1b
47iNCmcw4xtyyfPiXErU+PsPVLh7bNucNZ+54O8esXKV6e2kEy1gb3z4qYPz
mUTaj72L7l6gkM9fwi9ERSexR1xK3UrN7eWAjfEz1ej7qNDw4Nwb18nrU/KM
P/zG9VZQ+UGLz1uRSSi/PdWhMC4Av4sue6xF7oeyIYEJYXrk+bb0Zf0Y+fla
lKyM4SVS4TKleN/ITi4wG9KQkQ+ig+Srx00jyO9/xX0f14QCAag1nnn4In0C
fAXtE6f7xGCo1kbHUXI/M16uUs/2p8JXPh+8w8nnfQeJ1Mm81iYwmx1XSBtl
EMdqT7jcBhQYJmNbK09+Xw5+nqOf5EueTzaHpx8i19PzkeGpJyAVTkQ9Sc/l
cQE17sXu+tEWkNDQdi2QvJ4fGdH+Lp5UmPJ0rl/RGBf7RZP1F1/vzA0BW0pP
LrRXokDpsIcuXuT12KBh1iljIw6Hmt2I0+T7C7WOKbee2Qokea80vpHfh176
s+0zpMXhzcmei3Lk9Sk9l7X6eAQVOvIikul9XGDeIWss1tAMHu/f2+pOYxJR
zOMZ9U7k84Sxd+1v8n4NdWVdWhgvDj3WHJwbS94/BxN/lG/dSYU2m2o/LCdf
33/0jeozZjkePIV94/n3U/xfF1Tg+UYG0n41mx82E6iPJaxzd+xXdBuB+lgP
xkuutMgzCdTHcjEcrJYpZuA+VsmS+2l+Ha24j2WnnuFyOaIZ96sst0QoGqoM
YK94wWXDNz4eD3vFfN719HGXMYD6VUOFq7t+n5kAn2sPfE72oECzw0/eL5Ai
99u/elapa2OUvCfHcc9K706gA4M7ir2jQrZqWvDiYdyzGsjvnChKHcQ9q+nw
PB3f6/0AeUf1d46S/V29AHnHjUYyB4p7uQB5x5c3pyM/jXJwz+p+Sl5HRh0H
96yuGa4Ruq/LBcg7OmwbadQu4AKJUJ3PS22o0G/RpdND5PXhPWH1BldQoUFZ
YMJX8ryl92tThcIeGrS+DOsT/DgA+cglb/iveC7vBshHamSKeh9e0QGQj8yu
axL0aWzF/awH3OSxe62/AfKRtS4zA+6pPwP/1Eea+nhue/jiPZ7ntFVxwik7
s5aIEEs4Oc+nClCWfi/O52slUG9r6VwH+12xDAL1thRML73MWkA+L/zV25oz
ulxeZ7QN97L8F0d+4f0YAaiXJfduYWpq/Di4vGf221ymAFz+fMOOu5RJYDj9
YJnaEAXWaPH5puRNANTTckt40OUtOY57WX3b3wzlXx0AyEf6pxyKP5DZB5CP
vGwq8tV3fy9APvLh9P02bxsuQD6y0jqIe5v8/iMfaZm8bInnJAcY3LRuylso
CY2yLtt89uaCO8sCBdtkqdCoOVT3AbneKxfuXbsphgqnVjxMkiGfxxbJuXNa
ZtNg+sacc+cBF5yX+xU/dJMGT17n/Xjo3wMmkh6OKM2Vgs/nF9f2u3QB5C9l
k6Yc2C+ZAPnL2R528SzYjHterHnCMv4fSsF/85fLl1Rf9D1TARj14nceTbUQ
zlPJMMipDuSm5M6YuYBBfIp3Vo5aQgfCgqJz9Mj1tKrgnIOJFRPsnDPunHuQ
QTQMnzqYnzQD5o0xIyii42DdRrlNuqkC8NLs0/6LSidASPel8ZYcCgzanKZ7
jdzPkMdcNPDexCC1FyCPuTsrZkj5Nhcgj/lTJ0pblTwvII8Z9blw9ZJODkhY
PGJ2nCMJD29QmfX+BxfIqm4L0vemwiGzab4K8jwV2faAqzNIhbyvN2Q8QrjA
1kds1ZXTNLjNLckwSJgDurodnb6cqAaSxosbPzW0Ehouvh5NW5rA6Zw1j2az
GESRrDz1onEbuEDr/Ko7xSB0Cl4bL1ASgPTJDW5nZCZA1XFpsEKTAv211dbQ
FSYBn1Sp0wF9QRhiLHFQ+cAE9pzLpXrP7F3UC5DnDF2RZBU5jwuQ5zykK9rX
Ra7vbtsoB8NXUWFI4GP1C+Tzs8YO7wGzZ1RY8GjpyJVaLnhnsrzn+moadJqi
B060c8DffecJdc2hxUdqQeyrt84pLW1E6Nohp10ZLeC6FOua+iImMXulPKXf
XwAmWs9g9NybABoHhpxgJAWWMEWOTghMAuQ780a+f6xnc8BLBjOk6IM4zGzR
V5lLfv5Rv16qPztEhSpxhn4XyP35g/E2L7s2KtTiZ6aqpZD381/+046Rr9ND
SwOrrvHPv2zWCOrPTonceMsg/J9nWW171wpau06dC5/NJB4dkuEbEKZAD6+g
Bb9kJrH/vHPYfWHEGi5A/pNSt32LP/n5XFj3Tq9Qgwqv/DjyqaebC9IEuuI+
p1PhqpnticXk8wll9Edd2TM6OKMDt5kuYxJOZrLBJ94LwGNBQhePked3hrd8
bFAlBT6R73AU+jUBkP+UahtjedSS99OxysZXIVQofcBg6AV5fpKHPS9Wkt+j
dM6haKoAkxjxvvj9bXkbsH/1SLy2mUGM+0n5nzSlwFyjCz96yP0aedGhRYf8
ds/ighUX7+XrhIjD4u4KsYJfHGC1a0u08xby+07e0hvI81NWAt/Oynfkei4r
P2/3V3J9+Jsn7Q59LfDcqQWIbjVhXlNlEj5JS2Z7BVDgp7ELNQ2zJrEn3Tkj
IudIPweUa/v69DpSYazPnOEg8vq0CJ8aeuDfCgYtnJ9cVibPz80xLRU88vOw
0vWUlZgEFdx7XnbLxWF+p9rcNeT5vcXxbofgHSr8GZ8z9IZ8/ncxjj+/3ItO
ngtajYrJ77t5SZyzZS65n35klGc1ToBLD8Urt/aIQb524bDOBg6o+RSuPX6e
CiNnlq+dTb4/ZStdmdD3TSDiisq5oCEG0T4ctddqHfl8u2yWxWby/KSiByXc
T4rD5M8PfIXJ9bPZPGPcdwN5Hu6g/FYmz0+LurTeDHS0gJ8r66SfLGES1udm
VHq7U2EAk1/tX/sf8qehNr5R7dLXwVt2tIr0HAqcW7dC85X8JBi9cZJosxCH
bfNlRF3I+yftvtAa92E6iN5lVc/RZBLZZnWqPyXEoUKy+dxs8vzkIDXnWuA1
KmSFXLQv7ifPb0vv76O/bAaishtff5ZgEhKUqMRoR/L7zr/Ho1l2EmypFnPk
xYhD4Uoo1febA0rs2zXNzKnQpFz8eyO5/vzdpyquSK9qBy1A+LnvpzNK5PnN
wVpF0o4KV5+e99mUvF7Up7af6hxagaey/U1rNSYRqfir3JAjAItPPrOPE5kE
20oGFEcWikOm1WXtX+T1iuvzM3MypwMzwpBbQF6fkQHXmjlnqLCH2DlPmPz9
jXqV5u91KTDYcAffdvLzjp0VXiTqJg7Ph2rEu5B/3zaKekO9pAV88ng/lkV+
HqfuN5+LOUqF5c91EszJ1/N8UZXkBSoFCp0tbOWXmwSeR9+4BRmTzwO2Skv2
kp9nxU62SNIvOrD1lWDUkddHbcHCMg8h8nnwK6jlkZ8HZWNFuMAuCswPfKWV
SF6P8BrZ5t0m5P2/gPFOmXx9uTMSSn86UaG+M+twDPn70tOse52nBWBWW+I+
dfJ8Zi9v9+GlvjjcY9sgVEL+Pr3UvIfTN+ig9cgWqiH5fvuKLD3aNlGg4Mjo
i3Jy/X3gMOD045w4DJ4UqPtO3k8jG7dy34nSQcGbPd91yPVglfkCzd3HqVCP
YXbah7x/kD9V83d090zwBl8fW2mnq1KgjlfhCWHy3wsu0pDeYicOtR9K6MSS
v/8En9oRgzmtwD97lsZVcj1d6RPuvUJOHC5nxwhGkN9vuRKLR/NdKDB8cZhB
Prme8Tc/9zG0pEL7Pe5G58jf9089LHo9//OnMrAr4F8/HwL/l4e9rekZtwF5
2MUv5xxwE67Afbv8qWNL0wRbcN/uhjcl4NBqBu7bZaovO7vDi4X7dvToY9Q1
qu24b7dKTMlm4VUW7tvZue0VrOhh4L6dm9rz1cnprbhv135AxGq+UAvu2znX
3Zw4eaAW9+0MH3Rk5CyuwB42+5haf++v99jD7lyVfnrdpWA8X25/oZRy57zP
eL5cx64j1s4OdXi+3IiEgpEuh4Hny6ncDXsRdrAbz5fb99FDVnSgD8+X615/
Z9mxd4N4vpxUbalr5HUeni938vCt16afebhv940e1GgRP4T7dpN7RD/LTPTj
vt3eTdtuXTTh4r5dw5Kmlwr57bhvx7rq+e57byPu233NenxAZvc33Lc7XeCk
cHT5gz8eVqavbsPyCuxh+7MjpmJONP2ZL3c03GLLIwb2sCUf05yjT3ZgD2t8
/OiH2Ldd2MO2Vy/IoFxhYw/bsY/CyLnYhT3sOp/nt4a82rGHnRy4rR+Q+MfD
3p0/q6Fx8Df2sD/2iVir7P3/x8O6xBz/fnv7e9y3W5syXqNQVIv7dpqRuxqX
OrfieXONN/Kb94Uy8by5FYKbGebjLDxvbny0CTweYgHkYfvGjX+PVjMB8rD5
mndnJNe34V4eS/XeHZ4zHXvYoR1mbKX5vXgeXIxw9ufdvgN4Hlz+bGGVZ3VD
BPKwWRpba6IaeXg+nM7eS34f7XkE8rCXyiWfg+ODBPKwcYvHXsUd6sN9OvYF
SeeB8BrsV796yO4oVG7FfrUkX1y7uZiF/eqARe3r+V86sV+1DF68pGg/G/tV
m/lpWWXr2div6uT05g9v6MR+dfDzh0tvjP741bAV1Tc3Sv/xq4/MAldbrv/f
+1Vqi+LDg9xnuGe3f8YCb3mJatyzM216scd7Mx3Pk3PKMQvU5f6ZJ/d4IuyE
9XsWnic3Ny0zY6NMO0B+dZ+8BPfyahZAfvX6N7H1bUcZuI83niybSBdqxX41
6utLE2EHDp73pnP0yoKw4n48781uYTo7bs8Qgfyqw+FrB9jveHj+m8qFb4Wx
d3gE8qsvvGKLH0sOEcivJi/d/U1hdT/u0S0ac2k56P4Le9NsFzEB14IW7E05
sWcXyBBM7E3Twlcee7G4E3vT9FMbVXtU2Nibai7Yvf6cFxt7U0rVpjniA53Y
my4+HEDIuLKwN82Y2/zzh9ofb2pCWGy3e/LPvanCmo16ppPfcL/uQnqe1EPx
RoC8qYxcU7C4YxtA3rRuhLrcWJSF58ntOhG4WVChHc+To6usvPTzEwugeXK8
qyV5z44wAfKnBpWSuwWpfXg+HNO14d5P9UEC+dPCoU+HgCGPQP50Q6fLZfvm
P/Pj3B/MOXmXwiPQ/LhVCc0LQ4gBAnnRhy5bm02Pt2EvWvhCxrk3rR17Uc+D
XIXNFl3Yi9pu0U68eIGNvWjuDbXgTG4X9qIdTQMTkkc7sBelzD6W8YDvjxfl
MXe9Xpf+x4uq9xYaBl/4515026bVCQkb7wLkRR8blkyvlq3CfbtlKgdCZ2S1
4Plzx5/Bw0NxDDx/bsdY1JcdiSw8f26qZt1ZIaV2gLzo/leCrcbOLIC8qJ+T
ymZdcr9CvbywCuNdi21asReVcXz/K8+pB8+He3z3feEn2348H87YXkD4AXWI
QF705Ebb9B3ZPDwvrv3h+hCFfB6BvGiS+dfo5buHCORFz19X/QZv9+M+3emM
WTJOFZXYdzI9Vml/G2zGvvPunJrNn/SZ2HcmjjlXnfrZgX3n2ITo+L7BLuw7
z+vDwqQANvad10sDnC7DLuw7pYRHH5v3sbDvfJzZZ9PfRse+M85hdvXx+l/Y
dxJLNyp+TvznvlO/vWnkTmEJ7tkxzl0U+OZRD5DvNOuuE//Q1gqQ73Sl+0hn
ljLx/Dl98cTdBeLteP7cx0M5TnotLIDmzzFMiH3nUpkAec+fzFUFUQm9eJ6c
e3C91ciPAQJ5z7mKN7aYS/EI5D25A7pvouk8PG+ObxXfrW5dHoHmzVWom57N
VRgkkM/0L14u+flrK/aZt2gztmjptmOfedOVtliD2oV9Jjv2DUH3ZmOfKfzj
apG2Ahv7zKxRPW2jmg7sMykx5e5R9xjYZ0Z/HvCZcv7jMwfmdx9KOPnPfaaJ
Uvpq1Ro6QD4zYMOeqK2QCZDPZJ15FRjXygLIZwqdDpiaLdwOPropP1Sp7ARG
MR/zREVY2GfeNCo7wZc4RCCfmRT6/NSeSh5hURPsF/5LEJp6r5H86s8jkK/0
CuPy7TjfiX3lD65wg7IRG/vKgai57RF2bLA5e4/IoLAUlBlJT12V2Plv3hL5
ylvlg34nIAsgXzmkWPb45Lx2sIUYU48uagep6wLaHz1gYV8Zz8nREz7GI5Cv
XLJ+aVZ3NY+YeNbkK2IlBPeVvWpy+TlEIC/p9Njli+e1Luwl37tUbIq7ygZq
AZtr1T7SYMHsmBSt113/2U9O3rcqdY0ByE9mPbQSe0arxL27ddcK3PptW/B8
vGAD01MKRxh4Pt7ybx8ycy+z8Hw8mw2bvuaptAPkJz8qD5at9mEB5Cf1wo0/
1JYycD8vMLBqTNmvFftJ6eakcyfbuvH8unYfFVkjjX48v25722Jhna5BAvlJ
IzPT3GdJPDzPrj5l9OZegkcgP/n4VrJQ7+khAvlJA3v3arnv/bhXl3Ou7+3y
GZXYOyYZrODv12vG3jHAZ+nKhwMM7B355OmRq9I7sHd0iRIwotd3Ye/45Anj
/v0QNvaOB6+uqVxwsAt7R9YJlQ5p3T/ekbUvoy5r4x/vWBT3xvZcVzX2joKF
9qOar/+5dxRaM12oefkj7tst0XtE17lZB5B3PHpQZ5ng3VaAvGPWybNNddlM
PB9P6IzyCmPBdjwfr+mow6QXmwXQfLz6tz5TGS+ZAPnHpKY9NfP29eJ5d4e/
napRujtAIP84z/zbsO3wEIH84wqCftquhYfn4W2QPPZVaxuPQPPwsuR93SK3
DBLIK1puvvjF07sVe8WoCPnvecMs7BXfxH+z3N/Tib1i+CNRr/XH2Ngrqngl
PKtfwsZe8Xvxsa2PxDqxV6xKqlqWwmNgr5h5Xfu2xPo/XjH+/rzB9Y3/3CuK
mbzKoV+nA+QVy1Y+t02WZwLkFZV2zVz/tZJcn/7yiml3bSdWSrSD7swLw8UR
nUCmUmj163ks7BUNewS8p88NEcgrUjZqZHR84xENDqunGj8KQqu0jp7dETwC
ecOSoZWriq06sTdMs5V5zNNlY2/YoFXRvNeFXM8cJpI8p2kQBJ1ctIx8Pvm7
P0Te0MSVqqmpwQLIG/J7XpQcIs8nkXovJnzPtYOvMit25ReysDc0/WhE79zN
I5A39Lp+9l5XPY+4pB89smeTEIStIDiNPUQgP/i28bVAgmcX9oONOXUmQZfJ
12djFbj1FQ3u2/wg6/Pvrn/zhMgP0hu/8S/LIe+HL4tdj1CYwOOETOKKOe3Y
D879vuOBcyGP6DuUMu1/TxDamSm8D3rAI5APrDBvd5OcxQaT7xuFCjxoUKp3
0pl5mo294KnpI8bs/BiAfGBkxyGHRPL5Rk1lVfbGSRa4aGcVOkleT+QF3R5U
XxbV4hHqihX8++YLwicvynM3kPt1mkn0epGlNJhydua8DD/yeUHIsyzyEQ32
y8R5fBFkYx9Y8jjJ7g2XBUwGtWf94mOB/uGqSdYUC/tAny8qYutrecRMufIN
drNosNJRY3iPFRuoHrrnOj+CBq33NA+ImLEB8oCLLdIlrqi2A+QBDSqzK2PI
/a512ZBeiosgPLWbb69zOY9Y629jUGhOg1S1Lw/ekfvHf/J+gRmXf58NCAHI
+xkOcyjbwitwD0/feu3tKO0WPB/w2m7HiPEdDDwfsIIZabT2PAvPB3Q78PrS
HXI/RN7vRMtY3g9y3UHeT7rlC6W7kYH7esvEc6rdI1ux97Nl5Z6SvtuN5/eV
OzvFvRLrx/P7Zvm5ffStHiSQ92v5ItxkeZOH5/n9un3mHN8HHoG8X9l1lXHT
q0ME8n4zW6LYOox+3LNrLWhP9oyvwD7P3yI0SLqqCfu8XTY7K1LLGdjnBZrK
nLgR1oF9nt5apaHBsi7s88I895tfu8TGPk805prEMu8u7PM6x3lKby3asc8r
6DE/+9Pzj8+bw5w22Oj1x+fVp7ravW755z7PcvVS60zXD7h/p7r3UZ7N4jqA
fN75h5vaHS6QX9q/fN7N3h2RlbeZeD7g25Y2VX++djwfsGLBwoYnveR68Nd8
QMX4FDH2F/L89pfXGy6/J6SzsRfP+7v0yL3pd/gAgbze4S++8Ss7hwjk9SbP
Uk8sIp8fkdeTodqbr7TkEWge4IR7gYmEwyCBfF2OkWQRMGnFvu5sy8DzoVoW
9nUd21a89qrvxL7Of3XStefkeoh8nYf58rXXVrKxr2s6/n6drEYn9nXivg0D
PUp/fN2yk/zR6febsK9L3Rp66ozEP/d14metPPtc6QD5usR7v6pVyXUM+bpd
0hFjH76xAPJ1fF1qOXtp7YBvS4FS6LFOwOdXdhsuYWFfJwMcXg67DhHI11ns
0w+5XcIjVJNvbBB6LQini073pcTyCOTjrioc62nf0Il93DVf/ejsxWzs4w7K
Nrmlu5HrS37p0aXjNOiZKHl7f1Pnv3k55OPen/2u4C7PAsjHJSh3v9ZSbAd6
nreOdNm3g8NFPfPpBAv7uKuGl5S2mPEI5OP8Ohd+rGrkEd/P9ugHrxOCI9/L
u01Ghgjk3RpWlVsm7+/C3i1G5sSSNxfZIM+wrnLPCxrcqWPxmdvW9W/+DXm3
WMtXO30yWWA2RaS6jsEAvW70zRvntmPvdkdzxC40l0esuj8GMpMEYWYZN/30
Ex6BPJt83sf3fdNdoObJQbvPrjQocF6Edvo8G/u2o12mhCN/MkCe7WBc+FI7
8nqV7Jktn9fIAgc/L+9eXccCyLe947ipNiqT7/eFez1PQRC6Wtfy3yb3C21G
kWPlIhr0W7H20fQZ8vPvH1JNf0CDqYq1AyuobOzZDh3XN97XyQKcZZK+W+lM
YChHF5kn0I49281PlX3nyeeH2KfDe9WFaXD8tW3G8Hby+W7n0tcrQ2nQN+CO
moA1GyC/ZjZgWahJ7hfIr2WuNlYN9OYRod8jJfT3CsKhSI/pGvL5qUTO3yHY
hAblRH7c6yT3i7/7tH1nSh4RGQxwu9I7LFiZXL/+8ml7ds5/mpvBI94uefJm
OEIQNsUm6x8u4hHXL5/g73GmwSM56y/tCWZjn1Z1rXb0qUg7UB66G6EhKggX
7L/ZsYj8fIzlRJMOz6PBt/pmcduPs7FHW82tUzpUzwL6d0vNl6QxAWVngu5n
0XawvzXInvmJAg91frhf8YNHPGnbklw4RYVu/CELvq0j759F6w7ZBdNgdn3n
sUf72WDjiQbBWUltYH9P9Gznf81rEP789rCZIOT5asNEcv+lm5TekTWkweX5
Y8Wfr7DBtwiTqaH5TNA+3ry0SZY8H9TYPEs/QYPHJD8Hsk6xsUe7wLZa4JQb
AijSnsZlsm2gbb/Xh0C5dnDef9WiEi1BeLPKv96fPB/PznFTAjo0aCrfV/sz
kA1eu0kPXeygQMWD5bnx5HnK/6fxu60LGODwudvh18jrtfbGHvuZnoIw8u00
68p3HvGYsUyRY0mDMz/MkFIlr89/8mZvhJ5SBq+eAsibvTRsHLpsUoF7eurz
NgVlK7TgeYybwAEfYhMDz2Pssb+y1op8vkPe7JrPhMEguZ8jbxagOnTrQggL
IG8mPbQshsFk4D5fiFC2vmhCK/ZmEor7Pa1DuvG8RNezvCOd0314XmJ3rdeq
898HCeTNMsxyqvyieXh+4snULVY6n3gE8mZv1TTO2N0YIpA3e0bnM9Xs7cc9
vMsFtxYwD1ZgH7YzxlTnSHoT9mFlMWt2Tr1mYB9W2PP1QmJAB/Zh8472PrP6
3IV9WFnBk5Zd5PkV+TAt7frgQL8u7MO0nhl7uTq1Yx8mY6R28vmlPz5sfEnE
o7zcPz5MS6r+2bDKP/dhrEt56Sfq3+N+3pUVb7mMvlqAfJjoD9HN1SdaAfJh
d5eY7lgYzcTzGO+/eCc7QJ5rkQ+TEH29cPUAC6B5jOJ1dzadKWcC5MUavkZU
aOn24vmKJ+iOosnBAwTyYoG/LuvxtQ4RyIu9k18s59rEw/MXjQr3PBMmnxfQ
/MXzX9/dfuoySCDfJarY2nFJrxX7rktDlQ5DX1nYd+2kXm/fVdGJfdcofbKk
5AAb+6686hDd4jVs7LvUBucwb+p2Yt9lWCyd6qLzx3cxGw540JqasO9KjfNX
1L33z31X4FhJh5EtHSDfddaD61U4ygDId0W6+y1NKGEB5LtydTU5NVLtQDT2
x/Lj9p1gi1JGDluHhX2Xoaumq6XzEIF8l+V4y88dH8nP683rvQpFgrCgaap5
QTyPQD7rgssBSQe9TuyzzlBsAuvV2dhnBdQs6FT0IJ8/nFbtEBulQd3d6bEl
HZ0A+ay2FWOzjtBYAPmseVfXrlQn98dLYleS5pu2A5pt8Pf971nYZzHsYxR+
bOURyGeZ7BKIvkteX85thT1xq4WgWGdDdNDUEIG81VDs7flTtl3YW8k/nieZ
G8IGaYWJk87PafDBigXXazu7/s1fIW/1THY5zyuNBY6kjsyS+cUABpIho0vI
8wXyVnEXrhqfIffrPV8W7i9OEITiGexV1uR+jjzV7LfX964e6wKfFiwK+XmE
BtcdyGyV92djXxUS3btuBzUNIE815B10KEaS/L4OU8x7SlngdeQdznpyH0e+
aviOdEOqPI9IubLu8ztZQZiw+EJlOrk/8Z6WuRdq0GD5pa63075sIHHkxfbs
TBq01TySDWazsaeSOkTrEmaxAPw+lR34kwnmFGcdny/Yjj2V+PKTScNVPMLB
b5aniCB53jE+M0thGxt0fept33CFBjMPHntis5sNkJ/SdCz2rSPXX+SnqEvj
lpZ78Yi9t/eOC9gJwjMSN1d6/uIREYwbxw5vo0GWZOr6H+T+8HcflSv7vG0k
lgHudKn3qpP7H/JRJrsdPEEaj2CYNbTMChOEOaePxPa85BHnJ1dq8fbT4KkZ
c0MjLrCxjxLQyzl+Vbgd9L8/ca5fUBCOvX83v4zc36gMpcemyjQo6FrmX0ne
j8hDXZF1Zd/9zQKhG1+FHIpigoE5rk8ui5Hnx5wd23LeUWCYn61YVymP8Hlq
9yRxggp7/UfTPFeT90/SVMSBQHL9zRj/GE1+/+0+mXvMD28DQRrT4s/J88fj
6tjHK4wF4dSPBrvyOh5xX46ePQ5o0GhXtYEeuX8rL1mrpy3DBJH9xypp8uT5
yVyhMduLBts4a88N+LCxhzoersTzkL4OFA/Tc1iCbeDZN6NxBXK/32lGmR29
UBD2Hg5bzSbfX4NfwFJ1bRrUuTxy0ySADaLW0ukWDAqMP15T5kv+/rgFLzX3
yzDAaiMr+1hy/5bYv3Bblasg3MLlHw8q4xGncgyXVO6kQZNSpl4QeX3+7p1s
LOJ2uPkwQJj1DwFd8nrbdr70n+lIfn9cnDsyyfNwgpPErtBJCuQZLO0oJZ+f
Qj1WAGu3NqCw1W1qrhL535/SufINCsKoy+rzuht4hF7OzNKP62hwxdKwnifk
8+g7lzkpqYMM0PpU3XuTQjswlfwULMdoBSmuv74JS7eDka5kjqaKIHl+H95+
hrzfj8hlmnE0yeeppY1n6OfYwKDmfHFnPQVuizl5rPM3j/hUmjIe2d8G3kyq
XDtIvl++7a6miaY0SLwY82WS70+s4bfvpXwGEJhemltKvj4Tjd+pdhKCcIRt
W+JK/vuLlF0T+x+3gQ9TQxt55P2o4P/imo4RDb4z/fZmA/n3ke+Jjd1c1Zzg
De4/ObJuXFsQDu/USxkl3785Y7e43QoaXLRhfdNa8nzZdWfzzKJuCtRd6V6Q
Rr5/F7/fe7RXMUBZXsMbd/L1dcjNFRPZRYMX/WvWpJH3xz/1Rej3/8+fysD9
N//18yFgYaIUqfu0DaD/fvat+1mqswX/rG/rnKIyzGj45z8e6f/999HP/wfL
6ZW+
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{881, 2738, 2736, 420, 421, 422, 423, 424, 794, 692, 
            609, 543, 494, 463, 814, 712, 629, 563, 513, 831, 729, 646, 580, 
            425, 795, 693, 610, 853, 751, 544, 837, 735, 873, 652, 862, 
            760}}], 
           PolygonBox[CompressedData["
1:eJwV0dtPj3EcB/BH6fTr5PQHCCVcYXNqc7rAiJTDzGzGBSlqMxe4ihtFZ+oO
EeKGWzo73JUrmihUZsumzaho3Xh9L157fz7vz/Pbb8+erJPlRWVxURTNoY9n
sSh6yjVFfHwU3XbcTTIfdM9ZrG+3nyabP7pK5urv2PeQwqDuBVn6DnsxOUzq
qkjQ37XnE+Ojrp3r3CDRvUW/l1Q+6TqoJsntnm4faQzpOqkh2e2+roB0hnVd
1JLi1qrbTwafdd3UUU/M/YG+kEy+6HpYou+0n2E5U7oGUvUP7UXM46tuta7P
fJF19OqW6rrMJeSywz4ia5h232h/Z65gc3gv+7hsotE9zf7IfCD8l/mnnM82
85Cs5Jh5Wo54fo25P3wjeUkekb9luVwfvpH8Ls/KRnlCzsoL8qXfL5Pd9lOy
VB6Wv2SZXCF3ytHwPrJWHpcz8rz86/eb5Hv7FY6aJ+WW8E3MP2QzNz2Xbm8z
HwzvZp6QC9huHpZVjHpurf2t+TIbeKXL1vWEd2Alu+xjso5/7nn2AfNVtnJL
l6F7bD7EQsZ0r8nR99rPsYoZXROZ+ifh/VnEN90bmvkPKelnqg==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{386, 2737, 2734, 498, 548, 614, 697, 799, 439, 470, 
            519, 585, 668, 770, 390, 497, 547, 613, 696, 798, 438, 469, 518, 
            584, 667, 769, 389, 437, 468, 517, 583, 666, 768, 388, 387, 436, 
            467, 516, 582, 665, 767}}], 
           PolygonBox[CompressedData["
1:eJwV0klIVWEYBuBT7VpVzpVBK2cbaKCywGGTKIQEWamJEQRRVtaqYVNtdKMo
NGg2uMvKIWif5ZA5brRNbjI1yyAiAkvz+RcP7/e9/z33nnvu3VpVXXJhdRRF
q3hNx9oo6qRN8ZQnjLDAFi+s5BVJa6LosW6Y7yTrTtFNorNHuiG+sVlXQRcJ
zlrDh5l3coV+svQf9PNsspfTSbz+oS7ffIePHNL91+0w19BHpm5Q12Sepdie
I28yzl77V+d/wnub6+QUBeaN8gdHzWXyjOyQcbLFNVflkv20vCvPy3l5RObJ
i/K3PClvy7NyUh6Uy66vkYvh2ckGeU5Oy0K5Xf7kmPmy7CXD/N51/8xV5kY5
Q5H5gPzFcfMNOcYe85zX15o/kW9PCvfDS2Ltzc5zzbeYICd8J129+TOH7dvk
Jd6Rbh9wvt98nVF262Z1ieYTvCBG9yDcK9nhWfCWNH2/bp/5GiPs0s3oEsL9
85wNuvu6v2TZq+khVd+n+0K8vZR21uvv6RbJtIc/7xtS9L26aeLC8+QZ68Jv
plsBT/lhdQ==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl813McwPHprm21zrWta+umFJuiJB3SpagkqdSGLFZL90nooIQH3SEU
KkeJQheiKLci5dZBocjVRc/3wx/Pvd6f977bvvv+fltm7rAeQ89KSEgY5kM0
y4fPNJYL9HqtyFjyna/S4ozgHefBmsFEOjq30791uL6meZrKvea+WpaPzbdo
TbLNF+hP+iwT6e1chvfja+hi/k/f5CGKUNvuc13IEDrR3u4fXc9Mcmhmd0if
YxLXUZQ69rt1UdwLneM+KEZxSlCSuq77Qhdza9xLfE+a2x/W55lMP0pRz36P
PkIBXeNaLrT/WV/gdvpTmvr2e/XReOZcEddykf0vuoo7GEAZGth/qY/Fa0Y3
LrM7rhuYFV9LC7tfdTVTuMY5kQ/iNY37ihebLfJw3L85hU/NiTQ0f6VLGGiu
RKG5h5bgXfPNWo3u5g56Qm/TjXqDVmUC98Vz13KM5pN4llqLybRwbqlHtFBf
1FytwnjudO6jSYziw3jNtQYD45nFe5e3zDdqGnPiGWt5dpqTONv8tT4e7096
Opdku/lKLjef1E3MjnviYrujuoa7GBTP3K4Ib5vnksw5zt/oE/EM4u+Ejnan
dDP3x/eild1v+hJ3x+9JWRrZf6tPMiKec1zLJfa/68tMJY9yNLb/TpcyMn6X
uJbW9sd0LdPidSCFc+2/12WMoldcS3ma+NwP+hSjuZpLqUBFKlGZKqRSlTTS
yaAa1alBTWqRSRa1qUNTP2OfPs0YetOGupznc/v1GcbGe5W2cQ/2f+g6psdr
Sz3Otz+gyxkX7w062Z3W13mAdvH97f7UV5jBTXS3K8pW8zzqk+18UFcwPp6N
cyl2mK+ls/lffYMHaR/3Z/eXvso9cZ1zMh+ZB8f7yVyMbfFzNZ355gFagTHs
ci7QTBqYc/THhP//F6+M95pWZlz8HcXroqUZyXvO+VqdSZwBe/2d0Q==
           "]], 
          
          LineBox[{146, 69, 104, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 71, 
           50}]}, Annotation[#, "Charting`Private`Tag$649912#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1HWQVXUYBuCzSy/dpYR0KqAgISgmHbZigIOCKJgz9iglXQoISLcBqKA0
SCulQ0t3CCgpKT7f+MfD+33v795l7znnbsl2XVp3TkmS5Bf/dOVGapKM4AHS
s0k3m250jxemS5KR+gfJwGbdHHqQ4myU7iEyskX3I8X0c+3tKcUZXU9S9V/a
G5GJrbqfKK6fZ3+R0pzVzUhLkk9lOmejdY3JzDbdXEro59tfogzndL1Irx9j
b0IWtuvmUVK/wN6BspzX9SaDfqy9KWns0M2nD33J6HycvhlZ+UO3gH5kcjZe
15xs7NQtpD+ZnU3QtSA7u3SLGEAWZxN1LcnBbt1iBjKINOeT9K3IyR7dEm7R
L7R3pBwXdIPJqp9sb00u9uqq6daa36EmS3WldIvML1M+7rl9n+zPRee17ZvM
H1M/Ppf9mBzKEOfZ7FPMD8f/ZT4pc3OPeafsRRvzRbnP66ub18U9ku/KJ+RZ
2UXWinskD8tX5BDZVl6Vb8mfvb+0XBzPhewkH5N/y86yQjyTcn98HjlAPicv
yzfkP95fR262f8JT5vOyQdwT83E5jM+8Lrt9qvmR+GzmUzIPDc27ZG/2e10N
+3rze9zJMl0Z3ZL4DFSM74L9gBzIJed17VvMXbmbz3U5dNPMj5KXA7rllNUv
tb9KJS7rhpJTPz0+P/k4qFvBMGb6ngyXubzmK2ePk59DupWUi2sZ14zKXNF9
QW7913FPKMBh3SrK65fFPaIKV3UjyKP/xv4kBTmiu123wfw+tVmtq6Bbbn6N
qlzTjSSv/tu4DxTiqO4O3UbzB9Rhja6iboX5dW6lkf2gHMR15/XsW83d4rlj
lC6fbob5aQpzr3237MMx5zXtv5k/jN/ffE7Wpan5SDwDtDNfS/3/72Il88p4
juJ6ms/I22hsPiQ7ycHyeXlFvin/9b675DZ7B9k9fh95Ia6FbChbyhNxf+Vw
+YK8Lt+Ov4ven1/OtLeXbeJ5lKdlEe4z75F9eSaeb3nce2qZfzd/RD2a2Y/G
c8avzivbV8XvSDVu6Orrtpt7xLVitK6Ablb8bIpyQreWKvrV8Z2kOglj9AX1
35mf5Sb+1K1jLIWcfR/fR27mpG494yjs7Ie4dhTjlG4D45nARGZ5pifJyUxh
KtMo4r2zvactxTmt20hV/Zq4jtQghQa6HbJnXDume11R3Zy41/HdM/8lS3C/
ea/sKPvFZ5KX4hmU/wEecelo
           "]], 
          
          LineBox[{824, 722, 639, 573, 464, 815, 713, 630, 564, 514, 426, 796,
            694, 611, 545, 495, 465, 427, 428, 429, 430, 431, 432, 433, 434, 
           797, 695, 612, 546, 496, 466, 816, 714, 631, 565, 515, 832, 730, 
           647, 581, 849, 747, 664, 868, 766, 886, 435}]}, 
         Annotation[#, "Charting`Private`Tag$649912#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4FVUYhuGBQ0lKq5R0o3SqtHQq3SglggoGSBxa+hAi3Rgo3SVp0tIo
jYIgKVIqcK8fz/W+37Nm9t4ze81k79CzUY94URQljx9FfWOiKEfCKPoqQRRN
lzXkYJk0OPxvvbu8w8+Xk+R4mRFL8LP1JvIUP0f2k5/Ip1FU7yPjYa4+WWbG
N86pKH/gOiETepn/Db8Bl6x3MF/RR+JlfMzl5BbrNfHIvBtNudPm/iiGJVwl
7ke9MzLjMtcPufivzbXw2LwHS9EfAzAQsRiEwcgdfqtjayPCXm4ZhiBPuH6u
DuJhH7cclfmfzF2QBX9yQ5GXX2qui/jYz61AlXAPzV2RFVe4YcjHLzPXQwwO
cM24M/oAFMdKriq3W++GbLjKdeSu6qPwCoZz+bnlen0kwNvmf8J/goPWm5vP
6gPDPddTo4TeV8bHPH2V46rpe/S3wufqKfG83lv+JxfKGXKifC5cA/5y3hsh
+blytBwj04X/AxXDNclE+ByLzFNkVqzACOcXCJ2fIRvIITIZEuo95F35KeL0
Z/CLc1rIc1xsuBd6GpQMe0nGYL6+2nHV9b16d2TH+2Hfy5m4Zv1N87Xwm1Ep
7G+uILdSb4hEOMS15M7rg1AKa7hXuX3hfiMHrnMjUYhfZW6ExDjMrUUNfn+4
JuTEDW4UCvOrzY2RBEe4dajJHzD3RC7c5EajCL/G/BqewlFuPcbgBWtrudeR
FMe4DRiLcRiPOEzAi45d55gmSIbj3EbU4g+a30Fu3OImoii/3twUyXGC24Ta
4T8xv4s8uM1NQjF+g7kZUuAktxl1+EPm95AXf3OTUZzfaG6OlPiVa8Vd0Aej
NLZwdbnDei/kwx2uE3ddH4vKYb9wJbhNegukCvfRfC/sP/xmvbX5YthvGK2n
RRm9n0yABeFzZBZ86/h68gg3W/aWI2Qq5Nc/kI/kIjlLTpKZwnMZnkXndpY3
+HlyXPidMn14B6FKeDZlYnwRnhPzZzJb2IeY4vyScnPYt7KlHCqTh3dx+J/k
/XAOTjm2jfn3cAzKon94lrBQ32q9vn40PAsogA/Nj8N14a71Luab+nhUDZ/L
leK26K2QGqe5ttwf+jCUwzauAXcs3A8UxD1uKkqHe2hujTQ4w23HNJSxtpVr
g7Q4y+3AdMzATMxCWcdts94W6XCO24nZKGdtO9cO6XGe24WG/PFwjSiE+9wc
lOd3mNsjAy5w7bhL+nCUx3dcI+6E/hEK4wHXlbulx6Ea5nIVuJ16B2QMz4L5
gZyKi9bbmy+HPYMK+J5rzJ3U+6BI+A5zhDn6Q+vd9Nv6BIzTM6C6HiuT4Muw
X8J3hPd0eI875yW5i5slO4b/RqbA4vDuDM+cfCgXyGnhs+WzWIonMsoReA==

           "]], 
          
          LineBox[{1257, 1160, 1085, 967, 1364, 1243, 1146, 1071, 1019, 930, 
           1342, 1221, 1124, 1049, 997, 968, 931, 932, 933, 934, 935, 936, 
           937, 938, 1343, 1222, 1125, 1050, 998, 969, 1365, 1244, 1147, 1072,
            1020, 1387, 1267, 1170, 1095, 1409, 1289, 1192, 1433, 1313, 1459, 
           939}]}, Annotation[#, "Charting`Private`Tag$649912#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8j1UYxvEvMiI7IpG9N4VsUig7I7LXK2REiIwWIUUJhTRFoRTZRJG9
9yqUWQkZEXrff3xe13Xd5zzn93zPc5/zy9OpT9PeSRKJxMikicTi5InENykT
iRz4NEUiURdpcFZ9l1pVrJN7oDiWqC9QewCfyfVwD86p71arhvVyT5TAUvVv
1XLic7k+0uIv+Wkc50fhvHl75Or4We6FkrglP4uL/GQsM+87ORdmyU8gdapE
YqB8m0+HC3xrnOBH4w/P7JVrYIP8HDJ7ZoScEqXk27QHLvHljM3kp/AP8uP4
zPFu/Fd0ufUW0gfxqNoX5hWi78pPxv7xg/gG9I5cgX4qt6Hp5b/Do558Ui5F
p8mt6Bvy/XSU3ISmo1XobNqB/ulv7+Nr4jF5o/nF6BS5N38vP5JPhdLyHdoT
l/mpyG38TflerLDWIpobs401QAZclJ/Bb/yY+Fbm7ZdrYZPcB2WwUv17tTyY
IzdExth/9VVYrJ4XX6o1Qqb47eqr8QPWYC1+xE9Yh/X4GUs8lw9feaZxfK94
L/UNWKqeH3PVmsRvxiX1A2q1sVnui7LYqL5MrQDmyU2RJebLbfE7PxaXzTsY
3xNb5H7RB0jYr15q//DvY5N5y+WCmC83i/43Z7CcQNZYi7bDKb60sen8OD4H
P5pPH+tZ5xCtg8fVt8b5olPlFvT5eE/6styI3k0fobNibVreeBL6nPwEvSKX
px/FuaIfyHnoeLkZzRL9T+fSTnSzv7+CL4SvzS2sNol/Ks4n/yKfBPfJ/9D2
OM2/iQeiT+UMuGKdw9GL2GasPx5CUnN6q13lp2GLeSvlwvhGbo5suKp+JPYA
2+UBeBhbo4fUimCB3ALZcU19W/SQelF8q9Yyzgyuq2+P3lIvhu/UWsW+41/1
o2p1sUN+Ic4ldkQfqhXHQvnp+H24oX4szih2ygNRETujZ9VKYJHcGjlxJc4n
zvDjcdO8X+T62CUPQiUksy991K7x07Er+l8uie/lNsgV+yJ3xFn+Lfxn3q/x
rbFbHoys1npFTh29Id8l9+Wv8zOQV34rejKeiTMWdx0WGyti7L0453Fn8kP4
pHGnxR5Hj+BcnHNjM/i343fyY/imNCOtSufEe9Jb1j8e91/ssbzH/BL0fbll
9JN8H31VbkzT0Mpxd0Zv0crGk9N+sQb9N/qIfiy3ph/K+ejb0ZNx//Hz6J64
N+KuwxJz2iK9saFysrjboi9oZ5znJ8Rd75kTcgPslYegCvbG/aNWBkvldnGG
4g5VP6nWEPvkoaiKfXFXqZXFMrl97Hn0mtwFf/AT4w7Bb3GOsZ9/KXrfO74m
34Nqcoo48/yN6H/+E34mn5+fEOeSZqO16Pz4PXR/3Id8ubhH5OXmF6WT5ea0
g5yBvhTvTu+iFeln8d1pvuhzvmv0afxviTsz9lp+J/qQH8tninfkv4w7Qf33
+IY4wJeMu4YfFueTf51Pi+pySrk/f5P/CAXkiXL2eNa7b6TlscJYR2Q0PkxO
jvxxhmg3/MW/G3cKTslNcJAfjhpI5bkBav/xH+OgtTfJD2Gl3Cn+dpwhuTsu
8JPiLOJ09DMO8SNQE4c8v1ntYaySO6NgnC+cUWuGw/xI1MJh87eoVcBquQsK
RT/jbHw7HOFfRm0cMX9rfAv8IHdF4egBnItvh6P8K3gUR+POU6uENXK3OL+x
vziv1gLH+FdRB8fiHow7AWvl7shkj4bLKWId/nPalv4PU/ZKFg==
           "]], 
          
          LineBox[{1896, 1776, 1685, 1544, 2028, 1879, 1759, 1668, 1606, 1503,
            2000, 1851, 1731, 1640, 1578, 1545, 1504, 1505, 1506, 1507, 1508, 
           1509, 1510, 1511, 2001, 1852, 1732, 1641, 1579, 1546, 2029, 1880, 
           1760, 1669, 1607, 2057, 1909, 1789, 1698, 2086, 1938, 1818, 2115, 
           1967, 2148, 1512}]}, 
         Annotation[#, "Charting`Private`Tag$649912#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HWUlGUAhfGhlAUpYaWVTikF6W6lpVtKQroERBZYQmpFRZFO6fYcSrpB
BSUEREoElJIuAX/vH8+59z5f7MzsN5O1Xc8GPeJFIpHo+JFI58SRSNokkci0
qEikOK7Z6zENRfn1XEMkxlGuC9Lx0+0SuG5vwHQU4zdwjRCFY1xXpOdn2CVx
w96IWtxh+yNkwQzuHW6j3hhJcJzrhgz8TLsUbtqbUJs7YndHVszkinOb9CZI
ihNcU+6MPggFwt/jMnKz9NK4ZbezL+sjsdmuY/+i90CMnhDZ9J7yrvwcs5xX
wt6sN8VQPR5e0bvIG3KaHCfHyxT4zTXN5B/c13KwHCWjMA8F7X7yUbi/nCLj
ZGosRnfXZ5Kz+S9lmfC+5DM5R/7reHt5xf5Wxsqx4TXhB8fqyl/D+8BwPRGy
673kPTkZs51XMpyvN0MydLVvhveBk443t8/qQ1AofE5cZm6OXha37S2oxx0N
90eO8Bq5UtwWvTmS4xTXE6/zc+1yuGNvxVz0whvh8+HL4669DfPQG33QF/3Q
HwMwEB9jELK4dr7rKuCevR3zUZrfyrVACpzmBiMrv8CuiPv2DixAGX4b1xIp
8Ts3BNn4hXYlPLB3oj53zO6NnFjIleW2662QCt3sW3ICzjjewj6nf4LC6G8/
Ds9JcI5nt7/TK2Ow/lw+5DvoV8NzhF12A/u43gcj9JeQK7wWeT98T+QXcpJ8
FYvCfV1XTu7gp8jW8lMZP/xPwnnhexOeLzldTgyvW6YM7z08z65vKc/z38ih
crRMgiL6APkkHAvfHT1NOMc1OcLf56qEZ0l/IR/xHfW/wz2w237fPqH3RW4s
4spzO/U2SI2zXCvuQnjteCsklzN8d/SqeGzvwWJU4HdxbZEG57hhyMUvsavh
ib0XSxCD4RiBkYjFKOR2/lLnVsdTex+WYjTyOLaMr4H/7P1Yhor8bu4DROM8
NwZ5+eV2TTyzD2A5KvF7uHZ4DRe4scjHr7DfxXP7IBqG35nwO4I8WMFV5vbq
7ZEWF7nW3EV9GN7GZ1x+bqX+Hl7Ynex/9DE4ZDeyT4ZnEyP1l5E3PGvyQfhN
wkrnVbH36R3C/fUESKd3l7flDDlJTpSpwvOHP13XJiQ/VcaEvyuThu8vitoD
5dPwGyWnyskyOvy/wu+s69+Uq/ivZK3wvZGRgP6hvCbHhveqJ8OPrmksT4Vn
FLF6YuQLz5p8GO6FVc6rau/XOyI9eth3ZBwuOd7WvqQPRzGM5wpwq/XaiIef
uCbc6fBekB+ruWrcAb0TMuAvbgIK8mvsOoiPn7k1qM4fDO8JGXGZm4hC/Fq7
LhLgMLcWNfhDdmdkwhVuEgrz6+x6SIgj3DrUDJ+N3QWZcZWLQxH+e7s+EoX7
2dfD54lxevLw24n/Afe5H4s=
           "]], 
          
          LineBox[{2523, 2424, 2348, 2228, 2634, 2509, 2410, 2334, 2281, 2192,
            2610, 2485, 2386, 2310, 2257, 2229, 2193, 2194, 2195, 2196, 2197, 
           2198, 2199, 2200, 2611, 2486, 2387, 2311, 2258, 2230, 2635, 2510, 
           2411, 2335, 2282, 2657, 2533, 2434, 2358, 2680, 2556, 2457, 2706, 
           2582, 2730, 2201}]}, 
         Annotation[#, "Charting`Private`Tag$649912#5"]& ], {
         Directive[{
           Opacity[0.2], 
           Hue[0.67, 0.6, 0.6]}], 
         LineBox[{384, 385, 383}], 
         LineBox[{888, 889, 887}], 
         LineBox[{1461, 1462, 1460}], 
         LineBox[{2150, 2151, 2149}], 
         LineBox[{2732, 2733, 2731}]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-6., 6.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.865361029035945*^9}, 3.865445408672529*^9, 
   3.865445465281426*^9, 3.8654456787461615`*^9, 3.8654457684634714`*^9, {
   3.865445884836256*^9, 3.865445921420556*^9}, 3.8654460587696333`*^9, 
   3.865446443250679*^9, {3.865952125553069*^9, 3.8659521516667013`*^9}, 
   3.8659522247202935`*^9, {3.865952279668687*^9, 3.8659522923016386`*^9}, 
   3.865960380517995*^9, 3.8659604237811317`*^9, 3.8659604862431183`*^9, {
   3.865960526854105*^9, 3.8659606215087757`*^9}, {3.8659608307097435`*^9, 
   3.865960868038782*^9}, {3.865960935615129*^9, 3.8659609432706757`*^9}, {
   3.865961026919873*^9, 3.865961042898753*^9}, {3.8659618737415323`*^9, 
   3.8659619220130653`*^9}, 3.8659621773942356`*^9, 3.865962208141383*^9, 
   3.8659653341237497`*^9, {3.865966920464451*^9, 3.865966952803088*^9}, {
   3.8659670377118826`*^9, 3.865967084214981*^9}, {3.8659671567557373`*^9, 
   3.86596716982355*^9}, {3.865967354328431*^9, 3.865967365694789*^9}, {
   3.865967429099472*^9, 3.8659674436738024`*^9}, {3.865967497088687*^9, 
   3.8659675719317055`*^9}, {3.8659677533835645`*^9, 3.8659678198432693`*^9}, 
   3.865967879244236*^9, {3.8659679215246882`*^9, 3.86596797117278*^9}, {
   3.865968013975065*^9, 3.865968049366725*^9}, {3.865968179144141*^9, 
   3.865968295722787*^9}, {3.8659683292590413`*^9, 3.865968337405431*^9}, {
   3.865968399526526*^9, 3.865968431918147*^9}, {3.865968471686404*^9, 
   3.8659685928285875`*^9}, 3.8659686585365334`*^9, {3.8659690928773613`*^9, 
   3.86596912452522*^9}, {3.865969364031477*^9, 3.8659694647951903`*^9}, {
   3.8659695001958475`*^9, 3.865969589464244*^9}, 3.8659696214759865`*^9, {
   3.865969666100687*^9, 3.8659696876527815`*^9}, {3.8659714896133933`*^9, 
   3.8659715124820657`*^9}, {3.865971671047258*^9, 3.865971706849786*^9}, 
   3.865974159481908*^9, 3.8660468621315126`*^9, 3.866572018043004*^9, {
   3.86657320750891*^9, 3.8665732165980134`*^9}, {3.86657330942043*^9, 
   3.8665733505073357`*^9}, 3.8665733817473783`*^9, 3.86657341653929*^9, 
   3.866573451408177*^9, 3.8665736708992233`*^9, 3.8665741122335663`*^9, 
   3.8665741531065397`*^9, 3.8665742791683626`*^9, {3.8665746317060056`*^9, 
   3.8665746395135174`*^9}, 3.8665749401956873`*^9, {3.8665801236386766`*^9, 
   3.866580150905987*^9}},
 CellLabel->
  "Out[2239]=",ExpressionUUID->"da173ed0-7d31-4965-b8bf-a391bcad406d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxk3Hk4lF38OP6xTfZiZixFedBCSEiydE5aaEMpFFoQSXZahCRFtoQkhEqF
VHYSzoSSyi7ZGfuSfTDW+d2f3/W953tdn+/zz3O5hrnvc+77vJfO6zr/WTmf
vsJOIBBS+QmE//m/9OPV14mb7+0nEGbeaHXrlBwrWWcwaIdAbvOk7R+HGFQt
oM7DaVkHpDOGPeb085Du48PUd4YtwKumZPhJSAW6smtJYLdAD8hu2p7XtbMW
nZS7Mi2i1w+OtDtwKe/9g7KbfDyrNIaBi5GW/sRIK9ISlv/EefcfiE9UKJIW
6UJ2y5Ev3phNgdpfDVIHgnqQ8/ch1U8nZwCPjG289wUaCj5P3Lp6nQ7oN97e
PveShqwr79juvjoPGk/IvbbZR0Nf14mfcjjHAGPkLtUj8j1ot5BfzIjHEnC5
sdhqfqUDXZrVUTC4vgKWFH+zR7D9RS8Tv0kshK2BsGeJDuNSNSgnXLO94TQB
mpsbOuhN5SCPIh2jFyfY4Jtdp550hX8G6OebmUfm7FBmZd2JPw5NwF5vX4m9
GQc80xN/VGInDSSk7s5zuMYJN3eeFb3zYRg8mS2553KTC+rOmjxOfTsJBtM9
b1x1I8Jejx+77apnQMWRyFh//3Wwa62l7NWnOcBm2Nb72I8beo0PXqoQZADC
gXy25Ns8cN5LaOfmzUsgSHThZEMgLyycn/jSv3kFuJy3Llu4zwe3esb4sP1d
BbR7ajbgKT+MlCg6JZ7ABOSo522PXgrAK/yf6d/eEeDbDfK3K+MFYdgKm4qV
Oxv86rbl8Pb362Gq9C8zK2N2mCiVLKFzZgOU2NQ4u307ByzxXiJcrdsAd9jf
y+aY54D/HV+3ImMqBDV4CzWtazhhbq1cSGuTEFQI2R/2/CEXDP2+pixlKQy/
sJ9Nd1Ygwij3kWuXOoSh/WaKdsozIvSmbF4vfY4EV4873nApJ8I0Oa6fHj0k
qKBT+Ag9J0IinU386wUyZJjUjC9qE+E75SzfxCEyHBCpUbWlEKGcVbrBqiMF
ijwYj2uUIsL2o5+zz45R4AsJl7XcE0TY8NpLEbiLQD5tp9r4GCJk5JzSlp4R
gQeaX3YM/yNCZqFb3kMnUbjtfNYp5vF18LjykcPec6KwseMc6eXndbDScpe9
g7sY7B5dOcQmzQ0/ZrosMJli0JRNUnX3U27480m767DdJ1Ch3BL3ufImklot
SFhV/wE+Gmon36SnoqCakv6zJk3gSsJV2t3KUkS466o6BQaBuA2zdv7tX3Rj
1lh4yHwU2C/sPXRQugMFcO6Y2x47ATKzRt4uF3ajsUslV+WNpwHFY+n1Bi4a
8t5wU8HEchZcH9I6JhtDQ/Mbvh5+dm0ODHVKHND2p6FIu5/mNZcWQCGPtH9J
ZQ+6HfrbXd5uEQhWOUZ6xHQhffaLtHiXZUBW+hWFxloRoepeirTPKjDVOetz
7nQj4rzwwr7mORNwBWf2FCVWoGjZYkphLfaeZGuIuBf7gmthseVrT4XgiZ7W
CxcUuaDUcXLXipgwvOcmlDzXxQU3SNJPUhOEIelXElfbVSIMquDQ+bqRBAmG
eyVU84kwMunJ9V8JJKi5Vrw+/gsRtoTfn47bQoapyS5yUVeI0CSy9deu12S4
RZz2KO8/Irxa9WGwWp4CTadTmb+x583enOWXlkGBPtXc6JwqETbPi7sc2yUC
+4IuOv1wIsKBnYO5mdkikPzr93MSlQg11xll5n0WgwbL6DfDnBtWad7//M8u
CdDPbo6l3zJDveOdl2/NlQPlsO552cCXSH5icT7jXAPQiJ6njw99RtvOOETe
PzgAAsI8Y2Q9mhG5f/ig2bERMBH6XgYKtqNLfHKnY0LGwUOhLtPSqS4kp7SD
Y/jPFNgz8J6N41cPuuGwK9P/zwzQsubn+X6Xhqh51nt+jtHBiv37dcPY8/MS
laHd7Z8HCk9+F41gz1fyp1vvsR4G4K168MP9fjcqfjT5pWxmCSyd1Nmprd6O
lLsuXi2kr4Axa4GvvVp/0Gnf3eW9JCb4+XP/+bCAKpRy7s6tw08IsO1rlxvz
zit05F/txSc3hKDe9lRbvzVOeE0gSW1sXghGbPizm5nDBWtcb4Mpb2E4/qb2
xF5svQgmzDdGLAvD9So2SzOpRBjY9rdk3osEpxWrUp+WYc8jY33Y3CoJlsp+
5uL3J0Klckc3hh8Z5lVfczRWJEJun08q6jwUaO5XfnYnmQhFJD7aGYdR4H8G
Kcd3yhGhWbK9kJGACBT+8t10zoIIO+yUpxciReAVnU8mPelE6JeNQiNixOBv
NbFCQcANxcq9Do6HFQDjNuuvaPkRsuSP/Ot/6zcQ0NBNisrIRC3sqMfTcQxY
VU4oSW/tRGmr22I/p0yC1h2rhcp7e9CHqNM11+umQZu7k9phdRq6n1eaKjcw
C7pH+yNtsXyhcH2zic3IHOC7fmlC2pqG0gtcmyU6F4B86ZhDom8P+mOwjYt3
YhG0b6lmFoR2oiavGqLnxDLw8qnT2fygBdXlvO4J5VoDnaOuFpsO1aPmoEeB
glrCUDpPS1FtHRGe/uFkEVEsDHn2+EtTsPliH9/wdnofCWYuTultQUSYaHN8
U3IpCR6dmr++5SMROn/V5VICZBhLTXfXMyRC38uHt9p9I0PZ5HarRnEi/EHJ
iLtyggJXnz4ro2wkwonHec+ZvyjwbpALnw4gQrp5T2Nbhxgc5Z/5kX2LG/4I
bdCfs3sMmi9/dQps0ECHBl0q8pq+glJHXmcT1wS0sirqZ2ZeD2rVyx0jHheg
ov3DB05+6wdb54sT25v/IGuLnI6Ir8Ngo+CXR8K+bagmPM3vJNc48GMUaeQ+
6EI/oi3rjjybAl0NT/bnp/egmVi+mdgnM2C/iTj1jgsNbeXe88E6gw7O8h5b
s3lBQ07Ota/N3s4DG49DDotSNDQ5/E28PYEBLOJMFp0nu9GN6r1yzTlLoEHR
UH1nfTv6MWxw7H7mCnil9X7rNplm5BW+PPmvbg1ElYfoDbf/Qgr0Njl+NwL0
GdeSyD3xAeXGj31osxWC1IKq3zGDnPCxU//F3gEhGJco+/fpCy6oKKGtwe0o
DEsMRJk5WD6pW+eSxBgThtXEmR1VydjzYXjZ8l8jQRFSMe9XLB/Ry/qN90+R
oPY1G69vYUQY117wrcOZDKUpwsHJalj8Msk0u8Ygw/22YXn22PsuBRTMU30o
MPsMh22ZLBFu9BTqPb1CgS3SN0OSzxDh3wdnH2+6LwIt9XryErHryQYtLK0G
iEH/5MW4EGVuuHZYrXQqOQe8vHMgxMXQH5VybtWkmv4EJ+fOW/zH+wFtv/Po
9sf+UVC756dv35sOJHLv3XeXzZMgtUZOj5uvB51YCoz/9WQafCIvnvqxmYYI
fXGj4OUsuK+aJKyAzf+T0snq1bQ5MDMg/4bgQUOJ6zc/n0tcAF0Cd5IjUnrQ
O8fb2nHpi+D9uoMtWpQuFF4q4hH0aRn8XKe1xNRqRVdLI8tMv66C2gf/gU7D
BrQ8UpPNJS8MtQp2BLrMcsEst91nUzOE4cdamfJhTyL8Zhbsek6eBE0mI0U0
sHgv5j9RnveBBD2clYNy8rDx77C+Y7OLDO88X64fPkeEo7cf3zqeS4atLwLC
TkkSYexkBvW5FgV6/2eanySK5e9s1bAzxRSoJ3m1TWQfET7bLaar/0sMFjsR
wyyuccNnzwzsJsPeAaeJD4IkWQcUXDmz5xF5GqyL9/4oPdKDFnWMna6Lz4LN
yh/CzobSkLl1ZInyzjnAazYY3BFGQw/Rjc3vpBeAkkLQd8VhrN6szD/SEorV
Lwfv2k2fJ2L1gQ+3HB8Jxj/7ISeeSYT8JWoUWggJsulusezF1nPo3Gu7+vVk
+FNp5zUjrK4rS5fZQo4kQ1Xw2IJ7OxFqvP7Iz76RAhcvuvCkYO8L/+Iuj7UE
ChTtq/7Lo0SEu+HXHyNeX4ByxvK9e9efIEFFSTbB9TPAz8n9t/9xGiIG9dqS
5OjAPIR+uPoVDf0QP9n1c8c8mBzt5EgwpKEZyQzrW7+F4aj7gYcm2PsK7j1r
e3SUBHd61KHur9h866W6BdeS4KOXkXoNKURYdF768YIBGVok9Qe9OUyEwkeX
6/2byfDr8vrLKv8z31rvPXZbUuCWQy955LDnceph6hXHCTFIKT4htfSQG35X
drUjXr0LJnp+lZgyxZCHVZHnmQoqYM7teC9o/hz1c707pNRRBxzTXPyn7PMR
Z+5bcZWH/cBLcC7LMPAPCo4Vk1P0GQY9franfNTaUEDdiKhc2T+wcarZ5I5B
FxLTZ6jP35wC4e96HKnPe1Dmp0XhFOcZ4A/FrjfY0ZBZlqR9ZigdrJ3s//cp
iYauxm/lOhw4D0L2791yXxH7/JbzHpk7DDCr2HPsulAPOjPZ3n0xeglk11z9
KS7RgchOR75cDV8BZOmgcx5RzSg85hLR7dMaSJYYfJtLqEYuX4P9na0IsFjB
tXurYRa65r54hnlBCAKz7KEHbZxQekvgnGWnEBRnPx0gF8kFLVxfqJGvCMMP
vAHuaVh8yC5ReKDQLww3n6OGn00gQvTwt+azyyTo3TzqV4nFF4N5evi5YRK8
t5g+OheFxaMhi0kDOzIUSgvlfa9BhNTyTAfOKTLsSThfUou9LylGY00NnhT4
Z+83zy/SROh18cqxplkKtLm+2/iFERE2ka9eULwjAhPuRmg+jSfCeTdStpq3
GDR5EKetJ8cN3dY9ueOWngVuxMzOS9F80KSf09gFvSogcCblVNtCOjIomPh2
LHkUnDqgsinRpgNVlw1ZnmifAMmX3n2VHO5GCR+k2e+4TQMNe81QVWEaKl0M
4jt+dxbs5f/uyhZHQxV2LY+OBc8Bk54OPbc7NBSr5bFEu7sA5Hbn77qb34M2
rEqb9QYtgrSRnmZk0oUceorkhSOWgb+/TEBZdCvKPRisqpO0CiRhbKpuQwMK
j3PVv/efMHw2u9P26AgX7KmMPJWbIgwtvHu3+zgT4VtBPdMwaSx/rtpXtBQS
4Z8NMBa+IcH80/ZiHdjPvubu+Xe3k6H6Q8MDCRex+PxQ7VXJezIsKv6ha7sF
qzcsPjSqqlJg0Sul4JciROhTMUO8m0uBvYNhw/LqWL0jobboWyYGr2ub6SlY
c0Pfjdy9M8mvge827yOFy1aozSssQWNuCrSZC30za+tBhWcOPL65MANUnCfu
X3lIQ+H8d2778M2BO1kbfXIjachv7PfdKI4FcDW8quryQg9KlBA72B8gDNk+
F3F+NCZChcF9ExYcJCj+V2z9uwwi/Hn84YjDfRLcl/aI6oit38Edua/+rSPD
s2XvzMVvY+sz/4f+w0dkqEi0OSgoj41vw6ctCUIUqCGLtE5h78sT3snxHU8p
sJLXTyZ0J/b+sG1+6BDwGYSGrdrpHA5HF3oK7Eomp0HrgXe7FQ5gzy+xLnDz
OjqQzLOs88Diy1LZnjhRnnkA7X4J5Z2jIWl3gUsBFcKw5+Xx0sZA7Hp7z1BL
DmD1oLn9aApWb9P+LB6hVJKg80RjeWYaEZLDVX4K65HhSGaXrOkxItQ/m7xM
rybDT69DK+zEiLAn9X3grzMU6PS8STJ0ExFKu1ZIpAyIQcGNu+1a7nLDGDj/
cTbsGQjq2D14pug4UvOXrA/LmQEKbpc7b97C4t2FE9Miv+lg7nj29E3s/Zs8
lfO5YlYYEo6prK5i8e2QvVzkPTcSdM1zeGaOrTebWuGEa7fI8PV4s3irMhFO
jXw6XEegQLtufzVVbL5CAv4SnJ/lgZlbMvm+aw+Q7u+MKrXyWXA4ONXqNRZf
LlDWCWdVzYHZK+t8Bx1oqP9VdchWFRJsldm9YFhChOazCZPy+Vh+GHnRuCWb
CHMdRw1ai8lw4/kNx29g48v0z/jAPEiB95Lm8r5j488kP/035vUetMmXGH40
cUOa26+cvKw1C95wTF55+oSGdhSlsfUfmwNZux7bXgyioWteVOk5YRK8tllA
XT+HCA2V+qBJNAmaPz67OI1dPzTRd+5lHBnWR/feh1j9YaT+cdFOmgLfvoMD
0lj/pO9KP8x9nA7oj59KOGPP98KvNvrZUyTYp3b7TQ1W33dom6Ru6CZD786b
u1Ww9bChNv3ysysUaKk8Uzm2GVsv8aEf1RfE4Kvywz9Ew7nh11sfU3ZcdQb0
FKhmTVksDZW6WCOjTQWGtWnrfLqeoZZHE9ueJ9SBTNH3HO0teSh14sGDFNt+
sGy0mev0xT8oUf244fL5YfBxp1XlmfVt6NL0o76Y5H/AVvp9u5tKF6K+PDx6
8uoUiDyoMy70BIsfX1xep12YAZY1uet0sHp9mku4stmbDrr1+htjk2nINqtu
z5eb80Ba2rklSJWG+OGhg3rXGEBTSN2dLtmDdAlKX1ICloDw2M3dU7ADFSmX
uZv7rIDovHfwx89mFLsx6klu4hqQlucxtn5SjYRTe5VenidAu2fy1RnJ2ejI
Rb9UIXMhWOA9VHqjiRM63DSjbmoVgjoTf8euhHJB+qYalY2XheGfK562kdj7
9UqM79aRHmE4SPsewhlHhJsN5lIsLEkwyQtGv8Pex5X1Pgp2/SRooPvp7lAM
EY457uLktibDV27pbVWaRKi2pOxZP0aG2fOwg4w9P9vWn0LDrhS415SaUI71
x+lnHq9FT1JgEGlr+RsDIjS2mD6sflME5un3eIs8J8ILV18K1N0Ug5vljVxS
tnJDhavgvOqnTLAhaErsFfJC3IB0SAn9AKIc4s4H6WnI6ux//8R8R8HWjQZK
UQc7UGpfoFzR5wkg97PUP7uuGx1a55LXYDUNDCQvN+bwYf0qFyHByGkWPN+j
IS0XS0OWxb+HXLzmwK7Scwr/fGno6aktO81cFoDs+XWGaqgHVVQsXCHeWgTm
wzP9jTe60PlpfqKp3zJIvhsQeJvais4Tif92ha+C/Qcic54JN6K/M7okICkM
H9hv4trazwVvuZUbFiULw+VvmTdUrmP1n/3WY+82k+Au+7C08AJsvlqushNf
kmBy1u2P+kVEuNNz2ThMhgxn4rxVHlsRoRb/uoIb78hQw367/0MprL6PVOwk
7KLAgu+1HP/zvsOTDQejMynw5w3PmVIsf9cLlZ3ZWCoGrdMaxiMvcsPpdpsk
j/SX4OOLh1r9HReQf1ObYcTAFODeZHEWNfQg0UuFW3wGZ8A+hYTUnfdpaPtl
57+vl+lgpP5bWW80Dfmw3crkoWPxtPG22pe1HqReqX9g1E8YHnGrYV/E+j3J
A2K0G0xh6LZpQOUP1g/vIH0y3n0Xy2fdVXyC2PqMNZ5y42UnQ5dLJxVNfYmQ
pBNvCR6QIVFqS0cqFt+jj+ySsxegwG35cy80sHh2JqpGfv8TCjQZOE8yw/LD
BavfNgqPCsGeld+GIqKhiKjJtYnSMw3kPpzP/6lFQ7LpemKy87PA4+d+S04s
PkSJyjN0FueA0Jkl03sXaKhIcv+FYKowfBgc2bocQIRCkSo5f3VI0D+949IY
Vv/CF9JZbWUk2NNRsjj3Hqt/3xXZSR0kQ6qumXXlCSK0bnfb8LGKDC0/eHwR
wfrZM907n8QaUaDb9YPCv7F+NsT29C1AE4MjAvNCR7y5oU/5J7mF5CgwOPN3
YOj0QRQVFn056tUMMB5Wu/cY619Cc6ChTjEdXO2JrGRPoKGejCcZXZPC8CRX
p/fYKyJ8rXx65YgTCZZIxuvHYevt7tmBTBkPMoyx2/AgVwXLB1LKhi9WyPCE
WEakPjZfhwYedO9KyAVWioRkIckA9PKvzHnN7FnwhO602zeRhhj2y85/P88B
qX9WmdxYf9u0+t4XKJHgpkMLxJPFWD1d9O3cVBYJdrnv2rmAxefa2WLryEIy
tDrYWGshgdXfnxUKfgMsHkv671DC4r9s83SaY0AaGChzvS9R4oziVDo6beVn
QTSZI5TvMQ2VCSZe5NWaAwsRXe9VQmjo/J9Eyvr1JMhtrCzzOYsIP87xvd8U
QYJ6egl986VE+E72FK95DBmmxl3/mrCVCCuuK3Hs2UyBo60v2Luw8b3zdmgW
0KSD+q8fhfOw52uw7fOQ80kSnAgdK7uEvV8LZTtKqtrI0KxjKPs9th4CuHY6
2FymwKvD54q4sPg/HLGRt2FGDKujFG8/Csbyc+Th/SthgUA9456EIVEBlVrI
8QUn0AHV7MGHRGy+LqHXdfVXSHAtI1qgDpv/E2HKVnvpZDjaJFkUg93PxQmh
O4cjZoHn63dbPsTTUH7OVRv3bSSoqF9/VAhbvzeOiirdSSPBjjdbJM5i65t/
m+JP270USFaZv7UJ6094z72XdX32BrC9E9h/uM8WmR39uebKPQuudi/4uz+i
IXrBw02mm+bAJ/kgScsIGnIIsLz7NpAEu+2DY3KxeiWjVUmklkKBkrpBJE/s
fq5EnVsQE6ODHJ1H9QXY/Ch3eFa/PkyC6imV1ONY/aVYWz2o1UCG574rWHzH
rp9Zoq025RUPTqWnkrKqT6NzvGZRU+1Yfn0QYFOBxcPBl4QdxTdI8GOZXSUn
Nn7vnF3aHFwUeJyP6iuHXa+XumffrqZZMK0/EBKP5a8p26LmiFgSHNyV5NiI
vU8dTMWpuG0U2Of56JkbFv9HrvjksVvQgcbRrfrLL2nI0WWFTfssVt9kt+rK
Yd9fln8/yrSPDEM87hd/w35f9O3a6fhlMfghnML95gk3LOCW2+J49SLQN7/X
zivbWrqbaTUnMoUA9c73iBGZZ6jhuHBsjXcdyAgprf8akYeWQjy/dJr0A++D
tQ8OH/+DUh/YWPUeHQZqFdb701ZaUQ3b+arqx/+A5j3ZL8ayXSja4F/57UtT
IGX4eO2H0B5EhRkOCiYz4GStyO7eSzS0X5l/fsSDDrKS7iiuYeO10d5mMO88
D/ZWli/eUcfm67XSsdbLDKCRdVVSVrYHFXH/3VHpvQSOV9ubqhp3IAFhQl2T
xwp41+OWqDPYjBIsFP6ejVkD0SV+/060ViOreEGuIhMCPDL99GuBfg5S+3Ow
YeM5Iehd3vLQsZ4TRsh8fbPULAS3iUk1+j3igtB1cLfkRWF4Kl/f2x/rvzce
8XI17hKGpBqn482xRFidxXMemJNgm2zEcDg2vw0SB5Yde0lwZeVujgn2OSMz
Nrz/EhlyPNrzuVuLCJ0o04sFI2S43C7N1MLm/8cLzcwZZ6y/39qYdAzL17qG
KWae4xRoqKfxMOMk1m8T8j9reorAB0YWr1ueYT9bX/3ywlMM/qMLDjbIcMOg
2JiqqN2ZwOlUKY/7/tuInHhlinLnB4hhBnP1uaeh6ymaTOb1UfDZ91PDrEoH
EqGbrp9OnQDFlLGAnopuJJYr8njt/DTgPXwhzZabhn4Ha9k0XpkFDELuYYVn
NJQ++F0kwG0O6Gzgcn7uR0PRHR4Ho64ugIfvx6x9y7H+ZEfv9VjnRXD8GjU5
+2EXql/Mc799axlQyvXeyje3og9DB/XTHqwCIYmzS8EqjWgl8T1DcpMwvPOF
mhlO44IVle0GJYnCcHgLkR54Dasnn0UfzJXA8kUD2/q+fCLs0/IpGE4kQR/1
ROk5bL2z+yPp6P/I8MyDCt71Nli9auhywPgNGfreK5KXwOZP6eP45SEFCly7
0rJrDZvfl0K6vYkfKfD0gUt3+bB8/ZD/EfvwFzGoUdg8982SG77XJvnu+ZQM
NMNkOxeizJHJvXtyxZ1TYPfW9ocDNT3o+8DsELNzBnw62G7oe4+GPELsiQWz
dBBH+np/9CkNeYdW/zj0bx5wlu1sMGWnIX+Jy3DcVxhyjekUi2P1VoxTYNv9
VWGY5sQnNYj1Oy03yrnJPlh/zxQaP4PFUyk/zuFN98lwv5mKjLcCEdZcnvxg
yEeBWVouYcrY+s8z3V+l/5gCXx06840qR4RfImWaQvkKAdfjcAGBdSGobfA9
HbZMg7bfYp78+7B8s+t+z9vxWfCfmsF/X7D133NAdvup6TkQ+Mby5l9sfRHd
TSzDSoXhddedJsH3iTAYvczo1yJBWjclJRDLz5OEvbYlVBK0s3m8Q/ADVk/k
+qpvP0CGkanTTlzYeFw2d8QFV5LhvpcME3csP4cvjVHuGlBgAvLIcsbyM7ws
vk2gWwy+U3wa4u3FDacC+IdupT8BWqru7GoWAOmS6uRE4maA7lIdX4gbDbV0
avoa5WLxcNh0rhDLz2ZthLdj48Lw5sW9xzteEuHpaNssueskaMT1JCUTW1+h
sQZaBDcylOvMdU1VJcJEranG+0tkWPAxP80Um6+XlE6DiM254NqeYy/KVe8j
I8uL0iVps8BudEtp2wsaOhQ9lziaNQfcH2RO8WDXP7Fz060TClh9GBP2u+IL
EdpvbhNs/ESCPBPDeS25WHxV3zbhlE+GdPmzV/5g+flC0z+tHB0KVDR2SR/A
4nuXenKQ0qNUIFT5613yFUd0rFD07ch/syCjon99fhgNCe6LDZdUnQP3C0K+
h4bSUAO74HoJARJcFtt8YCyTCC3PSV1aCyPBNz4Ov5yx+c+1K4reG02GjxbH
ko22EeFa4ETgJgkKPOij9Q5h4zNhf5cYsZsOTvoxer9j+ee78Q6a93ES5M/Z
+loae584iZF6b1vI0GjLZatxLD+XSo1NHrtIgewhA2oxkkSYEEIrSJoSgyfV
Ese/BnFDbwqzkJl8H2xUMllY8ZVBfIEymi+i6eCibf45Bayf3SBT+CDXmgTZ
kGp+DTb/D1OnBiVnyFClTaQoC7sfQY+TB38EzgKg7dfVgfXXSrS/ln6yJHhW
aEXr5mci3PZhZ5/lOxL8ai89uqmQCI8cGDc4uYcClY9Kq3di91fx+RyHSkIK
OFMYanyk3wZx13JV0pkzwHXemzATSEMHev2OXSPNgaYWqZkwrN/dOOyq9ugB
CS5UXj9G/p9/76BPxOWRsPp8j2TZZex+yOJPUfx6Okjr7SQkYPOTyjPwPfMg
CWYtan1c+p/9PuG9rmJ1WD33L+0SBauvZO4+n3YNeA6gbdEsXccIvVU7XcbR
RAfvx4IPvn6O9SdclM5EDxL8+xGqq2Ljz6+ZpI6wU2CGquGgAna9yCOubNm/
ZoH/vVHxrVi+Sv5ZE+IeQ4J7STmjV7B+W2TThMc9WQocOShgexSLR7FjhT4P
jOlAkkmb1MTub/CFw7K+MQk+IYtfXMOeX+3iP0k1GhlOrbmaLmG//zv5G8F+
UQz+yXMK7nrMDaPU+y0Ewm8CwuinW2I7+VFKu2hseQAd3A5ftZfDru802jN5
+yIJ5sa/dS/C7nepy2VqdJwMOSuCKqew+739KS7R4B4JTgbPr1Gx+Tu/0znF
fz0FfljruX8Q+9xDlt/o5dosUJS4fFAXuz9eduPrns+egm13itl2mOoh+m8d
PRsXEnR6Tpvywb5fnsvlZ/4aGY4tV1/Xxv5+5tTwk4KiWeDqbm0vgr0/waec
fA2kKPB+iKUYE/ucMb9LMESXDjrNc+qfYd/fzDg6YWVIggm84RvjsPF/Wh9a
zvAKAVJiqolNPKooy/zxpkk7EmTyUO79wq4n7ObSaTSPrceB2s++2Pe5lTo9
GRalQI/rNxRCsJ/zBTbvipGig4RCTvAD+371/f/cWm+R4Dql4UN12PfrxjoX
SKyjQDVPq6Ud2O+raC25ZHTMgi6v03lELF5q9hwYv2tDBy62g/9lYj/TdcO4
d5mS4CnR7ScMsetbvd/7pnpVDF4/FQwdorj/n37rf+9/Ev7//8jwie7957v9
iBD3MoMfHs2LD3NC3MvIXs9UaqtfAbiXEXxDlJzTnga4l8nZnajD9oYGcC+z
O+vBpIPuN4B7mdD+FCX+w1SWl0k5ebZyPq+R5WX+VEV9+vGineVlEtYbN+13
/79eRvndrYHLr3pZXuZnhfJ9BdsBlpdpIb1Qu1M9zPIyzcAhkW3bOMvLwNZG
uyrHaZaXcXVScWk/R2d5mRrV3T/fyC6wvMwOo4LW9xYMlpdpm3llGn92AeFe
hi21xMjhyCzCvczQ0YoN1kljCPcyIlpZdnW/OhDuZQhqcm1rDr4I9zLBxetN
6IQOlpdRKM5nmM9MsrzMq3eG4vPZCywvwxl+YFfUxArLy5ifUbvFzGayvMy8
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
cDlOXHMK90MHz1zetTp9CvuetQv2E25CU9j3/MLLj6vi+QT2PeckfOSZVR7D
vudTqs9O3pcfxL7nHSuSWQZ1vdj3fGGrQYPj1ibse9bgWPXj9ucc7HuemXj6
fDQiH+eTpncJPA+6QcP5pB/eIJky14PzSZ/8wpafWP6/fNKD0gu3T14exvmk
+v4tRkvuj+J8Ul3xAK8o3xjOJylKuMR8dh7F+aSCUUcfZ9khnE+aiBp637+P
gfNJnEHqHW0n2nE+SVi8I9OuMBv7ntnLpR5uul6Ffc9jcTt/2V7pwr5nGc/Y
9Qce9ON8UvKejAaP6iGcT9KjHn2hIT2G80liyqtfPH80jvNJfy6afDn/YgLn
k266OoTJmE7ifFLUB4uJrFeTOJ/UdTZ+6VjSJM4nFezlvmwfVoR9zw1PLCWb
+dux75lRWvBOPLgX90Pf3akcVMHPwP3QXGulQ08EMHA/9GLvCv4k7z6A8knR
UhNKlT692BdNfUD5fqCxC/uaYfHpz/bmQ7i/OYzn2KfKDeO4v3nY/ec7p7uT
BMorfbJ5J8l6OUWgvNLAskD5xptTBMorsSoTdCqdJon62YDga/O8kJ9qtVo4
aBz3P5vxHc0KuTaC/c9VlKAlL573Y3/z23bz76zvnTh/dHblMy6jHQycP2of
lF9z9+ogzh/df8lvEL84gvNHxaEvJ3+NjOL80f0CL0uF1lGcP4qao/JPmYzg
/NHpPYtZnr4snD+KeP6GHnO753990S/5PVfeqcX+59Urlt2ghWZi/7NFcvez
7+o07H9+9EdNeKcGHeePRvL6OV6eGMD5o8SLRn1uEqM4f5SwpaT0TN8Yzh+N
bNLQst80gfNHdw4UrI/nnsT5o0n1yYU9AZM4f7TX/PjBxq//80lHcS48efkw
A/uk/9n4rDghRMM+aaH8KyvafHtw/3StckybU3wf7p92io6SGgpn4P7pkzEb
U3c29gGUP1LecTueKU7HPmqdkSNvG0O6sQ86/fnLynn3AdwP/VLS5Zea2Rju
h+beOhZvIz1JoDxSLNeH4zw3pgiUR1q2J1Nj6vUUgfJIPZNbqc/zJon2avbf
S+m8UNX3TY/98gncL/3v9XqbK96j2C9tK9B+l3Xxf35oDu9YhxqOdpwv0pSq
WR4VT8f5ot+BdpOppgM4XyTn8aTTYO8IzhdtfCyaPFI8ivNFq6LlThvPj+J8
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
6aB6QjbjsDxQp6Cxo8aCTWI9YI+xo5rbJ3S+l17W/7eeCTKLLDcb2wSmuIzh
1gWi+neoTtr4iRAmhERle6Dzwfl7Fd7Kd/wpBlxuPXbns7UASm11d1BC9Vpq
y9JZXSYUPN23XyEZXQ/O1xu0tf18jNYHOF+/86zMw7lRHgDn6ycLwzSommrS
X//p6amvvls1AZyvpx5SLgEKbQDn639zP+vbzzAA5+tLbyV8yJFH9dqffP21
ysyPd6JbSX/+nBgPF4/FzaQ/fo+qOZiX/p3GefsLes+NQrxYGuftpalKXekr
fTTO2y+U0KyNRusPnLf3OpIQfvYJmn//5O1vhZ/m1cfytIX8SP19NwmY9s4p
mIvqo3H+PiRu5Y6pC3pIv/0Jhyf4m03oIP3yXUD4ifqMWpKfv7knwH3p1BaS
n+9vm7/VT/V/+XmHZUyhuVcXyc/PZczmDEeyJD+v0bTTLRnVZzg/H73vSiVt
z5L8/JeJ139GTuwk+Xnb0zGvly9kSH6+6r3K7WGpepKfnyQia92/9jnpt7/s
1yOX1H/KSb/9FwP83v1hjaTfvgaUk3qb9I3k54Meehj6tnaS/Hyt0yM/tdk9
JD9/L3/bqeCYXpKfr2gYN0E8vo/k58+9fBo6YMKR/HzWO3PON4Ej+fm836fW
lmqVkP794fsM6o9sqAc4P6/YtkJ3ZnQLwPn5j7kvL8BJDMD5+Y8fDhfRqN7H
+fmrT0Plz7u1AZyfn372Ul+BcyeN8/OWOQv8rNR7aZyfb+xQez8pAs3Xf/Lz
No+fzCmL52mcn0/QL6dnofl+emrH7k+/xOHYkNilE+w4Wu/wePbJiAQ89hRW
mXv20jj/nrA07XH5Nobk392Pd6Y1+3eQ/HuB3VVJTQFL8u/ZW/Z6XO9hSf7d
ot1yQ+6/LMm/ix3MqxzW7Sb5d8OSB14DB3+Q/Pu1j2qWarbNJP9eOJ2O3b24
kvT3D25uMe6qfwZI3n2MbP09s1aSdy9aN/FnoFM7ybtLqBhlz5dnSd59kZbT
zd0dPSTvHhqekui5uI/k3T3Xpt6zleRI3r3FpqTa358jefcARee+EfT8wXn3
5tfPJCS21wKcd090cQ/KCkPf7z9599KY7L6O+20A591tpsbOGRPKgKqs01b6
pq1A8E/HTNGKNpJ3f+qiprFlDkfjvPv5gT3jl6J62r8jcLAhQwA/tFuyOujz
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
f0LzAd7G54O3cR4Ub/8fP0HVeA==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{613, 3240, 3238, 918, 833, 764, 1038, 934, 849, 1057, 
            953, 1075}}], 
           
           PolygonBox[{{1071, 3237, 3235, 598, 599, 600, 601, 602, 979, 875, 
            790, 721, 670, 639, 1003, 899, 814, 745, 693, 1021, 917, 832, 763,
             603, 980, 876, 791, 1042, 938, 722, 1027, 923, 1063, 838, 1050, 
            946}}], 
           PolygonBox[CompressedData["
1:eJwV0ttPz3Ecx/FP9YtO5sLMzIxIbMxWripCoYx14UaRU7dRDpVDrjGHymlc
sImtkDQzc9X5yPwF6KjLpAvKHY/vxWOv9/Pz3Zql9IrqQ1XxIYQ4vvA8LYRm
ahJCWMNXH1vIoVsfJp5OfZNKRnUta/mmW8mlR5eSQJe+xWnGdB3pfNcvyaNX
lxGjW9/mDNvZQZ/3IyTSo+8Q/ePH9UXWMapfkU+/PsoienUD1UzoS6xnTL9m
JwO6nMX06UbOsotBb8dIol83cY7dFDDk/TjJDOi7nGdSXyaDcd3GvLuBHH7r
QobdJ0hhUP+zjyjgnp6118hiRifFQnjmPsAFPWWvsIEJHfP9iXuTLbKr7Hv7
xrcF20guK7x32D/eU90v3JttSfT/bz/abLvH9xH3yej3rFPtUttqt9ih6I/I
PtaZttCutO/sVnvf91/u69HvQmfb5bbd/vQt2d3sPshq9wdb4/2HrY9+Jsu8
t9lJ74nup+5i2vVf20Qe83ovn9ynSGNYP2DOfYNtzOpapt1X2ciUfss+PusK
ljCiH1JHEcXs5z/maWZm
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1013, 3239, 3238, 1022, 695, 747, 816, 901, 1005, 644,
             674, 726, 795, 880, 984, 612, 643, 673, 725, 794, 879, 983, 611, 
            642, 672, 724, 793, 878, 982, 610, 609, 608, 607, 606, 605, 641, 
            671, 723, 792, 877, 981, 604, 694, 746, 815, 900, 1004, 640, 755, 
            824, 909}}], 
           
           PolygonBox[{{564, 3236, 3233, 988, 618, 649, 700, 769, 854, 958, 
            568, 677, 729, 798, 883, 987, 617, 648, 699, 768, 853, 957, 567, 
            676, 728, 797, 882, 986, 616, 647, 698, 767, 852, 956, 566, 675, 
            727, 796, 881, 985, 615, 646, 697, 766, 851, 955, 565, 614, 645, 
            696, 765, 850, 954}}], 
           PolygonBox[CompressedData["
1:eJwVz0lLFWAYBeBPEwW5lVPRIiQJwSkwsNxUbmqhpl6nP+CQ1qKWjWq1S91o
Yo4JlmAQZSXSX8jZ/kI55MYRHGrRcxcP55z3W31ZDQ9q7seHEOKYZDwSwjvq
HeuopZ1RljlzIoR7/KTGbmOEJTLc7rJCtT3NBpfsl2zyzB5mkXS7lWWi9jEl
eh//+GavU6C/4A9P7V2K9W72GbJvxZL4hBAW7A96qp4mW1iiyv27vOAelROc
1I/cp/Rz+g2ZLV/Lv3z1VmhP6+dlmcyVYzJJrsX+Jz/aGTJfXpTP5QZPvF+2
Z/RMWSHz5LhMljveP+ln9auyiz0G3W/Gkjhv8/aknqKnyjssUuleJd8T8XZo
X9d7OeaLXSrfkuh91c7TO1jnsb3NFb2TXQbsOVL0ZhaosA+4pvdwxJT9m1y9
nTUe2VsU6a/Y4Y09y2m9iXlu25/5RY7dxioP7X5+cMpuZI5yu4z/1xZZAQ==

            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GmUjnUYB+DXjLIOxpJ9xjZGSiRbkT2VnNKQrbIMX7LvpGMnZD9tsoVC
Za8v9pS17FsLQtkKOcdWfLBc94drfr/7fue877zP83+mfHa/rL45EonEJ35E
LvSjIiWSEont5nv6eCqbR5rP6e+Qbs4jU+SH8lWv7ZdZ3NAfsZ+qr9Svy2EU
5xnzBtmQ0/ocLuv9KRTvbf5Ndua+vh5vlfjcXIkd+iheoxYb7RpxRv+MniSz
yC6DnfpoWlObnPG38SiL43uxSx/D69QhF0vsM9mtjyWLumyya8xZfS69yM0X
dlXYo4+jDfXYbNeEP/V59CYPX9o9zk/6eNpywNyGm/oqnmWLuSl/6fPpw+/m
LjyIa0lelpqr8rM+gfN6T/LyhvmgbMut+O4u6DR9tX5DDo/7zXPmrbIZ5/Qc
fm+SvkC/IgdQwS5VpspPZTXZ1+sn9K6kxc2Kz5Wz4m+SG63u6KPiHprTZFE5
Vz4l83l9mf4EJc17zff1CUzUL8he5KOA1z+S7ewPxXfjdtwz++n6Gv2mfDfe
i/rm72Vzzsf55qo+kML0M5+U3eL8s8mcn+X6k+zT36c9h+Nz+U9fSwO2mV/g
QpxR+pPCV3Ft2K9PogPP84NdCy7GGWUABfg6rgUH9Ml0pCE/2r3IpTivDKQg
39hV56A+hU40YrvdS/wdZ5hBFGKFXQ0O6R/wJo1JZaX90xzWp/IWTShMEYpS
jMcoTglKUorSlKEsaaRTjvJUoGKcZe9dkyP6NN6mKZVYHf8TOKpPpzPN2GH3
Mv/Es8VgMlhjV4tj+gy6cMTcnv/1dTRnp7kll+NZYwinzNkksdlcOe6jXpvj
+kwu6r3JH+fZfFR24I7+Lbf0EZSK+27eJV/hip7kDE7Wl+r/ykEUYaj5D9md
5DjHfm+23GJ/V44mwy5dFpPz4t7KzPg+ep34PPMv5gfxTJAZz5f5kt6HcuYU
WVB+HM+S7Ob1Y3pHypjvmnPLGebv9NvyPUrHs2A/J86m/W7Ziqt6sv0UfZl+
TQ6OZ5dh5tOyBznZaq4S10ivy6/6bLJ5CLdKu80=
           "]], 
          LineBox[CompressedData["
1:eJwV0DtMU2EABeBiQCUhaELAQZpQXKwUrE4qOiOPojKiLkgfE50gqDVRBwcW
EsESCcwojEp18zEpuPoCDY8JBm1dMKE18bvDl3POf/v4cyND2YGRqlAoNMug
si9f0sUHO8EvfYFxNuwkNbyxo7zQz/FNf8yOHvxoPbfsz/I6ZX2ZPT1HM5ft
j7Kf3/ozivoojdy2N2WKg9Qd8B/yrfN9eZ8WmpzPyVPB/eV5jjv7bofkI/uk
nDJ39SwR+4g8KvMyJoc9/6LfIGxX7Fo5aUdlwf6r3+OEHZYN8qns9mxFXqGo
Vzuf0J/rJTkW3JM79pZMc4h3dlk+CO5EW/Ce5AXW9GmSfLVv8k9/RQ+r9lVK
+iJ3iVFw1sm6/oQUvbQH33V+kR96njR9dHCaOGd47TOX+KnPkCHBJ2fX+KMv
kWPbznCY93ZFPqSVY97DvIzLs579B9QbTcY=
           "]]}, Annotation[#, "Charting`Private`Tag$650029#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WUVlUABdA3QQ9ioxKCBYqBSHc3CEODBSotCNKNLmkJAWkUhu4WpXvo
0LWU7jIo6XTfH5tzzr3DzPriZW/SNrFNTBRFyf7JGxtFv8ZFUSIP9JV8S1Py
scp5LR7qv9CPZhx01o7M/GEnkZ/Vdm0ehd9Lf5pzyFl7svCnPY0CrLHrELHK
HkALDttfkZWD9nQKstauSwyr7YG05Ig9JSGKOsgXOeRsBoVYZ9cjljX2IFpx
1O5INg7bMynMers+cay1B9OaY3YnsnPEnkURNtgNiGedPYQvKEoxNjpvSArW
29/RhuN2Z17iqD2b4myyG5GSDfZQ2nLC7sLLHLPnUILN9gekYqM9jC8pyRZn
H5KaTfZw2lGK0mx1/hFp2GyPoD0n7a68wnF7Ljf1oRTiul2GbfrHpGWL/UiO
oTTf25dkP97lHzt1fBT9pFcJn699SnbjVU7Y8e4n6jllBZlJLpXz3N2SwyhM
RucL5Q3n6fQkPZesHj5/+bPMI8u6T9Y/Ce+znU5mkDPlm3Kr+0iOtV+TZeTz
crF8W450f1nvH94LO498Rs6X/7pLo0/Rq4bvtr5cdnB+WnYPv5OnnM+VJ52n
0CfpFZlv35bDKcJNuxzb9cYksM0exRV9AO9xye7IGb0HOThlL6A8O+wmpCfZ
Hk0nKlCRSkz1rFSWVdjp5z7lMbbbP9CZs3bP8Flw2l5IVXbZn4X3kR32GK7q
A8nLZbsL5/RevM4ZexF39BEU5ZZdjd365zzOTnss1/RB5OOK3ZXzem/e4Kyd
0ns5Wa/EYvtu+M5RjNt2gvtp+vtUt/fIpjwR/pa7WXKX8xh9nF6WcfZ/cjD5
edbdAnnVeVp9avj7sprMKleE77bs5v6C3ic8n3Yu+bScJ9+S59ynkj+G90NW
lpnlMplbLnF/Tx8ZngW7uHxOLpJ33KXXp+s1yKavDK/L+V7ZjCfD63I+W+52
HquP18sx3r4uh1CAa3Z3Lup9w3PAeXsp9/VRlOCuXYN9evPwPWaPPYEe/GV/
HV4fF+xl1GS/3SK8fvbaE+lJIgectQzPEPvsSfSiFrWpQ5LvZl1Zj/o0oCG/
+T+twmfCfnsyvfnb/iY8r1y0l/NAH01J7tmN+F1vTcbwfnl/5sgDzuP0CeE5
kuXlC+HzkO/I/wHSTOio
           "]], 
          
          LineBox[{1013, 909, 824, 755, 640, 1004, 900, 815, 746, 694, 604, 
           981, 877, 792, 723, 671, 641, 605, 606, 607, 608, 609, 610, 982, 
           878, 793, 724, 672, 642, 611, 983, 879, 794, 725, 673, 643, 612, 
           984, 880, 795, 726, 674, 644, 1005, 901, 816, 747, 695, 1022, 3238,
            918, 833, 764, 1038, 934, 849, 1057, 953, 1075, 613}]}, 
         Annotation[#, "Charting`Private`Tag$650029#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XV0VnUcx/FnsA0Ug+4a6FFpJDYYqMBoBUQZDYoBEoMxujstGqT1HOlS
0qJTQMpGQDrlKDlCff3+eO/zfX9+v/Pc59773Lu4Dt2bpkRFIpF0f+KjI5G/
YyKRVPSIjUSyyGT5sxwiv7X+gtzM+8qW8h15Xo6z9ox5kbkG2ppPyBv6hub9
5nfxHs/KPzaXwHGexHea2+NzXoGvNTdCBAm6f2RPPIbv+Hh0RjZ7J+lK4g++
CFVwg6fhcWzmE9AFVZGIaqgezgc37emFJ7CFT0RXvIhbut54Elv5++iG7I47
WVcKJ/hivITbvA+yYhv/ACnIYf8UXWmc5EtQA3fCtUQ2bOcf4ll7F/OauMm7
I6duKi+DU3wpauIu74fs2ME/wnP2LuG1cIv3QC7dNF4Wf/LafJf5DSzjFfk6
c2O8aT4to4KbD8nO4fPsS5f9kQPNrf0id4ZrZd4SvotsFe61vCBHhnttvYRc
Gq6zTJLt5Ek5TN62/rI8wAfKjrKLvCrHyFTrueX08BuQ5WQr+bs8ba2OeXf4
3uH3Zb4sl+srmdebm6CD+YzMENx8OBwDSfbdkwOQE7vCfbS+1dwak3hJvsxc
G3d4T+TRzeDlcYavQGXdBv4qMob9uvvhnJALu/lklLJvOa+DuzwNeXUz+fM4
y1eG88IDPgi5sYdPQS/ks3+WrgLO8VWoi4d8MPJgL5+K3qiHf8NzjLzYx6eh
D+qjQXhOw33AK2iE/+wbinz4nk9HX+R37E90FXGer0ZjRPTDdPmxn89APxTQ
z9ZVwgW+Bk0QpR+uK4ADfCZK61bwukjn/VFQN4dXxkX+BeJ1G3lTRIdrrsug
G2EuiIN8FsroVvJ6uMcHoJBuLo/HpXDd+J7wG8GXPIFvMr+GmPDZ/IjsGo5n
PSMfaS6EFuZf5Q/heTZvC8+HbCM7yotyVLhe1svKVeF9IuvL9vKUHC7vh+su
D4b7LTuF48lrcqwcaL2wnMfTZEL4fcrj8nK4v+a95rfCs2q+IteGd6H5K/Pr
Yc18VsaG8zAfld3CedoXzUeZC+NQeLfw7ea2mM3L8dXmBnjAB6GIbj6vgit8
XXi/6r7mzZApHFcXoxttLoLDfA4Go6h+ga4qrvL1aIZY/RhdURzhczEEychk
baw+Dkf5PAxFc7RAS7RCa2S2d5x9xXCMz8cwxOkX6hJxjW9AGzyiH68rjh/5
AgxHMf2numr4i29EWzyqn6B7Cj/xhSivW8Mb4iEfgeK6z3h1XA/PG99nfhub
eCL/xpwcOvM5mTncF/MxmRIwX5ft7M9inmhOlU/LlvK38KyG/9XWa8kdfIBs
JzvJS3K0/B9EXf4L
           "]], 
          LineBox[CompressedData["
1:eJwVz7suw3EYBuBP0kqIwzVIaFnNTrNgEEITiR7UYaAmmwXFoNwDrQtgc7oB
g0mDxuAGpHoBeDo8eb/3/f2X/0C+NL/TEREZbpIRe50RMzIrv+SB/E1EzMkX
fV9uyW35LQ+9Dbqr7glW3J+yaZ92P7uL3Olj+qN7iS4W9FdZYtV7j37mTvGm
XzJqu9Vn+dOPGLLV9El+9Huy9NortjTv+hVlcvR5O7cP86FXOSZPgTWKrLNB
v+8vfDtCQ69xQsp+bZuipT8wbnvSl+lmUa/L3fa/uZvyVG769h+zdi+h
           "]]}, Annotation[#, "Charting`Private`Tag$650029#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8T1Ucx/HvTzISkYjsFbIryd4zRTuhECK7vY3MkPWzMrKVvYVCVtkj
m9ajVGY2ZfX8/PF6vMc593d/33PPPTdfqy5PdU5KJBLdUyQSg1IlEufSJBIP
Y2LqRKIUjulWI1vaRKKpfqPuOaTDYP15XVl8IZfGn7pK5nbXHZffxxpddl0z
3Sb5edyJRroRuhv8Z4F5F+RHMEkug790lc3roTshf4C1uvt0zXXfyy+ggzxf
zo70cmM5mb/JD8FH8ndyMQxx/UVaDpONPYiXjU+Na/G38SpyT/6ksaH8Xv5D
/i1+BV8A0/i/6Xfm5+Bf4ufTH8wbSHfK62gTuSNdIC+n98V60d/pFprB+JN0
pLyI3pJH0cOx3nSo/DFdJ39Li9OZ9CQd6t6X6KOYYl5f/Rb+Ib4FP43PEM/C
vKpyL/5UrAfellfKBeP/NJ5TfpnfbOxF3IWndKN0CQyTh5l3mS+PqfLDOKFb
j1zmtojfpGuKjBiuv6KrEOsll8VJ3QaMQDJGYhRGYwzG4nOMw3hcdW1FTHft
Izil24jc7tdSv1XXDJkwQf+vrhJmyOVwWlfN3E90p2MtsUmXR9dKt01ujrvx
tG60LgnD5Ynm/cdXjjWXH0VLc6bLd+GM8epy7/CxPvw+vjv/Dr+KLxT71Ly8
8iv8dmOD+F38S3wnfiH/Nc0Re5/+Eb+LZjb+DB0jL6Yp6Gh6JN6leH+Md6fr
5dW0BP2SnqK76Bfue42vgrnyl+b3o1tj39Lycis6Q86Icfwv9B/X1eD7hI/n
yO/ne/Dv8t/w9+MH8/LJrfkd8R6hs7xIzol75GflsfxtSJYnueY6XxVfyRVw
VrcZ+c1to98Z+xdZMFl/Q1cNs+SKOKfbgimYipvGqmO2sUo4r9uKabilr4E5
+sq4oNuGAu7VNtYpnimyYro+oa8Z6yVXwUXddhTUv6rfHWuGezFDn6SvpZ8n
V8UlXU1dX91ZuSd26Arp2un2yK8gG2bqU+hrx9khV8NlXS1dP905uRd26u7X
tdf9KLdGF3mxnCvOvTiX5c/5lBgp95A38CVjT7j+NrkOv8BY9fgf5JlyJlwx
Xlvuz583NoI/wH/Cv8d/yxeOd5A/HmtmfmH+tfh7cT7G94DultfHM5S70iXy
Cpo7zlp6LN63OAPjO0DHyUvo7XQMPRrvSpw5sW50o7yGloq9Qk+HundKvi6/
0Lz+/LZ4xrEuscf5u3HVvDryAP6Csd7YrSui66DbJ7dFDszS366vF2ewXBP/
6vagqL6jfr/uVeTEbH0qff14L+VaaCN/JWfGf8bryp/yF431iW+hvFouEs/Q
+ANyJ/5AfPv4PXw7vhu/lF9J88S5Tv+Mc4Pmiu8dHS8vpanoWPpTvItxdsV+
oZvktbR0vDP0TOxbOsd9U9MGsV/j+Zg/gG6Xa8d68LPivcV4/ld6zTX1+IH8
JXOS+YN83/ge82v4othrXjG5M3/QWHu8Li+T8yK33ESewKeO5y3PdU0a3WPx
e+Q6scbybDkLrhuvLw/iL8fZhX264rouukPya8gT3yzdRF2aWBN5nnlpdQ3l
ZXJd3NA10A2OPR97B/t1JXRddYflDsiL+fo79I/rl8v1cFN3ACX13fRHdB2R
Dwv06fRPxFku18ct3UGU0r+uPxrnPfJjof5OfaN4R+QGSOCQvrT+Df1PcZ6i
ABbp0+sbx96QH0MSDuvL6N/U/xznAgpisT6D/kn9Krkh2sUekLNiAv8b3Uz/
B7XsYI4=
           "]], 
          LineBox[CompressedData["
1:eJwV0stTT2EAxvHXrQvNuMs2M0JhRlGqP8H9V8m1hR0Ll1JJaUMLijBjg1Bm
bFxmzOgiIpcZ2WSGlaHbr1zGhqWw8HkX33me5/t7z5zTOWUdOJI4PC2EMIgL
aSH8Tg3hLD6lhJCXHkINN2ofxXI84ufyCf6pvQXT8ZnP52v5MfsYstHFz+NL
+X57K2ZgmF/P1/HjdhVWoJufz5fxz+xtmIkRfgN/gk/a1ViJHn4BX84/t7dj
Fkb5Ar6en7CPYxV6+YX8Tn7A3oEUjPGF/El+0q5BDh7zi/gK/oWdQCo2cW3c
lH4O485t5Bq4L3YtcrGXu8ml46rd59xibpf90i5FGjZzF7k/eguSzhVxjdxX
uy7+zXaPnYXV9j77lj4b1+zT9ht9HZ64fom9W38Vn1Ef0sv0g/p9PRM39GR8
vvgt9Uv6X/2K/lFv1Rv1gfi9ZY68I3/Id3LCfYrlKfuh/OZ8m/xgv47fK757
2RufSS6Tt+M5OSTX+H2/7LC75Zz4nuSIvO63M/qgnoe7+s/4HO6Zqe+J93Cm
HIfsB/bS+D7i/5l9Wf+nn8eka0q4Ju67XY+1qOQ6uQy02832Wz0f9/Rf8r3s
d/1/iE5sXg==
           "]]}, Annotation[#, "Charting`Private`Tag$650029#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWwVWUYhuEFFqWodIMzJqC0SihdKnFQutsxaDh0p45BHdKgYcYWBJTQ
EVAwEJTubgw6vd4f9zzxvWvtb68q0r5bypvpkiTJlz5JtmVMkuOZk+QlbM6U
JN1RHBmQJUuS9NRf5KegIbabP6Grhz/kHngSRc2+r8uOr+WMuFfXS77ET0UK
djj+pK4+tsg98RSKmZ2oy4Glcibcp+stX+bT0AgVdHN0D2OdvNP5TvENsFXu
hZpmPpFLBPF/5El8TiyTG8ur+MrILGeV+/BX+GmoJy+Vn8HLckV5Lv8IuvHb
6Hp9K/5HvhYG8YfpLvs5TRtimO5Pcx3oRvm9+D9yLfqpPI6WpL3oLjolclxP
OlkeRXPR1+gWOpF+Y70JXS2/TavQAfQgzWLtfr4vf5Xvwv/GT+fr88v4Z/GK
XEmexz+KDXJreR1fG7v9hzM0BX9Z64NScZ/MTNHlxvK4v3hA10++xs+Ia4s9
jj+ra4Rtcl+UjvuJvdbOxXXFdrkfysQ9wD5r+3EAB3EIh3EER3EM52P/2GE+
FWXjP+NB+0jVX+dnxjXCcfN/6xpjp9wf5WLPyGa+v/4GPwtNccL8P7omcR/l
AXgaJcxO1eXBivgtZNcNkG/ys9EMz+nm6x7DT/JJ5/uXbxrXVB6I2mY+k0vF
8yWXlNP4vHid30pXxn74NXxVZJNzyAP5W3xX/nf+A75BPBP8eFqe9qP7aBpt
bv15ukAeTR+n3el2Oon+bL0NXS+/Q+vQwfQInUlP2f9/fDMMl/eY70g3xfPO
1+E/50ujN787nq94VvhpfD58G9dGXstXi++DnFMexN/mP4zvirxcroAWcmV5
If8ENsqn7eMC3xx75cEoH8+Uuem6/PgurhFy6QbLCT6SW+KM4y/GubFPHhLf
kdgHcpsfok+Hj+Odxlnzl+SW2C8PjW9AnBvnrF3Wt8IBeVi8S3EenI/nLZ6h
uO9x7XDFXGsctD48nhHkwQVrV/VtcEgeEfcKeWPdnobq02NOvJu4aP6a3BaH
5ZFxnZAvjjE/TH8H5sY9xSXz1+V2OCKPQpV418zO0BXAKjl/nEM3XL4T8+S2
MatbJBfFJvmy893g2+OoPBp1zXwhl4nnNN5FeSZfEKvl5vL3fPX4vfgteQR/
F17lN9P5+hR+BT+BVqSpdD+dRttZr0oXy2NoMdqD7qCT6S+xX7pBfpfWpUPo
UTqLXrHvm3wHjJCPme8Ux8X5+Bf4L/my6BPPeDyn8Z3gZ/GF8EZ8x+kafQv+
B75G/E+5gDySvxsL5EbySr5SXCu5mryEL45f5av2c4vviOPyWFSP74y52brC
WCsXQkHdKPkeLJQ74Jrjb8udcEIehxooHMeYH63PgEXxruK6+UTfWXdSHo+a
KBLH6MfoM2JxXBfcMJ9O30V3Sp6AWngojtGP1WfCErkzbppPr++qOy2/hRfl
r+Ry6MvvpVPp/4FmJW8=
           "]], 
          LineBox[CompressedData["
1:eJwV0KtT1FEAhuGDIAssqOBfwMUbMhoRAhRkRFZkHGkWCQgLLEpzDAQC1+Wm
RWZAyIAo0LQIBAzqGAg0x2DyhpjR54R3vu97z8zv7NnyzoE7mZwQwhoWkyGU
411RCJWoKA5h1E5ixX6A48IQcvke7rs9iRuowj9nec7Szn7YWbTgXPweP8YX
Y9XuRsBJvpf7qU/hJs7H7/HjfAnW7B7kIJ/v437p02jFhXgHP8Gfwks7jRNI
8P3cb30GKVyMd/CT/Gms273IRQGf4Q71WdzCpXgHn+XP4JXdhzwU8gPcH30O
bbjGveAqsG1Xxzu5KbsUr+3++HYU8Q+5I/0pbqOOW+IqsWNfjr+Bm7bLsGHf
td/oDcjYTfaKfgUf7fv2nt6KfDtpP9L/6l36B/1ZfJ++pdei3a63l/Wq+F19
X+7y9/QdPSub5RP5Vc7LmvhGOWMPy7MyLT/LWbnpvEO+tSdko3wsv8jn8f9z
fl2u2iPyqhyUB/KTs079vZ7CkP5NLsiEs/9HUlKg
           "]]}, Annotation[#, "Charting`Private`Tag$650029#5"]& ], {
         Directive[{
           Opacity[0.2], 
           Hue[0.67, 0.6, 0.6]}], 
         LineBox[{562, 563, 561}], 
         LineBox[{1077, 1078, 1076}], 
         LineBox[{1674, 1675, 1673}], 
         LineBox[{2516, 2517, 2515}], 
         LineBox[{3231, 3232, 3230}]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-6., 6.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.865361029035945*^9}, 3.865445408672529*^9, 
   3.865445465281426*^9, 3.8654456787461615`*^9, 3.8654457684634714`*^9, {
   3.865445884836256*^9, 3.865445921420556*^9}, 3.8654460587696333`*^9, 
   3.865446443250679*^9, {3.865952125553069*^9, 3.8659521516667013`*^9}, 
   3.8659522247202935`*^9, {3.865952279668687*^9, 3.8659522923016386`*^9}, 
   3.865960380517995*^9, 3.8659604237811317`*^9, 3.8659604862431183`*^9, {
   3.865960526854105*^9, 3.8659606215087757`*^9}, {3.8659608307097435`*^9, 
   3.865960868038782*^9}, {3.865960935615129*^9, 3.8659609432706757`*^9}, {
   3.865961026919873*^9, 3.865961042898753*^9}, {3.8659618737415323`*^9, 
   3.8659619220130653`*^9}, 3.8659621773942356`*^9, 3.865962208141383*^9, 
   3.8659653341237497`*^9, {3.865966920464451*^9, 3.865966952803088*^9}, {
   3.8659670377118826`*^9, 3.865967084214981*^9}, {3.8659671567557373`*^9, 
   3.86596716982355*^9}, {3.865967354328431*^9, 3.865967365694789*^9}, {
   3.865967429099472*^9, 3.8659674436738024`*^9}, {3.865967497088687*^9, 
   3.8659675719317055`*^9}, {3.8659677533835645`*^9, 3.8659678198432693`*^9}, 
   3.865967879244236*^9, {3.8659679215246882`*^9, 3.86596797117278*^9}, {
   3.865968013975065*^9, 3.865968049366725*^9}, {3.865968179144141*^9, 
   3.865968295722787*^9}, {3.8659683292590413`*^9, 3.865968337405431*^9}, {
   3.865968399526526*^9, 3.865968431918147*^9}, {3.865968471686404*^9, 
   3.8659685928285875`*^9}, 3.8659686585365334`*^9, {3.8659690928773613`*^9, 
   3.86596912452522*^9}, {3.865969364031477*^9, 3.8659694647951903`*^9}, {
   3.8659695001958475`*^9, 3.865969589464244*^9}, 3.8659696214759865`*^9, {
   3.865969666100687*^9, 3.8659696876527815`*^9}, {3.8659714896133933`*^9, 
   3.8659715124820657`*^9}, {3.865971671047258*^9, 3.865971706849786*^9}, 
   3.865974159481908*^9, 3.8660468621315126`*^9, 3.866572018043004*^9, {
   3.86657320750891*^9, 3.8665732165980134`*^9}, {3.86657330942043*^9, 
   3.8665733505073357`*^9}, 3.8665733817473783`*^9, 3.86657341653929*^9, 
   3.866573451408177*^9, 3.8665736708992233`*^9, 3.8665741122335663`*^9, 
   3.8665741531065397`*^9, 3.8665742791683626`*^9, {3.8665746317060056`*^9, 
   3.8665746395135174`*^9}, 3.8665749401956873`*^9, {3.8665801236386766`*^9, 
   3.8665801513598423`*^9}},
 CellLabel->
  "Out[2240]=",ExpressionUUID->"74d57075-638b-493e-97f4-7141721f35f8"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8659610922599387`*^9, 3.8659610956218615`*^9}, {
  3.865961325815102*^9, 3.8659613437903414`*^9}, {3.8659613901624837`*^9, 
  3.8659615902083845`*^9}},ExpressionUUID->"95c2d440-5f34-4096-8d7d-\
805c19f73e37"],

Cell["\<\
We were able to get this bad solution to the given well behaved solution \
after a few iterations. \
\>", "Text",
 CellChangeTimes->{{3.8653459472042875`*^9, 3.8653460042180605`*^9}, 
   3.865346104423029*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a4d3e002-6aa2-45cc-a329-b64caecefa39"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", "IC2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"error", " ", "=", " ", 
    RowBox[{"Norm", "[", 
     RowBox[{"ICs", " ", "-", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
        "order", ",", "maxIter", ",", "maxError", ",", "uBound", ",", 
        "maxCount", ",", "InitGuess", ",", "maxJ"}], "]"}], "]"}]}], ";"}], 
   " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
      "uBound", ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Error Final = \>\"", ",", "error"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
       RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "6"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
        "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "6"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"IC2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636127929494734`*^9, 3.8636129048647366`*^9}, 
   3.86361309340853*^9, {3.8636132740148587`*^9, 3.8636132890980425`*^9}, {
   3.86361367016436*^9, 3.863613704067534*^9}, {3.863614005426304*^9, 
   3.863614044030977*^9}, {3.86361407671554*^9, 3.8636140789588237`*^9}, {
   3.8636141197098103`*^9, 3.863614156970913*^9}, {3.8636143059493403`*^9, 
   3.8636143423397207`*^9}, {3.8636146524377003`*^9, 
   3.8636146681296897`*^9}, {3.863615502417285*^9, 3.863615703473082*^9}, {
   3.8636161037482653`*^9, 3.863616122815179*^9}, {3.863616300467451*^9, 
   3.8636163404706755`*^9}, {3.863616379759131*^9, 3.8636164322373734`*^9}, 
   3.8636164758294525`*^9, {3.8636165064106874`*^9, 3.8636165068755407`*^9}, {
   3.863616588161584*^9, 3.8636166296943207`*^9}, {3.8636166641123295`*^9, 
   3.863616732677436*^9}, {3.8636167693047395`*^9, 3.8636167704293804`*^9}, {
   3.863616826318534*^9, 3.8636168556931543`*^9}, {3.8636168995821395`*^9, 
   3.8636168999240313`*^9}, {3.863619302411866*^9, 3.863619416136552*^9}, {
   3.8636195563387823`*^9, 3.863619570937121*^9}, {3.8636197069376936`*^9, 
   3.8636197273581724`*^9}, {3.8636205744286833`*^9, 
   3.8636207335498743`*^9}, {3.8636207658335643`*^9, 
   3.8636207659625244`*^9}, {3.8636208211778917`*^9, 
   3.8636208543832893`*^9}, {3.863620930334037*^9, 3.863620936617031*^9}, {
   3.864135467525829*^9, 3.8641355031932845`*^9}, {3.8641358508757644`*^9, 
   3.8641358994820337`*^9}, {3.864136005621681*^9, 3.8641360284712887`*^9}, {
   3.8641361588251004`*^9, 3.8641361878597054`*^9}, {3.864149523908724*^9, 
   3.86414952549721*^9}, {3.8641504554392495`*^9, 3.8641504662587476`*^9}, {
   3.864150523008383*^9, 3.864150605221774*^9}, {3.8641506500782566`*^9, 
   3.864150690388214*^9}, {3.8641515284209967`*^9, 3.8641515289998107`*^9}, {
   3.8641516589627523`*^9, 3.86415165924166*^9}, {3.8641517275125647`*^9, 
   3.8641517616755095`*^9}, 3.8641517984915934`*^9, 3.864152052785297*^9, {
   3.8641521525610065`*^9, 3.864152184609634*^9}, {3.8641524131266785`*^9, 
   3.8641526257358713`*^9}, 3.864152761298999*^9, {3.864153148514683*^9, 
   3.864153171941102*^9}, {3.8641532143853645`*^9, 3.8641532502927427`*^9}, 
   3.8641533364128733`*^9, {3.8653433741568346`*^9, 3.865343389585903*^9}, {
   3.8653435025178013`*^9, 3.865343556974392*^9}, 3.865343662550641*^9, {
   3.8653439817835903`*^9, 3.8653439830341897`*^9}, {3.8653443150880394`*^9, 
   3.8653443220478144`*^9}, {3.865344369751565*^9, 3.865344369894519*^9}, {
   3.86534442575966*^9, 3.8653444262555013`*^9}, {3.865358620302966*^9, 
   3.865358628368388*^9}, 3.8653587956619086`*^9, {3.8653594336949434`*^9, 
   3.865359473096348*^9}, {3.865445033367549*^9, 3.8654450388677907`*^9}, 
   3.8654454578238106`*^9, {3.865445645297858*^9, 3.8654457040770626`*^9}, {
   3.8659521591313095`*^9, 3.8659521801135883`*^9}, 3.8659522440960875`*^9, {
   3.8659621904140654`*^9, 3.8659621913027797`*^9}, 3.8659622596528797`*^9, 
   3.865969703875583*^9, {3.8665736821686335`*^9, 3.866573682592497*^9}, 
   3.866574139250957*^9, {3.8665741749615755`*^9, 3.866574189372981*^9}, {
   3.8665742596365895`*^9, 3.866574275584506*^9}, {3.866574591925684*^9, 
   3.866574649815235*^9}, 3.8665747081046586`*^9, 3.8665749859661007`*^9},
 CellLabel->
  "In[2245]:=",ExpressionUUID->"539af9eb-2787-4ce5-94ed-3f323d9493e1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error Final = \"\>", "\[InvisibleSpace]", 
   "3.704166434143802`"}],
  SequenceForm["Error Final = ", 3.704166434143802],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8665734718076754`*^9, 3.8665734783595877`*^9}, 
   3.8665736835981765`*^9, {3.8665741177738004`*^9, 3.8665741644299307`*^9}, {
   3.86657420986545*^9, 3.8665742239699545`*^9}, {3.8665742857892523`*^9, 
   3.8665742987011375`*^9}, 3.8665746062671127`*^9, {3.8665746506509676`*^9, 
   3.8665747679285903`*^9}, {3.8665749875016108`*^9, 3.866575058210075*^9}, 
   3.866580159452263*^9},
 CellLabel->
  "During evaluation of \
In[2245]:=",ExpressionUUID->"3f4367ba-eb3f-40aa-995d-df7efe351c7c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
uQTLSLr+HKzP6jb7SKLrT97ax1YEJzJdf8aVkhR/UGbp+rP/0JdUP51lhOvP
U5f2zMR+XEO4/lxXL2Iq7E9DuP6su1wUtSC4inD9+VNadzkuZR7h+vNuYOA6
v5YJhOvPmc8V+QZVzQjXn34ScuNeE9V0/Ul71aRT+GSQrj9DuGMOhm2eoutP
BsIniSpFCl1/Tj7YHvrbkUrXn00np2rv3afS9ae6XY9Y4DsKwPVn/vOTGTom
2Dz9l/6scNXx3xI/BXD96RdoWZ74fALg+jNBxe8TZ/0IwPXngSr3n4SoAYDr
z5hAsXNHYnoArj8d2qNSBiLaAK4/7x59lKCr1ABw/Xn3RenP42KlANefAmT1
GnLWa4Drz6VPnl+Gb3xBuP7c1HUqNS+4HOH6U4R9cW3jfAPC9aePaOSUmf4f
hOvPY4Qnuy7VdSNcfzZf7iM15vQiXH+u5s8Kd4ABhOtPvhBSgl/OEML1J8O/
/uD6E2/j+hNv4/oTb+P6E2/j+hNv4/oTb+P6E2/j+hNv4/oTb+P6M/mFrn6F
9xrA9SMp9vy1/pwZun5c3rtjLLJuga4fOcPeDCcfXUW4frwyrPEw24+G5tYX
n4yymQUlNOOn5VlrKMzyp3GN2TyIT9CvjkJLyCWw6vYuy0XQFr5OtTKQghgq
H76RcF8FDL8fGx1NSUUsl15Y1zyngQevbzwT2t8NIiS/CeTWMsB3+3dcMe4d
AzElDol8TYywM++S6PzwNOB/Mtmy+IcJCm6YYaYwUAHTvf1fbXqYYSy/zty1
aCoQrHHeTJ5igYS9aS2/pKjgcK2w2ziVFXoenBE/yk0Bvxe8fe8usUH/Z2jT
c59pgOtX4ue8qVuPBxGuX/F44foVb+P6FW/j+vXNz3euDjcYIK4/g90rjscz
TNP1J+ep0SfKN+bp+nNPYMtHguEKwvWnTAz1gZsiDRVlXd3/c4wKdvraKyge
oiHXjdt6PPvngIPAceNYphUk+tOx9zRpAfywWe+28dMs2tt12SqXugJIrqck
xccr0TkP+e+9fDQQM1/43Um/Bby5eP/eyVAGGH8gRbbXYAT4FrbcMwxhhBlx
GYXVfNNgNOX0QHEME8yraiKtYfM7+7KSymgcM3wfl2Cc85QKLubrD6d9YIHk
/vTTixeo4HrPmIdsNisUrZ3pMsfGQVf9ytrNbDZ4iHyzeokyDXD9G2abPcEy
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
bW83v6ChC/4Gjr15zHC4U2JPFzZesrnF5CKxPEy+2q7rC7a/437Q99P5bq8O
DKN9Kkv2aR0UoPnuyIYv2PO5R55Pl+hkhsLfAgauY/Ewf6/0tnr1b///fb7+
++/7P//KD4vP/NNuRbi/NNvWOX4gaQjg/lJrqxVP4eMhur90WKHFRenoMN1f
Wh8SOaThMkL3l+51nerbMjIKcH+pMjL5VY7TOMD9pbQCV4W11AmA+0sfd5X4
cjuTAe4vtUcIxUV5k+l8Y7Lt75T3xRN0vvHM0a0+knNjdL5xitJ1c8BohM43
eipJHNVhGqTzjWHRodsvJ/XQ+UadFaHvN0630fnGjgY9kV1b6uj+Uo0ji36O
8le6v8Sxw+ePFPMrhPtLjCJ5Kt6bShHuL73WfCsXIF2PcH9JbWi93frlZoT7
S2c327oWaLcj3F9i85tyapLsQri/dLCvrERgrRvh/tLaUOUV+fMkhPtLuWHT
HFyHSAj3lx4t/SCGX+xGuL/EocL5uPxtJ8L9JZ0E68NCiu0I95d61Nzr7C+0
Itxfel2+ylNq/hvh/tL31PIUEkMDwv0ld73PO3Viqun+0ktdpcr9Tn/9JQZF
xWidvcV0f2nGb/52aFMO3V9qFknXV1NOo/tLFTu5NSzk4uj+EmHXp3C+bC+6
vzSWeNdb8aX8/zf+UvArdxY1lyGA843WMlDy7q8hgPONldF3JeXqhwHbvAiZ
ZX8HkDHSFXHaMwpw3hF1pBa4Z44BnHfU0zqkySAyQferdgQRjlRuJwPcr8p3
0eB5HUUGuF91V9whQ1qVTOcdjexn686vjgPcr2r7U3VW4ccowP2q8H1U66XS
IYD7VR8XNxkuDffR/aYz8d0HehiqEO43Ba31pA2BJoT7TTJPuH/46PxBuN/E
eFtT7mNnB8L9pt5bB+LRwW7Uezpb9QkjAb5DneftsfHKoKExs3GVALUUtlEU
9UnoRFqz1FcGDigp7cG4noGEVg7uIQywcsK+fev+pId1oZ1kzfBYLi7IoQW2
+3l0IFcOy/hrm7nh1gP7wkQa/iCc3xwuag2OyM1AOL9Z+cLFaHPiG4Tzm6c3
6W9/GRWKcP+r1+DiBxUOm/9n/8vnGMXZxm8I4PzmynSyzUTiEMD5TZu0h1+T
Hg8DyePyFwyOtYH4mDOqc/UjAOc5O0Vy6szPjgGc5yQ1Ec0Kfo0D3E9TiN+y
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
fxz/v3/+D4pklTs=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{648, 2352, 2350, 265, 266, 267, 268, 269, 270, 271, 
            566, 479, 409, 356, 321, 300, 582, 495, 425, 372, 336, 600, 513, 
            443, 390, 272, 567, 480, 410, 621, 534, 357, 607, 520, 640, 450, 
            629, 542}}], 
           PolygonBox[CompressedData["
1:eJwV0klLVXEYB+BjujEwWggSanUTLIcWWlnktCltcKWmDZuSpNKoaJEDQRpJ
WDl8ATVba620lW4UFDdO1RfQ1I1jaosKev6Lh9/vfc9wz7n3xuqeVj45EEVR
HAOcToyiXNb1DTbJdMKsEzqpJo80thw76dic/o4b5JPORfsl2cdDLrHt/FP2
8/p7ajjDVbsdOUQTRym0W5b9POIylXZ/5Aht7Lhflt2C/oFabpvjGdPPck3/
JYd5ph+hWb8vk5jSm2WMY3qR/ClfygEZvpwUOmgw35WJtDNhfhGuo5Myc5X8
K1/JUflcpvI2XGN+IA/zhhlzq8wIz+hdsuWiXReNejI39TsygXH9HNf1XfmZ
FurNh5jWj1Osr8iP4T7cMx9kUi8Pv6H+T37lNbs+O8fum97NLQqosNuTX8Jz
EqPEblUO8pgr7Lk+1/673hN+A85zgn3Hfof/leM/zL3hfbhABqX2a/IT/wFe
1U5r
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{233, 2351, 2348, 236, 235, 234, 283, 304, 339, 392, 
            462, 549}}], 
           PolygonBox[CompressedData["
1:eJwl0ktIFAEYB/BZ81EoSIEgkZCSZoWmPQ5pPko7mKkhpBcfuYIUlFspiJQd
tDx4s5feKwu6mF6si3UokLpnvu6ZedS00n6Dhx////fN7Mzs7GZGY/WdcUEQ
RHhD3p4gyGe3RRKJJBDPLuKIRHY+cIxy2hllidMutu3wUb2MKCMscsqxLcfq
9C5es8oF+yPyPpNscNmuVH4Mn0NvoU1/xgInzf9c66u+T7/OQ/2A7OJ9+Iyy
kVr9oOzhs94vU2jnjjldxnil98lfslLmyiGZRS8z5gGZSgd95kG5n9tMhN9B
/pZ1skRmyG4+hO9SNnNVT5M3eKrPc0L/65G/6Hv1azzQ37FNg7lGfiJZj4b3
1MdYocJ8WN7jLevU2p2V0+FvqDfRqj9hjkLzH/cc0KfY4ordJXmLl/zkvF2O
vMs4a9TYFcsWHvOdArtN16vWY7xgmXP22bKIZh4xy3H7Dedf1Dt5zo/wP2V/
SJ6hiWG+kR++W+dX6Tf5DyQVT/Y=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 189, 153, 121, 92, 68, 51, 204, 168, 136, 107, 82, 2, 
           190, 154, 122, 93, 69, 52, 3, 191, 155, 123, 94, 70, 53, 4, 5, 192,
            156, 124, 95, 71, 54, 205, 169, 137, 108, 83, 6, 193, 157, 125, 
           96, 72, 55, 206, 170, 138, 109, 84, 7, 194, 158, 126, 97, 73, 56, 
           207, 171, 139, 110, 85, 8, 195, 159, 127, 98, 74, 57, 208, 172, 
           140, 111, 86, 9, 196, 160, 128, 99, 75, 58, 10, 197, 161, 129, 100,
            76, 59, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
           25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 198, 162, 130, 101, 77,
            60, 36, 199, 163, 131, 102, 78, 61, 209, 173, 141, 112, 87, 37, 
           200, 164, 132, 103, 79, 62, 210, 174, 142, 113, 88, 38, 201, 165, 
           133, 104, 80, 213, 177, 145, 116, 63, 211, 175, 143, 114, 89, 215, 
           179, 147, 119, 39, 202, 166, 134, 105, 217, 181, 149, 81, 214, 178,
            146, 117, 64, 212, 176, 144, 115, 219, 183, 151, 90, 216, 180, 
           148, 222, 186, 120, 220, 184, 227, 152, 224, 188, 40, 203, 167, 
           225, 135, 221, 185, 228, 106, 218, 182, 226, 150, 223, 187, 229}], 
          
          LineBox[{118, 65, 91, 41, 66, 42, 43, 44, 45, 46, 47, 48, 49, 67, 
           50}]}, Annotation[#, "Charting`Private`Tag$652023#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl03mwTnUYB/Bz7dd21Vgq6yX7kl1ZQtYiNYrILgqFUtmJS1z7LpmhfZuJ
kkFlKFsUU5Y2tM2UfZd9/zzjj8/9fn/POe+557zn96b3Htx+UEqSJMP8OSLL
ZkmSH/VMnqA6RTnq2DGOUyU1SU7Ik5yinM/85JwpPEkNinHasfKO7dSn0oGa
FKe++b9yCf1ozhnnVzDfpU+jI7V42Oys/DTl9n2WoIHZf3Ip/WlBe7OrchXj
OOt6Fc1269N5iqets7JOr80j+v9yGS/qdzNc7yPzsVUfLtMpqTeUB+Ro+ZYc
JIvwOgOse8pUxrPJemh8jim0jO9UXpOvydVyiCzK5PiM9XOyABP5wXqkLBP3
6FkqyT1mM3heL0gnvYvMxnq9Dm30c3I5I+hrnZ9teika6Qfl23EdelnnZrPe
Kt6hfl2uIYNz/ndls5/1mXSmLm3NzsvP4j5J50GzQ/IdXqA152PPmP+iz4p3
QD1Kc8Gxi1R1/Ffr2fE83E8ZGpsflu9S1b4bGPuBSz5TzbHf9Dl05QHupYn5
EflevJ94x1x2/n3mv+tz6RZ7kLI0NT8q32dwfH9ccX518736PLrHnuNRswvy
c0ZRjofMjskPYg/F9xJ73eyG/JIJXHW9Gmb79Pn0iHu2zs43sa9op1+UK2J/
UZ5mZsflh7xEb+s8bIl7id+IflN+xUT6Wd/Bdv2a/1lT368viPehF6JnPL/M
wbf6K7I4jfTH5CU5Vn4R/1PewyTGWD8r05jA97G/ZGmmUsG6uTwhx8iP4vuU
dzFEf0bmJYPvrIfJUrSL36ZM+Fp/WRaL35TeX97JDv26U2rpf+gLY9/Ge7HO
yYbYezyuX5Yr4xmoSAuzk/LjuHY8Izdcq7b5n/ob8b3GXqMSNx2r49hf+qK4
79hTVCYhhSxkJRvZyUFOclHNPk2VuclDXvKRnzTquvbf8k36xP6jCi3NT8lP
4p3Es9DJLIW1+iQKUM/6H7mYgXph+saekrkYx0brV2UJMrkFuc2uGA==
           "]], 
          
          LineBox[{593, 506, 436, 383, 301, 583, 496, 426, 373, 337, 273, 568,
            481, 411, 358, 322, 302, 274, 275, 276, 277, 278, 279, 280, 281, 
           569, 482, 412, 359, 323, 303, 584, 497, 427, 374, 338, 601, 514, 
           444, 391, 618, 531, 461, 635, 548, 651, 282}]}, 
         Annotation[#, "Charting`Private`Tag$652023#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWYVGUYBuAhpeNSKWkWBEkVkEZClE7pEJTuRgGlwSQWFQR26e7u7g5p
REBBuqQUFe/vx329z/ucc2Z35pyZbK261ukSJxKJRMWNREZTKX4ksjteJNKS
+XJeXpHHmS+zWL7kvP7yc/kHlstvU1meambjGBvtm82yXGSb61qbV/V7zEHm
ErMQp8Nr2H8yX+MIq+0bzdJc4D/XjzQTcYAZjq8yi1JfnmFGsUXeZpZnjGve
N/foWrFAzsercnR4byyRLztvgPyP/CNV2K5ro7smD6YwL3SjdImZaW/AWN0H
9r3yx6Thim4H46js2D7dJ6TlN91Ooqni2H5da9Lxu24X46ka3qeuDem5qttN
W/0f9iEUIcL3+mr6g3JbMnBNN1D3rzyBquFz17XTXZeHUpRJ9oyskePwpZyE
WXJDZso52Rrut+ury4fkdiyU84d7Jo8PnytL5XVmifB/Ov/zcO90+8yJ5gqz
MNXkaWZ2jrPJvsV8l1/D5+na9uYN/V5zmLnUfJMzvGOfbGbiKGvtm8wy/EJc
+1dm0vC5MNu+OlxHI3mWmSs8l+Ge+1s15MNyezKGz9SehmXydce/kF+EZ5Tq
4f3oOuhuysMpRjy+1iVjjtw4fPbOqxmeabkDmbihG6SLMMleg/26jvZb8giK
E5+J+lrhPcodycxN3QE66W/bR1KCBOH/09cO30G5E1m4pTvIJOqEz1vXmazc
1h1iMlOIIZapTKOu8084rwvZuKM7zHTqOfazrivZuas7Qmf9HfsoSpIwfD/1
H+pPyt3IwT3dUbro74Znj1K8FJ47fX39Kbk7UdzXHaOr/l64v5QmUbif+gbh
t0TuQU4e6Abr4jDZXpPjum72++FeUYbEfKNLzly5CbOd1zA8a3JPcoXn356W
5fJDx4eE54wp9lqc0HW3PwivR1mm2DOzTk7Ct3IK5slrzGI0DX/PfJ3t8naz
QniGvF4j86xul9nLXGQWCJ9jOD88u2a68J1khX29WZJz/On6oWa88DtDjOMr
zSLhNaltn27mCPeYzfatZrlwX13bw3wY/meWyW+F76ccY2ZhvZyU7+SUzJeb
MUfOzQ55rtdpHP4fuTe5eaQbpotPrL0OJ3U9w/8cXo9yJGOevon+vNyHPDzW
naKX/pF9NOVJznx9U/0FuS9v8ER3mgU0C78Pun7k5anuDAtZxGKWsJRlLKe5
ay4691Py8Ux3lt76x/YxVCAFK/Qtwm+Y/Bn5+Ut3jj76J/axVCRluB/6j/SX
5P4U4G/dcF0Cptrrcl7X1/5UHsd7pArvXZeKBXJzVjmvpf2yPICCTLCnZ6X8
3PERckKm2etxQdfP/kyOphKx9qxskFOH9yinZqG81ixOi3B/zTzheWGnfYdZ
kdVes5V5RbfbHGguNguG7zSF7BPNDOF3l1X2DWapcK/5H+C9J8k=
           "]], 
          
          LineBox[{1031, 930, 853, 733, 1145, 1017, 916, 839, 786, 695, 1123, 
           995, 894, 817, 764, 734, 696, 697, 698, 699, 700, 701, 702, 703, 
           1124, 996, 895, 818, 765, 735, 1146, 1018, 917, 840, 787, 1169, 
           1042, 941, 864, 1193, 1066, 965, 1220, 1093, 1248, 704}]}, 
         Annotation[#, "Charting`Private`Tag$652023#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HWUVVUUB+A7MDOkrSDN0KCULkBAQroEJCQEgUFpZkhb0iBVykBlCYoN
SHcI2J2sBdaSlJZGym//8bF/e5+zHve+d85kZGZ3yEpJkmSrf/akJkmv9CS5
kJYk79KPGhRgjHlhPpOfpiN77e9tdlF+j/7UZIZZZXbKL1OQsfoifC4/Q6dY
09fgb/kN9vm8PvpL8vsMoBYzzaqwS36FmxmnL8oX8rMslBtxTO4c++Sa7JZX
q52YLy9SW3FW3u//y5Qvyx+wVG7LwHgetR6fclC/Tu3Cd9yhn6VWZTu/6Veq
HfiGufH8avN4Pk7pN6s9+IFC+vFqMbbxpX652p6vmaR/W23McXmj2p175blq
LfbIa9TOLJAXq605Jx/wXn3lK/KHDGK+vj6H5NrMlqvxu/wqhZmgL85X8mS6
xFq8L3vlN/nHZz+gT1ikH0wdijDRrES8gzyFrhy0/0GzFBbrh1CXohyy1s88
B0v0Q7mTYhy2doT+1nLykVkW9SjOUWsDzFNZqs+mPiV4yqxk/BbyVLpxzP6B
Zmks0w+jAXP01flDfo2Scb71GXwrT+MduQn/yt1jn1ybffJbHPfZg/TpLNcP
Z4HcgMNyQ16Ub+NP+fU4b3ILTssZcSfkUnG+5BXqPUyPe6g2jXvDCf0m9b4Q
n6PW4RP269fGGYnnZqF+idomzhfn9VvUnvwY7+KZB6u52MoK68vUdvH7MyJ+
b7Vh3HmO6NerXblLfkm9nb/kVWpH5sV5U1tyRi4Vd1Muzffyc/F3Qm7GSbkH
8+S6HIgzzwnPNUSfm5X6kTSiNJPMysQdkp+nJyftH2qWh1X6UTSmDKesnSbL
Wl5Wm42mCWU5Yy3bPB9r9A/RlHJx/s3Kxnclv8D9nLV/mFl+1uofphnl47yb
leMneQa9OGf/cLOrWKd/hOZUiHNpVp6f5Zn05rz9I8yuZr3+UVpQMc6hWQV+
kWfRh//sH2l2DRv0j9GSSkw3q8ivcdfJ5IL9o8yuZaP+cVpxCxetjTa/jk36
J2jNrVyydpkrJPE92XM9m+UnaUNlUuI7Mb+BLfIY7qYKOeL9zW/kY3ksbalK
znhX85viLMrjaEc1UkkjnVzkJg95433tL8A2eTztqR7nzKwSO+J+05d88b5m
BdkuT4i7G2eZo/IGtVucU/4HXTDqbw==
           "]], 
          
          LineBox[{1588, 1505, 1439, 1330, 1679, 1579, 1496, 1430, 1380, 1292,
            1660, 1560, 1477, 1411, 1361, 1331, 1293, 1294, 1295, 1296, 1297, 
           1298, 1299, 1300, 1661, 1561, 1478, 1412, 1362, 1332, 1680, 1580, 
           1497, 1431, 1381, 1695, 1596, 1513, 1447, 1712, 1613, 1530, 1729, 
           1630, 1747, 1301}]}, 
         Annotation[#, "Charting`Private`Tag$652023#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4VFUYBtChuSDdnSodKi1SSilIq4ASktIgadAgHaJ0SoOA0t3lI91d
0i0NAq79Yz3f++6z79yZM2dPlsbtarSNFolEskePRI7FjkTGxI1EUrAoTiTS
gBxEsdTae+yRf6Q8x+3/xVpKFusNycnfehWuyGOJxzK9EHvlnlTghL//1Voq
luiNyMUevSpX5XHEZ7lemH1yLyqG/6/X5YE8k5Neb6yemj/0xlyUm/BSzs1e
+VOuyeO5J3ckPm/oK8wi7Jdfmj3pLd8wWxOLqKhIZIhZKXwGs164B9Ye6jHM
/noWc5b+UO5CBj2RmdAcab5tnvJ+x8lpSKr/af9z+Xsy6l/rl+Sm4TPpr/TY
5k96HnmfWY3rcsR6H3mCfN/sFD4PCfSVZlEOyH24KbchNpXDfTPr80iezWnv
a7yelqV6E/KyX6/ODXkiCVmlF+Og3JePOePvJ1hLxzK9KflIxGprxTkk9+MT
zto/0Vp6luvNyE9izrl2ngtcZFK4l6xwrTkFSMIaayU4LPenSrh39k8O95KV
egsKkpS11t7niDyAqvxj/xRrmVilt+QdDug1uClPIhnr9JIclQdyS25LnPB8
6afML3ksz+GR3JXEXPZ/ppqZWe3aC/MHvgnvwWzGa/ldDso1uSVH8x33lSfL
/5rfhntsLUH4rs3h5ptmctfXyx+QTD+mv5J7hc8Wnh/9ttwufMd6XDOeOdTM
blYLz4D8VTib+hM9pjlAnys/NruRhETWR4Wz7jNNC889a+xpxWW5OZHw26Ef
MmtxW55CCjbopTguD6J6eH70BjyV53HVa0/Xs7JWb00hUrLRWmlOyIOpwTX7
Z1jLxjq9DYVJxXXXbnCTW9zmDne5x2/hHrDe3rYUIXU4U67NDPeXDXo7ipKG
TdbKcFIeQs3w/dg/y9pbbNTbU4y0bLZWllPyUGrxwP7Z4XeBTXoHipOOLdbK
cVoeRu3wu2L/HGs52Kx3pASH9drckaeSnq36h5yRh1MnnDm9Ic/k+eH59Hpz
9Zxs0TtxRW5BtHBW9CNmHe7K08jANv0jzsojuCO3J4rPwvk1G/FcjuVZGSgv
kJ+Y3UkazoT10eGseA/zzFxstec/88fwnIdnwGxJGnujh3NmDgrPhFnS9aPh
/5FCv6dHN/uFM2ZOD/dX7hx+Y/SEZgJzRPh+zIyub5fLk1w/p7+WezNSvmt2
CGeE+K4PMz+3ft5szAt5IU/lHuHM8cRnmW/mZptrncNzGc44McLZ1I+F1+G+
PINM7NArcF4exRfhdb3WAmt52K53oRSZ2WmtIhfk0dTlmf0LreVlh96V0mRh
l7VKXJR/ph7P7f/dWj526t0oQ9bw2+TaIuv52aV3pyzZwvfj2ksWu1aA3dZ6
UI7s7LZWmUvyGOqH3yH7l1gryF/6d+FMyq2ISVz3d3A4u+b/NJUmUw==
           "]], 
          
          LineBox[{2137, 2034, 1955, 1829, 2250, 2123, 2020, 1941, 1885, 1791,
            2225, 2098, 1995, 1916, 1860, 1830, 1792, 1793, 1794, 1795, 1796, 
           1797, 1798, 1799, 2226, 2099, 1996, 1917, 1861, 1831, 2251, 2124, 
           2021, 1942, 1886, 2273, 2147, 2044, 1965, 2297, 2171, 2068, 2321, 
           2195, 2344, 1800}]}, 
         Annotation[#, "Charting`Private`Tag$652023#5"]& ], {
         Directive[{
           Opacity[0.2], 
           Hue[0.67, 0.6, 0.6]}], 
         LineBox[{231, 232, 230}], 
         LineBox[{653, 654, 652}], 
         LineBox[{1250, 1251, 1249}], 
         LineBox[{1749, 1750, 1748}], 
         LineBox[{2346, 2347, 2345}]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-6., 6.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361103972989*^9}, 3.865445422662055*^9, {
   3.865445460925819*^9, 3.8654455200369153`*^9}, {3.865445694161232*^9, 
   3.8654457264389095`*^9}, {3.8654457751293397`*^9, 
   3.8654458752613173`*^9}, {3.865445930590624*^9, 3.8654459730440483`*^9}, {
   3.865446061236844*^9, 3.8654460689573755`*^9}, {3.8654464469315023`*^9, 
   3.865446455577737*^9}, {3.865952161175655*^9, 3.865952182002981*^9}, {
   3.8659522359946814`*^9, 3.8659522660000668`*^9}, {3.8659523006049786`*^9, 
   3.865952342510551*^9}, {3.8659523726628895`*^9, 3.8659523935431986`*^9}, {
   3.8659621960792484`*^9, 3.8659622764384995`*^9}, 3.8659654667182627`*^9, {
   3.86596970915989*^9, 3.8659697322444935`*^9}, 3.8659715219700255`*^9, 
   3.865971717628332*^9, 3.866046869867017*^9, {3.8665720394731736`*^9, 
   3.8665720524250455`*^9}, {3.866573475318557*^9, 3.8665734798920994`*^9}, 
   3.866573684548873*^9, {3.8665741219444714`*^9, 3.866574165526581*^9}, {
   3.866574213935153*^9, 3.8665742254104958`*^9}, {3.866574289889945*^9, 
   3.866574300757482*^9}, 3.866574608906272*^9, {3.8665746546247015`*^9, 
   3.866574771211544*^9}, {3.866574991587308*^9, 3.8665750599865084`*^9}, 
   3.866580159608213*^9},
 CellLabel->
  "Out[2250]=",ExpressionUUID->"f34c0c6c-7cdb-46b9-b57a-43fdaca386ea"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
75gCwYMhat7V2H40/poUy00uWHUr6OLVECo6FvbnVZEVEbKg+y/XsPXou48P
8Xsztl40rh5w865i/v7CUkJ9p9BlbD2POqW8HBoIlHZ7veFLGAKvP5zV/PZn
HMxMKE4/YcX2Z1xBbRefckHbdb0Pn7+goo8TRTdG4ogwbbXPk/s9FeG/3xDH
IuUe9qEKfPk/ZN15NFXv+z9+ZJ5lOCdTSiMSUiTcGyUVUkqZUioqEhkToWSm
KIkyp6RkVgkbZSwz55gd8zwc4zH/9nutz75fa31/f71WryXO2Wfv+77uPK7n
9bH/fVZKNtAwllPUCR4Bc4mnI3rWp8EI8th9xxy23nCke5jsYEWULx4Qr8fu
r0aNCeJDaex5vW8pQAHVgN34yx6HqBSQkdj7nAn7+3WpOjO6s1PAruhc6gns
9bxlE5Eit7MgSPgbfiVsPT/OI8PUyyGAXFgsly3sqgLjCQ8+pXkVgHAGP59b
70ZA3IH9dhwtE6DsOSE1bX4a/OAC9d1XWZH3pg/PJGHrT2aRquKs+zvAGN7O
ezYcq19kqsUY702B58pPQ5SxegX3E9Zm358qVFSBJsmDu79F5AO6oKZLD7Gv
z+Rc2it6nBWZeDhhp4fdH2qGyofvOaQDgmHMAwHs87++t6ok0mUa0PkUPAxd
mwYJ7Lea366wIDsjRUN2YufD56kcL1JFBJD3Nga/5ZiqgX6mWWuT2SSQS6av
ssOuWwl3gFu8GyuSduJxVCt2v+DeolH7mrPZk3mAewv/x6eeSmP1Bd7Pez7B
T1koYwTg/bwd6ZW7aZ9HAd6/O2T7rNzuywTA+3czD0lx+JycArjXUDdpz5u0
xtaL//Mayh1R/P+w+xf3GnHXpY7HYud53Gu0d4dNKQVOAdxrSHFfd9qpPgFw
rzGVDd5cURmFvmL+SY6ah0kVivuK+3wvdpn0N6G4r1CfPH5G4HcbivuKIQrT
rx9s3SjuK7I+CC+ewPYH3FcYRfx6FIyd/6uKL0s6+WL197Nw0z7s/jA5OVLT
5smGxJDAqR5tCvq6qmqgLJgd+dUYJO/8pQfljh+nqAZwILoDtZtvd3aheD8x
N/nYRqtxOsD7iV18y9+rrv4CeD+xxpEbKzlbZdBz9H2WbWsIrQC457AcvNgT
HovV8//nOR67KnVf9a8BeD9xMW9mu/ejBoD3E0vV3grrcGiFnmN+b5OG0n4q
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
mYj/Aw3RFZQ=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{487, 2872, 2870, 548, 807, 722, 654, 601, 822, 737, 
            669, 839, 754, 856}}], 
           
           PolygonBox[{{852, 2869, 2867, 470, 471, 472, 473, 474, 475, 476, 
            773, 688, 620, 567, 530, 506, 790, 705, 637, 584, 546, 806, 721, 
            653, 600, 477, 774, 689, 621, 825, 740, 568, 811, 726, 845, 658, 
            833, 748}}], 
           PolygonBox[CompressedData["
1:eJwV0LtL1WEYwPHfUcvSzLG06ThkaVnZIIiahYOUEpi4ZBe12UCtuZx0ajAI
Hazson+B1fFaeZp0aigQHYIQ7xfUbgZ+3uHD9/k9vrzvwXjz/brWlCiKYvRT
nBlFF0hYjDDKtgPPuclJYizaZ6ZG0bC5jXKOMWa/oy9oJJ8UluyPOP/O3E4F
xxm339WX3OIUqeQ4O6WPuMayc1l2780dXOKM72/aE84T9z2tXeF+86LeoNg8
p71MuOeXDnCbEn/7oafD2+avWqNPtFKXwx2aprma1Kv6WMt0Qeu0Rs/rrF7X
Z1ql69qgK949qh98V+sDLdWf4R3Omr/rU66YV8N75JlntJt6Lvqe1z4m3flb
X3GHAg5wwpkv2kktq85l2yXMD7kczvDR/o++5i6FHGTN/hN/zW9oCv9r0lm3
/8w/81uaw2/nEBv2U+yZB2mhiMNs2if5bx7iHufIYMt+H74IUFM=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{438, 2868, 2865, 441, 440, 439, 488, 512, 549, 602, 
            670, 755}}], 
           
           PolygonBox[{{800, 2871, 2870, 586, 639, 707, 792, 511, 534, 572, 
            625, 693, 778, 486, 510, 533, 571, 624, 692, 777, 485, 509, 532, 
            570, 623, 691, 776, 484, 483, 482, 481, 480, 479, 508, 531, 569, 
            622, 690, 775, 478, 547, 585, 638, 706, 791, 507, 594, 647, 
            715}}], 
           PolygonBox[CompressedData["
1:eJwV0b9LlHEcwPHn7trO6kzbPE2qoQYzvUQICTKTCPQu0NsFSxNqLH9sakM5
1FAENrT2Q/0D0mrKvPK01EEJDAQRBzH82aK+nuHF+/P98H2eh9Pytod3HkSD
IIjwlqp4EFSzYDHPHL/5xSwz5PlPoQdr6GKMY7EgmLYvNzfSx1dO2+/bJ8xX
uM8oMfuf9mfMN+nlC8X2e/YZ8xNylNmd1BcscNE5pZ2MEHX+4Zl/4bvMb/Rv
+D1zVte5Zh7S2zqr57VMW3RD6/WVNumSXtIGzeiqXtUevaWftUh3fTOrm84N
+lrT+kcva1rXqDMP6hSl5hP6nHkuOFfrCrXmDv1IxJzz/mHzMinnVn3GDOec
S/Uli1Q439BuJjjlvOP5ZvMA30naHdcq7vEh/OfbTbnXYn5KnrN2yfBvwmPG
KbTbdq/J3M8kJXYF4W/lLu85DL/lXole5xGfSLi7ZR83V9LOOw7Cd9l/4wgt
m08q
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0ldsjmEYBuAqtUetUru1nZAopTWqRMTemwN7lwOjtWdCUntHrNiJvfeZ
vY+ME5yQkEhI7HU9B9d/3+/zJ9/7/u//pY3J6z+jSEJCQk0fkb18fJUnmE0P
WjLevDy39ELGkkhvs2/yJHPoSQYTzCtwW1/LOIrSx+y7PMXc2I9WFKOv737I
08yLZ9OaiebJ3NHXxVlIop/ZT3mG/Hg2mUwyr8hdfX2cheL0N/slz1IQ+9GG
yeaVuKdviP0owQCz3/Ic82M/2jLFvDL39Y2xHyUZaPZHnmdB7EcWU82r8EDf
FPtRikFmf+UFFsZ+ZFOawb77Jy+yKJ5NO8pQlnKUpwLJVKQSlalCVVKoRnVS
qRH/M7WoTR3qUo80hsQLwCWxOM5He9IZGu8Hl/UlcT46MM2sKg/1zXE31GeY
WSJX9KXxbDoy3SyFR/qWuBsaMNysKFf1ZbFfvB/W9Xiu7yGHeFmr8Vjfymq9
JR/iLHFXehNe64fj/9ez+Kw3ZIRejGtxXtmB5fpK2Zx3+i7ZlWHxHso0DvLC
ervMZa9eKDM5xifrvbI7p+hknSerc4AncV6Zw3G2Wa+RGRzlo/Vu2Y2TTI//
QDblEG+sd8ouHIn3VGbzRW/ESD2J6/oKVukteB93S76ezkt9H7nMtE7lafyu
uNv4b62b8VY/SmNGWRfnRtxT3CEF1vV5pe+nM7Osa/BM3xG/nyaMNivBzThX
nJX/hk14Wg==
           "]], 
          LineBox[CompressedData["
1:eJwV0EkvnVEABuDbnbb8grYaCZqaSYgmRJriolb2tMXazKYsDEm1RBMi0l7V
tChBm/ALavoFpo1hYUhICAl7z1k8ed/3y839zneS6ptrmh5EIpEJkpV9OU0p
bfYTtvTvtNBrp3OsL/CSd3Yc//VPgZ7LuV7LRz2FA32GEb2Qa72Mdv0p2+Ec
8jUxfUjmc6n/lJW06n0ygzlO7Jgs4x+L9qgsCp1b+5d8yzJp9nv5kGlW7XFZ
whKD9qDMY54L+4eMUqd3y1QO9W/yDbP6V/mKG72cDv0ZO/okw3oBV+Fe6dcz
OdWXSOeD/Yg1/XO4V3rsFxzpf4jSaSeyG84W7o8M6j17zLr+JXwnFWTS4Hk8
G+Few7uoJItscsil0W8S2AxnDv9JFV2ePWdPnwrfx4CdxZn+lzG9mDv9t6xm
JdylfQ/4BEov
           "]]}, Annotation[#, "Charting`Private`Tag$652140#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HmUjmUcxvF3ZhCNPbIUGnvZKZI9lDIjpOVkF6Wozmm1nmOro+hkrdAJ
Zcla/ZN9y76bjJ04ZZct++7z++M73+u+5vfez/vczzOT1u2Dtu8nJRKJXn78
gUvJicSPeAPlkMBJ/QIsxCLUSE0kFvMSLMVlM5PRHuWRhFP61BR7yh+iAYpg
mf4KT0EHVEAyTutzm18gf4SGKIrl+qs8FR1RESkoZnYND0JLnDGXR7dQ/hiN
UNl6D4+NeaRZb+Hhsb98il9GTfkQT8AK+1zjn9AJdfzuH348ri3v5HT+hhvz
mdiDs3FxXssv8mCuzye4LadzdT7AL/F33IzP86v8n+vm5UXWLfgTfoaPxXVQ
Rd7L4/CsfDauh9LyVv4S7VDL+m+eiJX2vM4/ozOeQHY8YmYdD0EGzprLp1ss
f4omMYNV+hs8DV1QCTlwTv8nbsrT0TXOGg/gvH41bskz0C2+O3Lign4Nbssz
8SaqIhcu6tfijvwLuqMaHsT/+preuXW8Hnd1s9AjzhSpuKTP7x6WyJ/FGeFR
bNDf49l4CzWQO35ndj0PRStcNldAt1Tug6YogTK6bfwVXsHG+GPRzZHfjncH
eWJWt4GHxfPFFXMFdcvkvvGs416t9/F4lERZ6+08It4BPGl9mCdhk88nWc+V
e+Jp+d94vvEuylk8CnljL+uN/DkayCe5ddyrfDAyf8/N+QK/xlft/xAvt36B
+3E9Ps5tuHmcP++P8+Fv40z4XJwDl+JyvINb8khuxKdjfzwlH+Ef8Jx8kTe7
ZrI8T34n7jfeSetdPBr5UMp6E38R3wPXfKaQboXcP/bCY9iiT9HPl9+N6yE/
rusL61fKA/A80rBVn03/q9wLtVEAN/TbsB07kIm/sBNZ2IVa3r3dvAd7sQ/7
cQAHkd2+v9mrN+qgIG7qH9avkgeiBUqjvC6Tv8brOGQuh+53+T3UlY/G80Yl
eTdn8BhuEv8nuB3fB0ZotYc=
           "]], 
          
          LineBox[{800, 715, 647, 594, 507, 791, 706, 638, 585, 547, 478, 775,
            690, 622, 569, 531, 508, 479, 480, 481, 482, 483, 484, 776, 691, 
           623, 570, 532, 509, 485, 777, 692, 624, 571, 533, 510, 486, 778, 
           693, 625, 572, 534, 511, 792, 707, 639, 586, 2870, 548, 807, 722, 
           654, 601, 822, 737, 669, 839, 754, 856, 487}]}, 
         Annotation[#, "Charting`Private`Tag$652140#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xecz3UAx/HfcSKrsldx1ONh71lZDbLrrIrMrHOOU+Hs0SDi7nCTzHo8
KjNbZTce2UVWhSgzW/So6Pn54+X1fr8/vy+P7933+xPTZ2hsQlQkErnuj+45
I5G8uSKR6dGRSEXEy1f4pD1WPiTP4kQey/d4mbPG8hZ5Onfjt/gOZ3Eh7s1n
eDZP5EmcEwsw0/UV+RP7NG7BiXyTM/g/56/yz3oKJ/EEjsL3zlrxbttAJMn/
cFn0k8/x23jN5/LpM+RKOKV31A/Lw7Fcb6JvlbujcLhPWyXbp3JL3NN3owfy
2z+wVcZpfQWS0RO9UCDcl7Mq+E1fiRRUtn9mewH39T3ojYL2WbaqOKOvQiqq
2JfZWiGCvbY+eMierFfDWb2T/pP8BlbrTfVt4b5RJPzcbVVty+XWiEI3/Rce
jX3OW+t75EFhk//lcugvn+d3AnJu9PX5hznFNpWr8xC+yun8u/POfERP5jd5
HN/n+fy582a8XZ/BPXgE3+VsLsp9+CzP4Uk8maMxx7XVeIWtTfj9ybc4R/jd
yb/yGOz3uTb6XjkOMRigX+B38brzR/RUuQb+0LvoR8PzizV6c32H3BPFMNdW
3bZSboucOGDrh0L22XpNnNPXIg017Kts7RCNg7b+KBzuRa+F8/o6pGMAijib
a6+NC/p6ZGAgBiEOgxGPIUhAUdek+XwdXNQ3IBNDUcxZur0uLukbkYWa9tW2
9siFH2zDUNyeodfDZX0TslEr/O5sHfAAfrQlooQ9U6+PP/XNeMa2U++F4phn
q21bI7+I3DhkG46S9iy9Aa7oX+BZ267w3YES4bmx1bGtlV9CnvB86yfDdxEO
O2+r75MHo3z4TtAv8nvh3XBeSs+WGyJBvsZX7V3lY+EZxJf6c/rX4RnESPlv
Lom+4dkOzwFP5imcCx+6pi6vs73PseHf49ucyQ9yDz7FqTyOJ3KOcG14d13f
jvfbZ3J8eIbDd1/4uXGF8F7yJU7jqeEZ5jzh3XJtaZ5na4Sh8nW+Zn9ZPh7u
AV/pz+vfhPtAKSyw1bOtlzsiL47Y2tsOhHcaj4f3wVbGNl9+Etf1LWhh+za8
SyiNhbb6tg1yJ+TDUdsIPBruVX8KN/StWISReCz8X2B/Gjf1bViMUUjCaIzB
WIzDeExAWdctdE1j3NK3YwkmopyzRfYmuK3vwFI0sG+0dUZ+HLNNQox9sd4U
f+k78REa2jfZuqAAjtsmo7x9id4Md/RdaGn7Tu+HMvjY1si2We6KguG7RD/N
43HCeQf9YHge8QTi9Ms8LTxfzivoS+XmGCbf4Lv2V+QT8qjwd8mR8Mza/weX
Bv/b
           "]], 
          LineBox[CompressedData["
1:eJwVzr0uQ3EYBvC38ZGY6AWQSDjnHjD5SIytGKqTiDBI1GCwdUBL6T1YUFwC
VhxjrWUw2KwSrcGvwy/P8z755+RMblRWdnMRsUo2GNEcitiSB7Irx9nUv+Qh
R/ow1wMRM/LeVmJf/5GjrOufskrHu4K7rVdI+t+wTdku9Xl+3U8s217d20zQ
ss3aHvQ1xni3HTNtv3Iv0HU/c0ONpP9/9kV67hduqXPCKQ3OOCf1vuXtEn/u
jDvm7I+2Mnk+bEXbm75Hyo77Wzao6yNc0PT2H3puLto=
           "]]}, Annotation[#, "Charting`Private`Tag$652140#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Fd0VVUUheETJKF3AiK2IEGkNxULxV7oUUFsD4KgAkHK0AcdIohtOEBw
qPSeDiQUKwgEQo/6KB1s9K4CUhS/9fBnzTn3Prn37rPWznhxZFZ2SpIkZf7k
pCbJZ5WSpAqmpSVJF1yR/YxVsrZYIxuEDOTKP5dVxXS+K/6N/XwP7OLHYYds
Nd8Oa/nBaILf+YE4TE9Cnn1f8NUwg++Gk/QgnKX/s76D7ond/Du4TI/CVXqn
9e/p9ljHV66cJG/TL9Hn1GG4SKfLP6Zvof9Qn8ERuqZ8Ij2ZTujX6RZqRfU6
dYp6u5rvc6bR1XEjP9P+VPVNvpXanT9FD0Ym/ydfR/0gzkC96vmddC804fdY
r6aO58fHmaujkaChfFKcpWfWqB1Qas8QnKeH4xLdFAfpZ3GU/gQFnpnO18As
/r74XdjF98ZeegJ227eW74j1/FBkolA+Q1YTs/n7kYI98nWyTtjAv4xmKJLP
lNXCHP4BVMBe+WIswVLMsl4bc609iGuwT14a54sy/hXcimL5bFkdzOMfQsX4
znwf7KPfxX771vN3YCP/KprjEP8cjtFTUGLfHL4u5vMP43T0CP6K9xi/j+6L
/fTE6Gl6DFJwwPMb1DuxydowXKBH4DJ9Gw7Tz+M4Xcv7e4+eGmdHv0G3VFPV
xupUdZn/OVeth5tkC+xNU9/iW6uP8GfoIWjG/83XVT+MXlfT4ozpftHT/AG+
ujqBbxOfH7NDj0VzvoJ6rTpZ/cVnl6mdsdm+KvJx0Vf0P2o2rtAtcIR+ASfo
T7Hcs/P4+ljIP4pK8S75rPjf9Pv41b6N/F3Ywo9AS6yQz5elYxH/WMwsfpOv
xJf4CgusN0COtcfjO8bdIf8aC2NGkCvrgaox0/JNsruxlc9GK3wjXxS/HXl8
z5i7mBv5Ztk92MaPRGt8K8+RNUI+3yvONXpKvkV2L7bzr6ENvpPnxl2BAr43
akQ/yLfKuqCcH4W2WCXPiz5AId8n7qA4Z/k2WVf8wI9GO6yW58uuRxHfN/oL
R+PeQ4H8BiyW9UNtHIt7I+YbhXFfYYk8K+4kHI9ZRlH0HpbKnoj+wgn5dlk3
/MiPQXuUxjzLbkYx/yTq4WTMYMy5PAMlsqdQH6dibmL+486Lnpf1R3rMX/Qg
iqN/sVw2AA2i76N34n3GO4pzj7OM84nvhhL7m2KFvU+jIc7Ky2Xd8RM/Fh1Q
Ll8my8RKfmDspYfiXPwGvf9R3LHq/wqC73g=
           "]], 
          LineBox[CompressedData["
1:eJwV0klLVWEAxvG3LK8EQYuILC2FaB4Wmo2b5mHZTGbaXVmLbGOpZQRBgwlB
Vt+jcqw+gnoHvdWq0jJo0ihTMxp+7+LP8/yf8557L+fc0mTdofMzQghpHE6E
MJQfwk18nx1CL9+BFK9HGXrtj2zL0c5PYiF+2PtsO5HmF1GOPvtj2wp08EoU
Ytzeb9uFDL+Ejei3P7GtRCc/hUX4aU/ZdiPLG1CBlL3dtgpdvAqLMWFP2/Zg
gDdiE9L2DttqdPPTKMJrfgTD+i1MOpfhezHIm7AZGXunbQ16eDWK8YYfxTv9
Nqacy/J9yPHL2IKPvBpf9TZknevia/GU18Rnr9diQl+Ct/oxvNdb8Ms9A3w/
XvArcdPr8Effik96DUb1eQUh3NDv6zP1Bj0fRfq9+Hx8XrdchxLbM+cSspmf
ie9Wno3v0DbJ58sWXiaX8iH9OJbxET5XXucb5B3+T6+P74jnyUJ5V5bLad89
qB9AKX/p/Bx5jTfr0/IC/uoL7K36Nv1z/G0Y0x8gz7VGnojvy2f2yPV47loy
/t/0c5jSSzCsn8AHvRW/3ZPjB/GKX8V2fOFJfNMfYpbvaeIFKNbbZIXMuf8/
vuJ2Hw==
           "]]}, Annotation[#, "Charting`Private`Tag$652140#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWwVWUYhuENCBzApiQMHBQEVMKEQ0gdug4pjaOOSnc35oxJGzQojaPS
3d0pnYpJp+D1/rjnfe7nW+vbe6+91srXpkO99mkSiURy2kSiZFIi0S5zIrEx
UyJREUf4cLTFCP0FXVukx2JdKbTXb+KVcDSOw3xdVnyqK4B2upH8YmRkwBJd
MjroN/PKOBbHYYEuGz7TFUR73Sh+KTIy4jB/FT/JS62vl/NjHH8F5+UUrJJL
W+8ob5FTcEGuheP63WZRzNCP4gvl7Pic3zQb4Rn5jFkeebP4PJ5kvskLmx2c
N1q+rH8o3LzKU5GPJ8W1lEsiF/85rqHZJvY2lzl/g/wUcvDx1u/ITeM3yn+Y
VbBavtf6O3IZ53Qyt+qq4KJcGyf0e8ximKkfzRfFvviCF0JH3Rh+JTIyYblu
o+5pTOAlUVbXmW+Tq+JknBefi7H6q7pOyIwVunLoot/Oq+FUHBd74DV0tbZD
Xx2n+ddxPMqjAiqim2N2Wq8R15x/E+fFsfprus7IgpW6Suiu38Vr4iz/NvaI
8/TXdV3immGVrjJ66HfzWjjHv8NiXU58qSuM7rEPvyF3xX1YrUtBT/0eXhu/
8XFYonsEX+mKoEfsy2/K3XB/PBu8FH6R11jfJBfARF4q/kNdL75XroPf+V5e
HLP4eL407h8M57fMxng2frdZAcviv3R/vCX3jO9m3tI9rOtuXuP18SR/IJ43
ORm5+fx4Ls03eCFzrfM3ywXj2vBJ1u/KzeIe4cn8T7kqHudr4jqZ70bn3N7m
Pl1dXJLr4Lx+n1kCs/UT+LL4fIzgz8V/IlfEcrmX9fHy7bimeBDHeWkskNdZ
3xLPECbHcx73na4P3y/Xi2eHT8RyXR6M1D2P3roJ/D+5Zzy3WK+rjr76Azw1
fiOfFHvGPvo78b3immKDrgb66Q/y+viLT449UBO1UBt1UBf1kIr+zjnk+Ab4
m0+JfVAfA6z9qm+If/jUOD6+h/5ufHdkxUZdAwzUH+aN8C+fFnvE99An0Eef
DZt0DTFId4Q3jnch/z72iO+gT4O++uzYrGuEwbqjvEm8Z/gPWBHvQozSFcWg
+J48LfrxHNii2xr3E6bwMvGZuiH8mPx63Bt8P38Bc/h0vlJ+FKN5MQyO38TT
oT/PiRPxDsRCeav1bfEuxlSecB82l8vG/2FWw9p4DvXvyU0cPzTe/3FP6Zqa
l3ldPMEvWz8gvxjPNZ9rPa3ZMp5Zc4b1VfJjyMbHWL8d+yI/Lx7vBrlS/A6+
It6R5tt8SFxv8x4M0F83G8TnxPs1vjMWydsct10ugmm8XNwncnWsi2tnfVi8
7+VmuMIP8pcwj8/kq+PZxFheAkPjv+PpMZDnwnZdU7yvO8mb4yqfFftjuj4D
BulzY4euGT7QneIt4r3CZ8cemKHPiMH6PNipa44Pdad5y/jNfE7sgRb4yNoZ
fSvc4HPjeLREK3xs/ay11rjJ58U5mKlPimuqz4tdutb4RHeOt4n3JD/EX8aP
PJ3/oVW818z/AQOtOL4=
           "]], 
          LineBox[CompressedData["
1:eJwV0blPVFEARvGLkCgMikKsDMiAUIk2gJYiiRU0FBQWJsIAoxj5JwBll6Vz
qYVEFllEsDEBtXTDlQ4LERUaCxJQf7c4ud85j3eTxySbOhpuZoQQFlGcE8Ld
7BAq0XsohEc8G528EO+0JvRr33kz9vhj9GFSz0GXXoT3WjMGtE2ewj6fjXdg
Sk+gWz+JNS2FQe0Hb8FfPhfvwLSei1t6MT5oLRjStngr/vH5eAdm9MO4rSfx
UWvFHe0nb0PAQrwjfod+BD1aCT5pbRjWfvE0MvAk3hG/Q89Dr1aKz1oaI9pv
fg0HsKitaEnc41UYjt/Fj6KPn8IX7TWvwENeE+/QRvm2fR2ZeKqtaiW4z6sx
Er+bH0M/L8OGfQHL9lfP39hnMM4vYtuuw8t4t+dj9o7djj92A7Liu87zmLWz
EiFctZf8/QtnKY5rD+Jva19GGT/HN+1LKOLPecKZ5qedo95fsPNRwAc837Ub
4528nH+za3CCP+MHnSm+7t23zrOYiL+JfsWutXec9Xhl5+k34v/T2e6d/6m2
Yu8=
           "]]}, Annotation[#, "Charting`Private`Tag$652140#5"]& ], {
         Directive[{
           Opacity[0.2], 
           Hue[0.67, 0.6, 0.6]}], 
         LineBox[{436, 437, 435}], 
         LineBox[{858, 859, 857}], 
         LineBox[{1442, 1443, 1441}], 
         LineBox[{2104, 2105, 2103}], 
         LineBox[{2863, 2864, 2862}]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-6., 6.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361103972989*^9}, 3.865445422662055*^9, {
   3.865445460925819*^9, 3.8654455200369153`*^9}, {3.865445694161232*^9, 
   3.8654457264389095`*^9}, {3.8654457751293397`*^9, 
   3.8654458752613173`*^9}, {3.865445930590624*^9, 3.8654459730440483`*^9}, {
   3.865446061236844*^9, 3.8654460689573755`*^9}, {3.8654464469315023`*^9, 
   3.865446455577737*^9}, {3.865952161175655*^9, 3.865952182002981*^9}, {
   3.8659522359946814`*^9, 3.8659522660000668`*^9}, {3.8659523006049786`*^9, 
   3.865952342510551*^9}, {3.8659523726628895`*^9, 3.8659523935431986`*^9}, {
   3.8659621960792484`*^9, 3.8659622764384995`*^9}, 3.8659654667182627`*^9, {
   3.86596970915989*^9, 3.8659697322444935`*^9}, 3.8659715219700255`*^9, 
   3.865971717628332*^9, 3.866046869867017*^9, {3.8665720394731736`*^9, 
   3.8665720524250455`*^9}, {3.866573475318557*^9, 3.8665734798920994`*^9}, 
   3.866573684548873*^9, {3.8665741219444714`*^9, 3.866574165526581*^9}, {
   3.866574213935153*^9, 3.8665742254104958`*^9}, {3.866574289889945*^9, 
   3.866574300757482*^9}, 3.866574608906272*^9, {3.8665746546247015`*^9, 
   3.866574771211544*^9}, {3.866574991587308*^9, 3.8665750599865084`*^9}, 
   3.8665801600110846`*^9},
 CellLabel->
  "Out[2251]=",ExpressionUUID->"94431d70-6c8d-45b0-8f35-28fc46a3a312"]
}, Open  ]],

Cell["Periodic Re computations Skeleton Code", "Text",
 CellChangeTimes->{{3.8636129580817432`*^9, 3.8636129685064144`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"f03e7ea6-c5c3-4d65-ba41-05cf4f23e612"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "50"}], ";", " ", 
  RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"\[Tau]1", " ", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
  RowBox[{"order", " ", "=", " ", "5"}], ";", 
  RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", " ", "=", "5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", "the",
     " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", "in", 
    " ", "time", " ", "\[Tau]"}], "  ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "0.2"}], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxErrorInitial", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MyAppend", "[", 
   RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"f1", "[", "t", "]"}], ",", " ", 
           RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}], 
         ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"f2", "[", 
            RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
           RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
            RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}], 
     ";", "\n", "    ", "f"}]}], "]"}]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Js", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxcountAlgo", " ", "=", " ", "10"}], ";", 
  RowBox[{"maxJ", " ", "=", " ", 
   RowBox[{
    RowBox[{"uBound", "^", "2"}], "*", "\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
    " ", 
    RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}], 
      "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
         "order", ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", 
         "maxCount", ",", "maxJ", ",", "initGuess"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", 
         "uBound", ",", "K"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    RowBox[{"ICs", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"xdot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]dot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"errorInitial", " ", "=", " ", 
     RowBox[{"Norm", "[", 
      RowBox[{"ICs", " ", "-", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xs", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xs", ",", " ", "x1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"xdots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
    RowBox[{"\[Theta]s", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Theta]dots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"us", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"us", ",", " ", "u1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Js", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"Js", ",", "J"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"count", " ", "=", " ", 
     RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "count", "]"}], ";"}]}], "\t", 
  "\[IndentingNewLine]", "]"}], "\n", 
 RowBox[{
  RowBox[{"p1a", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
       RowBox[{"us", "[", "t", "]"}], ",", " ", 
       RowBox[{"xs", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
       RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
     RowBox[{"Filling", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", "\"\<x1b\>\"",
         ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", "\"\<xdot1b\>\""}], 
       "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
     " ", 
     RowBox[{"AspectRatio", " ", "->", " ", 
      RowBox[{"1", "/", "3"}]}], ",", " ", 
     RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
     RowBox[{"GridLines", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"None", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p1b", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", "Js", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1a", ",", "p1b"}], "}"}], "}"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}, {3.8654474644860983`*^9, 3.86544746739017*^9}, {
   3.865447584859602*^9, 3.865447593586812*^9}, {3.865952499809149*^9, 
   3.8659525292967024`*^9}, {3.8659525819378333`*^9, 
   3.8659525893724527`*^9}, {3.865971536327427*^9, 3.865971615231144*^9}, {
   3.8659716506068087`*^9, 3.8659716545185547`*^9}, {3.865971738635604*^9, 
   3.8659717394583387`*^9}, {3.865971771360116*^9, 3.865971773325487*^9}, 
   3.8659718432830696`*^9, {3.865971878869669*^9, 3.865971881703761*^9}, {
   3.865972099999814*^9, 3.8659721093028316`*^9}, {3.8659724284015865`*^9, 
   3.8659724335579348`*^9}, {3.865972467781967*^9, 3.8659724678729377`*^9}, 
   3.865972527892706*^9, {3.865972575741376*^9, 3.8659725758223476`*^9}, {
   3.8659727852052574`*^9, 3.8659727853102245`*^9}, 3.8659729110299406`*^9, {
   3.865973909258086*^9, 3.865973915857973*^9}, {3.866046878808134*^9, 
   3.866046926929607*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"72a8bca2-8c79-47e1-9329-ba71838bf03f"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739225468273`*^9, 
   3.8660468881991024`*^9},
 CellLabel->
  "During evaluation of \
In[3593]:=",ExpressionUUID->"bf290eae-a43f-49d7-9339-b2243ae37c94"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739225468273`*^9, 
   3.866046891437058*^9},
 CellLabel->
  "During evaluation of \
In[3593]:=",ExpressionUUID->"cd6bb23d-d8c4-4716-983b-0de7686d2d38"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739225468273`*^9, 
   3.866046894602036*^9},
 CellLabel->
  "During evaluation of \
In[3593]:=",ExpressionUUID->"0c1a4332-e373-4458-a201-6424f126a05d"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739225468273`*^9, 
   3.866046896745345*^9},
 CellLabel->
  "During evaluation of \
In[3593]:=",ExpressionUUID->"5ebe1bf9-6c68-4fee-b834-0534e8e32093"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739225468273`*^9, 
   3.866046898652729*^9},
 CellLabel->
  "During evaluation of \
In[3593]:=",ExpressionUUID->"d4784836-8854-42b2-b620-4841c22b6f42"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
xYwfeApblVIfOmzfiJ9HCBvZzBB1fEK4748bdKy4l7GmJoEFUu5JC7bE65Q7
R+zsl3+GeBbtrfLKW/iAyp9wPdVJKH6XxcE6QcR7yTt9yVVTsNdzJcmYmP9H
Arp5RiOjQXjl0CVHifPY4lzmGr+rU5D+U2OLDbG+v/ocMVz0m4TGDnvlIUJf
SlWqfKvcT+j3x2rzJsT7zhqPpr+MiSFadlbIyxVkpDp05fni1QfQODitcOig
GA6xjexSaJ2EkE/VMe+u0fGOZvJV4RcsADfRVeqEHtNl8N+1TJ2CMem44xuI
++GadSodd44E6yPn+EI1DLCdqkGSju4UfPRJmc8n1uPamD+aPoosKFSKfJxA
rFdGiM7fcctAKPY7KKasg/BO7U6TmaEp0GzdOKdCfN95742Bda5T8D3mXf03
4vOiXK+UpE1YoBCb6ZlAfF/UQ9LVtBkx9FUptLJDloxEAr5/FqizAykp/Rti
GbN/yk5WQs7HKZB29QsZJcYrTsiTv2c5Czz2b125mXgdydnkNaXlDxWf98we
PqGO0xMT1hp2TEEfl1/bCeL6HaOss9scpsDY6kLkKuL6a9/x75iZfQLeL5KP
HmuXw/8eoC/CuVPgcuiE40ni81+apYLD56dg/sB9rWHi+xvWmBc7+01B/sP7
RTuI1yly/1btWxBDbVK5+h5rCT2+5Pf9v3+I7fe5xG/K2Og3C2y/b8sd5cnx
jnFg+30KZsnxf+QHge33nc/z2R/XQge23yd7Kloy4X0VsP2+PdWKW8fdfgLb
73uWVmT/Ounnkt+3++jF/etflSz5fUICviLvGquX/L7NYc58e+E7sP2+a8UK
ckL6wUt+3/oI58Ox6njJ73NvrPxF8Sxa8vtmff69fiRZteT3oSDyQql1w5Lf
9178vGylbduS33ekwMgy7z19ye/r9l4XOHmjZ8nvUzhb51On1bfk99UOFblE
7Sxf8vt8yg1fFy6nL/l9xc8t1Lfe7l/y+/gFh981VY8u+X2cSkn+UzqTS37f
rkAVqaLjLMz2+wpjFmROnGNhtt9H5hQhDUtMYrbf92zI/rjTtRHM9vtGGCXT
D6a6Mdvvm+y/NM7RWIbZfp/YslsHqO6RS36fYofr4NZ15Ut+n0HI4KymYvOS
3+cTvsn0sit9ye+z4xy9ScntXvL73tipLXsg2rvk922v7j7EpcFc8vsa+6T2
fg1nLvl99yWSi+JMmMD2+wqc5tKjjbuA7fcNPdsb/zGsB9h+H9WvMCJdggFs
vy9Nnq+t+V4PsP2+Zye2bdwp2g1sv69nXu6W6tFOYPt9M9Qn6x4d7gC233cH
rznaSm8Ftt+3WZV286NpI7D9voMxBx+lnKsBtt/nOkr5lvpnAdh+36U8K5qQ
Ggv+iq14tYvaDB/cBW87ZTRDUYjSuoyidlik845Oz+UDa4LicEqiCyJ8Jy7y
6Dtjq7J+v9S7DGg69JbrhPS/JT/w9cO/ooo5FUt+YHnF5yjb1rolP/CCGv3m
mdAIYPtzDRLLZcP1epf8OVu3s8za2wOYWnfB+U8GB5KZ+i32J78Ri+SGRUxd
4kLhGpaJ42+GceceVsH1bdzIOLs5zCF5HOdfq/z7aZ4bbXlyv/7ggym8mP6x
/2IxCX3b6RcuHcvCORf/qzwZTkY3+spZ+Q+n8EqjGgdnWx6UF/lN8hHHOM60
OaW76jAvYvE+1ZNYNUDk++OD7sv5ED4c/0hnUwNOv7pKV7WXD903LJVIu5iO
iRLcTPgXP8K9T7db92WBg2THkR9uAghHjMoht1r4cI3zSs0pQdTlfe620t52
sFk2vnOzvBCSaplXlzzaBZm0tPzccSEU9/RTcrEoA+Iu6UuE5gqjStLOpneZ
vRB6/Zradn8RVHD7489cVya0hLg6aV2ioIzjpkbN/kyoF9zx99AKKuoYqgPB
x3QQchCPfupKRWa9L4YbMrqh+/qIjOAQFSk/+k/NhYcBuQefcwwa0lBAlMUT
D3oP2OaIZ9hgGmKqT/htauyGjqHHJs+URdFfs/Xbk3Z1AdsfjeTOKyc31wHb
H2XHV7Y/GquckBTeNA0hzmv23bnQCK1v0r0D9Nqhr8kgrpSrHd4rq09fTy2D
A24DpXf3dMKJM9Nl21piobtaNq4lqgfSJpRjpc3/LvmndMvQtw8lypf807fk
ocO8V2uX/FN13c53LXMJwPYz50Yf77xynrHkZzru55NZZtyPP5k2pw57c6BX
vh9+Rj6pwR3vNy36qHAhc92gM5SOQRwb+d0gnJMbtZm1lusWjuGXN97/airk
Rqc0EspDhyaxZIB1s2EwCa2bjuVSfMbCBan7hzqsyejOi1h5FQ4Wtnb75Fm1
iwfZSjecX5CewDI795XcEuNFO+V9dijyDOO/z6+8durmRaGv60mIrxOf9Fg9
3PWFD20/9O3hq4pcLPakf9tlT35U89r64G/Tn8B1Zq2X0CkBZMRQqd52vQpc
H258NSItiKIesdwEmK2wNUH3FWNYEO2yMfAKte2EinsLslp/hNDIGTPLots9
EHsiM+RroDD6F/3rfdLNXoiZHl59/IIIcjowcZRkxoQtU6Oma1UoiCsgTMHr
DRNmnLmP8nBQkZH+Vj4H4w44Vfqf8oarVIT+5H+/tKYbtgTjcypVVDRnsFuz
t7kHBD6PnGraS0NHoj0rjEkMqFsxKIxiaGjGXPa2yuYeQO5jGaoUUZR62mCv
wIcuYPvJMe4bbvqvbgC2n2y5d5ivQmEeEk5Pf/j8sgOkxO9ZLR/IhASLLVIq
I13Asnt/UujARzxY8PNu4MleiA1S8PB8WIDbnzAlEh/2g6/HJkntc1U43ODK
LUr1EHzHUls1DzUs+cMTnrtIDw8zcU19Zo6BDAfa8/bDpY+BuXh3Nx+6HMKF
Bl6pbTLMGMFra3ehvVe50aKzq9VX9wk8Z7mY67yRhJgr4ouPTEzhnp6+WStu
MopofdaYG8jCGbzXf/wpI6PZCx5lyU2TuFCV4/La9zyIsf9TT1LWKDaPNS/I
uc+LNkfHrFQXY2K1cfX9L47wIftgBbffD6oxozpCyPSbABK2/zpsat0AZUaV
ar88BVHDCoEM2rUOiHN5XXfXQAgp8901vUjE/y/vHeyOqAijE5bwOOc1A+Lt
O188nBFG4VPTtm1kJvi192hIZ4kgh6IOzvIgJnjvFg0wD6YgzV2KL884M+Fn
qIW6zxYqir51WGqZWyf8kypf1f+GikQcPa219/VA6EH5DiY/DfWdOXbl53IG
PK5fn7h4g4aSSnlkwr/1AN/NPXZvGmiIP1yIrnKvG9h++xv/xQX/17XA9tvZ
8YDttyef8XCt+DYD3MmxVAmPBtibG38yJbADZhb6r9a+aYPM8wdN5eIrgHHY
2EW4hA5Jx8yezIQlQ0xd2tab6j2Ql555NKnq95Iff6/qrPfq7WVLfvzoSkO7
vuiaJT/esZcS9fbVF2D74xX3NswGdPcs+ePrbbuMTcr68IxSWB2/LQdaSBgP
VW2rxLohM2qGVC50eeH0O7XEAcxTuez1DgYX2htD+2F8agzP2fr/HP/CjQws
yy5Hh0/iaOfCaj1nEuJ67/U12o6Fdbt3zH88RUbJSJJ1cAsLi72SDHgow4MG
Htg+uB4+gYukt/lGsnjQ12Wew19+DWPzb0M3bxXzomVqCk7PH3ZhqWDZzMxg
PqRWteX1it9FuKrGVVrkBj/K3leZ1HT1M+Tf1VJW3yWARpLKfevKKsDG+9/W
RU5BJBXa/iTheQtITDsezq4VRCbh+XsF5ujQ8DmyiDtaCNU7qtc7r+mBmH/T
Z9A9YbRfqWT90IFeiIOvIWe1RZBzetSGKT0mGCuq1IpRKegR59YgpwgmiFtX
rS7opiBpj8agS7pMcHCetnI5Q0V+pdvC27K6oO6jotOvf1SU9t9gmHtGD3wy
k3fW30xDBdsDR+0pDBDKbkiJe0lDDi1WKdxGRH4pj7dz5hJFWn+oX+1buoDd
nyj9XCQj8bcB2P2JN1fOjXaMzEP6bT/Ln5s7wGbtxdIzFv/g1Ma3uX/cuuAo
D6eNgHoE/lR8iqzUxYCh+4dntIzy8F2/epajdD+4h8u9kHpRiYtIKgfNLYZg
tsp3LDiofqnfIL1OYGqxqBfLlE2qDnFxII/TFg2Jspk4pqbixgYXLmTrP+H9
etMIfsz/6kn1MW4Uz+fYbSUzgU2te7MDJUio4enW2c+/p7B9xdFxMwYJaZbt
u8EfxcKa20xzPH6QUZvVqxLqVuJ9TetrZT486O+eE+RPZmNY3NvYZ+QyL9ou
e0GxM7QPV0plST7bzIeu3ipSUKmtxYmTGR+fhgkg0uedRotzdZBuapWfd10Q
7VHZevRXbTv45Od6GmgIIclHPllSyV2Q1iQpw08VRvJRh79HnGHAB+ZKA+F2
YeQmcctqpKsXgpTivynHiyBt87dfQ58xIcXyCI+hMwWpc1r9OOrJhEP6J+Z6
FajozZ4zy27wdUJvrt1FDT8q8X3LyiK5ifh9xpvj3hwVCVz676cmoUcUfY1r
b18m9KqqaYlsSQ9orFRewVNMQxmPqlabfOoGdv/G4OXKMlmNOmD3bzr81UjH
ni6C8uWfdDHfQXDZfSXmikIdNr77e/JAyCJcP/FJZIjRjzfZ/P6T3cmNXuqK
P36xewr7vBfsOveFhEZzTe2Ew1n40DPd9hVPyIhb+Iosf84Ulraoz364yIs6
uVZw/OfbgQu0jR3c64VQYLCh45bcHnhX512rmCiMdmuRnfpe90LEV7X3+x1F
kOXEczMtBybw5aUNbtOmIInagdesECZYZUu7vxeiIu3S/hdPJjpgo9z3rqZb
VGSuEXAxwKEbnroa7X3dTkU/SJ775SZ6wGIGrzM7QkMqVvToD8TrnZXHTzXJ
DsPYz7+WXFvT4Dn9+fn0XRyIvvO1fD+pGL+0WFZ45RAJve9/EpWhwMLn5n24
bWXI6Ny6g0m7XVh4X+OdDxO9ZDT5vbmw22USf5r7VDEmJoKKLC+Feskx4elr
hWxKkwhiUFw9XF4z4aJgw6o7XygotV13v7QNE5Q7HtmpAhVVnWhQNRnvhKjr
GxtffyT04DHNnSo3e2B8Y3rWWUkaalHOFV4jxYAO+enHns40JHQmVUwxtAfY
/SyS+b05i9kaYPevPjlx7m+Wm4WdhT13u6QagG8qWqBmJx24/H7qnLNug3cS
lULH3lfCngSx0/8F00Hx3fY6Lf5vwN3gcTeNk7humM7tAZ1fS/2tITXavJdb
6VJ/y1qZH99CNUv9Lfdhy9TV1inA7jc57c2Sk/nYs9RvKjop8X7Muw9Hes9e
fWnKgd5HS9vFPa3AD/1atX9xcaEkvULBRNEBvONazm/XRi5U/pMV6S0+hj/f
5Pnx8B03upp3Qm/RfhL33pzVK7UhIeGDqxnNl1j4ufPmx1RtMhKTP7SlX4eF
e+SLX9ZQedBOozzJisYJvJaSdGNHHw/ilTh05Yf4CP55aLvJSAYvcj7XfBI0
ujHH6jUqm7350LYTT7Xo6qU4ZfGY32VTfvR9i3rpwW9xoCpQc6dIVQBFqFBW
Xl8ohysUUU73cQH0YUKqd2VTM/Cu9l2zpVAQeZy0amvAdDhfeFPucpAQWpuz
nqt/vBvkXYPS3G2EUamSfEiiSi/Em4pXt+0SIdZnztxZHSaM7tXx9+GioJMD
qs43iPgdI/+rU7mBgnS6TwaCARN49I88jT1FRQeUjJwe+neB6o6zXtwZVLQ2
y2TL9aQecEbpVIoKDX24e9c0UIxY7yv0+Jp9aSj4S/u7U1ZE/r/jfnTtHLH+
65giT1ldwO73bfxjMdBKawR2vy9iNnnnDqMFyOY1Pqyx2A5z/nxn723Mg9gA
o3C+Y11QG5zDEYZeYMHS1UdtkxgwsVKlpFgjF+csK7c8z+wD2jpjvlbVSnzZ
WOQTbcsQHNIRvzKzu36pf3fi/ZV/63x78eOXa/7eYS7CXZri4vo/A7i+5IdH
wA0upBssbBXRM4xTog7FrdnPjficZSseMsaxxLXzWbICJCSX4hhxLGIKp+be
s6U3kFCcweWMmhgWflxgrNsfT0aJzlW/yeemsE6x7E3F+zzIkqVIIqWMYWvn
WmsPQ16UsLl0JJ2oJxQT+bgFFPhQ/9bNfKHc9VjUQ292jZ8Aipbb/857fx18
6fn28sRFQXTqTWLAbp92cB5qvpi1UQid3ums/+V+F+ybYthbcAmjczsFuEp2
MED53Y9v+lXCSC5+kPmzqhdCjgiOJr4RQf2AGE+IeH34kXlGsQ0FZbqUTV0i
4rlfUub5V6upSO+lKde9XDo4hWc9uuJFRR8fSs/r0LvhBf03JWuCivabqmwV
EWbApOWE9RYTGuKoS1TcXd8Dhrbh13b/o6FR6q9C8exuYPdDh3Vsnns9rQN2
P9RoxeXFs2OLgNNeH8VGg/D7+31y7r9aHHNjxKTZeRGGNp4eOR/Vj+k2W36f
rONGAelu0Y3LpnB52J5L9TEk5Kl/VLL8JQt7yetY3Hckox06mtZp9ClsMyvz
eX6UF2lHq2yuPErHxy9tKOwqFEJaCQ8+B0T0gGKg4s7rb4VR2lDzgIZHL0TV
+NJzrUWQ6uUMf+frTHjTWhP3aScFaZHurXpBxMMvsn4MQx4qajNftDaI74AM
Fg8v2YaKAnm/u73R7YZWoae69AYq0v29YZ02swd2VRv9kT1I6BOR6RL7+R4g
PUA8X8jDkPBq92XnzenwpUVZlF+VA/UGkju0jhXgw5be+cN7SCg9bO6rjQgL
vx399WCASkZ9tauUdb1Z+MFNu01nm8moo9+XYZA4iVV+Htq6m1cESf7d6xwm
zoTnf9w5XpaKoCtHT6IpIt9MyE3WDsZQUNjPPi43Ih/Z7puoatxJRc+uWgu0
pnfCtoMP57JiqGjyiRT1I6GfdNKGKqKoNCRCMtcWIOL31wX/FQdvE/cv7mS1
L64H2P1h7cOr6m4crQUTj9dnqrxIiDdRjSL+iIUFT2rc1rlARltdudLPSLGw
uFy8+1Q9L3r10PC5e3Ynfid9yrjqlAjSyyU71Z9jQq4IZVXYKgo68t9Bn9pw
Jjz+MnDWeoyCbNfQGqgHmPBkzZiVfTEVfVc8u8hZ1gON3t49weo0dF44Y9kF
AQZsT9BpSgsfgtjcqW2GQ8T6rTK+G0XlQNZ7L3DLNWbjJKtb//jkSeidmUe1
ScMU3tC80pExQUIucxp2n8NYOIB0+G7UdxHUbF15lC+ACatPqem2eFFQQkPb
2TeuTDAaWQPiwUS9Kr0nYoTQtwMlhiNbuGnIVD3huLwEA9j9a4pvju41hUUQ
d/Pyjf+6CNto7yYzNw5grS+NFi2YhArpO79WEvqtoOpFPbcQHxI3e6DDbdKI
w/yKrX49FkE+5v5fTYj6yf5z+Lbf+hSkwBKX+UXUV7tYa9X0GVTUunO8xX2h
B0JWKwV9OElDB8TMcrgHeuCakkk4j8Yw8HKeffhK/Sd0XI0sqjtNQsWlO5jq
e1h4GZ+xx6gKGSlJ73rof52FvR2zPbwYIuhe0aSMOVGPR8Z6pojK0FB5hMob
0goGsPvpX30q9j/4WAPs/rn5uyOfXc7Mgn6dp1pxZz0Ub+i94OVDB3ejcPVV
p9qg5oLfNQmlKug8fwPm7tFB7DNlqCT7O3w5ayPd2t0NF4pOGOya/9/++q8x
7ZIykdKl/rqkzoWju0Rqlvrr3xgrNzac/gbsfrfNSYUvD5/1LPW7u9/Iqhhb
9OHxPR+Tms5xoGMLf52+dZTjUKGKioFZTuS7/YKyb3Y/Ltm5qlS5mgtN2qhE
HJ8YxQKj6Lt2JDdS6b12Qun8JH56TYwqYkFC7SW/6W+MWDgxNzE3E8hIlLKg
1q3Hwnq9Sq84BXgQJdnFP356Ap/07L/wqJMH5QVqimWiEXxJtK4iKY0XVWvf
3jP0qhuPmr69YOHGh/JnNHdr7ynDawO3HhEx5keJGs8/74uMgfOnwlcHKwqg
p89ObV4fWA6t5T+u5g8IoPHKFd9DHjUDx5ZQ4d5sQZQ16H3g0Fs6RBqdLQ54
LoRkNyjfU2rpho4LdOY6C2HUfmwnc9vqXlAdPzgWvVUEzTsxjf/tZ0L6YQOb
3FkR1B2W9EWJyM/9D9R06iopaH3meK8roYtO/BkN23WCisqn0p+a3ukCw9kx
v/fpVGQs+mKZ5rse6Ezga+xXoiHJk1d6dJYxIOWA0JY7T2loejOdutm+B6oO
j6uzWMR8SYv+c4PcDWzeoPDaWm+t3Y3A5g3eyj7lsvNZgENl+3ctdLVDeH5M
hs2yfDh+MMUrYXMXWJpw+ReaeuO0EzyDgYEMSHwkUbQp4R+2rtOV0yvvA0gV
69syXYHV+Dgu9kgMQZvlsRp94folfsANvQg+a9uL4/x/3cpuWoRnPBatd0MH
8PiReLEcCy60Y88mo+bMYax7IzI1dzc3SpswSJUpHse2/SGZ3dwkdJo5au/k
O4WNM1+oyVWRUIqX86kjsSwcs6zBNzyGjP590bJRs5nCyQH37PXu8KDV7yxm
7jeM4ZcT4sYVJ3hRb3fL45W/+3HpnY+OeTJ86JVIcU/fq3p8sHRFdL8XUT/H
HxbL6KgFtfhz8wFnBJE81dTt8pV2cODq1XVaJ4TW0L5rCpp1wcPH5TIhs0Io
5/6XrrG1DGC4kbsni4WRUnTsnsLCXljRtIdqF0yMZ+yMbPoTol5+dusNvwUF
VZhwbPrqS9RbJnOUm9JU5NwzeUHsHR2y+K8FsJ5Q0cwOi6zTFd2QHvef5NVR
KmK9Figa4WfA+dr9O6hnaUiv7vc7p5YeoIeeeVmVSUMmZ0Lsv5d2A5vHKFrT
diEnpQ7YPAbbb/E2f7YYuHcQDoXt1xIKrsV5Vj609TcWIaeKvnzzg36sMXQt
XaKCG3Ewxv71cU3hW8H6q5eHkxD1u0/voQAWjrfJ/rjJjozO+pqN7R6dwstz
/iqk9/OiVdVxQ0LxdOw3uOz2shwhZPQpcNt/Pj3QffOWBfW1MLrSEmjv59wL
8hYZnD5mIkiTsjLewJIJFn2dTxibKUjxwRP/qDAm1JTkv1LjpqJX04ti6W4d
wH8lSfKVFRUpPN+ie1i9G/gqFE571BLzv4x09VBnD0RpxnouIBpKv2FaQuJk
QOUHu4xdw0Nw2zzn9vVbDfhg04T1RgUO9P2sS7nESB6O6s3O+76dhKZrJ+0l
uFj44EDlXlUBMuraCoFNviwcmT5kL1RLRirDxZn/ciYxM+jl5WYOEfQjTvC+
kTATKCd/yJzJF0GzqrsPOQYzIUON9G19OAWdXffCmeMuEwL71dy/bqcit5ju
gwcjO8ElSVnY6C0V9T+u5/l+tAdsH3g1aAvT0Kkt8zu9iHgtfa2Fvsaehqqr
faPJhL5m8ynPv1+KcLGvBQ7Xr5JibkR9WySwRsmJhVVfp6ZOG5FRML9LWbAi
C//u0537VsmLaucKWl7IdWGlRFenYF0RxFT1tVw0ZEKA1KqZWgkKanIceb+P
iCdFIpd+Sw1QkKsb3Mgl6oHE7qd2kgWEfigQtr2T1wMHWTXJDttoKGnAq4uX
0IMcZ3b5+bkNQbn5frWAzHr8tGJdZR4/B7piYGBEvp+F+foSc0qkSWi4qrh0
X9EULqvdukNpiIRsNQujEyMI/fDybrDZZ6KeDvyyv5uY70wTjXVSbhS0ynvV
RQ9iPUQaF5yIe0FFl6QZt/nFekAicJhVs0hFWln6M8bixPP5H37my7TgWI3R
Iuy8L39gKnYRHspkfj0pNIAZn8YUV6WS0CZO/RwcycL24TtOZJL50D6V72GG
Y41YRm7B8/59EfTxRIJTjyMT9qV/ok3rUpA63wLFhhg/099/tk91UlEjXbef
a6YHOJ7ZX/A4RkPcWfuqb470wKl5A8ebasMQ6rJLqn9bKmgwGgrDj5MQeflm
hZ+bWPgn1y2tzQpkJPOBXzHVgdBPAhOxuh0iqPCyp/kTYj4XWMmlf5eiIds2
h4yfxHizeZ7TXD4mtpVEfr5Df+HnQELl990Z3lYsrLRlV8oJfgr69qx41psY
L+NcHde7bRR0Zfl24daTRPyovKG9WY2GZGs0yqNoDLj42kNYhbUIdOnBHmb7
AJYovvwlpp2E3kzqHP8bzcISqQ2VfdEiSEaEy0jBhwlWMmv5Vk9TUebs0XuV
FAaweaDV5/PMSvAiqEXJR4d+JCFpT8+g36EsnLPZeTdM86JyE7vQoIEOXFGZ
V2gLFDTHRbE6G8qE7zqjB6GFqCe6I37Sh3pA5oOOqo7YMARImi42bf4FC1PR
fxMlCT0/EXdI4jELC28w7KioFkG5/as0jhP/X2bCoHBBjIb+k5h+pkHo1bSn
bq+D/EhIw6D0kqUHC89xcaKLa4nxmoBgLUJfahg6sX5NU5B8Up7Evn3E7+E0
VO5KHQJsdTC+a2UD9u7gTvswR0I0h7j/RF6xMM1++bnWdBGkaK68ijOQCdn8
v3uf89DQj3vPs15KMiDqR1Z8xD8Suhw7ZX2IqO/WCI5c1hLlQ7e75n+/+9eA
42L8/nt0loIsSK0r2l4wgbrVRzGpj4pUhLr3JXExgK/nheW/QRFkBi9Zq4n7
u902+MlmDQ0tb/YNJi9nAJt/+k88oDPIrQbYvFORF6dX1a1ZaDtfz/c3vx6k
/AMsBL/RIU/Df+N9rTYgSSSsOHS1ClLVV307bkMndINczUD0DxB43X79Zn03
eJnHsnIN/5eHUrB6fn5lVckSD+U+/zlzZrx6iYdKi9Zzn8z/Bmw+Kf9X+c7U
+z1LfJKAe3KT5H99OFzcrfKBEQfyHHeYTHpWjuOOFC73YHGiz6Nb0yze9GOp
1fm1s+VcSKXrs15Y1yjesaXl27o33MhYm3VaSn8St1iuvpFwhYQalz2Xz9Vn
4X3Xr/e+1iCjoW9zuZ8MWZhH10AqmIcHNZbh7At8k7j7oGCdYjsPerNFLzrO
cATvuPNB2PcHL/Iu9kr+ldeN+x+3T3M/5EMtz3hkJH3KsPF5xfd0I340cevJ
cOGLKLhz29XeWV4A7RaXds45Xw7SXwVWWjMFUMZx5ma+083g/CvCLfuvICI9
2SPX5k8HzYiSqPU+Qoh2m3solsivmccF3GavCCPxHZ+925f3Qr+GieuTTSJI
Z8MHbSYxv6JONBmbsUSQdI6L2BgxvlQ1C1ZSGQVFxeY9e0XUP+Nj2rFux6jo
SgzVRNKqC5jNGYHTaUQ8sTM+//gtofc71TLOKdJQpDzfOgGi3pip69XO9qYh
daNf35/dIeL9VhU10ykaaigcvFIr2A1sPizlsdBdx+ONwObDdsgwL4rHLoB3
yrbNF+rbodLvkRGnVz7IrzJdXJTvgj3Dw9ufHH6MRf3ugpIHA3wNfyYzrvzD
f1K97xdk90Fj6vpPO1srsHgLa9cp/iHwCPjItJysW+K9DrWncM9c7MW7fT1L
mNWLMPEvbPqd5wDm9Io+c96MC4mfb+a6/nkYhxjoZoaqc6M2+dLJU3gch6nu
yMznIOKN3wFeS48pnIgjnv0tIyFnO8VgHUKPbfsVknznLRn56j7vfnZnCptP
xI132/Og53ElJ3wHxrDql61Vd3R50Z9S3UiFgX4c0+T89f1KPqReOt28vKse
G4/NT5a7C6DQ+UsVEl9r4ZpP4udthoLIbK/8moqT7TDqM5hpoCiEQj7GtEkZ
dcGaQq3xjSwh9LNVw5C5kgF5dqr38wqE0emS5G7I7YWGtacj9ANFUFNdhLbO
YyZMB8z6vL9CQf5OkSrFfkz4t+0Vo0mKirwvbr8rH0QHC8gI1XxMRVayrJy4
/G7Q81m7MnWYiv4LigzS5GOAqIjFygdGNLTW9mkgb3sPrN+k/nHNXxp6nvjD
2bG6G9j8XNOPMr6uvDpg83NsPWar4V6/uHEQytaKrhd7UIvPWhhZn7RYhJ9v
dRojr/djy40C6dMl3OjGXh/jE9OT+F/ghfs/Qkno4LDL7wJCr+wWdyvmv0FG
935OLNeansL9615cfN3Li9wC9J2V6ul483bvowl/hVD7SH7mykc98O/ia46O
YGG0q/GQi+KdXuj8XOd3zVQExWWphm+5yoRjI9a33NUoKJBjtdRKor5kxJrb
hXJSkeYP3tNqth2Q+Ipblm5BRbQdt3ktVLvhTcrof/XVVDT8RUJcgfj9hncL
r18HGlpzRXz2BxEffz6wDo3pGILPmfx0k/MNWPhcU0jmGg6UvSwnlKGZh0vX
mea92kJC+udnZ//MTuGXzNawQh4yMuDQrTUn9OYm08SgrkoyOjIoJ3asfBIX
PP49mzgvjCL81Rei+JlQFlKasPufCHIZpX/98JIJsdt8ovNCKeiCRFhoshMT
3mUVnl+9jYoCb1rrY/9OkOtyXhYVQUXXjcujhLV6gGxq2BIiSEOv/vyrXU/k
57IoUr7fTRpqRH1///vSA2yecNfmgkV3j1o49QDf/vKAhPhVQNnxNgunI8fG
CgMyKvL67vpQlYUDTsqoB5XxorLOu19f6HVhxmQo/93DImgHV8KyR6eZcEc2
huEgRkHzT/v5TYn8PpweajPaS0HZZRbiy48w4UD+mduWeVT0XONXh092D7DU
5l92biHqtVcaf7VEGNCttsVq1mEIBmYdR1Z+qscGelQOYx4OFOrZf/hSaSbe
rqKbk7yChD4ue/qJnDOF5aoh6F8fCRnWO9sME/qoqsVfUSdBBLUaVyblPGdC
6eUsyZ8PKIiDT1Jn0J0JBwNkjEb9qSioSO+omWAPfLz9e055gYqiD/RdPSvG
ADbv2Plm0tfPbhEK7g2HrYpYhHUM3rw3M/14d/zik/RvJPTeXeCcE6H/DnHz
eb/l4kO/Vx5Jc9rXhFusJJZfvCeC5AeWDa+8wwT5zK0cwYcpSPY78+rOECZM
RfjsOkynIr2Q4yh8qgdSsl4dnDxKQ7mC53wDx3pAy+JU1zulYVj7gJrZ8jUV
LJUdCx8dJaGTDy4fOarCwgIcD2PK1pBR8mHdj8/vsnDRKeHtaq0iqHYEXeQh
9NiFY0OYbwUNSQ/tvjlJjDebv3SZPpZh3VMDIbeGRjfakdDWh5pN2uYsLLQz
I2qATEHWj3mxKzFeDx0ebdVrpiA81zQqqs+EPP6XKpGqNGT2xOJEtCgDRkNO
X9UbWQRt9yRZ/rIBbFFwg3awhYSOZ9npXiT0RS3nmGlxpAj6KT3U3eDFhAWO
EcGbU1Tk0//vwz1ifNn85je+bcde1BM6N2Ij1+44EtJzMGtsCGHh0JfHHGQm
eVGFS9jXFGk6/ll/Ik1Eg4KKdOj9s4SeOrIeH/JvoqLbJlc6ZQd6gCZ+8JWz
0DBYepylBCb/gpMTSbLHxcnofWBAnxahr0ocbG6mVBDPhxXw8/0rJnyplSs9
KUo8n8bxLRsIPSbk7Tuz7RkJxYp8/61H6LcOPk+1BVkK6nka2v2CyIcXSSkf
XkxS0BZFqZl4xISTtce5Tn4aAmct76sx5Abc1EpZcXiahODGcO8YoScrfm1i
ZqSKoAP1bTX8hJ4y6vcaaCPR0LnJA6d7iPw4nlLKD1kkdCqviCuK0K+TNzLD
11L4UPh6xYxqWiN+Hi+pvfo/Clq8xvGqgtBzMcuM1nMyqUhHQ+jGOw4G5G/8
xHrfJ4JqLlDpuUT8Esz69TljNQ2JmfhdfU7oMTav2smbEOwVXAO1B0oerFsU
QXK11Yp6xPhuutMx4bKOhiy5XEcdiPpDInBQKpy+CId7h31PfhrAAjkepa61
JORzQSZ9LZHflP95iy0bpyJDq5Zxb0EG/DnvfbW/+s1SfJcL1clwfEtC6XdV
r0YGsrBrl0nwke0U9GBKf3g1MR8HK+92l8wPgWhdgPxNb+J5haXXjIsQ8Qdu
xFUS8/OT+EvB3VIUlCcp6kQl7i/uopLQgWEKul1in3hDiwn3G5RqPUZJyNhK
hONgOPH9yfITjzlp6GS8lv+RZQx4mdST65JOQvL1qi+b37Jw+C4zcTofH5qc
TXFVi2vER/42SVh3iSDr0jXRM8T9bPc0+HlFmoYinJGUBXF9TdUvOclCFHTx
5uw+T+L6JW/SvpIWF+Go0qxO2dgAzi79T5/cRUJmFZ9SpqNYuClG8uBsIgk5
/pVQuhvGwsNF8YsX5njRyHp9dPtPB/YS9cr9tIyGar+tuLOTmF+S83f1MpUo
iK/iTlw/MV7L45BO5xxR/7w13FmwhwkblYa7NPhoSMS0+fdmYvxOpv04ylFA
Qk9rHtX8I9bTofB7DZ0jIohXusTChpiPHfNrPkjL09AyTbGjVoS+Z/O+aHB0
Y8yNGvj/9vfvZfO+XYbR95xWeC7xvonRCV0W9nFLvK+13hr6iGTqEu8bKvns
TPCB7CXe11PsKDk/rHiJ97VRady237Ryifddv4F5wPlcHbB531f9HgfEljUD
m/d96jV98HR4G7B53+Wp2075JHcs8b646E60km8nsHlf5oZLnmZG3cDmfaPq
409NbWYAm/fdO7KvvKC4F9i874/33Jo/L/UBm/ctiRpfhlL7gc37rlN/TE7N
GAA273vxlVxhZeAgsHnffQkMqQ+EbmTzvqLphWW6SkPA5n0VO2ftnxLvs3nf
092XB/riBoHN+6rFRBoKVw0Am/eN7pncpvasH9i873nztY7bs5hL+/tvL/QG
W29lLO3vf6R300Fdp2tpf7/XVp7SwQ/tS/v7ldqqHtl9blza39+rJfOWda1q
aX9/S9DYtU/38v93f7+PuCRv0o8l3ncm7UlOkpADZvO+bl6/VX9sSMNs3nf5
ueOTwV65mM378hl4UPfmlmE27zvM/8XqWnUVZvO+rm+OuKfursNs3teruWe4
Q7sRs3nfgR4HX+6gZszmfRV5e/fdetGK2byveXda+In7bZjN+/I9Fc8/0dOG
2bxvnnpM0diydszmfdc10VKX87RjNu/rmRSZ75bVhtm8b117l+KGQ22Yzfs6
yk4k+xi2Yjbvu9WO++/quGbM5n1ved91j31tscT7xgUe/FmCXwN7f/95HhMz
911fgL2/v1MnxLnyQAaw99vf4jOnfRfvB/Z+e/9hnvW3DxLz/H/22xt2OZkp
bB9c4nnNZ5oLq+sHgc3z3pJ3FU2UHwI2z9sr6bKvcfUQ/IsV3/TbjxPxd3yt
tqQPApvvPTxpQ3Y/PghsvvfqJjtvp/0DwOZ7U6w/Odem9gGb793JcEgJ8u0F
Nt+b8IOWtIdYp2x+1nTdmMHJ0BrM5mffbJK3iq+ux2x+dj9PRUr2vSbM5mff
bBTiyIxtwWx+tj3DPb9GtQ2z+dm7UzmPLdLaMJufvS5uPaTE247Z/OyedIsi
hng7PstKuUh9Joqu7KLPlDDb8D0/+nzxuCj663d7UexpG75SMeu4zkQM6ThW
lWbMtS6dR8DaMNTe49mC2bytJ2f7a/e4Q8Dmbbkd98VfVHkB7PMISv3tl2Xv
SAT2eQTPzlav/v0rHdjnA6xSPbxvOL0P2OcD4FVOR95xDAD7fIBbMXXHrecH
lnha+Tltk/bUQWDztGXhegWKUkPA5mk/VUaRlRWG4ERKeojPeU7E+S7kRAlr
ENh8beUNHcd7DwaBzdeqvL5RUf18ANh87eWxRpc2pX5g87UrP6UoBKgxgc3X
XlBbZZvr1rPEryaXZz+yT6/GbH5VKuZ48y3heszmV89MZSyX62rEbH5Vuvfz
sU9rWjCbX90iKhc8MdOK2fxq5hsxN63wNszmVxnHV02ZTbdhNr/qolBzZpNk
O8Ymifc23hJF+ltMjBaI93laT4mX1YuiUMwlY/mhDXeZcsROHxBDoiJ8n5zX
ti2dnyDlsO0lGm3BbN71BieZd6vdPWCfn2By/hMOqosC9nkHHU/HXbweDwD7
vAPTMJ3rn68OAptnTfig0H5/fBDYPKt2Rn1HueIQ3DrWse/pJAcy+cMg10oM
wb7ga7mDmZwoVDJJYjBvENi868ut2uC9bBDYvKvznn9miX39wOZdr5TaibM0
+5Z40Ucn61jlgs2YzYs29O8qo61pxWxedERTvSXvvzbM5kVVTi8E/alow2xe
9LHr9YvvqO3Y7YzEzMB+UaQmZos3UtrxRMAvrZFYUbThutyqiLo2PLz/Vk8h
RQwdXWzheGv9v+c5VNiTpf9JtWA2X0pqU9tRH6cMbL70K99G4ae1z4F9nsP0
zvsfjLU+Avs8B782j3jfzjRgn69gdGuiFfv2Aft8hbzPzFeXm/uBfb6Chwxn
VULrwBI/OnXqW9TM+0Fg86OX3x29nik6BGx+dO/N3zdeEs8/8Be12E6LE+Ua
b6D84hwCNk+6xf+wsHTQILB50vd3yttsvwwAmyct9E/0CjvXD2ye9JEkom4m
6ls2T/roenZBWFPPEq8pHz3QvOxINWbzmofOUY9axtZhNq85fWf3OpngRszm
NaFT84N5UzNm85rhqz/LHctrxWxeszHdcF/O8zbM5jVNHh853z1MxLP/4TVZ
3ovfuYn5b0dV4cdXifiVoW91g6MdH3X3Xq1XJPp/ijrzeKi+/48P2dsYiUjW
IglRWqRzS9mzJdpkq1BRQipCkrTaSpGKksoaipJcSShZsu9mNdbBWDPhd7+P
3+ecPv/NZz7m3nvuuef9Pp/7fDxfWNlW7/CefAq+Lp33s/NWccyJLMZ8qUtB
/olrPGvllqztwSHfeas4NSRUxQdA/0RKP2/YFqMkAH0Rj1OVav+cGAbQF+HD
XWe6wpINIL+ZulxlvJnFBpDfLE3IufGVWH9KyckOrzpImFiFzKI2mREQ+qyE
2/SWBysJNO9qamYDyHc6b+ktE9VhA8h3brcX5X8tOQwg3ykEjn2+HjyI+Mjb
p3jevijrxCEf+aA98OgNRjcO+Ujvlbf3dO0hrv8/PjLzVlLOkgoKDvnIK4cC
A7yWUPHclOp0/S1kbMjEx+AymYq/2betISSejKmkG1ZL0Ci4bn86x5xXHAv+
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2638, 2637, 374, 876, 723, 601, 509, 444, 327, 843, 
            690, 568, 476, 411, 375, 877, 724, 602, 510, 445, 328, 844, 691, 
            569, 477, 412, 376, 878, 725, 603, 511, 446, 329, 845, 692, 570, 
            478, 413, 904, 751, 629, 537, 377, 879, 726, 604, 512, 939, 786, 
            664, 981, 828, 447, 918, 765, 1000}}], 
           PolygonBox[CompressedData["
1:eJwV0klQj3EYB/C3ssYNF8mM4ZDtwMGMGVHWg6UkS1HIcrRrsW9lbDO4UA5U
Qg1OZCsKWQ9mHFD2LetY42IGn9/hM8/z/b79/vMu9clbmrEkNoqiGNpIj4+i
NCYqJjGZKaSRzlQyQo6LoloHR/BCPsxalukf6nKIoUE3LZzVn5OTeSkfYYfu
m5xPT87ICZTb17m+3P7I/srMNZvMQfwkVj5pdqPU3ujvD9j/2reRRGa4X915
+8jwO3I565nOjPAsrl9wbRSv5Qo2sELfrJtLHFd1M8Oz6C/KKbyRK9nISn2L
bh7tuKabRab+kpzKW/koO3Xf5QIS2KRbpXtsn097TsndKbNfd/2g/Z+9mP7U
yX2ptmeF57HX2UeHd2FPojXcnxnPXv19czhV+l3mD12rWWjeMYfwi17y2TD5
QoXcbKbwh83OrzafhHdm5pk3zMG00UE+bfbgM4fkB2YyTc6WmhEl+nvmMAbY
681+1Nizw/ex19vH8C68O7kL++Rj8u7wv2AvIpEtunzdU/sCOob70pXpYtgu
D2R2+JbyZftY3svH2UqB/pluIZ24qZsTvqX+ijyOD/IJtlGof65bRGdu6XLI
0jfI4/koV8ld2S9Xy3vCu7Kv4a59KL/pLdeaiXylUm4xUyl2rsh8oVtMPLd1
uWTrG+UJfJJrKOE/MlSCHQ==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2638, 2639, 378, 414, 479, 571, 693, 846, 330, 680, 
            802, 955, 551, 821, 974, 643}}], 
           
           PolygonBox[{{320, 2641, 2637, 410, 475, 567, 689, 842, 326, 443, 
            508, 600, 722, 875, 373, 409, 474, 566, 688, 841, 325, 372, 408, 
            473, 565, 687, 840, 324, 323, 322, 371, 407, 472, 564, 686, 839, 
            321, 442, 507, 599, 721, 874, 370, 672, 794, 947, 536, 816, 969, 
            628, 997, 750, 903, 406, 471}}], 
           PolygonBox[CompressedData["
1:eJwV1FeQjWccx/GjhIhgEe0mrBCj1xmGGWaSyCSIsmFvEKzVyyp3eieLVXZx
wSqZ6J0kyAVGD6u3zATRe+82ksnnf/E9v/I855z3fZ7nfZPTMlKGFkwkEgWQ
6qPjR4lECobz/xVKJL7G39hoUg26F435OSjG/4QL5laQR+IRpukW6HYhH6m6
UxigHyZnYCiGIAc78Q5dzDmJ/uYNls+jvDwCDzFVn63bgbforDuBfvpBciM+
Cx/KK3BOV04ejgeYopuvW80n87/jc34S3mOB/JvxRXxpfh3eyLXpAXyvv0aP
0750oLF/aWtcwQb9s/hN7EFD+Q1thtOYLd+jRbEcZ2N9aCv8iWWxfrQStuET
uT49EuvG36T36WQ6z3e/pJewSleF7kJ1vklcIyby/yCH/9X8hXwSvxav5RQ5
D33kAXIDfhaKxLXgjG6pXJHfirJ8RtxDrJk813g1fgLyka37RfcKneRjSNf1
l+vzM/GBvDTWQ1dGjsN3FxN1c3Sf8ePxDvN12+Ns0Baxn3GuYi9pKazBS+O1
6H50NHYUvfl++np8JgrLuTily5Ur8FtQmh+CO3EPcpbxL+hfWKmrTHeiKt+Y
5mFczKdv6bzYpziLtHnsJ3L092lJrMYL489pTexDB+NX6R80jfY1/p5+hctY
r38a+4jdqCs3jWvHj3whugQnfa8lvRhZX55uRhJfjx6OZ4i/HesZZ8/8n/lP
+R1I5sfG+cTc2F/j2XyJOE94LreXj6CX3Eeuw89AQXkxTuhKyYNwC+N0s3RV
+DF4He+JWGvdM3wnH0ZPXbp8HCXlgXG243r0M3WV+dF4Fc9z3JfuKdrJh9BD
11vOQ4l4r+BG/Kc+U7cJT9BWdxA/6NPkY/g43i+4Hv8Ra6rbiMdoozuA7vpe
8lEUj/dLPPcYpZ+h24BH+Fa3H930PeXpWI+H+Ea/D12N9ZD/B5X+vlI=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1HfYzlUcwOHXJiWzSNFrZWQrIzMjuzKKyhahjEiyd7bsTUW2hhlZhayM
yqZBqdBUZETu7+WP+/2cc67nep7zO+d3vYmtuzTonCQhIaGSP9F/Wc8jJm9q
Ab2gj2lLzaHfaxl9X4vpRa1GJuPDOp/Cxn9oX/IY/6SrKUlq8z06nW4kmv+g
H9GYbOYndQmDScoVNjCCVlQns88d0QX0oxRprO3VGbzKMyTjKp8wktbUiGck
OdfYyCja8ASPkoKUpIo9x3dznU2Mpi01Kc0d/MdmxvAiteKcSMsNtjCWdtSm
LHdyk62Moz11KBff6Vm+0Jl051nu4n8+ZTwvUTfuJ37H5/fpLHrQhHTExX4m
b9GBemSxdlTfoz/lYy/W9utsXiOX+Y+6kqbcZ35KlzKEfOa/6Frujp8x36YT
KGj8q3Ykp/Fp/YD63GN+TBdSxPhPHUBe45/j2XWNltB/tKJWiGfXA3E3Okcf
1t9j79pTc+vZOFddpcX1b62gz2l2/SbuS5dpUf1Lh/KQ8TldR0njS5qepMbb
dSKFjH/TTjxofEY/5EnuNT+uixgYe46zt3ZQ5/I6z3O/tW91OcPIQDJrO3QS
L/MUWa2d0MUMolKcsbUvdR69eIGMJLf+uU7mFZ6mcuzf+lf6Nm/QjEyksL5T
p9CZBlSJvVj/Wt+hN83JTErru3QqXWjI4/EOxV3Gs8d+yRbvSJxzPCcPkCPu
P86LxHin4p7IE/cd71CcPfkpEO9NnHPcLYXj/Yh7oljcJ6nsZbdOoyuNqBrn
YP2QvksfWsTvW/tOVzA8fsP8vH5MKePLCbf/75XQWzQIiZQ=
           "]]}, Annotation[#, "Charting`Private`Tag$414225#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nfYlmMcxvGnXrOQjJAZmZGdWWlSESVEiyKkoSIZ7YG2RPZMpKminUpG
VioN2mRERlkZxec8/PE9znE/T933fV2/63nLtezQsH2xQqHwVvFC4SJmJR7F
/UWFwo+6r+gddBE9DQfzU2hZPMd38tk2/BL+Gvwtz0Q1XKyfoDsLq+SR6Izq
qIGauMRnJrp+Nj6TH8MdqIU6rk3SV8Ln8uO4E7fpl+oa4x95Fmqjrv413TlY
LT+By0oUCl1oW9eW6a/FDnl27g/19JN152KN/CTuQjv9p7rrsFOek3vFpfop
uvOwVn4KXdFev1zXBP/Kc3P/+f/1U3XnY538NB7Q/STfiUNwt66DbgXfFAWM
lffDY/xyeiHezNrQHbpvaX3P1of/mD8bx/Oz6NF4ha/r8/X51/kLsF5+Bvfg
ct+tl+fJPeZz6XAFGqBhsu++4XsXYoP8LO7F7fqVumYohnm6K/Nd/TS5MjbK
z+FB3c9yF5TFVPlQPM/f53pHfhX/BW1O36Yn4xcUl8fR/fE4Pz97iN/J98UJ
aJT71U3nq+TfkZ9HN1yFq/Msrs9wrSq+lF9Ad3TSf6ZrgSIs0F2TZ9HPzDxg
k/wiemTv6j/XXY9d8JauMRrpZ8nVMi/yKAzQbZXvwqHomX2tW83fgF0xXj4A
T/ALs/f5f/l+OBGz5WMwJvs2z8PP5qvnXfAn4OvcHy2BYfql9Dy8pB9It+m+
pl3p+/R0/IbD5NejmXO8kPmjF+Fv9Mqs0TV5Z7QlfYeegl+xmzyBHogteFJe
QSvj7cwqLaC/fjGthJP4ObQ8Xs1sZX34OXwNfJN3J5fEQ/JoeVD2QmYEh6O3
rotuLd8Ku+e+Muu6YrhfrpA5zFrKc/mamRf5ZfTJfOvX6W7EHnhX1zRrmRmT
a2Gz/Ar6Zr7163U3YU+8p2uGa/Xz5Nr4Tn5J3gvD5THy4Lwr/h58wJ+B33GE
/AY9POcAXsz5Rquhn+/dTTfoWqNEzl5dc1ynny9fjO/lV9E/c2eWW9Amri9w
7RJskcfmHMf1eb6i/8/4OvhBHpdzKGeBfqPuZpTMHtHdkOfTL8wZgh/l8Znl
zL/+C90t2CvPpWuZ+8u6y/XwkzwhM4D79F/qbsXe+FDXCi3078iX4md5IoZk
b8r34kgMzBzrNvFtsA8+0t2YZ9K/K1+GrfIkDM37zbmCozAoc677ir8NpXJW
5ozP2YIH5JOzrnlm+T2+PrbJo+W98bD8mjyM/4PvhnKYlnXEKH5wzofMIt82
+4mviH35ibQMnuJX0ipYnN8NWoQH9Z/QczJb/Fx6bM5MjJXX0pr4B63zruki
/QZ6ec4semLmPHOSPU73wXcY4foyej62Y7LrD8Vn1mj3rAc9E0fz0+mROTv4
1bQ6hvhOT/qNrh1KY5J8EJ7Ovec3jd8FA+SK2UtZY/l9/oqck5n9zEJmipbC
93jEtU/pBfgTU1wfHq/vgWMwVNdL9y3fHvthSX7HdLtioHxq9mP2hfwB3wC/
yVPxsO4vuSfKY5iut24z3wH7Z33lg/FMzs/8zuV8wyD5tOxd3U3yh3xD/C6P
yfri0Zyj8oicm3yv7FH+rKwjP4MehdH8GlojZ1vOoayRbhO9PWcKPRUH8JPp
IfgBz8qraNU8B5bld5XunmfA4LwPem72J06X36THYSvGyetoLexAG99vTT/S
b6RX0oW0Qr6fM4WWxsicUfIj2Xt8bxyHmXI5vMwPz/mYteQ74sCsZ35/dXtk
78hnZPZ0N8sf842wXZ6WtUE//RZdJ5TBcl1b3JI5ka/Cn/L0vGO0Q/5g7ZC/
Q3Crz33iM1fjL3lG7jnnYt6frjMOwor87uv2xFD5TMzjj8d4fj2tjZ3o6LP/
AaTSf0g=
           "]]}, Annotation[#, "Charting`Private`Tag$414225#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HWYVWUQB+DLLiwt3Ui3UpJKpxIipdIlCAoS0t1gJwYoWBioIBigSHdI
N0iIUqKgYIKK7/zxPvOb+fbe59xzzmzRXoPaDkyVSCQyJSUSN5ITiZlpEon8
/Mba1InEKXUoSSmJxHj9drkb10jDRSZwt7NlanN+lc+oo1goH1IfJhuV9e+o
1Tkuz2aP3JuMPKRfp97LP/KXJHhMX4B18gRaxZm+BVfkRdzGfH0NTshzeJhU
PG5WkPXyRO6hCkk8YX4zG+RJtKYqyaQmDSmkJR3pyUBGMpGZm3jSdxRiozyZ
NlQjC0+ZF2aTPIW2VOdds5qclF+jP1l52qwIm+WptKMG75ndzin5dQaQjWfM
irJFnkZ7vtK35Kr8CTV5X38H38lz2Sv3IROP6Ner9/FvfJ7sPKsvxlZ5Ot/I
3UmJ56RfHs8/3hn5rDqaxfJhtT//kZ3LTInrd/aBWos/Oa3/Xh0R75T3bJ5+
n/xgXAeZucRkBjrboN7P3/Hd+gvqONL67HL9t/IgEvrc8T4yjfT6HM6fk4vz
O9v036nDSHY+Q79D7sH1+E5+YmLcF2dfq63is/I5dQxL5CPqAHLE/dUvUGvz
vfwG++W+3BTXpt+oduBGfCc5eV5fgu3yTHbKPUkXv1e/Qr2HP+RPqcWH+jr8
IL/JYDbpO8bvZ4U+Fy/IJfkmdokOrNS3jmcgf0ZtPtLX5Yz8FkPIzYtmpdgR
u0RH6vCxWT3Oym/zKHmYZVaanbFfdKIuC83qcy7+DzCUvLxkVoZdsUd0ph75
eNm8LLtjj+hCffJTgILcTCEKU4SiFKM4JXjF58uxJ3aLrjSgJK+a38Le2CO6
0ZBSzDa/lX2xB3SnEYvMGnBens8wSjPHrDz74z2jB41j/8waciF2nuGU4TWz
ChyI509PmrDYrBE/xs4zgrK8blaRg/FM6cUqfRv+kj+nKUv0jbkYO89INus7
kYqV+nLMlStxKJ4xu+ResSs8oF+tto1dk7/gaPyfICd3xnuoNokdiZ3mgNyP
LIzSb1E7kxS/hfGsMj+uDo5rsXN51CtMj+fgbJ5aOd5zDutPq8NJ7W9n6XfH
tfEPGfiZSbEnzns7XyO3i/vBNf15dSwpzpfqj8kDY/fIxS9M5a7YA7VpfKf8
gzqSBfJB9SGyMlq/Ve1CMqv1J9Qh5I33Rf+GehtH4t2mD2v17bkuL6NZPK+4
j1yKXWYM5WOXzapwNN5/HqR5PIO4Ti7HrjKWCrGrZlU5Fu86fWlBxdhL82p8
G+86/WjJUrNm8ftjjxnHNn3XuNes0Z9UHyUfV5kR99x9rOTsf6Z7C0w=
           "]]}, Annotation[#, "Charting`Private`Tag$414225#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0wW0lVUQBtALKiCpgHR3S0uHdKp0I13SSKOAdNqNraSiYtIN0tId0mUX
Yu15a+018825b93/P+fcvN0HtxiUJOEvaSKRKlkiMT95IlGQ3fpZdKA6y8we
5Jp+IaNIzdNmhdijn01HavChWR2u6xcxmjQ8Y1aYvfo5dKImH5nV5YZ+MWNI
y7NmRdinn0tn1smt+Ue/klosl+txU7+EsXwjdyU5m+V0PKcvyrf6eezX9+Ue
usjr1Tb8q1/FKf1wslNb/litz/f6pRzRD+Q+xsk71EdJEZ9hClvMv1NHkyRF
IpFH/Z058b3WnleLcYv98mV1Anf47Hz5gL5fPBP38hPT472sd7W+Qd+W2/wn
31Ank8z6avm0fgQJOYf6K7PiPK19ojbgB/1V9UmW6Y+qg8jEeHmn2o272Sqf
V8eQN55JfkEtzoG4EzzKRrldfC9r5Dp8qm/Ij3FHmEB6XjQrwcG4I3SjLhl4
ybwkh+I+0J16ZORl81IcjrOlB5vk9rHXrJXrs0LfKPYu7hrH9IPJzBPyLrV7
3ClSxn4wlW3WLqhjyRfnLL+i3s+RODt60oBMvGpemqOxJ/SiIZnJQlaykZ0c
5CQXr/mfMhyLvaA3m+UOJGWd3IjP9I35WX9NnchdznW5fFw/hCxxjvJutQep
2C7n5nV9WY7HvtKHxnxu1oRf4o4zkTwsMCvHidhr+tKEvLxhXp6TsSf0oyn5
yE8B3rRegVOxN/SnGV+YNY27GHeQSRTkLbOKnI49YQBb5I7xe2C93Jwv9c34
Le4Uk9kj9yQ138iFeFv/AGfi3Tmo7096HpO3qp24kw3yGfVxcvKQ/JXaPH6v
+uvqJFboT6hDyRp7xkyeMt+r9iJN3HGmscP8ojouztJZ5Vf/YG78nuTC1t/R
V+IvzspX4l7Gc1lfIB/SD4jfNxni/JlBCusDrW/Td+bvuA/cjOdho7Wz6khy
xX4xm4fNv453jGeJe8VJ/TCyMUXep/YmLTvlIryrr8y5OH8Oxz6SkUHydrUL
ydgkn1NHkZtH5JXx3fwZd46pFOU9syp8F3eGwbSgGMUpQUlKcT+lKUNZ3vd/
VTkf94chtGRVfCe34r4xjXJ8YFaNC3E/GEorVpu1iDOI+8V0yrPQrDoX45wY
RmvWmLXkdtwTZlCBRWY1uBT7xXDaUJHF5jW5HO/MCNryAEvMa3El3onHaUcl
KlOFqiz1mdpcjXdhJO1Za9Yq7kCcLTP5Vu5DOnbJl9TxFIgzYB4p3aFq1v4H
B/EN2w==
           "]]}, Annotation[#, "Charting`Private`Tag$414225#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4VFUYBtABpBtpSUGku0FKOqWUblARaZCWUKS7lQ5pJZROpVOREJUG
6W4J1/6xnu999z73zpk5eyZjq051OkaJRCLlokYicWNFIjtjRyJVuSJPoRnv
cdHaZ8Rknf4l8fhFr8a/8lSaU4pL1joQi/X6QOLzq16dq/I0WlCay9Y+JzYb
9EEkYJdeg2vydFpShivWOhKHjfpgErJbr8l1eQateK4PJh2H9bL8K3ciLpv0
IcSKE4mM03Pyt56IPXItbsjfksQ1M/TCtNb/M4eQniN6OvuL5HKBftXsTDyy
2VtlbraeQp4tl6CgvNn8ynpsebxcysxl5jZ/Nv+x97a8NPxfs6JZxNwWnpeZ
2P5e+QOK6zf1LOZKvbz5nf6m+a1exixi5jXXm5XNNvZfhHugpJ7BzGGuMY/a
Sy9/L78f6NfMLsRni57S/pzwt3ytx9EnhPvnTPjc2CfX5pY8k7a8DNeTkd/0
8lyXu5KArfrQcO/s1+twW55FOyqQlAPW63JHns3HvNKH8ja/6xW5IXcjIdv0
VO5zrvweheQt5jfW48oT5dJmHjOPuc6sZJ61n8lcFj4Ls5JZ1NwevgtmMvsH
5Xrh+ep39XfNH/Q54X7D8wh/Qz55g/mJ9dfhtckUzqD1teYx6xnkxeE5htfX
b5rdScR2PbX9eeHMMCx8L/VJ4flyTk/OIbk+9+S5fErEdcOsZeYPvTK35B4k
Zoc+PJxVDusfcl+eR3uqcNtaT5KwUx8RzgJH9I94IM/nM6qGz5uj1hvwUF5A
B6qF98Fv1hvySF7I51TnLdKQlt/tN+KxvIiO1OCOtS94k1/0keH7yDG9MU/k
7+lEFO99uLV3OK7X5K7ci6Rkt7/arGD+Gl7fnB/OA6PCb5k+OTw/zofvB3/I
TXgqL6YzUV03wloWTui1uCf3Jhm79NHhGXNcb8ozeQld+ID71vqQnN36GDJy
Qm/Gc3kpXakdfic4ab05/8nL6EadcG7JzDucst+CF/JyulOXB9b6koI9+tjw
W8KfekteyivoQTTvb6S1dzmp1+Oh3I+U7NXHkcB1U/T8XAjfB07LrXglr6Qn
b7hulLWsnNLr80juTyr2hXPgmgVyGcbrCfWpcgEuhvenL5crh/+j/2W25rWc
1d6P8g9yMnmmXCzcl7wxnB/r0eXR4TfBzGbmMn8yK5p/hs/eXKKXNSuYhc2t
4fth77E5gNTsD+fV3sJwLRP0RPo0uSCX9Gz8Lbchwo96L2K4bkw4h5zWP+KJ
/CVvcUCfSHb+0dsShVV6bxqQgzPW2hGV1XofGpKTXOQmD3nJx1nXfUw01uh9
acRTfSBpOKhPIj/n9E94g7V6cvc9Sy4enoe8yaxi9rMX0xyr5+AvvTEFKEgh
ClOEohSjOOdd+ynR+UnvTxNKcMFae2Lwsz6ApjzTB5GWQ/pkEnvt6XohLofz
r68I9xaev7zDrG6WtPc/xA8f6A==
           "]]}, Annotation[#, "Charting`Private`Tag$414225#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 4.999999897959183}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.865447542535137*^9, 3.8654476074003935`*^9, 3.8654476592648077`*^9, 
   3.8654477353554745`*^9, 3.8655289565223103`*^9, 3.865952621495158*^9, 
   3.8659526890505114`*^9, 3.8659528221198735`*^9, 3.8659528837451277`*^9, 
   3.8659715598758802`*^9, 3.865971633235374*^9, {3.865971739898196*^9, 
   3.8659717475087576`*^9}, 3.865971789775215*^9, 3.8659718682840586`*^9, 
   3.8659720875028167`*^9, 3.8659721409766817`*^9, {3.865972461999819*^9, 
   3.8659724918342595`*^9}, 3.865972566978182*^9, 3.865972621749632*^9, 
   3.8659728434206038`*^9, 3.8659729987618284`*^9, 3.86597337320185*^9, 
   3.8659739179393034`*^9, 3.8660469019346704`*^9},
 CellLabel->
  "Out[3619]=",ExpressionUUID->"9fce181b-53fe-4068-91b0-84705cbcc0ef"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 6.350944410686315}, {2., 2.8204794422637884`}, {3., 
      2.252501077427078}, {4., 0.8679133101174613}, {5., 
      0.4620094769759296}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 5}, {0, 6.350944410686315}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.865447542535137*^9, 3.8654476074003935`*^9, 3.8654476592648077`*^9, 
   3.8654477353554745`*^9, 3.8655289565223103`*^9, 3.865952621495158*^9, 
   3.8659526890505114`*^9, 3.8659528221198735`*^9, 3.8659528837451277`*^9, 
   3.8659715598758802`*^9, 3.865971633235374*^9, {3.865971739898196*^9, 
   3.8659717475087576`*^9}, 3.865971789775215*^9, 3.8659718682840586`*^9, 
   3.8659720875028167`*^9, 3.8659721409766817`*^9, {3.865972461999819*^9, 
   3.8659724918342595`*^9}, 3.865972566978182*^9, 3.865972621749632*^9, 
   3.8659728434206038`*^9, 3.8659729987618284`*^9, 3.86597337320185*^9, 
   3.8659739179393034`*^9, 3.8660469019966507`*^9},
 CellLabel->
  "Out[3620]=",ExpressionUUID->"e757affe-b424-4690-889f-647a15ac5474"]
}, Open  ]],

Cell["Problematic initial conditions", "Text",
 CellChangeTimes->{{3.865447697626542*^9, 3.865447705171129*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"1f326168-d612-4bfb-8f00-5d26c5302aa2"],

Cell["\<\
{0, -1.7176561578501914`, 1.9865343349458087`, -1.0173496185733697`} -- - \
Works with n = 50
{0, -1.3903695773492997`, 1.2310181542446177`, -0.6104047394312593`} ---- \
Works with n = 30
{0, 0.08036047668264246`, 1.3496547583989287`, 0.6830225774268248`}
{0, -0.6909899189385493`, 0.6897150795907763`, -0.7182564346929077`}\
\>", "Text",
 CellChangeTimes->{{3.8659724022849545`*^9, 3.8659724170252304`*^9}, {
  3.865972499946662*^9, 
  3.86597251318442*^9}},ExpressionUUID->"4f96a2c6-1db1-40df-892e-\
51cb2ee045f0"],

Cell["Periodic Re computations using previous estimate for costate", "Text",
 CellChangeTimes->{{3.8636129580817432`*^9, 3.8636129685064144`*^9}, {
  3.8654474939926615`*^9, 3.8654475026988783`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"605fa9bd-d2f9-4de1-8459-5ae1aa1ed3d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
  RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"\[Tau]1", " ", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
  RowBox[{"order", " ", "=", " ", "5"}], ";", 
  RowBox[{"maxIter", " ", "=", " ", "30"}], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", " ", "=", "5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", "the",
     " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", "in", 
    " ", "time", " ", "\[Tau]"}], "  ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "0.2"}], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxErrorInitial", " ", "=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialConditions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MyAppend", "[", 
    RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f1", "[", "t", "]"}], ",", " ", 
            RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}],
           ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f2", "[", 
             RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
            RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
             RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}],
       ";", "\n", "    ", "f"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", "initialConditions"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Js", " ", "=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxcountAlgo", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
    " ", 
    RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
         "order", ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", 
         "maxCount", ",", "initGuess"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", 
         "uBound"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    RowBox[{"ICs", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"xdot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]dot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xs", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xs", ",", " ", "x1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"xdots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
    RowBox[{"\[Theta]s", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Theta]dots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"us", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"us", ",", " ", "u1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Js", " ", "=", " ", 
     RowBox[{"Js", " ", "+", " ", "J"}]}], ";", "     ", 
    "\[IndentingNewLine]", 
    RowBox[{"count", " ", "=", " ", 
     RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "count", "]"}], ";"}]}], "\t", 
  "\[IndentingNewLine]", "]"}], "\n", 
 RowBox[{"p1b", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
      RowBox[{"us", "[", "t", "]"}], ",", " ", 
      RowBox[{"xs", "[", "t", "]"}], ",", " ", 
      RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
      RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"\[Tau]", "*", 
       RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
    RowBox[{"Filling", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
    RowBox[{"PlotLegends", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", "\"\<x1b\>\"", 
       ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", "\"\<xdot1b\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
    " ", 
    RowBox[{"AspectRatio", " ", "->", " ", 
     RowBox[{"1", "/", "3"}]}], ",", " ", 
    RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
    RowBox[{"GridLines", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", "Js", "\n"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[266]:=",ExpressionUUID->"a1e062b3-c19b-4de5-9c5a-758815bd1a87"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.8654472366449585`*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"4862f4bc-a5fe-4c18-b2ab-7942cad26f35"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.8654472407386494`*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"d4a601e7-2397-4df6-b408-ae8073848ef5"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447244385483*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"6b7d41ac-9732-4954-ad0f-c14782216c14"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447246236891*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"d13988ad-0619-4550-8526-5c5b7817c018"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447248060308*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"35011865-bc40-4696-8abb-cc48ce8ee770"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.86544724921194*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"6204e8e8-28ef-4f14-96b6-ffe2df356b6b"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447250238611*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"c64e2e00-9ac3-4a44-bd0b-afa5face8fb8"],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.8654472511493196`*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"ff3e670c-c52f-4df5-826b-016f8ce893a4"],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447252062028*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"aea7e719-f71d-461d-819c-91e02e2edc30"],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.8654472529297504`*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"c7046757-e870-4e1d-8208-9584ea5224f4"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxE2nc8le//OHCbg+y9RyGkREWp69WyUokoJTMZoaymJAqRWSSKFKJUkgrJ
ZaXsQvY+5jGyZ/jd79/jc3z943E/rvuc+7qv8Xq9rvN4SttcMrKjo6GhUeSg
ofnv/zMfGybV8yH7aGg6nV/sP/otqSLRbUSyHAGj8lBgXip+9/5+m7NKKwro
ejf5/ksptke/n4y6k9EJ58Pn9RvrsGv/ZnL2u2FUfvSL/PWQVswqfVe+S2MC
cUJ89K5L3TiMq1IxyWoarTF7Xtvu0ott2k5i+qo5dErYbP74XTJ2+37X5pL8
EhLHeicO7STjD5fZjYX0VtCL7KA4D68enHTzImXbKRrQjhaPFDrbhv0S/52Y
GaWFfiFr9sizvzFNfTfk36AH5BeatDciE8t5Xrh2UpER3m7mzjlQXo36Zh+b
sn1jAvYn2uom0z1Iv9/pVpQbC5BDhZ998RtDx/oilCQkWCHiXv5utvZpRCmx
8f35lg1I2Zmb1EbnkQp3o/hByw2wTHfbMujpMmJFs9bt0xwwFZdLfnJnFemM
nZmXMeGCieMnHnk/oYHm4vO0Z5S5Ydp2WzR7IS18Ciq1kJrlhnw5rrNM+XRw
gdGru6aGB9x8tfS6C+jB1v3mJ/Y4Xlj1fBcpl8oAW+2Vagys+UBKgafi/i1G
qOVRZvPS5AdTXLo0bswEX9/5xSvTC8BZoWdHBZmZ4SatomFVhwAIzsTbS2cy
A2v7DV3XbEHg2OIYq76HBfpTpR8legsBv7Vgn9FLFnikIMyQayIM1cxPh/pn
WSAi7sIPaykRWGiUpV1QIsGZR+dq2AdFICKhRY/dkAQLh1IWEwtEYSyZ66+N
AwnI/QeuFQeKQap2avJrDxK82KsqWm0tDs8CNk8JeZHg7T0vbvstEkC+rU4/
cYkEgSa2R+hnJeDyH97tJvYk2NGelB5YLQlplEqGtbMkiN0c/7b6iBTQf9JX
yCKed7swNPZIrhT079V9dOsQCY6KmqRUbJSGCstDReaaJNjv+uMs931p4Dnw
KE15GwkSxWw2Vs1Kw4d5/s5v8iTYWPIq5thZGQgxfLX/tjQJIrYUK9YVyABv
R4HFiBgJLkwz/C5XlIXb74UV7YRJYPNhSup+uCxEbNhisVuQBAXTcotra7Kw
JzZ5rYWfBMxtvfJjkrnowjbFFmW1IHy7Qllf1bIeUXbpHeXrycGJbJX+3Ie7
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
s/g1pzxjgRUzfLOMKzTdMIL7aFxvmhqyQ/DZkbO7P5KRVbH1439zG6Dm3ftQ
Tm0KMr/+be5gLCfYnppK/+Q3iiyeScQ3pXCBkzZH+LWmYcT61uF88lVuSKg8
4xQQTUHbXL8VlPbxwuOvPnb2li1IzKGl1HdNEORMfgT8mSHqrf95tXzn+K6D
Yt+xU6lYwCt2KShVVXYxDHqOufdocXaIysBQVu7mYSLfsL9RHU/0lQGFmsio
ieMR6PaVB9LnnvxFg08Yj8Zkt2CN+mNG7VI00MAAmhl233GEAcNBej16eL2q
/Xl+bgbTFnq5Wc8wQKbsruttF+bxucCIWNo9LCA05kDb5deOA17JV/Bu3gCy
ATqJD94PomNmbpp6RRzAM/OnwXVgBIWRwyzyNbngrLEm69lzA0guSFbKg5sb
3k9QPorTj6ClcKGHzO3cMP3XiaKkOoxiHPgrz+vywbvRhOQbh34jK7ZW8atZ
klA2uVsh1fQFbig7Vqk+JA2vtwfyPBkMQCc5LHUTjsnAZqnXtmlE/Xage1+O
dZYMKNIt6X6QIuLV//xcMTlmSy53CKL6OWo+pfq5MpOkb2pvZxDVz20IupqR
2dWDqH7uTvfuP/P3PyCqn+uPLYnpFalZ93MvX+tYkXOyENXHOe2h/ymr1rPu
4wZYr1MUJYfWfZx1w9bQ9x/r1n3cTgXlryF6Y+s+biSjL79zeRYfeKA3cPsg
IzBLKojLz87h1o2M5cbNTHDRT1grMGgC7z58VOPsAxaYX7V5O8TYuO7pBMy4
0z1ji9c9nWKrQwhbSDdiZxDKenBtAyhLlcRJ/R5CxbpFSwc4OWHa4IuO5L5R
9Dx42T7GhgsyoiX+UVYG0U68235Agxv80smzKasU5BvRpf2VjgfuLQl5Hb85
hHY6f//m18YDNUuSB78/IKNMN6YvvqnEeaOOhW7nk3Y07LZ8otaVD4ZlubZs
vVWLwrxV73Jp80NApH+gJC5Y932KvcaxGvuiENX3pbFL1dQxZGGq71P4Vrxx
QLwIU33f/axb3v8EqzDV7wlsNyk/LVeKqX7PPKpiWOBZEab6vcO18qG3HYow
1e9tjGloMLPKxVS/Fy7gzJDunIWpfq/ugPHmjcvpOFn2a59CqyRk8Er8e1f3
HDMZ6z9IMZKChjNDQueYY7DyzjP36QuJenHXQjid0B3sDflcnErSYKtueZrt
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
gCK0GNj7sCeGgvpy+ZpMrzP2a5f9oQ0FFPTO2PRVRP8PMCVdO51g1INyxF7d
tWrtAmvedilKHOtFuF9d3MC5zfTzD1Swv0xjzyMOaHtf+VeK7wKIXq6G2/MZ
96Unb5pDBxIQ2xbTEmsjRZh/tnaP4wwFYd63zszMk9Z/CkmxfmV9erINODEx
75Lq60E2RdtZZns54AoF/Z3PohdIf5pvjTKXlxoFfex/5iVkowh9gyQO/PpD
QdZaI48yfnWC7vP7yzZG9iL1n1a8l6U44IG563bFIgvAhfk+tURJET7cvPXe
qxoKomnXS3mG/gZf7Z+q/HToRRuvj1dLWXFCXt7CwsfujPvNFRsdH25F2H63
3iDpFgVdDz0xfemyIhTVuno6qoqCtlqMKcW6dYEPwZ6t7RcZ6/d//ejKHCnu
jsSf6IluZ5n8LQ6YuEfpebjbAjALL1zFpqcIuz02Tq+bpKBF2dqwkOl2MNGi
P0zR6EU7pMX778lywi3uRmeSQhdI/1l1+NFEnzkFJWxj0i05rQgtQyxPOnVT
kEmp6/GV6TQw2tNzeHtQL3Lglh6o3MsBHybfq7U2WwDtpkkD9hsVYYTh6qPX
+ijIPs25XlO4E2geSrz/PqAX4Z5zi9ypTYKnaKTX3CPpdLV+/Q/U7PTiqfsr
Dqi8WWRrVcgCKGppPJFiqggn9edvWzHOW5jvbZx7MivUbYcw3/vza4/gOUcf
hPnegwnaQsn6bQjzvSn8saaamT0I95sfDckEh2zsRbjfHC/amzJcSSP9ZpMB
GV3d9haEeeC9HFFar71rEeaBtwkofV8VnE36zWUhvXcEJfoI7/sr3vsts/4o
4X0FH5+6yFz+l/C+65abNkabzgHcbzazcf8ywziv437zUbkfusbc84T/5c7k
HnDn+0t6zdFVu8ZTUsdIr/lv3/6d13iGSa+5u4N+cWrb/3rNSp80RAyKe0iv
OStHLVnbq5v0mks1q1P1o7tIr1mW3be78AuN9Jp1VjF3sj3vBJj//Vs9/q8s
9ivA/O9hg/LrEerlAPO/f1p0Lc6vKAKY/63yX1rL7Z9D+N+0NFf20OXnhP/N
AD23VsyGEP5X79pq95FiT9JjnuhLd7GPiiQ95srL/IttAnGkx7xlxkU3SJRC
esxBkcOV3oz3HfeYqzvF7F4w7l+4x3zyenWBFnMcwrywrNbHPTFKwQjzwhFi
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
Ayhev+pW0PAxzsv890PmBcjj/wPQN8zV
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{3620, 3619, 649, 1276, 1081, 928, 811, 604, 1241, 
            1046, 893, 776, 694, 555, 1197, 1002, 849, 732, 650, 1277, 1082, 
            929, 812, 605, 1242, 1047, 894, 777, 1321, 1126, 973, 695, 1294, 
            1099, 946, 1364, 1169, 829, 1339, 1144, 1413}}], 
           PolygonBox[CompressedData["
1:eJwV0MkzFmAAx/HHVmHGXSopSaXFDdf0etvj0K0DHagspV5tcnGOaB0XLdoY
9Rc0YwZ539dS7vUPtIcWYqaPw2ee5/d93neGt6CupaY5NYSQwgjFOSFsp19s
5VO6TVdaCLlMaPsZ1QL12pz9kIt81orp1tcT1yoZ01Jo0ObtwowQau24/cjO
tCP2sF3t3uV+01lmlzljdqfzg13vHLAv+d4X5w5u6XkktAOMa6mc0Rbsx8SI
UEWUt97TOOszv+wntPFV20mPvoGkdpAJLZ1z2m97m7+jzk7YA3aWXWXHnK+0
Gmf36m/nLLfLnW32R/fLPv/NfRe99kYmtUPEtQwatT/2U67wXSvhtr6JKe0w
CW0NTdpf+xlXOUJSX0uzt0X7Odf4oe3mjp7PtHaUSW0dLdqS/YLr/NT2cFff
zIyW6/85qb2xoxzTpuxMztsR753u//Qi99Pu7c6kt1POvtXf2PnSe7Yzar/2
VkG7Nmfv5Z5dwDvtONNaFhe0ZXuQG8xr+7ivb+G9doIZLZtWbcUeooMFrZQH
+lZmtf9ONWJq
            "]], 
           PolygonBox[CompressedData["
1:eJwV0UtQjWEAxvG3ZFNUWpW7BQt0UbHRhbFhhsy4MyklkoXTzmWGCplpUJwz
dphxqZahy7jPmFrHSgupcyo7d3v8vsV/nuf/vO8355zvrGqM7TmTHkJIwzus
yQ5hNeqMhShCMQYyQvg6L4S9mOI3UI9P9ny02TPx3FaCJ7ZvfB+m+U38tW3G
Q1shjtkmeQHaeRbWzg+hmY/r9fpd/YV7OfpO/awcdLZfxnmVXqGf15P6Bnef
6t+jO0jybjTgs30xOuwL8NJWime2H/wAUrwH/2wVeGQrQqNtii/BZb4Qr2y5
PnuXbYhXo8w2yH/qBzHDV7hTaxvlt6KXzSv5Y16jX9eL9VI9Fn0/+ZE3yQf8
jjzuuWl9KWL8ivPtspN3yWy+Tp7iF+X76P3KezwuX3t+kazh5+Rw9HtlgvfI
LbxSXuAp/bTer5d7bkj+sh3CNns7n7Wv1I/qY/bbPI1X8V5eEr0L3sonot/i
PKkvQ6v9qi0Hb+wbMWz/zQ9jjseR7l61vS/6X3HCluLL0cl3OL+m5+rr9Rb9
kvzAG+R9npBvPZcnd/MRZ1uxyTbC/+hH8IUncBL/ATAXX4I=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{3620, 3621, 651, 733, 850, 1003, 1198, 556, 1190, 
            1385, 991}}], 
           
           PolygonBox[{{551, 3625, 3619, 731, 848, 1001, 1196, 554, 693, 775, 
            892, 1045, 1240, 603, 648, 730, 847, 1000, 1195, 553, 692, 774, 
            891, 1044, 1239, 602, 647, 729, 846, 999, 1194, 552, 691, 773, 
            890, 1043, 1238, 601, 810, 927, 1080, 1275, 646, 1175, 1370, 962, 
            1402, 1115, 1310, 728, 845}}], 
           PolygonBox[CompressedData["
1:eJwVzj1PU2EAhuGXUrcWlBFxIBFa2UCURB3AxYgwWJS2DA4qiYOpQ8XioHzV
xOjCYIylalwcSPwo/ACEGROxH7o5of9AQQf16nDnee7nPe85p/vqrVQuEkJo
QQnJthD6kDGuHAhhNRrCTfmjNYQ5/aw+pm9hih/hXz17jL/EkO0PHtjWEbXd
RYetgbStiDW02mdxyF7HpO0LkrYXOGn7jSVbBRFbAQdtNVy2XeCbyPIu/9Kw
JfhznLDtY9F2hq9hlMc99972kU/zJG/R76CdV3HJ+Xd+Xx9xPqo/1bP6Bz2j
H9brnnsiX/Frze87m5c53i97+WP5iI/LMs/LQb6HBfef8df6DfnNeVEW+Cl5
mi/rE3ql+Y/yPI/Jd+6W9Sv6trPrekIP+kNZ5OfkDM/JNv65+S73dm339OHm
+/QNpHknrznv4Ss4bvuFedtb/MNte9y2gxSv4qithAHbT8zZ3uAv8vaY7RMu
8v8CqUuj
            "]], 
           PolygonBox[CompressedData["
1:eJwV00lQj3Ecx/GHCiczVOpGRU6WobJTKWYwI2GYESUKLRIuhhmjgxRmHNJi
neEgy12yFuVsOVhuWZLdjH1//Q7vvp/35/t75pn/8zyllNYUbh0cRdGggD/p
w6NoPD4py2Oi6B+6Y6Mol9fiFD6iTP8XXXY5fBtO4gM26v/gll02Xyhfw0qe
HBdFvbqHvJpP5slyg7xEPixvN9P5AGqcbeFn5XLzqf1OeZo8Tb6EfD6Mn3D2
PTbofuOmfh7vQRI/hHG6Vwg/+jjeoVT/Czf0c3k1juEt1ut/4rrdHL5AvooV
PMk97+hG8YMYq+tHle4J3yFnOZMlX0QeH8rb7NvkIvmuvkROk9/o6806nm+W
hGdk/gjPTzc7XMfb5UrzmX6/uSf8TjOfHzGP8tVmJ99lLuejzNuuPy2Xyg/s
9ppVfJKZyA/Ii+VGOU1+Ge7jmsfhnciZdpnyYblAviDPl4fIrc718mKeyl/z
Yv49PC/dLJ4nX0EhT3SmW3efV/KJPEFuNOv5IrOB15qp/AUqnG/mZ+Qy85F9
nVnLM8yM8I7NQ3ypeT58K2YujzNbXN8qr5F77Hab63iKOWC3T84Lnd03dPKZ
+r5wNnwbdvPlJnmV3CEvkxPkLufu8Qo+gceH54kU/hxb7KfyduTwWGeada+w
Vvc1PBv9DJ4rX0YBj3fulm4kr8cY3TNs1k3h55DNY8J71/WjSPcFHfrp/CZG
hG8Fo3V92KRrwkus0X8O9wz/V/w/YMiC5g==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1mWYVVUABdAZUumWLmkEpLtLKUlBkJZUupUG6QYBg5BOm0bpEpRQuru7
23U+fyz23uc+mJl37+ObDC061e4YGRERkSVKRETI+f4oRBL7qB1FTrbTyXH2
HX0QKe1MMo6cIeu6dlp2JjExnU+XO50/k6PJTX57u6zPM/1HHurDyE4P+6r8
nDQcCN8DC/TCHNPHU48C7HDWgOf6T/QkKgudFeG4PoEPKUg0Fjkvygl9IvUp
xE5nH/FC/5leRGexs2Kc1CfRgMLsctaQl/ov9CYGS5wV55Q+mY8owp/OGvFK
/5U+xGSpsxKc1qfQkDN2l3Af2GUXZbf+Ma/133ikDydHeL/sa/IL0hLLm/at
/Mf5SzmOvCR0Pke+4XyZLElSZ2fC+yan2F/pd+VgUjnLLOPKmTKjbOT6Wb0r
ye2k4d+TX8sM8k/Xn+tjwj2088j4crbMJIu5vkdvTLJwc2V0OVWuMB/LEeQM
P499XfYNzyD/2q/kePLxpr1cluKsPpV7+hCyhPfLPie7ha/Fbrs4f+lNiGSl
3Zcbej/Sc9COxQ96ac7p02jMebs7b7HHLsHfelOisMruR+zwfNtlOK9Ppwkl
2eusGVFZbfcnTniG7bJc0L+mKaXY56w50VhjDyBueE7tclzUv6EZpYlHfBKQ
MDyfXlOeS/q3NKcMicKz6LwCl/XvaEFZEpOEpCTjLZKTgpSkInV4Fv3dilzR
Z9CScqRhhfNKXNVn8gnlSctK55W5ps+iFRXY76xFeCZYaw8kHavs97iuz6Y1
FTngrCUxWGcPIj2r7fe5oX9PGyrxj7NPiMl6ezAZWGNX4aY+h7ZU5l9nrcIz
zu/2EDKy1q7KLX0u7bhg9wifC/6y3+Og3jo8q/xhD+Vt1tnVuK3Poz0X7Z6k
4G/7fQ7pbcJnmg32EzmSd/jSvin7h88eh+zXcgL5w+fNXi+rc0eP5nP2lT5f
vy+HkpVP7UuyFynD9+p138i9zl/IsaR19q5MIL+XmWUV1w/rbcPnwY4d7oOc
Fj5HcqPrT/VRpLZzyXhylnxbDnP9lj4g/Mx2RhlbficPuxb+85+oFyCRPjd8
Xce/yxrc1RfwILwXZOMz+7LsTSr22VU5orcjDpvs4WThD/sD7ukL6UA1srLB
eU3u64voSHWykZ0c5OQdNnpdLR7oi+lEDY46a09cNtsjyMUmuzYP9SV05gOO
hfsR3ie22CPJzWa7Do/0pXShJsfDz0x8ttqjyMMWuy6P9WV0pRYnnHUI95Ft
9mjeZatdjyf6crpRm5POwi8JCdlujyEv2+wPear/QHeu2H3CvWa/XYdTeqdw
/9hhj+W2PjA8AxyxI93bSXpBEuvzIv//nSSfa/8BCDYFHg==
           "]]}, Annotation[#, "Charting`Private`Tag$221994#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nf8jtUfx/HbigilIitkr1AUWVkZ2TMUURnZlE0ysksZSTaVn5BdIVRG
qOxslVCp7IiMnp/H74/X4z3Oub73dV/3Oef65mrbrWHXJIlEon+yRCJ/0kSi
Dj1IH0yRSLRMrqdf6VrQd+U3jP1LS2OWvhCa636Q703+/7+TAit0BbBQ96tc
F4fkkWiBA/r7MEB/B1bqCuJj3W9yPRyWR6ElDurvx0B9SqzSFcIi3e9yfRyR
c6dLJEbTG/oymK0vjGd1h+SMGCSnwmpdYSzWnZEb4Kg8Bjd1T2COrgie0x2W
M2GwfCcKeibt5O/4T42nk5+Wl8uN+bf58nxZvi8/guZxfz/qOvIf6oq4bgn9
Q9cQx+SxyGteK1oUD6MYPjHvT3Ma4bg8Dq1xRP8AXtOnxme64liq+yvuBT/K
43FLVxZzdUXxvO6onBlD5DTxm7q39vL3fGt+Ov+5een52nwfusJYE/qOXIEv
x/fjf+JLmLuMPxtz8JP8JtrgmD4LXtffhTW6R7Bcd05uip/lt3BbVw7zdA+j
re64nBVD5bRYq7vbZ9fRrZQr4lHdCvk83wwn5BzmPKv7Wp4gJ+Ty8vxYm/xY
vhj/CN8t7o/+IL9I58iT6Quu+5HPhm7yMOM16Ah5NE0Xa412iDVGd8bzpTPk
d+g6199D68p96ar4vnSi/BZ9Ui5P+8s/8y/zH/ElXbeSXtA9gyr6IfIv+pz8
c/wm/dtyErmC/IFcPJ6F3F0+EN/F+E98dnTXD9elxxf6Ulilvxj7GSfld5DU
vIr6D+N3xUu6n+UHYz3LNY2/wd8d+4TvGPuD7pLb0JnyRLredRloPXm1sUp4
TLdavhTnC07JE9EO+az/x+mnxi8ba4nT8iS0xwl9jjiP9Pdgg640PtP9Hfsd
v8qTkSyerf6j+H3RQfeLnBMj5QzYqLvXvPq6T+XKKKP7XL4S+x+/yVOQ3LxK
+gXxfGMv607KuTBKvjf2ljkvy7v5L43fJzeQP4s1yU/iq/AV+AH8Cf4J89bw
V/lWqGrs9Tjf9Ln4VnFe0s3xPOhU+V1jKfjK/Cv0f3F20nHyOFpSLkl7xJ6h
B+M3pHPlKXGPrj/FP4Qe8mjjtehIeQy9L/Ye7STv4b8y/365YZwJcY9xvunW
yv/EeYEz8kPmtNZtkafKd8hV5IVxVvPj+VJ8Kb4nf4jvZN5pPnd8tvy0sVFx
7vPF+M5xxtG9cRbQWbGfXZORb8T3o2tij9DJ8gRaLc4EOjDWCv0lPocukN+j
5Vy/jr+m7yI/T6vRobE26B/xTole3hrrin8vrtWn5KvyH8daDuRe8mG+s/Ff
+TwYK2fEJl0mcxrr1spPxX7XfSFfj/2CP+Vp6IIKWG/s3/i++Et+H13xmz5v
/Mb6TNisq4gNuhvyCzgrT0eqeA76RbrHA/kV+Qjfjp8X6yjOPXN/5/OhZ/xG
xmvHmoj3S5wnfBd+H7/F3AfkJvI6uTqe1G2Ub8ZZg3PyDHRHJXxp7FasP5yX
Z6IHKuMrY7fjfnBBzm//z6I9ccZYfrxpLDO26qrga10C7XUX5dnohT90BeJM
1WfBN7qq2KRLgg66S3Ie999G/kaeI98pPyUvlhvwb/LjaWm5NH1VHkaPyu3p
/NhzrvuTFoz1ps+Kbbpq2KxLio66y/JcvIqnUB01sMV4Mrxszt/yPPTGX7pC
eFufDdt1NbFVlxyddFfi/wT30VbeJs+XU8vV5VfpEl1D+lY8O1omzjTaWz7G
9zH/LF843k9yduzQ1cI3uhTorLsqf4C+OKcrEme6/kF8q3sa23R3oIvuH/lD
9ENtbNenRFdj1+SP0B/ndUUxSZ8D3+nqYIcuFbrprssLMAAXdA9jsj4nvtdl
9n2a6r6Qa6Cu7lv5znjHxR6L93TsoXinxDucH0i3x5lOp8UzjnPTeBpaQ/4k
zmIM1F2Ui8VZKefCTl09fKdLHWem7oa8EINwSVc89pP+IezS1cf3ujSxr3Q3
5Y8xGJd1JTBVnxu7dQWs/QZ0p/4u9NLfkhfhNfyteyTOIH0e7NE1xC5d2liT
utvyYgzBFd2jmKbPi726LL5rM916uWbsXXmQfJJvZHw3ny5+s1j3sb/j/wV5
FE3I+emL8o54V/Hv80tcdxdfk+9Nl8bfohPksvFM+T78cHpc7kA/iO8e7znX
XuVLxveNv2e8Dh0T5yfNJ5egXeUhdH+ccXR2rB+6z/VZ6TPyBmPN+Sl8Lb4S
P5g/xTc2bw+fPu5RToICxl+Sv+U/MZ5WriUvk8thqO6feF9henx37NdlM6+5
bmO8q9BEt1e+G33kpFiqG4ZruscwIz4PP+iaYp/uHvTVJcMy3XA0w359BvTT
J8dy3Qhc1z2OmbqCOKDL7l5a6L6MMxuV5dfk0/EuivUdv388H3P/Az0JuWg=

           "]]}, Annotation[#, "Charting`Private`Tag$221994#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfclmMYxvHnbU/tIaEplYZSqURDQ4P2EFJaRIWGlIwUaVKinfbe0V4q
pG20NNGipVChfM8/fp/zOI77ut77fq755m/XrXHXpEQiMTZZIjE+ZSLxXupE
4u9UiUSuNInEu+oN/gUU5UvwR+nHkY8/zKdX+/KX9N2iPoBN8mTyV6IvfUF9
Br/RO7WbS+fBLL4hTtHN8TOdDfvo6thNv4YJ+rzPX6MHoiQuy3ZhnvwOzJY1
QnZMlA+WXacHoRT+kO3GJEzGFHyGD7S74fl7KI0rsj2YiiGe/SN7H/fjqmwv
5svzYo6sMXJgmnyo7F96MMrgT9lWWTls5rvEb5Mt4O/EXL4JcuI7vgb20H0w
Xbth/H/0ByiLY/wT+In+y/NtdHl8ySc33q/SL9IX1Tb4nc4qf4f+TvuF6l0x
XrJ5nt2ku6IpfVptgUKe/cJnUt/kS6m5+O/pR+O7+b18GvU1/j719fitdAfc
w/8R86gO4EurM7x7OH1Tnpsfov7Dd4n1Qh9XGyK/Z0f4DGq/WIf6faVWwBZ5
CnkP+iX6kvoszse3abeIvhvz+VtqNzSjz6gt8Wu8Gz/QNbGP7hvjSHfEFXqm
vzOCvkUPRTmc4BvhKH3N86/pB7GV7xp/T7Y49gMW8M1xO37ka8W40/0wS7uR
fALD+PK4LvuGr4htfLfoJ1sSY4GFfAvkwWz5h7IkDOcrxN6U7cec2FOxF/CR
58kwwvMHY5xlB2LNYpQ8OUbKK+Jf2UEslRXAIllL3IEF8tGyFPiQr4T/ZIew
TFYQi2WtkBcL5R/LUuIjvnKsL9lhLI91hSWyJ3EnFsnHyFJhFP9QzJtsO18J
X/Hd8ZNsBV8YS/nWuAv7+dr4nn4Di7X7hE+N0XwVnKQb4xidwLd0ZXxNvxxn
CN0WF+gj+n8e6xfLor211p1+ij6rtsIpOrP8rVhr9AG1Tuwp2Q98WrUP35/+
W+2EIrKrcS7Fecrfry7xrk/pNLid/zjmIvYuivEP8z/TTWJe+ON8RvUNvqSa
xO+gH4pziP+GT6n25F+Js05th4v0Ue/6Ir4Dy/mncY5+EqfpfDhIP4Yf6Tex
VJ+xfFqM4R9BMuzkq2A7/WqcR9qt5O/FCv4Z5Mcy+ThZOnzCV43zKfZ5rIWY
zxjr+K7oj/Hapcen2lSLfR77Tr4KE+QZMFZWPX5nzGs8kxXF53wbFMBq+URZ
RozjayBVjKV8dYwtvuCfRUGsiftAdhvG848iNX6Rr5EVx0q+LQphbdwdskyY
wNeMcxC/ytfGWYhVfDsUxrq4Z2SZMZGvFWsEu/iH8S3dA6e0W8eXwGr+OdyD
9XFHybJgEl8b6bCbfwQ76J44rd36WBtYw7fHb3RrnKGL4BBdF/vpt7Ah7jg+
KybzdeJ3001xgk6PPXRV7IxxtL560b3oK+pzuESf8Xc20KWwlk/S7mW6A/17
7J/Yu7KzfBb17Vgv9GG1Xuwj2YH4XXGPxBhEG/4a3Tna8n/yOdSBfBl1o3dO
o7MhDz8lzib6pZgz/rGYE7pZnFP8Sf42tX+sJXqvWg27Yr7lvene9FW1PS7H
nveOjXRprOM74jz9NM7RReNsouvjIP0ONukznc+Oz/i6sW9jv8k3xd7Her4T
imGzfIYsB6by9eI7Y+7kX8b/U/H/Q9zzcQ/G3YOZ2ubENO3qI1OMc9wjmCXP
hemyBnFWxTfHmYrZ8tyYIXs85gIX5JtjTLGB74zicU7GnRJnE2byTyArLsZ3
ycpiI/887sMRvgEO0QNwnX4ef9E5je+g6KPu0P9/9iFoBg==
           "]]}, Annotation[#, "Charting`Private`Tag$221994#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfclmMYxvGnrEpJCJWVTbbSnip7FdESUVIpCkUaotJUVrIpI9pTkZQR
SqLSkhUqoUFWGd/jj9/nPI7jup7nvZ/7us7zrdi2a5MuRQqFwsKihULlYoVC
oxKFwqTihcLZWM6PwBDZr3xPHIr2sltkn9MtsYufhSpoLJ8sq4wV/IMYKvuN
vwvlcJOsi2wV3Qq7+Ql8WTzBz+afoPfAA/yJmEMfjZfpc6yfR0+hq+Bt+iSs
lL+o7oeH5Z+o1TBSPkzdKbsbi+gzUJ6erh6GH/A8/7laF9vRwee6qqvlX6qt
1XfVU/ET/rE+UT0Y3+HJvDO1FrbhdetPqnviawy2vlitnOel56rH4BW6qr3n
01Pz+/Ic/Et8aTzCj+KH07/TvVABN8tula2hr8W//BxUwwXyaflerOIfQkfc
Jl8ra4P/+Ll4SrYXhsiWqFVwMv2Geiw2Yjy/Wq2P6j5zoTpdVi05/zA6oZt8
new6FPIdshq4SD6Dr441/CPojJq42NpMeQ2s5R/N/UIt1EYdXGLPLOs1sY5/
LHdT9gd/Dw5DF1l32Rf09SiCN2V1cal8Nl8LX/Cjc7aoh8tyVvLaWM8/nveK
2+XrZW1RFPNkT8v2xlC+EurLLufn0HVyT/iX+f3xKD8mPUD/SffG4ZjBH44X
6Nus30F/Sd+A9+jTcvfpSeoheCq9pNbGW/Y/o+6DYfKP1XNwSn6rehw24dW8
Z7VBejfV565Q5+b3546rC3LO+BFfWX9FLYNv8Zj1ZTlr/JK+tD5S/Uv+ldpH
/UA9E0fQM1Mxlu5m7535TvpG7InJ/KF4mp5v/Vm6GIbzp+JcWRP+Dboevk7v
5DzRMHMJTa2/mXeOb3Jvc0bokf6StcNemQeZQ7hSPo9vgG9zdnnX6Cn/JnMM
e+c9ZJ7gqrzfPAs25D3nd+CuvJPMLeyDhelVNJPP5xviu/wmjJL9zffFkegh
u1u2ge6AYngn/Ymr5W/zjfA9/1z6VLaL74ejMnNlvTJf0u8onhmU/sM18gV8
Y/zAP59nTa+hubWF8vOwkX8hz4F75N/LOqJE7lv6Dy3k7/DnYxM/Nj0t283f
i4qYxR+JcZkpaj3sQC97e2eGyjthX7yfnkVL+bv8BdjMj8szpB/Td+md3Muc
PVrZ+559F+LHzPJ8L/pkBsk6oyQW5S6gtfx9/iJsybzMXvRND8huQanc09wF
XCtfxF+Mn9Kn2Yt+8s2ZH9gPH+YuoI38A/4S/Jz+yN6cO66z9qH8UvzCj8e9
If0k64rS+CjnjOvlH/GXYSv/amZg/ofw/XF0qqy/bAt9K/bH4pwz2soX85dj
G/9a5qTsX/4+HJMquy//mzJXUAZLchdwg3wJfwW28xMyQ2X/8ffj2FTZ/bKf
08M4IPMl91JWHCP409BCdiP/Md0EO/L7+QMwmp+Y+UoXMIA/DgNkAzJL6O44
EFP4cniGXpr7S5fAg/zpmEcfj9foltbb0UvppulBulJmW96leiAel3+q1sBW
TMosV4tgYM5VPSvfSc9Wj8KL9ED7BuYz9O25u/TpOIieqpZPz+BZfqVaB5+k
p9R9M0swMr9BrZr3hzP4t9QTcrcwgV+rnovf0Mrn2+d75OvVKzMXMsdz/tmT
M84zZHZgjPXP1JqYbG2MWhSDcsfUs/O36NfViniJHmTfIHobfQfKYhpfAc/R
y9LndEmM4s9Ea9lN/DL6Kuzkp+CBIN8uuxMH512np9BB/infDL/zUzE4/ZM+
yd3HzfZ8Zv1q/MFPw5Dca3S0tlx+Df7kp2No7iw6WVshb46/+BkYlvuHztZW
5j7ib34mhudvZy7JeuCQvLfMHVkpPMSfhfn0iZhIr1MbYifa2fs/1beLDA==

           "]]}, Annotation[#, "Charting`Private`Tag$221994#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/KaxSTwH9rKUuf8BKA+y3Q==
           "]]}, Annotation[#, "Charting`Private`Tag$221994#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 9.999999795918367}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8654466261281967`*^9, 3.86544666786285*^9, 3.8654467269099674`*^9, 
   3.8654467658875027`*^9, 3.8654468227773094`*^9, {3.8654471081240582`*^9, 
   3.865447131300647*^9}, 3.8654471686976876`*^9, 3.8654472149538946`*^9, 
   3.8654472536035347`*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"8422c06c-0a54-450f-bf30-82fd245b3abe"],

Cell[BoxData["13.131296596794906`"], "Output",
 CellChangeTimes->{
  3.8654466261281967`*^9, 3.86544666786285*^9, 3.8654467269099674`*^9, 
   3.8654467658875027`*^9, 3.8654468227773094`*^9, {3.8654471081240582`*^9, 
   3.865447131300647*^9}, 3.8654471686976876`*^9, 3.8654472149538946`*^9, 
   3.865447253633526*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"60eddc4f-7de6-45ca-9031-103521e3ce42"]
}, Open  ]],

Cell["\<\
Periodic Re computations without using previous estimate for costate\
\>", "Text",
 CellChangeTimes->{{3.8636129580817432`*^9, 3.8636129685064144`*^9}, {
  3.8654474939926615`*^9, 3.8654475142641797`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"5e902872-386c-441e-a1fb-71cf8c39bef1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
  RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"\[Tau]1", " ", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
  RowBox[{"order", " ", "=", " ", "5"}], ";", 
  RowBox[{"maxIter", " ", "=", " ", "30"}], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", " ", "=", "5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", "the",
     " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", "in", 
    " ", "time", " ", "\[Tau]"}], "  ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "0.2"}], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxErrorInitial", " ", "=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialConditions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MyAppend", "[", 
    RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f1", "[", "t", "]"}], ",", " ", 
            RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}],
           ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f2", "[", 
             RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
            RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
             RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}],
       ";", "\n", "    ", "f"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", "initialConditions"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Js", " ", "=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxcountAlgo", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
    " ", 
    RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
         "order", ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", 
         "maxCount", ",", "initGuess"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", 
         "uBound"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    RowBox[{"ICs", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"xdot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]dot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xs", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xs", ",", " ", "x1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"xdots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
    RowBox[{"\[Theta]s", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Theta]dots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"us", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"us", ",", " ", "u1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Js", " ", "=", " ", 
     RowBox[{"Js", " ", "+", " ", "J"}]}], ";", "     ", 
    "\[IndentingNewLine]", 
    RowBox[{"count", " ", "=", " ", 
     RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "count", "]"}], ";"}]}], "\t", 
  "\[IndentingNewLine]", "]"}], "\n", 
 RowBox[{"p1b", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
      RowBox[{"us", "[", "t", "]"}], ",", " ", 
      RowBox[{"xs", "[", "t", "]"}], ",", " ", 
      RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
      RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"\[Tau]", "*", 
       RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
    RowBox[{"Filling", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
    RowBox[{"PlotLegends", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", "\"\<x1b\>\"", 
       ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", "\"\<xdot1b\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
    " ", 
    RowBox[{"AspectRatio", " ", "->", " ", 
     RowBox[{"1", "/", "3"}]}], ",", " ", 
    RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
    RowBox[{"GridLines", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", "Js", "\n"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.8654473718577185`*^9, 
   3.865447380483961*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[284]:=",ExpressionUUID->"db1fe012-3c00-41dd-bf23-d956f20ffc05"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.865447385776267*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"e24d5fa0-1925-4b91-a6c5-4b3a0948a4f7"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.8654473897140083`*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"042e9e3b-099c-4e9f-9b60-7737234042ea"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.865447394935339*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"e4a9ea77-aef1-4256-afeb-43647d389980"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.865447398142313*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"d8e5a864-996e-49ef-9668-635c7ed12e67"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.8654474004075885`*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"abc38e85-a5cb-4755-bf7d-359408195a9d"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.8654474015802135`*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"64161f47-8839-446d-ad3b-a4b9ef25f4ac"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.865447403910468*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"a529319e-a79d-4789-b379-26c13e1c5fb4"],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.865447406214731*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"7dc6844b-8e20-4c36-93fa-3e649567c9cf"],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.865447408268075*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"50af0c08-a1cd-411c-ad57-7951aaf420ab"],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.8654474093067427`*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"e5a0acf8-e273-4885-b0dd-0ab36f8925bc"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
++dFK4M2SJ4eB7h/fqC+VC/84SThy6VhyoHSHQyA+fJYh1x9y0UG6Z+nT7vs
ZrvJAJgvX5kpwZX3bhJgvnxLq4nTrfExwo8/WpkQPavQSPjxjHsPL4lvrST8
uPnjT2+DtXMJP/5uMPf295Qgwo8vf7miruz4RyRp8veui50ojLGKDenPyESY
J5c1Dv3qw7zvYp68W1InpaEYEZ58x+F+6vC5H4Qn57RduHLO/RfCPLmdjiLb
zdoqhHlyeXjE+DKqRZgnt/OP3lAdQkGYJ/++5fQKs+EahHly2WLfsny9Hwjz
5OZWHr2HLEMB5sdbdp1mlFo0AsyPn3k+u7VfqBPgnnrTwknFb3PdAPfUJenA
19+JBjBf/rDVulZ2mAYwX2785ifHsvs0gPnyget8pjybqQDz5e99t/cM6HYB
wpOf+Bx0abYJYJ78nvryw5XvrhCePKz5k7hf7lfCkyd5Gqb02v4CuJfOfuyL
3axBL8C99PKs80fqfg8Qfnzsy7s7EVeHAebHyyL45cfGRgDmx9OGCwGLJx3g
Xvoqzbtcq3tGAe6luyqIr3UuHQO4l37s5TLLK4sThDc/d4/7zWDDFMC8uVsp
F2XnMANg3tzJ+feRjckMgHnzLWUFhXbbpgDmzYPuVWsrx48TnrzgIZuzLGcL
4cnXODtY6JjWEJ78xPsDVUlrCwlP3mz42sT1QyzhyYuf3At104hBV90SPSk7
RKHY4qfsyovpCPPlu1TcnOa/5CDMl9d02GdwuyCE+XLacbnLkeKFhC93e29x
lXW0lPDlB8JOxB0+WokwX+5SFxAuLVyLMF8e4qcy6neMgjBfbif6xPmaZh3C
fLn0u2aXfSt+IsyXC8+HpqyMfUl48qYNbZ1D3/8CzJPf3JJ4I1G8A+D+ehJb
cNVXq26A++sb6sRWRGrRAObN9Ys9PDN7aADz5nNjb2JtE2gA8+bn9OeFvgZS
AebNbUcPnZ6u7AKYL/90ZOD6Pf0WgPnysJyfuw89Cid8ueM9+fq/7/IB7qmz
Omw09NEeApgfXxDme1ppOAIwP+4hcV7GcCcd4J66TvA31c/bRwHuqa9/Ui7d
XPAP4H76xvSRX0bTkwDz5l472S1YvRkA8+Z19Fcl92YYAPPm1r7pW3ZJMgDm
zY/QJh9Wsk0Snnx/2Y1nrCO/CE+uyJWnmf0ug/DknheOqcQVWqB8zuuZedUi
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
LahX+uz/MCgA+0WJUs8GtZZyAN63OM9qKlbyXZ34Ro5G7r97+j8T38g9y2hV
3ZV04hsdtJiptj4TSvYvJJ+J2xZINoCPA5LGKzql4bYT96L5rnaTPYx1VTOS
4zt6yB5G4odn1aY+NID9pE/VsyqmrzqIn3Suz6x4/4U64icJ73AeOaBWSPwk
zdvuHmKHo4iftPnPzbubbRPJfkbpzochpl8KyH6Gq8NRp/qTv8h+Rl7zzM77
1f/bz7jUtsg/pVJB9jPuMBJnX10uI/sZXRqLK7bxlaKtgX8sL36qAaP71EQy
OTuR6UKQy7bxNjAu9Qr+tKMhvK9hJJR7rNqASvY0+NfsULRn/v1q1YOOrHFl
gwuu3E/Lj9aCG/QU41ApdnjrUOsHH5kyUMmexXumYDl0fWa3WOxbS/yntvTw
/bPM+xP2nYa3eAassZwAeH/D9zW/Hd16GpwvvPBifmoFNFTyEp2UmyF7Gy/t
Rb15n1DJvsY/JcnkvU6NZF9jYLVF1y/+IoD3NfL2nL9w810o2K21bKDTVgJW
S4tMPwHxKMzh5WK3piQcvizIfig8jfhSyg/034woJxNfKp2N7WWtaS2Ia/Cu
V/wiDcfsugbqRbtAdKrqh733ZeAvepMyezsNcP3MHtm6fw08wPHoYDtnD8B7
Ha+U21b6Ms/P2J+6KxAgHpyZi/g+bRmJfiwPFbNevzzSXYryNSW5DXrlYfyE
WquuXjmKlVj0DzRUgDrP7hzlY37/6B3mSEnPUoC7wooX09jL0UUHdcZrpwYw
sZ26OkCWiu6mGFDufugC3ZzNcm5W/9sDqT8bdHJ06//2QJLcCi/QNKkg4Ci7
7rJDy2CnFIdX7+cKwJp/99aFCXYopJUapPS9gvhXm0T1X3VlTgH3D+t/Cymt
gE6/W3ziNs+AY2du7ThUsBJeZhXQa783DeTSH17XrJSAgyYa1Y8OfUXUY7tD
Pr+ThHEffz6QCk9HifOJteNCMnC9kqjJNhcq8I1YV8TfIgNLuqOkNM/1kP2Q
4V1f54fbqMS/MmSR3viuLAXpdOz5diFFHi5dZfW/6PobfQrf3XJYWgGmTiir
T62vQDEzE9v/uSrAjQfvOBkMlZO9Ea3I1XEKn38j7GfpjpzqLLKORtjPWmaP
Kuf2tCDsZ51+310cU0VFeG9kbXGgtfhqGsJ7I+/GJp0+enWSvRFt/6dciv71
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
NQP3ipzyuCtnbWh4/3gkQjSo52gX3j/GdpAu5T8i4/2j45H1LtabP+P9476c
Z03Wyndxz+jmh+SLa1xycc/ob6hp6Oj1ctwz6rc0u7+CVIN7RlObLFqp+8m4
ZyTl8zzzTE4t7hm5PeLYtvClHhF7yNJvnl+YqhRE9Iw6OE88mAyjI6JnpOu/
MvpeLRX3jHiVm8RvZPQgwwY9zb/0SRCjOj9ts6YF941aXXRlJUya8H7yj8Gm
nS5bKXg/6bwYdSKmpRvvJ9NEkmVPLjWA+Iazsjy23PCIwHXljjM1eE/p/eeR
irJSy397ymDZR4hEwXvKqocS0j7vWHhP6bUnachtxwzeU+rtbwsOLJoDwa94
g9Q1hODz3MP1Hn/mQEpkgVtZtzD0XOOlov1zFhD9pOSqizL99hO4nzTSaMbI
gCN4j3l/iG9cWoCJ95h1OuPx1dI03EvSWUw280/uwr0kaXqAbkh8KyD2leYn
WV+S7xQBopeUkHHtzjllb0DsLXenfjMqGHyP95ZbLdZ3Jm7LxXvLlGUCJSuq
H+K95f0LSqUC7PvDoC8PY5YsA+37uSOCpyi4r1S5lkNhP/v8RvSVyhbfC7HY
5ztinykcHhw+fXwA7zOFuaKvswJa8D5zv0d/16fWUrzPvKXlHBP/+Q3eZxZ8
dxqPqUjBPabsl4e7v70vwj2mEKn3xz41VuEe0+nbBerWr2txj+lNVHemjy4Z
95jOu4bZhb2pwT0mvqiik9RHxUhb8YmW/3n2ufXBM7KAbj8aTz1qzlXSAxxG
jBJnTOmI6DVdctLS2BFNw32mtZyHhe5Z9YG/5K2hLdac0NKOZ3RhezMwu+Qt
IjfNBUNojpv+7q4BSbY0xtM4Hpg4V2HxPKsR7z9XkkhrjbT68N6T8qbBo4o+
BYie07ObYNcepTkg1vp3j1CjIAw8LaE4qDKP+01gVWnX4yIa7jWdcDT7Z53X
gXtNLq3NcjLnKwDRa7I6+i00ujwBNIhYD+hZSsG8k5tevelMRnzfA1U/kKTh
3XlJ24mNOXgvWingMXQlNQfvRS1W8aq5SjYAhovbJZE4GVhUnDEk/nAAkC4V
LQu+IAsPnc16GfOB/TqN0B4OqsjBjoznpzQ3MXAPaogvXOuHFRXvRxVczyo4
2BWgVSpHYg97bIDzyZkfqw9UIvUZv8YdPRtgcM7ypDmOWtTS4PNS7iD7fhbw
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
7t1VigpMrSmowr27o7eumo8/q8W9u6Nqv42bARn37jLz5p9/zqjBvbtSrz3C
/tFFaBVYbiO4vQHwWFkvj5TsR9kHJl4rhPeArsOz4SRDOiJ6eMqsnkO8iTTc
v7O8sbA1UqAP7NR1ufriBCfsnRTe6HGiGdQdS/xoO8YF1SUdP3XAGvDiudNK
k2geuD9Xb1govBHvxS9/XWvswOrF+/DuF4tvtzRMAaKXd1xq/OVT6TlgfYrV
XFAtCPO5Ot/yqM/jPt7A2ntHT9bQcA+v5Jihs3VRB+7hUdzmk7hqKgDRw2v0
O8l9aGsiGFKHu5QspKCTp2lt7vVkZPCym35kvTRc1e+yYCicg/flGyim3o++
5OB9+Zfv3IOmN+pBhW0cB+WpDPRNCasgOw0AWmZ7xBV79u/VnrHhwmQ6MJl0
cnu0XQ7aK/NGrdzOwL29zFHa3nueVLw3rzWnh0ctfEWXKv8GFrpvgL3/quOz
tlQimeGRXz5dG2CKxAXq+HQN6mZ/lEP2kyBkLeT7ss8bnI9tsy9lkCCKDf8e
tK8WwY0Xxw2XWoG/svZy5zgq2nDSm3l1ZgDoDs1dcH1Axz2/v81V8Tfed+Ke
3zuXul73lzTAOkE9f1+GC8KiDAGb5jpgu+FczdZybhgj8jdMKLcW79V/iWjP
f9KfBatWjtumzQtAPrcawSWJeXBoYsmdP1oIsmpyCpRT2PeVrIJ8z3wpuHZI
cKuweSaK8rh3VzJEGi7e1zgqGZuLqv0K/3xYkoGnR+brcwVooCG2PkOrQhY6
R+dNWFkwcP/PkoP+aHzHf3t1Xc0ry17+zEQJiyvNfd5tgHcPWhaX8FQjfhPB
iruiJPgt/w25hX1f7pzTODTqQYLXP3J7KLHv08SevVAzIFuUo4b9ez8mvmeu
C5wo6H6whoeOivLky8zNaKDxNDmVY5yG0l58TLn6mQvGfcmREflcAy44Ju+Y
teeBDiEaY9vCG0DlwqPvhcMrYe2Xrsml3N/g9Q3H98qxgrA8bvymHPv5Tuzb
NYzbdm8UYZ8/Um/cO8MjDR1OK0g+N/6E9+5aLfHhboq5aHD2+fLbRrKQ/CQx
lHaCDjzWJw26r5aD5M2S2m3GDNwflMxs+DS4jIb3779S4Jqnrz8j+0jSX466
DfBv8VeXheAaJGu/L396DwluSnIPNWWfx6eHhVbeMfoJ7LqzlskPUtDO6kX5
35sGwCahumVXI+m4V9gjy5P1xoQKvBt4HapGOOH3FV2XJ1UagM411zLNcG4Y
Kzk+O9peAy6/goJ3SwXgP3K0vdXEHIhYccfE3V4IrknNilVtnwPe98XXKrlI
Q9NFifvB7Od/9Z/pb9o0GWg2cOjVSm8qaOmNVDyYIQvR/TDz5v/vP54rFc/3
kYOXktQXx+6zvz/TBo2LXCTY9Xhk19W2WrROT9PW3IkE/ZMXbKs2kVGM7dS2
1Yp9YHD5nVroTke/eCLzzEjcsL9oZceobA2QrKNeWHdSAC4dUCP3u8wBCeC6
aLokCPdnR+SUyc7jfb3hgfHe5Xs6gGX0/sP7tKWh6vjhoML3OXhvf7vD7lB/
UgbqdVwrYXtXFhaTdp88xqADUokax1Mj9n0/TVIsZhkDtO/LYf4d3AA3Zt+e
TDetRfGNuiEbj5Ng28q8jj4TMgo5U9gsntUO3p9J3FmnQkNitH/ptCIKWHV8
xyZnO/a//3+9xT0S3vqf/rbj3uKVZhvOBGEasOlB9lpHuKA430CYVQAZPGo1
a5L7ww1fD69XpdPJoMDtRU7HDkFomzWgrqg2D95eHepf+Y79eZu658l4motq
jwvu2t4nC+8lDo41ss/zJck/vy7IkqBG1/uE2i3s50OmurqfHwl2JGt4mjFr
cX8xWUMxei6xGnW/dDpevLULuD16HSDQRUNP9XcruMVzwaxQgYF3orWg7J6y
eJ+3IKQoSTqlsO/PQdGB70/UScPVsgc5Mo/kIoE9Ra/HeOTgcPTd+1MnGIDo
M/J6cmSt25KH9j7SL01RJcHNS46dew+TUR6XDtIu6welSWvmfrI/n5vFFiB0
44YfjZL2vQ2qAdFXLp87lyIAq1d789xonQNuvOeoGeekobDWm9EFk1zUtmzK
npwoC+l9tO/C29jfn8r+E7pL7O/HUnTPafZ5TeeClhP/BRIsd1cWrdxFRknN
LpfirXqBP4v11o79fvS/l1Cz4ueG4KN7vLlCDdAy3nmJhyYIz3vFm7xk3z+J
/f+TP7qTFrEdwFQqUuLHNmmYLvT77RH7HOwB8PxiRK3elYMGQj3MGddkof6T
FWk1lXSQ33Hkq5COHIzYa3DJS5IBvs3sfdp+mAR3jdhWlB9jvx8y4NCm0xQg
WOIbLe9GR0Q/8hVDpS+89b9+pK3x9+3GWTSg+LyRekaDfZ8djzFfr1AHbnh2
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
TPofHz/CPyDyf5pyUzA=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{4437, 4436, 1418, 1260, 1475, 1132, 1454, 1296, 824, 
            1357, 1199, 1070, 971, 899, 782, 1324, 1166, 1037, 937, 865, 1383,
             1225, 1096, 997, 825, 1358, 1200, 1071, 972, 900, 783, 1325, 
            1167, 1038, 938, 866, 1384, 1226, 1097, 998}}], 
           PolygonBox[CompressedData["
1:eJwVzjsvg3EYxuEnymQyNgxaceiHoGr3as1IdHaY0KShPkBnYWxZfAc9LFbd
tQurpFNTh5D0Mlz5P/cv7/Bmyqe7J1MR8S9HaS6iyGoqYix+8sX8TMTldMSv
fkuRNQr6vZ6lY1/w7fsF/Ur7s+8ocaB1tTwDO8eW9mAv0bWv7Xd3mUf3LBX9
2NvTnrw7/i9hW9+z2/o6r/Yyea1hL9Kyzxj5p7Re1X7sGxL2tY62Qd9eYVNr
2hnads1+cx9ybh/ZL+6EhjvFh173DrVn7wQi1yzn
            "]], 
           PolygonBox[CompressedData["
1:eJwV0LkzHGAcx+HX1egU7vt/2F1X5WaGRtgVDaMLQjKDjh4JZsy49VrB7joK
ZQrMuNPRJq2kiMqzxTO/9/Nds4Pa0am+yewQQhYLJApCiHOQE8InmvmQF8Jx
bggRbvQi07ZHHedVFxOxretCNrz/uz/sc97P3hfusLvv5nPNmM/H3Et7D791
C/22pI5yq5coIWrfsBVxqMdppZQyyon5mU2fF3OkJ2hjwJ6yxbjT35ixPekE
f/Wa/uc9S4Wu01veSbfE3XTf3J+Z/4nP590XPcLnzO+jr7x7+aPbidvSuo57
/Z1K6u3bttLM9+tJOkjYT2z1POhlqmiw79jKSOkpOhm0n9oaeNQrVNNo37WV
k9Zf6OKj/czWyJNepYYm+17m7+ZEf6WbIfu5rYlf+h1JdkUd
            "]], 
           PolygonBox[CompressedData["
1:eJwV0LdLXXEchvHfLYJDCIh7LDFmMCb+CfZZr4kJWTSWIYsaXWyD14KbujjY
EkFigmQJBMRFsCyCYBmFxEEdHGJbHKyfMzw87/t+OZzDyWtqT7XFQwgxjKEu
K4QU7oz3eJYRwkAyhIdECDOoQxEq7N/tBZiSb3jNnpaPoszNvMRPsIMe9zbe
tdfgvz6mX8hfond4X46elgNm3d+iwbaml+Kv/gqVtkX9Bdb1Qf1YbkGv3q7v
ybVYkDNwZh/nS1snfsvZCPZcHrT94RhP8jXPuXXLB/Iqf+RFzsQ23rk38rp9
hcuiZ/iBt/if+yifRt/Jn/kXP43+A4rdq/iHfZkLeZpvecNtSD6RW9Gnd+j7
cgrn+oR+JXchpufpQ3IcX/V6fLJt6OU41F+j2vZTf4lNvR9x5NuHbQl809/j
DRJI4rn7iFsS8/oHlOARK0NLhQ==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{4431, 4432, 847, 919, 1019, 1148, 1306, 757, 1298, 
            1456, 1135}}], 
           
           PolygonBox[{{4439, 4441, 801, 1491, 1301, 1459, 1143, 1270, 1428, 
            1013, 1112, 1240, 1398, 913}}], 
           
           PolygonBox[{{4433, 4434, 764, 763, 810, 850, 922, 1022, 1151, 1309,
             762, 1136, 1263, 1421, 1004, 1284, 1442, 1103}}], 
           
           PolygonBox[{{752, 4440, 4430, 917, 1017, 1146, 1304, 755, 884, 956,
             1055, 1184, 1342, 804, 844, 916, 1016, 1145, 1303, 754, 883, 955,
             1054, 1183, 1341, 803, 843, 915, 1015, 1144, 1302, 753, 882, 954,
             1053, 1182, 1340, 802, 985, 1084, 1213, 1371, 842, 1287, 1445, 
            1113, 1469, 1241, 1399, 914, 1014}}], 
           PolygonBox[CompressedData["
1:eJwVzbkyQ2EYBuBPUMuJ0LsBsnTW1FGIzKBTEFuRuAGtbTRB9Hoitk6ry1iu
QBtN7iFPimfe/32/M3Nmdo6rjVREjLDFRhKxSXYs4o7ieMT0aMQlvxRt71Tt
Jf2QZyZtLQr2KX2FAzpk7Lfk3bL6BT8UbG+s25f1RHZo2D5lX17Jf7dV7335
NPwX5yxRt/dk13cp7inbPmRXHsk9923vP0709vBf3jfk9Ix+xjd52ysV+6Je
45G07Zo5e6IvsMsDE/Yms25p/ZQvcrYX1uzz+gDIDCe4
            "]], 
           PolygonBox[CompressedData["
1:eJwV0ctTzXEcxvGvyynnqDFm+gfMFF20cO0PQIVWOi2SMCGNZjJuCwzKuB2y
YGFTwxQKXRaNZhobG3XKjIWwkhnJyLBxW9hkvL6L9zzP+/mc35lzWdV0dFfb
4hDCIjxF7coQ0vi8JISXCTvuoWppCJNo1ve7NeofcJY/4nn6TZTxfH4xPo9y
2zBq7BV8H/qx3NaJUntedGzGXvQh5XYDJe4p3oEprLUNYad9E59DJc/ikK2R
P0SSX0exLclP6X9wm//idfo7nODtvEX/iit8kv/Tu/UyOSYH5Q650e21XIEh
tNq/I6N/cgvyLrbZnskJeVDucXsVPwv6o9ufyxl5Rj5wz8q//I5cJkdlRq6J
7j4tCzCCk/YJ+Vvekj/dc+L7IG17i+P6BXu+HMBh2zwu61n7gt6ll8oBbNc3
2I/o33CNz/Kt+jgO8AbeoL/HaX6f58bXYjXP5T9Qy9/gmO08b9a/4FL8TXiJ
/gTVfD3/iC38BZpsu3lv/E78KopsOfwcxlFse4wq+zpejx4k4n+IQnuC/wcu
dVqs
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1ne8z2UchvFj7713yN7aey+ljDKa0h6iaClR0bDSJmXv0Q6VBqGIQksl
tJCG9la971d/XN2f635+Oud8v8/znNOwb/9uVxUqKCjYXbigINlS3mF4SxaW
j8vS+AyTrI+Vu/Sb5MXyVVkXva31l2/qTsAic2V8rp8q9+huxD68C19gbo4V
fDz/2TwAQ/mt/BNzb/zCaUEr/7mTF8Fkfib2RVf9Ql0LrOTDUASt9XfpimIK
Pwv7oSjaWLtbXwxT+dnYH930j+taYlW+DxRDW/1IXXFM4+fgAHTXP6Frhdf5
bSiOdvpRuhKYzs/FgThd/6SuNd7gt6ME2utH60piBj8PA3Rr+Yn4gh+EM3RP
8TZYzSfwX8xXY3i+Pt9iPhNLzTXxq362LIKh+jWyKUrqO8gxurdlKfmELIOZ
1u6RX+s+lJfIZbIedqKP9avlOv278iS5WFbBdnxpfZr8R79FDs7zkY3z/8TB
1nvIp/UbZFv5tCyPNdYeyfetuwYj8pz4VvNZ+I3P4UUxjJfiHc1jzaUxi4/j
35gvxfn8Gv6WuRO280PQU/cMb4c3+R0YrtvGz8bvvDT20d3Dy2A274tD0Uv/
rK491vI7USZ7Uj9OVxZz+AUYqHubn4wd/DD01j3HO2Advwtls0f19+rKYS6/
EIdnv+sX6TrmbPK7US77Vn+frjzm8YtwRPa7fnHOW94vH4ny2bf6+3UVMJ9f
jEG69fwU7ORH5kzolvB9sZ6PQoXsY/0DuopYwC/BtboNvDO+4kfljOie5/vl
HfPRqJh9rH9QVwkL+aU4OmdE/4Juf2zkY1AJB+sf0lXOXcQvwzGojCqoimp5
pz73sM9UyT7ml+NYVM/7sjZeXxVP8itwHGrkXViboK+Gp/iVOB41UQu1UQd1
US/vwucf8dnq2bO8H07ImdW/qDsA7/CxqJ93oZ+oq4Fn+FW4TreRn4pd/ET0
0S3lB+ZM5fxhhO5Tfg7+4A3ybnSP8pp4lt/LvzVfhv78ev6O+TR8zU/C+bqX
+EF4j0/kv5kHYlz2fu5387n4k8/lxXAr3yvv0/yYuVaen7ls9q7+Pvmd7nIs
N9fHAP0N8l1dFywxV8151E+X/+q2yptyB8q9s4ZOOVvy5bz/3BF5XrICvsD7
1h+Vv+s/loPkCrkXvsqZyRnM75v8jPI8+ZKshb+szZPFcVvOu2yGhtl7cpKu
Nhbx+/lu8xW5V/mN/D1zV3zLT86Z1r3CD8EHeQ5olH2pn6yrk/sw9w5OyRnW
v6o7FJvyNdA4+1M/RVc3z4k/wL83X5l3wwfn5zZ3w/Pmanne+hkyvxS34WZr
q2WT7AN0zh0gl2UfysOyT2TF3Mv40Ppj8g/9ZnmtXJlngV0527mL8sz17+eu
ly/L2vjb2nxZArfr9845Mk8118v3yB/kP5j7YRC/iX9g7o7d/NTcObrl/HB8
lH+T+yzfX+5r7OFNcg5103h9vJB7BqehKZrl3Fmfbq0BXsy5QpfcSfrXdEdk
r/CH0DznTD8jexpLc1bQNXeQfoXuyDwT/jBa5OzoZ+oaZi9lX+Nm3SZ+Or7n
3XIn6Vbyo/AJH4+W6KSfpWuUZ5i9hCF5B/wM/MC7567SreJHYwufxP80X4cJ
fCTfbu6Lf3ir7EPdbN4Yr+Rn5D+a88fcYH4L/8jcI8/OXD3r+pmyEIbkZ8hd
aH7dfAyeM1fCVv3knJv8PPJ6uUo2yt1nbZTckb0vL8jXl3XS5XxbXyBL5u7C
cOtrZfPsXbTOmZBz9Otz/nPvynI5uzknef7yp+wN2V++JhvkzrA2VH6s65l3
bq6Rz+pnycK4Jc8297j5DfOx2ManZP+ab8BEPprvNF+I/OHbRnTWzTU3wbK8
awzTbea98DPvkTtft5ofh09zL6Ft9rZ+nq5p7sO8a/REO7RHh+xfn5lvvVl+
rrwn9MrvBf0a3fH4LGcUY3K38YtQCAt5KYwwr5MtCv//d3tHn/0P61t0nA==

           "]]}, Annotation[#, "Charting`Private`Tag$280907#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8lXMYxvHTpr2nlpWVGSXtXaT60bSzkwYVimSTpnbZhIwUkWRk7+w9
s7e00/K+/vi8rvu67ud3zvN7zve+n8aDhxcNK1YoFP4uXiisxaYShcItuKRU
ofB5yULhWTqQLqRl0EPvJPqsrBU+5/dEK9ntfH08zV+Ef31eTfmlss38DByL
vdBafoe8AVbyF2Od62vJL5Nt4WfiOOyNNvI75Q3xDD8K611fWz5WtpWfheOr
FAo96cny5+St8QW/D9rK7uIb5f/iR2ODz6gjHyf7j5+dz8ApsudlbfAlvy/a
ye7mG+M5/kp+jfoMjOGH8qvVx+MudQn8IZ9E/5a9Qnu5v+HqJeqq2Oj769LL
ZdtcOwe90Nt1Tegm/c3Ygnquu8J12+Vzcw32Q3v5PfI98Xx+O2x1/R7y8bId
/Dz0wamyVbK2+IrfHx1k9/J7YRU/gf9ePRiL1OXyG8ovpO/m+dM+7q+X+m51
SfypP5n+IxuRZ+n76/NXqnfqzUcRDsA2ve0o8hk76E40cO0E1+7SX4ATcCA6
yhfK98Y89Tb6gvwq9Q+p6Zn0QVo+95fzoz+Mvifvjb/4Kfxa9ch8h+9ryF+l
LuBW/RNxmuwFvh2+5g9CJ9l9/D54kb+a/1F9Fsbyw/n31X1wj7pUfmv5VPqv
7CIsVVdDQd6IXi1bRovRWXQzvU3vUvUXOVt0EL2P7oa30Vf/dPqifAVtn7+h
u+gb9Bv9G+hvuU96Pn2YVsxzQFP9zvR++XK6L51Pt9OX9K5R/6Q+G+P4EfwH
6iL8w0/j16kvRjG+MX+Nujhu5/vhDNlLfAd8yx+MLrIH+CZ4mb8cxbMz5NfK
SuAOvj8OQQmUzI7Qv06vJO7kB+DQnAtnplR2gv71eqUya/xAHIau8kWy/TJv
/BUonfmX3yArnTPLD8Jg2ct8R3zHH45usgf5/fEqfy3/s/ocjOdH8h+qT8Ba
vkx2g+xGvkzOAH8Z/6X6pMCfyb+i7oQ1/I387+ohOILvzj+kPgAL1Dvoa/Lr
1L+oz8VD6gqZp+xW+pHsRNyrLp2zJp9O1+e+6Sj6GK2e3zHnSL8JvUn+RDyd
TbfkuzL/+mPpV9kh9GR6P90d78Trn0VfzX6nnfO750xnV+jdlF0nuwCPqCtl
LtBMrwd9WP4UPTDzRnfS1/WuV/+qPg8T8h7gP1b3xbq8i/gN6tHYPfuOn5ga
C7OncbbsNb4LfuCPzHtG9gh/UOYj+wJls+/kN8vKZr6yD3EUyqF89pP+JL1y
+f+zE9A87yH5YllTvJk9gArZUfLJsvJ4gB/Hf60+Bafz5/Cvq7vmnGfm8WZ2
SHaOszwxuzMzSIfSxbQyWuj3pI/KDsZbmVFUzF6ST5FVwKLMHc6VvcF3w0/8
0XmPyZbwh+DtnGVUQlP5VFnF7M3MAc7LffHd8TPf1721zLtIvlR2KN7JmUTl
zLZ8mqxSzmbOOI5Blcyx3nR55eygnBu0Qm/5Y7LDsDq/PapmruW3yKrk7GRH
ZJ+pT80+4s/n31KvpD2yD2jxZJmPvJdkrbP/UA2L89xzBuS/0ptd91f2Dx1G
H6VV0EavD31cdjjezWyienaJfIasaq7P80Vb1Mie0Jspr4YleXZohyL5ssw0
3stMoCaOkM+SVUc/z3Vp/ie0zz7Te0LeDO/zEzFK9kmuxXq+FprJZvM1MEe9
NfOd/ab+Vr2KnpYzSMtiNYboD8n7Q34cfuM75NzJnuSPxAd5PqiduZHPkdXE
4/wF6Ig6qIt6mRXXzNWvhWX8UHTKeZEvlx2FD/lJGC37lO+PDfwMfqN6DPbI
XPHz1E/S2nQu/S97Ic9Efzz9LnOEC3M/2UXqnvid74x+sqf45viIn4z6aCGf
L6uTz+eHoQv6y1fIWuBjfgoaZF7kC2R1sZwfjq4YIH9adjQ+4aeiIVrKb5XV
y17jR6AbBspXylriU34aGmU25Lfl/8YKfiS6Y5D8Gdkx+Cz353xMp2Pkn8kG
YCM/k9+kviS/jbpG3kNorPc/eqF3sA==
           "]]}, Annotation[#, "Charting`Private`Tag$280907#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$280907#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
FHft/ww+N1s=
           "]]}, Annotation[#, "Charting`Private`Tag$280907#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
b/7DuIGxjs/8D8VeSKk=
           "]]}, Annotation[#, "Charting`Private`Tag$280907#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 9.999999795918367}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8654474099795275`*^9},
 CellLabel->
  "Out[300]=",ExpressionUUID->"0f56444a-5d44-4e7c-a35a-9ff38e9907ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
   RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
   RowBox[{"\[Tau]1", " ", "=", " ", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
   RowBox[{"order", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "10"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"M", " ", "=", "10"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", 
     "the", " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", 
     "in", " ", "time", " ", "\[Tau]"}], "  ", "*)"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A1", " ", "=", " ", "0.2"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"AError", " ", "=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A2", " ", "=", " ", 
    RowBox[{"A1", " ", "+", " ", "AError"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxErrorInitial", " ", "=", " ", "0.5"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"MyAppend", "[", 
     RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f1", "[", "t", "]"}], ",", " ", 
             RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], 
            "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f2", "[", 
              RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
             RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
              RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], 
         "]"}]}], ";", "\n", "    ", "f"}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["While",
    FontWeight->"Plain"], 
   StyleBox["[",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"EInitial", " ", ">", " ", "1.5"}], " ", "||", " ", 
      RowBox[{"EInitial", " ", "<", " ", "0.5"}]}],
     FontWeight->"Plain"], 
    StyleBox[",",
     FontWeight->"Plain"], "\[IndentingNewLine]", 
    RowBox[{
     StyleBox[
      RowBox[{"xdotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Min", " ", "=", " ", 
       RowBox[{"-", "\[Pi]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], ";", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Init", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"ICs", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
        "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"EInitial", " ", "=", " ", 
       RowBox[{"Energy", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ICs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"]}]}], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox["]",
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Energy = \>\"", ",", " ", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xdotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]f", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]dotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"Js", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"count", " ", "=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxcountAlgo", " ", "=", " ", "20"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
     " ", 
     RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}], 
      "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
         "order", ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", 
         "maxCount", ",", "initGuess", ",", "maxJ"}], "]"}], "]"}]}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
         "uBound", ",", "K"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ICs", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"xdot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]dot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"errorInitial", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{"ICs", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"initGuess", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Lambda]1ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]2ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]3ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]4ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xf", ",", " ", "x1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xdotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xdotf", ",", " ", "xdot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"\[Theta]f", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]f", ",", " ", "\[Theta]1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]dotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]dotf", ",", " ", "\[Theta]dot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"uf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"uf", ",", " ", "u1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Js", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"Js", ",", "J"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"count", " ", "=", " ", 
      RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Count = \>\"", ",", "count"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Error = \>\"", ",", "errorInitial"}], "]"}], ";"}]}], "\t",
    "\[IndentingNewLine]", "]"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]f", "[", "t", "]"}], ",", " ", 
        RowBox[{"uf", "[", "t", "]"}], ",", " ", 
        RowBox[{"xf", "[", "t", "]"}], ",", " ", 
        RowBox[{"\[Theta]dotf", "[", "t", "]"}], ",", " ", 
        RowBox[{"xdotf", "[", "t", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
      RowBox[{"Filling", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", 
         "\"\<x1b\>\"", ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", 
         "\"\<xdot1b\>\""}], "}"}]}], ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
      " ", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
      RowBox[{"GridLines", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"Js", ",", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<J vs time\>\""}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Total Time for Convergence = \>\"", ",", 
     RowBox[{"\[Tau]", "*", 
      RowBox[{"1", "/", "M"}], "*", "count"}]}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1b"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}, {3.8654474644860983`*^9, 3.86544746739017*^9}, {
   3.865447584859602*^9, 3.865447593586812*^9}, {3.865952499809149*^9, 
   3.8659525292967024`*^9}, {3.8659525819378333`*^9, 
   3.8659525893724527`*^9}, {3.865971536327427*^9, 3.865971615231144*^9}, {
   3.8659716506068087`*^9, 3.8659716545185547`*^9}, {3.865971738635604*^9, 
   3.8659717394583387`*^9}, {3.865971771360116*^9, 3.865971773325487*^9}, 
   3.8659718432830696`*^9, {3.865971878869669*^9, 3.865971881703761*^9}, {
   3.865972099999814*^9, 3.8659721093028316`*^9}, {3.8659724284015865`*^9, 
   3.8659724335579348`*^9}, {3.865972467781967*^9, 3.8659724678729377`*^9}, 
   3.865972527892706*^9, {3.865972575741376*^9, 3.8659725758223476`*^9}, {
   3.8659727852052574`*^9, 3.8659727853102245`*^9}, 3.8659729110299406`*^9, {
   3.865973909258086*^9, 3.865973915857973*^9}, {3.866046878808134*^9, 
   3.866046926929607*^9}, {3.866047001093678*^9, 3.866047039702221*^9}, {
   3.8660471109532323`*^9, 3.8660471110941877`*^9}, {3.8660471705050197`*^9, 
   3.866047173520045*^9}, 3.8661406529053097`*^9, {3.8661406905133476`*^9, 
   3.8661406905993204`*^9}, {3.866140819599299*^9, 3.8661408196882687`*^9}, {
   3.8665711649558916`*^9, 3.866571165889593*^9}, {3.866571417989247*^9, 
   3.8665714182851543`*^9}, {3.866572132358571*^9, 3.866572174133257*^9}, 
   3.8665722152271605`*^9, {3.866572708667897*^9, 3.866572725315591*^9}, {
   3.8665728020321393`*^9, 3.8665728154188747`*^9}, {3.8665728560299296`*^9, 
   3.8665728724307027`*^9}, {3.8665729695007653`*^9, 
   3.8665729789747458`*^9}, {3.866573043115304*^9, 3.866573053395028*^9}, 
   3.8665735494869184`*^9, {3.866573703021986*^9, 3.8665737072086515`*^9}, {
   3.866573789133541*^9, 3.8665737977058096`*^9}, {3.8665738824937863`*^9, 
   3.866573891690858*^9}, {3.8665752456343412`*^9, 3.866575271422123*^9}, {
   3.866575497520063*^9, 3.8665755162530923`*^9}, {3.866575560451006*^9, 
   3.866575588098196*^9}, {3.8665756738178754`*^9, 3.86657570879373*^9}, 
   3.8665757657245836`*^9, {3.8665764184045687`*^9, 3.8665764350932503`*^9}, 
   3.866576476534042*^9, 3.866576542813918*^9, {3.8665766740420947`*^9, 
   3.866576692525204*^9}, {3.8665778195290174`*^9, 3.866577843192477*^9}, {
   3.8666641527149525`*^9, 3.8666642404629173`*^9}, {3.8666643009855795`*^9, 
   3.86666430972279*^9}, {3.866664360277635*^9, 3.8666643758186717`*^9}, 
   3.8666644545994997`*^9, {3.866664806987911*^9, 3.8666648123811893`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[612]:=",ExpressionUUID->"1bec3645-5e1f-43d6-906e-b0d31dcb7ae6"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2`"}]}],
  SequenceForm["Energy = ", -0.2],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664813692769*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"872325c8-9c10-4761-9f52-56fd44f2336a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Count = ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.8666648145335007`*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"ff2c91d4-8323-4de0-8199-799d5b623ec5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.5122366499193913`"}],
  SequenceForm["Error = ", 3.5122366499193913`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.8666648145404987`*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"fcbdeac5-7972-43af-b0a0-a60203b1c4e9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.465923451988033`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>",
    "\[InvisibleSpace]", "1.465923451988033`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 1.465923451988033*^-15, 
   "    Error Min = ", 1.465923451988033*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.8666648150693293`*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"48adbbff-fac8-4365-a77b-42b1599283d2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Count = ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664815671137*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"d4ca1435-0036-4fb5-8755-86443b26580a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.7892298212785347`"}],
  SequenceForm["Error = ", 3.7892298212785347`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664815675136*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"3adc66f2-0f63-4787-9fa9-aaa170153ff2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "9.931183005702241`*^-16", "\[InvisibleSpace]", "\<\"    Error Min = \"\>",
    "\[InvisibleSpace]", "9.931183005702241`*^-16"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 9.931183005702241*^-16, 
   "    Error Min = ", 9.931183005702241*^-16],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664816181974*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"eb57c32c-071e-44d2-8f7e-dd3c5e085fd8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Count = ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.8666648200577354`*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"ee8e7466-3513-4426-9113-25713839c7f6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.897526791942684`"}],
  SequenceForm["Error = ", 3.897526791942684],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664820061734*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"9d0f4d9b-d79a-4998-b00f-f507784d291e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Count = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.8666648236825776`*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"c4c22d1c-4f6c-47c8-a742-408f1b447d7b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.8391016690220963`"}],
  SequenceForm["Error = ", 3.8391016690220963`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664823686576*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"52d3f610-af79-4756-9906-442130ca6992"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Count = ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.8666648268355703`*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"5c10fe0f-66c5-4435-8734-818b603143a4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.624511868688734`"}],
  SequenceForm["Error = ", 3.624511868688734],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664826839569*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"f1ae9af8-4de6-42b3-91d7-c55116425352"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.3746056313881602`*^-15", 
   "\[InvisibleSpace]", "\<\"    Error Min = \"\>", "\[InvisibleSpace]", 
   "1.3746056313881602`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 1.3746056313881602`*^-15, 
   "    Error Min = ", 1.3746056313881602`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664827285427*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"ee6c0472-8725-4265-b6ee-7e04b276ffd4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["Count = ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664829625679*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"8dc8ab37-19e2-4a89-ad51-5c3f3fd2ec19"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.2672319267826677`"}],
  SequenceForm["Error = ", 3.2672319267826677`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.8666648296296773`*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"7b0873c1-19a6-4a3e-ac17-6d3c9980233b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "6.4264135614725`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "2.972574264809751`"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 6.4264135614725, 
   "    Error Min = ", 2.972574264809751],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664830171504*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"223669c0-3c90-4a4d-8274-bd79bd33ac8b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.1139644388560821`*^-15", 
   "\[InvisibleSpace]", "\<\"    Error Min = \"\>", "\[InvisibleSpace]", 
   "1.1139644388560821`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 2, "    Error New = ", 1.1139644388560821`*^-15, 
   "    Error Min = ", 1.1139644388560821`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664830442418*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"6984d978-b9a7-49b2-8b29-fba6184d174c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm["Count = ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.8666648322058544`*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"2b0a2a98-ec8e-4f62-98fe-aa5326e8ea3b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "2.375728043382062`"}],
  SequenceForm["Error = ", 2.375728043382062],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664832209853*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"efad5f0d-7d99-4aef-9a80-44d150bd978c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["Count = ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664833787349*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"cf5fd164-9126-429a-b03a-acd273c5fdbb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "1.6074089498939548`"}],
  SequenceForm["Error = ", 1.6074089498939548`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664833792348*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"37e145e5-0c2b-4928-a7db-f800c9b8a6a5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "3.0204482016420815`*^7", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "2.648870234737877`"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 3.0204482016420815`*^7, 
   "    Error Min = ", 2.648870234737877],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664834414149*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"5712fc84-ab61-4522-9a02-2af338a78f06"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "10.595887988013658`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "2.648870234737877`"}],
  SequenceForm[
  "Count Shooting= ", 2, "    Error New = ", 10.595887988013658`, 
   "    Error Min = ", 2.648870234737877],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.8666648346900606`*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"0c54429e-123c-40a5-831d-56fdc9bba353"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "104.90877952288953`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "2.648870234737877`"}],
  SequenceForm[
  "Count Shooting= ", 3, "    Error New = ", 104.90877952288953`, 
   "    Error Min = ", 2.648870234737877],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664835044948*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"ee735207-bcd0-45bc-a198-0e21f1f1e6d1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "2.852112414286311`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "2.648870234737877`"}],
  SequenceForm[
  "Count Shooting= ", 4, "    Error New = ", 2.852112414286311, 
   "    Error Min = ", 2.648870234737877],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664835345851*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"fda8bf53-ffe4-4e0b-8468-c76413c6602d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.031376771977389`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>",
    "\[InvisibleSpace]", "1.031376771977389`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 5, "    Error New = ", 1.031376771977389*^-15, 
   "    Error Min = ", 1.031376771977389*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664835561782*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"3a8fb9e8-d637-4caa-9880-622894d051a3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm["Count = ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664836760399*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"39aef638-9682-4e4a-a7e8-1d7d34552403"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "1.1521403369986487`"}],
  SequenceForm["Error = ", 1.1521403369986487`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.8666648367643976`*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"69da0b34-d030-474e-a925-dfa69174b1b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.1881075891081254`*^-15", 
   "\[InvisibleSpace]", "\<\"    Error Min = \"\>", "\[InvisibleSpace]", 
   "1.1881075891081254`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 1.1881075891081254`*^-15, 
   "    Error Min = ", 1.1881075891081254`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.8666648373372154`*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"2b284a3f-823e-43c7-8b02-99643bc02f12"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Count = ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664838532833*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"8c36bb33-f5b2-45e8-80e7-35a7ba5d8f2f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.8935025970332755`"}],
  SequenceForm["Error = ", 0.8935025970332755],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664838536832*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"6ee4a6c2-1d28-4c51-9ad4-45b0df3170e3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "11"}],
  SequenceForm["Count = ", 11],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.8666648396364803`*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"a8ff9594-1757-4d89-a374-1c8b9b7d1fbd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.6823769798320422`"}],
  SequenceForm["Error = ", 0.6823769798320422],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664839642479*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"5080ea88-143c-4fda-b6c1-e083899579df"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "12"}],
  SequenceForm["Count = ", 12],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.866664840632162*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"2539da5e-2c85-4d81-8bf7-9e7542002622"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.46718026013125535`"}],
  SequenceForm["Error = ", 0.46718026013125535`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.86666484063816*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"7f42d55e-56a8-426a-9670-34547e91bf0a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Time for Convergence = \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["Total Time for Convergence = ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{3.8666642435539293`*^9, 3.866664316075758*^9, 
  3.8666643781669197`*^9, 3.8666644552163024`*^9, 3.866664567014583*^9, 
  3.8666648413569307`*^9},
 CellLabel->
  "During evaluation of \
In[612]:=",ExpressionUUID->"1d5e5542-d8e4-4fa9-8b02-26841af10f3f"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
T69rl1j+yoKky+NzVmJ6sUUV28JIESsas9juZmDegW/v+hqq+pEN1YcaPnmr
3owr/5pefP2FHYXvgm+xh8rxi4zy6LEH4sjoS9PkeVcuZPHyssV0ew58lnHp
J+ndwlteNO1lMa6BMqvRDD7tNGxMpagM9VLhtvc3F3RqEGc1SFrpdMyAt42X
rkPeEE5v3d6l8GMOciYOua17Q8KcI7NfRbJosLM36+S0LBl7JRwyrEpehD9i
hUvzW8n4ls+99dzRf6DtdFGuci0JX1R0U059/Bf6s+OjwleGsLrNp5nbsf/A
1d/ByDt9EGu/8hVzqBNH7K0XG2RjuZASG39fYUIqpPB6OmwsdcC62Y5ZAuoV
kGbQuWxQ+Ar7kddpu56Yg2v7JQ4ZXCfhP//dUsS7aWAtYi/yU4CMTTbo1B3e
vAirxynnb6qR8ePmt2l71/2BV6E8Qnq/6M8/c7n5/dq/MBI5e35Kh4Rf6HTs
C7IrgMO7FS/zbAzFPyvBZ3DfPEiIjcfwNpOw0CMXk4tyCzCn7RRUv5OMn0la
fNWTX4L75nePONHHuxApC/NNU/Tx+fK9CypvuRD1o0GYq8Jt0NKfOecxKoQt
2exYkiW+wZst/Upn+qJwVcjPqOAdjRDu+7ZYaE8ObtJoi8iM/wW3l3xa/Gd6
cLWkQfDrF1NQZDfkGeoxgAUF/Ga7cqbhj4lZ+tD8IOa7vm9Ov2AWnk6PsJTt
JOGM9JHt0a/mwaBVpv3jBAkPsbl8vua/ANlnGsSy6eMLRe+0iFrQErj1bNBn
4yXjl5Gucv+cl+F65k51rjsknDnxyEDLcwXOpjoUNXoP4UK2lD8mnqsw6PPc
rHBsAEPMVM6XDBbEYjEYEDTYi7kT9JoKsllRhHWW2bnsDpyunFZTksSGhFN3
a4i+acbzEH0wIJ0dfb9iK2B/rgLzhIcb3ggQR5ob5dU5L3ChmusxL8Pm34Ph
sXAjY9brWGVoj2iQYTV8qgmOO3nvNfa+5gvNmAp/lcyWLugO4pbn3Oop+TMw
9212Z3PiELY+46z6OWsO7u+Ic32QQMJly62n4BENhN+12cVuIONtK/dTne4s
Qvyt62eGt5FxySMBlhbPPxAw6rK77CcJpwcfb6Vc/gt81pmbL/GT8I0TqN/C
6x+Mh8rdqCwdxG8C9lfOlYujnKJxSd4ILvo4ecZptj0JCnZfeqG5ZIUNZ2pD
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
12fVCpppYwvA/U/VsoLevx98kfKwGlmCOzveel1YIOHo2IO3zrcsg5dB9/x9
cxK29e76d1I0H2w2xH81nA/CJr/Tfr4UnAdJokTXw28kvH739X51Kg0ERs9m
idD7d1epgWLCxCLw6ue1LG6iz8evl0KsB8TRIe50mZuJXKg552RN5PxjmNn1
IZinZi/24z880VcxD0pL51cCaCT878HLlbE3C/DgqfpF5/+1960KD0JMPkJ1
t17axVRfHGerLRqSS4NxiwOz83JkfCCo8FdfxiJcnLOSUKbXwzOiN7WnwtPA
KWZXG7+fIw7NL/NX16HBjSKNN8ZE+njBle3hoLQID3QPLvLT+0vymo/p/coL
sNfEtuksvX/vGLqgrDMtjuwc7thfzOBCUlvbvq62B8LpLPk49YD1OHe82yY0
eAGS/0gdHqY/v8bKygr5mmS4ILWu9sqoDe66MN5G4FmE4przai/o7d12Q4wh
D/8CGBrl6MzR37/48cJceb8n8GYiwN72wwF8YKt9/IEa+vzXvYNgQ79f19Sr
QmXGi/D49Q8zWfr1jM428ucdXIAL1/Y3mdCvt4zl5c3MJfp6Q5unzfQ9F8oQ
7X7VmeAFpbtJTd3GBCy47o+glfcCuLR5cbvRr0/9CXdw29ICiKjXPtKnf55n
5QargmhQK5tUnv+sh5POBByW/LIA75PURLzo31/xT8/qu9YCXLmuu92RPv7Z
VummRdqFgDfVfeNExzZsUVCUXfCEfj9LlzZo0v9+YtFw/HrnAkTwTcrJ0T9z
j9mUvDy9AA76L9+up98/3+MCWfKKOJJ2qiivzOFCDJ7I7rDjpp4MK2LwxBaN
uNYFet3I4Im7e3LNPZxngMETG0SUdm27MgoMnpipIdWhWt4BDJ7okmYx9Hdb
OTB4IilgXdy68DtMnljWM/BsoKuMyRO19xSUHNduYvJEO3sNpYA7JUye2J7a
+05Ou4HJEz0+X2ndGtPK5Il3bpFK2052M3ki98MuguyHYiZPzL3Z+7l2rJHJ
E6sJHhEdGt1MnqjWeylKaHKIyRPPKmaFhf5sZfLElyrOsysVJCZPpGL5HVNr
J5g8ka0/RyJUb4bJEw07Pi9UycwzeWJZbLXAaQ8aZvBE319xPfkH5jGDJy7u
appTYJ3BDJ44oFzfsxzwCzN4YmlOs7vkrwHM4Ilbfcy/CWyvwwyeKChYvq3Q
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
/cx3pEJGm7z/o5//L7/n//+H/KLo5/8H3JqY+w==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{375, 2684, 2682, 413, 902, 750, 629, 539, 476, 
                929, 777, 656, 566, 960, 808, 687, 991, 839, 1022}}], 
               PolygonBox[CompressedData["
1:eJwV1DVsVXEUx/EHBNcERnxgoDAgYSlanBQr7hRnwaUUlxZf8MCGuySluAfX
BEiwAqVoi0vCQIDPGb79yfnf927PvXl1RkxMm1A8kUgUQz1/ZpVLJDKQyqeW
SCRyDJORL2/FHHQNzI7qm+OVvA1zMUn/SDcMJXFFt0H3l89CErrpuuly+Ra4
yNdHQXwOLY9CrDG7T5Ox3WwZ/aqbiRqYp5use8wPRylc1XUP9Mfklngt78B8
9EDPUPPjZq3wRt6JBZiif6JLR2lc06XFNfoTcmu8lbfLFbBWfkCbY5d+Of2m
K6AZ9DpthJp8Dq2ObfxCZ6fyT/kRKBNndb3i+/Qn5TZ4J+/GIvRGnzhjfsos
Be/lPViMafpnupEoixu6vnGd/rTcFh9iF3JFrJP3yiv477EnOiuuo43xE7Xk
o7RGPAN+ifPT+Tx+FMrhpq5f3Jv+jNwOhfI+ZKE/BsS9mJ81a48ieT+yMUP/
XDca5XFLNzA+U39O7oCP8YzkSlgvH5BX8j/4zLgHvgl+obacGzvHZ+yQn9AU
LHXdTPpCNwYVcFs3KO5Tf17uiE/yLrkyNsgH5VWxE3426uBY7Ac7+WXmGfxL
fiwu8w1jz/w+WhWb+TvObeT/8dmR+WZowJ+kdeMdxx45j7bHHwyOHdIL+pe0
E71Ek+LZxf8Z7wmtgiJsNH9IW+A3Dpmvjv3E+07nxJ5p0/hO/njsLd5h/ilt
i+Xxe0DzdeNQCfvlatjC3zXfxCdir3JDDIlnJ1/kO+OLfDjeMWTqX+nGozLu
6YbG7vWX5C74Kh+JZ4thGI50/AeUkZ8X
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{326, 2683, 2680, 379, 417, 480, 570, 691, 843, 
                331, 453, 516, 606, 727, 879, 378, 540, 630, 751, 903, 416, 
                657, 1001, 778, 930, 479, 809, 961, 569, 690, 842, 330, 554, 
                644, 765, 917, 452, 515, 605, 726, 878, 377, 415, 478, 568, 
                689, 841, 329, 328, 327, 376, 414, 477, 567, 688, 840}}], 
               PolygonBox[CompressedData["
1:eJwV1FdsVmUcx/G3ZUi4Ypdx1bATAmUYlAtGYrgRZMsS0RZoKRsKCSCKjAQF
yp6yr7DIkL0KCGUIQqFlQ0iYrSIhiGwEP/+Lb3/j/5zmvOc8z0lNH9V9ZHIi
kUhCV38mVkwkJuEYn2zwBS5hRJlEYoJuPHKwCkeRZNYfFzHcmnG6/2hH3MIW
/RPaEIfxodyGFmEeX4Guww3XbZDr8DtQm8/BI8yUfzJvzE/HWyzW/RY3zfdD
MYbpxuquo5Y8Dn9jhn6l7gjeo6+uCNn6MfJorMBhvEMfswsYaj5K3sw34A+h
Ff+CfowLyJVL6QdYi2vWr9fV5rejJj8WD+Pe5eXmjfhpeINF8X/jmaG3fB5Z
upHyVaTIY/BXXKNfpsvHW3yuK0SmfoS8FAfxBr305zDEbLi8BAfwGj31ZzHY
bJj8C1+fz0dL/iN6HnP5Eloea3Alrqcd4nfGezOvRX9FDX40/sT38mJrG4bH
ayzU7Y/nzFfh8/BK7iH/gUFytryJr8cfRAu+NS3EHL4cXY3L1rWnV+OZxx6J
54xtqC4/pWk4Fe9PvkNL6VS6KJ4P/QQ3sVH/mKZiHxrIz2Of4iymyg/iXumC
WOP6tnEP8S51lenPeKlvQgvQXX8GGfxQfR5flz+A5vxslOVX4ZL5GjmF34pq
fBzIEnwnLzSvHx4vMV+3V/cC3eTTSNdlyWn8jygT5wUXdVXj7MZvwLe6Bbp6
4WMfY55uj+45usq/42tdptyM/wHJcX5QrHtF28VeiHcR5yvefZxzVJGb0ZOx
5/j7mMLPd13d8PFskavbrXuGLvIpfKUbIhehcpxl3MM38Z3Q7cK/+Ex3EgP1
g+Vc7MRTdNafwJdmg+S52IF/0El/HAPMMuSm/CwkySviLMc3Ta7Ob0Ylvik9
EfuSv03v0smxF63djif4VFcQ30l9uvw/4bS8aw==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8SGUYwPFLCFnJyAjXDPfaZERp2RElVLbIuDd7FA2kbcsspaVBFNpm
2VmZRdmj7NEwv8/HH1+/8z7nus55z/uR2DG1eUqahISE+/0Rvcxialm8phX1
rNbVjlpSj2gd/Uqr6b/x98nv+nf9mMquz+tzJLk+od/GnOzWm3QG/Sht/Zcu
4lESrffrXF4iLVdYwut04gEK+LndOpvnqUIOs836Nv1pxQ1cZSlv0Jl6VCUd
6cnAjWQkNmKZvEkX6sd7kiluubdcR/MkDbiDm8236DsMoDWZ49nNV+gYutKQ
6uQ0/1VnMpA23BTPav6TjqUbjShotkc/4QVqcIvZVn2XQTxGUbMD+gWjyBLv
Z/azjuMpSlkf1QU05jbrP/RTXiTZ+qR+R01yWW/T9xhMGeu/9Wsep5j1QZ0X
++n6H32Z8q5P6936QzyzXtT7NGvsua7UO3W8VtJzeo9219v1mN6lC2OP9T+9
V5toIf1Ta+tn8e31gg6nnOtT+n3stev/tRa5XW/XWQyhrPVx/YYnKG59SOfz
CtniXJit0gn04EEKm+3VzxkR70Aesx36Ps/QluxxpsxX60R60pQiZvt0DiPj
HchrtlM/4FnakSPOo/kanUQvmlGHW8136YcMpX2cwTij5mv1LVJ4KPYwzluc
R/fW6WRSaR7fJ85SnD331usUnqYFdeP7xzly7xedSm8eju8U+0lW9zboNPrw
SHyj2I94p3hO8pGfAhSMMxffL/Yx9oJEisZZim9ACUpSKs4BpePcxfciieT4
xnHGqEDF+FaeY6NOpy8t46zFv23+m37EMDrE7zc7rF/yavwO6zP6IzVdX0q4
/v9hJb0G5GCLLw==
               "]]}, Annotation[#, "Charting`Private`Tag$372896#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nfcllMAxvGnMgvZZYQUITN7k9FEi0oZDSE0kRAys9tKWipatPdeGpRd
hBCiqESEBt/r44/f5xrnfp7nfs99zrnfsk1b12lVpFAozCxaKFzNVC1WKIzl
z8VX8gA8gCoZQ7XgmnHGz8MaeSA6opV+pe4mFMNCXS/dTv5JnITquuq68fz5
mMefiK/1r9PiWI9uxgbpnuE38/fjSDyoa61bxd+M3bBIVyPoJ8gX4Bt5MB7K
/RcvFGrSmsYnGrsQ3+b38DCuCcYm6S/CWnkIOqGN/jPdLdgd7+h663bxT6Ei
rtVdq5vMX4z5/En4Lt9DS2ADuhv7mF6Ioca60F91HVAGj+ja6j7nb8UeWKy7
LuinyJfge3kYHkUt1I4an2rsUvwgv4HH0E6/WtcEe2KJrk4+o58mX4Z18lB5
H/SQP6EX4U39s3SL7jv6AF1Kz8BR/ER6JIbwnV3bnv+Cb4q9cq2ubn5PP12+
HD/Kw/E46uH6XGN8hrHK+EkegSdwr/5LXTPsjWW6G/K5Yv+v1yuwPnMh74ue
8kj5Of63zBPtmM/RStiKo+VJtEyeQdal6+/jv+Kbozje1dXPvelnyVdigzwK
T6EBGuZejM82dhV+lkfjadyvX6O7DSXwnu7GfKd+TvYZfskzkvdDL/kt+Xn+
96zx3AN/Jv7AMfLkzDk2YZi8mlbGMz7XIftH1wL7YLmuUe5TP1eugo3ym3JJ
9Jbfll/InPAPoSymZH7wBt8l+4b/hr89e4w/JfPMj6IH4VV+hete4f/ln07m
z8HJ/HR6bNY4RuQ8oVdhBxpnDum87FValS6gFfPs8ndmndD98TNeMf4pvRh/
YYzxFzM/We/04cwzPSu/yU/NvGUN81/QK/Bszin6re4O7IfR8sHox79vvA9f
yLzKp+Qsy7OT5/PVsFkemzWGB/VrdXeiJD7Q3Zy51y/IWYdf5XF5trgFt6JJ
7sOZ1JQ2du1C19XAFnl8nkvOrZwfOadoy5w79NTMR9YKPQSv8R+6ti9fBF3k
U7NfdDfJi/ia+E2ekPlC89yjsXf01+B3eSJewm25R2OLc6ZhqzwJL+ec1H+v
uwsH4CNdi/w9+iXydfhDnpzv0v0pd0I5dM1ZqvuBvztnGn8aDsw6pIfiF/SX
V9FL8Tc+9rlXadE8O2OnZS1m/uSlfC38KU/JPeq25QxFeXTTPaJbx9+Dg3Ku
6frpiuE5+fSsA11TeRlfG9vkqeiadSY/iuPQPeet7ke+FQ7GGLkUBmRtGn+N
3w3Py2dgBl8OI7NGjDfj3+XrYGH2SH4j5x09AH30K+klmKbvlnnQraOPZV/T
szO3OF6eRstiM4bLX9IrsR09cv7Tn/RraWu6hJ6eMybrRx5LS2MjBsqf0cuw
0mf7093xQvYFPReV+Jm0PEbxLbOe+Pf4uvhbHpnnir7Z/3J3/h++Myqgp66z
bj3fBodinHwYBvGf08vzGaxy7QC6R+YdL2aP0fNwJj+LHofRWZdZv/xyvh7+
kWegF+7OWjW2Qn89tssz8x7HPbjd2Pv6G7BDnpUzLe8o/QZdW5TK/Ojyz9Id
+g/k+tgpz0aPzLv8OE5An7zDcnbx7VAa4+XDMTh/p/GB/J55Rngpe5men3Wc
c0yeneeMt/jWrr+T/5BvgF3ynOx9tEFbtDT+kbGG+Feem/2DJ7O/dO1xGFbr
2uGu7DH5RhQwT9dTt4N/AieiX955WSP8vTgcE+Qj8HrOVuOD+L3wcs4FekHW
KT+HVsAWvC2voVdjJ9rnudBP9I1QBPOzh/Lezzs579E8H9d8aqwximJBzl1n
Z/+8a41t0t2HI7L+dYN1e6OrfA7m8idgDP81rYJd6ODa/wBsvH3T
               "]]}, Annotation[#, "Charting`Private`Tag$372896#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HV81WUUB+Df2EandDNC6Q7pkpBmNEiNtAAVTLABg7ZFQBFEQFG6uxE7
UJGyu1sRn/PHs/M95273c+/7e88ysiZmTkhJkuSsHxdSk2R8epKk8ipr05Jk
m9qPE0zWL1fb8Bbf6w+ow7lcfkitzUfybnUwS+S1ajf+lutxp1yao/IsVssd
+VUeySL5Uj6XV5JwpT6NdfIUuvCwvg6n5Kepz136MhyTZ5NFCleZpbNevpGu
NCAbqaSRTnZykJNc5CYPecnH1d4jOxvkm+hGQ+42K8sr8hxGkZ9rzHKwUb6Z
7jTiHrNyHJfnMpoCXGuWk03yLfSgMfealY/nIs9jDAWZYJaLzfKt9OQRfV1O
y8/QhOn6Crwmz+cFuRO/yWNZLDflC3kVG+Ve/CcXYqKcmy3ybTwnt+UHuReP
yvU4I+9Rh7BUXqd2513+0R9RR8UdiWesn6FmxOfidf1OdSDvs0D/otqZd/hd
f0gdyUnG6ZeozXiTL/X71KGsljepvbkgH1PHcJE8Sc3DVnm72p+p8gq1HT/K
vXlMrs9Z+VnWyz34V27KTLkib8TdZ03sAX/I4+NOys35Ks6bwlynz8s2eRqZ
PK5vwDl5Gc24T18pvlfc87j/FOF6s3xsl2+nD82536xy7GU8/7jvFOUGs/zs
kO+gLy0oxmTzAuyMnaQfLSlOCUpSitKUoSzlKE8FpvjbguyKvaM/rciIHTMv
xO7YDQbQmgfMqvB23JnYJyrGLsWzYU/sBgNpw4NmF8fzj+cR+0Sl2CWzwuyN
3WAQbZlldknctzjX2Ccqxy6ZFWFf7AKDeULfkI/l5bRjtr4q78XrsV+xQ/oW
fB33kSqxa/qi7I87zPNye36Sh/Ck3IhPYldozxx9NU7E67wkd+HP2C+Wyi35
Rt6vDmONvFnNJIn/L4yNM4k9VItxQN6hDmCmvFK9LM6Yn/UH1RF8yBX6hWrj
uLd8qt8bcz5ghX6D2jPOgPP6o+poTsX76ueq1WNfY0/1u9RBLJRfVrvyl3xY
zWJS7I/aim/je7NF7kNKPC/9VLU4B+Pus0ruwC/yUJ6Sm/BZnDUdmKevEZ87
Xo/domrslVkJDsVeMIyOzDerGecgL4pdolrskVlJDsf9ZDidqE4NalKL2tSJ
PfK7pTgS95MRdGaBWS1Oyotj91imb813cTZslfuSjeOM4zR1vfY/xiXsIw==

               "]]}, Annotation[#, "Charting`Private`Tag$372896#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02WAVVUYBdA7wMzQLR0OXdIh3R3qgIqtIKFSKioKiohSIiKCSDeo2K2g
YItdYEt3d4Pr+7Fm7/O9O+/WeRl9hmYOSUmSZJ0/G1OTpEl6kvyTliRP04uq
FCDT/JhcwSBas8nxTc3/1adyNdUoSE/z4/IFBtOGzY5vZv6f/gzXUJ1+Zul8
qI+mUJzb+oR8kSG0jTTLz2f6BLb4vubWG/VpXMt91kX5Rq9Bfz07q/RHKRzX
aX1SvsRQRlqX5ie9Xcz0AnyuT5G1mag/Jivwu77VuVvom/RnGa9Xpbd+vyzG
PL6Ne5X1uEwfIHMwm9XWT8acxYyJ+5cZLOA36xmyEcu4JJ6ZPCWflyvlRFmd
RQyzHiXL8HNcl2xAe32YLMgX8W5lHSbpY2VF/tC3uaeW+mZ9OtfxgHVxvtNr
MlDPyUfxPCgSz936tHyZu+nAdt/VynxL3APXU4ui9DY/I1/hHjqyw/Gtzbfq
z3EDtSnGTp/tYjd7aOO4beYzuZE6FI/rNT8rX+VeOrHX8W3Nt8cz4yZGWJfg
e70ud+i5mMPH1pNlTcbGnpHlWK+XiPvQz8nXGE5n9jnHfg5wkEO0c9wOn83i
ZupRksM+a++znfpsbqE+pTjis6Mco4NjdpnN4VYaUDqei/l5+Xrsdbpw3PEd
zXfrc7mNhtxplps1+uOUiedlfUG+EfuUrvHOzArxZexHTvi+TtZ79Hn0oRF3
meVhrf4EZeN5Wl+Ub8Ze4WHrsvyid4v3qxfmK32qrMvkuB5ZiT/1k87XWd+r
z2eCXo2++oOyJPP5wXqarM9SLrceJPMyl0+sn5K1WMI46zGyPAvZEHsr/o/l
XBrvRibM4i3rSbIGI/RH4hh+jd+DbEj32FvxW+TrOF88C70yf+mn3EsXfZ++
gNt5yLoUP+qNGazn41N9PBmxD6xTeDvumR6c9l1dzfbrC+lHE8pxxmdnOcd5
LnCRJJ67/zkgF9GfppSPfWSehXfimriCFLqbHZSLGUAzKsQ+Ms/Ku/pIriRL
XJvZIbmEgTSnYuwT82y8p4/iKrLGecwOy6XxW6MFlehrnsr7sW/IJFucx+yI
XBZ7mJZUJpU00slODnKSi9zkIS/54ty+46hcHvuWVlSJ92GexgfxfunJcOsi
rNOnME6vwt/6TNmYFeS3/h+KOeLW
               "]]}, Annotation[#, "Charting`Private`Tag$372896#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WUYFUUYhuElpGyREqVsQTFQEASkBQQEGyy6uxUQgxCDUEJBJaW7Q1pF
BQVppLtDur2/H8/1xszuOWd2dk7uWs2rNUuRJMnqlEkyJm2SLE6fJPdjVLok
KYlrui3YqyuP33X1kAdj9Ut0D+AnuRSu6/7FPl0F/KGrj3sxTr9U9yBGy6WR
IHWGJGmoO8R3x1bz9ssV8afcAPdhvH6Z7iGMkcsgBW5wfSPdYb4Htpl3QH4R
K+WGuB+ZzftAd5kfhAnmLZcfxli5bHxPc3rK6ZBSTiM35o/wPbHdNQflSlgl
N8Kj5vST74i1kLPInfgr/Iv8VP5bvjD/I58TE93nF/oIxhl73tgovlz8Vv4z
vg5NT6vQGbQlTWU8LW0iv0OPyuXoBLlZXCc/RQfJDWhW+hqdT9vQHT73EF8Z
b8t/xXOgY+XG/GP813xGvMzPieelz8p35q/y36GIPFTOhUnu+SvNi/HGXoj1
Nt5LzoDUcjq5KX+M74Wdrjkcvw1/y03wECbrf9PlwwS5fDxf7NIf0b2E1XJT
PIwp+hW6R2NN5RI+56fYe/wD/Od8XXpjXEtn0jTG0vPN+OP859jtPkflqlgj
N8MjmKr/XfdY/E65Yqw/9uiP6arhH7k58mKa/g9dfkyO5x+/HXv10/Gn/nFM
0VWK74F9+uOx3lgrt0A+zNCv1D2BqXJlPOh7fyHfFGsrZ5Cb8+/SE7H2dKL8
BV+A/5bPhv3udYK+gnXGWsa+RTZzuuiu8YMx07xV8pOYJlfBjYF5LXQn+S9x
wLyT8qtYL7eKvYNZ+r90T2G6/BJuwkH9qdiL2CC3Rn7M1v+tK4AZclXcjEP6
/3SvY6PcBo9jjn617mnMlKvFvvHdvpRvxi3xeXJL/j16KvYQnSQ3p1/JT9Pv
5LvizHC/0/QNbDLWFk/gLnM+1F3nh2CueWvkZzBLfhm34oj+jO5NbJbb4UnM
0/+jK4jZ8iu4DUf1Z3XVsUVuH+8r5uvX6gphjvwqbscx/QL8jIVYZ/xZzDX2
Gu7Acf05XQ38K3eIZ49F+vW6wpgnv46MOKE/r3sLW+WOsSZYrN+gK4L58hu4
M56HtWil+4/vjZPmXYjzA9vk9/EMspvXVZfge3mJeRv557BAfjPe2XgG8ZyQ
Sb5Fbs2f5vvEfeTBcnaccv3FOOew3VgZY+P4D2Lv8N/wd8ae5ufGWuvv5j/i
a9EUtBKdRlvQH4w/R4fJDWnu2F90AW1Ll/q8TXzRWEv5Z/NL0tFyE1o9zgTa
W65Hb43zgs6irWjm2BO0jXyGr8BP5vvyBfkh/N2xjj7nUryz2GGsU+xt4/1j
TWIPyPfIH/Mp8aO8zDWb+WJYKNdAlthT5rXVneX74bR5l2PvY6fcGc9iefyP
64pjkfwWsuJM/A/F+R3nbpylcd7FGRZnVZw/cR7EOx3vabx78f/uHs9jsevf
jjMEZ/VXdDWxS+6Cwlij36orgSXyO/Fu4Vy8H9imL4mlundjD+G8/mo8Q+yW
P0QRrNVv15XCMvm9eN64oL+mq409ctd4zlin36ErjeVyzVjXeK+sWTvdOf5r
XDTvulwHe+WPUBQ5zPtElwpDo5OH841onjgzYo/E+ef6nbQMfjGvVlwb76bx
9rrz/De4ZF6iq6vbJ3+MYsip+1SXGsPkDebt4sviV7k28prTR74NOeM9ljvw
F/j+KCR/L9+Dy65PIdfj9xsry4/nP4mzjR/AZ46zm58Xe0Kfi+8Wa0hvoJXp
dDo8viM/gm9M742zji6k7ehGn7WbLxfnifyb+aXoGLkprSPno33l+vR2Wo3O
pq1prjhjaMfYO/SiXJFOkQfE3o33ls+BKz4rpVyfP2Ds0zhr5YFyltiTcm65
O58GI+RNrtnDv4AVct2Yg0zmva+7xA/EVfNS6RroDsrdUAJ5dD10aTFSLi6P
5O9DdX4RbU83u/5/t6J+RQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$372896#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 5.99999987755102}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 6.418218062735658}, {2., 3.8478559598470836`}, {3., 
          2.818324920042898}, {4., 2.230908891625434}, {5., 
          1.9807769837249787`}, {6., 1.6645633738408794`}, {7., 
          0.8215695000070289}, {8., 0.6728820793672733}, {9., 
          0.5199739249477795}, {10., 0.2756756596222575}, {11., 
          0.07517629764520935}, {12., 0.024426350124795472`}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"J vs time\"", TraditionalForm],
      PlotRange->{{0., 12.}, {0, 6.418218062735658}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.866664275534711*^9, 3.8666643452264442`*^9, 
  3.866664406882745*^9, 3.8666645110504637`*^9, 3.8666646238044386`*^9, 
  3.8666648414159117`*^9},
 CellLabel->
  "Out[637]=",ExpressionUUID->"d9d896a6-749f-46ed-9655-adff8ee40839"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate Robustness of MPC Variant wrt Model Mismatch", "Subsection",
 CellChangeTimes->{{3.866046972536893*^9, 
  3.866046989974267*^9}},ExpressionUUID->"5bd1fbeb-86ec-47eb-b2f4-\
64cad2ea694f"],

Cell["\<\
Test Conditions :
Energy <= 1.5,A1 = 0, A2 = 0.2
n = 20, Tau = 5,uBound = 5,M = 10 (recompute every 0.5s)\
\>", "Text",
 CellChangeTimes->{{3.8665721863483653`*^9, 3.8665722466961317`*^9}, {
  3.8665767857135057`*^9, 
  3.866576792390377*^9}},ExpressionUUID->"6a3abf9b-d55b-483f-8f44-\
d33cec9f6985"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
   RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
   RowBox[{"\[Tau]1", " ", "=", " ", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
   RowBox[{"order", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"uBound", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "10"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"M", " ", "=", "10"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", 
     "the", " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", 
     "in", " ", "time", " ", "\[Tau]"}], "  ", "*)"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A1", " ", "=", " ", "0"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"AError", " ", "=", " ", "0.2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"A2", " ", "=", " ", 
    RowBox[{"A1", " ", "+", " ", "AError"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxErrorInitial", " ", "=", " ", "0.5"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"MyAppend", "[", 
     RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f1", "[", "t", "]"}], ",", " ", 
             RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], 
            "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f2", "[", 
              RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
             RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
              RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], 
         "]"}]}], ";", "\n", "    ", "f"}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["While",
    FontWeight->"Plain"], 
   StyleBox["[",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"EInitial", " ", ">", " ", "1.5"}], " ", "||", " ", 
      RowBox[{"EInitial", " ", "<", " ", "0.5"}]}],
     FontWeight->"Plain"], 
    StyleBox[",",
     FontWeight->"Plain"], "\[IndentingNewLine]", 
    RowBox[{
     StyleBox[
      RowBox[{"xdotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Min", " ", "=", " ", 
       RowBox[{"-", "\[Pi]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], ";", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Init", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"ICs", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
        "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"EInitial", " ", "=", " ", 
       RowBox[{"Energy", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ICs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"]}]}], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox["]",
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Energy = \>\"", ",", " ", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xdotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]f", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]dotf", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"Js", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"count", " ", "=", " ", "0"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxcountAlgo", " ", "=", " ", "20"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
     " ", 
     RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}], 
      "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
         "order", ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", 
         "maxCount", ",", "initGuess", ",", "maxJ"}], "]"}], "]"}]}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
         "uBound", ",", "K"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ICs", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"xdot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
        RowBox[{"\[Theta]dot1b", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"errorInitial", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{"ICs", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"initGuess", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Lambda]1ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]2ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]3ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}], ",", 
        RowBox[{"\[Lambda]4ff0", "[", 
         RowBox[{"\[Tau]", "*", 
          RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xf", ",", " ", "x1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xdotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"xdotf", ",", " ", "xdot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"\[Theta]f", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]f", ",", " ", "\[Theta]1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]dotf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"\[Theta]dotf", ",", " ", "\[Theta]dot1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"uf", " ", "=", " ", 
      RowBox[{"MyAppend", "[", 
       RowBox[{"uf", ",", " ", "u1b", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"count", "/", "M"}]}], ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Js", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"Js", ",", "J"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"count", " ", "=", " ", 
      RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Count = \>\"", ",", "count"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Error = \>\"", ",", "errorInitial"}], "]"}], ";"}]}], "\t",
    "\[IndentingNewLine]", "]"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]f", "[", "t", "]"}], ",", " ", 
        RowBox[{"uf", "[", "t", "]"}], ",", " ", 
        RowBox[{"xf", "[", "t", "]"}], ",", " ", 
        RowBox[{"\[Theta]dotf", "[", "t", "]"}], ",", " ", 
        RowBox[{"xdotf", "[", "t", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6"}], ",", " ", "6"}], "}"}]}], ",", " ", 
      RowBox[{"Filling", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
      RowBox[{"PlotLegends", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", 
         "\"\<x1b\>\"", ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", 
         "\"\<xdot1b\>\""}], "}"}]}], ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
      " ", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
      RowBox[{"GridLines", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", " ", "=", " ", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"Js", ",", 
      RowBox[{"AspectRatio", " ", "->", " ", 
       RowBox[{"1", "/", "3"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<J vs time\>\""}]}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Total Time for Convergence = \>\"", ",", 
     RowBox[{"\[Tau]", "*", 
      RowBox[{"1", "/", "M"}], "*", "count"}]}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1b"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}, {3.8654474644860983`*^9, 3.86544746739017*^9}, {
   3.865447584859602*^9, 3.865447593586812*^9}, {3.865952499809149*^9, 
   3.8659525292967024`*^9}, {3.8659525819378333`*^9, 
   3.8659525893724527`*^9}, {3.865971536327427*^9, 3.865971615231144*^9}, {
   3.8659716506068087`*^9, 3.8659716545185547`*^9}, {3.865971738635604*^9, 
   3.8659717394583387`*^9}, {3.865971771360116*^9, 3.865971773325487*^9}, 
   3.8659718432830696`*^9, {3.865971878869669*^9, 3.865971881703761*^9}, {
   3.865972099999814*^9, 3.8659721093028316`*^9}, {3.8659724284015865`*^9, 
   3.8659724335579348`*^9}, {3.865972467781967*^9, 3.8659724678729377`*^9}, 
   3.865972527892706*^9, {3.865972575741376*^9, 3.8659725758223476`*^9}, {
   3.8659727852052574`*^9, 3.8659727853102245`*^9}, 3.8659729110299406`*^9, {
   3.865973909258086*^9, 3.865973915857973*^9}, {3.866046878808134*^9, 
   3.866046926929607*^9}, {3.866047001093678*^9, 3.866047039702221*^9}, {
   3.8660471109532323`*^9, 3.8660471110941877`*^9}, {3.8660471705050197`*^9, 
   3.866047173520045*^9}, 3.8661406529053097`*^9, {3.8661406905133476`*^9, 
   3.8661406905993204`*^9}, {3.866140819599299*^9, 3.8661408196882687`*^9}, {
   3.8665711649558916`*^9, 3.866571165889593*^9}, {3.866571417989247*^9, 
   3.8665714182851543`*^9}, {3.866572132358571*^9, 3.866572174133257*^9}, 
   3.8665722152271605`*^9, {3.866572708667897*^9, 3.866572725315591*^9}, {
   3.8665728020321393`*^9, 3.8665728154188747`*^9}, {3.8665728560299296`*^9, 
   3.8665728724307027`*^9}, {3.8665729695007653`*^9, 
   3.8665729789747458`*^9}, {3.866573043115304*^9, 3.866573053395028*^9}, 
   3.8665735494869184`*^9, {3.866573703021986*^9, 3.8665737072086515`*^9}, {
   3.866573789133541*^9, 3.8665737977058096`*^9}, {3.8665738824937863`*^9, 
   3.866573891690858*^9}, {3.8665752456343412`*^9, 3.866575271422123*^9}, {
   3.866575497520063*^9, 3.8665755162530923`*^9}, {3.866575560451006*^9, 
   3.866575588098196*^9}, {3.8665756738178754`*^9, 3.86657570879373*^9}, 
   3.8665757657245836`*^9, {3.8665764184045687`*^9, 3.8665764350932503`*^9}, 
   3.866576476534042*^9, 3.866576542813918*^9, {3.8665766740420947`*^9, 
   3.866576692525204*^9}, {3.8665778195290174`*^9, 3.866577843192477*^9}, {
   3.8666641527149525`*^9, 3.866664193861807*^9}, 3.8666649366484857`*^9, {
   3.8666650025004454`*^9, 3.866665006550152*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[689]:=",ExpressionUUID->"8e38cdaf-ed5f-437a-9ced-be5bff917c65"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2`"}]}],
  SequenceForm["Energy = ", -0.2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665100998975*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"2e1a0f61-7d45-41d7-b61b-5e394d6e5e75"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Count = ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665101416842*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"91a5d736-4e72-4e21-8bcc-25269b90e6fd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.538652848051288`"}],
  SequenceForm["Error = ", 3.538652848051288],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651014238396`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"5fba4d15-1f13-411e-aeef-82ad4f79d1a5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.9760231422448076`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "1.9760231422448076`"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 1.9760231422448076`, 
   "    Error Min = ", 1.9760231422448076`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651017147465`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"4840a139-1973-4eb1-a7ff-d97bac5dec9b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.355768246760182`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>",
    "\[InvisibleSpace]", "1.355768246760182`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 2, "    Error New = ", 1.355768246760182*^-15, 
   "    Error Min = ", 1.355768246760182*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651017877226`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"534f8127-9018-43e6-a353-cffe7315cd7a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Count = ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651021056213`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"5f769363-5ddd-425b-a163-b9d20ab03e06"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.7671487699610737`"}],
  SequenceForm["Error = ", 3.7671487699610737`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.86666510210962*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"26d0bcfa-add4-4ab9-9908-178961c1a5a2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.3659270371023802`*^-15", 
   "\[InvisibleSpace]", "\<\"    Error Min = \"\>", "\[InvisibleSpace]", 
   "1.3659270371023802`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 1.3659270371023802`*^-15, 
   "    Error Min = ", 1.3659270371023802`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651023245516`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"03f25dc8-f02c-4a9d-8496-aef889ae9ac0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Count = ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651054885406`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"22462ccb-a129-4f08-888b-15567ab51313"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.8442460349629153`"}],
  SequenceForm["Error = ", 3.8442460349629153`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651054995375`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"f8d8cd38-ab0f-46e3-9203-6768837ac9bb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Count = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651084685884`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"f39a7509-8811-4d75-b4a6-d44e97f2d0e0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.769563300170018`"}],
  SequenceForm["Error = ", 3.769563300170018],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665108472587*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"94a77059-654d-4106-bf3d-6ef57fc425b2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Count = ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665111127739*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"97e4bc04-b198-4419-be23-ec5c6ce6b1b0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.5487371164907944`"}],
  SequenceForm["Error = ", 3.5487371164907944`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651111317377`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"eb3065a6-d4ff-49b1-99ba-16294b4c700d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "3.1894429616269466`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "0.14044479326608678`"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 3.1894429616269466`, 
   "    Error Min = ", 0.14044479326608678`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651113796587`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"b756dd01-a8c8-4b39-a2c0-df6a915b2241"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.5599941525274352`*^-15", 
   "\[InvisibleSpace]", "\<\"    Error Min = \"\>", "\[InvisibleSpace]", 
   "1.5599941525274352`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 2, "    Error New = ", 1.5599941525274352`*^-15, 
   "    Error Min = ", 1.5599941525274352`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665111449636*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"8ad2aef4-e45f-47ac-91f2-afaab4fcc870"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["Count = ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665113822878*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"248e9000-9942-4b4e-ba55-8fb7c034897c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "3.209097860393693`"}],
  SequenceForm["Error = ", 3.209097860393693],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651138268766`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"084bd6ac-b0b8-429c-a0ab-98ed94077642"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "5.69182763041136`", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "2.0256750833357366`"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 5.69182763041136, 
   "    Error Min = ", 2.0256750833357366`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665113918847*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"4a3f7b0e-3dee-4c76-a9e7-31eee5b89f77"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.41861460357157`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>", 
   "\[InvisibleSpace]", "1.41861460357157`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 2, "    Error New = ", 1.41861460357157*^-15, 
   "    Error Min = ", 1.41861460357157*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665113993823*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"3511a965-61d5-46ee-855c-fa0935a4314d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm["Count = ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665115588314*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"18cceb6e-d9a5-4537-9579-7be83f0c470d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "2.452453056264583`"}],
  SequenceForm["Error = ", 2.452453056264583],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665115592313*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"939e8d5d-6dfa-4e7a-97f5-70c3a1ae93fe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["Count = ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651168838997`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"75c35d5f-4eb6-4198-beb7-232b853197ae"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "1.742019560185931`"}],
  SequenceForm["Error = ", 1.742019560185931],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665116888898*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"e18f723e-5317-495b-8354-7dd3a322c868"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm["Count = ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651183434334`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"84801d36-9d33-42f8-b792-045c68ccbd0a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "1.2892327345652224`"}],
  SequenceForm["Error = ", 1.2892327345652224`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665118347432*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"f0a79ea5-a48f-456a-9c5b-7c48b617a3b9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "2.109044955308335`*^-15", "\[InvisibleSpace]", "\<\"    Error Min = \"\>",
    "\[InvisibleSpace]", "2.109044955308335`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 2.109044955308335*^-15, 
   "    Error Min = ", 2.109044955308335*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651185483675`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"d718edd6-add9-4a6c-885f-299f1282127f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Count = ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651195880356`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"eea0f556-0b3b-4b0f-afee-454d56ec3c44"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "1.076580087970656`"}],
  SequenceForm["Error = ", 1.076580087970656],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651195920343`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"1b178bfc-f2b6-4eef-ac81-3a6fc0e9e404"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count Shooting= \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"    Error New = \"\>", "\[InvisibleSpace]", 
   "1.6070389709939503`*^-15", 
   "\[InvisibleSpace]", "\<\"    Error Min = \"\>", "\[InvisibleSpace]", 
   "1.6070389709939503`*^-15"}],
  SequenceForm[
  "Count Shooting= ", 1, "    Error New = ", 1.6070389709939503`*^-15, 
   "    Error Min = ", 1.6070389709939503`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651197859726`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"2ce8f944-9be3-4fc7-b83e-d68f4691bb11"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "11"}],
  SequenceForm["Count = ", 11],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651205087414`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"3ac7da14-6469-4cc6-b3c6-21f0905dceed"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.8539063456041658`"}],
  SequenceForm["Error = ", 0.8539063456041658],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.86666512051274*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"18001b55-29bc-4201-9a18-6bd78ef5c9e4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "12"}],
  SequenceForm["Count = ", 12],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651211545353`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"83efab40-2561-4a2d-bfb3-be8550565339"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.5597100588854085`"}],
  SequenceForm["Error = ", 0.5597100588854085],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665121158534*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"7839908c-68dc-40cd-8df4-f4bfad3fe919"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Count = \"\>", "\[InvisibleSpace]", "13"}],
  SequenceForm["Count = ", 13],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.86666512179533*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"46e701a4-1b6d-45aa-bde7-b7107093b27a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error = \"\>", "\[InvisibleSpace]", "0.30936195603611`"}],
  SequenceForm["Error = ", 0.30936195603611],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.8666651218003287`*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"85fc6b1b-61e1-4c7a-a98b-2356c44f6765"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Time for Convergence = \"\>", "\[InvisibleSpace]", 
   FractionBox["13", "2"]}],
  SequenceForm["Total Time for Convergence = ", 
   Rational[13, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.86604704829045*^9, 3.866047112761648*^9, 3.866047175453421*^9, 
   3.8661406576268063`*^9, 3.866140692089847*^9, 3.8661408215966625`*^9, 
   3.866571170560105*^9, 3.8665714204884496`*^9, {3.8665728234873013`*^9, 
   3.8665728761745095`*^9}, 3.866572979386615*^9, 3.866573057814619*^9, 
   3.866573491325455*^9, 3.866573558066184*^9, 3.866573708120361*^9, 
   3.866573801443618*^9, 3.8665738936232395`*^9, 3.8665752753528695`*^9, 
   3.866575517978543*^9, 3.866575589824644*^9, 3.866575680400777*^9, 
   3.866575712719477*^9, 3.866575771868625*^9, 3.8665762859047976`*^9, 
   3.8665763197610073`*^9, 3.86657643543814*^9, 3.8665764772758055`*^9, {
   3.8665765435446854`*^9, 3.8665765592206893`*^9}, 3.8665766044332795`*^9, 
   3.8665766932789636`*^9, {3.8665778471072283`*^9, 3.86657786018606*^9}, 
   3.866579075380767*^9, 3.8665801764088583`*^9, 3.8666649442850447`*^9, 
   3.866665122467116*^9},
 CellLabel->
  "During evaluation of \
In[689]:=",ExpressionUUID->"daaa0406-544e-420c-a2dc-3300cae98b60"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
EZCdcUJt0OI/wPXt67mNRwTkXMkYaetTBLIY3cJPnwlCO/66i28qV8AS+nas
uYPczw/+dIR95D3Fl86blfz83rWICqEbwcE1wd/fp6aZYFj60d+r90PB1mBw
cy1BC0Ue/5gZ8o4ElDybWgz/EVCb5I9Y++g1IBvRJRa5QUDW/HKMqo9+AJsR
6gLxLF+UrC1eNf18BWinx3Z0/SKgg+Xj2QZhq0CBI+rPDPl6gd6bxUWvU0H3
rhx9n4gDGtk4Le/Aswpy3KWqdBnGkFHdo/1H9pEALtmV3neMgO74BivI718D
n28/kaEn19OmC+I5v4yDo42TuI4lJjifTnVezvMVCOTgwdrqySJmO89aIY81
0B/2lc9jh4Bagtxar7qsAroP1c+CyNd36z54KOBxImi++YJ0r+AeCqprv/iM
SAL4K19G28j7K4+xuNHJzVWgE3v3eDPTGCqkGVs3CY0k93vaUwaGxshxyeC9
TtEqkKgaay0n/z55mWTO+8dXwVi/oeRp8vvz8v9xS5xeA+s/8pOy6MZQzUuD
yw83cTAsoXfkJIkJPr7M+4bexAKs3F6580y+v6xt3yp7yJdyEGyLkxaaDEM5
y3eSv4q3gvqwiAQq7gJkd/wrs9jhv0B+OsGsxaALsVqy+oZrTAEaq+x3P3H9
6AafY7J23hwQBEzUOTeGESHjbIEM0xLYJx4PHNRGUfuV8YpFDBGkxLdo5+qS
9aZ2Ium2Ngm4tWZef0Duty1qqq6FJmtArr6KK5zcjy22tNp8r/8DIl2H9o1G
ElDnzkMjmsBNMPRPskWqcRT5MUm6nQrbBu2Kq85D4SOI8/KtZ4G/d8FX46Tn
r58NIq78DdF9O1TQbnFlVKymB5VUsZpL0tDAg8wHNbFv2lH3k++ycYK00C5u
zFlZrQ69kxK4tHqQDurSaB39kZuD8jgPsQ7PYqH9aZyygTsTXA+2y+SxJ58f
reST9BLyfLn809O6OwuU/jL05T/9HJGsX/2tekKu709LOuKGaYjvWmNY+PMZ
4HPklQ6d2SAa75g+OU5YAP/xFqo4+I2gy+9hWz7rMvjYLRHr2TqKJMyeOz6R
WQHTU24iuEwCkmldWz+ovwrwkmITpuT65jkyrXL26jpoEHGP6ewjIF+WYEmO
xxsgVPmSraoGeV58eLJdHbIFltg/nd9VH0W68yvFskU4WNo/Zf+1nzx/qHnS
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
xA3Ve8qkXcj9e30y447iGxF4sZbrlAe53irqRJveXiQJf6UlZBfuqyQuC8p4
FBT1AsoeN6bornJQVvrw+MBiMfiC2eV1QI4Bku4YnlIxJM9jPq9f7iWvTxhH
7cMn9txwZk9EhqL/NKFiWDXbySUM9wcrdT/YXwkWmr8+eRsqAvX91Q6bkvf7
OaPwYMNBKbiBg7fzKvl9a1RFnH0zuGFp+eKiP7emifAq7bg1PEuhkm/b30HO
T4TODc7rmbki0HcgdU1ryiQ4ZPvxYfzcciioZ3l2jcoX4PTy8XKx9VJwUTLP
2XvkepDYaPt2hn8x9Nu7+LK84RTBqLh2rOS3COz5FpO5Q30SnHvmE8Tg5IBy
K3YfE0rIAEu2/xYTM+OG0k+k1MbIz2/b0HdIbEoILk342NarNARsR3Y+HwwU
gbY/8rnUyfkXFOyc+2oPeX78o2fnQ37/mAarl168c2CFarwAvyQBoDWc447l
hvIZh2+eJK/Hx9OnhwqmBeDGrULBM16NRE6wiw8rVQR6rEsTysycBKeNHvZk
rKEC2e6/s8EpxeDC47aWu+xFcMh21CbUfoLYWBPDs+wmN5QUF79kQd6/x4RR
4OUXItBu++K5peR53agoxM3+lwSkalveP7yWIAqObjOvWhCFAWkzsvI9/SBm
O18t5xEpWFSxOzaH/L6vL816nuMUh2PU8Ee7OxOBF6sjVkNOCvIIvuS8Q95P
90xeXX8eCnRYtYmj/eYUQPm2i+ZXNO1by4n/59faj/JtXNtVt17ZGo7zbfc0
0+MNxj7gfJv533xNk21lON82+pjTYOV0Hc63WWW8YvmcawUo3/bkmLFcyKpu
gPJtuX/99oVeoQGUbzsw4BR67Bc5Hv+Xb3PfUGrXq9IPUL5Ns/rOyV3nBwHK
t5ndqx/5unUIoHybrfaBELXMYZxvc/TcRCQfGgUo3xZgJpG658kYQPm2Xdtu
GyS+GQco38aeT7C6t5MFUL6NV3rbqZSrLIDybSPrxZpkyToS5ds42gildFUW
QPm2ZQp/1R53jmG/VvzhltC750ewX8sp4cXKeLLeRfm2QGHvU8GXmdivdXGw
52mxPQ37tbbvLflhFtOB/Vo3iiONzPzqsV/L4IqzGSFWgv1ar3UpRjv3WOB8
m0dVh3vupU8Eyrd9Cmq8IJpSS6B8WwNF70C2ZguB8m20j4ufn+3rJFC+DcwP
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
/fcivAwx/j8TXM/0
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{3246, 3245, 621, 509, 433, 390, 342, 343, 977, 
                778, 622, 510, 434, 391, 1016, 817, 661, 549, 473, 1062, 863, 
                707, 595, 1111, 912, 756, 344, 978, 779, 1164, 623, 1121, 
                922}}], 
               PolygonBox[CompressedData["
1:eJwV0DkzQ1EYgOGPxFJo+AOEUdkqrUbHIC61IoUtJv6AGbGM1vYDNLpEotUq
rTPWVq20b4UnxTvf977nzJw7N5NbTgr1EVGHHMotESWsCi+piB5su9COW20c
Z1oKc9onL6GIV60XO3oH7rQJnGtpzGtfvIw1vGl92NUzuNeyuNAasKB98yO0
piNGtIo2hDG+xZ/tRfuJfd29d7O/9s3anrNZ84B32oftK/Yn+4O73XyGn/IE
k9olb8Qi/+EVbCDBFK6cNSHv/JdXsYkPbQD7ehcetWlca81Y0v74oDcL/IYf
8zY+WvsHZlXLm4f8H1eTNV0=
                "]], 
               PolygonBox[CompressedData["
1:eJwVzztI1WEcxvG3y2jpmOWgqdVqtpSXaqgU00RyqCRPgot3wToXipaEvNIg
mARx0kK0gtSUFi2oUc3msjnJS7pq4OcMD8/3+/zev5echvaatoMhhAMyKgkw
kxbClCRxl9yXv4dCyJOnHh+TRdsrSTscwhX7hO28bNgeyLotX3psmVLqXZT/
xA/xLP6gl7zN1rf4kJ5379ATvBLfxAN4G496e4Rf5ZP8gmzaCmxNtmV+V6K2
DX5KevlxuehNjP/Cy+45/DZf4FUyZjtqu2Z7y4ukgj/hf/CW+1nezL/z+tTv
4sN8F8fcN/Fp6eONbi/xCXwJx/EqfoTnUj/D+5P4Dv5s78ST+AauxYM4qXd4
t17gH/Vr36XrMv5Mv3Nv0mN8XBfz67qbv9Br/LH+xKf1P98X6hY+rFdSf7ue
4pHU/4Wf4z3ci7/iuG+29Bnpt2fJZbcE/41X3HN5Hf/Cq+WNLcNWbnvPS2Tb
ds7WavvB70mEj/D/uA9/w3N6H+GpV+o=
                "]], 
               PolygonBox[CompressedData["
1:eJwV08lTjwEcx/HnV9lmsqUsRxctuAjVzRYXlMbSYqlfZlwsbZYO1gNl72fG
FjPM0AxTllQohoPlD1ChskRHjhiyvZ7Dez6f9+f7PNWvpunRHQXb44IgiGAI
dxKD4DaWx+sOC1Dn+JPPwVk+A322IryyJaIi/CJos9WjGN32sai0R9BuO4pf
tkycs6Wi31aCHts4VNni0GFLTgiCFba7fCGO2Yb5XJznaVjimb18UB9wT+Wl
/Bmv1pv1FrmaF8oGflV+44flE77ee71yPKrt8bhvS3FfaWvli3Dc9pvPwwWe
jlzP7OOf9HfuabyMP+c1eou+Ri/SY/p3/Yj+VN/g+ddyAk7YatyispFfkwk8
S1aEn1d281rZym/JB96fLPN4TN5z3yqv8xtyMc+TdfyS/MIPys7w+3n3j5yP
i/Yt9it6hr5U369/1t97Lp1H+Qu+FsX8DP+hb3R/o0/ETj4CD21TPJNvawv/
Rjhp+8uz0Mhn4oNtE97akrDLNhKdtlMoRRmi6HOfhN3uo9BlO41/tuzw89lm
4aOtHP22ZOyxjUa2n6eS9+iP3KfyVbydb9Ob9Jsyl+fLen5ZfuWHZBdvCP9R
9JzwZp+NZfwAH9IH3TN4OX/J12GzbYCnoJaPQY5nqniv/th9Gi/gHeHvHjFb
xPYf4XFzFg==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{3246, 3247, 1043, 435, 723, 879, 1078, 511, 
                1187}}], 
               
               PolygonBox[{{3244, 3245, 777, 976, 341, 472, 548, 660, 816, 
                1015, 389, 747, 903, 1102, 575, 1192}}], 
               
               PolygonBox[{{329, 3250, 3243, 426, 502, 614, 770, 969, 333, 
                755, 911, 1110, 593, 1196, 939, 1138, 705, 1173, 861, 1060, 
                466, 735, 891, 1090, 542, 654, 810, 1009, 382, 425, 501, 613, 
                769, 968, 332, 381, 424, 500, 612, 768, 967, 331, 465, 541, 
                653, 809, 1008, 380, 423, 499, 611, 767, 966, 330, 379, 422, 
                498, 610, 766, 965}}], 
               PolygonBox[CompressedData["
1:eJwV00dwjWEYhuFf9EQvUYIES72bRGeGhA3RxUaL3qLMJLroxkaUIIkeM2Yk
BqNFr1HWyowuQRgssXJ9izvv89zv952T/Dmn/Ywl4xbHRFFUDUl+lNaLovN4
Krew2IaO1aOoClncD/TnzmAEF1cjioq4C+YNPdf8bVdk7tbTzTHhvLxELpMn
y4nyE/de66v0gXq8vBUd9G9Ybv8d/bhiDOdinSvkytGc24L2/Fcs45aiAI/R
zC4XSXZfwvtz//T98nSvM10ulVfLz4M35+ndzSpnz5uX9XXmF/vNcprcVz6N
YXpd/Yizo/XrmMS14x5xTcMdJHKVWMx9Qx/uFIZydZw9zD1EE24T2vEVWMQd
wgM05jeiLf8ZC7mv6M2dxBCuttfK5+6jEbcBbfhPWMBdsr8r7zD/2h039+kZ
ZoZeIq+Sn8lz5W7h73avMvxeeqreK9yT58kn5MFyLfmgc2XyZvkXX2ju0seZ
afpZszg8A/OavtecqLc177lbYl7Uc8xX9ofMlfoAs2F43maBPstcr+8xE/SP
mO/+HXM798cuT54mT5PPySvlp3Km3FWudL4iPE99lN5TPibPlY/Lg+Sa8gHn
fuo79bF6qnwVE/Q24Vnav9RX6Cl6A3kdWusfwjOyn6o/wRy9izMVXI/wfhjI
1eD2c6P0KxjPJXB3uPr6WrTi3offj/uM7txRDOCqh/8hN1K/jHSuNXc7fCfl
bPkFn29m6clmvfD5C59bfaa5Rm8pv0Ome1P0cszWO9t/4rqF7zRSuBguj7uF
OC4HLfi3mMPtxU3E8tmI599gNjdZf4xZeiev85HrGj4vSOb+AzvnkEw=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8j1UcwPFbkoxQ7qVlh9ybEansPSrJlqyIUCFCMjLKHmW0CBmVvUJR
VmayS4uyR1aFlBXv78sf7/s55zz3/n7P85zzurlbdarb8aaEhIQafkSvsYay
JqO0mJ7XyvqCFtA/tIIu1cf0klYnh/F+nUsJ4391IIWM/9SvKU4W8906lZ4k
m5/SZTQhr/kRXcQwbiZu7ht5m7ZxvzxMovUfdRq9aEqq+HXra/Ud2vF43BO3
kJpb43P9zjodTXue4BHSxGe4tl7H8CJP8ihJ1n/S6fSmGbfF51rfoGN5iZrx
bshq/Wf9hD40J23cg/WNOo6XeYqSZLP+i37KG7QgXdyv9U36Lh2oRU5rB3Qe
gyjFXdZ+1c/oS4r5aV3Oc9xvflQ/ZzhFzP/WlaSPZzf/Vt+jIw+Yn9AveJpc
5gd1frwr4/90MIWN/9JKuiLuRa/EudDSerfu0XI6I/ZOL2gV7acP6hmtqF/F
u9DLWk1baj49puV1ceyFXtSqOkKL6lldRWnjq5oh9sZ4s74fZ8/4H+1EQeOT
+iW1yW1+SBcwhDLcY22vzqQ/rbg99s/6d/oBr1CHPNYO60KGUpZ7rf2msxjA
82SM/bS+RT+kM3XjvXCf9d91Nm/SmkyxL9a36ni6UC/eA5njGV3bphN4lfpU
4I64V9e260d0pUG8X+6M+3Bth06kGw1j78gS3+naTp1EdxpRmcT4Ttd26WRe
45nYQ5LISrY4g7Hf8f7iHcRzkZ0c5IwzFO873hl540zG/pKfAnHmYn9IJiXO
BoXijFEk9jqez318rx/Tg8ZxFngons+1H3QKr/NsnKO4B+v7dA5v0Sa+09px
XcLI+Hvzc7o6zoDx/wk3/jcW0+vE7owK
               "]]}, Annotation[#, "Charting`Private`Tag$415490#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$415490#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02WAFlUYBeBZ2F26u1m6Q0xAQlRUJARskZJSBGlMbMICu7u76VpSuku6
G2mk9Hl/PJz3HubON8xcMrr1b98vJUmSTH+MT02SHOlJ8l1akvSSXWRHeUoO
kFXlNXKn7CvfkZ1lCv/ZW1+u1I3iLvN52ZbW5iPyc/a5rpz1TPNQrqal9T75
IUVoaL1RjuMOJtiTU/e9uSvVSNivL6/PNA+jCUWZqM+l/8HcjeqkcEA/iclM
YSrTmM4MZpLJLGaT2z1+tK87NcjCQX2GfpZ5OE0pxhx9Hv1P5vuoSVYO6Svo
Z5sfphnFmavPq//Z3INapHJYX1E/x/wIzSnBPH0+/S/mntQmjUt0q+Ro2nHE
dZV0c82PxvfiBuv98iNK0sh6k3yVO5lvT37dr/HdudV8WtahhXmXfJd0Gliv
lmO423xB3kIb8z+yv/wi3rtMZVj07l9ZztP3lo/Fd5Vn5UDZQt4oD8gH5cey
i8zCEEpZN5ab5f3yNdkpzlycs/h983H5dbx7czp/+c0C8rf4TW4zn5F1uda8
W75HNi61XiNfoD1H7a2im29+PK7nJuuD8hNKx7m13iJfj/fAAnsK6n4396Ee
2blMt1a+SAeOua5qPJ/5Ca6jDAv1hfR/xL+R+uTguL6afoF5BNdTlkX6wvo/
zQ/EOSAnJ/SLWcJSlrGcFaxkFatZQxH7x9vTN74ruTipr65faH6SlpRjrb6o
fkJ8o3hn5OaUvoZ+kfmpOGuUZ52+mH6iuV+8B/JwuW6dfImOnHZdTd1i89Nx
Dshgvb64flKcqdhHXq7QrZcvxznljOtq6ZaYn4nvRCvrQ/JTKtDEeqt8g3vY
YE8J3WTzQ3HP+A7We+T75ONK6w3yldhjvhhniLbmo/JLupvT+Nf9asul8e3l
s/H/Sp6Tg2QrebM8HO9Cfia7yqwMpaJ1U7ktvqV8U94rEwbTKc6lPBHPK7+R
PWQ2/vbbJeUU3QBuj+eJ54+zYt4rPyA/V8X1cmxcRzvrY/IrzrpPHetl5ufi
ealEM912+VY8ExtdV0o31Tww7kkBzunr6pebn6c1ldmkL62fFu+ChhTkvH4z
ZfzddOvBNKIQF/Rb2Mo2trODnexiN3soa+8M1w+hMYW5qK+nX2EeSRuq0Fy3
Q75NZzpYn5Tf0tOcneHxvuz/HxkC5cA=
               "]]}, Annotation[#, "Charting`Private`Tag$415490#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1ncc1VMcxvFb0pKVKMpISFZkjyhktGWGUMlWNoX2VEllVNrZGigKJVQa
SqW9syWhaFjxfv74vL7P85xz7++e8zvf87qVW7Rp0rpIoVBYXrRQaFu8UHiq
ZKHwc4lCoQ32w0LZmxgv3w8DZafhd1k79JZt4e/D/lgk+1x2It7ir8BY2QR+
fzzLn44/ZGv58/EJ3wKPy/rwv9D3oywWy+bLTsLbfBOMk73Fl8Vz/BnYSl+J
5fR24+voC/Ap3xL/0c3xLf2E8b70r/QDKFGqULiTP4DepNbDF/TB8sfpL81f
oFbHO9kX+QN5Hv2negPOlK3nj1A783XV8T73dr4X1fjnjZdRW2fd6pn8Nvoq
nMqv4Cup7flL1B0+v56uhZP5GcYPVB/lL1Zv5QtqC/47+knzn6Z/ox9EOfzE
18dCeonxL/JdmMhfhQmyd/hyeIE/Cztl7dFPtpV/KM/F0uw7OuAZY9tkD+Mg
LMta0RGd0Bld0N+8340/gvJYnudhovxADJKdjV2yrhgg+4N/FBWwmW+ARfQK
4wvpU3K+rHtSzpz6IH+hejX/F30jNtATzZ9EH4TB/Dl5X7JuGCjbzj+W94yV
mYvueNbYDllbHIJVsnfRA88Z2ylrh4pYLXsv4/LyGCI7N79DtoGvjZl8K/SU
Pc/voo/N2VJLqnfJaqqV+J/phlhMrzF/EV0D7/LXYHKex1fAi/x5+FvWCy/I
/sz5xqFYK5uCyfKDMVRWE/+kzzFI9lfODQ7DOtn76WkMNva3rD0Ox3rZB+lP
DDH2j6xDzjs2yD7Ms+SHYJjsfPybPsOLsn/5jqiMjbKpeZa8IobLLsDunF8M
le3mO+FIfCVbnB7Be/y1mJbfw1fCCL5W7iT6aqxMvxvfmHOBWfxtKGKPW/Lf
0/2MD6P/ozujCrbwjdLv9NfGv6RPw+TcRT77EH1d9ltthrNkG7MmtQv/UfZB
PRTHyUYa21ttk7tIrZ17j74m38uvyntSO/CXqoWslb4oZ5z/LL2lPsbXUW/n
i6bv+XPVH/ij1R78M549XC2gi7yU/G76KPoXtTGW0N+Yt4Q+HVP4ppie98Ef
hlH8hdmr7EHuGcym70B/80bwRdA1z8a3so8xTXY4Rssuyu/EAPlIWVF044/B
d7JP0n/ps/RTeiJnF6PM2wPdzauK72Wf4iPZERgjuxh7YJB8tKwYeqSf8INs
KX8G3uevxwzZdL4yXuLroBgGy8fI9kRPvhp+lC3LXY4P+BswM+vjj8TL/CXY
M/uYd4I59J0YYt5LfHH04o/DJtnynBN8yN+IWVk/XwWv8JdiO30tVtPFs6e5
/zE3d6b32Ja+K+umW9HnqT9mP9WeuQd858tqCTwlLy2/hz6e/lW9Aktzl8mf
oH8yf4V6Nk6STTV2gPpwzp7aLHcEfVPm8F+lD9WufL2cy7yXnK08g3/V+D7q
fXwt9TJ+R3ol54xfk/tF7chfppbIOciZxzy6gqwdfXfeDX0bvYke6jmv0CXR
mz8Bm2Ur+XMwjb8Js2Uz+KPxGn957lUMk78qK4U+/Im5X2Wr0j/pV/5mzJHN
5I/B63xd7KSbYm16KWcxvx2f0/fkDKQfs5f0cJ9/jS6Nvvxexu7N3tK/qU2w
jK4of5LeYv7qvEdUl003Vk59hL8l96Z6c9Yo+zp3k9qNr6/O9dlZdFWcwL9h
fF/1fr62Wo/fRV+fPuDX5f5WO/GXq6XTJ9Gowc/n78UI3/u6bC88zVfPvSGb
h89kx+JNWf2sDyPlb8jKoB9/cs5a/vthtqwaxsoaoAxG5X+kbO/cVfwp2Zv8
t8Oc3JcYJ2uYOxOj5WNl+6A/XwNbZWv4mviYb47d2TN8Qx9lPd3pBuoCc+fm
fGK8sUY5oxiTPk2/5GzlfOTdZe0YZ+6+GGDeqdiW/0vZg+w1JsgaZ79zV/B1
sYBunb71zDv4zbm76F50w7wfn/8fPxGFuQ==
               "]]}, Annotation[#, "Charting`Private`Tag$415490#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8jWUYx/GDbIrslZnMkL1J2mUUhZSUEbK3pCiSkE2h7BGRLZFSSqjM
7JVdlE2S3tcfn9d1fT/39TjP75z7uR/5W3Zq2DFJIpF4IVkiUS91IrElbSKR
Eb3TkFjIvY3rXHXM5EpgL1cfW7m70YdLgs+5vOkSiVe5zfIzGMjdkGtgllwS
+7gG+JnLhL5cUizi8rm+FbdFfhaDuH/kmpgt34/9XDlzfbgjcls05H6RM6Of
nAwPmRkq/61fbD2/3FreKjfCc/JkORnesX5TrYU51l6z9rm+lL6efqz+pv4N
/Tf6A+bL6/vqR6pHrXVTV8kz1NfkFuos+SM1XXyGukmdqz7j+l/1WTBEfsN8
K3W+PFm9Q66rvi+PUi/IvdSv4ntUv3B9AbWN/LO1jvql+sb65/VT9HfgXXP/
qrXjc62VRn3r4+R/9QetV5D7ycfkdvG9c9vkrOgvJ8cSbjBucQ9iHlcGh7hG
2M5lw5tcCizlhuA/rg7mcw/gMNcYO7jsGMClxDKuoPtoy/0Svw2ayFPl5HhL
/736nrnb6kN4n/ss7lldJJfVN9CP19/SHzH7HHbKOeLf4FJhOTcUCbN1+QVc
ORzlnscuLife5lJjBfc+mmA3nwsD+TRYyQ1DEv/Ww/xCrjyOcU3xG5cbg7i0
eNjcMPmifpX1QrFX5OHqr1wndZk8TX1ebqp+Ik9QU8Q9qRvjWVA/cH1S9RF5
WOxX8+3VxfInaoV4LtQJ8jj1P7m/+q38u2srxr6Lnu+uX61vr39ZP1ufHs3M
7VHzxP61lg6PxGfLl/Srrd8rt5O3xW+G4Vwy7lFukVwRx7lKXH/uuNwBL3B7
5Xtin8rp8SVX2Fx7bnv8/RjB3cE9xi2WK+EE1xz7uLwYzN2JNdxIJDf/OP8F
Vxknucrcm9wJ+XW8yO2X88W+sjaEax17Sp6i3iU/qg6XR6uX5d7qWvkr196n
76DfwXfWL4/vS99M/6k+JT40l0J+Qr/EWpU4F+WJ8m39KetV5AHyyXiO8RJ3
QM4f9yVnwFquiLnXuZ3x3WEUl5J7klsqV8VprgUOcgUwlMuIddxopDL/FL+M
q4Yz3Ms4xBWMZ4q7G19zY9ASh/lCscf4TFjPjcUrOMLfiw/4zPiGG4fUPudp
fjlXHWe5V3GUKxz7ncuCb7nxSGO+Hr+Cq4E/uFY4xt2HEVxWbOCKmu3I7ZKb
YwKXlqvPrZRr4k+uNX7nisQZzWXDd1wxs5243bEHMJFLxzXgVsm1cI5rg+Nc
0fgduez4nitutjP3W/xWmMSl5xpyq+XaOM9V5d7iTsVzjbbcCblYnOlyDjxm
ZoR8Rb/Regm5i7wn3h/xO8vT5FTxHrF+Z7w79F/GMxTvgTiP48zWT9In4gzW
b1D/Ml9N/3bcv3raXA/1S3lm/A1yS3WO/LF6ZzyH6k9xvse55PqT+uKxj+TR
5tuoC+Spak75cXWkPEa9KvdR18k/uLakvqt+L99Fv0I/XX05fjd1ujxRTR3n
qfpD3Ifr7tI/q19jrg7+5trhFFciPovLhR+5ychgvlE8k9xDuMC1x2muJMZy
ubGJu99sN25f/O2YwmXkGnNr5bq4yHXAGe7+ODu5PPiJm4q7zT/Hr4vzHJe4
6txA7kz8rXG+cGflUhgfv731hXHW6Z/Qfxj3pV6T+6pfy5tdU0rfXb+ffyX2
pzxDThNnuvVM8V7Qfx3nMC5zNbhB3Fm5a5wh3B9y6XhvyHmxhfsUnfAnXya+
ez4ftnLT0Bld0BXdcM7MA5hkJj9+5qYjs89rwq+P8xFXuO44z5WNfcoVwC/c
DGQx35T/JvY7GskfyUlw1XpN+R39H9a6xR7l/pLLxX6QC+JXbiaymm3Gfxt7
D9e4nvibK4/JXCFs42Yhm/kX+A3xveM61wsXuApxznP3YjtX2mwP7oD8KmZz
2bnm3Hfyk7jB1eLe5f6Uu8c7gbsoV4znQi4cs2ZGydf1O6yXkXvKB+M30q/U
t4rzQz8zvmM1rTpI/VGdE8+l63KoL8b5Gv//iX2lLpE/jXNcbqx+HHtMTaoO
UL9T/3Ftbf1g/TlzPfVr9D1iX+nn6u9CH3OX1Eqxv6zdh6fiWZdv6Hdaf0Du
JR+SW2Mul5N7idsoP42b3IPxDuXOx+fFvuYuy5XjfuUi2MXNQy6zLeKc4Orh
X64frnBVMI0rit3cfOSOc4P/kauPW9wbuMpVjXOFKxb3Ym5M/P36fvr1cU6b
K6vvHe8R9XCcY/iMzyO35DfJDfAf1x9vYgCuWauGGdaKYw+3APe47hX+J64h
bnN1uPfi3JV7xR6S58kZMFi/WZ0f7wSz/wMhktCd
               "]]}, 
             Annotation[#, "Charting`Private`Tag$415490#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.499999867346939}, {-6., 6.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 7.501161668118749}, {2., 4.5104319670488}, {3., 
          3.344455520764802}, {4., 2.7077343848712383`}, {5., 
          2.4447382472204606`}, {6., 2.2374633624218667`}, {7., 
          1.4420087895105114`}, {8., 1.1863193315351315`}, {9., 
          1.1744709366166692`}, {10., 0.7817624422791631}, {11., 
          0.19080159495361715`}, {12., 0.08740987274661943}, {13., 
          0.07271047465583166}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"J vs time\"", TraditionalForm],
      PlotRange->{{0., 13.}, {0, 7.501161668118749}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.866047075660619*^9, 3.8660471382914114`*^9, 3.8660472260430984`*^9, 
   3.866140681571192*^9, 3.8661407121024823`*^9, 3.866140871490795*^9, 
   3.8665711962149277`*^9, 3.8665714575256453`*^9, {3.866572829961238*^9, 
   3.8665728662966576`*^9}, 3.8665729128228292`*^9, 3.866573002355294*^9, 
   3.866573090261278*^9, 3.866573528101734*^9, 3.8665735834560924`*^9, 
   3.866573752972066*^9, 3.8665738279301763`*^9, 3.866573926696698*^9, 
   3.866575304671526*^9, 3.8665755470522766`*^9, 3.8665756179656754`*^9, 
   3.866575688735121*^9, 3.8665757462617865`*^9, 3.8665758172531605`*^9, 
   3.8665763101170807`*^9, 3.866576396727477*^9, {3.8665764702890325`*^9, 
   3.8665764772708073`*^9}, 3.8665765554638863`*^9, 3.866576589669985*^9, 
   3.866576630555954*^9, 3.8665767292485*^9, {3.8665778490206184`*^9, 
   3.8665778685294003`*^9}, 3.866579088540572*^9, 3.8665802074059796`*^9, 
   3.866664966444965*^9, 3.866665122519099*^9},
 CellLabel->
  "Out[714]=",ExpressionUUID->"61dbf7ba-6a0f-4b38-823a-aec817f3d4fe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Script for collecting Model Mismatch Testing Data", "Subsection",
 CellChangeTimes->{{3.866576800487796*^9, 
  3.866576812032118*^9}},ExpressionUUID->"e06065d7-44cc-42d9-8b73-\
2c2e93440186"],

Cell[BoxData[
 RowBox[{
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"numberTests", " ", "=", " ", "200"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"n", " ", "=", " ", "20"}], ";", 
     RowBox[{"M", " ", "=", " ", "10"}], ";", 
     RowBox[{"uBound", " ", "=", " ", "5"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"A1", " ", "=", " ", "0"}], ";", 
     RowBox[{"A2", " ", "=", " ", "0.2"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"MyAppend", "[", 
       RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], 
       "]"}], " ", ":=", " ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
          RowBox[{"Piecewise", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"f1", "[", "t", "]"}], ",", " ", 
               RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], 
              "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"f2", "[", 
                RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
               RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
                RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], 
           "]"}]}], ";", "\n", "    ", "f"}]}], "]"}]}], ";"}],
    FontWeight->"Plain"], "\[IndentingNewLine]", 
   RowBox[{
    StyleBox[
     RowBox[{"MPCVariant", "[", 
      RowBox[{"A1_", ",", "A2_", ",", "n_", ",", "M_", ",", "uBound_"}], "]"}],
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    StyleBox[":=",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontWeight->"Plain"], 
    RowBox[{
     StyleBox["Module",
      FontWeight->"Plain"], 
     StyleBox["[",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{
        "totalTime", ",", "\[Tau]", ",", "\[Tau]1", ",", "order", ",", 
         "maxCount", ",", "maxJ", ",", "maxError", ",", "maxErrorInitial", 
         ",", "EInitial", ",", "xdotMin", ",", "xdotMax", ",", 
         "\[IndentingNewLine]", "\[Theta]Min", ",", "\[Theta]Max", ",", 
         "\[Theta]dotMin", ",", "\[Theta]dotMax", ",", "xdotInit", ",", 
         "\[Theta]Init", ",", "\[Theta]dotInit", ",", "maxIter", ",", "ICs", 
         ",", "errorInitial", ",", "initGuess", ",", "count", ",", 
         "maxcountAlgo", ",", "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", 
         "\[Theta]dot1a", ",", "u1a", ",", "\[Lambda]1ff0", ",", 
         "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
         "J", ",", "K", ",", "\[IndentingNewLine]", "x1b", ",", "xdot1b", ",",
          "\[Theta]1b", ",", "\[Theta]dot1b", ",", "u1b", ",", "ICinit"}], 
        "}"}],
       FontWeight->"Plain"], 
      StyleBox[",",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox[
        RowBox[{"\[Tau]", " ", "=", " ", "5"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"\[Tau]1", " ", "=", " ", 
         RowBox[{"\[Tau]", "*", "1.25"}]}],
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"order", " ", "=", " ", "5"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"maxIter", " ", "=", " ", "100"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"maxCount", " ", "=", " ", "10"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"maxJ", " ", "=", " ", 
         RowBox[{
          RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"maxError", " ", "=", " ", "0.01"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"maxErrorInitial", " ", "=", " ", "0.5"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"EInitial", " ", "=", " ", "2"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["While",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         StyleBox[
          RowBox[{
           RowBox[{"EInitial", " ", ">", " ", "1.5"}], " ", "||", " ", 
           RowBox[{"EInitial", " ", "<", " ", "0.5"}]}],
          FontWeight->"Plain"], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox["\[IndentingNewLine]",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"xdotMin", " ", "=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"xdotMax", " ", "=", " ", "1"}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"\[Theta]Min", " ", "=", " ", 
            RowBox[{"-", "\[Pi]"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"\[Theta]dotMin", " ", "=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
           FontWeight->"Plain"], ";", "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"xdotInit", " ", "=", " ", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"\[Theta]Init", " ", "=", " ", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"\[Theta]dotInit", " ", "=", " ", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], 
             "]"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"ICs", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
             "0", ",", "xdotInit", ",", "\[Theta]Init", ",", 
              "\[Theta]dotInit"}], "}"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"], 
          StyleBox["\[IndentingNewLine]",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{"EInitial", " ", "=", " ", 
            RowBox[{"Energy", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
           FontWeight->"Plain"], 
          StyleBox[";",
           FontWeight->"Plain"]}]}], 
        StyleBox["\[IndentingNewLine]",
         FontWeight->"Plain"], 
        StyleBox["]",
         FontWeight->"Plain"]}], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"ICinit", " ", "=", " ", "ICs"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"EInitial", " ", "=", " ", 
         RowBox[{"Energy", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", "A2", "}"}]}], "]"}], "]"}]}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"errorInitial", " ", "=", " ", "10"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"initGuess", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"count", " ", "=", " ", "0"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"maxcountAlgo", " ", "=", " ", "20"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&",
            " ", 
           RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", 
              ",", "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
              "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
             "}"}], "=", 
            RowBox[{"Quiet", "[", 
             RowBox[{"ffCartPendulum", "[", 
              RowBox[{
              "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
               "order", ",", "maxIter", ",", "maxError", " ", ",", "uBound", 
               ",", "maxCount", ",", "initGuess", ",", "maxJ"}], "]"}], 
             "]"}]}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", 
              ",", "u1b", ",", "J"}], "}"}], "=", 
            RowBox[{"Quiet", "[", 
             RowBox[{"testWithFBClipped", "[", 
              RowBox[{
              "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a",
                ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", 
               "A2", ",", "uBound", ",", "K"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ICs", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x1b", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
              RowBox[{"xdot1b", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
              RowBox[{"\[Theta]1b", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
              RowBox[{"\[Theta]dot1b", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"errorInitial", " ", "=", " ", 
            RowBox[{"Norm", "[", 
             RowBox[{"ICs", " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"initGuess", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Lambda]1ff0", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}], ",", 
              RowBox[{"\[Lambda]2ff0", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}], ",", 
              RowBox[{"\[Lambda]3ff0", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}], ",", 
              RowBox[{"\[Lambda]4ff0", "[", 
               RowBox[{"\[Tau]", "*", 
                RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"count", " ", "=", " ", 
            RowBox[{"count", " ", "+", " ", "1"}]}], ";"}]}], "\t", 
         "\[IndentingNewLine]", "]"}],
        FontWeight->"Plain"], 
       StyleBox[";",
        FontWeight->"Plain"], "\[IndentingNewLine]", 
       RowBox[{"{", 
        StyleBox[
         RowBox[{
          RowBox[{"totalTime", " ", "=", " ", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}], "*", "count"}]}], ",", "ICinit"}],
         FontWeight->"Plain"], 
        StyleBox["}",
         FontWeight->"Plain"]}]}]}], 
     StyleBox["]",
      FontWeight->"Plain"]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{"TimingData", "=", 
      RowBox[{"{", "}"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\n",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"ICData", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"SetSharedVariable", "[", "TimingData", "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{"SetSharedVariable", "[", "ICData", "]"}], ";"}],
    FontWeight->"Plain"], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"ParallelDo", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"time", ",", "ICs"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"time", ",", "ICs"}], "}"}], " ", "=", 
           RowBox[{"MPCVariant", "[", 
            RowBox[{"A1", ",", "A2", ",", "n", ",", "M", ",", "uBound"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"TimingData", ",", "time"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"ICData", ",", "ICs"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Export", "[", 
           RowBox[{"\"\<TimingData.mx\>\"", ",", "TimingData"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Export", "[", 
           RowBox[{"\"\<ICData.mx\>\"", ",", "ICData"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "numberTests", "}"}]}], "\[IndentingNewLine]", "]"}],
    FontWeight->"Plain"]}]}]], "Input",
 CellChangeTimes->{{3.8665777734597015`*^9, 3.8665777929105053`*^9}, {
   3.8665779568602486`*^9, 3.866578201950136*^9}, {3.8665782362332106`*^9, 
   3.8665784799645324`*^9}, {3.866578563917774*^9, 3.866578588424964*^9}, {
   3.866578656668214*^9, 3.866578666525072*^9}, {3.8665787041740737`*^9, 
   3.866578727443657*^9}, {3.8665791504628367`*^9, 3.8665791609974794`*^9}, 
   3.86657924552254*^9, {3.866579793054037*^9, 3.866579799548968*^9}, 
   3.8665798389863987`*^9, {3.866579962581007*^9, 3.866580046157374*^9}, {
   3.866580203154334*^9, 3.866580206696206*^9}, {3.8665803063554435`*^9, 
   3.8665803106150866`*^9}, {3.866580355575756*^9, 3.866580364610879*^9}, {
   3.8665804397299376`*^9, 3.8665804444854207`*^9}, 3.866580527180066*^9, {
   3.8665806021731634`*^9, 3.866580613129674*^9}, {3.8665806585541954`*^9, 
   3.866580660718505*^9}, {3.866580759118144*^9, 3.8665807638636312`*^9}, {
   3.866580794250947*^9, 3.8665807944188957`*^9}, 3.866581490078181*^9, {
   3.8665815332164316`*^9, 3.8665815386916876`*^9}, {3.866581585509765*^9, 
   3.8665816031021585`*^9}, 3.8665817396226482`*^9, {3.8665819016899977`*^9, 
   3.866581927066908*^9}, {3.86658200079641*^9, 3.8665820089328184`*^9}, {
   3.866582187104032*^9, 3.8665822251599035`*^9}, {3.86658229131382*^9, 
   3.8665822954754934`*^9}, {3.866582405143541*^9, 3.866582405543414*^9}, {
   3.866582478361206*^9, 3.866582478732089*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"0b1435ee-0c32-4e55-bc78-ed2d59e37a58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TimingData", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<TimingData.mx\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICData", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<ICData.mx\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8665821777070293`*^9, 3.8665821786917133`*^9}, {
  3.866582240280084*^9, 3.8665822768624287`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b1b115b3-ef15-4622-ad79-0561f4c1e8b7"],

Cell[CellGroupData[{

Cell[BoxData["TimingData"], "Input",
 CellChangeTimes->{{3.86665307172631*^9, 3.866653072961914*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"618be144-caaa-4de6-9c10-bda6fd86c965"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["13", "2"], ",", "6", ",", 
   FractionBox["9", "2"], ",", "5", ",", "10", ",", 
   FractionBox["11", "2"], ",", "7", ",", "5", ",", 
   FractionBox["11", "2"], ",", "10", ",", "10", ",", "6", ",", "10", ",", 
   FractionBox["13", "2"], ",", "6", ",", 
   FractionBox["7", "2"], ",", "10", ",", "8", ",", 
   FractionBox["19", "2"], ",", "10", ",", "6", ",", "8", ",", "6", ",", "6", 
   ",", "6", ",", "10", ",", "4", ",", "5", ",", "6", ",", "10", ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["17", "2"], ",", "10", ",", "7", ",", 
   FractionBox["11", "2"], ",", "6", ",", "6", ",", "10", ",", "8", ",", 
   FractionBox["11", "2"], ",", "7", ",", 
   FractionBox["13", "2"], ",", "5", ",", "8", ",", "5", ",", 
   FractionBox["11", "2"], ",", "4", ",", "6", ",", 
   FractionBox["9", "2"], ",", "4", ",", "6", ",", "6", ",", 
   FractionBox["11", "2"], ",", "4", ",", "6", ",", "7", ",", "5", ",", "9", 
   ",", "6", ",", "6", ",", "9", ",", "6", ",", 
   FractionBox["19", "2"], ",", "8", ",", "5", ",", "5", ",", "6", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["15", "2"], ",", "4", ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["7", "2"], ",", 
   FractionBox["13", "2"], ",", "10", ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["1", "2"], ",", "5", ",", "3", ",", "8", ",", 
   FractionBox["9", "2"], ",", "6", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["9", "2"], ",", "10", ",", "4", ",", "6", ",", 
   FractionBox["13", "2"], ",", "2", ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["9", "2"], ",", "9", ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["13", "2"], ",", "5", ",", 
   FractionBox["13", "2"], ",", "6", ",", "6", ",", "2", ",", 
   FractionBox["7", "2"], ",", "5", ",", "8", ",", 
   FractionBox["9", "2"], ",", "5", ",", "10", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["1", "2"], ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["13", "2"], ",", "7", ",", 
   FractionBox["11", "2"], ",", "4", ",", 
   FractionBox["5", "2"], ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["13", "2"], ",", "5", ",", "6", ",", "10", ",", "10", ",", "6",
    ",", 
   FractionBox["9", "2"], ",", "5", ",", "5", ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["11", "2"], ",", "6", ",", "6", ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["9", "2"], ",", "10", ",", 
   FractionBox["7", "2"], ",", "4", ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["13", "2"], ",", "6", ",", 
   FractionBox["9", "2"], ",", "10", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["7", "2"], ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["9", "2"], ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["11", "2"], ",", "6", ",", 
   FractionBox["13", "2"], ",", "6", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["9", "2"], ",", "4", ",", "10", ",", "2", ",", "10", ",", "10",
    ",", 
   FractionBox["11", "2"], ",", "8", ",", "10", ",", 
   FractionBox["11", "2"], ",", "5", ",", 
   FractionBox["11", "2"], ",", "6", ",", "10", ",", "4", ",", "9", ",", "10",
    ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["9", "2"], ",", "6", ",", "6", ",", 
   FractionBox["13", "2"], ",", 
   FractionBox["13", "2"], ",", "6", ",", 
   FractionBox["19", "2"], ",", 
   FractionBox["13", "2"], ",", "6", ",", "6", ",", 
   FractionBox["1", "2"], ",", "9", ",", "10", ",", 
   FractionBox["11", "2"], ",", "10", ",", 
   FractionBox["15", "2"], ",", "6", ",", "10", ",", 
   FractionBox["7", "2"], ",", 
   FractionBox["17", "2"], ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.8666530739735913`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"b48dc724-de36-40f4-b245-bfe9b8b6c9d1"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<TimingData200.mx\>\"", ",", "TimingData"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ICData200.mx\>\"", ",", "ICData"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8666531048617244`*^9, 3.8666531134969664`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"f8a192b8-9a82-488f-9864-2f55d2c5e8f0"]
}, Open  ]]
},
WindowSize->{1428., 735.75},
WindowMargins->{{-6, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1. Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7e518428-48d0-4ac3-961b-c04116ec4574"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 96511, 2371, 2951, "Code",ExpressionUUID->"c06eaa1a-1a94-4921-93d5-81325d0c5150"],
Cell[97072, 2393, 3053, 77, 181, "Input",ExpressionUUID->"c1017f9a-a17b-486d-bcf4-2a776a5e392f"],
Cell[100128, 2472, 152, 3, 28, "Input",ExpressionUUID->"869f2bbe-d630-493f-a109-ef8e8d83ea6a"],
Cell[100283, 2477, 307, 4, 51, "Text",ExpressionUUID->"982e74f5-390b-4bf9-a720-2fed731db11d"],
Cell[CellGroupData[{
Cell[100615, 2485, 14049, 346, 504, "Input",ExpressionUUID->"c28652c3-ba56-4a0b-8e4f-0e46f1c2c441"],
Cell[114667, 2833, 71819, 1275, 206, "Output",ExpressionUUID->"da173ed0-7d31-4965-b8bf-a391bcad406d"],
Cell[186489, 4110, 84624, 1489, 206, "Output",ExpressionUUID->"74d57075-638b-493e-97f4-7141721f35f8"]
}, Open  ]],
Cell[271128, 5602, 257, 4, 28, "Input",ExpressionUUID->"95c2d440-5f34-4096-8d7d-805c19f73e37"],
Cell[271388, 5608, 315, 7, 51, "Text",ExpressionUUID->"a4d3e002-6aa2-45cc-a329-b64caecefa39"],
Cell[CellGroupData[{
Cell[271728, 5619, 8936, 201, 276, "Input",ExpressionUUID->"539af9eb-2787-4ce5-94ed-3f323d9493e1"],
Cell[280667, 5822, 713, 14, 22, "Print",ExpressionUUID->"3f4367ba-eb3f-40aa-995d-df7efe351c7c"],
Cell[281383, 5838, 63836, 1144, 206, "Output",ExpressionUUID->"f34c0c6c-7cdb-46b9-b57a-43fdaca386ea"],
Cell[345222, 6984, 76517, 1363, 206, "Output",ExpressionUUID->"94431d70-6c8d-45b0-8f35-28fc46a3a312"]
}, Open  ]],
Cell[421754, 8350, 212, 3, 51, "Text",ExpressionUUID->"f03e7ea6-c5c3-4d65-ba41-05cf4f23e612"],
Cell[CellGroupData[{
Cell[421991, 8357, 14872, 361, 920, "Input",ExpressionUUID->"72a8bca2-8c79-47e1-9329-ba71838bf03f"],
Cell[CellGroupData[{
Cell[436888, 8722, 766, 13, 22, "Print",ExpressionUUID->"bf290eae-a43f-49d7-9339-b2243ae37c94"],
Cell[437657, 8737, 764, 13, 22, "Print",ExpressionUUID->"cd6bb23d-d8c4-4716-983b-0de7686d2d38"],
Cell[438424, 8752, 764, 13, 22, "Print",ExpressionUUID->"0c1a4332-e373-4458-a201-6424f126a05d"],
Cell[439191, 8767, 764, 13, 22, "Print",ExpressionUUID->"5ebe1bf9-6c68-4fee-b834-0534e8e32093"],
Cell[439958, 8782, 764, 13, 22, "Print",ExpressionUUID->"d4784836-8854-42b2-b620-4841c22b6f42"]
}, Open  ]],
Cell[440737, 8798, 69815, 1241, 208, "Output",ExpressionUUID->"9fce181b-53fe-4068-91b0-84705cbcc0ef"],
Cell[510555, 10041, 2062, 49, 248, "Output",ExpressionUUID->"e757affe-b424-4690-889f-647a15ac5474"]
}, Open  ]],
Cell[512632, 10093, 208, 3, 51, "Text",ExpressionUUID->"1f326168-d612-4bfb-8f00-5d26c5302aa2"],
Cell[512843, 10098, 526, 11, 104, "Text",ExpressionUUID->"4f96a2c6-1db1-40df-892e-51cb2ee045f0"],
Cell[513372, 10111, 287, 4, 51, "Text",ExpressionUUID->"605fa9bd-d2f9-4de1-8459-5ae1aa1ed3d4"],
Cell[CellGroupData[{
Cell[513684, 10119, 11748, 279, 730, "Input",ExpressionUUID->"a1e062b3-c19b-4de5-9c5a-758815bd1a87"],
Cell[CellGroupData[{
Cell[525457, 10402, 327, 7, 22, "Print",ExpressionUUID->"4862f4bc-a5fe-4c18-b2ab-7942cad26f35"],
Cell[525787, 10411, 327, 7, 22, "Print",ExpressionUUID->"d4a601e7-2397-4df6-b408-ae8073848ef5"],
Cell[526117, 10420, 325, 7, 22, "Print",ExpressionUUID->"6b7d41ac-9732-4954-ad0f-c14782216c14"],
Cell[526445, 10429, 325, 7, 22, "Print",ExpressionUUID->"d13988ad-0619-4550-8526-5c5b7817c018"],
Cell[526773, 10438, 325, 7, 22, "Print",ExpressionUUID->"35011865-bc40-4696-8abb-cc48ce8ee770"],
Cell[527101, 10447, 324, 7, 22, "Print",ExpressionUUID->"6204e8e8-28ef-4f14-96b6-ffe2df356b6b"],
Cell[527428, 10456, 325, 7, 22, "Print",ExpressionUUID->"c64e2e00-9ac3-4a44-bd0b-afa5face8fb8"],
Cell[527756, 10465, 327, 7, 22, "Print",ExpressionUUID->"ff3e670c-c52f-4df5-826b-016f8ce893a4"],
Cell[528086, 10474, 325, 7, 22, "Print",ExpressionUUID->"aea7e719-f71d-461d-819c-91e02e2edc30"],
Cell[528414, 10483, 328, 7, 22, "Print",ExpressionUUID->"c7046757-e870-4e1d-8208-9584ea5224f4"]
}, Open  ]],
Cell[528757, 10493, 89307, 1567, 208, "Output",ExpressionUUID->"8422c06c-0a54-450f-bf30-82fd245b3abe"],
Cell[618067, 12062, 399, 7, 32, "Output",ExpressionUUID->"60eddc4f-7de6-45ca-9031-103521e3ce42"]
}, Open  ]],
Cell[618481, 12072, 303, 6, 51, "Text",ExpressionUUID->"5e902872-386c-441e-a1fb-71cf8c39bef1"],
Cell[CellGroupData[{
Cell[618809, 12082, 11903, 283, 749, "Input",ExpressionUUID->"db1fe012-3c00-41dd-bf23-d956f20ffc05"],
Cell[CellGroupData[{
Cell[630737, 12369, 175, 4, 22, "Print",ExpressionUUID->"e24d5fa0-1925-4b91-a6c5-4b3a0948a4f7"],
Cell[630915, 12375, 177, 4, 22, "Print",ExpressionUUID->"042e9e3b-099c-4e9f-9b60-7737234042ea"],
Cell[631095, 12381, 175, 4, 22, "Print",ExpressionUUID->"e4a9ea77-aef1-4256-afeb-43647d389980"],
Cell[631273, 12387, 175, 4, 22, "Print",ExpressionUUID->"d8e5a864-996e-49ef-9668-635c7ed12e67"],
Cell[631451, 12393, 177, 4, 22, "Print",ExpressionUUID->"abc38e85-a5cb-4755-bf7d-359408195a9d"],
Cell[631631, 12399, 177, 4, 22, "Print",ExpressionUUID->"64161f47-8839-446d-ad3b-a4b9ef25f4ac"],
Cell[631811, 12405, 175, 4, 22, "Print",ExpressionUUID->"a529319e-a79d-4789-b379-26c13e1c5fb4"],
Cell[631989, 12411, 175, 4, 22, "Print",ExpressionUUID->"7dc6844b-8e20-4c36-93fa-3e649567c9cf"],
Cell[632167, 12417, 175, 4, 22, "Print",ExpressionUUID->"50af0c08-a1cd-411c-ad57-7951aaf420ab"],
Cell[632345, 12423, 178, 4, 22, "Print",ExpressionUUID->"e5a0acf8-e273-4885-b0dd-0ab36f8925bc"]
}, Open  ]],
Cell[632538, 12430, 103385, 1800, 208, "Output",ExpressionUUID->"0f56444a-5d44-4e7c-a35a-9ff38e9907ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[735960, 14235, 20243, 496, 1110, "Input",ExpressionUUID->"1bec3645-5e1f-43d6-906e-b0d31dcb7ae6"],
Cell[CellGroupData[{
Cell[756228, 14735, 449, 11, 22, "Print",ExpressionUUID->"872325c8-9c10-4761-9f52-56fd44f2336a"],
Cell[756680, 14748, 424, 10, 22, "Print",ExpressionUUID->"ff2c91d4-8323-4de0-8199-799d5b623ec5"],
Cell[757107, 14760, 460, 10, 22, "Print",ExpressionUUID->"fcbdeac5-7972-43af-b0a0-a60203b1c4e9"],
Cell[757570, 14772, 741, 15, 23, "Print",ExpressionUUID->"48adbbff-fac8-4365-a77b-42b1599283d2"],
Cell[758314, 14789, 422, 10, 22, "Print",ExpressionUUID->"d4ca1435-0036-4fb5-8755-86443b26580a"],
Cell[758739, 14801, 458, 10, 22, "Print",ExpressionUUID->"3adc66f2-0f63-4787-9fa9-aaa170153ff2"],
Cell[759200, 14813, 739, 15, 23, "Print",ExpressionUUID->"eb57c32c-071e-44d2-8f7e-dd3c5e085fd8"],
Cell[759942, 14830, 424, 10, 22, "Print",ExpressionUUID->"ee8e7466-3513-4426-9113-25713839c7f6"],
Cell[760369, 14842, 455, 10, 22, "Print",ExpressionUUID->"9d0f4d9b-d79a-4998-b00f-f507784d291e"],
Cell[760827, 14854, 424, 10, 22, "Print",ExpressionUUID->"c4c22d1c-4f6c-47c8-a742-408f1b447d7b"],
Cell[761254, 14866, 458, 10, 22, "Print",ExpressionUUID->"52d3f610-af79-4756-9906-442130ca6992"],
Cell[761715, 14878, 424, 10, 22, "Print",ExpressionUUID->"5c10fe0f-66c5-4435-8734-818b603143a4"],
Cell[762142, 14890, 455, 10, 22, "Print",ExpressionUUID->"f1ae9af8-4de6-42b3-91d7-c55116425352"],
Cell[762600, 14902, 749, 16, 23, "Print",ExpressionUUID->"ee6c0472-8725-4265-b6ee-7e04b276ffd4"],
Cell[763352, 14920, 422, 10, 22, "Print",ExpressionUUID->"8dc8ab37-19e2-4a89-ad51-5c3f3fd2ec19"],
Cell[763777, 14932, 460, 10, 22, "Print",ExpressionUUID->"7b0873c1-19a6-4a3e-ac17-6d3c9980233b"],
Cell[764240, 14944, 715, 15, 22, "Print",ExpressionUUID->"223669c0-3c90-4a4d-8274-bd79bd33ac8b"],
Cell[764958, 14961, 749, 16, 23, "Print",ExpressionUUID->"6984d978-b9a7-49b2-8b29-fba6184d174c"],
Cell[765710, 14979, 424, 10, 22, "Print",ExpressionUUID->"2b0a2a98-ec8e-4f62-98fe-aa5326e8ea3b"],
Cell[766137, 14991, 455, 10, 22, "Print",ExpressionUUID->"efad5f0d-7d99-4aef-9a80-44d150bd978c"],
Cell[766595, 15003, 422, 10, 22, "Print",ExpressionUUID->"cf5fd164-9126-429a-b03a-acd273c5fdbb"],
Cell[767020, 15015, 458, 10, 22, "Print",ExpressionUUID->"37e145e5-0c2b-4928-a7db-f800c9b8a6a5"],
Cell[767481, 15027, 728, 15, 23, "Print",ExpressionUUID->"5712fc84-ab61-4522-9a02-2af338a78f06"],
Cell[768212, 15044, 724, 15, 22, "Print",ExpressionUUID->"0c54429e-123c-40a5-831d-56fdc9bba353"],
Cell[768939, 15061, 722, 15, 22, "Print",ExpressionUUID->"ee735207-bcd0-45bc-a198-0e21f1f1e6d1"],
Cell[769664, 15078, 719, 15, 22, "Print",ExpressionUUID->"fda8bf53-ffe4-4e0b-8468-c76413c6602d"],
Cell[770386, 15095, 739, 15, 23, "Print",ExpressionUUID->"3a8fb9e8-d637-4caa-9880-622894d051a3"],
Cell[771128, 15112, 422, 10, 22, "Print",ExpressionUUID->"39aef638-9682-4e4a-a7e8-1d7d34552403"],
Cell[771553, 15124, 460, 10, 22, "Print",ExpressionUUID->"69da0b34-d030-474e-a925-dfa69174b1b7"],
Cell[772016, 15136, 751, 16, 23, "Print",ExpressionUUID->"2b284a3f-823e-43c7-8b02-99643bc02f12"],
Cell[772770, 15154, 424, 10, 22, "Print",ExpressionUUID->"8c36bb33-f5b2-45e8-80e7-35a7ba5d8f2f"],
Cell[773197, 15166, 457, 10, 22, "Print",ExpressionUUID->"6ee4a6c2-1d28-4c51-9ad4-45b0df3170e3"],
Cell[773657, 15178, 426, 10, 22, "Print",ExpressionUUID->"a8ff9594-1757-4d89-a374-1c8b9b7d1fbd"],
Cell[774086, 15190, 457, 10, 22, "Print",ExpressionUUID->"5080ea88-143c-4fda-b6c1-e083899579df"],
Cell[774546, 15202, 424, 10, 22, "Print",ExpressionUUID->"2539da5e-2c85-4d81-8bf7-9e7542002622"],
Cell[774973, 15214, 459, 10, 22, "Print",ExpressionUUID->"7f42d55e-56a8-426a-9670-34547e91bf0a"],
Cell[775435, 15226, 466, 10, 22, "Print",ExpressionUUID->"1d5e5542-d8e4-4fa9-8b02-26841af10f3f"]
}, Open  ]],
Cell[775916, 15239, 73214, 1308, 209, "Output",ExpressionUUID->"d9d896a6-749f-46ed-9655-adff8ee40839"]
}, Open  ]],
Cell[CellGroupData[{
Cell[849167, 16552, 201, 3, 54, "Subsection",ExpressionUUID->"5bd1fbeb-86ec-47eb-b2f4-64cad2ea694f"],
Cell[849371, 16557, 310, 8, 81, "Text",ExpressionUUID->"6a3abf9b-d55b-483f-8f44-d33cec9f6985"],
Cell[CellGroupData[{
Cell[849706, 16569, 20142, 495, 1110, "Input",ExpressionUUID->"8e38cdaf-ed5f-437a-9ced-be5bff917c65"],
Cell[CellGroupData[{
Cell[869873, 17068, 1207, 22, 22, "Print",ExpressionUUID->"2e1a0f61-7d45-41d7-b61b-5e394d6e5e75"],
Cell[871083, 17092, 1180, 21, 22, "Print",ExpressionUUID->"91a5d736-4e72-4e21-8bcc-25269b90e6fd"],
Cell[872266, 17115, 1215, 21, 22, "Print",ExpressionUUID->"5fba4d15-1f13-411e-aeef-82ad4f79d1a5"],
Cell[873484, 17138, 1485, 26, 22, "Print",ExpressionUUID->"4840a139-1973-4eb1-a7ff-d97bac5dec9b"],
Cell[874972, 17166, 1499, 26, 23, "Print",ExpressionUUID->"534f8127-9018-43e6-a353-cffe7315cd7a"],
Cell[876474, 17194, 1182, 21, 22, "Print",ExpressionUUID->"5f769363-5ddd-425b-a163-b9d20ab03e06"],
Cell[877659, 17217, 1215, 21, 22, "Print",ExpressionUUID->"26d0bcfa-add4-4ab9-9908-178961c1a5a2"],
Cell[878877, 17240, 1509, 27, 23, "Print",ExpressionUUID->"03f25dc8-f02c-4a9d-8496-aef889ae9ac0"],
Cell[880389, 17269, 1182, 21, 22, "Print",ExpressionUUID->"22462ccb-a129-4f08-888b-15567ab51313"],
Cell[881574, 17292, 1218, 21, 22, "Print",ExpressionUUID->"f8d8cd38-ab0f-46e3-9203-6768837ac9bb"],
Cell[882795, 17315, 1182, 21, 22, "Print",ExpressionUUID->"f39a7509-8811-4d75-b4a6-d44e97f2d0e0"],
Cell[883980, 17338, 1213, 21, 22, "Print",ExpressionUUID->"94a77059-654d-4106-bf3d-6ef57fc425b2"],
Cell[885196, 17361, 1180, 21, 22, "Print",ExpressionUUID->"97e4bc04-b198-4419-be23-ec5c6ce6b1b0"],
Cell[886379, 17384, 1218, 21, 22, "Print",ExpressionUUID->"eb3065a6-d4ff-49b1-99ba-16294b4c700d"],
Cell[887600, 17407, 1487, 26, 22, "Print",ExpressionUUID->"b756dd01-a8c8-4b39-a2c0-df6a915b2241"],
Cell[889090, 17435, 1507, 27, 23, "Print",ExpressionUUID->"8ad2aef4-e45f-47ac-91f2-afaab4fcc870"],
Cell[890600, 17464, 1180, 21, 22, "Print",ExpressionUUID->"248e9000-9942-4b4e-ba55-8fb7c034897c"],
Cell[891783, 17487, 1215, 21, 22, "Print",ExpressionUUID->"084bd6ac-b0b8-429c-a0ab-98ed94077642"],
Cell[893001, 17510, 1478, 26, 22, "Print",ExpressionUUID->"4a3f7b0e-3dee-4c76-a9e7-31eee5b89f77"],
Cell[894482, 17538, 1493, 26, 23, "Print",ExpressionUUID->"3511a965-61d5-46ee-855c-fa0935a4314d"],
Cell[895978, 17566, 1180, 21, 22, "Print",ExpressionUUID->"18cceb6e-d9a5-4537-9579-7be83f0c470d"],
Cell[897161, 17589, 1213, 21, 22, "Print",ExpressionUUID->"939e8d5d-6dfa-4e7a-97f5-70c3a1ae93fe"],
Cell[898377, 17612, 1182, 21, 22, "Print",ExpressionUUID->"75c35d5f-4eb6-4198-beb7-232b853197ae"],
Cell[899562, 17635, 1213, 21, 22, "Print",ExpressionUUID->"e18f723e-5317-495b-8354-7dd3a322c868"],
Cell[900778, 17658, 1182, 21, 22, "Print",ExpressionUUID->"84801d36-9d33-42f8-b792-045c68ccbd0a"],
Cell[901963, 17681, 1216, 21, 22, "Print",ExpressionUUID->"f0a79ea5-a48f-456a-9c5b-7c48b617a3b9"],
Cell[903182, 17704, 1499, 26, 23, "Print",ExpressionUUID->"d718edd6-add9-4a6c-885f-299f1282127f"],
Cell[904684, 17732, 1184, 21, 22, "Print",ExpressionUUID->"eea0f556-0b3b-4b0f-afee-454d56ec3c44"],
Cell[905871, 17755, 1215, 21, 22, "Print",ExpressionUUID->"1b178bfc-f2b6-4eef-ac81-3a6fc0e9e404"],
Cell[907089, 17778, 1509, 27, 23, "Print",ExpressionUUID->"2ce8f944-9be3-4fc7-b83e-d68f4691bb11"],
Cell[908601, 17807, 1184, 21, 22, "Print",ExpressionUUID->"3ac7da14-6469-4cc6-b3c6-21f0905dceed"],
Cell[909788, 17830, 1214, 21, 22, "Print",ExpressionUUID->"18001b55-29bc-4201-9a18-6bd78ef5c9e4"],
Cell[911005, 17853, 1184, 21, 22, "Print",ExpressionUUID->"83efab40-2561-4a2d-bfb3-be8550565339"],
Cell[912192, 17876, 1215, 21, 22, "Print",ExpressionUUID->"7839908c-68dc-40cd-8df4-f4bfad3fe919"],
Cell[913410, 17899, 1181, 21, 22, "Print",ExpressionUUID->"46e701a4-1b6d-45aa-bde7-b7107093b27a"],
Cell[914594, 17922, 1213, 21, 22, "Print",ExpressionUUID->"85fc6b1b-61e1-4c7a-a98b-2356c44f6765"],
Cell[915810, 17945, 1263, 23, 38, "Print",ExpressionUUID->"daaa0406-544e-420c-a2dc-3300cae98b60"]
}, Open  ]],
Cell[917088, 17971, 86831, 1534, 209, "Output",ExpressionUUID->"61dbf7ba-6a0f-4b38-823a-aec817f3d4fe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1003968, 19511, 197, 3, 54, "Subsection",ExpressionUUID->"e06065d7-44cc-42d9-8b73-2c2e93440186"],
Cell[1004168, 19516, 18296, 480, 1129, "Input",ExpressionUUID->"0b1435ee-0c32-4e55-bc78-ed2d59e37a58"],
Cell[1022467, 19998, 477, 10, 48, "Input",ExpressionUUID->"b1b115b3-ef15-4622-ad79-0561f4c1e8b7"],
Cell[CellGroupData[{
Cell[1022969, 20012, 179, 2, 28, "Input",ExpressionUUID->"618be144-caaa-4de6-9c10-bda6fd86c965"],
Cell[1023151, 20016, 4219, 97, 159, "Output",ExpressionUUID->"b48dc724-de36-40f4-b245-bfe9b8b6c9d1"]
}, Open  ]],
Cell[1027385, 20116, 412, 9, 48, "Input",ExpressionUUID->"f8a192b8-9a82-488f-9864-2f55d2c5e8f0"]
}, Open  ]]
}
]
*)

