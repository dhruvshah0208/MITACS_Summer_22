(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    614582,      11618]
NotebookOptionsPosition[    612292,      11579]
NotebookOutlinePosition[    612728,      11596]
CellTagsIndexPosition[    612685,      11593]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateGainsFF", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_", ",", "order_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "0", "0"},
         {"0", "1", "0", "0"},
         {"0", "0", "1", "0"},
         {"0", "0", "0", "1"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}]}], ";", "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"K", "[", "time_", "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "K", ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", 
       "\[Lambda]4ff0", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"2", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}], "^", "3"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"\[Lambda]4", "^", "2"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
                  RowBox[{"4", " ", "A", " ", 
                   RowBox[{"\[Lambda]2", "^", "2"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"A", "+", "2"}], ")"}], " ", 
                   RowBox[{"\[Lambda]4", "^", "2"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
                  RowBox[{"3", " ", "A"}], "+", "2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
                  "2"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"A", "-", "2"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A"}], ")"}], 
             " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", 
               "2"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                RowBox[{"\[Theta]dot", "^", "2"}], " ", "\[Lambda]4"}]}], 
              ")"}]}], "-", 
            RowBox[{"4", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
               RowBox[{"3", " ", "A"}], "+", "2"}], ")"}]}]}], ")"}]}], ",", 
         "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", "\n", 
      RowBox[{
       SubscriptBox[
        StyleBox[
         RowBox[{"x", 
          StyleBox["Guess",
           FontWeight->"Plain"]}]], "0"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InitGuess", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}],
        FontWeight->"Plain"]}], 
      StyleBox[";",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           StyleBox[
            RowBox[{
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]], " ", "=", " ", 
             RowBox[{
              SubscriptBox[
               StyleBox[
                RowBox[{"x", 
                 StyleBox["Guess",
                  FontWeight->"Plain"]}]], "i"], " ", "+", 
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}]}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{"CalculateGainsFF", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A", ",", "order"}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "K"}], "}"}]}]}], "]"}]}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"testWithFB", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "Kff_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J", ",", "S", ",", "K"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"K", "[", "t_", "]"}], " ", "=", " ", 
      RowBox[{"Kff", "[", "t", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{"uff", "[", "t", "]"}], "+", 
       RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{"uff", "[", "t", "]"}], "+", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"xs", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdots", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, {3.8641522178158865`*^9, 
   3.8641522661302505`*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[303]:=",ExpressionUUID->"8704d90d-5c8d-426c-bcda-bbe621b0a2c4"],

Cell["\<\
Testing Recomputing manually with 3 divisions. However surprisingly the \
costate of pervious feedforward computations does not work ahead!\
\>", "Text",
 CellChangeTimes->{{3.8641533433196383`*^9, 3.8641534078207626`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"982e74f5-390b-4bf9-a720-2fed731db11d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "K"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "K"}], 
     "]"}]}], ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]New", " ", "=", 
   RowBox[{"\[Tau]", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
    RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", 
    RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
    RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
     RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
     RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
     RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636127929494734`*^9, 3.8636129048647366`*^9}, 
   3.86361309340853*^9, {3.8636132740148587`*^9, 3.8636132890980425`*^9}, {
   3.86361367016436*^9, 3.863613704067534*^9}, {3.863614005426304*^9, 
   3.863614044030977*^9}, {3.86361407671554*^9, 3.8636140789588237`*^9}, {
   3.8636141197098103`*^9, 3.863614156970913*^9}, {3.8636143059493403`*^9, 
   3.8636143423397207`*^9}, {3.8636146524377003`*^9, 
   3.8636146681296897`*^9}, {3.863615502417285*^9, 3.863615703473082*^9}, {
   3.8636161037482653`*^9, 3.863616122815179*^9}, {3.863616300467451*^9, 
   3.8636163404706755`*^9}, {3.863616379759131*^9, 3.8636164322373734`*^9}, 
   3.8636164758294525`*^9, {3.8636165064106874`*^9, 3.8636165068755407`*^9}, {
   3.863616588161584*^9, 3.8636166296943207`*^9}, {3.8636166641123295`*^9, 
   3.863616732677436*^9}, {3.8636167693047395`*^9, 3.8636167704293804`*^9}, {
   3.863616826318534*^9, 3.8636168556931543`*^9}, {3.8636168995821395`*^9, 
   3.8636168999240313`*^9}, {3.863619302411866*^9, 3.863619416136552*^9}, {
   3.8636195563387823`*^9, 3.863619570937121*^9}, {3.8636197069376936`*^9, 
   3.8636197273581724`*^9}, {3.8636205744286833`*^9, 
   3.8636207335498743`*^9}, {3.8636207658335643`*^9, 
   3.8636207659625244`*^9}, {3.8636208211778917`*^9, 
   3.8636208543832893`*^9}, {3.863620930334037*^9, 3.863620936617031*^9}, {
   3.864135467525829*^9, 3.8641355031932845`*^9}, {3.8641358508757644`*^9, 
   3.8641358994820337`*^9}, {3.864136005621681*^9, 3.8641360284712887`*^9}, {
   3.8641361588251004`*^9, 3.8641361878597054`*^9}, {3.864149523908724*^9, 
   3.86414952549721*^9}, {3.8641504554392495`*^9, 3.8641504662587476`*^9}, {
   3.864150523008383*^9, 3.864150605221774*^9}, {3.8641506500782566`*^9, 
   3.864150690388214*^9}, {3.8641515284209967`*^9, 3.8641515289998107`*^9}, {
   3.8641516589627523`*^9, 3.86415165924166*^9}, {3.8641517275125647`*^9, 
   3.8641517616755095`*^9}, 3.8641517984915934`*^9, 3.864152052785297*^9, {
   3.8641521525610065`*^9, 3.864152184609634*^9}, {3.8641524131266785`*^9, 
   3.8641526257358713`*^9}, {3.86415267085427*^9, 3.864152694523608*^9}},
 CellLabel->
  "In[405]:=",ExpressionUUID->"c28652c3-ba56-4a0b-8e4f-0e46f1c2c441"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
BPIswbVCN16eHsXzxOq5QjQOqbHxPDFuqYA7sw1sPE9sbrX+/YOrxgnUw3FT
WlYu0TqM+zUjE9WPl9n/xB5lXXz77MixOuxRkvta903O0rBHKS7Peem7h449
SrtYzOQKVyb2KLV7brnz32Jhj3Lo1deqLjsW9ii24Ex4nhwTe5T02Nov5yLb
sUfxOFW+7Gp2C/YohQ+01LPM/3iUhPUfR8unCv/XHuXe9c4tDc7ZAHmUdbsW
/1jv3YD7N/miQVejVtHxvLKBkaGg9jYmnlfWEVV9N2AvCyCP4v92zs9f0kyA
5pXpdj+kiC7508fZptfVxqdVgfs44i9X2Ez0fsN9HKj9mP8Kbwr2KxejU4bf
7CPw/DHDPfJytQXVeN7YPeFnu00t+wnkV1jy6wodjo4QyK8EGLQY12eM43lj
FZYrrFNZbDxvLE/+cILpl3EC9XPgmNAFl6IR3Lv5evi0k498EfYnN+o1vjJ/
VmN/wk17+PGUIA37kyi/yQRxv3bsT4R7Dr1YIMzE/uRe9MCTLUdZ2J+4rGdd
sbjHwv5E7PVl7zY/JvYnM0mdXX5WdOxP5F+4Rl2j0bA/Kbun07mdVov9SYit
hV5a8P/en8jx7Tyybn457uWMsRbNPPJuxfPNHo04bGA3M/B8M8meI32hB1h4
vplr9jctmdo//ZwGdeOxS7O5uJ/TYSzjefxaJPYpYjYDBxzEhwjkUybL18yZ
e3CMQD7l/vRY9NcgNoF8Snlsm0HnczaePyakHfeNcn4M9256dv5q8ypuwJ6E
3zZwdnNbK/YkCXHCNU1jdOxJbsh9N5iqYWJPcrKQ50TWIxb2JDu0iZ4fG1jY
k5zkNT6dGssA1b5+PkIaorDJwlDWI7cN+5I0N6N+SbV/70tMjpgXRy96DZAv
UUvaullzdx3u59zzUI1+Qj4PkC/ZUNs/qf2OieeX1ebGy10xYwHkS+xbFa5u
JN+f0fyyBWF195Xs/vR1qnuMP0XxVuK+jmRR6gnxL8W4r6P37dDZqntp2KM8
S5P/zeDLwvPIrHV94w8EVeL5Y0K39AMb5fsI5FG8msN97IuHCeRRpP1vv+90
+DN/LP5V0vzRZjaePzZQZMK1lI9NoP6O4zd73ScbR3EvR3N27Nwlej72JAYn
d8kJO1dhT1Lu7Xe7SboFe5LLpfV6hHw79iTHMyMWS5czsCdRXWSbfwaysCeJ
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{508, 2742, 433, 434, 435, 436, 437, 883, 755, 647, 
            562, 507, 476, 908, 780, 672, 587, 532, 939, 811, 703, 618, 438, 
            884, 756, 648, 967, 839, 563, 947, 819, 989, 711, 977, 849, 
            998}}], 
           PolygonBox[CompressedData["
1:eJwV00VsFGEABeClxS24BC1SJAEuuGsCIVjRAxRoiye4ux+xenF3OFADEtxa
2mI9EIK76w3/5vD1f+/Nzk662Y2ImRE1PSwUChWhvT8ZpUOhdOLl0eGh0EMX
Z1KLl7ZNtgrs0wdx1bZY/ylvoANh7LTV45QcTYLXjdEfybOozSvbZltF9uuD
uWZbov+SN9KRcHbZ6pMujyXR66L1x/Js6nBcb8FF+bXrW+RKHNCHcN22VP8t
b6IT6XprbshF2S1HkCGPI8k9Y/Un8hzq8sYWb6vMQT2KG7Zl+h95M53J0NuQ
Ixdjj9yATHk85+Su3JWT3T9OfirPpR5vbQm2KhzSh5JjW67/lbfQheLstTUk
S44hxevG68/kedTnnS3RVpXD+jBybSv0f3I8XSlBqj3G/lyeTwTvbUm2ahzR
h3PTtlIPkaB3oyRp9ljbC3kBDfhgy2OVvQiJtu6UYqs9zvZSXkhDPtryWW0P
I8nWg9Jss0+wvZIX0YhPtgK2M9G117bFNOaz7RZr7OEk23pShh32SbY38hIi
+WJLtlXnqD6C27a1elFS9F5kym3JlcuyT25EtpzvHECsfN7ZjXvBb8P7TJbf
yku5IvemiXzC2TL43XEpeKZzcPB/8tV9Kc4aPOBY8Pk7+wefMyP1s85OwfeV
W3qhc1jwLO64f52zGPdJDb63zr7B8+UsZztuynedUZST9zsbc1oucA4kTr7g
7E5h8Pv03lPkd/IymnJSb8Vl+ZvrqXJNjuujgmfY1uvFSQu+285+9JGzne3J
k8tzQI7kjDwh+J26d6r+Xl5OM77b7rGHaa59sK2gOT9shfwHbz+k8Q==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{399, 2743, 2740, 513, 568, 653, 761, 889, 452, 590, 
            675, 783, 911, 483, 538, 623, 731, 859, 402, 512, 567, 652, 760, 
            888, 451, 482, 537, 622, 730, 858, 401, 511, 566, 651, 759, 887, 
            450, 481, 536, 621, 729, 857, 400, 449, 480, 535, 620, 728, 
            856}}], 
           PolygonBox[CompressedData["
1:eJwV0UlLlWEYBuCvWmi2cGiXtmiVZqW2U3Rh0KAEglFguWpRBuX0C0qtrP5B
TgvHnA0UHBKKdBFpSpipEBpBCGopDebK611cPPf9vN/HOec9J25VFJcfjKLo
AJ0Mx0XRCIMWA/TTRy89dLPCHllefMwO1Yei6KXdMv/JtHvENlXOuuzuypOc
0rs5KhfSwhH9OUuem9fz5NeUykMcl5vYdT6tn5NfkSFfNKepk39RKXd67rr5
ObBbM8/zljL9u1nEx/A5+oqZFn4DSfoP8yqfmNW/mjmMUaB/Mwt5T7O+ZMbx
jC8+e928xgJzzlfNXCa4qV8xPzAop5iN/PPelJ4lD3FWvmBOUSv/pELu8NyC
nC+/4Y48QWq4ZxLlGbLlUS7LTRyWn7Lo/Rv6AMl6A3/t3umZ4TtxRq5hi3K9
3flteZyT4X5JkC/RSKxeH+7acyV6P8f0F/yxO60/ZJP7dm128eG/o4EYuyfh
vux/k273gA3u2bfa7QMaKGCs
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1He8z2UYBuBj7723Y++dWSl7ZVMhdEi2ZJRkj3PMoozSpkHRVlQaZIbK
rqyQUUZRNFTX8/HHde77eQ8/3/f7vn6JSSM6D0+VkJAw34/I6n4ckxPlC3KE
LEkKw8z3ytxM41vzQ7ICc2lt7izTMIWN5lGyDI/rg2URvtfHyyrU1pvKK/I9
pjDAXIAD+j301LPylf40qalhPi5fZDht6GItLZv0BdShmfl3+T5T6U0aalr/
Ub4Ue6QtN5GWdKSnlj9zQi7nAdpRlwzU9ruTcgUjuYN6NLf+h1zLNPqQMZ7F
+in5Mg/Snvq0sH5VfsB0+pIpnsX6T/KVeId0oKu1dHypL6QBLc3X5IfMiPOh
l7Vs7NSXkTme23xavspoksx52KN3pJuens36EwzRi/KD3pBW+p9yXTy/XpqZ
+v2yIAf1R2RlkuLcZHamsss8RpZjDs+Yh8ni8RkcMT8qq6a6cQ+zxLuUZ+Qk
+Vq8f5nILMaY+8m8TGev+WFZkU56d5mBLbFXWZYn9aGyGIf1RrTW/5LrSWag
uRCH4vPjrug52K0/S9Y4M/NZuZKxcd+501pGtuqLuDnuo/lv+REp9CdbnJn1
c3JV/N+JO8td1jKxTV/MLXEfzf/Ij5nFfWSPs7D+s3w99hx3glvjblq/Lj9h
NgPIEfu0/ot8g3FxzjSO+2r9X7mBOXGO5Ixnt35ero7zjHfJbeSK5/K7C3IN
42Pf3E5u8pCXfOSnAAUpRGGKUJRiFKcEJUmkFKUpE3vxb1yUb8adiHdDE9pb
/09+ytw4K8rGXqxfkm8xgbtpSof4MuMzMY9BlIu9WPtVvs1EesTfsZaZ7foS
mtExvg/5XJ/PYPqYc/K1/hzlY//m3+Q7cVfjnM352Kf3jM+P+8wOfSnN6WRO
zRf6Y/FsemG+04fQV8/FN3HHZHme1+OLugTJHI39ympUiHckL8vJ8l05UpZi
NpPj/sj8zGB/3AVZiXn0Mj9FC4ZSkZZUojJVqEo1qlODmrSiFv8DFO6p+w==

           "]]}, Annotation[#, "Charting`Private`Tag$170919#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1GW4FGUYBuDlgLR0I60IiIqodKOAgoCUCkhJqaR0d3d3S3d3p0gpoNIp
bdAN3t/lj/t6n/eZnd1zZncmU73mlZpFi0QitaMikWHCl9EjkT/kJqTkvG47
w/nKsRO6pqTigm4H7fQP7YPIw0vdCKrrT9qbkZqLup201z+yDyYvEUbqa+hP
yc1JwyXdMF1CZtnLs0vXwf5YHkI+orEqbiQyyrGajp22tyAtl8PfrkvEj/YK
7NZ1tD+Rh5KfKKbpMrBSrsVor/vafkZuyWv8Gf43XWJm2yuyR9fJ/jRcQwoQ
nem6jKyK+v/6jvG6Wvaz8g+kY7H9bbbLVxwfKSdhjv1z9uo625/JwykY/lf7
B+yTYzBDzsRquQ5jnVPbfk5uRXqu6kbpkjLXXol9ui725/IICrHa/iE/ya8w
U87MGrkuW+Qi/CqPc34d+bzcmgxc043WJWOevTI/6braX4TvmcLEZJYuC2vl
eoz3urr2C3IbMnJdN0aXnPn2KuzXdbO/lEdRhFhM0NfTX5TbkokburG6FCyw
V+VnXXd7hNH2osRmov4b3SW5HZm5qTtAD300xuiKEYdJ+vq6y3J7snBLd5Ce
+ijG6ooTl8n6Bro/5Q68zl+6Q0yhoWNXdB15g791h+mlj844XQniMVXfSHdV
7kRW/tGN06Vkob0aR3S97TEYby/JGjkP++X4/Ci/zjr5oPkZ38hbzaIcDfeG
92ksX5M7h/tQ/og35SXmO+G+Y0f4TLNi+D/513njzVThWcCicP3NsuE684V9
o1kw/F45bD9mVgmfxS/O72O+Ep5LTAi/W7NM+Hx5rZmXn+VfzUq8Ks8232C9
fMgsT315m1mMY+H+9N7fytflLmRjqf1ddsq3HZ8gp2ax/cvwGbq+9phMDL9t
8xM+lteZ+TggJ2COnJUNcoNwnzr3O/sNuSvZuaM7yky+d+ymrhs5uKs7xmrP
tllmE8dv6bvzFvd0x+mnj8UkXSkShu9U31T3l9yDnNzXTdSlYYn9K37T9bfH
ZrK9NImYG75bNsoNw/X0umb2v+WevM0yey52yQ8cnySnZam9Or/rBtjjMMVe
hvVyfg7KiZknZ2OT3IjtcnGOh+vn/ObyP3IvdofrHH5r8nLzPXbLD71usvwa
y+wHzHLUkDeZhcIziiP242bV8J2H35PzBppxOcHU8GwxPw3PkPC92jeYBTjL
IftRs3K470hin29m5xSb7YfNCuGZQGP7DrMEF/gtXG+zGnN9dotwf+h6s0cu
FX578gozN3vkR+HZIKdjub0mm+XC4d6QTzg+SI7HNPunJGWBPQdb5G/Ddfa6
lvbbch9y8Vh3kvn84NgdXV/e44nuFAtYyCIWs4SlLGON3+VycwUrWRV+q7Ty
Xne9Rz9y81R3msH6+EzXlSUZC+1vsVX+LjybvK61/Z7cn71yad6XV4bJGfba
fzE/5wrPnDfVTM8Kx77mjG5IeB4ww16O5OGZoW+juy8P4AOe686yjvVsYCOb
2MwWttLWeQ+8fiAf8kJ3jqH6BMzUfUYKFtlzsk3+np1ySX4P94b5RXgWhOPO
/w9hh0xR
           "]]}, Annotation[#, "Charting`Private`Tag$170919#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4FGUYBuClG0FaSrqlJSSlwaBBOpWSRpBOBWnpVCkDA6U7le4G6e4O
Se/vx309z/vO7J7dmdmToUWnmh2jRCKRclEjkRvRIpFpMSKRdCSNGYmsjh6J
vNAHkcncyXxJb0dqcywZR46ROeR7ju/Wa5LSfMccVX5tnqs/kL1Ixhv2E2Va
++WyBMf10dzSu4Zz+MR8Qjblhb6Imz7ndHN61pg7U4I95lrc1eeRjhXmkpzQ
x9AgvL/Xz7B7m7XmLpQkPbcdu8Nd7nGfB8x0bgbWOacrpXibh47Nss/IenM3
SpOBlXalOKmPpSGPnD87XE82mLtThoyssivNv/o4GvHY+d/ZZWajuQdl2Wuu
zT19PplYbS7DKX18+C56NxLR2HxSNuOl/md4b71PuFc88Xe+l1nY5NhLOZgv
9MuyPbGJ676Nle/b75N1SGV33xxNDjdnkwvCtdG/DNfZnDx8DjlJ5pKZHV+j
lyW5+bQ5IoeFzyC/Nd/Ru4fn0ZxYJgh72cSxf2VzXukx7L/R/9KfyL7hM/HU
d/pBZmWzYz25oncIzy3lzPtlXR7oP5KFteH7cUafQFNOmVvwWl/Mf957Tviu
bDH3ojwHzPV4qP9EVtaFv8VZfSLNeOb1c+2y87f5SyqQjfV25TmnT6I5z50/
L/zO+Mfcm4pkD79Rx+bb52SruQ+VyBHuo2OveE3EvCBcf7bpfalMTjbYVeC8
PpkWRAnXxC432/V+VCEXG+0qckGfQsvwWw/f2S4PO/T+VCU3m+wqcVGfSqvw
vPCz3Tvs1AdQjYPm+jwKx8nDZnNlLunTaM1pc0siLDFH5xc9L7v0gVzVPw/P
LR+YD4X/KTwO5/IOW8xVuKxP567egzf51HxGtiIKMT1rI+VS+6eyH28Rw7xQ
5mO3/koOYZB+TXYkjdfGk/HkOPmhY4dlg/Aedk/Cd5AjwnMhF4b/F3pvMphT
yMRycrgnMq/jf+tVSWG+Eu6Z/Co883KG+V74DZPenEQmlBPkZ46dla2JSiz7
UXJZeLZlf1KH72v+VeZnjz6Y63on4vOR+YhsGH5v4Vzy8Y+5Glf1mbThXLie
RGO5ORa/6QXYqw/hY/KzNdwvrumzaEtsfrcryD59KNUpQBz+sC/Efn0YNShI
XOIRnwQkZJHzCnNA/4qaFOIN/rR/l4P619SiMNvCPeO6Ppt2JOIvuyIc0odT
m6PmRvwXviPvsj1cL27o39Ge8+FeEJ0V5sQs1otyWB/BDb0zCahjPiYb8yxc
D4qww/wxN/Xvua/3JCkdzBdkm/CcEtu9Hi1X2j+TA8holyY883JKSMeWyGIk
sztifq0PJXP4f2u+qXchrTlheB7keJlT1nX8uN6E5+HeUJSd5urc0n/gc5Kw
1K44R/WR1KMYSUlGclKQklS8RWqWec17HNNHUZ/i7LKrwW19Dh25aG4bnmlW
mZ/LgeHzk8RnnirzhOvg2P9vgSN/
           "]]}, Annotation[#, "Charting`Private`Tag$170919#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1WW4VGUYBdChuzslpbuUFOmUTkFAWgFRUJAQkDboBlFABaRLkQ6luxuk
pFsaXN+P9ex3v+fjztw75wyZ23Sr1zVKJBLJHTUSyR8zEjkRKxLpTDzW6YNo
xXP9W/JxTp9DAU7qHxGf9frXJI8difysV+aJ3poX5u/Iz3n9ZzI5t1SvR3QK
2p2SH5OADfpgUjj3i16Fp3obXpq/pwAX9LzOrDO35Bc9s77MXJ8YFNX/ku0p
5Ppp2YWEvOXaDrnRPof5D3NT3jEfkEPsU5p/NVeXVWVpuUc+c62QebO5tvxQ
VpJHZcPQXX9lHkU1vaAsKXfJOvIf1/PJ9XpN+YGsIA+H9x5e0/UscrnegLLm
fTImxcx/yw4Udu6M7EoiNuk5XV9tbsZQPZU+N7wPnutteW0eHf4mXNTnUoSz
ejcSs1kfRjuKUozilOAt3qYk55z9hCRs0YfTnlKct+tOUrbqI+hAaS7YfUoy
/tJH0pEylOUf+89Izt/6N3Qi4vcZE353LunzKMdFvQcp2KZ/S2pn54XPjxd6
Z6LYjdWLcFnPr28wt2K+nlVfET5HYoX7we6S7ElKtuu5nPnT3Dzc33oafb65
BmXMe+VL+8LmLea24XnRo+rjwn1JKfNueSU8U+aN5lqytawoj4TPXv7meja5
Mvx82UiWk/tlXRlbFpfb5HuyY3gG5THZSJb37y+bP6eqnkq+LXfKHa7lNq8x
v09588HwjNmnDa8d7k9ehftD32puF55VPZo+PtyPXNUL6pvMbVigZ9dXmRsT
h3ftrsgvSM1OfRRdqEBFrtr3Ig279NF0JbqfNSH8nvyrL6QS/+q9SctufQzd
iOH8RLsSXNMXUZlr+pekY48+lk+I6fyk8J3AdX0xVbiu9yE9e/VxdCeW85PD
35Eb+hKqckPvSwb26eNJ5+yC8NnyWv+U2HZTwncCN/WlVOOm3o+M7NcnkN7Z
hXptIuGZsItjNzXcQ9zSl1GdW3p/3uCAPpEexHV+ml1pbuvLqcFt/SsycVCf
RE/iOT893Mvc0VdQkzv6ADJzSJ9MBmcXhXuPKOE+s4tvN8Nclrv6SmpxVx9I
Fg7rU8jo7GK9DlHD/WGXwO6HcJ9zT19Fbe7pg8jKEX0qvUjo/MzwrHJf/533
uK9/TTaO6tPoTSLnfwz3Ow/0P6jDA30w2TmmT+dLEjv/U7iHeaivpi4P9SG8
yXF9Bn2oxyO7oeTghP4DfanPf3bDyMlJfSb9aMBju+Hk4pT+I/1J4j3MsqvA
I/1PGvJEH0FuTut5nFtrbhHer/mQrBfev2tvyCXhe4No4bO3S2o321yR//Q1
NOKpPpI8nNFnMYDGNKEpzWjO+7SgJc+c/4a8nNVnM5BkXmeOXSUe62t50+53
vQlxw/Oqb5edqGI+Hr4/wv+Pzv4PzdMahA==
           "]]}, Annotation[#, "Charting`Private`Tag$170919#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8T2UYh/EvIkSJJHtFoTRItjKiQmWrn5E9skVmyG4YUdklq4ystl1G
VvaoUEJGVnYZve8/rtfn/lzPc/g65zlH3madanVMlkgkkpInEg1SJxJZ0yYS
E9MkEsXwpz4XI1Ga/56rg9uwmWuIbPwkvTiO6PPwErdDb4/seJsrwy0z10VK
bOEac4fMb+BBvMxl5yabn8BRfT5qcTv115AD73BlueXmekiFTvo5OQJbrTfR
fzf3QiG8wuXgpphL4JjeVj9pfgsL9Nr6LnMHDDXfjpzmHvKKHI137SunrzDX
j2vNt8Vec2d5Xk6XI+UYmRE/u6ap/IObInvLkfIOzENhvY+8LmfK8XKczIxF
SHJ9TjmV/0g+KQfIZJiNv6y3k6f4aXJw/E55J76wVkfu5jpimDk1cpl7yqvx
O/GefeX1leYGSI0u+j/x/LDN+qv64fitKIJGXC5umrkkjusLMSqeLXJb+5gv
hRP6IoyOZxP3I/48NEMe+z6xpzRO6osxBs2R19p0vgxO6UswFhX4VVxDpMF2
rgXy8Z/qZfG3vhTv4yl+dZwxpMUOriXy8zP0cjitf4lxaIX7rc3ky+OM/hXG
ozXaoID1WdYq4Kz+NT7A0/yaOHO4AzvjrKFgPC/9KZzTv0Fdbk+cX+TGh1xF
7gdzEtJhV9wn7k9zXzyEdtwD3Bzz0zivf4t63N44i8gT54WrxP0Yzwvp0VW/
EO8Rdsd91o+Y+8WzNqfDw/F3yRvyA4w334v29j8oP+MmyIpyoEwevyXOi/X2
8m/+Yzkkzpa8CwvwnfX6ch8/WXaRw2UazEXe+B7Ia3KGHCvfl/dgISa4vrJc
y0+SjeVgmRKfx5nXu8mL8Q5gT5wL/ai5P4rGv1O/Gfc6vinWC8W15kq4oH+P
Btz+uFfIh4lcFW6duQnuwl6uAwrHb9cr46K+DJPQEZ3QGV3QFd1QJN57e6vg
kr4ck9EdD1mbzz+Dy/oKTMEz/HquKTJgH/c6Ho77qlfFFX0lpqIqv4F7FXdj
P9cDReOboFfDVX0VpqEa/xPXDBnxC9cTj8R915/FNX11fPe5X+I+I388Z+5Z
bqO5OTLh13i/uGPmN/FIPFfu0fimmZ/Dv/pr+mnzUKzRX9Z/NXfH/eil/xtn
AJ9Yf07fZG6BIeZUcTZiv7wkP5XvybEyE36Ldzm+kdxUOSDOvUwf9xmPxrmQ
t+Qs+VGcd5kFi9HL9Y/FHGdAPi8HyRTxDuC/OAPyTPw+OUyOkhniHbb2SvwG
7nWMMKdFAXPvuFaOw3T7ntc3m1sic+zXL8efhQPxzdGPx7uGx+J67nFuibk6
rus/Iok7oPdAwbgfXHVui7kV7sVBrg+K8Uv1Grihr8UM1OC3cq2RBYe4vijO
f6nXxE19HWaiH56w9hX/Am7p6zEL/VHC2tf8i0hgAzcbNfmf9Ta4D79zb+JJ
/hv9JSRDR/1sfCcw2nx3nOE4r/Y2kgf5nngAc7gXuG3mtsiKP7gBKMl/q9dC
cmzkPsNADMJbGIwhGIphGI5S8d2yvzZSYBP3OV7kt+vtkA2H4/8F7kScETwe
Z19PxHcrvjfyvnhmGGHv/8i1RmM=
           "]]}, Annotation[#, "Charting`Private`Tag$170919#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}},
 CellLabel->
  "Out[410]=",ExpressionUUID->"e1aaa5e7-6b60-49ee-ab00-a82b32bb4218"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
FATm/uTW1xKHKyzie599CgE+RW9MZDLE4f6Lcdc1FvzAt8sVIZe3ScAntfrN
sk1XCeQpabUmsSvWvMd9r1z/m7Kb+E8D1OuquVoQrddGA3ts/dtzBmfBNsvS
4hDy+u+/p2/8fm4OpCsNbnv0lwY65+V5wcI8OCaQ6LusnYr9ojLnypGpc8PE
vMfM6YvfueCli0HearPk+b61H/6q4IYvwOzzqVejxPDgmfJnv3jglPjJB6cO
jhItN36sEvEUhvFXD9k6SScSyD+6P8szp8pGEIUxptlXBMSg5hUDEFUfAKSL
L3tOhIpB87I1tzJ6QoCxh9foRmFxeMnK7C+wDQWp1Ni/Z4PF4dLGpbVu3k8B
6o9pKdFcNC8HgKSN0t96qTMgZ0cri0+cDuaGdRfdp1ng4nyEhRr5PDrtui7s
+PQ/4LYgdivzAQ17xsKcwvReA3L/QxP39TLghqaFr1TDLo0SRXOS/7oMyP3f
AbrWUsAo8eHOgXCtE7yQw0RsxZ2qEQL5R5GBVGF7sY9E/vHMaxdMxGDH+Z0a
kzlBYJNRM+fF32IwlWvleZ2qUFD/j1/57DFxuF3Er6v/fjBAXtKnfZfWiYpo
3EOrZqnWuj6EQORBu5BhzCxIaCkH9zXoYKn4Wd6XvDngLuzCzcVOBxvPXhF5
944LKnYLCayqGyHGj5oFH0jkhhpxm8d2BZPr2Q/FxosJPLDh0ruANutRAnnJ
uf57sWZZkYREX+Bq8Qdi8PWXYv/h6yEg5ZTF6fcc4nBds3dAZlQoQL21xjI2
NdpmX/Det+xubuwMaCxcck7mpoNfXM+3rvrCAjaDR25bk3+fS8XzHTlK3NAk
aB31rQl5/nANMLJQ5oHU/VV3s0LJ9V22jb8hVRjOmLM5fCuLJlQc5j/4F4tB
4VbeCp20UKDVPhxWv1scFvAOAmJtCEC9tlK1toyUKWfgcmBr9IaNLDC6/5Qj
i1wPE85d/Xt0mBvmslur7SL3S3Kx+t010WJwmBb1Xl0nFIyHfbj9da04NPC6
cUNOmFz/f1/5t0phFnAWbSt2laeDDb8Gfw7ozIGFY+2GdFk6+Tx9X7XPgRvu
Tfy2w+k2eb3uf4q3seeBH2bz63l8Rolr/SEFn+qEoWO2hObF8Chiy6Z0291U
MXgm/eRYHbk/QB6z1PKYWbfhJ9yLa7zKPRUQoAi8RB5sCro/C2Lme4/4qNFB
UYCA7oM35P5jjBIo9myUsDIoE237JwYTC9gka7JCwbYw7WNHg1ig97qsaTu5
X9qWsn/qlSQPvHuzMOYk+X3bwOJ3Dc8XgwlxzZ+YYaEA9eYsYi48KFhmC9qa
uggXbhbwKTh9M4K8XnciVF4/a+OGNUO7Oh+SzzvZreYpvW/F4NkQWHxAIBRE
PqJsmZASh4IKO0Y+g1AQbBncpy4xB855O0s5K9JBHLM97pw5N1Rr6DRfSa6P
49+sj0ed4oF7bdR1Rv1GCc2C4q0mHWKwsi1Yi2gIBahnF/7av8VJ5hhImtKc
YSudBYdFX57pJt+PnGjEEFceNzwTvuu7/4tRYtF+NNqWRxyOzPve6X8YCi7c
okkW/maB6RNFH9eT1yt0W8NHaR0eWDK6uH5v0CixsX2o4cYv8v5tOlpt/j0U
rMp54t9zmAWsIhbvR5Pvt21djr7wHDfM0njNLUPeH9vevXulPkp+P2dzwKna
UOw/dzqe614fGve/fp6pk/PXND6wBS4xpmfE4HG/hdu7iFAwbM139tpdFlg4
wxVUT+73ZI0+lGcJ8sCboWfop8jz4rPIL1WhrFngtfb9uk3k61/Q9XNMrueG
TP6AZ63k/0/jNJaxahGD0ys7xJXryP3tf/29mntC/T9eGwDrghXL12XNgvot
X8R/kucj8rtVsOELN1yuIR+4RJ43kta65XmXicHkUrH9Ll9DQb639UtOPRaQ
X+ehTyNfr+iHyGotJjf8kXUtyIB8v5n0Dd7ag2JQO+ibtgH5eaBe34p9v+R/
U7YAJQHudKPVLBA+b2rZS/586FLVjyt93LCYGZC0QN4f6dd1jQ/2iMFdf5v9
Zsn7e1bt9FBH8ywIbvbKribf/zZ3KDpSxA09Pq/83Ebud1NCrEedasn1zNVO
d6I0FJiOZ93KP8MC2/3UiW3k7x/3s3SdXMYDLwe/qsgjf3/OSbE0pXExaGY2
0bxYGYp96faikI4x3XjcB2SLtcrivRXxDfnSCx4cW6cuN+H5FN4fj2vsPdWH
51MUZNPzZ6epeD6FyvBN4eh0Ku4D5kWryt4724f7gN+hJO8H8y7cB1Q0u8fP
vNSE+4CGtlJd3ed+4T7g0JSFjvp0Du4Durfpx9at/IR9adKpw7vmbcqwLz0W
xHFxx4sm7EtDEsL+Oi70Yl+6UmUivP7dEPalF4/Wj0v2MbAvPbQ9aPfv+zPY
l3LaEe6n7OexLzVUtrfr+LGEfem1YCf9T1xsEPnSOB9LcQH6Au4DKvT1RPsk
zeE+YJi8EW/9lxncB2y87XT6mNgU7gPaK33x+mkxgfuAGx6mw80HmLgPqOvx
YKkylYH7gM1hv1RcnzJwH5CghjXAXAbuAwYXt2/+Is7EfUAj1faxCE8m7gMG
7g9yq2xn4j4g7yPrT8TKCdwHTNz8z+/8BBP3AW+0PhNU8WcC5EsHHh2y0/nN
AMiX/jTqErcrGwfIl27W2FDyYddfgHzpO6Hd4eGVowD50nXbtO5MyQwD5EuD
eSIn/e6MAORLpUtPnS8N+AOQL3W5fKHyZv849qWm9+8U7yHfD/Klh63U4jNP
TGJfanpxKnxu4zT2pRLNwLtbehb7UnU+nQf+NnPYlwY3fvw5kTIPkC/NIY5I
uJxdAsiXHv75k80ltwzPt+i+w8k3VtGF51uEJ9KevRalEqgP6HW244GTLI1A
fUBr81tfL+T14z5gQ3cbMd7Wg/t9/lZPq3omOrAnje38d68h4n+e9K1oqZfl
tT/Yj850PFw8JjaH/aiejOuKd1cWAer1XV0K9SmXZ4Oo10fv5XB/obMEUK+v
eSI/ee7EPPamDtfnXlkosnCvz4DHfXeI0TTu9X2ed/MvXDuJe308Q8UD378x
ca/v9MuNe3yGGbjXV/8ha/mnEAZA3nTuBuPF8TcMgLyphI74IwaVAZAvrdVu
HehKY4Kl0VdnB0XI++/SBvncWSZIMa56djyYAtXan5i4rZgAf/vvLpYIC8K9
oSuPbS9nAoenr38svhCEL36P9RptZwLkU/35zto4mTFwL1C5YmftmOsIQP6U
VtT7xnD9MEC9wPo8NcOtC6MAedHv897BF5cv4nkfvucKr8T0fcXzPnbVbH6X
MdaG531sqe7mszXtJ1Av8KbRCnHZNTQC9QJTPE8+z9tPxb1AzuxTcg8+9uKe
n8Qu9lyHz63Yhx6nHyyULerHPjTsQJVGHmsEe1C5Q5W+R+tnsQdt/+Et7ey9
AFC/74bbipaLfGwQ9fu6bHocFL8uAdTv28o89stHYQH70X2BJU1edBbu900Y
c0rbzE3jfp+nRsrZ+ZeTuN+Xuzb93yL5vEB+tMCMoWoiwsT9vgKhxqnCSAZA
fvRx8bPq2SAGQH70vF6E1olqBkBetM52t+Ly10xgHbue/c6wAFSjjl2pHSGf
X9lZjQfcKHCf94rI7VwTwCytYEmMSYGHl4TslXqZQH+05mzQDUG4unKZmdR5
8n74z5t+s7657ekrBu4HfsyvHZBdMwqQJ1U5e3645N4QQP3AmMQnbbM7RrH/
VNt+c9se8wU8/8RQmD+iKbkOzz/Zr+y8roizl0A9wdIjDxML31EJ1BOU+/G2
jzFLJVBPUM5iNumfeD+Ben2qPPYp4OA/gHp9PW1ZZeqbl8Au+9AKTUkO+Opu
pSenHBs8Erh5+8g6Ttjy52Gw/ZtF7D35/53x2mY/i/t9N+9tDhNPnML9vqEv
G/85f53A/b7339tUor2YAHnPkoitSurlDIC8583G8tRVzxgAec+558xjf+MY
YIfU2uNH7ATg/dU+LR9KmaB6hfS34C0U2B2kpLWefQJk0foPnP5MgccPqUjq
Lv3/erVv4dpWQfhqtdnY40QmeL7p3HrHTEFYYTxs+nclE/cDTxT4yySVDgPU
D9TT5HXZUTsMkN9M8isH99IXAfKbqeV5lpduJOD5LY/iXxVnf2/B81vUR796
/unsI1A/sKnouYwdhUagfuAVY6kmpbtU3A9McXlQp8fRh/t+URxhJSWyLdhr
HripuOdfRx/2mhw8j75Glw1jn+l0d4cLz8ZZ7DPNtmqZWc7OA9Tzc2OO5a6f
WgKo5yf6pl7JaGQJoJ5fqvrXsFsPF7Dn7KytyFA2nMM9v8qp9rzMEzO457dC
6vKb3Y2TuOensemAjKrGBO75lT6Ljnq1kYl7fn+iRv7ejWUA5Dm3TBcoCz1n
AOQ5l5evrmD8YADkNwWNeCPmHjNBYMDHj3UVAvCesMNaVSoTrHVU9SiyocAb
ytanl1ZNgMdiVndBLwV+/ZUZxRom9wNvRpLbbAXhyJrKY/nXyc/7P/8pUrv8
s3sWA/cED5Txrj9zfRQg37nu++4St5ohgHqC1Qnvsva3j2CP6ZJNT/nNsYDn
2bzecJx7RL0az7MZsbKXqdvVQ6C+IPWu56nD56gE6gs+VG6bXkV+/qgvCM59
cQl07CdQv2+iU0z7U/ocQP2+mU3q9ubNiyB+dnfdCxY7jLcLvfdSgQ1u8N0y
m8DBCe2bi3ybxhaxv2zhjqi3K5nFPb/mVSrce+emcM9PUqKLVjA6gXt+Trud
5F9GMAHyl91/dazrWhgA+cuUc6dT1QMZAPnLk9nZr6OiGGDG6eMpm/3k+qjn
wBOQT35/Wa3PChQpsPn11AhtgQm0wk+NNEdR4NnLyUn2HBMg37PPM0JREPof
c/gpkccE8513rmfGCMJbtoNNG+WYuCdYFpHDvU6GvN7/9QSdNrvan7g9DJCn
lDZmiNAsF8G9qYNLO8R+AoYHjHo83kGYd7U7LTvVAJR11V3l8vsJ1Bs8c6b+
7TsFGoF6g14bmPbTHFQC9f4ylj12/jG/ALwlI7pO57JD91hd4ooUG+y4vO2W
CsEBe071BER5LmFvaT1q835rHxMgbzkoYHDn+CIDIG+55m6nnudr8vn0n7dc
QVfbLfKSASR6TmgIL6fA1b27R1OYTKDCsUeryocCDQR+pViT9+/ag2u8/7AL
wpCYod30RibuB25K8ZGQ/D0E5oWXru0PqwZ2urzK37J7CZF3NoYmx5oB3cPv
mXsdlWj19arllu8GacdambGtVAL1/8IeL0+X91kCv5vpP6q0OWBNRZrbQXE2
iDxlkx07zT+PAZCnfPZv6Z0CuX9HnvLXtkO6Kp/J57HwmTG7fRT4zSxxo9vy
CbBD80p0XyEF7m5xBDQWE5h+jrljpC8IvxZJfn8ezsR+skX6LbsI1xJAfvLA
uZqpDYXheF5R2Ta/HRJvm/G8otbUyZsrIvoI1Ac8+UR6kn85jUB9QNbe188d
w6m4DxggT93RoNmH+31dZ6t3U081Yy9JuSlq6OvYh71kIpwv0to8jH0kx/OB
TIWWGewj19RlBDt8ngeo18ctqeg107kEUK+vQ/S5/BE28lz2X69v6IgxW37W
AvaUrP4jHiW35nCv71VvDd3Rdwb3+vbET81fmZrEvT6ns3LrVPZP4F7fylCZ
E2E6TNzrm+Q7rTSZwADIUxpC920S5HqIPOXsJ0HWMoIBkJ+cNtx/44QvE8R5
n7s2nysA6998qBLsIfcvP2kVS5YUqJ+ZT/cm77dow8TChhYK3H6bb63lX3J/
4sYyXTpD7le3y7NJeZPP1//8peyC12mvEgbuBWodWS/i9X4UIF+p9yNnJnp6
CKBeIFUlgK0scQR7SO982YfHWucB8pAN7fVSDl6VeH5T7slJbY34bgL1A8vp
woYKelQC9QODEn8FmEvQCNQPjN4l/iY3tJ9Afb5M5cfvV12cA6jPNzDeyDEc
vQi6Cl//Lh1ihyNfNy+dIZ+XoosZLY+ZHPBJ7bH8SJEl7B93XQ17kTQ5i3t9
nHV3rFcqTONen3CUia79yknc6zuwXo3en8wEyD9G/3Gss+1lAOQfPQfy7QrJ
/STyjz5Rjkrm5H6zSZxq6bRFAGose7+9NIsJXCe0Z+qlKbC/8W6s4z8mcJkU
0hMNp8BheepKIfL71ZSm+U1TWhDWvlNYblbEBF8yH0u3RQjCKmbDfI8qE/cC
w8pPpLEZjADUCzQc79bZcmwYIM8oKVf75J3GIki/GprWurwEbDiSm6Yz2U7s
oTtoNbfUg7aHj4Hw434C9QSds7gvR6ylEagnmOwTuidvHZVAPb/9Bw88syIW
QEbvRO/zBHbowV4Z8UGEDZbTsiy4UzigZuwru3tvl7B3HA3l+lE9yQTIO8rL
XQni4SLf73/ekY9l7+VCnr+Qd6Rzc3L3kuczgy+XNI/NCcBL3dPG5uT9aX96
/j73bQpMIbTu/iHv352ezoTPHAWKnOQTzmhn4j7gzmq1rIaEIbAx0ECJ6l8F
9t1o4Hpl3UvMxzL5lOubQK330gHVXCrR8+qHytnoLrAmOV7+0DCVQH2/abeM
7kNWS4DrvV7p0gYOqNY6lWMgzQaRZwwM6k6TKWIA5Bn/2P2pcSafl8gzBnat
0BlPYoA9fAUnPHdSoJnPRZ9Rcv27+UR5es1XCoS+8Y8y55nAmTqZ36MnCJ9N
iLfv+MjEfrFEYSKwunMRCE/75/m01YFH3nMPuVb3ExvNbnxOKGkFRvyltoKS
NGKNa9TgxGN2eC/v3XAWJxv82Jq9uuIJB5yoNXrk0rAEkF90gRWeLh8YAPlF
vts+JafJ9ZwqeHX9g8sUWJOa8XcneX5x6eeFiUMUSA1euqdHZ+I+YC1vZIJN
3BCozqK8+t3QCIToTKaSD5UYLzjcvTKxE/i0fyKekM9n1P/7YSdPNK9YAtc0
RqpsuDigr90y5Rtr2SDyjF8OOYURtQyAPGOS8SueCfJ5ZsF2WyluIwV+sX73
TJFtAkyCyLDweAos9j/88sayCcDPfd7APKcdqO61pW8h78+Dx/TbVSvY4cTv
hOxaWTaI/GJmpoIV7QUDfG7fJOn3jwcqSO3RDCTX49E4v57nj8nzAO/FPU/J
86Hqq9++nrXNgFu98WQWjUrUX9W5kRXRDab0ZMtESsn9uKH3hjcHyfcj+kI1
PnoJRAoEFr4x4IB2eTsqBQXZIPKMTx2zT6wjP38VqSXf40YUaHNAe+Lrigkw
35RxPKaMAu9vqskun2Ziz3jSfKHs0JYlgDxj68gATYD2mECe8ceuoO2nljfj
eWYyP6Pl5W/3Eag3eEyl/K3VIpVAvUHZBy57K2OpuDdY+N2tutSgD/cA3bym
D5RPN2G/SL+tu6JqSx/2iz4FPu5waAh7RS5mdsrKlBnsFcNub5xUeDoPUP9v
ri5a70DdEkD9v8C8VAGl5WwQ9f+cspwyfKsXsG/cWNP/+H3IHO7/KTDPcHG/
ncH9P62ZVUYVy6dw/y96OvU59cgE7v9dN6LImEAm7v/drw+xNklmAOQbnY+8
eJ5LXn/kG7eIDF55k88AyDPavHjY/u8uE2zxKOwQ/CIAfcXOr5/sZALviSI3
2VMUeNfLpHo9+TzR6K/vifhNgTu+1Qo4MMjz+9m7cYKWgrChIq848T4TIA85
plXsRPvFwP1B/22mf3mzRgHyjvoB8Y6G3MMA9QdjirZCudAR7BMLniy0yBTP
A+QT2U9MFubLVuD5bs1/99w7qNtNoB6h0UUJzkplKoF6hE4CidJJq2kE6hF+
kvidAOP6CdT7Y55o6q7WmwOo9wdXd7dHPl4ELMV9TT297NDoWbR5Ifl95NWd
Kpsb4oAHO9m4zNYvYY840Toh587Lwv0/k5LVtzO2T+P+n+uFnpBFkUnc/5uY
Pf4DkusZ8oixmsYx/TRyP/mfR9w63tIRF8wAyCNW7jLzrHrLACWOvqeZqgLw
QOCF081fmEDbxT6xU4ICr7/6fl1qjjyvyY/TNr8k98e649GV5Hp4/qB51z9x
Qdg/kbChvoQJnkUJuoyGCcL3Vk+Xv9dk4v7gvwBJneunRwDqD6qlfRbR3jkM
kC88RWttYlu9CCrUdbjiPYuBsf1DceDaTmxzSBfZE1YPpjaz3ny+0k+gPmHz
3F/7TfI0AvUJc4J3CU5tpRKoD/hs8N6vjHcLoGb/u/64D+zwsZ+zpRb5fChc
O3PwVgwHrFxoU5ZOXML+MPbM7T6TRSZA/nDvJwu7CH4mQP7wnGjcFG8E+Xz8
zx+GbUm41E9ev99JZWG2TAGY7Fa06c0YE/g9bt2o7E6B7uslXq0mn9/lYi+7
jaYpUCCCI/5mFxP3BhU17Fr3vxwC+4zHvL6wVYGWZuujezf3EuMqO8ZDgptA
SWR/rUUylbggTz/JZdsF3nMtKnUzqATqBXJOv+NUMlgCipxDZRLyHDByi+il
I+TzFvvCGzKfX5L7Q+QL5fVlqz6T30fkC01CBL0Hyf3rqsejXP7aFLgFhocJ
kuvhq5wV73Zlkvsd3SuRy8jr8c9TujNBRxBG7fh40PkTE3tCn9kgvw1li2DV
rdqIsfA68MRgf8HkfB+R1v26y9SvFUywGCyKKI3Y0WQ0zHufHRYf55r6tLQE
wsVmeXbc54Bral7MJXcvAeQJv2r/u+0YzQDIEwaaGNKTnzMABzCu/WhHgQs9
R64pkddz4c4W6+s0CrRfJjsWO8jEvcG18dE3B/KGQNGOUx4gtBE4PdbapOBK
Ja4dcOFNd+wEvZUpf/l5aATqCZrqyu3z+LsInoW+rLmzjANe9LcY1SD3o8gX
7m+d25jzmwGQLxTsyJ15SP49cp4JbekbKLDk1ptPvEtMIOx0e8/XGPJ5teft
j5vsEyA4xPc6x612sLtmsW0beb69kMno2FfEDhuXhn2ryP0K8oRzTpcW171i
gBvH5TrmmTxQ3Y5X35D8b56mC49SHlLgTucruUvkeii3WtpuMLAZ7DKTCp5p
pxJm/yw/Wp/tBlzTrTHhtVRCm8vxh8IeduiVqB5TE7IEvrrpFmVADiglsmfA
lNz/IV/ooR86J0V+/uMvN+mcNiB/f5zJO1lyPVzNGfzvRzEFHmVfGLKeZWJf
CBWZM59ll0AWs1M7nrsVnNy/VCpIXr8rkR/Hdrmxw18MpdnRoSWwdvqZx8sI
HrgtVq/5Mblf2B22am3vWQrk/jbzq5R8ft+yyLRdMd4B1EIzG91FaESx1Vh9
CoMd8l/gl4slrzfyhklWKx3HyP3PsdKtodMR5PPecNJWn3MCvI4trzm50AZ8
d79UdCKvZ7inQc+NdHa4It3obxZ5XkbesNS833QkjAEMNda0j3hR4Oc39jvT
yNdfpZCo+k2wGZwRfqe85SeV+KMbXELX4IA970ovMiTZIPKFMpe+egHy+twJ
fBrlCinQ+JfI92zy9eN+mfiycbYBniE+Zwdp8rzLP01vC2aH6rKZFTu52CBl
dbkTQfDAjBC+u/Lk+aKEGuJle4UCj7iNfN5D3q+ol2hjd+jFYOgQcNyimn56
qBMs+h2wvbdEJcx/gV8HBTngc5cxHjt5Noj8Ye7A1c9u5PV8fBesTp1uB966
o2Vv5GiE+lh4q1A9O4xKYTZ7yLHBqtsJ268+o0BTPUKZi7xftgk//SBEaQHn
ee5xZv2hEr6J1G8+R8n9gEb2dh8+Nmg+S7wUu8MD05el39xDvt8LETW1B45S
YGXuffb95M8jr9jfsi+/x3AJIK9Yd9JUO2HmFoG8ohabofa/nCY8T1I76dep
ukt9BOov9n7VXSycoxKov5ike+JpWRIV9xf5FVunVE37cB+xdaHIZbykCfvE
FYq75IUk+7BPPHw+f+Fm8RD2iH6eLvnjr2ewR7Sf7g2rvjUPUA/RzDRTPr5i
CaAe4hOLHx5XV7JB1EPscUvtONa2gP1ib+1wJeX9HO4hGvRs/Dr4aQb3EOGl
4J2r+KdwD/FhUXTI0RMTuId4ZSHmzLe9TNxDfHQjwzsghQGQX2y+65AWQl5v
5BfXKqx475jHAMgrJjzIcjhMnu/npv4GSqcKwN1yf1R7O5iA/7FmmZoZBX6a
dMmdIj+f6VT6uE89BcbO+EteYpLra+PeeilzQZgh1WQx9oAJkHfsstaoDSL3
88gzfvy4Y7yhcBQgzyi3XviBrMgwQD1Gm7xNqsf9R7A/ZHm6vPb7Og+QP+Q6
tPGsilM5nq/pp7CC4cDRTaA+o8fRLvWqNVQC9Rkn3lHE1sjQCNRnFL98Xqj7
cz+B+ofdL21jJFTmAOof6sqKWG/1XAQrmiVPjnWywxSm0+IRcj/kZy76PZ3G
AfuPazF8NZawN3T7l1l/UYKFe4jlWTBJZs807iEuymRJtK2exD1EHbU15Xdy
mQB5wy2qfVmbBsn17z9v6NervH0deb5F3tB/qmGUj9wP7Xxl2pWxXgC+GqvS
tEpngreb7i7vF6PA+iei/I4sJpDNObNjbygF8tIzcuTJ5+kGcac/PaKC8PT4
urd+pUxwR7wxbOqVILTw+Jt7cwsT9xgpjn0rNe1HAOoxxp7ZsZbQHAbID9bR
qgu0KIug6dmTzECdYkBZfM5ppNFOaGxseuDuUQ8CRoc0lM/3E6jXuG7R/vEO
8vmAeo378rd20vWoBOolPlhPXxvzfAF0zFy7kBnJDh1KLsWeFGCDurvF92pF
cUBr24UqrfQl7Avrm1OSFMn9APKFIorjP90EmQD5wpSgMTYquR9CvnAHczHr
MrkfCleePXz1jwBUeCxknT3KBGLyBve0r1NgmAWRq0o+DwP74/9qTlJgvhz9
fH03E/cXOacSFDgDhsDRZKD6Jv8XuFEn9WiDdC8xPHr6XLlrE+B1fyT6iTxP
Kdm6O3fpd4G2pYFfN6eoBOonDg4qdxXrLQHNrG+G62Q44CGjN1u3rGGDyA9S
ci/MnillAOQHnzze+K2N/D4iP3jL7KHQcDwDXDbgvPB0GwX6TMmaRJLrudKR
6xOHv1CgITUr+T25Hyo6qDH2fLsgHOfcfsM7nom94Gup/iXTgkXAvnOSX+F2
HTgpUDn4fKyPcFVUmVK2bwUaScEWdUI04oD/2suS3uzwfJqikvfcEhDdKsHJ
9OKAToEKqkG0JYC84Iy2/0e3GAZAXpB/k7b3aXL/EdyYr/jlIgWeW7ZnToS8
nsWGBi4W/RSYXfBUpmGIifuLEuzpwUklQyB//vbwtWuNQLOzKbb+EpXYFrBM
we9wJxDYfFI7go9GoL7i9rCU/rv9i+CtvuPRRwvscMMG/UvO5PqM/OAs73Ry
YRO5XvznB/O1fLNayL/nvm7RlhwlCpyO/CB/m7w+HziGX5Z9pMAU0xNLTPL6
mbaIBrRYtAOVwCwfL3L9drUrPX3sGzv0F6H/i1/NBpEXFGQ1/6wm9z8tfGEF
2X94YFCgtk/SS/J+cmzoLPClQKm3+2y0yPVcqhO0yFxtBgZPTrXVNFEJCTj2
dSvsBg9ETshoNFKJGfs+yqAeO7yqLKMm/GQJ/FwnuPf7TvL+tr7t0irKBpEf
7KxOGpImP3+TE/oh5/UpUDPy1kAFeZ5JCGc72lBEgRFf3K+sI7/fyA9GjWrf
6BdeAje3XzniNdICAsVUNimtohF3jno4H7rCDpeJ0UK5qEvA9/NKy2NhPJBN
U37UmFy/a9Xdb4yfpsAz+hZ9Mf//72Pv9D3bazuA0bjGjVtiNKKO/4dJ3hg7
XDUucu0peb2RJ5RYbrnLlNxP9JyOHlz+lgLbeoFHCrkfsRixoG/sagO0i84U
SfJ6flKXPXc/hR1+tNm8S1uMDSJPuAp+4EgMJ6/nz6fq/+5QIGvN1wd15Ouz
06rfTjCaALjHfGRQSCXmx+z0JzZywC/tvsLryc8D+cGsMMdMU/L6dBvH/HPf
RYHJA0WSpuTrOwjSwhuprSBXPy6rXopGCBVW2g08Y4cjYc89lpPrq2vT7iO3
8nhg5cMG1QJyP2d6m73huhMFFiQXD+3+//v1v35kMbvIipjIIbDJI79Mq6IT
nHNQOvWKnUbYeokePsnHAeeKoTiL3A8hX3ivv6MmjbyeRiW1mr7N7YAKTKRv
k+e/ne9cLNZUs0PTd9F308jvu5WQZMDdAHL/6DR5+TC5Xmo0pgkbjDeDhSts
fw8PU4mg07nguREHNPvzy8uEfP4ZH/jDpnSTBy6CkiBN8v2WWg6oHDamwHVe
1Q+WkT+PPCKHLGNIDCyBgxtYMqWBPLDJUZ+g//9+2sp0jYAFBaa+Duk6QV7f
wg2XEh4Ed4BJnfBWEfL6jLo6n/hNY4dKqrfjpMjPt+uap3DzO/L8uuP+BIv8
+2cnHFokPSjwhIab+kry+ogdFzbgXccB6Xf9t5rJsMEWqwKlwqM8cGnMufEp
+Xp/wleWece2AvcDPnpK4jTiWlz37dBLFMinbl66mfz5e32Fxi7LOWCTHFWh
i1w/7/xWv6mryQPd9tZd3kF+X2uNJ85sCmsHY8Ih9LK1NOIkh7SV9k92ePbX
lktt5OvdAdNb3vlToFJtSlrZ/+8naQcb97nwwO5r7yplyNdPZw+vqjtHgdbP
5D7QyPeblSB+/MMUO3RN0ZKOJ99f0zntrz7S7SB0t8NgGHl/5oalPey4S+6n
PT++f/z/+3F5Ti8fax44khetqE7+PrpfkZOqQhvwH+uuaiH3C9uM16mcvEqB
Swef7AP/fz1QH3Prk3ObngwBIymHQ7tEyf1AhJliIbn/TXh9o2YB8kC53Urx
uuT9Uaabwtkm2gGWF63Z+GoNjVirW3JqRRM7zLJsrttI3k8X4oM2rrzLA5WK
bTlOka+PfOMLp/IN8abkeQb5RvYz/+8bdyHfGFy79Fz6ThPuZ/Z27pcKetOH
+5lb6i+M5RbQcD9znUQ8TWo/Hfcz48KFZ/+K0HA/k82lcVZXsR/3My+L83o2
pPfgfqZHpojjCvsO3M9UPVJU5vSyGfcz6zv0La931GHfmJv9NTNvXSn2jVGm
a3yElVOxb+xI17bn78vD849fCI7fe3n8N55/7PZH/6yKfz+efzxvssp9+PIf
AvnGBXYX20z9SQL5RqXB7BXibrN4/nHTcHOT67I53M98WtcrClaxcD/z56cP
7z/ITeN+ZmhlnJrBWSbuZ+r5WCmPfBzB/cwjmm8N5Pj7cT9TseQe8WeyEfcz
wdzCDRvZbNzPFOrKK2JIEdg3JhuPu+iF/8a+sbTS4+xFlW7sG+NZzq7LnvRj
32hrKarkm0HHvpHn2yUq6/4g9o3llzy39q4fwr6RlVtwdM+TQewbmUYwSOAH
HfvGF+Ybt29/0Y9948lDDyipot3YN17MXFhuZdGIfaOep8KF79PfsW8sFK14
sTwyG/tGNRedHUMNWdg3Cp0uPP37WAb2jdanjN5Vj6Ri3+jPWF8Gl0dh3xha
u6H6zSF3AvnGn86BkKcqiUC+8UzE8Rf9UoUE8o2LBg7vGyQqcD/T1bsv7sah
BtzPfJuoFRrxrQz3MwErymCMoxv3M+scLm5LCKTi+ccB32fNTuyh4/nHPDMT
l0830wDyjanbl/OIbfxfTzNBzEjHMr8K9zRzCmsu8HcRuKd5WO0b3xb7YDy/
OL30+o3Tlyvw/OKLDy4f41boJJB/tBE4/7u6hkEg/7g7aPBt8LtpPK84z7eg
IusxC88r1hlvbZxrYOF5xdyfRsfqimcI7B+fWXzWM5vEfcykpzLzlL5f2Ctq
FTypyFVsA6iPKej5z2khpRf7xWU/C2Sb9GnYL6bySqoShQPYL/pMDmpGzA1i
v2iUNMauvnwI+8XdzWf4flUOYL/IJuk+u8KUBlBf00lZZsQltRegvqazwoHY
I85t2DdqRhVmrimrxr6xIdhga/jDbOwbRcraqy9fygb25cn0KhVROLNpRONA
fSZA/c354APdHy+l4/7mBJ9Ry/1d8bi/qTMzWvXT9Dnub6r15BsqC0cSqL/J
di2z4WhtFoH6m4Heqyp0hotxfzNgV1MDr2wt7m/WjYinZvZ/xf1Nu3AhYg9/
O+5vdkPNLtnP/Xj+MnAqOrJRiI7nL5vUXpCtkaID5CnFza097WKouMcpbWm6
8uPFWtzjTBl7G68e8wP3OPVHB9myrF9hb/lzOOLbWtYPPD/5187RolcvWvC8
ZKutOz0nfccJ5C1tFA59rrk7RSBvuS7vzp9uIRael6y1M1nlGNscnpc87Bq3
qHptlkDecnXEeje4Zwr3NcciIu46nvyJfWTp2fnjv680A9TXlOyMHkiK78Fe
MpBTwvWeKxV7yc8v+0be7h3AXlL0eK/jxbJB7CXz/SQar8kPYS9ZvV35cc2W
Qewla5P8LQpF6QD1OWdNrC7bJPQB1Oc8+bej/k9NB/aUPfeSRUed6rGnLGJ1
/Ou6kI09ZfIACK98lg1WeaZqbeMShYdDep/0nMsCqN8p1FN/8JDzF9zvZLv2
tMGnOAn3O1V2Li+Q0w3D/c5ew/ym0SdBBOp3/slaY5R/O51A/c68E+vv9l4v
IpDfvHS/2dxXrgr3OweVBvuKM+pwv9NYODxotVYvngdtO0/R2riLhudB2+Ro
+Qgcp+N50KW+kVcavf7X72xzEBQJnsvG/c43mnIh1jGpBOp3btEy+mQfW4u9
ZydRnsQSnCCQ9wxZ/sPPMmKGQN7T8a0gt2Qbi0DeM3P0t1iONwvPb/6uEiBl
vDBN7GE8ENQ+zQ/7S4vs2qP7sM90fzV4JGolHfvM5E8PKyNVB7HPfNa/6+kt
qSHsM20sD1uJNgxin/mlaJP7taMDoMn/kR+/rhC0OFdtZeFFxV4ztt7zpfbt
Muw1F4ZjVRXCs4HXuf3r7EpEoPzC4qnfqtmgTDQp/KKRKExoHS+cW5sJUO/T
l/vyask9n3HvU/NRzDbvEzG496kRd4PVa3Ad+09au83h6fQ63O80a3JmT7mR
gPudd09qpSi1tuB+ZxQvm5GZWj+eH902tZWWO0rD86N/CRFCZzbTAfKfV/VP
Bj3qouKeZyTvSTfW2jrc85zpsgyrvFyCe57WcV1/ZV/HYB+66+vhJZXBQjz/
mePRo4dZDk143vNq+45qu7y/BPKhT7pWsNXRJwnkQ5/Oml0aKJ3F856b1vSP
u66Yw/Oe0xxd1eq+zxLIh659//6I4Zcp3Od0eaDhZjhXhD1nxlJotxhXE0B9
Tv1vJ0aOyvdg3/nIXm2l/DIq9p1pD2Y+HFykY9+5xZDL0S1uEPvOveIfxW3J
/RHyneM6XBZnzg9i35maZX5m3pkOUN/z1S69X83y/QD1PW1pIwVm053Yfxa5
sGl0DzRg//mhVUdT/UsB9p87tkQf5AvLBi1maaccZkXg1Xotm+uRWQD1P59p
HT8oTv2C+5/luSvLc2xScP8zzuqZyuvcCNz/5L+86VqZqh+B+p/pgtMnt19K
I1D/89m/GrrC/u8E8qZfPDTDu8Mqcf/zbcIhcXbtatz/fPEozVnepgfPs44N
cPC7PEbF86zLy8NechjT8TzrL98qyryS/9f/bD025DT7Lw/3PxukK54J60QT
qP/psCm9eaCqCvtUjSBpm/2uTAL51O/OvJ/m1s4QyKduffRj7Fo2i0A+dfWk
lqZ/CgvPn55rKXOm2swQgb1fTo/r8UPxtbclu1X7sCct9XJrSo+nYU9axtgZ
fHt2AHvSoZLqNa28Q9iTdjVkJbf/GcSe1GOF0lPbwAHwb6g6fbmKEDS7GG35
aYSKfenfIffC7LhK7Ev7eS8wdYOzwbDH85uHMkRgfG/Qo7LD2eD136TCMF1y
v5uZkfnVKxOgXuiVi5OKJ9s+417o9HLt5BizT7gXeqKpvUBF/QH2qmJHlu2r
H6glkFeNXNmcoCvdCZBXfX8mTsl2PRUgr2qyw7HiySY6no9NMXl2cvYfDSCv
OugiED4tPE0gr6q6ZbKw2YRFIK/Kur8p9uxfFpGzj37vcA0nFFi+5XLmmlkC
+VPJEvaMq74D2J/SpY2tK/oHsT+1+fWGn09sCLTszBA0eCgIr5tuM33LPog9
atbN+LWO7tmgKEFhjUiwCPwq5qO8zDsbaH9M4WWXEoUCJ8PpAzJZgJelfm3x
rSi8+qbr2/bxdOxX1xWflLb/2wuQXx17IdR15T4NIL8qOtHrPU7er2he9ufm
1J9Nh2gAedZk2mqF53yzBPKsAX/UadlMFnHjrdYNVQNOOObsM7DOgNzv/OdV
x9ruFstZDGKvuv5khpyXwhD2qmb3MwN6Pg+CXIu1z2eMReDemVfa8uR5SMjw
X51Pkwj8knDo1yGObDCrm3hN87Qo3KEmf7fkWwb2re5BI/ac3vW4D1qrtsxl
R2E47oM+q2g+lJjajPugBaJ6DTvofXj+tZ9y3bNrTTQ8/7r2xpo7a/ToAPnW
jPjjDIk5Ku6FZrwX/6d2tw73QhXKqMmHD/7EvdDgE7IfNC8nYP96rmQx+Xf9
Nzy/msW1l3nYqhHPq347mjuWLfyXQP6150bq8K1XkwTyr8NvT3NmR/5vXvVS
ZWiN5fI5PK86uGjftSnaLIH8q8O/pusuw1O4/zkquHjp9/7v2KuaBMfFJR1v
BKj/aXDJbbNbdjf2q+VqTg5xP/uxX825nXViqpWO/eqDk7GbS18OYr86dD3B
5PiGIexXZwONRG3dB7Ff3bHdipEYRgeoH6pu1jrBbdUPUD9Uy0fWkv6wC/vW
PvMvEvwffmPf6jbky/vhUiH2rZvaLdM2vc0GhT/SLnOOi8B7PjP7BXKzAOqL
+gbWrZ9cnYH7ouGDG0cjVVJxX3Tt1Hle18F3uC9qHf45TsLqHoH6opG2L6zL
K1MI1Be9f0zpj2ZqIYE8rUrBZoPIlgrcF82zl7U1863EfVElDT2zjKFuPI/7
TeqsZEghFc/jfrX8wJENhnQ8j/uonUsL/4//9UWviPxc/D1egPuicfJSfe0m
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
//9hw/8Bw3Vj+g==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{406, 44, 331, 332, 333, 334, 335, 781, 653, 545, 460, 
            405, 374, 806, 678, 570, 485, 430, 837, 709, 601, 516, 336, 782, 
            654, 546, 865, 737, 461, 845, 717, 887, 609, 875, 747, 896}}], 
           PolygonBox[CompressedData["
1:eJwl01VMVmEAxvEP48Zu7LhTFAss7NYLBVE3O1BscXPOTuy6swNsnR0zEXtT
b+zOTedUbC/s+r3z4s/z/J/zfnzjcE6VlDHJabkikUgUGvpRXcYgVv/iwnjk
w2E+HTG5I5GdvBle8/4oYVvGq+ImX4dGtuO8E77xmviqT0B+HOEzwvc5t4s3
Rw4fgJK25bwabvH1SLCd4J3xndfCN30iCuAob+/MRb03ZvIafLfeAm/4QJSy
reAxuM078yt6CjJ4Y56lJ+IHr43v+iQUxDE+C7HO7eEt8ZanINq2klfHHZ7I
r+qDkMmb8JN6En7yHvyePgp1+A85GYVwnKeH++bMXt4K7/gglLat4jVwl29A
U1s274JfvC5+6lNQGCf47HDfnNvHW+M9H4wyttU8Fvf4RsThF5+KIsjic8L9
cHY/b4MPPBVlbWt4TdznmxCP33waiuIkn4shKOf8WlstPOCbUQ9/+HQUQzaf
h6Eo7/w6W2085FtQH3/5DBTHKT4fw9AgPMw+M9NeAqf5AgxHBfv6cL/xiG+N
+v/cR9ln2UriDF+IOrYDvC0+8hGoaMvgdfGYJ/Fr+mBs4834KT0ZQ/WX8re9
p35fH41GPBdP10uhn/5EnrV30C+F9072kSNkTvg75aLwf5UH+TjZTqbKF+E+
y0+ud5e3w/Mqh8s0+V6my5GuV5KZfKyMC8+9fCafuNZFvx5+Z3gm9bdyu725
flrvimH6K/nH3kt/EL4DCTw3n61H4xzvyC/rfbE4PFP8kN4en/koVLZt4PHh
PdGfy6f2ZP2GPgQ7eAt+Ru+Gv+E9RR7bHF4a5/kSjA7vGfK6NtdeBhf4UqTh
Hzm4m9E=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{297, 45, 42, 411, 466, 551, 659, 787, 350, 488, 573, 
            681, 809, 381, 436, 521, 629, 757, 300, 410, 465, 550, 658, 786, 
            349, 380, 435, 520, 628, 756, 299, 409, 464, 549, 657, 785, 348, 
            379, 434, 519, 627, 755, 298, 347, 378, 433, 518, 626, 754}}], 
           PolygonBox[CompressedData["
1:eJwV0ktLlHEcR/FHBywvr8BKncpVLr3kIm8zXRxbmWmgpISkJjrqKERGEEF5
iW76BrpIlLozW6dlpu2KWhSkJkKLUNBa+3kWh/M9vz/jwpnolWR9b3oQBGl4
iRMoQsKhFudwFmdwGnEMYRKrKPDh+8iJBEFMD2ICK8h3H0e2txodsS/hPeJu
s26bKNdTKHRL6W77O5r0f11nv0WZfqLb7M84rz/pNbvNzuMxZNnV7jt2n93H
w/yTWzidb/Ef7uImHuJFjvGMz97mv7qHO/k6f+UG/u39Jm/qdj7JKX7Bx3nA
+x3e1km+xjf4GzfyP+9b9lU7wfMotR+7t9qrqNPL+pfdah/hUWTaVe5J+wea
dVr4d7GAGj3tvcP+ggt6Q5fZz3FM9+u98PvVb1Di9khftleQ0B/1YXsEB3Vl
+AOxL+Idqt1eu62jVD/D0fB/rXfD342eQ7HbQ72EQ/oeDrhV6Ffhd4cSt6eI
uif1A3xArttdZLif0vvu+1CT
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl0ne8jmUYwPGTnXmIjKxj5q8om5RNNhmJhMjIXg0ze5O9C1GUjKyQ0JRR
yJ5FmSWKFNX3+vjj+/6e+3mez3vOe193Ursejbs/kJCQUMhH9AIfkNdikGbV
E1pYn9MH9TtN0nc0l57TSsQXfCWzye76tPYl0fURfY/H+IMtTKAT6T0/qEup
R0rrPbqA10jGz3zIYFryFMX5k61MpDP1Sc4vrGIIz/M0JUgR308qLvIRQ2lF
ZR7nFtuYRBcakJpLrGYYranCE9zmUybTlYak4TJreJMXqEpJ/mI7U3iFRrGv
XGEtw2lDtdhSe/G1zqEfpbjDZ0ylGxm8c0jfpXH8Nuu9upDXSctV1jGCF+Oe
d77XxVSPPbb+RueSw/UZ7U9m10e1oL6vufUnLc3f7CCfe2/pw3pKi2h3zag/
aAFdpo/oj/qoNok91X2aXxdpTj2rRfUNfUiPJ9w/mys1j57XdFzjY0aSzf2T
2jaeuT6gS6gRZ8F6t85jAFmsj+kKyvAPO5lGDzJ5fliX82zM0Xq/vs1A0vMr
6xlFO2rGufLetzqfVynLXXYxnZ40jVnxGxsYTXtqUY57fM4MetEs9pDrbGQM
L1Gb8vzLF8ykN83j/+d3NjGWDjxDBf7jS2bRhxYkcoPNjKMjdagYs+cmnzCe
l6nLk7GPMR+yxv7H7MkeZyfmSK6Yd5yXmBt545zErEmKM0HBmC2F48zE3ONs
UCz+niH/D9NRhHA=
           "]]}, Annotation[#, "Charting`Private`Tag$171030#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1XfcjWUcx/HHg4oURaTMBpmRhsgmSfbekV1GZITsGbKjjMysjEL2KiOK
zERRZJYVGaXS+/fqj8/r+/t8r/uc55z73Nf1ZG/WoXr7JAkJCU0SExJyGa7I
TrgDn/IeaIDcuKrrjDvxGe+JhrgvaULCGN3j2MM/QB78wd/CXVjGe6ER7nf9
WF0O7OUfIi+u8S5IgeX8HeRy7XxeDGd5Y6TVjeM5sY9Pjs/nO+ST13VdkRIr
eO9Yc/0CXhzneBOk043nT2A/n4Lndat5Jdzk+XHD3A1343PeJ76b6xbyEviV
v4oHdBPiHuIAn4oiujW8Mv7kT+KmuTtSYSUv75rt5gboG/eBf2Iuid94U6TX
vc9z4yCvzHebm2EaL8rXmqvgL14Af5rfxj1Yxfshn+sW8VI4z5shg24iz4Pv
eBX+rfk1fMRf4OvMVXGL1+Xfm99AQf6X7IF7sZr3j/vmmsW8NC7w1/CgbhLP
i0N8Oorp1vNq+Js/hVvmnkiNNXxA3DfXLeFlcJE3R0bdBzwfvuczUAh/815I
g7V8YNwP1y7lZXGJt8BDug95fhzmM/E0/uHv4D6s44PQEg+7frLuSRzhs/AM
/uW9cT/W88FohUyun6IrgB/4bDyL27wP0mIDH4LWeC42odf01afDRj4UbZBZ
PzXuN37kc1AYSfT9dA9gEx+GgrpPeTlc5m2RRTeNP4WjvCrfY26Oj3lxvsFc
Ha3MZ+Q/+nrmw+Z2eJ4n8v7m9GhsPiY3618yfxX7TjaUbeWv8T3lu/G7ys/i
LJAvyhbyVNxn+bv1WvJgPK+yjWwvL8r+8nXrWeVHvJMsFM+9PCGPWatm3hvv
Gc+k+bycqy9h3miugdbms/JffX3zkfgbKMKT8gHmDPiCV+A7zI0wPJ4pvsxc
Hlf4G8imm86fjn1i/kX+pK9u3mduiXm8JN9kronbsU+RTDeQP4gv+Qi0i32G
5NYG6TNiCx+JOJzzeDSKyTusD7b2ELby99AB2fUzdM/gZz4/flPcqR+iexjb
+Kh4xnXL+Uu4yjviEd1M/iyO8wUopdvMayEBJXR36YaaM2E7f5nvjGcBo2M/
8BXmCviDv4lHdbP4czjBa/D98ZxhIS/NvzDXRhI04D/IDihpPQUfZs6MJuaf
5Ff6iuavE///vzUm9hb/3Pxy3H/zaXlNX9v8nbmHbBvvKy/JAbKT9cfkbN5Z
Fo49IU/GGRK/q/Wa8gDvLlvHXpAXZL84p62XkV/yLrKObCPPxZkgE2VD+aPs
KTvKjvKyLOW1KWN/mLPgVfPPcof+FfM30WFsnA18pbkirvM6/JD59fjc/HE+
J/YoTvJFKKvbwusiKUrr7tYNN2fFTj4Ob8V3QCprI/TZ8DUfjy7xPiiHF1E+
9nrskfjtkdejUTE+LyqhMqrgHu810vtkxzd8Aroih/7j2Hc4xRfHe+u28npI
hqq6e3XvmR9BU/NxuSv+hnmXuZtsGt9f/ib7xv/HOBPlKv4KbvBuyKmby4vi
NF8SZwZS60fpHsVuPhHdYw/HMxq/e5xL8fzE/UbdOA+RxutGe81j+JZPwtt4
Qj9P9wLO8KVxz3TbeH0kjzOFH5VvBnH2yYGyvmv/Ay48JSE=
           "]]}, Annotation[#, "Charting`Private`Tag$171030#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1ncclWMYxvHT1JD2VNIuNBTSltKSUUrai0qojNDQ0BBp7z1o760d7VCR
UUKT0rDaS773H7/PfV3X875nvM/93Ofka9O5fqckiURidtJEYkCyRKJ3ikTi
XPJEIlPKROIt9Qr/Iu7lc/I/0TWRk9/H3xHX8T+5d5N6P1bI/1NfwQv02ag4
Sq9x3Uw6PcbxFXGCfhYH6VvWv6bL4wu+PQbK+vDn6a7IhcOyz/CJPAPGyyrF
+8o+QF/Zn/zbuBs/y9ZiED7ERxiMjzEE77v+L9e9g9z4RbYOn8ozYoKsMm7L
hqKf7G/+XeTBr7L1mCXPhImyKkhgmLy/7B+6G+7BEdkGzJZnxiTZY0iC4fIB
sn/p7siLo7LNsgewkm+MjbI5fBZM5qviJF0Ph+ik2EtXwFa6A/6mm+M3eoT7
B9IX6B64Sr8Uex3PV62FXPZ3P59K7coXVI+5bwtdHNn4VfFc6FeRj2/Cn6Mb
I09cz9+l9uCLqJvcP5fOGp+dn2L9Bt0Bj9O/qfWjp+i01t+lk9H71IrYRieT
d6Ffpv9RW+B3emTsP32R7ol8sfd8bXxDH7f+OV0Cq/mm2CybF98FU/lqSI79
fCVspztiVPQPf4l+D/mjd2VfyEpiDd8MW2Tz+eyYxldHCoyO3pNdpnuhQOxX
fB4skOfAdNkTSIkx0aeyK3RvFIxnE++HsdG/1q7K+qAQfpdtxTiMxwRMjB53
3TXrfVEYp2TbsDDOMWbIasRZxqQ4D7Lr9PsogtOy7VgU/YCZsprRE5gc50F2
g+6HovhDtgOL5XfjE1ktpMYU+TDZTbo/iuFMfG5ZKXzGN8dO2RI+Nz7layMN
vuErYwf9Cqa6bjh/ix6A++Ls8nXwbcye+K70g1jLt8Au2dLoTczi68Szo5/D
4eg5fEtXwc7oBb32evQ3/a/aEqfoaV5nBP1fzChco9vFDIx5oD4Z39+9B+K7
q2/zhdRz8Tzp0tEj/LqYE+prfH61JX+eboJ7+ON8erUnX1Td7f5lsRZniJ9t
/WachXjP2F+1AX6m77Tejb6TPqA+hl3Rj/I36NfoC2ornKane+2R9G36AzwQ
s4qvi+/ic8Xe0mWwnm+FPbLlfF7M4esiHb7jq2I33QkzXDeKT2AQXxx/yr7E
ipg7mCt7KuYFZspHy5LgQ74E/pJ9FXMfY+RJ8ZG8ZMy2+O2ImR1zOGZrzMeY
NXFeYoZgsOtKxcyQ7Y1zH+dFnhwfyx+MPZbtw8qYZ5gnezr2APPjbMlSYAhf
Op6fbD9Wxf5hvuwZZMCCOIeylBjKl8FF2U7+IWzgW0dfy1bzBbCAfzbOHd0Q
v9AZ8X3MR+yhO8fr0K3xB70wzjp9B4bxD+Eo/RS+py9Z30U/jI18m+jxONNx
TuOsYZK1VBhu7WFclh3AGllBLJTVQyYslU+WpcYI/hFcke3mH8Emvm30QPxO
R99jEV8fmfEDXw1f0l2wzHVT+DQYyZfFMfpp/EBftb6HLovNfBL924l+MXpI
bYoT8Yzid54ujMX8LbVjnO2YS+rzMVPc+2v0qNo9rlWz8D/S1ZGD/4pPqb4Z
exLnP54h3Sb6nD8T+6u+xxdTl3vfqXRaZOZHWb9Ot8ej9HH1GfwYc8z6O/S1
6P1YxxZ5Unln+qXoc7UZTsaziv8idBEs4RvEzKQb4QidFQfpJ/A1/QZWuGda
nHuM5svF54mzw5fD53y7+M7xvyXmCpbyDZENK+XTZekwhi+PG7KD8b8lvjOW
yZ5HdqySz5DdhbF8hZhJskPYKLsPy2WNkAOH+BrYS78ZvUa3xdnodc+hV9yj
rnb//x1ebZs=
           "]]}, Annotation[#, "Charting`Private`Tag$171030#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xe81XMcx/FTNJBRJJUiLe0tq1KRtJc2bVoaIm3aWjcq7b2n9kaTFpX2
0N4he4Y8P3+8Hu/36/2753HP/Z3f+d5szTvW6pAskUgkJU8k8qVMJO5MnUh0
T5VIpMZq3huvIK99gu1xHOZTkB932XvY7sAa3gflbMv5c/iev4p8tok8D47w
qahp28yr4x9eAGlsPfmdWBu/m3+pN8K7vDxfoZfFDd4k3odtEs+Lo/w1flhv
iWm8Ft+i18Bg/Xf5r72Lfl7vjLF6ChS03y172e5CT/26XBd/h/6VPks2lsPk
33KZfM/15+XK+J2ynOwvf5ZL5A+ud5Cn+DzZXo6WybEaTePvl5PtU2S++Hvl
DXnMtdf1I3orfKDfktPttfWtek38x9/iF/Q3UYjfw3vrabCe98ULtlW8PH7k
zVDQNoXnx3E+A4Vxr72P7W5s4P3QHEVQFMVQHCXwBEriPq9518/fg428P1rg
SaSNe2W/F5/wAWiJp5DOtb72+/ApH4hWeBrP4H7X+7mWFp/xQfFZo5B9qq0A
TvCZeBYP2Pvb0mETH4wKcb/58/gp7mv8nbZpvCBO8tb8qP5afNa8Dt+m18It
/ja/qHdBKZ6eD9DvRy/9W7k5nk19r/4Khus35fv2F/U1+gsYoP8if7Z31E/r
8+Ubcoy8LX4WreOey+n2qbKQfC+eK7lYfuN6G3mMz5Gvyw9lIp5JzHb9Zbnd
PkPWjvci/5AJdNUvybcwTk+J0l7zoBxoewBbeFO+T38VQ3hFvlavgF/iPcRz
YZvBC+MUn4MyyGAfZEuPrXwo2uI5POTaYPuD2MaHoV08X/aZtiI4zeeiLDLa
37dlwHY+HO3jWbTPshXFGT4vziNksg+xPYTP+Qi8Ec9t3BtbMZzl8+OMQWb7
UFtGfMGT8JJtHX8Rv8b3OZ552xxeHOf4gjgH8LB9mC0TdvCRqGRbzyvit/i8
4/tim8tL4HzcD35cb42FvC7/XK+DZPHM2LLYhuuZsTO+v3y/3iTOBl6Zb9Bf
wkD9V/m7vZN+Ru+ATvF95PP0J9BX/1FeiPuun9DnyjZylEwWZwYWuV5PfmGf
KV+O50D+KZfGeSbfkZfj/cu35XiZKp4TVPD6rHKEfZJ8WPaW38ldcbboX+tN
MUL/J55jexV9o14Jf/DO/KzeEZ3j/ODz9ZK4yBejvm0Hr4vb4nOzPWJL0rNg
Nx+FN+M5js8Xj7o+0rWs2MNHx/+JOIPsC2xP4hJfEp8nstk/sD2CL/kYVLV9
wivjzziT4/yyLeRP4XI8q/yk3hYf8wZ8p14PQ/W/5O3opl+J7ycm6KlR2c8/
Jj+0TZaPyj7ye7ko/kfFeSsP8NmymUyS/8rl8iPXq8lP+XRZRQ6Sv8V7id8d
90Se4wtkJ/mRvD0+zzhb4zmwPY1++k/ySnyf4hzS28WzwBvyXXp9pEB3fjWe
D1RxPTsfpWfD3vg/wA/qzTGWV+ef6VXxN++KUrbF/Blc5cvQyLabN0DK+Hlb
Dtto/THs4+PwDkrbl9iexTW+PO4FctrH2LJjPx+PbvEeUAM1kSvunes58DWf
gO5xttk/tpXCdb4CtZDbPtaWEwd4K35Ib4GR+n9yhZwYv0Nu4tVwk/eIc9G2
lJfGt3wlauNx+zhbLhzkk9Az/k/FGR9nRnxH4/mP5yo+h7hHyON1470mNw7x
yegV56l9ma0MvuOr0Ni2hzdEKvTg1+J5xET9jjgL0djP/g8IKFIO
           "]]}, Annotation[#, "Charting`Private`Tag$171030#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XccTXUYx/FrZZVKkTIyWlLZhRQhSaQIWYXsvfceWdEglTRUtJAyMsre
O5G999579X7++Ly+4zz33HPOPb/fzVG/deVWSRKJxIakicSsVInE+jSJRCHM
SJ1IVEV6HNdf1tXCTrkHimK2/h9dYfwpV8N9QdpEorPuKv85Tpi7ItfGLrkn
iiGXuUG61PhJnmNuA/8sZsrVcX9grovuGv8FTpq7KtfBbrlXXI+Zr+SH8bz8
iDyYT4Of5XLyRP4Z/OXz/9LnMMuxt5Hf8U/lB5BBziB35a/HffGz+TH8S/x4
/nE05FfQU853jb6D1ro95irTGXIf2jvul34td6bZaX26lL5Pizv+KB0it6Vp
aU06l/alvzj+Kp0kd6V5aWO6iv7tuzfSIpht7nX9H3wNvgA/ms+EjHJGuRt/
g/8Sp332uvwu9sp98AIeMzdUdyd+leea28QXxRy5Jh7AGf08zMcCLMQi/Geu
WDxnM7WQCWf1i7E5fp+4bl1tPIhz+hu6utgn98WLWKLfoiuOuXIdPITz+pu6
etgv90MJLNVv1b2AefI7yIwL+lvxzHFA7o+SWKbfpnsR8+V3kQUX9cuxAtsd
K4EF+rrIikv627r3cFAeEO8FVup36EpioVwP2eJZeZ7ddTf5sbhsLqFroDsk
D0QpPK4bprsLE+VV5nbyL2GRXB8FzXwmPxjvejxbuQd/i/8qziNPkJ/AFZ9P
IjfkDztWhf8z3jn+ef4bPgdKy0/IH/DpYp3z8+gkfXl+Mt+N5qNN6Go6KNT5
d/Gl0EJebL4SnSr3pO/Jhejncgf6UKwRupD2j3UQvz/tKbeht2PN0zny13xp
/kc+NxrxK2NP8Z1J+Ub8ETODUFz+Vs6JMnJueTh/NybLa3xmd9wnlsgNkCPe
JXO9dAl8I18zl0zXWD4qD8bLWKvfE+fGUrkhcuK6fl3smbEPxt4V+0qsR+w1
+zKWmWsUex1uxDrCPn1ZLNc1jr0KN2PdYL/+FazQNYl9Abf0yV1XE/0xeQjK
YrP+gK4cVspNY+3itj6F+ab64/JQvIIt+oO6V7FKbhbvXKyR2KN0SfCtnMAd
umbyCX5Y7J94UjdCdw9+k7c63yG+PFbLzVHYzBdy5ngHYz3JffikGCeXkX/i
n4zvk1PKzfmT/Fv8TP6D2If4cXyuWGf8srhufR7+Q74dvZfWpvPpFMde43/j
u9P8tCldQwfTba71MP8aWkZv/g06Te5FW8jP0jFyR5ol9kW6iA6guWPt075y
MrzN/0W/i3eE/5nPE/cpp4rz8af44bGXyd/Jj8Szkp+SP+LT43d5u2s7wlfA
WrllPOvYO8z10yXH93IypNa1lE/zI+KescPnj+oqYp3cKp4TkiON+Vb6M/yH
qICd5o/pXsd6uXVcE1Jgl2PH9ZXwj9wGT8f7gN2OndC/gQ1yWzwTvyHS+p7W
+rP8R6iIPeZP6t7Ev3I7PGfuSzkr6saeQQfGf5pjD9P+cgr8EO94/PfxTyGV
fKfchj/HV+Vn8R/zJfjv+S70UdqALo/7i2vnP+bb0/toHbqA9ov/yXgedIrc
gxagzehaOoTudf2n+MpoJW80/yadLvem7eUidKzciWaj9egSms+x7PwA/g7U
4P+m42Mt8r/yTyO1fJfclj/Pf4KS8g/yY/E7xDOWP+Hvx1R5n+s6zVfBJrkD
8seeZm6gLiUmxG+PdLp28gV+ZLzzyKsbqcuAafJ+5zvDv4X/5I4oEHucuffj
2ePH+I1xd9y3fJEfFc8DB3z+rK4qNsudUDB+L9xjvoP+Ev8pKuOg+XO6atgi
d0aheA6413xH/WV+NKrgkPnzuurYKneJfSbuDYcduxDrEdvkrrGO4zpxxLGL
8eyxXe4W719cE446dklfEzvk7vFbxvcjvWvopL/Cfxb7EvLpRukyYnq83/Lv
fEE059fRofSY8/4PwD1/Qw==
           "]]}, Annotation[#, "Charting`Private`Tag$171030#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.864152695819188*^9}},
 CellLabel->
  "Out[411]=",ExpressionUUID->"4e811491-319f-4f67-98be-12273289ce4f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
FU8mkK7YmKpSQsKmruve2EQ8X7XO5DWFj22A1ddX1Yh4fZfYRK+qFbJiGXI2
X4aJx+uPbtV5+o2EZZo/P1RA3A9kCUrqKm3oAI9N09r3q1Bxchzp3OdpVuxG
ATN/N3HeTvlAMijIJWGestuuVxH/fuMNtR8uom0gpdGgWY04j3qVWRubk1kx
lzuPN/q4MQHNPe+e3PZWsPFLoG6xMhWHfcJshujaE6wp+Cd2fs4vNSTs0bDV
sUzi+Ys1vrO3CraDpx8cj6oS/56Ext/LaxpZMdVXtI+hxPMXS2/5Rk0iYa+c
Up7IEM8PfbJNlT7j/Y/0fz751a7/fPIB6JMF3d7wSTo0on7hs1OG+++F9KJ+
IS0ou+RvORX1C3+onVu48ZSG+oU8ZUHZFx2pqF9471Cqw6+CPtQvXAiYfPP9
TQ/qF57+sPp44ZNO1C8sTBVpDySua+iT15P3T8ob1iOfvMe4NjvqQjnyyW0L
ejfq+bORT/6677oV6XEKmqc73Hxn1caSGjRP1/rk446753vRPN3Esu29n2WG
ceiTPVXCtDWfT6J5uqdWGaX+uTCL5un+bjtZ7/J+Ds3TfT0W8TUvfhb1C51O
2War7JpG/UJe+tlYgfJx1C8cP7Jebc3WQdQvXAx3SxNp7UX9wofc2S8l2xtQ
vzBmKfHX5P1M1C8sO8p7/925HOST33LO4nKH6pFPrs819AuL6EQ+uWVJ+sFb
2T7kk+/qGrfT9tKQT06z2R/tPkFHPnngw16Bfm8G8slb8y4lbJz955Px85/Z
z+yjIZ+stoNjRXRNH/LJQc0blchpHcgn8+aFcm40qEM+uXHWkDnGnYn6hXvL
vbmqT2egfmGVlGRUX+of5JNFjl+8MMkoRD75surS2OPXpcgn832bNem+XoF8
snWU75SgchXyyWQT2iEtuWrkk22lbY5OPq9GPjla2T09wK8a+eTek9+XPZ9U
I5/sdUKSPwAvRv1C2Z12vZvYulC/8FyNzv29ARQ0T/fbnp21s8Y0NE93/KG6
Y4QEDUCfHFZjulKQTAFwnq6a+C/rru+9qHcYqrLx8yn1JtQ7fDvDoqdpUYN6
hx4ZTZvY5P6i3qHi58yGtleByDev8FSeEj30F83LfbVmPDcsvhWHvtk11U3Z
f+s4Dn0z98xLPoeUaTQfd2c1uapYaw6HvrmGRa775tU5NC93y3H9OyOBMzjs
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
/w8BAkel
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{577, 3209, 3207, 713, 651, 614, 1062, 936, 828, 738, 
            676, 1090, 964, 856, 766, 1108, 982, 874, 1126, 1000, 1144}}], 
           PolygonBox[{{3206, 3205, 562, 563, 564, 565, 566, 1027, 901, 793, 
            703, 641, 604, 1060, 934, 826, 736, 674, 1089, 963, 855, 765, 567,
             1028, 902, 794, 1111, 985, 704, 1096, 970, 1133, 862, 1121, 995, 
            1141}}], 
           PolygonBox[CompressedData["
1:eJwV00VQVmEYhuFjd2C3ogtBxFzYCXaAoDPGOMboqGMgYMdK9wagAsZaRcQe
e6UuLFDscRxnEHNMMDde3+Lmee73vPw/3zmH2MUZaWtqRlFUA5392Nk4inag
Vq0oOurCSsTVjqJjfCQq+HjEmOXwnrjLd2GQ2UU+DT94a3zW16I2jvFViLd3
nI/CGz4BLcxyeRzu8d0YbHaJT0cVb4Mveibq4DhPsnNDn4PVvBcv0kejkk9E
S7M8Ho/7fA+GmF3mKajmbfFVz0JdFPFwYyahld19Zr1QyvdiqNkVnoqfvB2+
6dmohxM8Awn2TvAxeMsnh/titp8noIznoD2+83Woj2K+Fr3tFvOxeMenhPtg
doD3xgOeiw74wdejAU7yTCTaPcmT8J5PDWc1y+eJeMjz0BFVfAMaooRnYVo4
m/0Csz4o5/vQCdV8IxrhFM/G9HAW+4VmffGI70dn/OSb0Bin+TqkoAt+mW1G
E5zh65EazuWzDpr1w2N+AF3xm29BU5zlyfZu6nPDGXgfXqIn40P4u3ipvgQz
wnn5Ib0/noTnzG/rC5DPh/GrYRfz9Vfyl3maXq5nyOXh82Rl+E7ZzfU/+lYs
483kLPkkvLPynOvj5C2+Us4L3ydfh/dGbnS9rzzFV8hxcp58KT+Ge6WX6Uux
WK+QaeFZ6If1AZitP5dPw7um39EXooAP59fC7+A3j8VffRua4zzfhH72TvPx
+MTTw/MzO8IHhv81/YV8Ft5H/a6+Ri6ShWYj9Ot6Ov7w7vinb0cMLvDNmIke
+A+i24td
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{528, 3208, 3203, 879, 1005, 532, 654, 716, 806, 914, 
            1040, 581, 739, 829, 937, 1063, 618, 680, 770, 878, 1004, 531, 
            653, 715, 805, 913, 1039, 580, 617, 679, 769, 877, 1003, 530, 652,
             714, 804, 912, 1038, 579, 616, 678, 768, 876, 1002, 529, 578, 
            615, 677, 767, 875, 1001}}], 
           
           PolygonBox[{{3206, 3207, 803, 911, 1037, 576, 613, 650, 712, 802, 
            910, 1036, 575, 612, 649, 711, 801, 909, 1035, 574, 611, 648, 710,
             800, 908, 1034, 573, 610, 647, 709, 799, 907, 1033, 572, 609, 
            646, 708, 798, 906, 1032, 571, 608, 645, 707, 797, 905, 1031, 570,
             607, 644, 706, 796, 904, 1030, 569, 606, 643, 705, 795, 903, 
            1029, 568, 675, 737, 827, 935, 1061, 605, 754, 844, 952, 1078, 
            642}}], 
           PolygonBox[CompressedData["
1:eJwV0EtL1HEcRvG/1rKVVrpKp4tZampq2aZaqWlBmU2po4SDlyJKRAhKx/u7
6KKjvYJSy1K0VW0SFCHMG4G4qnRbXvq4OJznfH8zDEyo4Unl48QgCBIQR/+h
IBhAvmMecnEOOchGFmrRjSmkHvAdJB4MgrN6CKu45PYGJ9xr9BYq9DiK3Lr0
JFJ0HxLczuhthPVnXHUb1FF7Fjf0ii62R3BcV+t1O2o38zxu2ZvuK3bELueH
PMaFHPPWzj/1fa7jR/yVS/mT9zb+rsN8lFu4lwPO9P6UN3QjP+BWXuDb/M/7
ml1v3+EZXLFfuzfY33BdL+slu8a+yMMI2ffcm+w53NR/9DV7FAW6U0fsLyjR
H/URuwd7OK3/osqexmWfebX/W7ig40h3u6t/o0y/w3m3Dj2Bw7obu8jQL/ED
RXoIaT4b1r9Qqt8i3+25/oBk3YUdnNIvsIhCPYhj+/+Nfob3SHKLYRsn9X81
91Ec
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1mW4VVUUBdBHSZd0gyCgNJJKSEhKd6qAdIugNIIBSFmYNCgWIooo3d1I
iTSSFmGgomN9/hisOfe57953z9n7fRToMqB5/0QJCQnpEyckxHzeP5n5jZX6
SbMfyVx/Vt8qt+afoF81h/Oo/LlZg0vyBXMIi+RDZldS8YA+yyzBIfkV9sid
SMqT+up4P27IS/HRCS/oWVglD6cR5ZhtrSTfyq/SnSS8aC0rq+URNKY8SUnG
XbzkejbWyCNpQgWSM9F6dtbKo2hKReZYK8Vh+TV6kIJJ1nKwTh5NMyox11pp
jsiv05OUTLaWk/XyGJqzTK/JZfl9KjNPL8NR+Q16sUZvxM2456TiZT0XG+Sx
bJPbcEduwRdyLa7IH/Ct3I3UPKjPN8tyTD5rDmKmvNfszL+xB/iJUfEsPZTe
rq+VG3ObW/olcxgpXF+mH5N7kkRPb15nHGn11K5PkXPzOxv1U2ZsyHHydrNt
fLZ8zRxBS/lLszZX5R/Mp1ksH479Qxoe0hfEfuO4/Cb75Me4iz76OrNJ7PW4
P6Rhqp6HTfJztGK5/gjX5A+pwkK9HN/Jb9GXtEyzlpfN8nha85Vehx/lj6jK
Ir08J+S36Uc6plvLxxZ5Am2oFvvBWgW+l9+hf5xZZljLz9Y4u7SlejxjaxU5
Kb/LADLEebNWgG1xpmjHw2SM82P9HrbH+aE9NbibTGQmC1nJRnZykJNc5CYP
eclHfgpwDwUpFGfG+xdkR5w/OlCTxdYqcUp+j4HcG2fGWiF2yhPpSK14DtYq
c1qexSAKxxmxdi+75El0YoVeN/au/DG14znEvueMPJvBrNebxl6MPUYRZuqF
2S1PZofcjvhj2dn42qzHz/InHJG7x/6OPROfF3uRs/I5czBz5P3m4/E+zkHy
+HlG85SlDWYz/uIP/bL5DCm9drl+XO5FUj2DeYPnSKcXjb0uF4mfZY9+2hwQ
+971l/WdcnvukCj2JSPjbLj2jVmfX+RPqRPfS6/COXkuB+Qn4owzRN9oNufP
2Ot8J/cmI/fF+TCLslc+Yw5kirzL7EDiuBf6SrMBv8oXzaEskY+aPeJ1fv90
cZ2xcc71uvF7ylXj8zmvn4/7SHLX5+kH5S7xXfWU8d0YQ2r9adc3yS34m9v6
FfNZVsgnzD7czU3Gc3+c2fhu7JOnslvuSJK4N/oqsyHX5c+oxxK9Ghfk+Qxl
s94ynnXsJYrF+Y7PYL88jS7Uj/exVp0f5AUMo3icb2vFOCBPpysNKEFJSlGa
MnG2vK44B+UZdKMhS609zEV5Ic+wRW8V9yX2Bd/LfcnELSYk+v//DWVd+w/e
OgJs
           "]]}, Annotation[#, "Charting`Private`Tag$171141#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hf4l1MYx/FvQ2minYaiLdraaEdpD9p792uTVdLepRAl0aA9pIWoqIym
0USL9pAtldd9+eN93ff7c853nOc55+Tv1K9JUrJEIpGUPJG4HWdTJBK9cVO/
EN1RHXfgnLwPEljEe6AGMqZMJKbJCuALPgmZcJ73RTK8w3uiJm4zf7qsIL7k
k5EZF3gSkuNd3guFzV3Mq+IkrxX/U/YSL4Sv+BRkwUXeDyPT+4vqYllvFDF/
CX8Qp3jtWI9sBi+MXXwqyss28sfwK8+KS/r+SIklvA+KmreUP4SfeJ1Yr2wm
L4LdfBoqyDbxBviNZ8Nl/QDcgqXx/Mz5TP9EPCtejC/TP4yfed14NrKXeVHs
4dNRUfYBb4jfeXZc0Q9EKixL/v87fSSejbmvyIphL38JlWQf8kb4g+fAL/pB
SI3lvB/uNW85r4bT/NF4LrJX+b3Yx2cgJ67ywbgVK3h/FDd3Ba+OM7xePAfZ
LF4c+/lM3Ilf+RCkwUo+APeZu5LXwFleP9Yqe43fh6/5y8iF3/iTSItVfCAe
i7WZ/7rsfnzDX0Fu/M6fQjqs5oPQINZi/mxZCXzLX0Ue/MGHIj3W8MFoiLz4
U/Y0MuA9PgSNYl2+a46sJL7js3AX/uLPICPWxrkwb7u+VayB389X6WviXPwv
vlffBY1jvfwNfSkciPfMv9S3x2u8Mv8o5qKt/kf1T3kT/TdxTtQe8X3qz/Gb
aj7jf+ufRXd+m9pcPRB7Vn0/zp+6I+4ItXX8nno89o36lPES6mreU62ltla/
V8/Hs9Lv03dFJ/0ptUm8C/1cfWk8rj+sHoy9pv9K3wGv8yp8c3wGf/H8+Ef/
HG7HOj4UJc1bw2vjAm8a70/2Ji8TZ01/RD0U+1G/S5+kdlRny6rqP9Y3xd/8
blzTP487sJ4/jWa4B6PcNwXUf40NQyZs4M+geewP3zdPVhaH+RwUxHU+HJmx
kT+LUua+x+vgIm8R+0X2Fi+HI/wNFMIN/gKyYBN/DqXNXcvr4hJviXyyt/kD
OMrn4kHZJ7wZ/ol7Fjf1I5AVH8Q9ac5OfZtYOy8Te0D/CC7H/ub79d3ivcX7
4PP15WMf64+q38eZ1e+Od443+UN8S+wttNMfU6/Fe9J/q++v9ox9op6OM6oW
MZ5QX+Q91GxqC/WgOjDusriH1c95H7Vt7Bv1hDpYHWa8rLqO91IfjXWpP6hX
jDXWfx37Hp31P8U+iXevX6CvgB/iPuF7Yg7m8Yf51vgv+JcXRTLZSJ4dH/Hh
KCdbz+vhF94q9o5sIa+IH/lbcf8juXyULAc28xfQOu7iuE/jToz7Ic5a7PXY
MxhtD5aOdxTrjN/DA0jhu0b7npz4mI9AGxSQL5JVwjH+NqrJtvGWuM7LI6Vs
DL8zcv0h9RN5Xf0X+r5qO7WjelIdEvP9lxfj9/UbZPVxlbeNfS97h1fGcT4f
FXCLfKwsF7bwkWiHikhlbJw8N7bGeUN7VEJqY+PlebAtngM6xP2HW41NkOfF
p3wMOsY9gjTGJsrvwmd8LDrF2UdaY5Pk+bCdj0PnODNIZ2yyPD928PHoEnsa
6Y1Nkd+NnXwCusYeQQZjU+X3YKzn87lsIrrFWTb2rrwKTvAFqC77NM4VbsRd
w7+LvRvnTX9GHapWM/YfsaImsA==
           "]]}, Annotation[#, "Charting`Private`Tag$171141#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HfcjmUYBuCXUJmRvTKz995RhOys7JW9Z/ZW2RpG9iY72bI3WWXLlk12
KnTcfxy/67zO+3n4vvd9vidts041OkaJRCJlokYivaNFItljRCKrokciC83K
5ngzET8Rxf6F+dJcak4xZ5jpOejeZuYN3VAmySkpJI8wY7FQXuK6SvIxuQNp
GWiPxiz5jvMO8iN5LGXoo8sRfga5ClE5pFtKZf1xe0fScVfXl5z61faqvMGv
umX0oz8DGMggBpPL9T+7rhrROKxbzhByO1ujq050juhWUEX/m70T6bmnG0oe
/Vp7DWJwVLeSqvrf7Z3JwH3dMPLq19k/5U2O6ZrrbsrDKMwqXTXdCbkLGRlk
j85s+YHzjvJjeRwfMlyXT7derskEOTFvyb3NV+YPHHddC/utcA+T5VQUkb80
Y7OSRfa5Zubwb4bvw33VzZP6RWZX83szefjsed8+2IzBCubYZ4c+/L785f5O
5pPwXJjjw89jvsdH8ijzHZbK882sjHBPfnODrhbfyEl4Ozwn5mtzKr+57nP7
7fD8UZSv7HFYLK92XkM+JXcjE0PsbzJXfui8s/w0fG6UDZ+FroBuo1ybmPyu
a6m7E84pxs+6T3Wn5e5k5pHuKwrqN9nrEIsTujXU1J+x9yALj3VfU0i/2V6X
2JzUrWUkhZ39ovuMOJzSrWMUoxnDWIq4bovzesTltG494yjqbKuuPvE4o9tA
Lf1Ze0+y8kQ3nmL6bfYGvMNZ3UZq68/Ze5GNp7oJFNdvtzckPud0rXR3w/dB
cTbp6ujOh/cL2Xmm66J7Fr5jyoWpK6HbITciAX3tEabJ5523lu/JX1OCzbq6
uj/CM08Ohoa/AebJz513lZ/L34ZnR07Dx/JoMz7LwpnrSso75cZhl5Pyrtwv
vBvDdUy3zzQzhHdA+H/d18a8r//RHGlOMVOHdwolw89qxg3vXX60zzOzhGc8
fL/u/8y8oF9s9jEnminC+4qc4R0Rnn/my3PMTPztvm5h6r5jmpyW8vIYMwHL
w5nrSsm75CYkpL89KjPkC87byg/C3yOl2KKrp7sYPn9y8ULXXfcivAOoEKbu
A91uuSmJuKjbSn39pfDZkZt/dBMprd9jb0ZiLum2MYkyzvbqmpOEy7rtTGYK
PzCVaXzo2n2uaUFSruh2MJ2PnO3XfU4yrup20kB/Ofz+5OFf3QzK6g/YW5Kc
a7pdNNRfsQ8gL//pZlJOf9DeihRc17UL77vwTPEBu3WNdFflgeRjuD0mC+SX
znvI/4Tvm+lyOirKY8NzF96p8izXfSwfkluH71NORsrwc5lvhO+ZmeFaMyN/
uqe9+TA8C5RmpD0eS+Q9zhvL1+RB5OeVrqfuX3kSnzBbV173q9yGVNzQ7aWJ
/rp9MAV4rZtDBf1he1tSc1O3j7lUdHZE1473uKXbzzzms4CFLGIxn7j+qOva
k4bbugM0Db+jfQgFidBL9585mUqMsydkpbzAzBbe6+Hvz/3/A6Z2NBg=
           "]]}, Annotation[#, "Charting`Private`Tag$171141#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nf8jmUYhvHX3qmEZJdUUhTRQInKViJSFGXvvTdRomELoU0U2kb2zt57
U/be9L3+OD7ndZz3/bzrdz8Peeu3qtYySSKRWJk0kZidMpHYmjqReBFLUiUS
7yILTuoTaRKJZvpT/EM8jzn6bboyWMrrISvy2vuxLiOm8FP2JdE156f5R3gB
RXQTdHkxh8+1b7u5LJbx+ihhz3e8AO7l9/Mh5jsxlZ92TVJdC36GD0ZZ/hN/
EqV5Uf6l+X7UMS+Xc/WVzX+Yn8M8r7NDvoTl1qpb+9v8nrmk+XtzO/morCdX
y54ym/UH5FDeSt4la8slsrv80XoF+SvvKJ+WjeVG2Uee8b7JZEveXJ61v6Zc
yLvE78hfkj/zImhgXhd/I/1T5onmB1DXvCK+h76K+U9zCfzt9XfKl7HC2vso
Zf0HXhD38Xz8E/PdmMbPuia5rhU/x4egDObrd+lewUreANlxTr8AC7EIi7EE
S7EMu+0vh1X2NkQOnNcvxx59eazWNUJOXNCvwF59Bfyja4xcuKhfiVXYZ60i
1uibIDcu6VP47K315/nQOA9Yrd+vq4S1vCny4EF7P9VlwnR+2b6Uujb8Av8E
L/MZvGicD16MTzLni9+XV+V/mUvGZ3X9AVkZ66zVsDbf3CzuGfMU82Oob/4n
zr4+v/kzc2t5j3xLLpU94hxbryh/453kM7KJ3CT7yiveL5Vsy1vIi/bXkot4
1/hu/BU5k7eXT8mGcn2cCWvFzZPND+Id80o5X/+qeba5VPy+3uOgrIL11prH
/Wt9Kn887iv+EP/cnBk/86uuSa1rxy/xz+JzYK3+kK4qNvAWcf/gmn4d1uOw
tVexUd8yzieu69N4vfb6y/xzlMMG/RHda9jEW8XfFDf0ae3voL/Ch6E8NuqP
6qphM28dvz9u6tPZ31F/lQ+P+xab9Md0r2MLbxPfFQ/bO0yXBTP4LfvS6zrx
a3xE/N2wWf+vrjq28rZxLR6xd7guK2by2/Zl0HXm1/lIVMIW/X+6GtjG28W1
KGDviHgmYhZP4A5dF37DPCqeb9jq+uO6N7Cdt49rkQQZ7e+qv2keHc8NbLP/
hK4mdvAOeBRJcaf93fS3zGPi3GO7/Sd1tbCTd0TBuMbekbps+IUnw1267vy2
eWycMexw/Sndm9jFO+GxeA17R8XzCb/y5Lhb14Mn8AV/DTtdfzqeudjNO+Nx
pEAm+3vqk2Acr4Zd9p+Jewx7eBcUQkrcY38vfVKM569jt/1n+dvYy7uiMFIh
s/299ckwgVfHHvvP8TrYx7vhCaTGXmvn41mN/bw7nkQa7LN2Ie5BHOA9UARp
sd/aRf27OMh7oijSIYvP0EefHF/G8wYH7L/E6+EQ74XS8W8RL4T3zGtkr3ge
xO8tR/Ps+I2nR1ZdX54CE/kbOOh1L8ezC4d5bxRDBtxrfz99SkziNXHI/ivx
fjjC+6B4nFNks7+/PhUm81o4bP9V/j6O8r54Os4p7rN/gD41vuJv4oj913gD
HOP98Ez8/e0do8uB3+PcIrvuA54GX/PaOOr66/E8xL+8P56N82DvWF1O/BHn
Fjl0A3lafMPfis+m+4rnxwJ+zOvdMDfCf3wAnovzYt8Xulz4M84xcuoG8XT4
lpfjs8zF4qzF9+Bfmx/CwjjrfI75+fis3uembIzj8bextsD8gflF8zRz4fgd
zWtliTiD5nHmNjJ3vIdcJv+K54z5d3Nn+axsKjfLfjKT9VzyQ95Spo97VS6W
3eL/ZtbLy194B1k8vr/cIHvLOvGbym94W/lwnGO5Si6Ke9I81/xC/Ga+1y3Z
BCesDUQZ69P5EygZ9wsfb86D2XHPIrfuI54B3/O6OO61bsd3wUk+CKXinkUe
+wfr78AP/J34O+m+5Y9gcdz7fJ65NJqZt8j+8oTX/R+6IXS1
           "]]}, Annotation[#, "Charting`Private`Tag$171141#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, Annotation[#, "Charting`Private`Tag$171141#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526959821353`*^9}},
 CellLabel->
  "Out[412]=",ExpressionUUID->"ea428eb6-18d2-4cf8-873d-7455c05df35f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.72398029377999`", ",", 
   RowBox[{"-", "0.08798988726841607`"}], ",", 
   RowBox[{"-", "0.4211830985613776`"}], ",", "0.5552371745923051`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.864152696008127*^9}},
 CellLabel->
  "Out[414]=",ExpressionUUID->"33df6091-55be-4834-87e4-28c45d195ba8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.95785825006351`"}], ",", 
   RowBox[{"-", "4.514045120977495`"}], ",", 
   RowBox[{"-", "1.3303677088549786`"}], ",", 
   RowBox[{"-", "1.3303677088549786`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.864152696012126*^9}},
 CellLabel->
  "Out[415]=",ExpressionUUID->"fedc81ae-216c-4f1a-b6f1-66b303a7c444"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", 
    RowBox[{"5", "*", 
     RowBox[{"2", "/", "3"}]}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", 
    RowBox[{"{", 
     RowBox[{"0.72398029377999`", ",", 
      RowBox[{"-", "0.08798988726841607`"}], ",", 
      RowBox[{"-", "0.4211830985613776`"}], ",", "0.5552371745923051`"}], 
     "}"}]}], ";", 
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.95785825006351`"}], ",", 
      RowBox[{"-", "4.514045120977495`"}], ",", 
      RowBox[{"-", "1.3303677088549786`"}], ",", 
      RowBox[{"-", "1.3303677088549786`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "K"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "K"}], 
     "]"}]}], ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]New", " ", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
    RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", 
    RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
    RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
     RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
     RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
     RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636127929494734`*^9, 3.8636129048647366`*^9}, 
   3.86361309340853*^9, {3.8636132740148587`*^9, 3.8636132890980425`*^9}, {
   3.86361367016436*^9, 3.863613704067534*^9}, {3.863614005426304*^9, 
   3.863614044030977*^9}, {3.86361407671554*^9, 3.8636140789588237`*^9}, {
   3.8636141197098103`*^9, 3.863614156970913*^9}, {3.8636143059493403`*^9, 
   3.8636143423397207`*^9}, {3.8636146524377003`*^9, 
   3.8636146681296897`*^9}, {3.863615502417285*^9, 3.863615703473082*^9}, {
   3.8636161037482653`*^9, 3.863616122815179*^9}, {3.863616300467451*^9, 
   3.8636163404706755`*^9}, {3.863616379759131*^9, 3.8636164322373734`*^9}, 
   3.8636164758294525`*^9, {3.8636165064106874`*^9, 3.8636165068755407`*^9}, {
   3.863616588161584*^9, 3.8636166296943207`*^9}, {3.8636166641123295`*^9, 
   3.863616732677436*^9}, {3.8636167693047395`*^9, 3.8636167704293804`*^9}, {
   3.863616826318534*^9, 3.8636168556931543`*^9}, {3.8636168995821395`*^9, 
   3.8636168999240313`*^9}, {3.863619302411866*^9, 3.863619416136552*^9}, {
   3.8636195563387823`*^9, 3.863619570937121*^9}, {3.8636197069376936`*^9, 
   3.8636197273581724`*^9}, {3.8636205744286833`*^9, 
   3.8636207335498743`*^9}, {3.8636207658335643`*^9, 
   3.8636207659625244`*^9}, {3.8636208211778917`*^9, 
   3.8636208543832893`*^9}, {3.863620930334037*^9, 3.863620936617031*^9}, {
   3.864135467525829*^9, 3.8641355031932845`*^9}, {3.8641358508757644`*^9, 
   3.8641358994820337`*^9}, {3.864136005621681*^9, 3.8641360284712887`*^9}, {
   3.8641361588251004`*^9, 3.8641361878597054`*^9}, {3.864149523908724*^9, 
   3.86414952549721*^9}, {3.8641504554392495`*^9, 3.8641504662587476`*^9}, {
   3.864150523008383*^9, 3.864150605221774*^9}, {3.8641506500782566`*^9, 
   3.864150690388214*^9}, {3.8641515284209967`*^9, 3.8641515289998107`*^9}, {
   3.8641516589627523`*^9, 3.86415165924166*^9}, {3.8641517275125647`*^9, 
   3.8641517616755095`*^9}, 3.8641517984915934`*^9, 3.864152052785297*^9, {
   3.8641521525610065`*^9, 3.864152184609634*^9}, {3.8641524131266785`*^9, 
   3.8641526257358713`*^9}, 3.864152761298999*^9, {3.864153148514683*^9, 
   3.864153171941102*^9}, {3.8641532143853645`*^9, 3.8641532502927427`*^9}, 
   3.8641533364128733`*^9},
 CellLabel->
  "In[602]:=",ExpressionUUID->"539af9eb-2787-4ce5-94ed-3f323d9493e1"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 604, 59, 17529352468810137808, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.864153217770268*^9, 3.8641532216210213`*^9}, 
   3.8641533374545345`*^9},
 CellLabel->
  "During evaluation of \
In[602]:=",ExpressionUUID->"c08b8a95-072e-4fed-b1d5-c760de6c247e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJzMnHs0VP/3/wfjLrpKUUl0IVRCqeyTkFQqSVKkQqXIpSi6UKGrLiRKonJJ
iEiSvOQuuV/HbYZxv5sZYxjD73x+6330/b3X+q3P+v3365/Wa5mZc85rv16v
vfd5PvZeefqSqR0/iUR6I0oi/ed/StaU+s1qd93nis9ff2Q1Iv/qz61Dw6kw
f9vpM8JSFDT/JyPNsjIfCja8/3GstwndPqnmvVSzAhQ4DStlT9FQS++7+QP2
taDBP3FvdB4dZbX5DbiJNkG4wqlhl8FOdHXLx/dNSjQQ+LHOTsm+B1WnFVy2
mGkH1fyl3l6dfYg2kXvdv6QTMiSefFFVHkQvRDQNgs72QL3ehXPYumE0p8xq
49S2fpjjrL7EImQEqZ2cbNlJG4Ty4BPqOddGkbflD1rYthFoYFU7Z+5ioN82
R2wN34+C+Eo5sXpBJurdt66olcGAmPnjAc8jmOj8QsrPD9YsqPggsHvTWhbS
y+KU5eaOQUPwt2L+Byw0vN80u3LuOKhMzH+9JJeFeOn+u+Z4csCiJtOC1sBC
NNHxaO2SCTijEq3jksdCilp6YU+2cMHuPkWk6wYL/dLnxWNvp4D3NsrEmp+F
Nm1lvKEN8iD3eGii0TEmIovmyidazMDxcgX+gJMMZE7t2vn1CAkLnqNwcfPG
UWSuosiXzSVhvVPvN3IeDiNhuwP32z7zYS7pi8qj+/vRu2cvfSaP8mMf7rTw
39DtQUOfSvWUJQUw12v1CjTrDmT/7cczoV8C2NqhN9c8TdtQ0deCg41nyZja
YZlK+SgqaopEDXlygpiG5Ls7gdI01OBdWxGdL4hVORk3HNZvR3yH3ptrXhDC
jlm84Hxu60RNkiejGpcLY9JBdsXG2X3oLdK29SgQxlLdIx40+Q2jhdbT/crX
RbAeRamhZWsZyG24jV6rJIp1V21Oz8Kff9rlxnnVP6LYcs+ovHLnMaTTLpT+
2lsMs+ZTWbAvj41sDBLc+daJYzKq+mbclaKYdvDO6RvUv2OdhscLYp5LzI7X
zBkPKdw6Z3acr27SPT30d7zfICdKNURydsy/b2hURFdqdnwWExHmjv4dNwWu
MGTsmzs7XlEy9iEu7u/YP61778jwB7jP14cJ7KagC4eVFnxUzIbIp/wptmKN
SDwrpqlwWQlM3IpSW6jeihrNIXj+XgZYX257E2zORB838OX+imVC8IYtMT96
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
k2oFQo4lk7Fp4yR+khUVTQZJhDlPfAEf7GJNHB8FsdJ0PqtbcOByjIL3F/x5
hxNa3LUsyFhAkP8Brd9U9H0vqblMXBBz/V77RYlJRUpNcteT534DIc0F826v
paDAtY3bP4ZywLmHavUZ/36fuN/+iqtkrOiCxb3zvlTk59W10+6pGDbnZOZq
cTobRWioVQ40x4Kxl9/F1asoyFtQR3p/N37ex2zyMcDvl+Vz+5lBNRnjd3ac
msLn+7t7x4aB4jDwfxF6QjOCgkqmvtYyBzmQ5T5+xB2fz2HDu8Ni0WTs8XCZ
+AgenzMWjeW5xCXDec2iZe64f9a3ER5/vZMD10KuVR3H7090ekCneD+ej3xv
s5XqpiJOpreGN0kQq0lVefe9koo+zze6X5bLgXwrP1E6vv4urvMNd3xCxppk
fG8uwvdj/+4fEy5RYtjmudc/KcwZRznqj1R7ZBKhLSyq9J4QBbV/ifC7vJAD
Zf33mtbi33d/69Pe3kvGHiyTbLj2GvdX2hWXRyPeg9PimQv1RyjI1fYOFptJ
xop9zYbUTlER/0JFt0tGqXBE4E+SuygFfZjjdDbXiQM3pCoON+P375nkjIxG
zMAH5PbdpjUihbgBznfjr2BTntB8C19vS+1k5LO4+YCJmR5un2jCP9+Rfzd2
FMR3TG1xF2EiYQkS7TGHAaMblAJY75hobuAyna22LFg8k+FCUmYhH8UsIU7R
GNjuY7xf9xDPT1adTHSXHof2LupEHu6PMPdFg4ducaDujfTxVvx+nmn9ERqs
wP3VoSWNmfjfrRV8bZR1uRC0cbO3/XV8P8v8Wu/1YQpsRq3LFUgs5HKdV/2Q
yYMl9aV3R48wUaPGgfkTVjMwvU6Nfuw4A/nV0C/utyBhfhH5h8XWjyJxhzCs
2pIf8zD81nxTrQfJ2Yqmjs0VwEwvf34Re7AD2dC/0SJzBTAZqTlht/a0oauh
XZMJDmTsidnRgK1vqch84q3NuRWCWNx28q47sjQkkz4gtqNIECNHx24yOdiO
ONDaL+AkhGnUuTX+YHYimUbzTSbFwli6xPafqq+HkeVAy8vKmyJYy7uDPkc3
MNBNK87OS2tFsZHnc3epirIQevlNYaZMFNu6ZZGkhfsYKvDiO7DjjhgW5MZa
caqYjSTc3b5dehkFkXlya5UwCkrP2hUhaZoNjAUF705JN6LC4fpG50QmoGNp
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
mqnz0q27lHrg3+/viPoywd3arRvwvO3f78OI+i/16vZvttwuIOqz0lLSXovx
dQNRXxVyulhfD1+PRH2UfKWH4M+D+Hr61/uZIpkvvMmzt6A4weuUsXg3EPVM
W+RH5t/6j33+qVc6UH/puQBuD/eba6+OHXoOnuG6zu74eiLqhezaL839MLcb
iHqgGg317ml8vfz7/QRR77Pqjx97UBG3zz/1PieCT2mwfLqBeH+x/ZQTtyqt
D4h8fJtdlP7tCSnsv+XTRH2KXKfFO4PeLiDqU8RE1wkfb+yB/5YvEvUbVXRp
XXH8+0T9xmme/1LLpT3w73yLqK9YmSm+x2h5N/w7f5mtf1hL/sqb7gKiPsHi
13XrN7wuIOoLhJJjopbh9iLqA+R+v+pyNe6Gf8fT0XJmkTMqniBZK7G+S6ob
CJ6/N+v1Pcoovh7+4fWfvu0RyMXt5TQzN5LN/wwY+cfuL2R0AcHLOy9513RF
ohsIHv6uHM2Ph3/+3/EkwbOXrdrTsmYQPz8m3nwabg6B9VDUOdKJrw/+vM7R
4kfwu1FugzinCxic9Zvc4iLhtL56Tjj+PDljXOF+mXDYeC+y7gY+vsmDA6yI
QPDn02tYhP8e//hxmrPRB1jL9/uoVlcX/N/io0kblys38tpm4yNenMA8w5K2
2f5t8W+LMgOiR2f7t+VuWcOdVmHN9m8TWxN9I43MmuW9XxUu286XzpjlvYXl
73hG7B+d5b0t1q9uCk8YnuW9VU4buhxZ8Ld/27EdKavHX/bN8t78Fj8/xxZ1
z/Len08rX2kb6Zjt3/Y7X97wmmj7bP+2zCrr9WEfW2b7t33e6hFa/rB+tn+b
Ic/zw60fFbP92xKvbOdcfZQ727+N47DDQuhHzGz/tn1xgtM++1JmeW83/5jA
fUrFs7y3fp6Sf29E7Szv3UjLEm46TwUiPrq4PV9DM78DiPgosn299aL+PiDi
I27i4Ou5n0aA4L0FvvdzJVuYQPDeNyt8rE2r2UDw3tHpITctZ8aB6N/Grdq/
mlc6BkT/NtYpy0vjN4eA6N8Wa9WsslatBoj+bTNhJ1s1s//2b7N5seebeB9z
tn8b3YTXUik+Ndu/bfGY1Mtht5nZ/m0nWGRhR8np2f5twt3hb8w/Tcz2bzum
9+PBn96//ds0xVjD04qjs/3bFizZqta6ePD/e36ciAdFNm2tdMn7Ntu/rf/y
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
fg==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{608, 541, 544, 968, 840, 735, 658, 607, 579, 2454, 
            2457}}], 
           PolygonBox[CompressedData["
1:eJwVzzkvRGEYBeDLUFHY90gQIRES0Sjsa6/C0KgtsRXoKBT2hkIisRcSJVrG
+A0Y/oFdhcZziyfnnO9t7i0bmegbTw6CIIllSoxisrmOBEE79/oK/TRx762f
d/2ASXK48dbBg77KAM08eBvgQz9kilxi3jp51NcY5MUeJcKF3cKjPsinfkRa
iu+xy5m2f+QcGVS6HcuY9zx9W2+VtbJOnss8t1vZRb23RPjPcjf8X7luJ8tF
u1EWyip5Kntl1P1VH6PBTpFlcj/8H3npnim37CZZLWvkWfgtbgkZ5Usv9b6n
H+vp+qpewYz9K+fJ5NbOd98J/4N8Oy67edI3iLgv2UUM2W9ynFSu7Daewhvf
+gmz/NkLZBG3C7jTe3jWNxnmH5gIQDA=
            "]], 
           PolygonBox[CompressedData["
1:eJwV0UlLVlEABuDrkDnVwlRQrFArzNSc0loELWrR4PgTKk0NFBt2qRVUq1pk
kJYQKESLbNQMmtY5119wyqWlm3LoOYuH933v4X4Xzpd7vqOxPTaKohhGyTa2
jCa5EhdFnSTyyY7lnV7Od/0GG3oX6Zy25+QF/urDFDNl1zCvP2ZbfBTdsXNo
tn/LKyTx2U5z/lA/SJz9XlYwrnexqXeTwRl7Xl7kn77Xu8/0V/oO/b6+jxJ7
WtayoOc4G9D79AT9rn5M7pYF8oW85OyPvEqlZ8kyTw7Kk/KL812y1z4uC2WR
fBnuQsY7HwnvUmpP2Fmy3z4hu8Nd6z1U25nygHwuzzpbkE2s66/Z6eyBvZ/D
9oysY1Hvp4VV+xopfA13zah+hEm9h3MshrtnQ39DKbN2PUv6E7b73j17D632
mrwefsvzVJkvh+Qp+c15unxkHyLB/iCrmNJvUkMZPzxr4Jf+lLbwLcbCPTCt
36KWpfA/sKm/pZyfdiPL+gCXSeSjZ0eZ0W9TRwX/AYTdV8Y=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{540, 541, 543, 2453, 2455, 631, 680, 757, 862, 990, 
            578, 606, 657, 734, 839, 967, 537, 630, 679, 756, 861, 989, 
            577}}], 
           
           PolygonBox[{{510, 542, 511, 795, 900, 1028, 662, 739, 844, 972, 
            556, 684, 761, 866, 994, 584, 635, 712, 817, 945, 513, 698, 775, 
            880, 1008, 612, 661, 738, 843, 971, 555, 683, 760, 865, 993, 583, 
            634, 711, 816, 944, 512, 611, 2456}}], 
           PolygonBox[CompressedData["
1:eJwV0j1Pk1EABeDbyoDVUjUhGoyhTQhGA4sRFKpIHIyj0oK7kx9omdQRgkJh
0cXFpIIJCyYuCIOfFH6BAqV/QVt1VDd47vDknHNv3rR909zt0sjDZAghwQId
xkny3GKeOsMHQqhyTB9kjDl2ueJ8naP6BG/4E593VmdAXyOp36fJqF2mxpD9
lSP6Jhn9Cf8p2Tk5T6olhEX7d/x8e5eL+mn5Ij7vftVO6PdoULRPyCkS7mft
V3qHvqNf1r+Q0d/JXuc9cki+lO1yw901uWR3yTbZLx/Lf8QXeN1e1s/IrByU
c/KgXHB/VVbsU/KXfU6O2jUu2G/lWWfdMi+fx+8k37tb1LN6kHf5ScH5cTlJ
cDdjb3PJ/kybXiWtP+IvD+xOWabVM6/tJkV7J/4mfYU97tg/GNGfsRX/E/Yn
0vo4FRoUnG3Tp9/kKd/j/8TZRw7rh0hxnhtM840B9x/ie9L3Aed0SD0=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1WWYEGUUBtBd6e4OXbpLSWmQzqWkOyWUlBITW7EIA1tKRRAQ6e7uVhER
sRAbRDn38cfZ+9477Mw338ywSf1GJY9MTEhIuOFH1Ml+ZGWt/ACfy224Lrdj
vlyHy/JRdRiL5K1qN9Jwngncbj5TLcslTugPqYOZI29QO3GFW/iCsVzjHseX
qE34nl/1J9QR/MFy/S61N1fJyAUm8k+cz/EpajYusk6/T+3PNHmV2jb+rdye
BXLduJb8Idvk7qTlDv0stRwn5VcZzlJ9U36TV5CCqfrsrJcfJJmqpCQVqUlD
WtKRngxkJBOZY9/9fg42yA/RgWpkYZp5TjbKD9OR6sw2K88p+TVGkDXWYJaL
TfIjdKIGc8wqcFp+nZFki+uZ5Waz/CidWaivxw/yR9SMPdBX5Iz8BqP4VN+M
3+XPyB5r1Odhi/wYq+V23JC7sEiuz4/yx2yXe5COWnEvaiXOyofVIcyVN6qd
ScGXjONe82Vq81hrvCf6k2q84H+yUr9b7RPvE5n4hkmJ/7//OWKP1Lx8y1b9
fnVAPGOm69eo7WO9/Ks/o97H3fHeqA34ST4W7zCL5R1qT9JzZ+y3Wplz8pts
kruQMs6lX662iDXH90fOeBb6fGyTH6drPAt9Q36WP6F2PAt9lfiW5LcYTa7Y
e7P8bJefoBt1mBvfaeyh/DZjyM10swLskJ+kO3VjvfE98JX8DmPJE2syK8hO
+Sl6UC/WYFaV8/K7jCNvrMGsELvkp+lJffLF9cwLs1t+hl40ID8FKBjXcPxW
9sjP0puGcQ9m1fhafo/xFIprmN3GXvk5+tAo7sGsOhfk95lA4biuWRL75Ofp
G++nvhFX5CU0jnvS14j3SP6AzfEukIr79SvUlvwln1JHsUreo/Ylc9xH3INa
hP3yAXUgM+S1anK8U/ynP6uOjvPRT79YbcxlftEfV4fHN8hS/U61VxwjQ+xL
rIvr3BV7pNbkOy7qj6hDmSdvUbuSOp4345kY37bair/l0/HdsVreG2siS+x1
7LNalAPyC6yTOxB/aPrHOxtr4Gr830GTeAb6WvH9yfOZRFI8A7NiHJRfZABN
KcIM8+Ickl9iIM0oSrG4tmMlOCy/zCCaUzzOZV6SI/IrDKZFPMv4VrkkL2Ay
JeL8ZqU4Ks9kCC0pGec2L80xeRZDacU8s9qxx/JCprBS35pr8hpKxfX1ZTgu
H1QHMVter3aM75xEzjEm9p9hji+jNVMpTRvKUJZylKcCFalEZdpShZvUFQDC

           "]]}, Annotation[#, "Charting`Private`Tag$233691#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nf0zWUcB/Drh+yZHRmVZGUXSYio7DIizskoIXsUGVllhcoe2ZTRMJI9
U9kzs3OShJCRIlGvz+mP13m/P89zrnvv97nf70/B1l0adU6WSCSyJSUSk9Mk
Em1kgs+TJxKl2KH3pRY/mV/hpr6YYuw0P89pfQJtuWLuSirWmJPxhV6ab/V+
1Oa0uTW39CUUZ5e5Dj/rE0mRIpEYar6Pf33Qdtau6t1IzVpzEl/qZfhOf5s7
en+y8az5Z9mGv/WllGC3uS5n9Emk9F7DzHl51XxNdicN68xZ7X+gP0Jy83JZ
lu/1/tzVB5Cd58xnZFtu6/m99mN9mZ5BH6M/SEnzHlmPX/S89qbrk/V79OF6
RZlPFpGL5Gv2rsselLOWVhaSc2QNud7+vfJD85OyqCwul8S1kCnsr4jXxhmb
d5pzyynmqnKA+V99II+Zc8jCckGctb1fZDv+0T8jo733zQ/xqHmvrM9ZfQrt
+cPck3RsiGvNSr08u/SB1OFsXHvuxG+QUuwzN+BXfSqpvN+75vt53XxD9op/
y3p6+YCcK2vKjfazyY/MxbjHvEpWYLc+iLqUZr+1hpzTp9Eh3ouv4jqwR3+H
evwa58Dd+G1ThgPmRpzXp9OR1Ky29jh79cHUpyx5SMPXccbs04fQgHKkJR3p
WWO/Evv1oTSkPAetvcAFfQad4vfFWmtPcEAfRiPOmdvHfRT3CxU4ZH6R3/SZ
8Xldq/fM+XnD/KfsTQY2xVmzTq/MQX14PC+8ZpA5Z3wW8/k4FxIUsDdLLree
SR8bn0sWlkXlp3Ft7R2WjeMetnbRnE/OMFeP+yaukxwR10AWiHtQfiJry872
/9L7xLmaM8a9JefJZ+Rm+9nlBHMVWVyWkEtlJnvr4z7hUJyJ9an6u/Hc0t/R
c8U1Ml+QHUjGCnNm++P0h+N8zUdkEy7ps+L87I80F6SL+aZ8M96TLfF6NsRn
4rD+Ho35zdyRJFaaK/KD3pTL+my6koWN1p7iiD6CJlSKZxWb4n7mB30kTXmC
++L5wGZ71Tiqj6IZlTlqrRm/63PolvT/34ctcR4c00fzEk9yzNpLXNHn0j2u
N1utPc1xfQzNuWjuRHJWmatwXG/OVX1e/OZdt1HmQvQw35JvkTmeMfbmy63W
c+gT4/vLErKkXCZz2Nsma1Da2on4znJafN94VpmT5OA4N5k7zlAulLVkC/uX
4vdP2XhexhnK2fF95Fdx7eX4uA9kkXi2yMXxWeydkC24pt9vfaY+P+5jfXQ8
n+hp/lv2JQvbzDntT4rvEfeSebusyUl9LMntDzHn4WXzZdmZlKw2V+Vk7HFd
X0Avbpv7kZXt5lx8E/cGp/RxtCQv1ThlvSV/6AvpTW52xPXhR308rajOj9Za
cUNfRB8m+b/Ef7tp+kk=
           "]], 
          LineBox[{2453, 543, 541, 544, 968, 840, 735, 658, 607, 579, 2454}], 
          
          LineBox[{2457, 608, 1007, 879, 774, 697, 580, 991, 863, 758, 681, 
           632, 545, 969, 841, 736, 659, 609, 581, 546, 547, 548, 549, 550, 
           551, 552, 553, 970, 842, 737, 660, 610, 582, 992, 864, 759, 682, 
           633, 1020, 892, 787, 710, 1048, 920, 815, 1071, 943, 1098, 554}]}, 
         Annotation[#, "Charting`Private`Tag$233691#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0FkrA3AAAPC/8rKPsc/DHMPc1/a+ecADZYqiNYoiOXIUNckRNhlFkRw5
c38ZPw+/L/CLJjPxdEUIIUVVZQinrJLnkUNGuGWXTxZ5ocgP/VxR4IM5njnm
mwnu2eeLZd444Zc0F2zyzgxPHDHGHXss8UqJIW7YYYEcDxywQjVl1pgiywDX
bDPPJBku2WKWcYaJccY604wySB811FJHPXEaaKSJBM200Eob7XTQSRfd9NBL
khTnbPz/RkL4AxfmPPk=
           "]], 
          
          LineBox[{2459, 1143, 1222, 1195, 1175, 1161, 1137, 1218, 1191, 1171,
            1157, 1148, 1124, 1214, 1187, 1167, 1153, 1144, 1138, 1125, 1126, 
           1127, 1128, 1129, 1130, 1131, 1132, 1215, 1188, 1168, 1154, 1145, 
           1139, 1219, 1192, 1172, 1158, 1149, 1224, 1197, 1177, 1163, 1229, 
           1202, 1182, 1236, 1209, 1244, 1133}]}, 
         Annotation[#, "Charting`Private`Tag$233691#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4VGUUBtChW1pSGhQUCWkQlJKWVEq6GxMVE+mwBRODVlARAxSU7m6V
bpAuSV37x3red+97zzdzZ865BbsMbD4gSSKRyJo0kdiTPJHokjKR+CdFIvE2
j1KUcXZ38qv+PBkZYk7KdL07VZlkLsRKfTh7ndfVfFp/h6YUY7xdDn7TXyBT
nGtOxgy9B1/r5flTr8aHemFW6SPY5+xu5jP6uzRjivl+tup3M0HPyUL9Rebq
1TigZ47X1pMzU+/JN3oF/tIf5CO9CKv1VbI5I/VfZE2O6dtkB/Z7P93lWbv3
WKg/EtfoU2Up9rLNvFa24gT3mN+UueJ1WWReJpvE+Qw1/yAf5GAwb5bt4nsi
S/xtMkV8VswyL5YN6aXPlhX5W6/Ox3pR1uijmK/X4rh+wN/QQz+nv08LivOW
XW5+118iK0PNKfla700NDrr+EIc5wlGOcZwTnOQU/3CaM5zlHOe5wEUucZkr
9PQa5539AS0pQbZ4H/ap+Ebvw0N8Yi7GWn00V13fy3xBn0grpplLs12/N+5z
PQ9/6C8zT6/OIT177PTUzNaXyEb01efISuzRN8o2PKx/Ku+OPevMq2WL+HwZ
Y14ga8f58f2bt8uO8Yzwr/fbW1603yUnyUWyHkd4zDxdlmEfO8zrYs998YzJ
vCzWl8tHeUX/UdbgsL5Fto/nWX9FpmGO3o9v9cpxn+o1+SzuT9brY7nm/fUx
X4rnkccpGc+f3V0s0V8lR6Q5Ld/q/anFddf3tbsczxatuZ+cvGafju/0AdTm
ht/vZ3cl7lvaUIpc3PSz/n52Nb532lKa3Lxun57v9YHU4ZbfHxCfcXxHtKNM
PKt2+Vga74E8DDNnYK4+iLpMNhdngz6O284baL4WnxPtmWEuy069bDxDen6W
6StkU17Xf5IPxXeq5+UN/Q5+0JfKxgzWv5NV4rvWN8m28T9F/1yWYKO+RrZk
vP6rrBPfMyfNO2QnzvCf9ztIXrffLSfL32V9jvKEeaZ8gP3sMq+Xj8dZsY9n
UBaI/yUsN6+UzRim/xz3f5ylb43z4p7Qh8uMzNOf5Hu9aryGXo8v9HvZpE8g
wWDzjfg76UA58jHCPhM/6k9RnyRxrt3NOIuOlCc/I+0z85P+NA1IGtfa3ZJf
0okKFGCUfRZ+1p+hIcniWrvb8is6U5GCjLbPyi/6szSKM+NZZLP+JsnjrPj8
5RT+0BvQRZ8ly3GA3eYNsjWnqGSeKAuyIu4RCjHGnI35+nM0JkW8vl2CqXpX
KlOYlKQiNWlISzrSkyHOcE0SpundqEIRxtplZ4E+hCbx95tLskV/i9/0uvF+
9Z2yM2fjXjb/D9qMHRY=
           "]]}, Annotation[#, "Charting`Private`Tag$233691#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8jmUYhvHXyJbUx95ESWVlbyG7jJRCaNir7JW9lVEoO0VUoihKlFVK
JMnIHqFS9h59rz+Oz3mc13P/3vf1PPf9yNe2W+OuSRKJRKukicTZFInE/lSJ
RA1sTZlI9EJFZEqdSAwyuwtL9Ry4xV/GGT4NLVHQuolmmbBWP+fzDvCa+Fnv
jUrIbN1gsxT4VM+J2/wV/Muno7I1C/VH0UovpL/BM2Odft5nH+S1sE3vg5LW
zNQLoLKeRX+dp8QyPRfu8Hb4j89AFWsW6UXxgv6A/ibPgm/1BvpKXgkXfOch
+QS2u9bUtTW8L3+Mz+L3o4qeVR/CU8Xv55vlcvMn+Kd8mCwjO8mdMrdrCd6e
95Zn9ebyO32sfEevKj/Uh8hisoPcISfJ1q4/KCfp/WVW2Vb+KMfH57jeUH4R
9wbd+G550b/psKyNX6zph1KuzdYLoqqeTR/KU+MzPQ+SmHXQz/F30QaXfNYR
szrYofdHNeTFZdeu4CqOul4Xv5oPQHXkwzXXjpnXw059IB5HfiT1fR3Nz/OZ
aIvr1h83q4/f9EGogezWDjNLg8/1Akhm1imeIZ+FF1HYbLJZNqzXb/i8E7wB
dumDUdqaOXqh2Mex9/XhPC1W6LX1ZbxsPHs9ud457it/jq/ns+M+8MW8OF7S
H9Kn8AEyu3xR/iQ3uPYk/5KPkFVkd7lHTpE3/cY/eUP01H+3/mn5jT469rte
Rs7VB8kH4lzJbXKirBXnTY6IfSvTxb6X38uVrtXhy3k5dOa/xT4wv4t34Zf4
83wDnxPPji/hJeJ9oBfRp/Ic2BjvCb/3JH8Su/UhcQbiLFo30iw9vojzjRRm
XfXLfC5eifeCvz9l9hT26EPjnsc5jbPs2mnzRtirD4vfH+cgzhL+Mm+MfXw4
6sYzR0rf0838Cp+HdrGf8bdZE/zBR6BePCeksr67+VU+H+1jP+Ifs6bYz0ei
rHXz9AdjT+q59VH8bnwZ9wapzXro1/h7sb/1j/SScZ71h/W3eM7YJ3yr3GT+
FF/FR8qqsofcK6fKZK6f4U+jl35AbybX6mPiN+jl5Hx9sCwc70C5Xb4hG8SZ
lqP1fjKDbC1/kKvivvHPeHl04bvkw+Zp+Kv8Om/BN/IFcQb5x/wxdNQf0d/m
ubBZb6Sv5tWQXP9XNsNBPhrlXX9Pfyj2ebw/9DH8HqyOz0Nas9f0G/x9dIo9
iv/MnsEhPibOEh5FOut7mt/kH6Bz7DecNXsWh/nYuM8oGnsE58yb4wgfF78b
xWI/4Lz5czjKx6MxiiO97+llfosvRJd45rhg9jyO8QloghK42/re5rf5InSN
32s2zSw3vo/7jIu8BY7ziahgzQK9SOxBPZ8+lmdEG75FfhV7mH/Oh8sKsmu8
M2K/uZaB9+F95B29pdykj4v/Z/Sa8hN9qCwVz1L+KifH+Yn7JKfrA2WeOP/y
Zzkh9k7cE/mVPkpWl6/KffHudO2SbIkT/BnzdbEXeUX+fuyv2M96fn0cvxdf
6/X1Fbxi7C/9Hr0vT2CxXktfykvHezOelz6D58WW2Ae4zFvhT/5mnBUUsG68
2X1Yo5dCRrN+ehIs0XvE88WVeGfiJJ8Uvx+l41niapwdnOKT8SzKxL3GtXg2
OM2noDlm+Y7/AcYGMa4=
           "]], 
          
          LineBox[{2461, 1848, 2322, 2170, 2050, 1963, 1906, 2353, 2201, 2081,
            1994, 1808, 2298, 2146, 2026, 2392, 2240, 1939, 2365, 2213, 2431, 
           2093, 2408, 2256, 2447, 1882, 2340, 2188, 2068, 1981, 1849, 2323, 
           2171, 2051, 1964, 1907, 1809, 2299, 2147, 2027, 1940, 1883, 1850, 
           1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 2300, 2148, 2028, 
           1941, 1884, 1851, 2324, 2172, 2052, 1965, 1908, 2354, 2202, 2082, 
           1995, 2387, 2235, 2115, 2419, 2267, 2452, 1818}]}, 
         Annotation[#, "Charting`Private`Tag$233691#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 4.166666581632653}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9},
 CellLabel->
  "Out[606]=",ExpressionUUID->"e55e5c54-ab2f-4863-91d2-7288f73978b1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
sr0fWHyy4e4vnbsK8P7/jy++vrpKQcG6H1h87xqw6LTB+8Pibw+f1L9KPYr3
/3+87IiM1hev3f1QrLezVvTSddDZGstU+6///+NHH6tuN3qp1A+3BPh2MIwf
gEGwIbcX3t97TDCcig2B6+e3U4zU+4Fl/+RLNL95Fnez7d9ZkU2miiFt7PpG
OWFPfzY8G2HXNyqt5Tz7wpfKrm+UfGCN9C3RMTZ/WXt92eiRH0Ns/nLqCdO8
RaOfzV8m7yuJ0vb8x1+u4+ST0m/tZPOXzKeXOTpftLD5S2OJq9VGpvVs/lLm
6F66sutvdn2jUMnR5QJ7itn1jdacPPB5F/d3dn2j08s/+F3i/cyub6T0JL/M
ZiiNXd+oSB39mu5KZdc3EvsWekTjQTq7vpG2xg7NNwLp7PpGnNIaGRo3k9j1
jULdG1/G3LvIrm8kqpan/qAsE1j2r6O3PoUnsgRY9k+wQX/5s9Z6YPGXq2cO
7MqjtgOLvzy8YgfoqODnyP/xl7JEifcViwPA4i9bl/0REkgaAlZ9I0lNtzcP
7SnAqm/kpWjvuvClDlj1jZ4u6w33bWhg1zf6IzUSEdw0zq5v1HdExCtp2QK7
vpEql1CoyRyhgMV3/t4CtZeKOApYfCe3Qc12ohRHAau+kdaLlUlZyoQCVn2j
kDjOjc0ShAJWfSMZ2Y89m05xFLDqG+3wY/4wqiKy6xt5Oo26BvLzsOsbJfb5
NpM38LDrG2Fv/V646Pyrb/Rdaf8nZQsedn0j6q8jT3qNedj1jWa7VB17VXjY
9Y2CF8oPpYvxFLD40MeyJBFbPp4CFh+q997nbIAMTwHLH52M+KPz1pWHXd/o
xxAv32X3eHZ9I3/RNZFwoZ9d38hA2uJIWfsYYvGjcmtnHo2spyIWP3pm5qnh
/YcjbN5znQJ1BKXVsHnPiIUd2mvXlrPrF/Xc+1kh8rSAXb/ovKn4Vcu7Oez6
RRGP7lbdds5ALB50aeL0wO+fqYjFg2odnbD/kZCGWDyoTFQNU2IonV3v6Nwv
yZPelz6w6x2dLQzpsCqMYtc7ellVqbc+6zWbB2Wsu6uzx/MHsHhQBXXn2+ky
1cDiPSu+lcocaaQAi/fk5/mcoGs0xOY9RZYnKzT4DgKrvtHYnZU+HwS7gVXf
6Jjnm4zzWz2BVc9odWzzw+TTs+x6Rp6bIaU2eAmNKXEs8pbw/B+izjweqv/7
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
fK7ISJ+nrsNcj/4PTTplNg==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{596, 125, 532, 956, 828, 723, 646, 595, 567, 3064, 
            3067}}], 
           PolygonBox[CompressedData["
1:eJwV0bkuRHEcBeBrLewkiJAIiWgU9vUVzAyeAImtQEdpj4RCIrEMhUSJlsEz
zAzewK5CZ6n4bvHlnPP7N3MzdaOzQzOZQRBksM4kEQocz7OCoIOkvkA/zSTd
+nnSdxmjkAu3TlL6IhFaSLlFeNb3GKeIhFsXaX2JKPf2MN/6Ca2k7Sgv+j5/
+gIVTNjvcppsqrKDIC4T7nn6ht4m62S9PJbF3i5lNw1uN3ax3Aq/Vy7bX/oc
TXahrJaHsk/GvD/oIzTaP3a53Am/R57aOXLNbpY1slYehb/F242M8aqXuW/r
8fBP0Bf1SibtDzlDDpd2vvfN8Dsosa9kD7f6Ct/6PEUM2I9ylF/9jHZuwzfe
9AOm+LRnyeXKLuVa7+VOX2WQf+FaQIY=
            "]], 
           PolygonBox[CompressedData["
1:eJwV0klLVWEABuDjgFkQmEFa2GCZ5hAotMiFllr+gDamlkKQ1sbZQFvVooJy
gKBAXNikWYINtCyn7C845VLLTaWtzKnnWzy873u+ez2Hc02/1nipITaKohg+
UUA+lS4uxUXRdTb1UTZ8aNDO5LPdxKreTCJF9oys4Jf+jHQm7BJm9Yes6x0k
UWUvyzq29HckxEfRPftwuLd7DsksvjhrZk1vYTfF9qy8zG99v+8+1p/rMfod
PZXj9qQsZU5PctarP9L/yU5Ou7ZPpsl+We3sh6znlGvb9gH5xD4r39u75H27
QB6Rx+RAeBdyy7O/Dt8lwx7z+b2yyz4jW+y/eiu59h55SPbJc87mZCV/9BfE
OrtrH+SEPSXLmNe7uMJP+wY7+ge2PcOwnc243cp55sO7Z1V/SQZf7Qss6N3h
99Zvk8xVe0XeDH/Lc0QyRT6VhfKj80T5wD4a7u++b2QOE87aKOEk065d5Lve
Q034B+RteA9M6u2UshB+B9b0V2TyzS5nUe+lNvzWjLiWx5R+izKy+A/IzVq+

            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{104, 125, 531, 3063, 3065, 619, 668, 745, 850, 978, 
            566, 594, 645, 722, 827, 955, 530, 618, 667, 744, 849, 977, 
            565}}], 
           
           PolygonBox[{{504, 152, 48, 783, 888, 1016, 650, 727, 832, 960, 544,
             672, 749, 854, 982, 572, 623, 700, 805, 933, 506, 686, 763, 868, 
            996, 600, 649, 726, 831, 959, 543, 671, 748, 853, 981, 571, 622, 
            699, 804, 932, 505, 599, 3066}}], 
           PolygonBox[CompressedData["
1:eJwV0jlPVFEABeDHzIAihISIiZFgoDHsI0soDCWyGRtqWaUCoo2EnUYaGhIU
EhowNICF7PoLWGbgL7CXYAdYCeF7xZdzzr3zMjOZKej63PIpEgRBCj+o4D1x
h+8Y55DqaBBsk6GX08wYB1Q53+KJ3s0sF+Hzzg4p03/yj3b7lCZ9lCSV9ibp
+h+ieh9/+Wg/k+PcM2Ofh++vH1Cq58oJYrEgWLFvabNPaNQzZT+3jNhTMstr
E3qFvsFjfVEWOM+XlXIy/Ezyt7s3cs5+LiOyWPbKK7rc19rzep7MkeVyTN7x
3X2NPa1nyzP7lWyyk5TYC/KlsxcyLr/KqFx2N6Pn6Dd6q35Mg54hv3DDsL3P
a32dR/o2KXoPl3TaT+Uo//lmn9KoJ8LvpC9xzQf7iHp9iD3i9hppegfTnNDg
bJ8i/S2D7Ib/E2erpOqx8HelkDoG2KHM/S8i+gNiFUlQ
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1WWYVQUQBuBFulNpZenGoFNpAQWWBqmllFpQGsRuLFJsQUIUREVQ6e7u
VkIRDEDFAIV3Hn+8O9/MuXvvuefM2U1MTkkanCohIeGSH1FH+ZGd5fIWtSfj
5cXqfZzjqv6gGr94vzxbrcMZLuh3qw9ymfn61WpHfiIdxxnGH9zl+ES1DKc4
qN+u9uYi0/XL1Dacj3PkCEN5yLFP1cb8Lu9TB7BYXq8+QCZu0o9Wc7BCfoyW
zNHXjfOSF1CZSfqyHJLfpD+pGWOWk5Xy47SiCmlISzrSM9ZrcrFKfoLWVCUD
48xzs1p+kiSqkZFHzfOwRn6KNlRnslk5DstvMYBMjDe7mbXy07SlBlPMysc1
kt9mIJnjO5vdwjr5GdpRk6lmFTgqv8MgssR3NMvLevlZ2lOLaWYVOSa/y2Cy
xnc1y8cG+Tk6UJs3zCrFPZffI4Vs8f3N8rNRfp6O1GG62e2ckN9nCNnjmpgV
YJP8Ap2oSw5ykovccS28piCb5RfpTL24l2Z3cFL+gKHkiWthVogt8kssiZ3m
mtyFuXI9fo5dY43cifTcHfdEvZNv5R1qH2bIy9W2sXtxbXk4mC9Um/BD7L9+
vzqQJfIGtSu/kDnek5H8Gfc67oNamO/Yqt+qJvMrE/RfqS35kX/1h9SUeDbi
WdB/FOfM2fgM/Z54hlgor1U7kyGuPcO5J3YontH4THmn2peZ8gq1Hal5RP+Z
2pQrcR5slLuRJfYudkK9lW3yy3wtt+I/uSvz4vPiu8R7UT/2UV+ZU/KHDONz
/b1xTeI9yBv7o7+N7fIrdONjfX0uxu/QIPZVX4XT8iyGky/2yawIO+RX6U7D
2FezqpyRZzOC/LFXZonslF+jB41iX82qxfWV5zCSArFXZkXZJb9OTxpTkEJM
cKwYu+WJJNMk9tSsOt/HHjKKwnH9zIqzR55ELz7RN+CS/AVNmaGvEbsW956V
cnvSMDpepzbjL/kbNsndyRr3Kq6lWoK98ja1F5PjtWprrsuH1SH0luerDeN8
uazfq/bnNxbp16ld4lkiIycZETsT99TxmWrNuD+c0+9S+6X6/3/TPP0qtQMX
SMux2D3GOLZIbc7f8gF1EEvlzWoPssWOxP1VS7JPnsJSOYn459dHWaA2inOW
v6RZ7J6+VjxXsVeMjWP6FvwjL6NI7IK+FPvlqfSleeyaWW3Ox31iHImxC2al
OSBPox8tKEoxilOCkpSiNGUoSznKU4GKVOKKP/Q3ALQ++WY=
           "]]}, Annotation[#, "Charting`Private`Tag$233802#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nf0jmUcBvDXjOxZSVZ2mSGissuOcwolSrYiO1IIFTKzKSNbS3Za9p7n
ZGeFKCObrD7fPz7nur737fe+z3if58jbsnOjTkkSiUTWpInEf2kSicbyloVZ
yRKJ/Kwyd6Iiv5tf5pw+jdz8an6evfoQmnDS3Irb+rfxuT5vtrkAP5k7U4m9
5lc4r08nD7+ZK7NPH8pN/T0yUNJxNrV2Sm/NHf07bvv8OeaC/Gx+l0t6F1Lx
rHmfbMwFfQZ5WW2uwn59WJy33puMvGo+LdtwV/+elMkTiY/Nj8V3+865shC/
2OvCZb0rqXnOvF824aKexd9+rs/Uk+gD9IfJZ14jq3JAz2hvlP5ZXDfZh2LW
Msmccqp8zd5fsi2Frd0zZ5fjzeXlIvMD8hNzKZlL5pHT41rIu459Xvxt3GPz
r/59OjncXEZ2NV/Ru/GE+UGZQ06Oe23vgGzKv/pXJLX3kfkRHjevldU4qA+n
GWfM7biv/8A9xzDfXITfzN2ozMG49lzSZ5GfdebqHNJHxP3W3yczr5vPyvbx
WY4jIR+SE2QFudh+KvmpOXd8v+9dIIuy2l53qlCA9dZqcFgfSXMSLIzrwBq9
B1U5FPeBy/psCrLBXJM/9FG0iHvN19aeZK3ek2oUolR8vPwm7jHr9F5UpzDJ
SE6KeI7sF2e9/h41KMJGay9wRB/NG/E7jefCWgk26L2pyWFzM67ocyjKJvOL
HNXHcEfvSxbeNP8tO5CEJfG7imchnkU26n24qncnTRyL+Y+4L1zVs7r2Y/W5
cT76wDgumUPmkl/GtbW3WdaKZ9jaMXMmOdpcLp4b8139g7gG5qzxDMovZCXZ
0v4/ese4r+ak8WzJifIZudR+ajnEXFrmkXnljHg/2FsUzwmb9PTWR8TvS78m
e5A2rpH5iGzONX1e3Bv/dpD50bi/5i2yNsf1sfEb1z8kG2+Zz8m3ScayOKZ4
FuKY2Kz3pRZHzS24rs+nGFvNdTihj6MVD7LY2lNs0T+gNsVJw5J4ntmqf0gd
SlDP7y6tXGqvLNv0ftSlJNus1eVPfTyt4/3AsrgfbNf7x+fEb5jt1upxUp9A
m7iOLLf2NDv0AdTnmPkNbugLKM0Oc31O6RO5r/cjO23N5+U7JI93jGs+SS6P
89eHxvnLvDKfnCkz2Fshy1PA2k5zBjkyzjfeVebres+4b+Z0cQ/lFFlRNrB/
PH7/FDLfNGeT4+J85MJ4JuXgeA5kzni3yGlxLPZ2ygac1jNbH6NPineJ3j/e
T7QzX5CdSMGKuGf2h8V5kNG8UlZglz6QG3ov0vOS+YRsya14x1CGXbHHX/pk
2nPR3JmUrIxnix/j2WC3PoiGtHOIZeVu6w05o0+hQ5wHq+L6sEcfTCPKscda
I87qU+nILf+X+B/PbgCb
           "]], 
          LineBox[{3063, 531, 125, 532, 956, 828, 723, 646, 595, 567, 3064}], 
          
          LineBox[{3067, 596, 995, 867, 762, 685, 568, 979, 851, 746, 669, 
           620, 533, 957, 829, 724, 647, 597, 569, 534, 535, 536, 537, 538, 
           539, 540, 541, 958, 830, 725, 648, 598, 570, 980, 852, 747, 670, 
           621, 1008, 880, 775, 698, 1036, 908, 803, 1059, 931, 1086, 542}]}, 
         Annotation[#, "Charting`Private`Tag$233802#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNw9kygmEAANCvme56ip5ESBHxyzJZsrTKUqjsa6RUPLEL58ycZLldaMVC
CJEz8RBevHJiw5GP/njkwDunthz77K97fnjjud8+WXPog5cWfbfrqRW/vLft
gZ/eemHdlK9ee+Kx++7Yt+eZVQ+d9c2OTcuW3HXOedMumDHrokvmXHbFvKuu
GbluwQ033XLbv0QI/225I/g=
           "]]}, Annotation[#, "Charting`Private`Tag$233802#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nccVmMYxvE3WioNaSHK3mWXLRo2ZRUpiRJNZUVFiyINu72MRINStK12
WQ1KIkqo7B3f64/rc1/X737Oed9zzvM859Rs1bFxhyKFQqFe0ULhcepXolDo
WbxQmFOsUKhD27GPsRVYKeqHLcSmYC/KX8s3UUX6EduOHUHj5cHG9cd6yXPl
ulSqZKGwJ3Yu9p3+J/xKvjT111+ETcVekr+RW9EBjqmENcb2lX/iv+OPpAny
mfqnYF3kIY5/mH+Qn6d3OpXWL4qdh32vv4ZfxZehG/Sulh827jj+cP5m/G3j
pvGT+K16TfQuSY+vzlfmm+jdxXfkK+E/q99jz2BHqbeqLbC31In6Z6mnyq+o
d+r3UR+Ql6tD/d4j/EP4Y/J84y9U62HT1TPkMmoxeXS4cR3VtvIPjl2rrsb2
pub4NfIjjjmeP4Jvjb9j3HT+ZX6bXmuqTL/kHNjR9Lw8zLgBWG95Qe4v7cDe
pSfoSXqKnqZn6FkaaHwf4xfmOmkn9h49R4/q9dVbhJ9Nu7D36TV8Mv4tdgtV
oeH4Y3i/PAP5nMwrbDG9nnuHb8dupao0Ah+E98/1yedmfmDrsA+wsjQAW4LN
wF7NvJPbUDX6FduBHUMvyCOzDjIf5Hfl8/JcsfXYh1g5GogtxWZiUzKn5LZ0
oHtdBbsK20/+jd/JH0sv5tr1T8O6yqMcPzjPiH9P7yK98+V6/N58cf58vV+M
+5T/iC9PN+pdKz9qXC3+yKxD9Ra9Hurd8mJ1mePe4KfiQ+UfjL9KvRSbod4m
H6RWlcdmDRh3t9pJXqTur/87vwt/Vj5ObaO2zNrMc+Hr8N3wvnyPzEu/OUQd
gL1vzPlUVq8EdgH2q/5n/Md8hcxz/eXYLGyavENul/VOf2A/YsfTJHmMcUOx
gfJi+WLnvSDn5cvxJfn6ep1ybfxvxm9QP8GewvZRW6jXYbPVQY6rnXWa61Fv
1e+p3iMvUVc4fnbWHj5M3mn81epl2Ez1drmGWk0el/Vm3D1qZ7m63p/qT1gt
aovflHWX+cnX5e/Cx/qNYXmW/BK9+lRefy+sAfa7/kZ+DV+RHtc/Qf9orI28
Uv9N/jV+l94dVFN/P+xa7ED5L/5nvjZNlsdlDWOPyUvlBrnX2OfY2uyvNBhb
hb2FvS7/KLfPfKHxWf/4IHyZ3DDXiq2mOZlb+E9Yh9wfmpC9An8cXy43yn/C
PqC5uZf4z1jH/HeamH0FH4yvyB5If2Mf0vP0Ar2YfceYIbkHWTv0D/YRzcPf
yLrBOtHBOR77BTuBXpFfyp6FDZVXZS5RBfetFNYQ+1d/E7+Or5R3iv6J+sdg
beWP9efzszKn9a7Ru1zunN/L2uHHZ67p36t2kd9WD8n/5H/Fn5NPVG9TW2Fz
1Fez36inZ5/KWs77Vu2Z9686KfspPwwfJK82/hK1PnYJvw9fmm+k35lvx+92
zBfqeqwytcSb5tqNP4k/lr8N/8S4BVkb/G96XegQ/QOwptih8r9ZV/xJNEV+
2THDsSfkD+RL6T9sM/YpViVrB1uDLcTezJyW76TDaDI+An8S/1C+jAq0Fn+F
XqWR+k/pf4RfTkVoHb4o71X8D7krHU5T8FH403lG8hW0B32JfYZVpSfk9ca9
nXsu/yl3o0Nda3WsWb5f5N387/zJNFWe6pjR2DO5V/KVVNExZbALsT3lr/gN
fDW6Sa9Zrg0/Ofsn3w7vxd+b++N876hzsb+MuRa/IvtC7g1/ID9BvV7/vnwv
yO9kv8895v/Ah+e7R22n3pxzqdP06+V7Ie+m7Gf6/dVe8sr0/e4Y/tnsJ/Ka
PDe1AdaY35ffm79Iv0v2Ob4ovkXdmPda9lP5FL3jsdvlz/JtwM/j/9a7m46i
6fhY/Dl8rdyEitHX2OfY/vS0vCHfCth8+R/5Hjo6c8Fv/ImdStPl14wbZ9xw
eV3mi37DvG/5SnxZ/mK94vI3/Cb+AGqV+5hnh5/K1+InqXfoPajeJy9VN+a7
hF+QeSL/a/x16pXZU/LcMs/Ug+SJ6g3GdVe7yu9mf8j8VP/CR+Rdr96uts4e
nfchfyZ/L/4w/2D2V785Xh2Brc8cxxvJV/OV+XJZ23ol5K38F3z1vJPl0/Rr
Y+3lz/ONxC/kd+vdR0fo18Ca5xska0H+m69Dr8szHDNBf6T8afYxKknbsM15
f2SfkjcZtyTfBfJ/cnc6jvZ0vn+wujRDnmncRONGZU5kTlMVY8pjl2J35p7n
/uYdp/ct/yV+EN2c+5lni9fhT8j7Uu2g95DaPdfu/Euzl2JPYgW1qdo4e7F6
v2OPVGvKz6s36t+vdpPfy3zVL5rnio/MPqvekW+nzF11pv4F6lny1MwL/UfU
h/L88/5RR2MbsrfgF8rX8VX5CvxleqXk7fxXfI3MA3mzY5dl/cpF6AGsFs3K
+wwfg22Um1Lp7Ff48swpfA/qgdWm2Xn34WPzvOVmVIa+w7ZgNXNd2YeMW5Fr
zr5EPbMe/ceDsRZ5D2Ydyrv5M6h9vn9yjXh9/my+Oz6A75192/leUsfl2wDb
lP1PvSjzOmtLrpZvrFxL3oXGdVXbZz5mP9H/nv866z3/Q22tNs+51VH6dfM+
lCerHfV753nKy9Qtfn8l/z5elJphTeRe2SfyXuVb4ifKxeX/+DNpltxAPkf/
fvkt55mUdzP/hd4NVJZ+wL7BDqHR2Z+MW4Utlotlj8i7kubgL2dfxjbLzalc
9pp8/+BLsvdkvmbPp7n45OwV2JfyjbSf/1MRuwIrL+/gt+b9SmPk0/VPwjrJ
W/OdlL0p65+u17tK7m3cMfyh/Av5tsycUu/KPco7Qb9E1kfWYuazfge1TfZY
dbZ+Q/VceZr6gP5AtY+8Sp2X92/WED5E/sr4xurF2a/UFvL+6r7ylcZ0yzrl
K+A71W3YYXRL1mDmK34GfzLfGd+W77k8W74k9dE/Vv8wrFX2++xDchH5bPlN
eX6+B3K98ha5Je1Du7BvscNpXPaUfAdiy+W9qG/2SdrL+fbAz8k8kBvJ58k9
5Ef5vvxqdYHj/wfZF0ej
           "]]}, Annotation[#, "Charting`Private`Tag$233802#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfcjWUcx/Fjz1BRZGXvHQ2zYWWvkKjsLZGtoUWh7D2rV9mEUkK2Ihll
j8yMUGmQ1fv3x+f1/X2+132ec8597ut68rTt1bhnkkQi0TJpIrE7dSKRNV0i
0TatOU0i0Ql50Vr3qe4+LOQ3XFdFN5z/y0ehFnrrVuuK4lu+x3XZdO34Ht4Z
+dBG95nufiziN11XVTeCX+OjMZLv49VRm7/MvzEXw3q+12se0LXne3kXDOM7
eEXk58/zeeasWMwn85PmRrjl9dX4e+br1j6I78H38xp4mvfha8zFscqcFBv0
M+U5XXP85O9k5x1itjbPfNXc1fym+QfzAVlJrpGpUMDaC3J+fHaZTS6Xt+Q5
ucT6FHmKH5ON5WaZEb/jtvd8XL6v3yX/c/1ieY2fkR/GPZQH+GFZU26Q6VHH
Wl+5VlcCG/ksft7cAj/72zl4x5itdUNBvKhboHsAS/kd1z2hG8lv8DGoi336
nPpO+n28Owohgf3WDuAgcrmms2v263ugMJLgSf0o/U3zWNTDIdfn1neJe8l7
ogiS4in96Pg9zeNQH4dd/6C+q/4g74WiaKtbqMuOZTwZqus+4LfN4+M54Ad5
LTTgr/B15pL4ypwMm/Sz5QVdS3xvzowj3jeP7KbbKQ+5br78i5+SL/G35M74
XLKyXCtT4zcUs95OLopnSeaQK+L3lufl59anytP8uGwit8hM+APJrdeI319/
x7zEfN08wfxhfJ7YS2jI+/FvzaXi2eJz+EXzszjqe+Tl3eP5iX2Nt/mPvErs
B96eLzbnjGeXp0BN3RiewETeCP1163np+Kz8mL+dT9eDH4l9jRJIGWeIfqw+
CSbxxjju+vz6nvG5Yk+iJFLhF2sFrPWKfRLPNUohNU5YO4mCcd/jfsVvidJI
g9r6cfqkmMyb4JTrC+l7636Je4QySIun9eP1yTCFN8Vp1xfWv6w7Ed8VZdEh
9rAuV/x+PB3q6Cbw5Jga+4UfjnMGzfiAOFvMZbCVz41nwtwq9rT3KcL7mE9a
W2D+2zzA/I55l7kqyvGOfKk5N1aa70Tqp5nPxPeSTeM95N34M86F2LtyYpz7
MkXs8ThX5Fk5LfZiPN/xm8UZEueGvAtX8Iz1gXJj7GdZVn4dzyO2WftIXtI9
h+3mLDjrOxWVfWNvxOvxLt/Nq+Gh+P/Dl5kfxBf8rjgPdJN4SkznzTEo9mR8
f3zHf/W3i+le4adjHeWRIc4H/WR9KszgLXDO9cX1/eJe88GogIw4b62Etf5x
L/gQPIxMaKCfok+NmbwlLri+pH6A7lc+FI+gc+xfXR58ye9GQ91Ungaz4vzi
R811Yx/G5+Cb417EGcM/5pfNrXHR+5TiA+N/hrWF5n/Mr5qHm/eYH8c6cxo8
qu8il8e5LvPGPZWJOMewyvr0+F3iWZbN5DZ5D65Gxn6OZ0G/R6aNM1TeiO8p
Z8f5KY/FPpX15CaZAa3ivsktuvJYHc8Ytus/iWdI1wa/+U6l+aA476y9hhF8
L38Cj/GufIU5X5zH/N44J3TTeTrM4RP4cXP9eObiN+BbzRWwg1/yPmV0g/kF
/joqoptupS5/PL88c5wLuhk8Peby1rjs9WX1Q+J34G+gErLgirVy1obG9+HD
UBn34Zb+f0bATos=
           "]], 
          LineBox[CompressedData["
1:eJwV07lPVFEYhvFDYxSiqLjiSoFLr2zuglpqjKKIYROoFPwLWGRxrbVyBQbU
2FiIC24duKAFWlipMbEw4DBsaozxd4on7/e83517z9zM5NQ0HmxICyEM419G
CEvnhHBIXksPYS66eAWSs0PYpG/SjfI2XOAjvBgvzOkYxXa7k/KBPhdP+DIc
1l3n89DNKzHuvpv1zbox3o4dWI5S/Q19Jnp4FVKuz9O36H7yDuzEKV2/bh0G
eDaO6G7y+UjwajTpBnk+3vIJ98vXtfIk78QuNOge6tbjKV+Bo7pbfAF6+WX+
2bwfNbyZD5kL4hnMszCsT8ikrhJvzEsw6bkF8ozunRx33T05w7/Js/yi/MA/
yRL5UmZgDLvtG+Uj/Ue5QfbLNPzAM/ur8rv+qyyVQzIrPhsr7ctkl34h7pv/
yj79FfMX8wGc4C38lbkwnpX3xvOaqzDlexTyNnPK7hyKcVr3WLcRz/kqHNN1
8yzc5rWY9vkifbtugp9HCVajXN+jX4Q7vA4zrt+i79BNxt8g9mANftltteuM
54rvD3uxFr/ttsX3ajfNL2EfcnBcn9Avxl1ej1bda16E97yPp8zV8XcT/yeY
wh/3/Q8g0HZ/
           "]]}, Annotation[#, "Charting`Private`Tag$233802#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 4.166666581632653}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533382542753`*^9},
 CellLabel->
  "Out[607]=",ExpressionUUID->"1e6b1fc4-fbf1-4683-9914-a8150815a8f9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
2tyAdg==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{657, 656, 660, 1049, 926, 826, 756, 711, 2682, 
            2684}}], 
           PolygonBox[CompressedData["
1:eJwV0L1PU1EAhvErFHBuC2xAN/xgAinMCAkI1biIxAkVF2LRhARCGExaFEgg
xgFQ/wC/qsAsRlAT0dEP1OjgBgkINSQkDobfGZ487/uee9uepvqz56+XRFF0
BPcwq8wgjwnEY1E0VxpFjdjRX+MR6u0FWydK8dV2Gwn7vN6EP/oqHuOY/bmt
CzFs2Nps7+UrqMEdW9K2IJ/Crp7RP8lZrOlp/aXcizie2I7bXshnUIYL+k8e
wTfnp/V1+Spuygdci8vyZvhezvEYR7iLSe9V8n37ODfzNd7mKd5zfpY/6zke
4mH+xzP8xnkLr+i3+GK4A+9zApfk3+GzMSr/56feOSEvyt0YlItcHu4r/wrP
4rvn2vUP8gDqwn+ob3E+/D7nVfoDOY2ifk7/It/AW71VfyX3IYlntpO2JbkH
Ffhh67B9DHdHCtO2attDuQV/9XcooMG+bMvgKA4Bi9BMBw==
            "]], 
           PolygonBox[CompressedData["
1:eJwV0LtP02EcRvEfVx3EFSUgMqA4gqtQYBI2C4skKDEhQQ1giihgomiiiRTi
DHiJ3P4AuegqMKltN4HFKuhCIgOJEaUDn3c4Oc/5vlBCq270x/vyoyjKwxtM
iAQmUV4YRW8Loqgef/UV/dVO4JO+pD/anSgN1tv8EPe8F+rndjWy+rJO2Tfx
TtfqFTuOE7iqv/EIprxX6Bm7AT32bz5wj9sb9gA+63q9al/DqWC9w49w33uR
HrPPodve5e/uLXbafsK3wufxAS96q7Pfh8/gNu7lfR7nEu7gLD/jB+HvcI5f
8LTfP8Oz4bvgWPifeY+T/M97G2/qp3w3fF98yF+8Ndhr9nXcsf/w6dD2Tx7F
kJ8r1kn7PH7oVp2xb2NJX9Qf7HacxEu3Src5uxH/dbvesgeR0jG9bnehLFj/
4scY9n5Mj9s12NbLeIWz7vNuTTjUaYzguPuE2wXs6BW8RpX7glszcjqDIxxj
VcE=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{657, 661, 662, 2685}}], 
           
           PolygonBox[{{655, 656, 659, 2681, 2680, 686, 710, 755, 825, 925, 
            1048, 652, 731}}], 
           
           PolygonBox[{{625, 658, 626, 779, 849, 949, 1072, 689, 872, 972, 
            1095, 734, 804, 904, 1027, 629, 790, 860, 960, 1083, 713, 758, 
            828, 928, 1051, 664, 778, 848, 948, 1071, 688, 733, 803, 903, 
            1026, 628, 789, 859, 959, 1082, 712, 757, 827, 927, 1050, 663, 
            777, 847, 947, 1070, 687, 732, 802, 902, 1025, 627, 2683}}], 
           PolygonBox[CompressedData["
1:eJwV0DtIlWEAxvFPbcnKy6wNZilkXopyTrMMrEVQBycVGkqPCFJSZuoRpMHT
qdS1rPRYuXsrnarVW0suDt5KQUEIHCx/3/Dn/zzP+73D9+Y0tlZHkoMgSEIC
A0oMCcxjF1dSgmAYmSeCoE//iWT9NiaQbx+zzWEHl21DyLBH9bNyE36g3LZi
S5Ir8Rl5tlFbplyHWZTavtoi8hLu6n/0EnkQ6XqvHpW30Khnh8Z3lOnLzh/J
q6jVA97HA/kWf8IF+YPvjuQOuZPXUC9n8AEici138wxf4y/uDPCh3s4tHOVF
vsO/nT/nHf0eF3Mnv+Y07nEe5//64/BfuJ83uYGz+C/a5Ab+huvyknsP5V+o
Ce/re/J9+SZ/xHn5vT09/AbTuGqbtTXLC6jSt/Ui+RXO6N36Iv6hwjaOXPs7
fQZbKLS9xGn7M30E09jEJXscp5x16U/xFlPYQIGzF0gN31lfCN8dN2wJnLO/
0Sexjou2GE7an+jHhrpZCQ==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nfcjmUYxvFXKHskhGRWtuxE2QoZiWRlhygUEVmZZUcoo4ystI1CGUnK
yKjsbDIzslff89Mfv47fcV5373s/131fjzdX6y71X02UkJDQ9a6EhMgN/lMF
u3lJs4V8BM/K3+NNZX5ZXf4gn7OWmPfhjeS9srxcJNvLH63nlzP0lvIx+Yxc
K1+RJayf4m3QUL+uPya/1F+Sn+q55Ad6C/morCnXyNetpefv8JyoyL+VW80L
80/iXkATNsqq2MNHogGSWHjLLAPWxufFad4WN/hCdI/Ph01m1bCXj0JDlIqf
gaS4G/cgGZIjBVIiFVJjc+wZ9vHReB6lkQa/mT+Fv/gYNEIZpMUW86exn4/F
C7E/SIet5jVwgI9DY5TFGbN2uMk/Q4/YJ2yLvcNB/h6a4HGcjb3GLf453sC9
2G5WC4f4eDSNz2rP+prdh5/0cvgnnjVu8y/QExnwezxrHOYT0Cz2yf/fzywj
1unlcY53wB3+JXK75kO9GHrFvejv8lyoxL+T28yL8Dn8CdTj6+O+zP+QtePd
NDsSz0l+Fs9Vvq9nk+P1ZrJA7L1cKV+WzeM5yv76CzJT/Hy5OO5R/my9gJyp
t5Jl43fJn+I6a+dlxzhIKGv+lfxKzcOn8OJ4M/ZHH8FzY7teVJ/Ln4y90f+U
dXCUT8QD1ifoBfFivGf6AJ4Z6/UncSE+AxLha7037nPdSD0PftczYQevi2N8
ElrEO+u6gWb34xe9Ai7yTnF+8I3eB5mxM/Ybx/lktERF/GvWGYmxSH8L92OX
/iz+5h+gFSrhUnwHIAkW632RBbv1+jjBP0RrVEZW7InnipN8CtqgSjzT2CPs
tdYAp/hUtEVVXDaLL7qkWKL3Q3bsi+8dnObT0A7VcMWsC+7GUr0/HsRf+vM4
w6fHz4h3Si8UZyjOvf42z4Jf9eq4yrviHnyr53XNVF4CA/SM+iieF5X5MvmH
+aN8Hm8jK8Qeyl/ivmQO6/t5o/i8+tn4PpGfx9mXH8X9yol6c1k4vkfkqnim
sr31lHKQ3lhmjXdPLpEbrBXks/jj8R7ydXFOzK/JbkgWa+Zfy+/MH+LTeEkM
jPdMH80fwp96ThyIM4V/+MfogFSuG2yWDRv1p3Gdv4bkWKa/jVw4GPeKc3wG
OqJGfF/E+Yp9jfvAw3gE+XDI9U1wns/Ey6iJG2avIwWW64OQH4f1prjAZ6ET
UrvHIWYPYJNeCzd5d6TEividrpnOS2FwnBN9DH8YVfhyucO8GJ/PK6KAfkQ2
w0VextoXfDbPwSfFWZdFZA25Os6X7Gw9jRwan01mlxXkUtlRbrZeSM7WW8ty
cd7juyvOgHzG+i3eI95lPZUsJ7+R38fexfvDS6NW/Bsuh8RZ5mP5I6jKV8id
5sX5Al4JBfWj8c7hX/5JPHvrk/Wicd71tPow/iB+02vjNn8DqfGDPjQ+A47F
HuASn4NXUQd3zHoiDVbqw1AYx/UWuMznogvqogiK4m9rLXGFz0NX1EP8kdDL
PC1WqcPj/OGE3gpX+Xx0w7NI5Po3zdNhtf5OPFucjD3HNb4AryGda4eb5cAW
vX78OrPeenqsiXdV/5iXwbt6Fn0cz4dq/Hu5y7xE/E0U3xOoz39N9P/fbsWt
/QexrRvP
           "]]}, Annotation[#, "Charting`Private`Tag$233913#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1mW0lFUAheGhu1O6uxvp7g4lLBQDJQRUpEG6TUKQ7u6SFJDu7gYpBSQk
fc6Pd+397jMzd+qbdTO36di4Q5RIJJIyaiTSI24k0kVGiR6JDIoWiWTBWb4Y
BWzLeQPEwVhbGttkvQwe8Z1407aJt0IKdLVFtQ3Ws+IcX4KCthW8IeJinC2t
bYpeFo/5LpSxbeatkRJf2aLZhujZcJ7X4Hv1T7GUF+Ir9UaIh8628Uhnn8rL
4QlvxI+Hc+zmZfkW/R2kCskvy9742nl0PlTPjgu8Jt+nf4ZlvDBfpTdGfLTg
52V3THCenk/Ty4fnqt+VT+2N9RN6F+zh5fhW/V2kDsmvyD74xnkMPkzPgbb6
LXnRXkvfr/eX7cLjyadyubMi+urwGLKJbC8fyBEygWwpL8hBskf4O/KFHC1/
df8Mcnp4L2SF8JrlPTlc/ue8iTzJB8qu4f2Sz+VeZ+X1P/T30El/JN8Irl+V
fdHN7WLy4XpOXOK1+QH9c6zgRfkavSkSYqIto22GXhHPeFN+KnxPsI9X4Nv0
95EmJL8m++Fb57H4CD0XLvOVmIRM9pm2SnjO96M7YttH2nLjCl+F35DZPstW
GS/4AYwM1xTiOBtlz4OrfDUmI4t9tq0KXvKD6Im49tG2vLjG12AKeqE34jkf
4ywfrvO1mIo+iO/se3t+3ODrMA1Z7XNsVfGKH0JfJLD/YCuAm7wOP6h/gfW8
GF+rN0MiTLdls83Vq6Gd/rd8bW+mnw6fPQ7ziny7/gG+1B/LtMH163Kw7B+u
D/lajpH93C+h/JH3lAXlx/K2HCr/cl5XHuLfyfaya/gOypHyd+fF5brwvZLN
ZQf5UCZGK/1ieOzwndNfyhnuk12fp1cP3zf9HxlBc/1MuB5wxO0q8R16G6QL
yW+E5xKuO+eJ+E96Idzi9fjh8BywgZfg6/W3kAQzbTls8/UaiIKjtsq2P/UP
kT48vi2x7We9MG7zjZiFnPYFtpqIimO2AUhi/4UXwR2+CbMxCgMxCEndZqzz
orjLN2MOctkX2mohGo7bBiOZfRwvhnt8C+Yit32RrTai44Stim2n/hEyYIgt
uW28Xhx/8/r8iN4RW3nJ8BnqbyMp5tny2BbrdRAjvHf8bPj8cNJ5Vb5Lb4vO
+hOZMbx3+s3wd+UA2UNGwvURfsfdL4WcYO8lS8hP5B05LHz+zhvIo3yA7BR+
U+QzOSr8njkvJTeE3xLZIrwG+a9Mhtb6pfDY4XdGfyXnu09efYleN1xj+n0Z
M7xe/Vy4LU65XTW+O3z3kSm8h+G7LweG5+c8Zfhd1kviPm/Ij4XrDNt4ab5R
b4nkWGDLZ1uq10MsnLZVt+0Jrx2ZMdyWyjZRL4UHfDsWIr99ma0+YmO07QxG
ILWzSbbSeMh3YBG6+Z/ifzfFEak=
           "]], 
          LineBox[{2681, 659, 656, 660, 1049, 926, 826, 756, 711, 2682}], 
          LineBox[{2684, 657, 2685}]}, 
         Annotation[#, "Charting`Private`Tag$233913#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNw2kyAmAAANDPjF9u4UJ+OEIH0A0cgiIiW8tQ9q0kSRIiS0QpXaX3Zt50
JDo7NxFCmHFhMoQ37xxYtOeL/x7b9cmhVf9sO7Lgl00r9n31wl9b1tz104Zl
z/zx2VsP/fbRGy9d9N26JU/cd8+OD1577pExP7z3ylMPzBt3yWUTrrhq0jXX
Tbnhpltuu2PajFlzzk+FMAaWXDtN
           "]]}, Annotation[#, "Charting`Private`Tag$233913#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1WW4FkUAhuGPPJRS0m0HBqGYGNiKIIrSIDYqZVB2twhKqJQtqJSdINgF
ioEFKCUg3Qp4vz+e643Zs3t2dma+Rj37tOtdrFAoFJUoFBaWLBQqFhUK3UoX
CvNKFQrX4nC01j2lq4KpchU01d0mb+FHoAO6617V7Y1Z8iL3q6TrLv8gX4e+
8ofy4ThCPkcew1fFNLkqmulul7fyI3Gj/KV8IjrKPeTJ/D6YLf/pOZV1PeQf
5evRT56RZ6CF3EYey++B6fI98o/82enk5vId/DZ+HL+aH8XfxH/Fn4RO8kXy
FH5fTOS30Y/1Q/kFfHu8w5fFX/6vKvQi3Qz6k+tG0+WZD3qD3J/OlL+kLehk
upP+To803paOyzNoNfoc3Uh/oa8Zvzf3lefQ1vRNWhp/5vp8P3qnfjs/nl/D
j+Zv5r/mW6Gz3FOeyu+HT+TF/vequp7yz/IAHIXqOEJ/l/5f/gl0wRLX76G/
WD9fHoijUQNLjS3DcvyNFViJVfgHq7EGa7EO1dznkryjvx2EY1AT641VN3ap
sV/lwTgWtdBCf7f+P/5JdMUG19fQX6b/TR6C41AbG43VNHZ55jprDC1RB5uM
1TJ2hbE/sgZwPOpis7Haxq40tiDziBNQD1uMbcU21HFNL9cs1N+CE1EfR+rv
0e/gn0I3bHd9Xf1V+kXyrTgJ5+rG66rjdblBvoHuXnknPyb3lr+RT0Z3+WJ5
Gr8/JvHb6af6R/mF/AV4ly+Hfz23Hr1aNzNrJt+T/p19lP2dM4B+JH+V9Uin
0F2ZF9rKeDs6IWuG1qDP0035PvQN4/fRn+W59Bz6Fi1Cw6wPep9uFz+BX8uP
zfvz3/KnoId8iTydPwCfycPkRfyF+d7eob58Df+Xsdtzzsiz5KMyL/J58tN8
zewPuVHWlO5+uYBx2de4NHtKPhCfyzvcu4Gut7xYvgOnYM+sO/0D+mIYn/2D
na5vqO+jWyLfiVOxF3YZa2Ssr7Gl8l04DXtnTeof1BfHhHxDFPIcfT/dMv5u
nI7zdc/oamUu5X2ybnUPySXwdOYLl+lelw/CF3Kx/B+6/vLynH85J+XZ8tE4
Q24vP8vXxtvy/fJ8vk3Ou+wB+WG+ZJ7Dr6PP6G/j5/Cn4jW+RPao/vKsgXwz
2pi+nDWXvZjz3PjwrDn5e9qBvkfLYzGKZ27otfqPsiazr+kK+afsAfkG+rH8
NT2GTi3KD1mhcKaxC+hzujp4gd+cc1n/AP8L3zZnXfau/AhfCs9m3nCF7k35
4Kx7uUTmWXedvCJrGmdh/+xr/VB96ZzNeWeUxL7663UrM484GxfqntfVzR6U
D8g+1z0qF2Xv5Nm4UveWfEjeTS6F/fJ7Ia/KO2CA/Il8LFrLHeQX+HqZR/lB
+Vf+3KxnuZU8jC+Tb8avz7xkv/Bz+dNyxvAlc7bpe9G3sw/oofQV+h/9xthj
+W3j59GO9H1aAUvy25N5oQP0s+g/OefoyvyOZJ3LA+mnuRc9jk6jxbAgZ4Tx
jvTFnFu0Pn2RbslzjD3E/8a3y9qWT5aH82VzXfao/B1/OnrJV8nv8IfhW/nx
rC++U+Y830AeyK/OvTFI/kxuielZhzk30cZYJ/qSvgE+kBvnPNA9JpfDS3ke
yuBA/SDdGv5htMXBKItyOMj4YONr+Udy1uOQnBf6x/XlMVG+GuXzLP0Q3Tp+
aM5dHJozRD9CXwGT5GtQIc/S36hbn7M/ZyA66ybqGuJD+bCcKbqR8m7Znzmz
5O9zHqB3ni+/yzfBHHlEvjPfOX+T/1m+id/Aj+FX8cP4wfzn/PE4X+4iT+Ib
ZZ74rXRG5ob/nf+Onpdzh5bJ+kIT42fQUfrZdPfsUbqBzqev5Byl8/Jts+/p
G7RUfh9yDmc+6Hs5A2lT+irdQecaG8kv5bvke/K75RmZV3qzbiM/NmuYH84P
4b/gT0B7uav8Mr8nZuY7yn/kfdFUPlMezVfMc3OGyz/wZ6Gv3Ft+n2+W95cr
5pvobpE3ZZ/lHEO3vKtur5yFcrOcP7on5EqYLPdDJTTR36rbnLWeMwfNc/7o
n9RXxhS5P/roPpCb5wyWR8nL+K5ZH5mLzA8qG/sfKpaYUw==
           "]]}, Annotation[#, "Charting`Private`Tag$233913#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xfcz1UYxvGf7bH3jOydrIyMbApZoRSyKnuvsmUVmqJsFRpGg1IZZZZV
KCMjChVRUUZS7/uPz+u6rvuc5/c933O+93kKdxvQpn+yRCIxJHkicS5NIrEl
KZEohw/TJhKdUBLX5W74lX8ZSTgl34f9/Gg0Qvp0icRQtZv8Mvzs97bKd2Ct
3BmlcEPujvP8bKTDabkZDvBjUNRvzZBzoLGcQR7G/8svxy9+e5tcHuvkLshr
zkQ5HUrL/9AeuMC/EuvDj3JzHOTHopi/mSnnRBM5ozycv8WvwF3yQrlEvL9n
bqd34iNjjyKf8UlyepSRb9Ke+I1vaGwlP4e/g3+FL4gM8k+0Bb7l6xp7ix/H
F+dnxf7QXLQl/Zg2NZaJH8F3pv/J99L35QHx93JVukjuRUvS9nQTHUHPW/sO
vgI6xm+aX5O+IfehXeX89Ok4a5oh1kfX0bLG/qWP4WKctfoqfi5fnp/D346M
8hl6P77jx8cakdmckWoJvC1fsJadfEWsl7uhXLwffjN2EV8aq4RP1LrH/sXv
4GzsCQ7xE3AfLpn/lVplfCr3iHUhC86ptcJhfiKa4Xfzd6lVwWdyT9yJW/Lj
uMS/iqzxDcutcYSfhBLe5Tk5d3xH8Qx5FJ8M78jV5MV8KfzhObvpXdhgrJax
N2Mf+dv4ybFncSbyf/QJ/M43Nraafy3Wxc+NddFCtC39jA6j2aIP+DZ4WD4q
16Nvy33jLKN/6fPRBzRP7AVdTwfTFvGO9Em5C00ePU0/oO8aq84viV5CB34z
/dM77aFVsdGc2urLYn18AX4KnynOVk7IvWIf+HmoIL8qF0Z2+dd4H3zPT467
wfgLct74huRs8lN8CqyUL3v2Xr4aNslPoBKSmdc71sbPRw6clx/AMX4KWuKK
v9+nVh2b5V6ojJzxTaq1w3F+KlrhL/O/VquBz+XeqIJc+NvYVVzDN8bvxhfq
feLOQO74lqMHcYKfhtZxl5q/X60mtsh9o2+R3Dv0UbvML0AeXIx9x0l+Okqb
86KcL85czi6P5lNiVdyrfvsAXwtb5X4oaM5UOXPsm5xC7stf4Zvwa/iFfEX+
tfgGaZHYO7qBDqd5o8f4B/GI/INcn74j96PPyGXoS3H30fzRM/QTOoS2jTOh
Y+RHaSrajH5IVxurwS/ly8Qz+M/pP97lIK2NbebUUV/O9+dv56fxWeIs5ZRy
P/4vflF8E/I8uWjsVfQ7fQin+GfxQJy5OWPVUmNN3Nue9y1fB9vlAbEupDKv
v9rf/OK4I/GH3BGn+RloF/ejv/9O7R7skAfi7ujzuFeMHVKvi53yINSMfom+
N3ZYvR6+lAfHPRHnhj+jr/EjPxPto6dwRK0+vuKHRA8itXUOULvKL4k9in6J
88JP/Cx0iG/XvHFqafBe9A6O8g2wix+KQuZMl7PGfshp5IH8Nb4p/x6/NHqH
n88Xi97hN9JC0We0U6B2Rm5A342zi7tTLktfjnuQ3hbfMv2UDqUPRu/Q8XJX
mpY2p2vpwPh/F/tKX5d707JxtvQLmtzY97QhdvP3qK+Iu5IvHN8pny3OSE4r
D+Kv869HX8sL5OJxP0Xv0844yz+PcsZnywXiedGf8gQ+CR9EX+EY3wh7+OGo
iyTzBqvd4N9Akbg75C44x7+AjvEN47haY+zlR6AeisY3iBPqTbCPHxn9h2Jx
7jip3hRf86Mw3jP/B5S6PDY=
           "]], 
          
          LineBox[{2689, 2170, 2115, 2085, 2551, 2400, 2280, 2194, 2139, 2055,
            2528, 2377, 2257, 2171, 2594, 2443, 2323, 2638, 2487, 2673, 2116, 
           2570, 2419, 2299, 2213, 2086, 2552, 2401, 2281, 2195, 2140, 
           2687}]}, 
         Annotation[#, "Charting`Private`Tag$233913#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 4.166666581632653}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533384522114`*^9},
 CellLabel->
  "Out[608]=",ExpressionUUID->"fdd03e62-479f-44f1-883f-216e07fc249a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.72398029377999`", ",", 
   RowBox[{"-", "0.08798988726841607`"}], ",", 
   RowBox[{"-", "0.4211830985613776`"}], ",", "0.5552371745923051`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.864153338477203*^9},
 CellLabel->
  "Out[610]=",ExpressionUUID->"d6341597-52d5-43b5-9660-d5be2efcf6fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "16.65964835822794`"}], ",", 
   RowBox[{"-", "40.65304675493734`"}], ",", "75.34952292050974`", ",", 
   "75.34952292050974`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533384812016`*^9},
 CellLabel->
  "Out[611]=",ExpressionUUID->"b09ac99f-1332-4085-8a34-9c7fc4413f24"]
}, Open  ]],

Cell["Periodic Re computations Skeleton Code", "Text",
 CellChangeTimes->{{3.8636129580817432`*^9, 3.8636129685064144`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"605fa9bd-d2f9-4de1-8459-5ae1aa1ed3d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
  RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"\[Tau]1", " ", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
  RowBox[{"M", " ", "=", "2"}], ";", 
  RowBox[{"order", " ", "=", " ", "5"}], ";", 
  RowBox[{"maxIter", " ", "=", " ", "100"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "0.2"}], ";", " ", 
  RowBox[{"initialConditions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5598961457565854`"}], ",", 
     RowBox[{"-", "3.8688073934450804`"}], ",", 
     RowBox[{"-", "0.9294009690675306`"}], ",", 
     RowBox[{"-", "0.9294009690675306`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initalConditions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MyAppend", "[", 
    RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f1", "[", "t", "]"}], ",", " ", 
            RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}],
           ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f2", "[", 
             RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
            RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
             RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}],
       ";", "\n", "    ", "f"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", "initialConditions"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Js", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Bold"], "\n", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
   RowBox[{"i", " ", "<", " ", "M"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff", ",", "\[Lambda]2ff", ",", "\[Lambda]3ff", 
        ",", "\[Lambda]4ff", ",", "K"}], "}"}], "=", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{"ICs", ",", "n", ",", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", 
           RowBox[{"i", "/", "M"}]}], ")"}]}], ",", "\[Tau]1", ",", "A", ",", 
        "order", ",", "maxIter", ",", "InitGuess"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], "   \t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "!=", " ", 
       RowBox[{"M", " ", "-", " ", "1"}]}], ",", "\n", "        \t", 
      RowBox[{"(*", 
       RowBox[{"If", " ", "condition", " ", "is", " ", "true"}], "*)"}], 
      "\[IndentingNewLine]", "\t       ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
          "u1b", ",", "J"}], "}"}], "=", 
        RowBox[{"testWithFB", "[", 
         RowBox[{"ICs", ",", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"1", "/", "M"}]}], ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"1", "/", "M"}]}], ",", "x1a", ",", "xdot1a", ",", 
          "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", 
          "K"}], "]"}]}], ";", "\n", "        \t       ", 
       RowBox[{"ICs", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1b", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
          RowBox[{"xdot1b", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
          RowBox[{"\[Theta]1b", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
          RowBox[{"\[Theta]dot1b", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"InitGuess", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Lambda]1ff", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}], ",", 
          RowBox[{"\[Lambda]2ff", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}], ",", 
          RowBox[{"\[Lambda]3ff", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}], ",", 
          RowBox[{"\[Lambda]4ff", "[", 
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
       StyleBox["\[IndentingNewLine]",
        FontWeight->"Bold"], 
       StyleBox["\t         ",
        FontWeight->"Bold"], 
       RowBox[{"xs", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"xs", ",", " ", "x1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"xdots", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"\[Theta]s", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"\[Theta]dots", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"us", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"us", ",", " ", "u1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"Js", " ", "=", " ", 
        RowBox[{"Js", " ", "+", " ", "J"}]}], ";"}], "\n", "        \t", ",", 
      "\n", "        \t", 
      RowBox[{"(*", 
       RowBox[{"If", " ", "condition", " ", "is", " ", "false"}], "*)"}], 
      "\[IndentingNewLine]", "\t       ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
          "u1b", ",", "J"}], "}"}], "=", 
        RowBox[{"testWithFB", "[", 
         RowBox[{"ICs", ",", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"1", "/", "M"}]}], ",", " ", "\[Tau]1", ",", "x1a", ",", 
          "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", 
          "A", ",", "K"}], "]"}]}], ";", " ", "\n", "        \t\t", 
       RowBox[{"xs", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"xs", ",", " ", "x1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], " ", "+", " ", "\[Tau]1", " ", "-", 
           " ", "\[Tau]"}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"xdots", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], " ", "+", " ", "\[Tau]1", " ", "-", 
           " ", "\[Tau]"}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"\[Theta]s", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], " ", "+", " ", "\[Tau]1", " ", "-", 
           " ", "\[Tau]"}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"\[Theta]dots", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], " ", "+", " ", "\[Tau]1", " ", "-", 
           " ", "\[Tau]"}]}], "]"}]}], ";", "\n", "        \t\t", 
       RowBox[{"us", " ", "=", " ", 
        RowBox[{"MyAppend", "[", 
         RowBox[{"us", ",", " ", "u1b", ",", " ", 
          RowBox[{"\[Tau]", "*", 
           RowBox[{"i", "/", "M"}]}], ",", " ", 
          RowBox[{
           RowBox[{"\[Tau]", "*", 
            RowBox[{"1", "/", "M"}]}], " ", "+", " ", "\[Tau]1", " ", "-", 
           " ", "\[Tau]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\t        ", 
       RowBox[{"Js", " ", "=", " ", 
        RowBox[{"Js", " ", "+", " ", "J"}]}], ";"}]}], "\n", "        \t", 
     "]"}]}]}], "\t", "\n", "    ", "]"}], "\n", 
 RowBox[{"p1b", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
      RowBox[{"us", "[", "t", "]"}], ",", " ", 
      RowBox[{"xs", "[", "t", "]"}], ",", " ", 
      RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
      RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "\[Tau]1"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
    RowBox[{"Filling", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
    RowBox[{"PlotLegends", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", "\"\<x1b\>\"", 
       ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", "\"\<xdot1b\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
    " ", 
    RowBox[{"AspectRatio", " ", "->", " ", 
     RowBox[{"1", "/", "3"}]}], ",", " ", 
    RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
    RowBox[{"GridLines", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", "Js", "\n"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"a1e062b3-c19b-4de5-9c5a-758815bd1a87"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
1XjcUfcPaG6OSD1DfJ/qOX/oFY4yYj+2JFYBYn2cX4xIffGNhJ1Ry1z6S3x/
jYaNaNJd7WBJ+vnXMmL9/XBg2/VnXxixInfeLkOPdSAumnim9i0JOxRqbdBP
nMcZqTXR05PNYOPVm9VX/1DwbXoK/P4/usCcpRSbDRcVXxm11JiWJs5XORoB
lcT3s7IlkFuzi4SNBKx8eEHcL2x4qG+bKG2Ag5GT3idLxXmL/1jSXzJipk11
pYFW66iH+ElKO8C8JwBX+fzxzYQfCesJObmnijh/yrp8q1Co7ASa/Z3JdAkq
bvFEQOsKBxPWW5Cz/ZzvOuixCrtmW03Ccg+bKTES5+HzP+vkvVo6ALd2uQUP
8f6qxjoYba9hxKjO/E5bifMVRwB56XMKCaNYvWtoIT4P0Cervy9jPPcvGhTv
s/7kHfoPlIqtzFcrU/ERJ/tLjVRGjFWlUvEL8XqqXdvKcCmPhAHOMtok8Xp2
OT/ma4ltBx5NfodyiZ8vDfttHp3EiF0VWqTedVsHNh57osPfkLCQ7UvOjONk
MPZ2c4V7UhtIL2KSNd5PxZ/2FWs7bGTCSsjJuxX914FENX+G4m8SVvj2QyIX
8fjqtKevyUZ2gCSLTwdNiOdzhUnUWLmcOG+HZYeNEj+vN75d+/4HErYY/Sdh
mXj+eQLiF+W5OkH3zqp/RxSpeM4nku67WeL9LezJO0Cct9NfkwzLiklYvOzI
ARfi8TdfV873FO0AzT+cWpWJ8+iLP06mNjmMmHD0h81BXuugO3fX7KZY4vmq
a3J7TpEBzbf0ttTuduL8mXWxQoGK/HLX1X3pb3le41HMvGwJ9STMpaUmpID4
+YqjX5jbBf6BqanwUweJ37/r6E+DTc2MWNbT5y9jiMdTISH2gfqVhKVkXX7k
TDwe6JlvjHzq0quN/s8zM8r+n2c+Bj2zVkwnj/ijZtRfDMZdj9yO7kP9RRnp
v79/VlFRf1HticnS9fs01F90e/+l4PJjKuovlvkJPP5W1o/6ix+buPy/BPSi
/qLcKSab8ntdqL9YrDY2F058rqFn5vcN3ipr1Ig88+u3W3YnXapCnln535mt
TbwFyDP3Tn79LOicjuZDH3ta/J3vdz2aD/1Z7369tX4fmg8dUmjR8m7fKA49
M4j111V9Mo3mQ4epJSeWXJpH86Fpd+0rPUMW0HzoHwK83RqUedRf/G53Vl/4
8SzqLz6pVFm3YphC/cXTYmkn7h4dRv3F1cSXp73r+lB/0fiklU1CfhPqL+rm
v5N2ks9F/cXE3dlMFHoR8sxnvpuJxgz9RZ7ZkLqyr3BTF/LMptsUt7t870Oe
mdNH55BjChV55vjJZxkJWnTkmV/82LMe2URHntkrYOTvb2k68sy83mPbWc3/
88zMXXS3dck+5Jmj5xtMGxY7kGdW/VOrN5ZSjzzzxWLHKCVqGvLMjT4it7aq
xqD+ondAkaSwdTLyzLnT9gE8iV+RZ5YuP7Mv/VIG8swPRIPeU7SykGf2EjV8
mhKcjTyzbyP31DbjHOSZO72E7ULrc5BnLjwkbjs5/l9/MaK0rSWpIgd5ZqOl
dt43eAXqL37YVNInzNSN+os2TTb2h99Q0Hxo0Is1zJvS0HzoqLTjj+N20QD0
zKKqVmtlaRQA50Mndis6dX/pQ71GAdeFDE2VFtRrHE9rv6tqW496jZ9L/E2Y
pH6iXuPVLc8WunzCkYd2U/QMFlH/ieY/z3T5/COntOPQQ7NveSj7avskDj30
/sNqGx+lz6J5z+WO/L8q1BbQvGezlC//zI0X0LznKxIyfxKG53DYc3z5Yz6Y
p20a9RcZrKtUJYb/IM9s1ZV+lFetDXnmaM6ZjNn1HuSZeab8BtmvUpBn5jLW
P3YgloY8cxijVdC2LDryzLaX9ez/fKIjz6z+wSql1paGPDONV89p58R/nnkG
4/6+QakHeeYTURu5g/lbkGfme3nu1jGXcuSZt/Ize59VCkX9xjyrc5Gj7Qmo
35jp9vnUBs1U5JknL7HVxEn9N0+alYFJzdkqE3nmJ6Z69VrrWcgz7xIOWd3I
lIM885cxm8r5dznIM+/xG8oxHMxBnvnUoH/1EiUHeebwkQtpcZR81IO8uk8x
LZejA/Ug58b2B/3J7EfzpDnjn7a07aWhedIGfPsfBxvQAPTMW7yXJYZFqADO
k47BzwYwqPajfiTjlr0lQq9bUT+y3vpHQ+BwA+pHPla/p3TxXwXqR6oeafl9
4nIa8tBHJvGDpOAiNC/6oMVgbgp/M5oPPfvgUb5cwTgOPbTzdVpiV9IMmg+d
o+p971DnPJoPbfjh7mOa7wKaD71RSCq9+eE8DvuSV6TiPWYyZlAPUk9jTC4+
+CfyzJt/cvp/T2xGnvnd4vMTBiw9yDOzJJvmy7zpR55Zby/H6X4ZGvLMjHyy
nXf86MgzD390/RJYSUeemXaQzcGqiYY8c0PNyKvPmf95ZuOpE8UPj/Qiz6y4
w965IrwNeWaZsB0/FzmqkWcOdD8QvtfwOepJ6hyh6rzSi0c9ydMz6TyXbT8h
z6xPn7Hm905DnnmOFLSBnZqBPPObCnX/2k9ZyDN/lPl+dF91NvLM0RtTl755
5iDPXBBnzJnXnYM8s+DVuajikRzkmasns+fks+tRnxIfjHq8KN+L5lH3ZCp/
rTlNRfOon3jYsY4+pKF51GovE87fav2vXykx6W0t/7kW9SvXWMYv/jpagvqV
O7NSI1UcXuOwX7lPzJjDQKYKeejlgQdZo5encOih/7Q4b1qOmEPzon32r1EF
XBbQvOhg5tMaL/cvoHnREmeO32Y8Pof6kzMvNVgUMjuQX269yifISe9Fftna
19Suh52K/HIQ29/Qfes05JdFRw3iX1TTkV/2ZsUjVO7TkV/O5w/2Zpyggubn
fr6cR3kxPf4kK29SP/LMb70enWY+hCPPvMXHqvUFNRz1LF+oHLN6dzgJeeYj
f4IlVjd9QZ65+8CWfK3ydOSZczyOKPr1ZCLPfLrFxerPuWzkmf8Y7m4KU8hB
nrl+3MZ/d1EO8sz8Eo1taWM5yDM7T3043NWagzzzy99/mzUefEL9zMQUxY/9
ra2on/ld7FHRsmw/mm9tMDftMbJGRfOtg5z+JhXZ0AD0zJEfjYWWtKgAzrfO
c/b0Ynjaj3qb1Q3y8TuPtaHeJtvtkqnhxL+ot9lwZIklOrYS9TZ1a75fdNHM
Rh56V8gRxUrLXDS/OnHBTuMC9S+aV819/UzXLacxHHpoo/pPJxcFZtC86nTt
gGEL8jyaV71kHX1TmjgfQg/9OezfEHvmPA57nH+ECuykts6ifuZxZmcNN81S
5JlnrpVv7D3XhDwz8O458py7G3nmE0YL3z5J9yPPvOuoo3zVGBV5Zt9PYwdS
btORZ35rlVeS3EBHnnnwnDyDGRMdeWZNKbLHM47/PPOFRqHolcz/PPMbLCRq
oaodeeajr41HJLfVIc88wE1Oq2BLRJ45PkBL/ulqLOpvRu45fKHS/iPyzG5u
Jzz3yaQhz/ycvzOJTs5Anvnf0Lqb/eMs5JnXfhdx/viajTzzVBJPHHDIQZ75
SvzTm0facpBnDnZW7hgnPp/QM2dU0Z4xHalBPU9ry+6Xv8170Hzs8hN3GNpn
KGg+dvSdC4dFHWhoPna6ufj5hnUq6n0Wccw1xSXUod7n+OzU2LOjP1DvU9Jl
n1rDiSuo95nWccNQ62MF8tBJdaXr098mceihcdOcYKb9c2h+NePFeIdZ0wU0
v/pnToBHMHEeg/OrDQLdNxRFzqFep4bv1Q77R+3IL+uk/dl0714v8svm9TsC
r+ZQkF8+x0JeMainIb+cFHswf72Ujvxy8n7ObdvC6MgvPx+7Dw7I0cDyYE3G
xv28GDlTWfGuTz/yzJx/+Wd5+X4gz+znrbmaIvwa9T9ld+o9EuB8jzzzISbn
qAjpz8gz/2bm1bd2TUeeOdp8x9Pu95nIM/M47AE+EtnIM3sGJ/OFiuQgz8y4
q+FsZVoO8swboq+pBRD7E/TMihWkqLvE/gU98w7jE3muIp0AemYtAY05EykK
gJ75VMOsEOsZGprH7X9YbtQYowHoma/W1D8BcrM49Mwbv+69dpp3Ac3LZjuF
zey9v4DnnaQ91aplxlpblvMOHJ7HoU/m7NzdlGZFA/uZ1BWqPbkxksie/aNx
dLBLc7v7GCMPlr3JbfpkER20qmbxnPHhwY62VvT2vaMhz1zgzBz1xu0l8sqc
DwZHqAPZyCtf28DvGx+Wg7wypleZL0DNAZ3/fLftThbC/PWWtOyI8yX0y2Lb
f7d+HO8F0C8Xk1W4o4KoAPpljuJ2SpcrDc3rvlYbur0slQqgZ3aSuqWwsjKH
Q8/cmjIW+MhvAc3b1msalY1jX8Bz+K6NWp7kxhzSXYMj9tGBivydxL5ibkxT
5fqZkr90oJ/+/tF5DR7sEsdDzu36dOSdl0FAIwdxHxNSzvD6fEMIU3k0XF9H
3Negf95ro75DnbjPQf/8xf7Ch+Dit6h3alK4cPzl1xbUO1X6clLXmd6H5m/P
e6ZKb6FT0fztc4EWu6wdaQD6Z8GCRR0mCyqA87evWf1aYEnoR33UdvPGvSkh
baiParKdp4CNoRH1UW9Uy79Xe/QH9VEV4764M2TlIj+9/6+C8T3LLDRfe4+b
wUxlYwOapz2k+5svvXoUh37a15HZaahyGs3TLrdkXLzgNo/maU8fO8X7OHQB
zdO+fXCUr6FqHof9VJs7H8/Kn59FvdPMJgcfLL4Y+WeeVd3N56IbkX/u+beU
+vpFF/LPZHyfwd65PuSfT5dLNCdVU5F/5lAW9zhwjY78sxp/u2F5Ix3555C1
zW+ThOjIPy/e2DrsoPyff+60WL3/cvw//6ytrz/rcLMD+Wf1kmoOFVod8s/K
G4pU5qY+If98uiHQoS6WjHqpB18y+WwdTUb++f8VdefxUHV/HMDVDCktY0mX
aBWtWmwpnEOLJSptWh6JLE+ipEiKSigkQohQlkKKyLW7FdkqSZaKbGNmFAqP
ZYp+/c7zej3n5L/7epkxc5dzv9+X9/18n3/iHRYRySL+mfH3mJnlmU388+mI
j1e+2z0l/tlrh7Lhibu5xD8vXtp8yNaeJv75mdpCh6BGmvjnjXaPuyO//8lf
pSoCzA74vSL5q6PbNqd97Wkn87t/npt0Tqzyz/xu46zA6nG0PmD//EZ1l1qD
JJ/ks+r+fJggK/6O5LNG/MhWBhrlJJ81Pej22YuqASSfNaXxvMXCoQrip3c9
SR2/f2KQwX5a3UIpu+3bCJmv/fq40nHRnUIyX7t/yuSbCaZCMl/75zwtnfCy
UZKvKpobMlz/+SPxzvs+XmlYu7GTeGelDlkxs4Bu4p1dB1Onvc3nE+8cPe7r
JFcsIN7ZdEeac2yCgHjn+PYR6Zvb+eBGzCmjywuloMY72fChIi7xz/5aqlPO
VpUT/5xwvfTcnofhJK91aHl23ke3ZID985ofzz/sK84g/vlUIioHdj8h/nnK
bv0tV67mEP98vkR17TLpXOKfDyeG9HvNool/Nnc0+cRJp4l/1kyuOiTTSxP/
fMbqpuuBLpr459IvJYNOcq0A+2ebkFZd9UEuwP55yhLfgUnafDIvvF2zwH61
GVr///PPU1WyxAL7hhnsn60n1JL/EY79mef9O/HXzEtCRvySooZXKRvWKmYH
Xts/xmDPfA3K336/jQ/+tpy4Mu08BzrRWvl5twRAx+sE4/OTA79rvdIOKUf1
ocyLfCdvSRj9oMs2r5hP/PPRYvsga5cg4ptnXiyz2diSS3xz+IY92dZBNPHN
t5TbbwSi7/+4MqnxQAIF3U+fCN+A9g/2zr7iXvHCsE6AvfPAHYeLks48gL3z
mI0EXYjuP3ie+H3j4CSZMh7A/vm3ndq1I69HGeyfV9XcFjnk82ceuGjNiZE+
BSFjMKNkr5cOBzIJVz86yQiAR9Cy0fkFHLij/L3OuncCcKJ7uLhDVxIWpdQM
vLcTEB+9f9nrkZcvaABTTofVHqLgmnhpZWt0fWMv7XUmJ2ANuv6xj+auPHzR
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
ml/k
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{570, 3264, 3262, 646, 608, 1080, 946, 832, 738, 673, 
            1109, 975, 861, 767, 1129, 995, 881, 1149, 1015, 1170}}], 
           
           PolygonBox[{{3261, 3260, 555, 556, 557, 558, 559, 1043, 909, 795, 
            701, 636, 598, 1078, 944, 830, 736, 671, 1108, 974, 860, 766, 560,
             1044, 910, 796, 1132, 998, 702, 1115, 981, 1156, 867, 1144, 1010,
             1166}}], 
           PolygonBox[CompressedData["
1:eJwV1FVoVmEAxvGjzta52Xlh6+wG282ezo4LC7tnYbcOsTvArs3ujiu72ymo
INiFYAvG71z8v+f5P++BsfO9W9Heie2Hpw2CIA0a+jidLQhOISJdECQ76Ifa
EUFwhMfiBW+Aora1vCyu8XloYTvH2+ELj8QffRzSI4X3Rx3PHeVxeMkbopht
HY/BdT4fLW3neXt85TnwVx+PDNjBO3vmtt4DA3hdfkxvjFe8EYrb1vNyuMEX
IN52gXfANx6Ff/oEZMROPhCxKOHZDbbyuMkXopXtIu+I7zw6fIm2iTwTdvFB
qGc7zpvgNY9DSdtGXgG3+CLkRBr7JFtm7OaDUd92gjfFG94YpWybeEXc5ouR
C2ntk21ZsIcPCb8r20neDG95E5S2beaVcIcvQW6ks0+xZcVePhRNUca+xVYZ
d/lS5EGEfaotG/bxYWiGsvattiq4x5chL9Lbp9myYz8PL15z5EMGZ9PtkTjA
E8P7hBj7NltV3OfLkR8Z7TNsOXCQd+F39J4YEd4pfkpvjne8N3+iD0ZLXo5v
16vhAe/GH+p9sYK35pf0Thijf5I/7AP05/ocmSgnyW9yiSzgPJOcyafKqPDn
yRdyrjzkvKu8y2fJXnKs/CwXypHhfZWn+QzZQo6U7+V7Z330p/oQTNS/ynh7
eT1Zr45h+mv50N5dT9X7YSVP4Jf1zvjJCyKzbRaPxmE+KrzztjPhe8KH8K6j
gi2F18Bw/Y1MtffQH+lJsr9cZWujX9G74BcvhCy22TwnjvDR4TtGRfsOW008
4qtRGFntSbZcOMrHhH87trPh74yPvC9/pg9FAq/Ed+rTZS2ZKN/K+fKx855h
hv8nsIa35Vf1rvjNi+A/lgyY9g==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{521, 3263, 3258, 886, 1020, 525, 649, 714, 808, 922, 
            1056, 574, 739, 833, 947, 1081, 612, 677, 771, 885, 1019, 524, 
            648, 713, 807, 921, 1055, 573, 611, 676, 770, 884, 1018, 523, 647,
             712, 806, 920, 1054, 572, 610, 675, 769, 883, 1017, 522, 571, 
            609, 674, 768, 882, 1016}}], 
           
           PolygonBox[{{3261, 3262, 711, 805, 919, 1053, 569, 607, 645, 710, 
            804, 918, 1052, 568, 606, 644, 709, 803, 917, 1051, 567, 605, 643,
             708, 802, 916, 1050, 566, 604, 642, 707, 801, 915, 1049, 565, 
            603, 641, 706, 800, 914, 1048, 564, 602, 640, 705, 799, 913, 1047,
             563, 601, 639, 704, 798, 912, 1046, 562, 600, 638, 703, 797, 911,
             1045, 561, 672, 737, 831, 945, 1079, 599, 754, 848, 962, 1096, 
            637}}], 
           PolygonBox[CompressedData["
1:eJwV0TtI1WEch/HXdDRvpGaDl+xmU1cozc3LopZHHdQlhUKJ9FCoWUHQYN5A
HL2Fs5puWiqmczXlpJUiuER5IXCxoM8ZHp7f832n8z95ze2RthMhhDhMYikx
hGVcNhbgEi7iAs7jHOrwAss4Ex/CINISQsjXb7GFYtscbtpr9XMsIcs2gFT7
Wf0PjfoLamwT+gfu6FncsNXoNvc2HupD/dv91H2X11Du7rYfurvczbyOBvei
vZ939SM+za+4n1M4z/swH+mXHOVe3uEW/ut9kPd1Bzfwa/7MER73PsR/dDe3
cg9vchN/9/7THXUX8Ttcd0fsj91beKAP9C/3E3cVr6LM/cze5P6Kev1BZ7r7
kKxz9THq9SdU28Z0i3sD9/U3XeiewTVdrfdRqT+i1Nal3yMj9vuRZMvRo9jE
bds0rtrv6T1U6BWU2Dr1AtL1G5y0ZesRbOCWbQpXYv+b7sA8TsW+FxLt/wGX
GFGO
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nfcjmUYBuCP7L03WUU2WSFZmdnZe4/ssmd70LBpySgtSkn23puQEdmj
qSmUOq5ffxzO87qf3/N9z/s+940C3Qe3GJQoISEhReKEhMgn/ZGRX1hlPiH7
cYdR5s2yBTe4Zb4sR/CIvkQ+yCX9rBzCIv2A7EJy7je/LotxWJ/KLr0diehl
Xinrc13/BI+W8JQ5E6v10TSmPG9YK85X+jR6cxdPW8vMGn0MTahAEpKSjGdc
z8JafSxNqUhynrWelXX6OJpRiTetleCIPp0+8d3xnLVsrNfH05zKvGWtJEf1
GfQlJc9by84GfQItWGquzmX9XR7gbXMpjukz6ccqc4N4R/qnpOIFcw426hPZ
orfktt4yvkf9Ia7o73FQ70oKqpjnydJ8rZ+WA5ml75btuUlivmMMd3kp/V1f
rTfkD341X5CPx7t0fZn5iN6Tv0nDj4wnmeupXX9Rzxn3ssl8UvZnkr5VPhr3
6lfkyJjjM8saXNXPyaEs1g/JbqSkqvkdWYbj+mz26B3i2XnMvEY24jf9M9Lw
kjkXm+Ms0Ipl5ppc09+nGvPNZTmhz2EAaZlsLTdbYs/SOn62uVZ8d/oHPMgC
czlO6nMZSDqmWMvD1tjDtKE6C+PscCrOD4NIz8vW8rIt9jNteYhF1srzTZwR
BpOBV6zlY3vscdpRg4y8av1udsR+pj01yURmspCVbGQnBznJRW7ykJd83E1+
ClCQQhTmNT8/PzvjDNCBWrHfrVXgdJwxhnAPU60VYFfscTpSO/awtYqciTPG
UO5lmrWC7I69RSc+N9fme/1D6rDYXIlv44wxjLXmR/g97qEI082F2BN7g216
K/7RO7Ncr8MP+kcc1ruTiodjv8jKnNXPyPjLdp6+V3YkSZwX8zrZOM6RflE+
wXL9qOwVv4+0/MQEkjs/RV2foReOPcxe86nY2/zLZPN22Zq/uGO+KkfFWXZ/
F/MX8ZxxLvWPqRt71PwA5+IMsU/vRNJ4LvN62YQ/436O6b1Jx33mmfIe9unf
yAFM0XfINvFs+jU5mq76Clk3Ppt+Xg5jif6V7MFtUsd3zLh4Ds9eL96lXiXe
F+fN38rBxD8Y88V+vTO3SBbvn7Hxnbs+3PUNetP4HNwwX5LDWaF/LfuQnp+Z
SDHrs+S97I+zx069bfxOuokvZb24R19K/dgX5qpc0Bcwgo3mZvFe4h6KM9tc
hANxTulOA0owx3pRDsY5pQcNKUkpSlOGssyN98ChOG/0pFG8X2vVuKgvZCSb
zM25qa/kuN6XDFxnUqL//29QzrX/AB2JAgM=
           "]]}, Annotation[#, "Charting`Private`Tag$240413#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Xe8zXUcx/HjUkZXGUkiW8hIKkJKUWbIyhZCRmZG9t6bBjKK7JLsmSYa
RiGpVFQqm8qm5+fRH6/H+/N6/457zz3n+/3I06pLnc4pEonEpKREIi0upkwk
uiOBt3hLlEM6XNL1QArM563wCHKmSiRe192DHXwUbsFl/hKSsIC3Rnnk8voZ
uoLYyUcjGVd4T6TE2/x5lPHaVfxxHOWPIrduJi+Ez/kYpMdV3gsbkxOJVHKh
rg3Kev1q/gR+5Y8hj24WL4wv+FhU1X3Mn8F5fiuumXvjJizibePz8Lo1vCJ+
4xWQV/cGvxdf8nGopvuE18Hf/DZcN/fBzVjMG3jNHnNztIvPk681V8Lv/HHk
083mRfAVH4/quk95XfzDM+CG+WWkxhL+Ap5Afq+doyuKXXwCaug+4/XwL8+I
hK4vT4OlvH18X7p1/Ekc4xVRQDeXF8NuPhGZkELfT5cWy3iH+L506/lT+INX
wj26ebw49iT9f/YyI0nfX5cOy3nH+K50G3hl/MmfREHdm/w+7OWTcTtS6gfo
bsE7vBOeQiH9W7oS+JpPQRak0g/UJeNd/iIqo7B+vu5+fMOn4g7cpB+kS48V
vDOqICtu9myw/la8x7vEecK9+gW6ktjHp+FOpNYP0d2GlfxZvtfcAl3jTPGN
5ir4K+4a/8HcAdV4Ef62+QHs5035AfPzmM6f5tvN9eMOmk/JC/p25l/Mo2QX
2U/+IyfLbJ6nkUP5QJkhfp/8VY6R73veUH7Nh8nn4r7JM3KC7BbnVW7iQ2RV
2U0el8fj/pt/NHdEX/Pfsrq+qHmh+UG8aD4mD+ibmb81t8ErvCbfYW6Ai/yu
2Fm6YTwjVvHuceZ1m+Nzwok46yimW8QfQmfzH/JbfXPzQfMI2Va+qqtl3ml+
Fpd49th/uuE8E1bzHvEZo7h+sa4UDvLXkCP2n36ELjPW8Jfi7ui2xN+Mk7Hf
+GFzJ9Tk9/El5sGytOwi/5Tj5Heet4iMPYHXeW3+ubkhLvO7scnuS9aP1N2O
tbqe8TehhH6p7mEc4jOQM3anfpQuC9bxXnFPdVt5DZyK34X7dct4GXzPZyJX
7En9aN0dWM97xz3VfcCfxmn+DErqlvOy+IE/xw+ZX8CseA3/wtwIV3ju2Jm6
MTwrNvBG/BtzS/SJ+823xeeH7uYT8oy+jfmnOE+owx/g75jLxf0y/yV/1Lc0
f28eKdvLl+V5OSn2ued15Jd8qGwse8rTcry8GjtWHuGjZVfZX/4rp8g8sZfl
WD5I3hlnX/4mx8b99ryx3Mdbobf5bLyH2EPmD8210MN8Up7VtzX/HGcYdfmD
/F3zIzjMZ6Ou7iveBNd43tjvunE8GzbxvqiHh/QrdOXxE5+DfLHP9eN1d2Ez
74f6yB/7P3Z47OHYrbEvY89hs7NXJO5z3Le4G3GmY7f7WRP8nOzYwvujAUrp
39M9ip/53HhPul28Ka7HmY3drpvIc8RdMf8ut+qbmPebh8vWcR7kOTkx7pn3
MiD2s/kjXW2ciz2L0rqV/DH8wufF2Y7/E/STdHfjAz4w9l2c29j/nk3W58Q2
PijOYpyr2P+eTdHnwod8cHyv8d3Ervdsqj43PuJD4n3H545snk3T58HHfGjs
8fhcYrd5Nl2fF5/wYbEP473HPvLsFX0+fMqHxx7Dw7F7PHtVnx+f8RGxN1Am
9oNnr+kLYDvf6jMaGfcw/m3sd30FHOFvxvet282b4QZvz4+au2GA+YKcKst6
9h/8RjY9
           "]]}, Annotation[#, "Charting`Private`Tag$240413#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4FGUYBuClQRpBSlJpEERAGgQMpJEOaVBauruxUbpbursblEakS6W7
pPH+ftzX+7zPzO6eszOzGRq3q9o2SiQSKRc1EhkV3YwZiRyIEYnsMb82l5gf
cIy37WPN1OEcVtk3mR/xr9cOMGMwVb/aLMwX8mwzGzvknc5rJd+Wh1OUKfaM
bJRj8J2ciPnyl/ziNeXtB+WWpOGybhet9XfsIyhGTH7VV9AfkluRliu63Yxm
DGMZx3gmUNH5h53XmnRc1e1hIpUcO6JrQ3qu6fbSRn/XPpLixGKSvrL+qNyW
DFzX7aOt/p79W0oQm8n6KuH7lduRkRu6gbqYTLNX43ddO/v98P1Qkqn2d9gk
x+F7OTEL5Abhe/WaqvY/5fYslfOF18jjwvVktXzTeYPkWEy3rzGLUF2eY2YP
/z877dvNTzjNH17X3nyg32d+b640C4bPDPeFfZr5bvhu2WzfapbhFG/YfzCT
sJ+F9nVmMRrK88332BvuG/OzcG/5zC/M47pvWCbnD58hjzfTsEa+5bzBcmxm
2GswV87BLnm/49/ID8PfQCmm2zOxRY7Lj/KbLJIbhf/Fa6rZ/5I7kInbuiG6
OMy01+SAroP9UXgPShMvvL++uv6E3JHM3NEdpKP+sf0nyhCfGfoa+pNyJ7Jw
V3eImdQM36OuM1m5pzvMLGYzh7nUCtfL8S5k477uCJ30/9l/5mMS8Ju+tv6M
3JXsPNAdpbP+iX0Un5CQefo6+rNyN3LwUHeMLvqn4fnlUxKFa6qvqz8ndycn
j3RDw/3ALHst/tR1tT8LzzOfkTh8P7qkLJYbs8B59ezn5R7kYoI9LWvlx44P
k+My216b47pu9ufyaMqG79qema1ykvCdyMlYIq83i9MkfJ6Zm33yQu9TX74g
92S5XCDcs/JEM134zWKdfbNZKlz78J173XAzXniGmOP4WrNouLeoE66DmTP8
jrDbvsP8NFyXcI7XdzdfhN8Fc4y5yiwUngs+t880s7BN3mZ+HO7lcO3Mt1gq
bzBL0DT8L2YefpcXef8v5YtyL3IzyZ6e9fITx0fI8Zlrr8sJXQ/7S3ks5Uga
rr0uOcvkZix2XgP7Jbk3eXiqO0lP/avw20R5krFE31D/t9yH93mmO8VSGjn2
j64veXmuO80ylrOClayisXP/dU4/PuCF7gyraeLYZV1/8vFSd5Ze+tfht4UK
vMUafVP9FXkA+XmlO0dvfYQJuookD9dW30x3VR5IAV7rRuoS8Ju9Hud1fexR
mGivxCw5K9vlFOFZkFOwXN5olqR5uGbm++F+kneZZcN95/2am9d0e81B5grz
w0CebGbgEBvsW8zS4fcm/A/2b82EzJPrh2ddzsUe+YL37itHZZK9MinD82RP
yQq5RXh2nNfCfl0eTEGicFHfTx+NyfYqpAr3pP4r3Q15CIWIyiX9Rr527KZ9
KIWJxt/6TWxmC1vZxnZaOv+Wc4ZRhOj8o++vj84Ue1VSM8aeipXyV+FelfOy
X94dnqvwO8cOr/8fmJFC4A==
           "]]}, Annotation[#, "Charting`Private`Tag$240413#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfcVmMcx/HzPI2nQTup0C6RTTQ0aScibe1SVCijSXvvPRURGhSVlVkK
FZGtpb1p77x/f3xe39/ne53zdO77PtdVkbbdG3ZLSZJkY2qSbMuYJBczJUlH
7E9LkkEohxwokTlJxulzYjFvi+2uv8Q74QAfjPKo4dr3dHdiI8+JkrrxPBeW
8HZoovuKP4DtfIe/d9n8JA7yIWjjmu95fVTgNfky813YxHOhlG4Cz42lvDP/
2dwI7XlT/rX5QQwyH5E79D3MW82tsNO/fUV2xiFrva3tNg+Nz2reYJ4uH5LD
5H9ygaxovZZczqfIu+Ur8qCcL3+w/oz8k8+SLeRYeVYulLmt3ygn8okyj+wn
98m58l3rXeQW/jhGmU/JDvpm5jXmGhhsPhqfQ9/TvM3cGv/4XAnvYj5sbVh8
93wjb4D7eW3+vvke/MjzoLRuEs+L93hH7PK3UvRP6Y7w4aiEvNhtbQ/2Yh/2
4wAOItU9T7vnqOtGoDKuwSFr6ax1tXaMj0QV5MNha+mtdbP2Lx+FqrgWR6wd
RQbr3a3/pxuNasiPm/ST9ddgGe+EY67PqH9Gd5yPQXXU0X2gK4vNvABu1k3h
+bCcP8V/MTeOd5M352vNNeP75c/z7eY28az+nTT+rPmEtT7mPfGbm9ubN5kf
xnDz8Xj39XXNK8xT5b1ygDwkX5M/WX9W/sVny5ZynDwn35IFrZeRU/kkea3s
L/fLV+N3tf60/JXPkE3kaHk63nVrLczfmGthiPmY3KV/wbzD3Da+X58pE3/O
fNLaOHSId5s/EvuK1+MrzffhZ34dbtFN4/nxAe/KfzM3RRd+3N/NrOvBT/Hx
cXbgepywdhJZrPe0flo3IfY/bsCt+un6AlgRvxFOuT6r/nndGT4x9iYK4Tb9
DH1BrIzvBKddf5X+Bd1ZPin2Agrjdv1M/XVYFc+OM66/Wv+i7hyfHO8P6utW
6cphCy+CO3Sz+PX4kHfDWfdn07+kO8+nxG+Ph3Qf6srjF14Ud+pm8xvwEe+O
c+7Pru+lu8CnxveOBrqP4nzEr7wY7tLN4YXwcZxBOO/+HPreuot8Wjw7iuNu
/Vx9YXwS7xwuuD6nvo/uEp8ez4oSuEf/qr4IPuXP4aLrc+n76i7zGfFseFj3
sa4ifuMlUVY3jxfF6jiLccn9ufX9dFf4zLgXj+g+ibMKv/NSuFc3nxfDZ3Hm
4bL78+j765I4b+PeOF9xn/41XXF8HnsWV1yfV/+yLiX2l65hnH0op39dVwJf
xH5AEueW/hVdKubwR+O8QXn9Al1JfMlfREqcZfoBunRxnvPH4nxBapxl1gbq
08de5Y1iLyNdnGPWBukzYB5/PPYT0scZZW2wPiPm88axH1BB/4auFL7iLyED
CuqH6NLiTOEd+Y/mhhhhPiHfiLMhPr/8lFfCH7FvUFH3Jr8RX/NeyBh7XD9U
lwmv86axb3C/fqGuNNbw3kiLfa0fpsuMBbxZ7BNU0r+luwlreR9kin2uH67L
Es/Hm8e+QGX927qb8Q3vi8yxz/UjdFnxJm8Rv49uNa+MP2NfoIruHV4G63g/
ZIl9rx+puwoLecv4vXSf8Sr4K/YJquoW8VuwnvePa3XreG3s5lnjHNCN4lfH
Wc2fiN9Y9zmvir9jH6GabjG/Fd/GWcF/NzfDy3EfX2+ugz3xbvGd5nbxrHFe
8NHmbOhr3ivf1ncybzY/ipHmk7JVvEvmL8zTZDU5UB6O31Bujb0s/473Wz4h
x8vz8TdlWevV5RI+Wd4WzygPxHsqv4uzSv7BZ8rmcow8E79J7B3rreS3vC6G
mv+Ve+N9Nf9jbh/fWZxjfIw5O97hT8b/h+bH0Dree/6luTq2xZmAB3RL+e34
ng9Atjjj9GN1ObCIt4kzAQ/q39XdgQ18IFrH5+D1sC/ed77L3AETzBfieWR2
a/8DAANv1Q==
           "]]}, Annotation[#, "Charting`Private`Tag$240413#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, Annotation[#, "Charting`Private`Tag$240413#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8641498053006544`*^9, 3.8641498163830686`*^9}, 
   3.8641500005034804`*^9, {3.8641501587812567`*^9, 3.864150182278652*^9}, 
   3.864150219213699*^9, {3.864150367042856*^9, 3.864150408971287*^9}, {
   3.864152289892559*^9, 3.8641523173406763`*^9}, 3.8641523981195335`*^9, 
   3.8641540457742987`*^9},
 CellLabel->
  "Out[624]=",ExpressionUUID->"4bea3151-4f71-40bb-98bf-1c16ca6720c7"],

Cell[BoxData["6.661394352493691`"], "Output",
 CellChangeTimes->{{3.8641498053006544`*^9, 3.8641498163830686`*^9}, 
   3.8641500005034804`*^9, {3.8641501587812567`*^9, 3.864150182278652*^9}, 
   3.864150219213699*^9, {3.864150367042856*^9, 3.864150408971287*^9}, {
   3.864152289892559*^9, 3.8641523173406763`*^9}, 3.8641523981195335`*^9, 
   3.86415404580129*^9},
 CellLabel->
  "Out[625]=",ExpressionUUID->"c5bab02b-c4f2-4b89-ba99-c8ae1db7ba45"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7e518428-48d0-4ac3-961b-c04116ec4574"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 57002, 1424, 1971, "Code",ExpressionUUID->"8704d90d-5c8d-426c-bcda-bbe621b0a2c4"],
Cell[57563, 1446, 329, 6, 56, "Text",ExpressionUUID->"982e74f5-390b-4bf9-a720-2fed731db11d"],
Cell[CellGroupData[{
Cell[57917, 1456, 9512, 245, 366, "Input",ExpressionUUID->"c28652c3-ba56-4a0b-8e4f-0e46f1c2c441"],
Cell[67432, 1703, 67368, 1203, 225, "Output",ExpressionUUID->"e1aaa5e7-6b60-49ee-ab00-a82b32bb4218"],
Cell[134803, 2908, 74659, 1321, 226, "Output",ExpressionUUID->"4e811491-319f-4f67-98be-12273289ce4f"],
Cell[209465, 4231, 79689, 1405, 225, "Output",ExpressionUUID->"ea428eb6-18d2-4cf8-873d-7455c05df35f"],
Cell[289157, 5638, 480, 10, 35, "Output",ExpressionUUID->"33df6091-55be-4834-87e4-28c45d195ba8"],
Cell[289640, 5650, 513, 11, 35, "Output",ExpressionUUID->"fedc81ae-216c-4f1a-b6f1-66b303a7c444"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290190, 5666, 9846, 252, 366, "Input",ExpressionUUID->"539af9eb-2787-4ce5-94ed-3f323d9493e1"],
Cell[300039, 5920, 466, 11, 24, "Message",ExpressionUUID->"c08b8a95-072e-4fed-b1d5-c760de6c247e"],
Cell[300508, 5933, 64192, 1156, 225, "Output",ExpressionUUID->"e55e5c54-ab2f-4863-91d2-7288f73978b1"],
Cell[364703, 7091, 79223, 1403, 226, "Output",ExpressionUUID->"1e6b1fc4-fbf1-4683-9914-a8150815a8f9"],
Cell[443929, 8496, 72466, 1293, 225, "Output",ExpressionUUID->"fdd03e62-479f-44f1-883f-216e07fc249a"],
Cell[516398, 9791, 431, 10, 35, "Output",ExpressionUUID->"d6341597-52d5-43b5-9660-d5be2efcf6fd"],
Cell[516832, 9803, 431, 10, 35, "Output",ExpressionUUID->"b09ac99f-1332-4085-8a34-9c7fc4413f24"]
}, Open  ]],
Cell[517278, 9816, 212, 3, 56, "Text",ExpressionUUID->"605fa9bd-d2f9-4de1-8459-5ae1aa1ed3d4"],
Cell[CellGroupData[{
Cell[517515, 9823, 13364, 315, 910, "Input",ExpressionUUID->"a1e062b3-c19b-4de5-9c5a-758815bd1a87"],
Cell[530882, 10140, 80944, 1427, 226, "Output",ExpressionUUID->"4bea3151-4f71-40bb-98bf-1c16ca6720c7"],
Cell[611829, 11569, 447, 7, 35, "Output",ExpressionUUID->"c5bab02b-c4f2-4b89-ba99-c8ae1db7ba45"]
}, Open  ]]
}
]
*)

