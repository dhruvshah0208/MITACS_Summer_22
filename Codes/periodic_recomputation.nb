(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1012367,      19170]
NotebookOptionsPosition[   1004339,      19059]
NotebookOutlinePosition[   1004772,      19076]
CellTagsIndexPosition[   1004729,      19073]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_", ",", "maxJ_", ",", "initGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", "error", 
       ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], "\n", 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"froot", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"error", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"uff0", "=", 
          RowBox[{"ListInterpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                   RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
             "froot"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
            RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"J", " ", "=", " ", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
      "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.865967298267394*^9, 3.8659673001198*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[2525]:=",ExpressionUUID->"c06eaa1a-1a94-4921-93d5-81325d0c5150"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.865967283387162*^9, 
  3.865967297681583*^9}},ExpressionUUID->"869f2bbe-d630-493f-a109-\
ef8e8d83ea6a"],

Cell["Manual implementation of periodic re-computations", "Text",
 CellChangeTimes->{{3.8641533433196383`*^9, 3.8641534078207626`*^9}, {
   3.865345899534526*^9, 3.8653459352441096`*^9}, 3.8653595685158424`*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"982e74f5-390b-4bf9-a720-2fed731db11d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxJ", " ", "=", " ", 
   RowBox[{
    RowBox[{"uBound", "^", "2"}], "*", "\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.8972307770974721`"}], ",", 
      RowBox[{"-", "0.9070811023479912`"}], ",", 
      RowBox[{"-", "0.7842332462088191`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uBound", ",", "maxCount", ",",
         "maxJ", ",", "InitGuess"}], "]"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uBound",
       ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
       RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
        "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]New", " ", "=", 
   RowBox[{"\[Tau]", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]Init", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IC2", " ", "=", " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}],
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636127929494734`*^9, 3.8636129048647366`*^9}, 
   3.86361309340853*^9, {3.8636132740148587`*^9, 3.8636132890980425`*^9}, {
   3.86361367016436*^9, 3.863613704067534*^9}, {3.863614005426304*^9, 
   3.863614044030977*^9}, {3.86361407671554*^9, 3.8636140789588237`*^9}, {
   3.8636141197098103`*^9, 3.863614156970913*^9}, {3.8636143059493403`*^9, 
   3.8636143423397207`*^9}, {3.8636146524377003`*^9, 
   3.8636146681296897`*^9}, {3.863615502417285*^9, 3.863615703473082*^9}, {
   3.8636161037482653`*^9, 3.863616122815179*^9}, {3.863616300467451*^9, 
   3.8636163404706755`*^9}, {3.863616379759131*^9, 3.8636164322373734`*^9}, 
   3.8636164758294525`*^9, {3.8636165064106874`*^9, 3.8636165068755407`*^9}, {
   3.863616588161584*^9, 3.8636166296943207`*^9}, {3.8636166641123295`*^9, 
   3.863616732677436*^9}, {3.8636167693047395`*^9, 3.8636167704293804`*^9}, {
   3.863616826318534*^9, 3.8636168556931543`*^9}, {3.8636168995821395`*^9, 
   3.8636168999240313`*^9}, {3.863619302411866*^9, 3.863619416136552*^9}, {
   3.8636195563387823`*^9, 3.863619570937121*^9}, {3.8636197069376936`*^9, 
   3.8636197273581724`*^9}, {3.8636205744286833`*^9, 
   3.8636207335498743`*^9}, {3.8636207658335643`*^9, 
   3.8636207659625244`*^9}, {3.8636208211778917`*^9, 
   3.8636208543832893`*^9}, {3.863620930334037*^9, 3.863620936617031*^9}, {
   3.864135467525829*^9, 3.8641355031932845`*^9}, {3.8641358508757644`*^9, 
   3.8641358994820337`*^9}, {3.864136005621681*^9, 3.8641360284712887`*^9}, {
   3.8641361588251004`*^9, 3.8641361878597054`*^9}, {3.864149523908724*^9, 
   3.86414952549721*^9}, {3.8641504554392495`*^9, 3.8641504662587476`*^9}, {
   3.864150523008383*^9, 3.864150605221774*^9}, {3.8641506500782566`*^9, 
   3.864150690388214*^9}, {3.8641515284209967`*^9, 3.8641515289998107`*^9}, {
   3.8641516589627523`*^9, 3.86415165924166*^9}, {3.8641517275125647`*^9, 
   3.8641517616755095`*^9}, 3.8641517984915934`*^9, 3.864152052785297*^9, {
   3.8641521525610065`*^9, 3.864152184609634*^9}, {3.8641524131266785`*^9, 
   3.8641526257358713`*^9}, {3.86415267085427*^9, 3.864152694523608*^9}, {
   3.865343316507264*^9, 3.8653433661354*^9}, {3.8653439486171923`*^9, 
   3.865343974084052*^9}, {3.8653442980234942`*^9, 3.8653443296263914`*^9}, {
   3.8653443748479357`*^9, 3.8653443749728956`*^9}, {3.8653444172203894`*^9, 
   3.86534442272363*^9}, {3.8653469695214763`*^9, 3.865346987082861*^9}, 
   3.8653470346556525`*^9, 3.8653527113159447`*^9, {3.865352921100881*^9, 
   3.86535292673708*^9}, {3.8653582294529123`*^9, 3.8653582967913857`*^9}, {
   3.865358599615581*^9, 3.865358639228916*^9}, {3.865358727662645*^9, 
   3.86535873275102*^9}, 3.8653587920620584`*^9, 3.865358828820309*^9, {
   3.8653593086449194`*^9, 3.8653593288444633`*^9}, {3.865359372130623*^9, 
   3.8653593924201374`*^9}, {3.8653594236451564`*^9, 3.865359453367653*^9}, {
   3.865444950539036*^9, 3.865445024576361*^9}, {3.865446050861164*^9, 
   3.8654460571241617`*^9}, {3.865952145761594*^9, 3.86595214986728*^9}, {
   3.865952199585349*^9, 3.8659522182973533`*^9}, {3.8659603685998144`*^9, 
   3.8659603767552023`*^9}, {3.8659604947234*^9, 3.865960520358188*^9}, 
   3.865960564993886*^9, {3.8659609071592493`*^9, 3.8659609263660946`*^9}, {
   3.865961860067914*^9, 3.8659618679653835`*^9}, 3.8659654827151413`*^9, {
   3.865966916471731*^9, 3.865966942550375*^9}, {3.8659671518243213`*^9, 
   3.865967156179924*^9}, {3.865967206640753*^9, 3.865967238990388*^9}, {
   3.8659673141932907`*^9, 3.865967351676281*^9}, {3.8659674264683175`*^9, 
   3.8659674265732813`*^9}, {3.865967462005929*^9, 3.865967508030183*^9}, {
   3.865967548370256*^9, 3.8659675668793263`*^9}, {3.8659677463418226`*^9, 
   3.8659678159435205`*^9}, {3.86596784633578*^9, 3.8659678729282613`*^9}, {
   3.8659679163953342`*^9, 3.865967976588047*^9}, {3.865968140783433*^9, 
   3.8659682509141455`*^9}, {3.865968287893297*^9, 3.8659683248484554`*^9}, {
   3.8659683827519045`*^9, 3.8659683981569653`*^9}, {3.8659684305215964`*^9, 
   3.8659684309144692`*^9}, {3.86596846558936*^9, 3.8659685457466745`*^9}, {
   3.865968580020693*^9, 3.8659685824779053`*^9}, {3.865969104561618*^9, 
   3.8659691127210045`*^9}, 3.8659693634616613`*^9, {3.8659694114932704`*^9, 
   3.8659694935339813`*^9}, {3.8659695285567617`*^9, 3.86596959443765*^9}, {
   3.8659696286047025`*^9, 3.865969631037925*^9}, {3.865969673164426*^9, 
   3.86596967499084*^9}, {3.865971493789056*^9, 3.8659715068088856`*^9}, {
   3.8659716882007627`*^9, 3.8659716883647113`*^9}, {3.865974154847394*^9, 
   3.8659741580303764`*^9}},
 CellLabel->
  "In[3556]:=",ExpressionUUID->"c28652c3-ba56-4a0b-8e4f-0e46f1c2c441"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJzU/Hs0lN8f/40jwzgmI0kqRaQkoZLUayepFDqopIjIKcmhkiiSUpKQigil
hJQIlWIr0gnJ+ZzjOI9xmDHO9/VZ631Na/3W+q3vfd//3e9/3muvaca+rn16
7efzsZ7LTp49cIqPh4dnnggPz//+v/zudELskqtbHZtTlH8LDGDDXEFjuj2G
yhuy2Vq8TFwitkGI36IM7EN+G+QHDGG9uzvyX5jUgvEeKSH/n8P41NoJsXVi
LRC3teRWdcsINlI5NSS9swOyD+HljQ2jOKPy8vkf2t3QvWis/sc9Ft4suSqN
37cfahpZj/kU2Nh+MvzxczMm5P+498H1PBufLerSTDMaBtUtH5/k32HjIHOB
FdPOo2B0QIBh5sLGNt+87dY5sEHFwuWvlywbfxZcuP/0UQ4MNvlidgQLr5vn
96Dn3AQ8m3i58eOPUWw1skXV2HkKngb3uKVUjOAnsV/lxu7MwILA1b77A4fx
2xCdhvIDPOjAU+Pi6jEmPpezZd/jvbxooEV+adZZBsY/nw/fOsaHTNiBmyeb
erDjzk25jmZzkJ+0ZF9OXgeOSVqXddqJHxXnanfT1Bpx2EjuVVdPChIQSNo+
m/ID01POX3BwF0C7qG2Tz/8mQ6FBeKS/vyCKcrva96yhCnhN6tvu+lGR6ZkP
+bdetwPPtmzeeC8htORDHV7Z3wc3F4wZlQcKI8rQ4UsHpIbB1dzmy9g1EaS+
xvbXslssaL2qZQv3RdEhHzflxm4OSN2Lqr/1RAx9q2IFPmVMQqLEKq9v0eJo
X62nw4GHM/DZfekO5ZdzUXkqn+a2DB4UKx8vt8VUAgW81bKhzfKiXJ8JHocy
CZRQW7JZ02AOWrZHcErhyDxk+rjlw/UX/Cjzt8rtusp5KKHmk+J2OgUFF82o
y1tIok3Sun1Plwuiex49TlaNkuiynNEZQ1kq8pm/ZO7yozT0QDxhoOAHFSWr
UH6ea6EhjQMe+x7ICyGBUd6Fny2lkMwafdPJZULohXr6ldiuf22VkynG02fm
c9sNuz9kHOr71y5PuLQGPKS5bc7b/brLh/+1Z9+7Z91wWcBt71E32OHD+tf+
ZrHW8bSHDLf9+o3r2Ozsv/bPsAa3bvs0qOdUWny5ycACY3IM/vWNcNoiTYR2
bAQfTU2bVVjVBjf/Di9ed2oU8/i6aTKBDs94MmVntrDwhZGDkl3HeuHxIYnu
320sHMC/kqUcyYCe4rB674Ns3GeV67Dq4BA08+7nHwtkYx8JT9XDFiPQdLlv
9uF1NmZLfN7x0IkFfa6Fr6YN2Tjc/uexUqsx6NswFbSomYW9gos9VtmPw6d1
NZl8G1l4F9+J1mjXSah4sHcw9RDRnx9Xny2/PA1ToyP8DhtGML/lY8fSqFlg
PJeImftjCEcofpr//jcPurizYi9jGRM/+uL2hFbJizSWpqQt1uvHUrcGa8br
+NBXkQe2Cae7MN/F9R+cWuegzvywdybhrVh+j1TzlIwk0lr18uytWwJIYvGo
UX6MJOoo0zyf+FwQ3Sycs+WzLA21NNbtqfKmovC4MOdfMTQk9WUBK5hfCNWG
XBt6tPTfeB8Or/u1NuFfW0dw35usD//G44fOtQ/99nHA03sz+uH3Aay4fd2R
w3r1cJnGF7ZIagT/Hai8kbKoFdZn3E5/qziKlUxPh1/b3gm2WsEKF8RZWKqj
e7uZYQ+81b/wSTGXha1EVA48uD0Ayk2C9uJb2FhFbeWc7iomGIyoVhj6sfGF
02vf+FcNwx4wvXHnNhvnZ9ms/9k3CrETehL7LNn40gKFVt8ONuxsnLVonWbh
xT/d2wxbOOAxJ9e33Z6FP90a/PhleAJUutPvOoeNYvXmEw7vR6fgXLm41PrA
EXzgyrqCNtosTO8Oenlr1TB+dtT74o4wHjSHX+/ZnrtMHJhXc9EslBedvLlW
P/XEAO5NNuz8/IgPzYxInGh62Y2zT2zc3BszB+m/1whoXteOncTitPrY85DU
hbHuKW0BVOrmBUwfSfRUrEqg4JQgEo9hV4ROSiIry2yng0ZUFFhfk8u+REP+
Zn8+5PVSETpe2CTI8+/9VzgFXXys3Q5rvfrl9Z6O4rpkz8rjul1wILxvy1kn
Fq7lwy3nz/RBlt5hWhE/GydPK0V+eDYIhbFp8rvs2PjVvQOlzmVDgF9t5T0X
zMbXsvKSVDpHQPTA59/N3mys6rzksG0PC1hvNyFrLTZOeedWLdc0BgYLG9pW
fGThKmMlijBjHAoLHl414mPhA99djod+kkQfF+Z9Hm4VRHwDEolDm2jI6zUj
zvU5FcXa7lkUn0dDvU1XM15KC6Gzn/UoavDveb4Hl+9i2d+Fm17pO//aD2BN
x48is7vqQCapq+7J4DB+GmL/80xEC4SvTdJUnzOKc7Z2bzP62gEh3R/EbrNG
sc3xt42hn7vh3a+P9P4kFi4NSfYzogzAJ1+zRT7qbPw9wqLM4CETeEKEzmwn
nm84UmQ4MmwYouc4Gi0lzrMV1PWvbFJH4cjb0ym5xPtxOfs7wSyRDT6DLsr3
RNl4sPvrwoYYDjiL5njQrxD7R8lGleq3E7DetMKE9/Uo/t5tbHjtzRSUd9fO
H381gi+FTA72l83A35Y39lePDmPV0XoVUXcetGqNq9jKQia+8imo45ILLyo8
vnrwSM8ANtXh9K3w5kM3hjyfJBr04NCD2lPJl+agar8vszET7fiuS8eJts55
6FSQ88KWuQJojZyuNvWMJEr7u0fwvr4gKhN0jeP0SaL4qNWMo1pUxMe5ZCfq
RENmtxb9XNJARaNfOg5uZdIQ7yqvx3rLhdADkcWfrNLb4MRXeqtywCh2jhi9
ppRHB6k8xZ9Rpiys7H3L63VHL6SGh/VtG2Vh6asvilyXDEKPxcu9hy3YeO9E
YPSvsCHY63TLJzqIjXnaH/XCkxGITVIY0rzKxmF5gyXTySx4IryzUAaxcezc
JVGs2DEQH+1qEShh4RdnvHQfpYxDyrsQZYXFLJzuvu5QUqokCrovZLCjUBB9
NQtyO7qKhp4/8K7YEUZFMv6MgqxXNHT1x/aAR+JCaDgwSeHvPAY8VQlc9GEX
UY98G15/S2oIbtN98m4EsPH4loMuzgtHQMXllKLILTY+ZhOeq76aBRNHBKQl
DrHxHvXLVBURGjKOllZZfYqKRHO15rfepqEeg5137nGoKJiVYP9n7r/5uWRL
hdbV+UzI9llI3U/UO+JrFvOKzx2Gvng3Fz9i/gjcbLOjqYxCwG7Ly/eJegmu
Pqy/tZuG8gWV3Xe/pyLFnUnuQb+J/jODm9PkhFCRupu9gIMvnE02WWu9cQDr
+PDYHSyuhXKmYLBS0zDm/6vu/HtfC7xnj1KWDBPnQ2biQo0bHaArsFCwuHsU
B0XKqKy53A0zK658vBhLnF9lPQtUvvTDips6uo0qbCyzi7OB7cmE5q18lzwu
svGbtHHJZ2eHweCN9ZwQor9m6Ysd3wSPwvyXkQ+eO7GxQ/QKyo5ANlCdOK1x
NOLzi2fXK3hz4FrKvg7RIBY2HWz4eyJiAjIShYPGP45iKReDjw4hU9CeqNo1
kj+CQx5YCbinzYCKwB+5ENdh7Po5yP/sSR50x3cyS7GZib0228oGW/Ci1QI3
lQdVGTiIz2TwyGk+FJE8ZZoX3oN9St433nKcg9hqz1XAogMvXxrIsmiahzbI
9LPkJynouNtjLalTkshvqLj0raYgyshVva7aIYmO68ponVOmInyjWOehNQ0Z
CP9+96KciozZoyFHu2loR+6x5Sn/qz+O0S2+nGkDvQSVyW/nRnG20NtjIr50
eG05m267m4WN3zG+Gsb3wuJBdnRiHwuXfOmy2NvAgMBPHstvmLFxzKvlfN7u
Q/D0+u1PJ4n5lDd+U2SP7wisu7BfJuAaGxfa194yDGLBRc3ooOc72Dhy87mJ
Vt8xOLRSLCelioUlppebtd0cB+vpDfHrVrFwy7fw/ZnPJFFp5AMjWpYgShTf
eeTOchp6tWJ/QNYNKqqSQJHoOQ2JyqZAuZAQSv7RnZNTOgBqZZtzeLazcf2l
OzHaLCaoU3p1/P3Z+L3ptrueY8OQpqx12olYjyGi3l6XRVgwtKrnxM+jxH5O
38Q4PoeGyvvSt9oepaKfe270nL5GQxFLD9xuH6Ki4Y90nuauQUjgvH7nSMwH
y5Z39rmDQ7DVf+wTjZgvhbFlgUsER2FW5/POOmI+yW80zc/dRkN8K13EqGlU
1Fo1bjD/Gw2dKfjlwVwohC62fnF8mM2ElU/Tglsus7GW/+I/d94Ow8imT5f+
d97oO6qEX3WnoSyd/GXK7VT06G6ljAKHhm4mRQpbEvvTlMGAllz6EMR0xMIT
4nzXK079oVUwAo/1Dl5/cYVYzyMxg6uyaehcLyW9XZKoR6TMftdpDkFeWqKZ
2Q021lE+ZWS9eQReaI6mniXqtzwv/0eWasNQsdt5Xg7xPHbvD8fO1tDQUgfp
hq4lQujzxdfPVjqchRaD5JuySwdwHkXh3vSdWuju4JyuqxjGWoHzt/CsbYE3
pwoH/HpGcBLj+vVndh0wQ5Fda942imM37DGZNO8GqdBD8SujiPpl6Fb7g/h+
cGpY9uyCElGfPNnRa+TAhCxdaQ/OBTaW+OiakGw5DN6n1KteE/0Zokh+q/YZ
haL5jZXXnYn+pZet/+jJhmrfno20BWwsivS373Qi6pchS5tbd1lYj0ft47OA
Cai1Glzb+oU4D9W/eBy7PAUb9E6kHfk5giNl74Vlxs5AznelQY73MJZMalN7
Ys6D5HMFBQT7mJg9sS9L6hAvskyKXOFszMDP7CaYrjZ8qDgyctLzfQ92Fx4v
Hreag1yaOB+WhXTg055m+Yvq5iHeF3ElWUwKGl1UqiFrLUmcZ1W661YLoqcy
IhcNWiTRiyTFj13yVLTEmPXsuAUNFZnH7t5eSkVTcy+r2nfQUE5s1c21xHpc
yf9LbWRPG7hZ3XeYc2YUH9MP/3b5BB2cP224/247C588tKxf5kov7Bk6+kqv
i4WT2gNVcj4wwE/2/jbqYWL+CLpmlZ8cAt1aFXh7k40XU3hi9rmMQGhw/r37
xP5v8am4y/USCxICbdTNiPPh/v6lq81cx8Cv+od/Tx0LFxaOnRK4OA7fb/JU
PVFn4YvuBSY58f+7H21Usn0liB46rjB8sYSGXJ/xGZlcpSKtWgc+gSc0tFVT
UhYEhVBA780bK18R9WnUslJx4nzzr6w3Ce1kAkt1c7szcf4tsHq/9DJ9GMJy
ei/PIeavsvXZmoTJURBfpPqLdpzo7zaZ1guzkuidvPqE7UEqWklLO7jOl4ay
P3ZFn2BQUWnjjeI9RYPgmyaqZeVAnC86lEXzW4ZAnX8J+kmsH8WUnTKK7BHg
FL6psbnExvPCNd7WbKEhE+95swYpRL34eHl6/Rca+qQZFGMpI4TkN0ssHkxk
Aj6ReCTSh43v3Ymwvvd0GBoaxu3/EL+XoH5gysCFhgonAgbU/1LRzuTj2eqj
NNQfuH2eFbEen8XrdHs8GYKC9xO5isTzPKlRMNfJGIGSPcv0Wb5snJPz9Sgz
nYZ+hZQs+S0hhNrOPPdfpzgEP2Bez3nivvRIo7HJbtUIFFlKDOoT42VX8dso
e8kwhC/ie5pAzP+vvr7UrxXE3w+Q729cLIT2P/P3j/UbBs/+lNWWxOdPGp2H
9vTTULGpBp1C9Gf0YJWxgv8QqAY2eVOI/c5s988ZN+oI5LSGGX0h9ufsG06Z
p2aHoJyNPPcR3/cX/9No8ouG9t5wZVktEkJVFxKJO9AwqCbMvU4lnn/g/F7v
+VM0ZLP43AFd4vdNB+KuFuYPwSKtTp55xOfS8uu7BLYOQ6be6k8FxO9Rh9Zo
6TTSUCJrh0PZUiH0jqqy9IzDCej3OXSaJTmA/Qwzk8tdamHRam2+tb+H8d6G
wOcyS1pgh+AX2zWdI3ji9vmPTYc7IGloR5rc31GcdN32ZNvubuiKyZH0fkDU
r7zmP0ru9sNTtwyXPEU2jjDuL/CyYsIf52jVDcT+kY9ST6seHgbpGVrMB6I/
W9VF2T3nRoFHlibgdoaNbXWVjNln2SDo5Lzsuwwb0xPUDOusOfDo2gvWtnAW
zqHWrPzmMwFKdvpdJkWjWEySp6zy3BT0XolRn/N7BMccV6059GAGzsbsu/Li
6jA+GS1OyTnMgxy9P2i7DTFxlvk3vrp9vKhju9aSBScYOEOmzO3yCT7E13Lf
Bv3qwYyVC7+mH5+D/McTLnkmduBQhc/PJ6rnIYGMSLvLfRSE3OjrFp+QRDWR
Rrf6lASRrMElt4PNkiiqZnh19GIqKkkXModjNHRI+ShLoJiKyuW2TZ5po6Gj
e2m5dHkhhMy2PBTZ3Aaxi/rGFzmO4tetV6ezTehwZSDIphGxsPMzndlZ515o
zbNZIdJJ1K+jR+YOJTFA3rSgucCUqI8ype/OmA9BaebJD4eJ+VgctNm24tQI
0AIzX8oQ8zWFXiQd4M6CfPFFEam7ifffeG77PYcxKC5qXMLfyMKxK9ucI8+O
w5puw7WVmsR+8q3BODdWEr0VF5QLTBZEEg8jtmfK0dDfDwlfIq5QUfvmy++6
Y2loYI51ew+FqF8nzJxPxAxAT2yjY+hWNj589arKpyYmOCusd28i7rdFnSNd
s01EfbnuhI0hsd7O3XYUeDcyCjr9XuGaRP39wCWw/tq0JGrZ23TRch8V1V4o
oEpdJu7vxvJfw/upSHfgcIZ/1iC0ZWyfOmRP1Av0l6OodggETtLfxxPzuXLt
tZbEgRGQXrZ5gwJxHwrCT1I7NtNQc+a1C80vqGiQZ6Ndbj4NOR3P2HFrAbHe
urLZsnFMWFw5c3GQ+Pd6tDIV6UfDoKL+ZPME8XsHIuzSVZxpiHE29dDqJmL/
z5a/vnGY6M+aLdsPEevpolHr57ioIdCI1MhqJdbrPosTy3OTR2Aw84/PA+J5
HZfUi1ek0VDbSufS93OFULbs3uMWckOgjeX6Zon93PD9gsSeZSOg2rq7L5kY
Lx2/C8pt0sPgapQdf4+Y/+fa7+W++ENDUSmcZ4bE/sGzKs9w2cVh+BtoxPEk
Pr/Yo55/oJeGgtKd2hr+d9/k8VlpcmkI1g3Ovs0i9gvqb8q30dlhsLX5uUWG
6F+Q5ryQsLEhWF1+IUOT+L6Ge2eYxg8a+jPm254qS+z/U61UkU/DoFg6bYWI
5y/0lzCUmyDqtf1KK/cTz7vykcEx5vshKPx8+H09MX69xQ35GhuGYY6ro+//
9NN3pno9cvU09HWHrLsVsX9YrV/foGQ/DI/LJvfG/+8+OueDhRWdhr7Ltqa6
Ev3VuGO5raeL6O+qygdM4u91CB6Nkng5DLx0y/JnRNs1JrJLhU1Dkl9SeWyI
vx+upHIuSGkYfu7Xd39D/J603OmDbVU01LTtyUs7ot55umRnzqJbw1B37dRj
RHz+83fS8h0MGrLaVK20kvh+W11B/SbBYXBs1xdx+t/3HW+mis/Q0IO8OP+l
xOd6HiFiDTuG4dH+J9/+tx+a3Vnoe6SZqC9t1mVtJNYnqV/vpSzpLyTqLlK/
Fq3KuVK9th9I/Toystp8kWEXkPo165hi1813nUDq12/sLvdf0aUDqV/n1EVt
ea3bDaR+7V8iWi2e1Aukfi3bbry1WGwASP16SWenh6EfA0j9WnwRxVM3nAGk
fi108G/HNKsfSP262/KhnV9BD5D6tfdyEeMd8p1A6tc+HQWiVzY0Aalfq0m9
nl9+swRI/Xqf+u3HkeqJXP26Qyteq/tCFVe/1tcO9mW3tnP1az1sv9pYk8HV
r8emj21pTR3h6tdXl9WVNp8Y4+rXqUbbpHU2crj6da71ZL6Jxygm9ethBzm3
89/pmNSv400zVM9ficekft27ttos9W4HV7/O/PDcoiR/hKtfa3Oe0Xb5jnP1
6z9OUsP2P6a4+vVch32Wca7TXP26p8v5sfniKa5+nbX5co9RDgdI/Tq4dKH7
wewRIPXrTyGZS9pRL5D6tcTSrDcBbWVA6tdFtd9Dz0tWYVK/ftoaZJuoysSk
ft0S6zG45tYEJvXr3fV0n82OfPmkfq3MV2vTc5iaT+rXPP/9R+rXZJvUr8k2
qV+TbVK/Jtukfk22Sf2abJP6Ndkm9WuyTerXZJvUr9Xi7tfJFg+C/PS7mOkN
32FV6bkmvh09cLM0t+PQ4Uo4crIy7446HUh9O1qtrCu3sBNIfftK2P2OeYu6
gNS3O1pXO/me6QFS357c7XRaitEHpL5Ni2hVix8YAFLfZvG9/JWQxQBS3155
xUI4dXYASH2b/dRlcENoH5D6Nj/95qJdcV1A6tv7zzX0bhFpA1KPXpj9S0b3
0hBXj+ZN5tmw6h1x/pZ6LmIw+dGLq7cteg05WPf3Qp/+UQpat+9cxjeJMVzF
uRZ4fkIAjStfKe5xYOI2w+wtt3ipaNeSUu/5VrWYZ9eu4QXTVPSdD53KYlWA
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
ND9y6Nug+5uYb7u+jchxlMVQCXbniLpNQ/O5y7SauHr4K+F5XJWYX6+VtS7Y
DjChcQVvllYKA0i+1erHBWrZSwaYnVt38xeioNcq+6USifV5X+ROjvBpMVR6
R1w4m9i/GI8Ev/sm1kHfL2ONMOJ9k/yr5wwf54aFUH7ZyD3xXclDYCOt/fHv
WwZweuMYq5ZSkJ1oY0I1sV+edcw/fXW3GFpwwGWJ+OVpEP88k0RRHYLN7jIz
w8R4KB3lsDLe1ABVxaCvkaiXs6e/LHM+SUHaOnF37Iw4+NOro0IRwWJowKqF
vslrGkZf7V1eqVIHyq42SxYR9x/5F2rnx24Ngf1Hd/98ot4wVKp5Yi5OQX9X
8w+cJubPMRnzwk/aYkjxfrGQ7sVpqLbW/uAv1wCaumb3NmUR83fTRGX0fgoy
F1soUHWUg5OPj1j/9hZDdjTTNVFEf+mBX86sVqiHX/zdiEk8P8nnBlt8amfm
CeX7ofEXkd+HQOE1BYe+YUBSmsPmybUUZFDXrjhCzC//HCWagbkYmt3wq/MW
8T7zxGz1Du8Zggjss82A6O/Jlxufl0z/G3+S5+XhabH5stY3j+R5a6ZOepe8
zuHmUVxZfPTn7MwPbh7FRnqcwI+N5dw8iqden25q4mpuHkWRXUI6TNVz8yhu
bjFLU4Nmbh7F85IFLQqeLdw8Cr6NebS7+1q5eRTXBFlOu1JauXkUbd4PlQTD
Wrl5FM2TjfcZoq3cPIqk7pwMG80Wbh5FIu+emMesJm4ehfmL/AsXDzVw8yhe
ybbd7rSr5fK83x/urRT59o/n/X16dvXJrgouz/vkkYHJ6f7yf3kU+KNbulUF
l+d1XHZXcTvxfZLn7ezfVP1qQz2X5z2aJtvrLNDC5Xl3G67JWVrdzuV5M5b9
jhwK6+LyvAfLHOIPzfRikucV19CoYwowMMnzUlos5YVGBjHJ81597HSo052J
SZ63d6li2BoTJiZ5XpuLFdf1jAYxyfNOys+d9fnVj0me9+gatc9OIT2Y5HmT
eN79ds/qxCTPG/L5kNy0YCsmeV4N2YRXK3jquDzvUiOTI8LoN5fnrf88bKip
k8/leTcdvuRSWPcckzzvSmnPbdcTduH/r/C8fhrWHwSjXnLzJ5j0L9eorFpu
/sTc9sPpLpmN3PyJZLn8pD2Zf7n5EzPoV6j+SAs3f6LaRH/Xktut3PyJW3tL
dcxftXLzJ66KZz4zOtbKzZ8I5x9cQElp4eZPTFG/DcRu/cvNl1C/l7DeWqiG
my9xZDS8YS2u5OZL6LwOvia8rYKbLyFw48DMLVY5l+dd3NJiedG4ksvzfh0q
M1fFNVyed3mIe/eSwUYuz5spv1RpbUsrl9/dvObpPIdDPZjkd017usa/xPdj
kt/d2eR++eyiQUzyu9723Q/bdjMxye965c2V1j/HxCS/+8HBMCFZmIlJflfA
7/DmdDUGJvldRWvf5/oGfZjkd1dcM3gnnNmFyTyMYvTVlvfQN0zmYVhuV7r9
62omJnnep3fsd1qfuoP/3/K83xefyqmWjuHmX5i7V6uW/K3h5l+Y22sfr29q
4OZfHDO1KBjl+cvNv1iqvm/h9PsWbv5Fzsc03e1urdz8C6+sEpPvaa3c/ItZ
E+Oco16t3PwLQb/mIKnmFm7+hfCnvOk9NX+5+RaRzk6vj2TVcPMt1txGVlVb
qrj5FlazQj1BQRXcfIvtn7fH2HeWc3nensNmp1d9q+DyvIhV3tmdUc3ledd/
3Bx3/0YDl+c1WFEvU8lo4fK7sWuNHXZd6MYkv/t2aU96Q1UfJvnd4tVJvtcj
GZjkd6OCf1gHKzExye9u+czxcbjIxCS/G/Fit3eXOhOT/K7X3MLC8iIGJvld
K74dWmFz+zHJ7y4/Qs9WS+zGZB6H3w2/O6WavzCZxxHS1MgsWZ+DSZ63+VPh
Uge3aPz/lOcl8zkMP1/9+dK3iZvPEejaft9ZtYWbz3G/z/VO44pWbj4Hshn6
vSS2lZvP4bd7l5lMQis3n+OGxeoH0htbufkccCHbh+rWgutj+alNc3nQk61n
bA1sq3HA4FTGKnFepGSTPXRnbyVOLRL5WbqAD0UE/Q4eEKnAJL+LFORMNiyp
4PK7cl0rx5eMV3L53UnrtnjHvlpM8rjVyvLWp48NYJLH1Ug/iWXvDmKSxxXS
uZBqYcPEJI+7gDe339eOiUke91BXD6z8MIhJHnevmJ7nyesD3DyRNQkR4VtT
CjCZJ0LRi4uz+/kak3yu19dNW7zbL+D/u3wuz8Kbl1XMgrl5IpGfjml176vh
5omY5/L8dXBp4OaJ6F5k1dQ9aebmiajLFKfyRLVw80RePuKhFFq3cvNE3u94
5Sr4upWbJxK9XmTb7PVWbp5IzbLUQFV2CzdPxMiabbtUooWbFxLFdKFfE6vl
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
//Khd81KVascekk/6doIs1nriA/pJb2eVZ7/Gu1fN1kY/1z4iQbNxD6yDNhl
xHuu//U5dina32HPuazjdgErjkWZnOCuF97MBfE7ubeMIlhU5kbfBXc30WDO
at40UU4Z2g+F5941EYDVIycrIszKKQcXuQ6Ni+Jw8Ubjlf0uvcR/qmyv1mzZ
3kv6TLUXaWH9dbup/+RBc6P3VjtccSJ9pqtpYsWNjUzSZ9I71/9CdMZP0mfq
s126R2tXHekzbdzAqC/0rSd9JrfCMjPB7SzSZ3K43zjbHs1n2HeKikQYOoWy
SJ8pQl765n46i/SZCoySDydr1JP+Uuvn9Gw38x+kvxS9xy5zX0ol6S/t222/
uaimnPSX8gy1blqi/Qv2oEPxezpzHMuJB70RkRHc2VBJPGjGHJnlxgdqiAct
23YuumtOPfGfF/eYv0p/2Ur853dbMbH2GZ0U9p+Ldzapdc7oobD/rG/tYOxE
8x32n2GCxm2K7r0U9p9V2hzbqs29FPafGz7MPuCqz6aw/3xgeoyV87aLwv7z
y7YHfdwT7RTuRQV5L50Hs0oo3ItqEpJZ4vKEorAH3fDuyGv1nMcU9qAavNJ4
+TJ96r95UNyP6vb8XeRRUkv6UUHj8Rovi3+TfpRXomy6wEg96Ucl68ga14Ww
SD8qco0c1wftV7DnPKHuNDpzJ4v0o7ZH7u9bEFtPjVQ71F1NmAQt7z9dseYy
KY6+7bFLVXxQee7It4XJFZSiQIDQ1Vp+eMHG1MpsZTmF/af+LD9+A7Tfw/7T
aXntSLZNBfGfj6fvvzbUUEVhz2lprdDfkN5FYc+p2HpIKVuDTWHPmTVP2u+e
WS+FPeftsEJh6ZNofv7Lc55WXKS3A+1HsOc8V7WH467QQ3pXLb6aN1/UFlC4
d2UTel3/ReUbCvvOA+1Po1Myr1D/zXdij/k0V+pZcm496WEtLZK5VufOIj2s
ipBmhXY0n2KP+SB47pHeUyxKdLLj17c7/NAqdDTJ8Hw59W19dOOzRzT4ZZqM
kTI63+bOGdx09okAlPV0qTFkllPYY1YJSW5/E99DYY/JOrm0xndhL4U9ZmZH
gYgjWr+wx3yzJ1w6WLOXwr2ttab3hUTiIqm/e0zsKzkmtp2xC1mkv9XlqxIr
EMMi/a3Sfasr16H1TIuupG2sTINJvX61r9B5TXVKe5G8igDs6E9UkFUrp7C/
1Eu0+SjAqKS+JnaGfzMVg1euwVWe99jEW87aN7y75kgvhb3lzJqQPgXbXgr7
Sj07XjbH/yT1d1+J/WSteUvjlyMs0ve63F1uG4fmc77x+xs5HvxwlX+trk5i
ObWKadohfoEGX7nSLtih9StKdkhs1QUBeO1q2YH+e+VUlPDz/oSXYrA0YFds
sWwv8ZVfDmwQOYPWL9wLS3HIWaxxPYbCvtK66VZFiZcq8ZI/uuMUvtxmkV5Y
wLrn9dVovZgnWBZlP8EPHQezi1NnlVOhNyO+efELwIL9Mep84uXET+7Tdm8a
skbnsb/85HmJUNNidN7BvbH36+eNJRj6kb7YPpnJNm30fNmm9NWuy6NB6dRP
zkldZcRDZkU/k+9H6xf2jnfcbMMC0Hoa5+XIlFjFBen1uqff3mFReiJO+XMN
aXAmRTN34pVRGSdX572FAjD5q+Xv+HXllFaL8IuYc+LQz2Xn/LXo/Ix9pO8W
+Xsiu3tJzyxRX7s1cJYN9XcviT2kfdzFyA0vWJTLg9jutSdpsDNUTGMh2q/5
jJodsHspDk+8XLtSHr1e7CG3Vcsa3jvLTx3oYZxbH94PDF79eumQgPZTe7vL
XvbRYIohNPqB9k/YN5ad4vivcu0lfbT5ybeTPqPxifI2qfd4TYPmb/wsEtB5
CXvGERth4zH0+WK/GEILWXsuFu2HLq8fXqpLg3JvYl5boP13annn4mAHcdg0
J3rGXrSfwH214uea4TNFHSncV/ukavApEP2+KVMHWmqu0+DcrRIR/7Nfenxf
4SX7mzh8pBK6BaDvJ/aNOQaHDxeKzQI/Z/Zk7TFFn+eUZ9qy6PnV7o6qli6j
wZJc+qJlaD+BfeJC9oyHW9H5CvfZNnxPSZ8Tz6LWXLkeIm1Jg+1Tlh0XQfuX
p0Nq81OCxaFQwMFN59H+HvfbPqQoiFwI30b9J694fqZmwYwbe0m/7bjHzDXX
vjNJv02uwzQ0QfQn6bd5mC+/lrK5jvTbGs30I8+cqyf9Nv9pb6K+ovMQ9ocD
z7jratHnh/1hbnnAcFYYi/TbOnLnb1UXZZF+2wa1y6Hi2vWkz3b08kmJhD0/
SJ/txs7WhTo5laTPNt/J/Jg4q5z02eaILgq36iwjXpG3VnzbArty4hVXpIn+
EqqsJF5x/5YC+e5NNcQr3nfOPBk3vZ74xOUiZVI7Y1qJT9xuoNekKt5JEZ+4
ZY7QKakeCvvEtTlfI1cOsynsE8O3iXMC0HqFfeLsksGIS2g9wz6RX3yZ/6H1
bAr7xOZE2V+quV0U9onT67w1l51vp3BPTkF66h3GRAmFe3KX1rl83i6US2Gv
SO2ZFqW2+QmFvWLBDVf62StG1H/zirgvN2Gr53j6fS3pyykF7LKYQv0mfblM
Pv3xuIF60peTj4166xfMIn25NVuzzvei/QX2ho4Ock0rdrNIXy4oZNaZyKf1
1OTMKaqLHk2CJcefGNVMMCkj3XAQXc4Hd8XuL4pLq6B+Hhq13PqDH/Luvdui
ol9OYZ/YUEbT3j1YRnziE/ZuILqrgvjEa5GWXrTvVRT2hk8fGYrWPO+isDd0
ftHPmTWXTWFvqNPlefYD2u9hb/j88ebfSejzwt7Q5H1Pp4BwL4W94WXzj/F3
VXtID89QudowW76Qwj0835lME9eFbynsD4WSnE8YigdT/80fYi+YfyM7oSar
nvTyhKrfW04/ySK9vKm3eYm1aL7BXvB62Gf9Z54sqmi/zcKbN/nhFQNL6X0B
5VTtoLttygMaXC8jYZ6O5qPVBnJGix8KQHr0sObTknIKe0GW1a2Pcx/2UNgL
xrkEDYmq91LYC0Y2n7vtjOYv7AWTWPsqsrV6Kdzj++zw+pv7lSjq714Q+z/6
4tMqHxawSJ8vPWLKk+noPIz9n9/JROfFj1hUt90tL1FFGnz41kdznUg5pZua
s1FtlgDcGrnfMFKlnMI+UOmDwVo+wUoqb2TGaJ2JGGTcT/9deotNPOAxC8mJ
GLSfwB6Qltq5bBvab2D/FzjP4MWchaeov/s/7PvmH59b//kwi/T/bERC7Pag
+ZnaO/12qhs/fDz7m1Rjcjm14fIcxxm+NHgxMGIiBY2vzDL5KRwfNL7ffGfv
jSinxvJVK48kiMHZdwKc6NN7if+77j1tmzZaf3BPsOgmo+AD4yGF/V9b/caQ
O2oqxPOVLOdaP0XnTdwTfO6clhH0jEU12Zq0aY7wwy9y04V+KZdT94ydzIPG
aXBb6Ndd5mj8sO9r6A3hc0XrNfZ9+Wza5JvjvaRHCJOWsP12+JP+oPKm6BeH
0PPldrRwn0UODe7YeHfrFTSfYq83x2pPrRF6/djjdbbs0vv6hEXtoMU9CNfl
gkvSs4NYkSxq0L5Bqk2fBn1WBGQYoO9rgRrD6P0aAVhuJ7B2Dyynwh/6he7x
FIcqyS3RVuj1YL83QyxbJgTth3Dv0KPP267E7jD1d8+Hvd6nqMmUn2i+8TI/
47zZhQZTlZ3mVaD9xcqj7suWJaD9y6wz9XFo/cReb+UU4RW73s6mprqbGRUF
9gPAW+Q2itan71PzLd9106Bx45hsyGQZ8XclH89/m0D7C9xPvCbb2FKHxidO
e7bNhZc0aHu/3KsJ/T7s7Ywm60/MQ98X7OukP/fejkPPN6f1nfGwJg2mS8tf
voT+ffkw2+kb7MThvLy26E3Hekl/UdbXndNXdZzC/cVpe9Ue7EG/Tzr389HW
UBrcHqUrw4eet4MiBhdzPotDE+9DqxTR78P+LmJVzQ6R7jngykP1gDqjfvDB
5Z2dPXp+10S7WiuV0CBH3cMmqbeM+LlQ1+r+AjQ+uN9YqDoUF4Cer9F24Z/M
LTSYppzg441+XvjtA2HXy2j/rmKcl4PGA/cd95svu9oss4P6u6fDvcd37qnD
nYks6vZbVVfbozSoEJJ80r69jEpa+55V9lActnQmrEhA52/cg5w2oJCy0XcZ
ZV/jtXOkBz1fUeIPutH7z7tRfOjeUxq8/MUyOBqdl8b8rX2bm8Sha6JMxT70
/nEvskzxjVMner+aqp7H+AJp8JKLZuwiNF7M+hCdvfni8PHoe7kM9PxiT/fa
+nVGXYsa6HgeI9O0uB/E0NTX89Df3ymguFevgAZ97Rbd6eouo+aozS9xFpKA
IMA4+Q7ar56J5506YEyD1dcjpyb1l5H+5A9XhwtOnfso3J+8oCjmn4j2v4e6
vjot9qRB/oeDx+6g158fNj/o9mtx6NLV2u6D/j3cp+Qu40b1/aCBZ/mhy9lS
/WCSCrmejN5/8Ge3Aw6pNGhWCKoC0fhJVuTOS+CJw2qJoJNF6P3M63M4LfiV
AwTfCgk+Rz8/uEfZriQCjdfJOCkt9P7bdblVyhXicHqnWOYuNF7Y0+mwOQ1o
nwE0I15zf1j1g009dspZ6PXi3qWf/yGVGQ+2UP/Jy+XMPrvJVb6d3N8k7nZC
XlG8jXg5uyFad1NTM/FyOjWvAt+aNxIv90Mzsf++dz3xcqOWK2XEfP94uQ0K
A+J7QQXxctsCXqlo3PtEvNzNeO1By8sZxMspS2sY2z87RPqXOkGVtzpo2aR/
WRV/Y5rq18+kfxm8b9bHYbcK0r/0XvCkO+TFT9K/rFAW/N2zm0X6l0anA2fO
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
WiRFg0tDokbGTIThTk7KsdJWfoh7b1+uH7h8fSMPbP7oZ/7JRRKeXfjG8Dh6
vbfThaLXpkhBqeuHLzjo8MCot+KvhJUM2GayQqcY7bfeGtaU785gQC9L3xjr
3Vzwd7/knZ+kPhhzA9R/fn30Ma2dMpj76WrXPSH4YVZjxY2b/HDq5UXPlybQ
4WHdeU6n0HowelT4hFbBVJg07+JiIWkemHJj3eqsMklY8DP912a0Hox7LT14
qlkKnisPHFBE68GPJFvrIgcGPMVcnbIDPW/YK1n1GVjazo0D2id+3BtWpUN7
+Te8k3w0qBlsYbFaXRhqFoXtDRrnh7jX9vA+t+LuQR4QniGws85MEj5SFBPu
QOvLtOPnDDOeSEHbs4Lta9F5Srspc1/5AgYMNhFZfxCdt1ZuspjeXy8EP64T
TdtVzg8Vr1ATae10+MHQ4my9Ag365QraColKwg0xlV9Ch7hg2+F5XsIiUlDP
M9/1GPr3byUP7lelM2Cz+9Ed2st5YP6dA2p8x9DnJRPkvG4mDYad4NuUeg2d
d7Y+Fh9A89fMKddH8z9IwQbho1rXlvJAoZzPXv9NaD3IsY+XY/D+0W+LuL5+
7VhIILDSdDA5KN5OXaEHVVlG0SHddLmOBBpvxUs08dY8SXjuqfzkE/TvyyVf
iBH5JQXTFr71CEXP44m41JHBaXTY2m0+VjfAD1vyjKzb1kjCMqFTXwY6uWCj
nOiDo8oMeMuq8c7NRTxwR2SmRlU1HXoekv4aPJsGDzgYH5UangpH+DTWDYxz
Qd3egKZZ/FLw61ypsRUtXJDUaBydPiEFPV6qSn9F8++xEv0LEzvR3x9gPTKT
pcHjMw3Mcs9Lwm/qh8/2o89/935TM/5sKbht9qsrDxfzwHXhsvMymXR4Ufdj
QxU6b3RFX3K41iAJtTdVWW9A+5nGjc1KrG4pWPx+j7cuel6wRxLdebS1/0co
UHfJs6zYLwnn5lt42KPXEyNqW35nmA7r5rQxddDv9/J+NjtcEp2nHzVf4aLz
WbONXyH/WTR+W/KtpZRoMLmQMn7+SBKWCkl8dkHjVxtfFX/pixS8Z3HMaAn6
PP+TP3owbUn1Y9l2CvfSFq9qPwYE2yjcS4tg7K5w+9lM/E/WITmpj4wOgP1P
foZHSacwm/TKisqrgyu+cgD2PqczDdPGlUYB9j6n33XHnUmcBNj7HD/n8qn8
GD/EfTIo8DpLAc1v2P+4x7PveabwQ+x/ikzL2N3ufBD7n6zN0rPyzo6TPplg
ds6E5aER0ierbWOu2Pp2kPTJjoZcVf06wSN9sgln09fiaD3A/icxznbKDjR+
2P/MH+dJVdN5pE8WWHT1xxr0fCytNCpT2M2Aa20U1wfReADfPznyws3gPZ0L
sBfiTuok+Kf2AeyFRBecXRqh3kX6ZsWytJuLR1gAeyEPK5HtpTFZ4N/2zbrW
WS5Y+7qNwn0zmQiwpUyklXicJJXt3GQ0PrgXZtmfItCcwQdxL2w+/ZyAaTs/
FHD87eYnKAz7hO5q2THQ+P/VDzsaYVi6Gu3nsd8pSTK/y980SnphI5OBEr86
h0gvzFl13wa/rAHSCwt9PBn1wptHemEC4H3itV4u6YUdDNg79WcXF8xO37/K
6KYU3CEpInNSlQcWyB3vqZdhQIfUx4a/0frsJVcZybvNgBsGqu69ikX70QeJ
Q7NmSkO/9El4ZGo/wB5o/0pouUS2F2APpNlc+UnBo5X0yD6Fx6XdsmGCf9sj
25Y1eeh0Txvpf7EXF+lVmvLBLesCjiZlCsHegWn71V/zQ669mfLERzrMy98+
IxU9v9jvUO/cniroDpLe16wNAQ8lM3ik99UQcBbeFeSBKPUhsxM9ktBp8vre
lWi9k1Ux8dM7hea/b63x0bLo+WqMZ+typeCW4AK5LjQf7vIQX375NANaJP3c
OFHNBcY2y7eKDzNgeNymI2YR/f/oh727PrciWCwdJFtrbRS1bSM9LzlDDdY6
dB5fc/3G6SxDOtQeE/H2mEqD046f+DhlvTBMVvYLedfBD3HPK5x+2H6rKQ/k
sS2+BztKQknO1Xe/0eudt/VUv9kbKUjTL9tWhs7XeZt0usNWMKCMLHuzsTI6
v6TfHz+UxoBKQdYdq/aj78ff/E/vRfHW0wnXwG3XXyuXCLZTZckGc5/fEYJ7
9ER1ZcP5YffRKZ5rntKhcByj/SRaL9yu/+jrfT8VFngl6g1O44FPku7sghK0
/5uprKuA5ucPG01crRulICdm0GMKmm8L1BZc/G7PgBLf+rlNaH+IvY+/Y90P
k6EEkDuxdWmGMh2+FFkyU2OCH4o5LVA0UhOGO7Lzr41N8kPc45L7YTHt+WF0
3jEqr4rZKAnHZuWNRaPz1COBjoiiWCm459bDsCANNF8klxxPn8eAtceEjX3Q
/3+qKkp8XSsEVXeur+35xg9Hj0UUU81ofb22qr0Rra9DHZVNRYKScIaGfm71
MBekqKxlStDReeva7mQmOg/u9RZzERFE6/MjWPwEzefpalVZlC0dLtynlzYH
re9C90o/nQ6RhPWC0XQN9P4TovjMy/Ok4KtyFTNFtD6HNl1zOmrCgDf72qxG
0X7m757HS2YyfTLmAvh1Sv115NR26ljrgUd7Iugw8dqvFZ/QetZAW5zblyMJ
+XtLT1xB82Od1+3knhopuDw74+0u9DzSlmldT5Okw9S5fktNueg82j3tZ4Ke
JLR56LO5FH2/pZpmvTSdzYDv1rnWBWjxgGd7H7eukg79Bjlrt6L1i3lTtq2M
OxU6a2ksPzbJBf7LV3kbT0jCBOUAZ6qZCzySrZPuj6H5eOdpbXn0+0b2pCjk
WNIhWLJkD2s6DTatZ5T4e0nCoZJvUsZovW3jZj6UeicFd5deW6OA1ucTbc82
z0qlw/cVNV/k0PPzWjF19r06SehT7J/Ch34+QXZYu6BTCq6l+a3UQ88L9jzW
j341v9S4DWIir1dEWEvCg/SZjDG0Pvt2rHoQw6NDfunwSXc5GjTclKV1SoIB
X7k+pF9H4+3BHtr//hQduru9d12J9h8LOGGFzg8kYVUY9/QlNH5O0Hji1icp
eOzR0O4ydJ7+u9+ZHyeh5xhKh/JrZHSnofF3HgtfQE+ThF6vOy7bor/vIEuV
pjOl4OBr380/0Hq0LD76Ss9XOuQ6Pt8Qq0yDU3Uim/cMSMLPi/ym9KPvJ22T
/7ejQ1IwWe1M1A00fhVRr77R3SXhj3dv62noz7Wf7WBpvqRDZa/71+3Q+KyV
lQl8xZSEbCerJn/0PC1PVjYPb5WCpUsvMReh8dFPaFuS3E2Hh1wZzC8zaLCk
sXELEGFAUaX6LUno/USItoXA43QYsSDI01KRBuU36BT335KEF8rDLxaj1584
/7W46QM6jK9a9xmg37dDpHxnbYEkvDMlULsQ/bl5o0u46m8pKCTvKZeNXu+5
B8evyAtIwbuvxOuz0fi3yS4JK+djwKUpWo4e6P0P9Lp+Gb8oCbe9/BD/DL3e
1wtGUyRy6HDjlj0xgWj8FL2/S46xpeDCWpvYOej1Y39z3rIPNDz2Ae81QoSv
jdPh0s2zgmvR82RVIaJj6EOHWbuFr1Sg51PvPvtj+1NJSN+5dfVB9Pr+k8fZ
rOJEn5XaRTyOuxD/UId8O/E4DUnJbPH5LcTjBJ+Y+t3l0x+Ps7Tkgxa/N4t4
HOlhR7WpF38RjxPYXyjZl1tFPM7ecs8b/e9LiccJtWueJhObRzzO1ce7Q21s
HpJ+Vd0up48r3VKIx7nMXyutdKaQeJzTemsLy/tKiccRzZ0zVjpQQTzOHs1y
Zlwpk3gc5sHkVcJ7mcTjrH1YPuvK9HLicYxN/OPcDn0iHqd3j/kVaJVAPM6U
qWFnlKzzSL9qi1P4s5Lb1aRfpbDrflPL6mbSr7qavzTuS3Qn6VdZ+DouPWvD
Jv2q8X1ZTM5AD+lXfebtlNYa+dOv8vEJ+X2nq5H0q3b4GrDFk6pIv0pzbk2x
7Jk3pF8VlZYeJDbjM/E433QfxLMYdcTjHLq4pOH26lbicTxuSoR9KewmHmdL
/S0T0+19xOOoG4nKR3/jEI/TkTUvY1sVh3gc5tUpspVafzyOztq7pz6UdhKP
I2yze3ugxB+PY7D/TD7r7v8/HufymIWzfl4H8TjL7S28eoNaSW9qtk9R9ejW
9+Q+2GTnra7c8S/kPtjFSQo/gW45MKEdYN11HQUWC2dldM1lAr5iv8dzvMdB
88lVVt97mAD3qLpaYwTGplUC7HuMD68889O/lPieQglpxV8O74nv6VW7ttXp
6WPSo3o/LLfSSOA76VHlxgdzxmewSI+KT3yv5NaMNtKjOiarqqw32k3ul725
RVQzIpNN+lSzPW2UFu3uJn2q5HNjxWmvW0mfivtGenmSQD3pSzFDL67nT+gg
XifSoJSxY+Wf+2E7Hhcq+a7lEK9jyosfC+TrJ16HcdakzRz9OfY6NZoCYgUX
2cTrCN8r1f+264/XqS/up3d9+t97HaG8lofXXnUSr3O0TrMmcVMb6UfNEzOY
J6GSRe53nX0zJ+qF2Sdyv2tcyOrLLKUykBXEfpfHGQEC2y+cLLtXCXTqDtin
c8eAu/fWDxI8JsB9KfiK/fTct0qA/c+OIRU5wcbvxP8ojp3yAHMKiP85b91p
H1HiBXBfqnFhOyeB/on0pfhPvjt0oP0X6UtZND0ql0PnKeyBWBCyBTu6yH2x
JeE6AZXP2aQ3FcX3RlXYsIf0pk4d3hi23bGd9Kau/T6zYR2tgfSiLn1bw902
2kY8T9XWb7bhGmzied4LvrtjU9FHPE9CA58/l8Mhnueeh6TapkgO8Tz734ae
17n0x/OENNh47ExqJ57nzqpAtfaX/3vPI+N0LcC/uZ30oFyeis7MufQNVG6Z
JyjaMwzmimX1qKpWgIqzJUKnekZBg72E2ecrTFD6JrY+WHACpF9a89Qqiwlw
P8qWb1mwkkYFwP2oRdGFtZubvwLcjxoayP+i5pkOsBdS4G7TNFnaSO53fZo9
L0PcoIPc7/qwVkCOU9JDYS/0qSe1KN+DTe57Vb66oLMLdFHY90QJRrXfWddF
fM/8hANA8FvvH9+T2b30ynUO8T2mQqpvwwc5xPc8N3M1evOxj/iepn6+i7sK
uonvYb7IFrb7+sf3WLu69z1p/Pe+R+OawcgU3S7ie4zvhpj0JrWR/tPSiyW2
ut/SyX2rPtN4t9+1FpH7Vs0uut+wDP4OPL6uUGe+GQGyOsNikWaVoKhty6YL
yWOAnrcmdXobE+A+VEybouTVmUyAvZC0bXbWBb8y4oXgEpdsbYsi4oVcGcmv
XS0eANyHCvbevIGjVkD6UCcCD/hfzv1J+lCL+2LW5ai1kD7U77CVJ7M2d5H7
W0fc9s1+G8omvagDuocZOrE9pBf1uOcF2KXXQXpRa1I2tGqNNJDeU8/B4tv5
s9qI/6F2xKgf8uoh/mdh2c+iHbf7iP+ZerhSgNfIIf7nwZ57dvXvOMT/tJwx
Fmn81Uv8z6bnQnPeFHQQ/5OloLJ+6tk//mfw6uT0pr5/73+AQYFiikUH6Tnt
usmrPrehBMQdP7MmKmEYZHSBj/dfloPQHFn3y0mjQMzU1fP0Hiawz7met/P9
ONAcqdi59CcT4P5TyK5vASsfVwDcf+qIzOt47vcN4P6TwoohibQP2QD7onqz
gznjCxrIfatWqo7Wp/3byX2rgyc+GEw53kNhX/R05pyZ22LY5P5VHfV58/aV
dVHYA61h7eXInu0kHog5/nqOKJqPsAc63ZaZZOHIIR5IuEA1t32CQzyQ6WH1
wVzBPx7I2sqyy+V5D/FAIbO36b2a8ccDLS5xVvmu+d890OZEpcTMucPA/9T4
aaPnZYBmHLclSXcUGPS29lo0VYI75a6XuvXGQVvnI/r+QSZY6Hw04seOSTBx
4+jSJM9KoEjNLPRJ5oNiDaLXavW+A+yHMmV4DLGz3RT2Q9svyvCev2NTucVO
PbxfwvClzuYDDeXdFPY/gwVF48vFOcT/pE+WWl0Y4xD/E17UetDThQNcClON
fwRLQw367GNv5vf+wwMprLgUabNoDBwW3dbPfcUEevFvJ95vnABF7bc+8l1n
AuyBaD0WZuHKbAp7IA/uK80la9kU9j3ftfuGp7zlEN9z/Glb/pEONP7z1+2V
M5WGV5eJisj49P1H7zND5GsV062LeJ8eKmV7X2Mb6TEpf8vSFZuTRu4TfWyh
s8BLt4jcJ8oXqwZ6wHdgxf75+8DNEeAQtE1ZdW4lmO5s/M4+dAxYGTodi//F
BLjXpJ7evnSlPhNgP8Sn3fTe7UsZ8UN2101ELu4rJn5IeWWRIe3zY4B7TQNC
ulOX6X8gvSZ2XUaZ6PMa0muK1c5SiHjVTHpNX/PiprkMdpL7SW8/tXg7cIZN
+k1B3uGGH9B6gz0RK+Bm55uoDtJvslqkJTXTvZH0l/avWD+h/6KVeCCNNQVK
9XN6iAeiVL529nj0EQ/0cO8NnZM1HOKBmlPFPL0+cYgHWtzx23UJ/Y8HmqB5
zDti9scDHVdRH0le/8cDFd2E6oayaf/aA3Vtenj/WFAH6Su133h6ciT2K5Aa
n7Or4fIwOKF1Zn6LazlwrM/UkA4fBdclFiukQSZ4a3RliX70OPBvOylm38IE
uMf0If/iwuhfFQD3mNJ/yAntnVsKcI/Je4bI0Z0auQB7o9P1y7WbH7LIfaIh
3stpj5TayX2ixU+nOUov76GwN6pwUfGySfpzv+iAewoHynVT2Afl1s7akCnd
SXxQL1NPTe1gL/FB/DaTRyK3c4gPKuq9nuOM9tPYB111cHAanPPHB12Tz/HY
pvDHB5Wb3EtuyfzjgzaccrjnN1nxX33Q21XFBTTaMDBsCb8/alcGfh/dLLhS
ehR8teXMDn5fCZp22Q+WyY6Dzn1CG0LR/LTW48vzfcsmgY08J1nySSU4GPxZ
qSGGD5p8nZA4FvYdYE80hy4eWLOkm8KeSFRq39xFqWwqRtS3y7ZEGNJsr4BQ
8R4Ke6DE5y+tRnr7iAdSlt9z33GIQzzQJY+fJRsDOOCBorxR00VpyF7+oObz
zt5/+KDBXRrmnRJjYNNP69HD0UxwUeu5S9z8CSA7GLXx3jMmwD7o6tKonO/D
PRT2QbXF4MeOvWwKex//6z/9+R9ziPfRtzZgpfZxwLofLX3XjaThnhn5llWP
+v7hf7wO76y+XzYGrBXeiDWymcDuUkT1Uc4ESFJgbx8aqATY/9B3i6xJjGZT
B4Nj2wyThOH8vS6ehu49FPY9d62q9FS60HqVbfDJrocBM5gy288lcoj38ezJ
/fxaKhq8uueWPVEyCk67JN5Z6M4EiivvWrg1jgPjBqV+7a9M4oH2D8/fPhHd
Q2EPtCHGfswlhE1h39OxOuNkrC8HGAu5lIS/YMBMfR/RgVEOMN1yRkZ4zzjY
cl090IPLBNj7WJgtvGaezaZUjjx1mBvKgJabXH30JjlAX6ahocp0DGz/oJ58
KI8JuuZmh9Q6TgCdlZXSXqeZxPvwVA/cUDFiUz4ly6YmuQrDiINGjocV2RT2
PSovGo3C8zjAMW7F4okvDOiuY3UvisX5j95nPacoedPNLuJ9oJO4zZaJNtI3
enRp33yPTank/soz9gv8wysLyf2Vdbs4unIzvgNDPq13jy+OAL5Xn8aXSVSC
TJ28k3u8x0BN8sbxs1VMgPtHBm59RmOmTID90I0lx8d+9JYRPxQTdepJa30x
8UMmbqM1H6/HAdw/ah1SC+Zsyif9o/Ol8px6lRrSP+q4EPaj26OZ9I8KNVdo
0b90kvswS34P1Wo7s0kPSbYtdMKksYf0kErDT18r+dRBekhVFjVPLyc3kp5R
uLL8nVD3VuKBODVHBS7zuokHunhWI2adXR/xQGlKQ8uXVHKIBzqV1jRL+TuH
eCCZceaUVTP/eCDRPmVV37BO4oH0ykb7ZBL+eKCHQvpxYrX/3gOBPmr05ZMO
0isqrpi1aoPFV/Dhw+ARodPDYFWMp525RTmw7hMX2nl+FEzX3pF6fTETWAsJ
dWmHjoOqiJV3eB1MgPtG45UHDmkNVwDcNzLXiFjiZVkKcN/oll6xdtDnXIC9
0eSLGi+R/Sxyf+WNh5XlfN1t5P7KOOXPO1Vm9FDYGyUVaT3yTGGT+yxfZ7v2
Reh1U9gHpT3ZVnS5roP4oL19KXdrTHuJD+o+fnSl3iYO8UFsibQnz9B6gH0Q
31BOzG8dDvFBBqGH6CNb2cQHyTi0JK4T/eODmp/qH1Bu+e8+yJ72oGJe3xBg
CI7YPTMqAyWn79d700ZBksFH5+NJleDKzKakj4LjoEPhTErsANrvjUysiFGd
BKM7lrbHZlYC2sm5X6ZF8kHmMs38mxnfAfZEPw//uHFYspvCnoh1XZBv7BWb
klp42fFegTAMDwo2ez2/h8IeKH3yaHBVQx/xQDnrGcU/eRzigWSnW0+9GMYB
ywtNDDrOS8N1bgdvLXXp/YcPajnmtVBnYhT8/KBhsO0WE2j0zV8QJTsBbP1y
zlW8ZgLsg9aofDFsbuqhsA9SXlD/eYoDm8Lex0WjUsr9Lod4n4UfPQLLuBwQ
opOeZQ6koWakDdfvbd8//M+ceeXXwt+PAcG8ix1bu9D+UbTYNoE1ARipvncf
iKD5+S//U/LLpvHZbTZV+vz50bNxwpB1d1f83OAeCvue8+1r6Mvb0PwsO+2W
agcDPi2y1Gl9wyHe54bN4jNcwzgQ8+LDHSNqFOjfL5wz3Z4J8kZlRY+UjYOw
HIfo4Aom8UDsUzt0+QN7KOyB1OlKv6zR78e+Z/234IS4U2i8OTyV2Hi0P7FX
6bw/zgEcKd7XkY3j4FlhX4QB+vyx9/G8OytoJItNjZkvyll2hQFDfHyPi6Lz
lea8pTmK+mPgZhh/mGsmE1xv0TP+Zj0BHMtr++4GMIn3yRxeZnVgMZtaE9oY
m2MvDOW/qs/OXcSmsO/h6Du1n0HnY+MbOQFSxQxo3VV2T7uF8w/v45z4ieYR
PQZU+7qNFjei9f4v73PhamD+14tsKizQjb/7EAPetkq+s/83B0z1m3puU/I4
eDM9u3E+iwmeib3wsp4hDL9Isp5aPWNTP4oFigsfMuD0U6qt1Wh9WxvRtbZ+
/jg4NP9H3Be0H8Le5+WBVHP7DDb1dsHqI9b+DOhmeu5O7AgHCJv8cH86awxM
GX53uRftP+ocddLe6k2Akl37zBLvM4n38XPk9aZIsKlxhy+ay94z4OjXZfb6
PRzAjPmpnNg4Bvarnln/lcMk3ieju2hv5lM2NefHjjexbgzoqmKmncrmEN/z
Q37bxiDhMODhoRTpyx0HTlZXg2d9ZIJk8QE1xZXC8LZ96o3r/mzKQaHtrM8r
Bjwb4vm+b5gDnl4d3yvjNA66OFdFx/qYxAOlrnG5/xJ9vsZnlOQY1xnwyOzt
qhJoPvpPvufR3CTe/Cddf3zPM9/HN8XaSQ8o9T433qkuhdxHSNsce8w+rpDc
RzhLNWjYX/A7yBSuWlDoNQJCpjaZSdMqgYQ0X2mF+xjga6ntV0PPM+4FHRQ3
l4u0YgLshfy/S88topUTL1R25fvCNpVPxAsp77mWaMp9BnAvqObk2RzrsjzS
C0q3TDtaUVtNekFss3sCHrubSS9I4MOm6VNSO8n9hjcTJ8s4R9mkH6QZ5bF/
ZXcP6Qd5OYc13GroIP2gotOnr94raST9n3eiCgqKu1qJ/xnXehSbWtdN/I9G
sM/Csn19xP9oNts8OVnGIf6n283u0oYKDvE/a8qrRqar/fE/30U0Dq1J7iT+
J3LHj1ndP/8f/xNReSMl69/7n73MrRNdbzpI30dM/+OLV/O/ggcLGpzuuAyD
KrVBx50G5eD7cMrJM6dHQdvuI/VbFzLBi1Yjk/iAcVCW8jR2GM2HuAd0aeTj
nhdClQD3gN4+WtJu5FgKcA9oUYtHs/PM9wD7omc6YadE1rDIfYQZ5kmhK8vb
yH2EVJpVzGbRHgr7oqemY21q6WxyP6HKjHzlEZNuCnugtRX7Urd+6CAeaOVV
r1Alo17igZoKxB/areMQD/SsS/N+LHr+sQfKt2Irxq3gEA903yXW85wDm3ig
+OyPto91/3ig2+5vk3J3/XcPZGh3+Wd62xA4kqm7v1y3DKz3M94SMzICFpd8
dtF+Wgl+jamIg/ExYJmWPbOHxwRma+54GyhOgiUeLNP5HyuBpd3WR5q3+ODg
0qNmtiXfAfZDqzYLu30f66KwH9psqHM4EJ1fTd6JL0zPE4ZOm2fNHFzaQ2H/
o9bC6n76s4/4n75F7hIn0fqH/U9Pe+udUzc5wF/RBnb7SMPJ1Y/m5J7t/YcH
2uemFrltYBToucyKUApnAu+yIxenTZ0A0t9zAxLTmAB7oEmfb/biNT0U9kAb
I6fr+7uyKex7VmdYxYne5hDfk5l7cIP+AAe8rlV+pK0vDf28X71Xz+77h/c5
RWf0iGSMAffdnus3oP3gKdNDCZur0fns8ccpz6WZAHufXMN1701vsClhfd35
EbHCsC2/M+zD7R4Ke55vCvNWKqP1xyHv3FmBNgacM696BieNQ3xPzIv2hIaZ
iUAu9biQXdooiCs5Wsy0YQKZX1Z2dcXjgEklSgyi8wT2P/ZPvt2ac7aHwv4n
2/cNP+8um8KeJ+b73o5AV7Re2Wdsfh7HgBPWhhZb0fq6nrNYw91gHNBfmEQ0
o/UY+57YrWrxbmi+7ijobV17mQFb9RpHLdD6Hav1ayFYNgZ2XMtvNkplguZC
j0cm29B+6PmSV81XmcT36DS3bItUZ1MznTOdC2yFYdTS472yy9kU9jwrxLJW
f0bvd6mIf9KMQgZs2zrv0g60P/m773kfLHyAHTEGsnK3RPjXo/XuL9+zT59n
dN6XTXmNL1s4cBCtx8dDvPtrOcDmkGlVftw4+LwifGcdWr8DOy9sOCQjDL3E
5/wYTmRTBaCQUxqN1uODdana6Pt3zVPj7m6lcQCPhYvmo/UY+560Z2v929PQ
+fbBROjh8wy4ke5y7zpa386b+zUUyYyBoh0PVq9+zAS6Zs7TtHQmgF1wbe+q
WCbxPSXN4iNNAmj86sN2rKXQ+Nk+ahLs5QB1/xneqj/R/sIqd9txtD5i35PB
SAYWsWg/u0Xh13NXBlwmLOg/0M0hnocxrvXhoNltULxzH2+ocxy8Sz13Qb+Y
CcK6vvTOXSYMh815l5Qus6ld4YmPA5MYsEvy8+lJtH8YdlqdEXp4HBRGmxht
7WcS/2PmZnp/Njp/L2U3QIVw9PtW9E15ifYnf/c8dLWisNSIcSAZfVv+YxsT
rE/U/XVCQhjmrVJzv/qaTcUs3GLceJcBg2J0RW+j8Vyx6qml6dRx0Ky2yVML
jSf2PebVX42XvEWf15WAhlNeDPgpfThOa5ADvq27tUzu0xjoTCq6otXDJJ5H
cPUahyL0/C71WjwUmciAdsoy/pVjHBCtnXbCb9s4+JjwnX0CzVfY80hOtAas
Q+9n6s9jNzWDGTBwufr95+j57rCE0TmxDFjT6W90HL2/zrcvG+x0xkFCcc2U
RPT6MtTXHfj2iw7PSb73is9Ez8drz9UWFxkwqv77xQejHHCBuv9Bt2sMjNe5
FdO4TOJvHB4wfYIqfYBlAsV3z30cbMrbn+/VyyQe5+hyzwA+9P3ZJbC3m36T
AVdWWpRuR+Pzd39z8+N6k5crJgD+f2HXX2itFiZ/rk3fnywZxvhzHiD3zf3f
//4PBzvhsQ==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{478, 2832, 400, 401, 402, 403, 907, 751, 629, 537, 
            477, 444, 935, 779, 657, 565, 505, 968, 812, 690, 598, 404, 908, 
            752, 630, 1005, 849, 538, 978, 822, 1044, 700, 1022, 866, 1060}}], 
           PolygonBox[CompressedData["
1:eJwV0btOlFEYheHNQEJwFEIDxIKERlCooIRGoKFSJpHCgsIIIiRwAQzoIKeE
O0BmrmBGNFpIKdpggiANdByn4kxBQQE8u3jzrXd9+89/angzlhpNhBBKsICq
ZAiVSCsmMIkPGC8NYdfBAVRgXZfHov6WT6MJJ7qPSOv3+CAe4J+ugM/6Oz6D
pzjVreqeIM9fIhPvzffld0jG63krfsob9t/lWmT5tfkaz+VdswtrcllZCEPy
F+eXzICHulm7S/kV6vkzvi23o4b/ih/EfBufyzxz/W+5EdW8YH8j96OB9/Ki
3IPHfIOXmyN8Kn5D80A3hGP5RXyO+B5mG1bkTed+yHXI8U7syd34Ky/bZ+US
zPErsw/N8o7ZgVX53Lk/clN8b57Cp/gP+aH8Ho/wX/cVOX0C87oWXOim4z/U
HfFhVGJL9w0zyNgVdfcPJkmC
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0ktTjmEABuAnFWFMCZ2cRhuDoVKWskgxViYaCwszzbRopKh+QdJZ+QeV
Dlskp7SrtLDJhCgbm0RpJiEzbVzP4prnvu/3+5rvfXuPVNaV124JISQwTurO
ENLoMbzmC1k+0MgqHYkhdNvGWCDT1sBP2l27b/tHkf6AHbZhXtnmybDVs0Kb
vcu2QaHew3bbEC9tF/VBDuljfLbt0++wTKut01YhP+GEPs1f25R+Tl7gtNxN
ijzIC9cv6AMcjL+NT/F+9TPyO/bKl50r3JZ/0CJ3+FyNMyUphBnbfuclfZGr
eq5+Q97ksZ6uH5ff8Md3j+pVcoJz0vVMZ7E+T4F+WL8mr8dnqe/St8kDPPf9
amey7a1rpfJXyuTrzg0eygfi82Mu/p/0InmGPXId37mnt7t+RX7EMX2K37YJ
/Wx83uTLXWyNf5tnrpfq/fHe47Pkoy1djy/SEs22Nts6eXonybZ+Rm3n9T5y
4j3xwbZbv8U37tpabb84Fd85kmx9PLWV6L1kx9/De1uaXsMiTbYW2xon43tJ
oq2XEdssqbab/AfT72KT
            "]], 
           PolygonBox[CompressedData["
1:eJwV1NdvT2Ecx/GjpYTEJiSKaotEYlzZ8wJBSXChthISiVbtPf8AW63ErlI7
xo2q3dLWhbZ2JfZKkJilxeu5ePf7/nyec/Lr7znP+SWkZYxOj4miqAY6+TMH
jepFUX0s58uQi2LUceEMPMOy2ChaqvuIDvJ6VGOn/piuCLXl6ajAUv0S3Qe0
l9ehCjv0R3UD+B40l8/iji5OTsNTLNEt1o3iuUiWr+K9Llleiz/I0uXo+vPd
aCafwW3dRbkbL0EtPtL8gGn8CRbzRa67y4fyVxjJJ5mV4XvxhjWjKIlfwbvw
2fJ0/i904fPkXvw+kuR4eSz/gjVyPfm3uV0+4v6O8iweaxbqW5iD5GfoJ6ea
37GLN7DWlJ9GoXunmdW4YK2rWYyaPCXsC6byx1jEF7q+hA/hL5HCjyKR5+Ot
9Xy5Jy9HIl+NSmyTs633Dc8XTeRTKNDFylPwCAt1C3Rv0E5ehV/Yqj+su4UY
eTIeYoF+vu4QbqJG2Gs8wHxr83SvkSCvxE9s0R/U9QlnB43lk7gRDrA8Efcx
T5epG8Fz0E6+HJ6p7rLcg5ehLR9jfsYK/gOb+QHXzTRj7HmBbiCvQG/eVjeO
f0OWXF9uxE/guvsS5am8CufDfsldeFE4J9ZbySPC+cEE63XlcjNTnmt9thmn
K9a1NAfLLzA8fD/zVzg7PMHMC8/TPXlyd16KNny0+QnL+Xds4vvDM+AD+FP0
CucwnGl+HNesn5M7h/cPf+XxchnmyhnyMJ4d9kC+FP4vXevwe4Bv2Kjbp+sZ
zk04s3JueFd11UjVlSJDly4/R3z4fcBXbNDv1fUI5ybsbXjvwrulq8I43T2k
6/4DtAOfqw==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl8z3UcB/CdbM0529hss1WyonQodKLWgdWyJZ1uNtYckXTn6nB0EooK
0ak70eEo0YkuFZ2uLoXSpdLz/eiP5+/1fr+/e3y/v+/n89mvuN+wHrWJCQkJ
NT4i8318Iu9nON05hiSSSaHA33wqH2AEZbQjlULXPpMPMpKzOTbuYf6zfIGb
6E8dWphvkvO4nHM4Lu5nvksu4WYGUJci881yPqMop308w3y3fJFbGEgaxeaf
ywWM5lxOMdsnV3EXHeKZZnvkUm5lEKWxJqxVzyadA/VfyIe4gq76Oryr7kEn
9d/yNe6O5+nr86G6Y3xX9S9yGeermzA51kkewAb1JTKXwerTZRL9eFN/gcym
mnv1FbIhA/lYf6nMY2jcT3+Q/FL2kQvlebJx3Jsx+m6yLv15T3+RbEqFurP8
R75OL3UW0+M9ZQM+Uh8f66f+Vb7ElNhDfQbvq6s4Q53MW+r7yOBg/VdyEVdS
SRezf+VqZnBCrJnZXvkyU6mmHi3Nv5YPMzbeixPj+5j/Jl9hGkOozyHm38hH
uIqenBTPMP9dvsptDKUBrcy3yEe5OvaKk2lIiWtb5WNcE2sTZ4pGHOraNvk4
18Z+xZmgMYe5tl0+wXVcGGtMJq1d2yEXc33sQ6wHTWjj2rfySW7gYk4li8Nd
+04+xY1xdjiNbHJoSjNyyaM5+RRQSAuKKI6zHecl9oYj3Pd7+TTj4lxRGutO
W9d+kM8wnt5xTmP9zf+Qy7mdmlh3jjT/UT7LBPrE9zfbL9/gnjgjsR9mf8oV
3MFlnGmWwtvqObEvHKXfKZ9jIt31aaxT9433jx8y1oiZcY/YO/1fciV3Uq6v
xwfqWs5Sp/JO7IvMYa66UjZiEBvjXWXzxP9/L0v0R8uf4rny+ThXMpMqJunL
ZDoDWB97J5sxJP6n9bPi2QyLs0PXOCdxHmLfY39jL2LNYx3j3ekWz+U/1HWZ
DA==
           "]]}, Annotation[#, "Charting`Private`Tag$392054#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1ncYlmMcxfG3YSQNSYlCyciIlJWRvTITpcwGiRYqWyIkI4SsJk20FzLa
y2gopWlUqChFGeVzLn98r985577v632eez1v1WbtGrQtUigUPi1aKLQh2hYr
FBbQjfEP/ymGyUqjl+wU9JU9z/9O34cqWJOxaCdfyF+Hf/nPMFxWBi/LTkU/
WU9+K30/DsJ3so9kh2AQfwnaydrzi+gm2MnP4WtiLD+Ff5cui1f4ulhOn4UZ
dH/tL9Db6AewiW6Ag+mF6smYTH+v32S6Kgbz29XrUT/PpV6ASsULhXn87mpr
vr0xHdSvZXvJmqrr+UtRmd+lfS59HPblx2U+6ZtxKD9V+3v0Pplb/lXtW+nG
mQP+NH4FfTZm0kVlt9IDjHtR/UP2IH6lr84YepF6Cj6mf9DvY7oahvCXooPs
Ln4xfT0KmCZ7X1YOvfnTMVD2Ev8n/RCq4seMxd3yJfwNKILpsreT4x5t38hu
zPNihuwd9JJv5x9GNaxNX3SUL+VvQjHMlI3IfOE1/gwMkr3M76AfwaH4mj8V
n9DrtH+SOcVQ/rKsJ30hPqc7au9EL6Nvxk/0ZShOz1OPx/jsVfUWzNJ/pFo+
e9acv65tG30dzqRXqudgf22z8tzqbfyR6mBjX6H/kpfku6i/8Q1Rha/OL6br
Yr/i/5+5XXRzHMavz3mjq2dP88O076BvwOVZU/UifEF30rcz/S19C35OH+xG
f67WwgR6tn6j8nt4g6+HIbJX+b/pR3FY5iVnNc+B4fwV6Cy7l19ON8vexxzZ
aFkFvMmfhaGy3vw/dFccnufJWNwnX8E3xx6Ym/sEr8n/5R/DEfglfXG/fCXf
AntmjXJ/JMcDKF3SvlcfwsN4JLkxq/RtiRJ5/9wLeF2+k38cR2KDrAselK/m
b83ZxRc5i3hDvovvhhrYKJsiOxzv8ldmvvLb/Br6tqxzxvMnYCL9pfYxdEW8
xf+hNsk5plep52I2Xdz6tqLf1/9NtYC9ZU9o20xfg4P4o/gl9GmZc/6znFu1
RZ5L3WT8VPqI3CX8e9r/om/MfcZflbNLX4wD+C+zDuodfNfMofqdrFXWgL4i
z5H3UGtjEv2VfmOz59GHPwer6fMwhx6h/S26CJ7kt6jX4mj6G/V0TMldpd+0
nJW8N98g65815L+nb0cpzM8ZRB95UTwlOyZnSfZ41lD2A98apbEgexzd8Ki2
H2Vl7JM7UrEwexZ9tRVDd9mxmWfZE+gqW8vfibJYJBsnq4S+/LkYI+uXewNP
8zXznrIn8ZhsHd8G++R+ko3PfKMffx7GyvrnfKIHfxx+lz2Vd5Kt59uiXO4I
2QTZgejPn49xsgH87niGPx5L6TMwld6qfTpdAyP4q9E9c8L/RLfDvllLvg4+
yL7SPpGujAH8n2pTXECvUc/HXHo3++X23JP6D1T3QCnZs3kHuhEO5mvxy3JP
Zv/z0/giasvsT3Wb8TPoo1COH6n9b/omVOMb8mvpS/Lu/Fe5A9Q7M+dZK/Vn
WfucZfpKlM9+UU/Eh9lv+k2iq2AgfyEm5BvF74nn+BPwLV0P03NGtc/MfsUo
/hr0yNryv9AdsF/mW/ZBziXe5i/CxHzj+BJ4nq+deZQ9k7WVbeDvQoXMTZ4N
g+R7oaesDrbLnkV32Ub+blTMM+b38Bye1rZJdg/2x3LZh/kfhrL2es/818l/
g3y70UP/X/XriEpYkf9XGCwviRdkJ2KHbBZ/DEbz16JXnp//je6Ue5C+Kvs5
Z009KfNuXT7id9LNUJ1fmWfKXsA72i7GZNmQ3Cl4kT8p91O+6Xln2Wa+Mw7M
/Zj/LPmG5vuUb0q+E7nHczfnnsw9k/kwbov+96Jy7qL8B8DQ7Eu8JDs5e0s2
mz8WY/hGWEfXx3y6hGdukzOj9tH3P7WYc+0=
           "]]}, Annotation[#, "Charting`Private`Tag$392054#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfcjmUYxvHHplJSKWSLsilCRlaisit7vGSPJHvvkZktRZkNZGZEKjKK
klLZGkpGUsjue/7x+xzn77jux+u57+u6n1xJ3ep1TZZIJHokTyQKpEwkrqQy
Iw3W8YFoioIohMIogqvWX0VafMQHoRmK4pquJ9JhPR+M5siSOpGYpnsYP/C3
UAzXeS/chg18CFogq+un6x7Bj3weiuMG743bsZEPRQnXfsCfxF+8JR7UzeAF
8BOfj4q6Dfw5XI/P4aa5D+7AJl7TNdvMDTGMP8qXmSvhPG+FbLqZvCAO8vp8
j7kV3uZP8o3mWuhmPiVvxD0y/2DuhH7mf+Wj+luyLwbr0suX5DE5SX5s/Rm5
nY+SjeIZybNyhhxu/TG5nA+XlWVneVJOlX9bbyy/4+Nk+7h/0cs5Msl6djmL
F0IH8y/ykL6Bea85Ce/wSnyTuTZuxnPlP8bfw2M8wfuZ78RmPgIldSt4FVzg
rZFDN5sXxmG+IK5DMn1/3V3YwkeiDXLq5+iK4AhfiFJIrh+gy4BP+Ci8hMdR
GmWQwjUDrd+NrXw02iKX/g1dURzli1AWKfWDdBnxKR+Ddsitn6srhmN8MZ5A
Kv1g3T34jD/LvzA3xtj4f/IPzVXxD2+PPLo3eXEc58/zr82tsYRXjuduroOX
zX/KW3EuzD+ZJ8gusr+8KMtZS20eYh4i75Vt5XE5WX5u/Tm5g4+WTeL8ynNy
phwX90yu5CNkNdlF/i6nxT613kR+z1+THeLMyAuxX6zlNb9lLoGO5l/lCf0L
5m/MbbCUV+GbzXWRQEt+UHZFeetp+FDzfdjGa/Gd5qbxd+OZ8lXmp3CRd8RD
unlxjvAzfxdVdVt4PSRDBV1a3TBzJmzn49EJ+fTzY//iF/5evCeQLs6W7n58
wSegc5xt3GZthP4B7OAT0SXORzw73G59pLXM2MknoWt8f9xhbZQ+C3bxyeiG
/Pq3dSXxK38/vgfS60frsmI3nxL7WreaV8cl/jIe1r3DS+E3/gGq6T7h9ZEc
1XR36saYH8SXvDbfZW6G1+MM8DXmp3GZd8cjugX8cZzkL/J98Z7CMv4U32pu
gO7m0zIFWpkPyW4YYL4Uz871d5nHmofKbLKdPCGnyK+s15G7+RjZXPaUf8lZ
cmqcO7mWj5Q1Yv/IP+R0+Z/1pvIAHy87yr7yH/mKtQLmhebS6GT+Tf6ub2j+
Ns4NlvPq/FPz80iJJH44zmPcd+sZ4tyYs2MPn4ZyunW8Jq7wHiioW8TL4A++
Ak/jbv1ruhzYy6fjVRTSL9aVxSn+IWogo368Lie+5jPQEzVxj7UJ+lz4hs9E
r/jdiPdRnP04S7jXdRNdkxv7+Cz0RmH9Et0T+JOvjH2B+/STdHnwLZ+NPiii
XxrvHZzmq+KZIZN+si4v9vO6/EtzC8zh5flH5mdwlfdFUd27cf5xhjfi+2NP
YHXcK/6Z+YV4fuYzMhVam4/IibK7HCgvyzdkXZ+7X07hw+RDsr38OfZ4/BZa
rxd7jY+VLWUveV7Ojt8F6xXkev4srvF+KKZ7L94nOMvXxL+DB/Sv6/Lhez4X
/VEfDeL9Hu/CODexz+I7ojEyx372mfw4wN/EABTXv6+riHN8beyBeI/zF5Ea
bfjRuCcYFPtezo13u2v/BziqObc=
           "]]}, Annotation[#, "Charting`Private`Tag$392054#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Hf8TQUYB+CLbBnZ2asIlZ0RsleRkRGSIqPsLUVbO9ole++dWSkrJDvK
yt4rJEnP+8fzeb/v99xz7+93zzm3QMeeTXskSSQSFZMmEmNSJBKPpEok1qdM
JDozQS5KHvltMyNz5TNe11e+IX9OY7bq2umOyK9QkZQM16VgstyWb7yuhn2D
/Bx5Oav7lfb6o/ZXqUQqxupr6jfKXcjHOd02xjGeCUxkEpOZwlSmMZ0ZzGQW
s6nl/X72Pl3Jz3ndduZQ27FNum4U4IJuB3Op49hmXXcKclG3k3nMp67jW/TP
U4hLul08pT9mf43KpGaBvp7+F/kFCnNZ10/3j/wFTdit66A7Lr9OFdIwQpeS
KXI7FnpdfftWuQdFeMeeiXnyFcf7yzflL3k8rp09L6vkPY4/LZ+Q32CKXIKH
5VFmDpbKaeP6yqmYKs82y9BeHmMWivuHNfalcT47WOT9G5i/6leYPc2JZrG4
ttxjf9e8K85lvn2eWT7+J/5y/gDzX/1q8ytzuvkATeP7MvOxltX2xWZltvOb
czuaJ/VvUpXR9px8K6eLe05OzTT5qTjfOQ3t2+Re3MtV3V6e0Z+yv0U17mSJ
vlF8ntybolzT7WMpj8b3oOtDMa7rfudZ/Wn7SKqTnm/1j+l3yn25j791f9BJ
fyaeRx4hA8v0jfW75H4U54ZuoO6W/DXN2K/rrDsb9wY1yMhyfRP9brk/JfhH
N0j3X1xXmnNA95zuXFwravKx/W6WyZniHpfTMF3uENfaOY/b98gDKMl79sws
kG86Pli+Hb8NzJAfpEXcp2Z+vpMPel0X+Xycz1S5JLXkT8xcLJcXmZXiPorn
xUzLD8ywzzHLxjPH0/F5ZuH4LeLH+N7NqvG9s9LnNY17R7/SHGhOMu+L3w7u
t79vZolzWWifb1aIe9S5Q8xE/O2MdWymWSp+P3jC/pVZgO/lQ17fVb4Q70lt
MrNK30y/Vx7EA9zSDdUlYZy9JYd13ewX5Q+ow6f23KyQs8QzLadjpjzXLEdH
eaxZhJ/iPjKrxfPj/Zqb++JvMAebk83ibIrrE59jZo3z4tm2LzAfiuc77hnn
v2gmjf+P8Y7PMkuzhVZxT5oFWRfXJ54fswp/Ore7eUn3IdPiu6au/JmZJ66N
nDWeZflOZsnPMC5+R+I3QP7O+7SQf5eHUCrez56NxfJtx4fJyZhgb80R3fP2
y/JH1CNbPOe69MyWn+V7r3vC/oc8lNIkeEl3BxPlNhz1uhfsV+RR1Cc7P+hb
6vfLL1KGJBzT99D/JY+mATlYo2+lPyAPoyxJOa7vqb8azyENycmP+tb6g/E3
UY5knND30l+LZ4ZG3M1P+jb6Q/LLlI//356dJfJCsyLb4v+L15jJmSQ/yUnn
97Zfj/uOR8nFWv2T+sPycCqQnFP6daxnAxv5mU1sZgtt417w2hE8RApO6/vo
/457gcfIzUhdBubInRgv3xv3lrzcrM6ueO6d/z+15zox
           "]]}, Annotation[#, "Charting`Private`Tag$392054#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GXYFFUYBuAFqY+SVGkQaRAQpEMJkZQQkEZAQlK6W7o7BBRR0kC6U6VE
6e7uBiW9z4/7ep/nnNnZnd2ZzdCkffV20SKRSKHokcjhOJFIv7iRSCx+iIpE
6pGZOMyy9g7b5B6U4Yjj+1uLzY96fbIQxVF7xzjOCU5yitOc4SwDvC4O8x3f
gKzE5Zy9gdajWKA3JBvxmG0tE9vlnpTlvOMHWYvLQr0R2VmuF+W4PI74zNEz
87vci4+44PWDrcVjkd6YHKzQi3FCHk8CvtWz8Ifcm3/k2jyWy7FF/pgr8jWz
A7PkY2ZjXskXvd/XcnwW62fNFnwu7zSr8pI7+i2zc/ie4kUiOfWVcnGecVK/
bLYlpv0J+mG5AdH05/pDuVf4bvSE+ndyVv7lz3Dt5pf0kfeZn/FEvmd2D9ci
bzXLc1W+bn7FbPl4+MxEuOSahpgJWGKvCbvkatyVc7FKLsEpeSKvM1fPxg65
L+XDNTnXUGsJ+Ulvyrus1ktyWp5EIr7Xs7NT7kcFrnj9MGuv87PejNwkZp61
HOyS+1ORq44fbi0Rv+hfkIck4Te0N8J6Yn7Vm5OXpOG7sDfSehKW6i14j2T8
YC0nu+UBVOKG40dZS8pvekvykZwfreVijzyQytx0/GhryVimtyI/a/QPOCNP
5g3m6+/ylzyI/XKd8DvLVdgmV+Ba+BxmR+bIJ8wm4X7hlvcbYyZneXgOzZbh
/pB3m9XD/cs9/bbZhfflteaHPOds+P7NduF/xD03JfxPyA2Jrr/QH8m9w/Om
v6kvkHPzH3vD82G2ZrB8wKwb9uT7Zg8+kbebFbkenklOyk3De3DbdYw132CF
vdbskWtwXy7AOrkU5+SpvMVCPQ9/y19TlTvONc7am6zU21CQFNy1N976W6zS
21KIlOH5sXefBzzkERMcl4LV9ttRmFQsspaXf+QhVOOx4ydaS8kavT1FSM1i
a++xTx5KdZ44fpK1VKzVO1CU9XppzsvTSMMSPR/75WEclOvxVK7B73IlboT/
C07JzXgt3E/eZ7KZmnX2zputwn+C/Jf5KQ/C92Z2pZi8wSzDCy6E581sT2y/
/3T9qNwonF9/Ga5d7kN8Pa3+k5w/fD4O6JfMNsSwP1w/JNcnoj/TH8g9w2eR
/zArczM8T2Yn5sqnzS/COcK95ZqmmGlYb68je+WaPJSLs1Euy0V5Bun4Odz/
HJRHUJM/9SrhWQr/TTx17ql6WjbonSjBJv0jLskzSc8vegEOySOpxTOvn2Yt
HRv1zpQkA79aK8hheRS1ee746dbSs0nvwge8zVJrhTgij+YzXjh+hrUMbNa7
8rdci0fhHje7EeW7/VDfLJfjsvwNGflNL8xReQx1eOm8M629zRa9G6V4h1f2
ImY0ovMaMYhJrHBer8nIVrk7pcnEMmtFOCaPpS47wv9BeObleZyRmxOTJ/Ql
gc8e297/JQE8uw==
           "]]}, Annotation[#, "Charting`Private`Tag$392054#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.865361029035945*^9}, 3.865445408672529*^9, 
   3.865445465281426*^9, 3.8654456787461615`*^9, 3.8654457684634714`*^9, {
   3.865445884836256*^9, 3.865445921420556*^9}, 3.8654460587696333`*^9, 
   3.865446443250679*^9, {3.865952125553069*^9, 3.8659521516667013`*^9}, 
   3.8659522247202935`*^9, {3.865952279668687*^9, 3.8659522923016386`*^9}, 
   3.865960380517995*^9, 3.8659604237811317`*^9, 3.8659604862431183`*^9, {
   3.865960526854105*^9, 3.8659606215087757`*^9}, {3.8659608307097435`*^9, 
   3.865960868038782*^9}, {3.865960935615129*^9, 3.8659609432706757`*^9}, {
   3.865961026919873*^9, 3.865961042898753*^9}, {3.8659618737415323`*^9, 
   3.8659619220130653`*^9}, 3.8659621773942356`*^9, 3.865962208141383*^9, 
   3.8659653341237497`*^9, {3.865966920464451*^9, 3.865966952803088*^9}, {
   3.8659670377118826`*^9, 3.865967084214981*^9}, {3.8659671567557373`*^9, 
   3.86596716982355*^9}, {3.865967354328431*^9, 3.865967365694789*^9}, {
   3.865967429099472*^9, 3.8659674436738024`*^9}, {3.865967497088687*^9, 
   3.8659675719317055`*^9}, {3.8659677533835645`*^9, 3.8659678198432693`*^9}, 
   3.865967879244236*^9, {3.8659679215246882`*^9, 3.86596797117278*^9}, {
   3.865968013975065*^9, 3.865968049366725*^9}, {3.865968179144141*^9, 
   3.865968295722787*^9}, {3.8659683292590413`*^9, 3.865968337405431*^9}, {
   3.865968399526526*^9, 3.865968431918147*^9}, {3.865968471686404*^9, 
   3.8659685928285875`*^9}, 3.8659686585365334`*^9, {3.8659690928773613`*^9, 
   3.86596912452522*^9}, {3.865969364031477*^9, 3.8659694647951903`*^9}, {
   3.8659695001958475`*^9, 3.865969589464244*^9}, 3.8659696214759865`*^9, {
   3.865969666100687*^9, 3.8659696876527815`*^9}, {3.8659714896133933`*^9, 
   3.8659715124820657`*^9}, {3.865971671047258*^9, 3.865971706849786*^9}, 
   3.865974159481908*^9, 3.8660468621315126`*^9},
 CellLabel->
  "Out[3573]=",ExpressionUUID->"6b2591d0-6fb8-4e8f-869b-69bbbc222e37"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
Rhjlyh6wtlnGAC/V9g2RxP5imLc4eWDVOMiP6R30JeonHf8Lyp3SxPOzbq79
//Xt3RVZ8PIXFfV1ZkYZbxBG8bc73ifSZVDI1TuDfBkUxKVaaLjq4hgUulbc
UCCef3FAo+jwIBVZpi/ddB0JozIuvzUHLzPATdgxbAvxPfxVvV9E2XQ4NOlB
nSSeJ/iT79vE/Bg8zbeL30O8T+jGRXfvTzKgRX7y4//vb4FzHYIin8ZgUdBi
3nXE/FoTa2BFz2PAwcfRcS+J5w1WtBZt2DwGvw5taPz//b0iqYTLZVoGvdgk
fTY/j4LsNm1qVTo1Bg4Zd6p9id/fcMdWb6CPAcVlAb7/X/9Uj0eK7U1lALVl
52Nb4ucRSireoUrE9whOHfv/eq+z+WvLVgGinnwqdeD/7z/+aPpldBkD/Idn
Brv+vx7zuktp3T0GyfS5p/+vNzi82vKiki2DGO9SYXkhBZF69wE+ueFiou4i
9W7R+vyrDeuHgdS7o6MbLJca9gGpdzOtFPtC3vcAqXe/cboyfFW3F0i9O785
ZnuGbj+QendApWiDWMogkHq3bJfxjgrKCJB6t1xPj5ehP7Fu/9O7xZby+ehG
0IDUu4VM/3azmcNA6t39to+c/L8OAKl3+8qLGO9e2QOk3u3X/VX06ubfQOrd
6pIZUjUhlUDq3Yc0bj+O1kjm6N3dWkla/RfqOXq3vnbYNVZHF0fv3olPrTXe
SOPo3ZNsq+0d6eMcvfv6quaqP8cnOXp3upGetM6WKY7eXWA/W3TQi9g//tO7
x5yXeZwv68Wk3p10JEvt/NUkTOrdg+sbLNLvdXP07uwPL2wqi8Y5erf21HPq
3mvTHL3712nJsVPlcxy9e6HzIdtEdzZH7x7oc31suXyOo3fnbLsyYJQ/BaTe
HVa1xNM0dxxIvfvT3Wy5LjQIpN4tviLnTWBnNZB6d2lTWfh5iXpM6t1PO0Id
k9XomNS72xO8RtfdmsGk3r2vpddvmwtPEal3K/M0nRgwEywi9W6u//6QejfZ
JvVusk3q3WSb1LvJNql3k21S7ybbpN5Ntkm9m2yTejfZJvVu9cQHzbIVo7CS
/T6evbkMVKu8f/PsHoCQqoLuo2Z1YO5QV3hHoxdIPTxOvbqvoLgHSD386v0H
3YuW9gGph3d3rD19zW0ASD18dt/pM5K0ISD1cGpUh3rSyAiQejiT59WPZzk0
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
o5y8kW2hLMWrR0swmTeyRG/A5bHzG0zyuPq6Yat2H94NJI+bWKJeGxh+F0ge
t9zCeKmr/ScgeVw7F2+lT6O3OXkjy6qm10/ebOTkjWSfVjZ8U93KyRuJEi/a
q6bxl5M3Mt9wa9ltVjsnbyRGXvdBy68OTt6I4vxng6m1nZy8EcE8GZcYSicn
b8RF50HB7oAOTt7Ik5n1Z3bHt3PyRERm5o/OTzVx8kR2n1rM/9qkgZMnMlx6
YPKsUx0nT6ReN0oWn6nl8LiMLS3FP0drOTzupJzPQOaNBg6Py1OqoP3CqpXD
42Z91z6nxdXB4W/XbyqYXWE6gEn+1meC/cN9chiT/K3ra60oXy46JvnbwYTE
wlo6HZP87Q6uhAc2xxiY5G+V6+a4uxQYmORvd+zWVPt6ko5J/na9ZfTJx3I0
TPK3yhaRGj1vBjn5J3O/gu7GPf6JyfyTxI7gS0X5GJM87nP5uMaZ4ieY5HFX
LRLNCHK+CSR/m+dgvcH+1wcg805URN4GRkf+/l/eiYNEwbhZOyfvpDywLrfO
u4OTd3LxF/vMvGgnJ+/kr4uUYrRaJyfvxPaua/Cpug5O3sno2ugbn2Q7cJtR
rW5x2zxw7YtnfItsxKKh1o4MGhdqPO5Zv8CgHj8rLtzEYHKjQzcW3S8sqMUk
b3uQ+fMD82Ith7d1fLCipo9ex+Ft/bdbFvmlNnF42sh5CU2q1hAmeVrNIv/H
7xNpmORpf9cfW60cQsckTxsRqpxjtpWBSZ6WLytx5qYJA5M8bYbLxpCTDXRM
8rQ0IUzJjhrl5LWsfBrgmbPvGybzWgoEIXps3TtM8rWnrk0OWY94YpKvFdX+
cHJHdxiQfK0vu3J/SetHDg97t8gkJ3FrBye/pcKxU4A91sHJb8ESKhJOGp2c
/Ba3v81T+yY6cHiRImVzFjeyDOi8dEiwDl9b8viPTT4PMt79IN6ZOJ/azmy+
rIoXoNRbgzLPbOswyc82RfesOnKjEZN8bIgu9fmRvcT+8x8fK52iT1kqy8Ak
H/vzy7O1Ry0ZmORjl55q+6PHzeDkx5h5Cw4mWkZgko/1nBmzXR5zi8O77ohx
uyCS0sHJj3Eclrj5d0UnJz+m3H5Hz+uVnTi3zMI2fSsPepB/FGeG1OK6xt6v
ldoL0NvFMZpCL2oxycMm2v7+pZlSj6k19VQvRxEUZ3vmRjGmc/hXmq15l7cx
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
aw0vNA/QDiw1p0Dkn3aPONNYm2ZxT7B128RIndM/3BNcW+XnkBzAxj3BxXfg
Yt8NFu4JTsWJRyqQ8wHqCTYd0zqTf4UF1J4eHW5+IQIXrgleTppkgQK/Lr/n
8lR4LeRmtfVuNphr972U/ZoKpz32x2cyWWB2sCZjqZIoDM85d6HJYRIgTzWi
UGypcZ4BkKeyjc98tlxnCPcK5XU/WQjk/QbIU6mtH+Of21WGPVVbMDf7QEEX
QL1C8VDtM07fBnAfcHmfU6TaV3KetoOGni3cUEFCOCZ2LwX+MncNL+/kgfEh
uxP2XSb3ff95pwt/jjlc7GHjHuDLrv1bKWks3AM8qrG72HAnC4h3HFJdvlQE
CjLf5iaS98faXbL+YxQq3L5p3HEHZIMWnSyq2R0qDLZ3+bpajg2M3x3jm+QR
hTlBocXp9EncE/w7N5i6LKwUoJ7fHNt1Rd9bTmiWaXXQ/wwP3GQWbB4aQYEz
lmE7as7wwqtz+4z5llEg8k0C22KGuMj7F/X9birJ33hGHs/1soTdO+8KQ+tH
xUG39cjxbKt7YleRCPzeBabeUtng4MfXvhYmVOjxWv1q8i42WOtv3Lq2lApP
8r+viyKfD+SjeKP3pF+z7sY+qtZcd2ee4CCBeoAuFrrhvYX9BOoBTu1dv3La
sRf7JNXX+58r7BgCyCcVnYsdeKc0jnt8XcIKqaerJwDySTc5Q3uUb7EB8km6
Hm/19xrPAuSTsnkO9W6T5IDIJ7V0Nm7so5Pn678e30W7/W+uh1Mg8kp564bl
Uus5IfJJSyfiTMYn5nB/j/I+QyJv8P/6e443q+e8Lk3h/p7k5SdmS1gs3N9T
cXc7vGjJwv29AVltq3ByvEE+iddjdEfPexbu7+mYDhy8tp6cTy9OH1w8TYUV
muHZ6vrk+ZYNYp1qp8KOJCXZQh8WQJ5JM7fDRk+XCZBnWnPakXX01Dju992W
rbW5ENsLkGfSu6Z1tVu8DqB+n9vNM7dME8uxb7K9XhqicbIToH7f6aE1YPbu
APZCv0v93ZaXzwPUv+tdcp0dIccJUf/ujXj3sw5vCrT/flzUicoLfzSFG/w5
TIHID207QrmvcnIW9+4+niR4s8L+4d7dleqlUUbRbNy7G5Ls+tFzj4V7d/av
nxUvarJw746LOPxW4CL5vE2K6q58KgJDOuKUFkbI3/+wtXCrNBUyhmw+PDVn
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
xvuhxTDuY529UtXTmPUXIL+ifry+uvVfKfYr38ovr9Hx7gKoj3X8moNKSucA
7lERU8+qc+9yQCuj2w7pedzw1b6kuLvqFDjpaCm3UMoD9+pPmWnepkDkS9be
772VsGIK96ek6jd+qP/Gwv2pt3may/+Q49/Tjf8sL4wJwzU6g7fVjrDAo+63
41snReCdJLFxqMUGR70Ftgf7UOE2uwqaDTlfmJzdvkdgmgrHQ5zLEuVZuF/l
uW/WMF2/FKB+1MYrGW6lvpxQ5/ETnwIDHmgZqXMmiJyfyFVm6RJjXqj5oGCl
uyK5H/nPk/g6Be36asXGPammecqxDlcWKBnf9/O+Mzl/xb4vf0mO/wp7LjEt
M0UgnTtg79GlbFCyS3X0oSYVivL0q0SS49HLz8/nz32iwutKYwf5GljYo6T6
iFyPEesG9FsC/T4pYWCpi5CQ88IAUf9Bf927aG5INXjU4iJAgaMOSy7rJPHA
G4IBe83I+d/zcQuDXiwEDbbndaeZskCVsNd4WY0wjNBWv5RryQLfzM08jneL
QO97Fzn1N7NB2XrFWz8dqXBOq2W7FLnfRD6FkbX79NfU76BoYc+2XDkeaLz8
2nP3QApc5qIobbieF9499XzkgAkFoh7UIbtOjkB/FggwbGhOMBeGc4n7tvzv
/mV/qHH9rECFq8zUKjLJ8V3IMXf3uzdUaPd+Nug4nTy+5orUjN/kfvp79MyJ
g+R64HxkJdHLA+e8X/9aeokC/w019VQsJY8/2KqhlDyfJ/2WufMtpcK6h/Z8
O/TZYKiM3q8XTIXxMUlGTTJs8Hl9cwFhywMpzYwvnOT4PWRQn+8YIARXzN6m
dZxmAe5ndVU+D4ThpQePcjTI+ym0J8zFwYwKJYfpAkrk/Ib8yci/UwN157vB
+X7rlycieWDxjbNu9eR8uldHgjXzgdwft49J/+/fm33nNTaxz1DhKbE7HWKQ
DSgaKo8/CfPAigizELsr5P5vdHlbipYwTLgfvjhDzqciPTJpFqup8FrYtI4M
+XmXBxmTf5p4oJWaanKhHwXSwlcN1E8KwT1yCmlz5Hzq/eF4+vM5EfiU0SrI
pcsGMyeyJQsP8MC1AtajkeTx9BhTawJ9heERed6bb8jfTxbrfDcLqJDXlPdz
DXm+Lwwk75bJIe/n1fpJDuT8GD4QNdZXT14vWkGqqyEL95lmzqVvX5wvB9cr
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
0O5Hns+Oh4f1CCpUmJmpPUTO5xsDJfzk2+aAvtByqRByf4F8zHpvK8pz8vNE
rCTb33lQ4RXzBucmPyb2MWNZorOcAxmg8sgp1r/hefBKYDFdhtw/Hn2UmhiU
ToXWmk4nt5Lz67TLztxQm3mwfGiy9Dm5/vYf0o5LYJHHo6lPTSXP37bxLij5
iAq7q1e0XCLnb+RjHrlJbt3/jNw/b/XiZdWQ64+okOpt/kzsY5qXiXLZzxVi
HyMhv3fhfSqd4Flf8TAnch5kD1+Mlckn5/9NVibdsVTyed6x5n///q2pnXTA
Qmge+NvHX9tG7vc13saHjP3ggaNJVwqukuNJWfWqlL355P1QmH9ibRgT1BpF
aIhVzYE7dvanUj7TsI8RVsvzU/lEHr+v2r+YVCrcw5uw4E6Or/FbPl24sX8e
yM3E31tJXj/dlAH1D6M80GpY7cWXDDoh1HY+XPk+FU4EP4xODWdi/7L2eAt3
FPnnQwdgfOErKoxctmFZGXm8w1lpXfaq8yDI11Rhnvz7cjcaWde288DspWt2
aJOff5N4/m3ryBxYldAZUkzQQIbibLZgIQ8UKy/64UN+H+RhxgvkxqooacA3
UX7fpUwqTDYXrXoYwQQHUgiOZ17zwPDk+IfLxeT14zo5yhNOhTG6b651kNcP
+Rd/Y9PYHgEChJcam6VpLgD8Pm+Pdqh0nxe/H2wLz+kPwg+p///3hf333/8D
0qrC6A==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{481, 2799, 403, 404, 405, 406, 910, 754, 632, 540, 
            480, 447, 938, 782, 660, 568, 508, 971, 815, 693, 601, 407, 911, 
            755, 633, 1008, 852, 541, 981, 825, 1047, 703, 1025, 869, 1063}}], 
           PolygonBox[CompressedData["
1:eJwV0TkvpmEYhuGHj0jEmmgQhURjGCpKGkujYiQUCtPM2P+BffcbZvh+wWeL
KSgtDYmxNKPDDA1jLRQSx1Ocua/zup8371b+daR9OD2EkIYl3GeHcIcxxTgm
MInRRAiXDn5HDo51KfzQp2FOV4X/uimM6a54H3LxW7eKn/p0zOuq8aDb45VI
8Q5Mx3vza7kfefF6Xodt+cR+Sy7BCn8ze9AkX5otOJSzMkIYkNecXzYTyNct
2L3IXSjnn/kfuQHFfJcnzG/xucxH1+/Ln1DEV+3f5V5U8C/8Vm5DGT/h2eYw
n4nf0PyrG8C93B6fI76HWY8d+dS5X3IpkrwZV3IrjuR1+xU5A4v81exGjXxh
NmJPfnLuQK6K7807MRv/If8nD6IAZ7oNJPWZWNLV4lk3F/+h7oYPoRDnuk3M
Y9ruVvcBzulK2w==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0stTjWEABvA3NdSJGSO5RJQZm0ZNrlmqBamxyQxNC4tWFsaJxF8Quh7l
P6hUtsqlmyVlYZMRUTY2oQ4zCpkxfu/iN+/zPN85zfm+vuLGZN3VDSGEDCZZ
SYSQptfwnE/s8YFb/KArM4Qe2xSLFNhu8p1O1+7Z/lKh32eL7SGTtgV221pI
02FP2dY5ofey2TbMhK1WH6JYn+KjbZd+gxXabd22enmUMv0Vf2zTepW8yHG5
h1x5iHHXa/RBiuJv40O8X/2k/Iad8nlnmmZ5mTa5y+eSztysEGZt+5zn9CUu
6gf1RvkfI3q+XirP8Nt3S/TLcpbzpesFzkp9gWP6Ab1BXovPUt+qJ+RBxnz/
ijPb9tq1avkzZ+VLznUeyPvj82M+/p/0CnmWHfJ1vnFX73T9gvyIQ/o0v2wv
9FPxeXNUTpET/zbPXK/WB+K9x2fJe1u+fo2v3LF12NY4oneTbRvgqe2M3k9h
vCfe2bbrTXzhtq3dtsrh+M6xydbPE9tpvY+98fcwZ8vTkyzRamuz/aQ8vpds
tPXx2PaWbbb44v8HGHRmfQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwV1NdvTnEcx/FTNSskNiExW+vKuFK1ygViJrioWVRIjFJ0qM0fYG+JXa3a
MW6U2kW5sEdJbCpGona9fhfvft+fz++c5+lzzu+c1qmzR86qEkVRDDr7Mwef
46KoHIt5LgpRitoOnIYXyI2NokW6T+gkrw4fotuGQ7pbiNOl4TkW6XN05ego
r0IltuoLdMl8J5rJJ3FTV0ueijLk6LJ1I3khOsgX8VHXQV6Jf9iiy9f14zvQ
VD6BG7qzcnd+GzX5CLMcU/gzZPMsx93hg/kbjOATzT/hd/EGVaOoPS/Gh/Dd
chqvYhaH7zOT5IdoL7eSx/BvWCHXlf+am+WDzu8sz+DVzRJ9c3OA/AJ95bHm
D2zn9a014cdR4twpZqQ7Y60bL0UNPjxcF0zmT5HFMx1/mw/irzGcFyCBX8B7
6xfknvwBEvhy/MEmOc96H74NjeVjuK6rLqfiCTJ1C3XvEC8vw29s1B/QXUM1
eRIeY6F+gW4/rqJquNZ4hAXW5uveop28FL+wQb9P1zvsHTSSj+KKLlaegIeY
r8vQDeP5iJfPh3uqOy8n8vtoy0ebX7GE/8R6vtdx081qru91XX/+HL14W10K
r8AWuZ7ckB/BZeclyJN5JU6H6yV35bfCPpFbysPC/sF4uY78wMyQ5zl/pllL
V6prYQ6UX2Fo+H3m77B3eDuzKNxP5xTJPfg9tOGjzC9YzH9gHd8T7gFP5mVI
Cvsw7Gl+GJesn5K7hOcPMXwc7mOePNf6EJ4XroF8LvxfutbhfYAKrNXt1vUM
+ybsWbkwPKvhBRP2M+5hri5d9xKtwvsB37FGv0uXGPZNuLbhuQvPm64SKbq7
SNf9B8+knug=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1He8jmUcBvBj7723Y68oWxRSmRmHIiqcyuagYZQoKrTMMip7No2shlE0
SMMqs5RRVLas+P4+/fF9r+v+PWc8z3PfnzcxOSVpQKqEhIQUH5GlfOyXsxlI
S2qQmjSkpbSfOSDnMIhW1CQdZVw7KOcymHuoxa3m5+QaxvIw6SlrfkjO4zFa
U5v65uflWsbxCBkoZ/6LnM/jtKEODcwvyHWM51EyUt78V7mAJ2hL03hWNutT
qctt1hflx7zEvdY52KH3iOfQM7BVn0kmKlgflgt5kiTrrHyvt6OZnpotendZ
hNf1+2Ue9uj1uF3/V35CN70wL+v3yZz0YWc8kyxBf3rGu5IZ6c22eKeyGP14
07qLzEdffo7nkCWJDc9sXVH+JnvJRfIhWZAhenuZjR/i3cviJOnNZRq+1JNl
Ud7QO8u8/BR7TUP9kvyUV+honYtd8f9i3/RMfKu/RRYqWf8uFzM07oEWZmn5
Sp8W54JG1pflZ7xKb7JS2fyIXMIwOsS5oLH5Fbme1+hDNqqYH5VLGR57HueA
O8yvyg1MoC/Zucn8mHyHp2J/Yu/IQVXXjst3eTqeN94BOanm2h/yPUbQKZ6B
XNzs2p/yfZ6JsxH3S25uce2E/ICR8Y7j3shDdddOyg8ZFXtNE/JSw7W/5DKe
5QHuJB81XftbLuc5HuQu8lOAghSiMEUoSjGKU4KSJFKK0pShLLX83X/kCkbH
WeLuuCfza3IjE+lHOWqbn5IrGUNXmsZ9mv8nNzGJ/pSnjvlp+RHP042WZun4
Wp9Os3gW6+vycybHu7bOzW59AG3j7LNdfzvejZ6fvXoF6upn5Kq4J70QL8RZ
ktn5Ue9OKz093+gzaE5FKlE5zlaclzgXsf+xz7Gf1PM7Z+VqXiSZFvGu4suX
L8QUUmhnnYXv9FmxV3oB9uk9ZWKq/7+3q1vfAO+lmlw=
           "]]}, Annotation[#, "Charting`Private`Tag$392165#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1ncYlmMcxfG3ZVR2UYoGKTMlMkOIzFRkl2igpaKBjJaRjCKbJg1KqBQK
7TIKlUSTVFJZRRmfc/nje/3OOfd9X+/z3Ot5q7Ts2LhDkUKhMKNoodCJuL1Y
ofAVfS3+5T/G67L9MER2GobJnuT/oO9GZazLWHSWL+GvQwEzZW/I9scz/OkY
LhvEb6fvQRV8L5suOwyj+UvQWdaFX0pfjyL4hK+FyfQs7ePpA/AsfwZW0udg
Hj1C+2B6B90L2+grUJVeop5a7P/3/kG/GfThGMPvVJvj0jyX2hAVixcKn/F7
qu35LsZ0VZfJ9pLdoG7iL0Mlvij/KV0bB/JTMp/0TTiCn238BLpM5pZ/Tvt2
+trMAV+PX0Wfi/l0Cdkt9EjjnlL/lN2LX+grM4Zeqp6GD+n1+n1IV8NY/jJ0
ld3Bf003RzHMkb0pK4vn+TMxSvY0/xd9Hw7HjxmLO+XL+RYojrmyV5Ojm7Zv
ZDfmeTFP9hqGyHfy96MaNqQvustX8C2xG+bLJma+8AJ/FkbLnuF30Q/gCCzj
T8dH9EbtH2VOMY5vlPWkL8TndHftPehv6ZvwE90Iu9OfqSfg3exV83szvUD/
t9SDsmdlL2rbQV+Hs+nV6nmooG1Bnlu9lT9aHWPss/Tf8r353uqvfDNU5qvz
X9NnoBz/MV9Ubc3XUDflvNHVs6f517Xvolvg8qypehEW0T307Ul/R9+MzemD
PejP1TqYSi/U7+38Hl7i62Os7Dn+H7oPamReZDPzHHiDb4yesrv4lXSr7P2c
P9k7svJ4mT8H42TP8//SfXFknidjcbd8Fd8aJXMmcp/gBXkB/WRH4ef0xT2y
1XwblMoa5f5Ijl7YXNK+V+/D/XgguTFr9G2L0nn/3At4UV4E/WVHY4usN+6V
reVvydnFopxFvCQvigdlx2CrbBZ/JMbzTTJf+W1+HX1r1jnj+RMxjV6sfRJ9
MF7h/1Svzzmm16gNsJDe3freRr+p/8tqMewje0jbb/RVqMIfyy+n62XO+Zk5
t2qbPJe6zfjZ9FG5S/gJ2v+mb8x9xjfN2aUvxiH84qyD2oHvmzlUv5fdljWg
G+c58h7qSXiP/kK/ydnzGMqfh7X0+fiEnqj9Fbo4HuZ/V6/GcfQ36pmYlbtK
vzk5K3lv/gr0yxryP9DtsC++zBnEUHkJPCKrmbMk6581lK3n22M/fJU9jgfR
R9uPeRf7pIO6P5Zkz2KYtt0wQHZ85ln2EPrKNvAdcUDuUdkUWUUM4xtgkmx4
7g08ytfKe8oeRj/ZRr4TyuR+kr2b+cZw/nxMlo3I+cRAvjb+kD2Sd5Jt4m9H
2dwRsqmyQzGCvwBTZCP5PfEYfwJW0GdhNr1d+1z6GEzkr8SAzAn/E90ZB2Yt
+bp4P/tK+zS6Ekbyf6k3oCG9Tr0An9J72C/tck/qP0otiX1lj+cd6GtQla/D
f5t7Mvufn8MXV9tmf6o7jJ9HH4uy/Fva/6FbohrfjN9AX5J357/IHaB2zJxn
rdTNsi45y3QTHJT9op6MD7Lf9HuProxR/IWYmm8UXwpP8CfiO7o+5uaMap+f
/Yq3+aswMGvL/0x3RbnMt+z9nEu8yl+EafnG8aXxJH9S5lH2WNZWtoW/A+Uz
N3k2jJbvhUGyutgpexwDZFv5O3FwnjG/hyfwqLZtsm6ogJWyD/I/DFvs9UH5
r5P/Bvl2Y6D+v+jXHRWxKv+vMEa+NwbLTsYu2QK+Jt7hr8aQPD//K90j9yDd
NPs5Z009JfNuXabzRdRWfHV1dZ4pewGvabsYM2Rjc6fgKf6U3E/5puedZb/x
PXFo7sf8Z8k3NN+nfFPyncg9nrs592TumcyHcb/rfxcq5S7KfwCMy77E07JT
s7dkC/njMYm/BhvpS/ElXdozd8qZUYfq+x+xHHXH
           "]]}, Annotation[#, "Charting`Private`Tag$392165#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfcjWUcx/FjKyGjJCXKiGySlVCKqKySFR6UEQqRvbfs7MhKoVJGdvaW
ymzYUlZaojJ6//74vL6/z/e6z3nOOfd1X0/upI51OiRLJBLtkicShVMmEv+m
SiTewu1YyfuiKYqgKIqhOP6z3hXpsIr3QzOUwHVdN9yB1bw/muPe1InEu7qC
OMJnoSRu8LeRHmv4ACQhh+sn6R7Bd/x9lMJN3h0ZsJYPjPdx7Sf8SfzOW+A+
3WReCN/z2aisW8tr4xZ/FLfMPZAR6/ig+Duu+5Q/hT94S9yvm8IL4wdel39l
boE5vApfZ66DjubzMoEm5iOyPUq7LsF7mu9EK/MJuV5f07zdPEQ2ll3kZTlO
Do7PKpfwgbKqfF3+LEfLP603lAf5CNk2fiP5l3xXtrKeU07l/WUR2UaekT9a
q2feZ24Z9yLeT87VP2leb66LN8wXZDK8Yv5OdsBjrkvGe5kz4Uv+HN8R3z2+
Dy/NPzM/jb/4q3hAN40XxVE+D2WQXN9blxkb+FC8hlz66bpiOMbnoyxS6Pvo
smAjH4bWKIfyqICUrulrPSs28eFog9z6GbriOM4/wONIpe+nuwub+Qi0xYP6
93QlcIIvQEWk1vfX3Y0tfCQe033On8EV3g4P6WbykjjJX+Rfxz7Ah/wp/qW5
Ht40X5TJ0dT8fewr9DJflU+4Po15gLmvzCZflSflVmvPm3eah8pX4rmWv8nx
clT81nIpHySrxf6Uv8gx8m/rjeQhPlK2i2dEXpGT5OvW88hZfIAsJdvKn+Qp
ay+Zv4nPg494Vb7B/CJSoBn/IfYUKllPywea78E2/gLfFd8b78R95svM1XGV
t0de3fv8UZzmC/G0biN/CSlRWXebbpA5O7bz0bE3dMv5s7jGOyCfbnY8ozjD
F8Uzjdvj+dPdix18DDrGs4F01oboc2AnH4s34j7Gd8Yd1odauw+7+Di8ifz6
OfHs4Ce+OD470uuH6e7Hbj4enfCwfq6uDM7yj/EMMuiH63JiD58Qe163gtfA
P7wzCujm8bL4mX8Sr9dt4vWRCtV0GXUjzA9gL6/Fd8f9wsR4lvgX5pr4l3dB
Qd18Xg6/8Pr8W/Nr+JRX45vNL6OT+ZJMjebmH2Ofo7f5Wtxf199pHmnuJ3PF
+8hTsQ/ivLVeW+7hw2Rz2VX+LifE/5d4fuVKPlg+F2eUPCfHyv+sN5aH+ajY
x7Jn7Pd4Pqw9Yv7AXB7tzGflOf3L5v3m1ljCq/Mt5gZIgyR+NL5f7CnrmeIZ
M+fGPj4pzgndKv48rvOuKKRbwCvgPP8MNZBZ/47uQXzNJ6MbCus/1D2OC/zz
+L+BLPrRuofwDZ+Ct+McRlZrY/R58C2fiu5xPsRzFvc4flPc5bqxrsmL/Xwa
eqCI/iNdRVzkS1EHd+vH6fLhAJ+OniiqXxjnEy7xZaiLbPrxuvw4yGfgCd1q
/gJu8F4oplsU5wJ+5Q34AXMbLOfP8q3mhuhs/lWmRQvzsehQz3X38Anmh+O+
mU/LQ/HZzXvNw2WS7Cb/iP0dZ7v1SnINr4WbvDeK6xbHeYLLfEWc3XHOxX6P
/RGfEw3j3Iw9hibI7nUTvaYADvOZ6IMS+o91VfAb/yLuu24bb4Tb0JIfl13Q
x/yPnBxnuWv/B7lONgI=
           "]]}, Annotation[#, "Charting`Private`Tag$392165#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HccTmUYBuAPZZVCtpAVsleyQ6FsocjeVLTQniqVlkr23qFssrfssiN7
r7JCRl3PH9fvud/7nG+d854vd/uejXskSSQS+ZMmEoOSJxLFUyYSv6RIJFqS
iV7WCcbIxx1vI5+W+1OT9bo6up3ya5QiKYP1JfQL5VZk5oRuA0Mo6dgiXWuy
cFK3kaEMYzgjGMkoRjOGsYxjPBOYyCRKeb/F3qcNWTml28RkSju2RNeWbJzW
bWYKZRxbqmtHds7otvAjZR1bpmvP/ZzVbWUqDzu2XNeBHJzT/UZd/S7r1ylN
Mqbpy+lXyB3JyXldW90Z+Qtq8buunm63/AZluIPndP+Yg2jMdOc9olspdyIX
va2TMFb+y/F28ln5S2rzofU9/Cxvc7y+vEd+k6/l7JSV3zZTMpUp1sPMAtwp
P29eNSeZg82BZm7m8JR1P/O++IzorEebRWIP8JPPLG+u0o8zO8fvNrMwkwes
+5hJ+ZFxsYfMfPztte3Nc7qv+FbOyRNyX/NeZsjbnddA/kN+i4d5xzpVvKec
nBfka+YQmvCz11TQrZa7kJsLuh3MYCYVHV+j70oeLup20lC/N64Z5UjBLH0l
/Vq5G3m5pNtFI/2++E48Qkpm6yvr18ndycdlXQfd+bg3PMluXWPdn/K7lCcV
PXTXzaE0ZY7zquh+jX1Dfq7oOur+kr+hDnt0T+n2y+9RId7XOnXcezk1PeV/
Yw/QjE+tMzBXnuv1VeX1sS9in8lZeTD+B8xkjI/rbOaP/ev8TnEvdRPNAeZ3
Zi7qyh+ZaWOfxH6wHmk+FP9FcT+9tol5QD/efD9+h3k/s6gYv8G8i2nBerhZ
kPnRW79o3jAnm8PNH8w8PC1/ZmZknjzPZz0qb4i9QoF4lq3vYIJ81fHO8oXY
h9Rjr66p7qD8AZW4m/n6avqNcZ8oyDXdPprpD8VzSWXS8JLupjmCZ1jgvOq6
TXEvKBT/C/EsMlG+7ngX+WJcS76P54j68sdmurg+8iizcOwd5z9tHtZNMPua
A8wczKaK9fvm3UwP8V3MQiyI/w/rl81b5hRzpDnIzBt7gubWn5uZ4nmMa289
xiwa99Fn1zA3x72I51jOFvc4/oPM5EyS/3VeV/lS/B4a8Il1+viO8n7Hn5GP
xJ6halxz6zSxd+R7eUW+Hb+bFiz0msd0W+IaU5gbum66y/JAGnJA11x3NK4f
j5KWRfrH9Vvj91OEm7qDtNAfi+9INdKxWF9T/1t8F4pyS3eIZ/XHrftRnfQs
0dfS/y6/SjFu6w7TUn8inj1qcB9L9bX12+ReFOct6xRMjv+CeA5jP/Ofc7ub
V2LP04gjula6k7H3eYwMLNM/od8u96YECY7ql7OClaxiNWtYyzqe9Lodzu1D
SZJwTN9afyr2BY+TMX5jfC9zNM/S3zpz7DF5rFmMRfEf5vX/A6WSKNQ=
           "]]}, Annotation[#, "Charting`Private`Tag$392165#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4lGUUBdChu1GQkg4BaemUFkFBpDuku7sbDGwFRVpQGunuku6Q7kZa
cL0/1rP3OfPFzL3fTIbmnWt2ihKJRPJGjUTWxo5EGsWNRC7FiURGUpJ43LXv
ax9hmrke2Vhn39jusj6KUsTnnv16NrCRTWxmC1vZxnaaOPeK40dTmgTct99B
U69dNY+hDAl5YN/PPgq/meuTnZ32zeyu6WMpSyI+t3uTv/TOPHRcf3NUppsb
kINd9s3truvjKEdivrBLwQq9C48cN8AcjRnmhszXC3BYf4ef9Uxs0bfJDxmg
L5MlOKPvdp0W+g19PGv09wN9pszFafaG9yY/Dn8nkpi/lCk5wUrzZlk1/M/o
al4si3KOk+b9sk64F/+670AZnWPM9PoGWYlG+h+yIEf0fbI2OfUpMjNb9e2y
OgP15bIkZ/U9rt1Sv6lPoDyzzLnZpyflK/0tVundeOycQeYYzDI3JhdTzVnY
pg9ir+NamW/pE6lAMibbpWK13p0njhtsjslscxNyh89i39rutj6JiiTnqf0Q
+1jMMTflXf62/8zuTniGqMQbPLPfTxuv3Q3PB5V5k+f2BzhIW6/fC/8rqpCC
F/ZD7WMz19yMPByyb2d3P/x9qMps87v8rafkaz01a/QevHTOMHMcfjc350+9
EEf1vPyiZ2W7vkPWYLD+lywVno9wb1k/PLuu114+sDsqJ8u1sjwX+MA8R+YJ
zy/7wzMsa4bvaPifmr+RacIzx1rzlnBe+G2gp3mJLMY/nDIfkHX5z72Hy7jM
s98oK9NCXyDfC8+qno9f9Wzs0IewQi8drqkfcZ0O+sPw96IaqfjWLi3r9F68
ctwIczzmm1uSP3xu+452j8Jn4UNS89r+GMc5wUlOcZpO4TsV7kF10hBhpH18
/tBbUYAzju9s91j/jhqkJQqj7BPwp96agpx1fBe7J/r3fES6cK5dOtbrvYnK
aHNCFuifsVAvzHG9ENP07OzUh7JSL8N5/Zz7dNWf6j+wTq8QfnP0uTIvB8L3
W9bi7fB+QrJB3yqr0UdfKouH63LafFDWC78JRDOPkYnC+2KheZOswkXamBfJ
IuH3hBPheyg/5Xp4Dsy/yRzh+WGXeaf8iGH6Klk2PK/6YdkgPBc+Wzf5zO5H
1usVw3Or/y7zcVBPHz67np6Nel+iM9acmEV6Wwoz3fwOu/XhnHeP7ubn+k/U
IkO4n10GNun9iME4cxIW6+0owgXn97B7of/MJ2QkJuPtk7JEb09RLjq+p91L
fQq1yUQsJtgnY6negWJccnyv8D3Tp/Ip88z5OaTvlZ9wjczhM8iMbNb7E5uJ
5uQs0ztSnMuu29vuVfitoQ5ZiMMVr13lGte5wU1ucZs+znsdvs/UJStxmWT/
Bsv1TpRghjkne/QRrNbLhWcmfOdlQ25xx3X/BxDpPSc=
           "]]}, Annotation[#, "Charting`Private`Tag$392165#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.865361029035945*^9}, 3.865445408672529*^9, 
   3.865445465281426*^9, 3.8654456787461615`*^9, 3.8654457684634714`*^9, {
   3.865445884836256*^9, 3.865445921420556*^9}, 3.8654460587696333`*^9, 
   3.865446443250679*^9, {3.865952125553069*^9, 3.8659521516667013`*^9}, 
   3.8659522247202935`*^9, {3.865952279668687*^9, 3.8659522923016386`*^9}, 
   3.865960380517995*^9, 3.8659604237811317`*^9, 3.8659604862431183`*^9, {
   3.865960526854105*^9, 3.8659606215087757`*^9}, {3.8659608307097435`*^9, 
   3.865960868038782*^9}, {3.865960935615129*^9, 3.8659609432706757`*^9}, {
   3.865961026919873*^9, 3.865961042898753*^9}, {3.8659618737415323`*^9, 
   3.8659619220130653`*^9}, 3.8659621773942356`*^9, 3.865962208141383*^9, 
   3.8659653341237497`*^9, {3.865966920464451*^9, 3.865966952803088*^9}, {
   3.8659670377118826`*^9, 3.865967084214981*^9}, {3.8659671567557373`*^9, 
   3.86596716982355*^9}, {3.865967354328431*^9, 3.865967365694789*^9}, {
   3.865967429099472*^9, 3.8659674436738024`*^9}, {3.865967497088687*^9, 
   3.8659675719317055`*^9}, {3.8659677533835645`*^9, 3.8659678198432693`*^9}, 
   3.865967879244236*^9, {3.8659679215246882`*^9, 3.86596797117278*^9}, {
   3.865968013975065*^9, 3.865968049366725*^9}, {3.865968179144141*^9, 
   3.865968295722787*^9}, {3.8659683292590413`*^9, 3.865968337405431*^9}, {
   3.865968399526526*^9, 3.865968431918147*^9}, {3.865968471686404*^9, 
   3.8659685928285875`*^9}, 3.8659686585365334`*^9, {3.8659690928773613`*^9, 
   3.86596912452522*^9}, {3.865969364031477*^9, 3.8659694647951903`*^9}, {
   3.8659695001958475`*^9, 3.865969589464244*^9}, 3.8659696214759865`*^9, {
   3.865969666100687*^9, 3.8659696876527815`*^9}, {3.8659714896133933`*^9, 
   3.8659715124820657`*^9}, {3.865971671047258*^9, 3.865971706849786*^9}, 
   3.865974159481908*^9, 3.866046862282464*^9},
 CellLabel->
  "Out[3574]=",ExpressionUUID->"60e55a07-caff-448e-97f0-0c53aacc578d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
a3xXGqX9cX2Ru1wImSZcWGgoKoNiM+uWOKgJoRbbTSOc+zKIPbQkqWc38XxZ
T8x2LpRFsqfXPTI9RMSTR7aL9obLou22fz9yjgqhVG8kNi4lh1zpvxfsPymE
/LPwnfBHcmjwkK8V11wIVduHejzd/g9aQ39dfRU7hhtTrtac1uqBbwaF3z3O
sXADL253dxiAu1ZXF59hs3AKV+nxx8RheOqeYvvMmI3THhiVX6oYgWXn//iN
uLNx0LvC5HXdo+C5UHrlBSIfqlxaamLVxwKjooAEOxk2Tn1/uU6hlQNWdttU
5aNZuNZAiX8BnTj/OUdDy9rGsNEPx9PhnySR+ot9Gd+vCyLeIYlXIzuoKGjR
dMOq/RQUZ6W3OKGQijyu5gcMFlCQU5EOvypIoWwjx36dHuJ8SW5JGDaWQ7ky
C3dvPS2Exk61Vze1yCG2MS0m0kII/bhTdZBlew/wRsuutReG8OYL+cKzBxvh
tcYuLYsRJn4eZlvqENkOsaduNcTxjOG83b3a+t+6wL3Fd1CDPoYtT2e3hBf1
gkPfsg8nn7JweViKvz7/EIRopDheVmTjH5FnKvZHMYBhk/9dwZaNmY+FmY8j
mPBtnZ/aeuL+rKZsSbN8MwY31v0t6dJlY0enPy9MX7Ehpnm/ptUQCw/3flvU
HDsOG6I1XrecJuLv723r6rInQcehclf1rTH8o9dANyhjGhRG/j2pvzmKvcKm
hgcrZuAs1bJkyRYmVhlrWifiwoMKt6RsN3jOwNc+hXZ5Oc5DccYnmvdlDOFj
muMDq7150SVfkS+rFPtwuPH26RSv+ehPyoLbmT3/8KTaVwORO3zo0IH06tnj
TfieY9fZzu6FaDBcUkQxlx9tUNDaTnGQROXh7kH3egVQhaBz/PiAJNJokmLY
1RHPa9zLRsSeil7btw9WelPQ2Jcu490MKko9sPOjeA0FRTe//9biJIVujOhY
ZY0Q8dIkw9R+XAoNxyxO3yYshBRB5VSyrzSCSbW1D5YJIXn3hZ1G09KoI0f8
TuBGIVR/4/i9xUEyaGfmvp+XdwmhJzXuv9LnySLPz5RO5YNCqHeNg621nyxi
aTklDhgKocnjX9dp8suhPHsncV9TIbTqJmeSe10Ovb5/oP8Qsf8fCS/5dC6z
E7R3uKxX8hvDlyLHgpQKaXBwb2W9kh4Lr/G+5Zne1Q9TAUo+tjQWlglIKnFe
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
fBRLKVSmKbKIn4gvGpOb3CsHpJDLiIsWlYgvNo2lC3svSyOb9pWiDKJ/Tj12
byZyWBrF9C0+uoCIL8anR/ZtvUr0z6J7bIyJ+KL4Sf4cP1sG2fHJFO8h4kve
sRGLQhdZJLRm7OsSIr7keloXXpyQRUt/fijrJPpnc7tnohVX5ZCthFs4JuLL
Wr5fqqN6ndDZasxxtxvDp/be/+57lgbv9rptSNZk4fPHlw/KXesHuMA3W93I
wsn/QtblfaRDqpaU+KG9bLxX0Pld1fkRaK0bsp5PxJcl/Dyxho6j8CLuxfcZ
ezY+86msx9mLBSYbbs9bvJ6NHx5dtt7UmQM6tgmMax9ZuLiYYy3gMQFylpJ3
n4iysIfL1yN5CZKIbr1qdaKhIIq6sFo3aSkVzT57echjBXG/Gux4BZ5RkaHh
i6VtqRS03n3K+O5KKTT15tZ7LtF/ukmYGVpul0MGzVeWcoh+sHLhl2PyhXJo
sXrOuA8RX6733wxemzYE/poRcqc2snFgTdOR8G4GPLhlkJJO9O+y5z4s86Ux
oemf93cHor9fY+FU/2JqDBoao99nABuvpb41VvOjokQd/Y+59yjogY4Wmpwv
hdZarEz1a6Sg8pbgMr2SYVD3wBGPjxP5X5N/sXT7CKjmeOesI/b/qtQDcqvY
o/DV1jOk/Cwbo6crMpu+UNGFi+vohz5T0G0bIw/okENiewp18on4orhTYsnw
KwZ0vNl2wtiOjR/cjbR48JwJvidmhz4R8eVAyuncTWNUtC7q/F+9WgpKTNDs
dX02AiepvM7TxPvP6leaaWaNwvC7kOo2azbOy/t2kpFJRb37N8nq5VJQp8PL
QLVVxPOTXYV3E/VPtHpLq43yKNzevc1elaiPbKr/6OcuZYL6roMLbxPr/+bn
R/lWTUXajSKGzT8oqDdcfkEVk+i3NOWyjIj4cjQxMDDOnwnvzpm7hhLx7VnL
pRG9QSr6KxZUhKuI+ti41mBl4AhA/HaLRcT61Jejvna+EdhLFVsWTsQz00Ol
M5cpo+D94ZXiILGe3GD7HOvZEeBx6uhwJa5fe+UVulnMhItq7ueyif12bCg+
oPjzCNhlK999Q1xPRnFLj8BuJijUxu12Ij4v+2rGKGZKDiUmfbkZS6zvPWXd
Mge7szBR5rN4GXUI++vmpFQ5NkDMobItJyqZ+HBzyEu5pe0QXK2YturfKJ68
7Z7fatIFt0zna6GGMZx8w+p856FeOJp9aIf9baIfmmf28/e9QTD1LqOsl2bj
SIPBr57nGHBazWfM8zwRD9GbiyomTNAKfDW6lVjP7k0i7D63Mag43Z0yQcQ/
Ky0lA7YTG/hD9baNTLAw7YWqbqMFEf+2a7cHOrNwHqV+7XefSbi569gig+dj
WFSSp6LGbRpCAlfrDKWM4tjTKvXHH83A6puP30ieYeLzMWL8eSY8KMe789aB
Pwz8zuw7b6PhPPTaint43yo6zpKruOx7lhdl1qkL/Hzeh+lrF33LPD0fDR78
us00ogv/aLT8Ee/IhzQst/oZ9TXj8JVFLyfrFqJk3TCdRff5EbpMU1tyVhLl
nba8KvtLAMnv97ps3CaJXHZsVenGguh3ppAZnCLyf9QC27uXKKhKQXvKoZOK
Lrcfk1tOxL/xjMdhXeekkNb1i48j6BTkKD0y8b5PCjmpnanKpRD96lPNDKaT
NCoNvOGdQsQ/nSOJpu5D0mi7Z2pv6QYhJMmT+1HTXQY9j05et5KIfyLbt5ZT
x2RQ0JRnnQIR/1oEsm4/d5ZFnZqZwlNHhBBPbe08N44sMj7SVPqDiH+Slnb5
T93lEN+fm5uSifiHTHdFCe/sBM4fv/FnVmM4vSOAm3uEBntdNye1bmPhS4ma
s7OX+oG9mN8vvZ7oh8ZOiI8k06Fe+aSe9B6ins6RuTdjNgLt+V+Y74h4URa6
06raehQm5Xa0R1wk+n9aicx1FxYocmz6/vf3osgWtz0P7DjwavONoy/zWThu
beelx04TYMu/YLpGgoiH35sNCuIkUeDKpBvlhwWRRFTknhwFKjpsz/e7ZBkF
/dvp+743joo8j354b5JCQbyBeEXkcikUArq+N4n4V3ix9MHFrXLIZdS+4C8R
/4JFbvH25ssh5xwbC7v/9UOTppfOxg5Bq/+i0KENbGwSELDuUysDPj3YfUqV
iH8l3aM9s61MCPs9Vl5MfB+32xcE3o+OwR1OPGpDbNxw5StFypeK4kTyzlff
pSD7Izzi83il0MPBm/l8RPzTGjLJCnw3DC9vW/6OO0bUb7TXY6hhBIQKB9XE
if1fszGo/dXQKBz0Fct9eo6Nh3m22RR8piK5Oj7qUkxByGKRkuhfOaQvFDaR
RMS/sZ5ctnw80a/Iub38SPSXOtSKdTLRTChlTwyziPixNFfxxjYmFS1vdtyf
QfTbHvodRfFPRmAy5IfLD+J9wzNnVxSkjMLKxEL2PRs2vrC0Saz6LRW9cKkI
GMmhoFz5w6fPKIzABqlrzfVEvNP9IPuqb/koBH+w8HxBvNb0v7KmU4YJzMCr
oqHE+t3+PShIqqSi+j3p8q3fKSj2dsf7eIYcWmD7cgEi4guPcqHucg8mJAxX
ueYQ8cijb9Nno34qqnybbiJBxL8fPD5rj3iNwJ2OM8kNRPwSKKd9EeEyQJRu
fUOBiH+UP/zfx2aZYKhVtN6IqPdCNy8Mi+CMwPjyjUttiOtfn+6gCH9iQu32
Uqsp4vfXRu8/xfgwAhXcr4dvENfrL2v+rL6VCav2Zk15EZ8vS/jGc2FCDvlv
b9oUSqzv3JYtzUq2TPh+hKLBJT6vftdcu69nBMZYFwW1ic9XjD4QO5hC5Kuz
y3ZvIN6/r7TOLVSJCbvKOV03ifc7G7827RBkwu7f2e7XiNf+aCLp8Y8REB7e
HFfxv3rWNUy0eR8TdPs2HT1HvH/+9baXv7ly6AljoCyduD7Jr977FA4XE3Ur
ya/KTpRH+IcMAsmv7Ibqlx9u6QGSX+28ODX89xwNSH61qO0a5UkXDUh+Nd3G
z2dY0Qskv1r/oapZY/EAkPzqpvWiQDg+BCS/8sq1otyNpAPJrwrK5wcEu9OB
5Fcl+3bx6r0aBJJfNZT8KUrU7wOSX7lKWAWIRXYBya/aAtX71UVbgORXK15+
uXTv9C8g+dUlxo24j5/T5viVv+i1+H276+b4lX9UxHKpHV1z/Cr4UpElN5Y+
x6+mjvjV7WkdneNXCwqkluibcub4VeNj+YIzepw5ftVHu/TFb2IEk/xKY3fA
AP7dgUl+xRPinZCbZDTHr758PFAjodY5x68UAzac1ZwemeNXqWtCdXdeGJ/j
V5f+Sadcujk9x6+Ejmt9CMvkzvGrkNJtw+Ovpuf4lfjygq3Lz04Aya+unDmy
xMVoDEh+ta/nQKvYhgEg+dVp5urot7WVQPIrc44YpeJ1DSb51VZXhv7zJQxM
8iuPnIP9u/wmMcmveP7/v88kvyJfk/wqR39tT8XfPEzyK3lalBC94T0m+ZX/
sx94U9g7TPIrYUbXyuaObEzyK8nggONSblmY5FfyV4JHf1llYpJfNW+QTDpw
JwOT/Ergje/utQ/fYpJfMR6UfrttlY5JfrXimPejxt1pmORXtaEeDP3pYVDk
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
cxwMnmrP5EP7KL5uGyo5eO/nQnP5PH602dktrcuZjft7zX+GlQmjV4cKZ/9W
ToCrWdL6oBYRFO26vmKPPBccx95v5+0SRRanjzWpE/k+d/eJgZZ/YujLqwfV
ujzT8MgxpCmIK4ne0g93V2/jYtI/9HJ82vrMoQAbpsH6mE9lULzmCOvYi17o
Hzxj8dOlDrpnr/7Suk4DJZurjm3722CvTJ3F5+c0IH1FmcebbnBtiHzyf75i
tI0vW+kpHUhfsWedW2n3riGouUyFzcp8KJWiEmaczsY8kr8tLLfzo9MQGJH8
nYOf+xyIVj8ugiKcnUMNG6dA5F+jTfJ5USQlePV5WhIXtm/moSy3EENj/k/F
qRJcIH3H0/lHg1b4p2FerTGxld6V8Ke+I8HTvwdcVimz1tk1guvvouhgIn+R
PuTLNW8YW17SgfQhN0qfKAsxpIOSJcsChfOhJqWWpRLPOfjkzzXn8qP5EWfh
yuq6TjbW/9DUMpEngkaZl93HmqfhU1f39bxiUVTx/YH0lmQufJr27ndzq4VN
8yP2RL2gwdY781aG6LdC8Y49XgEhRP/vXN++Y+MwNFv0o7f76UD6lqE33HYO
pNAhzVqKZ1SQD20+untZFrBxws2dP77I8CPzUvWwD30cnHNC9JXQZhGUrmP7
2cN+CrqRqNwybVFUnpqbI0jU98ErVY81aouhPfH6L+q1uGCu8GH619VqcAnT
11WfocGxBuk7DWbNcHKnd+UmIh+S/qb5m/Hr3kQ+7XKXexhQzYfws5tx94c4
WPX98TOejfzIGE3EOgyw8JNpVy+RGRFUb+0fc0+fC4p8oYOH5osh5zwxFHuN
C1W8YuIKolTEt7Tl/Sv/GSzfCg1LLtfDin3u29460KBHY6CoewkDwC2CXhpA
B9IPdRC74BYVSocpX8lrroeJ+uZZ2Zpb4hxsHmM+Nd+MH12vdrqme4+DN994
9U7tuijC25vXaxP5g/RHE1W+nKeeScMe25yOXBtogMFS298xRP+1N+bomVI/
BigFrS+LjqPDlTgVaWc/PnRpCbu7M4iDu1qmU2XeiSJen5repDQuJPIJv9Vl
1cAjqRDzt7nE/o7f79tc0QJf1RvOy/jQgPRPH57tFVhHnF/mVxdvJj8/ivrI
2xbB5OCq4VfOZptE0XOmxAezYKLeHTCjqbQR/aBCP0XZnAakr7q1ZxW/ClHP
aWQeOZj5hQ99fMIKLO3g4ODXotUHhkRQSkBd+P4tXODtLo8dHamD4cNJxzuv
0uDGa5nFSePDYPL9fK7i/3zL//Nbz/lfWh4dSYf0uofpmw/xI7ozz0/ddA5e
poHEHFxF0eaYU93viO9nv7A7urarET43F78+RJyHRA2F8IuFDBjZx+66nkqH
ujWF6RLPiHifmvy9I5+DHw2Wm5vXiKJT7l5/cxO4UBwooasw+V89R/qzoTGt
bJRIB0N9PukHa/jRrZCrfy83c/BEhCv+d1QUZXUe/KkYz4XD3yrUrtc3g8SQ
x47OCzSwsc1kpe0cAZvJAncHYv/d1+zoONrFh3rkV2ZbjHEw8/DRdb1SVLRb
9eezM6tn8abaDOpBRj0Uui0yjbKmwf46kTPsSFGUfMh6yoSo50hfd+8mq+HP
eml4+nOEz9q0BuALFFx86gwN2KaUwr1pokhNOmJfzFsuOJv9bH5lPwJJtifN
PhP9d7SF2PFQLh9CVdUKXOL6S7VyDaMV//u+bW6+1Pr4JlhKoarpnib6+zUa
V6yGGDC5It+dl8i3LQYDyw/l8SFJzT1HpZo4+KHw3bwFF0VRomVDy7zXXKBH
C/7we9UIPBkStf/7+/LhsAt7vqYzYFO1kJYgkceT7Zou3ykTRaasPyLvE7kw
3h9PV15G7C/9RuO9/zjY6cLniwGHRJGs9TNEe8IFsaKZZH6VEWAfNXdKIO6f
VoNPfl8zH4o68fFazAgHK50cZ2Vl1MOCd/0vzhH3+1PaSaHIO6LIxt5ST564
X2Nph1fUrGsEwZktLseJ/FVxbiSq95Moevl37f5NxHoVk1TdObdGIOZ50dVt
b+igq1T/zEyMHyk/e3O+ks7BdRbbPwYqNIPfhlGLq+doYO72RPydyAgEHPTa
Okvs7zvUHMdFv/jQhFKIq14vB6ecHrX44y2KBs046aXE/aeFfHFYv7IJDrlX
xjcQ92O6qbyFWs6Ar1uXn0onridz4eYbsZn/7n+hqJWOid4I8Fx8L99J/P/9
sfsoeYN86NeA+/4Oov7XOnpBrXVjAzwZ5/w4ep4Gf2ZwhulTUcS8xlk7TsQL
0qc2XCcatWpPGiZ9ap7IyRznD9cKSZ9a3czwwPoLeXPzgGJFFR/m/P05Nw/I
6976hbRtVXPzgNq1L1Zm19bNzQO6s+P8LmOV5rl5QBKrUcp4UNvcPCDLT8Kj
M8/a5+YB0UKdVyK/jrl5QD83Fz1IbuiYmwdkIKk2bpbXMTcPCKnFvF6j2jE3
D0jz3xWDf4fa5+YBfUguuXhdsG1uHhBzz+b3GXrN/80D2vTJbcmuhjmf+vya
9yaHfGrnfGrquyN9R7yr53xqDX72tRKTqjmfupyZdrQkpWrOp77E3pH6a7Zm
zqd+TlnF4MQ3zvnUJadNY04M/Z3zqaN2iDpfEO+a86mvL/NdOjXZg0mfesXi
ZdXCHgOY9KlTUyrMwv3pmPSpDSkLY422MDDpU9t6PPc8mcbApE+965fU2vU3
GZj0qZesuB/s+H4Ykz61/jV1g96VQ5j0qW9YxdUv/9WHSZ86mF77ivujG5M+
9cjQy/41f9sx6VMrfLS40bCqYc6nfrXs6qQ3lM351OeDPQvpU+/nfGr/cDH5
wucrgPSpq2SEGMWl6UD61NWi0lUf1HOB9KlnTuYIdSR9AtKn9jKKE1q5swhI
n/pxSLzhibyvQPrUjrO1pZaaJUD61ApXIrW9zv8A0qfeE0MzNTctBdKndlPT
dfh1pAxIn7o5KuuezrxyIH1qX3NBCm/hHyB96iLhK9TH8Hpu/o/Vo+0jgXKN
c/N/tFxa2+yHW+bm/9x5s6hTf1773PyfylnjjoeKHXPzf56o7vTVIPYz6Uc/
0zMRzW/smJv/I3NGds+sf8fc/B8519k6pZL2ufk/Xdab4q6Z/52b76ONwhdU
ltfNzfdxvLzf6btVzdx8n63mrXy+uGpuvs/ByG9bTxpUzfnUpfp2x8TuVM/5
1HFeCV3t8+vnfOrDa1r668Nb5nzqe6aLgxmsDsxz8CBTlktBfmHrHtiV9s35
1ZYG+j7li4Yw6VdLvnmheShyGJN+tX/IvOnJ6wxM+tU7wukrZNIZmPSrNwz/
TD6gw8CkX32yUf6aYQQdk371l4+b4s7eH8CkX71a6v43ybYeTPrUWvLHQ3Du
1zmf+k1sQ7Dhy5dzPvXu2/TPArueA+lTe1/3X8E/PxtIv9kECgpSusqB9JsH
T//MtMiOmZv389jlFP3XdP3cvB81GRFGILVlbt4P/5X/R9SdR0P1Pg4cZ8gg
YSjJWiiSQkWKep4WsrZIqRBljYrQTkmUFpFKJUmrLUKS/RaylmUwVJKx7zPM
2Lff/Z3zfZ7Pnx1zZu7MvfdZOq/zvld9CNN/uPez1PhdzObOVtz7ObWf2WsS
y8S9HwfukbP7/jJx7+faLrfECfLvyCsvUogIYMy04t6P7LPkTb9n/+Gej0OV
1aldNxpxzyd+2z2ji/31uOfT6LZxek6yDvd8buT/cOk2omPfXNm1wfO6UB32
zc1xrUe+DTVg36zbuiokVugP9s25sUMyqcOtRIDZg766AkFo13Z12KKrB3tn
7cRj7Mq9AwTyzj+lDr/+TWMRyDtnyv+8OnecTSDvPJV7fyI0nU0g76x8UaDr
6Ek2gbzz06kTz4LWsgjknc1W5yisPjFAIO88sKry5oLfPQTyzWKBYYGXOkqx
bw4t187ZopRGoN5QvaHns+7MhwB55z92686G2qUB5I99aveZGPhWAdT3WbPh
xb5U4i/u+4yG+UxFHGzFfR+T1uvOoweYuO9TrTPmM/uDifs+UXa2hQJVTNz3
ebCMuu7dUSbu+xwUpi5wvtNK/I7hF/wrxgOLh+75ma9gEEGsmXR1UV64bNj4
fWRvHfGhZGFF1VIKlLl583bBNTqB/LE8T/CD4jN07I/7TijI8W2ox/746Hep
lWtBExGwa37SRl8Iulu+XS30vo/oYnblGO4Shm/apRX4GwaxR/6w/eWeFD42
gTzyUG2+mVIMm0AeGVhf9hl5ySaQR5Z11VwqKMkmkEe++m/nZcP2QdwnCvje
mka9TGB/fOzFJoPnxx8RqE80Wq3rcWpTAkCeOPrRg4cPLasB8sQPCsJ/prPu
4t7QVrm1ie/dG3FvSBzGue559Qf3hoJ2bHi1vrcF94YUlL+OPi5uxb2hE5sl
78WHM3FvSGD7p8QFzUzcG7ocdKn+WgoT94YODfO7a0oxcW+IIplfL7CyFfeE
ZFavdor+14h7QqrmJxzS1zfgnlCOu6T9KcM63BOKZq1+RzWnY0+s5jR/1LmB
jj3xskejybe8G7AnPjo/eWdy32/sie++HBJt9m4l4M/PXWkvBWFpRq7a+bM9
2Bd7RNqLPejsJ5Avtmn/eFywcohAvnjahZ34x5xNIF9s7V4wrZbGJpAvXttH
j/9xiU0gXzx2NcCh3JdFIF8sqlg7TC8eIJAv/irP0zJ1oJdAnljfUnplvkgF
9sR/mEruT69mEKh3dMDRkP9HWBBAvlj5TVIy77lUgLyvymuTmzT9KoD6Qp/c
ZR9Rj/zFfSEBq1/xbhqtuC/kc4HVaaTPxH0hzzvcZf7FTNwXSokzvd5Wz8R9
od1ba19HnWHivtAXAS/N9vhWotmizqC4eR6ECFT9W3qBQYjcsXUaHuKB0/a0
hPiV9cSb4gKd4VFe2BJj+rQzmk4g73t8i+XtgzZ07H0PdL852/G7DntfL16B
rtLoRgKWKI9tlhOCnbu/L7DZ3EcsKT129pqSMGzOsHu0/9Ig9r+FKRnJ36tZ
BPK/6YeW61ZGsAnkf+dCaj03x7MJ5H+Fl775lbSGTSD/++fkz1F/gyHcR3q8
n5I2lv4Ne981/tUKXbdfEqiPVK1x8bR89zuA/G5ZkOvTIdlq7G3/Wv1+0snH
xP2jFN5gR2Xy/kDeVkK3O+Uuef+g/lG1nOCLygdMIvyryiLddF6o3WaqaNhN
J64te9Fil0OOX2HB55/vphPNHrqX1Qk++L7an25pVEcgr6tmZ9R0y5dBvEx9
ecShSxi6v9bNGbViYa9rEnDB7LMvm0Bet+cz79db5PWLvG5xpMHepkNs3F/i
YTbNGHtHA+Rz23X+nPLVTsfedg+Uj4lxZ+L+0nDmAZPMOibuL62PVONf+51J
ZJYdPvZhMwVqGf5sMnajE/WNXUU/9fjgJz2lgF8hdAJ5XNOvswuePqonJOkN
kj5OC6HjnI55gDwbe9wHSlIbZt+zCeRxIzNtfHc8ZuO+0/tjo1ITaz8A5G+f
8DplPgupBsjfsqHMw1uifrjn9Gn3+903lzfinpNOyqdhNdc/uOdUmV3tIfyl
BfechHX9H4d8asU9p49PDdTXhjBxz0kqtu3Bs99M3HMqe73c8E0GE/ecWj8E
qx9WYuKeU7tDYfyLTa2415Q4PpS/RbQJ95rOZlT1bbRuwL2mXj9frTr7Otxr
2hSZ/zxzHx37WzWpl/W3C+jY3141WrF9elMD9resyqBrAeO/sL/9+1PV0H1j
K7FctKxjebgg3GoXDN11e7DH1amO2afzsZ9AHrdTq3YcvB8ikMfdpcF703E7
m0Ael3A5ffn+RzaBPO5EjNr5bdfZBPK4N86vS0yNZBHI4/b+id1Vyx0gkMfd
svJiTG9YL4H8LeP7sye/VSqxvw1nt93aujmTQD2p4vUXvq/ceA4gjyswuER4
dcdHgHys4JbEN9sUqgDqN80P3OF7ovIX95ty8x040ktbcb9JHZ65vo7cHyPf
+k11568HBBP3m471KFwLa2TifpP5N6uQ+QtM3G8KtfGd+vCllWAf1DtgkjsP
Flrt7sh+zSD2WYvkW/3jgYXcVbt+7aonYnY+9aB08kKvwYM7biXTCeRjv2s9
3CViRcc+1u/GSZUD6XXYx542DD6qvLeRWE7V5caLCMG+fIawGqWP+JAdZR5N
E4Z0fa1TgqaD2Mtu0dbbdSOdRSAvK610S2D9PTaBvKyU9cIV55LYBPKyskQb
d8smNoG87Lp1gQvOuQ7h/pRM+KVvaz8VYh/rrjHSGZ30mkD9qYzFyhZm8m8B
8q6Dw76bHHiqsU+9tGKstorbivtSW9Nlkj3jmLgvBe37yjXJ9TzqS405b78Y
+YxJ3ANzO3a/4oWH9nJzqbN0IoPJYYYlUuC3d7fv3SDX4+WdmUeFU/igcfUp
qZpVdQTyrYRkrZO3FoPwGjhMiWEIw6MVvoqtG1jYtz57550b58EmkG+d2VZs
cphcTyPfusR1MsTGgY37VtHuFRoia54C5FknNOOcfpSmYZ96XuZc3R17Ju5b
xfFVExE1TNy3kt/NMvpVziTSdq9/lK9GgSlbvFxNfOiEUOzW0nk1PmijfH3V
+GU6gfxqu/nw0ugT9UTHorC8VKuFcJO6fTtDnI396sa317z+vWYTyK82N124
0h3Fxv2sjukQx778ROxXd+s+9Ew8XY19anALRSP9KRP3sxwXntUcJOcjRe9X
PZw7FKiRo3PoqzGdePPri2zFXT5Y/NNHzWGITjQ8yNHS+bIQnmx6aJBjzcZe
1fyr4S818vdDvjRHdsRorIyJe1vP3z7JzKhlEvGGnfP/BCiQ79kcJTaUTvhq
9f90FOKDx7489dN3omNv+lzGSqbkKbmf/Z83PbvcXd3xLRv3uP5cl4t2+sMk
TPcb/VlTQYHNJxuqdUzp2If+NWHZyKWyca/L/rqNphuDSRif5RoKmnGBaNbb
EMpXJpFjck3tuSkFTmStVvx+jE6ub8K/Pjfmg+LTCc1nn9IJd8+lfepBIpAn
fcj0SiIb+0/hz86RfGFsAvnPNsHekONvqgHynz+aSky0FE7hvtcY6Nm8YZqB
+16LifVC9SZ/cN+ry8UlNuZFC+57rZPftLMusRX3vfod1JuKbzBx3yu+LSwj
7RcT97023596de8LE/e9fLOtVMzUmLjvRRGqK6iArbjfJW5d0v9mZRPud+21
9NqcfLIB97sUOtuNPU/X4X4Xf8PxPxEH6Nh/eu1Jvd35iY79Z2fCjMhT2Qbs
P7UPJHz1r/yF/WeaVc+Uz5JWInxdrePhEEGYXKKfWyDdgz1oYPrz6eyH/QTy
oMU7a/qCHg4RyIM+bL0qd0afTSAPumnXh923UtgE8qB/c16f/x7EJpAHvZIi
2bIxjkUgD+qhYtBwSWSQQB40MDM9Jzq5l0D+s/1O4sXmtErsP40X6Xx7suwL
gfpi76VfFSmNOQPUF9NSzTToOfIR4L5XxvLC72JVAPW89qVIWUgL/8U9L94O
hYodIq2453U8cf16b1Um7nl9yNHxHM5j4p7Xo9cqVz83MXHP61vn+2X3/Ji4
5zWRqjXNKWglpn65t9xNnAci9KObvmQxiJGtTidvNvLAjAk73myrekKOL1jg
bjMvPC3qpXg4k04gr1lzZas9z3469ppVv9JvdsfUYa+ZIzySq7O6kQhXBT6t
/EIwL7Tt4ZGuXmIiXS9HXUgYpofvPCS0fhD7zdyDF6SC37AI5Dd52zbpJIaQ
++H/+c0X6s8mmz6Q4+n//KbrbsPXtQZsAvlNf833Vjf9hnCPbM3ms1P3NhZh
r8lWVIuXWvWWQD2yQH4723HNNwD5S2LR1/nbI1XYS15NZs1KDrbi3pg3dbFI
/xsm7o212dY+/P//P0K9sa3iDz9ZvWASwvN9f6uf8sI7qwR22QnWEdWGL9vj
X1PgJ3W2x01yvvmqNG56+R0f/LHMK6ltaR2BvKXs7nhbCzEGceTOZ0ZelTCU
/R1tMK3Ewt4yz7AxpMuFTSBvKfO39cpNcrxE3jLGivjS78TGvTNTg7MdkWOP
AfKVPR82tBARadhLLm/+YVZzhIl7Z6oPZawYVUzcOwsvv9A/X8kk1lEVNY2W
U+Bzz6Heg5fohAp/b5n0Cj44veHl7nhfOoE85UJnt9AbpvXEz6T+8GrzhXCH
YelZS2E29pTrzJd9fxTLJpCn9Db1Mwh4wcY9NRXrzouXZhOwp3SsNRpTdqjG
XrJa7llk7iMm7qnlvAqYuk3ON1sY5n0iNyjwa5vCC11y/I6Smli45QYffKJm
5RzDJP8t+IGTmLIQiu7bvP6YJRv7ych4pe155P4FeceICNuR0hIm7q/dibRO
siH3I6sW0KPc5nghQ/ZYtdRjOnH/UWS1Hy8f3OrfF/zIno7945GHZhebyf0E
8o+liv0vjpP7DdRnKxUp8BMkj9fp83DzrkJyPyMj2v+FnB+RX2T/GHDrJOcb
5A9Xl/w6I9/AJOL8PBiLtnCBnL+fc1whk9ATOlWkvIMCFe8u/XvIkU5k++gX
ZkA+aNBw7u6ZcDqxrkswOfaKCJwc2aVXQ+5XkU/MPMrR1yX3s8gnRn5YcY8S
WQ1Q/y1ZnanjQM6HnjFvBrf5UOCclfaT9XvoxNVpC3uXFBH4RHTfIk/y+OyH
aFcMwzlgi6CAigk5HxbbDtJThinwWL1Nlr81HXtDy5a46L4ENu7DPfdTUB4i
v3+Uv3Hr+XQKVGjWjPlH3g/IE044BDrwkdcz8oKBp4dy1tPJ9UWI4eRGbQoc
dCsQijpNJzLr+tffcxeB8s6rdlLesXFfLsrgw4H/X//xi451/Y6gwAtvVePe
kfvdty9kUljVIvBj3pdvZ8j3/yM7lGdjzgFnpPzkYsn9luZg1C8JOgUWOi+Y
WGJOJ9jMT2YUyUXwSk3GMw1yP4L6dDt2Mu9Hkut3gzsRoRIHKPDOiitxj47S
ifcTK1U/3xOBVvp7HefI9TDyfV+zGKmZqdUA+b62nRIH9VbZ4l7doYJjopd6
GLhX5+U5K7dM/w/u1T2l0Lvo4S24VyeZ+mny1PtW3KvL2lEudPM6E/fq9gVv
sdAm53Pk9ZYYGmuOZzFxr86xw0fPYA0T9+qWXZZ5fsSwFffoYhNfph7TbsI9
urbWoqYx7wbco1t4WXKptW8d7tHBaZWqFQfp2Pe5uTw5+j2Fjn3fxOJx6stF
Ddj3bfVyWZf0+Rf2fb4Z50SEBVqJsoKDyr5BglD+rUbHP6Ee7P3urBjd1Bvc
TyDvN3n2VhXtzhCBvJ+abIC8sx6bQN7vuFTphtFkNoG8X5lN+iW/m2wCeb/c
B5kCNh9ZBPJ+TkMjh/WkBwnk/fhofaLOeb0E8n0DizRzn05UYt+Xut5/YdCd
LwTq5a2f5c5907UGqJf3Q022e0TiI0Ae78aKvT7BglUA9eka7iq4l8404z7d
0MezGj/I74883e8gZSFBFSbu05XcNbgVmcvEfbqao6VWBuT5RZ5uuGzl37Kr
TNyna/Zdww4rbCXmZflV1r6eB2UMzxdfixjETu1w8LKOB/6QOns6x7ae+HNi
+sDeJl64WHRyeWsOnUAeL1j6KYzdS8ceT2yb2Ae3x3XY4+1RoupclGokyr4U
rZ/h+f+uv6uNc1MvEfOROjzMLwwfl3Uf5awcxD7v+vWQ30PPWQTyeXvEXwc1
kucD+bxPS487+ZHnC/m87lbl3HDAJpDP89lM38+9OYT7eie8ZhbeO1eEPd5J
hgqQ63xLoL5e0d/Rt+u/vAbI102sNV3+vL8Ke7jzwWkF6r2tuJ83tWVeWOE1
E/fzLi5a9sqKHD9QP68+U2ty9UsmUXbs+JpHj3jh3j2WCSqidUTzuK/T5xgK
TOY32pBEjl/625fuXP+KD6brtD6KFa8jkKfTA+5buXMNxJ5f7fBHhTDsCzI6
4S3D+s/TeZ2zu0DO18jTHRcoFQ8jxyfk6arMNp1VdWXjft+Mx5uAVU2PAPJz
ry7udF1zMQ17OI/PTe1dh5i433dZvN578CcT9/vEnLj7qeS/B10e+wnLUSC9
NKzkqh+d0M4sMFkpzwc/bJmXTDhLJ5CXazMNsU3dVk8UTi2bbjFeCHevrbTi
p7KxlysJ8L/u8JJNIC83yRu7uiCGjfuA9TfvXVj1PAF7OSVpG4rdkWrs4eRT
c19+jmDiPuAakadjZuT8sDtEyWPZNQq0dDnNkDSjE0t0pPlHrvLBztKARq8/
dGKmSKXBOXEh/NNRlPdqLxv7uK3qf3wukPM58m3b1P9Kvf/OxD3B9W5nZZXr
mUSHk3GPxhQvjDggvptD7s+ijU7tuz1LgaEtO5a42dGxdysM8qg4/IhNIO9m
pW5qYxnHxr3BT4bPNPaQx+vtWmq3v4ACRw6PhsmT8znyagOiwEOfPB7kzbzG
uW6nyc8/RImLCdfmgoYfu9WGipjEuFubeM9WCizWLmwvcqYTJStpO78Z8MGX
M4omkffoRPir6/dtLojApL7rn/rJz0cerVnGbtW3h2wCeTSaxxvbvWHVAPUM
61gnhXnJ+dxv36UzZp4U2L8/JugkeX9vdvXV0UkUgUu7lZ/ykfO5qK/FzrJb
HHDo3E8bNjmf14oWHcgdJF+/MBtkkeM78mW1SgoZGeT+FfUO/bxX0yTJ+yVO
U+H4jRQK9JptTXhH3g/Iky3zW/JhPXk9Iy+2IGmDmQu5fx/pzjWa1KDAoITr
fC5edEI6zGnxbhcR+NjlScPoGzbuJapUUxwlyPeX+Frp2n2fAs0rDa+qkr+v
g9D2oIJKESgW8PDNvv9//1erg1t2coBS+EZPAfL7Grz0OqpYRYHMXxb3l5HX
zweL3ytqRRfB7OEz+xPI+Rz1Fi1us/oo5Hw+3Sv4h7GHAqVkeRJjbemEYEaM
oFeICHxv38HYTs7nyHfpm2+2XpRYDVCP8c1OgcrV5PrhSYaKl5MrBe5dH/tt
mSWd+LjtG5P+SgTm7CYyxMjPG/A+c7C+kwJHU2SSL5F/d/vtZz01NAKKJbzN
dpHfr/Bh+Yno9xTY6XduzSXy95sJPHqts0ME8vO/3OxLfr8O6pFn4kkj4NZk
2heCvN40VC6c5LlFgd6n5RZ7mdAJRmuolm2RCLyVvdBxnLze+j7ELulYzwE+
ubte5ZC/hzWfnK1eCfn+Kpteu5OvV1qpWnVGYBE87bQ8O5g8/68VdufI3h4B
F4xDl3whX18Upnr7SboIpCnb/6oh/x5fdF+XJc4B35KzeL+Rn3+v0tvePZMC
Oc/Ug7TJ9ZVY/ddViaMi0N1C0bWC/PxVw+4XF/wcAc/N0in///3GbZa7VEWS
97NJZv8W8vW92tzG5fUiUHDLuQ03yO+npP/9sACDAs3mHFTXWNBxfzKvbVek
3ZdqgLyUy8H1u72ke/Hz0+CLbCFBZjf2UkuGBe8tj+7EXmqo4Nmg/mwb9lI3
55LFoHor9lKPj63x02D+wl4q0X/LeEhCHfZSDUs6VmneKsdeKmHQeUng5S/Y
Szk4+EfYqgTh/uQDXqeDC+kFuD85bSxdXhn7A/cn7/EtkwU19bg/+bZ8+a8N
U39wf5IyUiKheYGJ+5ObnC/sTbnZCZCXem+t18Pl7wPISwmu+tFs3jMEkJeq
17ZxvhI/ApCXCmiKmrU7OAaQl7pDzfYfFJ8GyEsdXl4n1j01D5CXogKTlZEE
L0Re6vNZj5LdxhSIvNRk9RXh4Zu8EHkp/XSRzpNSPBB5qdyn+S8bn8zg/qT+
OeYFkVuTuD/pVBbZzegew/1J0J+0LXzdKO5P3gCW91P2cHF/ct335P3LqFzc
n3zZrqbyat1//cmLRXH5Iqe5uD8prfZCeK81F/cnDfZsHBL24QDkpdy+zBXd
XDkMkJfaOeB9OJavHyAvpT59203ViIm9VEbWHeqZ5HLspeSfefunKOViL7VD
OfdAiVwm9lKJPgYC26TTsZfqrj2z4DxPCvZS2aZR8eFe8dhL/Y1O9Luu8BZ7
qW+uNdD6Xiz2Uq80u65fCo/CXqo6NvSmrttj7KV0w8Xu0G+GYy8ll5py++7L
HgL1J7/UbAhfyugiUH/SRCNLscC6A3ulKSVhvxe2AwB5JRUetat5E2zcf1xZ
e22RmBsXIJ+0kbIhzDFsFiCfVCfsJpswwwORT0q0j/0brUsh1w2ZW2/zCkK/
ujnaPioFIq+U7jB2fX8zD0Q+6YnuUdWP81O4/5jX1C18RW4C9x+/yPcMj7NG
cf/RrlvQ82ACF/cfu/y3ZOUs5eL+Y2FEWbCTBBf3H80mE9Qf7ePi/uPB5bqs
y+e5wD30adHcYxqs+ne09doCLkDPU8sVSPm36eoI7kMSQzMpklQWQJ7JKdX1
3rh1F0CeqezKweMZ7xqxZ1LauvLM44Z8gPqQ9d1H89SvZgHUh/Tw1OvI58kA
qA9psfJJx9rLqQD1IX/s0A0HUkkA9SFXyh8656z5HvuoHS90HVKaI7CPcv17
RqGys4dA/ccVjlm+x050E6j/eOBMXrPSbAf2SQEXxz+1qPcD5JParry6elmb
jfuLVumdx98GcgDySPZL+w0C9s4A5JHSbH0tawJ5IPJIDfZ5i/+R57fOWKV/
QSEVinNqs2O0KBD5pMgBTw0hXV6IPNLLt0Gd18qmcX9R73vGcuvKCdxfHH+2
5RPVeQz3F9WKyhNOd3FxfzEnfU8wey0X9xdXLJ6dEBbm4v7imaamtzcBF/cX
1+eFUF6e4wKjgWr7B+dpMHs8YeajDnn+//e8NIr1heA7/BzcZ1wQVNVvT+6r
kV8qSpxfvel7D0B+6eONTU3JS/5ivzSqdNTH3IQAqNeo42SudLc0G6Be44Zd
Gi5c6meAeo1ibbxhvrvSAOo1OnBWg32BHwDqNSp+ntZ4ZRKHPZRWyaoGJ9lH
APUYL0d0VbJ292Bf1Kte9bS6Yg6gvqHvsz22Hq688IfiQnG/bVS4tyfoV7YZ
uS41Nw4X2S4IRWxFyqSreCHyRrEpett/bpvC/cOmBVc/qF8Zx/1DPa87y++H
jOL+4b5bRc96yPsHeaPfm80VVyzk4v7hUkvf+xRFLsjsbN9tlyYOqy/7zhg7
cEHI0l2zvjo0ONiVF7CSHK/D1h1XPfWZBvuKr2XLf+cARsjtW6L6EnBY/pzK
35Zh3E8UFvsX7yc/CJBXsq3f2JKlTweon3iga6PrR5887Jfa9rcz7ZMeYL9k
EF32NpO3l0A9xHbV+Jlbb7oJ1EPcqOx44apFJ/ZDZm8jxK9H9gHkh0IGDg6D
NyzcI6w81xW4djEHIC/kI78F5H2cBsgLFfwI2XBsOw9EXmhBOYu/pYs8H7v/
bN/1mgpzDvx6W7GNApEfisyTDc6254XIC0lfeO3tozmDe4S9fzP93qr+1yNc
G9Kj/uXtGO4RTlte+rNUaBT3CGd1FnWzDbi4R9iXDTh15PyJvBB/WUf1uC4X
9wiTN/LIqXqT4+nz/uTfLjS4pLv4jK4xeX7+9zy1+FUsiY/bOLhXyN3zJan9
OxsgX/QK7BLd2dcLkC9a2KkkolzzD/siTy3aoF5cMUD9wpFXH7l13jkA9Qtv
7FULfhH+GaB+oSGv5Ozy5DSA+oWOD03+iYFkgPqF+wr3yl78E4e90sXruqZz
xCOA+oSG4+5LSs/1YP8zvGHfZfF1cwD1/iTHUws3bOSF++6VVl6Uo0L9mh0J
VrsosM9svst0hSD8+Fz9WdQAL0QeiJ+nnbUmZgr3AEvUewekK8ZxD7A3RW7T
g5xR3AN0XJMQUXOfi3uAQpvCD5qKc3EPUHm1941t0lywPupwf+Mr8vcnVN+k
H+aCPP82/xcqNFi/2rhf34cLZv76nfv8jgatLDa2nu7mgOneqvQF6hJwdrWi
UZ72CO4JgsDg5ebSQwB5ouO+v/csYNcD1BOsP8974IJSPvZFogmiT5x2RADU
B9yQ1JM8WdyD+3wSoVPyx7/xwKPOcKd3kwCspfdrXVSiwN8mpx+VMqkwVTkz
QVCBnCf+539sdxp8KFMbw72+aCezzuASLu71GY7GJESs4ALp1oNakgvEYXGG
tU70Ii5Q59ux/megOGQfdG1RJK83JVPFa0MUGnwOJlQ0LnBBk0EGzfgmDSZE
FY8FkeOJ4YcjQlyqBIy3FHTxKh7Bnujp87BnqqEFYOZTywWhAwIw7gD/wMRj
Xmj8aY/VNQcqTLTd8GHcnAKnLB5srnIQhG5+/kMyH3gh6u8ptjFiQ49zwdWS
WDP922LQvd15SE6QHL8kjw267hKHN1nta26tIsc7bc+3bV/F4T3WVhtlVy6w
SnvnZ25Egzda9zwfciSP/5rhL6XvNMhKVi50iOFgP6T81/r83aUPsB+aaVcK
LljUS6B+376rL4O/FXYTqN/3ZXZNieC5Tux3erZumzph0QeQ36HfV76obcjC
/TyxbIO8mb8jAHmdwUoFvbUO0wB5ncl7m0+kKfJA5HVqgwQFech1nnGp7mnH
CCq0Sr6sq0xe/8jvXIhMb4j3IeeH/3md11ZmGZcdZ3A/T3Fcf9X4oUnczxvp
XKn46/sY7uc5CN4KvyQ7ivt5rfUrL5435OJ+3mEB54ld5HiEvE5umkJa4Xou
7ufV/NpfVO5Jzs8+k1bzx2hw4ejwuAa5fkPPi9Maklr68AgH9/VuFFq4e42x
AfI98w9fK7le7API9xioZlfwPGnFvuex8dqrKuqlAPX2dDhd7RoVOQD19rw9
D5pDxmeAenub3Es8HdrSAOrthZloja15mQxQb8/5k2571Mp47IVE464ueif5
GKCentM5h1rNuz3Y3wwWJAn3tcwC1Kfz+ubpNSzNCyMK362+sJAKt2xKUzEk
5weXyqMS7jRByP+d2+UzxQuRx7Gh959IqprC/bp5E1eX5pFx3K/r/SnwqbF+
FPfrVB4e8C54zsX9Ous92je/SHJxv+7zziRCewl5v3Ilti6JEocipZkwzYp8
fap2gbYcDQpFbivUJtdPnz7fkfv9ggZ92MtfT49xwP2os8bXV0jAgIQV4cWH
R3D/Tvj1lhVaD4YA8jzHF0WFppgyAOrf8cetL750JR/7nrad/vcUwyIA6tnt
FTkaONXQg3tyUPWA25XXPDD6ucIrr1IB+Fi3tGtyCQUeKi8jumqpcI4Jbjar
UiDyNzH7ctZfNhrDfbkH+ct2KTG4uC+X13SEx1OVC4w/ndTePyUGp92TAxLJ
9Yub3cwN4SvicMeu2931O7nAwP8METglDgeunHsUR653whYXZp26Sq4Xh2q8
JNaQ45PtTIznPA2+VXZt2NY5gj3PtnChgnd9BeCm3sOJIzsF4FPlscXm13jh
nV6NdP+9VAjObjguY0GB538OOA3uE4TVvkOHgvJ5IerFvR8yCunz4AJbL+Ye
w4tikPdYYJStEBfsWJR/0N9AHH55knL5oxIXXLy7ekwxWxxu8/7NriHHnzMd
3LzWrTS4x239+xFyv9Z06EDA7nwavPxO4uPedA72O+0uYSzx4w9AJBxL4YQ+
ASlhqXtOcMn9ouAf29PvBODkkV/s1RPk/Fh2TWplOhUeWrH9sJEeBYpIunkm
VIlCxs+ryTLk+vnis076+99iMLFGj1pIjpde7SIwqVccnpJpbpT15YLZor8C
mWdo8GxKuKMTuR5HvTllDZ7OVyqFQPRQ7+nLa6mw/cbX9dXGFChdfOLgkUNi
MKSmduQMOT+8Nn24VWgtOZ5G/d0U7kWu3wU8q8KTafA9j31QDYMDpDVPdPr0
CkBrZWepI2sp8FgF7WT8MBVqbUtR05CkwAgP5xPXJcTgCPRssJbjgntdY6Wz
IuLQ8Epe/h8xLhBcWrPt6EIaHLK0SFhOzjcC/l5jAWepMKPsqt0Rcr0cK+dg
rB0lBkUUVrnZkePVDCPD8l2ZODwp8yp0szs5H1w9ZJC1h7wfFC3sxY9xcb/t
sPxw84+qcOx3HDJbvu6Q7CVQv+2J2bpPfPRuAvXbJBo/G7wJ6cR+xod6XEdq
dR9AfubheaXDUVIs3E+Lf3YbrioaAcjL/BMCLoF65H7qf14m95F5yRtRHoi8
zD8Xs9Uz5bxQ4FYHxecOFbp8zfazNaJA5GdKBSSdTvjzQuRlfsoatsb4z+B+
2qTMvfzeM5O4nzaccSo0jzGG+2mnnR5sGFIZxf20k6zG+WkTLu6nlUgMnlci
fz/kZW5vMF3+Ueu/ftrFKbX482fI82sfEE+zoUHFg/yKTQe4AD2/b1qXvsrP
hYP7alukHY3URYcB8jWT6iUixwv6API1TvIL1oQOtWJfIzhKH87zKAOov9Z+
8ay18VgOQP21qsrUdJfJzwD111Qtsw/pz6YB1F+r0bCeTKxOBqi/VjXZbDBt
Go+9Tv7kop01Wx8D1FejjOTVXXvcg/1LuZqzivaXWYB6ZeZVF//1C/PCjL+P
Do9RqNBn/Ny+t1soUOWuYPwlIUG4oqkIUngpEHmYgctqC+W7p3DPzLGZzyec
OoF7Zg9TZ++Zt43inhnNzOSj72su7pmNbXuk8J4c31HPrGxVWVshOf6HrWB3
bogUJ9cLSmXvLLnghOmRlumlNCie9P5oPzne339F8xp4RoMlJXqhx+Y4oHFk
hySQl4Dj5w88TfUYwT20E94b/l7/MQSQpwmntL9fOcEAqIeWU5Wm4xSfj32N
6b/pfT8+RwDUNyv/6+Iu1NKD+2IOevtz8iN4YH7mohpWgQCcebySpShGgYtv
nz84Vk6FV3cOOzpoUCDyL3JODV7vDo7h3liNt++sdgsX98bSZe90RqlzQf2H
smcuI2KQEq28oUaYC27d+aWx+oI4vFCqVpu8nQvKpSL/mY+JQ1/+ds0N////
QzwmItcu02BoDqv0Knm9rvj88+TaaRrMcQxIXTw6gj1NbUdEad0yAvy4PKgX
qC8Ae6oK4q6T66ckfjnmjBEV8kT/no0i158bQ6OmZowFoTv3RVXvd16I+mGd
5rqmB89ygdn36/sqPMWgyvuE8bXk8QneGRAK0ROHWTlHDtYt54InWQIvt30W
hw1nFgHJE1ww7S/3N3EzDTIutcevJOeLjB2/645k02DNa4lLv3M52M8US/GK
K958APyLPq4ej30IzMVizuhM9xDblSvuDkST81P1urBMFi8UDVn7YWMiFb44
3+CZrE+B066CZ9eViEKpGHMJth4X8D/cpZ9HF4NmH37aAXK8n/Xb6HCuUxze
ZeTKaZL7laaPTkfL3GlQT36RcS85f6L+WLXLoG+7cxHQPNsUPalCjvf6o7uK
yfFHcBmfdYuFGCwws0+pEOUCzY4cuzo1GrQZy7SfJX+PFSOjK94k0OB9lvSN
7f84YLPp/sWcVgFo8G/HATk1CpS7Q8x96aVC2wXx/TnSFHj96wInAWExOKEy
YMZU4AJLx1V+gkLiML3x9a108v0fp44fU6HS4MaD+is2k+O96lP7lTwnqdC5
S9/Pmjw/YWd5TDMfiMHYgv6zyeR4JcsfMV1ULA7nlgm5ZZLzaenSq7aBpjRI
l1hpKUvuF5CfuSgPLkhywsEd6u3GA1FU+PayYn/0dvL4blJEugvFoJXD5J4A
8v2Wpt6IFforDkNGxbj85Pc7G5c5NS5JhQ8v9X+/Rr6+q3Dn0R4DMXirarPX
EI0LTJYKx7gup0Ht14fmzcn59EqApvdwNfn9xUYyTslRYIttcIc8rziUT047
8kyECz62G73MmhOHZpv4RKbJ6/dk1dYbc9ZUqKMQydUj1xunZbdbfA0Qgzd0
rH0/kOePafozWmoHDRY0eFjfdeGCgZc33R+0iUHdr1JuNuR6o92kU5E5KA6f
gal1A+Tno57Wn944fp/2r2Bwy9S2aR0qnOkrVD1vSoGrPQsP1B8Tg0a3JZ7r
ksezJM1DHmjT4GvTZXs55Pg+JumTyR0WgNVP1oasW0+Bfv7xCuFiNGhYWvae
SR5v5/HrpbyXqXD+0ZWTcyYUmFpKGH14LQafHbbcovH/v9//PE3PyV1WXxLD
saeJCXrv2rGkl0C9LOgklRT6q5tAvSyG4osHzhGd2LNYrd+uxrO0DyDP8vLS
uLf7/BDuVfkYd5yo/DwCkF85xBZa/FllGiC/slT+FFNMgAciv9J/rdK2oZgX
drrk/rx8kwodWTJsm90UiDyLwbG7qzQDeSHyKxui1XOz7szgXtXlvSUKo5cn
ca+qm/Xk745/Y7hXddwj7Xb26lHcq3JfNfZyrzkX96qC50+lypC/D/Ir1I0v
neI0/+tV3fXxvVJ8mpyPG3bSZY7QoMQHedGog1yAng9pRLcvrTrFwT0rcRWr
tR3LhgHyLsXPm/ilmX0AeZeSsZj7h2WY2Lto9K07FCFSDlDvyk7+3UJvkVyA
eldfhXUPii3MBKh3FdV2Ju2LcDpAvat9W56MCvQkA9S76t1hYUbYxWM/U9pE
nZ22fAxQz+rTATWT+1E92KPQqoTzzd/MAtSH+nq4b7iWjxfu8hBhf54TgIdM
ijyTyfUrn8c/7+sLBGHiNx0LbX5y/PmfT9lZab7kBGcK96MebSgbnqNN4H7U
yLKzp2R7R3E/Ktlmb+6/d1zcj2J+f/smSYqL+1GFduFRNHJ+Vcg6tmXnI3GY
+icw7cV+LlBbenqodQl5v9XNWeqR17vf0oZno09osFhto904L7m+jEmakJeV
gGL+Bj94zo3g/hSfoc7Xtt4hgHxLmbOeYN+eRoD6U+MrvIY5BfnYu3xTEkvU
LY8AqCeVZmk6y2H24J5TmY5T+487PHDPrmDXjzkC8HfvzyP3FlIg181i+dx3
Kkxo/LQ/ZB15H/zPo5y5Y5S2124M953yz/zZa9rGxX0n9kbdC1CDXN+vnrA4
OyQG3QIO9LuT85fUCuPreufE4ajHkHYUJK+39gSWNlccSv9YyTNIri8OnxfR
DblIg879AtkKG8j133HdvSKTNKh8eC78z8wI9i2LLuz8dlObAEPPZY5EbhKA
Eq3K/ddO80KDiIcX83ZQYYhTT5ouOX5Lnj77nd9QEGbv36YpWMELUa9pdI10
8zJy/Cpk7a+95yEGTX/4mLwhj8/DmN8pVFcctogYXelV5IJVe89xLD6Jw0nH
ktea5PheaKo1GLaJBh/slu5Zc4rcj2S9mD3xhQbj8gbmgr5ysGfJuvtAPvvp
A8AOEum+mPgASL1SPhow10PQU7crf3gqAK8d8+861M8LB135Lxi8p0Ka8Slr
w60U6B3RNMz+JgqlXxkL9m/hggoxX1ZJlRg847IxS4Acn4tNjL2OtovD/QvW
+KR4c0HJSrWgWjcalFka9l3KiLy+/vf8THfjy7F3BYrB17m9G7OXU6FVjJD0
M0MKDNhZ1xhrIgZfzi+YCSb3O2OpVaezVpHruVffXF6T7yfqlm32IY4GB7T1
tji0c0BFY1lSerMA9BGJW2u9kpz/T0aWE51UOM28PXtSlgIn+ho6yhaIwSe2
u8c2kuuRzyu2MRZRxaFNyO8JFXJ+tfVf6Cm0gAajHktu3UTOr1krG/MIJyoM
1Og+/ok8PwLRNRUXQ8Xg4BIXPSY5XiVG8eyrKxSHLxM5NUOu5Hqz48EpV2Ma
3JSv+vsuub5BnkX7/vwukwUPwMlu+9c2keT4ajQY27uDAtso678OF5DrW/PA
B/bk+7X4PUkd+i0ON2zqcHcn94sUnXURX8SocDLSdiMLkPvDQck/iXpi8LX/
ngNVElwg3iGfYq5AgwcowU3F5PUhIhonlFYpAIXlVmyCyygwUHeLv9GcGMz/
u8tJkZzPzqce/fhiRhxuPTV8rYG8f6dsPssUHKBC1euxn3XI+bXDkFYV6CcG
nZwmT/KQ82f8UuaHaUCuh1qdo76T3y9dLlMhukUMXlii1buQ/Hui1KRmSb84
7GiufXWL/HzUN3p6+Ml6waBv4GrZWUaONhXKmFNWfCTnw9hnEfWRR8Wges7o
iSryeJr9r61V0aRBizftP0s9yfXsqz6LjEEB+CvKM7NGkwJ3mOatO7eIBi3r
WAsFyPNxnjVx7Ns5KlRa+83jCzlfq42ElZ6JEYMB6urzkPz9kG/R0X42nZsX
DlTjFul53KdCk5GNd0zI6+nMTLga9YsYPPjr/iMt8vXK++S/6VKpcPlTw5Dr
BhQY7W9YJSVDgyLrDzMfkvc3xTSw2nVCHL4wPnP6LPl7yVx4a7LVjAoNG8ua
usjroT4qrZrqKwb9L1RIfyN/j21SS26lMcRg/DaFOn/y+tdNXb4vvFscGtV0
cuPJ9WVMu8OCLaup8OwNcyMGOb+6LY2zGFKnwSMN0Wnm5Hqqqr19DxCiQTmp
onfa5PeNFO4JhaepUDiOtayD3M9L79Yq5zwWgw4hCiHXyeM/JFRn3VxCri84
zYpx5L8DTcdCA5VokBXbQqsgP69HakNYHQ8NKjnOUKT///+jYUn/NlsqfGMf
ZaBCnu8xtteP2SAxaOBX9N5B8P9ddq3YDEscug3b2ZiQ3x/1g9rzr25o2/EV
2CYHxulvocJTnp/sVMjjyUx9JJpEo8FW87VWn8jfx6peSGvHVSoc/+p9ZR15
vvVesL73vheDGw+UCCiSx4c8jPCz0OaCp+HYw0Ba3kL5zAHsYQy8968WN+nF
HmZgbpMwy6sLe5hbs9Euq2Q7sIeZ/2j7bG85E3uYH9kjR+Z4W7CHmXh/+Ga6
bBP2MB1SKePhIzXYw+zzUQ8WSi/EHkZnwUPtuqexuB9kF+52I1k/E3sYddG5
ktnRUuxhll//qKuuVYs9zAthejZc24A9DEP899dlkwzsYeo23mjzvMDAHobx
7dD7BJU67GFk7jvICFyuwB7mxp3DY0UWSdjDhJLDyoozhbgf5LVa9Iidxm/c
Dxopv64SJdGF+0Ej/ZuPFP8bwP2gprRZgdWjLNwPol44/37izRDuBwmNGs9+
2d+H+0FLn7QK1dm0436Qpngy48fqRtwPkgkY6tq96hPuB000OE7uM6zEHuYS
BSrAQy3Yw7h371NyDe/GHoaPwb0fdGgIe5jTJQeiuvOHsYcJ/DxctOUYB3uY
Q5cT099c+c/DyE56/TvR9J+HMe+bGb+jOog9jJw156Alox17GIO+uLjDZ+nY
w1Q4nl58enc59jAjDi2mhlKl2MPc1q7bPL3+O/YwnUkKQfEv/+sHtWxdn2km
WYg9TNuaXyJzxFfsYV6IuqzSXUJgD2M6Quh6xuZhD3NI4X7yn/M52MPYM9vj
XmtkYQ/ztW97OeNvH/Yw6xY/TK4o78a9HzuhqgKz4m/4eajnFJoTKv1+4ueh
Toa7XG09VQeMKfbM517TgLr/3C72AQbgKb/+Vsl/FrxYu1vzklgjQD0g6fJ/
BjTy+sU9IK+zPcb3arCvOfaU5REf+Q37mvV3uzcUdb3BPaDJj5tGONa1uAdk
STNLqo1h4h5QjC7ldnZDL+4BDS/d9evQQhaBvE1p0tGjo19ZuA8UeZaxqax8
APeBjrKEoSKtG/eB+hnB7ONr/+G+z2ZZQX41uX7sZ27kGptHhrOxnzFmeQZW
5oxgP6P5ui3fNJqD/cyZEiXvua7//IwW/cWfWQ829jMd/q1pP7N7sJ/J3JjG
3SP6F/uZFqGEFxTXCuxnklkM1qKVZdi/rLlH4Wm3yMb+Zb9b6Vvrr/3Yv6yT
3PHV+0YP7vkYbzcVbJzOw88fzbE8+MXoRwV+/mhtjYeyjh0d5N1m5RaOTIHV
eREyWjUNQKvF3i2LOwO27/rx8/CyRoB6P0X9R0ydehsA8jRfHn02SR2qxZ4m
P6Xvbt6OEuxphu51avFqBwLU+zlp9ZutbFuBez8qRWsGxFNbcO/HZp5P5e6C
Htz7eXih1D9CfohAvkZwq5jq5UkW7v8o9NsJRv0YxP2fpluNXQWFPbj/Y9lC
k228zsT9nq22QbEX7Xuxlwnb7fYht4yFvYzDjWPSmUYj2MtEnwzu/RjCwV7m
3ukDG2zgf17mUeyS1nTNYexl0kP0D5oK92MvU5p2Xz97HRN7mfhdMxJRcxXY
y/S9yqp+/akMe5fExcrqx5jZ2LsoWK7oWCvSh3s9mp8dL2yj1ICGPasWCA9N
glzC+oy3XT2ov1wlcG5omlyHW900/sIANZ/etN5bMAcuNJ03n//FAKjvExp3
f0xqez1AfZ+Enus9lhM/Aer7bJVVnCjuzALI12j8+/m4oLUdPz9Uxrx7XcKF
fgL5GpHpG84dcSwC+Zo7+4dPyO5h4d6Px69PKi9f9hPIxyQ+uDcaUjyAfcxj
YqC1et0w9jFnlMpZXtIc7GMS5AQjtJ7+52OaQgPeL/McwT7G5tEGsdcyLOxj
PrHi1j8gGrGPWaTv8exLfTn2MeoDbWcP5mVhH9MWUUNP0BvAPubwtfeXozp6
cI/nbvlUXMGrbPy8TtV113kSnMvx8zpfVAQeBBW14PzPTasZn6aAkH6g5Z3A
BlDWs8f0RuoMKP9RccRZtBGgXs8HBYsXcroMgLyNs/PcpVVhdOxt6j942lec
KsPepqB0uOmCcixAvZ7fCv+OxFqX4F7Prxu5/G0ezbjXU2D7TqNMrBv3evaU
B1heCBkkkL9ZqGNzafM8C/d7evIPFcxtHcL9ngxN+8fl93txv+dE8N8x6bNt
uL9zPlR/Uv5yD/Y0hHqoVKYEC3uavcOrLX/wj2BPI/R3oG/7eQ72NLnyL8Wz
j//naTQa/T973BrGnmbDq2iuleIA9jQrS5PaQwLbsKfhDdCLc2ZVY0/jbBvC
1zxThj2MoMRm3T9rcrCHadO43Svi04d7O12B8jTW9yoQd/qSQVTiJFCR0cpT
7a0D9wukfEM+ToNTLQ6xebcZwK0gotD62yy48npky+4pBkB9nubT5/nl8+sB
6vOonKvZLPyoGqA+z6wBr2SHagFA/mYdV+up2Lc2/LzN46lSZSeT+wjkb8aK
DI5nOrII5G+0pHiYpfdZuNdT/ENE7sTmAQL5mbb7LEE+Tj/2Mw1xAdNBTDb2
M2uX6LNvDIxgP1NK+dUCX/znZzY1dLxoS/nPz7yL7BVZwMPGfma+9PnOVpff
2M/EOPK76MlXYD+T0SKb8Y8/G5glKSblKE8CtemiH/QeOqAYxe35qD0Nas7Y
tgtJMcDTOq+bg3qz4O7E5QfF5Pyx5oxrZNOheZDko79M5kEDkCNkS6+m8kDH
DZYlCjtrAfI3puepIHqkh0D+5gDXQOBFzBCB/M3sndDVQR0s4mv5qaHRv4JQ
dpdh9NF9gwTyM6q0te2+N0awn4lXc17g+piD/Ux2X+CzC0s5wLM006jpngTc
d4FyR6+WjT2N8g0TpmJ6BZDZdPPZ8bUzQNX2mMLZZgbQS8iY+2YyB+xEPGfO
pjBASeTLYWttHuj11NJqNqsO+5uiBTUDzhsGCORvzN9Xluo2sQjkb2SONoi9
mB8ikJ/JtL741mUbB/uZwz2XZfhCOSBNdZftUnMJ+JR/4u1z1RHsaQYV0lu3
+2ZhTxOpl7c15/wA9jTcxX8cXaR6cT/nHctCQJX9BT+P8ufmuMqhlDL8PMoP
i5ctW3K1Flix/vyzfzQFgsOq/RoPN4DFZ4xy3e7PgOfT1ZHUBY0A9XXcFDUX
ax1mAORzJhI9ODv/0LHPKXNhbJs5X459Tm/MJ2lQ8g6gvk7EefvN7vbFuK/z
MFRWz93sD+7rjEZMLRKO6MJ9nY2ulqM3dQcJ5HVAYUTQxhkW7u2wn1nYeHsP
4d5OpuSfFI/hXtzbeV4ynCXc3YZ7Ofp8loYVC3qwv9F3vBJ67PMQ9jdCnaZH
xpjD2N+c39Jzl+XOwf6mVmXZteee//mbNeu0ThGpw9jfSIxmjwm/G8D+xuHn
yskzGu3Y3xy12R8auLEW+5tHknztEyvKsZ9pz6pgmO7PwX7myj2zf6y4PtzH
uf1EXTpRqQqIzyodbguZBH7fVffxfKgDHq056hLh08DM56BcsycDZOy8s2Hr
y1kAK/tmgUAjQD2dQ0Vl1k/G6gHq6dT8qjv2RKMGoJ5OcLPXO9EjXwHyOrtN
sqU1tNrw8yTFxC6Zq+7sI5DX+WDk5Cu+hUUgr2PCe+tQdgIL93Vs7HsFygIH
CORtKl3b5/RD+rG3sX0803Qtm429DTXI6Oix+hHsbRQ1ReSDX/znbRi5Wg86
K//zNt0Nz4R/6bKxtzELMB15mPMHexs9Vf58zvYK7G1yVPZKWq7OBhlbykso
lEmQ+F7++sgbOvjnarZgs8Q0aDulOy/NbQAdh93G6VKzwDsIvmiTaQTbzv/4
YKczD251hm3JKCD35/cqFdtieWDCiP9Vi6hagLzOfZ2Gzdv8ewjkdYzFV2q+
dBgikNfxpXSubGaziFjhawNOVYLwcfTruR9hgwTyNiui+GbznUewt+H631Et
DuNgb3NvUEbrjwYHxMhJ7+wIkoDWO2G9Be8w9jcPfA1ytZoqwPhh9X39i2aA
8CdFxf4KBgha98EzTnUOZC1S3f32O7k+lKH7RS3ngXceZ1y9P1eHvc7dZMnz
Lo39BPI6avZ/lwUWsgjkdWZULd7dVWMRyNt4xaw8vpY8HuRt0oiYpmMPOWBX
U9dwxE4JWHzHOG6/+Qj2N1t/f5oweJoF/Bytf72gzwBP/R7a2iWNwOVm5C/X
kTlAe/ayTZPGAMjjFDrCnICGQQJ5nLAl9u6mcywC+RrXpp8jawM4YCZ/e4XL
EA0aqvB9n9zPwd7GbYsFlX7uJ0iL9s6fq5oGb7rG++69YgC5zc/3e7fPggfm
pydD+hnY45SGPli0N4T8fj/e5K7RFoQH0/pSdb1YBPI4K0U+vNHl42CPozSm
OnH5OQeY77m0RNBmFqwtmc+dIL8P8jnq3kJ9wY1DBPI5U8sXit6sZxErnN+7
K9+nwcgndyYePeOArUva2hrNZ8D066tJjeTxDCjnhzZ7zAHnZYbXTjxiYJ8T
tUxjTqKXRSB/M8R+d2npXg7wiNu0fu4HDSZe+dciE8zBHieEWt7iuC8Le5yq
g8k5MHIAe5wc9veOGM1e3L+5+bAsd5fUF/w8Q/qzbUfzLMvw8wwja1KNra1r
wQ6edblvg6bAEut7xsY7G0COVqGPjf8MGBy4a3Finpz//9fHsYv6JKXuxgDI
92yW7jhvwVOHfc+Ucr6982Q59j1CB3UXuYfGA9THqTXvyex0LsJ9nMoPvi/T
c3/jPs6V0KUlwZZduI/juYcnrGDhIIG8j11YbaoWuV9E3ielZJfNo7tDuJdD
X3zB7++KPtzLUbIyuvloRTvu3ZhQedW2VHZjv3PcKN5qxc0h7HcepTz6tKRm
GPsd8bAenW9OHOx3mCcnPv8+95/fsWtbu6a0+D+/EyIp/T2tawD7ncoRh8XH
r7djv5Okc7VsgF6L/Y5Jf+F03MZy7G8UFqcuEXPKwf4mY5vF9sLCPty3mVn2
Ze+imp+guHjcWeDiJHCX96Z+vFcHjg6LCFgHTAPWiS8WqicY4KiAwIDm/Vnw
ZBuP+saFjQD1cK7zbZvbINEAUA/nV+i3rkrbGoB6OJq6VsaVE18B8j4BUqZ8
d7uZ+PmEbzR4//0k96/I+4RJ/vE9pMwikPcJnDZ1qP7Mwn2cmEN2xY/fDxDI
66x/MS1nY9mPvY7xkiRr1Xds7HVEHmoaFJaOYK8zbFIUuvTFf16nYr2p1sdf
/3md9Wmex17tZ2Ovw7L5GeHl1Iy9zr3h+HgvqwrsdZbd3v0pUj8buFFi6lcN
T4BVdxbzVwfQQdXFF63+lGlQHHd/q2NbA7gj2/Hx+4JZ8NJrgaU3OV8YT81t
ilWZB0P1C9acrG8AFB/lH5LPeCA7Y0CsqbgWIO9j6TH648P2HgJ5n41yjxRz
wBCBvE8P//SrN6MsQnxNiEd0iSCsHSw3uJ0ySCCv82f35gLHQyPY69yvl5py
vcfBXufYRs/ARl0O0C013t4XIAEp+xScMqWHsd95e5t359H+CtB10m+N1tw0
sJa21LH7xgDqw6pqUVJzwLA56YBGDQM02HoU6kvzwOuuq89tWF6PvY+//3jd
bFw/gbzPetcNLrXk+UTeJ1LB9stXfRaBvM6Llfc3X1PiYK+zIrruxwS5Pg/V
ysrbByTglPQzG47dCPY7G0/7BhkmZgGlVXUPwr/NgPMKBw7JSTQCL+Fyp0Tm
HNDJkCjkVWEA5HnapIIoUR8HCeR5OliXjAC530U+p3bs9pjTFXL8lpJ8rNJH
g3Kn+jSXHOVgrxNY6uoZlV4FYpOLn+4kpkFG65oV3Y8ZoHBaStiZPgt8B2rV
tnMY2PMEaeY1vTnPIjTu7d+vv1oQ6s+0dw9fYxHI82xZoz2/cGIEe56dQ2p7
7kdzwIj46M8pE/L9ftYUbJRuxL4n4E/x0YzcIQL5noznJ2MnmlnEzL61BTp3
aHDJlTW1H55wgMaqjQVyW2fA/WzjMLcOBojo0jOqPjoH1PdO7Sgh5zfke5TS
szq2MVkE8jtxlMWebCPy+z8sCBYvp8HfRg8/wdsc7Hn6ypO27z2RBc4kVVDO
v5wBld+CfwsKN2Lf8+qgWZIuOf+G3fLmHTxBgxU/U3Z/9yLn/5LP6rFMGrT/
dC27040DRK+LXjFNnQXXr5wZfM7TiL1P3xBfYPBeFhG/MNnv6DJBuORBeNfn
aPL8lPOVl74ir991afwPyft3W+TAtlbVWRCYnTwcT95PT4Vk1Rt/UaHeJEt9
VT+LyFDTdz4aSK7Pd7JmiiI4QNC4yfe9/AwovLLh73AdA/sf93nO7Ymf5HrB
/YeGzjcavP6W/8SJcA5gxP5ZntQ+A4oOuVdFLm0EEYL0gCU5VGjWPWdgR+4v
lJoOfXrjTYPe9qXu0UEc7H96zV6Yimz+Adxlei5fTaPBH6ZmgQJRHPD+7qzt
klOzYPiDfaWYZCOIFXaqezpJhY2KU4PrKlmE0SXFpbQIGqTYnF+sSK4X9vCH
Ux/azgATz4HX+SMM7H846k+CPrPI8TA3taW/hgbddwxbPCDXN8j/XNwel3Jt
Wxb2P5+l2mVUyPES+Z9FAuFH9hn04v7NE8/QILGETPy8OouHX66cUSnDz6uT
2XT4WRW5/84RbFQr9ZsCuke8Ag/oNYBFEjw19b4z4JD4qKPlDAOgPg6fjP7F
dnJ/gTzRBVEXzQcSddgTdSfEfRzaXIE90faZfsWzQwkA9XEOf9xxqLK3EPdx
ZkU2b5n2+Y37OB7y9PvR67twH2d1V7pf9+gAgXxRyruJCxbjLNzLWdG77FjL
kyHcy1H5tKr47+Y+3MvpdBeE+dvace+mUV6a05Tcjb1QQcUJ+rEzQ9gLJVs/
NREsHcZeyKv31kTIcQ72Qtome8Z+XvzPC0m823XzddV/XqiTniypRx3EXmi6
Ob7uV1I79kKvBxiBSkp07IXKux2/U7eVY+/jCsoP+p7Owd6Hd/u/tbtq+nDf
5scKAZ7r73+CGLW2U089J8GN+852jX51oHbys8+li9PgZOl3ATkbBkju3mmc
EDwLlHnfBp9a1AhQDyc68sS1HMUGgHo4u1vaLV751gDUw3n3MiFzdPc3gHzR
+7DTC7WLmPj5cysl0u2Okvtr5Is2FJk7XFvKIpAvGmfsCQnIZeE+jtlmWvCO
rAEC+aCnfpwSs0392AdJWW783RnFxj7ozCpHVctvI9gHaWmco+aT4yXyQQ//
usq4tP7ngx7eeCj99xgb+6D6icp79tnN2AfJ5YbMZ9pVYB/kFHq+PXdXNtjh
EvInq2cCyJ7aRBf3pAPD60Z7YqemwCu/tXuO/GoAf2dWiIDZGaDwak3S1LJG
YGHw1H+73DwwFIvtnW1pAAdc9r7WeMwDH+x9evr3r1qAfFFdkGNKsnIPgXyR
nJheaNW6IQL5ois3u9WTyevXOFdkTVahIFxsk7M+Ln+QQD6IWbrX/MmeEeyD
Vnxvc3lyh4N9EMe3wD1enwMC5Y7DwasSsOHZH5UdKsPYCz0/4GY/zq0Adt4r
n1mOTQPvazDFMY8B/OnOQZKic4AbnuKi0cAATbObnEUW88Ajd5WO5GvVY1/E
8UsvZYf1E8gXJWW+CqV8ZBHIFw3P7A0WMmQRyAfNHLAVDZLnYB+U9CmDtZyc
n9Kbl7/W3CoBZVcVDzx2GcFeqOy7/X3zT1ngHJU2JJQ9A+r4TB8dFG8E58xP
JJr9mgNC3wQWrFrLAMgP3dp5WFgrepBAfmjxttDfNuR8jjxQ1VXrpBbyfnQv
vHKZr4cGe5aGiIzZcbAP0umV/Ti/rxoszTwt4PJlGsg5xni0hTHAkr9WLi3l
s2BsW9rJ32MM7Iec7lVfOXiaRSw8pSa3c6UgnFj18MulW6z/237Y+qFvKvyz
gj99gq8fYshoWvkZmD5dPxlplTj+tdeyDlASAqYX2HqiKzv2JASufbcftp7o
e8qj3NsP3u9/dezDc7sOQYfMspSZU6d9tl+sd1fb3vSPvfAp4Wu1D4D1wfGy
RR5B/+x7U5REjVdcg68n2mLpVfkQ2B6ArRcKiZ1zfbvTZ3sTzqb1kscFHTp3
3PTX6/4MXz+0OUJkpXs2sP/XwxH/ftof+3X/Ao/OYb8OX0+UOrt+Rejf9/tr
/ppqf0sQdDh49FvL09zP9n+L5ATq7wPTX2NOsX/OZ/vEJJ/rh5f/tc9nEf7X
zHwdvr5onYJl72eX9/vbXze7J4lyOJhrdkmHLgbGj/3xTxfmA81768wzA1if
TyzXmh0p/9fe7Lqu0G1gfV7+8uOXe1fZHcqNjlyQewfsX8/715fcIOgQfr53
if9EYP81oPHRCdE/9plHJ2bUn78GX28UfcW1MuUEMPwe9IfZ7Qfmh4Mdn94A
1Ws2Sdaq3P5j7+P95naZGLC98WKFt+w2dgeXXNcdRUD/CfhJ3V1TIOiQ8nNR
W0HTZ/h6o5iU51fzrp+xj5iwekn7ekGH64fvPjsDrM9/5ljv7EsGxqe8y9uZ
Itft619ZzVvwld3h03u+F9/OA9u37x85SE0QdFi0LP5cKlD9MR7L0q0hf+wZ
U4tvRL+/Bl9v5Mlxzqvrzfv9dYYlHF/PCToITrw26RHQfth6o0i9bw8K3HfY
p/u3iD9q/WO/bf25NE+m6/D1RxGsql8u/Xq/n131RP+2aX/tv99awXKBA9i+
0PZzezxb0IG3/LVzFDB8za2WBfvw/bX/u3P+qv3A8DVdOb/r3Vl2hwMCfrdj
PwPj44zYqoDdgg6eaSJyO6Z8tj/vMtVU/NQfe1cD+Y6dwPaK/oqwhzrr2B0y
bSQ4ngDbdyY1Rj9mrhZ0WGBdfVAAmL7n628vbAz6a795hbu/DrC9xHc7c4pO
j6CD66Yb89fM+Axfb9S09aaP/9P3+1erb+LxmcfucP/Rm+vXgea9CnaYv2+x
oEOvRN3PUqB7X29Z9yjN4K99vxGbig/Qvc375x4xfPPH/nzQwos9wPbwJo3f
W3n3sTvIXch15/r9fj9sPdE/v5aEVbNO29csUQks3SzowGcov1995mf74FX7
GeaU/LU/lTHXLkrwun0Ec8xb9imCDsEGb/ceALa3YOuLGLXj/0759B5+vo7I
u/VuE0x32Adxnp0cKvnPHnrfGUP85NV83A0csPvPGG4cXFEVO1EQzoffXwYF
sPUXMD4A8uZHEQ==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0DkvRHEYhfG/JRQkJHYVoaNhrKHRKJBIMEaio9AMKsFIVJSEgg6FRqOx
FWLnA9j5ELZYOhK/KZ6c85z33tzJlA+N94ylhhBSkEBXVgidODIc4wSnuE4L
oQY7Hu5DHl7sn7ZePPBJNODMfmOrxS6PIh+v9i9bHx75FKrSQ1jgOWjkJTyh
/+rraOFrvAzn3r+VEey5tblt6v16hT6nZyR/j34gC+xZelwfkW+8Q27zKbnE
I3KFj8tiOShP5Gzyed/71qMY5k+eb5dbfEJO82q5yOMyV8bkoWxyK9Vn9D+9
W9/RN/RWfV0vx4Vv3Mk67LvFUOk+zzNRyLP5qP6uL6OOr/KS5Ob9n+R/gGe3
BJpxab+31eOAD6AIH/Yr/APdfj5x
            "]], 
           PolygonBox[CompressedData["
1:eJwV0MtOU1EUBuBdihMYSRwaEyig6AM40wptcUJISJyJQFsvoJEEpyamCsoL
gGFGgiOfwJnKVR2Jgnd7r7wATpCC3xl8Wev/9z49zenMTo/cbwkhxFigaBlu
D2GIj/ZtivEQLvPGxSydHOgPdaOU5AJJPulLuiRv5RxdnGwNYUa3b1/korwk
n+a6/bX5z7NN8wZ5Xdm9l/bH5inzirnC5+jd7LAq55l33sY1z70yH5oJfYf5
QP5rf07TM0fyGBX5Cf3s6svRO1iTb9LNkf5YN05VnmWAL/qKrp91+RY9HEcf
0jsn9DV5jhRf9VXdABvybXqjD0/M/ay+bn9Kmm/u13QpNuU7nI3u8t1ZXZ9m
S57kHC38cNbQZ3gnT9FHnJ/O/ugHeS/f5Tyt/HL2mz1nV/mgu8cFTkS/7T/m
9A37MzKc0T3SxXghX5KX7Yno+9pXzYL5H61SUQ8=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0btLFVAAx/FTORjiq5b0allgWzZlpl4DF4cMQoQsTaspEDVpCs2ccuwp
umnhIkJLQw9fNJT2dFLz+Tf4yFeB9TnDl9/v+zvnXrmek7fbaloPhhAOYATV
aSFcxoxhDwUOb2ESFYdCWMFP+y5O2G5iAkn7Mn7YL/JurKLB9hc79uO8CeMo
ty3hu72CP8QK6m1/sG3v5Zto51kpIeTrjRhDmW0R39x7FX+A3oV895L8qP4U
Z3kXX8Z1voctn0nIfhQ7f+FsA3d5Js/T3+q1+mHZLHvkaXnD2T05xCvlaPz/
yFK+gK++u5t/1BvlKdkuB2RSvnT/vnzDr8h//I58wPNkOR/V6/QjskU+kUXx
jrNhvUpf0q/pu/jtb+bKPpxz9tzZa/2Svq636Rl6Qk/VH6GQN/APuMB/4Yvv
GeT76OQJd8r0bP0xzvBOvoi6+KbY9JlnfA2tPN2d3PiOeI8S2zym3SvlHVjA
1fjG2LDnxLfBO5y3zWHKvo5j8XfG90CxfRaf7Z/wH+3jWug=
            "]], 
           PolygonBox[CompressedData["
1:eJwV1FdsTmEcx/GjQ9Ha84bardmBBDckiLaqtBIJiUTEKrFrR6wbqkhwgXJB
YlZbtWskEnvVvLdVh3Vj3vg8F9/+ft//85xz3vf0nLfHrCUFi2OiKGqCXv6U
Iy8xiibgmn4VDWhn0xRUIT02ip6i2rwebc0KcBZp5jW4Yj6Mr8KrsG72A3Xm
bXg+KjHY7Akumx/m/7CWd4mLoqH6SrwM+82+47N9u/kXLOQt7Gutx+tb0ZNP
5hUYxB/jkmOS5SGMtH4ofA89T/+rr9E760P0an2q3kqWoL9eZF4kT/Bx8gWf
Fa7Dv6HW+TfwG/p02Vkulvtkptxl/2p5hmfLRj5XLuDNw7X4enmRF8g4uUBu
kT3kJOtH9dF6uT5Qf4SLrttNlmKEtdLwP9An6n/CNfVOeqbeUt+BfnwFf45J
/Cs+Oc9O3oBC3syelnoezmCA2UNcsC+DL8ezsG72BR/Nk/hElKG/2QOcN/+A
RLNcnEY/8/s4Z57Ol+FpONasEe/NS3g95vMEn6WFPgGnkGp2D1X2HeS/wzPG
O9qXpifpxUjlS/lxfaxeEz6D3oB3jr0up5l3knuRoe8I55JlPEvW8TlyHm8q
m/N18gLPl7GyUG6W3WVOuDfyCB8lT/KZMoXfxVnX3chv6jNkV7lUHpTD5YHw
Tui5+q/w7Osd9MF6or4dKXwJP6aP0Z+Ee6PX463zd5R7kG6t2Nrn8KzxeN5M
j9E3IZln8xPoy++g0vH7+c/wvPP29gzSww/EY+SE9xdv7NvOa8P94XH2JehZ
4X6jj9ltVNg3kC/CI2SH9xevzbfxT5jNYx3fVB8fvhd6m93Cf/pIjYk=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1XWcFWUUBuClQbo7lpTuULq7FlQUE1tULFTsoEMEW6RTMLG7uxu7u1sx
8Hl//vHc855zv2/m3pnZu4XTZhQdX6ygoOA6L6l7eSnFA/JsJtOV4pSgJHt7
vzQPynOyh26UYh/zMjwkz81aunOqWUs+kDcyk9JMMSvLw/K87KcHp5m14kN5
U/ZThn3NyvGIPD/76cnpZrvzkbw5+ynLfma78ai8IPvzmfXd+V6+lV7M0rfm
Y3lLjscifW9+le+mHFP15XlMXsjF8gB25lz5znIPfpBXqeO4Tb5cHZYLzB7K
GWobPpFXqmO5Vr5EHcxm/tGvU4vYyiz9YrUPm/hNv0adkL3co79SHcEWirOe
SWzLdfD+/moFNvK4foU6mkXyMnUgf8lr1YlMzX1Re/KjvFodz+3yFerwPDfs
qT9Tbcun8lYulYfwb74vS+S+/C7fS3kO0FfkiXy3fL7cV30vfpLvoDdn6dvx
mbwt56ICB5pV4skcP8ejD2ebtefzPNvZT0UOMqvMU/JF2U9fzjHrwBfy9dlP
JQ42q8LT8tLspx+VOcS8Ks/kOcha+lOFaebVeDbXNWsZQFUONa/Oc/LyrGUg
1TjMvAbP51nIWgZRncPNa/JCrm3WMpgaHGFeixfly7KWIdTkSPPavJTnMGsZ
Si1qU4e61KM+DWhIIxrThEKa0ozmHOV4dXg5z0HOwTBacLR5XV7J85i1DOdc
s458Kd+Qa05LjjGrx6vyVdnPCM4z68RX8o3ZTyumm9XnNfnq7GdB/q74Wb6T
kZyv78zX8k25LvJQduXYuf9yP/6Q78u55ZGUyG+J/li1Aa/L16hjWJF7pg7i
73wWFub55xf5LkZxgb4L38g357PQmuPMGvJGjplzMJo25Ie4ETvklVnLGNoy
w7wxb8qrspaxtOME8ya8Ja/OWsbRnhPNC3lbXpO1jKcDJ5k35R15bdYygY6c
bN6Md+V1WctEOnGKeXPek9dnLUVcaNaVb+XtuQZ0ZqZZC96XN2Q/k5ht1o3v
5Fuyn6X6/vwp35/7K4+iJBuYXOz//1VdvPcfts28rA==
           "]]}, Annotation[#, "Charting`Private`Tag$392277#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1ne8jmUcx/GHc5RRCqUdUmZCe8neZERSKY69jpC9K6OdlRENo6FsZZSR
lZ3Ilr1HGdmr9+/VH5/Xd1zXPZ77vu7rnFwpbWqmpkkkEpvTJhITmUVJicT9
GC+Xx3VISk4kGukO8AOw07xDckWslFvjQUzSL9Y9gK/lCrgeyY5vrDvIv4td
5h2WK2GVnIpCyGbem7qz/HBMNm+JnAffyBWRw5zeclqkl9PJTfhD/HsoIg+S
b8Vuxx+hlbHaWGlj4/k2fF7+XT4THpJvkTvw5/gq/GR+BP8kP5J/g95D69EF
tBed4vxL+byoL39rfnH6ldyOVpJz0j5yc5pEa9AZtCvNEM+XNpUb08PxzOj3
ckf6vlyUDpazoy7/C93jukdpFawxp4z+67hHPh//Hn8DCsu3yh358/xITHXs
b3I+fCdXRsZ4T+Y10x3hP8Be847JVfG73DaeLabpl+nyY0I8K2TCPv10LNcX
wPe6qrgB+/XHdc9jrdwufhdm6FfoCuIH+XnciPTupbnuKP8hDpj3t1wNf8jt
kT+ej3wjHpazy534C3HdeDf8Z/xT/Gf8vfjReVbSBzHRWAljY+K8fC7+Lb4F
TaY16Y+0G81sPANtITehx2It0h/kTvQj+WE6RE6lt9GX6Vzagx503X/46kiR
15lfln4jvxlrXi5AP5Az40V+Nn1Efxvfmb8Yz4efyo/in+ZH8Tnwk/OvooUw
yVh13Gf8bTkdbop3LLfkj/Mf45BjTsR6xHq5Ax7F7eZ10V3iR2OmeavjG8Fk
uQZuxmH9yXhO+FPuiMcwS78m1h6myDWRBUf0s/G7vgim6l5AVhzVz8HPqJzJ
GqdzMQ/zsdb8ophmbq3YJ3BMf0r3AjbInfA4Fuj/iDWB6XLt+LZxXH9aVwsb
5c4o6Ld+GM8HT8h3yF35y/zneEYeLefEr45fF+8EM4yVNDY23hWfm3+Hvy7u
h/8p9p/4LvhWfFP6t1yJTpQ700/kR+jQ2I/o7fQVOo/2jPmu9y9fGw3lTeaX
iz1G7hDvKPbcWHtyK3ozrUPn0CeN3cl346/w1fhp/Bf8s/znfC4sdI319NH4
NozVwf3G+8rXx54T36/cmv+HHxhrRP5UviM6x5+JZ5D0/9+PrvG9YZH+T91j
sTbll2Id40T8fUAV73hJ7J3YYM7jmGm8bqw/nIw9ChvjvWCW7uV4PzilPxu/
FVvkbvEtYJl+U/x2zJZfiWcQ+4n7TdWd4AfhtHnn5JewVe6OQuZ8LGfBM/Jd
cnf+Kv8lljtms/wU5siv4gFz+snpcZecWW7Dn4w9lZ/ED45vgh/G34l/nec8
rYttxsob+y72CP6hWBN8a5o17o/+TJ81djffg29Gr8X3TafLXeJvjVyMfiG3
pffR1+ivtDdd4Zpb+KfRIM5pfik6Tm5P68l5aH+5ZfxNim+EzqR3G7uJf4M/
xQ+Jb0weHr8ZZ5z7Qux12G6sJwobHyhnQzH5Hrknn8AYeaVjtsZzxi/yazEn
9hTz2upO80Nx1ryL8U3gL7kXnsMq/bZ4Lpgrv457cU5/Sfcqdsi9URyr9dvj
XjBPro8cOB/7FP7SP4f5ugbIiQuxT6Gqdbo29hPsMKc4FhhPib8XuKi/rKuH
nXIflMA6/U5didg35IaxH8c+6De2i3XAf4on5BHxnOO++fmx7zr2SrxDNNLt
Mm8C/1bsY7QkHYv1ce34zrBQboQBxjPGnuG4WbQ7zR17LG0f74sfhiuOuSq/
jt3y27EmsEG/K66BRXLj2A9wVX9NVx975HdQGhv1u3WlsFhuEt8FrsU/lK7Z
QL9X7osy2KTfoyuNJXLTWHtIII35Kfp9fD+UxWbz9+rKYKncDHljLrYY26cv
i9/k5siHtNhqbL++HJbJLZAfSdhm7IC+PJbLLVEAydge6wEHjVXACl0rFES6
OLd7bKjfz/dHuVh7ul66NBgXa1T+ks8dz5dfSPvQHc77H0T7cCA=
           "]]}, Annotation[#, "Charting`Private`Tag$392277#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1mW4FGUYBuClOyUUSQkFCRFQGlS6pUNASukG6VakU2mU7pSUlk6lQSWk
kZRuvL8f9/U+7zOze+2ZszPnZGjcrmrbKJFIpFrUSGRA9Ejkk5iRyI4YkUh9
4nNMt4qBDOJbvuNT5+10vAEJOK5bzWA+c2yXriEJOaFbQyP9JXtvsvNA9z0l
9LvtX5KIk7q1NNZftvchBw91Qyip32NvRGJO6brrXsg/UIJ1uia6K3JfcvIo
fD5dXGbZqzJUV8q+V25MEsbak7NUPu14D/ml/CMlWa9rqrsq9yMXE+1vs0p+
HH4uOR6z7SvMvFSTZ5iZ2CT/ahZhmPNLm/t0m80m5nzzffaT1D7OTBGuOcvs
q8yP+YM/vb6n+Ur/mznBXGrm5iCl7NPNDOG68at9rVkwZK9tZl7T9WeRnJMP
5ElmalbLT8K1l+Mzx16dmXJmNsvDHS8TPq/clDf4S9dL9zpcH0qzQfeV7ro8
gNw81Y2grP6AvRnJ+Fu3ka/1/9oH8iHPdCMpF34++1ck54xuE6MYzRjKO+eQ
Y1+TgrO6zTTX37APIg/PdWOpoP/d3pyUnNNtoYX+pv1b8vJCN46K4Xdgb8Gb
nNf11kWYZC/DVl1L+y35O/Ix2Z6GNfJLx4fKCZhrX2nmo4Y8y8zClnDtzKKM
d34l87Bui9nSXGBm5y15vJky3IMst68284fz+cdr+5hR2M5kx5eZH4brRFn7
T+Y74Z5gQ7iXzEIcZZvXtzJv67eZg83FZi4+kqeYaVkrv3LuMDkh8+w1mS2/
y9ZwrzpeWT4ityJV6OxvskK+4HhfOSpT7OXC91vX2n5H/p6Pea0brkvEfHut
cK/qqoTPLLfmbS7q+umiMdVenu26Nva78hDyE2GC/nP9MbkNqbmk28FEqjp2
XNeWNFzW7WQSk6nm+Al9O9JyRbeLtvr/wnOHAkQJ10xfXX9Sbk86rup2005/
zz6MgkRlqr6G/pTcgfRc0/XXRWeavQJ7dO3t98P9SSGiMUKXmAVybaY5r6b9
tNyRDOH6he8SK+Xrjg+QYzDdXpG9ug72B+H9KBw+lz0d6+TojJSTsFD+JXw/
qCPPMd8L3yV5o1ksvK/3qxWeZeF+MTuZC80c4ZkQvo/hd2KmYje/2NeYBcL3
Jzwfwt8oMyY7+Mnx5WaecD9Tyf6zmZF9bLSvNwuH3Ws7mg/DZ2ZJeP5RJFwb
Mz3r5RiMkpOySK7LXDkrv4X7xvvUlv+SO5ORG+Hvpi4WP9srs1/Xyf4ovB9F
iRk+n76O/m+5C5m4qTtAZ/1j+2iKEYsZ+rr6M3JXMnNLd5CZ1HPsrO4bsnBb
d4hZzGYOc/nCeecc78a73NH9Thf9E/sYihObefr6+vNyd97jru4Puuqf2sfy
CXGYr28QnjtyD7LyX/g/QhebGfYqHNZ9Y38mj+NT4oafV/cGi+V6LHBeQ/sF
uSfZuBf+J9HFYab9c47oFrKIxSxhKctYzgpW8qXXXHR+L97nvu4o3fTP7eP5
jHjhOuiSsUT+IlwLOVt4jsqbzOLheRG+m17/P2+sRH8=
           "]]}, Annotation[#, "Charting`Private`Tag$392277#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4VFUYBtDh0qV0I41Ip0h3iyKodEiKdIdKl9IiiIUS0kp3dyjd3d2t
guDaP9bzve/ec8+cOXEzNe9Uu2O0SCRSICoSORIrEukZR2Fq7EikHhvkatyU
szNbLsgh+WtiM1HPwEa5F5U46li9rEVjml6fN4nDMXu9rUcxXW9ADuJy3N4J
TnKK05zhLOc4zwUuconLXKGPY0VnhmM05C3icdVeX+sx+E1vRE7ic83e59Zj
MlNvTC4ScN3eDb6wF4tZ1pqQm4RMspaRTXJvKnPT57+0FpvZelPyMEcvxGF5
JK/xnZ6JzXIfqrBML8P5sM8tx+unx2GO3oyNcnVuyXmZKxfmiHzKbMUo+U/z
I56G32l24XV5spmZu2wJ19tsTl95h/kBT3ioXzY7hnsYNxKpqi+Xy/KAC/pZ
81P+Y7K+32zA3zzXb5jdwn3x97f9lv5yXG4z1/4RsymfyJvMGmFPzsc8uQhH
5dH8JX/MMzkR38tZ2Cp/TjVW6OW4GPa54zsH6PGYpzcnP4m5a+8eA+3FZ761
FhQgCT9Yy8o2+Quqc9/nB1lLwO96SwqSlB+tZWO7/CU1eODzg60l5A+9FYWY
r7/NMXkMyfhJz84OuR/v8tDfD7H2Ggv01hTmd70ox+WxJOdn/U12yv2pyUq9
PJfC7+GR4w0NzwEL9TZslt/ljlyEP+R3OCGPY49cN9xTOQVT5Bzskk+YLRgg
7zRr80i+YnbiPXmVWSE8T1zWz5ltecmP+gGzIf/wIrxDZvfwvnpmHjvfYXKi
cH4sCv9XzGb8G549fYtZM3xveKb1C2a7cH3lBWYxTsqnzdaMl/ea9cJ3yin5
RX6L3fJA3me1XpEr4d7wxLkM1xOzWG9LURbqxTklf0MqftVz8qc8iFqs0Stx
NdwrDsqNwrsjP3XsEXISlujHwjvBZ/LWcB15zD39otmeV+E+6YvMEtzntH7G
bBOuJRP0fWb98N6Ea6ZfN7sS5fqm1qfKucKx+Us/abYM7y+D9V1mHZ6Gc9Cv
mp35QF5rVuaafD6cL1PkQ2bjcI/lZ37bV3JSlurt2Ca/H85ZLsZiuSRn5G9J
wzQ9N3vkIeyWP+SJXJt1chWuh/vH377naz0Zy/T2FGeJXoqz8kTSMl3Pw155
KHX4x9+PtJac5XoHSpCOGdbysk8exof86/OjrKVghd6RkqTnub3R1lOyUu9E
Kd7gN2v52C8P5yNe+PwYa6lYpXdmu1yLB/IlswMR96y0vlQuzTl5EhmYqefn
gDyCj/nPccdaS81qvQtlyMhLe+Osp2GN3pWyZOKVvfHW07JW70Y5MhMJz7n1
dKyTu1OeLERjgvX0rJd7UIGsRBGdGMQM99ln3mCD3JOKZGOWtQIclL+iLuv1
qtwI7xaH5SbhHZBvmT2I6drE0v8HLTA4iw==
           "]]}, Annotation[#, "Charting`Private`Tag$392277#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWYVGUABeABpLs7FglBuhuJVUo6FJGUEKQVkLCQFpDGlu5GkBSlu6S7
QZCULt/vx/ucc77LsrP3zkxU6671u8SIRCLRMSOROPEjkRUJIpHSHNaH05hS
/O2sCf/ps/mYuKx0VoYj+giaUJp4xCcBCUlEYpKQlGT87ufKclT/hncoQ3JW
OS/HMX0k71KWQ87e4b4+h09IwWpn5Tmuj6Ip/9idScB6uxyH9Xd5oM+lFylZ
46wCJ/TRvMd1uwsJ+cMuzxG9KQ/1eeFvTOi123nobT+S/UhHDtdmyV3hd+gT
9aIU1JfKVM7Xyorh3NlJO7380f5Wj6kPCvdXZpe55VxZRTZz/YbelZJ2Ihkl
p8vKckO4z3JsuC+yoMwnF8m3ZAXXj+rvUdx+ZGeWv9rzw3PTR+p56WM/lv1J
z247leuT9GKkttfJNziljyGW64PtV3nf/ld2IzF/2hU5pjfjsb6AT3liDyAD
e+w0rNcrcVofS3Nu2t1Jwl/2GxwPv4sn+kL6kpY/wj3hjD6OFlTihLPmPNUX
0Y90bAj3mLP6eFpSOTwb/nRelXP6BFpRhQz85Tya8/pEWlOVk85a8ExfTH8y
stHZm1zQJ9GGW3YPkrLRjuaU3pLn+hIG8NT+jIzstTOxKTxbLuqTecUzGBLe
h3xg35Y9Scam8Bl0fZxeKLwO+7RsxQs9i2tT9KXh86uP0l8Pv9N+Jj8nEzld
my33OU+tTw7vZ1k8/L9ymawuM7u+Wa8W3jP2pXDP5E/hfSO/s2PLoeE7QeaU
r8l54X7Ltq7f0T+mlJ1cZpcz5ObwnaGP1wuTX18c7oXzM7I1L/Wszqfqy8L3
kT46fCbC32I/l1+Qmf3h72dLeO1c1r+nHXftT0jBFrsaZ/U2RFhufxF+F1vt
GlzRf6A91cnGNuc1uar/SAdqEEV2XiUHOdnu39Ximv4TH1KTc+G5EoPf7C/J
xQ77bf7Rf6YjtTjvrC0xWWF/RW522rW5rv9CJ+7ZvUjJVvttLujtiMVKO7F7
+G243wy0X8gvycKB8NkNz1UvEZ6lvUvW4UZ4/7v2s/6rHkcfpucijz5ffuT8
P9mbVOF7xPlMuc15Cn2CXkEWkQXkkvDekrVdv6i3D7/XfkVmk9PCd4j83fUk
coxdThYI72u5MHwG5Neuv9S/orSdNbwuOUceDN8n+vd6yfBe05eH1+x8t6zL
v+Gz6PwXfYoeVx+u56azfV/2ITXb7Tpc0jsQm1X2ICJ+bmB47fxt52WPXo+b
+lS68MD+lDTssOtyWf+QOKy2B/M6e+363NKn0ZV65GOf8wbc1qfTjfpccdaR
uKyxh5Cf/XZD7ugziOf1jgjPmbz6Ahktu7v2UO9LWnbaDbiqdyIea+2hFOCA
3Yi7+kx60JCCFKIwRShKMYpTgoN+pjH39Fn0pBHXwnuJ+KyzhxEjPGc7ikN2
OvuH8L1CEf238LmVJV37H123IdU=
           "]]}, Annotation[#, "Charting`Private`Tag$392277#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864152168809746*^9, 3.8641521860401692`*^9}, 
   3.864152273736788*^9, 3.8641525378393154`*^9, 3.8641526306422815`*^9, {
   3.864152688139673*^9, 3.8641526956932287`*^9}, 3.865342586142746*^9, 
   3.865343336470883*^9, 3.86534339485122*^9, 3.8653439870259137`*^9, 
   3.8653443323605175`*^9, 3.8653443765693846`*^9, 3.8653444323505526`*^9, {
   3.8653457447220154`*^9, 3.8653458161061954`*^9}, 3.8653461492786875`*^9, 
   3.865346732500244*^9, 3.865346816174495*^9, {3.8653469703202176`*^9, 
   3.8653469754045925`*^9}, 3.865352933314975*^9, {3.8653582327238665`*^9, 
   3.8653583094413414`*^9}, {3.8653586434605627`*^9, 3.865358672249359*^9}, 
   3.865358737951356*^9, 3.8653587994476967`*^9, 3.8653588341026187`*^9, 
   3.865359340984579*^9, {3.8653594079801617`*^9, 3.8653594271310396`*^9}, {
   3.865359475788485*^9, 3.8653594787955246`*^9}, {3.865359513774342*^9, 
   3.865359519901383*^9}, {3.8653595706261673`*^9, 3.865359578920516*^9}, {
   3.865361022499035*^9, 3.865361029035945*^9}, 3.865445408672529*^9, 
   3.865445465281426*^9, 3.8654456787461615`*^9, 3.8654457684634714`*^9, {
   3.865445884836256*^9, 3.865445921420556*^9}, 3.8654460587696333`*^9, 
   3.865446443250679*^9, {3.865952125553069*^9, 3.8659521516667013`*^9}, 
   3.8659522247202935`*^9, {3.865952279668687*^9, 3.8659522923016386`*^9}, 
   3.865960380517995*^9, 3.8659604237811317`*^9, 3.8659604862431183`*^9, {
   3.865960526854105*^9, 3.8659606215087757`*^9}, {3.8659608307097435`*^9, 
   3.865960868038782*^9}, {3.865960935615129*^9, 3.8659609432706757`*^9}, {
   3.865961026919873*^9, 3.865961042898753*^9}, {3.8659618737415323`*^9, 
   3.8659619220130653`*^9}, 3.8659621773942356`*^9, 3.865962208141383*^9, 
   3.8659653341237497`*^9, {3.865966920464451*^9, 3.865966952803088*^9}, {
   3.8659670377118826`*^9, 3.865967084214981*^9}, {3.8659671567557373`*^9, 
   3.86596716982355*^9}, {3.865967354328431*^9, 3.865967365694789*^9}, {
   3.865967429099472*^9, 3.8659674436738024`*^9}, {3.865967497088687*^9, 
   3.8659675719317055`*^9}, {3.8659677533835645`*^9, 3.8659678198432693`*^9}, 
   3.865967879244236*^9, {3.8659679215246882`*^9, 3.86596797117278*^9}, {
   3.865968013975065*^9, 3.865968049366725*^9}, {3.865968179144141*^9, 
   3.865968295722787*^9}, {3.8659683292590413`*^9, 3.865968337405431*^9}, {
   3.865968399526526*^9, 3.865968431918147*^9}, {3.865968471686404*^9, 
   3.8659685928285875`*^9}, 3.8659686585365334`*^9, {3.8659690928773613`*^9, 
   3.86596912452522*^9}, {3.865969364031477*^9, 3.8659694647951903`*^9}, {
   3.8659695001958475`*^9, 3.865969589464244*^9}, 3.8659696214759865`*^9, {
   3.865969666100687*^9, 3.8659696876527815`*^9}, {3.8659714896133933`*^9, 
   3.8659715124820657`*^9}, {3.865971671047258*^9, 3.865971706849786*^9}, 
   3.865974159481908*^9, 3.866046862610358*^9},
 CellLabel->
  "Out[3575]=",ExpressionUUID->"3802ec72-22d8-40f1-850c-e8e0a0f2c199"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8659610922599387`*^9, 3.8659610956218615`*^9}, {
  3.865961325815102*^9, 3.8659613437903414`*^9}, {3.8659613901624837`*^9, 
  3.8659615902083845`*^9}},ExpressionUUID->"95c2d440-5f34-4096-8d7d-\
805c19f73e37"],

Cell["\<\
We were able to get this bad solution to the given well behaved solution \
after a few iterations. \
\>", "Text",
 CellChangeTimes->{{3.8653459472042875`*^9, 3.8653460042180605`*^9}, 
   3.865346104423029*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a4d3e002-6aa2-45cc-a329-b64caecefa39"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   StyleBox[
    RowBox[{"n", "=", "20"}],
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"\[Tau]", "=", "5"}],
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"\[Tau]1", "=", 
     RowBox[{"\[Tau]", "*", "1.25"}]}],
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"A", "=", "0.2"}],
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"order", " ", "=", " ", "5"}],
    FontWeight->"Plain"], 
   StyleBox[";",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{"maxIter", " ", "=", " ", "30"}],
    FontWeight->"Plain"], ";", 
   StyleBox[
    RowBox[{"maxError", " ", "=", " ", "0.01"}],
    FontWeight->"Plain"], ";", 
   RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", "IC2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"error", " ", "=", " ", 
    RowBox[{"Norm", "[", 
     RowBox[{"ICs", " ", "-", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K"}], "}"}], 
     "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uBound", ",", "maxCount", ",",
         "maxJ", ",", "InitGuess"}], "]"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uBound",
       ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1a", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
       RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
        "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"IC2", " ", "=", " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}],
    FontWeight->"Plain"]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
   FontWeight->"Plain"], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636127929494734`*^9, 3.8636129048647366`*^9}, 
   3.86361309340853*^9, {3.8636132740148587`*^9, 3.8636132890980425`*^9}, {
   3.86361367016436*^9, 3.863613704067534*^9}, {3.863614005426304*^9, 
   3.863614044030977*^9}, {3.86361407671554*^9, 3.8636140789588237`*^9}, {
   3.8636141197098103`*^9, 3.863614156970913*^9}, {3.8636143059493403`*^9, 
   3.8636143423397207`*^9}, {3.8636146524377003`*^9, 
   3.8636146681296897`*^9}, {3.863615502417285*^9, 3.863615703473082*^9}, {
   3.8636161037482653`*^9, 3.863616122815179*^9}, {3.863616300467451*^9, 
   3.8636163404706755`*^9}, {3.863616379759131*^9, 3.8636164322373734`*^9}, 
   3.8636164758294525`*^9, {3.8636165064106874`*^9, 3.8636165068755407`*^9}, {
   3.863616588161584*^9, 3.8636166296943207`*^9}, {3.8636166641123295`*^9, 
   3.863616732677436*^9}, {3.8636167693047395`*^9, 3.8636167704293804`*^9}, {
   3.863616826318534*^9, 3.8636168556931543`*^9}, {3.8636168995821395`*^9, 
   3.8636168999240313`*^9}, {3.863619302411866*^9, 3.863619416136552*^9}, {
   3.8636195563387823`*^9, 3.863619570937121*^9}, {3.8636197069376936`*^9, 
   3.8636197273581724`*^9}, {3.8636205744286833`*^9, 
   3.8636207335498743`*^9}, {3.8636207658335643`*^9, 
   3.8636207659625244`*^9}, {3.8636208211778917`*^9, 
   3.8636208543832893`*^9}, {3.863620930334037*^9, 3.863620936617031*^9}, {
   3.864135467525829*^9, 3.8641355031932845`*^9}, {3.8641358508757644`*^9, 
   3.8641358994820337`*^9}, {3.864136005621681*^9, 3.8641360284712887`*^9}, {
   3.8641361588251004`*^9, 3.8641361878597054`*^9}, {3.864149523908724*^9, 
   3.86414952549721*^9}, {3.8641504554392495`*^9, 3.8641504662587476`*^9}, {
   3.864150523008383*^9, 3.864150605221774*^9}, {3.8641506500782566`*^9, 
   3.864150690388214*^9}, {3.8641515284209967`*^9, 3.8641515289998107`*^9}, {
   3.8641516589627523`*^9, 3.86415165924166*^9}, {3.8641517275125647`*^9, 
   3.8641517616755095`*^9}, 3.8641517984915934`*^9, 3.864152052785297*^9, {
   3.8641521525610065`*^9, 3.864152184609634*^9}, {3.8641524131266785`*^9, 
   3.8641526257358713`*^9}, 3.864152761298999*^9, {3.864153148514683*^9, 
   3.864153171941102*^9}, {3.8641532143853645`*^9, 3.8641532502927427`*^9}, 
   3.8641533364128733`*^9, {3.8653433741568346`*^9, 3.865343389585903*^9}, {
   3.8653435025178013`*^9, 3.865343556974392*^9}, 3.865343662550641*^9, {
   3.8653439817835903`*^9, 3.8653439830341897`*^9}, {3.8653443150880394`*^9, 
   3.8653443220478144`*^9}, {3.865344369751565*^9, 3.865344369894519*^9}, {
   3.86534442575966*^9, 3.8653444262555013`*^9}, {3.865358620302966*^9, 
   3.865358628368388*^9}, 3.8653587956619086`*^9, {3.8653594336949434`*^9, 
   3.865359473096348*^9}, {3.865445033367549*^9, 3.8654450388677907`*^9}, 
   3.8654454578238106`*^9, {3.865445645297858*^9, 3.8654457040770626`*^9}, {
   3.8659521591313095`*^9, 3.8659521801135883`*^9}, 3.8659522440960875`*^9, {
   3.8659621904140654`*^9, 3.8659621913027797`*^9}, 3.8659622596528797`*^9, 
   3.865969703875583*^9},
 CellLabel->
  "In[3580]:=",ExpressionUUID->"539af9eb-2787-4ce5-94ed-3f323d9493e1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
jQ6ySoV6momvEjc2PakX6mm6LuT7+xozhX6NjX1n+ReWELiAz0+X7v/50pYr
9G/UHdi0brMcIdTfWHqEXMv+wRTqX56Gd82rZr0D541fajlnZqD7t85r51t8
gJS3b9urYiXR3cQxuu68RsCyenjroqXQgtHyqZ3RNFBXxBJ80inoc+KSiQfX
6SDJlG/0y6UiazVo/2VAxqsup19i2RhSan2zzJgcb/7wj8R5D6WRf4N2pJgC
A7CYVW9X7CDPo0HKixzd6DDysKs/giaD5tOMJIssaSD4f6WBFd5T6TkNINDn
bLT9pZeytR4E+pw563L7tvx8I+xXiI7ufsZvfyzsV4iUTleNG038a79C9JXU
d8mrCiGi5Zoo0ciCmdfd+xWC34L0n4FHR8o4kEDJ8FcJJOPeR9eBZ9EEbCyO
ZWvbf4KiBVG3LikTgHauT5Na+xmSB+5N7DFig0DfU6LhKL4vnS7sf3imKhb7
/cBroZ9k0Lhjsco2mtBPMnhTD8vlAhsX9D8kzxy4fn0OF28ce+wfdHIcgv3C
knJ/EPj9L6YW+ZG/Iebhb6psEfn7h+IDA2KSqKBb79MK7QaQ6PmTyZwhhSLc
E+xQayPU6NCLeDIUFBVbniyuSgf8Onp3eQEVucwgsuP4dGDI78pOWoQhrxe/
HTt2MmBdmn1LyRJp1KCS4aW+mQHXtMKmtSvKoMChHTnf39JBuXSPkWmKDEoN
ifxc1k6DpbO8+3gKsqh7yWA6imoU9mvUlxfVnf/4934NVkLs40TDalAcELeW
3sGBlctZkSeCaMCwfql2koyPbn+yULgrFxQdjL+lORJQk+6mfGk5iQckBtu9
eWxhf4dEnN7SjBMsXNDf0ZKQH/WmlMDNws2ts/l8WG81fOf+Ki7u73x72dlP
FNRILy+waKDD0aGnBqIdVBQcqdy6YCt5Pjd27P3UjiF3yPYdIfFAhsYvK98+
aZR7wPWmxSD9P/0iNvdh2dXndXA2XUpejEJAz7fdru/8WHB+b2jdXDKeqXuc
ONpi3gLLeIOmLz5yhP0k32x0qn77cnBBP0lxmvhNNhn/d/uppduNjMPVO5rv
UAKBU9oJjztuVITNDCo8NZ/EZ6tFJBa6YkijPj7NjNxfVT9sG+MOk/tr9lrF
9zqM//SjiK4bwlSDG+FtQwElch8Bfos1hzU8CaiTVCw0OEII+1OU340Nbw0k
8MnqhPJH5XxwUK76Md+ciz/v6DxXVk1FtyrPFew0JXHxJc5A/0sM5esd1Y4l
8YCgn4VftFS2sycUinNp8ZyrtUCpNjZN6+TA84ngnoAAJmjYzXrJIMdDL26K
apRVM5zp/qU+MMYR9rs0rZim2C3KwetmXFwj8WgMRsTcIr0NuHgnos5eYEJF
iy/yDvZRGHBeVcueMMEQVnTnWBv5/DBTOjt7szQ60Zvj2mPMgD3zSifen6DD
DZO8kC+hBNhzFOI4zk2gObJPpnI9AT6b1uQsXT4Gnw/tdVIn91Ps+j+8OMNx
WMI/dQefycVVxGK+bZ6Koflzmd7W2xnwq4fZ8XaaNOrc73Qr1JYB/SUFb3c3
f4CpJ16vvrmCAKVm4Mz3ZYPkh72VvufJ80Fdd80XQz5Q1953XUrigZ4NtHLP
MAx9BMX7MiQe+He/zkn9Y9tCejlkvuC3ZZL491OXjt/6a3z4eaobYSQ+tFk3
Z5hfiCGRVyZtKmT+yxGTemg5zACdwj7xfSQe0Es3sLVJGoMVeScWnNDk4gVz
zU6t0cFQx3xiUoHEAxaLN7288YsGB6+fpL0MIoDLasF9JMdgdGqD+QkmgXvu
vZmmqDQOhtPVHE0Wc3GLiWy5vJ9U5HhcdW3PNgawUhS7aUMYiij/YjtK4gHR
zg/Xfg6w4PQ+9XddJB645HLps/ZsPpm3DfX2kPlHbu3XtmofDP3InzRvIdfn
ols9YppNfBDbOBDKX8fFU7rT+rpoGOo/7kE948wQ9hstuH1PQczjMDCGvqll
/WTCM9eh+JkkfjxwqnNOJWMMZEqCM2NMufi+ZbO0zthiaEzi2i1zcjwCZ2oY
jIzQoVIxd7TzHAErmYXyFv1ssFM35pWSeLByHdzLcuEDg9Eei8j5qLYsv0xJ
xFCr3OXqT+T7/btf6f3oOauIOD5si+GZFm7j4ijp2UjoHQzN2NJ1qYJ8Xka0
XdLjxwzYlbKyXyeGgBFPxdA9xSxAXd8wDXI+zFUP9m8X54Nl6Z+5P625+OKn
Q0ODnuT7rl5Uep183tuTuhKSJUzwLnkZMpf8vtkbypZ0vBoD3rj43R3GXNzv
9iKTe5tJPLpyT2M2if+8rvgouT6lg0xbKTM2gownTr+GiwvZ0CHbImFMfm+A
2Mxnryz5UCxDUGLI72PV1NwxiibXi63I2ankeutj8lJ/3eNDXEWwQvNmLl4Y
9qquVZcJ41F5bxG5HzHXqLLoVWyImWYcYU/mt5bkFwwpDT4sSK7WVSLx05+K
5g+pJzF0nRZlKkbeT9BvZYfN+Rg73w54PrmmuqtZsLGUE4ST9ysslqFc6xyD
nfqeMZIWXHzrQ6m525ww9JDH7aSR40c57pUZfIQPDz7yDa3I+xd+eBjRkoah
KuX5vtfI8fl3v1ZZuZgZI4kHgmvMMdlw5+FJ4fXWO7lKP7ykhb8X9HcJrv8P
qlbnqw==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{257, 1954, 195, 196, 197, 198, 199, 200, 201, 202, 
            513, 423, 351, 295, 256, 233, 530, 440, 368, 312, 273, 548, 458, 
            386, 330, 203, 514, 424, 352, 568, 478, 296, 554, 464, 589, 392, 
            577, 487, 596}}], 
           PolygonBox[CompressedData["
1:eJwV0btPk1EcxvFXQ1v8A6AqIGGRwRthMCFKSAATQkjQetu9scEATsomgyYS
tnI1MGpbqjKik7rpoIlGsNoYQ2LiYu+MfM7wzff5Pee8ed9z3q5bU6nJw1EU
HUIaG4koWsdz+QUyKFlMYxxJ/NftIObBjPk2TqEJWX2ZF3EZR1HS7SJuf9Z8
B6cRQ4fuHT/AEHL2VXgJV3AMJ+35yI9Qtt5i3pancQHnzF/5KX5YT5hz8l30
yUU+E75R/syPMSj/5ThOyO95lB9yP//hqzzMvfw9nIcX+BL/45u86X1VeRkj
5hSf50L4fj7O3fyJx3iOB3iPK55tld/IM+Es8m++iB75G8+jYF9zeJd8D2fD
/Zm/8BMk0Gn+wLPh+5D3TI1XwjnQhqouad9b+X44J37qjujy8kS4SzTjpb7O
q7iGdtR0v/AKr9HQreF6+I+o64rYwr75GW6E+0VDdwBxv03h
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{164, 1955, 1952, 168, 167, 216, 239, 278, 334, 406, 
            496, 166, 215, 238, 277, 333, 405, 495, 165, 214, 237, 276, 332, 
            404, 494}}], 
           PolygonBox[CompressedData["
1:eJwl0slLlHEYwPFXL9G4jbfSg46W1MGo1AQRUwpLggShtLIOnnK/pV3SLnoo
iPoHTFvObZq2uB3MLnkwkIKgbNzCP8B17PPi4cP3+T3ze2dwxlhTZ11HchAE
SYwweCAIhpg2TzHJBON85hOr7FHgoVu8DB/2Jh8lai6lk/dk2q/YJzjqfJMX
7PHBrkbv85V8dzP0DB2MELVbdq/KfJcpsu127frNcxx3PqKNPCfBmNfXtdpr
T/QnxeaLGqfC3KuXdFbzNF2v6Jqe04d6Wb/rCS3ROv2tZdquNTqsGbrkM6/q
P+fz+khrdUFPaaUuUm7u1kmyzDueWzZXmvv0G8fM+for/D7NN/QZu4y6/1h/
UOS1C9rDF2LOafqAeQqdi7WNd6Q7xz1/1tzFBIfttu3yzNcZYif8/eyq9R4z
5LqXGn4mrbwlze6vexXmO4xzyG7LLma+xiDbSfv/Xyl6mhbekOruov0muc4N
PGWLYbtI+N3RzGtS3P9jv0GOcz0DbIZ/n91BPcltXhEJfy/7/xVLXcc=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 135, 111, 91, 74, 61, 51, 2, 136, 112, 92, 75, 62, 52, 
           3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 
           21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 137, 
           113, 93, 76, 63, 53, 36, 138, 114, 94, 77, 64, 54, 143, 119, 99, 
           82, 69, 37, 139, 115, 95, 78, 65, 55, 144, 120, 100, 83, 70, 38, 
           140, 116, 96, 79, 66, 147, 123, 103, 86, 56, 145, 121, 101, 84, 71,
            149, 125, 105, 89, 39, 141, 117, 97, 80, 151, 127, 107, 67, 148, 
           124, 104, 87, 57, 146, 122, 102, 85, 153, 129, 109, 72, 150, 126, 
           106, 156, 132, 90, 154, 130, 161, 110, 158, 134, 40, 142, 118, 159,
            98, 155, 131, 162, 81, 152, 128, 160, 108, 157, 133, 163, 68, 88, 
           58, 73, 41, 59, 42, 43, 44, 45, 46, 47, 48, 49, 60, 50}]}, 
         Annotation[#, "Charting`Private`Tag$396596#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1He8T3Ucx/Hfvca19yZFRUtlh6LQItRN0hBJEYqW0rDaUdqliezsvfe+
NtmbkL336Pl5+ON1X+/P+3zP73fO95z7K9G8XeqrSYlEYqI//fgwf49HkA+H
dGvRH0fMP6Ae8uOwbh0G4Kj5R9RHARzRrcdADELvlERiMA/B3zhmzU9ogII4
qtuADMmOm1/ArUiPofrj/DMeRSEc021ERuuHmlvgNmTANbo5/B5qYZh1J7gX
HkNhlLJmCX+E447nN0+R30A13GH+h7/EJsdTzMPkF1FF3sZl4hrllfw5asr7
OCOKy3O5Dr/P9/AufpxrczleH/fDX/P9fICf5OG+76T8Cx4yp3Il3hzXz0W4
NC+N58Qfcw3+l084t4A8VX4z7kXewXfjTnktf4XN1mWK75Jfwu2xf+ZV/AVS
cK15Hn8Q14cRzjnFv8Z9oChO6gpaN01+K+4TW3SZdSPklrGXyISR+tP8Gxqi
GE7ptmIURuOM7nc8Ec8Rp3XbMAZnzX+gUewvzuj6eK+2cxbfN1LXKu4TmTFW
f47/jH2N+8FZ3Q5ktX6U+WWURRaM05/n3miM63BOtxPZrB9tbh3PDlkxXn+B
++AplMB5XSFrp8sdUB27dNl1Y+Q2KI9s8fm6+dwJD2CCdRe5L55GSVzQFbZu
hvx2PGfs1uXQjZXbokK8i+bV3B3Z41rMC7gzHozvNG/gbzDR+Zf4LzyDyo5t
4etxk7yMP8G98h6+aH0Reab8TrxL8s44Hnsnr+MG3JNr8/54RvE+Oi8njzM/
zK9wVd7OqVwx3jtew/W5B9fi/+L5c47YA17IdblL7Cfvjv+LuG95I38b+ycf
5Em+8zL3w7O4ATc7tpw/xSXHi5pnyR1xH/bocunGy/FjWAk5Yz90i7hrXD8m
W3eF+6MJbsRl3V7ktnaCuV3sJ3Jhij6hHyA/h1K4otqHqZiG6ZiBmZiF2ejr
nZ7DczEP87EAC7EIi5Hkcwf6vKYonRSFfaM8yVd/y9vjLuSOPdAt5m6og7S4
LN0guVmsk7fGs8ct8gqux5/F/vBebshJXIxn87uoif0+K69ukvwaqiAPlujT
6QfLz8czQDIO6JdiGZZjBVZiFVZjDdI7b4i1zeN6kA4H9fn0k+XX4z1C3ngG
ujT+MN4RVDRv4u/ivZcPceP4LXf+/2fd4C0=
           "]]}, Annotation[#, "Charting`Private`Tag$396596#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWAVFUYBuBhl+7uFgNBURQTRUVFQUQxaVhpZOkOpRuU7k5ppJHu7u7u
7vY5Px7e7z3n3GHmztzNFVOvdGycSCRy3z9loiKR3dGRSG3SskufQA/KUo7y
VGCP/TqkY7c+kZ5UZK+130nPHn0Svbiqd+R1rujLqcQ+vS4Z2KtPJhI3Ehmk
f8pzvTfXzJ0owFV9BUmcG6t/Q2IqW9svY8nIPj2dM9PMPzNFj6MPNn9GhD7W
rsvOvME1Pasz/5orsFJPqo8zlwxnzOtlEvKYl8hqvGfeLqs4f0DWo7C1TDKv
XCGLyf3208vp4fPJX+RbcpMsIf+xHyWH6EVk0XDP5FpZXMaRueRC+bmMke/I
rfIv196QXXiT/NZXy+vWs5nnmiuySk+mjzd/S1Je1P+T1Ymxf1DWJzMH9Az2
Z5h/ZaoerQ8N74Eo/rZ2U3alIDf01SR3boJeimT8Zu2QbEAWDurT6EtVDltr
SFYO6dPpRzWqU4OaHLHfiGwc1mfQn1t6t3BPuamvoRZH9cZk54g+kwHc1rvz
Nrf0tdTmmN6EHBzVZzGQO3oPCnFbX0cdjutNyckxfTZxffZh+hdEM8jaXdkz
fGfc0deTwrmJ+nckD8+PtROyWfiuOa5ndGamuQxz9Hj6cPOXxCW3vijcXwbb
vyd78S6v2Vsj71rPbp5nrsQGPaU+yfx9+M2YN8gUvGReGt67rCHflzvC70XW
dd1Jc3M+0nPLV+VK+ZU8YT+TnBWeM1k23F+5OTyr4dmyH1+O0D+RxWQBuU7G
4wXzYlk1vH/zNjnENfdl7/CscU/PYW++uTIb9VT6ZHNpUhJr7ZRsEV6Tk/pc
Ejg3MrxX4jPU2gPZJ3xO7uubqMdpvSV5OKXPYxgPw/PGBzzQN1OfM3qr8Dxx
Wp/PcBpw1lrrcG85oy9gBA1pRGOa0JRmNKcFLWlFa865tg0vc1ZfyEgehWeQ
D3mob6EN5/W2vMI5fRGjeKz3pTCP9K205YL+B3k5ry8mofs1Sv+aBIy29kT2
C98/j/VtpHZuiv4DqcLrWLso/wy/Dy7omZ2ZbS7HEj2RPtpcnISMsfZU9udj
nug5nVlgrsJ2PU34O2n+kYLmjTJ1uCfmZeGZkDXDdyN3hv/fNZdku/Ca1vLJ
fHJV+Ezyov0sco5eVJaXheQWWTL8XbSfWI7RS5CIsdaeyQEU4am+g3Zc1tuT
n0v6UsbRng50pBOd6UJXunHF+Q7heeWyvozxPNcHhmeFZ/pO0no/U/WfSBO+
X325rBV+A+ZdspTs7uz/oaEEVQ==
           "]]}, Annotation[#, "Charting`Private`Tag$396596#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNzWN3nGEYhdFJm9o2Utu2fkCb2m1qpbZt27Zt27ZtN7X2h72u5z6z3jUh
Ye1Dw4MCgUAElYMDgXhRAoFHuo9FjGMQVQilKtWoTg1qUov4vnus+1nMeAaT
yv5OT7GOWdQmgf2JHmAJExhCavt7Pc16ZlOHhPanepClTCSj7ateYhtDSWP7
oGfYQB53EHe955DV+6deYxd1SWR7podYRk73X73FJDK5v+llCntHZ7t3Po1M
We67i2tshnmn1Y9aSs9qIY1GOTa682okynDPXUxjUZG57mz6S0vrdS2iMSjP
bnd+DeaBdwmNQz3vxPpcD1PQOyrLvXPpP73NZDK7v+sVdjCcdLZPeo5NzCO7
7bfeYA/1SWJ7oUdYwRRG0ICkfnupR1nJVEbSkEY0JowmNKUZzWlBS1rRmja0
pR3htKcDHelEZ7rQlW4k87+v9BirmMYo0ts/63k2M5/uJLe/1uOsJrc7wB3v
ohqTCkx3Z9EfepWdjCbE9kUvsIUF9CCF/Y2eYA0zGENPetGbPvSlH/0ZQErf
vdWTrGUmY8lgj9CLbGUhOWx/9CZ7KeCOwkPvkhqXSgx0/wfT9oMU
           "]]}, Annotation[#, "Charting`Private`Tag$396596#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8T1Ucx/EvQlYSZUQSWRVZZSSUXaGfVTZFtpBVZK/sTSIrNMwKKWSm
zKyiKDOiSJlpPD9/vB7vce693/s795zzy9OqS1LnZIlEonHyRKJKykQiVepE
YmiqRCIX9sjT0Av59e/pyuOivBpVkVo/THcf9srT8aRunVwfqdFbV0C3kH8S
l+TG8hG+G9bINeWv+ZbIjHbyWToA1YzfLg/nc+NbuZ68n++AGXIFeT3fAK/x
f9Lb8RJ/go6nr9NBNBn6uKcgXaQbSSvQrvQSnUL/MN6E/iCPod1pf/ovfZt+
ZvwZ+o38Fm1F+9DrdCrNQtvTc3QCHUgH0+So7t40dITufnTmf6P79PX5A3zH
+B25oryBb4g0eFk+Sd/A68YLyYv5irgsN5V/jDnAWvlZeUfMA+5GDV1a3Ug+
D/bLM1FJ96X8AtLG83WFde/zlfCn/Hl8J6TTv6V7AAfkd9AXD+k/0D2Fv+Qv
Yo6QXj9KlxcH5VnoF++GDMZG6/PhkDwbb+I51MIdxscYexDfye+iPx7Wf6h7
GlfkdaiNjPqxuvz4Xp6DAXhE/5GuMq7K61EHd+rH6QrgsDwXT+k2yi8iHQbq
iuiW8FVwTW4mH+V7YEO8r7wzvg/uwfO6TLrxfEEckRvIB/lOmCc/LW/iG8Vz
+L9oerTmT9G+sV5dV1ReyleN/RJrk17XN+eP8WNpz9gr9D86M75lzB/dJY+i
rWO90Bt0Gs0ae4f+SifSQXQITYFZSHL/XXSCfjgtRLvQ3+nk2BfGG9JDsX7j
Xfm/6Xx9ZX4z3xg9+Ss0A9rwp2m/2Auue1ReFvsbN+SN8Q11u+NaZENdXWbd
RL4wfpQXYAiK6ZfrquOmvCnOBWTRT9I9hKPyexgaeyu+Qbw3XsCLaBRnUez1
2Du4272T3fcwjskLMSy+N+4xNkX/CH6SF2E4iutXxN7C3/Lm+DbIqp+qK4Kf
5cUYgRL6lbqauCVvQQtk00/TFcVx+X2MREn9x7pn8I+8FS2RXT9d9yhOyB+g
im6L3AR3xNmkK6X7hH8W/8ZvyT/xvbAt9oG8h38F2dFKl0M3gy+GkzFf8nex
BvBhnP3yVr5pPIe/SjPGM/gz9M1Yd657TP6Ufw7d+cv0v3h//md+HO0de4wm
8A6+Mv483asfTdvGeURv0uk0B+1Iz9NJdDAdSm/DbLzk/nvp2/oRtDh9lV6k
p+K7899HF2uRv0U/0lfjt/HN0Ju/Ru9EW/4X2j/ex3WPy6v4WkjEfMnHaR9s
N54kf8u3w71xJuhy6mbyJXBaXoLq8bfKzZEJY3Sldav52kiGr3WtkSvmRi6J
M/JSjEUZ/RpdHSTHN7o2uC/2sVwKv8jLMA5l439XnE9IgR26V5A75k5+DGfl
5RiPtrjf2Lv6x3FOXoEJaIc8xuboS+NXeSUmoj064AHjc42VwXn5Y0xCOf1a
XRJuw05dR+TVz5PL4kLsT/kw3zXWFP8PnRHr2VgNul1ugbviXNI9ofs8zg2k
xC5dJ+TTz5fL4Tf5U0xBZ3TBq+iKbuiO19ADD7pvgXuewO/yKkxFef0XunpI
hd26urp9fHvkRCf5Ah2CYXzKmMc4q137P4fEN60=
           "]]}, Annotation[#, "Charting`Private`Tag$396596#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361103972989*^9}, 3.865445422662055*^9, {
   3.865445460925819*^9, 3.8654455200369153`*^9}, {3.865445694161232*^9, 
   3.8654457264389095`*^9}, {3.8654457751293397`*^9, 
   3.8654458752613173`*^9}, {3.865445930590624*^9, 3.8654459730440483`*^9}, {
   3.865446061236844*^9, 3.8654460689573755`*^9}, {3.8654464469315023`*^9, 
   3.865446455577737*^9}, {3.865952161175655*^9, 3.865952182002981*^9}, {
   3.8659522359946814`*^9, 3.8659522660000668`*^9}, {3.8659523006049786`*^9, 
   3.865952342510551*^9}, {3.8659523726628895`*^9, 3.8659523935431986`*^9}, {
   3.8659621960792484`*^9, 3.8659622764384995`*^9}, 3.8659654667182627`*^9, {
   3.86596970915989*^9, 3.8659697322444935`*^9}, 3.8659715219700255`*^9, 
   3.865971717628332*^9, 3.866046869867017*^9},
 CellLabel->
  "Out[3586]=",ExpressionUUID->"7733d25e-6bb6-433f-a098-10c5201e85f4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
im7gzJT8mwZwPLV/Y5ksbeIDwPGU1jUFo4FsL4TjqbsmukGzVQkIx1Prs6P+
GERkIRxPHbspU1b2rAjheCrLtepqN08FwvGUBL9X+NeNNQjHU7NWHWO+aXUI
x1O7bS66nbagIxxPjWw+dakkrhXheIrtv/9wPIW3cTyFt3E8hbdxPIW3cTyF
t3E8hbdxPIW3cTyFt3E8hbdxPJWa5lx/bKkJ4HjqRnnMtRnLOuD1M6fnrH4d
yDBnr3Ja+AEeU+Sn5EKGwat8C5b0jm7ENM2xVtQdA4UZ0Zwhqv3o7nLnzfoX
JsD560v7Vzgw0fTyfM1XNlMgZc/Y+7RXTBRg9cPop+kMOMh58H12UT+67Vd5
Q9FqDqR27LGJPd+N2MofRknfWwJDgdu1yiJLEOVi+JWfr/+BjJWjfDP6z0CQ
bPbKjF9sMDdP86HVrSLwpsDhHa2OHWYmsQb9mNVAxHukca6JA/YthugW6dUD
Dpdd3206OeGXL6nFRgWNQPSn85rhUQqsySitWBlBB/t/id8dmuSC8nvUZa/u
pYP62Ueet+a54Qv6ZRPuiQbQpZ1+wJudF3JGbdkVT6kHOF58KVklF3+/GeF4
EZ9P/YCmim0f/reN40e8jePH/TbdaSfWtwAcPx4uYpuqna8HisNz03GGvwEf
p49S6tOfwJRf4cxL378AXYnZ8zCvEylslefsrx8FpjEDvCnr/yAn221J7vXj
YDL+lnpv0yDKSzPb9YM5CWZd9VvOtTOR6yqZTreeaVCzV1FvIm0ASf5w7NJm
zALp/fTd7ZM9SKndxDpjchHoVWc+OuFShc7cVy7sov0DAty2NxTcwlGU4R0X
zRdsUK/rSfiIax7wzG10MXjODhu4f3zWbvwJBmO1e/PfcEAeDWnNU051IN1k
977BME4oQgRV7481AsMsvf64eApMDA5UFCLWC8tO5v2t6VxQxr24ROIKHbTX
LLKupXPD9z33DQXON4LaI7JMrgIeKPl+UeaCVz3A8fGed32dvvZNCMfH+Hxu
LbzqOPvgf9s4XsbbsUsbQ75HjYD1fOxaYa96UHzgmZ921WOgR+mT5vHdA+hR
Wm6MQu8EWHEmqPdwPRNttpPSNx+YAo2v1yWflWaiz98cGiTaZsCAxJL+q4Q/
qDmCwtsmxAYF9OCksFA8eDyy+FVRkB2WeRQ1b5IuA3El/D9+ruKAzf3SnfIa
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
Lm5R1425R/I/JmesCsoPBZH8j1F32bOGhakk/zOJnRb72cIm85Y2F0e1Gqvx
yLylQz2et0Iv4WB0tFp6ygqHjNk2Gzj5ONy5dqTZN7kTNDVftySF8kDk76ab
O61Sj2WDyN99YHfLtfdD/8trsm4oMQ+WrCP5pgdD3kOm5rWkn3ufdV5YQGEb
6eduUh7Me63KJfOZWJHL1zRe5mMivqkLSxc8n+CTeU0nGuMz1RfgpP9braZh
LjedTfqv2w5WrqevaQa6y4Ztnrck0ZrQEkWPrFb4khU5sTtXCjX7/RYMmdDB
LSyzQv2BNFqdv1Kp/jYDJDSnlTVVyKC+Irs8qYdMaLjjfY3+goLKktc3hZiw
oO95nn9ZDRW9DhUetCBwKz7u7l16Mw2NcyPuPpvBgsU+uqdfHZRFYe8Gg62s
mRCjvC8cumQRdtm9YaM2A8pvfS/ie8oh/O8VbWp4G4j84StND7GVfr0DkT9c
qM0Jv5jaSPJr4Rc7ZLdNlZP8WtkiY3exuliSXzvxamT+kbenSH7NKCRl09HZ
yfDPYlXtQHYZmJ/h5M+ncKFWXGvdiz3NMGH3+rrlKA8qarNc8h3ZkGbQnTiJ
4fC3LXHtPv12UIuKDjlgjkOq9PznB0o+wdCSbtlF67mkv9yg9On11eFMkr+b
vrwm0KOoifSLuw3OM1Q1Y5H5UWmVXS2j+jgm4u9muQo7pRcJsGu1yoHRxeOQ
6elwOHgrH/OqTXy15+UksMvyGurDuJhSo9vJsMVSaFdvEe2tYxs4vayqOKol
jbYYOnG1/tJBWeFyVJ2+DJp21XierRETsguN+n+aUtCqr0nBVVNMiO8qcx0w
oyKWUF640pEFf33v7j1oQUPB3knPj6xnwdcx/FqNpizihNl09JYxYWX63u/c
HFkEeeHuIU0MeH7u07lMTTkEWz8FrvOgk3yjXk1VnrvYQ5JvLEl4WuM9FEjy
jfrTFaujHqdAxLD11DrlBmjdMyXwTuKBU4fAd9peJpgVRobuLsRBaX7unaL1
AvDtMPrmFoGDmq35pp47XcD/6/uh+xuX5Ccf0DUGF5jxMBE/eavtUf67n3xs
umWuXfGKcXjmZl0jLOVjjl7p9oIxGXRtifpDSR4TdF7RRg5MUVBpSeXOi1tZ
4Kf04HDsNBrKyEg+m2LDgjmduwwVZsqiLQkJvaofmSTfeXpvb0vy3ECYUJgK
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
iCE=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{243, 1895, 181, 182, 183, 184, 185, 186, 187, 188, 
            499, 409, 337, 281, 242, 219, 516, 426, 354, 298, 259, 534, 444, 
            372, 316, 189, 500, 410, 338, 554, 464, 282, 540, 450, 575, 378, 
            563, 473, 582}}], 
           PolygonBox[CompressedData["
1:eJwV0LtPk1EcBuBPl1pvLRsOqBgHEwKGRDQxhERA0dVELitJyyTdZNBEwuad
jQEooDCKk7rBoIkGpNAQYmLiYm/UP4BeXHzO8OR9z++cr/3O1z6euT95PIqi
Y8yRjkVRinl9gUUKNp9xizh/zLap6Ys8oI0jsyxF/Tn9nKRg9oO6nmWY89TM
Ev78o/6QHpbMSvIFA5yi1ZkN+Yii/Zj1ez1FJ+3W3+RTduw3wu8wQoe9vLwQ
3lH/Ih9zTf8l684n9U96r5yUV+WBvC2vy8tyK9xHzsgb8re8J5c9X9ZfctN6
UF6RufD+8rQ8Jzdln5yS3fKnLHn2hL6up8Nd9H3ZxSX9u5wm51xTLjPKxfD9
7H+VT2jYb7H+rGfC+7FiVpGvwj04Q9ks7twHfSLck12zf+E8Y+Fb0jR7y6H+
mjucpWK2xztWqZq9YYgEh2Z51vhrPctdklTN/gMygk87
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{150, 1896, 1893, 154, 153, 202, 225, 264, 320, 392, 
            482, 152, 201, 224, 263, 319, 391, 481, 151, 200, 223, 262, 318, 
            390, 480}}], 
           PolygonBox[CompressedData["
1:eJwt0UlLVXEYwOFzrwtBbeFUUovKKYUQUxJNgoKgQRtoqdngwgZBSze6UBD9
AmXTuslSKyfCYaMLgygIrNQ0+gA5u3XqOeDi4ff+33POhXvO4er6q3XRIAgi
fKImNghuM2QeZIB++vjIB+ZYI81DV3jOOu/toprLLd4R48d/26+yz/kyz1ij
165UGxkj1b0RzeEmb4nazbqv0FzLIHvsVuyazRMccN6rl3jKKj2u/9Vi1zr0
G9nmEzpNvrlBT+qopuy+hLM6r8e1VU/pZz2kR/SMTulRvaGl2qURnfET5/SP
c5G26Wn9ohlaoD/JM9/TARLMy56bNReYm3Sc/eZU/R6+T/NFfcIK3e5v169k
uVaiDxgh2XnH9RbzJAeds/U6b8KP7Dwtx8x36SfebskuxVzOY5bD72dXrPcZ
Jsl923ZZ5ipes8Mvu3y9Qx9x7lu0SzaX0clS+D3ttsg0X+MV2+E7sVsgyXyB
RyzSZbdJhrmSl2zxw+4fiebzPGQh/H92G6SbK3jBJlN2/wFoJl1v
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 128, 107, 87, 71, 59, 51, 2, 129, 108, 88, 72, 60, 52, 
           3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 
           21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 
           130, 109, 89, 73, 61, 53, 37, 131, 110, 90, 74, 62, 54, 136, 115, 
           95, 79, 67, 38, 132, 111, 91, 75, 63, 55, 137, 116, 96, 80, 68, 39,
            133, 112, 92, 76, 64, 140, 119, 99, 83, 56, 138, 117, 97, 81, 145,
            124, 104, 69, 142, 121, 101, 85, 146, 125, 105, 40, 134, 113, 93, 
           77, 144, 123, 103, 65, 141, 120, 100, 84, 57, 41, 42, 43, 44, 45, 
           46, 47, 48, 49, 135, 114, 94, 78, 66, 58, 139, 118, 98, 82, 70, 
           143, 122, 102, 86, 147, 126, 106, 148, 127, 149, 50}]}, 
         Annotation[#, "Charting`Private`Tag$396707#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1GWYVVUUBuA7QwydBigSKoIgohIWSIioiIWKiSJKKCAqKIIgioIKdtAg
0t0h3Uh3d3d3w7sefrzzrb32PnfO2WffW6BWo2ofJSUSif/86SC3ybY8Rlq2
6s2jI9uNv6ccKWzTm08ndhj/QHnSsV1vAZ3pQu2URKKr7EZ3dlrzIxVIzw69
hZxVd+cVbuOMXg92qdtRkQzs1FvEOXUPqpOXs3pZkxOJseqGlOIfvd2yPY+T
kVzWTJWfs8t8ivFQdW2KUcD4f9mKxebPx+fwKkXNLZf54h7Vs+SXlFRvkOes
z6Yepy4jY4OLy9XyCVla3ikXxPPI1vJBuVk+LXu6fo/6Jx4xriQLyyVx/zKT
zC2nxXuSTeX9cq3c7dp06mHqOvEs6pXyXm5Xz5Nfs8S6C7Inr5E/9s/8bNmC
8+azG49XN4r741+9vfLneA4ys0cvvXXD1XXjOVmqdzHW83rsJRf0erFP/QuV
ycJevWX0pg/79X7lSbKyT285fTlg/BtPkY39enWcqxXyknEv3ojn5KJePw6q
f499JTsH9FZyWd2bN7mDS3r9OaT+gyrk4KDeKq6o+/BWvDsu6w3gsPpPniEn
h/Qy2I8R6nrcx2q9q7IvNSjIFb0cyde/dx/zEAP1jsi/qMoNHNbLaN1I9Qfx
nlmjl9Drp36bu+IsGs+RLblqOqfxBPUnPBz/03ih/JZB5o/Kv3mWu80tlTdy
i3q6/IIH1OvkEeszqUepP4yzpF4V87F36vmygvxGlpab4h3FeXRdkuxv/Kh8
R94jV8hKslCcOzlXlpdfyVJyY7z/5LjYHsiJsqz8NPZTronvRTy3epH8LvZP
vUUOdtkx2YHnuIlbzc2QzThqPrPxaHV9SrAutlNvgLomhUmK/dCbJBvH/TPE
uuOyI89zM8f01pPK2oHG78Z+ksxQ/ROyEy+Qi+N6GxjGcEYwklGMZgx1nemx
chzj47eZCUxkEpM56bM68yK5OaG3kdTuY5BxLYqQKvZAb7JsQhmmWHdKdqFa
rDO/LN49edQzZTnZPPZHrpeV5UnXZZFjjBtQkk16afQGq9+jKKmZqn9aduWl
eAec0tvMNKYzg5nMYjZzmMsZa7vxctwPp/W2kNb/GWL8fpwj0sQ70JsiP4sz
QiHjxbJNnHv1Vlklfstdfw0MDuN6
           "]]}, Annotation[#, "Charting`Private`Tag$396707#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HVgVlUcBuC7IBQVFBUQFLEQFLG7W+kp3aNzdHcr3Z3SSJdgoXR3d4zu
bnjOH8/e33vO3fZ9t7IlJiXUjomiKNmPPLFR9EdcFP1ELIv1AbQkL/nITwEK
ssAxPxPHEn0grdio1yQze/TpFGKhXph4luqDSDa3ITfn9dZsMtciC3v1GSTw
p16EFCzTB3PU3JbXuaC3YbO5Nk+zT78tB/ItM/Xzsisfki4+iqbIW9bjzSPN
+clknhPOhfW/ZNHw96yllA/IsTK7XG7/mrkPz+lfyPRymswph9g/Zm7Hs/ob
8hE5SeaQF+3HyGH6izKPzCBnyVyyrf0t5iSe4SFrE+R+63fkIL5jln5BduMj
buspHDvKXCBcJ/1vWYxUrNCvy758yVD9uGzPm1zS27HVXIesHNBnU5h/9OKk
ZqU+jPZs0+uG78pBfQ5F+FcvEc4dq/ThdKAoxShOCRbZL8mDrNZH0JHtej2y
cUifS0n+00uRhjX6SDqxQ68frgmH9XmU4n+9dDiPrNVH0ZmdegOe54g+n9Is
1svwMOv00Zwwd+AtLutd2GVuyAskh+eIi+bufMwdvQxLzGXDPcB6/Ybsx1eM
0U/KjrzNFT3WNRxuzssv+m7ZKNwr4TPZmyiPWr8rB/M9T1qfKRdYvyR78AmP
Wv9d3rWe0jza/JIsKJ+Sc+Vrsqz9peZy4Z7T04brIcfJl+UG+zfN/cP50r+W
j8vp8hX5m/1T5k7heunvyLRysrxqL848wpyPjObZ8lfre2Tj8Jk4pt+TQ/iB
hfpl2ZNPuaeXY5m5POnYqI/ltLkz73JN78pecxOyczy8SyjPcj0xnBs26ePo
xj69afi+nAjvABJZoVfgMTbr4+lOBVZaq0h6tugT6EFFKlGZKlSlGtWpQU1q
UZtVfrdSOJ9s1SfSk/16M3JwMjzLJLFar8wTbNMn0YsDenNycio8r9RhjV4l
3CNs1ydzxtyF97iu9+aguUW4npwOzy91WatXJQM79CmcDfcm73ND78Mhc0te
5Yweuc5DzT+ySL8ie/FZOJf2psqIVOYxshCZzfNkPcevk9XIai2jTCPHy532
bskB4dmz9k04F3JG+N/hfrd/LtxffMBNvS+Hza3IxdnwHqE+6/XqZGKXPpV+
NKAhjWhME5rSjOZscHyN8ByxW59Gf47orcNzxbnw/uGquTefE0Pq8MzIBLKY
58vcsoVj7wNLLABk
           "]]}, Annotation[#, "Charting`Private`Tag$396707#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwN0NVWkEEAhdEfBbvfwDewA1uxG7sVUAwEu7u7W7CwRcXu7u5usbtbcV/s
9c2cq1mTPyohMj4kCII0CoQGwUO2M5vBxBFFQQpRmCIUpRjFKUFJHrGDOQyh
K9G84iCLGUsfwnnMTuYylHg+coKVTCGG1xxiCeP4zSVS6ctXzrCWGfzjKlso
RRq7mEdIWBDc0GH84DzrCbPf0QQ+cZLstlWaUW/pVP5yhZy2zZpF72teba9v
OEw296WaQW9qLh2vf7hMDvdNmlnvaR7tp984yzpCbbd1JulcYyulecJu5jOc
n1xgA934zClWM40OvOUIy5hAf8rwlD0sYATdiaUs5ShPBSpSiQgqU4WqVKM6
NahJLWpTh7rUoz6RNKAhjWjMM/aykJH0oCPvOEoyExlAE56zj0RG8YuLbCST
/7qrubWnfuE0a5hOJ95zjOVMYiBNecF+khhNLzrTjOa0oCWtaE0b2vKSAyxi
DL3pwgeOs4LJDOI750hhFoF3XtdtZHV+oPm0nf4Hd7WB+Q==
           "]]}, Annotation[#, "Charting`Private`Tag$396707#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfcTgUYBuCXzJQRQkm2IhklIyOzbH0KDRkZyYxKy8pIoSLZZGTLyCwj
M7JK2VT2SITKpq7nj+v33Pdzjt73O+85pzwtOyd1SpZIJJKSJxKZUyYSP6ZK
JJ7mjDye1lTnL7vXSMdKvT9Z+ElP4k95Am1InTqR+NAuH7v0GpyXu3IHq/T8
zpkmP8EAPbP+uVyMw3pWdsgNOSt/wX3O+UIvS1s9jf6RnJ/H5ZXmbvsi8lfy
k0H+Iab9BbMb9ezuNMuY35rPm985XsCcHp9pVjarmd+bzc0P4u81R+gNzOJm
JXON+aJ5xPES5kK9kVnXrGluMe927GfzGc7JpeyXyhPlXPJEuRyv6Gn1QXIB
9ugP6XPlp4J+0Xyd9KzWCzo+Q67CwLhu+ki5BEf1bPwiP8tf8iTacbvzBtsV
ZK9ek7/lN8jAGv1DsrMz/ibOy5N5lVr8Y/cmGVmrf0QOdumNuSBPoT21uYfd
9k24KH9JB+pwLznZ49hz/C1PpSN1+deuO5lYpw+K+4G98fvxjzyNTtTjkt1b
3MV6fXBca/bpL/CvPJ3OpHMthtgVYp9en8vy22Rmg17IOTPlqgzR79ZHySU5
pt/P/rgXuCTPiJ1zJsW9SRf9Dv1j+QHKy6vM/fZF5Xlxv8RvLG+Oe8z+ivkO
9e2yxH1vLo/vH/el4w+Ys+K+MquZ1c2NZov4nPjtzdHxPJuPxLNmrjWbmscd
L2kuit/KrGfWMreauR07EOdxWX7Mfpk8U84tT47vH+8D/U79E/lBDugP6/Pj
vxWfq1813yUrG/VP4p5yzhj9UU7oeTgov8QVeRZdSeKa3XvxDLFJ/5S8/Ko3
46o8m240JF+8W+JZjmcjfre4TjxI4Xg38Fs801yT5/A6z8Szxu9x/bguf8Ub
PMt1ux5k4wd9aPxuHNJbckOey5s04oZdT7KzWR8W14bD+svclOfRncbctOtF
Drbon1GMI3orbsnzeYv0rt+ndoU5qDfhltybe9iqD49n0Xlj9VKc1ItzVG7N
f/KCuPbOmaJXiPtdz6APlYvELt6L5q/xXeQFcu14PvX/zD7cSznHVpjb4jrL
s+N9Y1Y3a5ib4hrF+z3eAeY4Pcl8zKxsrovf3jzl+CPm4nhHmPXj88xtcc3M
Eo4fk9tQV0+Ypc1v4juZX8e9YX6pV6SKvD6eIfuM8jD5oTgmrzZ/i2sS/06u
E+8RPaG/L+dke9wz+pz4OxgR7yl9fHwup+MZ4rjclmQs1N8lk/M+04vyu/4C
yez66vfxoz4y/l5O6K+QnEX6e7xIcuf3s8vFT/ooHuWk3o7bWKz3oCm3Ob+/
3f3s0EdTilP6q6Rgid6Tl+K55rRde1KyVO9FM0rzh10HUrFM701zylCWM/Yd
Sc03eh9akML3GBDvEX7Wx1COP/VOpOHbeFadN1WuRFV5QzzTcf0du8scrj/M
Ib0lKeP/w3oeftHH8jhn9c6kZbnel5cpTwUqUoknqEwVqnLO+V24nRV6P1qR
yucMtMvLTn0cOe0m6GX4I34HfYncIO4deXs8p/Eedux/ADghig==
           "]]}, Annotation[#, "Charting`Private`Tag$396707#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361103972989*^9}, 3.865445422662055*^9, {
   3.865445460925819*^9, 3.8654455200369153`*^9}, {3.865445694161232*^9, 
   3.8654457264389095`*^9}, {3.8654457751293397`*^9, 
   3.8654458752613173`*^9}, {3.865445930590624*^9, 3.8654459730440483`*^9}, {
   3.865446061236844*^9, 3.8654460689573755`*^9}, {3.8654464469315023`*^9, 
   3.865446455577737*^9}, {3.865952161175655*^9, 3.865952182002981*^9}, {
   3.8659522359946814`*^9, 3.8659522660000668`*^9}, {3.8659523006049786`*^9, 
   3.865952342510551*^9}, {3.8659523726628895`*^9, 3.8659523935431986`*^9}, {
   3.8659621960792484`*^9, 3.8659622764384995`*^9}, 3.8659654667182627`*^9, {
   3.86596970915989*^9, 3.8659697322444935`*^9}, 3.8659715219700255`*^9, 
   3.865971717628332*^9, 3.866046869983979*^9},
 CellLabel->
  "Out[3587]=",ExpressionUUID->"d182fe3e-154b-4d59-a260-20cb2efa4151"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxE3Hk4VN//AHDbMKLCjK1UikL7IhXVOaWiVaWULImypISQFpFEWbJm38mW
RNlSHMYuoiiMbSjbJPuW9Xc/z/M99/eXx3Pv3Hvuuee877nv17xnreGd8ze4
ODg4LvJzcPz3d533fFzk6icHh/4tOT3qNY5O5POd6TFBoNhFxVLebwzVLFXi
59GrA99OnvX3ODqKDnsfLUzUaAKOMq4hp38OoxvbZpbuWMoCJn29lTkWg+i0
wo0RMbXf4MSiffKACRu9b3CwrdzbB8786rSmSfcgFZGN73gcB8Ai+x3ns2YW
Mpn1i3h9eRj46dkgr/4f6E5Z7653p0fBE2pmg6ZCMXK/wrt+/tY4kLWq4V/x
JBMYlT803mE6CVyly6X6P9aDIj7Jc+ba0yD7ucQ6XblOsEPYKbDfZgb4B01w
F/X1AYOxA5vP3JoDEhY5nzZXDoGYyFKpKa8FwGbN3duoMwY+vFRu+X6eA5ae
WMpvYjcJbPIOnI04xQmjTt44ulzyH0BVr0df6HDB5mPN9+TTZ4GZ2r58s8vc
8KLv5mOprHkQnrQjy/wmD7x5M9J0jJsD+o7lP7G8R4EW0sfzGv9xwJ4UWztT
a164Tjpk/9pqTlhyzC/Y2ZkPwqGqcUokF+TUYHZ5O1Hhz5+q75dqckOOQ9mc
0ff54QGdtQeXTnPD5+JTp7+7LYEHwzPeGUbyQMsrRoyppwKQv8zbPHorBXY+
UbwOXgnCFr2B75mIAun+IcwXMUshvMtF26fKCxOENt4vD1sGl94slL2ayQuL
rNcclXuzHI5WheYhWT4YKR0tdeCCELzNv3R501M+mP9ohsO0TgiGmMh0RDTy
wbUn+eZkLgnDMe66ahs5KsysVfBobhCGARwe8WxjKvQsW9gurScCn819zk2L
pEL/u/03DVpFYEFB7P5TpVT4SHT18nXaNJjt3K8l3EaFyQqUKhsWDXrS3xTN
/qZC3nFOySJ9OrRgv9l7hUWFidszHkf20uHbnG3VYx1UqGCYcmb+tiiMbjS/
++gXFbYc//j+4h9RuHDg7Y7t/VT4Pe7BFnBXDAY5fg8WHaHC6Q/n9q8bFYMj
S+4N3f5HhYu51lmuFuJwotKnSISLH57cfuzoowlxOKoq9TFYgB+W620zM78r
Ad+YtYXo0vlhWrrl1OKiBMxI3zRSuYofVvm2WPWZvAPL3YStE8TGkfR8Tvi8
UgWIK9aTix4bRTe9gosXXgnDXa8aOX3VqVD6JL19TkIEWmpTqn1dqFBo1fjp
wnARWLS/RyzzAxU+L+E+ULSCBntHasP46qnQL8r31pdwGizP/mj7hLi+ppdP
R0LX0OEjSyR7pYsKtfyav2yLo0NX4GjiRfSHaeXbnpqNojDbz/LzuU4q5PqZ
4ZScKgo/o6YtK3qIcTQpaXlimxj0sNpwaHKACpX5zqZnfZSArXbKu9dJ8sNK
5acfB0yiQPhc6eExzXHU9bftmv1EMdgc1+XXcGQMHRuoveprJwznr1wO1N5L
hTeXRin+mRSGR7ZG5W62o8KvVvfB8CMRqHZqjXR4MhUuC5+s95kVgd0Xc2LD
q6nQjdmYP/mABl1OPnDrIu4n1C1p4+Ogw311hv/aievbWnzbetqJDoV/RE9V
EtdDdXi3U4lfFG7vsYpzJfYXk0oz0fQShc/g5uI8YnxcjjYTPrtUDPp9PODB
+4cKnd4jT59ACVib61/NEOOHP5+/cFumIgIrRoJN6H5UeL7CQtfnswg8YFHW
PPyZ6J+/Qgkj+2gwYGbqpGsTFUZeP7kyuoDo/94xsV/E8e8UHaZsBXQIJ/nW
byf68/G1o+tNSulwOPm6VwTRvgrR1NAbp0ShTsCXbg3ifozrsOqZrRLQR3JU
+sFKfljh+V19wsQbpAQ0hupajaMjPZYlWQ1F4DFKeThjPoYyw/68ZRoLw5Wi
NW/mtlGht8Xvq13dwvCUg/dsggUVbpHav5d6WwQe+hmMQDwV1vFZRk3/EYE+
UvXpQpVE+6cfGAvepMHnEbvd1hDtGWf81jw4TIPNkgm7/In2h7bklLbeocNS
P55NfET/NWmlX745TYfIMqBlN/G/NNisk+QgCks9RVXFif1X2Ap3nZ8ThdBQ
hUOCTYWyz6dm5l0kIG9eh6OPKD+c7f/6nrJRBG6cbiq640GFGdY7LialikCL
5/kHLHKpsPSyu5X2RhoMD7kx9PsHFUo4DxZnvSXu96MlsVeI48vKGz28vo0O
ry/7szeP6E/2fW/7k5l0Yny8Pe1JtD94KLUwREUUDt3lLKgitgftkDis/kUC
XliSKKux4r/56UBVEKDBjqn7+4ZqqVAwX1G004MGWxIPT10m+t9zIs7k23I6
PPmAp0SIGE+MFJk1dD86rO1xToshjr83Lk2Qa4UoXPuw4GE3cf3gSRDzxXEa
fPvsBGIzifapJVm719Jg8MVEDcluKsy7ss576gwdHvmjTf9E7C9yfPab8086
TP00d76QON4516QbtwclYO9rPbE4KX5Ytt3KhNfUEZgdPtdf5DiObAzzbC+U
FIJaRZb1dscxdPPuvwuL+sLwmtl7esEmKly3xm1Cr00Y6jfYhNTepEJdqwhF
+g0RuEd1e5lDDBW+z9/8bPNvEXixNez+7nIqRK7VykHXaDBESQ6tbafCM5Pj
L7X7aFC94y2zjujful7doTMmdHjlzKXeLUR7C4vTzXmG6bDN8PyoCPF//Nk/
Dd9tRaG7r1BBBdE/D67eONEwJgodeperxBHxctKa9l7xkQQsunGnYJKIdy9D
rdSfrBWBd+++7+Z7ToWscr9zmfEiMEpRablENhUmLFO75LWOBh/FmmY5NFDh
DyEYDF/ToNtORcFp4viPde5mO8rRof0MMOYj7o+0q2Js/hs65Ajb6OxO9J+T
7tv6XbtE4f20W+88ifttKqX47zFDAu4WlmTnEvFoc8++QV1uGmx0F5Y7/ZUK
q0669ps/pcFozYcmicT+PfKZsQN8dLh71bM2G+J809kV6q4v6NCHX+roB+L4
0kLv1oQLi0LXniWXM/8b73suFOYfosGrdsM7CpupsPPHv2Oi5TSocOSSP5W4
3/SXO6tE1OjwWpce/xixv/rF6NnxGjoUl3lXnUocb51ViVR8twTkSkdty4j7
fcRMwe+JNQ0ubL3ydAmxf6h3g4TMNA3eOyUZe5i4H9drRcJv2tNhUSq9u5v4
/HD/u6N1HKIw7+24tS6xv85Y+NDGbBoMM5MUSCb2rxo/D4/vocN/+feeWBPX
l3mbfab5Mx0qGvi98yM+r7H1F9QKoMG8pKwlU/+N98jHEzGhdGirKS3xithu
nKsVudhIg0F/nFeIEtdjICdyoVWLDinXHDc/J87Xul8rSaiDDseOMilN//V/
mGea0pQENFW5UKFEPM+K7NPi5U3vgEc6llks13HkKX31q8z+QqC8JHZ75nMi
/l91ShLWEYbaLivKQhWo0Pze5cKVzcKwfHZ1XbspEX9Wft254poIpNzMYIlH
U2GshID9MRYRr1arhh4uo8LVZybidfVokB1v2RpGPO/nljtsNvlNg31bXOP6
iOv/c3sbD9WIDo3M7XRUifYqzmy3/faHDrOWenVzEf8bN1cJ91mJwnf5Xmdj
ifudcsF7IWBIFJ7+vOKxGTF+9U1jltbdk4B9Dpdyk4nx2zh6mAZWiUCYujHq
jCsV2lsXa+RFi0DubQ1VvZlEfDFbfyJxNQ3uS8l3LiGet4pNply8MUR76o4f
RMTxN9nOanrJ0KF89mvh7UR/qwjy5dgl0qFWuoiex3/x1m9LG8c2URjXoPLN
grhf34QZF1YUSMCdutWRt4nxu+qQRKfdoghUpllm2NVQoTztneYORxoU1y3U
VyP29z+8H85w06GnmKZCMnE+2oEwPfCMDotjOqfzieMHHNumYLZUFIZweCyL
IK5f2G/nh8YDxPxfLSO/nhi/MGJdBpNBg5++rbo5TfQfIzHPRFqVWA/A/GEh
4vhGLdZCaZV0GLjDOTaeOJ6H8Xl70CkB23RzvEuI51Pc9vNzxyyI+1Hlei2I
2K6WrJu9fZwG7Zc1nbhNHM/xYne6jA0dZpisb5kgtl+X3q4RMUeH/q1179WJ
9uTllWoPZ9AgV/6Qvgux/71lLW1au+jQeINC+ivi/LVjn438culwTdeDvy+J
z6dNCLxZ6UPEW131uylEfybKnluiE0jMX6nRklBie6mjI7W0ngY7fxv//C/+
Lj0UOtJ/ng7Xp2lzxBDnm2LI51cyiefXaqekL8T+fT4rlnwfJdZjly9y/CXm
Y0zrrZGTAzSoM/L9WibRnqxr7sxX5nRonWzfJEl83u64+NaHyTSY5TbRvInY
TuEw9OJJp8Nnevb1/8Ujcxc9xwQ3GtzRLhfORbSvbfvkrhovOjx8cW1TMrHd
edm3Vo0vNKjh4+VJI9q3pbamR+U7Hdq0hlOzie1/bU89FJ2jwYFXFEUacfzj
x6FbxiM6jHdcd7SR2D63yebZjTwa9N09EFVBbA/pFVeWLiKub+trn//630oi
ldUXScQvdkG8z3/rn5EtisqtNLhE/L2oAHE+8YSF82GzElBYS8DCiZivOVSF
NbdNr4Kknr2y5u7jaMei4YTYMALjQ1uhpdcYUvyh+n2FtjBcYpi1+rk8FfrI
FL2e+SkMF01sN3SbEOPHqmfHqqsi8IFYW6ZRFPH8P/bASrNdBHpqCbSUE+vz
mgz+K0CHBicLi7dcIubrd6lDs7e7aDBDOrR8lGj/dHrwy98GdLiEIyP8DNG/
FqIj/3L6iftvoKY8+9/6KEI5ffSOKBRf06DhTYzvwxrxl23/ikLO9I+Vp4j5
KmJk+inCVgI6XJTe/JSYr3ORb6ZXrRSB6daLCZbPqLCkvOVMfqQIlK2K1j9D
zFehoADVTCkaPOoT/MyYmK+/VBxy+iJpMPnownQ0cXwuZ7QuYC0dBjhQBo8Q
909dw/KQ5ms69Hsss/+/9cXWtL/XejeLQvXHjlsMiPHpKviCq++TBBSRLv+r
RszXQAs35tN5Eeh8gmPVEmK+NtkVU+kONJj+JNBTlNj/pgbHck4uOkwuD2IV
E+eTduLpW/mUDpVq4r4WE8f/em3orYaAKPQK4sv3JfrDHcWk/lahwe3JUoo/
ifXlEMce4/xCGqwtvHFjkOi/4MzHSnKH6HBFrdA1aeL4lqtbQ93L6dAkUGoi
mjgevCa5YWmHBPxsZqIbRczX8wHGGQq3aFAmV1RAl9i+Olv62Z5RGjy+re+n
E3E8z+AzKhzWxPtRXNSlBWJ7pMpw/dMZOgzO+aMAiPaYrWYuq39HvF+pq6yz
JPY/szIqVW8HHVa9F67873naqrRh0CKbDhPGRO//9z6hpy1tsOBFg6uvOJ1z
Jvoz0yQvYE8AHW7I+SscSWy3+eWfn/iNBmX/TSqvIMbn79P6hcNn6fDnl3Vd
b4nz8fD6qSU00SGz52VrKbF/uEdnTtQwsT5P9l9eQcxX+/7thefZNMhKf6VY
/F/8ih+7bm1Gh04nHT7IEJ/f8HbTL71EGvyzy9pfhNguovpFvPMt0T9vHJ/9
N19X9FkpvnhGvB+FvQn/8d968u7VgmQPOny5f+FGGrF9p3W3785KGhz/p5m9
jGifssgeK4k6OmTXxapnENtLnIVOSM3Q4PwTYZf/4oGWZ7Lwywd0uOW13812
Ynuq93Nl9VwabOVrsf9IbE/Y+KRkroAOz6lZzQV0/Le+ETUvDSeeDw52Of89
n3MuHO6XYtLg74zwIiHifNXRpRxm/yTgwQyHKB1ivq7n/qhn0EODbTdKL7QR
x9taGbE5NJkOvTl+Vf53PbwzO+oN3ejwrO9v21zif599y+amSmiwpkRblpM4
nlYwv+u3L3SokrjpVRKxfcmljPilmTRodufepaD/+i9dszkrjw6XnbZO+S9+
hHb2Oj4OpsO8QxvK/4svYlLmml0/aPDB4Ja1EsTxpj9Pc8m/p0PJthTz/55n
9Smf5W7X0KCf7CFRcWL76Yqrdc6fabA93N3x53/jKz7tnWoxHd6BJeb/xevr
Pw5rCcbQoWW5d8d/8f2yl6TjpXYazBz+J8pDfN7wzZ7XNfMSsPPE2K7XxPXj
fJKOZ/qSgm2tAOeTDuistey52ghwPol5YnH5z7A6gPNJx8oiV8+dYgCcT3L7
w3u+bLMrwPmknX6huz+8LSbzSVxvjXOff2wg80lLd8vMTj/8/3xSaE7X/K6f
3WQ+Sfhm5PScbT+ZT3oRf/2Tky0b4XzSKlqbyAH/PoTzSc+nXi4kq3cjnE9y
uRJrdlWShXA+CQgf4RZ//APhfNIFV+5/J+8yEM4nXTlfZHSpIoHMJ+mr7aJ/
yion80lX50XfRZypJ/NJK9fKHH7zvZHMJylSiqM3ajEBzif9MTGPSPvNBDif
dHbN2BWTVUyA80nVz42XbDzaBHA+yYTvoBBP3w+A80kmG2V453bVAzKftLPW
spWrDuB8kgCYG1vytRLgfBLlWkfBq1EGwPmktNySqXVGuQDnk85ujNQ2SU4E
OJ+054myYYzXQ4TzSQ0mR1OVMlMRzicFq+6GchV5COeTolUHL63fW4JwPklo
xYyU8ecqhPNJ1zLrLS7zfkM4n5SeLVW1NKwB4XxSG/elESnNJoTzSeMFqXxP
k1oRziddXb8hK55WAnA+adfdx1Kd0QUA55PszUNs2wRyAM4nlYVNuJgezAA4
nzSpbnbmmWwSwPmk8VPPpO13RgOcT6qLOFcgZeUPcD6pcM0vYK7iCHA+ycnj
5Mpv+ecRzifJqz2v7G11RjifZLnO77HHYjPA+aToo3q/SuQagAuP/IRc8CCo
SZPYe1P9F/pjkG+6UXMEwC0hWhJ/etEjoXubtfTGwBRHcNGQCRtNChUdDbo5
AeSH37W9KOhHfiZVOl8NpoCvTFpA5epedN+z+u5Gk3/g88I2JYmqLsSjH2H2
NWQRjB5sZmZ9SUABsp9Fc2s5YFz1xYILagUglGEVQ2vghMpP5rrHamsB/cVQ
479mLsjOvWrQ1vIDcNnv/nizkxvq/to6Onm5GYh9vbdycJgH9vutypSrZ4L9
tZKPBsYpsCq7nn4zlgl+TD91s53hhVKWB126TzWDrhPZB15wEs91071Lbm5o
BDj/ledQPffamolw/std/dDL6PgygPNf1QsXdHx8iwDOf50a37d4Oz4P4PzX
+LEsi1nOTIDzX+/LNoiHLX0Lujf1ZKa/F4OG9VvuDc7GgUdKXfYXtotDU53P
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
M9XitGHguVqoVZ5Yrzwu1X6eFMwDh43yHXuI9iwrWkiibB4B34YSjkoSx9/f
9OhTfwsP9MuZjnYhtocf4kmx9h4GtlS/QUddBvrK4avS5MYDLwzJ3D5ObNe3
CVmeJTgCdkqDCz06DORJy7SQ/MIDX93ScOAnzj/H/NpK+zoMzs3ssRu+xEBb
3df9sE/mgdNe+hnKxHbsx9223bXmGkUA+/Em3roFhcz/r6cdCJM72JTdSdbT
Pn57dfC+fjdZTxtKO1a8r6WPrKetFz3Yp2UxQNbTLt7adUDuzDDAfrx6X92J
VLtRgP14av31LjZ9AmA/Fq4UuXm7awpgP/abTuS45zADsB9rnIrZePPrHPn7
bC+Nk2+Zj82Tv8+WKneSL2lgnvx9NvENgdo7q+fI32fTzc0p9KLPkr/PtiNA
s2aMNU3+PtuFXcnH2dH///tsvE8s/qqGjZP1tK0ch1d1B46S9bQ8g2n3O/qG
yXpaqYq57zyxg2Q97YYwKT/rwT9kPe2dU9kc6gX9ZD3todl01/k3vWQ9bejE
3nd8U91kPa3Zr/Y7Yra/yXraOHBN7thkF1lP6yD8ftw5uZOsp72ddjP233kW
WU+rZdZ41GVlO1lP2yHW53q1tIWspy12jhnOVW4G2I+dd6Ab22t/AuzHj0b9
Ug5eaQDYjx8O5Ah+d/8GsB9zXbK5IGlXA7Afz7KnfT5+LQPYjyPyctiT3xDp
x5xBqj3MhHTSjyUn1vy15XlC1tNaHnswKi3oirAfnzGbttna9pD0Y9ET3gWh
2/xJP34rLbKylxVK+vFliWjFG7Ro0o9/F20K228dQ/pxXgt/RzsllvRjVfuY
jxzcsaQff0xePpPtE0P6sTfzhXF1TjTpx797Tr7m4WcB7MECTV6WXbv/AezB
/jIGOwWLZgH24JDW2wIvXOcB9mCh/PufZGkLANfL+g8nDYo+nAfqXFc7wyxn
QYHSh/PDC7Okr6aJqaUcNI4kffVJ21z7z7evEPbV/YXsyHfpmgj76raVD1+M
nPMgfbVgy0B9pnkQWa+a49d36nFrBFmvql6nYl7dEU3Wq2pJCP6eqYsh61Xz
NWfuu4jFkvWqEkLyGht+xJBe+zJNXvXflhjSa20P8Pl6GbUD7K+HFLm3lHtO
A+yvna8KFxNlZwH2V5fi479tds0D7K/xLjot5oILANejfqm7PvHw8zz4/GLo
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{343, 2389, 2387, 342, 674, 580, 504, 443, 399, 371, 
            690, 596, 520, 459, 415, 707, 613, 537, 476, 722, 628, 552, 740, 
            646, 758}}], 
           
           PolygonBox[{{2386, 2385, 325, 326, 327, 328, 329, 330, 331, 332, 
            664, 570, 494, 433, 389, 361, 688, 594, 518, 457, 413, 706, 612, 
            536, 475, 333, 665, 571, 495, 725, 631, 434, 712, 618, 747, 542, 
            733, 639, 754}}], 
           PolygonBox[CompressedData["
1:eJwV0EtLlGEYBuAvd5OuylUuLIQ2c2qs/oKVmyLogNrM4CIXigOBppNCRBst
jQ7zB7TR9mmrjqALw7FAnMQgLU0KQoR2ZdL1Li7u+3ne4fu+d451Fi721kRR
dIASF2JRdJ64RYIkI34QZ12foJ82ntq18Ed/xUNSjNol2NAnuclz8yViLJrb
Ketn+Ku/5hEvzVkOsWJOc09P8jW8kzn9OkcYMM/IyxxklSIV+4os0BS+hTt0
2E/Js2yzZ66G5/BGX5Dd/KKRL9zmN4/DPWWOHxxmjSF2qTr/KG+ww3G+cZcT
zu7LVNjpy7KPsj4vu2hg0Dwrr1DLkvka0/o5/ulveUKGMbs0m+FeFHlhvkod
H8xZnumt7OvveK/3cJRS+P9lnp/U85lhPjlrZjzcga3wLdwix0lOcZoHzjN8
D+9jiDz/AcDoUog=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{294, 2388, 2383, 298, 297, 296, 345, 373, 417, 478, 
            554, 648, 295, 400, 444, 505, 581, 675, 344, 372, 416, 477, 553, 
            647}}], 
           
           PolygonBox[{{2386, 2387, 370, 398, 442, 503, 579, 673, 341, 369, 
            397, 441, 502, 578, 672, 340, 368, 396, 440, 501, 577, 671, 339, 
            367, 395, 439, 500, 576, 670, 338, 366, 394, 438, 499, 575, 669, 
            337, 365, 393, 437, 498, 574, 668, 336, 364, 392, 436, 497, 573, 
            667, 335, 363, 391, 435, 496, 572, 666, 334, 414, 458, 519, 595, 
            689, 362, 468, 529, 605, 699, 390}}], 
           PolygonBox[CompressedData["
1:eJwV0slLVWEYB+Dj0KJF2Sbd1EJJ3Dc4NJnDznJol7lJTW3RRBCEaFq6dyhv
af+AXk13Wpus1BsYqRVkIoRImhMR6Dqfb/Hw/n7v4X6Hc87NrL179U5yFEVJ
xKk8GEVVlFqUUEwRlyjkIk10MMYOBQ6IcUF+xScO6FWM0qg/ZZRt8u36OC8v
kSHX8Z4BPUGqXMlrGvRs8z5zfNOPmDW85Yl+3LxFIvxGf2h+Z0v+bebxnHP6
ntnJKjn85QEL/HT9n9nKMulsUssk/a7vmu38Iosdwkv8zIzrj8wfpLBOBSPc
DO/BXOEE9/jCV/vmcG/SuM6bcA/7Y2ZTODecoW+SKz/jrLzIUfkG73ipZ5q3
mWVaTzbLGaZeX+CwXM0EbfowG5zReymQXzBFkn6FePhO+jyH5GuM81iP84fT
eg/5coyP4Y+lX2YovEe9lSHWOWXXHb6P3McH/lNmNxieS25hkDVO2nWRK+8D
EkVbpw==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1He8zWUcwPHj4rpmutfl2nEzsrJnSFIpkausjFx7ZGSvSiWERBpGRpSZ
VYiilKLsPUMhe48U4v3wx/t8nuc5r9d5vc7z/Z2TL7lbUtcUkUikgJfQA0yj
Fy/xOGWI4iDT6U1DalCWlKQiNdGkIYa0pCM9GchIJh4gMw8SSxxZiCcr2Ugg
OznISS5yk4e8PEQ+8pPIH3xOHxrxBOV4mEPMoC+NqUl5TvIVQ0jm+XAPHGYm
/WjCk1TgFAt4i9bUpSBH+IL+NKUWF1nKCDpRkdMs5G3aUI9rrOR9ulGIP/mS
AbzMf/zAhzzFJZbxXrhbQ9uqnUlh/atOpBJnWMQ7YRbe26xt+Z+fw706+yTM
QXeH+9QX9Drfhfu3HxPmptvDnWv3MG9dH2ahk8PsdF+4ay2sfzErzNJ+YHge
dKM24yY/Mj48B8536tNcZjkj6UJlzrKYobTjDmv5lPr8w/d8QA9S+bzf9DMe
4SizGUSM9zZpc26xho/I7HyXPsMVviXB2SjNoNv0VaKs12lunaRxulcTtYqe
YwnZ7N/VdLpF82r7SOTej+sXyaUTNFb3aH5N0husIof9WM2kO/Q1Ulv/rlMo
wjHmMJgW3OYnPqY2V1nBaLryGOf5mmF0oAFFOc5cXqclz1KVYvzNPN7gFZ6j
GsUpwaOUpBQnmM+btKIO1bnANwynIy/yL6sZR0+ifb8NOpV46/2R+/9HpfUu
2VyEPw==
           "]]}, Annotation[#, "Charting`Private`Tag$396819#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Xe8jmUYB/DXqURDoq0Uyh7ZI3vvw7E3h2yOLVv2VqEyKhRtZLQL2Xur
jDSUhmS1i77Xpz++5/pd130+7/O893M/5+RITUvpmy6RSBz1IzeTkxKJfJyU
FzOIlrxoVoM/5Q95gjxMMcvPF/ISBtOKvOQjP8kZE4kCakEKMdXvF+CUvJQh
tOYls5r8JX/EkxRmmllBvoz7YChr9M3IyG59G5bJtfhb/pin4l717cnCEX0R
psuF+CquyWa5K/fwmH6t2pwb+Izh7DHfo6aRK+6FcbQ1X67W5jv+0R+Nz2G9
vEPtxVnuj31iLJeYE99T7cD3ZOUYIzmf9P8z2a8O4By5+ZoJPGxthlo4ZvIh
dTDL5C1qN7IxTL9ObcGN7NW342W5Dv/KG5hLUWaaFeGb+F4M5219S25in749
r8h1uSJvZKfcmweYF/uvduQHbuM4o/jUWjFmxXfgdNwLI+hAcUpQktnWi/Jt
XI+RdKSR81QqzqC1YrHv8quMolNks3pclT/haUrHeTIrzhn5NUaTGtmsPgk2
6Z+hTJwffYl4NvLrjOEdfStuZr++c6zJDUjHZv2zlGWOvmTsgfwGY3lX35pM
HNB3iTW5IUls0e9S+5CD+fr1aiduj/OoLxfPSy7Fj/KbbJW7cy+P699T23AL
nzOCg+Z71X48GOef8Twan6Emx95wTTynODtstbZb7cvP5ORUXIPLLIjzo6bG
vXAHJxjNhbi29QPqQH4hT5wtJvIrj1ifp5aO58xP+sPqEFbI29Qe3Mc4/ftq
WzJzSL9P7c9DdNWvUBtxLdv0C+N8yp25k2P68nEm5DKclVcynm6RzRpzHdv1
i6gQZ0JfNvZAXsUEulORSlSmClWpRnUaO6c11JrUojZ1qEs96sdZ8ZnlOCe/
xUR6xDXMUkjPDv1zcZblLtwV75O+AfNjD2Nv5SPqUFbL29WesZ9k5yRjuBif
674m+Z0P5HbcymF9z7gHuQnXs1P/PA1ZoC/PeXkNk+lFcuyxeYV43vJaptA7
3tPYP/OKcV15HVPpE3sT38m8EpfibwzTiH9GKXFd88pxxuKdYzppNOEF8ypx
fuJ9Ygb9aMpi86r8Fu8AM+lPM5aYV+P3OEfMYkB8pv1ori61Vp0/Ym+YzUBW
mzUlA7vi+myK94a747zrD6qDyMtpJsU90MLaf365+oM=
           "]]}, Annotation[#, "Charting`Private`Tag$396819#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GWAVGUUBuC77JJKdwlLSkgj3SWNS3c37GJgi0GDCiooFqJioEh3d9jd
LXYnjT7nx8N5z5k7y9w755v0UVkZmSlJkpzwz8lsSTIhLUnSWJ+aJFfRnmqc
8tppznCWc0x0XXY2eP1qOlCdmWbleEW+i+Gcd/0ksxxs1F9DR5bq6/KZvJwa
zNKX51X5bkbwuL4Z38vPccHfm6zPySb9tTGX2/OH3IkH5Hp8Hu+nJrP16bwm
38MauQsn5ZGskJvzg3xAHcYqebN6JRfk4+pY/vMZpqi54l7Z7LWdan/eYbp+
ldqBN/hTf0gdwQdcoX9QrR+fhy/0+9QhvMcK/Ua1J29xTn9UHc1l8hy1Aq/L
e9RBLJLXql05JY/iCbkFP8rPs0XOiM8vJ0yVc7NFvi6ukTvyl9yZZXIDvoy/
RS3m6ivGfcmLGU0KmWZ52CpfTxdqk40s84vYJt9AV+qQShrZycE011zMdvlG
ulGXnLGT5nnZId9Ed+oxz6wSb8r3MoZcsZdm+dgp30wP6jPfrHI8V/k+xpI7
9tIsP7vkW+jJQ/qGfCU/SQMW6Kvwtnw/4+I1fUt+kl8gT+ylvgC75VtjLnfi
b7kXD8uX87X8FA1ZqK8aOyQvYZ3cjdPy+LhObsXP8kF1OKvlrWpvEl5iXDxv
8+lqwThP7NHvUgfwLjP0q2MX49nxj/6wOpIPY+f1j6iNYs84od+vDuV9Vuo3
qb3iWXBef0wdE/cV51+9NP4vea86mKXyerU7Z+QJrJRb84v8ItvkPqTELsRe
qoXYK99GBo/qG/ON/DSN4vdCXy3OT5x/JpI3dtGsMPvk2+lN4/gNMKse9xJn
kUnki/00K8J++Q760IT8sZPmRTkg30lfmlKAghSiMEUoSjGKU4KSlIrd9f5i
HJRn0o9mlI49NS/OIXkW/WnOIrMa8dshL2MyZWJPzUpwWJ7NAFqw2KxmfI+x
w0yhbOyhWUmOyHMYyGP6JnwrP0PLOEfxO8NHsadskHtwVp4az1xuw6/yGrbL
fcnGJfoZaimOyrvVgcyN71ftzL/yEXUUg+TlalO+k5+lVZxNfS0+jj0kMz6f
vi2/yWspFzuhL80xeR6DaR1n06w2n8S+kEX52AGzMhyX5zOENqTH921eNs6Q
vIChtKUCFalEZapQNXYg7peX5YUMox1LzOrwaTxfpsV96dvxu7yOHXI/UuP9
jI/nHWfGa/8DlxjuqQ==
           "]]}, Annotation[#, "Charting`Private`Tag$396819#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03egjmUYwOH3cM6xy8wIRWYKZQtFRlkJ0ZKRkOwUGYnSUrTL1o6GSmgp
m6KMSmXvvffmuv+4/J7nds75vu95n69Yp94te6UkSTLaP+tSkyQ9PUm+S0uS
ftTlGnKw3v9tYCOb2MwWtrKNTH5vpp97nHpcyxUUMF+sz9GKm9ju5zObz7Lu
z+0U40oKmi/RkbTmZnb4+Szms62foD7FKWO2Rt/iYXJSyGypPs891Lbfp1Op
FK9vv0kn0iNe2/6ITmen18lq/731k9xhfVIbUM16h35IC+uLeh1lrf/V+/Vt
bapn4/1o5zhDPaTt9ct4T5qRLuSyv1p/03v1BW2sp7WjttE6ul/b6bQ4Q02h
cpyNbtZJNLc+rz3jfKyP6tfs8pmy2f9gPYCGVLffqR9Rguvt/9N3eITcFDb7
XV+kLVXY7W9lN//ReiCNKEke9vi/vexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc
4zwXuMglEn8/Je6h1/5Jn4pnQynyUsR8mb4U50hVMsT9M/9ZB3EnNex36cfc
bX0pPq+W1nL6v75LF/JR1Gy5vsx9cQfIGPfUfI4OjucV95Cr4rti/oeOivsQ
50xq3EvzX3QITeLOkD++I+Z/6is8EO+PNHKZ/6pD4z7F86FAfEfMV+irPEhN
0uN5mc/Vp2kWn4UbzNbqe3SlIMXNVurouE/cQqZ4fubzdFjco/hdbjRbp2Pp
RqG472ardAwPUYtKZlt0Mr3IHM/EbL4+w13xPu136yfxdylvv17H8Wh8B+Ie
mq3W12jPrfYH9HNqU9l+q06hNw3sj+k3ZInnZb9Ah8eztj6lLeIzWu+J89JP
taUmlLeuoBvi7HV8nJ2e087aXevpYe2gX2kbTaUrhePu619xN/T1eLZ6Rjtp
B71ND8ZZ6RfaWjNQx7qKbtP344ysL2gfGlof12/JGvfKfqGOiDsbZ26/Vz+L
909F+406gccoQimzv/UNOsZZki3unPkifTbOIX6XopQ2/0ffjPce75uqZtv1
A/rSyP6EzqCtdRrdyG5/GfHNwWI=
           "]]}, Annotation[#, "Charting`Private`Tag$396819#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nf8jWUcxvFjj6xKy4ooIoqUWQoNIUWhkkrTyN57byqbjCRJ2RpW9t47
e+89igrp/f3j8/pe1+d+zs/xnOe+z8lVp1HVhkkSicSJpIlE3ZSJxBepE4kL
qRKJBkiDpdzX+JW/B4O5J3Caq4cvuYv650iLZdxO7inM1l/DaO43/V4M0Qvj
hvw2dslnrJ+QX8Ay/X3U577SL8kNcQeu6K9jk7zc+h/y0/hZz5ImkWgT63Jy
+UO5tHlYz2f20sd4zRzzPhTmhlq712yhlzWL6Dfld1BC363nMbvpFcyzXn9S
fhFF9eXWc5gd4r2bH8T7NOvpz5qn9AJmX72B1w4yL3ONcCffWE8nXzWrYrO8
wnW75GL4Ra+KFK79SD8ij7U+V74fw/QncUuuhT3yOeun5JewQq8Tnw03WL8i
N0Z6rOR2c8Xxq14N47h5+gMYrhfFea4hhnBX9SbIgFXcN5jPZ8EI7ilc4Bph
KPen3hQZsZobj8YYZu0vrhkyYQ33LZqgKYZbv8Y3j/uEtdwELOCzYiT3NC5y
zTCCu663wF1Yx32H3/lsGMUVwyWuOUZyf+stcTfWc3viM8dv+huYyC3Us+Nr
vTj+k9/FXvmy9dPyy1ipfxj/PjdK/0duhcz4U6+GLfIG63vlkpijZ/W5tpXf
lFPKH8tH5Ufl3vL3rl9k5kARbrS1+8yWejmzhH5brh1/U9+nP2x2118xr3j9
mXh2Yz/qq6w/aHaMZzieKT2dWV8vY57WHzP76S1j35v/cq3jvvJN4gyQ/zLf
wFZ5o+v2yaUwV6+OVK79RD8mT7K+WH4w9p9eMp537my8R6zWP477xY3Wb8ht
Yl9iE/cDlvA5MZYrFfeUa40x3E29bdwXbOYmow3aoh3aowM6ohM6owvGeu0t
r2mH+7GF+xFdMc7af1x7PICt3E9YyufCOK503AeuW+wD7rbeIc4hbOOmYBn/
EL7hnsE1rnvsAy6BjvEMYDs3Fcu53BjPPYvrXI/YG1wSdOKyYQe3P843zNNr
YBq3Qs+Db/Uy+Js7p1fEGv0T9Iy9pCdFZz17vK94BrFN3mn9gPwM5us1kdrn
+al+XJ5ufaX8MCbEvbPWSn5OTsjvyfvlR+QesRdcf96sFGc1t9ZaTrNTnFHx
d+M8MhvE3zDP6AXN/nrlOLdjL8vJ8ITeJfas2VR/3swR90muHmeZvl1/KK7T
//Dag3EWY0HcO76d/JacRv5MPiHPcN0q+RF8pz+PJNbf1w/I/1q/EO8H6/TP
0JubqCdH19hX2MUdir2E3/W3MZNbrefFRL0sbnB98D2XAt3inmA3NwtruHyx
/7lyuMn1xSQuJbpzubCHm4213KOYxJXHLa5f7B0uFXrEPcFe7mf0j33Cp0ZP
Pjf2cb9gQOwDPg168XmwP77/MTB+H8ResJYWveO8wYH4fsc6Lj9+4F6I8zJ+
H8Re4O5An3gu4rmUa2BH/Nvuc9c4R82Drj0czwEWWnsHc7j1egFM1l+MMy9+
G8Se4dKhL5cXh+K7ERu4x/Aj91I8lxjET+PSo5+eD4fj+w4buYL4iXs5PnsM
5qdzGdA/zmQcie87bOIKYQpXAUkxhJ/BZcQAPT+OxncWNnOPYyr3CpJhKD+T
y4SBegEci+8sbIlnHdO4ikiOYfFscHfiizincZw7EvsAi/RaWMht1Qtjul4J
KTA8nhXuLnwZewwnuKN6WSzW38UibpteBDP0yvH/i982+kE5JS7Kr2K9XBcZ
rH+un5VHxDMm342v9MzWmsX9kv8xa2KnfNJ1x+RyWBLnkOvay7XltHLdOIPM
k3EvzT5xhpiLvW67/GSgz4wz2mytlzdfjftr1tFLmYfi2TB7xjloptIvyVVQ
TN8Qe8nsrNeTM8oN5XNyIXmAPDL2hpkZg/h7+ObxmcbZEOdJnDXyKdcdj/eB
pfp7WMLt0Itill4lzlNc1l/DRrk+MvmbjfTz8uPywLjH5iiv/x/oJ40x
           "]]}, Annotation[#, "Charting`Private`Tag$396819#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361103972989*^9}, 3.865445422662055*^9, {
   3.865445460925819*^9, 3.8654455200369153`*^9}, {3.865445694161232*^9, 
   3.8654457264389095`*^9}, {3.8654457751293397`*^9, 
   3.8654458752613173`*^9}, {3.865445930590624*^9, 3.8654459730440483`*^9}, {
   3.865446061236844*^9, 3.8654460689573755`*^9}, {3.8654464469315023`*^9, 
   3.865446455577737*^9}, {3.865952161175655*^9, 3.865952182002981*^9}, {
   3.8659522359946814`*^9, 3.8659522660000668`*^9}, {3.8659523006049786`*^9, 
   3.865952342510551*^9}, {3.8659523726628895`*^9, 3.8659523935431986`*^9}, {
   3.8659621960792484`*^9, 3.8659622764384995`*^9}, 3.8659654667182627`*^9, {
   3.86596970915989*^9, 3.8659697322444935`*^9}, 3.8659715219700255`*^9, 
   3.865971717628332*^9, 3.8660468702209024`*^9},
 CellLabel->
  "Out[3588]=",ExpressionUUID->"f7220baf-bd54-452e-8340-8337eea48291"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.31233546111096516`"}], ",", 
   RowBox[{"-", "0.4059505223037012`"}], ",", "0.8019679138378725`", ",", 
   "1.7898798985672653`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8641527274099646`*^9, 3.864152790583519*^9, {3.8641531907050266`*^9, 
   3.864153225203862*^9}, 3.8641533380913277`*^9, 3.8653434199062104`*^9, {
   3.8653435129044805`*^9, 3.865343528540482*^9}, 3.865343564930849*^9, {
   3.8653439941086493`*^9, 3.865344030651967*^9}, {3.8653443414346166`*^9, 
   3.8653444868461323`*^9}, {3.8653457746684422`*^9, 
   3.8653458486737843`*^9}, {3.8653460147187033`*^9, 
   3.8653460617986526`*^9}, {3.8653461574600716`*^9, 3.865346208926619*^9}, {
   3.865346738108451*^9, 3.865346752277921*^9}, {3.8653468255395007`*^9, 
   3.8653469409476075`*^9}, 3.865352988337385*^9, 3.8653530574242997`*^9, {
   3.8653586509841576`*^9, 3.865358704108175*^9}, {3.8653587436915207`*^9, 
   3.8653587641389847`*^9}, {3.8653588051358786`*^9, 3.865358896959524*^9}, {
   3.865359435339416*^9, 3.8653594429279895`*^9}, {3.865359488344471*^9, 
   3.8653594972826138`*^9}, {3.8653595333840733`*^9, 
   3.8653595572554417`*^9}, {3.8653595929800215`*^9, 3.86535967425404*^9}, {
   3.865361052630402*^9, 3.865361103972989*^9}, 3.865445422662055*^9, {
   3.865445460925819*^9, 3.8654455200369153`*^9}, {3.865445694161232*^9, 
   3.8654457264389095`*^9}, {3.8654457751293397`*^9, 
   3.8654458752613173`*^9}, {3.865445930590624*^9, 3.8654459730440483`*^9}, {
   3.865446061236844*^9, 3.8654460689573755`*^9}, {3.8654464469315023`*^9, 
   3.865446455577737*^9}, {3.865952161175655*^9, 3.865952182002981*^9}, {
   3.8659522359946814`*^9, 3.8659522660000668`*^9}, {3.8659523006049786`*^9, 
   3.865952342510551*^9}, {3.8659523726628895`*^9, 3.8659523935431986`*^9}, {
   3.8659621960792484`*^9, 3.8659622764384995`*^9}, 3.8659654667182627`*^9, {
   3.86596970915989*^9, 3.8659697322444935`*^9}, 3.8659715219700255`*^9, 
   3.865971717628332*^9, 3.8660468702458954`*^9},
 CellLabel->
  "Out[3591]=",ExpressionUUID->"99402a46-2e9e-46db-8b11-d0e804077171"]
}, Open  ]],

Cell["Periodic Re computations Skeleton Code", "Text",
 CellChangeTimes->{{3.8636129580817432`*^9, 3.8636129685064144`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"f03e7ea6-c5c3-4d65-ba41-05cf4f23e612"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "50"}], ";", " ", 
  RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"\[Tau]1", " ", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
  RowBox[{"order", " ", "=", " ", "5"}], ";", 
  RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", " ", "=", "5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", "the",
     " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", "in", 
    " ", "time", " ", "\[Tau]"}], "  ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "0.2"}], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxErrorInitial", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MyAppend", "[", 
   RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"f1", "[", "t", "]"}], ",", " ", 
           RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}], 
         ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"f2", "[", 
            RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
           RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
            RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}], 
     ";", "\n", "    ", "f"}]}], "]"}]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Js", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxcountAlgo", " ", "=", " ", "10"}], ";", 
  RowBox[{"maxJ", " ", "=", " ", 
   RowBox[{
    RowBox[{"uBound", "^", "2"}], "*", "\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
    " ", 
    RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}], 
      "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
         "order", ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", 
         "maxCount", ",", "maxJ", ",", "initGuess"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", 
         "uBound", ",", "K"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    RowBox[{"ICs", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"xdot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]dot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"errorInitial", " ", "=", " ", 
     RowBox[{"Norm", "[", 
      RowBox[{"ICs", " ", "-", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xs", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xs", ",", " ", "x1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"xdots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
    RowBox[{"\[Theta]s", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Theta]dots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"us", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"us", ",", " ", "u1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Js", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"Js", ",", "J"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"count", " ", "=", " ", 
     RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "count", "]"}], ";"}]}], "\t", 
  "\[IndentingNewLine]", "]"}], "\n", 
 RowBox[{
  RowBox[{"p1a", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
       RowBox[{"us", "[", "t", "]"}], ",", " ", 
       RowBox[{"xs", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
       RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
     RowBox[{"Filling", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", "\"\<x1b\>\"",
         ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", "\"\<xdot1b\>\""}], 
       "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
     " ", 
     RowBox[{"AspectRatio", " ", "->", " ", 
      RowBox[{"1", "/", "3"}]}], ",", " ", 
     RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
     RowBox[{"GridLines", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"None", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p1b", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", "Js", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1a", ",", "p1b"}], "}"}], "}"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}, {3.8654474644860983`*^9, 3.86544746739017*^9}, {
   3.865447584859602*^9, 3.865447593586812*^9}, {3.865952499809149*^9, 
   3.8659525292967024`*^9}, {3.8659525819378333`*^9, 
   3.8659525893724527`*^9}, {3.865971536327427*^9, 3.865971615231144*^9}, {
   3.8659716506068087`*^9, 3.8659716545185547`*^9}, {3.865971738635604*^9, 
   3.8659717394583387`*^9}, {3.865971771360116*^9, 3.865971773325487*^9}, 
   3.8659718432830696`*^9, {3.865971878869669*^9, 3.865971881703761*^9}, {
   3.865972099999814*^9, 3.8659721093028316`*^9}, {3.8659724284015865`*^9, 
   3.8659724335579348`*^9}, {3.865972467781967*^9, 3.8659724678729377`*^9}, 
   3.865972527892706*^9, {3.865972575741376*^9, 3.8659725758223476`*^9}, {
   3.8659727852052574`*^9, 3.8659727853102245`*^9}, 3.8659729110299406`*^9, {
   3.865973909258086*^9, 3.865973915857973*^9}, {3.866046878808134*^9, 
   3.866046926929607*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"72a8bca2-8c79-47e1-9329-ba71838bf03f"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739225468273`*^9, 
   3.8660468881991024`*^9},
 CellLabel->
  "During evaluation of \
In[3593]:=",ExpressionUUID->"bf290eae-a43f-49d7-9339-b2243ae37c94"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739225468273`*^9, 
   3.866046891437058*^9},
 CellLabel->
  "During evaluation of \
In[3593]:=",ExpressionUUID->"cd6bb23d-d8c4-4716-983b-0de7686d2d38"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739225468273`*^9, 
   3.866046894602036*^9},
 CellLabel->
  "During evaluation of \
In[3593]:=",ExpressionUUID->"0c1a4332-e373-4458-a201-6424f126a05d"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739225468273`*^9, 
   3.866046896745345*^9},
 CellLabel->
  "During evaluation of \
In[3593]:=",ExpressionUUID->"5ebe1bf9-6c68-4fee-b834-0534e8e32093"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{
  3.86544753120676*^9, {3.8654476040224743`*^9, 3.865447624201021*^9}, 
   3.865447721857792*^9, 3.8655289469684143`*^9, 3.86595260713276*^9, 
   3.865952660721589*^9, 3.86595276770231*^9, 3.8659528611203775`*^9, 
   3.865971554846491*^9, 3.8659716179662666`*^9, {3.865971742176467*^9, 
   3.8659717746840506`*^9}, 3.865971846659988*^9, 3.8659718834961843`*^9, 
   3.8659721173922396`*^9, 3.865972436739913*^9, 3.8659724723994865`*^9, 
   3.8659725328771086`*^9, 3.865972582336261*^9, 3.865972793257677*^9, 
   3.8659729195032253`*^9, 3.8659733316501637`*^9, 3.8659739225468273`*^9, 
   3.866046898652729*^9},
 CellLabel->
  "During evaluation of \
In[3593]:=",ExpressionUUID->"d4784836-8854-42b2-b620-4841c22b6f42"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
xYwfeApblVIfOmzfiJ9HCBvZzBB1fEK4748bdKy4l7GmJoEFUu5JC7bE65Q7
R+zsl3+GeBbtrfLKW/iAyp9wPdVJKH6XxcE6QcR7yTt9yVVTsNdzJcmYmP9H
Arp5RiOjQXjl0CVHifPY4lzmGr+rU5D+U2OLDbG+v/ocMVz0m4TGDnvlIUJf
SlWqfKvcT+j3x2rzJsT7zhqPpr+MiSFadlbIyxVkpDp05fni1QfQODitcOig
GA6xjexSaJ2EkE/VMe+u0fGOZvJV4RcsADfRVeqEHtNl8N+1TJ2CMem44xuI
++GadSodd44E6yPn+EI1DLCdqkGSju4UfPRJmc8n1uPamD+aPoosKFSKfJxA
rFdGiM7fcctAKPY7KKasg/BO7U6TmaEp0GzdOKdCfN95742Bda5T8D3mXf03
4vOiXK+UpE1YoBCb6ZlAfF/UQ9LVtBkx9FUptLJDloxEAr5/FqizAykp/Rti
GbN/yk5WQs7HKZB29QsZJcYrTsiTv2c5Czz2b125mXgdydnkNaXlDxWf98we
PqGO0xMT1hp2TEEfl1/bCeL6HaOss9scpsDY6kLkKuL6a9/x75iZfQLeL5KP
HmuXw/8eoC/CuVPgcuiE40ni81+apYLD56dg/sB9rWHi+xvWmBc7+01B/sP7
RTuI1yly/1btWxBDbVK5+h5rCT2+5Pf9v3+I7fe5xG/K2Og3C2y/b8sd5cnx
jnFg+30KZsnxf+QHge33nc/z2R/XQge23yd7Kloy4X0VsP2+PdWKW8fdfgLb
73uWVmT/Ounnkt+3++jF/etflSz5fUICviLvGquX/L7NYc58e+E7sP2+a8UK
ckL6wUt+3/oI58Ox6njJ73NvrPxF8Sxa8vtmff69fiRZteT3oSDyQql1w5Lf
9178vGylbduS33ekwMgy7z19ye/r9l4XOHmjZ8nvUzhb51On1bfk99UOFblE
7Sxf8vt8yg1fFy6nL/l9xc8t1Lfe7l/y+/gFh981VY8u+X2cSkn+UzqTS37f
rkAVqaLjLMz2+wpjFmROnGNhtt9H5hQhDUtMYrbf92zI/rjTtRHM9vtGGCXT
D6a6Mdvvm+y/NM7RWIbZfp/YslsHqO6RS36fYofr4NZ15Ut+n0HI4KymYvOS
3+cTvsn0sit9ye+z4xy9ScntXvL73tipLXsg2rvk922v7j7EpcFc8vsa+6T2
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
O8Ymifc23hJF+ltMjBaI93laT4mX1YuiUMwlY/mhDXeZcsROHxBDoiJ8n5zX
ti2dnyDlsO0lGm3BbN71BieZd6vdPWCfn2By/hMOqosC9nkHHU/HXbweDwD7
vAPTMJ3rn68OAptnTfig0H5/fBDYPKt2Rn1HueIQ3DrWse/pJAcy+cMg10oM
wb7ga7mDmZwoVDJJYjBvENi868ut2uC9bBDYvKvznn9miX39wOZdr5TaibM0
+5Z40Ucn61jlgs2YzYs29O8qo61pxWxedERTvSXvvzbM5kVVTi8E/alow2xe
9LHr9YvvqO3Y7YzEzMB+UaQmZos3UtrxRMAvrZFYUbThutyqiLo2PLz/Vk8h
RQwdXWzheGv9v+c5VNiTpf9JtWA2X0pqU9tRH6cMbL70K99G4ae1z4F9nsP0
zvsfjLU+Avs8B782j3jfzjRgn69gdGuiFfv2Aft8hbzPzFeXm/uBfb6Chwxn
VULrwBI/OnXqW9TM+0Fg86OX3x29nik6BGx+dO/N3zdeEs8/8Be12E6LE+Ua
b6D84hwCNk+6xf+wsHTQILB50vd3yttsvwwAmyct9E/0CjvXD2ye9JEkom4m
6ls2T/roenZBWFPPEq8pHz3QvOxINWbzmofOUY9axtZhNq85fWf3OpngRszm
NaFT84N5UzNm85rhqz/LHctrxWxeszHdcF/O8zbM5jVNHh853z1MxLP/4TVZ
3ovfuYn5b0dV4cdXifiVoW91g6MdH3X3Xq1XJPp/ijrzeKi+/48P2dsYiUjW
IglRWqRzS9mzJdpkq1BRQipCkrTaSpGKksoaipJcSShZsu9mNdbBWDPhd7+P
3+ecPv/NZz7m3nvuuef9Pp/7fDxfWNlW7/CefAq+Lp33s/NWccyJLMZ8qUtB
/olrPGvllqztwSHfeas4NSRUxQdA/0RKP2/YFqMkAH0Rj1OVav+cGAbQF+HD
XWe6wpINIL+ZulxlvJnFBpDfLE3IufGVWH9KyckOrzpImFiFzKI2mREQ+qyE
2/SWBysJNO9qamYDyHc6b+ktE9VhA8h3brcX5X8tOQwg3ykEjn2+HjyI+Mjb
p3jevijrxCEf+aA98OgNRjcO+Ujvlbf3dO0hrv8/PjLzVlLOkgoKDvnIK4cC
A7yWUPHclOp0/S1kbMjEx+AymYq/2betISSejKmkG1ZL0Ci4bn86x5xXHAv+
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2638, 2637, 374, 876, 723, 601, 509, 444, 327, 843, 
            690, 568, 476, 411, 375, 877, 724, 602, 510, 445, 328, 844, 691, 
            569, 477, 412, 376, 878, 725, 603, 511, 446, 329, 845, 692, 570, 
            478, 413, 904, 751, 629, 537, 377, 879, 726, 604, 512, 939, 786, 
            664, 981, 828, 447, 918, 765, 1000}}], 
           PolygonBox[CompressedData["
1:eJwV0klQj3EYB/C3ssYNF8mM4ZDtwMGMGVHWg6UkS1HIcrRrsW9lbDO4UA5U
Qg1OZCsKWQ9mHFD2LetY42IGn9/hM8/z/b79/vMu9clbmrEkNoqiGNpIj4+i
NCYqJjGZKaSRzlQyQo6LoloHR/BCPsxalukf6nKIoUE3LZzVn5OTeSkfYYfu
m5xPT87ICZTb17m+3P7I/srMNZvMQfwkVj5pdqPU3ujvD9j/2reRRGa4X915
+8jwO3I565nOjPAsrl9wbRSv5Qo2sELfrJtLHFd1M8Oz6C/KKbyRK9nISn2L
bh7tuKabRab+kpzKW/koO3Xf5QIS2KRbpXtsn097TsndKbNfd/2g/Z+9mP7U
yX2ptmeF57HX2UeHd2FPojXcnxnPXv19czhV+l3mD12rWWjeMYfwi17y2TD5
QoXcbKbwh83OrzafhHdm5pk3zMG00UE+bfbgM4fkB2YyTc6WmhEl+nvmMAbY
681+1Nizw/ex19vH8C68O7kL++Rj8u7wv2AvIpEtunzdU/sCOob70pXpYtgu
D2R2+JbyZftY3svH2UqB/pluIZ24qZsTvqX+ijyOD/IJtlGof65bRGdu6XLI
0jfI4/koV8ld2S9Xy3vCu7Kv4a59KL/pLdeaiXylUm4xUyl2rsh8oVtMPLd1
uWTrG+UJfJJrKOE/MlSCHQ==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2638, 2639, 378, 414, 479, 571, 693, 846, 330, 680, 
            802, 955, 551, 821, 974, 643}}], 
           
           PolygonBox[{{320, 2641, 2637, 410, 475, 567, 689, 842, 326, 443, 
            508, 600, 722, 875, 373, 409, 474, 566, 688, 841, 325, 372, 408, 
            473, 565, 687, 840, 324, 323, 322, 371, 407, 472, 564, 686, 839, 
            321, 442, 507, 599, 721, 874, 370, 672, 794, 947, 536, 816, 969, 
            628, 997, 750, 903, 406, 471}}], 
           PolygonBox[CompressedData["
1:eJwV1FeQjWccx/GjhIhgEe0mrBCj1xmGGWaSyCSIsmFvEKzVyyp3eieLVXZx
wSqZ6J0kyAVGD6u3zATRe+82ksnnf/E9v/I855z3fZ7nfZPTMlKGFkwkEgWQ
6qPjR4lECobz/xVKJL7G39hoUg26F435OSjG/4QL5laQR+IRpukW6HYhH6m6
UxigHyZnYCiGIAc78Q5dzDmJ/uYNls+jvDwCDzFVn63bgbforDuBfvpBciM+
Cx/KK3BOV04ejgeYopuvW80n87/jc34S3mOB/JvxRXxpfh3eyLXpAXyvv0aP
0750oLF/aWtcwQb9s/hN7EFD+Q1thtOYLd+jRbEcZ2N9aCv8iWWxfrQStuET
uT49EuvG36T36WQ6z3e/pJewSleF7kJ1vklcIyby/yCH/9X8hXwSvxav5RQ5
D33kAXIDfhaKxLXgjG6pXJHfirJ8RtxDrJk813g1fgLyka37RfcKneRjSNf1
l+vzM/GBvDTWQ1dGjsN3FxN1c3Sf8ePxDvN12+Ns0Baxn3GuYi9pKazBS+O1
6H50NHYUvfl++np8JgrLuTily5Ur8FtQmh+CO3EPcpbxL+hfWKmrTHeiKt+Y
5mFczKdv6bzYpziLtHnsJ3L092lJrMYL489pTexDB+NX6R80jfY1/p5+hctY
r38a+4jdqCs3jWvHj3whugQnfa8lvRhZX55uRhJfjx6OZ4i/HesZZ8/8n/lP
+R1I5sfG+cTc2F/j2XyJOE94LreXj6CX3Eeuw89AQXkxTuhKyYNwC+N0s3RV
+DF4He+JWGvdM3wnH0ZPXbp8HCXlgXG243r0M3WV+dF4Fc9z3JfuKdrJh9BD
11vOQ4l4r+BG/Kc+U7cJT9BWdxA/6NPkY/g43i+4Hv8Ra6rbiMdoozuA7vpe
8lEUj/dLPPcYpZ+h24BH+Fa3H930PeXpWI+H+Ea/D12N9ZD/B5X+vlI=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1HfYzlUcwOHXJiWzSNFrZWQrIzMjuzKKyhahjEiyd7bsTUW2hhlZhayM
yqZBqdBUZETu7+WP+/2cc67nep7zO+d3vYmtuzTonCQhIaGSP9F/Wc8jJm9q
Ab2gj2lLzaHfaxl9X4vpRa1GJuPDOp/Cxn9oX/IY/6SrKUlq8z06nW4kmv+g
H9GYbOYndQmDScoVNjCCVlQns88d0QX0oxRprO3VGbzKMyTjKp8wktbUiGck
OdfYyCja8ASPkoKUpIo9x3dznU2Mpi01Kc0d/MdmxvAiteKcSMsNtjCWdtSm
LHdyk62Moz11KBff6Vm+0Jl051nu4n8+ZTwvUTfuJ37H5/fpLHrQhHTExX4m
b9GBemSxdlTfoz/lYy/W9utsXiOX+Y+6kqbcZ35KlzKEfOa/6Frujp8x36YT
KGj8q3Ykp/Fp/YD63GN+TBdSxPhPHUBe45/j2XWNltB/tKJWiGfXA3E3Okcf
1t9j79pTc+vZOFddpcX1b62gz2l2/SbuS5dpUf1Lh/KQ8TldR0njS5qepMbb
dSKFjH/TTjxofEY/5EnuNT+uixgYe46zt3ZQ5/I6z3O/tW91OcPIQDJrO3QS
L/MUWa2d0MUMolKcsbUvdR69eIGMJLf+uU7mFZ6mcuzf+lf6Nm/QjEyksL5T
p9CZBlSJvVj/Wt+hN83JTErru3QqXWjI4/EOxV3Gs8d+yRbvSJxzPCcPkCPu
P86LxHin4p7IE/cd71CcPfkpEO9NnHPcLYXj/Yh7oljcJ6nsZbdOoyuNqBrn
YP2QvksfWsTvW/tOVzA8fsP8vH5MKePLCbf/75XQWzQIiZQ=
           "]]}, Annotation[#, "Charting`Private`Tag$414225#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nfYlmMcxvGnXrOQjJAZmZGdWWlSESVEiyKkoSIZ7YG2RPZMpKminUpG
VioN2mRERlkZxec8/PE9znE/T933fV2/63nLtezQsH2xQqHwVvFC4SJmJR7F
/UWFwo+6r+gddBE9DQfzU2hZPMd38tk2/BL+Gvwtz0Q1XKyfoDsLq+SR6Izq
qIGauMRnJrp+Nj6TH8MdqIU6rk3SV8Ln8uO4E7fpl+oa4x95Fmqjrv413TlY
LT+By0oUCl1oW9eW6a/FDnl27g/19JN152KN/CTuQjv9p7rrsFOek3vFpfop
uvOwVn4KXdFev1zXBP/Kc3P/+f/1U3XnY538NB7Q/STfiUNwt66DbgXfFAWM
lffDY/xyeiHezNrQHbpvaX3P1of/mD8bx/Oz6NF4ha/r8/X51/kLsF5+Bvfg
ct+tl+fJPeZz6XAFGqBhsu++4XsXYoP8LO7F7fqVumYohnm6K/Nd/TS5MjbK
z+FB3c9yF5TFVPlQPM/f53pHfhX/BW1O36Yn4xcUl8fR/fE4Pz97iN/J98UJ
aJT71U3nq+TfkZ9HN1yFq/Msrs9wrSq+lF9Ad3TSf6ZrgSIs0F2TZ9HPzDxg
k/wiemTv6j/XXY9d8JauMRrpZ8nVMi/yKAzQbZXvwqHomX2tW83fgF0xXj4A
T/ALs/f5f/l+OBGz5WMwJvs2z8PP5qvnXfAn4OvcHy2BYfql9Dy8pB9It+m+
pl3p+/R0/IbD5NejmXO8kPmjF+Fv9Mqs0TV5Z7QlfYeegl+xmzyBHogteFJe
QSvj7cwqLaC/fjGthJP4ObQ8Xs1sZX34OXwNfJN3J5fEQ/JoeVD2QmYEh6O3
rotuLd8Ku+e+Muu6YrhfrpA5zFrKc/mamRf5ZfTJfOvX6W7EHnhX1zRrmRmT
a2Gz/Ar6Zr7163U3YU+8p2uGa/Xz5Nr4Tn5J3gvD5THy4Lwr/h58wJ+B33GE
/AY9POcAXsz5Rquhn+/dTTfoWqNEzl5dc1ynny9fjO/lV9E/c2eWW9Amri9w
7RJskcfmHMf1eb6i/8/4OvhBHpdzKGeBfqPuZpTMHtHdkOfTL8wZgh/l8Znl
zL/+C90t2CvPpWuZ+8u6y/XwkzwhM4D79F/qbsXe+FDXCi3078iX4md5IoZk
b8r34kgMzBzrNvFtsA8+0t2YZ9K/K1+GrfIkDM37zbmCozAoc677ir8NpXJW
5ozP2YIH5JOzrnlm+T2+PrbJo+W98bD8mjyM/4PvhnKYlnXEKH5wzofMIt82
+4mviH35ibQMnuJX0ipYnN8NWoQH9Z/QczJb/Fx6bM5MjJXX0pr4B63zruki
/QZ6ec4semLmPHOSPU73wXcY4foyej62Y7LrD8Vn1mj3rAc9E0fz0+mROTv4
1bQ6hvhOT/qNrh1KY5J8EJ7Ovec3jd8FA+SK2UtZY/l9/oqck5n9zEJmipbC
93jEtU/pBfgTU1wfHq/vgWMwVNdL9y3fHvthSX7HdLtioHxq9mP2hfwB3wC/
yVPxsO4vuSfKY5iut24z3wH7Z33lg/FMzs/8zuV8wyD5tOxd3U3yh3xD/C6P
yfri0Zyj8oicm3yv7FH+rKwjP4MehdH8GlojZ1vOoayRbhO9PWcKPRUH8JPp
IfgBz8qraNU8B5bld5XunmfA4LwPem72J06X36THYSvGyetoLexAG99vTT/S
b6RX0oW0Qr6fM4WWxsicUfIj2Xt8bxyHmXI5vMwPz/mYteQ74sCsZ35/dXtk
78hnZPZ0N8sf842wXZ6WtUE//RZdJ5TBcl1b3JI5ka/Cn/L0vGO0Q/5g7ZC/
Q3Crz33iM1fjL3lG7jnnYt6frjMOwor87uv2xFD5TMzjj8d4fj2tjZ3o6LP/
AaTSf0g=
           "]]}, Annotation[#, "Charting`Private`Tag$414225#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HWYVWUQB+DLLiwt3Ui3UpJKpxIipdIlCAoS0t1gJwYoWBioIBigSHdI
N0iIUqKgYIKK7/zxPvOb+fbe59xzzmzRXoPaDkyVSCQyJSUSN5ITiZlpEon8
/Mba1InEKXUoSSmJxHj9drkb10jDRSZwt7NlanN+lc+oo1goH1IfJhuV9e+o
1Tkuz2aP3JuMPKRfp97LP/KXJHhMX4B18gRaxZm+BVfkRdzGfH0NTshzeJhU
PG5WkPXyRO6hCkk8YX4zG+RJtKYqyaQmDSmkJR3pyUBGMpGZm3jSdxRiozyZ
NlQjC0+ZF2aTPIW2VOdds5qclF+jP1l52qwIm+WptKMG75ndzin5dQaQjWfM
irJFnkZ7vtK35Kr8CTV5X38H38lz2Sv3IROP6Ner9/FvfJ7sPKsvxlZ5Ot/I
3UmJ56RfHs8/3hn5rDqaxfJhtT//kZ3LTInrd/aBWos/Oa3/Xh0R75T3bJ5+
n/xgXAeZucRkBjrboN7P3/Hd+gvqONL67HL9t/IgEvrc8T4yjfT6HM6fk4vz
O9v036nDSHY+Q79D7sH1+E5+YmLcF2dfq63is/I5dQxL5CPqAHLE/dUvUGvz
vfwG++W+3BTXpt+oduBGfCc5eV5fgu3yTHbKPUkXv1e/Qr2HP+RPqcWH+jr8
IL/JYDbpO8bvZ4U+Fy/IJfkmdokOrNS3jmcgf0ZtPtLX5Yz8FkPIzYtmpdgR
u0RH6vCxWT3Oym/zKHmYZVaanbFfdKIuC83qcy7+DzCUvLxkVoZdsUd0ph75
eNm8LLtjj+hCffJTgILcTCEKU4SiFKM4JXjF58uxJ3aLrjSgJK+a38Le2CO6
0ZBSzDa/lX2xB3SnEYvMGnBens8wSjPHrDz74z2jB41j/8waciF2nuGU4TWz
ChyI509PmrDYrBE/xs4zgrK8blaRg/FM6cUqfRv+kj+nKUv0jbkYO89INus7
kYqV+nLMlStxKJ4xu+ResSs8oF+tto1dk7/gaPyfICd3xnuoNokdiZ3mgNyP
LIzSb1E7kxS/hfGsMj+uDo5rsXN51CtMj+fgbJ5aOd5zDutPq8NJ7W9n6XfH
tfEPGfiZSbEnzns7XyO3i/vBNf15dSwpzpfqj8kDY/fIxS9M5a7YA7VpfKf8
gzqSBfJB9SGyMlq/Ve1CMqv1J9Qh5I33Rf+GehtH4t2mD2v17bkuL6NZPK+4
j1yKXWYM5WOXzapwNN5/HqR5PIO4Ti7HrjKWCrGrZlU5Fu86fWlBxdhL82p8
G+86/WjJUrNm8ftjjxnHNn3XuNes0Z9UHyUfV5kR99x9rOTsf6Z7C0w=
           "]]}, Annotation[#, "Charting`Private`Tag$414225#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0wW0lVUQBtALKiCpgHR3S0uHdKp0I13SSKOAdNqNraSiYtIN0tId0mUX
Yu15a+018825b93/P+fcvN0HtxiUJOEvaSKRKlkiMT95IlGQ3fpZdKA6y8we
5Jp+IaNIzdNmhdijn01HavChWR2u6xcxmjQ8Y1aYvfo5dKImH5nV5YZ+MWNI
y7NmRdinn0tn1smt+Ue/klosl+txU7+EsXwjdyU5m+V0PKcvyrf6eezX9+Ue
usjr1Tb8q1/FKf1wslNb/litz/f6pRzRD+Q+xsk71EdJEZ9hClvMv1NHkyRF
IpFH/Z058b3WnleLcYv98mV1Anf47Hz5gL5fPBP38hPT472sd7W+Qd+W2/wn
31Ank8z6avm0fgQJOYf6K7PiPK19ojbgB/1V9UmW6Y+qg8jEeHmn2o272Sqf
V8eQN55JfkEtzoG4EzzKRrldfC9r5Dp8qm/Ij3FHmEB6XjQrwcG4I3SjLhl4
ybwkh+I+0J16ZORl81IcjrOlB5vk9rHXrJXrs0LfKPYu7hrH9IPJzBPyLrV7
3ClSxn4wlW3WLqhjyRfnLL+i3s+RODt60oBMvGpemqOxJ/SiIZnJQlaykZ0c
5CQXr/mfMhyLvaA3m+UOJGWd3IjP9I35WX9NnchdznW5fFw/hCxxjvJutQep
2C7n5nV9WY7HvtKHxnxu1oRf4o4zkTwsMCvHidhr+tKEvLxhXp6TsSf0oyn5
yE8B3rRegVOxN/SnGV+YNY27GHeQSRTkLbOKnI49YQBb5I7xe2C93Jwv9c34
Le4Uk9kj9yQ138iFeFv/AGfi3Tmo7096HpO3qp24kw3yGfVxcvKQ/JXaPH6v
+uvqJFboT6hDyRp7xkyeMt+r9iJN3HGmscP8ojouztJZ5Vf/YG78nuTC1t/R
V+IvzspX4l7Gc1lfIB/SD4jfNxni/JlBCusDrW/Td+bvuA/cjOdho7Wz6khy
xX4xm4fNv453jGeJe8VJ/TCyMUXep/YmLTvlIryrr8y5OH8Oxz6SkUHydrUL
ydgkn1NHkZtH5JXx3fwZd46pFOU9syp8F3eGwbSgGMUpQUlKcT+lKUNZ3vd/
VTkf94chtGRVfCe34r4xjXJ8YFaNC3E/GEorVpu1iDOI+8V0yrPQrDoX45wY
RmvWmLXkdtwTZlCBRWY1uBT7xXDaUJHF5jW5HO/MCNryAEvMa3El3onHaUcl
KlOFqiz1mdpcjXdhJO1Za9Yq7kCcLTP5Vu5DOnbJl9TxFIgzYB4p3aFq1v4H
B/EN2w==
           "]]}, Annotation[#, "Charting`Private`Tag$414225#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4VFUYBtABpBtpSUGku0FKOqWUblARaZCWUKS7lQ5pJZROpVOREJUG
6W4J1/6xnu999z73zpk5eyZjq051OkaJRCLlokYicWNFIjtjRyJVuSJPoRnv
cdHaZ8Rknf4l8fhFr8a/8lSaU4pL1joQi/X6QOLzq16dq/I0WlCay9Y+JzYb
9EEkYJdeg2vydFpShivWOhKHjfpgErJbr8l1eQateK4PJh2H9bL8K3ciLpv0
IcSKE4mM03Pyt56IPXItbsjfksQ1M/TCtNb/M4eQniN6OvuL5HKBftXsTDyy
2VtlbraeQp4tl6CgvNn8ynpsebxcysxl5jZ/Nv+x97a8NPxfs6JZxNwWnpeZ
2P5e+QOK6zf1LOZKvbz5nf6m+a1exixi5jXXm5XNNvZfhHugpJ7BzGGuMY/a
Sy9/L78f6NfMLsRni57S/pzwt3ytx9EnhPvnTPjc2CfX5pY8k7a8DNeTkd/0
8lyXu5KArfrQcO/s1+twW55FOyqQlAPW63JHns3HvNKH8ja/6xW5IXcjIdv0
VO5zrvweheQt5jfW48oT5dJmHjOPuc6sZJ61n8lcFj4Ls5JZ1NwevgtmMvsH
5Xrh+ep39XfNH/Q54X7D8wh/Qz55g/mJ9dfhtckUzqD1teYx6xnkxeE5htfX
b5rdScR2PbX9eeHMMCx8L/VJ4flyTk/OIbk+9+S5fErEdcOsZeYPvTK35B4k
Zoc+PJxVDusfcl+eR3uqcNtaT5KwUx8RzgJH9I94IM/nM6qGz5uj1hvwUF5A
B6qF98Fv1hvySF7I51TnLdKQlt/tN+KxvIiO1OCOtS94k1/0keH7yDG9MU/k
7+lEFO99uLV3OK7X5K7ci6Rkt7/arGD+Gl7fnB/OA6PCb5k+OTw/zofvB3/I
TXgqL6YzUV03wloWTui1uCf3Jhm79NHhGXNcb8ozeQld+ID71vqQnN36GDJy
Qm/Gc3kpXakdfic4ab05/8nL6EadcG7JzDucst+CF/JyulOXB9b6koI9+tjw
W8KfekteyivoQTTvb6S1dzmp1+Oh3I+U7NXHkcB1U/T8XAjfB07LrXglr6Qn
b7hulLWsnNLr80juTyr2hXPgmgVyGcbrCfWpcgEuhvenL5crh/+j/2W25rWc
1d6P8g9yMnmmXCzcl7wxnB/r0eXR4TfBzGbmMn8yK5p/hs/eXKKXNSuYhc2t
4fth77E5gNTsD+fV3sJwLRP0RPo0uSCX9Gz8Lbchwo96L2K4bkw4h5zWP+KJ
/CVvcUCfSHb+0dsShVV6bxqQgzPW2hGV1XofGpKTXOQmD3nJx1nXfUw01uh9
acRTfSBpOKhPIj/n9E94g7V6cvc9Sy4enoe8yaxi9rMX0xyr5+AvvTEFKEgh
ClOEohSjOOdd+ynR+UnvTxNKcMFae2Lwsz6ApjzTB5GWQ/pkEnvt6XohLofz
r68I9xaev7zDrG6WtPc/xA8f6A==
           "]]}, Annotation[#, "Charting`Private`Tag$414225#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 4.999999897959183}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.865447542535137*^9, 3.8654476074003935`*^9, 3.8654476592648077`*^9, 
   3.8654477353554745`*^9, 3.8655289565223103`*^9, 3.865952621495158*^9, 
   3.8659526890505114`*^9, 3.8659528221198735`*^9, 3.8659528837451277`*^9, 
   3.8659715598758802`*^9, 3.865971633235374*^9, {3.865971739898196*^9, 
   3.8659717475087576`*^9}, 3.865971789775215*^9, 3.8659718682840586`*^9, 
   3.8659720875028167`*^9, 3.8659721409766817`*^9, {3.865972461999819*^9, 
   3.8659724918342595`*^9}, 3.865972566978182*^9, 3.865972621749632*^9, 
   3.8659728434206038`*^9, 3.8659729987618284`*^9, 3.86597337320185*^9, 
   3.8659739179393034`*^9, 3.8660469019346704`*^9},
 CellLabel->
  "Out[3619]=",ExpressionUUID->"9fce181b-53fe-4068-91b0-84705cbcc0ef"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 6.350944410686315}, {2., 2.8204794422637884`}, {3., 
      2.252501077427078}, {4., 0.8679133101174613}, {5., 
      0.4620094769759296}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 5}, {0, 6.350944410686315}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.865447542535137*^9, 3.8654476074003935`*^9, 3.8654476592648077`*^9, 
   3.8654477353554745`*^9, 3.8655289565223103`*^9, 3.865952621495158*^9, 
   3.8659526890505114`*^9, 3.8659528221198735`*^9, 3.8659528837451277`*^9, 
   3.8659715598758802`*^9, 3.865971633235374*^9, {3.865971739898196*^9, 
   3.8659717475087576`*^9}, 3.865971789775215*^9, 3.8659718682840586`*^9, 
   3.8659720875028167`*^9, 3.8659721409766817`*^9, {3.865972461999819*^9, 
   3.8659724918342595`*^9}, 3.865972566978182*^9, 3.865972621749632*^9, 
   3.8659728434206038`*^9, 3.8659729987618284`*^9, 3.86597337320185*^9, 
   3.8659739179393034`*^9, 3.8660469019966507`*^9},
 CellLabel->
  "Out[3620]=",ExpressionUUID->"e757affe-b424-4690-889f-647a15ac5474"]
}, Open  ]],

Cell["Problematic initial conditions", "Text",
 CellChangeTimes->{{3.865447697626542*^9, 3.865447705171129*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"1f326168-d612-4bfb-8f00-5d26c5302aa2"],

Cell["\<\
{0, -1.7176561578501914`, 1.9865343349458087`, -1.0173496185733697`} -- - \
Works with n = 50
{0, -1.3903695773492997`, 1.2310181542446177`, -0.6104047394312593`} ---- \
Works with n = 30
{0, 0.08036047668264246`, 1.3496547583989287`, 0.6830225774268248`}
{0, -0.6909899189385493`, 0.6897150795907763`, -0.7182564346929077`}\
\>", "Text",
 CellChangeTimes->{{3.8659724022849545`*^9, 3.8659724170252304`*^9}, {
  3.865972499946662*^9, 
  3.86597251318442*^9}},ExpressionUUID->"4f96a2c6-1db1-40df-892e-\
51cb2ee045f0"],

Cell["Periodic Re computations using previous estimate for costate", "Text",
 CellChangeTimes->{{3.8636129580817432`*^9, 3.8636129685064144`*^9}, {
  3.8654474939926615`*^9, 3.8654475026988783`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"605fa9bd-d2f9-4de1-8459-5ae1aa1ed3d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
  RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"\[Tau]1", " ", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
  RowBox[{"order", " ", "=", " ", "5"}], ";", 
  RowBox[{"maxIter", " ", "=", " ", "30"}], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", " ", "=", "5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", "the",
     " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", "in", 
    " ", "time", " ", "\[Tau]"}], "  ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "0.2"}], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxErrorInitial", " ", "=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialConditions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MyAppend", "[", 
    RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f1", "[", "t", "]"}], ",", " ", 
            RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}],
           ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f2", "[", 
             RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
            RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
             RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}],
       ";", "\n", "    ", "f"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", "initialConditions"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Js", " ", "=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxcountAlgo", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
    " ", 
    RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
         "order", ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", 
         "maxCount", ",", "initGuess"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", 
         "uBound"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    RowBox[{"ICs", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"xdot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]dot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xs", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xs", ",", " ", "x1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"xdots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
    RowBox[{"\[Theta]s", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Theta]dots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"us", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"us", ",", " ", "u1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Js", " ", "=", " ", 
     RowBox[{"Js", " ", "+", " ", "J"}]}], ";", "     ", 
    "\[IndentingNewLine]", 
    RowBox[{"count", " ", "=", " ", 
     RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "count", "]"}], ";"}]}], "\t", 
  "\[IndentingNewLine]", "]"}], "\n", 
 RowBox[{"p1b", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
      RowBox[{"us", "[", "t", "]"}], ",", " ", 
      RowBox[{"xs", "[", "t", "]"}], ",", " ", 
      RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
      RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"\[Tau]", "*", 
       RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
    RowBox[{"Filling", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
    RowBox[{"PlotLegends", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", "\"\<x1b\>\"", 
       ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", "\"\<xdot1b\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
    " ", 
    RowBox[{"AspectRatio", " ", "->", " ", 
     RowBox[{"1", "/", "3"}]}], ",", " ", 
    RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
    RowBox[{"GridLines", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", "Js", "\n"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[266]:=",ExpressionUUID->"a1e062b3-c19b-4de5-9c5a-758815bd1a87"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.8654472366449585`*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"4862f4bc-a5fe-4c18-b2ab-7942cad26f35"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.8654472407386494`*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"d4a601e7-2397-4df6-b408-ae8073848ef5"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447244385483*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"6b7d41ac-9732-4954-ad0f-c14782216c14"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447246236891*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"d13988ad-0619-4550-8526-5c5b7817c018"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447248060308*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"35011865-bc40-4696-8abb-cc48ce8ee770"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.86544724921194*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"6204e8e8-28ef-4f14-96b6-ffe2df356b6b"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447250238611*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"c64e2e00-9ac3-4a44-bd0b-afa5face8fb8"],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.8654472511493196`*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"ff3e670c-c52f-4df5-826b-016f8ce893a4"],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.865447252062028*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"aea7e719-f71d-461d-819c-91e02e2edc30"],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{
  3.865446765541614*^9, 3.8654468224254227`*^9, {3.8654471077421803`*^9, 
   3.8654471224534764`*^9}, 3.86544715355553*^9, 3.865447201089329*^9, 
   3.8654472529297504`*^9},
 CellLabel->
  "During evaluation of \
In[266]:=",ExpressionUUID->"c7046757-e870-4e1d-8208-9584ea5224f4"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxE2nc8le//OHCbg+y9RyGkREWp69WyUokoJTMZoaymJAqRWSSKFKJUkgrJ
ZaXsQvY+5jGyZ/jd79/jc3z943E/rvuc+7qv8Xq9rvN4SttcMrKjo6GhUeSg
ofnv/zMfGybV8yH7aGg6nV/sP/otqSLRbUSyHAGj8lBgXip+9/5+m7NKKwro
ejf5/ksptke/n4y6k9EJ58Pn9RvrsGv/ZnL2u2FUfvSL/PWQVswqfVe+S2MC
cUJ89K5L3TiMq1IxyWoarTF7Xtvu0ott2k5i+qo5dErYbP74XTJ2+37X5pL8
EhLHeicO7STjD5fZjYX0VtCL7KA4D68enHTzImXbKRrQjhaPFDrbhv0S/52Y
GaWFfiFr9sizvzFNfTfk36AH5BeatDciE8t5Xrh2UpER3m7mzjlQXo36Zh+b
sn1jAvYn2uom0z1Iv9/pVpQbC5BDhZ998RtDx/oilCQkWCHiXv5utvZpRCmx
8f35lg1I2Zmb1EbnkQp3o/hByw2wTHfbMujpMmJFs9bt0xwwFZdLfnJnFemM
nZmXMeGCieMnHnk/oYHm4vO0Z5S5Ydp2WzR7IS18Ciq1kJrlhnw5rrNM+XRw
gdGru6aGB9x8tfS6C+jB1v3mJ/Y4Xlj1fBcpl8oAW+2Vagys+UBKgafi/i1G
qOVRZvPS5AdTXLo0bswEX9/5xSvTC8BZoWdHBZmZ4SatomFVhwAIzsTbS2cy
A2v7DV3XbEHg2OIYq76HBfpTpR8legsBv7Vgn9FLFnikIMyQayIM1cxPh/pn
WSAi7sIPaykRWGiUpV1QIsGZR+dq2AdFICKhRY/dkAQLh1IWEwtEYSyZ66+N
AwnI/QeuFQeKQap2avJrDxK82KsqWm0tDs8CNk8JeZHg7T0vbvstEkC+rU4/
cYkEgSa2R+hnJeDyH97tJvYk2NGelB5YLQlplEqGtbMkiN0c/7b6iBTQf9JX
yCKed7swNPZIrhT079V9dOsQCY6KmqRUbJSGCstDReaaJNjv+uMs931p4Dnw
KE15GwkSxWw2Vs1Kw4d5/s5v8iTYWPIq5thZGQgxfLX/tjQJIrYUK9YVyABv
R4HFiBgJLkwz/C5XlIXb74UV7YRJYPNhSup+uCxEbNhisVuQBAXTcotra7Kw
JzZ5rYWfBMxtvfJjkrnowjbFFmW1IHy7Qllf1bIeUXbpHeXrycGJbJX+3Ie7
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
s/g1pzxjgRUzfLOMKzTdMIL7aFxvmhqyQ/DZkbO7P5KRVbH1439zG6Dm3ftQ
Tm0KMr/+be5gLCfYnppK/+Q3iiyeScQ3pXCBkzZH+LWmYcT61uF88lVuSKg8
4xQQTUHbXL8VlPbxwuOvPnb2li1IzKGl1HdNEORMfgT8mSHqrf95tXzn+K6D
Yt+xU6lYwCt2KShVVXYxDHqOufdocXaIysBQVu7mYSLfsL9RHU/0lQGFmsio
ieMR6PaVB9LnnvxFg08Yj8Zkt2CN+mNG7VI00MAAmhl233GEAcNBej16eL2q
/Xl+bgbTFnq5Wc8wQKbsruttF+bxucCIWNo9LCA05kDb5deOA17JV/Bu3gCy
ATqJD94PomNmbpp6RRzAM/OnwXVgBIWRwyzyNbngrLEm69lzA0guSFbKg5sb
3k9QPorTj6ClcKGHzO3cMP3XiaKkOoxiHPgrz+vywbvRhOQbh34jK7ZW8atZ
klA2uVsh1fQFbig7Vqk+JA2vtwfyPBkMQCc5LHUTjsnAZqnXtmlE/Xage1+O
dZYMKNIt6X6QIuLV//xcMTlmSy53CKL6OWo+pfq5MpOkb2pvZxDVz20IupqR
2dWDqH7uTvfuP/P3PyCqn+uPLYnpFalZ93MvX+tYkXOyENXHOe2h/ymr1rPu
4wZYr1MUJYfWfZx1w9bQ9x/r1n3cTgXlryF6Y+s+biSjL79zeRYfeKA3cPsg
IzBLKojLz87h1o2M5cbNTHDRT1grMGgC7z58VOPsAxaYX7V5O8TYuO7pBMy4
0z1ji9c9nWKrQwhbSDdiZxDKenBtAyhLlcRJ/R5CxbpFSwc4OWHa4IuO5L5R
9Dx42T7GhgsyoiX+UVYG0U68235Agxv80smzKasU5BvRpf2VjgfuLQl5Hb85
hHY6f//m18YDNUuSB78/IKNMN6YvvqnEeaOOhW7nk3Y07LZ8otaVD4ZlubZs
vVWLwrxV73Jp80NApH+gJC5Y932KvcaxGvuiENX3pbFL1dQxZGGq71P4Vrxx
QLwIU33f/axb3v8EqzDV7wlsNyk/LVeKqX7PPKpiWOBZEab6vcO18qG3HYow
1e9tjGloMLPKxVS/Fy7gzJDunIWpfq/ugPHmjcvpOFn2a59CqyRk8Er8e1f3
HDMZ6z9IMZKChjNDQueYY7DyzjP36QuJenHXQjid0B3sDflcnErSYKtueZrt
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
gCK0GNj7sCeGgvpy+ZpMrzP2a5f9oQ0FFPTO2PRVRP8PMCVdO51g1INyxF7d
tWrtAmvedilKHOtFuF9d3MC5zfTzD1Swv0xjzyMOaHtf+VeK7wKIXq6G2/MZ
96Unb5pDBxIQ2xbTEmsjRZh/tnaP4wwFYd63zszMk9Z/CkmxfmV9erINODEx
75Lq60E2RdtZZns54AoF/Z3PohdIf5pvjTKXlxoFfex/5iVkowh9gyQO/PpD
QdZaI48yfnWC7vP7yzZG9iL1n1a8l6U44IG563bFIgvAhfk+tURJET7cvPXe
qxoKomnXS3mG/gZf7Z+q/HToRRuvj1dLWXFCXt7CwsfujPvNFRsdH25F2H63
3iDpFgVdDz0xfemyIhTVuno6qoqCtlqMKcW6dYEPwZ6t7RcZ6/d//ejKHCnu
jsSf6IluZ5n8LQ6YuEfpebjbAjALL1zFpqcIuz02Tq+bpKBF2dqwkOl2MNGi
P0zR6EU7pMX778lywi3uRmeSQhdI/1l1+NFEnzkFJWxj0i05rQgtQyxPOnVT
kEmp6/GV6TQw2tNzeHtQL3Lglh6o3MsBHybfq7U2WwDtpkkD9hsVYYTh6qPX
+ijIPs25XlO4E2geSrz/PqAX4Z5zi9ypTYKnaKTX3CPpdLV+/Q/U7PTiqfsr
Dqi8WWRrVcgCKGppPJFiqggn9edvWzHOW5jvbZx7MivUbYcw3/vza4/gOUcf
hPnegwnaQsn6bQjzvSn8saaamT0I95sfDckEh2zsRbjfHC/amzJcSSP9ZpMB
GV3d9haEeeC9HFFar71rEeaBtwkofV8VnE36zWUhvXcEJfoI7/sr3vsts/4o
4X0FH5+6yFz+l/C+65abNkabzgHcbzazcf8ywziv437zUbkfusbc84T/5c7k
HnDn+0t6zdFVu8ZTUsdIr/lv3/6d13iGSa+5u4N+cWrb/3rNSp80RAyKe0iv
OStHLVnbq5v0mks1q1P1o7tIr1mW3be78AuN9Jp1VjF3sj3vBJj//Vs9/q8s
9ivA/O9hg/LrEerlAPO/f1p0Lc6vKAKY/63yX1rL7Z9D+N+0NFf20OXnhP/N
AD23VsyGEP5X79pq95FiT9JjnuhLd7GPiiQ95srL/IttAnGkx7xlxkU3SJRC
esxBkcOV3oz3HfeYqzvF7F4w7l+4x3zyenWBFnMcwrywrNbHPTFKwQjzwhFi
zy7e++OHMC/cMBPAYbjoiQgvvErQbx3/ZYR54avjffBEdw3CvLDxywktJYku
hHvLO5yzWY4x7k+4t6ytp6rg2dpNesv0r53d4h2/UNDbLRonf04Al0ftZZza
jaSvXPQ+0WKP+iDhhdc4e0zfKZoGuKcsPujNwz8wD3BPecCtnLtab4HwxGmb
jqiVHJ4g/WQ5Wv7slw2jpJ/8SVC70Ed6kPSTWcu9/kZU95J+sqhLywcjrh7S
T47NFfKe29xF+skj+01uSx+kAcwTp49MZD9U+AwwT+xqltvJOVwMME8s/bIs
7hZTHuGHo4wS1xboUAg/fKRloAZ9OkP44T06+9+X/gwi/eSU8zVPk21jSD+5
9cGJG/rL8aSfHCyTsd2DsZ/gfnJD5QPf9fEU0k+W/HT58pY78Qjzxeg0q+D9
x44I88Vl3lsFAqOLkTDgPsGnXgfYjxzjjpDqRDkm40mrH/wCbXunH6wy7UW4
h6xK/7WHI7EHYd649vG7qZ9+/QD3jZOP9nbZbpkHuG+s6Y20LgUsEN54x+6I
MmX3PtIr3tW853vm8R7SKw70sBwJjKARnth+08x2bbvbhCcW1wu8pRfsjzBP
bM5se1yLEoXMJ867BagrwBbhPqGM1fGkZ/x3ndMT5WMUlB3HqtjtqAiND8WU
rWPs91DZYcx0sRkEqm7nvpjQjZQO3ep3naIB/cHZs1d8exHuGy81fKZczWwl
/eJDbYXTayVngddRf8+0Exxw4nerw4HjCwD3jEv3+4zUfpgn/DA7+svD1/AI
4f5wt1FhbUBSAnpRVn1CYYsidHx83b2Ecb5R6r0plvRUEX60lm8b3UpBmDcu
GP76OgWeYby/oxJbZ9uATWG7rxh7LyrOXVlubdUDvh/9ls401kN6w+9f/uXl
q5gDYU/5Dl+Y54DqWSISMVEL4Jri8wF3EQUo1xzxICspjvSDWeXiVr/ZRkF1
Jin2mkcVYU07bWEL4/w3OcS/wnN3EzjV/pp55UAX2lT1b+XMWhpYy1/D7BrB
2E/Xf3yyfwMHvPf5mnTvOsb9+b9ecFST96a/rAug9nSZxHsfBfhsdaWl1aEE
pH0zZ9UtFUX45tZDt3rGedc4Uv7wnwhFGH3s/4q483Aov78P4JU9hcrYkmay
JqS0CHUOaafQpkJakUgIRST7GhUq2yhFllJpx7ErRdYZ+zKDIYmZKEKe+3dd
3/s8/rv/Mebezue4Xu93xntzpyQUb/tLc5lKNxgUufYVXunHfcDndSyXx8X9
BfYnSmkxdkJQ5Iba1wL7adz3W566p1nAvRdYjvjl6otR4bXrw92ysUko/Mep
ztseVKjxeCL1D7EfibQubJR+0QKyrenatev6kGTfXE5fMQsstVi7+tKpfkT2
/+rK+G5/9a8FvYrYe2QuRhByzp1v8/ObBtcEDq5tfb0Sdii/5fr3JiIp0f77
xZAKF+hO7a8n9rukL1be4cPIWX0adaQ6WpRotBP704ehi9r70D0Xer9ytyCk
uhhfuUzMW2R/L5+Ei+pnNWJ+WPE74MQhKrx1YZXpcmJ+ecNngPTLe0BZOmWy
mTjfqsvatVWWCULotI4bJDoNfFuUgzVpxP1S/1tpmpiX0hsv2ycd7wIhP38+
OUV8H1eNw893mQjBrHSbNLer04C+55f4sBAVBozdXSPvlYTky17++3CJCkOi
i/U0iXntwQqwd/UJFlhcGhBHcyc+77/+3bSBdd23GK0owc1usNFTEAoMJeU4
ukwDGzvLmUt6VCiQ39MyQ8yHxe+dO5+VdYDCg+slHFb3o+Daa9VvKELw0tpW
wbBb07g/91tk7Kqje4nnz+WQoehpKpQeGT/Q1Z+EMmMKA1/e6gWG26cEDCP7
0cntaYuu7xCEi4PMlNV2ToOfK0FJrSYVpnR88BLrS0KhI+6/wrjdgFuuYdcd
0I/IPtyIsOj97LO9uO92XqT8F5edLejbI81y9SxBmLMgNzclfBrUPru8ecku
KqxGW68fIOYt0hOLP/q9Y1jxFJJvdcjxrxeEFftNDhkSz09WaMrdUTPi/CUu
3apAXO9r9PbFNrE9oCL15pHNxP7j910Fj0fbhOCorUSD4w3i/HzourdPjQUK
JNYYtHj3o5uU27m7NlPh5UNa4ppjSWjhZuPYpcLE+Ym+6nnn9jQIbZ8xT7Uh
5j8YePXI9yR0UdO6scmqF1wyiDnpdKsfLa31cn2iToWcNes/lnYlIQnV/Jja
iG6wX3lu+6br/YjshzWMyIl8HtuCSqQNFsclC0L32NXfIoOmAc8qe3BwOxUK
GhUptRHzgqQwU6H6hyDcyg7YEUncj3IvTd2qjlLhatu7dp7cJMQ7n+Qi+6cH
XJso6NIn5n299wr77m2lQq4W4KyfSELzzr/gO6EoBPdUctO8I6Zxv6uFj3bE
QfMk1PdrxaaY0l5QE3OU70dIP5rXJpf9cE0PmAnZLgDDiPP1X1+rTtWhel3r
XtC5dqV38RtBSDPg/XobTZzvebrBW/ZS4XIlVScd4vqQPnjMb0G1+0NbhH0w
dfZ/Pngb6YMTRTdV6sq0477WVB3/WSunftzX2ua4ImD/DQ7ua2WmCtyN1h/A
fa2P9zjObhFj477Ws18f/LijycJ9rTXH74QKGHfjvtacW33OWXpM7IO3O3QU
ztf+jH2wrvLMLdmCAET64JrDcps8xSoR6YMf5up+/pDViUgf7DySr6cQ8h2R
Pvj8dgW7LTJcRPrgbCor++EKHiJ98ANHKef5jDFE+mBrkTD/LSdGcF/rbGJr
t5ULB/e1jt/O1lhxshf3tTa2/TtY8JmB+1ptBfdH3nhdiftadzoNlpvGBeG+
1rJFcheDPEuxD96zbbtti2kd9sE3KhZlfHrUhH1waLnO+MZOBvbB1N7gyH5T
JvbBa/3N1eIO/L8P3hCiraG6uQn7YBGrvSnckTrsg8966ZT8863GPlhi3LIm
+kY59sEins7B4YVF2Ad/OU7f+2PFa+yDGcszO/7lZWIfLFDKCXmqegf3tX6q
1i1b9cEE+2Be1YOI3H1R2AfLZfHXz/e6h33w8HQ0KopMwT5YfVaO7wOTjn1w
4nSw1tgcHftgWUpP/dVddOyDu3Y6ZQ2+S8Y+uPvJfdv7L+9jH5y+N/TUtvo4
7INfyYeezG6JxT54wPXBreavkdgHi62uC5ItDcI+OPXKlb1/pGtxX+u51oy4
OwdZuK+1qvN8xsq5AUD6YN/gK4ChwQGkD176KbBMN78PkD54t3OLamMtC/e7
BvlLGx2V7cX9riVqfrR3j9pxv6sdymvYf7gBe2Hiffl6hcdLRHrhTMG/fi9v
NCLSC1s/1t+0r6YPkV54vt7DXLcFo4j0wuub7+nxLeAh0gvLn9oX1PSYi8i+
1zeq/rT6vFFE+uG/ua3dYQHfcV/rtSvLXjhsfon978Gbu8+dkavG/vfnGYrz
v58N2P+WxZV88v3XDCpsjzaapVAg+7FF1kpjJlhuybji4yIFsx/MSbCmGKDU
2cJkxR5pqGCksbXGthmQfa9CWx+f31jbgP1vKq/E8mFlHva/2wet0rR96dj/
CiJNu5iwG7iv9ciRJbd4jTew/934LqpbVPEu9r/r/K5vDW5JxP43arX99rvG
dOx/PXZxtlhIpGH/+ydDwOXNezpyqZAsdkY06MJvMFi7IxWxRgOto9RWweBK
G6l7RYnY+0rIXMhM1Q7D3vfYb5MN23cj3Od6dGqr1wm1Htzn+vBxnk/TiQFA
el9jqVXfdjtxAOl9N265DrWD+wHpfcd+CFG2TbNw/+v1E86Jynm9uP+1xWNZ
7HREJ+5/Pb/81sa7vU2473XLcXVRN/+HiPS/80JbTGSEaxHpf2WSqzZkf+1F
pP+N3rwgvZjzA5H+97yZHCf6CReR/vdHLv8u/59cRPbBnii/bRRsPYZID9zd
80XNbHIY97nKXzOipgnSseeNfesQbXmxEnve9sLagyp59djznvo5s2fhqWZQ
/d5wlOVIgS+LOPJMeSZwDMgJbdoiBSuKXvt5rmUCBd1tte7LpGHHcCRjb08z
IPtgcz7adHsnNmLP62ZdOXSN8gp73hCVM/CNYzr2vBLbwj8a/gnHfa7ZhceL
Dfe7Yc/rnbF0XDYyFnve7VKq3bsUH2DPy6+qSp/LSMWel54pF/V3lo49b752
lHwbi45aZH8uhuk0WFjstKXnVyqCwb+KNcRXQYWSOVnjT0nY784ON0crTIVj
vzsZv0D+p2cz7nuV+2h+SXpZHyD9btrFAn0DGw4g/a5ptYEXX8UAIP1uy7BE
5qvPbED63Xe8t5ojYSyQa79ebg13AtS1uY60O/Tg/lj1s55tLmGtuB/W6UKM
pKVMESL7YRXboR/FsQWR3veJNHp9toiDSO8b6CXCb392DJHeV6jFQ6dHi4ei
zgrB6Zci8MLKcQOLXVzc/3o26qT+hq6P2O8afGp/VOVXg/1u0/TXO49aGgGH
Mzx9gY8Cp1hCL4Z8GKBYyOltUR0FDr+/2CV3iAm+aMw7o5QhBY9Vhyx6/4wB
zj8+X13hKw1vjNU0329oAlrjmw3v7JWBtPy9oRZt9dj3xhiqr04Zz8G+97rE
0iUnK+7jfliX42tidbodcT/s9w/hbZVWIdj3jvJ5dAm4xGPfG/U6rC3iQDL2
vQXnXus5P6Bj31vhp9DlSrxvAlvVn81dokHnna8l44PoSPiyvmtyGw2u4Tp1
1AenYP+7pTWtKNotBPvfxaFxd0vsnuN+2XXiP07sq+/E/bINQVQtx5/9gPS/
V360e3X5cADpfxXi1JSL+voB6X81BnsN/gixcR+tygNrX2leL+6jLZC9fpHn
1IX7aD+muGsckWTg/tkNv2y32evHI9IDB9juWRk59BmRHthtQYfXif09iPTA
UcertQ+iYUR64E8pwnWi57mI9MCS9/ruB4nwENlP+20gV94lcQyRPnj976bN
2jk/cL9s+pZ07zeFQdj3JvA5+yRdK8e+t/vP8nOX+Oqx743XYhQ4CTYDk4FN
s9kWFJi6dmc0bR4TLLsvffuGghTMutNyPMeQCb7Kb7hFn5SCw0K5oWJyxP30
Xz8tO75GL/R7I/a9Y9qrO3Wl87HvXf65NHpBwBPsew+lmnODjGJwv6zm/Kxp
OrHqk7732EyIrJ5iDPa96k0h1acP3ce+98yFosxRWir2veELZlXcRujY9xrr
r3kxyaOjReVt+ZnxNGh6W676N41Yv+qzXH0WrIKif60PfjdNxp73pvixhPje
COx5N+/Z8DDxRAPun60dtlvsCNmA9LxyttPFJZs4gPS88ToVoz6zA4D0vB8a
r8zWG/YB0vP67wTLTj5nAYu1aVVFARPAnLqjNIPYp5N9tuqWH7WmktpwX22g
ms/mn1NvEdlXS68UL48aakak/81xa99svWcAkf43VcUv2Yw7ikj/236u6+h+
BR7KSTeqdrguApOtV+bIXuXiPtpzVCeBpSveYs+btTuwS4/xBXveQ0+OrqTb
NwK3hn3j5wYlIbNyTWqIIQMYbThdEfKWAr+ZmvlO7GcCNyPHi3URUtBlcWjA
AIMBJMOtIrhnpGGv8udnrsubQaNcmXTUOhn4eONhF/ODDdj7LpPj2zq98Tn2
vtO6GqPipsnY+ya/NthONfHEfbVv95vc1dUIxN733XLBHg+LOOx9dQ6OO4Um
/r/3Ff6Tuui1Kx17X+iv5HtraRpSuWXF9DhD3A/RKzMm6HRksFxNVrCGBkOz
UhpNB1OwBxZb4nfziVko9sBtG61OPF1SBUgPrPKL7VW9rxeQHvhjz489l98M
ANID69679v6YBQd0fCgarLLjAt/cMW21QRZIKfBdNZA5DrLUaYs67XpxP+48
+35V2+XZiPTCsQyLsbR/I4j0wostz/IdauOiH0rvu3YuFYHB7m6V8jVcRPrg
Drk9qnP/O78Zov0nXkrCDaa7h16+aga7o0x6ZYMosGpktb6HDhOUORn6qR2W
gijn6FMvaSaQt28tvzEnDS/plm9T2dsISC/85uHcJ+Xe29gLH0vbk/ZbIBF7
4a+VWvQKcTqKvGm5NbGXCvcf/iwYKpKG7P+i1ef20uCubUHb3n2jY0/8nHns
oMtX4r37nyd2PH/+nLsHB+TW/WvV5wyCPXEejiqBA4D0xcfPb7TcYMIGKetP
f8+c5oG2K34vUmxYuG9X5pCkep1dKSK98bysRfGG5WOI9MZCN00ML6vzkLPS
19eRgyKQTlWNb5XgohOzEXwuChQoHyPmU5bHANvaPZ9ODFGgDP+arlcHmUBR
Ou6YV6kUDCrJ7Yj0ZwDSI/fWDanKTyRjj+z5SbGDv4COxtcWlB2XpkHL9iwn
zYVpiKU4FRjqQ4PTxw70vLWjo6bK/V82DNLgo+hCsURaCvbLEjsWcKzvB2O/
nKmyfu+UXSru6/UAah2CPh24r7dA6lfPubx+QPrlJalxq9VucADpl3n0rZfV
lgwA0i+XzVdqHBRl435fj8oe/ycSLNzvaySwNd6jrQv3+5o4ep4QfsrAfb6h
3xObtP1uIdIz08WWaZ77VYVIzxz1iDVPZFU3Ij3zEy7fmaXKw4j0zEONlyyb
IDHP/OeZb7HedF+V5CGy71eSsnyR6vsxRPrm/sAXTw7zj+C+3nmrVTOC+WSx
Ty54mDm+2bsM+2SOqQ4XPa3DPrmusvnKCkYTiPZZFyixkwI3+ovbu48yAEex
Jp4hIQXt82KvRexmAiXx55c2DUtB25PON602MgDZ99vquD1ddUkT9skFE70y
v+7nY5/s9HrfboWEDOyTLULeXIUvYnFf77kQ45nRRBvskyOX7DmxuzYa++Tv
hT7Sw5x72CcHzovasqM1BftkSpODN2TTsU/u/J5yq32KjlRkzYU7b9EgSsqR
EN1IzEOewfuUZmgwXSBq52BwMvbIoZvHnnQeicQeuSZc8dWWD3W4z3c883CY
eQ0LkB45+m3IJN8KDiA98qsr7EFLKQ4gPbL47WOXSr37AOmR79ZuGmlDLPD4
tmWKsOkEmL6X8KpstAf3A/c4N3J+0Npx/+9sc7t3mtJrRPb/qn2qONv2ogmR
ftlWCazgi+xHpF9mPTzLV+gziki/HBkhoRy+hIcKjG3F006LwJpTnE8KMVzc
7/vqfOPzgmf52CM7HGlD8X+rsUc2TXoq+U+zEbyv8nZht0nCI9rW/VNUBgis
tjL5kUWBMd0vu432MsGuGuplFV8pmKu278PiIQZw9GE6hhyRhu8m3XNub2sG
Ks+E+RYqy0D6v58hwTEN2CtrjI3kOK7Nw145auu7hmcrU7FXZsvoKSxf5YP7
fwX6n6RSg25ir7z2b0COYOFd7JWPM36Ijen/v1d+KOUwccWKjr1yU1fEmrkl
aei3w4Tjemsa/Bpfx8nOpaMjLikX9SppsO7fvI+x0qnYM48zmw13FYdizzyT
f+TJV7syQHrm0OsuyrcLewDpmesX7vvgHDEASM9897rLEu1THNC3L/zTvo1c
cD/k7i8fHguMrdw0tdZ1HETInfGujuzFfcMe69tm7mQ8QaR39luyjXb9yggi
vfOBMq1lcyVcNFPOUPT9IwyvGCvy3eniItI3l6cFAS2+BlCfpH+qNV0S9i5M
zD8R0QzCFHfZ+3pR4Ianu704akyQMPk7wHeXFCweLV6vpcQEztMKebM8aSj5
ImFa2q0RkN7Z6Hf5NfEtt7F3PpL6lpsd/wB7Zy25hoDI/lTUvSjShN1GhbtT
Vq2w5k9DW5oti6jGNHjwZ8uxjFY69tChdlO7e1z7AOmhUU75rvUXOcBkp8Nh
v4BBsPT7U4H4xwOA9NFLPpc4JkawwZMyzWqNzzzAFYp0n3Nn4f5iMfbN0IC8
YkR66Z1ejg4NcWOI9NI8ee3eIk0e8i0f+ltWIwIr5LU/PNHgojTeR78RCQrU
V9G5V5HAAH6XXbWPd1KgxB+rlHhiv/cnba9Nbb4UbD554T66xwCkp17wrOif
bHoy9tTn0dT7qWw62vVhtOGhBA0G5oqtbVichl79i5U19qDBu13rvo170NHP
5RUKDr00mHk1/dvTQynYXztbZ8jLCoZgf71+2yqxENUBQPpr761GpyKI9Z3n
RAs9WDcG7h92+GO3gI37kAufr/9eaJ6MSI9NET3W+zOEi+QElj77USIMTw1/
yGDOcJGomYHHrpMUmNYrr2wozgRA7HSUuoYUvD303nT/FiaQXJUV/KdVGj6x
KfAwLWsEQbRfF9xqqPDo2XH/Y7/pqD08nJOwmQZXTA0sMhmmo5Y13+43Ca+C
rcqO2YKiydhzTxR3xk3lsAHpuaVFs5OumBDvw3XbTAQLOOCy8aXflqwBQK2w
sP5y6Cf4sv0xv7tgH8jvLw/bcJYHioKfVpxJZgHSfwfeFN/Hpz2GSP8dLa9U
eE6NhzQ7l3sNTkjC51POT9bYMsD8FLttiuUUuKju7T99CyYg/belvq/B8RA6
Gqk9wl3PR4N7h5YeEyHmV9KD//j9TneyYwAsFB7cIqk5ACRMl+/vghzQtPqX
sPEDLphLS0zc3sHCPjzYjnLo0SgXkT5c5TQ74f7DBiD4x/z461hi/rnqHR5i
wASjrIhrDaeloAhwVLcWYYLqpjutfItkoE6pa7jNokawZVJJ6+AgFb7s/KJw
k7hfSC9+bkkk/8rrHEB6caEvrtV9Ymxw6M3swr1HhOG29ktVoso8NGN8fVXs
bwp0f5S2x9OcCSQSut67vaRCQcG81IRqOqI/Ds1fqkCDFNcPH8MF0rAfR+GT
tdaawdiPL7ZMWqBsfwv3NQe842/gfWnHfc2WKbSbAbf6AenHq3qMbdOIeYn0
48bulaeSVQYA6ceDJh8k7SC+B+nHB2cWvDRfycL9zkXMnqAk8W7c72zUFftK
j8fAfc4sn3HR5Z5hiPTkivMXppf8q0SkJ78VWVv1/VwXIj25rD7/h3DGd0R6
8t+i3mrjxPNNevLT8jrM3bI8RPY9Jzi83pJXNYZIX15R5BY4tnYE9zXztW99
ST90Bfc1p/Y4d3OmSrEP7zhio7nMpw778Dh9/1KdwibwrOpZVSmgQN8Ugzsh
AwxgPqR6f/5CKej9wTzEYR8TmIX+OOnfJwUDDOf1JhoxANn3vHKgNUdfqQn7
8J5Hoe+r2vOxDz+rdfr8IcVM7MNLp8sNrzvexn3NUrkxXiKhR7AP/92xq26f
WDT24d+OK0ecy7uHfXj4gpoPvq9SsA/fVMBel9lJxz68Q5r+c26GjvK3L1rv
GUmDyVV5jke3EfP3nvHNk5M0KPSc3fUvNRl78PgPZtFlsZHYg7uWssydPn/D
fc4X4x1f7I5lAdKDF504deGeGAeQHjzE5FFDH40DSA+eYGCZp3mvD5AevLgR
loRUscB+4/yw3HUTILZXLqOIvxf3Q3/QXfpn05l23P+8r27FZOCnV4jsf+7i
td64JNOESD8eKPUj9qtGPyL9eMbEx5ydcBSRfvx0wKAddSEPlUuOvjA4LAIX
rNx6WimRi/udN5Z1hGm7v8IePEbs7UexiGrswec6wqP4JRqBVekdrVVNklBe
76vBX3EGSKe03UpJp0D1uwtTTu5ighe3vd3MPaXgN0nvjIdcBoifkLRqOCAN
H9ynza850Ay+eWZ7fVKQgRV/jr7Z/7wBe/H+HSFbc6/lYS9+wA3anxKkYy+u
FrgpfGOCL+5/Pr8+ubM21x97cdvrlQ2JLnexF2eFJLu8Wfj/Xvzt5OTf92Z0
7MXbz8lmmxDzkg3TcJPEcRoUMbViV76iI/aDY/FNpTTYe3s6s14rFXvyoEyT
CKvJUOzJW5e4PdQOKwGkJ1fW9+hkuvUA0pOn1vuYbnIfAKQnH/Ofy46z4wB7
SZd3i+W5QGK6XkfiDws8qI/tazoyTqwfkiFZKb24b3qdR+rYt/B0RHpz601q
dC3ieSa9+aVCmJ+dz0X8cecqZb8LQ8OPH1cUDHAR6cuhuIMOt7UeuCccXCmT
IgnDovtcXT2aQZZzeba2KwVarZsuFFdkgvlF5sFPoRR0LmeVz1NnApmKEuWC
H9Lw9Y+I0RMhjYD05tVIZHodOxZ78/I1Zq+vWz/A3pzvyvCcblUqEm5QPhTC
JOalpE2bD85PQw+NHof+gzQ4m8uKsuyiY4/ePj1bVL69D5AefU1AbNjzcxwg
76+wLM18EIzTFHdGvx4ApE8ff7ZgrD6LDdQjl334+ZwHcn+U/kr3Y+H+6g+N
0rSRtwiRXr109bGHPtfHEOnVPSnXrOK1eCj4rlfyyWIRuG/Q0IKmx0XGI41b
NRZS4KmR6Iw74QxALxh1W8SkQNly5dZAYl46ZffYdipXCjpe8mCxHzEA6dmf
eXe577iWjD37RDor6OwjOnLxC2vbuZgG10bNXtgunobkL3axaW40uGPvUZVj
vnTkvfPGbr4uGtwl+lij3SkF+/eg/VrZBQYh2L8LJh+h3xUdAKR/H5novyZ5
jQM8Ngl5Ud6Ogahdz6hnBNi4D/vXkkvZW1/dR6SHl7nn3XHek4tWNdPNQvOF
YefTE8Vn+XhII/H9+ylLCrzjVlDDEmKCp40Ftw4rS8H7PhJ1OVuZoHDYZOZ1
ozT8FPt0epbRCJ4NRLpKV1Nh/rcPjuI8OjKeZLy4soEGC71VzfRH6Sj9n0Fw
psAqKLcu0tldIxl7et1DDjI3PdmA9PSBo+toy404wOriLxG1cA6wHZoOXT82
APQbfi15pfAT3K47MXNAqQ/oPsu6+nsvDzzojZGJfcICpL+f+rZwQ77kGCL9
/d6tb/c/U+ShOqbOJtVRSXj5enmylDkDrBrq828upECdBNe/FWZMQPr7DMr2
I3rX6Ujq7tgkY44K+YPdW5yJeYn0+Bb/Et2MqgdAm1Hyn43T/WDUpXrF6B4O
sOS1TAr4c4HZg7w0OxYL+/zplUfnjvdzEenzmz5zVe94NwBVo2/JdhEUuEJU
0lRLlwmOZQ74zJ6QgnvL+LcnSDCBW8qmA6UCMjBRsUE2bU0jOF1YtPFPHxUe
2v8KZYmmYa+/xE68W4+43qTXL8ku+ymgwQYtClX1j3cLw/p7I1vmEfPiihji
9I5RoMDd/IBiYj48tiCkWug5Fdq0NH/2KaOj6gurCt7I0eCisgyXaaE07Pev
J228uPNMMJqMfmEbItwHBtiyKwZ8OcC3quHo/cAxEH9l8YjiQjZYf6UoDt0X
hh/VlEV1xXnouo3r3WxpKXgw21bdZAcTLLhc7H+yjAqZ80vqAwbp2PNLVN3s
O6fOASIbHsfpFwvBFpXEDdtleOiMX7ew3gsKvBBG//vZhAkuKCgJr5yiQvbI
UNAF4np4vRNyu5rQDxafN5NYfpy4TwLSW8L2c0Fv9O/qwBEWIL2/QcxwckQt
F9m3fFb66kuBR0Vkv9poMUHFOh89MCUNR47ZxubZNII3u3jGoIsKU808ZGWJ
70/6f9nTCos+XSbW6//8//o7L9YtucgGrNFjJ601hWGiUJKFlQYP2ahM/Mhg
U2DJvYgyM+J9oDBx+Mu/ZTTYVRP+c+WiNPTuUYfDvLo+8LpzxmGnKwc4P9a/
Fzs0BjStppUE51jAyurYmW91VGhG22xs8ZeO/b+1ndLnpsMcMBHrd+3rbyEY
xzqs50l8Xo/F978u1RRYc7pOzvIgE5SLFA5FC9Kgxj3d8pPEekX6/6q1vMyl
nxvAQHaTFN89Crx8gN/nJiTmZZ0IlefDVGj/OOufGPH+Ue9wGRSDbFC29MAp
JT8OzguYhN9O/0LM399MNxj/PEPcTw9tnOJpPNQxNdfVNUOBWrqHK1oOMIFH
z88cZxqxv2iKW9qxIA3nB9S/uSmn/wnC+YFEa6khR3s/QOYHvh0erwh3bcf9
4IlKtybv+fYDMj8wSV+UGUvM22R+QPHiZKrKugFA5ge+VzK7vhLzNpkfOHP8
928/FRbuE2948TllcHU37hNPO7S+NlyKifvDfQ4d8J+8FYzIPMFFJ/EkieBK
ROYJagQzn+kIdyEyT6BhQ4sbe/YdkXmC+0r+Oi9XcRGZJ8iwbggPXM5DZL+4
PVuvt7t2DJH5gij3piOpO0ZwP3jkIhD6b8UN3A9+et5AZ8u7UpwPqBHPChE6
V4fzAbQ7Y+ei85rANienoUQDCnz80fHscC8DCJoclksQlIKlu1cyXxHPy4Cx
aItKL3Ec/PogbQ8DkP3i3os+Br/RbML5AJ2zzHl1M/k4H0CNsuv765CJ8wH1
xXs2H/58G/eD6+ltCHa9YoHzAb9+hxib50bhfIDwYuuYA3fv4XyAu/NxyW30
FJwPODeye+BjGx3nA2Z3X0j0/UdHf1uGdpaH0+C9zgcDI0Z0pKezRuv0Hxp8
OKbkcDUnGecBBFf7Lt71PBLnAf5Gs8/d4Nbi/vCnctSOR64sQOYBzmk9HZwV
5AAyD6Ba+VPgsioHkHmANv0lx8GTPkDmAWwM/bK2fGEBxRWn5+YUJ8CXmrLt
0uK9uI+cZrk+LiagHfeNT2bdvCGn8AqRfeMufCfvHv/aiMj8wEP/PjfJ2T5E
5gcUxW1WBtNGEZkf2Btb66gmyEOffDYFhO8XgR9EGw1C6FzcJ27Fd0JNkvES
5wGWXWl07bSoxnkAaLoxuXMesf6i1KiSOkn4u+bzAhMhBtjw8d4LzzQKjFH7
Y/SFeP+en8gcH3CTgpbrnGRrJhhA46VOk6eJNEyvWeJ8yLIZpHf4vMpYLgPH
t8KtRUUNOC/g8Ddxeyw9D+cFbOWWrKMa0XFeoEOgStOsyQ/3jacNA8v1hv44
L9BiF/Focs9dnBcQFFpjWshNxHkBzXB9+/y9dJwXmNWQ8W2RSENLxeyX+1nS
YKn3/ZXlb+hIXXtzNq2EBtmSHs8s9VJxnsBS5rOtl2QYzhO8OHvjsmdCMSDz
BIOFP6Us9vcAMk8w5Uv9pG4/AMg8wZB4ZGHQBQ7Imjyd5yzOBdcqXzF1pljA
OQscV90zDio+nX3jntGL+82/6Pow8wMeITJvwPDgV00UHUFk3uCX6mT6m1wu
Ep7NSbBjC8P8j6Nm2d+5iMwX5Obo+K2oqAeVd0/6vn0gCZWiuLDWsRnoSQbU
iFwi9s9+B27PrWSCN1Q/IbBVCtZxC55WaTDBj9V3bBOHpGH7eaaLS2wjIPMG
l24Jude8jf3/vIHKjQMB8AHOG+SdfKL9/m0qSs7nHW1tpsLPcpaf8ubo6MjV
L05OgAYlTJkWqT10nEd4Oe0fQl/TB8g8wpZLI5qSpzkgUGGK+0J3EDDkWQ7H
CgcAmU+QsvztYfqBDS66CL488IgHLv25XdIUyMJ96ddka45xB4oQmVeIOlqx
ZuHlMUTmFTRcopVriHk7fAY5574XgeFhwsvKIBfFf+9O+iJIgcvyLF/XBDCA
9ulncf2NFPhOqH74OLG+SlU39EZnSUFemqq95VMGIPMM/752XhA4l4zzDLOl
a+5MpNCRwOkjXfdEaXDUYtiBTax3dQ/5P8dcpsFVF7Nvz/jTUWm7tbVZBw0+
8NL5bn0tBecfshfl9q+0DMH5h4aHpv9UZvsBmX8wNN0cG+vNAe/k/l7yyBoD
nl1HpD4IsnH/emCw9mZfXgIi8xAhgwUtjc5cpLJ1kMbIFYbvD8QwbxLPfwH0
am84TIHdAcJ3xPiZwGbTd4lhmhS8MZV44x1ggttmCpvj6qRhyd0FI1U9jWD7
52MeDp+osG9JQ9IXYr6e1JqN71tPgzMOfTuoXDpaOOjms5R/FeyYLbLS2pqM
8xQte9hv1a3YgMxTCAboh0QbcIj5oXZQl5hz2h+u+Db0m1hfLY1/POH7CdDK
BHN5nT5w7Xby5aPbeCCds0WEP5sFyPzFYu+lXyoExxCZv0i+8CVqGTEfrGoG
cZXDkvCYTtpZG2L9eRn96NGzDxSot9xScoiYF8j8xRH7HZf4vego26NwRu0f
FT7aWdkQQsx3ZB6jeTAm4HrxADDq8WTsZPWDcVntM1v2E/MY48vYeXcuGA6X
sD3Uz8L5jOudX2+OdnMRmc+wqRxvbbNrAO84UQiGUmDbnS2qXRuZQExU8t9t
Symo7bVOdpkkE+zmEw5PWyADN2YXDZjqN4I/qRFb9rCpUGWK1vFwYRrOa9gk
eSq7e3EAmddo3mm4U9WADeQa17xuNBSG45rJB/es5qFnG9+HyI8Q8xlX77cx
MZ/929zeYJ5LhUUV40FfER2dNB1FwrI0KKt8wUJeJA3nN1rDTA6Y+AYjW41I
cG+UDZg52gvpxDxWnF1x4K/nGOCsGLJZJsoGmzoF7BbfEYa01gWanCU8tL4k
lWIoKQXfPnv8889OJkg4GBX0ooQKHRa1vf7RT8d5Du/l9KFmRQ4wGRS56vBe
CFYou8fPSPLQuFKK+rJnFNjouWgodh/x987jil7+Q1yPPqMXW4nr0XOYZR5O
zGX2XekmH6054KFdQt13Qy6YMB5wXzzGAmTeY3YBR9jmExdNXg/d+dibAtNv
zak8X8MED+JNryj8loYdAedzBu0bwV51tDu2g9j/CzGqywXScP7jzODCGLlL
HEDmP2JPL87v8WYDpfQiowgVYci4rNeooMlDP7+8EvPvocDT5cmJvsT74CVz
1TezpTTYXbtccf7iNEQ1fLt7yds+kOXoqnnDnQPywrRieB1j4PHK9I6yeWww
tk3FjvaNCjMVh+dOTtJx/iO1+soZY3MO0N3ZZ/13VAhuPHpZIkCdh1wmM+X3
VlFgaEYtbP7f/9d/hI308NOgx+4lAoXEvE3mP1gzn79wXjcAD/M7uh13KbDw
yrrymG1MkE6xVJ//nUrMd1N15mJpKDKrWJyuwgbWSaYHtxL7KTIvcv3MKhMO
MW8vXXBfVd5aGIb4G4mfIvavF1OL5r2bokB7O7eMl8R+VbTsY17xShq8XJQs
q8+fhvMjOvFWct5Lg5G2neHs+0I2GHENWeZLzM/G7tmgwGYMvLuxAaYvYoOk
4L/SFxcT84Bb2mvBvUwg6bLcuSKDAi1eJX/t2M0EapXhyyjjVFhftLXj2f/+
//VfnsT/ikmJmAMHZC4KFeHICEN9MQt1A+L9LSG9zkKnjQIvCsi9v0dcj46k
Asa4GA2qm3RM3Sa+75j3RUGdoD6goPU02Y54fjZYSN7ILxsDUzWf7Hh8bFDw
LFfpCEsIJiwPHVFQ4aHb21VsZ4opcOG3OKNIcya4+UJxInA+DQpYv8kwJu7H
2jbuuscDVCizp+5rKrG/Mttla1P6i9j3ySfxfSbex2Qe5WjHace65WwQf+H0
T88DwlDMNH9HPPH7I7/rG1/4Rey/pXbdVyGuZwyX4e9B6wN9EUur/17nAAN2
90nd2DEgOXIhVE6EDRpaqRzbfAp8RDunMmzKBM36R/lr/lLhJhnh0iDi7xn7
mjV3ckYa2s/CgkuHGgHjRuq0YDQLRF1y0tQn7j+6/oT32g3CMHKe+wvPNTxU
e2PTl9oBCgxLbVZb/L/7t1MuIWVWCL5rfhtlRJxPs9w1rQk1FLha/FVKOfH+
WKs61m8gTKzXv8Wfc4n5yNusaJX1CBXyl+iUvSfWs0+LaSXXj7EBvLqO3kS8
L8zP5kgeWzMG5s6Ed8QS95PJIcNCgXlS8MqBX6+H9jNx372fKd+vlo4g9CLu
gpXPXB+Y99+PV+Pf3TLzxvDxhs9/Uxf6cvGx5GrVCplXIpA83sUsX5OoK4WP
Ayhev+pW0PAxzsv890PmBcjj/wPQN8zV
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{3620, 3619, 649, 1276, 1081, 928, 811, 604, 1241, 
            1046, 893, 776, 694, 555, 1197, 1002, 849, 732, 650, 1277, 1082, 
            929, 812, 605, 1242, 1047, 894, 777, 1321, 1126, 973, 695, 1294, 
            1099, 946, 1364, 1169, 829, 1339, 1144, 1413}}], 
           PolygonBox[CompressedData["
1:eJwV0MkzFmAAx/HHVmHGXSopSaXFDdf0etvj0K0DHagspV5tcnGOaB0XLdoY
9Rc0YwZ539dS7vUPtIcWYqaPw2ee5/d93neGt6CupaY5NYSQwgjFOSFsp19s
5VO6TVdaCLlMaPsZ1QL12pz9kIt81orp1tcT1yoZ01Jo0ObtwowQau24/cjO
tCP2sF3t3uV+01lmlzljdqfzg13vHLAv+d4X5w5u6XkktAOMa6mc0Rbsx8SI
UEWUt97TOOszv+wntPFV20mPvoGkdpAJLZ1z2m97m7+jzk7YA3aWXWXHnK+0
Gmf36m/nLLfLnW32R/fLPv/NfRe99kYmtUPEtQwatT/2U67wXSvhtr6JKe0w
CW0NTdpf+xlXOUJSX0uzt0X7Odf4oe3mjp7PtHaUSW0dLdqS/YLr/NT2cFff
zIyW6/85qb2xoxzTpuxMztsR753u//Qi99Pu7c6kt1POvtXf2PnSe7Yzar/2
VkG7Nmfv5Z5dwDvtONNaFhe0ZXuQG8xr+7ivb+G9doIZLZtWbcUeooMFrZQH
+lZmtf9ONWJq
            "]], 
           PolygonBox[CompressedData["
1:eJwV0UtQjWEAxvG3ZFNUWpW7BQt0UbHRhbFhhsy4MyklkoXTzmWGCplpUJwz
dphxqZahy7jPmFrHSgupcyo7d3v8vsV/nuf/vO8355zvrGqM7TmTHkJIwzus
yQ5hNeqMhShCMQYyQvg6L4S9mOI3UI9P9ny02TPx3FaCJ7ZvfB+m+U38tW3G
Q1shjtkmeQHaeRbWzg+hmY/r9fpd/YV7OfpO/awcdLZfxnmVXqGf15P6Bnef
6t+jO0jybjTgs30xOuwL8NJWime2H/wAUrwH/2wVeGQrQqNtii/BZb4Qr2y5
PnuXbYhXo8w2yH/qBzHDV7hTaxvlt6KXzSv5Y16jX9eL9VI9Fn0/+ZE3yQf8
jjzuuWl9KWL8ivPtspN3yWy+Tp7iF+X76P3KezwuX3t+kazh5+Rw9HtlgvfI
LbxSXuAp/bTer5d7bkj+sh3CNns7n7Wv1I/qY/bbPI1X8V5eEr0L3sonot/i
PKkvQ6v9qi0Hb+wbMWz/zQ9jjseR7l61vS/6X3HCluLL0cl3OL+m5+rr9Rb9
kvzAG+R9npBvPZcnd/MRZ1uxyTbC/+hH8IUncBL/ATAXX4I=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{3620, 3621, 651, 733, 850, 1003, 1198, 556, 1190, 
            1385, 991}}], 
           
           PolygonBox[{{551, 3625, 3619, 731, 848, 1001, 1196, 554, 693, 775, 
            892, 1045, 1240, 603, 648, 730, 847, 1000, 1195, 553, 692, 774, 
            891, 1044, 1239, 602, 647, 729, 846, 999, 1194, 552, 691, 773, 
            890, 1043, 1238, 601, 810, 927, 1080, 1275, 646, 1175, 1370, 962, 
            1402, 1115, 1310, 728, 845}}], 
           PolygonBox[CompressedData["
1:eJwVzj1PU2EAhuGXUrcWlBFxIBFa2UCURB3AxYgwWJS2DA4qiYOpQ8XioHzV
xOjCYIylalwcSPwo/ACEGROxH7o5of9AQQf16nDnee7nPe85p/vqrVQuEkJo
QQnJthD6kDGuHAhhNRrCTfmjNYQ5/aw+pm9hih/hXz17jL/EkO0PHtjWEbXd
RYetgbStiDW02mdxyF7HpO0LkrYXOGn7jSVbBRFbAQdtNVy2XeCbyPIu/9Kw
JfhznLDtY9F2hq9hlMc99972kU/zJG/R76CdV3HJ+Xd+Xx9xPqo/1bP6Bz2j
H9brnnsiX/Frze87m5c53i97+WP5iI/LMs/LQb6HBfef8df6DfnNeVEW+Cl5
mi/rE3ql+Y/yPI/Jd+6W9Sv6trPrekIP+kNZ5OfkDM/JNv65+S73dm339OHm
+/QNpHknrznv4Ss4bvuFedtb/MNte9y2gxSv4qithAHbT8zZ3uAv8vaY7RMu
8v8CqUuj
            "]], 
           PolygonBox[CompressedData["
1:eJwV00lQj3Ecx/GHCiczVOpGRU6WobJTKWYwI2GYESUKLRIuhhmjgxRmHNJi
neEgy12yFuVsOVhuWZLdjH1//Q7vvp/35/t75pn/8zyllNYUbh0cRdGggD/p
w6NoPD4py2Oi6B+6Y6Mol9fiFD6iTP8XXXY5fBtO4gM26v/gll02Xyhfw0qe
HBdFvbqHvJpP5slyg7xEPixvN9P5AGqcbeFn5XLzqf1OeZo8Tb6EfD6Mn3D2
PTbofuOmfh7vQRI/hHG6Vwg/+jjeoVT/Czf0c3k1juEt1ut/4rrdHL5AvooV
PMk97+hG8YMYq+tHle4J3yFnOZMlX0QeH8rb7NvkIvmuvkROk9/o6806nm+W
hGdk/gjPTzc7XMfb5UrzmX6/uSf8TjOfHzGP8tVmJ99lLuejzNuuPy2Xyg/s
9ppVfJKZyA/Ii+VGOU1+Ge7jmsfhnciZdpnyYblAviDPl4fIrc718mKeyl/z
Yv49PC/dLJ4nX0EhT3SmW3efV/KJPEFuNOv5IrOB15qp/AUqnG/mZ+Qy85F9
nVnLM8yM8I7NQ3ypeT58K2YujzNbXN8qr5F77Hab63iKOWC3T84Lnd03dPKZ
+r5wNnwbdvPlJnmV3CEvkxPkLufu8Qo+gceH54kU/hxb7KfyduTwWGeada+w
Vvc1PBv9DJ4rX0YBj3fulm4kr8cY3TNs1k3h55DNY8J71/WjSPcFHfrp/CZG
hG8Fo3V92KRrwkus0X8O9wz/V/w/YMiC5g==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1mWYVVUABdAZUumWLmkEpLtLKUlBkJZUupUG6QYBg5BOm0bpEpRQuru7
23U+fyz23uc+mJl37+ObDC061e4YGRERkSVKRETI+f4oRBL7qB1FTrbTyXH2
HX0QKe1MMo6cIeu6dlp2JjExnU+XO50/k6PJTX57u6zPM/1HHurDyE4P+6r8
nDQcCN8DC/TCHNPHU48C7HDWgOf6T/QkKgudFeG4PoEPKUg0Fjkvygl9IvUp
xE5nH/FC/5leRGexs2Kc1CfRgMLsctaQl/ov9CYGS5wV55Q+mY8owp/OGvFK
/5U+xGSpsxKc1qfQkDN2l3Af2GUXZbf+Ma/133ikDydHeL/sa/IL0hLLm/at
/Mf5SzmOvCR0Pke+4XyZLElSZ2fC+yan2F/pd+VgUjnLLOPKmTKjbOT6Wb0r
ye2k4d+TX8sM8k/Xn+tjwj2088j4crbMJIu5vkdvTLJwc2V0OVWuMB/LEeQM
P499XfYNzyD/2q/kePLxpr1cluKsPpV7+hCyhPfLPie7ha/Fbrs4f+lNiGSl
3Zcbej/Sc9COxQ96ac7p02jMebs7b7HHLsHfelOisMruR+zwfNtlOK9Ppwkl
2eusGVFZbfcnTniG7bJc0L+mKaXY56w50VhjDyBueE7tclzUv6EZpYlHfBKQ
MDyfXlOeS/q3NKcMicKz6LwCl/XvaEFZEpOEpCTjLZKTgpSkInV4Fv3dilzR
Z9CScqRhhfNKXNVn8gnlSctK55W5ps+iFRXY76xFeCZYaw8kHavs97iuz6Y1
FTngrCUxWGcPIj2r7fe5oX9PGyrxj7NPiMl6ezAZWGNX4aY+h7ZU5l9nrcIz
zu/2EDKy1q7KLX0u7bhg9wifC/6y3+Og3jo8q/xhD+Vt1tnVuK3Poz0X7Z6k
4G/7fQ7pbcJnmg32EzmSd/jSvin7h88eh+zXcgL5w+fNXi+rc0eP5nP2lT5f
vy+HkpVP7UuyFynD9+p138i9zl/IsaR19q5MIL+XmWUV1w/rbcPnwY4d7oOc
Fj5HcqPrT/VRpLZzyXhylnxbDnP9lj4g/Mx2RhlbficPuxb+85+oFyCRPjd8
Xce/yxrc1RfwILwXZOMz+7LsTSr22VU5orcjDpvs4WThD/sD7ukL6UA1srLB
eU3u64voSHWykZ0c5OQdNnpdLR7oi+lEDY46a09cNtsjyMUmuzYP9SV05gOO
hfsR3ie22CPJzWa7Do/0pXShJsfDz0x8ttqjyMMWuy6P9WV0pRYnnHUI95Ft
9mjeZatdjyf6crpRm5POwi8JCdlujyEv2+wPear/QHeu2H3CvWa/XYdTeqdw
/9hhj+W2PjA8AxyxI93bSXpBEuvzIv//nSSfa/8BCDYFHg==
           "]]}, Annotation[#, "Charting`Private`Tag$221994#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nf8jtUfx/HbigilIitkr1AUWVkZ2TMUURnZlE0ysksZSTaVn5BdIVRG
qOxslVCp7IiMnp/H74/X4z3Oub73dV/3Oef65mrbrWHXJIlEon+yRCJ/0kSi
Dj1IH0yRSLRMrqdf6VrQd+U3jP1LS2OWvhCa636Q703+/7+TAit0BbBQ96tc
F4fkkWiBA/r7MEB/B1bqCuJj3W9yPRyWR6ElDurvx0B9SqzSFcIi3e9yfRyR
c6dLJEbTG/oymK0vjGd1h+SMGCSnwmpdYSzWnZEb4Kg8Bjd1T2COrgie0x2W
M2GwfCcKeibt5O/4T42nk5+Wl8uN+bf58nxZvi8/guZxfz/qOvIf6oq4bgn9
Q9cQx+SxyGteK1oUD6MYPjHvT3Ma4bg8Dq1xRP8AXtOnxme64liq+yvuBT/K
43FLVxZzdUXxvO6onBlD5DTxm7q39vL3fGt+Ov+5een52nwfusJYE/qOXIEv
x/fjf+JLmLuMPxtz8JP8JtrgmD4LXtffhTW6R7Bcd05uip/lt3BbVw7zdA+j
re64nBVD5bRYq7vbZ9fRrZQr4lHdCvk83wwn5BzmPKv7Wp4gJ+Ty8vxYm/xY
vhj/CN8t7o/+IL9I58iT6Quu+5HPhm7yMOM16Ah5NE0Xa412iDVGd8bzpTPk
d+g6199D68p96ar4vnSi/BZ9Ui5P+8s/8y/zH/ElXbeSXtA9gyr6IfIv+pz8
c/wm/dtyErmC/IFcPJ6F3F0+EN/F+E98dnTXD9elxxf6Ulilvxj7GSfld5DU
vIr6D+N3xUu6n+UHYz3LNY2/wd8d+4TvGPuD7pLb0JnyRLredRloPXm1sUp4
TLdavhTnC07JE9EO+az/x+mnxi8ba4nT8iS0xwl9jjiP9Pdgg640PtP9Hfsd
v8qTkSyerf6j+H3RQfeLnBMj5QzYqLvXvPq6T+XKKKP7XL4S+x+/yVOQ3LxK
+gXxfGMv607KuTBKvjf2ljkvy7v5L43fJzeQP4s1yU/iq/AV+AH8Cf4J89bw
V/lWqGrs9Tjf9Ln4VnFe0s3xPOhU+V1jKfjK/Cv0f3F20nHyOFpSLkl7xJ6h
B+M3pHPlKXGPrj/FP4Qe8mjjtehIeQy9L/Ye7STv4b8y/365YZwJcY9xvunW
yv/EeYEz8kPmtNZtkafKd8hV5IVxVvPj+VJ8Kb4nf4jvZN5pPnd8tvy0sVFx
7vPF+M5xxtG9cRbQWbGfXZORb8T3o2tij9DJ8gRaLc4EOjDWCv0lPocukN+j
5Vy/jr+m7yI/T6vRobE26B/xTole3hrrin8vrtWn5KvyH8daDuRe8mG+s/Ff
+TwYK2fEJl0mcxrr1spPxX7XfSFfj/2CP+Vp6IIKWG/s3/i++Et+H13xmz5v
/Mb6TNisq4gNuhvyCzgrT0eqeA76RbrHA/kV+Qjfjp8X6yjOPXN/5/OhZ/xG
xmvHmoj3S5wnfBd+H7/F3AfkJvI6uTqe1G2Ub8ZZg3PyDHRHJXxp7FasP5yX
Z6IHKuMrY7fjfnBBzm//z6I9ccZYfrxpLDO26qrga10C7XUX5dnohT90BeJM
1WfBN7qq2KRLgg66S3Ie999G/kaeI98pPyUvlhvwb/LjaWm5NH1VHkaPyu3p
/NhzrvuTFoz1ps+Kbbpq2KxLio66y/JcvIqnUB01sMV4Mrxszt/yPPTGX7pC
eFufDdt1NbFVlxyddFfi/wT30VbeJs+XU8vV5VfpEl1D+lY8O1omzjTaWz7G
9zH/LF843k9yduzQ1cI3uhTorLsqf4C+OKcrEme6/kF8q3sa23R3oIvuH/lD
9ENtbNenRFdj1+SP0B/ndUUxSZ8D3+nqYIcuFbrprssLMAAXdA9jsj4nvtdl
9n2a6r6Qa6Cu7lv5znjHxR6L93TsoXinxDucH0i3x5lOp8UzjnPTeBpaQ/4k
zmIM1F2Ui8VZKefCTl09fKdLHWem7oa8EINwSVc89pP+IezS1cf3ujSxr3Q3
5Y8xGJd1JTBVnxu7dQWs/QZ0p/4u9NLfkhfhNfyteyTOIH0e7NE1xC5d2liT
utvyYgzBFd2jmKbPi726LL5rM916uWbsXXmQfJJvZHw3ny5+s1j3sb/j/wV5
FE3I+emL8o54V/Hv80tcdxdfk+9Nl8bfohPksvFM+T78cHpc7kA/iO8e7znX
XuVLxveNv2e8Dh0T5yfNJ5egXeUhdH+ccXR2rB+6z/VZ6TPyBmPN+Sl8Lb4S
P5g/xTc2bw+fPu5RToICxl+Sv+U/MZ5WriUvk8thqO6feF9henx37NdlM6+5
bmO8q9BEt1e+G33kpFiqG4ZruscwIz4PP+iaYp/uHvTVJcMy3XA0w359BvTT
J8dy3Qhc1z2OmbqCOKDL7l5a6L6MMxuV5dfk0/EuivUdv388H3P/Az0JuWg=

           "]]}, Annotation[#, "Charting`Private`Tag$221994#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfclmMYxvHnbU/tIaEplYZSqURDQ4P2EFJaRIWGlIwUaVKinfbe0V4q
pG20NNGipVChfM8/fp/zOI77ut77fq755m/XrXHXpEQiMTZZIjE+ZSLxXupE
4u9UiUSuNInEu+oN/gUU5UvwR+nHkY8/zKdX+/KX9N2iPoBN8mTyV6IvfUF9
Br/RO7WbS+fBLL4hTtHN8TOdDfvo6thNv4YJ+rzPX6MHoiQuy3ZhnvwOzJY1
QnZMlA+WXacHoRT+kO3GJEzGFHyGD7S74fl7KI0rsj2YiiGe/SN7H/fjqmwv
5svzYo6sMXJgmnyo7F96MMrgT9lWWTls5rvEb5Mt4O/EXL4JcuI7vgb20H0w
Xbth/H/0ByiLY/wT+In+y/NtdHl8ySc33q/SL9IX1Tb4nc4qf4f+TvuF6l0x
XrJ5nt2ku6IpfVptgUKe/cJnUt/kS6m5+O/pR+O7+b18GvU1/j719fitdAfc
w/8R86gO4EurM7x7OH1Tnpsfov7Dd4n1Qh9XGyK/Z0f4DGq/WIf6faVWwBZ5
CnkP+iX6kvoszse3abeIvhvz+VtqNzSjz6gt8Wu8Gz/QNbGP7hvjSHfEFXqm
vzOCvkUPRTmc4BvhKH3N86/pB7GV7xp/T7Y49gMW8M1xO37ka8W40/0wS7uR
fALD+PK4LvuGr4htfLfoJ1sSY4GFfAvkwWz5h7IkDOcrxN6U7cec2FOxF/CR
58kwwvMHY5xlB2LNYpQ8OUbKK+Jf2UEslRXAIllL3IEF8tGyFPiQr4T/ZIew
TFYQi2WtkBcL5R/LUuIjvnKsL9lhLI91hSWyJ3EnFsnHyFJhFP9QzJtsO18J
X/Hd8ZNsBV8YS/nWuAv7+dr4nn4Di7X7hE+N0XwVnKQb4xidwLd0ZXxNvxxn
CN0WF+gj+n8e6xfLor211p1+ij6rtsIpOrP8rVhr9AG1Tuwp2Q98WrUP35/+
W+2EIrKrcS7Fecrfry7xrk/pNLid/zjmIvYuivEP8z/TTWJe+ON8RvUNvqSa
xO+gH4pziP+GT6n25F+Js05th4v0Ue/6Ir4Dy/mncY5+EqfpfDhIP4Yf6Tex
VJ+xfFqM4R9BMuzkq2A7/WqcR9qt5O/FCv4Z5Mcy+ThZOnzCV43zKfZ5rIWY
zxjr+K7oj/Hapcen2lSLfR77Tr4KE+QZMFZWPX5nzGs8kxXF53wbFMBq+URZ
RozjayBVjKV8dYwtvuCfRUGsiftAdhvG848iNX6Rr5EVx0q+LQphbdwdskyY
wNeMcxC/ytfGWYhVfDsUxrq4Z2SZMZGvFWsEu/iH8S3dA6e0W8eXwGr+OdyD
9XFHybJgEl8b6bCbfwQ76J44rd36WBtYw7fHb3RrnKGL4BBdF/vpt7Ah7jg+
KybzdeJ3001xgk6PPXRV7IxxtL560b3oK+pzuESf8Xc20KWwlk/S7mW6A/17
7J/Yu7KzfBb17Vgv9GG1Xuwj2YH4XXGPxBhEG/4a3Tna8n/yOdSBfBl1o3dO
o7MhDz8lzib6pZgz/rGYE7pZnFP8Sf42tX+sJXqvWg27Yr7lvene9FW1PS7H
nveOjXRprOM74jz9NM7RReNsouvjIP0ONukznc+Oz/i6sW9jv8k3xd7Her4T
imGzfIYsB6by9eI7Y+7kX8b/U/H/Q9zzcQ/G3YOZ2ubENO3qI1OMc9wjmCXP
hemyBnFWxTfHmYrZ8tyYIXs85gIX5JtjTLGB74zicU7GnRJnE2byTyArLsZ3
ycpiI/887sMRvgEO0QNwnX4ef9E5je+g6KPu0P9/9iFoBg==
           "]]}, Annotation[#, "Charting`Private`Tag$221994#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfclmMYxvGnrEpJCJWVTbbSnip7FdESUVIpCkUaotJUVrIpI9pTkZQR
SqLSkhUqoUFWGd/jj9/nPI7jup7nvZ/7us7zrdi2a5MuRQqFwsKihULlYoVC
oxKFwqTihcLZWM6PwBDZr3xPHIr2sltkn9MtsYufhSpoLJ8sq4wV/IMYKvuN
vwvlcJOsi2wV3Qq7+Ql8WTzBz+afoPfAA/yJmEMfjZfpc6yfR0+hq+Bt+iSs
lL+o7oeH5Z+o1TBSPkzdKbsbi+gzUJ6erh6GH/A8/7laF9vRwee6qqvlX6qt
1XfVU/ET/rE+UT0Y3+HJvDO1FrbhdetPqnviawy2vlitnOel56rH4BW6qr3n
01Pz+/Ic/Et8aTzCj+KH07/TvVABN8tula2hr8W//BxUwwXyaflerOIfQkfc
Jl8ra4P/+Ll4SrYXhsiWqFVwMv2Geiw2Yjy/Wq2P6j5zoTpdVi05/zA6oZt8
new6FPIdshq4SD6Dr441/CPojJq42NpMeQ2s5R/N/UIt1EYdXGLPLOs1sY5/
LHdT9gd/Dw5DF1l32Rf09SiCN2V1cal8Nl8LX/Cjc7aoh8tyVvLaWM8/nveK
2+XrZW1RFPNkT8v2xlC+EurLLufn0HVyT/iX+f3xKD8mPUD/SffG4ZjBH44X
6Nus30F/Sd+A9+jTcvfpSeoheCq9pNbGW/Y/o+6DYfKP1XNwSn6rehw24dW8
Z7VBejfV565Q5+b3546rC3LO+BFfWX9FLYNv8Zj1ZTlr/JK+tD5S/Uv+ldpH
/UA9E0fQM1Mxlu5m7535TvpG7InJ/KF4mp5v/Vm6GIbzp+JcWRP+Dboevk7v
5DzRMHMJTa2/mXeOb3Jvc0bokf6StcNemQeZQ7hSPo9vgG9zdnnX6Cn/JnMM
e+c9ZJ7gqrzfPAs25D3nd+CuvJPMLeyDhelVNJPP5xviu/wmjJL9zffFkegh
u1u2ge6AYngn/Ymr5W/zjfA9/1z6VLaL74ejMnNlvTJf0u8onhmU/sM18gV8
Y/zAP59nTa+hubWF8vOwkX8hz4F75N/LOqJE7lv6Dy3k7/DnYxM/Nj0t283f
i4qYxR+JcZkpaj3sQC97e2eGyjthX7yfnkVL+bv8BdjMj8szpB/Td+md3Muc
PVrZ+559F+LHzPJ8L/pkBsk6oyQW5S6gtfx9/iJsybzMXvRND8huQanc09wF
XCtfxF+Mn9Kn2Yt+8s2ZH9gPH+YuoI38A/4S/Jz+yN6cO66z9qH8UvzCj8e9
If0k64rS+CjnjOvlH/GXYSv/amZg/ofw/XF0qqy/bAt9K/bH4pwz2soX85dj
G/9a5qTsX/4+HJMquy//mzJXUAZLchdwg3wJfwW28xMyQ2X/8ffj2FTZ/bKf
08M4IPMl91JWHCP409BCdiP/Md0EO/L7+QMwmp+Y+UoXMIA/DgNkAzJL6O44
EFP4cniGXpr7S5fAg/zpmEcfj9foltbb0UvppulBulJmW96leiAel3+q1sBW
TMosV4tgYM5VPSvfSc9Wj8KL9ED7BuYz9O25u/TpOIieqpZPz+BZfqVaB5+k
p9R9M0swMr9BrZr3hzP4t9QTcrcwgV+rnovf0Mrn2+d75OvVKzMXMsdz/tmT
M84zZHZgjPXP1JqYbG2MWhSDcsfUs/O36NfViniJHmTfIHobfQfKYhpfAc/R
y9LndEmM4s9Ea9lN/DL6Kuzkp+CBIN8uuxMH512np9BB/infDL/zUzE4/ZM+
yd3HzfZ8Zv1q/MFPw5Dca3S0tlx+Df7kp2No7iw6WVshb46/+BkYlvuHztZW
5j7ib34mhudvZy7JeuCQvLfMHVkpPMSfhfn0iZhIr1MbYifa2fs/1beLDA==

           "]]}, Annotation[#, "Charting`Private`Tag$221994#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/KaxSTwH9rKUuf8BKA+y3Q==
           "]]}, Annotation[#, "Charting`Private`Tag$221994#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 9.999999795918367}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8654466261281967`*^9, 3.86544666786285*^9, 3.8654467269099674`*^9, 
   3.8654467658875027`*^9, 3.8654468227773094`*^9, {3.8654471081240582`*^9, 
   3.865447131300647*^9}, 3.8654471686976876`*^9, 3.8654472149538946`*^9, 
   3.8654472536035347`*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"8422c06c-0a54-450f-bf30-82fd245b3abe"],

Cell[BoxData["13.131296596794906`"], "Output",
 CellChangeTimes->{
  3.8654466261281967`*^9, 3.86544666786285*^9, 3.8654467269099674`*^9, 
   3.8654467658875027`*^9, 3.8654468227773094`*^9, {3.8654471081240582`*^9, 
   3.865447131300647*^9}, 3.8654471686976876`*^9, 3.8654472149538946`*^9, 
   3.865447253633526*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"60eddc4f-7de6-45ca-9031-103521e3ce42"]
}, Open  ]],

Cell["\<\
Periodic Re computations without using previous estimate for costate\
\>", "Text",
 CellChangeTimes->{{3.8636129580817432`*^9, 3.8636129685064144`*^9}, {
  3.8654474939926615`*^9, 3.8654475142641797`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"5e902872-386c-441e-a1fb-71cf8c39bef1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
  RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"\[Tau]1", " ", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
  RowBox[{"order", " ", "=", " ", "5"}], ";", 
  RowBox[{"maxIter", " ", "=", " ", "30"}], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", "5"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", "the",
     " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", "in", 
    " ", "time", " ", "\[Tau]"}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"A", " ", "=", " ", "0.2"}], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxErrorInitial", " ", "=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialConditions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MyAppend", "[", 
    RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f1", "[", "t", "]"}], ",", " ", 
            RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}],
           ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f2", "[", 
             RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
            RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
             RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}],
       ";", "\n", "    ", "f"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", "initialConditions"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Js", " ", "=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxcountAlgo", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
    " ", 
    RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", 
         "order", ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", 
         "maxCount", ",", "initGuess"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", 
         "uBound"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    RowBox[{"ICs", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"xdot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]dot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xs", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xs", ",", " ", "x1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"xdots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
    RowBox[{"\[Theta]s", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Theta]dots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"us", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"us", ",", " ", "u1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Js", " ", "=", " ", 
     RowBox[{"Js", " ", "+", " ", "J"}]}], ";", "     ", 
    "\[IndentingNewLine]", 
    RowBox[{"count", " ", "=", " ", 
     RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "count", "]"}], ";"}]}], "\t", 
  "\[IndentingNewLine]", "]"}], "\n", 
 RowBox[{"p1b", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
      RowBox[{"us", "[", "t", "]"}], ",", " ", 
      RowBox[{"xs", "[", "t", "]"}], ",", " ", 
      RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
      RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"\[Tau]", "*", 
       RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
    RowBox[{"Filling", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
    RowBox[{"PlotLegends", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", "\"\<x1b\>\"", 
       ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", "\"\<xdot1b\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
    " ", 
    RowBox[{"AspectRatio", " ", "->", " ", 
     RowBox[{"1", "/", "3"}]}], ",", " ", 
    RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
    RowBox[{"GridLines", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", "Js", "\n"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.8654473718577185`*^9, 
   3.865447380483961*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[284]:=",ExpressionUUID->"db1fe012-3c00-41dd-bf23-d956f20ffc05"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.865447385776267*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"e24d5fa0-1925-4b91-a6c5-4b3a0948a4f7"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.8654473897140083`*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"042e9e3b-099c-4e9f-9b60-7737234042ea"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.865447394935339*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"e4a9ea77-aef1-4256-afeb-43647d389980"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.865447398142313*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"d8e5a864-996e-49ef-9668-635c7ed12e67"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.8654474004075885`*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"abc38e85-a5cb-4755-bf7d-359408195a9d"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.8654474015802135`*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"64161f47-8839-446d-ad3b-a4b9ef25f4ac"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.865447403910468*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"a529319e-a79d-4789-b379-26c13e1c5fb4"],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.865447406214731*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"7dc6844b-8e20-4c36-93fa-3e649567c9cf"],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.865447408268075*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"50af0c08-a1cd-411c-ad57-7951aaf420ab"],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.8654474093067427`*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"e5a0acf8-e273-4885-b0dd-0ab36f8925bc"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
++dFK4M2SJ4eB7h/fqC+VC/84SThy6VhyoHSHQyA+fJYh1x9y0UG6Z+nT7vs
ZrvJAJgvX5kpwZX3bhJgvnxLq4nTrfExwo8/WpkQPavQSPjxjHsPL4lvrST8
uPnjT2+DtXMJP/5uMPf295Qgwo8vf7miruz4RyRp8veui50ojLGKDenPyESY
J5c1Dv3qw7zvYp68W1InpaEYEZ58x+F+6vC5H4Qn57RduHLO/RfCPLmdjiLb
zdoqhHlyeXjE+DKqRZgnt/OP3lAdQkGYJ/++5fQKs+EahHly2WLfsny9Hwjz
5OZWHr2HLEMB5sdbdp1mlFo0AsyPn3k+u7VfqBPgnnrTwknFb3PdAPfUJenA
19+JBjBf/rDVulZ2mAYwX2785ifHsvs0gPnyget8pjybqQDz5e99t/cM6HYB
wpOf+Bx0abYJYJ78nvryw5XvrhCePKz5k7hf7lfCkyd5Gqb02v4CuJfOfuyL
3axBL8C99PKs80fqfg8Qfnzsy7s7EVeHAebHyyL45cfGRgDmx9OGCwGLJx3g
Xvoqzbtcq3tGAe6luyqIr3UuHQO4l37s5TLLK4sThDc/d4/7zWDDFMC8uVsp
F2XnMANg3tzJ+feRjckMgHnzLWUFhXbbpgDmzYPuVWsrx48TnrzgIZuzLGcL
4cnXODtY6JjWEJ78xPsDVUlrCwlP3mz42sT1QyzhyYuf3At104hBV90SPSk7
RKHY4qfsyovpCPPlu1TcnOa/5CDMl9d02GdwuyCE+XLacbnLkeKFhC93e29x
lXW0lPDlB8JOxB0+WokwX+5SFxAuLVyLMF8e4qcy6neMgjBfbif6xPmaZh3C
fLn0u2aXfSt+IsyXC8+HpqyMfUl48qYNbZ1D3/8CzJPf3JJ4I1G8A+D+ehJb
cNVXq26A++sb6sRWRGrRAObN9Ys9PDN7aADz5nNjb2JtE2gA8+bn9OeFvgZS
AebNbUcPnZ6u7AKYL/90ZOD6Pf0WgPnysJyfuw89Cid8ueM9+fq/7/IB7qmz
Omw09NEeApgfXxDme1ppOAIwP+4hcV7GcCcd4J66TvA31c/bRwHuqa9/Ui7d
XPAP4H76xvSRX0bTkwDz5l472S1YvRkA8+Z19Fcl92YYAPPm1r7pW3ZJMgDm
zY/QJh9Wsk0Snnx/2Y1nrCO/CE+uyJWnmf0ug/DknheOqcQVWqB8zuuZedUi
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
LahX+uz/MCgA+0WJUs8GtZZyAN63OM9qKlbyXZ34Ro5G7r97+j8T38g9y2hV
3ZV04hsdtJiptj4TSvYvJJ+J2xZINoCPA5LGKzql4bYT96L5rnaTPYx1VTOS
4zt6yB5G4odn1aY+NID9pE/VsyqmrzqIn3Suz6x4/4U64icJ73AeOaBWSPwk
zdvuHmKHo4iftPnPzbubbRPJfkbpzochpl8KyH6Gq8NRp/qTv8h+Rl7zzM77
1f/bz7jUtsg/pVJB9jPuMBJnX10uI/sZXRqLK7bxlaKtgX8sL36qAaP71EQy
OTuR6UKQy7bxNjAu9Qr+tKMhvK9hJJR7rNqASvY0+NfsULRn/v1q1YOOrHFl
gwuu3E/Lj9aCG/QU41ApdnjrUOsHH5kyUMmexXumYDl0fWa3WOxbS/yntvTw
/bPM+xP2nYa3eAassZwAeH/D9zW/Hd16GpwvvPBifmoFNFTyEp2UmyF7Gy/t
Rb15n1DJvsY/JcnkvU6NZF9jYLVF1y/+IoD3NfL2nL9w810o2K21bKDTVgJW
S4tMPwHxKMzh5WK3piQcvizIfig8jfhSyg/034woJxNfKp2N7WWtaS2Ia/Cu
V/wiDcfsugbqRbtAdKrqh733ZeAvepMyezsNcP3MHtm6fw08wPHoYDtnD8B7
Ha+U21b6Ms/P2J+6KxAgHpyZi/g+bRmJfiwPFbNevzzSXYryNSW5DXrlYfyE
WquuXjmKlVj0DzRUgDrP7hzlY37/6B3mSEnPUoC7wooX09jL0UUHdcZrpwYw
sZ26OkCWiu6mGFDufugC3ZzNcm5W/9sDqT8bdHJ06//2QJLcCi/QNKkg4Ci7
7rJDy2CnFIdX7+cKwJp/99aFCXYopJUapPS9gvhXm0T1X3VlTgH3D+t/Cymt
gE6/W3ziNs+AY2du7ThUsBJeZhXQa783DeTSH17XrJSAgyYa1Y8OfUXUY7tD
Pr+ThHEffz6QCk9HifOJteNCMnC9kqjJNhcq8I1YV8TfIgNLuqOkNM/1kP2Q
4V1f54fbqMS/MmSR3viuLAXpdOz5diFFHi5dZfW/6PobfQrf3XJYWgGmTiir
T62vQDEzE9v/uSrAjQfvOBkMlZO9Ea3I1XEKn38j7GfpjpzqLLKORtjPWmaP
Kuf2tCDsZ51+310cU0VFeG9kbXGgtfhqGsJ7I+/GJp0+enWSvRFt/6dciv71
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
NQP3ipzyuCtnbWh4/3gkQjSo52gX3j/GdpAu5T8i4/2j45H1LtabP+P9476c
Z03Wyndxz+jmh+SLa1xycc/ob6hp6Oj1ctwz6rc0u7+CVIN7RlObLFqp+8m4
ZyTl8zzzTE4t7hm5PeLYtvClHhF7yNJvnl+YqhRE9Iw6OE88mAyjI6JnpOu/
MvpeLRX3jHiVm8RvZPQgwwY9zb/0SRCjOj9ts6YF941aXXRlJUya8H7yj8Gm
nS5bKXg/6bwYdSKmpRvvJ9NEkmVPLjWA+Iazsjy23PCIwHXljjM1eE/p/eeR
irJSy397ymDZR4hEwXvKqocS0j7vWHhP6bUnachtxwzeU+rtbwsOLJoDwa94
g9Q1hODz3MP1Hn/mQEpkgVtZtzD0XOOlov1zFhD9pOSqizL99hO4nzTSaMbI
gCN4j3l/iG9cWoCJ95h1OuPx1dI03EvSWUw280/uwr0kaXqAbkh8KyD2leYn
WV+S7xQBopeUkHHtzjllb0DsLXenfjMqGHyP95ZbLdZ3Jm7LxXvLlGUCJSuq
H+K95f0LSqUC7PvDoC8PY5YsA+37uSOCpyi4r1S5lkNhP/v8RvSVyhbfC7HY
5ztinykcHhw+fXwA7zOFuaKvswJa8D5zv0d/16fWUrzPvKXlHBP/+Q3eZxZ8
dxqPqUjBPabsl4e7v70vwj2mEKn3xz41VuEe0+nbBerWr2txj+lNVHemjy4Z
95jOu4bZhb2pwT0mvqiik9RHxUhb8YmW/3n2ufXBM7KAbj8aTz1qzlXSAxxG
jBJnTOmI6DVdctLS2BFNw32mtZyHhe5Z9YG/5K2hLdac0NKOZ3RhezMwu+Qt
IjfNBUNojpv+7q4BSbY0xtM4Hpg4V2HxPKsR7z9XkkhrjbT68N6T8qbBo4o+
BYie07ObYNcepTkg1vp3j1CjIAw8LaE4qDKP+01gVWnX4yIa7jWdcDT7Z53X
gXtNLq3NcjLnKwDRa7I6+i00ujwBNIhYD+hZSsG8k5tevelMRnzfA1U/kKTh
3XlJ24mNOXgvWingMXQlNQfvRS1W8aq5SjYAhovbJZE4GVhUnDEk/nAAkC4V
LQu+IAsPnc16GfOB/TqN0B4OqsjBjoznpzQ3MXAPaogvXOuHFRXvRxVczyo4
2BWgVSpHYg97bIDzyZkfqw9UIvUZv8YdPRtgcM7ypDmOWtTS4PNS7iD7fhbw
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
7t1VigpMrSmowr27o7eumo8/q8W9u6Nqv42bARn37jLz5p9/zqjBvbtSrz3C
/tFFaBVYbiO4vQHwWFkvj5TsR9kHJl4rhPeArsOz4SRDOiJ6eMqsnkO8iTTc
v7O8sbA1UqAP7NR1ufriBCfsnRTe6HGiGdQdS/xoO8YF1SUdP3XAGvDiudNK
k2geuD9Xb1govBHvxS9/XWvswOrF+/DuF4tvtzRMAaKXd1xq/OVT6TlgfYrV
XFAtCPO5Ot/yqM/jPt7A2ntHT9bQcA+v5Jihs3VRB+7hUdzmk7hqKgDRw2v0
O8l9aGsiGFKHu5QspKCTp2lt7vVkZPCym35kvTRc1e+yYCicg/flGyim3o++
5OB9+Zfv3IOmN+pBhW0cB+WpDPRNCasgOw0AWmZ7xBV79u/VnrHhwmQ6MJl0
cnu0XQ7aK/NGrdzOwL29zFHa3nueVLw3rzWnh0ctfEWXKv8GFrpvgL3/quOz
tlQimeGRXz5dG2CKxAXq+HQN6mZ/lEP2kyBkLeT7ss8bnI9tsy9lkCCKDf8e
tK8WwY0Xxw2XWoG/svZy5zgq2nDSm3l1ZgDoDs1dcH1Axz2/v81V8Tfed+Ke
3zuXul73lzTAOkE9f1+GC8KiDAGb5jpgu+FczdZybhgj8jdMKLcW79V/iWjP
f9KfBatWjtumzQtAPrcawSWJeXBoYsmdP1oIsmpyCpRT2PeVrIJ8z3wpuHZI
cKuweSaK8rh3VzJEGi7e1zgqGZuLqv0K/3xYkoGnR+brcwVooCG2PkOrQhY6
R+dNWFkwcP/PkoP+aHzHf3t1Xc0ry17+zEQJiyvNfd5tgHcPWhaX8FQjfhPB
iruiJPgt/w25hX1f7pzTODTqQYLXP3J7KLHv08SevVAzIFuUo4b9ez8mvmeu
C5wo6H6whoeOivLky8zNaKDxNDmVY5yG0l58TLn6mQvGfcmREflcAy44Ju+Y
teeBDiEaY9vCG0DlwqPvhcMrYe2Xrsml3N/g9Q3H98qxgrA8bvymHPv5Tuzb
NYzbdm8UYZ8/Um/cO8MjDR1OK0g+N/6E9+5aLfHhboq5aHD2+fLbRrKQ/CQx
lHaCDjzWJw26r5aD5M2S2m3GDNwflMxs+DS4jIb3779S4Jqnrz8j+0jSX466
DfBv8VeXheAaJGu/L396DwluSnIPNWWfx6eHhVbeMfoJ7LqzlskPUtDO6kX5
35sGwCahumVXI+m4V9gjy5P1xoQKvBt4HapGOOH3FV2XJ1UagM411zLNcG4Y
Kzk+O9peAy6/goJ3SwXgP3K0vdXEHIhYccfE3V4IrknNilVtnwPe98XXKrlI
Q9NFifvB7Od/9Z/pb9o0GWg2cOjVSm8qaOmNVDyYIQvR/TDz5v/vP54rFc/3
kYOXktQXx+6zvz/TBo2LXCTY9Xhk19W2WrROT9PW3IkE/ZMXbKs2kVGM7dS2
1Yp9YHD5nVroTke/eCLzzEjcsL9oZceobA2QrKNeWHdSAC4dUCP3u8wBCeC6
aLokCPdnR+SUyc7jfb3hgfHe5Xs6gGX0/sP7tKWh6vjhoML3OXhvf7vD7lB/
UgbqdVwrYXtXFhaTdp88xqADUokax1Mj9n0/TVIsZhkDtO/LYf4d3AA3Zt+e
TDetRfGNuiEbj5Ng28q8jj4TMgo5U9gsntUO3p9J3FmnQkNitH/ptCIKWHV8
xyZnO/a//3+9xT0S3vqf/rbj3uKVZhvOBGEasOlB9lpHuKA430CYVQAZPGo1
a5L7ww1fD69XpdPJoMDtRU7HDkFomzWgrqg2D95eHepf+Y79eZu658l4motq
jwvu2t4nC+8lDo41ss/zJck/vy7IkqBG1/uE2i3s50OmurqfHwl2JGt4mjFr
cX8xWUMxei6xGnW/dDpevLULuD16HSDQRUNP9XcruMVzwaxQgYF3orWg7J6y
eJ+3IKQoSTqlsO/PQdGB70/UScPVsgc5Mo/kIoE9Ra/HeOTgcPTd+1MnGIDo
M/J6cmSt25KH9j7SL01RJcHNS46dew+TUR6XDtIu6welSWvmfrI/n5vFFiB0
44YfjZL2vQ2qAdFXLp87lyIAq1d789xonQNuvOeoGeekobDWm9EFk1zUtmzK
npwoC+l9tO/C29jfn8r+E7pL7O/HUnTPafZ5TeeClhP/BRIsd1cWrdxFRknN
LpfirXqBP4v11o79fvS/l1Cz4ueG4KN7vLlCDdAy3nmJhyYIz3vFm7xk3z+J
/f+TP7qTFrEdwFQqUuLHNmmYLvT77RH7HOwB8PxiRK3elYMGQj3MGddkof6T
FWk1lXSQ33Hkq5COHIzYa3DJS5IBvs3sfdp+mAR3jdhWlB9jvx8y4NCm0xQg
WOIbLe9GR0Q/8hVDpS+89b9+pK3x9+3GWTSg+LyRekaDfZ8djzFfr1AHbnh2
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
TPofHz/CPyDyf5pyUzA=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{4437, 4436, 1418, 1260, 1475, 1132, 1454, 1296, 824, 
            1357, 1199, 1070, 971, 899, 782, 1324, 1166, 1037, 937, 865, 1383,
             1225, 1096, 997, 825, 1358, 1200, 1071, 972, 900, 783, 1325, 
            1167, 1038, 938, 866, 1384, 1226, 1097, 998}}], 
           PolygonBox[CompressedData["
1:eJwVzjsvg3EYxuEnymQyNgxaceiHoGr3as1IdHaY0KShPkBnYWxZfAc9LFbd
tQurpFNTh5D0Mlz5P/cv7/Bmyqe7J1MR8S9HaS6iyGoqYix+8sX8TMTldMSv
fkuRNQr6vZ6lY1/w7fsF/Ur7s+8ocaB1tTwDO8eW9mAv0bWv7Xd3mUf3LBX9
2NvTnrw7/i9hW9+z2/o6r/Yyea1hL9Kyzxj5p7Re1X7sGxL2tY62Qd9eYVNr
2hnads1+cx9ybh/ZL+6EhjvFh173DrVn7wQi1yzn
            "]], 
           PolygonBox[CompressedData["
1:eJwV0LkzHGAcx+HX1egU7vt/2F1X5WaGRtgVDaMLQjKDjh4JZsy49VrB7joK
ZQrMuNPRJq2kiMqzxTO/9/Nds4Pa0am+yewQQhYLJApCiHOQE8InmvmQF8Jx
bggRbvQi07ZHHedVFxOxretCNrz/uz/sc97P3hfusLvv5nPNmM/H3Et7D791
C/22pI5yq5coIWrfsBVxqMdppZQyyon5mU2fF3OkJ2hjwJ6yxbjT35ixPekE
f/Wa/uc9S4Wu01veSbfE3XTf3J+Z/4nP590XPcLnzO+jr7x7+aPbidvSuo57
/Z1K6u3bttLM9+tJOkjYT2z1POhlqmiw79jKSOkpOhm0n9oaeNQrVNNo37WV
k9Zf6OKj/czWyJNepYYm+17m7+ZEf6WbIfu5rYlf+h1JdkUd
            "]], 
           PolygonBox[CompressedData["
1:eJwV0LdLXXEchvHfLYJDCIh7LDFmMCb+CfZZr4kJWTSWIYsaXWyD14KbujjY
EkFigmQJBMRFsCyCYBmFxEEdHGJbHKyfMzw87/t+OZzDyWtqT7XFQwgxjKEu
K4QU7oz3eJYRwkAyhIdECDOoQxEq7N/tBZiSb3jNnpaPoszNvMRPsIMe9zbe
tdfgvz6mX8hfond4X46elgNm3d+iwbaml+Kv/gqVtkX9Bdb1Qf1YbkGv3q7v
ybVYkDNwZh/nS1snfsvZCPZcHrT94RhP8jXPuXXLB/Iqf+RFzsQ23rk38rp9
hcuiZ/iBt/if+yifRt/Jn/kXP43+A4rdq/iHfZkLeZpvecNtSD6RW9Gnd+j7
cgrn+oR+JXchpufpQ3IcX/V6fLJt6OU41F+j2vZTf4lNvR9x5NuHbQl809/j
DRJI4rn7iFsS8/oHlOARK0NLhQ==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{4431, 4432, 847, 919, 1019, 1148, 1306, 757, 1298, 
            1456, 1135}}], 
           
           PolygonBox[{{4439, 4441, 801, 1491, 1301, 1459, 1143, 1270, 1428, 
            1013, 1112, 1240, 1398, 913}}], 
           
           PolygonBox[{{4433, 4434, 764, 763, 810, 850, 922, 1022, 1151, 1309,
             762, 1136, 1263, 1421, 1004, 1284, 1442, 1103}}], 
           
           PolygonBox[{{752, 4440, 4430, 917, 1017, 1146, 1304, 755, 884, 956,
             1055, 1184, 1342, 804, 844, 916, 1016, 1145, 1303, 754, 883, 955,
             1054, 1183, 1341, 803, 843, 915, 1015, 1144, 1302, 753, 882, 954,
             1053, 1182, 1340, 802, 985, 1084, 1213, 1371, 842, 1287, 1445, 
            1113, 1469, 1241, 1399, 914, 1014}}], 
           PolygonBox[CompressedData["
1:eJwVzbkyQ2EYBuBPUMuJ0LsBsnTW1FGIzKBTEFuRuAGtbTRB9Hoitk6ry1iu
QBtN7iFPimfe/32/M3Nmdo6rjVREjLDFRhKxSXYs4o7ieMT0aMQlvxRt71Tt
Jf2QZyZtLQr2KX2FAzpk7Lfk3bL6BT8UbG+s25f1RHZo2D5lX17Jf7dV7335
NPwX5yxRt/dk13cp7inbPmRXHsk9923vP0709vBf3jfk9Ix+xjd52ysV+6Je
45G07Zo5e6IvsMsDE/Yms25p/ZQvcrYX1uzz+gDIDCe4
            "]], 
           PolygonBox[CompressedData["
1:eJwV0ctTzXEcxvGvyynnqDFm+gfMFF20cO0PQIVWOi2SMCGNZjJuCwzKuB2y
YGFTwxQKXRaNZhobG3XKjIWwkhnJyLBxW9hkvL6L9zzP+/mc35lzWdV0dFfb
4hDCIjxF7coQ0vi8JISXCTvuoWppCJNo1ve7NeofcJY/4nn6TZTxfH4xPo9y
2zBq7BV8H/qx3NaJUntedGzGXvQh5XYDJe4p3oEprLUNYad9E59DJc/ikK2R
P0SSX0exLclP6X9wm//idfo7nODtvEX/iit8kv/Tu/UyOSYH5Q650e21XIEh
tNq/I6N/cgvyLrbZnskJeVDucXsVPwv6o9ufyxl5Rj5wz8q//I5cJkdlRq6J
7j4tCzCCk/YJ+Vvekj/dc+L7IG17i+P6BXu+HMBh2zwu61n7gt6ll8oBbNc3
2I/o33CNz/Kt+jgO8AbeoL/HaX6f58bXYjXP5T9Qy9/gmO08b9a/4FL8TXiJ
/gTVfD3/iC38BZpsu3lv/E78KopsOfwcxlFse4wq+zpejx4k4n+IQnuC/wcu
dVqs
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1ne8z2UchvFj7713yN7aey+ljDKa0h6iaClR0bDSJmXv0Q6VBqGIQksl
tJCG9la971d/XN2f635+Oud8v8/znNOwb/9uVxUqKCjYXbigINlS3mF4SxaW
j8vS+AyTrI+Vu/Sb5MXyVVkXva31l2/qTsAic2V8rp8q9+huxD68C19gbo4V
fDz/2TwAQ/mt/BNzb/zCaUEr/7mTF8Fkfib2RVf9Ql0LrOTDUASt9XfpimIK
Pwv7oSjaWLtbXwxT+dnYH930j+taYlW+DxRDW/1IXXFM4+fgAHTXP6Frhdf5
bSiOdvpRuhKYzs/FgThd/6SuNd7gt6ME2utH60piBj8PA3Rr+Yn4gh+EM3RP
8TZYzSfwX8xXY3i+Pt9iPhNLzTXxq362LIKh+jWyKUrqO8gxurdlKfmELIOZ
1u6RX+s+lJfIZbIedqKP9avlOv278iS5WFbBdnxpfZr8R79FDs7zkY3z/8TB
1nvIp/UbZFv5tCyPNdYeyfetuwYj8pz4VvNZ+I3P4UUxjJfiHc1jzaUxi4/j
35gvxfn8Gv6WuRO280PQU/cMb4c3+R0YrtvGz8bvvDT20d3Dy2A274tD0Uv/
rK491vI7USZ7Uj9OVxZz+AUYqHubn4wd/DD01j3HO2Advwtls0f19+rKYS6/
EIdnv+sX6TrmbPK7US77Vn+frjzm8YtwRPa7fnHOW94vH4ny2bf6+3UVMJ9f
jEG69fwU7ORH5kzolvB9sZ6PQoXsY/0DuopYwC/BtboNvDO+4kfljOie5/vl
HfPRqJh9rH9QVwkL+aU4OmdE/4Juf2zkY1AJB+sf0lXOXcQvwzGojCqoimp5
pz73sM9UyT7ml+NYVM/7sjZeXxVP8itwHGrkXViboK+Gp/iVOB41UQu1UQd1
US/vwucf8dnq2bO8H07ImdW/qDsA7/CxqJ93oZ+oq4Fn+FW4TreRn4pd/ET0
0S3lB+ZM5fxhhO5Tfg7+4A3ybnSP8pp4lt/LvzVfhv78ev6O+TR8zU/C+bqX
+EF4j0/kv5kHYlz2fu5387n4k8/lxXAr3yvv0/yYuVaen7ls9q7+Pvmd7nIs
N9fHAP0N8l1dFywxV8151E+X/+q2yptyB8q9s4ZOOVvy5bz/3BF5XrICvsD7
1h+Vv+s/loPkCrkXvsqZyRnM75v8jPI8+ZKshb+szZPFcVvOu2yGhtl7cpKu
Nhbx+/lu8xW5V/mN/D1zV3zLT86Z1r3CD8EHeQ5olH2pn6yrk/sw9w5OyRnW
v6o7FJvyNdA4+1M/RVc3z4k/wL83X5l3wwfn5zZ3w/Pmanne+hkyvxS34WZr
q2WT7AN0zh0gl2UfysOyT2TF3Mv40Ppj8g/9ZnmtXJlngV0527mL8sz17+eu
ly/L2vjb2nxZArfr9845Mk8118v3yB/kP5j7YRC/iX9g7o7d/NTcObrl/HB8
lH+T+yzfX+5r7OFNcg5103h9vJB7BqehKZrl3Fmfbq0BXsy5QpfcSfrXdEdk
r/CH0DznTD8jexpLc1bQNXeQfoXuyDwT/jBa5OzoZ+oaZi9lX+Nm3SZ+Or7n
3XIn6Vbyo/AJH4+W6KSfpWuUZ5i9hCF5B/wM/MC7567SreJHYwufxP80X4cJ
fCTfbu6Lf3ir7EPdbN4Yr+Rn5D+a88fcYH4L/8jcI8/OXD3r+pmyEIbkZ8hd
aH7dfAyeM1fCVv3knJv8PPJ6uUo2yt1nbZTckb0vL8jXl3XS5XxbXyBL5u7C
cOtrZfPsXbTOmZBz9Otz/nPvynI5uzknef7yp+wN2V++JhvkzrA2VH6s65l3
bq6Rz+pnycK4Jc8297j5DfOx2ManZP+ab8BEPprvNF+I/OHbRnTWzTU3wbK8
awzTbea98DPvkTtft5ofh09zL6Ft9rZ+nq5p7sO8a/REO7RHh+xfn5lvvVl+
rrwn9MrvBf0a3fH4LGcUY3K38YtQCAt5KYwwr5MtCv//d3tHn/0P61t0nA==

           "]]}, Annotation[#, "Charting`Private`Tag$280907#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8lXMYxvHTpr2nlpWVGSXtXaT60bSzkwYVimSTpnbZhIwUkWRk7+w9
s7e00/K+/vi8rvu67ud3zvN7zve+n8aDhxcNK1YoFP4uXiisxaYShcItuKRU
ofB5yULhWTqQLqRl0EPvJPqsrBU+5/dEK9ntfH08zV+Ef31eTfmlss38DByL
vdBafoe8AVbyF2Od62vJL5Nt4WfiOOyNNvI75Q3xDD8K611fWz5WtpWfheOr
FAo96cny5+St8QW/D9rK7uIb5f/iR2ODz6gjHyf7j5+dz8ApsudlbfAlvy/a
ye7mG+M5/kp+jfoMjOGH8qvVx+MudQn8IZ9E/5a9Qnu5v+HqJeqq2Oj769LL
ZdtcOwe90Nt1Tegm/c3Ygnquu8J12+Vzcw32Q3v5PfI98Xx+O2x1/R7y8bId
/Dz0wamyVbK2+IrfHx1k9/J7YRU/gf9ePRiL1OXyG8ovpO/m+dM+7q+X+m51
SfypP5n+IxuRZ+n76/NXqnfqzUcRDsA2ve0o8hk76E40cO0E1+7SX4ATcCA6
yhfK98Y89Tb6gvwq9Q+p6Zn0QVo+95fzoz+Mvifvjb/4Kfxa9ch8h+9ryF+l
LuBW/RNxmuwFvh2+5g9CJ9l9/D54kb+a/1F9Fsbyw/n31X1wj7pUfmv5VPqv
7CIsVVdDQd6IXi1bRovRWXQzvU3vUvUXOVt0EL2P7oa30Vf/dPqifAVtn7+h
u+gb9Bv9G+hvuU96Pn2YVsxzQFP9zvR++XK6L51Pt9OX9K5R/6Q+G+P4EfwH
6iL8w0/j16kvRjG+MX+Nujhu5/vhDNlLfAd8yx+MLrIH+CZ4mb8cxbMz5NfK
SuAOvj8OQQmUzI7Qv06vJO7kB+DQnAtnplR2gv71eqUya/xAHIau8kWy/TJv
/BUonfmX3yArnTPLD8Jg2ct8R3zHH45usgf5/fEqfy3/s/ocjOdH8h+qT8Ba
vkx2g+xGvkzOAH8Z/6X6pMCfyb+i7oQ1/I387+ohOILvzj+kPgAL1Dvoa/Lr
1L+oz8VD6gqZp+xW+pHsRNyrLp2zJp9O1+e+6Sj6GK2e3zHnSL8JvUn+RDyd
TbfkuzL/+mPpV9kh9GR6P90d78Trn0VfzX6nnfO750xnV+jdlF0nuwCPqCtl
LtBMrwd9WP4UPTDzRnfS1/WuV/+qPg8T8h7gP1b3xbq8i/gN6tHYPfuOn5ga
C7OncbbsNb4LfuCPzHtG9gh/UOYj+wJls+/kN8vKZr6yD3EUyqF89pP+JL1y
+f+zE9A87yH5YllTvJk9gArZUfLJsvJ4gB/Hf60+Bafz5/Cvq7vmnGfm8WZ2
SHaOszwxuzMzSIfSxbQyWuj3pI/KDsZbmVFUzF6ST5FVwKLMHc6VvcF3w0/8
0XmPyZbwh+DtnGVUQlP5VFnF7M3MAc7LffHd8TPf1721zLtIvlR2KN7JmUTl
zLZ8mqxSzmbOOI5Blcyx3nR55eygnBu0Qm/5Y7LDsDq/PapmruW3yKrk7GRH
ZJ+pT80+4s/n31KvpD2yD2jxZJmPvJdkrbP/UA2L89xzBuS/0ptd91f2Dx1G
H6VV0EavD31cdjjezWyienaJfIasaq7P80Vb1Mie0Jspr4YleXZohyL5ssw0
3stMoCaOkM+SVUc/z3Vp/ie0zz7Te0LeDO/zEzFK9kmuxXq+FprJZvM1MEe9
NfOd/ab+Vr2KnpYzSMtiNYboD8n7Q34cfuM75NzJnuSPxAd5PqiduZHPkdXE
4/wF6Ig6qIt6mRXXzNWvhWX8UHTKeZEvlx2FD/lJGC37lO+PDfwMfqN6DPbI
XPHz1E/S2nQu/S97Ic9Efzz9LnOEC3M/2UXqnvid74x+sqf45viIn4z6aCGf
L6uTz+eHoQv6y1fIWuBjfgoaZF7kC2R1sZwfjq4YIH9adjQ+4aeiIVrKb5XV
y17jR6AbBspXylriU34aGmU25Lfl/8YKfiS6Y5D8Gdkx+Cz353xMp2Pkn8kG
YCM/k9+kviS/jbpG3kNorPc/eqF3sA==
           "]]}, Annotation[#, "Charting`Private`Tag$280907#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$280907#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
FHft/ww+N1s=
           "]]}, Annotation[#, "Charting`Private`Tag$280907#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
b/7DuIGxjs/8D8VeSKk=
           "]]}, Annotation[#, "Charting`Private`Tag$280907#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 9.999999795918367}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8654474099795275`*^9},
 CellLabel->
  "Out[300]=",ExpressionUUID->"0f56444a-5d44-4e7c-a35a-9ff38e9907ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate Robustness of MPC Variant wrt Model Mismatch", "Subsection",
 CellChangeTimes->{{3.866046972536893*^9, 
  3.866046989974267*^9}},ExpressionUUID->"5bd1fbeb-86ec-47eb-b2f4-\
64cad2ea694f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "20"}], ";", " ", 
  RowBox[{"\[Tau]", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"\[Tau]1", " ", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";", 
  RowBox[{"order", " ", "=", " ", "5"}], ";", 
  RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
  RowBox[{"uBound", " ", "=", " ", "2"}], ";", 
  RowBox[{"maxCount", " ", "=", " ", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", " ", "=", "10"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "M", " ", "is", " ", "the", " ", "no", " ", "of", " ", "times", " ", "the",
     " ", "solution", " ", "will", " ", "be", " ", "recomputed", " ", "in", 
    " ", "time", " ", "\[Tau]"}], "  ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", " ", "=", " ", "0"}], ";", 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AError", " ", "=", " ", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A2", " ", "=", " ", 
   RowBox[{"A1", " ", "+", " ", "AError"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxErrorInitial", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MyAppend", "[", 
    RowBox[{"f1_", ",", " ", "f2_", ",", " ", "T1_", ",", " ", "dT_"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f1", "[", "t", "]"}], ",", " ", 
            RowBox[{"0", " ", "<=", " ", "t", " ", "<=", " ", "T1"}]}], "}"}],
           ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"f2", "[", 
             RowBox[{"t", " ", "-", " ", "T1"}], "]"}], ",", " ", 
            RowBox[{"T1", " ", "<=", " ", "t", " ", "<=", " ", 
             RowBox[{"T1", " ", "+", " ", "dT"}]}]}], "}"}]}], "}"}], "]"}]}],
       ";", "\n", "    ", "f"}]}], "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xs", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xdots", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "[", "t_", "]"}], " ", ":=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]dots", "[", "t_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Js", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorInitial", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxcountAlgo", " ", "=", " ", "20"}], ";", 
  RowBox[{"maxJ", " ", "=", " ", 
   RowBox[{
    RowBox[{"uBound", "^", "2"}], "*", "\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"errorInitial", " ", ">", " ", "maxErrorInitial"}], " ", "&&", 
    " ", 
    RowBox[{"count", " ", "<", " ", "maxcountAlgo"}]}], ",", 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}], 
      "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"ffCartPendulum", "[", 
        RowBox[{
        "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A1", ",", 
         "order", ",", "maxIter", ",", "maxError", " ", ",", "uBound", ",", 
         "maxCount", ",", "maxJ", ",", "initGuess"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
        "u1b", ",", "J"}], "}"}], "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"testWithFBClipped", "[", 
        RowBox[{
        "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
         "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A2", ",", 
         "uBound", ",", "K"}], "]"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    RowBox[{"ICs", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"xdot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", " ", 
       RowBox[{"\[Theta]dot1b", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"errorInitial", " ", "=", " ", 
     RowBox[{"Norm", "[", 
      RowBox[{"ICs", " ", "-", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"initGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]1ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]2ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]3ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}], ",", 
       RowBox[{"\[Lambda]4ff0", "[", 
        RowBox[{"\[Tau]", "*", 
         RowBox[{"1", "/", "M"}]}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xs", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xs", ",", " ", "x1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"xdots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"xdots", ",", " ", "xdot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\n", "  ", 
    RowBox[{"\[Theta]s", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]s", ",", " ", "\[Theta]1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Theta]dots", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"\[Theta]dots", ",", " ", "\[Theta]dot1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"us", " ", "=", " ", 
     RowBox[{"MyAppend", "[", 
      RowBox[{"us", ",", " ", "u1b", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"count", "/", "M"}]}], ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Js", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"Js", ",", "J"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"count", " ", "=", " ", 
     RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\t", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "count", "]"}], ";"}]}], "\t", 
  "\[IndentingNewLine]", "]"}], "\n", 
 RowBox[{
  RowBox[{"p1a", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]s", "[", "t", "]"}], ",", " ", 
       RowBox[{"us", "[", "t", "]"}], ",", " ", 
       RowBox[{"xs", "[", "t", "]"}], ",", " ", 
       RowBox[{"\[Theta]dots", "[", "t", "]"}], ",", " ", 
       RowBox[{"xdots", "[", "t", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", 
       RowBox[{"\[Tau]", "*", 
        RowBox[{"1", "/", "M"}], "*", "count"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", " ", "4"}], "}"}]}], ",", " ", 
     RowBox[{"Filling", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"2", " ", "->", " ", "Axis"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", " ", "\"\<u1b\>\"", ",", " ", "\"\<x1b\>\"",
         ",", " ", "\"\<\[Theta]dot1b\>\"", ",", " ", "\"\<xdot1b\>\""}], 
       "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", " ", "->", " ", "\"\<Test on dynamics\>\""}], ",", 
     " ", 
     RowBox[{"AspectRatio", " ", "->", " ", 
      RowBox[{"1", "/", "3"}]}], ",", " ", 
     RowBox[{"ImageSize", " ", "->", " ", "400"}], ",", " ", 
     RowBox[{"GridLines", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"None", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p1b", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", "Js", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1a", ",", "p1b"}], "}"}], "}"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8636129749443583`*^9, 3.863613015823305*^9}, {
   3.8636130614177456`*^9, 3.863613061548704*^9}, {3.8636131046759324`*^9, 
   3.8636132169600773`*^9}, 3.8636132626354933`*^9, {3.863613317299037*^9, 
   3.863613325712351*^9}, {3.8636133602393255`*^9, 3.86361337832655*^9}, {
   3.8636134419612303`*^9, 3.863613443723667*^9}, {3.863613482179388*^9, 
   3.8636134827971907`*^9}, {3.8636135381195245`*^9, 
   3.8636135797742233`*^9}, {3.8636137397741327`*^9, 3.863613792025447*^9}, {
   3.863613833875084*^9, 3.863613859543887*^9}, {3.8636139070307236`*^9, 
   3.863613990162178*^9}, {3.863614052505271*^9, 3.8636140526672187`*^9}, {
   3.8636142755400505`*^9, 3.863614275735988*^9}, 3.864135358210206*^9, {
   3.8641356231244707`*^9, 3.8641356617179823`*^9}, {3.8641357036993933`*^9, 
   3.8641358101259522`*^9}, {3.8641358445638046`*^9, 
   3.8641358446887646`*^9}, {3.864135959424633*^9, 3.864135969935231*^9}, {
   3.864136047012286*^9, 3.8641360688712134`*^9}, 3.8641361082124805`*^9, {
   3.8641495465703897`*^9, 3.8641497074443254`*^9}, {3.864149799709464*^9, 
   3.8641498203557825`*^9}, 3.864149994860308*^9, {3.8641501178305116`*^9, 
   3.8641502460979977`*^9}, {3.864150355668539*^9, 3.8641503880850477`*^9}, {
   3.8641522848461933`*^9, 3.864152322656956*^9}, {3.864154041279755*^9, 
   3.864154071830866*^9}, 3.865342703619191*^9, 3.865342735583974*^9, {
   3.865342789927601*^9, 3.8653428432655497`*^9}, {3.8653429134781046`*^9, 
   3.8653429645057917`*^9}, {3.86534299882582*^9, 3.8653430048109074`*^9}, {
   3.8653431484289956`*^9, 3.8653432440684214`*^9}, 3.8653432786813564`*^9, {
   3.8654445628110285`*^9, 3.865444854999589*^9}, {3.8654460068932247`*^9, 
   3.8654460262340384`*^9}, {3.865446091527158*^9, 3.8654461690943527`*^9}, 
   3.865446407415139*^9, {3.865446495838863*^9, 3.865446498184112*^9}, {
   3.8654465674349675`*^9, 3.8654465724783535`*^9}, {3.8654466065404625`*^9, 
   3.8654466115468607`*^9}, 3.8654466634402647`*^9, 3.865446720697957*^9, {
   3.8654467597504654`*^9, 3.86544676421404*^9}, {3.8654467999786024`*^9, 
   3.8654468188955517`*^9}, {3.865447093827633*^9, 3.865447120448118*^9}, 
   3.865447150475517*^9, {3.865447183594925*^9, 3.8654471988060617`*^9}, {
   3.8654472349045167`*^9, 3.8654472349734926`*^9}, {3.86544740159221*^9, 
   3.8654474199253473`*^9}, {3.8654474644860983`*^9, 3.86544746739017*^9}, {
   3.865447584859602*^9, 3.865447593586812*^9}, {3.865952499809149*^9, 
   3.8659525292967024`*^9}, {3.8659525819378333`*^9, 
   3.8659525893724527`*^9}, {3.865971536327427*^9, 3.865971615231144*^9}, {
   3.8659716506068087`*^9, 3.8659716545185547`*^9}, {3.865971738635604*^9, 
   3.8659717394583387`*^9}, {3.865971771360116*^9, 3.865971773325487*^9}, 
   3.8659718432830696`*^9, {3.865971878869669*^9, 3.865971881703761*^9}, {
   3.865972099999814*^9, 3.8659721093028316`*^9}, {3.8659724284015865`*^9, 
   3.8659724335579348`*^9}, {3.865972467781967*^9, 3.8659724678729377`*^9}, 
   3.865972527892706*^9, {3.865972575741376*^9, 3.8659725758223476`*^9}, {
   3.8659727852052574`*^9, 3.8659727853102245`*^9}, 3.8659729110299406`*^9, {
   3.865973909258086*^9, 3.865973915857973*^9}, {3.866046878808134*^9, 
   3.866046926929607*^9}, {3.866047001093678*^9, 3.866047039702221*^9}, {
   3.8660471109532323`*^9, 3.8660471110941877`*^9}, {3.8660471705050197`*^9, 
   3.866047173520045*^9}, 3.8661406529053097`*^9, {3.8661406905133476`*^9, 
   3.8661406905993204`*^9}, {3.866140819599299*^9, 3.8661408196882687`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellLabel->
  "In[2575]:=",ExpressionUUID->"8e38cdaf-ed5f-437a-9ced-be5bff917c65"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.8661408215966625`*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"587803bb-4dc9-493a-97a2-8b790d9f9e50"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.8661408249905834`*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"97f83979-f181-402b-9661-11dc2e56e2b9"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.8661408280226183`*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"1b90740d-e88c-4211-8a86-a7b852066073"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.86614083116162*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"b85a4f09-5907-4fb2-8592-2125766bfdff"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.86614083358285*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"e0beef7b-bb73-4cc6-9839-0ba3677ff22c"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.8661408339997177`*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"dc6d36a5-f210-46cd-917a-54df844a5a15"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.866140837488608*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"c0906446-a437-4fa3-b995-3b6f8588d4a2"],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.8661408405366383`*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"966e558e-e7b5-4333-902f-dd778b599a57"],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.8661408409705005`*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"4e103d9d-83b1-488a-8686-3d7964e9d5da"],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.866140844460391*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"ae3516b7-eb0e-4a73-b86d-5f5f8924ad6d"],

Cell[BoxData["11"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.866140847339475*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"ad1f30e5-a0fc-4300-8501-d7b3841d2842"],

Cell[BoxData["12"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.8661408516640997`*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"49eb22c4-12b3-49c8-a536-c91344fc8377"],

Cell[BoxData["13"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.866140853027666*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"d798264f-21ee-4c8f-a924-938d9a3f2843"],

Cell[BoxData["14"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.8661408557777915`*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"557116c8-3535-466b-8ceb-774a5e92fc20"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.8661408562346463`*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"bcb809af-e314-4957-9f47-8819c449f159"],

Cell[BoxData["16"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.866140859847498*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"a5ee778d-83b8-47cf-9528-05ba26be89ce"],

Cell[BoxData["17"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.8661408630084925`*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"2fbdd6e2-8c70-467d-910d-518f93b04c07"],

Cell[BoxData["18"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.8661408659025717`*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"3af0e7a1-7783-459e-9058-4b07a9ced52a"],

Cell[BoxData["19"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.866140868798651*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"3b1e4bf2-ec53-4d42-8c72-cb23ca94f381"],

Cell[BoxData["20"], "Print",
 CellChangeTimes->{3.86604704829045*^9, 3.866047112761648*^9, 
  3.866047175453421*^9, 3.8661406576268063`*^9, 3.866140692089847*^9, 
  3.866140870731036*^9},
 CellLabel->
  "During evaluation of \
In[2575]:=",ExpressionUUID->"427a13f2-7423-4c33-a96b-357cab880c71"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
0Ok5eU8oC33//M/nu9BwpGnPIQrCPh+OD/t8n07au9nm9APs833PvOd+OzkW
YJ/P+oBs2KB+PuHzcWwZrWNwLCJ8vi6P7Ncuf0oB9vmM9yZ7vjB6ArDPJ8ej
Gb4tq5Dw+Sz/fDxba14IsM83+izz6XGNYsLnG8y9ZGa7rYrw+ZjqtfRL13oJ
n48KOq7tvjeGsM+H48E+n1VGq+rzrb2Ez7dqbvpA830Bwj7fnniPB8/K+hH2
+WKi8/NjTnUj7PMdOVJuLPudgrDPd9h2IH/Xy0WEfT48Hvb5+nbLbNE9NUn4
fB3H3hvc/FBM+Hx9sXahW3b3IuzzlT1L07q5fRJhn8+0/037clgTwj6fifBw
o/GLUYR9Ps2ZtA+LYhOEz6fz0GEs+3Udwj7fTpd65jGuSYR9vuYdO7ri+msI
n08nPHdwOagHYZ9vWf/63QdPpxD2+aAl+1jnWRrCPt8j5h2tM2gBYZ8Px4t9
PqZbXC8TCmYIn4819q3UCncZ4fNtkf10MAx0I+zzzb5vNfxYfo3w+a6vhK/M
irQTPl+BILd+zrUBwud7xr39NLNoLsA+n0ZNQJEEexfh83Hr+xX1sVEJn890
L7PL8Qs0hH2+0Y3ORkd1aajfmiFyQZcMB7nIn0UEaQh7fZdeea8oh1IQ9vrO
qoI2o7tUILKnVaC6rAH4hLNPHDlTC7DfJ8v/8HXexkzC78tHV85vnS8g/D5/
16yuGaESwuubUNWz9ZhJJLy+xzwiofdC6gD2+mCTOoePgQfh9XnlfCiTph/5
2Ou7UFAfz/m2DcmVKR84LMoMG/1+Gi5kDBF+H54P7PfRopRexKrQCL/PwfPb
xjn4j/D7EmI2cMtMtiHs9707X3dD4O4own5f3/LjxeCqcYT9vg2NjaYq7nMI
+33EeP/z+5QXQhYqDiwTfp8h0xshZv4msGuAA14MFIBWmS1rOca1CHt+9S4X
V3epjCDs+c0fkGQOsApE2PPz/ZVwfo7ah7Dnx/12p2Sf3xTCnt+7K7bz1KAK
wvNb2v2C51FGP8KeX9uBveXaChOE58ck8uPdqwt/EPb8Dig3loTYjCLs+b3U
bpYZ/0hB2POjIh/VOK95hD0/HC/2/O5rV1/q6lsjPD9+AYcvxwK6gH/3oI5U
sQx07NputU2rCmHfzyw64mBK1iDCvt86yydq7G01CPt+ps/+3Sxd7iF8P7cz
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
e6vv0tt+daqNAuyteg7RKk8+6wXYW+2rfbU0qFJPeKu/vHvll1Ehwt6q49S7
RPukIoS91ZBte7wlznYD7K3Kqdb7+OYPA+ytDoW+SDhrPQqwt8qiyxs82d4P
sLcaUROVMzVCA9hb7fVni+ZrbwLYWz01u5b3tecr4a3+c/sxb5lGAdhbTcwi
lQbREeGtdv+gMZ3LqQXYW63QeMUZ6kkG2Fu99DIjVA18ILxV5YWvmxhMWxD2
VoNjRe+zlIwi7K2e5jtsdMWLhrC3yiwqxrV1+C/A3uphiUHN1NxugL3VmU9+
jCscfQB7q2SKW4Q5UwfA3urZ0yfG2YQbAPZW73/bkrzVKxNgb5XHM60ozOob
4a261ZiPCgWnEN6q3MLK7YcMTQh7q8YZt/cejR1G2Fu9IHo94ubvWYS91cOc
Wmc1TZcQ9lbvv90kWqe0grC3qvG+yedZywrC3uqs3aZY7rPNAHur8StGWj3q
AwB7q7199qlR1gMAe6vG2wD5aVQvwN7qdILV742+VIC91Zwh2yN3m9oB9lY/
H/EUJG1rIbzVQJOX+ZcmKYS3+mGpJTW6gUJ4q071ejMl/8oJb9XZo3xBKiCa
8FbZO1McbrtUIuytZqymNv1n3oCwt2rC/+dRiiSV8FZDx0X1zzSPAuytPi8/
yHk2aBxgb7Vz14XI37cGAfZWkwc+/nOK7iK81d/nUkRGUQbhrUormuvT6W0I
e6t+itkv77JXE96qWUyNA//bAYC9Ve26VR2NplGAvdXawynjV0eHAPZWuWFd
48afNIC9VS3+o3zdZV0Ae6tGPHleRW4VhLdq/vh2TL1sLcDe6u4/wvkbLWoB
9ladmYMMnu5JJLzVAf3gvR84GgD2Vh0fTVrPq5cC7K1mxF0BTB3FCHurHm4V
+X/29CHsrbZJdqo8XB5F2Ft1/fv8wPXkQoS9VbPXyVWhsB1gb9Uul6QUINIH
sLe6UcmXfWNCN8DeqiDn1fj/eJoB9larUvTuu8VVAeytXm2z5TIc+Ul4q1e2
cYhWSIYS3ipf0ZsXYSLlCHur4/t4RNuUehD2VvlqNdfg/CTC3ur4+NqNhsp5
hL3VE9uLD68GLiPsrZ7fE3Lz2tsVhL3V0FhEPSJeDrC3KtXY0w8i+wH2Vree
1AmQWxoA2Fu1VNu4ePlzH8DeqnrjlS37P9EA9lYl6z7+t6jTAbC3mhYWdY9+
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
Z8n+2AJAv1fMrUbe1IVNoN/LH3ig9iuAR6DfGxVwy8RGOZdAv/fV1iTKzrBG
QL93efQKv2VKbEC/99uQa9vvABag3/vrdKxM5axaQL/3FuPWjs1qZYB+7yol
Sb1j/h9Jv1f4Z3b4pc4w0u/VPah2sCiumEC/12ruOgWNpX0E+r2N4gFj25kj
BPq9WcvXb/ANmyDQ761z9RITejFJoN9b+GdL9JePJYB+r5Ct3fotOe2Afq/z
96f6N6bre9yIVbK9aC+wexbPXKXBAPs4MFtzcAAmMmsEDhvVA/q+fx1mfDkh
QSd9X89bMIfjRIeruz3qpjb9hbZDVkpFbuWk91vdsO/nHfZn0vudGZRiYSbZ
TKD3O/RqjrelDZ30fl9cTNU+tbkL0Ps1iMvQFpzkA3q/k823fdaYdQJ6v/qE
dk54KpP0ft2EdZ/13KcR6P3e8pI9fXFhO6D3O1ntRFm2kgfo/c43C9jWcbQL
0PsNu2d6W3V3G6D3O+ZhtFtwORPQ+xV5yo+v8CggvV/TVQ9V+t9TAb3fXbUd
SRNnI0nv19x177LSWXRA73elTRTlbXw5oPc7oepDoTb3EOj9Jroxyxs2VAN6
vwyj0mcd0/UJvd9GE0+dxIVtgN7vts9CS33VawG9X21G+Kp1S6mA3q/aRwWu
42QAoPfL1I0wZXkHkd5vxttiuZtGOQR6v1lLpq7XOQ8T6P2GMuOLmLITxIyX
lp9sEldQem7tcXU7P0mg/xsjl+vRMdQC6P/6XbqWYzKfC+j/6uxc7L+T0QSX
rwp/0o/qg23HDhy/uaUR0APe0vJs9exIOjyPTshS85mAbNf+bss0KukDh/+5
EF3Rmkf6wG49b3KqX7FJH/hv6IesQVo3oA9sX2tk2+7TDegDW/m6luYvqid9
4MsZ58Is5GsI9IEd7TIGRGMbSB/4iod7Z3NIB6APbKR+9iargwfoAbfO2/5E
Zh4L0AM+baxYcXiyAdADLll+c+Gvju+kB3w2SlFznjgN0AN2Yfz9u6CzCNAD
lms56qm+vQjQA1Yyc06+eGW6H/7nAXsU6DteTvwP0APe6Eh5dz+jBdADjjHw
fqk03S+jB7z+0fSI+aEF0AOedzp0QJhVDegBz5zRJjz/VhrpAW8LSL5oFBRL
esD3Z/KIuNxKAv3fLSfi4wu0xgj0fxnm4/O1+iYI0v/te/g+KnOSQP9XbLvv
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{6283, 6282, 1330, 2149, 1893, 1679, 1522, 1427, 
                1281, 2105, 1849, 1635, 1477, 2254, 1999, 1788, 1380, 2192, 
                1937, 2357, 1725, 2318, 2065}}], 
               
               PolygonBox[{{6285, 6284, 1429, 1283, 2107, 1851, 1637, 1479, 
                1382, 2193, 1938, 1726, 1569, 1333, 2152, 1896, 1682, 1525, 
                2270, 2015, 1804, 2335, 2083, 1430, 2226, 1971, 2360}}], 
               
               PolygonBox[{{6295, 6294, 1302, 2124, 1868, 1654, 1497, 1401, 
                1352, 2169, 1913, 1700, 1543, 1449, 1303, 2125, 1869, 1655, 
                1498, 2259, 2004, 1793, 1402, 2205, 1950, 1739, 2319, 2067, 
                2380, 1582}}], 
               
               PolygonBox[{{6291, 6290, 1346, 2163, 1907, 1694, 1537, 1443, 
                1297, 2119, 1863, 1649, 1492, 1396, 2200, 1945, 1734, 1577, 
                1347, 2164, 1908, 1695, 1538, 1444, 1298, 2120, 1864, 1650, 
                1493, 1397, 2201, 1946, 1735, 1578, 2287, 2034, 1825, 2343, 
                2091, 2392, 1348}}], 
               PolygonBox[CompressedData["
1:eJwVzr8uQ2Ecx+FfyikmBkMTEc5osamlp4sraGkvwKB/Bi5BGzuJSggrG4te
gVqwEAkXwAUwkQ4Szxk+ec/3ad+ck27v1XcLEZG3qotSxLlqSURvWlMR18WI
Wd2yOzZiX/amllmDNdi+/WEf6JJdsVe2pjrrsz67sec0ZCN2z77tLaWsyZqs
ZxdmIhL7k78533nGJpyLzpTVnEe++VDznktsw90f59j/VjTpfsWueN7x24Pd
Ulkd3uGD/I59qkQZz3iLP9ptravLu/yE/9pnKqrKq7zNn+xn+8X+sxd811L+
Hn7sHPAy+weIsi7w
                "]], 
               
               PolygonBox[{{6301, 6300, 2213, 1958, 1747, 1590, 1363, 2178, 
                1922, 1710, 1553, 1460, 2243, 1988, 1777, 1621, 1314, 2135, 
                1879, 1665, 1508, 1413, 2214, 1959, 1748, 1591, 1364, 2179, 
                1923, 1711, 1554, 1461, 1315, 2136, 1880, 1666, 1509, 1414, 
                2215, 1960, 1749, 1592, 1365, 2180, 1924, 1712, 2311, 2058, 
                1555, 2278, 2024}}], 
               
               PolygonBox[{{6293, 6292, 1445, 2233, 1978, 1767, 1611, 1299, 
                2121, 1865, 1651, 1494, 1398, 2202, 1947, 1736, 1579, 1349, 
                2166, 1910, 1697, 1540, 1446, 1300, 2122, 1866, 1652, 1495, 
                1399, 2203, 1948, 1737, 1580, 1350, 2167, 1911, 1698, 1541, 
                2274, 2019, 1809, 1447, 2234, 1979, 1768, 2325, 2073, 1612, 
                2296, 2043, 2373, 1835, 2348, 2096}}], 
               
               PolygonBox[{{6281, 6280, 1820, 2341, 2089, 2390, 1326, 2146, 
                1890, 1676, 1519, 2268, 2013, 1802, 1424, 2224, 1969, 1758, 
                1601, 1277, 2101, 1845, 1631, 1473, 2253, 1998, 1787, 1376, 
                2190, 1935, 1723, 1566, 1327, 2147, 1891, 1677, 1520, 1425, 
                1278, 2102, 1846, 1632, 1474, 1377, 2191, 1936, 1724, 1567, 
                1328, 2148, 1892, 1678, 1521, 2269, 2014, 1803, 1426, 2225, 
                1970, 1759, 2323, 2071, 1602, 2293, 2040, 2372}}], 
               PolygonBox[CompressedData["
1:eJwVz70yA3EYRvFXZnwEFTOG0OiZoTJuAbGb7bQugJps4jaoJApkgjsQV4CG
zkchKm6AYSa/Lc7833OebXZxdz/bK0XEEHZwMhtxjI3hiPoYRiPORyLK6Gpz
SPREP9BeeI5TraXdayvYLLqWaxd8HB+8z6dwZb/lPfd6OeLLPuOtaNvehP+4
/+xLqPg+5an70PbKG9gqXr2hX+oTuNbmUdNrel174020tLb2oK2iWnStqXX4
JPr8k0/jxt7jd+5vW4pf/s+XsWDPeObObe/8iT/zEo54m5+51/zXo28GCGsx
Dg==
                "]], 
               PolygonBox[CompressedData["
1:eJwVzrsyQ2EYRuEPE+LUKxRRoFYLJoeR1rgBM1rZh9wJM5I4uwrRo0W2W6A2
o3V+Uqz59lrvX+yl/Ww3HY+IMezhaCHiEI+liDaOyxHdqYi7yYhlrGuJlmh9
/skvMIOaXtMP9KfRO1SR6ql+on/xS9xoA+1V28asVtfqWpvHdMQEf9aHbqFX
tV/bolvRdtzU3vXds9/bVrChZVqmnfJvfoU5NPSGnujD0TtsItdz/Uz/4dcY
aLfam9bCvNbUmlrKC17wF/7Hc97jff7AV/HOP3gFW/YO7/he8+/n9pJb1lru
PxQbMs0=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0slOU3EcxfE/KKWImmgE20ZJNCCgQQFdiRoTE6MrExNF2gKJD6AvodBS
fQXjVgYTRxyXMrm30wPItFHKsFDxcxcn53zP+d2WXHri/sPbD+pDCHVUpTMN
ITxPhPCM7sqP49QYwqtYCEdoVtdBaX1a/0j3E+dokMb0Y/rX+hb6oPumm9Nt
4EH6g3fxOTplz+CM3Nvku+x7eEx3nS/bf8hF+15q053Eef0LPqkreuYi3dON
68Z1b3ArfdTN6eZ1teiGOnVZXVY3hldwEZdwA03gSTwll+yHfGcLHpB/8Zr+
mq6dd/Me3RAfit6DnNOfx2/dx3mz7gY/Gr0recV+NWLezrt0d/gnz8/LC/oB
vOk+wY/pbkWfj//KgXrd9Oj65C7PDfNh3bibVVzCZRyjAp7C03LZfol+403c
QWl7Pnqn8gWf+c7exPfrbvIEXpZX7Qn67H4BL8pbtjR160Z0I7ocXsNlXMGN
9ARP4xm5Yr9MG3gr+g1Qxj6BJ+T3tn2+9wBORv8fvqZP0hd3i3hJ3rYl3R2P
fj/yP15HfbbT7kblUTlvW8cVXMVxeopn8Eu5aj/sc1rxFbnGt/WdlHVXwAV5
1tbs7iBORe+Zr+tT9NXdEv4u79hS7tqi35i8y+up33ZW3x/9vfw/0pBxwA==

                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{6299, 6300, 1412}, {6285, 6286, 1760}}], 
               
               PolygonBox[{{6291, 6292, 1808, 2018, 2273, 1539, 2057, 2310, 
                1696, 2354, 1909, 2165}}], 
               
               PolygonBox[{{6281, 6282, 1379, 1476, 1634, 1848, 2104, 1280, 
                1329, 1378, 1475, 1633, 1847, 2103, 1279, 2094, 2346, 1832}}], 
               
               PolygonBox[{{6301, 6302, 1593, 1750, 1961, 2216, 1415, 1510, 
                1667, 1881, 2137, 1316, 1622, 1778, 1989, 2244, 1462, 2087, 
                2339, 1814, 2367}}], 
               
               PolygonBox[{{6293, 6294, 1613, 1769, 1980, 2235, 1448, 1542, 
                1699, 1912, 2168, 1351, 1581, 1738, 1949, 2204, 1400, 1496, 
                1653, 1867, 2123, 1301, 2394}}], 
               
               PolygonBox[{{6283, 6284, 1524, 1681, 1895, 2151, 1332, 1381, 
                1478, 1636, 1850, 2106, 1282, 1428, 1523, 1680, 1894, 2150, 
                1331, 1821, 2031, 2285, 1568, 2379}}], 
               
               PolygonBox[{{6295, 6296, 1583, 1740, 1951, 2206, 1403, 1499, 
                1656, 1870, 2126, 1304, 1614, 1770, 1981, 2236, 1450, 1544, 
                1701, 1914, 2170, 1353, 2092, 2344, 1826, 2370, 2035, 2288}}], 
               
               PolygonBox[{{6289, 6290, 1576, 1733, 1944, 2199, 1395, 1792, 
                2003, 2258, 1491, 2052, 2305, 1648, 2351, 1862, 2118, 1296, 
                2095, 2347, 1834, 2042, 2295, 1610, 1766, 1977, 2232, 1442, 
                1536, 1693, 1906, 2162, 1345, 1394, 1490, 1647, 1861, 2117, 
                1295, 1609, 1765, 1976, 2231, 1441, 1807, 2017, 2272, 1535, 
                1692, 1344, 1393, 1294, 1608, 1440, 1806, 1534}}], 
               
               PolygonBox[{{6287, 6288, 1642, 1856, 2112, 1289, 1605, 1762, 
                1973, 2228, 1435, 2386, 2084, 2336, 1805, 2366, 2016, 2271, 
                1529, 2055, 2308, 1686, 1900, 2156, 1338, 1572, 1729, 1940, 
                2195, 1387, 1484, 1641, 1855, 2111, 1288, 1604, 1761, 1972, 
                2227, 1434, 1528, 1685, 1899, 2155, 1337, 2391, 2090, 2342, 
                1823, 2032, 1571, 1728, 1386, 1483, 1287, 1433, 1336, 1822, 
                1570, 2066, 1727}}], 
               
               PolygonBox[{{6297, 6298, 1588, 1745, 1956, 2211, 1410, 1505, 
                1662, 1876, 2132, 1311, 1838, 2046, 2299, 1618, 2075, 2327, 
                1774, 2362, 1985, 2240, 1457, 2388, 2086, 2338, 1813, 2023, 
                2277, 1550, 1707, 1919, 2175, 1360, 1587, 1744, 1955, 2210, 
                1409, 1504, 1661, 1875, 2131, 1310, 1617, 1773, 1984, 2239, 
                1456, 2387, 2085, 2337, 1812, 2022, 1549, 1706, 1359, 1408, 
                1309, 1455, 1358, 1827, 1586, 2381, 2068, 2320}}], 
               
               PolygonBox[{{1274, 6303, 6280, 2369, 2030, 2284, 1565, 2064, 
                2317, 1722, 1934, 2189, 1375, 1786, 1997, 2252, 1472, 1630, 
                1844, 2100, 1276, 1600, 1757, 1968, 2223, 1423, 1801, 2012, 
                2267, 1518, 1675, 1889, 2145, 1325, 1564, 1721, 1933, 2188, 
                1374, 1785, 1996, 2251, 1471, 1629, 1843, 2099, 1275, 1599, 
                1756, 1967, 2222, 1422, 1517, 1674, 1888, 2144, 1324, 1819, 
                2029, 2283, 1563, 2378, 2063, 2316, 1720, 1932, 1373, 
                1470}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
zxj3FBujb5nov3/fy2vt/wEe1YRM
               "]]}, Annotation[#, "Charting`Private`Tag$2630336#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
dTXeEbG/8fvGNv8DCLxDRQ==
               "]]}, Annotation[#, "Charting`Private`Tag$2630336#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
H+/6/wH3Fk77
               "]]}, Annotation[#, "Charting`Private`Tag$2630336#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
RCtr/jP8VfUE9VPyK3Sref8Hv7gYQA==
               "]]}, Annotation[#, "Charting`Private`Tag$2630336#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV2GXYlUUUheGDdHd3d3eDCNIgSkl3KKCgooAiHYKoIAIGgopFYyfSoIQS
JkqHNEoq6L1/7GvWs9ae853zxsxcX+G+IzoMT5JIJOYmTySuZEkkNuZIJPpk
TyR6ZEskPs6aSHRRRXImEut5X/ByqJK8v/W9wHsWn8KT9RThFeDNwM3xCfqI
vJ5ai9vLW/Ou+jub6L50T9kn+ofIU/KS8rriovgb+kv5IfopWU76VbouXVNW
St8Vei49R7ZX9jA+zZ9CF6Wb50okCspTGZfhmbIWspO8uryj5l3Cc2QjcH28
Dt+DO+E2+vIYP8ETjNd89810P35x3Ev/Vv0DeD3xpz5/KE6F78TJ9N3Gr+D7
ZcXoDbyvzDtMj+fnol+j69Htzaklz2xchccaS5t3lZ7Hf07vn/gZdd132cLv
z+/N/4zXTZVRN2RbZQNkfWSf87qrsuoa/0X+8/wzeKq/XYxXiDcLt8Sn6GPy
y/Rzsgb0B3QHurPv1FaeN34vnmi86e9towfyS+C++rfpH8jrhb/wuQ/g1Di5
nv/oV+ke/OL0Rt7X5hyhn+bnphfT9enasnLxe+n59Auys3iavDivMG82boVP
08flDdU/vtN2+SBeP/ylnp6qhL5NvPW8PKp8XC99L/Hm4nP4WfWv+Tv4g/n9
+V/xHjQ3DS8FrxcuiTfT1fzGb/QcxRNiDs6LX8cNcB09FfTfpBfQ82T7ZCPx
ef50ugTdwrwi8tTGt/EcWWvZn7x6vBPm/YWflz2EG+EP8b24C26nL5/xMzzJ
eMtv+JYewi+JB+jfrn8Qrzf+2ucPw2lxE5xSX8L4WuSyUrItvA3mHaMn8vPR
S+iGdF1ZRX3/0AvpF2UX8Ax5SV7ReGZxG3yGPilvrG77Xt/Jh/IG4vV6+qjS
+rbyNvLyq0pxH/Qt4s3HF/FMPaV4xeIZxm3xWbq+731Kz9/4hXj/6I/o++K9
imfO39xJP0APkn1j7nB5Ol4qXt94d/A2epO8gKrMuyV/mfdSrBX4BZVQu/gP
8gfzN+B+qoq6zX+FvyDeHzxXJVG7+cP4Q/gb8Qh/Kz0vNS+J77443uV4R/nb
edV5m/Uex5NkBemldCO6nryq3v/oV+mF8VzgeeoOtYc/nD+UvwkPUOXM3cHb
wiukqsXv4L3GWxTXLdYVXNrc4nEvcTt8jj4tbxJ7Au4ov4eXVP59rJv0A7LN
+CF5Bl6auK+4PP6W3io/QU+O95V+g25M15dl8TtX09XjOvEX817Ws58exb/C
n0WXoUvI0uh/hx5tnC9rLzvP/9OcK/Rc2V2xr9Cd6K76OsjzGz/Hycz5Id6f
2EN4D+rdoXdw7H14i/xhnDE+B6fVd4fxdfyIcZC8gvw7fg28zfyTeEq8Z/H+
4jfxnXGdcAN9WY1rcI24P7LXea/oO0A/wr/Kn02XpUvGs4bvwRfoM/qaquS8
vfKHecNi38GDVUV9O3nbeUVVTV5S3hLeq/gaXqBSqH3mj+QP53+rZwjexh9J
Z6Kb+p7p4t4al8TvkVWS7eLtMKeYqsVLxlvKew1fxwtVB95F3lleM5WSt99n
jOKNiHUn9kZVWyXX+wZ/Mf8GXqRSqQNxjfkPxT2JPUNV1rub9y2vuHoLN9HX
kFcnfhd+ky4f90j+I3403qXYl2Itx+VwqXiu8L34En1O790qNe9H+aO8h+O6
xDqv6qqUet/iL4n9BM/B5fWWjvuH78OX6fPy5ioN7yf5Y7yR+Ds8Sk9mXvq4
b7FG4D30d/IScT6K385bxluK/8XP4QrmlIl7iDviv+gL8qv0vNgr6E/pzvS9
srT6fo73gi7tt4+Kvy8fytspe4TOQmeI+4+r4u/pnXGGo6fGs0cvo++iO8T+
Is9mXIvHxfnIvNTyt2M/w2/o/wk/FmeN2G/kz+OKuCUuG9/L+C5+PPYVeSf5
3/wG+GI8n/jF6I8zDN2Fvk9eIM4NdDpzfon5vEf07MKP6svKyxjPFq6Gf6B3
yUupBrw0vHd4b8Z+gxer9OpX857gP8rfHWuWqq53L283r7R6GzfV15iX3fdY
Rz9pbKg3rezd2PfwW3p/xqPl/8XeQFeiW8nK6UlnfC/+Xjyb8s7yK/yG+FK8
O3h+vNO4VZzTcNc4K+KO+goav8STjRnM/40ewy+DH9O/U/8DvD2yx+hsdKZ4
jnENvI/eo6+Megc3i32R10ieDr9HL5MlYk/ndeFd5V3GrVVG3sE4h/JG4+9j
rVCN41rqfZ//Nj9J7E28rrxrvL/ivaZfMrcN/QV9P93N9+4kL2T8Ck8xZjLv
93i++I/r/QGP1p+dl5k3CtfE++nv5afpabKy9Lv03XF2kd2pLwNeTr8j+4V+
XHYHPZeuTLf298rL0xvfx2+Yc7/selwT3t96b+IFsU7GOTfOjbgb7o476ysc
5yY81ZjZ/D/i2eCXxU/E86n/QV5fvFf+OM6Bm+Es+pIZl8Y6J6slO8D7Ic71
9HR+Ofo9unnsP7Im+jLiFfS7sqRqHq4irxDPt7wbvkFfkbVTWXiH5E/xxsRZ
Ez+hJycvazz7sQ7jH+m98jP0jDiPxfXB7+MWsR/I79KbCa+k35MlUy/iqvKK
vLfk3fFN+qqsfZyVcfc4k8beJz9Mj6fHxjsnG4b388fQuehssuSxnsTaya/D
/4lXk7fPnLN4ZpzdcAW8HLeMdQ8305fD+EH8XmNT8zPLV/ErxX3W/yt+Qj4Q
J8fzcbV4NnElfRmMy/Eyc3vI/uFdizWfXhj7OP013SPOE7Em6jtCP02Pi30c
j5Xn5mWPdyX2D/wzvV9eMfZEXhbeat5ynCLWGV52ddS8CfwnY/+KZ0bdrXKo
Y7KJsqdirY37qJqrrD5rDX9F7LXxfvNyquP6J/HHx9qEx+nLw8sRzwKuh3+h
a/nNB/Scw8/EWTauBV6BW+G79bTQnw2vpVfKUsU7x8ulTsS6xH863rX4/apl
/B796/irYm+NZ5nXk/cv7zruoHLzTsb7z5sQ9wc/qScvL2dcU1wf/0r/KK+s
WsX14H3AWx17bTynvF68W7wb+F61HveMNZSXR34q3lV6ouw3/JQ8Hy9XXG/c
AP9G/yQ/T8+SVaFX0q3p5rKcrs2HsX7ENeZ/yKscZ7r4TDxGNijOivglXB23
xZX1ZTSuiHU7njHze8tv8xvH+ST2e7wozkn4PvwN7oV74G76ihjX47zmnjZO
403St0ffcHyQP57OT+eO5wQ3xAfpn/VVVW3invE+4q3F6eI+8/rw/uP9gzuq
fLw/fc503mT8O35aTwFeHl4K3+XNOCsZx8sayX7n18a/6L+AZ8uH4Wp4FW4T
+zluoS+X8aNYC2JtNT+3/GN+ldhj9R/EY+OsRC+ga8S9iGdPb1+cwP/KOqkN
uHesy/L88jP0DHqK7I/43rFP6fmD9yuveqyNvDy8T3gf4AzxHXkF1FnzZ/Kn
8g7hCepOvYd4v/FqxNrGy8v7lPdhXB96XJxD6IV0Tbqd31JVnsm4Eq82p58s
CX1L3y36ZbozvZHuE/daf9H4HwJdUP854zO8crxpse/qG8E7HN+LLhjvZ/yP
QU/KOIfEummcKG8iPxxnY3zQ3Iv4WflwXBOvxm1xR9xSX27jx7GWGe8xP5/8
M37VuFdxLfGTca6gF9G16GryNXr74zvwbVkXtQn3xT1jj5efp2fR02VH8CR1
l54jvN95tWI94OXnfc77GGdWa3kDeEnjXIW7qsK8C3i2vhlxTpA/hPv5nkdl
E3EhnC+e3TjnqyLqIu9Z3kxzjuEpcW6Pe67/C/4nsV+qdbyi6pL+OfxneMfx
VNVU71HeH7za8a7wCvK+5H2Ks6qXcW1zq8ezJR+Ik+EEvl++GffDvXAx+WX6
OXqW7ERcG3lhXn7eNNwMH6MPyeuoNbhdnC15neSF8Ff0Z7Js6hVcR14jnk35
IJwcJ8Hd5MV5f+Hn8Wx8Ek+PfUbfcd5hXl3VmVeY9zXvc5xdfcQbzEsR5yl+
d94W3B/3jt/jHmyItclYQu//eNMlGQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$2630336#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 9.999999795918367}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7F0YxF7Vs0g4QAUcFnSzcwfpCEL5HA680ZGS
0XN4oHwBh4q5W/p0LbigfBGHbM+52zjiOKB8CYdrNdvyjFbLQvkyDrzxKRmz
OWHmKzi4JX4yjFcQhfKVHPTNNPamSytD+SoO/fx+U9jewfSrObTEl2/tWSYJ
5Ws4zJvZWyXVKA7lazls1O4vX6EKM0/HIeTQmbs8gmJQvp7DG9XOkuZoFSjf
wGHWP/Gbjy7IQfmGDl/rjhpqfIOZb+RwWnfzHfkvMPOMHVLF5u05ulwYyjdx
0Ba/0196ltcBAJ4iR08=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 20}, {0, 10.178737298719135`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.866047075660619*^9, 3.8660471382914114`*^9, 
  3.8660472260430984`*^9, 3.866140681571192*^9, 3.8661407121024823`*^9, 
  3.866140871490795*^9},
 CellLabel->
  "Out[2595]=",ExpressionUUID->"9f8913f9-732d-4d2c-bf3b-606d0060c5bd"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 741.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7e518428-48d0-4ac3-961b-c04116ec4574"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 94445, 2328, 2775, "Code",ExpressionUUID->"c06eaa1a-1a94-4921-93d5-81325d0c5150"],
Cell[95006, 2350, 152, 3, 28, "Input",ExpressionUUID->"869f2bbe-d630-493f-a109-ef8e8d83ea6a"],
Cell[95161, 2355, 307, 4, 51, "Text",ExpressionUUID->"982e74f5-390b-4bf9-a720-2fed731db11d"],
Cell[CellGroupData[{
Cell[95493, 2363, 14604, 356, 561, "Input",ExpressionUUID->"c28652c3-ba56-4a0b-8e4f-0e46f1c2c441"],
Cell[110100, 2721, 72405, 1279, 206, "Output",ExpressionUUID->"6b2591d0-6fb8-4e8f-869b-69bbbc222e37"],
Cell[182508, 4002, 73382, 1294, 208, "Output",ExpressionUUID->"60e55a07-caff-448e-97f0-0c53aacc578d"],
Cell[255893, 5298, 75891, 1335, 206, "Output",ExpressionUUID->"3802ec72-22d8-40f1-850c-e8e0a0f2c199"]
}, Open  ]],
Cell[331799, 6636, 257, 4, 28, "Input",ExpressionUUID->"95c2d440-5f34-4096-8d7d-805c19f73e37"],
Cell[332059, 6642, 315, 7, 51, "Text",ExpressionUUID->"a4d3e002-6aa2-45cc-a329-b64caecefa39"],
Cell[CellGroupData[{
Cell[332399, 6653, 11217, 280, 352, "Input",ExpressionUUID->"539af9eb-2787-4ce5-94ed-3f323d9493e1"],
Cell[343619, 6935, 54627, 987, 206, "Output",ExpressionUUID->"7733d25e-6bb6-433f-a098-10c5201e85f4"],
Cell[398249, 7924, 55168, 996, 208, "Output",ExpressionUUID->"d182fe3e-154b-4d59-a260-20cb2efa4151"],
Cell[453420, 8922, 65648, 1172, 206, "Output",ExpressionUUID->"f7220baf-bd54-452e-8340-8337eea48291"],
Cell[519071, 10096, 2093, 33, 32, "Output",ExpressionUUID->"99402a46-2e9e-46db-8b11-d0e804077171"]
}, Open  ]],
Cell[521179, 10132, 212, 3, 51, "Text",ExpressionUUID->"f03e7ea6-c5c3-4d65-ba41-05cf4f23e612"],
Cell[CellGroupData[{
Cell[521416, 10139, 14872, 361, 920, "Input",ExpressionUUID->"72a8bca2-8c79-47e1-9329-ba71838bf03f"],
Cell[CellGroupData[{
Cell[536313, 10504, 766, 13, 22, "Print",ExpressionUUID->"bf290eae-a43f-49d7-9339-b2243ae37c94"],
Cell[537082, 10519, 764, 13, 22, "Print",ExpressionUUID->"cd6bb23d-d8c4-4716-983b-0de7686d2d38"],
Cell[537849, 10534, 764, 13, 22, "Print",ExpressionUUID->"0c1a4332-e373-4458-a201-6424f126a05d"],
Cell[538616, 10549, 764, 13, 22, "Print",ExpressionUUID->"5ebe1bf9-6c68-4fee-b834-0534e8e32093"],
Cell[539383, 10564, 764, 13, 22, "Print",ExpressionUUID->"d4784836-8854-42b2-b620-4841c22b6f42"]
}, Open  ]],
Cell[540162, 10580, 69795, 1240, 208, "Output",ExpressionUUID->"9fce181b-53fe-4068-91b0-84705cbcc0ef"],
Cell[609960, 11822, 2062, 49, 248, "Output",ExpressionUUID->"e757affe-b424-4690-889f-647a15ac5474"]
}, Open  ]],
Cell[612037, 11874, 208, 3, 51, "Text",ExpressionUUID->"1f326168-d612-4bfb-8f00-5d26c5302aa2"],
Cell[612248, 11879, 526, 11, 104, "Text",ExpressionUUID->"4f96a2c6-1db1-40df-892e-51cb2ee045f0"],
Cell[612777, 11892, 287, 4, 51, "Text",ExpressionUUID->"605fa9bd-d2f9-4de1-8459-5ae1aa1ed3d4"],
Cell[CellGroupData[{
Cell[613089, 11900, 11748, 279, 730, "Input",ExpressionUUID->"a1e062b3-c19b-4de5-9c5a-758815bd1a87"],
Cell[CellGroupData[{
Cell[624862, 12183, 327, 7, 22, "Print",ExpressionUUID->"4862f4bc-a5fe-4c18-b2ab-7942cad26f35"],
Cell[625192, 12192, 327, 7, 22, "Print",ExpressionUUID->"d4a601e7-2397-4df6-b408-ae8073848ef5"],
Cell[625522, 12201, 325, 7, 22, "Print",ExpressionUUID->"6b7d41ac-9732-4954-ad0f-c14782216c14"],
Cell[625850, 12210, 325, 7, 22, "Print",ExpressionUUID->"d13988ad-0619-4550-8526-5c5b7817c018"],
Cell[626178, 12219, 325, 7, 22, "Print",ExpressionUUID->"35011865-bc40-4696-8abb-cc48ce8ee770"],
Cell[626506, 12228, 324, 7, 22, "Print",ExpressionUUID->"6204e8e8-28ef-4f14-96b6-ffe2df356b6b"],
Cell[626833, 12237, 325, 7, 22, "Print",ExpressionUUID->"c64e2e00-9ac3-4a44-bd0b-afa5face8fb8"],
Cell[627161, 12246, 327, 7, 22, "Print",ExpressionUUID->"ff3e670c-c52f-4df5-826b-016f8ce893a4"],
Cell[627491, 12255, 325, 7, 22, "Print",ExpressionUUID->"aea7e719-f71d-461d-819c-91e02e2edc30"],
Cell[627819, 12264, 328, 7, 22, "Print",ExpressionUUID->"c7046757-e870-4e1d-8208-9584ea5224f4"]
}, Open  ]],
Cell[628162, 12274, 89287, 1566, 208, "Output",ExpressionUUID->"8422c06c-0a54-450f-bf30-82fd245b3abe"],
Cell[717452, 13842, 399, 7, 32, "Output",ExpressionUUID->"60eddc4f-7de6-45ca-9031-103521e3ce42"]
}, Open  ]],
Cell[717866, 13852, 303, 6, 51, "Text",ExpressionUUID->"5e902872-386c-441e-a1fb-71cf8c39bef1"],
Cell[CellGroupData[{
Cell[718194, 13862, 11877, 281, 749, "Input",ExpressionUUID->"db1fe012-3c00-41dd-bf23-d956f20ffc05"],
Cell[CellGroupData[{
Cell[730096, 14147, 175, 4, 22, "Print",ExpressionUUID->"e24d5fa0-1925-4b91-a6c5-4b3a0948a4f7"],
Cell[730274, 14153, 177, 4, 22, "Print",ExpressionUUID->"042e9e3b-099c-4e9f-9b60-7737234042ea"],
Cell[730454, 14159, 175, 4, 22, "Print",ExpressionUUID->"e4a9ea77-aef1-4256-afeb-43647d389980"],
Cell[730632, 14165, 175, 4, 22, "Print",ExpressionUUID->"d8e5a864-996e-49ef-9668-635c7ed12e67"],
Cell[730810, 14171, 177, 4, 22, "Print",ExpressionUUID->"abc38e85-a5cb-4755-bf7d-359408195a9d"],
Cell[730990, 14177, 177, 4, 22, "Print",ExpressionUUID->"64161f47-8839-446d-ad3b-a4b9ef25f4ac"],
Cell[731170, 14183, 175, 4, 22, "Print",ExpressionUUID->"a529319e-a79d-4789-b379-26c13e1c5fb4"],
Cell[731348, 14189, 175, 4, 22, "Print",ExpressionUUID->"7dc6844b-8e20-4c36-93fa-3e649567c9cf"],
Cell[731526, 14195, 175, 4, 22, "Print",ExpressionUUID->"50af0c08-a1cd-411c-ad57-7951aaf420ab"],
Cell[731704, 14201, 178, 4, 22, "Print",ExpressionUUID->"e5a0acf8-e273-4885-b0dd-0ab36f8925bc"]
}, Open  ]],
Cell[731897, 14208, 103385, 1800, 208, "Output",ExpressionUUID->"0f56444a-5d44-4e7c-a35a-9ff38e9907ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[835319, 16013, 201, 3, 54, "Subsection",ExpressionUUID->"5bd1fbeb-86ec-47eb-b2f4-64cad2ea694f"],
Cell[CellGroupData[{
Cell[835545, 16020, 13682, 315, 787, "Input",ExpressionUUID->"8e38cdaf-ed5f-437a-9ced-be5bff917c65"],
Cell[CellGroupData[{
Cell[849252, 16339, 295, 6, 22, "Print",ExpressionUUID->"587803bb-4dc9-493a-97a2-8b790d9f9e50"],
Cell[849550, 16347, 295, 6, 22, "Print",ExpressionUUID->"97f83979-f181-402b-9661-11dc2e56e2b9"],
Cell[849848, 16355, 295, 6, 22, "Print",ExpressionUUID->"1b90740d-e88c-4211-8a86-a7b852066073"],
Cell[850146, 16363, 292, 6, 22, "Print",ExpressionUUID->"b85a4f09-5907-4fb2-8592-2125766bfdff"],
Cell[850441, 16371, 292, 6, 22, "Print",ExpressionUUID->"e0beef7b-bb73-4cc6-9839-0ba3677ff22c"],
Cell[850736, 16379, 295, 6, 22, "Print",ExpressionUUID->"dc6d36a5-f210-46cd-917a-54df844a5a15"],
Cell[851034, 16387, 293, 6, 22, "Print",ExpressionUUID->"c0906446-a437-4fa3-b995-3b6f8588d4a2"],
Cell[851330, 16395, 295, 6, 22, "Print",ExpressionUUID->"966e558e-e7b5-4333-902f-dd778b599a57"],
Cell[851628, 16403, 295, 6, 22, "Print",ExpressionUUID->"4e103d9d-83b1-488a-8686-3d7964e9d5da"],
Cell[851926, 16411, 294, 6, 22, "Print",ExpressionUUID->"ae3516b7-eb0e-4a73-b86d-5f5f8924ad6d"],
Cell[852223, 16419, 294, 6, 22, "Print",ExpressionUUID->"ad1f30e5-a0fc-4300-8501-d7b3841d2842"],
Cell[852520, 16427, 296, 6, 22, "Print",ExpressionUUID->"49eb22c4-12b3-49c8-a536-c91344fc8377"],
Cell[852819, 16435, 294, 6, 22, "Print",ExpressionUUID->"d798264f-21ee-4c8f-a924-938d9a3f2843"],
Cell[853116, 16443, 296, 6, 22, "Print",ExpressionUUID->"557116c8-3535-466b-8ceb-774a5e92fc20"],
Cell[853415, 16451, 296, 6, 22, "Print",ExpressionUUID->"bcb809af-e314-4957-9f47-8819c449f159"],
Cell[853714, 16459, 294, 6, 22, "Print",ExpressionUUID->"a5ee778d-83b8-47cf-9528-05ba26be89ce"],
Cell[854011, 16467, 296, 6, 22, "Print",ExpressionUUID->"2fbdd6e2-8c70-467d-910d-518f93b04c07"],
Cell[854310, 16475, 296, 6, 22, "Print",ExpressionUUID->"3af0e7a1-7783-459e-9058-4b07a9ced52a"],
Cell[854609, 16483, 294, 6, 22, "Print",ExpressionUUID->"3b1e4bf2-ec53-4d42-8c72-cb23ca94f381"],
Cell[854906, 16491, 294, 6, 22, "Print",ExpressionUUID->"427a13f2-7423-4c33-a96b-357cab880c71"]
}, Open  ]],
Cell[855215, 16500, 149096, 2555, 209, "Output",ExpressionUUID->"9f8913f9-732d-4d2c-bf3b-606d0060c5bd"]
}, Open  ]]
}, Open  ]]
}
]
*)

