(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    883330,      16674]
NotebookOptionsPosition[    880571,      16629]
NotebookOutlinePosition[    880977,      16645]
CellTagsIndexPosition[    880934,      16642]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Computing the Adjoint Equations given a cost function symbolically\
\>", "Text",
 CellChangeTimes->{{3.8647382131648855`*^9, 3.864738228348024*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d5842f38-cc35-45d9-9af7-da158ecf4acc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "Bugs", " ", "here"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "u", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "20"}], ";", 
  RowBox[{"\[Tau]", "=", "15"}], ";", 
  RowBox[{"\[Tau]1", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]t", "=", 
    FractionBox["\[Tau]", "n"]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xState", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fx", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x2", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A", "*", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", "+", " ", 
          RowBox[{"A", "*", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
           RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", "u"}], ")"}], 
        " ", "/", " ", 
        RowBox[{"(", 
         RowBox[{"1", " ", "-", " ", 
          RowBox[{"A", "*", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], "^", "2"}]}]}], ")"}]}], 
       ",", "\[Theta]2", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], " ", "-", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", "*", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", "+", " ", 
            RowBox[{"A", "*", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
             RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", "u"}], ")"}], 
          " ", "/", " ", 
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"A", "*", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], "^", "2"}]}]}], 
           ")"}]}]}]}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "->", "x"}], ",", 
       RowBox[{"x2", "->", "xdot"}], ",", 
       RowBox[{"\[Theta]1", "->", "\[Theta]"}], ",", 
       RowBox[{"\[Theta]2", "->", "\[Theta]dot"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L", " ", "=", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"u", "^", "2"}]}]}], " ", ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Cost", " ", "function"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqn", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"fx", ",", "u"}], "]"}], ".", "\[Lambda]"}], " ", "+", " ", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", "u"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eqn", "==", "0"}], "}"}], ",", 
      RowBox[{"{", "u", "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"u", "/.", "sol"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"u", " ", "=", " ", 
  RowBox[{"Clip", "[", 
   RowBox[{"u", ",", 
    RowBox[{"{", 
     RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]dot", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{
       RowBox[{"Grad", "[", 
        RowBox[{"fx", ",", "xState"}], "]"}], "\[Transpose]"}], ".", 
      "\[Lambda]"}]}], " ", "-", " ", 
    RowBox[{
     RowBox[{"Grad", "[", 
      RowBox[{"L", ",", "xState"}], "]"}], "\[Transpose]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fSymbolic", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"fx", ",", "\[Lambda]dot"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "fSymbolic", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.861902342328802*^9, 3.8619023425067463`*^9}, {
   3.8619023760720234`*^9, 3.8619024181895714`*^9}, {3.8619024838915834`*^9, 
   3.86190250318342*^9}, {3.8619026675159273`*^9, 3.861902682122262*^9}, 
   3.8619028766101365`*^9, 3.861902937842575*^9, {3.8619029852474327`*^9, 
   3.861903011510045*^9}, {3.86190326064746*^9, 3.8619032656028795`*^9}, {
   3.864737722444943*^9, 3.864737934826968*^9}, {3.864738068759104*^9, 
   3.8647381126010714`*^9}, {3.864738149206354*^9, 3.8647381993453064`*^9}, {
   3.8647382530321245`*^9, 3.864738281367056*^9}, 3.864738385972575*^9, {
   3.864738419632804*^9, 3.8647384267365303`*^9}, {3.8647385308402095`*^9, 
   3.864738561920263*^9}, {3.8647386241073604`*^9, 3.864738625081049*^9}, {
   3.8647386619882374`*^9, 3.86473899869847*^9}, {3.864739043396165*^9, 
   3.8647392140865345`*^9}, {3.864739296574133*^9, 3.864739299028347*^9}, {
   3.8647395267484655`*^9, 3.8647395340431304`*^9}, {3.864739577945079*^9, 
   3.864739661032486*^9}, {3.864740184684888*^9, 3.8647402025441737`*^9}, {
   3.864740263603631*^9, 3.86474026379557*^9}, {3.8647407876239157`*^9, 
   3.864740835905461*^9}, {3.8647408676742954`*^9, 3.864740950202881*^9}, {
   3.864742069748563*^9, 3.864742075366767*^9}, {3.864742204489438*^9, 
   3.8647422253447638`*^9}, {3.864752270286827*^9, 3.8647523496704206`*^9}, {
   3.864752389105799*^9, 3.8647524040910015`*^9}, {3.8647525828767815`*^9, 
   3.864752585871823*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"aa2c8684-6e16-4bb1-a4b1-c0e9049a7f4e"],

Cell[BoxData[
 TemplateBox[{
  "Remove", "rmnsm", 
   "\"There are no symbols matching \\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Global`*\
\\\\\\\"\\\"}]\\)\\\".\"", 2, 2, 1, 17533304191359290124, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.864753344064159*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1f4d3e25-a583-460c-a129-126650944454"],

Cell[BoxData[
 RowBox[{"Clip", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Lambda]2", "-", 
     RowBox[{"\[Lambda]4", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"A", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.864752407264985*^9, 3.8647525872963657`*^9, 
  3.8647533441001463`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"530d5236-0895-4da9-a9ae-e66f4035e763"],

Cell[BoxData[
 RowBox[{"{", "8", "}"}]], "Output",
 CellChangeTimes->{3.864752407264985*^9, 3.8647525872963657`*^9, 
  3.8647533462704515`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"efacb8cc-5b9d-4327-ac4e-c243c046f721"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_", ",", "uMin_", ",", 
     "uMax_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", " ", 
       RowBox[{"{", 
        RowBox[{"xdot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"Clip", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
             RowBox[{"{", 
              RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Theta]dot", "2"], "+", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
         "\[Theta]dot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"Clip", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{"\[Lambda]4", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
              RowBox[{"{", 
               RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "0", ",", 
         RowBox[{"-", "\[Lambda]1"}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
              "2"]}]]}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["A", "2"], " ", "\[Lambda]2"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
            RowBox[{"4", " ", "A", " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"5", " ", 
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"4", " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"5", " ", "A", " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"4", " ", "A", " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["A", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"4", " ", "A", " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"A", " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Clip", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[Lambda]2", "-", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
                  RowBox[{"{", 
                   RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "A", "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {"\[Piecewise]", GridBox[{
                    {
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]4", "-", 
                    RowBox[{"2", " ", "A", " ", "\[Lambda]2", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "\[Lambda]4", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
                    " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
                    "2"]]}], 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "uMin"}], "-", "\[Lambda]2", "+", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "uMin", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
                    "\[LessEqual]", "0"}], "&&", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "uMax"}], "-", "\[Lambda]2", "+", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "uMax", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
                    "\[GreaterEqual]", "0"}]}]},
                    {"0", 
                    TagBox["True",
                    "PiecewiseDefault",
                    AutoDelete->True]}
                   },
                   AllowedDimensions->{2, Automatic},
                   Editable->True,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                   Selectable->True]}
                },
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
               "Piecewise",
               DeleteWithContents->True,
               Editable->False,
               SelectWithContents->True,
               Selectable->False,
               StripWrapperBoxes->True], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Clip", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Lambda]2", "-", 
                 RowBox[{"\[Lambda]4", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"A", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
               RowBox[{"{", 
                RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "A", " ", "\[Lambda]2", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "A", "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", 
         FractionBox[
          RowBox[{"\[Lambda]3", "-", 
           RowBox[{"A", " ", "\[Lambda]3", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
           RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]2", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Clip", "[", 
             RowBox[{
              FractionBox[
               RowBox[{
                SubscriptBox["\[Lambda]2", "i"], "-", 
                RowBox[{
                 SubscriptBox["\[Lambda]4", "i"], " ", 
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "i"], "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", 
                   SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
              RowBox[{"{", 
               RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, {3.8647525495264535`*^9, 3.8647525696120253`*^9}, {
   3.86475260002929*^9, 3.8647526595642357`*^9}},
 FontWeight->"Plain",
 CellLabel->"In[17]:=",ExpressionUUID->"fc3c1402-abed-4553-a13d-021194ac6f85"],

Cell["\<\
The constraints are being satisfied. However due to interpolation, sometimes \
the constraints are violated\
\>", "Text",
 CellChangeTimes->{{3.864753092867558*^9, 3.864753117490677*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"9f439e66-0252-4504-9415-cefa2fb91a2c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uMin", " ", "=", " ", 
   RowBox[{"-", "1.5"}]}], ";", 
  RowBox[{"uMax", " ", "=", " ", "1.5"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.048555026816794494`"}], ",", 
      RowBox[{"-", "1.560065966757075`"}], ",", "0.7613152376955525`", ",", 
      "1.9382391342292873`"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess", ",", "uMin", ",", "uMax"}], "]"}]}], 
    ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"uMin", ",", "uMax"}], "}"}]}], "}"}]}]}], "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.864752675691077*^9, 3.8647527331306915`*^9}, {
  3.8647527991195717`*^9, 3.8647528275444736`*^9}, {3.8647528874323072`*^9, 
  3.864753042532665*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"c113c91d-ba61-46bb-8acb-0d58082f1b10"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
gtODRsB/8kuwbyFT74LB6nQKTqqaUW7D+4B9G6cNc5aC+hEe5PQn3spfBLAf
weDkKa00viXUZ+DdXvhbv2kY9RkshyiNTLgPgywhk+HrmiSs69eT49mcxPXt
vBPbW0TC6g93jPkS39/p9LiHOloCGNfXZNXE0FHwT/xSlNmq0VQRb8Qv5SWs
LQkcrcMhv7T3TsTCi8xOHPJLHQFPH1y9RsZhn0GHkFGYyDQFh30GEn2D9TPl
FBz2Gdh76dlZ1JNRn0Hsdx1z9TM9qE/A6sKOhYgdU4g/6gTX/afZZgHsE/CP
kp2d2LsAYJ9AfDC3k9HYIoB9ArNB9eFfiPMU7BO4sVlJVVR+AfUHfOrar5f5
4u/+AJYJh7YijknUH+BzgtYTt3Ic9QfoTMiFlFgyUH+Ao1iK+IamEdQfMH5d
YI4lYxj1B5xiOb1Zx28Y9QfU3Q259lplBPUHNK4pdjl3ZBT1B9gZfCu+JcYA
scdTihpbSZji8+djj4h5yNJ29vSyiQDGsdk9IOzwKOoXuBB+99t7myEA+Sad
Yxbdd85SAeSZPr/VoGxvbgCQZ+K6we5wcncc+G88E+SXnl8YM8kr/Im/LVfc
7NzcBEgS3zkuyfTisE8gZO6d1h5WCg77BEYEKhQ0ifcT9glYng5V4VnoR3n+
FzkmXjvKzwCY599xQUbzYsEcgHn+KrjUuo4jiwDm+T8k9VFLdy4BmOdvedyb
0SS/CGCe/3jUGcMe1nmU1x/eLDtrzhxHef160en7giTHUF5/nW9idjNxHoB8
k6mMj9L1bSMor9/v1Vee8afDKK9fzrbknXndMLCZUJ1pECdhjMXOqILyUWA9
KXhAOIyErbTvKu9UYYCWtJ2FO8UFMJcNb7bzshPn/0xP8bY3ApjgxTd3+cRG
UL7/e9brsdaSAwDxTy5Vr7q3fgX/jX8SVxpaYMXbwI+nsyX2R/vxx294+4+Z
9oCD0Q4xT4n953fn+9xI134wvWNKdPkWBeXrX3p6oK6magHAfP3Nadl/yBPz
HpfzBpVHhRyYKPuoehkxD0L+iWu4+578JgbKx5dR8+ycsx1B+fiD7S4F4gHD
KB9/z5m5npKkYXDj4sJTHicSRu6LI2vIMcD+R7dx1zkSVtJ251g/sb+/WlPy
xeqxALZ2M4sjOX8E/CcPBfPv63qUXw/7U3CbdcUt+x72gf1+zV1nOakor/74
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
ka0vT76/VKKhp4DiU/z5m2/5399/AcCWA04=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwVzrcvRXEchvGfFuJeEgYmiWuyqAMJA2IxGBAtWFgJI64uMTERsShRBkbd
wH+ghZlBGfVZ4mN4877P8z0558T6hloGE0MICRKXTLASDWGfOJDR5BAmk0K4
5FslXZ74VX6T/8DDUiSHfJyf4q9wm0TkmV/jt/hPPCLFcsSP8dP8NW6XqJxy
51y6LOIXz61z2/gLj8ob/sa1UoKv8J2dL2UpIVTgXT7Vjtpd/LH3jNsz9o1b
llsO7rAf9BPfz5XqKl3DzesM9zP7gu/FEV2oi7g5veT+ayfKCG5yb9TNeFm/
+u6GvcP34G/P5+kCLm6/6x+3OqnnG3Apf63vuZiU85V4j0/7/ye7mz/x7gl7
1r51y3bLxZ32o37mB7gyXa1ruQX9BzdQPZs=
            "]], 
           PolygonBox[CompressedData["
1:eJwV1EdwVnUUhvGLgBtwBqnShDgIgjo2BBKkSFUW6FAcXCiQnhASHHegg0gJ
hA4m9KbSi1IUG6CAFAVUelN6sYyKhVDF31m8vOd5zv/m5uO7NynpRb0K70qS
pIKU+KesapKUyu/mHTKqUpKMq5gkRxzqL7WklH+Vz+DX4lT5g9spo/kS/ig3
QGpLGd+fz+TX4TT5k9slM2SAXZbder6tXOF2y0wZaJdtt4F/Rv7ivpEx/Hj+
GDdQ6sgsPp3P4T/C7eRv7n1uOVeOh8u3XDE3gTuO0+U+mc1n8Ln8x7i9/MMt
5lZw1/Bbsocby03kTuAMOY0v4KekLt6Et5ozKidJNd1CP8bNtJvj+kxzHr8R
d5B/ub0yjp/En+QypZ7M5bP4fP4T3FGucku4ldx1PEL2cSXcZO5HnCVn8EXc
Utr5HTrh+vxmvY3L5O7VD+vHuVl2d3Ql6cX35Hub5/nZ2XoQ14f71Lkq8dm4
Z8379RG7HO7BuJ9OjWdHl7t2qXkV/wq+4Xwj3YQbod+O79x81f513EV30c/H
Z9HfuX68eQrfD//kfE1dN54N81l9ye5paYC34O3m6jIbz3d9DleAP8Od5AA+
ipvG92q/DK8237RrHJ8Bj4znTZfzXSN8D/y98xP0VO5l7lS8F7pePHvmc/qy
XSHXSrfXnbmGdl/qr7kaMgcv8LNyucH4c9xZDuJjuFl8t/bL8RrzLbtR8Uzj
a7ib/GA/EU8zn473zb3qxzNsPq9/5ou41rpD/N/G86Xvt//KvIPPwjX1I/oJ
rljPjT8KujIeGs+A/Qu6D56hF7pvnrmQ74u/cL5qPEvcG3EffMh83D4XPxTf
j07jbrh2hf6Au+1cCt8Uj473TV/nu8t+5ybh6eYz8Y471yDeG/MF/Qs/hGuj
O+quXCO7rXonl83V0o/qJ7mxep59BX03Hhafx/5F3TfeTb3IPfPNRfxLeJPz
9+jq3JtxD3zYfMI+DzfXrXRb7qZrV+oPuf+ce4BvhsfE+x2fm39ODjg3Gb9j
PmuXLxfxrzhVGuNteJe5tszH77pmEDcEb8bd5Ba3ilvL3cHF8exwU7hS7lz8
XfM7NIz31nxJ/8anSQrejneb68gC/J5rC7jX8BbcXW5zh2QqX8af5wrkfxSA
0wU=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0DcsRXEYhvG/togSZTBJ5FosBn2wYDZgwVXvjtlAlCiLqBczA4k6I9F3
oqwWixYGjOJ3hifv9z7vSc69pyQx1DqYGkJIwTDmHetZISRRZzhEIi2E7vQQ
VmyFeg8eMctP8tf8B2q5A/TzXfwyt6bn6uc44Qr0bjxghpvgrjz3jhpuH318
nF/iLvGGan4PvbZO2yK3qufoZzjm8vUu3GOaG+cuPNfk/sGXPmr7xba+qb/a
62RlRgil3CNu9arod8tMftfdJntsHdxC9G691d0sW/hhmab/IRm9Xy93l8ls
e0KeyiMuzz6nN7jrZQU/IJ/lExe3F0XfirtzT/Fj+rn3Nrq/8amP2GKy2HM/
7i1+Q3/xXMz9gJvov9l2ou+ut+v/9ndAIw==
            "]], 
           PolygonBox[CompressedData["
1:eJwV1FeQTnccxvGzzVoMZjCj1+irzGDCEIYLLMsqk2gzYnKRCzMsaxfRJ1yI
3leP3luicyN6S8hN9Hahl8SNCILP7+J5n+f5/v7nnN3z/v9vne/y+41MTZIk
hb73saxMkhTTPvkBZRn2p0s0OS1JxqcnyV78PpXE+tFFmmQ2zmwPnq2PpVe0
Dl+F38MX6ln6cTqEZep96QJNxMZiu63bqtfS/6TLWFO9iF7Sz9hK7K51eXKK
/IEWmGXzhhn+LvwYHdRL4C3kB3Rb76Ofpwl6kb7LfQbJpWOta7eYtZFbyjXx
q3RJb4J3413wTlgBf81fYIVm0/Q6cnX+Qh/C15qvwO54xhK9j9yT9453xRP9
Pc23fobeVG7AM82H8aP8AJZh3pG3w5pj9+mWnodX4uXxc/IPeKG+0/MGyqXi
WrPNZjX0K3QRa6yPoee0BluO3XbNYmvz5B68V3wf/BN/h82ztgmvj5XAjtB+
PR1vJt+jm3pv/SyN18foO9x3gJwVa127yay13EKujv9BF/RGeFfeGe+Ijeb/
8OdYgdlUvbZcjT/TB/PV5sXYLc9YFO9VzuG58d3yj/w/bK710/XG8hc8A/+W
H+a/YmnmX/G2WDZ2l27ovfCKvBx+Rh4X37u+3fO+kUvGtWYbzarpv9P52INx
P/lveqaP1p/SKn2ZfjPOQrxjuTvvif9Pb/U51qXH+aBf9FQ9l07HmYr3gm1z
/Qa9apwPOhf7Ru8gv6Kn+qg4Q7yq+z+RV+JL9RuuzeXd8B6xX/gH/i8227of
9UZyPZ6GD+UH+T4sxXyW3kH+MvYrPpzf4ddjb5tP0SvIZfkpfQAvMh+FbY33
xvtiX2OZ8f/J661rJTeXq8R5o7Ox1/D28kt6oufrNXkV6x7LK/Al+nX3XRDv
Ue7Kc/D39EafZV1qnCPaqyexj+O3gK7FXtdPUqGer29xr3V65TgrdCb2jB4/
ko9oObYYu2bdT3pKnAPag33CcrDf4nxhI7HNWD19BD2kYnwR/hc+M354Yw/S
buwj1h07QQXYCGwTVlf/DCYJsj0=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hecz3UcB/Cz78g+e55xOJsGkWxZl4xkFacoZEWF7HlntpdRaVGaikJE
WU0toyhCpZ2tjOf70R/Pe73en9/97vf7fj4fUjJGdB2eLSEhYYEfkbX92C8n
yiXyTlmO2Qwz95P5mcYn5rtlKlm0N18vL8opcqMcLSuxQB8ki/ONPk7WoKHe
Qv4tX4/3kWEuwhfxefTU87BNf5Ts1DEfkEvjO9KBLvEAbBILuZyW5n/kG0zl
ZnJQ1/r3chnD6cgV5KSe136QTzGCTlxJLnKTh/p+56B8mpF05ioSaeC1Q/IZ
RpFOI1pZPy7fZBq3kERD6z/K5bFfsYc0prX1E3I10+lP3ngu64fls9wVz80N
cX68ry/iatqYT8q3mMFAc1G+1Adwk57Idv0xhuil2afni/3Qj8jnYo/08oyJ
PZQF+DQ+l656djbH95GVuV8fLEswk93m8TKN+TQxt5Wn5GT5duyVTCEz3mO+
VSYzg6/M98rqzCPD3EsmMZUd5jGyCo/rQ2UZvtUnyJpcFucoj8rn42z1CoyN
s5AF+Syeh256DrboD3C7XpI9elPa6aflGmbF3tLbWl526k+QP+6E+Sf5Qvxb
ib9Ld2s5+UB/kGu4znxGrmV2PDsF4t5Y/1m+yD3xXprR3vpZ+Q5zuI2CcW+s
/yJXxH7Rg2vpYP2cfJdMBlEo7on1Y3Il47iR5hSmidd+lS/F2dGTFhShKMkU
ozglKEkpSlOGspSjPBWoSAqVqEyV2Euf8Zt8Oc4p7iQt6Wj9X7mOrLhLVI29
sv67XMV9cQdoRSfr/8n1zI3zIjX2yvof8hUmxhnFnljLxYf6Q7Sms/m83MA8
7qCPtXx8pD9JtdhL85/yVSbR31yIz+P3Y//03GzVH46/o5dir96GdP2CfI/5
cW7mYnytD6Fv3FM+1sfKqizWh8myzOK7eHZZK9v//29XjzOTf8V3kq/JkbIi
c5hsHiALM51dcZdkNebS1/wIbRlKDdqRRk1qUZs61KUe9ePO0oBLbF+p+w==

           "]]}, Annotation[#, "Charting`Private`Tag$9792#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl2GXUVWUXheFDKZIKioGAhIoSikqoKKWAikpLNxIS0mJQggUGqTTS3d1K
tyAo0h3SoSAgftca34855pr3evbZ79n7iTPe7A1aV2yVJJFIpEueSHyrqMZr
J0skpiRNJJ6lX+Rdck46rT9anqD+Sy9rClz+RH2BX8VL0k/GdZN7qX/Vy2jc
A3JN9UF+DG+JPcOL8hLY1/we/cXqFXgDOS1/gufHPuMD9W+rk1FnuYL+m7yi
PIh/577V1XXwSvJU41Px9Nhz6u38N71c9CxeRP7TNWP4ROxvY7rQRfkvuRT9
rN897q/eqVeLMtASbCWWjgbJfY2rgdWVp8kF6Qy2ivpRTb16etPxQnQWW009
8M/xXVjteFa0FPsJS0/fy/2Nq4XVl2fIhekctoY+xb/Af8Pq0L00AK+NN8Bn
ykVoYJpE4jy+lnrqfan3O16X7os+XgdviM+Sn493iq2jXvhX+G6sHmWiQXhd
vBE+W34hnhu2nr6nenqN9ebgL9IlbAP9QPX13tWbixely9hG+gzvjf+B1af7
aTDeAG+Cz5NfoivYWGwSdk3uSpuwz7E+2B65AT1AQ/CGeFN8vvwyXcXGYZOx
63I32ox9EfMQ2ys3pEPy8Zgr9KC8TP5Z3dDcuZs/yZ/CftAb6vpG6mb4ArkY
/YVtoS/xb/B9WCN6iIbhjfHm+EK5OP2NjcemYP/I3Wkr9lWsTWy/3JgOyyfk
5+glf0NJOTO+nK/CGsVa4nn409hgvf94cqqIv4VXUg/32e/y97DK2CLjUsd3
w0qod/Df9Zpgj8b9+PMxd/g1105QT8VryzeMz8ZzYd15j3jn6r/128mv8Ff4
a/Fd+DbX91Z/h1eTD8Tc5Q/G3FAf4Sf1CtLD8gp5tToDDZFHuL4J1kJeLJek
X+Xd8mPxXvUnytPUN/Ueie8gfxrzjV/DXw3hr8u/GN+H98WqYwdjXfCHYu6p
j/JTeq2wQvxlXgrLoreSr8Ey0lB5pM9qirWUl8ilaKf8h/x4vFv9SfJ09S29
njGn5etyadqu/7XcT30o1pt7ZY45rD7GT+OtscK8WDzbmF88q/5P6rV4Y/le
npcXiD2GD9NP8BTyhzEH9N/mleXv+Sj3baZuhVeRlxqfJuYS9nHcR96l3qPf
VM4d74e/gN1w7WQ+A/vXuOz4Y3EGxHrj/+BlaIdx38j91YdjjRv3cKwb9fHY
j/H3Y2/mxfmrWDa9n/k67F3sPp4vzo/Y+/hw/ST8Dvmj+D765XmVWJv8R/ds
rm6NV5WXGZ+WZ4izK+4h/6beq99MfoIX4i9iN107hc/EbhuXA388zoNY3/G9
8bJxzhn3rTxAfUSvOZ2Qz8jP0yPyKnm9OhONkEe75j3sfXm5XJpuYVOxWdh/
8ucxd7DvsIHY0djX/A1ZYt2qT/Kz+AuUXV4tb1DfTyPlMa5tgbWRV8hl6F9s
F/WNcxM/hrWIPd0ZkYOP1Wup11ZvpVw2zl1sGjYbS9AX8czibIu5Ix+XW1JO
Goe3wtvFbwH5tdh/sOnYHCwJfYn9jvWPdySfkFtRLlqDbcQeoFHyeONaY+3j
PJZfj2vlfbEHx98jz5DnqpPSV7GXxrtTvxZryvN6I/YavttnDYg9ET9p3IOx
bmJuqE/xc/iL9Ki8Vt4Uez/lN+5Z+Uc8qfpOdRW8grqqeoLPfZ93wN7BVhmX
jmfEusT95d3q/frN5Ty8MC8aZytPoj9TPQ+vIyfjOWONYT14b/1r6lt4+9iz
Yj3xcrGvuPdAPgQ7FecLni3mlfo0P48XjX1RXidvVj9Eo+WJrm2DdZRXy+Xi
+9EsbD6WnPrI1+V/1W/EfPf5b8Zeyfe4fpB6KH7auDb0p3whzqbY7+T18hZ1
ZhojJ3NdSqyqPMn1bdWd1Gv00se+Jb+p/oMfiD2MiuAvycnw2XwBVjf2Mp4r
1mzs7fxr/X/Ut/EO8XxiDvC3Yj/le+P3iXoYXkP+0/jM/BGsK28rn1Ff1G8j
v8xL8NJYbr0NfGucSfQU/pw8Fk+uvkv9Dj7ZPdqpP1Cv1XuL9sgHY9+KZyrP
kReq74i55tonYw/Hb/D/sI7xjPnr/O3YL/m++P2kHo6fMbYdPUEbsW1YFhon
pzA2FVZNnuKa9urO6nV6d8f+Kb+t3ssPxdyOPSq+q5wCn8sXYfVinse8ifmK
9eTf6t9UJ+KdxXONOcHLx97H97vfYPUIvKZ81viHeXasG28vn1Vf0m8rF+Ml
eRnsSb1NcRZjWelpvKA8Hr9DnVpdHZ/qHh3iDFOv1ytP++TD8U7imcrz5MXq
lDEHXZs31n/srzxJfH/8gM8Zoh6pPqfXgfLQZmw7lo0myNOM6xhni7xBrkB3
0nxsCXYX9ZUPGjcUGyWflztSXpqOd4ozFN8oV6SUdAifQR/EOaS3CatEd9Fh
fGbMVXvyLD6bOsdeYtxm/cqUio7gw2Jfwi/InShfzC/8w5jT+Ba5CqWmo/hw
fDR+Uf6A8sc7xz+Kd4RvlavG2U8LsKVYKuonHzNuBDZGviR3pnPyZbl4PH95
i7wjzjwqEL+X5InxzNRp1DXweT7nY3V39Ta9e/QyxfpR7+dH8Pfi92ucbTFP
sN48rf5C9TK8fswJnpvnw3rx/nG+qZPG+ot5qV+OV4jzkx9335GxZvFa8mXj
s/AcMZ/U5/mVWPNUCi8rP41v5b/GGUvPxG8veVK8x/ib1DXx+T77k9iv1b/o
ZdC7P9ah+gA/ireI32NxxvDiWB+eTn+RejmehgbIJ3zWKGycfEX+iArE+8C7
xF6Hb5erx54ZvwPwhbSIFtMSWkrLaDmtoK6xhl23w/gasRfEmYf/GGsMvyp/
TM/QNmwnliP2s5iTKf7/P4JackX1O3GG8pWu/x+lnRSZ
           "]]}, Annotation[#, "Charting`Private`Tag$9792#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4FGUYBuAFJAWkpVNCOqRFShBpEZBupLu7ETvAokNCursblJbu7pQu
vb8f9/U+7zMze87Ozm6GZp1qdIwSiUTKRI1ExkaPRD6OGYnsixGJbDHbm3PN
/Bwgvf1nMxW7WWlfaX7AEW66fqD5BjuY4vhiswi15KlmNrbJ68yy/O2a1uYd
3deUZLw9IxvkOKGXEzJfbsY411S075c7kIFbukG66Ey112aPro39rvwNpXgz
vL6+UnhPckcyclu3lwlUduygrhOZuKPbx0QmMZkpTKWKcw85pzPvcFe3n2lU
dewfXRcyc093gLb6e/ZvKU1c/tBX0x+Wu5KF+7qDtNPft39HGeIxXV893He5
G1l5oBusi8E0+2cc0rW3P5C/pyzxw/3QJWKB3JwZzvvEflTuTjZ+sadmlfyv
40PkmPxhX2IWpY48zXyX7fJ688Pwvp3fwfxXt938wVxoFgr3K5xjn2BmCs8A
G+1rzNIc461wf8zE7GShfZlZPLw2LeyzzNzs5S/7BrMcM/3tGuF1dD2YJxcI
/6P8q5mG1fJD5w2VYzHdXjd8DnL28PzKhx3vKD+Uf6QcE+3vsElOED4TOQmL
5Jbhf3LNp/bjck+y80g3TBebGfZ6HNF1sj+Sf6I8CflTX1N/Qu5FDh7rjtJZ
/9g+mo9IxGx9Lf1JuTc5eaI7xhxqO3ZK14dcPNUdZy7zmM8CFvKZc087py+5
eaY7wSLqOHZG1488PNedpIv+iX0MFUgcvvP6uvqzcn/y8kJ3iq76p+F3hI9J
Ep4lfT39OXkA+XipO003/bPwLFKRpCzV19eflweSn1e64bo44fO31+eMrrv9
efjcqUSy8D3QJWWx/Hl4rpzXwH5BHkQBfrOnZY382vER8pvMsjcI3z85R3g2
5bOO95BfhOtYJBemsjzJzMweNtvXmmXC88Hb9h/MZOxiiX25+X74HaBVeB7M
POwL3xP7RrN8eD5Y7u82NC/qt5qDzfnme4H8u5mOtfIqsyT/uWakGZc/w700
i9Ew/AaYOcP/Ip9zXk/5ZXgdqjDZnoUtcvLwnQjvgaVya1a4ppH9kjyEgkT4
QheP2XIjzjuvl/2VPJaqpGClvrH+sjyUQkThgr63/rU8jmqkDO9J30R/RR5G
YaJyUb+aNaxlHU2dd9Wx4RQhGpf062nm2DX7CIryBpf1fcL9ksdTnVRs0DfX
X5dHUozojNLFZ47cmCvO62uPMMH+CanDd92enGVym/B5Oq+F/Ua4TxQP98Se
nnVyDL4Mv4fMlZswU87Fbvmq6/vJUZhor8EUOStb5TSMllOE5yV8RmYJ2sqz
zbzsD8+nfZP5Ufht85otzZu6beYoc4FZkIPh+Qyfg5kh/O6y3r7aLMVRYtq/
MhMwT27KNa/Z3x6VSfZPSctm/ee6W+F9UoJYXNdvYSvb2M4OdrKL3bRy3e3w
t/iA2NzQD9BHY7K9JukYY0/JCrkdc+R87A3/g1kh/IaG9+P6/wESLT8e
           "]]}, Annotation[#, "Charting`Private`Tag$9792#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfcT3UYxvHzUNl7k5WVTRkNUciWQiWyaUhUqKiszERmREVka1AJZY+G
lRERGrJ3KqTU+/7j87qu676/v+ec811P0U49m/dISZJkTKokOZAmSZanS5Kb
sSxtkjyOCsiMg3or1EtjufwEKiIL9qk1wA/8cNyHQ8Z/oVYGK+QnUQlZsV+t
IfbxI9AMPxn/pVpZfCF3Q2X8LnfEBX4GsuFHuRH28yORI32SDJaz4345kXvy
//Efoqg8Vi6Cevxn9An6s2eu5MvhS+NKq03hn+LT83355jQdvZMuoLfoXaSd
cJ/a7/It9D25Q6hcgL4mP0zz09p0MX2MZtc/wDeOb5B/jDmm78iPxu/knPRV
uQXNQWvSD+gDein8M3yC6vwc+pH6Tfw4vih+8V2raHms1OuODPr95PS4Vf6D
dsZFfmbMYayx3AQH+FFojl/9rdVqFbBKfhpV4h1xWG+NekWslnugKnLhN70j
OIpjOI4TOIlTOI21flcJa4zviWrIHXtHrSkO8q+jBc4Yv06tMtbKz6A68sTe
ibXAIX40WuKs8etjvbBOfha34U+5C/7gZyEvfpab4Sd+TLy/uRoi58SDcir5
WT4FH8vF5PH8TTjnORtiTrFer4zeW/xzfEb+JT4DavAL6e3qf9Gu8Uy1P+Vb
6Uz5ff5GfhTfihagdegS+jjNp/9L7PHYP7F/4wzSd+W29I2YPzpUbklz0Vr0
Q/qQXmr+OT4VbuPn0sXqxfkJfDGc9z0baRVs0OuFTPovyxlxh3wp9jL+4mcj
f+yT2J+x9/ixeBgX/K1NalWxUe6NO+N8xN6Js4Vf+XFoFWfd+Iv4Sr0aNqn1
QY2Yl9izel/HvsdX8vO4CwVjv8V5wWF+PB6JtTb+m/hWfC2/gJoohCMxR/iN
n4DWsS7GfxtrhG/kF1ELl2P+cYmfg8I4GnsDR/iJaBPz4vebY47wrdwXd+NK
3De4zM9FERyLNcFRflLsY3M8TM4d94B8ndyLT40lcgl5Il88/o7nbIk7CZv1
yupN5fvxmflX+Ey4R/6bPokrcW71ZvHzYs741/lH6I20Lv0k7g+943F3xV2g
dkyuRKfL7eibcWbo8Ph+mofeTT+Kc0Xb6l9Pe8c+pdfFfNJ5tGM8Q78knSS3
piVofbo03tF3bY2zgi3GlVOfxr/EZ+H785lRW75Ku+HvuHP03ufnx9ryo/mC
cT7lE3GWcJyfjHYxJ56zTe0ubJVfRp041/F39bar18Q2+RXUjTOCkzFfOMFP
QXvc4Hl91K7Hp/I/fv9dnDtsl/sjqzED5Cy4N8bQp3A17jy92fyC2Ff8GL5Q
jOM/pSXUT8VcoanaSbkynSG3j7tGzkdHxH6ieWPd6cdxx9AO+mno83E+6Q2x
P+l82in+F+qXinWV29CStAH9nP7rW3bE+uI748qrv80P4LPxA/msqCf/S7vj
H35h7PG4j+TCKCmfjr+PU/zUuDP0R8r5Yl/IaeUX+DRYKl/z7J3xLdghD0T9
qMtPx7vxi+LdcSbODE7z09AJ//n9rtgr2CkPQgPcjLNqbXGGfxudkWC3Wh3s
4gejIUojBanwfZwT7OZfRSOUwbk4GzjLv4MuSI09sY74nh+C7L5xkJwt9h6/
iHamjeN9+R64xn8QZxrnY41xjn8XXeNewN6Yc+zhh6JJnJU4d7EfY71jPpEO
6ZEBGfFDnDXs5YehaawpLqh1wHl+Oh6L33qvF9XS4vOYN3kyXwoN+WVxr9BM
ev8DfmFOlg==
           "]]}, Annotation[#, "Charting`Private`Tag$9792#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1WW4VVUYReFDd0t3d3d3SoOJBYIoKZ0iXVJKCVJKiyDdoKR0SXdIh5Sg
pO/6MZ75zbHWvmefs+NmbtGxcYcokUgkb9RIpE3cSCRW/EhkXLxIpDBu6esw
DW0R29q3fBHc1tdjOrLxi7n6iIXjXDvE4b/Ti+KOvgEzkJ1fwjVAbJzg2iMu
P14vhrv6RpTitugtkBYzuRzcr+aGiIOTXDVuv7kDcqK5fkt+g17mqOhgXzw5
gSuOe3p9/YS5JzbppfWt5k+RDs30v+QQzLKeU19qboQvzA9lXLxlPi+/Rnfz
a3nK/urmA+aBsqPsKP+Vo2Su8L3kbTlMjpK9ZbTwO4f9jo8vJ/L9ZAn5mfxb
jgxpvYE8qQ+WvWRn+VxutlbGvM3cEu3M/8j0+MB8VQ7Fj/bl0peZGyMe3tYv
yP44bb2GftD8JXKH5BJwk8wlcV//DT8hN7+ca4L4OMN1QkJ+sl4KD/TfMRud
0QVdkcie762XxkN9C+agGxJbm8KXwSN9K+aiO5JYm8qXxWN9G+ahB3qiF3qj
D5La+4N95fCPvh3zkYdfwTVFApzl+iIZP00vjyf6DpTltuutkAELuLzcynAf
ICHOcTW5Q+ZOyIOvuDe46eYKeKo31E+F646dejl9R7jOyIgP9Wvh/sBC6/n0
VeEaoY35kUyEd8wX5QCct6+WfjjcD+F6mf+TecN9bb4jh8vRso+MHp5T9HNc
cjkj3Meyomwt74fnKNy31hvJ0+F5kH1kF/lCjpF/WC8vd4bzkK1le/lEZsJH
5uvhs8PzZo6Cnx2TX64O3wGJ8a5+KTwzuGC9tn4kfBbyhXPjUnAzzZXwn74L
FcI56J8jMxZxBbg14W8iCS5y/ZGSn6VXxjN9N37BAAzEIAzGEAzFMAxHKsf9
6JgqeK7vwWIU5Ndy7yEpLnEjkJr/Sa+KF/peLEEhfh33PpLhMjcSafjZejW8
1PehIrcrvG+QBb9yhbn15mZ4A1e4Otyf5q7IH64Zl5abY66OV3pj/Yy5L/br
lfTd4V5CVnys35AjsNR6EX1DeGegrfmxTB6+p/lyeIfIQbKHjIT/HeF96bg3
5VF+kOwWngH5TI6WBWRLeTd8jhwTzkfGCO//8B50fDo5N7yDZI1wTeUD+dpa
E/PZ8DyF72p+KQ/wlc17wnmig/mpzIZPzDflSCyzr6i+MTxbSBGugX5FDsZV
63X1Y+buKBjOmUvPzTPXRAQHuSrcXnM7ZMdyrhi3KdzrSIlr3Bhk4OfrtRAF
h7gVGIuM1hZwtREVh7mVGIdM1hZydRANR7hVKM5vDtcLqXCd+xaZwzOlv4no
aKqfk/3QzfxKjg33ib1V5b7wjCIHVnMluN/Cb4bUuMF9hyz8Ir0uYuAotwbj
MQETMQmT8T2mYCqyOu4X++shJo5xa1GS/11vjjS4ydXjjod7CYXQSr8Xzjdc
a3NMTAjvb3v/Bzx8Lh0=
           "]]}, Annotation[#, "Charting`Private`Tag$9792#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, {-1.5, 1.5}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, {-1.5, 1.5}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8647526895596356`*^9, 3.8647527350620723`*^9}, {
   3.864752803605135*^9, 3.864752829776758*^9}, {3.8647529038850393`*^9, 
   3.8647530463684373`*^9}, 3.8647533630670757`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"d1121813-fc8a-47aa-8362-7667d47ccec8"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
QOHKCX8F6Pq0YG2r3wOz3xj6tLSfsy+HklsZ+rTiXVb6Ee+6Gfq07cSXgcd2
9DP0aWIDiq8bfAYZ+rTbj+4FbikbZejT2rWm1oNCZhj6NIOnWEb4i0WGPk1Y
Wfl3lgTG0KfJupm6G+DvQ9enJTfZj27G5x/K8tkioYvMUDRR4uJrCwyl2yzP
uFixwE9jjzqCd2PIjbhUv3SFFQZfPGAZqbqIFoixHb/d2KC7upuZkxUZnc6z
0tAJYIcHV/X01rh/g6+RD06M+nBA+0NPJhwVpgHHQzLLzVBOuPlOQMIpOwqI
kmuyMg4mwJ02dr5b7mCg8IRIzIZ7XDDxK2H85wk8/3gneBdEEqGRod6GS/j7
vx1wXb8bzg3r1LaqLuL+4ZA9/OFFEg+cvJ+esucmBpg2RdReyuKFQitAQxKv
Bx8+h3geS+eDuicvwJOpFKDkXd65oYAfTvrOsRR8nQMB85U3txoLQHUbl7SJ
kTFA1+clsNazJaX1Ibo+b6MpofFBywyi6/NqF0WiebsoiK7Pe2pz2N9n1zKi
6/Py/m6Y72NdQuNO8mwEq//qLV2vR7cZej3rmMYb1BVA1+upjXRIfO5aBvec
lstNb3aCsoLCgGfyg0Ca7Yfc/Kl+kBJ2ebn38g9wSSu61s9iCLxXSvTge/mB
oe8rFv6TWdzfzNDvfeLVk7j3fYCh39MwyjGl6A4z9HvC6OSLuMYJhn7vn4y0
gfmxeYZ+z+ppUEK1CZWh33tmEmetvB9Dy+0O3WHZ64BTvDh/EO+P59St7R+0
MkF296zbBy9iaDNrEEdYJzPc+eRFQAVe35cktf729rHAyxdmdmy1pCIe1cW6
5VFW6OO1Qc1beRY57+/UMFxig8b8Az6r3tWIEo5Uq2nsUHyHzPby6kFQ2BVj
TGHhhIt7vkQkRs8DyTBCpjcXAUoZsr1p48NA1G5ws5eNC058+StkjPsTlq9S
IstFhCMs8fe9V/H5+3mjYg0vN+SbmokUxvOftadp466NPNDmeupszwY83ymK
zdfs5IUFCpsUzJ9h4PvFv7E+UnwwnHpsWA2vY1+v3zef28MPXW6tDdfPLIDW
uWMksEUQWrk1h40OjzL0jLOdi+rKYguIrme03GaQ+2UMQ3Q94/tajb36Z5bR
Ho+VC492/ucfdH0j3abrG63qvGOl8LmXrm88NVJWGMZMA3Q944XtpanyZ4cY
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
/vX/59P97+e/XhwvLw==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwNzLcvBGAAhvFPSwz6QMLAxWIwkGjBYmaycKcTEyEhFlGiDIy6gf+AI8wM
d4z6bLEQLWFgkvgNT973fb4SGRxvH0sNIaRgGp/KUFYIa3Id0fQQetNCOHCp
Bq9cAjP8An/DdSAbG3yM7+MP7Vq8cUnM8ov8LdeJHGzyXXw/H7fr8M7tcHvc
qz2BC26OW+Lu7Ciu7Hu7DLn2oX2iB+RnhFBor/DP8p1rxJZ/uu0B/cjZl/6j
1+tnekJv9TZPFstSbkR+eLer7/Mt9pv7mTKbG5aT9qP+5LzTrpKVspqbkpfe
z+vLfLN97/6fnYqYfi0fnEVQ7rzCzuPj8pRLQQFfZK/yL/KDa8K2v3vsQf3Y
2bf+qzfo53pSb/M2X5bIMm5U/gMaYD82
            "]], 
           PolygonBox[CompressedData["
1:eJwV1FdwVlUYheETpCjgqKhggvQqF+IgMHBBTS8U4Q50IKGEmoBKL/ZCQBG7
VKUXGyDSVDpIGQQLoZcZ5UaZoSOI4vNdLNZa77f3nP9w9k6DotJeJRWSJEmh
Mv8UVU+SQjooL6WBFZNk6F1Jst6iTnQNG0Md8XR8FpZKP2HLaBA+DN+Adabr
2FjqhGfg72JpdAhbTuOos1mm2Xt4bTqMraDx1MUsy+x9/FH6GVtJg/Hh+Eas
C93AJlBXPBv/AKtDv2CvYtOwcr0frcKKsRHYJr0r/Y1NpHQ8B/8Qq0u/Yq9h
ZdhRvT99jg3BRmKb9XTaqu/SH6Sb5vP0hXJ6pSS5aF6V34eNlyeZZ8i55h/p
9eg37Asaipfg32EZdAubTJl4Hv4xVp+OYK9j07FjeiF9iQ3DSrHv9Uzapu/W
H6I6fkND/R/r5vNFWAZ2ybpq/H5sgnyG/27Wih7Hn9Sn2JPF87HW2CfW/alf
1BvIa+T1crZZpXgeT42zw8vtfUOegXfQj1t/R69IhXpRfHP5iHlvvTFvzB+L
d+Ff2T9cHoW303+w/qp+U8+St8t75IfptrUL9MXyZbOJNBXLxgqw2XpDWqtv
0CvHdzV/U39LPhGXId5BHxDnjZfjTUJ4C/1r60fw0Vh7bEvcC/1WvL+8Q/5R
7m5Wk9fljbB/7fuUL8GuxDmgF7AcrBs2R29E3+gb9Srxbc2n6W/LJ80GxpnW
j+pNabX5SP1ZeWvct/i+co68U94r9/D8Wrxe/N/G+eL/2feZvBTP1K9aX50/
gBXzyfpZ+Q/zPnEGeEveGhvHX7Q/V+6Ot9HnWv+Xfkl/Op6jr9M3xW/R747v
w9Ow4/aW8ZnYKetS8Mr6oLhv/BjejNZYV6I/J2+LOy7flnPlXfI+uae9j/D6
vAl2x56FfFmcDeyatffyGtgQPkU/J5837xvvw5/gbeJu8pfsz5N74G31edZf
0C/rz8Qz9G/1zfE79Ht4TV4bO2HvdP4Odtq6CngVfXDc73hvvDmtta5Uf17e
bpZHu/X9eiol+iJ9uXw9zi+9bE8+1hObrzelk9gMbBZ2Ri+Os4ONwsZgO+Lv
Wpw7OV/eIx+Q0yhFX6yvkG/EOaRX7C3AnsIW6M3oFLaORuNj8Z1YAf0PKYPK
dA==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0DksRGEYheGfoZCIwjqFBrUCjW1svUanIMbe2LdoKUisNRJ7TzCtRmML
BUqNToJYCpV4bvHmnPN+c3NnpqR7pG04PYSQhlmMKL3ZISQRd1hHSyyEREYI
k24/aOBSGOR7+EPuFkXcGpr5en6Cm7E/sMttcd9cwj7DANfNHXA3KORW0cTX
8ePcPq5RwK+g0a3WbYybtt+xw21yX1y9fYp+LsntcWX6I+7tTrcnLNrz9pV7
XOZlhpDBpXBs50ffW3/Vl/Uq9wa7xh6N3m1X6uWygm+XL/KZm4reb+foWfIt
+g/ltvsG9+n5IbtEL5a5fKu8kOdcnc//6t/6id6nd+m7nivVH3Bnd7jF5B8e
9QV+Tr/0uZh+hqPot7ktIWFX2/+xqz3O
            "]], 
           PolygonBox[CompressedData["
1:eJwV1EVsFWEYheGBoqVIAgQIFlgApYUiwRNgTYKVFrcUQnB3d3eXDa7FNhSX
Be4bXOqlkAAJkODw/IvTc97zfTO3mfvPrZM2Lnls0SiKitAwf9LiomgIrZev
USE1t3CMBsREUe9iUbROd5XeUTP9Uepv1stsrS4O96QHNF8/S39FPwEX0i7d
Vl2Brik+Qv10PXVrdMvwPzqtS9eVkVPpPs3TzdRdtpckZ9ErPN4sjpcs7v+S
d+q34Hx75eVrdBE3MTtMfXEqXm3eRv5A+XipWWVewX3+yqf0x3CsXJ/X1dfW
JfPH/J4uxWwwLiL/pnu4HZ5rPgNf8hmTcRM5gTcOz4pn8pe6cfaH4jJyCV6A
O/Id5pt1ea6vxavpyumu0gWcZO+b/Fk+JPeRU+RV9lvL7ykPLzH7QyfxUVxa
7kF3aY5uuu6iaya5f5LckDcK3wd/y1/owiGJ5cV1+fJ2/Sac67qy8hU6jxub
HaTeuAdead5KLqRcvNisEi/vPr/lE/ojuJRcj9fR19J154/4XV2y2SAcyb/o
Dm6LZ5tPwxd8xsTwXOV4nhi+W/6GP9eNsT8El5aL8TzcgW8z36jLcX1NXlUX
p7tM53Aje1/lT/IBuVf43uUV9lvK7ygHLzL7Rcfx4XAG5ZryQ7qDu+PbNAtP
xefDuxCesdyAJ+hf0zM82l4ubcUbcLbdRLw/vFPhueiW6xbin5SuOxTOjVxD
fkC3cbfwDsk/5VvyTHmKfC7cj9f3uQ3DeeGv+FPdKHtpuJQcw3Nwe77FfL0u
y7UjcQ25Sjiv+k78Ej8bzrb9gfgL/oj34VY4FXfDy8Jz4011LXQFlI0X2KvI
y+l/hN8a/cFw1uTq8n26hbviv/IP+aY8Q54sn3Xf8eE5yvV4fHiv6AkeaS+b
NuN1ONNubPgtoIxw1s32UgruGt5/8/n4e/hd0x0IZ0buQjdoum6SLsPeCJxF
m3RrdW918XhPeL90XcK7p4vBnek6TdNP1J/RD8eZtFG3RvdG1wDvpmRd5/C+
6Iri/+7muSE=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl8z3UcB/DNNmxybGxjc00JpcNSjlSOSjUVGmWVmjQbm6lIRIpSopMu
nZQjRQclKuXooIvK0aXokCuUIul4vh/98fy93p/377f9Pt/35/P45Q2o7D00
MSEhIV4iG3nZIAfK6bKfzGBwsD5fVmUQa6yvkPXpru4s/5Rvcpk6k7vUhbIm
69Qn0Ua9Qy7gJnpap/KR+lK6x0ZYJaZRhcbWG+WjDOEcuugdksu4m7bk6+2U
LzAu9kESTfQ3ycco51xOJpkUqlKNpj73hXycCs7jlNi3/i75IjdzOdXJ0/9S
PhEzpIB2sRf93fIlbqE/qTTT/0o+SSU9aB970f9Fvsz4mCtpHKn/tXyKYTF/
uur9Jd/iHjrEHvX2yIVMoJd1Gh+rr4x5xfnyjvoBanCU9TdyBtdwgXU1Poia
burD8u14XnUW96r7yFp8qi6WOXSM55Z75dVyUZylrMcQbrXuLWtQyiexL9mA
CorjTGQVSng3ZiazKedB64tlHcr43HqAzOUIdXO5Wc6kSF2Xa9UXyup8GDVn
qv+Wy7mPvta1+Ux9apyFep98hdu4KP4/a+P74j6ok3hP/RA1Odr6W/k018V9
5iy9f+QK7qdTnJPer/JVJnIVtWih/518huFxdpxGR/3f5GJuZyC1aam/Rc5i
RMyV02P/+vvla9wR50AdWulvlbO5Pp6JM0jnGO99L+cwkkI6k0Fd6pFJFtnU
pwE55NKQRjSmCU3Jo1nc3bhjHOs7fpBzuSHuD13izGjtvR/ls4yK84j7HfPS
/10uYRIlMWeO0/9JzmN03Im4pzEv/T/kUu5kUMyV4/W3yee4kUs4W+9fuZKp
cSdifnoH5OtMppQCvWTeVz8cc+cE65/l84yhX5x1zDhmGc8azxT7jO+Oz3Mi
bSL97XY5n7EUxV7iLPQPyjeYQhk99FJYrX4k9q1OZ33cG9kw8f/f7Hzr/wDx
ZZnr
           "]]}, Annotation[#, "Charting`Private`Tag$10106#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
bosSHQ==
           "]]}, Annotation[#, "Charting`Private`Tag$10106#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GXYFVUUBtBLC5LSCkiDdDdId6N0pwUYoJKS0o10d0l3SYegonS3pDQq
Ja7zYz3v3u+Zi+PcO1+61p3rdooSiUSyRY1EuseIRFLHikQWx4xExsgqspeM
zTT+c/6RfKKfKMfLwTIJPzurI8+Hz9DfnIB85i4ywizzMtcVN+83dyAVnezP
5RRuOm9hv2MeRml66NLolpir8tp+iLq6C/be5OdHXQndAfNHpOaWrifv6pfa
qxHhsG45vUjrbJmuOlH4RbeC3nxHH/rSj/6kc/2PrqtBVH7VraSk/qD9Y9Jw
WzeA9Prl9ppE4zfdKkqF52b/hHe5oxtIBv0Key2ic0RXT3fR/B0FWK17X3fI
/ClpuatrqbtrHk4Zvtdl1K001yZGuD/7U/kDvzv/wH7J3IeCdLVHYbZ5jfPS
5sPmz+hrjkc6c2f5Qk4N35U5OX+5vlXI8O/LEeEe5FuUNXeTMZjCfPtI+TZz
GOSzmeQq/VhZJ3y3Mg7TiRmelfxbTpIT5BCZNPy2+MPnP5SX9eNlXzlAJqSQ
+WsZNfy3zGtdW8b8i7kj6fnc/lJO457z1vZ74R4pF37rusy61ea6xOKorr7u
irkfhVmnK6v7Nfy2ycB93RCy6NfY6/EGx3TrKaf/LTxTMvJAN5Ss+rX2D4jN
cd0GyuuPhHsmEw91w3hPv87+IXE4odvIcLI5W6+rz5uc1G1iBCMZxWiyu26D
8wbE5ZRuM2PI4WyjriHxOK3bQgX97/YvyMwj3Vhy6jfZGxGfM7qtVAzfl/1L
svBYN45c+s32xiTgrK6B7qq5P0XYpqukO2r+iqw80Y0nt36LvQkJOadrqLsW
fgsUZbuusu6YuQvvhfu2v5LTeeq8jf2+eRTlw29Zl0e31dyUROG9s/8jJ3Le
eSP7dfPAwJyIYuZvZDTmmkfIlPzk+iryuG6c7Bp+PzI+M8gWnk34mysnhy68
0zJFeC/DO+DzbeUD/QQ5Wg6SiZlJBXv38M4wlQXh/0W+E94bn80rt+mahb8p
5jfDOxrecflveL+44LrG9j/DO0xxvrVHZ555h/Oq5hPh3SI7/+ja6R6ax1Ax
PB9dPt12c3MSc1HXRHcj3Dcl2KmrpjsZnhk5+Fc3ifzhmdlbkIRLul1U158K
90VOnukmU0C/w96SpFzW7WYKU5nGdAq6bqfzViTjim4PMyjkbJeuNcm5qttL
Df1pezdy8Vw3k8L63fY2pOCarqnupnkwJdmnq6k7E74fcvNCN4si+j32tqTk
uq6Z7pZ5CKXYr6ulO2vuQZ7wDthfy5m8dN7e/sg8lkrhOnssFppnOy9q3mtu
Rx9z3PA32NxRPgu/N4aak4Xv3vXN5e3Q8T4HdHOYyzzms4CFLGIxSyjmc/tc
3553uKE7SG39OXtP8vJK10H3OLwLVA5n9jdYZB4tU4X3h6Wu/R/o0SVq
           "]]}, Annotation[#, "Charting`Private`Tag$10106#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XccTmUchvEX2UKEUCI7o4FklVQkKqHMiIZskpGiQkRZ2SNFtoa9yUz2
3qMoRfaIzPr+/rg+z3XfZ77POc958zRtW7NNkkQi0SNpIjExZSLxfupE4nSq
RKIbiuIf3R5MQlfbzui6oxiu6PZipD4txuqq4W5M1n+gO8s/QnFc1c3U5cVc
+Q3s042S0+EruTqy4Cf5Uazm72KK/T6Uz/GP8RA2yBWwhf9r+yyeD/PkN7Ff
N1q+E+PkF7CTV8ZenhUreAms4ZeNzdCB/2qsid950jSJREc+1fm6Gc/rUug+
MZ6QGyCb/LC8kT+B9PLWuC/eErnka46fzfMjjTzf9vP8DeSU35IP8heRWf5V
vs3b4wH5gOPHxLnxtW2njY1jf77LWAX7eDas5CWxlr+H33gt/MGnOU93foH3
wCO4rpujK4AF8ttxL7qxcgZ8I7+EezBd/5HuIu+JR3FDdwgz8LFtl3S9UAI3
dYfxHb7HD/gx3oV4ZjEncW3MxTx84vjLjvsUJXFLdwRf6TNivK4GsmO+vofu
H94bpWLO4ly6glgoN4vnqRsn34UJ8svYzZ/Dfp4Dq3gp/Mw74iivjeN8geN7
8iu8D07yhniMbzI+iW38v/gNvBAWyReMb+Idfsj4Eu72LH+Lffm7sR4iO+5r
ngmp5G9tP8NfR3a5pryHV43fEO9CzCtvizxyTnl13E+87/K6WLtxXXTix4yv
4E+ezPZOMTeu2ct4VfcZSmOzXBHbeSLmlxfGYt485sQx38T7iYlyLdyLRfpP
df/yvngcSeK6+sVYgt62X9P1Q5lYV/hdPz7mBJPk2rgPS/V9dNf55ygb940/
9BP0WTBZfgW5sEz/me4G/wLlcAeO67/VZ8UU+VXcj+X6vrqbvD/KI3k8Z92D
WMJb4E/7TYz1HetfroPc8X3S99Pd4gNQIb4JWKgrgqW8Jf6Kb6d8D6bJdbGX
P4+DPA/W8NL4hXeOOeGv4q/4Pjn+c36bD8Tf/LX4xvAtxqdifXqeO+RrvBVS
xvMwFkVa25bJF/lbuFduJR/mNWIe5aPxrI0d5HzGE645Od47pJan236WN0EO
uZ68j1eL91U+FGuUt4vvFF9rfBzr+RVjc3SJZ2esgxPxfXKNL/h/fBCexFa5
EnbyVFjMi2E5bx1rzjFT4h4wQ66PvLFu9f11CQyWKyJ1zJV+NQbok+BL3VNI
g1P6qbqc+E5ugHzxLPQDdUkxRK6EtFgiF8dPvA1O229azCe+lxtiP6+Owzw/
fuZlsIFfNbbA+/FOGuviZLyj5q8zX+t8g4zJ4vnphsY98kbx7shPy9v408go
75Kv89a4X04Xa4Y/hHTyCvkSfxv3yW3lI/zlWAvysVifxvfkM649PfbDD/pz
xqbxnvEDxhdwhBfAOl4WG3nXWB+8Hv6O3+s8g/kdGCY/g+38Gezmd8Y65Q9j
JW8X71X8Z8i58KPcCAXxi1wOm/gHcV37fSknx3D5WaSPe43/lZgDzJQbo1Ac
rx+iS4ERcmVkwHn9emzA0JhrjNRXQUZciP8oXW7Mkl9HYWzUD9Olwij5Oezg
z2IPv2FsE8eZ07vi+8IfwSrePtZf/O/JeTBbboIHsUk/PNYZRstVkSmenX4z
tmArtmE7dmAndmGEY9JgjP2fR2Zcjv/WWIeYIzdFEayXy2Mz/zC+S7w+TsV3
zz134fmNux3/P/ZCZFA=
           "]]}, Annotation[#, "Charting`Private`Tag$10106#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GUYFFUYBtClJQTpEgRJpbu7u1tpFAFpSQUplVBCWkDpECSVEhSkQ0q6
u6Q79dwf53m/997ZmNmZTd+6S93OUSKRSLGokUjmOJHI/riRSGOemJfQh8Zk
4YD1Jjw1/0JfmnDXWh+Ss1efTFYO6k15Zl5KP2LEi0S+tZadC3pT7pn7koK/
9Sm8xyG9Gc/Ny+hPTK//zloOLurNuG/uR0r26ekds9Bcmal6Qn2KuTC39ff5
x/wBL8zLSeWYWXoZPtdj6aPNOSlk/kNeCudlXmauRTnz7vA+1h/I/qQiv/Xf
5X7r75oXmevIKrK03BFeI3+wn0hO1avLIrKo3Bx+A3nHfg75q15P1pfl5R75
ocxm/3CYw7nqL/U8cq2+wpzaPNtcli/0N/Qx5lxcDtdYX26uHd5DfxjOndQc
0KeROHzP8L24q2fniLk5r8wrGUBzHoXP4W0O6tPD9+eo3oLX5lUMpAU5yUVu
jtlvyX/mX/mSluF8OG69FRF+0wfRisf6ANJwSJ9BXk7orYnCan0wrcnHSWtt
iMoafQhtyE8BClKIU/bbEo21+lDa8kQfSFr+0X+kMKf1dkRnnT6MdjzVv+Qd
Dus/UYQz+kfEYL3+tus8J9xTfKXH1seac3NF/4hn5kGko4D9DfKI9Qzmn81V
w/1r3ilnWk9inmauIYvJYvIveS9ce/Nv5vqygawg94bfVRa1f9b8MVX0mDKv
XCcbhnvbfho5NzwHsrwsIbeG511+bT+OHKdXk3nCsyf/lFfD82deEZ6J8Bn6
czmY9BzVM9pfHF7LLD2pPt1cnPt6Mc6Z2xOLDfo3tOeFPoR3OabPpjjn9U94
g436cD6hBCUpRWnKUJZylOeC4zsQmz/0EXSgAhetdSQOf+oj6chLfSgZOK7P
oSKX9E7EZZM+irjO7ftwfbmmd+KVeRgZOaHPJZnjZoTrzAO9EpfNnxKPzXpa
x8wLvyXf6vH08eZ8XNez6SvNdcPr9NfhXiMTBe1tlCetZzIvCcfJ6uH/Q+6S
8+wlN/9orilLht9EbpFN5MPwPMvVegPZUFaUf4fnX1a2f8XcOdyr+pvhu8n1
slG4N+2/I+frtWVFWVJuk9/Ze9M8wZyfIuZN8kb4TzKvMtcL763/J78mM6f0
zPZ/Cc8B8/UU+k/mUjzSq3DV3IX4bNFHE99xE8Ozxk29CxFr3+hZOK0voCrX
9K4kYKs+hq5U47q1brzFNn0s3ajODWvdSch2fRzdieJzhlvLyhl9ITW4qfcg
ETv0dI5bYK4Uzse8XTYL95S9BHJS+G35V+9BVGsj9Pc4qy+iJv/qPUnMTn08
PalFbepQl3rU55bjPiMJu/QJfEYDblvrRVJ26xPpRTSfPdLa+5zTf6Yhd/Te
JGOPPom3HDtZL8QtvTfRrY3Ss3Fez6IvDfcii/WU+kxzaR7rufU14d4K18e8
T7aUjez9D5EsKIE=
           "]]}, Annotation[#, "Charting`Private`Tag$10106#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8647526895596356`*^9, 3.8647527350620723`*^9}, {
   3.864752803605135*^9, 3.864752829776758*^9}, {3.8647529038850393`*^9, 
   3.8647530463684373`*^9}, 3.864753363206031*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"b899fabf-1904-4bff-b953-246ae240e3a7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
2aUUHfd1BdB9wkmxx3vLBkiA7hP4F8XUUjYmAN0nqM6NaYV9+Q3oPuGnZrjb
9MPHgO4TtvfmerQ61jF8gi53thzU/c3wCYHUqhPXFXoZPuGBshzKHhlg+ISu
2WcG42dGGD4hdabuxNuMcYZP+FL6Kn3P8zmGT/BX0NDPjiExfILCPiuxxUIK
wydEFIXZaXtQGD5hIi31DDCmMHxC4B2KZqYyBdF9gvCZ32dop8mI7hPebuWW
+Na1gOg+4SzTJY0M3X5E9wmSWSZWis/qGT4hMVLD25FrjOETUpM/DdQ/WGT4
hCHz3Ddcv8gMn7DbeToyKZvC8AlPXdZTfVmpDJ8QXcHjJ+5BZfiEgcS2XOGT
NED3CRVsE86Op2iA7hNkBSzEd0RRAN0nTA/0xh5/iu2L/t8nnP3Fn5h/fgrQ
fUI2kTXiMmsvoPuE689fanQPv0J0n4Cr3H1iX0c/ovuEu0Zi8jv95hDdJywL
pSmph5MR3SfkT0pcfD5GQ3SfoC2yEs9OpCG6Txg5Hmk3XNQD6D4hkNSssGWp
A9B9wpUfiur5D5sB3Secl/r5LOZXHaD7BOUHwxtk+wpA9wmaBWKNJteLAN0n
JBgXfOzYnAvoPsH4/RHagztvAN0nNDn923pXJxzQfUKpxY6OQ+b3EN0nHLNZ
P2zotQLoPqHGXupZQjQN0H1CnFZipXflPGCnbJ5h3d8N7lXIHnJgHgIm2R83
ZOQHwYXC6tmYlWqAC7i5bw6MAmuRU8kOPf/zDC+Ovj6Lq2xheIbEpDrXDGoX
wy/MKhTh4pL+5xdkDDuHk8T/MfxCy0NltT//phh+4aZKqCj/2UWGXzAbeLjX
WYzC8AuVvts2q6dSGH6hziXzrJQ+heEX5BTSGpesKSix/OYrQhsTfFu+9W3Y
EzIiPpj9TfvDDM8qlT93PUpCzN77v10fYIGHSp7/TUqaRsKNXhIzc6yQNUo5
51FaMTr4S8xvaokNij4wDRgU7gPt1OAwj2V26NHrO4Bk58DgyQLtB0x4KDqe
PG3cQwI4Pb0FEaxP4rL8LTttQQE62R07v+G4YLuXml3zbwpY1diNH2HjhmrR
ryJp+6lAbkb/8XMeHnhmm07dtnoq8OWyf2krwQvFv/7quX2HBnqaBzLSJfng
u+hwjrNZVJBfJmvpJbMJbmTWuXq1k8DG1FPLMSI/LKDmWrTzz4MPhg1R52L5
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
rzzLfkBGzqAV9cpZEerlHwtqkS8g9/rVy2+7ilGvfPdx1Q4qLQGHvoDNYcPf
/1iM4tAXoOdbNvnTJnDoC/CKDTXlYRwc+gJWd5jPt+3m4tAXGErx2le8mYPD
fnmJ+v41ndwJ1BOPcOg6LbmzA/H8NtqmisVzfX95fi+p6t3FTMTz2z+76fW1
noV4/gttgfS37WzE84vVJd6/6cBCPP8trQJlARkG4vl3/L7TfJXejXh+cxVt
62Ox9X95/gPmk2IGiag/HtM5+cy7Nxn1x8vanrsp8BYgnv9VQEgnV6kE8fwS
pouCoQ/KEc8fkwpKwFwl4vnLX/aknZSqQTy/5KSip2JHDeL59YWpWnzHaYjn
T7T7kCFArM+Q5z8qp/9ocrAFQJ4/pKw18VlVL4A8/3sZa8/CJDqAPP9MY/1+
FeJ6gTz/zp2Um9wSBrAz28ii+g6CHzJOpvwadNQ7n+D6XPcYqUB8v0Jr6yOb
HeM45PvNKJfsrBSmcMj3O/P1Bdsu5eKQ7ydb7T6yu5eDcx7hmt/neDEnp/Cp
4O1TqEeufd9CaB27G/H5W96GveoOoiM+n2y8YCl8dwjx+VHPQwIPJLARn2+0
TDXqqisb8fm/LVtcg18NIj7/2Io3uTMdpYjP1wjr/LnZMhz1yvOFeJ1yjmUD
yOcfioxMqTctRnw+Hh0t4h5Qhvj86n2p8u3nKxCff8W/OMrsn2rE529+Qkl+
c68G8fnpGfmTNTI0xOfH3Nm3LPUyDfH52r+2GCUS6zPk8xWi96rk2PcAyOeL
7fUSGOIMAMjnf2QYvXacYgDI55/GRHuvLzAA5PNLHc+1Gd6dxCGfn5+Zm9OW
wsEhn995eXKPtwQXh7y9Wli2yPX0QcTbtx9WOudgyka8/UnlaMe8HOL5mVl5
fscsMe+ObVjv82II8fcfbrBUfSsvIZ7+Nof0MWEZDfH0zIwTQflnaYinzyhe
HfKdeN5Cfj6ikO76TJO4H//j52fF3F9TdzKB2qVwx8FTxL7/K8OgmNh3QJ7+
oo3YS/uCKRzy9CLmj7cdV+biCocWr7zYy4v1fX9elP2Yg0M+3jSjdOuuvSzE
x0eUGShcaGaDjIOtdf/mULAGhrii5RI24uOXR+Sa0ffREB8vW3RRZzmxPkM+
/pjB04YxYn2GPPzdZo22gFoGECUJNrb29YHTwbjhlAgTQD7+FbV69Lc3BzcJ
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{572, 3616, 3614, 1056, 893, 776, 697, 1310, 1094, 931,
             814, 1356, 1140, 977, 1409, 1193, 1463}}], 
           PolygonBox[CompressedData["
1:eJwVzzsvg2EchvGHYsIX0FdiJM4hzMLCgLKJ48ZQCYnUaTKIY9JKGCQSEgsJ
S7EwS5xnpw+BdvbrcOW+r/v/vGlaMzWbSBaHEIqQQlQZQhwNxkY8lITwEwuh
H+98C6P4tVchZY8ha2vCo+2XD+CDb2MMf/Y4Fu0luLI148n2xwfxyXdQXhpC
mz1ti2PcluMRlngpOrwZ57f6tXucd/NjXo9ePsdf9Rb3Zz2nJzDktsy/7LX6
oJ6RF25Juc/P5K57hWznmzLjPik3+KmMeJec4Yfynq/KU56VE77P69VYL/ym
+4hc42V6Z+GNfqcv6Ef6jW8ivUc/sU/rab1B79Pn9Te91bsXPV/4Pxh2W+Hf
9jo9oe/JS7dZecDP5T+emTyG
            "]], 
           PolygonBox[CompressedData["
1:eJwV1FVwlWcYReEf9xDcoSFYC0UHilsTvEUGZ2CGJHhwC8WCM4N7KV6BcNHi
QVoGL37f4g4XuJUZrM93sdh77feEwH9yEpc0utuorFEUZUGqP8rERFFpHDOO
QWtcyx5F2TEwWxQ95ptQCLtt/9jq4zgfi29x3Z4DSfYnfDMKY4/tX1sDnODj
kIAiKIq97lfcvsFJPh6JuGHPiWT7U14jRxR153v4Fh7LG/LFco0tWS7iX+jF
3PfpV/WGOMUn4L0tHum2fGhju8lzIYU/41tRHPtt12yNcJpPxAdbJcyy5Udb
2y2eG4P4c/61f0cPvpdvC8+MN+JL5FpbilzM4/QS7gf063pjnOGT0A637Xkw
2P6C/4ySyLTdsDXB33wyPtoqY7atANrb7vC8GMJf8pq+b0++j4/V1+u/hPdI
b6wvlevcBsklfIesyBNkKt8kz/OZcgc/IEv5+oP6Tfts3lR2lpNtW+RZ9zjZ
ni+X292Hy5U8ze2TrII59pjwDNyS+DG9g/tdPR+G8lf8V5TGIdstWzOc41Pw
2VYVc20F0dF2j+fHMN7T3z1Df22vpffS18j9buPkT/x3+Vv42ZRN+I9u8Ujk
I/kFvYz7Yf223hxd3NL4eXtFvYO+IjwjtxFyFd8pfwgfOFmNL5Tz3PuHDO+D
jA3vqUwO31ce52lyK98lO/n6+3oBzOPD3XvJmfyNW229d3hf7OP1Dfr28BkL
74u+3j5YXxp+hsPPvj5Kv6iX9boj+h29BS7wePeOtgw+lWfhX/L5vBC+sz3g
MRjBe7un62/tdfQ++lqZ6TZBbuR/hOfiXkw248vCc3cfIpeF7yUrh8+VHM03
y0s8XWbwTFnO1/+p37XP4S1lVzkl/F/cKoVnFZ65PVVfrU+zZ9W/0hfYB+jz
9cJ6Uz1FP6F/73UP9YJI5f/xuu59+UGeEX438OZ8A6+C8ra/+D29FS7x6cjm
ddXDe20rEj4Xtkc8FiN5H/dZ+jb5zq2e7McPue3kFXCU3+etcZnPQBf8D2Ll
sFI=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwNyUs2AgAYhuGfOGbtoJzWgChrMHHcNVEuZcAG7IFKaSl2gYShUlhCifAM
nsH7fZni+frZdERMsUYqGZFmNBNx6mjxSSER8ceLfVVXuOGDffsvz768LtPk
nT37hCdfTp/QYMCu/YeOb0Ufc02fHfs3j75lfUSdN7btY9q+rD6kRo8t+xcP
viVdokqXTfuIe9+iLnLFKxv2IXe+BX3LnL5g3jbkwJbWdbI6ORtxafsHq54u
Ww==
            "]], 
           PolygonBox[CompressedData["
1:eJwVzzkzQ3EYhfF/EgpbqDURrcI6YxS2UdBQMDpr2iAaVKJR0aawZIaCFMRS
W1Kr7csXsHwCKr8Uz5zznPfeuXOTqcz4UjSEEEEGNSQRD6ERXbEQXnBREUKD
PY8fzNlitg8M8gxK6LQ/49xez/fxjVlb1PaOAV7+4C067E84s8d5PxZxg3b7
I4pudXwPX5ixRWxv6OPVfAPN/A8LtmM+ojdVhnDNV/Uxvc3+gFNeay/IrP3O
lpdpPiQTvCC3eErm+LbsLv+X3PVuUe7wZXnpnpMTvEV+uh/KdT4pp903ZeCv
6HU/kGu2ktu83qNXlZ/Tp/SsntR/kfb8ER/WE25XfEUf1Vvt9zjh/xLMNlU=

            "]], 
           PolygonBox[CompressedData["
1:eJwV08dzTXEYxvGTSNQZM0q6hV6jlx0SURIkiE6UMaMtpCCMMKMnEnVjDCNq
VggRK8woaVjo/R/QQoqd7nMW3/s+3+f9nZlzzr2316q87NzIIAgi0N5HUucg
6IFkZQ7K8B5ZbYKgFY+igmAIX4pSvEOmvgUP7QbzG4jkW5Go+44luiR+DKN5
p+ggOKB7i5m6ZjzQD+JD5HNI40nOVesi+BYk6FqxWNfA18upziTKRzGKd+Ql
9pV8Nh/I3/AZvAkNYcefyAVyhv3g8N7kdfJZeZKcKF93rlwulG/rT5jL+Tgz
4BfMPeHzmYW82IznLVgUvgteIe8w6+1Pmet4ipnAK8L3wFeaR3ipOZJ3MItd
f1zeIF+xmyUPkF/ri+Rsebr+G+rDnf6xnC+n2w2SzyCVJ/Aq+1t8GR/L//HN
PI43YyGv1l+Ut5t1difNtXxi+Fy8RF4hH5ZHyO3l/a57hQzdV9Tp+/Nr+ItN
ulhdExbwOH4Iw3k71+/TvUS6rhG1+n78Kv5goy5G9w3z+XXXXJCLzFq7NfIE
OVY+iGG8Ld/r7GWeFd4Pf8Gn8S+o0fXlA+VypPB4Zyp1N3kOH8N/8wLenX/F
PB7DyzCUR4ffv+4Szwzvmz/nU/ln3Nf14QPk05jI48LvU/cL+bpuukbM5VV2
5+VtZo3danm83D38bSCZR/Hdzj7DFN0n3NP3Dp8XP5Gn66r7Ev5O+C48xWT9
R9zV9wrvGz+Qq+ui+4w5fGf4/0Ca/gPu6Hvy/y8QgGw=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1ne8j2UYB+BzbMrMyMzOJtmrKJEZ2TuFsimbaCeVlZG9UimlpEL23nvv
TZOGSvO6P/643N/7fs55f+/vfd4H+Tr3ado7MSEhIU2ShISoL/gjAz/ztf6Y
+nQsWB+krJeb8GfQX1EHUl9erFbjonxW7cN8eY/agRTcr39XLcJeeSzb5Fbx
GTypfK3W4Sf5k9sfnfCiPiPL5cE0iDV9dS7JCyjHNH1R9snjeIqkvGSWiRXy
EBpSnmQkJwUpednP3MVKeSiNqMB0s2Lsl8fThVS8YpaZb+RhNKYiM8yKc0Ce
QFdS86pZFlbJw3mMSsw0K8FBeSLdYk94zSwrq+URNOFTfQ0uy+9RmVn6khyS
32G73JrE2D/9crUu1+P3ORjPmjuC/nU1G2vk4+ozPC9vUJtyS76qDopeXqI+
wE2u6M+pfUlqsxbq98od+YeU/MDwyNarWJ8tl+I3DutPqT1JYn2Sfofchr9i
xrcMifuytkJ9lBvyRfVZlsiH1Ke4M+hHq3ezVh7JRvnxuKb8OJ/JD3JVfp+q
zNGX5og8me6s1NeLMxG/Q1re0GdnnTyKZnyur8k1+QOqMVdfhqPyFHqQjjFm
OVgfZ47mVGee2X0ck6fSk/S8aZaTDXEWaEEN5puV5XicK3qRgbfMcrEx3n1a
8gAZeds8N5vifacVD5KJu8hMFrKSjbvJTg5ykovc5OEe8pKP/BSgIGNdPw+b
44zQmposiL8DOCFPozeFGGd2D1vijNCGWvF+m5XjpDydPhRmvFletsYZoS1L
9bXiXZE/5CEW6stzSp5BX77R1+eX2DPuZYI+H9viLLBJbsbfcju+kB/iO/m8
2o9F8j61E6n4kRE8HO+TWoHT8mm1FzPlnWrbuG6clbgeQ0nhve9nfZXcgN/5
VX9JfY5k1pfqD8td+Je0/BTnND7fehHrE+X88d3Yrj+hdme0vFltHmdSbs+y
uFe+lz+idry3+oqckWfRn9X6hnFW4zlQlHf0BdgRZ4Etcou4L7kDX8q149zL
H7NffoLUPBL7o1birHxGjX+EZsu71HbxfeO+GBbn23yN2og/uKm/rA4gue+9
TH9E7sp/pOM6I+PzrBezPkkuGM+UnfqTag8SrY/Rb5Vbciuuob+mDqaj/FXc
c+yvfEHtz2L5gNqZNNTRL1Irc06ew265fdxj7KF+rdo49jaeD8WZrC/Erjjj
dKJu7IdZFc7LcxlACaaYFWZ3nHGe4FFKUorSlOE+pvq5e9kTZ57O1Iv9MKvK
BXkeA1mnfyyeb3xfjsrdSM8NRiXe/j9CWWv/AyFnAhw=
           "]]}, Annotation[#, "Charting`Private`Tag$10218#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$10218#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GfczmUYBuAHvbwKGZUo8hohKYUkM2VUsiIjIzRki5JCQkQatMleUTKK
7L1nZBPKVkZGZHZcH47ffZ7Xcz/rv1JadKjTPlUikWibOpGYnZRIvJ8ukUhF
+uRE4su0icQZuS3Z9Sf1HfJzZNaP6dflt7lFXmh9jE3yRWtnesiHrc35Vz7h
OybIeflFf5l9ciNOy/ezXq7G7/KHzPGefnpqvtIrk4FFehl+lXvyl30T9XzM
1l+hKHPN+5ul4Wu9Chn523weH5jfxDdmVcnESfP5LGAhi1jMAPuSGGpPNW7l
lPkSBpqnZZjZU2TmtPl3ZvmZo7/KAyw1/9AsHd/qT5Mljrf5JLMCzNVb8SDL
zAeZJTNcf4asLNbLsll+l3/sm6zfyzz9NYqxQX+KffIgltv3UZxnRujV2SnX
5bicjSVyObbIl6xd6CUfsbbgopzGdfCufNbnfW8tSAaz+V47L3ckp95a3y+/
QFb9jJ7K2kO/x/qQvlF+mkz6fv2K3JW79Y/i/Mqvcrt+VU+yvqenWFf4/o/l
mxkZx8HajmflXdZ6nJBvi2Mvl+c3+T2Oyi25JJ/zOT/IhVigt+GA3Jh/5IfZ
JD/DAfljVnrPJ3EPMEqvwe1xzvQKbJV7x/Gwb4pemIV6W4qzyvzTOG6M1mty
BxfMfzS7j0V6O0qw2nywWUbG6LXIzr/maxgSx5CxZrW5M+5H87WsYz0b2Mhn
9t3KOHvqkCPOtfkmPo/7nPFmz5GT/8ynmhVhsd6ekvxq/oVZFibodbmLy+bT
zO5nid6BR9hs/mVcC0zU63F3nHPz6WZFWap3pBRbzL8yy8Z3+vPkiutYr8g2
uQ9X7ZuhP8AyvROPxu/Tq/OH/Am/2fe1fhuT9Prslp/nLzk3K+TH2S735Zj8
Ev/J17z/J/lBlse5snbidfkPa5P4ra7Ls3pqa089j7V0/Pe4LuO463/Gb5bf
Ipf+aTyX5FbcoV/T01p763mtW33vN3EPxLWuT/b6Wbk9d+oN9D1yff6Wb1jf
iXssrlNrJXbEebS+wfvycevLXJav+/yf5WKs0Dvzp9yUc/JjcS7kGhyUB7PN
e4bG7+V7vSF54rrWn2Cn3C9+i30z9YdYqXehDNvNh5ll5we9ESkkmGX2MKvk
NyjLDvu/jf/LFP0F8sbzJJ5hXtvFbvYw3J4c/Oi1xuSL88EvZsVZLb9JOfba
PyKeV0zVm5A/nnHMNivBGrkr5fnd/pFmdzFNb0qBuD/1J9kl9+cm5uglWSu/
RYW4BvWaHJKHsM/njYrnHdP1ZvGb5AaclO9ljVyZ3fIHJDFXf4R1cjcOys04
L1dkq1yLw3HdWrvxmXzS+hrX5XSunT7yfr9hdFyL8Twzm+G1c3KHOI76i/G/
5YZxr+un4jxZu+u5rQX1tXKVeD7pe+IZIL8Zx0kfoJ+QX4l7T78Sx8faS08r
z7OWYn08z+J+4m35kPVFLsiPxzUn1+aI/Dmn5NbckA/4D2Pi9/CT3pxCrNOr
slceGP+Z+fqjbJDfoVLcv94/Nu4ZftZbUJjkuBe8Ni7uZWbqLbmP9HHcvXaI
wxzhKMcYb28Ks+x5iSLczAKz0myUu/NE3At6HY7KX3BabkOCZMeprzWf9bjP
/R+s+lDr
           "]]}, Annotation[#, "Charting`Private`Tag$10218#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1WUYVGUUReEhlFJBRASxkFK6pUER6e4OJRTpbhVssQjFAqVEAQWUki7p
BmkEpDvFAH3Pj/WcvfY3986dW5O1Xbd6XZMkEoniyRKJ7CkTiaGpE4m1qRKJ
p7Cev4JGyIFh1tbpS2ADfxWN8a3+iq4trvHvkDO21a/XlcRG/hrW6tLjVV0G
NNFN41fldrjOv8cBXU6M0T2BXPF9fINcCpv4WV4Mk/hwvk6+D6/x+/GfXBXz
5aZxXPI1+Xnc4Nd5eczk0/lBORfG8kfSJBKd5CflFHJdeZlcQB4gPxG/x9yo
K6orbaY1m8Z3mputn5OLoxyfbD2b2YXXNUdYXy9nQEk+3Hpm83lew8zIE2Y1
XtFcwPOafXmzOEfmdd0LcR71rfif+htmBfygn8EPxbHiE54bT+qG801yGWzh
r2OD7n6M0D2A5rrp/IbcHjf5TOTGCP1mXVls5W+gBfLEvqxt0ZfDNv4mWiIv
8iE/CsQ2PrfVZ8pjO38LrVAwtrG2TV8BO/jbaI1CKIwiKBrb+Nx2n3kaO/k7
aIMZcS50HfAX/wHFYj/6HbpnsIu/i7bxu/Q3dR3xN/8RxWN/+p26itjN38NG
XUa8rssU92zsn/8ld8I//E/+NH7ks/jhuI/wKc+DlK5XPb48nrM4DnmX/CzS
WWvGf9OfN5+Ke1Q3xVp2syuvZ460vkl+AKX4G9YfNF/gNc3MPIlZnT9rLuT5
zH68Udxn8Tvlv+MY+IvxzJitdf9au2k+g1nx/Ol7yrP1v5u5MU7/aGwn55VT
yfXlFfF+iHMl75YrYQ9/H5t1mfBmHGvcu7pZ/B/5Jdzic1ASI+Mc6J7DXv4B
2qMUSsf+rO+xVhn7+IfogDLxWWt79VWwn3+Ejpgdv03XGbf5Tygb2+r36ari
AP8YneJY9Ld0L8e7hP+McrE//X5dNRzko/Bi7E9/W9clnl3M1ZWP/ekP8Oo4
xEdjiy4z3tJlid8f++f/yV3j2sW9G89+nHd5nvUjch58FtcSqZ3zBnxlPCtx
HPJBuQYO8wu8BKbyMXyr/CDeju+0bXv5ITmpXEOuZP7C85v9eWfbzDUTsR9d
N2sZzTa8upk0npe4v+J+53Pi/WL24g3M+bY/GvcHSvPPrT9mvsRrmfl5GrMh
f85cxQuaA2N/cZ7MQ7qauFffnP+uvxjvTHyrH8u3yVnwDn84rpduHk+C7jwZ
FuiO8Xz4It7j8R7QjeGH5Vo4wj9BF1TE2Pg+fW0c5Z+iK+brk6KHPjkW6v7g
+fFl/IZ4lmNf/IhcB8f4pXhWMY2P49vj/OPd+L+J4/Qba/JFcjfrC+Rk6Bnv
ZGtt5TviHRPXKp5P3U/xXjd784Zx/Wx3XC6AMvwr61nNzry2WYjfZTbilc3V
vJA5iDc2K8XvlI/qi8X/npnebKH7w9rluJb4Tp8j7om4H/U7zIfxnv4hfQf5
0Tg/ci15sdzd5xbKydGL34l/49rjZ3mR9RNyQYznheP5143jx+R6OM4/x07d
IxgZ9xR66H6J84PePAUW6yrjszh2Xh8n+BfoiUX6O9En3slYoqsS+9cd5w1w
kn+JXqga21o7oW+IU/wr9Ea1+Jy1k/pGOM3How8W61Ogb7wnsVRXPbbVneKN
cYZfiWuG73lO5627XN+cYG1XnE+8H9cTfXVLeEr0i3cBlulqxPfqTvMmOMu/
Rj8s1adC/3jusFxXExN0Z3hTnOPfoD+W6VNjQNwzWKGrFfvTneXNcJ5PxAAs
16fBQP3dWKmrHfvTnePNcYFPwm7dY/hA9zgG6lbwuzCI34NVujqxf9153gIX
+WT8psuKD3XZMEi3kt+NwTwtVuvqxvfpLvCWuMSnYI/ucXyky47BulX8Hgzh
6bBGd5IXwgReJO7B+H5+UW6Fy/wqL4vpfCrfK2fDx/GM4A7XsDZfIg+xvlpO
i6E8k7V28r3yrXgmMVfOo+8j/+rzp8zC8R26r+N8mS/zOmbRONdmY17FXBPP
jTmYN4n/5Pi98iV98fh/N+8zW+qqmVesX5PLoQKfYT2X2SPer9b2mdkxKt6t
+o5yznh25TryUnmoz62R02FYvC9wO44H8+S11k/LRfBNvFfi2dJN5ZflNrjK
p2G/LgdGx3FgmO7XOD94JY4d63RneFFMjN8V94vjaRLnK66TPERuGv8tPvs/
JMeraQ==
           "]]}, Annotation[#, "Charting`Private`Tag$10218#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8V1Mcx/FvKe1SKTKjQkohmygZ2QmhRclI+mVnZDW0aCijgQZC2opC
w2qIotK0lcyKjJLxfP/xenze7/e59/u995zzOfegjt1aFhUrFArzixcKrcsV
Ch0rFApLyhcKLfAbPw2PoA2uMfaB/GJs56fjUfSVb5Hdgb3xqawtOsmX8i3x
Oz8Dz8nK4zHZsRgk68dvpe9EDayWtcO18g/5S/AH/yqel1XAMNlxGCzrz2+j
u2MfLOKPxCx6Tf6X3hdj+TPyfPSpeJdub/w6+iP6UvzJz+MPxSR+Jv8CXRHD
+W/V83E8vSwVb2Wu1DYY4voB6q+yf9S71C/V5vmNip6DX0wfhZL8a/xW+gpU
49fmPen9UODHGd9Mt8Ae/JmZH/o0lOHfy9zS7XCVe69Xl8kuwwb6DPwln68e
hsnyWfwEuhIe50/AcvoEzKWHGh9I/0bfjf2wTjZTtj/G82fhatkN/HK6FXbw
r+Gx7Bn5dtk92B/rZR3QWf4xfzl28q9jWPZd9lf2DG50zSfGr8Df/GwMz35A
F2Mr5FdiFz8Hj2cfyn+X3YsD8u5ZV9wkX8m3znrwb+CJzBO6Glslb4N/+Tfx
ZN4pz5nnyP+hyHWfuqYt/uPfwlMYJP9D1gMH4rP8H7rJV/PtUMBc2YtZPzzB
n4gRssH8n/R9qInPZbNkB+A5/mx0ld3Mr8leRTEs4OtiCj3P+Et0ZTzJn4SP
6RMxjx5pfEj2AH0/vqLPwUH0EvVo7G4fvc5vo6/EF1lH9UAUM/a8se/pi/M/
fPP0Fd0EZfn30590e+zFF7n/Fnpt1jj7MnOjnpneN16cf5s+HLvxU/mf6Esx
370vq1XwlHyjegFOpj9RT8o19CjXDaV30A/g4PRZ9pOsJl7gz0E32a38uuxX
7Jb5k43OPpXv5B9ErcxN5hq3ydfzHVAizyp7Ou+U38o4bscduBPdcVcy921w
fUeUxDuyZ7K/5X/zD6E2vpbdnfvln/HXYHe8K3s2e12+i++JOvhGdk/+S/45
3wml8J5soqwqRvCnYEz6gf+H7oVDcmalh7LmmMCfmz7Jc2et6WtROs/L18M0
+n3jr9B7YiTfGCuyDlhAj00f0f/SvfNO9Lk5N+kP1EYoZW1n87/SrbEx/aoe
jOLGXjT2A90y682fx6+lm6IcvzDncfYP9uZ7ZJ7pL3MuqNelZ9SzUMF4mcwh
XR/T6Z/Vy7DQfZNyvmKUfJN6IU6lV6qn4G16XPqf/o/ug8OwlD8Gc3Jfzg+6
Fl7iz0/vZi35r+jrURaLZJNl1TGaPw3jc2bwBTzM18V3svuztrKv+RtQDovz
ncQDuNfYN7LOKJ+ezTcQD6KHsW9lN6JC5j3fKoxI36Kv7HBslj2E+7IGfBdU
zP7hj8AM+he1VfaSeVzq2inpZTxtrAkmyEZm3dCPr5czQdYz7yDbxN+ESvgw
5x1Gpb/RX1Y/ay3rlfeSfZezDXvgo5xh6Ul5CQyQHYEfZb3zrrLNfBEqY1nO
iPSkvCQGyhrkDJH1ybvKvk/vowqWp0/Siznr8IisYfaH7OG8g+wH/mZUzfmZ
vZ9ezB7Go7IjM0eyvnkH2Y/8Ldgz51L2F8bIS2OQ7ChskfXLO8h+4m9FtfSR
bGr2NJ7hm2KybCxfBoP5o7E13yS+Nl7mL0D/vCP/M30bqqdX+QZ4NfvZ+DS6
Bp7lT8cU2bic1RjCN8oa0cfiDXpbvml0HUzMvKuXpEfoderpWET/pV6d9cm8
qb/Idqm3q1+oZ2fP0AvVhllLe2lm5oG+PGcJv8q90+l90mcYkz5QL0Il4834
VXTjzCX/Dr+dbpt+yrfC/eNzPuTswdCcj+p56dPsJfU4vJlzx7Vz6UPwCn8R
1tPNsJjeoXbIXPndga79H9HilDM=
           "]]}, Annotation[#, "Charting`Private`Tag$10218#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8647526895596356`*^9, 3.8647527350620723`*^9}, {
   3.864752803605135*^9, 3.864752829776758*^9}, {3.8647529038850393`*^9, 
   3.8647530463684373`*^9}, 3.8647533635919075`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"36b0c00a-02ac-4a63-a003-5c03be04af92"]
}, Open  ]],

Cell["\<\
Understand the performance of the functions wrt random initial conditions\
\>", "Text",
 CellChangeTimes->{{3.863702871824973*^9, 3.86370289295422*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"717b448c-0568-40b7-93ff-966702325a00"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ffCartPendulum", "[", 
   RowBox[{
   "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
    "order_", ",", "maxIter_", ",", "InitGuess_", ",", "uMin_", ",", 
    "uMax_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "data", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", 
      ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
      ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
      "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
      ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
      RowBox[{"xGuess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["xGuess", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", " ", 
      RowBox[{"{", 
       RowBox[{"xdot", ",", 
        FractionBox[
         RowBox[{
          RowBox[{"Clip", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
            RowBox[{"{", 
             RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Theta]dot", "2"], "+", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
        "\[Theta]dot", ",", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"Clip", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
             RowBox[{"{", 
              RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "+", 
          RowBox[{"A", " ", 
           SuperscriptBox["\[Theta]dot", "2"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"A", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "0", ",", 
        RowBox[{"-", "\[Lambda]1"}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
             "2"]}]]}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["A", "2"], " ", "\[Lambda]2"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["A", "2"], " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
           RowBox[{"4", " ", "A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"5", " ", 
            SuperscriptBox["A", "2"], " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"4", " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"5", " ", "A", " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"4", " ", "A", " ", "\[Lambda]2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["A", "2"], " ", "\[Lambda]2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["A", "2"], " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
           RowBox[{"A", " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "A", "+", 
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[Lambda]2"}], "+", 
              RowBox[{"2", " ", "\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Clip", "[", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[Lambda]2", "-", 
                   RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
                 RowBox[{"{", 
                  RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "A", "+", 
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
             ")"}], " ", 
            RowBox[{"(", 
             TagBox[GridBox[{
                {"\[Piecewise]", GridBox[{
                   {
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]4", "-", 
                    RowBox[{"2", " ", "A", " ", "\[Lambda]2", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "\[Lambda]4", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
                    " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
                    "2"]]}], 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "uMin"}], "-", "\[Lambda]2", "+", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "uMin", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
                    "\[LessEqual]", "0"}], "&&", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "uMax"}], "-", "\[Lambda]2", "+", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "uMax", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
                    "\[GreaterEqual]", "0"}]}]},
                   {"0", 
                    TagBox["True",
                    "PiecewiseDefault",
                    AutoDelete->True]}
                  },
                  AllowedDimensions->{2, Automatic},
                  Editable->True,
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                  GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                  Selectable->True]}
               },
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}}],
              "Piecewise",
              DeleteWithContents->True,
              Editable->False,
              SelectWithContents->True,
              Selectable->False,
              StripWrapperBoxes->True], ")"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Clip", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{"\[Lambda]4", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
              RowBox[{"{", 
               RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", "A", " ", "\[Lambda]2", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "A", "+", 
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
             ")"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", 
        FractionBox[
         RowBox[{"\[Lambda]3", "-", 
          RowBox[{"A", " ", "\[Lambda]3", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]2", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]4", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"A", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]}], ";", 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["xGuess",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["Table",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["If",
          FontWeight->"Plain"], 
         StyleBox["[",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"i", " ", "!=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]], " ", "=", " ", 
            RowBox[{
             SubscriptBox[
              StyleBox[
               RowBox[{"x", 
                StyleBox["Guess",
                 FontWeight->"Plain"]}]], "i"], " ", "+", 
             RowBox[{"\[CapitalDelta]t", "*", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}]}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "0"], " ", "=", " ", 
           RowBox[{"{", 
            StyleBox[
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}],
             FontWeight->"Plain"], 
            StyleBox["}",
             FontWeight->"Plain"]}]}]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], "\n", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
       "}"}]}], ";", "\n", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
             "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                 "\n", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                  "]"}]}], ")"}]}], "+", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"sv", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"froot", ",", "data"}], "}"}], "=", 
      RowBox[{"Reap", "[", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}], ",", 
         RowBox[{"EvaluationMonitor", ":>", 
          RowBox[{"Sow", "[", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "n"], ",", 
               SubscriptBox["xdot", "n"], ",", 
               SubscriptBox["\[Theta]", "n"], ",", 
               SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}],
            "]"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Clip", "[", 
            RowBox[{
             FractionBox[
              RowBox[{
               SubscriptBox["\[Lambda]2", "i"], "-", 
               RowBox[{
                SubscriptBox["\[Lambda]4", "i"], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}]}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
             RowBox[{"{", 
              RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.863893336562357*^9, 3.8638935104547806`*^9}, {
   3.863893544100028*^9, 3.863893549383339*^9}, 3.864135408269006*^9, {
   3.864142771556004*^9, 3.8641427819726334`*^9}, 3.8642366861025925`*^9, {
   3.864739935175744*^9, 3.8647399858885136`*^9}, {3.8647400853146915`*^9, 
   3.8647401070617313`*^9}, {3.8647401401521406`*^9, 3.86474014471668*^9}, {
   3.8647405605585876`*^9, 3.8647405780110025`*^9}, {3.864753156971038*^9, 
   3.8647531974430847`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"54ebfcf8-c8d4-4971-8be6-85cd58106294"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", 
    StyleBox[
     RowBox[{"2", "0"}]]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["\[Tau]",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], "5"}], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uMin", " ", "=", " ", 
   RowBox[{"-", "2"}]}], ";", 
  RowBox[{"uMax", " ", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "1"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess", ",", "uMin", ",", "uMax"}], "]"}]}], 
    ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  StyleBox[
   RowBox[{
    RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["}",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.864753222902938*^9, 3.8647532312442665`*^9}, 
   3.864753307706794*^9, {3.8647568375150604`*^9, 3.864756868210238*^9}, {
   3.864757086753292*^9, 3.8647570935951014`*^9}},
 CellLabel->
  "In[479]:=",ExpressionUUID->"5ee4d0c0-6ce1-4573-b81d-893d5180084a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0.378359000623687`", ",", "1.4582022563251282`", ",", 
   RowBox[{"-", "0.13397120253383976`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864753232570842*^9, 3.8647532455516872`*^9}, {
   3.86475337345875*^9, 3.864753384419242*^9}, {3.86475684110791*^9, 
   3.864756868900015*^9}, 3.8647569176933985`*^9, 3.8647570947547293`*^9},
 CellLabel->
  "Out[489]=",ExpressionUUID->"382f6a25-6219-4607-a69b-f6fc59d5fcf6"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 492, 52, 17533304191359290124, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.864756875717833*^9, 3.86475692381244*^9, 
  3.8647570975698285`*^9},
 CellLabel->
  "During evaluation of \
In[479]:=",ExpressionUUID->"9d0704e2-67d5-49a7-a8d2-49fe013b5cc2"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$244677\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$244677\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"4.257734791797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"15.579514402831979`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.000027432698866395463`\\\"}]\\) for the integral and \
error estimates.\"", 2, 494, 53, 17533304191359290124, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.864756875717833*^9, 3.86475692381244*^9, 
  3.8647570983515778`*^9},
 CellLabel->
  "During evaluation of \
In[479]:=",ExpressionUUID->"1868f889-4f1f-4fff-a4c8-6fa88760d80f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
qtfmd04tPFC/3OVlvyTGlKy8sHRgiBeah9bKbXzBxbd9W+LbN8YHz6e3F2SX
jOI/p64En5vhB1ULnYQK3nbUapirfYNCA37BVEYTL+HfBgYji9k02L0nADli
FNB9/mvtO2zev1kaG2gdfPP+/ed7S3raMhFQcNj8O/sT0QcUyltdWCUKH/oi
flKJfMPtu2fVvYgOWitLIp3yMXi5tyLsQCQd1M9clymi8MBgmz+nmCEGa2bT
qgdOsJDTrfsfOXfFwMFgU+sM5eOcHhD1YvWgkNcoTuoBx5bVtrfkcHBSD0ho
1sq9+YCLk3pAPHXDTvEmFk7qAaS/kHoAaZN6AGmTekBZhZJxt38GTvL/0ssU
vgq9HZ7j//Uln93X2zMzx//XLvJwfOWIAcn/e8c37tnLIeK9vXunqWEP6i4y
p66IHEfWQgoHom/2o+7I7++cz7zBFZTX8XT/HEJ2Qcym8+tGcVIvaFvM85k5
wMJJvWD9np3Fr45gTFIv6Npx3JyhiTFJ/p/0H5L/r2E4Hqkq5OIk/x966vfU
/a9cfI7/v7j3fbIyxsy12qr1L5YHFHaEnOzTwJjH3h/qfv6CF9a17lIZOYgx
7Vp6Lynn8oGRZm7uQP0k3vSdxTmdyw9e9p2hL05+RD8M5Hv5igTgIvXDfvNF
LORvFPHvRwENeKwfbCsRpcDj8yVR6/MF4ZpkicN+Qwy8MrV3LGmez38bHNe6
xP8VgXYd35fsdg6yTllL9f0nCljrx+n+n1yU8ib3566zdJj9Pba8opcKRzLy
uZIjdDAuHrRweYmBft83q4jzYrAjOIRzWK9lTs94MY0p3Djaj5N6RuTWL88m
GWyc1DNipLIlrvBhTFLPeOGqfij9MBsn9QzSH5Q/unpM+c/b/pl4aHj0vL+Q
eoaijVqigt7EnJ6hwj+z6EoEG/1wCvF6pNGGAgsujim6UuB3+oUai21dKHil
isTybRyUzl5z/92TQUTlzLh+cO3CX9w5UOlSNYw8C/fT/72awq/kFKQpdIyi
FD3WyFLi/Eh95MGOC6sjrTAmqY/oNA4t6ebHmKTe8Tnjx8Ibk1yc1Dsmnqz4
I5/JxZ+XCJVXLqaC17agI3ICGFPHIapcbQkP9PsyDyoS9dIkfNPW3tW8MLiw
4ZSIFsasaY7Zq6LOBx9W5W81+sPGxfJ3eT/dxA+LBGhIargH/7pciO6rIwC/
ylZo2LKG0Mgeg3Dh7UTfv3IgesdjDPx1udPmWoLgWMqvplWDQWdLZ56e7nw+
2TF8VUzDUgTUP3itkbDgIk3plQdM7EXhRPQLI0XCryv5ZQoi1ekgvbjFOiWP
ArkdbbssX9Phice/Z8xMKlF/ddmem8UgTN/GJaB2HN1WtlnrkiMG16N+5OvX
fcV/Xb8RLKIlDrQhHUujK5M4qffcb76tm5fFxUm953exknB1Nwcn9R4P8weC
C1gsnNR7yPMeM2/+Ud84f/6k/jO1J1S7nIbjpN5jF6Cyt+L60JzeU9MsU9Bq
Pj2n96zzETwc2s+d03saVDKuO26jgK1FVmN4YTcqWVLas3b/FKoMS/c35utH
14XDPNt/ZaOyKMsq/XtDyJrdfSg5dBgn9aEdkYk39adncVIfEjLUS/A0wJik
PuQUdMu+SA9jkvrOLpcQVfwLFyf1nXubr9kWEPmC1Hdm+zwdH6zGmOEHNVjp
PjxgvVXjhMYOjDmj9nGvcCgvaOrtf/bGlcAP/w75f4vmgynLcQuT2Gn8hM67
POcofmi+J7Lvtf1b/Ouuhu26jwVAbvgba8H7aQQVOZ2v42lw13gL+kKjwHdz
HSO7h4Lwx+5t8zc3DEoeO4d9Z87nh38f0jyy8kVAN/dKsfo4B4WHJiV9LxcF
vrDwZZtjuWili5J3kS0dHE4Ft64uoEKIpIU/aqGDUavQxigC32Y/7H1RbycG
kp+SHt1M6ZrTq94dH7lZzduNk3rVEcdHTsJUFk7qVWuvry6cphP19f/0Kqmf
t5Rys9g4qVeVH4lylqzj4DENb4obz8z7h/z1yRl20Lx/kHqV8NUgLUGleb1K
Z+SgdnMNC0ULyX6wft2K9nmcOHfMmAIuUWNX1hR0oj0Zrv8+uHORZEBqiduy
QZTtW2fZcL8V3zMT/PBLBJEfsqfPvnGbxLG2mH8ocRRl9fPdKNfg4qT+1S74
+dtWAn+Q+peV48k1iQyMSepZZL0g9azqS+/cdhL5IelTwebhcQoEH1xh92CG
i6dPbf9+d5oKeueChi/txJjrgtSnnvLwgpQKLuFF5JtzRwVzwsT5wP9a/Y36
Zg6+piTDx2gRP0QPHLp68ckQvi+09IuXjAB8ndHzsFjfi/4ZcTsNV9BAtlZ/
S7MlBlCyauI/GUGYlO0329iPQXhLluWQNnHeYenL9W5x0aRrkqmtnig8zlkc
9t8kB3VO/w7Ll6fDvdmlNNhBgY0xpr21iXTIvrZu2q6LCh/8Wv0eyYvB8eUH
+78oTCPWH99zOcliQP+2vPijUDI+21OZyacoDmWayrfvRY/jpH5nfHPa292A
i5P6XVScTWSnPhcn9bvT7Z4xRT9ZuPw624snVebP+56a1A6DL/PnLSGb+viF
VgNSeSV3c5vaLJIx3rGz63ELuiA5sU+tnOhjHAda3xV2IGcZNcNF6RiElI5s
vrFoGPlEDkSJvxjDp7UPnnZZMopcbd50lJazcXPbyHxVwm+ET/w1cyXy/TX8
/LLUlZNoYZdRYvgGjCmDLy29lIHButndrkp5XDycKb9wSyYF2nS/3On6zcUv
L3nUZJlHBb+Z34y/W4jzd97io4jzwI9LNrM5ihjzrW5ngPE3XhjZLPNPeCXG
3F8X6HfrJx+Uj7S8yOgex+t3u0aVtgjAnYvp/Hs2cRDzs8vA+B8avH5+4K67
MAXORuxtGmkShN/1IsUS8hgoFolOWHPn49dNIuXUTYoorFe++7vtLwdJNR9W
ZfDRoeSiR4u0CvF6nh0bKwLpYGmsd+E7lQdWGi6/PEAVgw+9kz9NfbhI7/kx
wTEBcRC/u9JzucIwfqY0V78uVBxiN5lab5lhz+mhlx4ftjRq5OJzemhwamyq
EBsn9VDyfH4HXapasOIvUt1vqp6iw0H08kn1erwNBd2/ldDrSQF9fEb+Tl4X
wu9z9k3WsdAy7R/qARJDaE2u/DL/hl5cZIMsRUR0BGXsmsD/q5vG+a+32jEU
xtCg5LDHbgJ/ly0xbipfN4FCGoPqBI/9D18VM3SXzve/JdHxw0fVMJAUsflR
2MnFWYceUU5uoMClZUjzAYH3a2o7P1Zo8MDrsO7zoUT+Ph+78bySAS/cCv4R
40Oc/0an9d3fDvOBxpUNKrsSWfiMccR/ldY0SKde+KFO1FdmUT3bz0wQKrO7
1BtyMRjDTIsv+4rA3x4vyvKNXHSpJMFI64YojJ3+kKX5HxflMo732+vSoTxu
kXznKipoqp150sqkw9H0/us0Wyq8XqtrsXiPONzD37YoaU/jI7LPbb2+isP0
kRvGg9NcnNSHnfKXCWeasfH919JOuQ7MxwOpFwf9jrqyi+8jTurDZuFeUjLN
g3P6MF/kYee3f6fm9OFfhpO91NPcOX3Y4X0bq/kABULuSyls8OtGZTpa6REp
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
YGL/4ajf7bijt8Yw/+xZpOmQPcMmEP8MPebs3LbMEoh/VvOr1oq3oeQj/rkz
8rTa49OUfMQ/L1hsf2zWY5ZA/POmOfOWASsO9gnqLrwlrmHRhXnkFCmeX62/
BzCP3Jcuc6ZjyyjmkfXHKVEB50cxj2yiYrp/CTmvIx55I9w00+HWhXlk+cFj
sRsE6v7HPPLCIvftgw+yQcYPwWCz2SaAfIOfdx/Wm3P5hX2DffFZ3YdOdYLm
l271xzf3gNsJDR8aRZgA8cy2gc/Xx+izAeKZr6i+mTu8lgMQz3zu8tC0kMUk
5pXfNJf//qI6TSBeWWxqrnr62xyBeOWTrPL9tgGUfMQrWwZsf6fQOUeMGRkE
i+gLQj6b2PvGT6axD1D3bZByfXMv5od9eP5PY/ceDdX6/wF8n3TGVCcZCadc
I1RKJEnybEWSIhWFUimXlKSQ3IXcItekK13djmukyExyS6SUGoQo5DLMTpgZ
l/nu7/p5ntb6ts7q579Z9h977Wc/n8/nmfVa7xHn+CmykR+2ZYXKaWUSyA+7
tBaNsZ3ZAOYHWrWrfU126EOe2CPlU4ZWMuP/7Yk3J2x4OEePifIC+76MnNYR
aUF5gaXGV8tYWp9RXmD00jvZYk+6UV7gLerFg3QnFsoLVOIv7um+SNaZGU+c
UKVuH3p8HEBP/NXsuOaNb1wAPbEr28x1oJiL8gWbdV25nzXGUb7gHfPFN/cI
//TCuzXaFe+f4tKhFz5e+Tl9R+UUHXphmY+tg1eMMQb0wukxGhtfeJDrMeOF
I7RNl6e1T9OhFz5gfjIAfOehvL5M832WPspfkN89ydksWtgzgPzu8Uqay+E5
BPK7KwV44dujCeR3bcSlJkIChpDflfSsnhgt60Z+V7dDKWlxXxPyu9vqI08t
Ur/5W787baBRxk4pAL4VF1MbnjMBzPO7U3Z9a/fNTyjPL0cIwyL+6QInE34E
KZb1gIR569ZTEkYB9L/Bu6cP+41yAPS/phuw10ZreQD6Xz3tji1O2Rzke68I
3Jmne2OCDn3vuqpdqtUefDr0vcdr3VjxERgD+t6akJXhXoswRr8xv2e7HBUX
KT03dGnpFMrbi/QM/huv7kXe9su3BHpp+DDytp+OfK7ddptA3vbGGHW1PJ0N
YD5fQ2J5rxZ5foT+dlLl0NHSu5W/9bdJSSYOw1EPAfWzXYmYMxMEjm7na4tV
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{3310, 3314, 372, 1087, 823, 640, 526, 459}}], 
               PolygonBox[CompressedData["
1:eJwV0UswlXEcxvF/KqVsOi2ySqaMkhY1rLDKotSGWIRG0+CsdLNxOczYqiYj
Rh3UTFmpVbE52LmsapfbplohUzK1YsLnXTzzPN/v7z3neEfOvQeV99NCCAdk
VDaMrcwQrpFHZBDfPhRCxcEQkviCrHJ9XA/3FTfIDNfKPeRS+LoclTHuLffL
TshLz9VwldwQzpcU/oj/22vuL/ATvIAb5Rtewmdl1r0NP7In3dIPh7Bnl9uf
+Tn7hFzm83EG/16/4+q53/i0PsV12pt6za2NK9RXdQn3Rr/yW7X2rej78bDn
t/FfnMAX8ST+hJvwLs7TZ7jnet3n++2n7otuMe44brK/62X+nMx5rh0/tqfc
bsgxSfJ1fBU/ggtkCo/jPfun+wB+hpfwSd+fieP2D73Ct3C5ujh6Py6p532u
w27hK/B09L/WgevWN/EXe969Gcf0leh9uf7oHdw/2KP8XbyJs3UW12X/0etu
RVLGl+Ihv3lHV3OvPbNj/7Mv2dP2hB2P/gZ9XudwvXofeWhWeA==
                "]], 
               PolygonBox[CompressedData["
1:eJwV1HmUjnUYxvGHMZXlHKlsYzuSOmX5JzRaLCUz2eqMFnuZULYZUSmMLZqF
QoUiKk5lmbG272Upa2eyVBRDUZ2jdGIGbXzuP665rut737933vd9nudtmp2b
lVM5SZJKNMefP2skyUkqlYtpSJUkGZCSJK9bakN/YYuw57Af9VE0CeuKdcDy
9dr0DTYNexLbpGdRCTYUG4i9obelU9hi7HnskD6a8rAMrCNWoNehPdh0bAK2
We9Na7Bh2CDsTb0dfaa/p6fQafOX9RfkfqlJcjhei9fE4kMf44fMrqXJdjP1
TnJhvC/5hFxXXievkE/JTZ1P0/faf4pPxLOwLWZVeWVsOr9bL5W3m+fotfn1
vCU2n691/iH5fry7vsL+f3qFnqffoH+uv68P16vw63gzrNzZJfE6WJm9uvil
eq58nB+OXZpi7w69s1xkVo/2YTOwSdhW/Z74fNjD2APYSj2dvtA/0FOpwnyp
vkDu738didfitbBCPkZvYTbV3vq47nGt4vuh/bSBVtlpTx/au4haOHeV82fM
XuELsaPmj9AMrBt2KzZLr0/r9ZVxTeVvzWfqefqXejWvlaLfG/cd34HnYnV4
G94K2+jMcD4Y64Gttvt//P+49vqN+ib9I32EfjFvyZvHvc7POv+q/CI+QP8p
3he/DCviY/Vf5DLzx+M68448HZvpbHd+Gzbb3mn5dzlN3iCvksvl7+w9rU/W
v9Lvo7ewEVg2VqzfROdij3rgXfBnsAb0PZaPTcG26X3iudF3xn1Mb5uP1B+U
S8zOy2flm+XN8sfySO/5Et6KXx3PJf/budfkl/CB+s/20/jl2Cw+Tv9VPmI+
Pr5v3om3x5bwfOd7yrfjGfqz9sv1P/SG8kZ5tTzYrEK/kjfADjhXwKeabcer
x3Og95X38l14PXrH3ih9iNzTzpr4QePn4hngt+hbzD/Rq1Jr7Br9H+eW8UXY
IOxYfI/8CuxR+Td+1OwJrDXvHPcJtpQXONtL7opn6nPsV+gn9Ql6o7h2erGe
rZ/Rm/GG2Gx+0PlCeZp5b32HeQ2eivWL55TvNqtP79odrQ+V15p1oK36p3o1
+td8ub5YPm72GBVid2IZ2Fy9Mf2AFcXvE7ZT70/79a/jXqS28Tnj99NeDh+G
9cLW2asU90Hc0/E7Fa9Dd9nJxOZhTegC2gfPKg==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0DtME2AUhuG/CIkDomAd3JTByyYQRaUlXtCVyySyQF1QE1noBUjwhsbN
dlIji0pawAQ33VCYIAHa2eKibiatNHFz4Onw5Xzve87ftD2ZmBh60BBCiEhW
Ks0hVCVKPpf4gRBuNIYw4+CjlOQo/0xidn1201y32dsUwhkuaf4wf3P33bWY
x7hdPce/wXveNOhf5CvusluQEXwHL9tH9U0p4UG7dcngR7hof9w84XNrfIH/
hNv0P3pNn9Nv2vfg63jKm3l8QY+bp/nJ+vcyf3H33L/Ah/SoWcbDZtb+NffX
+xxu18+aEX7c/Gyucp3u/+n/9Q/6bT2hL9X/M31DinjALmIe9HZNT/MP8Y67
PZzHK7hVfyqX8TWcsX/rzXk9Zp7iy/IT33X3XV7iV7jqtgO/r/8Gboxb5Prx
N0lxs9w2dwQ/kUvcVS7NVeQc905u8aN8gduSw9xjuchf4VNcUvKyD00ySZo=

                "]], 
               PolygonBox[CompressedData["
1:eJwV1EVsVFEYxfFHDbcFbJBSnBXSBF/gBHdZoAWCU1w3JHigOIUmaIIucC0O
heDu7tYCKWxw+d3FmXP+57v3zX0zbyYpJbXzqJgoivJQQy+5haLoC2UqU2Oj
aFJcFGXp31JVXQZ11PfUp+sScEs6RKP0E/Wn9eXle/QUDzCbEx9FBeTi/Dbu
yeeZL9G9sf63bjfOxFXkVdQB98ArzJPld/QZTzMrycu4xkd5g34bjper8Rr6
YroR/Cy/rGthNh3/xfH8YLgPPhJPMD/lPTJwslyfJ+nH8rv8iS7F+tk4v1yM
38I9+FzzxbrX9ifyyrpfZoP4LrNDocNf5R/ySrm93F1ebk8t+S19wlPNcmg9
3orj5KLyGbqEm+MDNAKPxyftLyffoce4v9ks75tPLspv4u58jvki3Svrf+p2
4oO4kpxO7XA3vMy8pvyGPuIpZtm0Dm/BsXJVXt01i+iy6CJupv8jx+n3h++N
D8fjzE645ipcS67HE/VjwjPAH+n6WT8T55WL8Bu4G59tvlD30v6FuGw4L/9h
PpDvMD+gq4i/yN/DcyK3lbvKS+2rIb+mHDzZ7AOtxZtxjFxYPk0XcFO8j4aF
7x0ft7+sfIse4r5m1+mFvgJfwhfTIjoWzkh59Ef5SueraU9dXsb+m/QA9zG/
Fr4jnIafh98JXk5tdF10abpJ+D2t0W3SRXIh+RSdx03wbznW9ffKQ8Nnqj8S
7pnX0ZfWjQ6fJ7+v623dDJwgF+ZXcVc+03yB7pm9aeG84TPl380H8O3m+3VJ
eBrOxd/Cs4Jb4da4M15gf4NwNl113SvKxhOtK8FL69/Jq/Ub8T/rC8on6Rxu
bPZLjrFujzwknF9/2Lr0cE25Ni+lvx7+W3Av666E+8Lz8dPwe8BLw9l0nXTz
dX+pUfh/ocH6VH2m7gn9B2Rtpsk=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jmUYB/BjHnvvfRy7kJHRUJHMEKGyjyTzGG0ZRVZI2SNFZWQWlb1K
JZVRoaVhJ6NBycj3+vjj+/6u63qedzz3fX/epJTU1v3TJCQkDPYSWdLLQfkq
/WlKDWqan5bvMpIupKWU+bdyHqk0i3u52fyMXM0oupKOJPPv5GsMoHncSy3z
s3INL9CN9JQ2/16+zkDujXupbX5OvsdoUshAsvkPcj6DaBH3kpEyrv0oF8Tz
0pI6JJKJzGShrPsOyTd4jFbUJSvlXPtJvsnj3Mct8Tnmf8j3GUN3slHe/Gf5
Fk/Qmlvj88z/lB8wlofJTgXzX+RCnqQN9c0uya28zG3xnWZ/ybWMoweNYw/5
WD2THFTU/yoX8VSsnz4ju9T300B9WW7jlZjps7NPfXv8VvXfch3j43n1Wdit
foQm6rR8EmdCFmKWur3MRV++ieeTxcmpriQPx/vlYvmQzEscxKdjz2Qivfg8
zoIswkDa6u+WV+SjcrvsLAsygCn6tjIHffgq9kIWo16snTwv19NRnZ8XY19k
Vvaoe9JUnY5P1bN5QJ2b/epc3KA+IpfwDO1oaHZVfshU7og1NLsgNzAhfjO5
udH8qHybIbFe3Ek983/kRibSizxUNj8ml/Js/B7uIi9VXDsulzGUB+PMkI/8
FKAghShMEYpSjOKUoCSlSKI0yZShqs8+IZczLPYqzgxlucm1k3IFw+kQexPP
bf6v3MQkelOOaua/yZWMiPXnHrP/5UdMizWMdTC7KDfzEn1oZpaeneo5lKe6
/pRcxXO01GfiC3UnGsUfGjvE9NijOH98Hd8b66f+T26J+9UFmKxuI7OxV92X
5uoMfKbuKgszN9ZZ5qEfB/Q9ZIk01/9LK+hryN/jPMl3Yn1kPlJ5Xt9KZqY3
X+pTZFEG0Vk/I56BflSkMZXi7MX5iTMRex97FHsR60uTWBeuAZUinCo=
               "]]}, Annotation[#, "Charting`Private`Tag$249814#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
F+Gd8Y3YNWtdOXq7mqFXX6+63mz58XgXwCbHuwH2hdwy9lisD9YF2ySXV3eo
pdh87Bd+gJpp3CtYDexN+Qm1SV4j/xN7rf6U2Hvl43Ir9Y18Us6pduv3lbvy
m+O8nP9/fAX+EL6Hzxj3L/6EnApfRhdgTbDLsV/Qe7GB/BX6o15fLD8tSYvG
M0Fn+awGfM04vjzH+Bvyb/IA+Ul5s7xWbh33RFw7+hA2gV40f2qswfon9O7C
7oy9J9Yy+mWsC2qPcf3kbvwWvYoqtZqNN8Rr4XPlp9QW+YPYB2K9158W67R8
Us7k+Glib4r1jZ7Cu8d7Hi0S5xfvA3Rv/Dfiu+PV5a1xrWki9mxaST7M79Xv
GO+B8fzF+WJT4xz0l/Pv4k3lK7FH0izYoNgr6cXYc2PtiXeU2L99ZiNaG5tn
zE3+d/5pfiu/jn81vgN9LJ5DbCK9ZN70WCPxL41tE3sHNgDrEeu1XFmlUXPw
xngd/C35mVjPsH3xnyLe8+N9PN51450v3o/i3SL2U9XEvLrmvW3Os7HuYPvV
QLwnvg2rEnufWoEtxK7yg+N5kX+K/VyV9p2LxxpGF5r/P7nnKOg=
               "]]}, Annotation[#, "Charting`Private`Tag$249814#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUUBtBDl0gjKd3dLSkt3d3djaB02oiFQXd3dyjd3Q1KiEmK6/ux
nv3ud+bEnTNzM7TrXa9XlEgkUiJqJDIzRiRSJ1YkcjFmJDKMvPytO8ks6jp2
STecfPyjO0U//Sv7j9ThLWbr6+kvyx+Qn391p+mv/8/+E3VJwRx9ff0V+UMK
8FR3hgH61/bp1CMlc/UN9FflERTkme4s82jo2DXdSArxXHeO+SxgIYto5Lzr
jo+iMC9051lMY8du6EZThJe6CwzUR5ihq08qluib6G7KYyjKK91FBumjMFPX
gNQs1TfV3ZLHUoz/dJN0SVlj78wl3WB7VGbZG5KGqfZ0bJf7scx5zey35XEU
D7+HPTu/yK8dnywnY629C/PlgpyQLzs+RI7GbPtq8x0aybPMPByWt5vVSSt/
ZaZnPzvsG81KnKR/uCZmsfA6ztp3mjU5w3Kf19y8o99rjjdXmKU4Rolwf5g5
OBA+w77FrBKuvfyRmZx18nqzAl3lBWah8B3kKz5jqBydOfbG4b6U83JEfpuv
5QzslAeE7+A1Lex35QmUJAof695ivdyNq8573x6DufYmpGOlvqXunjyRUkTl
mn6YPibz7E1Jzyp9K919eRKlicZ1/WpaO/arfTJliM4N/RraOPZbuBa8Qwxu
6teyjvVsYCNtnfsg/B2UJSa39Jto59hD+yeUIxa39cP1sZhvb0YGNuvb6x7J
n1Ke2NzRf6CPzQJ7czKG30zfQfdY/owKxOGu/kN9HBbaW5CJrfqOut/lz6lI
3PDddCnYIHfnnvNG2OOyyN6SzHxjz8gueSDbnNfJ/kT+gkrEC99dl5KNcg8W
yoU5Jd/3mpFyPBbb15hlaSXPMfNxVM7Ct3ImdsubzHcZFJ5vs3i4zzhn32W+
F56D8Mx6/87mH/p95pRw35ilOR7ewz7dzMnBcP+H62JWDd+PN8K1NFOFZ5tN
9g1mRXrKi8winJZ3mDXCPeQzR4XXskS/1ixHa3mumT88d3JWvpMzs0ceHN7D
a7vY/5S/pDLxw++jS81muRe/OW+0PT5L7W3IFp57fVfdX/JUqvAmD/Rj9G+y
zN6W7OFa6bvp/g7/Y6hKAh7qd7OH7o7/E55fqpGQR/q99HDs33AvUJ1EPNaP
1ScI/3vs7cgRrr++p+5p+C2pQeJwr+jSsEXuze/OG2dPyAp7e3IyzZ6FvfIQ
fnZeL/uzcB2pyQx7rvBbykmYIqdlq9yHxXLR8H9RfuL14+VErLSvM8vTQZ5n
Fgj3iJyL7+Ws7AvPpVmZofIys0S4Rzlv323WCvdhuF+8f2/zefiu5jRzlVmG
E+Eetc80c3MoCM+QWS3cTyQN94D5NtvkvvzhPSfYE7PK3pHc7Nf30b0I35Va
JONP/QEOcojDHOEoxzhOX6976dwfqE1y/tJP1Cdhtb0TecI59mz8LL/Pcrkk
F+Q9Zu1wHcLf5/X/Aw+EOOQ=
               "]]}, Annotation[#, "Charting`Private`Tag$249814#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$249814#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GUYFFUUBuClkW5EWkA6JCWlBKQFpLu7u0swsAsV6e7ubpBO6ZYOQUoE
fO+P9znfOTtzd3fmzmRs2a1W1yiRSKRo1EhkRZxIpF68SOR03EjkmNpfXaOW
4F15opqRTfIutTJR5THqG8ySN6vlaC4vUPNxQL5u7Z7yY/l7qjJLn4Pdctow
l1OwXO7CMrkwx+SVzq8vn5EHkJ9J+rfZLEdjrByH2XILbjinl/6J/APVSBey
WUpWyF1Z5bgG+rPyQAoQnZvmvc2fyj9SnfSsNm9ofk4eREFicMt8DY18dl4/
mELE5Lb5Whr77IJ+CIWJxR3zPubP5J+oQQbWmTcxvygPpQix+dQsLnPkltx1
XF/9c/lnajJbn5M9csbw++U3WSl3Y7lchOPyeuc3lS/Jw1grl+Q9ebKaiS3y
brVKuNfyZ2o85spb1PK0kheGvRL+Iwf1B9SPuM0939NP/df8hDpe3aCW5nI4
Tj9HzRXuBXv1f6jVuRHudbg+aipOsUq/Xa3IVbrrV4TfzYmwtu9rFtaWh1OU
KfrMbJXj8Lkcn3lya+47p7/+hfwLtcjERvPm5lfkERQjLg/MN9Ei/Ab9SIoT
j7/NN7OFrWxjOzvYyS5209K51xw/ihLE56H5APP/5F+pTWb2mLcy/0seTUkS
8IVZAubLbXjkuIH6l/Jv1CFL2B9mb7Fa7sFex7XWX5c/oRRT9VnYJidknJyQ
BfJW9QPayovU/BySD6q1+Md6g9RXZifVCeHaqWXCteNj/Vw1d3h++EO/T63B
Td7Rj1dTh/cQa/Q71ErhGtEzvAvUouG54KT+sFonrOW724S9YjYmPD9yKd6X
p4W12S4n4ks5EQvldiyWC3BYfmydwfJr+XfqkjXsB7M0rJV7hd/tuLbhd8tj
KU1ivjJLzCK5PU8cN0QfYaK+HtnYb97O7FZ4pilDEp6aH+AghzjMEY5yjOO0
D89UeA4pS1KemQ81j8IkfX2yh2fNvIPZnbDfKUcyvjZLwmK5A88dN0wflcn6
BuQI+0+flnVy73BfHddRfzfsO8ozXZ+VHXJyvpGTskTeplago7xELcgR+ZBa
O7wPrDdcjcafTPHZJrUsDeV5ah7Osy9cN7VmuG7kDPtbTccZ1ut3qh+GZ4Q+
+lVqMS6F9fVHwj4M1yP0vruTes/8uDpOXR/2TNjn8gw1GzvDs6dWJYX8rZqM
pXInlsqFOCq/sOYIOTpT9Y2YL+dlv5yLCXJ6Nsh9OeWczvr7YW9SgZT8Zz7S
PAbT9I3JzWnzLmYPwn6jIm/y0vwMXX32d7jHVCIVr8xHmcdkur4JeThr3s3s
YbhvfMhMfXZ2hXeEWi28I8K7Q/+dmpxlcmdeO3+0PhYz9E3Jyznz7maPwvWi
MqmJcN5nF7jIJS5zhatco0d4l4TvogppiBLeUeaxmSk3I194RvUZ2Cj3Y7Vc
nFPyUbVu2KthP1j3f/YPSJ0=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$249814#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJxUm3k41O/3/18zBmMfBknavSsqpWhD90mSyNIuS0KEiESpkKRNkiRKZUkL
UdYUxT2UJdmS7JV9yb5vs/zmc13fyfXzB9e5GNfM6z73Oc/zOOcstXHdb0cm
CGKeGEH87+eyu6y4qEVXti+LEfzz7eAk0s8RNOo8idEBgUC7qpEJVCa2SYhi
WYlMVQzjX6EJpH13F+OVcR1iWaJVHwzGkd26GTFVsWZEk06kZFPHkKGS3bDs
7nb07NXftWVbR1BatY/n1y3d6OKvYG8jsSGkIaWcTLnch55E7W1mHfmLTs6G
Pn1hOoS+XCZoqgLtyLWwa2Oy4Qh6c96XVLC5CQWaCfzHch5DQosDPLUeViLb
okv2qg4TqOXP2IqhhlyUJzh/36mjUyjL/9mQws37SFXSL7zHYwaFfjHsWuSd
gI+Paq0xcmYi/4QqPpOJNBwbVaAweYeNvoj9vBvZkoTTg7c1Vu0nYCzB0dJH
yhN5ZGuZPN1LgnXJwn8pX7MQLnkxcsucDB9yP8tuUahAjru35jia8sEt09Rv
kvMb0JN41XennCjw49Omtj1RbejeaM4Vt/P8QGqKLO2L/Is6X3uec3AXALVT
F0stH3I/p27oQ39/QbBUD/2ws2cUkYwbWu/6UWHv6xKdl9ETiNiRSYq5IAQJ
9W4Ct8am0M15k4ZVN4ShONc9haM+i9zMbPMnr4qAANvwasEyFmq5onYCPRCF
MfdTHz/Kc5D0/UcNt2LFYMM21+9Wlwl4SVO+UPRYHEoKZh6vtSNBnvviXSsT
JUD4T5saOJMhakmMgtZBGtScDckwvMgHOd4zhEMlDQ70Fq7xT6LAUgNB5vIj
knA1usuZrSoAGRVKt+urJeF2doCw5HtBCCpkr19iKQX7lOnd+0EI7p/tcTre
JAWt1PJP1aeFwVtmkcSyo3TwCHcp0d4vAglK/CUezXQot95ecU5AFATGSPPz
jklD//aO8tRbovBqfapvVJc0rJwXKLB8hRgo2bw2YrnIwDKt8qAXVWLQuCcr
7VCvDNhbbrG0ui4OVXEX16KzsnC+8XxQrpUEvH3+8Pd1qXhE/N/Xu8yUVf46
/f9senr9reBYAeDZk+EL3+1+JvnPfpviNsnhyP2fTYOSe41nuk8mo0vbVooF
rZ5ES1jvn7A2FSNqgfH06rgJdLM8p/3Q4WoUVuSsHF0xjgQmFQYo6k2oVSlu
8+V3Y+hoUjJnuXIrMrxnb3ZUdRQRl89sHEKdKF344BbTjcPo3OgBqS7zv2h+
RxKfjGk/8qadX3PYchQpQ2Fj19oaNEHL2xXhNI5CXDanPvpShEJPlpiXH59E
xK8DdfnZKehCUOlZ5ZPTqPBTaLXVgQdYj2zV8thtFs3uaBkrkEvFxNcrz5f5
sNCxawrpLsppmHLsqWP5Iw4683WZTUVpNA5T/CTzoYKAvo9/Sqwq41Fk/plY
ejUJOo6vbPtsW4Ckbw3WTteTwfHQ3/MBkdVoiYH0b6acFJQw/Fs++FOBtnDM
kPFECnzFpPY9ahaCm1/4tPLk6XB3U2JVWrcwhEbfc/72hA5vHFWer8sQgbrg
q8ORi6WBGvMzxHW3KPDiD+/5f912NavvZDQqNbqTR9eeRK39v6y9xj+jlXkP
RRzLJpDywPRE0tEqVNE5z0BQeAIp7lQ9cli7AdVNKV8w4htHf/qrr79e0IL4
ajeaNcWMohUHT4Ve3dmBblQar7mYPYyk27t3mur3oEuDaV+b8wbQuVPrUvx/
jiDiRc7O0yvqEeOdrXpJ7xhKPzxQb3m0FF2ct7zlcvsE6mpfINbk/x4tLHFv
1W+eQs1pNf1r9G3wp1uDH/NHZlDBpqV6OZ5v8frfVg4fxpio4pmZv/pAGt7v
q/q5lc5B0fs6l/bJvsLPj17y2nWPABHvp+ur9CLRjdxaL9MQErwmCom8WQb6
m6DfkRdJBrrE9+Wb+auQk1i0Wu+EJIim8OXsWkSF8jMX0JC3FEwtSXB7GSoE
4k8mfoTMSkEIOrGq/Y0w3GiozZm4SIevA3veaF8TAbD48kuQkIbmW1u7I1eK
gtznizv777xHmlNLb6yQnESWoqG1/l6lSJk49nXq7ATqeHulir2/Bvn71UZC
yDjqfk29lr7yN3oQq/ZazGYM/XAK9Hq6pQ31Vhec+Zo1gtY4Lzp8omccaW5Y
17nW8zN6/f5MjcKvSRSm2fhxh9AL9NNoBb/wwDQql153I6voGa6+WC7gOTCL
OtxykOmRNFyZHtccxM9GCWK0MqXEFNwQRaH+kiDg2XOZ23/17uCAQWaasjgJ
vjLLx95UpqH9xactQj5JQa9YlzNZWRjI/bSXw1vp4D28oeXUYhEoDqrSGz95
F319aj3RbTCJdDrdvryrzkM+fys0MpsnEJM1z8/U/DuKonuluvw3gTY6fhTh
6NUj+XIP8zWrxtGz4JMlLmHNyCrfblPWz1GUvb17h2FBO1KvOtIkPzuMbC3S
m0LyulHmhSClc26DaOShyMjDeyNIY7n6Gf2kBvQfVf2NbdIY2pqsvqruUzk6
7VoRZ/pyAlm6DruILvyIBrsL5jc+mUK/x1J3sO/4oXNlm5Vq0mfQtbvT7PAl
Sbi420j/agoTEQ8lE7OE0vHF4NnBvko2Ejn8Q2CB0mu8ZqxBSdSdgKEuQf1j
k8HI91Ng+8XTJPDzFJv59i0HHdw21fvfJTKEnqtw/VZQie6ebrdq7ZAEGfmw
xPG/grBWQXML1UUKxCWECX4nIagUdIue6pWClxphxZ3B3Oc5ddFe1IkO2qUT
pXrOIjCW335g+xAdzFYtf31uniiwd6nlDsWkI59L8UTNokmUS/lvG+NICRpb
YHxlY9AEysyNNn998CdqFIwuv5cyjiYrQ7daqPxCH4YWPPcNGkPhIgs/HU9t
RfjMBs1HEyPoXu5gGSthHPkJPz4hEVaAoiQWPRqPmkRqKyQCUuQT0SuXC5qR
r6dR3IvMK9e/PcXBubIeN5Nn0fm04xTOt1TskBuafySPhXRMq3Q2+afiJsMf
ml+aOMhq/qKPW+5FYNFAixPDAwQEXKpAd6WTUaq76qH4JCkQSWX6NvMLQ4Fp
4JmjynSQfho1FUwRgYgIo5ODd16hl91ByfqbJ5FB4uLE7OXTKMDrxHMb45uY
rPvKKFl1FlnmXxB7r5WCH/5wu96/hYU+tNofLIhLw6tPnwyvO8xBx0Lul+kk
xmG+9T/KLqjOIBO7/sM6xi+x/Obrj6zXMtHblu/nS7LT8JaEDHbeHjbqqfC/
lqSfjAvXnzkp4HAZ6Xq4PvYymUQeNtmeB78wkPbAk01/eyZQO/8rHZWmStSX
cqo7ecME2uZN2B8orUPJya40hW3jiPJnvXOFSTP6LvRoj8fgKKJkvJy/4Xo7
6g+YcUiVH0GBD+WU1vp0I9E7z7PmFw6ilORpqeeuI2iEeinb8kwjMk1d6JjC
Pac/+8qJpLEK5PD4P/5dNybQpu7EtXcmPyFTL1f15Zem0Amz6MXUuNvo4GDj
H6uwGaRGbP6uXfcaS5/W/egQzEQ/b7ZdbuVPx8HhxwXck9noU6Bzwf2QROyW
F+jvakNAeJmI78vIAHRB44R8kCUJaBrjm7ULPqJAsvHgkVNkCBh8azm9qhIt
W3xj3PKXJFx/tFFO+rsgWJx5qiZtJwW1bi99DA8JQVrOmmtr2qVg26rfd4jL
woCvl26LsKbDvskf309aiYDRxFjw0W46rN/Z+1tSQhTcBe9dcn+diiRTFtNN
/ptEg36ne4/t/oosKsYyayMmUHShyhK/n9Xo7PXbocAYR+y22vspqU3IN73I
e03sGJoy77TMd2lFpSo9vtukR9GXk3W39APH0VZvuq7i60L0UMNjpuXyJGqo
tjg/tv0torGWmbbenEYNHaaJgy8e4VPN2cpSIbNI763mb8vzqThjZ+BGrWgW
ijenGa5tSsVDh7Yc2PORg7IsG/erFTzGJkdEcw7+IcBdhth/tCcRNReF7st4
LgU9p8+6W48KwUvx3UfuLKPD4xvP1fMmhMFXnto6EhOHKjfkl5dpTqKMbV8L
yeRpNHTq+nsZDR/856QB/1apWVT3rtP4un8ybjd1mKySZaH+EdOXDeVpePu5
0iRLdQ5SsdR12+n8Ajtj7548iRnkzL7fURn+HE+aKpv0ijGRaKhvpHhwGg5Q
SXJ9tZKNXiuFVc9TScGPEu+77/0xgyKt/qTLHnqDvW2P1D+tYiL5CL8jP0np
OPWJew67fBbdTM9ZHi+bhhW2Pt7n3sZClOvdo7cUUvF/inwP/9s3izg+YcFb
UlLwXqMLMlRzFnIrc1044ZyGtWRaW2v3MpG4vq7C7V9pOM/r7fNVDq5o01Hf
goT9kyhoiVX5ck0Gah79xjg5MIHqbg2sePSkEnVaHhNT3zqBcvmX32fdqUPX
9r6+MqY9jtRuyGgR65pRSpj3+/+Yoyh+4Nq15/btSJNMijBSHkFRmwyMZ826
0bta31eXhwYR7aNbXMKxERRmf3CBQ3UjGuaXKqrxHkO+D9yvC++pRPapleof
z0+gtIVyC5d35yBR0Nm522kKcbbsVDd5FYK0CZWPzwNmUEUtzf/1mtc4e33+
WXMfbrw3n58QwknDD+Xv38uIYiPL4LKSDo0kLBXfqhJrRkBS//AFquRlNDFj
8k76EAm0A2Sn6gqy0XP7mSE3WzLkLPp5OyKzAp06b8pYUC8JQWWzV2W/CMLY
gvIN8tZS0F+v5FenLwTP5ES8dJulYMH1pcdGzwnDIqPx5xaWdAgTYzb/MhUB
poTPmpPtdPi+PlT2m7AorHFAZhuTU1Dc+OoKz1WTiIroOiq4GPlt/Fp6++kE
CtM/R+59wL0v2la100XjyN9lhmF2tgnxP92rYp04hlZRvqmMGrQin5n/ljYs
G0WWn0q73C6OI6ES4cAfm4rQg32LV5u6TSL/K8TOsdpk9OXLpJ2A1zTKcknw
3+Ufgc2GRQWO+M0i0+h7b0z2pGIzAYG+dcEsZC867viFkoZn6p1+337NQfY6
2dHB5U/xiNYJx+u1BFzX/ZR53+w18nL/bJwdw433Ox77CfwVggjH//RfLaJD
m5iBYv6gMAw3noj2eB2LNGjGTl5oEjmQo6pXDE+hezlaI6a6Z3G519NmH/Is
altan/2U/RYHLmhPLuBnoadBK5w5f9Kw3gx7c4wiB+1dpiRhq/MSL7mxb7KD
PY0ejnxcPj8tDnc6eq9ez55Fh4qpqSNn07Dy8MpVkbJsNJnt3yV7OgXf/NRh
eO/zDKplUNL35SThZSt+3AvJY6L7cqzR7YLpOObNl4c78SwalpeJDx1Jxfmz
ssJ2VSy0/2ZDco1JKpZWP3TWaQdXTwWOb9rklYJHaONlM3tYiLzTp6/6Vhpe
s0ItV0GLiXZFxmk6laXh04kl5HPRTBRD9vTfxdUX3hUOxmXRs0i1bf6x/mep
WPyK+CX9FBa6rBZ9Iz4lFW8P79vevJKFlHZI7Czi5iuqXp3Hy4VMZNP1sD3x
RRquiWlcktjGRAoltTXe02n45W2WhYwzC23mP8xaZZiGjSghgvctuPGivU54
bW8afk9VWuziYIXo4s1pnw5MIlWOzbjsEEb9vnyu0UMTqMpA6mG5dyU6k1n/
2k1zAvnpZyRUna5DKxIj+kx3j6O9jTdeyC1qRmF5jb5nyWNo5rbnx1+H2xFp
Q2K65IYRFH/thE3rnm70+KxQ5jfyEGJA0qk1h0fQ053WdqICTWj7etGJHo8x
pJeTAWFuleiE5gqjCdcJ9I5Eq9G2zkWdcSr69dZTyMRkZfFh2VCUTa1dVeQ9
g4qH3KX4fiZgMSmistqDiVIqetYZzabhJxZrag+Fs9GCg/dazt5NwjaPxfmz
DxPAOjaRIix2Eb0zKyLXm5DgfMxqZYXd2ShNrvKMjxUZZvf46eg5VqCQ5Xkv
ZmokAT0x+RSWIwhwplN1oZUUOAfGfInYJQTyuhfPHPgtBbbxTpqd7sJQlipk
hszpsKIi1Dv0kAhUKeyYdWmlwyevF7HPqKJw82H41/uqKcgx0P0XWXkSSUfZ
DclcKkYl3axjx2ImULBo5Nkl56qRKfk2q/zbONJJu1277mATij0gJHA2ZQyB
qVaEiEYr+tPDKFqoPIpedxbKBriPo4yva3/e9ylCYU0eO+87TCJ4qOsmcyAF
Ra1qdX7oOo02lUcPbXUOx9+n35294DWLcu694ZippuI3XTv1Eq6x0PCl9G8T
89IwZwFFce0zDmpvaM+RrIjCO1VDUPQPAu5o+Vt3hSWgL0WNRjlRUlB3Xnr9
/g4hoEWE7cxQoMOyZXzXNPuEIVGT7queHIPCdETYRTCJtO1vNn7onkJ+R79I
3D3njHdd0TWKmZlBPVvlz5Vmv8W/mEtFEYuJmqIOGXl1pWFDzYc+OxQ46PVF
4Utmb1/imb8a7PMT06ha5+P2KK04bOn+36P9E7Oox7Vj97hdGvapsgugi7NR
uI59OysoBXO+BH9M/ziDDj6XEbjvmoQ9BSUHhLKYqEerfnUDNR3Py3QRsH8/
i8yoax89/JOKZX4dtP/9lYWS8ruXtjum4tta7OagrbPo5bKuLbrmKXjXyAZl
jx0sZHzCa0A5Ig3HqfxajdSZ6DHFT93pCze/BVGtBsOZSHuxRNMwNx6M1Urm
DEbMoqyg74c976Ria5u9tZ9fsdA3/cwnxYWp+N555cdHF7PQkcIdRSoFadjP
5EprsQxXb94alF4bmYaV/Of7KDZy/39o8YgAOw1PO2tkBduykL6B2SEXyzRc
KLrV891BJgp8MTOc2J6GTxoHzGu9xkT2BQmn5/Gl483bXh7YK85CvvMlf5fU
puEKnQfq80qYaDi2gNxNSccZC2+bzOgwUU2HQWDJzzS8oCToJfMVE7UnWbr/
4sabq/jpF9U+JhLqHebfPJaGa2c7H7mdYCKXfhN78eE0zOMB3r215gtdCzGP
R0YajycfSaj+xyPtt/3Z7vpm4B+PPGISqyPFvbc8Hnn4XZ/4p072Px5ZpiW5
LtmWBDwemevGB0vHZv7xSIG9adJ5lyv/8chtV6M9DqcPYh6PPEfR3/qrZwbz
eGSUuHIieyPB4PFIB9WIRetMCAaPR/4fzmDweCTP5vFIns3jkTybxyPvG+3e
VlzLwTweqY8DdB9kcTCPR+aRn/oJKRAMHo80cHSM3LqbYPB45BqhU48kzxAM
Ho9csvziQYU1s5jHI1dl3IhOVazBPB6psnLvzUqlyX88csfy9MqycQJ4PLJW
bj/fgXACeDzy/94v8Hgkz+bxSJ7N45E8m8cj/2N/7VtP4yAej8wbDi6+78BB
PB55r3Y3XOPWsTwe+WlL0qOUSdI/HjnxwMWsXnwA8XjkPOc9s/1WrZjHI+Ma
zBSzPs9gHo/sY04zKsUJBo9HtgjUTbUvZGMej3x5Y1SVOcvCPB7J41E8Hsmz
eTySZ/N4JM/m8UiePZW+T3PZyJzN+eD+7vrpef9sg/W6u7zH5+wiy3WOp87K
/bP/fx5JEDwe2WzXPZ/Vm/SPP1LX0ocUhcf+8UehjaGxhULMf/yx6d6hpgey
JODxR77k4/ceahLA44+PO961qaUPogDKqvGVDwfQ8SW2/BYKjbj3eI6D8oFh
tNenrNRLfgLz+CT7wNfYv3fYmMcnX+14Gm1tSzB4fLKz9l5wzBKCweOTPP/m
8UeezeOP636vcxzL4GAef1y065azRQ8H8/hjdMWBE0NaBIPspZ7l1MIHDYud
3/bLEgzZ8vMLBoYo0Dy0csmGNxysWTHfu2+MH5Kmd+RmFI7in1NXb3jOCMB6
i+0xZZR21KqfqXWLRAUBoVf03xSuf+vpjcxjUWHP3ivIkSCBTlLNyixizr+Z
W9ZSO/jn/PvX95aE+EXioOSgXp/xhYMy8hStzi+XgE99936SufGG0xdh1S1N
A41lhaFOOQS8NSoL3h9KAzXXmwr5JD4YbPNjF9AlYcVsfNWADRM53Xn4mf1A
Ehz0NrbOkD7/46thb/4bFPEaxTy+enRRbXvLOzbm8dWYZo3M2484mMdXo8lr
d0r9ZmIeX+X5y+HQ+m/r4ubsbYImKe+y5vyJx1uLy1YbdvulYB5flV+kVCry
YfgfX9WVTXy4a+/MP75aK+3umOxIAI+vXohu2mvE5t73/+Or3fnm5KWh4+i4
iNL+8Nv9qDv0e9Yp1/dYSWUVX/fPIWQfwPh9btUo5vHXtnl8XxkDTMzjr2v2
7ixIPkww/vFX7WPm9G0Eg8dTef7D46nVdMfDlXkczOOpQXb1Uw9LOZjHUwUu
GX18oUIwMq02a/x9wgdK2oEn+rYQjKMfD3YnvaHAqtbd60YOEAz7ll5flUx+
MNiWmTnQMIl/f2eyT2cKgNfJzqA3Jz6jH3qKvfz5gnCJ/GmfuTQT+Rnc+/sj
lwp8xx9pFkqQ4Nm5wrA1OUJwXbbQYZ8+AV5pWtrzm+fi31rHlc7Rf8Shfbv3
W1Y7Gx1/uZLs/VcCiNbP0/0/Oejl+8yfu8/SYLZ+bHFZLxkOp+RwZEdoYFgw
aOH8lgDdvgqre+ckQftGIPvQrpZ/fPjNNKF060g/5vHh0M3fEifpLMzjw5Fy
GTJX+QkGjw+/cVE7mHCIhXl8mOcPKp9d3Kf85my/NBwUEj7nLzw+rGytGqu0
a+IfH14nMCN99R7rHx/2z700puxCgvqE89UWml3oxrJ1Mos12SiBteJh1vNB
RGbPuHxy6cJv7u8vd64cRh55+2h/k6fw1Xe58Uodo+jlLubIAu758fjyI+3z
/4VaEQweX97eNDS/W4Bg8Hjx15QfYrcmOf948cTzpb8U0zg4qVCkpHweGbw0
Aw4vESQY2x3CSlTn80G/N+OAMjdfGods3Nz7HwUGxRrtxDUIRnVzpNE6NX74
tDxns8EvFpbM2X3h9UYBkBakIrnhHly6WITmvV0QaoqXbrFlDqGRvXohojuo
sGrZQLj2MwL8dDjT5hpC4FgkoKpRTUBnS2f2Lp25eKI9fE1yi6U4qH3yWiFj
wUHb5JftNz4pATbhbwyUuX5dLqCQG6pGA/l5LcdfZpMgs6Ntt2UqDZ67/01k
pJG5+VeH5aEuCcG61s5XasfRXRXrlc7vJOFm2I8c3bpSXHPz1g1xDSmgDm23
NLg6iXm8/GHzXZ3sdA7m8fL6gtWiVd1sHHXCYEFMLh3czR8JCTOZ2DVPm18F
zZ3/mHnzj4amufPn8fWpvUFaJVSMeTzd/so6o7KbQ/94enWzQm6r+fQ/nr7q
otChoH7OP57euC7lpqMmCXg8vXB+Uc/KfVOoPDjBz5C/H90UDfZor8lAxWGW
lboRQ+g4q/vgi6BhzOPt2qGxt3WnZzGPt4vo74rx0CMYPN7uFHDnZP4ugsHj
5budA9fjbxzM4+UR6tdtc7nxgsfLZ/s8HB/9RzBCDmxhJlzkg+Obt9hs0SYY
M6qfjUSDKLBt177E9y5c/fD3oF9FOD9MWY5bGD+Zxjbbs7JPhQlAc4S4SerJ
D7h0d+MOnWeCsGS4gin8cRpB2bvO1GgqPDDchL5RSfDdfLuB/WMh+GX/obnC
jYDCZ6eCvzPm4sPfT/Hu6TnioJN5tUBtnI1CguLivpdIAH9wyCL1Jxy0zHn1
hXxbGjjY3Wj9L5cMgbIWfqiFBgatIhvCuPo243HvmwZ7SZD9Evf09suuf/w/
69jI7SpKN+bx/8OOT51EyUzM4/8rb/6XN03j5tf/4/9yP++szkxnYR7/Lzkc
dkq2jo0jG98XNLnO+YfizckZVsCcf/D4v+i1AA2h1XP8f/vIAa3mauY//m/i
buN51JAEzmFjV1fkdqK9KS5/P53hINkrrwrdFg2iDO86y8aHrXjvzI3H3+5x
40PG9Nn3bpOYaIv8i2JHUXo//62SLRzM6x+0C32t2MzVH7z+gZXjiRWxdILB
6wfw8gWvH1Dlm+W2kxsf4r7kqg+Pk+DGgaX2j2Y4OGFqx/cH02TY5Rkw7LuT
YKwKUJt6zUcBuXVYxosbbzyPCL0LluIHv+sNtxqa2XhFYcpFA2kBCB84eO3S
8yFsElT0zUtBEEpndrlbrOlFfw04nfpLqbCwVndTsyUBULh8YquCEEwu7Dfb
0E9ASEu65ZAW97yDExbvusNBky5xpra7JODZu3nBWyfZqHO6PjhHkQYRswuo
oE2CDZGmvbWxNMi4vmravosMn3xafZ4qSsKxxQf6vylNI+Yvb893LySBVrG4
4LPICzzbU57GrywFxdtU7kaEj2Ne/8Pw9vSFM3oczOt/hEVZh3bqcrCc/8Dn
d2/ocLrdIzL/JxMrrrK9dGLd3HlHqMpp632bO2+Zha+evdFoROuSl9zWVJ1F
CobaO7uetaDzshMmqiXcOsZxoDUrrwOdUlDVl04gILBoRP2W9DC6GDoQJvVm
DE9rHTjtPH8UuVi/7ygqYWFz29Cc9Vy/EbX5Y+bCjffX8blFr5ZNIrEug9iQ
tQRDAS8o8k0hYNXsHpfV2RwcwlAU25RGgjadb/e76jn48vynvy2zyeAzU0//
s4l7/qc2XVTGfPDD13r2nTLB+KDTecWwggIj6gp/RZcRjH11/j53fvJDyUjL
m5TucdywxyWsqEUQ7l9KENi7kY0YX50Hxn9RITVp/4MzoiQ4e8/o98hvIahv
EC+QUSRAOV9i4jhn7v66yby0u02SgDUqD+rb/rCRXPOh9XR+GhRecm+RX8f9
ez7tDWX+NLA03HX+O5kPlukvvjxAloRPvZM/TS9y0K6ko0JjglIg9WCZx2Kl
YexalKlbFyQFTzaaHt80w8IG632oSiJ08H12yNKgiYNFc9RkWm7TofXGqyev
RFg4aDzu5HeJufOqD/CtFF76B63fZ6r2cjsb0Uom1RpwGwp4eCem14MEunhG
8X52F8IP2SaTdUy0SOuH2hWZIbQiU3GRX2MvFl+7kCQuMYJSdk/grXXTWOBm
qz1daQwNyg677+Hq7+L5hr9LVk2gwKaAOqGj/9NXBXSdBXP1b2F49PARVQJk
xa1/5HVyMPPgU9KJtSTwXYS2PeLq/erazs9lW/ggNbj7XBA3fp97suHcaj0K
3LnxI/Ii9/w3OK3prjjED1uurl23O5aJZwzvbS0/ToUE8vkfatz8yshvYPmY
CUF5RpdaYyYBY4RpwWVvcfjT40VavIGDfAtjDDRuScDY6U/p27ZyUCb9WP9J
HRqUREkrdi4nwzZV1+etDBocSei/SbUlQ+pKHYt5e6UgAn9oWa01jUcWJtl6
lUrB9OFbhoPTHKy4O949sIIOTjmLRNPMWHjf9Xg7l4G5+8Dr3wXUh13dzf8Z
8/p1ZiFecgrNg//6dfyhh059+DP1r19Xoz/ZSz7N+devc/jYxmzeTwJev654
u0bCvZfTKKCyZ55Sfh+KeXyQrJ9QgOT0pjZNnB9CPwLus0QyhzCvn7cywLa4
xmMW8/p56mq/1oohgsHr5zVdsjJYZUAweP24Q/hey9XvHMzrx+UZLnc3yeFg
Xj/OwthP+Re3nvMu+9B0y5EPkspqX2/h5lcDlxmS5iUKvNAUl5d2JxgCrkKk
JTf4oXvcI8LVaQY/94iQc7oqAMcXsawvbCzFekWbXGxDBaHJ2856+4UptES8
uH1JCBW+3kRd3dz6y8Ho4oqrgULQZPd4tuAqAcX2PZ45SeJgvPuJnA2Jg+Iv
W3swsyVgd6yD290rHHS8sKOEY86ttxJqB45Ek+H5nkTGjzoahOoJPficSgKn
s9MHOcck4XrFq9MXG/7+6yeeqeLW6ZodmNdPTPryqfq8wyzm9RNJC8vo6ZIE
g9dPfOykq/65i4V5/cT+ayptYtZsXNllMWh0cu6+TbjT09S85/yB10/0YEjf
sno89q+feETP6ofkGea/fuKb9M3UfDWu3hNKNxe53Ik4N/5u3jnLQWX5XZZ7
GweQjTH1xN/5zfjJm2XkS+7DyOL+m8RLxRM4d/qmiMHlUSTXZbzAtJONef3I
11XhSwq5+ZDXj5QIVt6yUJ5g8PqLvPvJ6y+e3aCwWJ+rD6N2PjxF7iBBq72F
U/EwB/9mPKwu6iHD990FXf1AMGTYGXWBI3wQtN3h6Cdh7v0OBYdcEj/kvF1A
qzbk4FR9u9nHFAF4suXy6ryzIzg0/4XSeRFBKLncNbgxrgvZfzOTcpKkwq4J
Q/F5agQsEdw0Fi8qBEoX3FWfTBKQWV9yda+KONiHi1voxnNQzbx2cxc1CZi5
1Z2A+tnIfXTLZJUCDTadOHlAnUQCtzEpLZlIGjS/AaOKSTLUpKjmqipIwnb9
H3HUkhmU/i5QoeGpJBClW1rWqCSi4MgzeleWSkGf8biK150xzOunykRYiW+g
cDCvn7p/07uLQ2c4+CcNHsILOqT45bknVzOxr/nZzMsr587bQUFt2jd/7rwV
1vcxSbgB3VqzMng7Ywb5PhXp0LNqQZLalNqjTwho+p2UHeXfgcK3t215WENA
w8U7T7aMD6Gq2JuMxP5R/OHgjrvnJ0fQmfwt8NeKhYNFL13wERlH2SLU4jRz
guHXW3r5Pt8kso743tSxkWAcD/q2uDWGqxs/xi9M497XIMTW3h1LAvleBZio
4uCMltGWu6/JUOcbPd6ygWB87cg0E37LB4HHmQVeXJvqt1DdJ5fCfT4qdIXt
3HxpsZn9q4Af/mNxfjV2TeDDX4tx53dBeN61PHHHahaKEb7cd6KcCirayx8Y
cOtd4YDALIlyIRhMXRAut5mAfdkrFHIG5/KhEe50eDAkDnK5/JNCLWykl+6o
um9GAqhioompYxzkYMm8KnyJBnZ1VkKaM2TQ9DmN/Wdo0Lfo9tbLuwmos2BG
uXIkIZZP9M3m5kEcpSC3sz1ACt5bqKv7BLHwms6tAxZ8dDASqx0+OcHBJQbX
e05dpUPILeHvcWtZuHNVxrM+wbnzao74rGz1/Dcqd4jZJfOXhdzl82o0vNtQ
+MH/TBdy82GIWhbz/KUudP5Fr9e6EBYa+dhJ/O4aRHxOS4s983vwseb3J3MG
h9HGmo7VvbrT+EtU5Y1FgmMo5Nwv9gIKt17IV4+cJzSBdPz+zo+1IBgptxd4
rmdOos0c0fO53PtWKV/lHbmEAB1Hj+bhAQ6GZYZmRQtJsHFDq7wY9/4JxWgV
cVbxwaor6itXc/OhjWz6YZHNFAhIqVI/Z0wwrr6wfczR4Yf2I1vW2uuy8Lmy
vhP9JlTwkaJz3xgBMXz9s336QjB/pXM2XyEBC6ZP9zY6i8N2t2cDirocZOHW
YrTLSwIuXD0dPKPIQdpiOYd8NGmQa5e64uAwCbxuK00szqLBQdtS6r5gMujU
dQ6H7pSCmQmV/hj7KbzsrNjxgC9S8Eei2M6kkYNbfk7ryhTRYVVAb3LKchZe
duaLwvOOufsA26NWidY1o5eWBhZOG7j66KuSkwOlA1XEzpPVXEKCkWN7h2VL
x1DP4Ft/QxOC0b1i9ff4KwRE3I7edqWQg/21Ut86XiZBl9D+sTquHVf/fkHJ
bT4wwP43/uP66+uJ24+bnlDAL8BsJ7b9332I69ZOpoKR4/bDb8RIIEp3cE0o
FwfafsGErF428nrUUfWyQQJeJaraW3/goHbJMyuvnaJB5/q1kRm1ZHBrE4XE
HhpoxalnLeG+nl3YoMH0kIJwm/gb10KYeHBfetaXUSlY6yVfUytKMHQclUKv
uNPh/ldObrI/C0ferZZbPkWH+Qsjz2rYcLDaxwPynLFW5DHvcOjG4yRYtnhT
0g5WJ/ph8YIvsYmNtEuTvqp9HkUXzTVEj17j4GMyglKpX8fRo48nkkqsCcbz
tqLNQrmT6GB9dekmMa7e2nV6BWLPxe/iT0kiwWwCLjA/B7akcrDH+t4yWyE+
+KO/ZXcENz9rCmfM+yZNAZmqte2RXL2rqFBFslrOD/JPlXpo9mx8ujTu42pV
KvR8eFF5xZ+A49ckp0pWC8GTB87lpi0EOPY82RxmKA6WS7L9q89ykNwXm0NH
D0vAuNW8zlY+DjIjLq2IX0MDmQXihIofCcZQ1KPIBBroOn2ecKokg//CStMn
GVJgzLb6+Mufg81HnwwqZ9Kh6UvZqwutTJzN9Iq91tmCmsMUXxOjBOiPrRP5
SXSiIsv+g9iTq/OzE0jt+uNIWehmzjj3edQNnzq9gEGAhpCNHbznYP19uo2r
S8iwsTFPN3QbwRgcfvdIv5IPtAoUaoOXEoyTQsnlC5spME9NSXQDh4MLD5Qz
NTv4YfWp/VZhv8bwsRJJx/hhQcjeGdYNazio+abZ0PV+KlQXb+E/JUiCpigp
vppBIbiXGPj1lCQBlJKpCoqEOPz9PnDRqZWDQk/Z2VyRkoCvwn9bg7jxLahz
ooglSoO7ijcM4TwBffE3mu8G0iCMr0rGmp8PqPMqt5uJSEKrJhHrMMpC4H5I
vzRMClqEu3bvsWRjp4uMZeNSdBAaebR5DTeeG6u0weEwOrzzPB/9ZYiJq85s
PZf59A+ibBw4In2Xjd5eULnvxdeOauXrai+4koC5R9Pw7XQXCsotvxEuy0R6
Z8Z2UQ3GkMiedb1qKwhGuNuJZb56E6hrV8/i3wcJxqeNrmlHts3p9Q83+uMJ
LRL4P3/sUZTJ1QMSIYzHenwgE2X7FLjx6NaytAcGRykQddz4RrETwfAtVxdP
dqPC/fZecl8nAWXUHdHLg8ThlGd+0YIlHBSjcFxPNVIC3uUUTZQZc5CyPCdg
/14aJF+aT5bYTwZmTcb+F8U0WGm+amPtejLkF+ufdK6WgrFNBpQJQYJh/+Fw
FKeWe59WVdPMnrGw3+Ogt5sm5+ILb/6nT6Tjx+KcL5g37zMarvOqS3fw37yP
9717jWkxU//mfabo5elGqzn/5n3+sG+bMc1JwJv32WSz1M3GaAYdH77VFh7T
h7zPXyt5tO8bYsTu+mvoMIRCaAL7w/SGMG8e6GXRHuE162cxbx5o4fqNFp+2
ct///80DNbmLXP9gSDB48zyGpOB74dUczJvn2T7ltNriIwfz5nnqD21K8VxE
MNyFp0unj/NBlonMnyO6BGNMOLzxhzsFltq++LiNq7f3ptru0LvMDwe7skaq
S2dwwd3ru3suCkD8ieJChUVVWOBGO/lsoCBIPVxzT/3HJApR+W5repMKC9z6
hApnCcjYLRcm6S8EudtOWivcIeD9x1vntZ+Lg2FL+dVzVA5Su8BokkyXgODk
xB0NHhx0eTT/7CJTGnwuPWkrws0P69uqmp9W00Bp4W3Z/J/cetLKL17SXBJ0
ky42pXr0/ZtHKklY+cSvsg3z5pHSFum5+s6bxbx5JEZ/sccHGsHgzSPluDD3
x5DZmDePVLp/xz7TNWzc67KOQrWdy+fHHGLFKs/P+QNvHkm5O9dsZP/Yv3mk
Iwabiuq1mP/mkcIu+bWYryCBuU5okY9VJ/L7vam3ZiEB8W03lLKzBlC93avN
6om/sI6g27sqm2H05aPDwY3uE3ghP/HE5PQoEjhksaI1m41580wn7Loup3Pz
D2+eKTth06tjCwkGbx7JQqTprzC33lXguyZwu4kE9gsbhwL6OXhaUaemuYUM
KaJK45e49ZmoxnjxTA8fiPjVuFG59cfp9U07Dk9TwMGhvmPDZa6/BGGNL0x+
qOd/V9K7aRRn/AoznSALQl93dmhwTQdSvE2NvyBEBcOVMovXcj9PyEp0tpki
BANWE+u3MgkoOVQTfnGFOHRWN+7cn8lBBc4BliOrJcD1cVePXg8bbXFzSPwl
RwNbWMH3jFsX3F061LExnHtfL9gdf8Aig43+0d+z8yRB38Yv53zELAqOlXTr
eyQJKRk3jol+yUK1I9p0tFAK9F2fvdGjjGHe/JWGXmey8W825s1fbVjnWqF2
nZsf6xzIArHceCeKkxXrmHi15+yBO8vnzve7ZP5B+dy5843JEldO8mtAw2Od
btHXZ9DbXUPvLmi1oNsDR4Iec+vFK/ODVkjadqANyiHpa3oJ8K9uMA7pGEKL
runRvt0exfOOf1js0zmCljvPzl+yioVXWrvWxs2OoQuvINf8KMHwIXmlCI1N
INeCU9bkzQSDfHZ5Kf0RAcP2x0LfYg4W5vz9VfGQBDGlDlcyKji4Yld0W/wz
Mmz7eU/q23qCwVg2qX/xBR9se1i+plGdq/8WZonLZFLAY/kDi297CMbS6Hvb
BXL5ITd9/o2/NpNY+ta5QxNfBYFsHy35MpaJaKtvnnpSSIUVCSnidVx9fdhn
1cqoAiGIIe3wSwGunJK+4STfLQ5TyhuOvW5lo+qk4kf2IxLwosc8anUHB90I
rF+jdJ4GTr7OjZ9GyfBVNvzP3gkavFLdqsq8RMDSd2WOa2clYT/T0ScxagBv
KtLb8ddPCh783LU8fB8LL9wh13KOIwXx8qrr33PzwSp68gHVy9z79xQUJoCF
72trwgzf3PmcWNp5RMj+N1K8/my7fi4LPct/8crZrA3FV/8ssT9DAjXXhw5/
zbuQv+3hlaFdLFTedL3UoHAQTYqfiJ981I0FtvEvkGkeRp6sArOlzCms+Hq3
nOLEKFLbYTJhyr0f9+cpT2lNjyPtu5M31h0jGG9iC1+87JtE+zsUZMr5CMZP
i1P5GnIEuEzssFMd5eBW6guBaRkSNAx/cQpI42BFSk+x3FI+aHyxsjZnN8Ew
PTCqe0mFAtdrX5l//V9/YCfHI0KTH0q0TC9F3WdhtTuRM0w9KmT7HjU9kUIA
TXHiouJOISgjEhdwv4GK50W2kJ04V0+stm0x4SCDgismJa4SYGB/qCR/AQdR
A/uEbm6hgb2kYN6lGhJEfBCI3v6OBvJfB6tsYslwZ/2HTyZICtoNdzoGT0zi
7IXbjwUypMDXxWt/QjG3Hni6LLUhnw4eT5dfFBBn4dv2+71Qy5z/n+n0n9bM
bEbG8UUmS2QIkKEI1TS0tyNXJbGdwutIEJQOxlqfxtDHq7LW9/YSjECxqz4N
FwjI6TYbE//KwQTr6Z6RcyRI7XsUsOkLB0fKTolsu8oHZsphl/dz6/v9YSs9
PcIo3Hj07rG7I7deSUo6efEVFZ6+31n/UIQEsyepZ1QKxWHWjyO8ZIiNKPd1
ND5VcfXgrsJ8hdccxIeMKuNO0mBfuffrh9/IwPJWO+7ZQYOe9ymtNltJEH5G
ZBv5jBTcNPLYmajPxM1J95J+D0qBXygO3S9BMOLW72fqnqbD7TirD/mRLLw7
wSJz/RgdNmopl6bJc7Cd7ZbedT9aka7IuQi/IyQoOiojl/GrE9GTS1yer+Kg
2NrlZtvSRtFKK4WSUisOnnKcda3NGkd/qXK/H9sQjNhpd4fLbyfR1k93lzhy
803V15jUK/1zetopjvIBTxBgn7arnsXV08Fh4RXeJD7Ypyg5E6lDMDbsHhPU
EKWAmXPgmWlpglGa5dI4Ic8Pa6z1Uja8YOM1Qfv2aShR4UCfgd93NwIqX8if
JysKgY5fYLFbFwHedvH6+bvEofRD7jNTP66/zOc78ttQAsoHdhpsZbHREp/X
DWmraFAzexRirElAd7mknfWCBr6C4WtymsggX0wceZYiBZeHqX2/7Dk4O7vg
6FAqHXZfuHExvIGJe59bumd+aUGidSNqWtz4PaAicX53SweiJauLKIYQkC8e
ZSWsMY5iyH/O1hwnGBfrPssbfiDAdOPLrc8+cPCJd8NNOvlkqC7a/Dh/C8Ho
VJm4lV3EB/VRqntNuPqR9ko//l0tBZpkhhc94+Yn0fBVWna/+GFyw4LxpyfG
sUIgZr/vEYQdrp8ck1LZyCTB1jW3g1ufFtPz1guTYNXDFLcTXUIgIL/sfro8
AfN0KW0bBMXhE1+7SfowB11h8J8QEJYAkb9+1481s9F+2xXeVCEabNgjH2J/
gACRmhO33l6ngcBj7WdNFD54kDJ5TFFQEt4+mRBR/MBGdQrX9apCpED4yBZC
ai0bm/2MkpGQoAOluVTpYBkHvx0XSVwQQofkpw/e7GAx8eFZ87jjVn/Qj7MF
WbYn2ejPUvqJhJY29ArWHWO6kyA2YEHWkoYu9GRGpkrpAhO98j5VI7ZtDN1e
9sfuGlefrSsw9Xu+ZQI58/304D9CMMxO7zq0QZ0E8o9qNz95x8FZZzXyM4AP
JNF6MR+ufvazGrn20YQCzKldNjl23PosuC0u14EKdxp/ykr8JqA5YG/avgBx
OJ0tFNfI9ee7Zwj9zHsScPFwTpuGDgcNhatstdSjQb2qpH2QBhkWUEJnP3+h
AW7ori7TJ4PZ2Ut27pVSUF/9YAObTDAKLl+mFvygwxrTDessvFm4O0ReuGpk
Lp5YXSh6g1+0o1uuSrvM9UiQa6EkEvhkDO0kv9Ma20kwmJfOX+azJ4EPyeb0
GW7+ux7i1TffnQ/ajxs8q+f+/lnFsVXPr1LAdO3OxAdu3HzXn2vXE0GFeRXP
IrX4SVAvucdjyztxMMqtVZiYYaMdj6jLWqxo8EbJRss2mQx5NkahUt1SgBoj
cwu5/hTb5Dxs0EeH9RaLpXdEsnFROunOvbutKMP1xUj+DhIo09tXK0aOI9tJ
aYknXL311i2Dtpx7r4KHNLTSuPH+i0V/1dthMmiJHc/R0ebqyTyPbvlZPhiJ
Dr8rQCEYzlSRj2dFBaDSsXHtt6BhHC/yxttsPhVQgJDEiz0EpHSu8TwjLQQq
16/zPxwhoDN/p1m3pgQk2lJzOobZaF+RetjEUxqMndlWemqIDHoLbQ68jZcC
Oa32/0JWcvC5PfNULiXQYUtY4YPaH0xsOL5CWu5KC1rQtMa0LZ2AsffXFxxZ
MI5C46Q/vLckGLkvzp5NiScgqYJ9p5Gr/6vizzlFZvJBgc+C8HwVgnG89Yp5
RyEFLm5S8fzN1Rfr/3q6rK2hgvwPNYOV4iSwctI9SZsWh5mwq/wLufflt8W1
9oUkGsQkfrN3EiZgz/rFjb2+NLC8oFOiwyFDcptu9Ac2DazqZrUmaQRo3jaf
1RakA2lvcw3pLwefCrC8/PIGHZzoVz7+WMDCO9yb+EWi2lBGE7VK35MEvdP1
IfyPu5Deec+wGXUWsrt/dFJObgzV5lEoPmIEw/r0Ds1huQn0o/DVkh4zgpHu
6aaTLTJXX0ZpjL958B8JjNuOFuamc/CARmhB53o+yJ/NiXDj3g/nenf7x4gC
McL3lgmbcutRMVTxy5QKJvHCCw59JeDosb2GpBwaaHobTN+8QIbA4iZr32Ju
/hiC+1m9HOwv/r3J+Bs3f4at8FTVYuFvwfrs8eUdiDPR/ZXF1VNHhU3vDzWO
oYiIUHbiAYKR9OT8arMwPvi78hDnrQZX7x0dytN5QYGK/56+DbcgGEOnIh1F
3lPh9snPQRLc1yvkFrko1orDyPaMRXzdbFTQft/X3pUG2zK2DLq3koE9UV34
elIKVAp1j4YIEYx+z72XZJh0OKafNfPzLQdT6K57ymXbUA3R9d3lJAkKGFIZ
gfXj6EqqxPNCbjz+0/zU0FeQWy/sNls2OcvBK2oOWlkIkGCHk/6dAW4+OlqK
SvUl+eDai8s73bn1oG7Z2ZXmCylAlRpxM1lHMJRc8w9UH5OAtxoX6GoiHPRT
Km/o0hsaPLn8cokLN67/dY82C/8gBdut1l+78ISDmas9rtll08EtbrXo/X4m
vmv3Li7HbByN5O3tKePmy00i0vk9RQRUJ7APC2Ry8BVJj0/S/fzw7fLThkcH
xnCM8IkfD6cF4cs6zku+OA5yc9h3xnicCmVTiVdWUEgQ8sLjwe4pISD7pJ7V
phIQJ1twnCkvASczKm+ebmOjskuvN58JpsFP/+0/j3Lj+ZB9dk3IQzpMRN55
fKCTiY26ZfeINv1ByZqk2vR3bOT7fU/+7v/aUfd0s6i1EwmOSFi2aMzn1utL
//Ysvz2LZGMfMMt1SDBfZVOkPDefBSS25/qb8AH16/MTP7n6L7TjzItGawos
HpK0DT3N1eviN72ivajQWfjlyY8BApQXyTva10nBz+Xire0iBIM6vFZtWxMd
PprdNq8pZeF5L9n7H8/OxU/ePgOlScipMbwA8/YX9NTtvDbODPzbX8i12p02
7jf1b39BevSUPAhx/u0vZFywe08+TgLe/sKqTpuqa7EzqJxk9rXsbh8SZceS
2laWozCjvs8Xjg+h/dcofYaSQ5i339DnsUhrq9gs5u03JJ0s29e7iWDw9hvo
bj2Kk0YEg7efsE35dvjqGg7m7SfcXPeEfDabg3n7CRkguhC49evAqvkFqRZ8
EOfooVvJ9bfietvi6NMUmG1/F11xhlufVoVYW1zih9c2SaebmDP48EL27/hz
AlA3PSSovLQad9h/LLt4XRCEFadL+n0nUXHuoeUeAVT4cKhStGOKADOdrpI6
HyFo4ARQPt3j6uvOo1OUGHFwnSe6DIlyn8/4YIhCsgQEKrzpjz/NQeKBqsVr
D9PA79RO6mAAGSaSO4f8q2igmCWoP9vJrTd+7qySPyoJK9gxNiU7+v/tVxz9
+l2oUq4N8/YrAh8bHBnvn8G8/YoZ86qnrVz9yduv8PHIurmZxsa8/Yr/Enz2
x9LZeCrlYXD78bn6R8rW4eNTzzl/4O1XpOjtdolQGfu3X6G4R/Vw73Lmv/2K
vPI2/+eLSPC25Qor07gT7T6wXMN+LQGyY0ckhuMH0IKDjsSdE01YLkP2Ltts
GNkmhVoE6E7g0kCNEz/sRtHl/SV54c/ZmLefYXWkMyaUmw95+xnGp5tiOVx9
wtuv0FaPiriYwcGNNrMHjOtI0J/9QN2FGy8Faucf6f9FhpTP3/WythOMG0dl
8tI6+OD9YGyOIFffanMSVJaNU0D+SsbM03AOnv+2z7xuih+0fbcbr7k8inVO
iQ69YwuAtFzuNqOBdsR36o/7FX4qGPq8r9wgSUDx+88bmIQQZNje3GjF/t+c
pkXMvWXikLv0JP+FHA7SjDj4O2OlBDDHFd7f7WKjJyp+/G2yNHga5yYWWU7A
og/Htu0Mo4H0EpsXv7n5a9U8l4FmGUmAbm1PD9Ys8p7389F4hCQcz9h2KL0F
I2ZU4tTCBVLwNvzJ3du5o5i3TxL5MOalUwkb8/ZJBk8RVM5dDm7T8HnfHcXN
f/tCssu5+pnsj5eFLZ073+uit8jdH+fO14YdDVesG5DilQVPbjnOoMJHNotC
17SgXK0/X0rOcT9f5iUL/QMd6PXMeGXvGAGHr1xR+vRrCG1aXm5vbDaKCztG
uzi/RtAPE7WtcSIs7HHbUeD96BgKvGJ2h8bNd95BZcU6fRMoXKzDMYirvw/Y
Gz9b84CA38H61dkMDi4+Zr06LIwEObdo7UvLObhp0uPEuygyuBs+WpLNjf8a
O+bt3BDLrefGtApcNhOMgL7rs82pFPi9fr2HhDHB0GHkHpPP5ocK9XsqRtGT
eMzBcAm7QBBERLwlz5kzkd5H0dUf8qngp5Z2pI2b75gXJi3t8oRgT2foIr9d
BGRuP9Lb1CYOAglmGTnc+B2pNGV4ZkACLBUMTl79xUGyS/WubPGkgdgF1eSR
QTKEtCUMqo7RYE80ecaT+zl0rTcZi05Lwqkwz4pvs/3YX8Ea+n2lYIJvkr5o
IwuHn77RcJUlBTbkDVfVuPV93bnPVGkfOugO+b3+z4CFnYwJCRJ57nxW2J8/
/Vv3N9rRfKqXP56FsmXlaNf2tCFGxmr9//Hw66I3o5bv7UK9O4igjVJspNl/
OM3/3SBKrKOHmVC6cUNn4hjUDaNuY9czG2umcPW6q80v+0dR1WJyVVcTBzfv
UFy5b3gcxb7w8uw8xtULaxRyW9on0ZjTjaaj/Nz3x9psJypNwPhLVROzcQ7e
yKxskpQiQaZ8vI8xV4+qZubu+W8hH5zedCjPi5t/qs/Q0UZlCgh/WDsWxK23
Cakya9st/OBx/rxM5wcWprucKaDsokIwuH07n0CAXsbFbYCEYO2tiKWFlQRs
2UhQl1qLw4nQp/ecD3NQ/uC+70GnJOCCVa2bzTwOOqVHOXFnEw2EO1zEUopJ
sMLYc9QwnQbBP+bJ6r0mQ1rTkmfrtKSgeH3Et/05k1jg7GHLO7lSkO7j5XAp
l4MHic32OQxuvXRQSfIBhYXBev4KsT9z/h+4bdz60Itm5Hbl0GdpAQIcYqdE
pH+2o0zWtzdd3Lqn7tc2X5OMMWR85IbOXX2C0UgkHxj1JMBpqLvcpoSDsYV0
RCa3rvr5g6Iwns/BMupylBFfPuCs2LzGaAfBWGE7bg0hFPhq/Ppi/ilu/tVS
XRkeRwXzW2uj9nDrR/fQuuGhPHE4KuL3PmyEjUokPAYLyyXgXPY1ykKu/gj9
+Ukx3Y4Gd16tTRcqIMOXPXpuZm00+PPHMTHHiASthcu38rtKQa9ey72MFUxs
2kC87O2XgmVfegR20P7HP+xTlZzpUD/14OCyVyy8KHPJtc0jdDDdRXb8OsXG
vu9fH9DLb0V+L+Tg8X5unTdJMeov60QRSYf7ggw5yMTSallOwijKfND5/4g6
73iq2/8B25usrCgNVKQSlVH3jZIKlVLRLskopESUhFIqmaUUkiIVkRDysVe2
bFnHzjjGcY5zjN/n93o99/398zsenPG5x/O63tf1ysNkidgTRosaSaEB6anu
D1TyPBXjV+ad9ZEOAq+su88lzpaX/WJLYAt5z/DPabmzgvy+vDG6evjxAgdU
fSHzR3QPW97Xy5Js07xccIBTYrGBPF/HPNItK5DihltS8+67Fi4SglfXyxsq
8cERw7WP7l9hg3zbo7evVOSH2mKq6adH2ODDterHWvVFoMadrdIFD5eAt2FD
c8z+ZTDo1weRdeR9zFe3QDNTWRSeSpbP5ydfTyznyIuy96LQMuTciBF5nrVR
kD3+IUkc7vT0rqKdWCLsVraJNCRLwNgNxQJVzfME11xNW/X3HmD38PRo1x82
CCsXv3jX9QPrZfkZFW/YoIh2RKDCNhp4BLNNVMnz7e/fE9TLaeR+pGc/fuHn
EuFypfTMkVwO+DUxS6+BXK8umEr5uBRywgAzeD1wPVten6tM+P0GLug4wrkk
IMeWp55hceZ2Kzcst+jz54mnESy7F+VEPy/8oJJ4hOayCB5pD6m39fBBxQJ+
1YuC7LA67F68KoUfNnxje3dhFRtU5AoY3c8pAoHep3/Oc0uAMdLYV8a9DI7n
yaYLkPenH6t3NwnzikItJwFl8vsIX19t+PvLTxTyHUwO5iXPp6fvCjrxc4tB
76Jtz4Nll8A6l6h9jYHi8EG4n/gceT6o5xBZJi8sAYHOur+zf5aIM5aK5xef
SUDhE5R0bfJ5koFjP7VgFzjCHX5Y+egiYLg+qMyvpYCl/DYt5ZvscGa14IRl
xSBItC0Itfs0D45zxEcFbZ0BtB9ZOrfJ139nwjw5Y8ss6HEyVBEi94vPF66r
HtzKDq9Hbf+y/McSUaIkZpivxwlta1qNAsj7FOuuuNcNEy6YleZtUUB+/1Y4
ZjmWWPPBxbsnVhu0ssERg/psW28RuOJ1gPC1TUuA501thfuzZZB9Nn08YfcS
OGphFHrRSBQKploo/93MARNfsx1uKBCFc18sQtec4IAfy0KtXavJ/bX17koF
8n53kxL6K75OAv6xrz64ZL9AvHnSkxFN/d/6kSqVQWGE94Gara3+v03ZoaD/
Wp23YTMg7ZNfzjPy+c9qH6ssvcAOGSNz1qfI9Yg9OaKv7hon/MmpuC+YfB5u
Raktd77HBUcW1K28yfPn0F1DJe4wPvho1UyoGic7PKwnS2N+I+/DRqJDUouL
oHaz2y3qGfI80dCo9TCeA+oE/XqyakAcxlQvXWoVY8tzH96SZz4iAfesvH5/
+d1Fopv3Ju2TVy84Udnh7qTLDt12dVrtCKGBy8+iH2SS56ulS90DuhRyH7Sf
FJ4jn9c6kcKj2WMckF3hZPUb8u9/3RXWXT/LCbt+xbY48rLlBW7Y2e7PxwPN
o8W/3mCbIvz/+e67uJwP1q18yeQDbHDoVormM1F+mFkX90GZxgbPjkm0J+5c
Bgd/sbrvTCyC7jNxQ9xvRCFHbIzHkRkOGObiYZ7yURy2+bDUtkqR98OvqpQz
8RJwZ+mcz1jDPGGz/9WdLc49gHGi/+3eBDao3+t9wF6CBn5IGh8nyPvsslfR
+8vj2KDgkIloQc4SYVb64qJ5Kif8cHfFkYQtbHmaKYeMUwrI+3fLsF0y+Tza
ejDV9tfzwaDDtpyVIuywKUxqqH5GBN6YXcd/l3xefLbr3DVaXAafPHGRC5xf
Ai0lzzaz7ojCc8FaoRPzHPDWN6vkt/Oi8L3Qlzt31NhgWmbFzCFuCegqKzl4
jrpEyA1d13z8QAJe9z5s83jdAmFVYua49hkFaJ3WcOknn4fdL8tLdj8ZBE/t
KsWcLi0ASdlwInIZeX/vNj/exceWlxSh68AlNgumb6RtrDjFlpfKVnKaxvm/
f98wob7aL2k1O8zJkvtz/jt53x27YjStxgkNhy7PmpPPxyA95OxRXS54o0R0
hnKULe/l2PLX/cf4YIVVV6x3Ifn5zGS9E80WhTlNhaNryftGkwLt/P0ScRhv
YixZSVkiyL8yWKNcAib6GCVPbyb3CzUdzc2S/YCxd5D7oAw7/KhpXsD5ZwaM
bpU14jNny1uf/XKteBAnPPTW9u20Hltek0pukug7LpiiICRsRa6P6+dXblD5
zgdpmypMb5Lvd9jQy/GBehHYOWVxtGx4ERzz5GhwvSYK79ya7QHkuf3Wuj15
GTRx+Ct1rb4peV8t8hE9IM+UgApW0iv7/JcI+Ss9KQPcFHC6pU6UzZodiv8T
orytowFLz/oOswtseb337almnGxw9z1r3u2LS4RbubeWKwc7ZDW09fSmLBE2
XstNTwhzwmvmfPz85P0v/1/oKglZLljJUu2T2EDuR69C/rywWgb9rj5MucW7
BKw/bd775LMoFKmkf3tXzgG3l2VYvkoXh9vZPEPp5Hn7y/NHOsaZEvBvRsWq
t4PzRMfz5Ppacxr42m331J5cn/wXQQRHEXnu2eZzLip9iYjTeNexfpjc70BL
80zEDHFvRCcqhsYLjc+atsjbLoEERuMWh0k+GGphptvCzQ63xxpWiszwQ5Nl
X0QbhNignH54T67UMmgneNXiSu8iOC0u+9T7qSiUbo/RXsbNCWMqqp/ceCEB
mzfQrY3/zROimxLO9eR0gU2bp7wexi6CF0o5G89L9gGJzxx2itfYYeIXE2lX
/iGw8tIfvdFGFrgSll8/CNnhK+cNolczlojgM1nguQknLJR8PCtKfr9EuELe
hp7hgraiHVpNV9nyosfPGsbf5IMWHiXMBXJ/vnVDw9auSRwemXLZJiLAlpdx
zGBYvk0CSjd9/8mdsUBUxhSz2c39b/08fuTFIYdbfeBhVm1b5Al2SP/X8kf/
Mif0Vo6Urd3LlqeoVzbO68YF9xcG9B9xYcs7GWUSp/eUD9Yet/92nbx/bfwX
6aXdKw77zbu4j5Lrn2hIfeYZHxpIrFZ6XkSub+8O7Ay91s4G7y8ft/9APi9B
8o21BuOc0GBr2rUJ8vzxxyFkxTc2HjhzZ5YveWCKMDNI69i8ZRk8/Pa5sfq/
RcD25H7wughRaPqIu7ifyQH9bh4zXfueXJ+CPmXKNM0TbdtdE4I4acD35N3v
wVZseR1m/1bvz+KCzOs7lJXI9b3lNecX7wo+uObg6m0fyPtHyXD68IlREaj8
3rCwsGcRiGx51X9qdhmMGdlI7R8l9+9p+xbZ26KQiLxE2UjngBwHfGquMETh
SfsdmksX2GCA4zZwzIECqsNuMKbIc+fNdUKH3y1OA8Uz4+VOC0tEktT1Zw4z
dMD+xW9wDwdbXvDy21u6Zdmhg2dyTCG5vkuZSxgLKXHC5Bs65+fI8/tfzQaz
Qg0uKB8ooltAnm8dy5TO+ReIQ9UQK7299eT7pS0yTy+SgJcWn5pfkiHXA0az
hI8/J/RZ9UN4L2DL8yq2fJQQwQWr3Dw2lNqw5UXIr084+5kPqgQ7V/0UYod+
u3ZSHSpE4Fe/MFrT2CK4mdDlGWYnCqU6m0fq6jig7b013+smxeGtFSd1Nouw
5Tm/iRjcMCsBLQzegOZdS4TJshIf6b5e8KFBr4/vNDv8DNj1i/Jp4GG4S4k2
+XzJfmvp+chkg66XVj4aIZ/v+715Zs7kc6DCsW+rAvn98WsSGv8ULwozol8d
LW/igAInUuKE0yTglHV69trOecK17/0WugENSKocUXEi148N/S/3aOawQYd9
w6dHye+/jGxXcuwwH7RaHaLQyccOBV5oUQxFlpHn6Z+GXeR+cQfMakY/EoVH
30hzHSZ/72IwnbYzRAJq+8a1Fc7OEyVVMaygKQqIrstOu3adHZoNqvoODg8C
sz/n3uw0ngf8nrL3ZLXJe91XlwY1cn34kn9ZP2EPJ9QwkQmxJp83Lv36Z5wW
XFBIxOiBvS35/K28ZONULw4FpRxeRpL3tWq2YN0Wfy6YPESXOupE7v9ndD5W
RfLBZQOMv/K87NBYqyuCe0QcmsS7jXuSz0fn0PC8aCwNpPbrCl8nn48zdx/p
CPxjg+yKwqmu/z8/FHuMenGJfD6+za32Jfebgi2lYDBaFMZ7J5UpjHLA0n6O
2xGfJWD2WYVzLn/miYRnT0cN19LAbFGa0RvyPsmwnPwq1sYH1fLP7TwrzA6H
wK0B0wURGPhNe2a4axF4Rl0LkOEUhec39NtWy7PBrFffHnZ4i8LUCDeWDjsn
HJLa9ryBTQyu21tj4Nq2BNavtH87lUQBIxO7eExd2WHaiJzaPYn/7YemxuXN
dzaww9n3lBHltCWi53HOnjZNTqi8r/GPL/n+qQesaXT/RH4/b7kcu/n///69
fXniRBYfFNa+OnKPfB7jQumjF9pFoGHHk632A4vgYfnlqrdz4tArSmjpHXne
kbJ79EVkUQJaczZXLG9eIkZz57t/qFDAZuvpA3fsyXtf7/rHhuQ9ztxu11Mu
8v0zkbM/uHs5J3zLL1RYT+4vpmXnan1yJGDGNurp8zPzhIFu9s3EizRQ+3Z2
vSL5/udvfMYXvMAL7RpOJM10LIGRhA9nvef5oeBvKacsch9TG53p0l5Fnkee
ddrE9i2C3f26lAtBotD5G/UI5OSE+pwfVye9loDcgsrZIz3zxNP3DzR2sLrA
Lt/0lsiyRWBzt9ly8/Y+kHsFOOheYYe35kR23zrGCa8LuSc9I59/6dIjX9fa
cEGPBwX9LPL701nGbn+pTRyuL9tR60Gujxc/7/hQtfC/9Rr7Lanm5rVDdruR
z+KZTXzl18p47LMwfzL1edArC/ssPgZNlQqtK8E+C7HitGrVpVrss7h+UkxH
61cr9uuGlGdrVan3Yp/F+UvyiSeEhrHPAr7UYFjIUrFfl/PyY+2ivdPYr+uR
drOpTH8W+3XDzammYbcY2K/7KvfMS4Kfif26iry3y6olWQD5LDZlK3ZLXmMB
5LOorNU5I6jAAshnwSOZr9Qkz8R+XV//5iC+YAb261btOrduUG8W+3Wtw1hV
xO1p7Nft2rdPsbVsAvt1I6PfB8d9H8R+XVFztyelkl3Yr+uUJJsaeOw39ll8
Mes4+1HWn0A+CzVHz+3/5ssI5LOoKfVaG17SRCCfRae+8fdfGzsJ5LNQS9Hg
ahnqIZDPYvS7wrVhLwqBfBYXHR0ls4coBPJZXPw0En54G4VAPouWH5o3M2x6
COSzKPqV92VFUQeBfBb8d4bkM10aCOSzSFnbWXmQVoB9FtFXHpzSGvAFyGch
9qsl8hl/HkA+i7OvgrPyWssB8lk424UoyoXWAOSzkBVospdqrwXIZyHv8Wpf
KVs9QD6Luh8OFu5bGwDyWXxR2G6abfkHIJ+FeWOJT2tsI0A+i5ENqa2DjU0A
+Szsbv5WiGQ0A+SzIFzmuY/ItgLks/Awk46vZbUC5LPoV1WREk1qA8hnsWq3
O/vt6JfYrxvSulXKoDoV+y3UvlyXizqdj/0WZ7wbSrXf/sZ+i03ZOTl/+Bqx
X1czN3OZWEEn9uvWH5895+/Tj/26Ndf/fr3dNIP9uj13V0jvdaJjvy6YVAum
ms9hv+5Zh6q2Rx+YAPl1PW2/Rlw6xgLIrxv+wC9z+BQLIL+FkEopHEhlAuS3
uKOzcCLObg77de8dEtxteYeO/br/Sp1qWaMzAPkttldoavnnT2JfxcrzO6zz
0jMB8lUwO4ypd8KyCeSr0H/cO7U4WUcgX8Vtx9mO/uw2Yv34wdBIISGYYZff
vvVjN+EhcCXaeoUwLNvlFx7Z2ksgn4WDinly/h8KgXwWK97rF3xOoxDIZ1E4
v+FrgksvgXwW7DZHuT6JdBPIZ9HG+Gt5066FwP6KX/E+ad3fsL9iq9/98BxX
8vP8z1+hPKe/Y9mDYoD8FZuWgkTlzasA8lekJe9qiLCsBfylOs03NGXggs9w
+mJQK0D+itmNJ8denW8DyF9x8v5d13UJ/tgXbPuNPucXmIR9wUniJrnXbuVi
nwW0Olf1uLgM+yyaIoxiIifqsS+Y8eRH2m61DuwLrlLsAgdqKdgXfJiYc7AT
n8G+4GwR85s7/85iX/Bl19NVN4YZ2Bf8+0tM6tYzTIB8wa8Oi5q6arMA8gVv
bNfp0LJnAeS3MNG+dMN9jAmQ34KYuJY/WTqHfcEaqhlOy4UY2Bdcd3SHjPMr
GkB+i7cCXxodYqewr2Lx3Leu6bRC7KvgybvkzBBKJpCvYvajg9ZMRDVhsF78
c3uJAGz97Bqxsr6FMIlrTtxfJgi5Dty+vqami1AvqWI3bxGC4u53YuLsewnk
tzg0sdVVLpVCIL/FQUnrNOMWCoH8FoH3zhT+be8lkN/i4euPMUrF3QTyW+yS
8vIM+tpGIJ/F888pVn92ZWOfxaPbksEmPh8A8lms0bvEMT1aAJDPIuzJZ27/
X78B8lnsvzX601iuFiR6QhGGpAz8GwunXx9vBchn8XqLwMXOLW3Yf3x/9XOp
8/7p2H+cbjEQEpVQiP0W8zsvGrCSqrHf4srFa/+GTJoB8lXIORn1KAfTsA9Z
ocr2YwGdjn3In00/HOf/Pod9yLKpyz7k9jIB8iFzLH0eibjMAsiH7PH8d8oW
AxZAfovev9lTJ64xAfYhR0nZzbPPAeSXCHz3h3vA6Q+Rvt/48vgeQdjoo/ZC
1K+D4NqZ5zl2WAj6dsXsNT7SQ5Sase1yOysMxbKPjv/QohDIR6ERcWrb6ACF
QD4K7tv2noV3KQTyUWxfEstNme0hkI+iOnGxreNBJ/ZNjJfleOgTkdg3sV6B
N+d5yE+AfBOWBpYGRxpKAfJNeMtl+Oi/qga24loxE0dloPR9z2S1slaAfBNF
x8PX+QS0AeSbsBWNnS347oZ9zqd+6N4OVPqMfc4t6pcne67nYP/ERGF7z17H
Uuyf6Jq8P3p9qg77J9bOiUq0TrRhn7OtUKSz4UIv9jl/KB8HK75OY5+zkdfm
8E9Bs9jnzFlUKr8lhYF9zvsl1HzbNZnY5+we9ovNcj0LIJ/zT/8PnBLk+Qj5
nDevsp19x8MCyE8RdztzPnh6Dvuc2wroHsOHGNjnfGTjt6umozSA/BTP/359
ZbpsGiDfxCqpYMF7d0qxbyJyOGZ82/NYAvkm7n+PytjS+Jvoj/abPx4vAA9p
/S0Iq20mzt57m674URCe2wozGtm7CL517N/L0oVgU3psqoxaL4H8FNWKla4h
rykE8lNEyGw7O9BLIZCfQu2u5edSfgqB/BR6yRltPjI9BPJTxK6+O5+X204g
H4VNyrerckZ52EdhbxXYoJr/GiAfxWBkmVumXz5APgq4nNb2rbECIB/FmsfS
79NGawDTonCDDjd53n4vPWW6sxUgH8UzqeKaOak27KdOGP8SXf4+Dfup/7mZ
iy7cKcB+iiAfDrW3K6uwn0K+9tNqO6UmgHwTC/V31fm0aNhXbcal2p2RRse+
6t/plmc3+M1hX/UvLV7dR8VMgHzVJnWNtlpnWQD5qn/VjVZ4HGYB5KfgzFI7
5hXMBMhPkXVqvoy5fQ4sLz17/d4aAagj9Z76V6uBsMzPSrdTEoSfVPx+qMW1
E1ISD/2L1IWgm9dGEfXFbiLmy7bxMT1hWPKx8R+XAPn5/OeXOH6vd0dfF4VA
fokf6zfsj4ukEMgv8ZN29pbcjl4C+SVSwuvA8PEu7I/onLNJ10mNx/4I66AT
obel0wHyR5T03f9u+qMEIH/EsIxdsclSFcgczcjeukcGKuqWJ7B/bQXIH3Hv
Yvbvw7fasF/7kOcxuXwfJkB+ba1PSY/WGrMA8mtHhBtevWvNAsivreL0Xvp5
HRMcs319uH1OCBrwX9roGddLIB8D12GR6nvFFAL5GM7WX+vpLqMQyMeQHn/q
2MNPvdinYKARu/2kQRFAPgVV7wTF0OBKgHwKxXrCJ+q1a8HfDv+VaxNkYOTt
y7aO+9sA8nuPCVhHqy4wAfJ76w40SQaS+znyey9bL+ErSL6ucWrlEzZvYZi4
ofDI19MUAvkKOpTD/P8OUwjkK7h44I8H2ykK9g04VakWDq2qAcg3YHmGa1T+
bRtAvoHuXHmKVfYV7Au3OqkpcsDtE/aF/8zk/210Kxv7B2zX+WwMKi3B/oGS
w7fqX7rVYf/ACbj8lZlFG/aFH6c53XYO78W+8FxO5kQSeT9DfoHiiXdTPnaz
2Be+8andxk1hDOwLz+XdqfFxFRP7wgUFw6J7VrIA8oXvcl1/yolcH5EvPDuv
4Ju6OAsgP8Eyk+Rv9/iY2Bc+9OVrVY0zA/vCv469ZvVKzgLkJ3iz4+Hhxj3T
APkGdIbm7/vblGPfwLpZwQdXbCMI5BtwHLxoH+tQQaS37/oQ9lIAZh0q4Y0z
aSYGr3rrCYULwsxyxhHfl53ETP1rQa6PQnC9adCYiGAvMfbaJ21TijCs+ShC
139GIZCvYMumhD925H6KfAXJfI/uSa8iz0P/+QqO3JlohLCHQL6C7Yn1uuMG
HQTyE3SUn6lqeJOP/QS5MpfF5B1CAPIT2AfVFt4vzwPITyCusPRY36oCID8B
Z3VDhnRBDVhT6Lfj1II05EgJ7epb3wqQn2Dr7d7qp/xt2H9+6X5B8OmM79h/
/j1dfMnxXz72FSx+O+4mcboS+wqyA4pPFoU3AuQfUGGmhgrz0LAPvfyhDjwY
Qsc+9PPnh6VaHOawD32dSUdMzw8mQD70Gwbp+19bsgDyob+8KZnw7DgLIF+B
SOpfxYBYJkC+Au4HP/e9PjwHvvx8bfJGTACu1br2b0N4PbFx4ca5+OWCsCDd
anD51nYims1O+JuCEFS6yNCprO8mnp2qMtqgJgwzdCe2X5nqJZBvoLed61lT
G4VAvgHu+oepBQkUAvsG9EbNPSx6CeQb2B3rcdMlu4tAPgGKR7ZcTOoX7BO4
os51w+ZgGkA+gRsKhxi3V5UA5BN44/h1k8LnKtBtebvcXE8GpgmO+8pFtwLk
E7iVfmc+zqEN+9sHlpmYmTszAfK3h20rVpfTZwHkb39ziU/4xxUWQP72vpnJ
rPYuJtCX1vwkNSwEq2bvvVV+1Eug+fyVQ69eHMmhEGg+v5WnS1u9jkKg+fyQ
jSASFvbi+fr8dz6Ki68KAZqv19gx5sa+sRKg+frh0pVU7o21IKn0faNltAz8
wBKaPbKrDSB/fKBA93EzKhMgf3zvt20HL9iyAPLHSz3Y6zlH3ofaom36dJ2E
oXGw6r+y/RQCza8XiVDvDg5RCDS/7pIlTlm8SsHz591XHAbYuqoBmj+3N9np
wBnWBpCPXlGXMqBJrr/IR58nZ9a65MAC0YnHbF1rhWHRW9/Mto8UAs2L85ie
+balk4LnudWin4Ze568FyF+v/U57RvMiCyB/vRWsW5Oyn/z+LrwKTzUVhp/0
Sp/cVKQQaH664GCZwT8Kuf/8Nz9NaIJnh8j1As1Da1L08pLMqgHy35dPx54I
NiPPDf/576PMbzMDz7MAmj+WFL+0GFdFIdD88ZRRkP55goL9+Fr10UarrrIA
mscdadCPqyb3FzRPGzdz99vMqRqA5mmNzt99UPmhDaB52oIsV5WPxAns0y+d
cIx6+i4B+/Tngi/rizOz8HztNc6z2nauJXi+dn5/Sb6kbh2er3Xhe0FM87Vh
n76htYI640Iv9ulX7Ly9tvzcNPbpF1ksGGRazGKfvqMP7daNBwzs01/BFSVY
LsnEPv0KXvvYf7IsgHz6yqaT9JPkfoJ8+ia66/m/S7MAmr89WJvV9EuciX36
1leODrDfZ2CfflzWqj309bMAzd8u7rE9cJb8+9A87dNvxi+Fz1Tgedo2JccP
h5eCCTRP+zbkyI3RtHIi+vbr29+fC8AEEyubbv5m4gvl+tL9p4JwA+0J1fFC
J2GfOJjx7q0QlFETV5Bl9hBs0oGlpz4Jwx03nb5tf0gh0DxuAdPwV+YghUDz
uAfFPlQc30Ah0Dwuh1Rye9zRHgLN455wPuLX79tBoPlb3iRjnQ7jAjx/Oy13
MiHC5ilA87eHmf62q+zzAJq/FeT/sCxOrgKg+Vv4xXX9us81IP325VyHOWno
MOi0U3F1K0Dzt/uXj9/L5GjDfYDW0D4JW4PvuA+wl3ix8tv7fDyPG1jY+2Tr
/G88j/vrVIPhrFkjQPO1SSbv3xwfn8G9gIocyrF2bzruBQSPrZV3OzeHewGx
67f4/P7KBKgX0Oh1+JL4CRZAvYCHn5Yem5P7C+oF3FSXVKpOZAI0n5u4uJ9d
48wcYKTuzNrILwAniA/nKIb1hERk7bYSYUHYd/27WP5sG2HtZlWrtFwI2nCl
KnzM6Sa4tslNl6wVhvQDhqtVBnoJNF9bv0NfZKyZQqD5Wsr10Oa/SRQCzdey
nwo9tcO6l0Dztb5CnJczRrsIND/r/ytcZe/OZDw/e+y388bCC98Bmp+1v7b0
r7m+GKD52Tq/CzI77lWBm6JWhy/tlIGm9UYKEhGtAM3PChjV6KjatOG+wWRK
8s4WGyZAfYOB0BT1U7tYAPUNDmR2mAnZsQDqG5x/t2953gATZI57W6R1C0Ga
QNDBJ7d7CevtGpv/DQrDfevMV57IoBBoPtVSMaKy5w+FQPOplevPpKTW9OL5
0ls3rekiewoBmi99Ptc5fWHmN0DzpVKn7ZyU1tQC6V9bt9Jey0CtXgvqmh1t
APUVbsibVrwZZgLUV7hdkfNMlNz/UF9B8ShrXHU3Cxx2+x7UaiMM987QdfsB
hUDzm1opQQ8FyP0EzW++OBF97JErBc9fHu4c7c3OqQZo/vLVv8dRh563AdRr
4NzifalNjQVQr0F6qsU4hlxvU5XPe74vE4ZqpT/eNcdQCDQveTk5oialm4Ln
Gfv2cZluYqsFqO8g6iv1zphc31HfIcFkda2aKfl6Ggf0D+8Vhj6iM94Xl1MI
ND8YeKj4ER95/0bzg8N7HYtjwih4HnDrBKftS5VqgPoQOcuyeq4dZAHUh4g9
dkv4Lbl/ofm73/de3P9eTiHQ/J0qhwvHviIK7kdw5Rcp2pP7JZpP85vhSZ4l
9xM0Xzb9/lxowO4agObL1nEWSvu8awOoN+E0ncP//+sxmgcbq+I6V91Hwf2J
A9/fHWSdYoH3ZwjnldtFoHivKvD6S8H9iSO3a6S22JDnm90r+J/TheEaidoG
/nwKgeafXlASJzaR+yHqU2xwn1zzhPz+8t291PL1pgj01b2o5Ev+vahXIbRF
7MdW8vWgeZ5NXxIWLrZTiIInir0/O1kg6JHiReYlFjh+LXidjYUIPPE7+dbT
fgruWaz1tn/4lfy8s55qPaWFisDsh9aOl8mfj+ZDwiY4J1mf2gCaDxlKMt4j
VLAP9y5uGf2U5tiRgHsXlAIG3+mcLDwv8k4hqOGdSQmeF7m1aLxCWKEOz4vE
1gZMslFace/iuMrVyZPGvbh3obr1akCF+TTuXfA3bVpTfHAW9y52JP4J4vNi
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
bJtW/40f4oH0o7i0M6DCUK2uM1NEv1xZg2WYFItDxxSp4+WeXHDDKhxPPYzB
Cb2DeZ+J8RWeb+p0Pu4OYMYKK7mKsUHCXQGNRWEY1L6ws20pMZ91xlq0GpNh
kHrgZtUs8f1lNsoyi+WoUKYiyz6E6F9Iz8q3NN72PHGeOJ7f+T4zMANYqqks
6hNig6fm2u46u4ZAz9ILarbE85C+VfHZFae6U1wQY3KYXnucCjH+VSdfEuur
OrRzOPk0BhnsM4sNifGJVZZZIHcZg50Njd+DiP0TcutCZproMLjo70llWPGQ
Zy2Seq6uS/y+yeSMfnb0E9BsVez0jhgf63hvIWzeEKiwYH5LIz4v+3lh/HJj
oh5/7LGvhvg9VQ+tI/LWGDyy6rKZFfH9ujNtXs5u94EB8070SuL/k77VvObz
0KA/DjRaPRPK1Klw2/LvoVqfif3/SOHA+ZdEPRroqskh5idkLMwk3SkLCGm1
xy+QINar1OTX49eGgEysp/9vYn2RHnbt+rMurh5cIFTzMNbPmQpz/tS8yyXm
yzEp8toKNwz6W1zUTSKen/Sw8UPOzjX5z4HTinpR41rs7/ugxeD/AYBdPIU=

          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{46, 73, 330, 1045, 781, 598, 484, 417}}], 
               PolygonBox[CompressedData["
1:eJwV0T1MU2EYhuEDxUBgEicYQFiKMogSGVAmEqGLhWrCKhAIYGwLaqJOyoSy
QLshTLCh6CJOgAYxwQkjMOFPWSyDTgpBA3qd4cl738/7faenbU1PKpEsDIKg
QObkLThvVik/41tyrigIopEgSOv+8SUZ0N3QzeuaZUp3VXdFN8Gr5Yvuoe6e
bpUnJKlr0NXphsMPlgk+xj/hZftB3s2f8Uvyii/wQ/zUPs7b+CTfwVv4NJ7F
0/g7Lj7h2fyr84/M+/qLund2v/gPfg2v4WUctys1K8xy3V0zFf4W+Ez4fD7i
/AZf5wlewCf5Y36Zb/Ijvs/7+Ir7Q7yHP7fL41x4Fi/iF/gPnnaug7fzDK+R
b7q0XNCf1d/WFUqGP+Fb+I39Td7LF/ge3sUt+DV+iWPe4y8/GX4/Xdqcca8T
x+yjPBv+13ybd/FaPsdneCvP85Lw++qGzJz7o/iBfRNfs//Nf/Lr+D1ewWVS
aX+KD7vTaNbr7jjzEX/AEZzF4+F7O7vNj/kB7+f/AWc1VdM=
                "]], 
               PolygonBox[CompressedData["
1:eJwV1GdwEFUUhuEliT+wgCgBFBIJoAOIUgWkSBW7YhIggkkQG70Iig7SAgQB
FbtSVBJ0QrXSBJQZ1BmBhGalKGUGGy2gjCA6+pwfJ+d733PvzWZ3s1mDRmWP
TEmSpIqa60cLvbkqk4tUh7QkaZWaJBMsulB9xY3mBnMf4+4qm6vH1eTy8VG8
RPXj7uHmcY3VNK4j15p7Gl+ktnBjuCHcKtxD5XAZXDpXgI/hpSqP683N55qo
6Vwnrg03EV+sXsPP4z3yVvPH8FDc4oIkWR1n4SO4p7xBXiX/J+dam4lr4cK4
LnmzfJwvlifJW/i/5Ep5GX+ffK/c2NkLzA7gH3AeborL8KL4XfgorqqncMP0
GfZ3lm8wz8KTzL/G5TgHX4Jfx3NxF7w3HpJ+Dm+zd2ycI6/hj8s/yzfLG+XV
cqL6WHcVri0PNDuBl6v+XDa3kLtWFXM3cW25ybiaegO/gPfJ5ebj8HDc0jWs
jbPwL3GvcC9cRe5r3cx47vGs4v6oFeoZNcWa6upF6/bHevv+livMHnfWCHkd
f4vqz9Xn6nAP4JNxLp6Mt+KVeADOwW/ig/IeuZm8RC6Je+H8Y/HO6qncLHu6
6O3MGnBTzb7BFTgXX4rn4ZdwV/wjTtHP48H6dvufMB+JW+FP4rrwr3Fv8a34
U7wG3xnPWU/Xq3ED7M3Sr+AGxXspfy5Xxr2Rp8Qz5d/D9+Nc/Ba+Ts3munLt
uSJcQ+2IdaoBfyX/IHcKv6/yuT7c29z1aikujfdYnmPeDd+Ip+Fv5e3yZfJ8
+WW5m2v+Cafq/+Ah+k77xpuPwq3xevNK/Fs8H3wb/gyvxXfF/dZr6dW5sXq+
/Q3lunwGfsj6bfgLfNpsljxVbmdWbnYWn8IfmBXIfeVF/CF5r9xcXiYvlk/I
z1rXHXfADZ0xnfsO74j/AXw5XoBfwQfkNO5feZd9T/Kj5TbchriP+Hd8u7xJ
XiffbZam1473hBunF9jbSK7HZ+KH4/8Ef4l74z/MZ+Mi3B5XmJ/Dp+MdwB+a
F+J+uAkuMT+M98W3Sl4uvyOflJ+ztgfuiGfgmmohfhUflHebP4XH4I34DlXI
Xc1lcI/gP/FHaiCXx5VyLdUK/G68i/E9jr8zvp/W9dQ78Y24YrPv8c54p+M7
Feeoa7hM7lHuDP4fXifHNQ==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0DlM03EchvGfNwZEbIkguDCAW4sLxyK62kM0HqjEgQSYaAOLaFqPBDZN
HDyYIAHKDGVRNxOxTdxc6uSigtbBjTgA8unw5vs87/v/p0fHSPZa5mAI4YC8
kJjEpaoYNkQPhdB+OISr/KmsyG+5a4vY2myD/ITbfCSEPX3CXbe9113iP/Af
XMTjOItL3vnKn/NX/Dh+KOd5P39ir/IFvsLP4TlJ85u8YP+Lt3FZn8ez+Jf+
Ay7jO/qzvsspfoZfsU3xBhx1d+2X3aL9ne4iv8e/8ypf43E+xjP8k/fH+T/+
n1fsF/gz/pLX8c/4C36Au3Efflz7z/g8L/AuXMHf8BucwjfwsudKPMdn+Ba/
zZt4K0/zSZ9XjyPujm3N9pYP4FUZ5RN8w7PH+HTtN+h6dY90nfy1JHXXdUu6
TRnSndS16FL8oxzV3ZeYvkef1y3KT7mlb9Sf1id5QnKyDz4BR58=
                "]], 
               PolygonBox[CompressedData["
1:eJwV1EVsVVEUBdCHFGiCTnCCuwR3l+JSBiR4aItbgiboANfiGtyLuzsBJri7
wwAmSHFbd3B699rnvd/3839bOGFoxyFpoyhKY+r6UdFZySQrm6WLorbpo2i5
/oT5a4bqS+gr6AfxY1NAN9c01bfRL9N95518gGvJ3WOi6Dm/4xSuwD25Lx93
/U3dNE7mPxweqjiX54EcK580Fzje7oP8WT4nj5Ynyo9c90/O4LXf6hs7V/J6
u/zciW/zI54T3gc34da8NLw3jpWzO7/Zt3DusN+vq8nd+Bm/5W1cnntwHz7m
/lT5t3zDro7dVJ7Lv+0uy9fkwXbF5HLyAH0m+YQ5zx3szppRPIEf2r/hFbyO
88mzw/viVrzE/itv531cQ+7q9z7lN7yVy3F37s1HXX9dN4Xn8C8exEW5LPfn
jPJxc47b250xI3k8PwjfATnGa77WL5fX6vPKt+SH8qzwudk34pa8OHyWnEnO
5ky1b+5Msd+rq85d+Am/5i1clrtxEh9xfxJ/4V98zb42T+bZ/NP+knw1fE/s
ishl5H76DPIxc5bb2Z02I3gc37d/xct4DeeRZ5qG3IIX2X/hbbyHq8mbzWH9
D9PX9DG9zcLwjOaeWWAGe76M7snq/OyerV5jN1eVN4XPiBP5UPg7MQN0hXWl
dYnclk+Z4bqxuru6l7yUV3Nu+ab8QJ4hN5Cby/PDe3Zm8Xs/6eOcW+x26apw
Z37Mr3gjl+EunMAH3ZsYnpd/8lX7WjyJZ/E3+3i+yFfCd8W+IBfiUpxgnyM8
my5Gd9Sc4Tauey9/kk/Kw+Qx8h3Xv+AlvIpzyTfk+/J0ub4cJ88L39HwmnJm
58fwOdjt5MryhvC+uBcfCH8Ppl94Nl1JXS++bXKG/y+mnr6ZPlm33/wHsaup
dQ==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl03fcjWUYwPE3u5AoI/tFlGxlj5SirBBZSWbJ3pIZClFGg8wolJWUGSLK
KERIRtmUUQiZ3+vTH9/3d57rOc65z/3cElt2rtfpjoSEhKr+RFP586NOohPP
UMjsb13NOEqS0+yILmIoLUjCneY/6Ud0pgaPkMv8qH7BMF4iKXeZb9PJdKEm
j5Lb/JguZjgtSUZq8+06ha7UohSJ5sf1S96kFclJY75Dp9KN2pQmj/kJXcJb
tCYFac1/1ml0pw5lSMnd7u3U6fTgWcrGnsXvjt9COu/ZpTPoSV3Kxbq5x71f
9GN6UY/y5DU/qV8xgjaxbtKb79aZ9KY+Fchnfkq/ZiRtY91kMN+js+jDcxQ2
+0fXMJ6KPGB2WpcyinYUN/tX1/NB/FbuNdurn9A3nqPrq7qRBhRxfUHXMiH2
yfUN3Uwl8rv+U5fFuuN88XY8L72mP/AyJVxf1u+o7HUyPox901v6lG7VxzUl
T5PO9X36qz6hn8ZexgGmGq/FOdL/9En9Xh/T5FSnoeuiejHh/7P/baxZk/Je
PFe9qVuo4nUKKntdQP/S5bGXXidhdJwpva6beIWSrq/oBibGsyej2T6dTT+e
p5jZJV3H+7FGHjQ7oysYQ/s4C2Qy/03n8DqNYm08ZH5WV/IOr8ZZILP5fp1L
fxrHHsZzJYt7B/QzBtAk9jH2NNYZ3xX/Pt7H/WQlG9nJQU5ykZtE8pA3zma8
32cf1M8ZSNPY4zh38TnuHdJ5DKJZPB8Kmp/TVbxLhzg/8Z3mv+t8BvNCnAce
Nj+v3zCWjvFsYn3mf+gChtCcarGnsW73DutC3uBFqsf+xffHZ1KIwvHb/Ye6
DX7Yizs=
               "]]}, Annotation[#, "Charting`Private`Tag$249898#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
MPZ/YZ8drg==
               "]]}, Annotation[#, "Charting`Private`Tag$249898#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WW4FGUYBuClFVBSJKSlu1tAOpVGuqRbOqRUukUF6W4JQZTukk7pBgEF
g5D0/n7c1/s+z+ycc/bMzmzaFl1qdo4SiUTKRY1EeseIRArFikR2xIxEGhOH
Q7ol9KGwYzt1TYjLYd1SGupvyUPIxV+6vhTR75Kb8hZHdMtopL8tDyU3f+v6
UVS/W27G2xzVLaex/o48jDz8o+tPMf0euTnxOKZbQRP97/IX5OVf3QCK6/fK
LYjPcd1KBlLCsX26liTghO4HPmcQg/nAa/Y71oqEnNStoqn+rvwl+XikG0JJ
/QH5UxJxSreaZvp78lfk57FuKKX0B+XWJOa0bg3N9ffl4RTgiW4YpfW/ym14
hzO6nroI38uVWKtrIf9hH0FBnoa/TxeXRXKd8L/SfSgfsrclCSPlxPxgP+t4
L3sUpsuV+dqeml/sPzre0v5nOI+Z9iwUso8zk/GjfZGZl//CezbfCj+fxY7N
M3NS1/6dmZ61bJGXmPn5mS+dW8Y8rF9utjOnm5lYx7vyKPMdVrNKXmDm5id+
c35vMyormeH4bDMbVexTzDRstK/z2lb2B+FnUpjxcvLwu+zPwrWwv80SuV64
rrqy8hF7e5JyLtxDumjMlKuyXvep/NA+miI81w2nnP6o3IFknNf9RGv9X/IY
ivJCN4Ly+mNyR5JzQbeBkVRw7LiuEym4qPuZUVR07ISuM+9xSfcLoxnDWMZR
yetOOt6FlFzWbWQ8lR07petKKq7oNjGBKo6d1nUjNVd1m2mj/1seSzFe6iZS
VX9G7k4arum20Fb/T/gsUZxXuklU05+VPyMt13Vbaaf/N1wrSvBaN5nq4frL
PUjHjfCs0kVnllyNbbr28iP7BD4IU07Bensk3C/2eCy11w/3gnM+ks/Ze5I+
XFM5SfgM2m+GZ5w9BrPlOWZ2qtu/MdOyyb7d6zrYH9snMsuelZIhm++xJnyO
5cVmPjaE+zI8f8z44fPOMnm+mSv8zXwiTzXfD/chW+WlZoFw/zLF7/3YPK9f
YfYyZ5iZwznh8xbuq/C77QvNPNwKz2EzJnP0c80cfGT/1kzHZvsOr+tof2Kf
RKkw5ZThb7dHDfeMPQHL7Q3C/8Q5NeQL9t5k4HZ4jutiMVf+mJ26TvJT+2RK
Ey38fn1N/UV7HzJyR7eLzuH5E64ZHxI9PG/0tfSX7H3JxO+63UxlGrUdv6zv
R2bu6vbQRf8sPDcoQwy+19fRX7H3Jwv3dHvpqn8e3iNlicl0fV39VfsAsnI/
fDfp3mCeXIN9um7yi/AeKUescK309fTX7APJxh/h+0v3JvPlmuzXdZdfhvdM
+fB/k1OFZ6v9DYbbE7LC3pBp9gxss890fn37dfvnZA/3sJyUtfY/w/elPTYL
5Foc0M1iNnOYyzzms4CFfOL1N7x2EDl4oDvIZ/pX4bNLBd5kkb6B/qZ9MDl5
GL6jdXFYKNfmV10P+XV4D1QkNiN0icKz394oXCt7Rrbbl5kFw7Ofxc7/Hxpf
OBg=
               "]]}, Annotation[#, "Charting`Private`Tag$249898#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf8lXMYxvFToV97Dy3aikqLhooU7UWDFC1FSyJKWhpokIZKeyEVokJT
u2gvLRVpD6MyWt73H5/XdV33/Zxznuf7fO/vyd+2e5NuyRKJxLzkicTylInE
olSJRB7MSUok6iEjLqqvwEqswlf6eTFXrz4y4ZL6anytng8fqzVAZvyu/j0W
q9+FT9QaIgv+UN+jVhUb5W4ogzXqS9TuxqdyI2SNe5Fb4Dj/Nv503V65GjbJ
3VEWidSJxItqf/GTsNZ1S+X8mCc3RhrXvCrf5LPFM/BP4Rf+HeTRHypniO/x
+X30YWzWK6H3If9S3Bffj08Z98F/SsupJ+M78w3pZfkBOl1uTT+SC9ARcjOa
jdakn9N2dJ3f+4YvgFryZ64vRsfE89MmclraS25Eb8mV6Gw5e6w5fRq/xnqq
T+bf5fPyw/iMuOw39tNHsEWvR6yDfn85CeXl5HIX/go/Get95lu5IObLTyBH
vEe5JU7ww3HFdT/J1fGD/HI8Pzaof6dWCAvkJ5ETV9U3YhM2Ywt+wI/YimWu
L4yFrm2KO/G3+jYsVy+Cz9WaIRf+UT+g9ih+lHviQWyPvaxWFF/IzZE79pH8
DH7jR+Bf1x2Ua2Cr/AoqYEfMgdo9+FJugXTW6DU5EbMj/0Vb4SQ/Evn035Yz
4T+fPxTvGtv0SupN4F/ls/MD+FSoKKeQu/JX4975GfwUviA/km9Os9PH6Be0
Pd0ZM8oXQ215keuL07Gxt+lTcnr6utyYJqOV6Rz6LM2rfzn2KOrJp2Ke6BR5
FH8X/w6fOd4tP59e85uH4z6w3TWl1CfyvWJv8AP51Kgk3yZ34//mp2JXnBty
cXwlPx3rFfsn7gen+fdw3XVH5MexQ34NlbE7zha1e/G13DLuETfUf47ZwU75
dTyEPepr1O7DYvkZ3I2b6kdjzbBL7o0q2Ku+Vq0ElsitkB+31I+p1cFuuQ+q
Yp/6OrWSWCq3jjmP/S0/hzP8+3E+4bhcF3v4N1AN+31+vVopfCM/G+879rrc
Bmf50XG24Jd4R9jL9405sraD5DRxTsm3y935f/hpKCSPknPgJ7+zgd6Pb/Xu
1RsX98hn4HvzyfEQPzfmNWaKtkV9tXNyOTo15oZ+EOtI35WfpFli9uiCuG+a
XP/X+GysmbxPvp9OinOKvhkzTd+Sm9C08Qx0XpxPenfwL/H/xhzyM/npfGH+
PT4nDsQZQkvjO702yKjfR04R50fMNW2H8/yYmDGckBtgP98P1ZHS53rEvPIz
cDDOJrkMlsltUQT/xdzhAj829jd+kxvGGvP98SgOxbmmVhbL5XYoimtyB1zk
x8U7w0m5UTwPPwA1cDjORLVyWCG3xz2xLjgVs4yD/EDUxJE4P9XKY6XcAcVi
juTncYkfH8+J07HmOMQPQi7PPlhOFzMtJ8kvx5zzM+O55fflO/FznNH0AazS
u09vfPwGn4l/g78NVfiPY85jNmnHWHO13+XydJrcKv5TY77ocLkpzUpr0IWx
92iS/hn+iZgd+bBcOv5P5Zaxf+TcdEhcQ9PH/on/zzg79FLxPfnrfEV+Fj8r
3gU/ms+Fo/GfQx/Ear2OyKzfV749zpo4L2gn/MFPiO/F2dj7OMIPRi0ci/8o
tQr4Xu4Ua4TUMf9629UrYo38AkogTcy23g71Slgrv4iSSItzsTax9vwQ1I7Z
cv1OtcpYJ3dGlpgr+Q5U5T+J+aal4vziX8Cf/ESkw3m5WTw/PxR1YjZ87644
B7Be7hJzi/Sxz/VO4hRO4wzO4hzOY3e8d2xwbdd4T3G24IJacxzjh6FurIf7
ekXtBj879nacKXLueG/8lzEn9ILv/R+OyGc8
               "]]}, Annotation[#, "Charting`Private`Tag$249898#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8TmUcxvGHyI4QImVnlVE0yE4RyqjMSEZFFCWFjKySrexRNik/e5YR
sskKGSkrI6uhUO/vH5/X97qu+9znnOde58nbsmO9DskSiURS8kSiTdpE4oX0
icSKdIlEVWynS+GifK6aETcwRtvP6pPIkCGRWKp9MH1Z/pf6vvqjWh5ptBfk
v6HzIRk/lz9HP4s7+TH6v0MflF9TW6p71Efi/vQSNSem0qfUmtivz8S4Hz6W
/6RWQhl6g1oEC+i2rnuRXklXw+/8l3wmjOWX8UPoK3Q3FMJYWRfZIfoV3IED
skmy5BjEl8Wrsob8KvpJXOKXYxzelR+WtULGGA/Za2gkX81Xx2V+BcbjdTTW
9o38KVzhV2IC2qGJtm/lT+Mqvyp+P7rKf5K1RiYclLVHU/kavkaMKb8aQ2VX
+e64H5Nk78mO0G1wJ5byuTCNPqR9Mn0bPuEfwUa6KBbSb2hvRq+la2IHXRp/
yOfF3GKc/IRaPX6bfJh6Tfa32iPeV30Caa2Dwvy3dP4YZ/5L/jz9HDLzk/V/
nz4q/0Ntq+5VH0Uq7ZljPul7cAvT+dPqMzEX+k5RU2Cw/IhaOfrSm9RiWER3
cN1L9Dr6GfzJfxXPx/h4P354/Eb6AxTBFFk32bFYE8gS61HWEc3l6/lasTf4
Nfgcb+ItdEJnvB17INZdrJ2Y15gbtND/O31rx5jxa/FFjANe1rZBXgfX+XWY
iu7y47LXkDV+azxTlhJD+Mdircta8hvpZ/EP/zWfBRP49fwI+k+6J4piDV8A
8+hp2nvQP9OvYx/9GO6il6u58R9m8GfUWnF+mKOj8f707biOodqPqlWQTvvj
/Pd08ZgrfjF/ka6HrHx3/V+hN8UeibWh7lQfwr/a5sd1mCj/RX0qxk8+Uv1L
1gvFsJYviK/o6do/oE/Q7ZANx2IsY11hGF8OPWSt+O/purjBb8CM6I+e6IXe
6IMP0Rf90B+t9d2sXz3c5DdiZvST/yJrj+w4LhuANvItfH3c4jdhlOxvvjeK
Y1Y8U/Zr7EfkwAr+XsyMc1r7NDo1hvPlsZl+AEvogdrb0lvpBthFPxxzJ0+K
+cSkmBP+05gzuk+cDXSFuA+9Ti0U54T5+Zq/QNeNtcTPjvGgT8ZeUjuo+9XH
4520382vpO9Dgp/Fn6VrIxN/Qv/pdBr8gxExN2rVODfoLeqDWBpnu1ofH+nz
qrpN9jx202Xi/vQCNRsmxzi47rO4L/0hHsScmDvZKbojcsY6kn0c57d8O/8C
ksWz47uIQfgkznDtO+QvIjm2xrcm1oH8NP8mcuHX+F7GuS7fyTfEbVjIZ8eU
uEZ9GncYg22uHR3rW94XJTAv1pbsDP0W7sHJ+JbF+S/fxTdCCmyPMyzOf7yh
bbesMVLGmR37Ptao/CzfCblxKs5qdJD/wDfB7bHXZGNkN+h+KIn5sb5lv9Gd
cS9Ox76QpcVIvgKGx5nI76GbIhUW8Tnweaw97WPpm3R/lIpziL8f8+mk2Bf0
OfptHKDLxdqhV6l5MJv+Ta0TYxP7K86VGDuMir2lVkN641ox5oguEWcjv4y/
RDeIdc+PiHOa3iu/qjZTf1DLxvmlPTW/mL473hlfxByoNWKM43+Aeks2AIfp
iihNf6cWRlKsR9cNpM/T7yAPVvN5MSf2gvZZ8b74lK+EkfHt4PfRLyFNvFf8
j4h9G3saD8V6kn0ku0B3Qd4YG9lsWQZ8xlfGqPgO8fvp5kiLPfHfI/ZM7Cf+
4Zir2Af8Rfpd5MO5OBfiGyY/wLdAOuyVLY69If+d74r8OB97Lr538h/5l5Ee
+2RLYh/JL/HvoUCcJbI5sQ8wmq+CbXRJLKcvq8/HnjYfo137P9xbjAM=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$249898#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
jpzgKzb7SwJr6Ycul5/lo9CYCwdvyonAp+GgJ+6zHNBZFXE0L1kE0hSr49t+
cEKqwIETIWsp0OnacqnGjgzfhSAKUvD6n3N8zANfzxuWXgV+G6hwbpry0DkC
j6d31V8UZ1CBd0Zkrx9+vvxPvf62bZsoDKp4KYfi8cJJWn3xRrkEaE2PvRKo
4YIbklzdU4lJqCg38VKd1jzK213zmZUVz++qn8zb3R6iv44GHLtElhFP5lDl
/YTnWK+503yzGB11F2otbX2Tiu25/DXTajsT1R+SzUstCcSU+3eNnWKjQGZP
2bPog2SoNbj7z+U2BfxWtTadjiZDv2LeixEyFcjvrkn3468XCqoP3r1Pheq4
D8r78PMoK5S95pmwKHyo/fJ3Et8/rtj1f2WCS6hivRqXaXAINm++8cgwP57v
5L2Mv71MxQJUMt3TNjDQGpur+a6izzFZDbPS4r0UWD3KmU25Roau74v7Raso
8OqE4KxYMhmooVtrRQ5QYaf7+7ByPN4cPJa4PFNHhSHuTQKH8OuvvVAhndwn
AQeiRKz3t3JBdEak5+FvSyiqyr/zkHoCdt3uRHtcMw1lzh3vO6Oehuk5K0Xc
9KTAA4V1O49E4vkurEVCfoECykeVixTwfGbfIPLsnDcVsG8ZSwfx/DfxL3tf
Iwl/HpdOGQrj9V7uM89iRv0ykssS3Hz0VwomvSv2qGcPHZl887Wu5UjCel/U
PVi/lQImfNKSQe5ksJx+Nr6xgAKOcttPXMDjW+2MCRzSoMKMOkuoFZ5/89yG
jNo/UqEy5caRPPz5r1/HFrX+6DI6Lt/ivupEEnbY6KoolyUdyQ+UNRu1pGDG
Kj1w/BEFWMgKpWL4/QbH35h9HkOFuuqgVVn497VFu7t/HKahK+/VJLYrpWFn
3x+PZ/6ggFwBS401fn3bDSJmv45TwXtrkOUj/Pf80jqeLvSXCiNHfl7ahf9e
/9jgrB3zEtDOl6fb/IsLyryzkhWd3JF4amrlS5N5FCxrUy+vVYoKxnqUrcbm
UNv9MYXoZ42Is1DaemLnHCrhkI+kh7Shwi/nUvV1ZpF6oKg2aUsncmRWOcwv
TaP0sTt3ks/2Ir3GDKWzilMofoeB8fLJQTQabKBIGh1HQh88kl5aT6FD5+ba
Dtn/QpMcIlWt12fQW7pY9rJ6Ezqb27j9w5U5ZCL5dsf1c2WID/R0D5xbQPTY
wElF5WSkQ1L5kBywhCIVlpT1D0djRarlXpa+NKQ3+sNS5HgaFiUZ+TAvnoFY
VTh/OOVGYyLp3SrPT5JgtcW64VH7JDS3dCSfeowFrG77abTLlqHks0sTHnas
cE/32vsdwU3I5Yp5qVS7MBR5+LV5WnHAjFT9VsnTIpBwO3qnpysnvJDg9d7f
KQKPj9bGrlpHhtVGs8mnrChwovGLxBe8fqIJ+io79lLAiGvqxBweD4bdtrBz
2VGBwf29bDP+vvqS6qWmYSoM/52cWI/H17PttcKDF0RBflOw2Aien1+ZhTEe
jYtC8On1PwM+kMHa6Tl/4xUJIN3YpXctkwuUndDJbdk5qNblwJaLivOIC1H0
VLBqtP388DqXuDn0SP8y6/DjFmTo2HglsGoW3XJbKj3p9QttV76Z4v1qBimy
f1GZNuhGF1dF7DomN42sPn4d8Lg2i/5pS3Ybnq5Bj4+u2WTuMY9YAi6ma9nk
o4qKeQdO70XEvurpmcKvNujkJB/nCf9lJBpRaJfoloyd5OQc2RJKRxcbjEPL
J5OxpfZzfx68YqJfR7wSQgXN0JS2vfPdH3i/kVslo/cjD/2Y0qEgGRFoq8+w
Hx3hAG/PT8ZFiSJQZCbjLdvMCU+d1+unraZA19/VZ9Nt8fVqc2LlfE6B8oqF
xqJEMmy6tGwaIo/Hh4enP+7Bz7cmH/nd5TQqSJsZnr+Jn4+ZiM2/SVtEIXHb
68PD+PlrEi43kyyRgDKntHb7Ki6Y/GmfcPHVc/QusEfRG80jJ9b4FoXJBWQh
qPhyf30kqveO6/RlXUZTAestfNY/x4KkerMrOejo47lbEeY/U7GDSwyNxHVM
xKniuplT8QEms1ei6zJTBLQC5Io69MigSMk2VfOjwGXpkzsZeH0VqaMFS2xU
OBwZ57MQQwaKdqwVukOF+7ekSn3w+PZo/xYlZ35RmB2cS/PE46ts4NH5PsYi
qtGIIStsCsL6na9vUmUsozZ2t6BK31Rs4+QGxRgxBuJw2GwlEvMcE47Y+vaH
NgVM1asNQq/g/W3c2tyOcgqQ3q3bKIDH1/K0IkdZXSrwhByftg4hg91PT6Gs
GipsXTOxWgq//oOzJt6oC1+fVOXc5y1ccO9jn+HDT0vogPp1yuFV8dhahW8P
w8toKJvsWh21Pw1LUjWh7T9PATHrkqVHeD174OWpAtUZCty+rM8QxvsLv2N9
OfIXqfAy6tSVWDze2MuqGsfRqLBpoFs2Bd//ia8ronSxZaSRGRL+8VkKVr4s
xuPQTEd09dpVcV5JWAs94wZSocBfNd4d71zxerGo0mIilwLHWq/lCOPx7YrA
z9/Ht1FBZZ3wF1E8fzZMf7SLeE+FfXy6w3H486duP+Z1bu8yuvZNQvn2xAts
Smi2bukQHdVw3X9hQ03FsmZ5M6TCKSBqtkzliSND2rqjPJZPqLA0ajFag39f
WUG9RFqbhta1FYxlC6VhlX5+XJXfKEAR1uh7jV+ff2/M5D8TKog9kB8TxZ/X
fLlicU0HFbKONi3P4Os5GC7J0zyF90canKaqP7ngfEYt6+UEGvINKOJpsEjD
nv9ynTQYweuviPW8mfh+zj8d1PHYhQocJR8Zx/B4cL3BybguYRllSO7oHxdI
wS4fElfxeUmBjWdPXRbG+w0O0pkQ9hwqZFoeM7mN3++eJyN7OjfQ0ch6bU6T
26mYS4CVX2ogBXxdXiVl4/vtt+rctroQvB6JGbYX/d//bxxsu5gqQ0NlYfdZ
mI2p2C2Bpl/GXyiwf5ijnxvfL5sb6vo1m6nQsJXz/XX8862JP2UzemgotMbj
g4d0GnboEATmXqeCYJb1Izr+fvkD2e7CP8tob8m4Nbt4KkbbdPGOQxEF0tmL
j37A1yt6QHy3bBle708q5DTi9ztxtqg1PIoCDk4nMX58v1yQyOwcjKeCQNe+
mij8fSP2cHLkKRr6aehKatNKw7gmN6vv/kWBwCma7yL++8VTGSaxyxJg28V1
0+sPF7zjUlrj5mSD/Ftk3n40nUdqzDOzYhMYOsI1Y/J4Yg41G4hE1V9vRM7q
NzQ3a80hf/28l83n29BVXdGBnP2z6PDPwBSJ1Z1of6tqwgGWGbT04NKH38d7
UX4yP1lZdQql37E/031oEN0Jfx/CzjKBSiHTRfn4FMpOUte8/+gX2qPKN/fv
4gwy2dL8RNWyCdlrKRjNuc+hD5OvVrckl6H+JBX99tML6LsOD/v0z2RUxPVD
seo6Xj/pbPxelhaF8YuQGlsu0pDxledyIUfTsGenlH8ce8JABiZuHrynYrAz
sQIcRcdJUC5RdW5H5QuUf7KKtf0ICyzNyl7z6i5FbyQaL/jasELs49lXXmeb
ULh8WcpSqzB4vRRlrTLnALjQryZjIwKZndlyi06cILn/2gXTPyLQaTl6tkeO
DHW53CeRJV6/8tT2vMf3X7P03mW3bgoMVr99pIWv90JOVGivLRUOmYYdd8LP
73nRycV3/6hQxBlWuIyf7+q43TlT7qLgJsZ3IQDPXzrGyeaXRkUh1jj6ykAR
3t/ZOX2IuyQBz/+k1CRm4PEl6klNpFoOWn5XasOycR5R4x0mRH2qEdfLxPg9
iXMolC/GS/ZyC6psidhu/WUW6b158GOL2S9kpxAbGpw9g8Bc+ymvZjcK5Jfr
iVWcRq/6P4sFeM6iI4oi98JTatCjXxd1I53m0fUzYVGnyvNRvGK3a5T7Inoy
G3z8y0Yn1LSY73XVexlF8R+1Bp1k7PWA7sGXd+jo+MWPByWkUjCmFPu6zS+Y
yP82S+VczhakqxaOEr6R4NOeR9W+l/IQLT5jQUZKBERrxt1SBzmgouqnUXG8
CByYXKJpNXCC0NNHunnSFNjac+GWkA0ZejR93w3GU8Aq7FT6Cfy8s97C1j6S
o8Ix8m3xTDx/HTT22GuaQoVdp0q6AvD9r5I1enpAWRSiT/JcicXz112++6yD
HySgOsehIOwzF2RoUW5sz05EZZ7ln6tgHumcvffz/eACSqUMx0WwPkb7bu43
SlxaQspmovrP+xOx3zQ5PkSnIZex3eTK0VTMUCvKd680E/3Zs29LWEsw9uR8
YMdtugh8WxfVMa1DhrbLn7iovni8qbmppYfnr3PGJEEWVipsOdea9r/nK+vP
Pih1G+8XZxZjo/HzX396/LUxryhUymNf1fF4uDSkybgyt4hcBMtW63jew6w8
10ebzC2jC4MCQkMOqZhvs0MARYCBwlRkfu/twPMr9jyzV5MCpx/ssdK7TIZx
ksbZ4lIKtFg/jmbB41FU3o0dG/ZS4UHbp4JsPH95rP4VE1RFhbxsfRNO/Ppw
epUC/18JeCf4WLLhGxcwK0I/vP2whNoyn5KU7sVhl8jCY9yFNMQ+VSwUYpiG
mTw6m6vkSgHbj1KrsvH8sbpA9o7GFAV0CrR5/PF4FBxlpEnyxPNX15RdFb6/
4zUnvt1eooLfeONfD3z/ixe4cZ59t4zurwmvlfFJwUR/m539U0NH1V+61pxJ
x+v5TVLeh5UpELa269J+FzI4r+4Q+JaNr+cx55J2/DwZSSVkWqlRIfStzOOL
+PV/7VAYO19ABYWHCcuP8Of/QJvRGbxrGV3cfui6/YcX2L6prRsv7qWjGx2p
ajpbUzErC1lbRggFJnOk4nzwfjzPseiRxiO8P7BfMuzAv5+k8nsT2k5DfYqq
d6JY07CLPZHFaU0U+Flhp1iHx+NeQ+vSiSNUiOwRUrPAnxc7Z8SB1DYqdP35
0dSCr+ezB13vEiYkYL/BvLhNB94fBHPZjD+hoQHqvdeclmmY9z/VUpMhCjDP
tfBz4vVtefK0vaczFZj0hk338fgx80O4ePwpvj7at1U9BpMxhdebeqzSKPCR
JbTvE/55Ed0v4l2vqfCxYuGWP36/D69sjLVYQ0dKXEq9V2NTMcnBC+r371Cg
I7XVkxfPX0NeNiUvH1ChdyzYQxm/P/8jN7urRWlo82o5V46SVGyrZ9/DrTV4
/fFCeiMF3y+7RTQuSDRSwfDzJ+Uz+OeVbq3yXfeThhRKjpnJ4f3S8eCXwqHX
qDAv1euwFn++ux/VGP9qXUaN9Mi5/UspWGbYvd0H31PAW9SGJxpfr9SNNyto
JXh+vsxeXobfb2Jt/QOvJxTISOieeRT/v35f1KXyGRXEdXlfvMDf/8y361K+
GQ2tslP5/mJbGvbOTOefdAdenwlnDKng/97XxEqS86IE5An1Lbz4zQWOxgHi
3XdoaLFB10IRrw8CLpoZyidRwI00EiGBr5dKTZxyzEsq7D/2NfR//3+gsTvV
9LAAHSW3Fu7wrUrFOJfUvp0JpAL7vvpYG/z3nj/9rZifk4a+KzhnOT1KxcJ3
CdDmKygQyn3nkCi+Pg16j7eL19IQuUHBbvueNIznRG4yfx4F7CIZO/Xw+yvP
MW3PL6LC+c5Iq3T8ejFdA343oqjw9/eI2gf8dZ7MgyNLejTkGN9ZGyqTholJ
u5h2f6eA1Okkqfv496Vqg1NpaXj9FNijoXgiDVv4uMCq+IYKyoak14H497+9
+rjBrY4Ca7etU1jGP38bi6tQG6GhiBT+tUcF0jDDapvGWx8pwBcQptyGvx+c
nJWt+4kKDwsHJLrw79t/1znO9xz/vRoiIeH46x/L/dEe9vj9GIg8a9FLw8xD
Vvmd+EOBxO/RfiX4eTuToZFSR5eA+QeDP3X/cgHhA1JquhnS7p8xwgeckeSs
KZj7vuIDJB1/HChTHl/xAR7Jbss8/gsrPiCkhScoeYKx4gNuxs/EHNVmAcIH
dN4J9yb/WFjxAVy5PVmZCYUrPiB3NzU123oSI3zAei161Y+6ZYzwAaW+PuUq
W0ilhA/oufC66uc6UinhA1Kj66ZLipgY4QNKA6qc3mQzV3yA6Q3pvtw05ooP
OB/5YC32mLniA4ZfHVp91JSJET7AY9v29Kl1TIzwAe9tD58xD2VihA+gv7C7
FpXExAgf8GUfWaTSgYkRPiCYZqHBFFrACB8g5CfzXvd3JUb4gFn7XwOlJ//P
B+zmtufc5EVb8QG89frju7MZKz5g66vhlBtvmSs+wL/qtz4vXgcRPqDxrycX
SiIB4QMcTmwvSKslAeEDZL9F+Bfu+z8fcGO0yXMqjbTiAz6kfDqsmc+24gNC
vlu5KMexrviAj86seYvcY4jwAf29n2JXNXVhhA+YMNPaqVq0iBE+IJArcERB
kokRPmDSV1Zq6AMdI3zANtNXXB+n6BjhA9iGDu0s2D6CCB/wR9OR4jzXhwgf
MHTeIc67vxMRPsBKQ8qgaKAdET5AnTsxo6KkGRE+4OJwkKPF8VpE+ABab7nS
rGIZInzAETt9Z60PuYjwAZ0vvw/sDYxEhA/wX38wNaw9FiN8QFixpN6WfW9W
PID0xjSjdo2ZFQ9w1K+hIRvvIwgP0KQzsS9NiQUIDxCgPbJn9gRzxQM0v/l3
aunuEApgV5zdEDWG+C8Wl9Qmd2HDtsVOG00n0T7J+jZO63mM8AIKN28sW88y
MMILUOcf36/dSyolvABbVPrLnVNMjPACf4QO0affMjHCCxT8fCy7mMlc8QIC
rNiVwXjmiheQ3Kxm/yWIueIFbobbtmZsYGKEF2BkDhxT3c/ECC+QIPz6mUYp
E2P13l54rosNEsczbM7j9ydWf0VqbIId7txV8zrjTMe0GlZdH5nhgFqqhWuC
wwT2feF24KUlTvAS8GLnD+xB3foF2vdZuCBX8JKlhcQSIh08OCVO54Kto80K
ByfpSC+zdUMhiQc2LFb+uT7OQLSdm7n6OHiBZ3yqgF+WBIpjBpGxfHxwT/58
ptwtElzjcUywl+KHns1iajeKSPC7qetl+moBuP9RuTPsNQnyytbZXJEXBBf5
U7/pQALmyFObQaoQ3E79bN3WzQJZRnWhJhFCkHm8bsSJmx3Ge/wZlRRhMImd
T0uqoqFzIVGfGI+FYTr5gvs1tk8rXqIntameq3IKI7yEj9ulG3wP6RjhJf5J
hUpUdzEwwksUiOuQTxfTMMJL5AmWH/Z7MI4ILzHqOZr+ZGwQEV5i91L7wZ1H
ehDhJdacM21ZzvqNCC/xd/L1m3DFVtS3qT8v540YHB75+gJlNKDrO7q9zVTF
YY+0v/3l4EqUcvGUL8sbcfhqYPiQmViIuKt2//BSlwBFnxN9RVypiPAWJJ7R
wQtelzDCW0BDPNfOa5kY4SvePWZqhYxNrviKzWWapb4OSyu+gp4xrZB4gwSE
rzAYSM+swOMN4StSElWayhSmkS2vksmTB6PIpDjVcvhoPaakosg2+H0CBSTH
7qoIn8EIf8Hqv9+16zEdI/xFIGxu6gJSKeEvzrpFTp4VJJUS/mJPS8pG0jsm
RvgLKZczKvuzmCv+gvxmfTTg8ZvwF+o+wqeehTNX/EX4/F71/TuZGOEvOENP
9SyrMTHCX/zN401bes3ECmw0NIeesYHcjmR71zNMzOKD2WDma3YwHnTKl2lh
YGe7hm+oFHBAxCPbTc53ZrA/TTTG+QJOeNT/UyREvwF9O7humKOcDCf9kdwR
Bt6PGzwc+lbCBUfy9OvUDtPRi8ufHykXc4MOffNoegcD6SiKZPz8zAOm3NI2
FgwmOpz849Whal5o05tefutGApXPdSwmbXxAl+DX68omgfcbbZ1Vnfywj0X7
wOFGEmx23uCa8FcA5CNlLrxWJ4Ft6gbW60OCYKt6j3/HFJ4v3hV8P+AlBDYO
pZayVHY4nlPMFJsSgto94tu2irLA/pEGm4eXhSGhS+tA8eauFX8iKzuy2ch6
BCP8ydbVtWlrZpcxwp/QNz9Q/6OEr+d//sQv2WvN91V0jPAnRZm6enIZE4jw
J/6HsYDUwCFE+BM5uXU0i9heRPiTsrT02KQ3fxHhT6xDIq7TaT/QL0fVyfkI
Mcgzs1Dm1mlCu2ejT2oKi0OAm+GsaG8Van7iuEovXBySD7lq//tTjF75gMAC
Fd/vKRSR4ahMRPgVuGyUPCbss+JTLO+Op0+fm1vxKXwH90mXJND/z6ewfNsi
5coC7S+vtJzSGkDjh3T/HYuhoTZWrPOS2zAK8/F7vM7zN3pJV4gqTB5H93ak
yCe0DmGvI03qXRsnUaxUPBfz8yJ2O78kXalvGtHX/rt7ZoaJEd7l03rLHBYN
UinhXR6kPNpmVc3ECO+SqmzuEpbLXPEu4QrX2aMzmCvexf3Dy5KrMcwV71Ix
bSNBu8bECO/yPS5W2UeOiWV+5q2tF2cF85Yhu0/2TGyP06NatVVs8HWqYEtV
CRMzDt+mMbyeHTJ0Wm/pKuLX64wx2qLOAY1WN4vXrF/GhIsPXH21jROcvSNv
+cr0YF/X8Apd30OGRmndzxMVo2jq8MFwvr1cILfd1NHQdhn56zEXLTW5oTjd
9MN5Bwbq7+ov2qfHA0oJVQUkcyYqOHTQYUyPFy4c0+b7rUUC9p2lPqNH+ODL
9k1ynI9IUGVE0r5izQ//snmSj38igc7kHeGdVgIQ1CA703qeBLsl15oYOwoC
z4mZoBYnEtRzSpdEqAvBWP9FRJtmhYK+ngNWuUIgtX/BPjSEDe6J69EvbheG
dfHz2NTiLN6Xn97gmi8M4tSjpX3DXzDCA70r3MznlDCHER5o+t+TjqtRDIzw
QAUK3qEsVgyM8EA1WQ9Ue4doGOGB/jzef9K9dRQR3kdVWWy1e284RnifS9lh
W8frijHC9xStqQzp/jSx4nvOXBos6LmyuOJ71LfoKv3hIAHheyxvF3A7MklA
+J64Wh+l21xzqD70pb8hxyhagEV9V/k3WPUjq8b9TyfQ6HPlIAP2aYzwP/NJ
B1VsMRpG+J8Ihvxqn92kUsL/hHl6D9lLkkoJ/zP9KT2o5j0TI/yP8Kou+1k8
3hL+hz3xg49XCnPF/7Qc2xIBkcwV/zPFyJe5o8fECP9zRw71229kYoT/sTza
ke6RwMTCTXfSXl5jg5LCsrfC95jYktonI75gdngumm/6VAOvN4fM/BuecEDk
ngMqg9Zz2Jk9hUUujzgh8RnlrxElFX098HOvHt4HwfL38nCtWQR1+f25CVzw
EZXu2t1PQ02WewzOxnLDSfOa2d/VDNSXEEA7nsYDI+f5dq/pYCJrv7gC2VRe
WN2kqH30DAm41rG8rS7gAzP0nNHykgSfX7iENpXyQ5uDQHRsHQmGPqZ7vi0W
gLfP1wgH7MLzSnBSUlOtIMz/imZP+kKCta6brpbb4fvx4f0Z7Uk2CBI75Y+6
hEBhgecuxxAL5MUOv+44KwwXoh8Fh0cMrPgnyXPyLEt7BzDCPw3+CzjEObKE
Ef7JVuP8Q18VvD77zz/Zv2tSYjtLxwj/ZCnOlPBuZmCEfzp1NMNnwXIYEf6J
pKed9H1/HyL8kytV3t/TuhMR/onUcDLj5ngb+nHnWJjUbTHQTH36+SijCUW3
XPqSxSIOT2hllU2ratDgBjdHBz9xSB85DY1cpWjp2Cel3Rx4vD3w42wTPRsR
fsrWLvrn6bVBKz7KIjW0OdXs/3yUgJg0uyD+fAgf5ZbxHYs2ZwHXRzO3FUr6
kbN/3ZKOMANt8Ll/Nat3CHmOyUXE/C9f3Ez77LF6HMGD3MSrlv3Y4aXA2C8P
J9H8JlaB6fgFjNQTM4SeTyOJtCCGrT/ev/3nrTj0D4ZFaJNKCW9VXW1n9P4X
EyO8VfQWvuNZb5gr3mqNeGOOEV5fE97qvZbWlnfPmCve6kBK82BkIBMjvJXk
m559RvJMLKmiZPvkLAuUT87aM48ysZcLe5seL7LCPTrb9xPlTEwxQH3hFRs7
TIhEzpiXM7BLJ7jzQ0U44Ms213y+MzRM4XPONQMqJ+ho7r8dbTeEHQmu+uIt
TYb+1NUf1JoH0ZABs19fjguUJhV3LZQvIfgsP7dLmhsWY2v51qsxkGiV9QW/
tTxgjKwKL69nIouyogLn9byQGHjfZEKFBGKUu4EVKnxgiM3sOf+ABImZ28ZG
tfihM1xGYA2G7+eut1YT2gIgc3DbdCn+/rxbkrndPkFwV6u/nXWUBP2L7aHF
64TATf/FplUXWWFrjPnwj+dCUHS6zWCsnQ0++nb7xq0TBps9JdUZzouI9vv6
pfwUYWhim/MxdU3CCI/m7GITJFQ7gxEe7fB623Z/BQZGeLTQ2QpJsRQGRng0
hUHOgo0lNIzwaHlPJPefyBpDhDeTveFqUXf2LiYqk/biteZPdGTL8ZjaA8tI
2lBHd+BFF9JRobr7dpIg0nmsu7CsD63iN7K4u4MEQVVT2+9T8XzddvQSC/sc
tqhtet511TRyD9bT22XCwCztIopVN+F5I1BadZUuqfQudnl12tp5xGPSP7ed
nVRKeLajbhqddvn4+fzPs9GEj36Lx+tJwq8N3v7j/zWEiUljUlU3ckigdpql
MBU/z+Gl6/h3vGEBy3BdR1tNJua3Ku6PVREriJ0TVNhUiO83lx3XNmJs0CJe
JdyE16vv9fpvGjaww88hwarNuxnY0bZbviHfOWD7gjr7j7tT2EkH0PVs44TY
vbvr0MefqOOQ26OqLjJkkFmfKyQuoNIa17HZ31xwzuq9m2wKHXk9NPoz9Ycb
Zmr7nAL7GSghJ8HCtp8HemM7WhWE8HxbI5zgOcQLZsUdS3u9SWDmFHPk5yIf
iJ6RQa75JNhYLjhny+QHln21tJJmEniIpjo8YBGEqxw153ZqkECi85gqhUMI
sseOP92rywIb2XS21t0SgnUJw2uDpNlhrf4avzFWYeBUFP77BM93+zItuGfI
IvBVMMGX4+EE5l5VsL8tWARoSzUXHFtpK/6v+Xjkj52C+Pn7z/8tViuy9v2h
YYT/W6NkV8itMYHaA2408sj9Rbu/sZwOO8RAQrXz6h1YDzJ2zVDVtMPrX2xp
XWTRADKwjU4amllCAptlWAQEp9DhbbUivq1LGOe97rMUpRlkT015UCVNKq1e
ZfinVnEOjcpJeT1TIZUW2FRS9KQWUEiXUkjuRyZGeELbPo2UiBzmiicsMjFO
bnrJxD4/SZg8oUYCd9anZn8dmBjNLI7FfjMLvCv4lkNdi/cf1ebWmbvwek1p
RE0cr+dafvR/qtvJBqkSBtmVeXg+frb18qaD7LC3998TcVsmtvWc8mDDMQ7w
pAdkrs5bxJYMH+6qt+UCG6/Lzs4Ty6i0vIPue5IbuG4UHxINY6Cxia8PSP78
wD4s5KpcRYIZknml33UB0NqhdevUCRLc+JxooHlfEALoO3Z9v0OCAor1qKOe
EGxZrh9stGGD3Wruyd2lQvClWbaFJs8GuRv0TokfFgHDYUf5Mr0FbEom0877
qwhUNHP7TQ4yVrxkKvlfdSk/AyO85CraaXeaIR0jPCSY5en88niCER6ytYdF
xuxtOUb4x6JNdizumydW/CNpQttThb6w4h/5tr6KWnWbueIfM02HuSPlWIDw
j902DRaxnvMooPGfuFL5COq8e6PiQ1Uwkji4sGPuygQS3yp4JkF9CiN85Hat
pHRufRpG+MgvF8SDfbeTSgkfGXrVt7pgDamU8JGVm6ndJfh5JXyk1qj8t6PZ
zBUf6SHMPh+eylzxkYzRS5sCHjFXfOSuHxuVYg2YGOEjJbQ/KJ/ZwMQIH+m0
OPNa6SleD9W9/3XfmQ1e3DaU58VfG7gtsWj5sEPhNukGrWNMjNOdm0U2kAP8
3zVpc2jPY8kXn0qcu80J9+ovtBv2ZGMHq3a42UWQgV1I2OOt8QySFajulQ3n
gl9NT9vNsmjIyeiawu0gbtC3tDRbX8xABT+1Ux495YEufosmmSomGnD11+J7
zAsatygxBqfw/dMcw8ueygdreqQ+xaaSYDTmVt7mXH5YUPGx3/iVBNVn/10q
zhSAUd+0irw9JEj3O32RViQIpd8bO2wL8X71c18t0xLPJxbe5gdb2fA+LqP0
W5sQZKQ1s7cfYIVzXotmTGthKMu8v/Dw69CKD002noloiuzFCB86Fc/7b4/5
Ekb40OorJ2Ti8PUjfKjVB48zauF0jPChkXbuptcsGBjhQzWzL5A3VA8jwoca
OggEScb3IcKHilVTvom/6ESED92xo9S671w7aqE6WW/2EYMbjznvs1s3o4MV
PbcHF8Vgj/Hhv7ve1aCLE+4Cc5fFQVaIRCVHlaK1nwI0LOni8J5jiuPbzxxE
+FKPpA959P3hK370If/nQlLVzIof3enj7/fiNm3Fjz55lf76uh4LFHC/teT1
60ccug5ZH4oYyOjdWKV+4hDaX2Qu3xQ+gOrKB6wO/xxDTxTD31iSe7Fnr9ey
+nhOopljBVvjWBawksV7vAZ+04g5JJDfrM3ECI/6pkTRhhVIpYRHzZLnTDs5
wMQIj1qX6kU5/Ja54lFn38gOJuP1EuFRe4LyRhrjmCseNfiU7Ycd95kY4VHv
FWkablzPxOJ1o1xY+1jg6TZ1KhPf/39Ko1qq/rGCZJhSymQZExNl5LUFTbGB
4a0cmQi8vv0cAU4lLBxQm3Bgr+8IDcvVd1iOZeeEIsfra1atGcMiylOUrvCS
YX/i+R9sO/vR2S8nRc4JcwHp6dudx92XkCx5x0w6HzcIlAR8zhdhoMzCmMPP
hHngqfftyiEeJtpI97JJE+WFDAf6i/gNJEggOfPnyPBBrJKtyt+7JAixrNuv
pMwPcgfk9v36iMfH9trbh1UE4HNdyHfRZyRoFe+1dFMXhL/VZXp+B0ngOb1z
vllaCM6Wugtd3swKHjMi2qIxQvCY8UJ27ywbtOaolahJC8OtmHpOR6ll9DY/
SLojThgKQ83FIicyVrxuy0aHH1frpjHC6/YmXZg36aRjhNdt+XDOR6qSgRFe
d+/j2Kv972kY4XWdXq8OB+lxRHhc263pZ8ui/TFp1REaC9aBijns9q5pW0I3
4nj7Dtp0IduTCVJBb0jw609mUfytPqTD13bgGN7XdVwLebZzdgJ1vXd+FWQ4
i7032xt2ZX4K3RG5kKg7T8dC+Xyu+vLOIjUr81BvHVKp//BXv0i2eXTqfdl8
AzeplPC+ltRt9soFTIzwvixeToOTeL1E+F53hRN7docxMdvgL2u6E0ngF3ts
UG4bEwtGDJ0Dz1mg//7csWs78P3WNd0V9ooVlq3VGnnw/FjTV3CSJ4sNPvWe
TgrC9xOXv8x23xJ2eLJG6RYzhIH9OqXB+F3JAewupMbYoGnsWezq5x5VnEAq
cRoYrPmOjtdUY/1NZJiyc+zQ/DaPEnn8RuzruWCMEXjhwDU64gkIKhSs5waF
tZbHdnQxkMeIOWt8Kw/YmrrI1ZFJ8KlgZp11Oy/YmI+/o3qRYK+4+kuxf3xQ
095+tgBfz6NFCtLF4/xgZKQlFNJEAiOs3+nxhADY3xreybWdBAffOqsdXRIE
N5uOE4acLOBkRbvN4yMEiu17Jd9JsYOW73ns1pIQXo/pk5zjSdB2ihbvzhSG
uNEX5Ze/jGHx0hK6vQEicGhj95nMc7QVH+3OEx8suYaJET66lSSrWbBIwwgf
LcVTYFzkMYE6n37aaJP8BxXrNsflz9GRp2RZq+b1HlQ+tTNc14UFwtULaVd8
BtCWN69zjtQtI+vOd47F45Po7rPNqTVHl7CK+MbA1eQZpEd+cadFiFS6VL49
Rpx7Dq2PzW1m2UYqzXkgdUmVNo8eeJ3UKC5hYoS3PvRnlwR/LnPFW1vObDYa
eMXEGiWbr8fIkoBxUMBO1oOJwVrDk1UyLOBg6Jh4XY6J5R7Y+qhYkRU0jX0i
/N2ZGHeidhVTkQ2cLv6wSixiYmfE3h7n1WAHy1nDIA19JnY7xS6WqccBe8YX
itm8lrDLdSP2o0e4IMBUeprt1TJKZBtdHtHnhvSbTPs7PgzUkXC2V9OdH/aq
JBoYVpJAavH88E9XARiSf+5nj+ftUx5dRvu8BUF3nWVC8mUS6PAXH/PVEoJ5
q19C4cps4P1AaW5NoRAMHfMjnz/FBnpt/ZMRuiKwYZ7/pKj3PLbWi982oEIE
3s+vvvapgrHiyfs9xp4ytzMwwpMXrj2xc5ZKxwgvDt8vkzZlR2KwJ16Rr60T
nTMU6ljWw+vvGqVzTux96MRAqvHXVhKo35JpCnk7hRpvffec2UzHpqwPT4p9
nUGxXdduoT2k0kGFTU3pN0nw5o5ciMgeJnZLOzfL2Y8FVDdq0yY2M7E1ns8H
p4NYId3sxQZqGt7ftr+Tqn3ABu/ef3cNv8zEXs09iP31jB3KTVrTYvn+d16T
BnWyuWCadndLuyQd7XZm9TiUyQ0eo37rE5vx/uKVmdOlRn6wFAlkLteTgI/i
5P6yXgAubqx5vwnvx7yj+5pTOwRh7lmwTPwfEvQKX9hwx0UIxNWqTw9xsINH
Dx9k/MPj53en6MrbLMD43KFJuygCVx25LsVdWsbGj74trJgWAdfyNL01W5gr
Xl6qL6sc9tAxwsvXN+uXCtkwMfUPppLMmW703a3Pot2BBdau2ZG5l96PyjfU
rS6ypCOdr5k16p+mkeCe6T6VYiZmLUoWya2ZRRm90jnBu0mlyT1VGtwl88gO
qm7YNOPx60+DrMnXRcR3z9pQ8g2+P//z9pF/VTJmM5hY9b7zCojBRDdV5x27
7+CvP2byhjLwOsnoCKcoXv+n7+tj/uVkBTPpADm6BRO7qDpcZ8fNBo8efP9w
FM+HWjx54l+o7HDx/o6kyiW8npZuZrGR54B3ITcGt9UuY7Z3hBdqN3GDth7P
3azDDOT875nGI0MBWLVDpj3lOt6PVZw5ZnFcEL4q/H7tg9dvJ0k+CunKQlD8
Lu+aXQErzKD46JiXQvDx9A+t0+/Y4JZMo/mzPBHo2RHeXG+H98P/zQNEbXB/
4lhPw4po3s/v9HehrCfr3uhwsYD+zBbe76R+dCnM7NnnQSZSLHrJ0qs/i3oj
XPzb8HzQNulyXqqUBGDd+bdlIxPTP7r/56ZaVtgV3uarg6/v+GR+tH4jGxi3
bAxfL8rEHLmz62U62WG3yJaXL9ro2GfTeppWH57/v42HO12bxKxrhZ3TJ8lw
eLp9kGa/iH7Fi7C1jnPDPQ7z5o4hBmKvXWhgFxSAdQZb10jg141wcThzU0QQ
NhZ++q2hSYLg/rkqOp8QmCQ8rEp6xAIj6YGdYUFC4KUhandVjB24xBv3nOQV
hlzdYOUDbgwEnsf0vz4SgQcy+pXeO+nYuWula2dFKLCdkcuShD+PlfmGq7Do
UkvDmi/sulwQ9xepXnVPlY9ioKyrKpHebL1o4uNFs3FTFqAd0jLMWhxAFoeD
9zoLL6GDF2b2cRnMoKng1rwOBVLpx23ub07sXkA7bd6J531gYsR8RK+4wyiW
zsTeB46mk7RZoBjbRNeWx+spwfDS2INsQF/lQZLF8+n9tW8eG1iwg/3lLpqz
MxPrvFnNFDjHDeNKDBe9RAaq49qbIB8sAMpX/w7UGuL9vCQzwOSwEFyqa+q8
FMIGtNY8k5RqITDm38Kh2csK5dX6jq4tIrClpq/UkIO5Mp/R6t9Q6fyUjhHz
F6Va2dQEpWiMmL9woprYmUZWYMS8xVDq+YWpT+Mr8xb1Oel2gyULK/MWwqej
MwQ1mSvzFuPa/bVIlQWIeQuNdC3Zx+sXkO3k/Z4niSOIz/RBYY/Ca1T6fN+Q
odMEcvm764F77SRGzGNEbfBKqeOjYcQ8hsDb3T9ubiWVEvMYr/rvJBqvJZUS
8xjz7bRobTx/EPMYjzPqQm7i/Rwxj7F6ze15WTweEvMYr0oeZ619zFyZxzgr
U+10xpiJEfMYLhe/u4krMDFiHiOSsftjYwQT8+RZ/LpoywY3BNMexuH18gzP
k5/fPPF95/zhpiwenw7n2u096McBwWP1Sfrp81hl2N0D/65xQvOA7njAx2KM
M7CX1SuIDEE/Xhzc0zqNwlWa7MzvcYHnvot7FR/SUN4BiUfCt7ghIBxNXS3A
4+/VmKtvw3jgKumyxpliJsrsucC8GcwLV3U39W+1IMG5VwPvnsfhqxD2fGAy
mQQk8dAqy5f8ELWp+oDLFxK8+3D/ik6yAJyvdWGn78Xzy9XSX8JvBeHFMe6I
kBy8Tpsu91ptLgTBDv+u3/zMBqo9zZ1xLULAyvxZEenFCvtt/NOFLYUh+EDF
0Oi5kZV5lP0Bh03o6j0YMY9SuHW45CbPEkbMo5zRVFwqxPM9MY9y10Box1AK
HSPmUawevLs2KM/AiHmU9byBSuWMYUTMo9zKd7CRre1DxDyKmdbdNNWKTkTM
o/T53naSe9mOTE9N7ttxRQz4fC6X6YQ2I9mPkrYcc2IQ1TrmFsFZi4rMJk+X
eIrDra1PB/Z3lqKCqw4lLoviUCFz4qyGQS4i5lk8vn1vq+97uDKvovBURTPW
b2ZlXqXQ2O2p+FHayryK1TpqSL8GC1jqRVT52vSjvZHnBXvwfuTMMbkRiRtD
6Np1UsQv3n8ovSdQqahwDH2Zq6K1/+jG9Mge+c1nJlGrl55/TM48JsNBenbk
/DSisYh9OSHJxIj5l0uup0JpeD9HzL+YuF4U/zSC93v/zb8Y+wZ9iMf7OWL+
BUnLajTg/Rwx/yK8lTJyKp65Mv8ie9jhK2sQEyPmXzg/ymoex/e3NNsdzge/
WODBO9pToUNMbHGdXmtnFyvsbqkI18bzF5/mbPXSPzbQvXnU72wvAzuv+mvv
8UV2UFB9jJKU6dhcMKZZQeOAK+r/XtjnjGN5vx+Zz7GSIdjuyW+X7l607gFX
+lVuLjgq4cirp7eEwjcgr052bmAYWm6xZWWghTc7izZy88COiF8eR+gMRIlt
3PaZnxdCp6PV/siTwP7Kycb1onzgw/XL+G4ACdi3SU5/lueHLJfKtzkfSFB7
rPXJNQUBqM2veZqN7/9K1wCrqU2CsG7YfiwQr692ejhl/JYQAs3LIh6JXKwQ
JjfRt+2JEByoNzqwi8QOZ/Qt/iyLC8OwjfGz/VPLKPS5sMdItDA0l4hd5Z4p
XJkPuns4bN0H/WmMmA/SWiO3tbWQjhHzQXw/lB73fmNgxHxQmXGLCLOQhhHz
Qbr1Vv/yTMcRMf9T+k+VAeY+WGKhwMZM/w60ZOTMvylhCWXtm8i/qt2FuI+0
Hj4STYKbq4IVhO36kAXXlZvtISS41dJhHN43gfJ0SB6T4zOYuO37Nb79U+ja
to3sZ6ro2IbT7j+SlmfQ38eTunV7SaW+LN453DNziJop4PSMj1RKzBclDxj+
foT3c8R8kcXSeJtUFnNlnmhpNDd/BO/nWL3kv1Lw+whVkFmI387EeJhDvxui
WCC78J39ZnUm1rAvoSf9BStQw01k1uD9QOnaef1rKWwwkf23x+wEE8uRKRQQ
LWCH7gNeUhVvGJhcwsM9nCUcsHpgNlyBewYrLuBvHC/hBLecM5Njxc2Iev/y
sbkaMjjE5xpUOs8joU33XJ595oIzEQGvku3o6Liv4ob4Sm5wHzSWlvrDQBZB
+a0f63kg+t/Fv3fYSHBvc//At0Ze6HTs7jnnQYL3Y/7H8jr54FKmb4NxLr6f
dmzdMjzAD3fOdD8cayTBHmrgOclBAaisS/yToE6Clszq6LNTgqCsX/R6G40E
gUHtykpXhCCx6hJXuQQ71Ig9+Xt4TghuVS8cau4ggVx+nfPmZWEQ3WJdkfV0
FNtRdXDvkL8IjD7ie7hWjbYyj2Vqmx2ksJ6JEfNY3CfW71fmpmPEPNb/I+rM
o2L+/j8+7XtNpQ0hEhFCWYruJRKSkBYk2pS9lL0UyRai0kJJKUUlrVp0W7QK
Fe1pb9r3daaa+b2/53zu/f31OZ9zopn3vOd9Xy/n+Xw8IgR3/qx+OgxslBim
QnZN4JrVseWZP+ZAeF7kh/PH2sF+2LzU7zwX1LgUaN97vAu42Yg/09WcBfxa
fAtkWkbA40QLiZViLKT8cY+88uQYqNG/bD7FT8vxlVs1vZ05AcxrTthIaNJy
4t4VRkb1T4FN8bZb3fM5CPe7FEy7tx6gPj/c77JPMaU7UPNv1YlzedryNOh3
zubJLRcOahOM5GfKUPvGbHeePfV8XyuweJ3eEmqfnwwdUT7LQcq8PcXySjzQ
0GRfWXcWB5kdGdO7tZYXsr2yC9O0OEhNl+McsI0PmnpPL/78k4U0ngazZvUF
YbJI+IuX92cAXXnyprKuENxV+nz1z8tsYHQtyafOTgz673SdMv5Og2tdbrKF
bMWhZ++QjqM9De4v8DAqvSQBi4PTRJ9fokHBx/1CD7fQYdAtrR99dB4Y8JX/
rU4KHarnMzZ0u/DAp+pfs4yAFOwc5uMBYlMoQ1Hn5OMcKdi9fp1P1Gc26a8p
/pY58mUvG+H+mm1uqLkyexbhflrLkL7K8L6XyJFxl7kttQWUV7GG5FRoUIZX
qLq+owPcXh1ws6uPBn2f+p32DR8FaCEadZ+aRd5J8OD2rHGga9NOu7eNlvNY
7J5r/Q0abOTbtWnzDg6izYXsHb3KBfMUP9rPV+MgrWqDXtF73DBMIvSCWQQH
BctOi2jd44Ell5dmRdzhoMN+K1yc/ah5cfSHfhE1T5bHxp65+YHa53qjn47S
5oCXVdi/mgghGN41Isr6yQaJKqduRRSLwf3RvbUHqH1u5oyg49pCcejduO7z
m83U89V3l3ZWpQTc1bhqPbUYQB5gWB5xhg4DPZbtPjVLzam3NU65dNJh9w25
2JE0LvjKUUSL21EKBj5U3ye7YQa1xL6IbRqSguduzYT5UPsc7udJnG8SLzw0
h3A/ryl9tFlLloNsrbf0rfvTBoyzJq3lTnHBInMZ+eR/DKD0e63dXNoceFez
7JhW4hjovv48wvUtB007zFyqSZ8AGhqGRkrU9XvHdLK/Ez8FHllN/vOooc63
yPdrr2YyQWyBzTJrap/D/T7+rUN+S6nzsbIk7IvHAAcoffWgffPioLMRvF/R
JLXHrnN3D6H2ORW+ymB7NhfsPrfxrNhRDnrm9+r3bS7q/KtmVPPkcdCGPeMC
2qK8UNPqWEdbMxuVpV9omJzPB/9+EGotlZtF5ZHzr3ErC0G5szx/dgE2uG0b
vS9vtzicqK+ZFqbOL0EFHtOmAxLw3wDncpsJDS5x/VifuJIOEyueyf3254bS
F27tTI+kQ4H3unXPS3jg/GKaaXiCFFwV92Qx1GMj3D8sGf0zWvV9FvW9t3BK
/U7tc065UqoTNDi4VuLantZOIDCe6qEjS4N54qGWwtoTIGvB9gxpXVrOzdr8
+Qe+0qD49/D30dT9ZZMy0rgrjxvuzeG/b07tK4y1k48yinigc5TaxgbqfqJ/
2BedUsMLGW/arywWYSPRVyu32/7jg767/XYncI2ihY8RO61HAHavdCn352GC
lYEJl226hOAbo9WdZd1sIKfH275BQBwOh8cUp5dQ51kOnw2/sAR8aWT5lb2F
Bg9bq9wWFKJD/uOT/oeo55tItc2jeC86LDmZLndqPi/0T5g6qSwgCZsmVBN2
beeA2oVe+pU+UnBvjUZMuOAcOlYVKiMhIQ3Latxfu1L7De5TOqu2Wpf9mUUm
M8cjTlk2A8/X+3NtHNmgWUnaJqa1HRQ+u5fqdoILvvNckL6kvgusOPj490Nq
b/hw+1y1mNY4mB5bKyRC7Rfpe+e3/1w1DYIP//69nnqe4T5mpvBrQ/0Yat66
uPvoBk0u2HDtyMMA6v5Jv6Kdlwx5YA4bRq6hnqfulqP3M4144a2KoZvmdhxk
FF7hpmclBJcWurpPBrBBi6dB4iFPcagSLqtjc5gGh1+t3WqhT4f73y2Gx6/x
wAW8L2fyv9NhS9OVej4+Hnjsyi1bp3IpaKNSLSIzzSZ90IUeaXnPLs8h3PfM
kcxKNf8VgCxvFMWhyA7QbPCpaZ8kF8w+oSry+M040ECpE8pbaDmzt67d4bHj
gkEFkt8qVnKQl8/1fgUnHsidW/j5H3X+h/8+ufL9PV64vefrG0l9al482vh1
/KUQnE222bornw3qJPc6b0kRh8bH63xbqf18R5Dg0lZLOtwd82TPow4emGtl
+FKqWwqW3XH4Vr+aQ/qmLii27rUvGxUlcT198bwNjPBf/WhzkAuuku5YrRw8
AaKDJQyadGg5jAq+Yv4yDrhocmbJmYfU53s5mb6si5rr6pxyVyhT55fnp/Ib
A1zQ8up6JtOQmo9PDFTGj3DDqzqzOUbU93VRrnP3/BkeWLPz3cJBxEbnBUUy
r4jyw2adt+03QT9i5Oke694mAZuW3p3fZkCDh4o0/SZD6LD1yqCSWzcP1Fe0
OhIfLQXfPbno9YiXTfqvezjj57ZnzKIDEyrz5D1agaXJZw29UhocT/NaYLpg
Aqj6PTnC2EnLyY68ciUhmgYZmUeUf6tTz29X/Zaridyw4Wjeowxq/jrV5nG8
s5AXtqTNZP60ZaPsx/37PaqF4ITwzB3uDjbQ0Vkg9HxKDLqGfqxeUUmDlmf1
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
ElbG1l/8M86/4p9x/g///H9xubxw
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{3867, 3873, 515, 1377, 1068, 847, 700, 613}}], 
               
               PolygonBox[{{564, 3874, 3872, 612, 1463, 1154, 933, 786, 699, 
                1523, 1214, 993, 846, 1597, 1288, 1067, 1685, 1376, 1770}}], 
               PolygonBox[CompressedData["
1:eJwV0k8s13Ecx/GP8KMtiRuW1kX+Tjpp2nSqTX/kR6scMHes4ig2Ia66dAod
6tYmvxK1NX+2Li01cvDfls0pkTh6/A6vvV6v5+v9+R2++51vbou2ngghJNAb
OpceQi6dSgwhZsijnuQQbieF8BBb0/tpAXuJTWOldA8bwzqxYT2N3mN/sEls
Va+iC9hTrBp7pK/rSZEQvut7+jN90T6sz+gXqcj+X8+i+/Z39ifyiC1qO6uf
lrPl33gqfXC3i0/Ja7YWW7l+Q66QI/IcL7AP8QZ9h+d71yvfwV/oj91f4xnY
V75hT+bz9nG+b2/nlfZlPmD/JY/YX+uz9kZeiJXJxfKhLZsG5Dr8gTfjvAsb
dZNOE9hf7BO2rt+kAqwPq8Ha9U094jd+6P/0QX3JPqrP6U22Iv2SXCIf4V94
Dh/kd23bvN67mNwd/6b6K/e1PBf7xs/oOXzbPsVP8i5eZd/gH73fkz/jb+Pf
yH0rv4zdkq/IKXKh/bncGM/x/xGPYh1uruOZ+haeIv/EY/zA1sGv2lb4MW+K
WGw=
                "]], 
               PolygonBox[CompressedData["
1:eJwV1WmUjgUYxvFntHzAmJFdNIY+V/YY+xKyndM52VuMwVjGqBAtH9rsDD5Q
GUso+1qdNiozmDJIi6ViJmLQdk6bZYh+94fbdf//1/O+77zP8srMzn9kUpUk
SVJMhX8apyVJI1NETjBZZukdSTLy9iR59bYk+RO/aaqZXL4lP4gvxhPNJ9xM
biNX13TglnHZ3Gv4L7zcnOLWcwe5tqY6N45rxQ3G+/BlvBefw3l4N56FN+F6
piP3OjeKm4n/xlXvTJJj+Cp+1t5NX8iflhvi7+JKdaPkfdyD9ub2G7oMs9A+
lE/1mvGyNbeUG+K4zrIqt193RRbpdnDndfmyPXdSxgndY5+tX4M36x+VTbgj
sj6+R17S75bV5Uuyn/6M7OT1b9hz+OV4luP7yNrcP3Hu7cd11/gVuIzfiA/h
dqZGXDuuDTcUH8D55lNuDreFaxDfJ64lN5qbjf/F1b33CVyJV+Jy/aY45/xh
Lkfezx2L74tbyP/0TUxa3AO6tvZhuhI82XzGzeW2cg1Nl7gHuDHcHHwZp3qf
k/g6XoV/0m/GR3CWSefy4npxw/EX+CnzOTeP28bdbbpyhdxYbi6+gmt47+/x
DTzd3l2/mj8jt/Cbua90o+UDXAd7S/tNXaap6dhJfDv7CN2X+GnTzazgc/l5
/FX8lrkrzjffnn+MP4ifMXu5+dx2rpHpzq3kxnHz8cM+sw6+xqfZf+A/iPOr
myF76NbozsqtuqPxDJhacZ65LO5xXIqv4mJcgafgIrwg7lc8yHtl4sb2DPsv
fKp52d6f7+H4VXI8V8gtcFxfWZc7KCv16fJH/YdxnvTPyZ76MrlW/7N9W9xr
+Gv9GNmcOx73N24lb+mLZVNZIIfpa8d1jWvAPRH3Cl8NH+KvyX38BX4qLsYL
8c54nkxPbjU3IZ5j3M9r6+HrfE37Kf6j+Fzd8/Ih3TrdObld9008E6ZOXF+u
I/ckPowr47nHF/E0vA8X4F14cHwHnGFvYv+V3yNryFfkAN3Z+Ly4P+wT+RW4
wPH94/eAK43foLh35Gn9xzKRL8he+nL5tv68fUc8S/hbrx8rW3Bd7K3jNfZm
+kX24fa6ce/JTtzIeD7i9yZ+h/jr8gB/KX4r8X68CL8b38NkOva3eK5NL/0a
fZ59Jb9IP0A2iGsT96i+lizTp5gX7b117/AVcmc8o9x3XpcrW3InZFfcRqbE
tZX3Om6xHIEvxvXz+in2zvwynO34bjI1/vZ4bvU37CVxH8S9rJ8ss7jpugNy
se49fgjfDGfam9p/59NNb8et5SfFZ+tu4tr6clzFrMcX9Lvsx+LzTX1uapx3
bhQ+imeYEm4J9358hmnmff6I35D4/9M+UN/HcetkPreKW+K4gbIhd0u3wTQw
03BXx+To/wdFr/6+
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{3871, 3872, 660, 747, 894, 1115, 1424, 563, 611, 
                659, 746, 893, 1114, 1423, 562, 610, 658, 745, 892, 1113, 
                1422, 561, 609, 657, 744, 891, 1112, 1421, 560, 608, 656, 743,
                 890, 1111, 1420, 559, 607, 655, 742, 889, 1110, 1419, 558, 
                606, 654, 741, 888, 1109, 1418, 557, 605, 653, 740, 887, 1108,
                 1417, 556, 604, 652, 739, 886, 1107, 1416, 555, 698, 785, 
                932, 1153, 1462, 603, 819, 966, 1187, 1496, 651}}], 
               PolygonBox[CompressedData["
1:eJwV0T1Pk2EchfFbaUtbB4fqRMGwa1uMFGUwYSNxkVLUQUUrtsqgG6vV4qQM
KpWXWZRPQNRECy7aGRYkLDDUAdTBl6iLvw4n539d537Sob2lu4U7B0MIB2RW
ug6HkJaxjhBORkKoRENIerAg36XGX+Pr/CCelDUp8n18mU/gS3omFkIP90H/
0zmd9+6EreRuul/yW3jeN7/xBk7YvuEHeBzP2s/gQ+4v0m0/aluWh/it/bZ9
F6/in3gVJ/RZb0f5HH8Tx/mL+jHfza3pvzqr+9u/r4/br+tP7d/QS/bP3Jxv
t/GQe0r/sq/odXtcf7U3dco+rO/bF/VV+zPutP2crnJJriVp9xHvjvFF9yv3
NP8G3/J+BzfwD9zABZzFE7gTt3xzwf1Ip/k/knGf8u6jvMCb9ufe7kuVu8I9
5QZwqv0fSI17zVW49zLCZbgbXAzXZU/u8Zf5J3wel+WdnG//r3yJj+KI9Mt/
0cdJqw==
                "]], 
               PolygonBox[CompressedData["
1:eJwV1EdwVXUcxfGbhgIzwtB7kYQktJVIGXRhEnoNwgwiLpihY+gtCVUF1qh0
0Rml9w6iICt6SUINMAMCM/QisBT4/BYn55zv+d+X5L17X8uRkwqLUpMkSaEi
P5rWSJJm9GtakpSmJ8nujCQZ6sBiukWT8X74IjxL30fVsXVUgu/Ch2AN5DfU
pkqSdLBV8FzbN/y4voGvs1dgPzj/Ejuvp+E39Ul6X32hPVPPkTPkrvZetk7y
xDgrH7Y90/c614vPwz/A7lFDuZozTfBB8i/yb7zYthP70jX39cHyUl4fP8Zf
81ze3vlynmMfwf/R18fr2Mux711fqX8uT+Mv7Hv5OXsqv2GvaSuQi2x98AV6
KzxbTpe72HraPpUnxDXyIdtTfY9zVeS71MBW1baW5ug77IPt9eRXlGNvZyvj
2bav+TH9D77WXoZ95/xz7Kyeglfq3+q99fn2j/UeeiUdxJ5gu7EM+V+q75oP
bY3xgfIaeTa+XS90rpAvwetiR/l/PJu3de4ib20fzo/qv8f19ovYItde1z+T
p/Jn9j38jD3h1+0neA17Pp9oXxn3gn0e1tI+gi+L3xH3kdxZ7u5cR3l8vIZ8
wPZY3+V8unyH6sX9YltNs/Rtca/Y68gvqbW9je0Cz7J9xf+O87YL+kJnn+qn
9Xf6NX2C3lOfq7fQC/RrtB97hO2Mz1VfRTOxrfF+Yrn6X8Gx89gC7CqNx3pg
pVhzfUd8JvEe0Ax8Cz4gnhP9SHDsHDYfu0LjsO5YCdZM3x7/P7aCpuOb8f5x
T+p/BsfOxrOEXaaxWAFWjDXVt1Eatpym4Zvwftg9780geTGvjb+grPhMnMvE
h8mH4zr8jD7XNd34FPwJfgp/q1/CP+J5+Bg8H5+jN8Gz4tmSO9nybZ/I4+Sr
8j7bQ31r/H3ybaprS7X9TFP1jfa+8TrxnAXHTmOl2GP9pP6/XqGP1vP02Xpj
PU+/Es849gDbgqXoP9EUbAPWB7vrdw6M7zZeC39OmXJmPFdxXj9lL3G2nEZh
X2CzsEb65vhSxn6kyfh6vDfWKu7h4NhJrBgro/dy27cg
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1mV4lWUYAOCz0d2do5XuVlqkGd2hdAwlDMpWbMEALExECUUURaS7u9MO
wO6A+7n4ce+J7+x8b+5aytC01PFJiUQiOTmRiHiXH/lZI59OJ5apW3JRvpja
PK+uznH5XEbFd3C3XgHWymfQmTq8oFeDE/J5jCYd9+gVZJ18Jl2oy4t6NTkp
n88Y0nOvXiHWx1jpSj1e0qvFqRgbY8nAfXqF2RBjI5X6vKxXm9MxNsaRkfv1
irAxxkY3GpCJB/SLsinGQXcakpksZOVBz4uxOd5NDxqRjYf0i7Ml3kNPGrNA
rw5nYt6MJzuz9EqwNd5NL5rwil5dzsa8SSMHD+uVZFuMg968q27FJfkSmvKq
uh7nYh2YwMfqjvwh/5CcPKIuxfYYO+vlPbgs78N78tb8IF/KbvkQsnGd+jWx
Puflx8VxLJBvFfuRgS+4nVv0V4md+Ik/1WfFiayU7xeHxfjIxbdMT7p66HIJ
j8pLc4Ed6iPiaP5ilnqD2JNf4nf4jCn8S1+t5WKbmAs/qk+JE1gm3yMOJTvX
q18XG8R3xF6wTd6fjNyq/kTsHO+Wf0RuHlOnsDP2iX68r74h5hv7RDPeUDfk
89gnJpKHx/XKsCv2hf405029RrGOsd5MIi9P6JVld6wNA2hBPp7UL8eeGBcD
aUl+ClCQQhSmCEUpRnFKUJJSlCaFMpSlHE/53vLsjTEziFYs1GvMl7F+TKY8
s/UqsC/GzGBa85ZeE76KNWEKFZijV5H9MQ+GsELdlp/jTNKGReqmfB1rxHb5
ADJxm3q12IW/4+xTkafVlTgQ82CjvBdJsf/qD8Qb4wzJT8eZZbl8r3gTOeJ9
TI191X877gEX+UZ9Qow/tgvlO8SB/ErmWBfu4L+4D55/KnaNOfGP+pw4KXJW
qQ+Iw+OekJvvmBFjdR8qef6M/BoOyo+KY5gt3yT2JjnGHHddbBfjiPNIW96J
cx53LPaBnfJBZIkxqteIqXF34qxzUD6CPPFO9bPitRySHxPHMke+WexDujjf
sQ/crL9SbB/3jt/UZ+IesUK+Lz7D7+SMdWQal2MvPF8sNuNSrIH6pJgW+8oi
9S5xcHwvWeM8cSf/R/R8rdgt1l1+XpzMavkhcSR5Yy7q58TKHI5zwhZ5X9Iz
LO652CHGGeeEdixRN+f7OAtMpTJz9apwJPaJ4bSnCvP0q3I01pERdKAq1ahO
DWoy3+eqcSzGx0g6slSvBRdiL5nGOnX3mHecLQ7LR5EvxsfMpKv/A9Ty7Ar2
EAHQ
               "]]}, Annotation[#, "Charting`Private`Tag$249983#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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

               "]]}, Annotation[#, "Charting`Private`Tag$249983#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfclXMYB+CnvZeGStpTiWgq7SGUvCUNQooyWpTQ3tpJEVFKO4X2UCij
pURSIVqiRYWGynX/cX3u7/d+Hqf3nPN7jmIdu6d0S5UkSUrqJDmRPkk+ypgk
1fkmQ5IMoC43ctK1ZfY12K0PpB6F2WPXnvPyuzzOKfcvt7uDb/VB1KcI39s9
xN/yLDpx2v0r7GrynT6YBhRlr93D/CPPpjNn3L/SrhZ79CE0pBg/2HXgX/k9
nuBP96+yu5Pv9aE0ojh/uXaWc5xntXtqs9e1YTSmBPvsHuGCPIcn+dv9a+zq
8IM+nCaUZL/do1yU59KFf9y/1q4u+/QR3EUpDtg9xiV5Hl351/3r7OqxXx9J
03g/eh9ysF4vzY9yRy7L83mK//Qh3MBX+gWvt16uzwF9FOkyJckYvSR3x+dh
vkBOCrv2nvmxfU55qnwLZfSfzMf5Ty7k2ix5gZxZnijfZpaLe8334+yYT7t+
RR4ar6MXMoub881q5hbX85pv6beblc1y5tI4S+ZFf//HcgMq6D+6v4A5Q69i
vqKnN8fqpeI9yQvNe+zPmn3JRRH7OeYG+1zy6/KtlNV/NjtxRV5IFtcn6Tfx
jH7VHMaNbNUv+Zs2yA35SR/NvZzTX+Q6NurlOCh35qq8iGe57L/faNeIn/Ux
NOMmfrF7gmvyYrrFd+r+T+wac1AfS3PKx2fr2qf2TfhFH8d9VIi/27VrJHIq
UpOGz9x7F7/K42nBzaRlk31TDskTuJ+K/Gr3JAnv693jHLE5zhCH5YmkcAuH
7LqQiiV6j/ie+Dy+G47Ik2jJrRy260pqluo9ycAX+r0clV+lFef1l8jNJ3ol
jshPkYYP9F5ck4fHmWabnpEv5WYckyfHv+G7HqeX5oF4vs2XycOn+nWuvyFX
ivOtHzWfJm2cB9dmmx/aZ5VflcvznJ7oI+LcUUJeYG63zydPlyubVeKMmR+Y
Nc1Mrn8lN+dm/Te9oDlTr2q+Fu/BHB9n1ywTZ95cZFY3W8fvjdyPinpes6g5
1/zMtdzytHgfce7lJfHM2R+Lc046PtKzuTY5njeej7Ojj4zXYkc872yR7+O4
PIUH47dL708+NumV+U1+lvQs03vH88VWvQW/y1NpQxWO23UjA8v1PvHZsk2/
nz/k12lL1fhbyc5211I4Ib9BO6rxu113MrJCf4Ec7NBbclKeRnuq84ddDzKx
Uu8bv4N8rbfilPwmD3FBH8D1bNZrcELuSWZW6S/G7w0743xxWn6Lh7moDyQ/
n+t3cFLuRRZWx3uL7z3OQ5z5eIb1UXIxvtav19+O8xG/O/ouszVn5Btce1ee
LmeSJ8Q5NsvGeTcXmx1cu2QOokC8rv088wv7PPKbcUbifOqn4myTlTXxObo+
Jc5aPDPx2xK/x3JxdsZ54xv5Qf6U3+YRLuuDKciXei1Ox1kjG2v1fvHvs1tv
w1/yOzzKneTlW/u2nJVn8Bi14xmLz4X8FIhnKD4LvnNvO87JM+lIHc7Y9SY7
6/T+pPVeRsezy654Lf0duVo84/KHZq34/5lr/wOTXS35
               "]]}, Annotation[#, "Charting`Private`Tag$249983#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1mXYFAUUhuGlJO1WUFFsVFRSpEG6u7u7OyUkpLHAArtQseiS7u7uBun2
Pj+e67zPe3a/mZ3ZHcjYoG2FNkkSiUTWZIlEntSJxLi0icSONIlEceziH6At
8iIf8mO81+y0L4Hd/EO0QwFMsNulL4k9/CO0R8H4W3a79aWwl3+MDpihT4p2
+uSYrSsUf1e3h5fGPv4JtuuexmhdJnTUzeTJ0J6nwBzdaZ4dX/GcKBznwvfK
ZbCf3+ZF8SefyHfIz2AMfxYPpkskavMVcif7WXJydOAv2XWQ75DTyBXkauY8
ns8cwluac73vjJwDFfjX9tnM3ryJmYunNxvx2uZ6XsR8n7cxi8R1kvfFNeVl
49zM1rq65gH7hFmM/2X3ljxAnqTfaWbCWH0WfTf5OfkhuY68Uu7sdbPlFOjI
UyKtfUU+X55nf1bOiW/i7+OduBd8v1wOB/mn6II5cU3QSZ8K83VFMVF3gJfH
If4ZuqIYiqMESqIUSqMMJnnPQa+vgMP8c3RD2Tie3SF9RRzhX6A75upTorM+
NRboysXxdId5JRzlX2KX7lmM0z2PHrp5PBW6xH3FQl35OLbuCK+MYzyJa1Rc
9zefzHfHtcV4/gIetq/LV8k97efLqdGVv2zXUU4rp5MryQvk/PJ78r9ef87M
hYq6b+2ym314UzM3z2A25nXMDXFPzJG8bXwX43rIR+O3xquYz5ltdPXM4/ZJ
zRK8svmPfW7zXT7Fbo/5PCboX9d3l1+UH5HryavlXl63QE6DbjyzXSc5nXyn
XFleKC/yuv/kt/AdfzvuWVx/fkyuihP8K/RGJVTGZPvjdtVwkn+NPlgY1w3d
4zhYrKuCKboTvDpO8W/QF//GOaGH/i4s0VWN4+lO8ho4zb9FPyzS34me+rux
VFctjq87xWviDP8Oe3Uv4IN4HqC/bjG/C734PVimO89z43ueJ84xzo+flmvh
LE/mmpXUTeff831xzfFhfF8wQLeE343e/N74PHFv4/siL7e/IL+NH3gOu75y
XvkJuYm8US4qj5JrxGc2z8TzNZ5z8Rsw2+rqm+fsk5uleBVzRtw7cyBvZv5g
v19+CeX4R/ZvmD14IzMzf9SsH8cy1/CC5jD+rvcuNe9BH/0r+s7yfXHN5ary
InmF112U8+DHeK7iSfumfFPci7gP8lm5Dv7jKexL62byH/kB+WV8HMfBQN0y
fi/68vvjPnlPNb5YXml/Ka4bforfZNwj3ff8nFwX5/lPOKjLjE90r2KQbnl8
DvTjD2CV7jLPh595AdTW/cD/k+vhAv8Zg7FCfz/6x78/WK2rgx9153l9XOS/
4JDuFUzUvYYhupX8AQyI53x8T3y26nyJvMb+ipwfv/Ccdv3kgvJTcjN5s1xM
Hh3/vsTnNC/oyugaxLPNbKdrYF6yv8Msw6uas+L7bQ7izc2p9oflV1GeT7J/
0+zJG5tZ+GPxd3lNcy0vZA7n73nvKvPB+L7E9dV3kR+W75NryEvltV53VS6A
qfF+ZLRvzrfE9Y1rK1+UG+Iy/xVHdK/h03jGYahuNX8IA+NZh3W6+nGtdZd4
I1zhv2EYGqAhptpftmuMq/x3DMeaOF8Mit8C1usaxfF1V3gTXOMp49913Wye
Vx4stzCn2R2Vs+Cz+H1hhG4tfwSD4/phg65xnJfuKm+K6/wPvI91+kcxRP84
NuqaxHnqrvFmuMH/xEis1z8W90CfHpt0TTFNd503x03+F0Zhg/5xDNVnwGZd
szi+7gZvgVv8bxzTvY7P47uA0bqNPD2GxbMKW3TN43x0N3lL3Ob/4LjuDXyh
y4oxuk08A4bH8wFbddfie41feeE4hzhffktuhQSm607o3sSXPBvG6jbzJzAi
fhfxjHAvavJl8jb763Ih/MaL4Gn7FnxrnGt8Tvm23Bov2rXnSeRUcjl5jjzD
607KWTE5PotdLzl73CO5oVzLXBfnb47grc1x3rdFfhJl4/+J8ds3u/KGZsZ4
7pi1eHVzeTxzzKG8lbnd+2/IhVGJ/26fy+zP35GfkVvK2+Ti8ph4X1x7M4E2
+qRIbVeez5Vn2p+Ss2EKz4Hxuq38KYyMa4Qdupu8CKbxonGNdNPj+qAtT4ZZ
ugnYpsuIUXFe2Km7FeeJP+I5hUzOoxXfLpeQx8rt4v86Xvs/RfCzMw==
               "]]}, Annotation[#, "Charting`Private`Tag$249983#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8zlUYxvGHlJBRZJORkEJkhEopo6GsUJkVKZvMUCkrq4xQSVbZM7L3
ahiZ2auMsmdm7/uPz+u+rut8z/N7nnPuc76/3I1bVW+ZJJFITE6aSLS5J5F4
M00isTp1InFRfUXdoj6B68ZmqplxG+OM/aW+jHRpE4mVxofRN+XX1D7qPvV5
3GP8cX4l/TCS8T/x/9I1kZEfZ35X+oj8stpS3ak+jaz0QjUPptGHPDs+Phdf
8RWwgX4Mi+m2xuvRa+hXcYOfxWfBeH4VP5y+RfdFCYyXfSg7SrdCNhyWTZCl
xgj+ObST1efX0tVwk18dz6Gb/C9Za2THEVl7NJCv46vjFr8GE/EBGhpbL6+B
2/xa/IAOaGRsg7wmElgn+xHd5X/zbZADR2Ud0Vj+C18LSbBe9lXsF90PJTFJ
1kN2LNYJObGIz4vpsafx3eg0GBlrrVaJfaR/UYthCd3Jc2/Rv9Kv4Q+6DJLS
s2PPkLCvE/i/6aq4l99g3ogYi57C58b3qxVjnY2Xiv2hC+FOfh5/iq6FTPxk
8z+ij8uvqO3UXWp5PEAvVh/EDPqEWi3WKtZUTYtR8or4lS6OpXRn42/Tv9G1
cUf8VtlIWRL050tjiuxj/gTdHrlwTNYF78h/5+sgWXy+bGr0dPRV9EbsW6x9
fP/4HHyCnvgUTczfaF5d3InfZNPiGflJ/gPkxnHZZ2gq38S/jrvwu2xUrD8G
8E9genw+/w/dAXliTaKH4szia74Sesne5TfTbyA55vDZMJHeaPxr+g4M5Mtg
Nf0I5tMz4jfQ/9JX1Y7qn+ozSGnP8vJL6Hzx/fiZ/Em6OjLwJ82fFP0R9we+
ibOnvhB7ZrxyrAf9OJLzy/izdJ0403xv85vRW+RvYitdFnfTc9Xs+IHe5Llv
4v7BIL4s1tCP4md6ZqwtfSr6Gw/iH9lk2X34lq+CPrL3+D/oekiBzXHHoC/6
4XP0xwAMxCAMxhd439yt5tRHyrhjZbPRS346+hH54n6UfYnm8m18A6SKsyb7
Ns4HBvPlYr9kvfkzdBc8hKX8Q5gVZ8j4FDo9RvMvRM/QJbCcHmK8Bb2dboht
dLm4Y+mf1Bz4MdbWc6Ppu/AFf0CthCfptWrhGLMnC/jT9GvIzM81rw99Vv6f
2lXdrT6LVMbz88vo/NFn/OxYe7oG7udPx3mKfsEtfBf3q/piED2qlsQK+pxa
F0PNaanukDXC9viecc/Q89ScmBS/1XPfRW/hS/6p+M2xl/w5+kMUwJl4x6GV
fCffGGnic2Xz4p0S9y1aG98lfwtpsUM2P/pCfp7vhoLRw3EXoo38T/5tpMP8
uMswOe4X9ZXoP2uw07Njoq8xxNjT+Dl6jb9Ad8fD8fvj7kJb+W7+Hdwb96Rs
QfSl/CLfA4VwPu4OtJPv4ZvgvjjDsoXRw/JL/Ed4BBfiPoh3m3wv3xTpYz9l
i6Lf5Zf5j/EoLsa5i/edfB//LjJgj2xxnA35Ff4TFMal6O94B8r3881wP/bK
lsQ5kl/le6IILkdPxjtQfoB/DxmxT7Y0zpz8P/5TFMWV2G90kh/k30cm7Jd9
L0sRvcOXj56MM8hfoz/DY3HHxd0cfYkx/EsYI+vMH6KbI3PsDZ8LU+KcGB8b
9yGG8c9gHV0EC+nlxofQ1+lesTZ0BRSLMbUA5sTZ8dx0OiO+54+qL+FlepNa
Kvoj/h+LfaVfj+fiHaUejrVVW0RPqk/Fb/VsFn4BnRtJ+Kn8cfrVuC/4g+aP
i3OKGxhu/KBaGWmMP8uvp4tiUZwTtXacRfOGxhxZ79g/+jkUp1eoBTGXvua5
GXQmjOWrYjNdGqui39Q3kNXfGuvZ/wGMPIzf
               "]]}, 
             Annotation[#, "Charting`Private`Tag$249983#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
         LineBox[{{7.984068595434279, 0.08379833910141504}, {8., 0.}, {
          8.017701560628579, 0.08379833910141504}}], 
         LineBox[{{10.983230100457137`, 0.08379833910141504}, {11., 0.}, {
          11.018718576649514`, 0.08379833910141504}}], 
         LineBox[{{15.980956839616221`, 0.08379833910141504}, {16., 0.}, {
          16.021159067093087`, 0.08379833910141504}}], 
         LineBox[{{18.979954568017074`, 0.08379833910141504}, {19., 0.}, {
          19.022355593189097`, 0.08379833910141504}}], 
         LineBox[{{20.977644406810903`, 0.08379833910141504}, {21., 0.}, {
          21.02872114683483, 0.08379833910141504}}], 
         LineBox[{{27.97098812797407, 0.08379833910141504}, {28., 0.}, {
          28.03223541336214, 0.08379833910141504}}], 
         LineBox[{{30.96946118734113, 0.08379833910141504}, {31., 0.}, {
          31.033932014065414`, 0.08379833910141504}}], 
         LineBox[{{32.966067985934586`, 0.08379833910141504}, {33., 0.}, {
          33.03770223785046, 0.08379833910141504}}], 
         LineBox[{{34.96229776214954, 0.08379833910141504}, {35., 0.}, {
          35.0418913753894, 0.08379833910141504}}], 
         LineBox[{{36.9581086246106, 0.08379833910141504}, {37., 0.}, {
          37.04654597265489, 0.08379833910141504}}], 
         LineBox[{{38.95345402734511, 0.08379833910141504}, {39., 0.}, {
          39.05482001709936, 0.08379833910141504}}], 
         LineBox[{{40.94517998290064, 0.08379833910141504}, {41., 0.}, {
          41.060911130110405`, 0.08379833910141504}}], 
         LineBox[{{42.939088869889595`, 0.08379833910141504}, {43., 0.}, {
          43.067679033456, 0.08379833910141504}}], 
         LineBox[{{44.932320966544, 0.08379833910141504}, {45., 0.}, {
          45.07519892606222, 0.08379833910141504}}], 
         LineBox[{{46.92480107393778, 0.08379833910141504}, {47., 0.}, {
          47.08355436229136, 0.08379833910141504}}], 
         LineBox[{{48.91644563770864, 0.08379833910141504}, {49., 0.}, {
          49.09283818032373, 0.08379833910141504}}], 
         LineBox[{{50.90716181967627, 0.08379833910141504}, {51., 0.}, {
          51.10315353369304, 0.08379833910141504}}], 
         LineBox[{{52.89684646630696, 0.08379833910141504}, {53., 0.}, {
          53.11461503743671, 0.08379833910141504}}], 
         LineBox[{{54.88538496256329, 0.08379833910141504}, {55., 0.}, {
          55.127350041596344`, 0.08379833910141504}}], 
         LineBox[{{56.872649958403656`, 0.08379833910141504}, {57., 0.}, {
          57.141500046218155`, 0.08379833910141504}}], 
         LineBox[{{58.858499953781845`, 0.08379833910141504}, {59., 0.}, {
          59.157222273575734`, 0.08379833910141504}}], 
         LineBox[{{60.842777726424266`, 0.08379833910141504}, {61., 0.}, {
          61.17469141508415, 0.08379833910141504}}], 
         LineBox[{{62.82530858491585, 0.08379833910141504}, {63., 0.}, {
          63.19410157231572, 0.08379833910141504}}], 
         LineBox[{{64.80589842768428, 0.08379833910141504}, {65., 0.}, {
          65.21566841368413, 0.08379833910141504}}], 
         LineBox[{{66.78433158631587, 0.08379833910141504}, {67., 0.}, {
          67.24110693716713, 0.08379833910141504}}], 
         LineBox[{{68.75889306283287, 0.08379833910141504}, {69., 0.}, {
          69.2840081351435, 0.08379833910141504}}], 
         LineBox[{{70.7159918648565, 0.08379833910141504}, {71., 0.}, {
          71.34250836244652, 0.08379833910141504}}], 
         LineBox[{{72.65749163755348, 0.08379833910141504}, {73., 0.}, {
          73.41614440181563, 0.08379833910141504}}], 
         LineBox[{{74.58385559818437, 0.08379833910141504}, {75., 0.}, {
          75.47432703917454, 0.08379833910141504}}], 
         LineBox[{{76.52567296082546, 0.08379833910141504}, {77., 0.}, {
          77.55014750326059, 0.08379833910141504}}], 
         LineBox[{{78.44985249673941, 0.08379833910141504}, {79., 0.}, {
          79.64600603800329, 0.08379833910141504}}], 
         LineBox[{{80.35399396199671, 0.08379833910141504}, {81., 0.}, {
          81.71778448667033, 0.08379833910141504}}], 
         LineBox[{{82.28221551332967, 0.08379833910141504}, {83., 0.}, {
          83.79753831852258, 0.08379833910141504}}], 
         LineBox[{{84.20246168147742, 0.08379833910141504}, {85., 0.}, {
          85.88615368724732, 0.08379833910141504}}], 
         LineBox[{{86.11384631275268, 0.08379833910141504}, {87., 0.}, {
          87.98461520805256, 0.08379833910141504}}], LineBox[CompressedData["
1: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
Ke5v3/8AKmKKkA==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 419}, {0, 0.08379833910141504}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.864753232570842*^9, 3.8647532455516872`*^9}, {
   3.86475337345875*^9, 3.864753384419242*^9}, {3.86475684110791*^9, 
   3.864756868900015*^9}, 3.8647569176933985`*^9, 3.86475709903336*^9},
 CellLabel->
  "Out[498]=",ExpressionUUID->"eb94f6db-bf7d-4025-897d-1a6098f47cfe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.458070851619526`", ",", "2.653692510612365`", ",", "27.768877422693233`",
    ",", "27.768877422693233`"}], "}"}]], "Output",
 CellChangeTimes->{{3.864753232570842*^9, 3.8647532455516872`*^9}, {
   3.86475337345875*^9, 3.864753384419242*^9}, {3.86475684110791*^9, 
   3.864756868900015*^9}, 3.8647569176933985`*^9, 3.864757099106336*^9},
 CellLabel->
  "Out[499]=",ExpressionUUID->"da0584cb-7537-415e-b240-43fefeb2ccb7"]
}, Open  ]],

Cell["Individual Test Benches", "Text",
 CellChangeTimes->{{3.8637030744782195`*^9, 3.863703080794203*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"796555a1-e709-40c9-8e76-66ea78266730"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["\[Tau]",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], "5"}], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uMin", " ", "=", " ", 
   RowBox[{"-", "1.5"}]}], ";", 
  RowBox[{"uMax", " ", "=", " ", "1.5"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.005742533618125378`"}], ",", "2.9205672047607028`", ",",
       "0.0025748485826313505`"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess", ",", "uMin", ",", "uMax"}], "]"}]}], 
    ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  StyleBox[
   RowBox[{
    RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["}",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8637030916107454`*^9, 3.8637031163048553`*^9}, {
   3.863703146634164*^9, 3.8637031467241335`*^9}, {3.8637032271314416`*^9, 
   3.8637032981877384`*^9}, {3.863703344313999*^9, 3.8637033675275803`*^9}, {
   3.8637034246933155`*^9, 3.863703488801831*^9}, {3.8637035225560446`*^9, 
   3.8637036066221848`*^9}, 3.8637039678437643`*^9, {3.863704003356416*^9, 
   3.863704015206629*^9}, 3.8637041910564413`*^9, {3.86387938554615*^9, 
   3.8638794077180634`*^9}, {3.8638794473054113`*^9, 3.863879456186574*^9}, 
   3.863879487594535*^9, {3.8638795768290167`*^9, 3.863879601771044*^9}, {
   3.8638860815410876`*^9, 3.863886103615032*^9}, {3.8638861483497353`*^9, 
   3.863886172621978*^9}, {3.8638914447629833`*^9, 3.8638914562922993`*^9}, 
   3.863891796977415*^9, {3.8638918475872407`*^9, 3.86389184764522*^9}, {
   3.8638937946529503`*^9, 3.8638938135878987`*^9}, {3.863893847458075*^9, 
   3.8638938597471466`*^9}, 3.8638940187133408`*^9, 3.863894098689779*^9, {
   3.8638941539631133`*^9, 3.8638941576359406`*^9}, {3.863894255027814*^9, 
   3.863894255155772*^9}, 3.8638944064184275`*^9, {3.864132884995618*^9, 
   3.8641329073813734`*^9}, 3.8641331504876966`*^9, 3.864133195282199*^9, {
   3.86413327929601*^9, 3.864133287553337*^9}, {3.864133332576766*^9, 
   3.864133353182098*^9}, {3.8641334403238955`*^9, 3.8641334566426144`*^9}, 
   3.864133562247438*^9, 3.8641336317199535`*^9, 3.8641336640694847`*^9, 
   3.8641338838003726`*^9, 3.864133916131909*^9, 3.8641339918014193`*^9, {
   3.8641352038731537`*^9, 3.8641352725329356`*^9}, {3.8641417727182617`*^9, 
   3.8641418023916583`*^9}, 3.8641418403363776`*^9, {3.864143075053784*^9, 
   3.8641430827452946`*^9}, 3.8643991519070525`*^9, {3.864753462527244*^9, 
   3.8647534836674776`*^9}, 3.8647535246163716`*^9, {3.8647567977028036`*^9, 
   3.8647567993372808`*^9}, {3.864756890714034*^9, 3.8647569005039015`*^9}, {
   3.8647569351738043`*^9, 3.864756950301964*^9}, {3.864756993772049*^9, 
   3.8647570201716013`*^9}, {3.86475707781815*^9, 3.864757083908201*^9}, {
   3.864757189368449*^9, 3.8647572411128883`*^9}, {3.864757277725168*^9, 
   3.8647572778321342`*^9}, {3.8647573437950234`*^9, 3.864757343850005*^9}, {
   3.864757450294937*^9, 3.864757479598558*^9}},
 CellLabel->
  "In[654]:=",ExpressionUUID->"64c954a2-a20e-4e79-ac9e-42d8f28dce15"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJzUnHk01d379yXlODiGUyppMCQkIUpFe5fSQJJShgxJUVJIJalQiZIpmaLI
TCoyTxuZQ6LMw3FIlEyZhzz7Xuve+q3fs37r+zzPf8/9T/de5zPsz7X3vq69
vV/rLWx6RfscKwsLSzWVheWff0W85iJerHXefcbl0kltQ3Z4OJdds8ccgbgy
3vzzV9hhFfc2DjbDGrDe0+/IpgR2uNdrf37M0UZwR7rpkNMsOzy3ZZpbjpsB
2O1lk7T0KfCI5LlhgQPd4DmlJ969hAKTv9y+Vq7UC+rV2STrpDjgLn6pt2x3
+4FquUCLozcHNJ/xDY3SHQIat1hbJ3s54JWS71vfHhkBwffOp7rJUOEj/aUb
5i6NguJjbEUyF6nwbOmt83IW46DfeeTnZl8qLGBfdcxSbxJY17jZFcVToRyf
k3+f3TRYrCdT6pxKhSa/VaQ1L82CZbXFVj5JVBj+olho4skf4KlwJsj4JRW+
99zZUqvNAnu8vOaXOVOhXZaKVqjGImh37Ib0EQMqRBVRI+4GrLD9Z9FAuSQV
XjiwI/eC7mKYFM3SpD3GAUNi5VItL7LBzH36DanpHNDnd66z9Y0lUPVezy1H
ew7YE3/tuoXtUnhSaif3L2UOWKTmG+jiwg59aNeSs+YocNHRZqaXEwWusN3/
oaaYAln2pC0Ku8kBG0/3Tjx8SoFuKyaO1D6kwivbhZTRWQq01j9bOHGPE7Zl
yHkvAhTY6axgBp5xwVXCxyRkhClw2dOgZvdwbnhrGGSr81BgNK/UzdLnNMh6
tnmrKwcFFtiu278xgQcqhcr3Z+DfX6wPE1I5wQulil8qzK+nwFzHaRaLGl64
5foi3U3KFCiszj4reooPjt7TqDiF35/ySfJx0xc+GMUr5pvhSYEeJX9k1xvy
Q3v/A+epBRT49GrfRZNWfug8rqt8/xcFOi5fyyOiR4cm9oZJLLwcME5ySYUd
gw4fCYal/hTmgEtHF60qMFoGV27ed2IGt2Nkk+68+P63LWkarzlntXyh3XIo
M1nn5992bYTDZnBVYKE9+f6YssjI3/Z8hm2q6+UVC211WbX9jmN/26WGWy5Y
Xl250H7zznpifv5vu8KnxabX/C24tL9Bcu0Zdrh+Lj1kblsZeCLud2bEjR26
Ved265z8Ana4uLXZfGaHP01yLaSOD4O0dt/iC9xU6Mh7Q/qk4W9w2KBW1VmT
Csd5C/YHXBwDlgV9cXxOVOhrXmFQbTIBJBNpnAfCqPCmR+VVKfMp8OPCdIBo
MhUeZDXufG49A3bo3nkhieczS7lzpMjtOVBxwr5eGs93NqPQC9VB80BJ2m42
zocK/cRylmd8YoEz7+5+V75ChcGFNuH0L4tg/JvNQo9UqXDf6/qNmSxUWL9u
94N4BwqcVdpM+baEEx552YBOalGgxID60+dcXHBD3SP+LBkKdKCavzRbzQ15
wXhvvgAFtn3ujItdS4PN437GdE48HwrEjG+I8sCvumZms1QKnO8PMO5dxgtF
Dqs/ZFtBgW80qzy1fXnh5IOSeuPNFDjY5fSnmM4HtQKrmuM0KZB3zeiR/BB+
aB04D/404PletFilQJAO3e8K/tRn4YC+L30ufQyhwxg3poKUEF4XnveGg9f9
nR8nfZs+bon4297JrvUuNfPv+JXvvJfZb/4SJLhQ+D/h/Mb81XbGfuwDsHTQ
2T3twA6lBqbGX+vVgsW8Rq7huexQUkZice/XIZCnPn07cIYDXrfc8s7l6who
Sx6YoQIqzE89q1jxcxTkOEoPBV6jQocVop13u8cB4ND4kRhEhWsqbJmHGZOg
mXFv+/gbKsxxH8wuHJkGlDZxfYTHT7bd2CJjdBYc554MPop/174j94FJnweP
c/bUdAVSYaTeLfv9Pizw4911fy7bU+HDvAZ7Xe9FcEmTEvfbo1T46nqJn3Qu
B4z/xW3X5kqBeyX4E1pKqLCmKIrrox4FakQ2xB8q44QiV5U13LZRoExJ1SLt
Ri64mf/zoeDVFGifrLJ3FYMbXghm4W3losDNFzZeetlBgxWP18FGnB9Mojey
Ov7ggSFiaR+odJw/0tO+HrjKCwP175zvEKfAk+9y5wVGeOGqu2MNIvspsNrm
Jhhy5IeCbh8dIispkBYyXuc9ww/lbw5zqk1Q4MPmhtxxBzoUQj8LKgQ4IDxd
1MbO8ne8Vn5wUP31JB0McY/wc5mzQ0Mu3wYX+0rw503s8eVB7DDxqXb1pZph
4L5Fyez8Wiq8l5oXK/ntN0BsSou+n6ZC6UtrT5r1jQGh/M8vA92pMD7dpl6o
bQKITjx6Oh1FhV81xZdQB6bAEOtQrFYKFX5xqF56bWAGjP2GVUXvcdzeRzA8
lvwB3JTS9i34+uYXbJQ2HhbYHRJinoGfl3bo4LmBfZxQfPsuHfMDFMimlH/r
lxYX9GlSmw/YSIGlmiwqN4y44U/biddR/Hg8hh/wKRnSoPvGOTiK47lTUET7
qDkPXOdbpTOC4129VCjPV4EXZiQPXYjH45H2reuAYRLOt21eO28pUKB22eXT
3jn8sDP/8uAskwJZf/FGD++gw/S2gz8iKBzwhZn66rA8Oiy3HBYdWofrZcHe
JTLgbzzLPGoPjpl7gc+P1whvxfN9X491UeqXAmAhEazEsGOHs3MrnHQNPoOq
4uonSinssMzPsEYtYAgsscjhMh3hgCOBnCOBPiPg/RHfpT+3UeEGimLi2dej
YOyC0Pwiayq8fOVThG70ONDxUWug+lPhYG/xqpaQSSB9Pmr9n9dUeL1qu2T9
+2mgsJ+xKxvP97JezcP33s0CA50JLu53eL14zgz21/wB0e1zXTtC8PiNNkty
2bJAhRm/rjpHKryT86jb4fIiOOeuYe+lQ4WfDXarn3/OAb9xe8mKPaHAby/v
z56Mwf1aa+SQakSBRndD09ZHc8Kqc8Mpb3dSIEVs0fuyNC4oXtspcWQtBZa8
svT8nI/roWy5/R9uCvyRE2v7PpcGFXVGp/3w+Hh7RER8ruCBRfe1b6jzUaDI
pU03C8/yQqdsi+lmUQp8JHDaCXTyQuk1HJ2+EK8XIWUlihU/VJRUb2vD+5sa
duuXkz/54WJlrU77ETxekw7nuS7SYT7dVt6bzgFHC7uP7x6iw/c1xbc3i3DA
P/sV8obC3oMNposuF51lh3lsG3bmn6oAEjc9OQq92aHG9MPnH32GwUePg5TF
AjjfdwX/AOG/wQN49mo9jodP3mDVXNwYMDdQNvp9nwpf8KwNGnsxAdxm1l1U
iaDCGKubysHxU2Cd0fEePTy/PfME7NzezoBf+2trvfH8t8jzLTxVMAdkZgO2
luM4th6pUy5qnQepH89NlT6hQr2CrLQLGzih7JbI9dXqFChAd31YJMMFXX7X
6fBvosCw11sHfilzw7T2Ka3ny3D8Ot8bDqnQ4LH538VWOP9PWEXont3PA9WF
S2XbcH3omWryzBXjhXYPkyz3rKJA+WDdnw3hvDBrYrdbsywFJtnK6cS+5oc7
KQJpj9oosFj3kY2eFB3m3UZdwWw4P7gMfEhNpEM3j49Gqms5YECApvngkxhw
9y2H3zpjdug8dnh+p0AJiEzhP5fozA5d0fW1MSITYGue0b4VoVSonrAuIUt0
ChgIBysk4vnHqhaj+VZuBnC7fIvwxPMzsM7a9ZfSHAjXGfqph+fvCYtgrZYp
Lqj2SZZLAPdXqpBn3GSeG3Kkvkrtxt9jvTz63ONFPHCKgWha+HtXMnRk6Ut4
Iee4IWUUx4MrV2F552Pcf6nKpPhVHNBjLML8M8/f9SkHC8r6HLJBxK5fzIGL
7DDNuJi+b/UkSL9WNOgYS4WLZeuqbspNg8S8dCsK7p/gdtegM5tngXqHpkUR
3g8MDFU+ZnHC+Ybd05DBS4GjLLrFdx1pUP15F2sMns93SsLUd7nzwGFpt5hd
NAoUOxBr++gTHT5oe6wnhd9fImtjvtTiLvhIze2XwvnBzjTr2omifLC+8NUI
zZYddi+J2SfTWgM0Q5VFot+yw5UHJ7eN3xgCIhYH897/4oDv3k7xR14ZAe2z
F9cWylOhbtKaC+88RkG/5OG+dVZ4fj3fsGT/w3Gwn9fohagf/t3+iqLorUkw
tL7sfl8Cju9gS4ex3zTYOHtUIQp/37LLatkWnrNg8MubS/V4fDz9TZbavv0D
OkuXN9bi8bMueORyxZQFDgRMjU/ewfujXWaCHoaL4P5tpzJtdfH7NB3E7z3i
gMvGmE7a3jiftqhE+QVQobLBrlvbzlDg90tOylzPOOFVD3njOryfHa0N5mSL
5oL13wb709dR4K9gl5TNSdzQb+pU4Uscr7LzfddyX9OgT8E3ykMcz9i7Z+xm
s3hgnwLHM0ccb5OSbxXzBrzwZtD6aXMRCow8lJBf18gLdVWlpvV2U+Bpm1CF
Zef4YeKu+EdjH/D5J1f6gXQ3P67zu1UXD1Egcq3cGXCGjuvI1bRaPg6oOT7q
qddLhyK/D5UL4vxgy+5zyzY+CfxQcc8+bcoOB50u/zQ6UA5SbW4fK/dghyGJ
Iqy3bIdB4maLlbl8VJg35capfvc3MHW8aqGgTYVF5o3uhx+NgRWmPvyPXPD8
3mU33Xl3Aji3epuVh1Mh75yILtNtCriXaWaW4PlkyciS4veeAaI/UGwXzg8p
qo+2qrycA7YnucoXxVHhkI7S8UPZ88BLKyIqz4sKpeauGscs54QvOrQBDe/f
XrJc4H63hgvOU676MqQp8IlBlZqkNDc8zKgTi12Ox6Op4p6GDA0qW6bRs/F6
qV/RbWClwAMdwzRUzuP1ZPtbaaJWiBcG7JewWbMSr69RfpXlwbzwRSvf2ZVb
KJBR6nssJZIf3q/Z8ai0Ge9HaAdOPRGhw2S1zQ+cWTngV7w1gVF06NE1Paq6
hgPeEaQwR8IiQAT1sOQZI3aYbOP3rmlJMXh1llt0zx126PSz8u7TxRNg5xio
vPAcf+/O8hJW1inwwNP0c9NbKuwwV1+yg38GbGU76ZOI52e3rsVErcAcKDPI
yjVIpMI9KxTiBPq4oGUn/1FtQQo8liUulDvIDRkDY3P6uL5roh6LZ0M0eHDD
cn9u/L0H31+QOzbNA5OLe1fN4P1Uhbprn+U9Oqye7rmgtpIDRi5a62p5PxMo
+s7c+GHBDt89Xn1NdnYCHBi2KVbF+fkScuwr4JkG6Oci0xQ8PhO6Ulo/uWfB
kmcCO9Rxfm9+eb571xVuWPhxfDQH16/VU5d/tlyiwVBXHYEyPH9PW3dq7rfn
gR6vDB29cf3r/DqltryUDr96+Y0+X88B/eH4m99PAsDD9YlrL+J84Kon9Mc3
bxKse7/+FCvenwYlPLXVqJsG6/JKf33A8XgZf8LiWg03lHDO+2aOn8dFt7gS
V43zz5M8rnf4ffsuSPo629Kh3ZyrrdJyDhjs9WWl6CQdlvrfkRDF8/vx/QaW
KwGpwKFQ3f7EOXa4u/3Teu3KKaB7+aRsG/6epBDb3D/VM6DgpKGMHP7eC30h
2/2O0GD36vu3N/2Tb4tMdfRO8sDHHeE7z+B4G/wOGZRKo0Odbb1vN+L90Ltl
z/p/OiSA8aWG9zhM8H5/9XUv2/1T4G3RMRtrfP7fILY4cMOxGSDuE/rKFH8P
W8XkJzYeGpTanhl+Hc9HX8tzps78PPDNpGncS/y+4DDJZLnj0yCnwbVdA1+v
spzJbNCYBbxbi9fI4fVTRdnzUtSDBu8VG3L64O8/n3HyxXwDHbJYvHALxvm2
wP5NpITFFbDo87UwJRxfj/XG1aLK+SAjpTom1ZodNroPiAeF1ADb1RZZ5xLZ
YX74/h9HLIbAGp+vbad+ckDebOuIOKMRcHWtv32MLBUOL+EvrXccBe/7jJTi
LKnwfFKNYvaNcfBs6yM/qadUyAX3qR64OAk8moS59HC+3csikx15fxrsfmu1
6Rnuf5Zs4VWD27Ng0jUpSxHHI1DwqU/Kiz/A/EZJfvALKuSPZcqE67PAZ+li
ayn4fDo+rZW6TGcRNIuNpnXq4fVyYKUfnwsH9Dyirdfvg9f/zeCb73FeSHH8
033TlAJfd9nMO3twQskdKhJ9KhR4Mf57engoF7x4tzzEZj0FsqzwLDWI44bp
J05dGMX5Nj3b/cbeSBp81fB7+j6On8LN/Fa+9zyQJbpHdxXOt3d/F15dq8sL
3ZctOposTIGyXbWM0C+8cOjinOEe/PzR1dXygmf4YbWro4ZTIQW+Wslpr8bg
h/trQr8VDVDgWs2xyNOGdHj63vCOfl4OOMtzW9q8G89HkJ+/FM9HaQugv/Xt
O7BUZ2pPBj7fUwB9nwwqA9psVr5Nj/D+md06tdZ0GKyifV/1jAef75awhGhd
/g3GTUwmT2tRoWFO5XdrhzGQsbq14KgzFT47tm6TrvUEGNdKYqXifFtUNHFu
qf0UaPSDEjfwfNEf5lp6ymkGWJ7Khf/Ud/2lS/u3eM6BYFYH1iCcb6ebLrY/
jp8Hxo2OuaneVEh/XrO1hJsTJnp72ckdpUCzG/o1G5ZzwXMB9j8/4vM021bB
3yWi3HDj3TccW/H5vEKn3t9BnAbT6wyav+H5W3zpvuHIJh5YnaWeuAXPbyVr
i4S2lbzwCZtXkBc+n3sJD33b6s8LLY9q9+7E53172w9Hs8L4YUXqUPjZJgoM
uLDhcMxaOiw4ENBwZREHVGi0YF0aTod85pHHs/B5fLjF7KVdfDhQGN3lyo/z
bcWWHRxxt4vAGQmr8UBHdnh7kf07jtFxwD9XEfskGNdr1hdfxIcnAevrA1wX
cb6ttg9l3GadAUpZp1dn4Hg8Wt39tnjJHLgWHnCpAefbjAEnnRQGF5w5e6F+
FOdbs23yW35+54ZWGiIywXj971728KJgLw1+88hXG8bz58vrsqDzIzxQbHXv
Y2ecbyXob4/L3aVD4Qid649XcEAj00ozafcM8JPzlv04Pm8mhpdERfdPgKcc
47/Doqlw/cNjE9/+TIEVAwcd7+P803PBcZPsnxlAUwxqccf5SevGe++m89xw
0yb/qi34vCdzzeEPxzkavKa2rLwVv1+92Fmr4goPpNzmLcOHSghDRZKaC/H8
uyCReAjn29sf3kpOhD0FtUF/6g7ifLBTeJgzPXESFFqEHHDB3+uW8+2Iz4dp
8OWs2+4CHI9kcZNbEWXcUPU2W2MSft6MOcVGpoQGCwVRRxh+X4Ss9qzaZTrU
uLFzifkyDngg7nSa7CgdfnzPP78Jz+993x50bAlJAX7hr+0emrHDkahImevZ
+DysFeoair8nLLEoUBXNgHIOjSBT/L2O52IPF+6nwWX+kVAdzx/KqsWn2o/w
wDsqCk/X4HhnZRXrDSXh82hU/HgG3o+L1Q/HWd2PA3oRLBJeeD/u33U41F9h
CtwLya/nxfllmaLO1Yt7ZoBXUeI+B/w9K9TYuuTZaZAz0/X0azwfnfOXmC2l
8sCc2p7t1/H7NC3+IJ2902D0x7FAaXy9tLhCnpDKLNDe/EfLEa8fxn2N5GP3
abCS3SgiGH9/8d27lOI6vL8td9t3Hudbf9/9u2efPAR7NFzWS+L4nmt3Z1sd
OQ2a+au6kvDzmvgO2Sml0uD0r9VGHvj+8NZLw+r9dJjAT8vaiOPl+MniaNXL
GfDqU2pjNo5HhCGyXruNBtMeBXM9xf2j6iWI2QREgc9Jcp1ZeL4PnZySHBWe
AVL3xfNe4ucbX1Qz552iQatbgjKb8fUZEzEtoeunQX2O6WkGfh7l9tnGRDsa
VEg5L5mG3+9C+9x69CMdnnyyprMHz493ucoKQw7PwZrIsh5/3P/44D0B7F3T
QEkkUv2f+iuUV2ol1kCDEeIbXQrx/b+uadxaPkuHmbG3uvlx/09a+Yid16FB
Z0OT2zT8/m30pByGyQzgfF2PDuD7expPRHKbTQOH9Hd7L/xTDzwUPcae4vEO
M9n1CD+PMrxZYWcrHa4N3c5ViuOZTpFcZ2VhDHzuOk6p4v7IzZuOCQwhwDSJ
+caF61etOn9gtWMNyLA++OHAa3bop9n/4abJELip2J4v8YMD5sPXltInR8Ac
363gwC1UuFuWa7zPbhQUHQu83n+RCs2UxTXHr4yDsLdCKa99cf8iZA43nZkE
/rzH9vHg+pVFaZAodZwG7vON3Y9xf7n5WWq+2M2ChOwqdjM8v0JOSzfo+P8B
H8M1vOZw/TJ9TluSdZIF+vwsbPDE9StVv5S1SWsRlOJAZgH6ON/u+17ReJsD
vlnEN5TpS4F+ZWVdhY+p8FoY13GhsxRIe/mDoezGCaWZrpRreD8vLkDztA7i
gv2Xdj78hOsX9Sv9s20UN7wVPpezjgev/x69SbYwGvyo81TmAY7f9Nigt9Bb
Hmis5lnWi3+nPZIr23ySF65ICryii+vX+NueIZdaXvgL/GBPw+cRaNMjt8aY
H17KCLUqLqBAQTUHm+Pt/HBghVuTGK5fVUkc+sCADvccKFt+A9evWqE9M1ZM
OpwdkxWcxuPjFuhf/lTuHQB3N/RewPVr2YtzQ8tvlQH5Wbuebnd8fksR8Pqj
Pww+rz/YfJdGhZWPdpnVnfsNWuvdoq8cpcL4nhKB+7ZjIIavQiYJx8uv1U71
qcUEcLKOnIoNo8IXEsxLgVemAOcdccYRvP4+T6VevWk/A0x3U06twuOR+F31
YNyDOcBWbqjXhevX/Go2sc2v5kHqqiNKsj54vv/4E/qVgxNqLw5q+IDrV4l8
XRKDlws2JllF7cX1Br2A5c/WccOhW+uCb+L69YV+OsxHhAYr3iju/+fvycoB
J9pTNvLAWPWBl8txvgiRcVrSJcAL/ZPepR/C9WtthtFOVT9eKEzbzl+F62FR
aYtm7gt+uPrB0XVJjRTIG+CnmiJEh5Gm28u+sXDArl2303tf0KGCrDX/VVy/
EpTpdxTfhgHu71Fmg3h+13s+TvXeUQTU1s1cKLvFDh09qsr29Y+DkbQx5bW4
fu0979aS0TsJlj+bjpDF9Wu/s5pm2PQ0iL5xWCwHx6NtVpgLzM2Cj/1co3S8
f76qH7PpXisXHOnOlD+wmgIvj6YrsXZzQ77D38uycD5N233qZ2sXDW4c19Pv
xvMnWHLyiM0AD/S5M1+9H9evxusfKMtu0+Hi2IraTbh+ZfuKfvHgzACU6wO8
Trh+vZYWyuvsngBbPBMVNXH9mv6x68+N8SkgXmTHa4nzjaHthiDt8RngBkIz
Y3C+5+pqOh9ryg2D9z04fRHXL6WtLBThMzQYsvWydC9+f+Hgsc8eljxQ5GBY
9EpcbwZZtp/PzadDrUnFT2twfhq6z/XdPt4HOFj9eqCM47XsQQv/oahJMFm2
OR3i+jVf5Jn9PnsazEUXxOTheOR0f7ufVcQNw0Mjaxvw82x9G4eHCmjw8OjJ
+//kb22/80mSl+hw01WhA7N0Drg2bf2D7SN02GfDG/vP38vCl7dpeq9NAboX
JN+J4fpVyeGlSHk/BXiCrBQd8fesSLNaej59BlwYNBZywN/rKipzomkPDb5M
pG86jeePk2pdQ9ghHljw/PjULJ4/F9Y20+re0uHr8qVL7uL61b4tzE3GPRZI
2N5efBLXL+sDipES0lNgqjPfteMdFT5W+cPw2DEDDBJKWu/j71nP9qj/0GIa
NO5ngDL8vMkfX7vLlvDAhuD9Wab4fRKVvSXfd0yDyuG0eUF8fYRM2yagOAuO
i2nkh+H182NvbbaFEw2ut1By+Kd+23U9zY35TIc2okf3HsLr2XH5fMZ82D2w
f1r/sQSOb2uPvK1KyDQQ8Vw9kYCfp6W8amz6HQ2OCvkedsf32/fJ5mv/oENF
v8kNIjheow18uYMBuH4dD9pYg+PxevV+B0V5PL+OSWRE4/4VZeotlg+JBMzq
PZEeuH5ZGL8KEBCcAX1zBbwx+Pn1fgK9taM0+NiadUoIX+9r4MvcsnIaJL+1
b63Az+Pf1ddZZE2DU+KCpXn4/fK233zky/F+Q7bsVCGeH6J3g4Zt7geBIYPk
ZXdx/0UifrBJtUwDoU8FS4vw8/16AwZ6ammwZsK0PQPfX+TCe1homg6jPtwf
W437b7JphcztYzR4WXpp1D/vf7NaX2qx3gwITJUJ0sH35yuDhJcG02D6VLqH
AW4XHc5+xuVNgzdOnjr8BD8v/cTePqFmHM9Vy4uScDyfbus+ze15A3xR+XNA
Fvfn48T9Iy4e0yCStul5KL4f+mSO343F4/GGGvRP/t6wONPQpIcOy9Xjo/lw
f5RupeW/j3oFpNXdrirheJ20HrU1oM4A1oqX4D2+Xyx9dHTEggZfcCxZUYvv
p7Iev3Qt4BkYLGKl6OL38aYoMy5/nAbPO+1Y/qnf91WUhiwraLAqQoE7Fl9v
HRL4XXIcn1+XrXGSwO8LkX695OChGXAkub3lMr7ejm1Z5ofD0+Cjc912lX/G
p6QkdqcbDZaInrvzDN8vIGR5nPmVDllXcRg64+99y+PxYdLhMTid1x4rjd8/
8JXhP5kwDZx4I6fT8P2m3+1/X8ukQcoDT1VvfH/Fp1iR/QN0eKWB4fLPfvGm
plbOZ8kZ8PN5SVAAvv5PXlu1vz0er1OaKm/w9cqzHdcv24SCsIgYnyT8/K2+
gZLffkwD9rm3Of/sVwUuuL2m/aFD7qbEEXb8vHfVb13aA2iw/OPD9n/+nqb7
ZNXdU+10GHel2rAZ95fwB4Irsl7Oz08Awh84lLVsi7syAgh/wMY8Z5extQ8Q
/sDovswOhah2QPgD+qvMNZ+/fQSEPzDZf3i94Zb7iPAHPpoOBfcvlCLCHwSZ
p+QWan9FhD84LePP4nGxFRH+oJErs3jJYwYi/IEbx6DOJkEmIvzBa4GORca5
TET4A+9e+e01KUxE+IOSZXKPzDiZiPAHdfQMh6gRBiL8QVxBrPumt+2I8AcJ
Vi8/jjCaEeEPKNoCvtbd9YjwBxrPl7r47qhFhD+48yXhyvUjHxHhD5IzxM7J
rC1AhD9oY6l0m1/xGhH+wPqdsdCJSF9A+AP5xHu+/o4ZgPAHx/JB+BbhYkD4
AytF/X0CJ6sA4Q9SVt3mWpZTCwh/kGf2mnKcVg8If6Bv/jZO9U8jIPzBCKpv
7WNvAYQ/8Lu6t/40Sysg/IHVIMvM8toWQPgD+Ybwlwy1ZkD4g6h1Bx2s9zUA
wh+oiH8Ra+GtBYQ/sPjy5k3n6RJA+ANZq5SwT+efAsIfjJjAUfGnxYjwB6Dz
PPWgbRMi/MFa/ruS4m49iPAHLP/+R/gD0ib8AWkT/oC0CX9A2oQ/IG3CH5A2
4Q9Im/AHpE34A9Im/IHSrwA3a6UxsHRCaIBNsRVsG9iaZD/4Fei9fjsvKsUE
05vjeIXXZwKWuzZbh0APSOe7qHe6KhNd/32c/7vBDyDosl3kTV0Nus8mMbYx
cAAUP0mXsBFvQoRXGN0s8nPxdDsivMIKi7o9j2w6EeEVqMYZ+vR7TER4hb5F
T9fdqGQiwivQphWNu2yZiPAKlBnvKTWPTkR4BRYbVg9TOQYivMIhbp7ttU2t
iPAHNIfw9IJrXwDhD/YvL4seedEACH/gc3uYjV24GRD+IDmXIp4Y0QIIf2Dc
dLmeJtAKCH/QT5FRubOzBRD+wPeYEKfxZCMg/MGmdBmviMEv4OKTwA9/nvHB
AcWE3pkPVWC9+rL22ZX88M78s9OJm7MA4RME03LsyguSEOETaryO+v3O/owI
nyCk3PDHyagTET6BjB/hE0ib8AmkTfgE+3tGr7aGjgMxVblTJ/c2A7EYzQN/
tjaDjl9fXONXd4I9WccfBlOKgPgJS997qt/AiaxvylF9r9Gy7l5V3cN9oBSw
RrMnVSITTklt/8e/wO77XK96NBsQ4RmE88Pl2QraEOEZoMEde5mlnYjwDBei
7qrEnmAiwjPorfPX+lXORIRnKF1h/LgikIkIz3BBa+Pt4586EeEZZBr49x56
xkCEZ8hp9KRrlrchwidcK+je9imkDhA+QZ1NZJ9Naz0gfAKMurcmx78JED7B
NuJm2SHDFkD4BJWtRQr9y1sB4RO2HY3QMffB+eVfPuGE60dmZ0ITIHxCr/m8
Hc+meqDW/8nY5zofnNSvP+biXgMucr9U+DnOB8O3s+dUdhcAwi/U6O/geX4j
EBF+obh9Mc/Gk5WI8AvNOqO03Ik2RPgFMn4yH6xsJ53+tp2SkYe3/9/xbWRF
jGtWP4GZ2kaVTvE6FDcnHpgZOYjPX0KTtOZmRPiGX1vzNtM5GYjwDamWrh/d
qjoR4RuCZDZ6NEQxEeEb3jpG+BgVMxHhG3btP3g3UJWJCN/QwXl23fO9nYjw
Cp2DPHukdRoB4RXyj1yVNwhpBoRXECl6K3GyuQUQXkEgruZl6XwLILyCnUZo
vV9lMyC8wsXlvGXOmxpxfdg3Z6fIBw9v8BKI8qkDXjJnNl5K5YNdHz8OhMtX
gHo394e0XfwwJCaEmYreAsIv2E+CPVuZXYjwCyReowaMuubWv/EjPINSG3fA
qOYE2Hohm3P+YBNwqcmNWmPeCl55mldY+THANcu3lqd/lIKs3b17jhR3A+XH
obsn14ejs6fft3oX9ILoA7Nud1dUoGrPOKcjS36Bm6bHbWx16hHhHyw47yc4
rWpDhH9AvdeeBVcwEOEfWlly0keUmIjwD0XK8Z39RUxE+IctR3qf8MUyEeEf
lq0O0Ngz0IkI//CS7ZTxpyIGIvyDDU9T2C2VdkR4hpO7ryw/u7kOEJ7Bj+rM
//F6PSA8Q2O66c4dGk2A8Ax8qpH9tgotgPAMFvlbLhdytwLCMzyovgOvpbQA
wjM853/hZDbbBAjP0JA9F1CVXQ9Snv9MbD7PB/UfxHeKHfsMvC53GzO/8cEk
o/H4s5uKAOEdYGq21YvQM4jwDufDO7cv6itDhHegLyn5Kp3YggjvUKmZ2eFX
8x0Ft6QXt175O75ibhPTc/f/ju/GW+4333T/AKejQ4yUWWuRgHNMifXaQSB/
WDU2ma0ZER6CJtreG/24Ay3wEN5P+S+HdyLCQ0iO1MR1PWMiwkPctDlFWVXB
RISHkAdZsaanmYjwEMJvzI8Ai05E+Ial4fssY2YaAOEb6udbc0NMmgHhG+LV
DKc4CloA4RuuhsZeLMPxJnxDSUctvLa0BRC+YVvYWhXJZ40g5zbzdqgYH9y1
wXrZr31fwGyb47XUKD4YTG0tzFxcCWb6qpOXSPHDy6d9V55fkwoI7zB+U/Do
hhAmEpM4e8tsy9/4Bcit3Hvw49/4Takcv3xp1W+w0a6C/kmlExmc9c2V3TQG
VFTMj+tZMRHhIaz5V766hOs14SGenLNX5HzIRIR34H099f59WxMgvMOXjpfb
dF1aAOEd3LO5mrNWtgLCOwBj9YoKixYgtXivfJULLzy66Y76bp0mQHgH0r+l
bszzdMlRoKOmvDJnDK+HVUfaKyTGwaLQQ3tnk5mI8A8vjQWEVfOYiPAMhi6V
lTcHWwDhGXbInDzQ/7MFpNGNfpnv44Vq02ElBR64Tv7LNzRllCp9lv2GjrnG
nrMa+Bsfwjt4mmpc9YuZADsdWc4fr2wELunXU6rutwG2DtlLn7QYYP6celJD
dzlgS4leJe/aDXp/WL8VgP7oUeBKyc23e8GnBBkm/4cydL+mb4VkYT9Qezur
o/r1KyJ8RN75V9Fjha2I8BEPbp8XPZbAQISPKPZ2XTUiyUSEj3B46XjOvoCJ
CB9ht4N3qPANHo9/+QjbtrlprrlORPiITxdvqg23MNACH0GTfBd5vR0R3mHT
Ia4/46O1gPAOdgX63d/31gPCOySvU9+TsKEJEN7h2daDhyPWtgDCO3h5+kim
srcCwjvUVXoFDH9oAYR3WHLSJOuMSDMgvEOOg43C+kUN4OLVqRPzRnxw/ZZt
b2eSPgORdQ/HDNv4oJzdxChSKwaEh/CWuFK5ytAZEB7CKMe/TnZXKSI8BKXR
+Fb5k2ZEeIhjj6LUzDZ9RzXfTw9qmv+dT+O29GQFx7/jq5k+UHw47AdYUR6R
tvXSZ1RV+N1Qo2UAxCuFDb/1b0KEl9DwbxTMVu1AhJdI7y6WH3fvRISXqOvV
7m7wYCLCS9zPnDH1+8hEhJe43DS18Zc5ExFegllqa37DoRMR/mEUHHJJqmoA
hH+QGuffrL4H18t/+YceK+2NrcktgPAPQ1eSfobxtwLCP2StcpiRF8br7V/+
YT5JKtq7tBHUv5PLkxPig9c52Rx1n38B71MfCTWH4nyd0mg2/K0SeAbbHHQW
5ocXk6PPbkhIB4SHePPk2PGDs53ojsHVtLsb/8bPQkhh6k7h3/hlnNjjdWNi
BDicT9V2FOlEnly3bt7mHANmm1Y5mZxhIsJLRGXK6TrieBBeYmT59X4lbyYi
PERkU0lHfFYTIDwEReHBVXXrFkB4iBXvcpksOH8QHuKSzTHqp9stwMJw9h71
Fi9M2cXL0HFuAj0SKa/62f/2t+hFzcO17KNgRuus/kZmJ5ouVAxewTEO2haL
ThW+ZiLCS1TkGDmJFDIR4R96b0l5XP7WAgj/kHzc8HDAeAvYy52rc1uZF/a1
0fUsE5sB4SH+PHKssXLrRiI2RUKR3/7GZ8RIY1igchT8yRLskDnARHaqN/de
Kh4HVdpli/JKcX79l5eo3q4skBfGRISHuKt3Ejnh8bUP+lYb3cwD011YXoTi
8wrhIbw9dKg5N3qR0XJ2/qTyMeDNdviE0gsmiuwq3c6RNwEm9eaeLS1jIsI/
jPlQIrZWtwDCPwROZ2o74/Xq8XR9btaeCTD6Wywd4fxO+IXVFSwSAjje/tZm
IncOjoP3AZPcDzLw/n3rleRTOyfBWK0ux+dMJiL8wnTFue92ky0gTMjkoFww
D3Qe2+ZW2NECnJ57vNk28TcehGcwHVRf9rluAuQtEX0696QRSIwZRcQvawcK
D5ersGxhgESbOw/vdVeA2IEHDyLPdwMlafXSTFlv9GKb+tEZ/V6wT9D8yJBA
GTIZdu/yD+sHe1yHTI/4fUWEf/DUWFQ169+KCP/g9aGlUv05AxH+od//ZMBG
ESYi/MMhKd0LTgjH/1/+wWm5w/b2JCYi/MOou7rRATYmIvxDfKqGvN53BiL8
Q1dGmfesbzsiPIOLyZe9fo21gPAMsaOcTu8l6gHhGexUq+35+ZsA4RkUKTzh
Z+ktgPAMnbf8ReXZWgHhGWj9er4yH1sA4Rlaj3J9qFFoBoRnEIpp0KeINgA1
Y6dYPgM+mLaeUzC+8zOwvKGbv7qJDx56tMvyRm0xILyDd6xHXs06D0B4B6PO
9oar50sQ4R16AproT+abEOEdDvfFST5s6kE/rbawUc7+XV9GFuHcNTf+jq+p
jnD/yjs/QNG92WS4/jOK7XoomZU5APytvHc1GjUhwkPcNGgXWLWuAxEeQu/h
WGP77U5EeIizt8NrudyYiPAQsjl2v1bi+Ul4iLmdN3864P0J4SHOh67UvXSv
ExG+YaPTc1bLtAZA+Ab1qpdKB+SaAeEbkh8LhZoltADCN0y/H/l9f1krIHzD
NUvH1KUyLYDwDQX3pgulGI3A9LBe+8wKPvgnW7emoPgL8Azns+4P4oNNYxKl
t3SqQMPIXjpYww/9xdlTqn9lAMI7qP7KAyKJnWjTtZnjT0T/xu8zX+EJwby/
8VthkrHuds8IqDO91G23rBNtPHOlIWJmFNDQTXMhAyYiPMSXkDdFZXh/SngI
YY8go2d+TER4h8utTtSa2CZAeIecIiqt73wLILxD8fyTCOEVrYDwDqey90WX
PmwBDx81SUve4IX8Ylprq/B5+uleZTi9+L/sv+MPrBQb/w3Wvj+Apho60dMV
UpMqU2PAwtIj/GwcExEewuj68ZHaD0xE+IY8gzfVixktgPANzbOLHxnNtADK
o34ONyVeGHUtuGtLbjMgvIPRvE82p2I3enxe2x50/o2Px3t4VCVnFJw/agYk
IRPZ6IldZaaOg4Hbj4sulDAR4SGmnB+N3opkIsI7JGwNf6/O2wrYnu7blVPL
A+d999EUX7cAwjtYqyid6RPtRZMXZq40ZI4Ba9uuUrFgJgqfsrW4+2YCbJgs
CBIpZyLCN6Tz/HBBpbj///IN0teyhmuprcA97uMvWfkJMAWTs+LwfCV8wsff
d5/54Xy6pVjXKVJpHKxeYhNan8pEmYcEu6qkJoH4GuWlQjlMRPgEt3PiXqtG
8fyzYTmc5sMD14SfcGLvaQG93oLU2pG/8bB84PCl2n8cmL0o3XgAx5vwCTVa
A5bfcH8In7BpnTNr3u3v6PmG8nJLrwngPrMoqQ/Pn55CVf1eZR54d9dPFVMc
n3tfhY+uoU+Ad9TDyhTcf8Ij/EjUsnPH/T9zeY/y8MpxsI29tHTsLRO9v2a9
L4tzErwtPSyuls9EVqv3HMl34oFnwoyNbYZbwI3N1XzjX8ZBb9D7ij5cjwh/
oLtj07IzeL0R/qBFv96Iu7IXxVQJsT+tmgC/NbM3F+PxlLxSePyLEQ/clkfh
rlvcCrxuX/PYd2wCRF+3LXuD+xchUGwyK8gD7ahv+AGezyui/2g/n/kbH8If
XBYy3/SjbwI4HU6Jq73cCGqbZfuaTrcDjZaHUSvXMsBi//HxMbOPYPrxtey2
k92g5vm9/V8PP0KxD8xMmYd6QbNE/duz+aWoepF+eZVXP+Clf0gIvvoVEV7h
ZEbZhTqnVkR4BVuXVKbsUwYivIKCRm/SlrVMRHgFF/W1PXb4vEJ4hemzRman
3+P68i+vYCq68UUTOxMRXmG9sWE16y8GIrzCsuUtW1aFtyPCH+xX1a87VVEL
CH9QuAkUuK2uB4Q/WMlNqZSjNAHCHyQJNs8mcrcAwh9oWC3PO8baCgh/sKnu
wMhrvF8g/MGklIZ3t0ozIPwBy/2HppVbG4DCV9VaQT2c//rW7NOe+gy8RQui
puv5YGiUgVD9ihJA+AT7Tep1cTnegPAJ1d0Pb72cLUaET5C4y5/6MaMJET5B
jHeFTOm7HjT5LtCz2+Rv/uE/a5Edeu3v+F6K3Dk/f+kHaK/VPcM5XYMERk/x
DMcOAN/5XRFpe5sQ4Rd2RPT9COHqQIRfQOohSjk3OhHhFy65lvY8e8BEhF+4
vSv0iwaeX4Rf0KyTqdtqzUSEX5jM8hprfdiJCI8wwKlATY1vAIRHkD+gHiYj
2QwIj9Bjv6fJO6YFEB5hKGhQWGd5KyA8gnRS1+QRhRZAeIQw1/bgY/14X7TC
aoCxnA/u13MP/tD8BTiu+Bo0FsAHdb3e8rR5VIHZFwmTa1bzw+QdeVIrPDMB
4RPmDU1oBQ86EasLEvET/hs/Vy531t7s/3K+/fb7+3zbCEDNIT563J3I7vGF
pem/R4H/mkW6vadwvvuXX5BfWcZhgvMF4Rcung3rTPFnIsInmO0tkK162QQI
nxBjEb9I2BSft//lE2RMdsf7CLQCwiekO5b6vfJoAQLCB52VrvFCVaW15WfD
m8DFoyw8i1j/9vfLlnuM6F+/QYj84vSy2k7E2CO28djwGPD41CkXEcNEhF94
wqlnHFrERIRH+HkyT1uxrQUQHkFjgKf2xVwLsDzIZvZkG67nfAqHBoqaAeET
tmeWnfDk7EbwzCpx7o7/8vfXtp13tFJGwWqFH6v9lJnIuvvm4zVv8Pqd6774
rpiJCL9w+V5rlXo0ExE+IXPoqDcfTyuo4LEbLKnmgQmnL1NM3uHx/ZdPWL8k
9+yW6e9on9/Yix9JY2AuwGSAI5CJwu6XOWVFT4BXq/JcX+F6Q3gEq1v63y4V
4f30vzzCplX9UnpcrcBNQXjpJakJ4Ptqepk3nq+EJ5DPnUxJxvnacVD7bbrs
OKhDjkOXU/D+4MuVGYroJFDTEqUr5DIR4QlMXssp1uJ8vTSkpsL+CQ88afi1
c0lfCwh53Jn+cuhvPC7y1vRzeOF6O1/8wwyflxZ4gl3T8ac48HnlX56gRsjX
zfnEdxT8bi0z+uEE8Err/KiKz39Gv+gt8Uo80HLN7WEPvlbgYnLDXJdzAtAm
VqqU4t8JPwBWr+HQwv1/E7jLko1vHKixqQ2cecNEySwlp8cWT4Krec95dxYw
Ufd+vmoXRx74RvesPC+ul9czRKXkqsZBl9H7YV1cbwgvsHu3jdsteisgvADX
z976L+G9KFrXdl118QQ4qH7m8UV8HgsL8v3ir88DRd0+VKYuaQWelI+Rdw9N
AP3n6wVzcHwF9zzrzBPggZ+F9mal4npTGVbMcmHqb3z8S8r519hPgKFUResW
/D2ae1Nat8jywCmzB8ov8PvvXBcJrJ4ZB8+GrzzciH8v6UvrO9VPg/3jE7wh
+Hm21dX6MbnjwJuzfHQl7g/R+zv23C+zxvEiev+PU0G9hUd60avLa7T2pU2A
bEWHA0H4ex+tvf51bMcEKJYwCcrE/aX6K3ap0njgA+uPliY4niHBV5NkAyZA
meL1la54Pd8/XLmNKTgBDqf0GgB8fS+43nNkjgbFz3otS8TXRz6d6D/TQoNP
VzVoy+F8RfR5h+cxyefGe5H3yDo7Dr0JYKK8oywA3y/dP9qxYx0P1MsyFk7G
6900YXtU1dzf+BC9Hv/v8eAE6Tyi1we6xrEMuNxb0OtLROw9A1WiF/T6pqTa
xQ5y6Qt6/fdnQQbjCYULev224aCai+MVgOj1yykelfnGnwHR6x8JOn5ARl8B
0et3CzUsy+hsBESvtzYzvhAc2wKIXl9qeqfhKaUdEL2ed1Ks4X1gByB6feuj
BKOXgAGIXp8Zt3JsqSkDEL3+1RFfsTOyDED0+palVU55RzoA0etVXT5M+kS3
AaLXOwQP/nqIz/dEr88yiqGpL20CRK+Pyi4LYNlbD4heXyfctyRgvhYQvV6h
6nqPluonQPT69ckdN8dbyhb0+u0mm13vTRUs6PVxHD/7XR+nL+j1ok9s3tCV
Yxf0+neUjmGDe5YLen2+fohrWmAYIno9bVb7cdftd4jo9ZHHN+XNeqYhotcP
lX6Q79DOQkSv9xri3BO+NwcRvf5Mao+pp0AOInq9UtIaj3KpLET0ev44By3P
c2mI6PVsP+Qd8mOTENHrmzeb194OiUFEr58Yvci4Xh60oNczdoxscEx2XtDr
tx9qHCw/npX3/4tez2L45cmjnacB8QvoSna5QrMPBMQvwO2gyH6vkncLen7z
YgG7gzx5gOjxKcLTFRM6zYDo8UpKa5kCg62A6PHbtMdMt39rB0SPN/65LWYV
LwMQPb4wTmHC7DQDED2euSI3v0mbAYge72Nv2/HnZwcgevzsEc1VQh7tgPgH
sI/fEL+UjOv9v/4BmuJrVrOZNgOi11v8VGro2uKFiF4fWFbtMKAah4henxIy
fEa97D0iej2SP1Cj+ToDEb0+wT155r1vNiJ6/cqLq9InzHMQ0etzD1zm8NDJ
RkSvP+k4JDNyMwMRvf7VkfjTPhtSENHny85NcG5c82pBn5fjZLfv9fJe0OdF
96yGA9Hn/5/1eRalh70hnByA+AfIsq+dUjjrDYh/QJn3yj+NbxIW9Pt8LRfW
N95ZgOjvXyITr3bi/RXR3zWclU9oHGsFRH/PqG/K+nOrHRD93WGX6SGHzg5A
9HdRoQLJX1oMQPT3Li2F6A48vkR/b2SVutS4nAGI/m7WaCHpNtwOiJ9AuxCc
nNzSBoifgN6G+VDFpS1gwT/gQqPnoXl7RPT5lwH68ku4ohDR52XDj6zeszUZ
EX3+qt9SduXX6Yjo84xjTq1f2LIR0ee79Vp3c5jlIKLP7zr/7kjah2xE9Pmx
zPAybeNMRPT5+xlvHspppiKix9e/lzeMbohc0OMT3307kMz2bEGPn4cD/qbj
1/6v9XjiN8C70V7ruZgdIH4D1rRyj2+DYYDo8euutwlGLW4BRI9f71ZonOTc
Boger8nqOCy2rwMQPV5gu0C8lRQDED3e2uuMJh3XE6LHb/+t4Ll0HwMQv4FH
OxyG+8M7APEbeO5Nv5a+ph0Qvf5proxkJUhERK+P3hq8x1Q5FRG93q0giqPe
MxMRvX5uZbKv92w2Inq9tEZSoJRmDiJ6vVerjkNfZRYien3MzbmPWbfSEfEb
cJu+lujX+wIRvwF//+ejOhNuiOj1hZyVd1lmNf+P9XoW2vYfXJclEPEfENgt
IFvxwR0Q/4HGe+uKW77HLuj5SlciKptaMwDR4x0Tpu+U72kCRI+fTl5npP6n
BRA9Pv1UYNUT1XZA9PhXfei4bl4HIHp8bPJg6qJDDED0+GBLmhivCQMQPd6N
TbC0TJQBiB4fr1J9pXp9ByB+BO6SizZKXGoDxI/g2Bb/s/k6LYDo9SaWoq/e
bjyFiF5/6ITkvsymV4jo9V7Ox+p8Tichotd79wnwaAunI6LXs+aO5p1+l4WI
Xu8aY7BO+lQOInq9s86GkcChbET0+twVKQYeZZmI6PVdTsxM8dZURPR5Odl7
v7fviF7Q5z2/G+uuMApY0Oe3TFmJquk7LujzyqnHRhPZ14D/pM8Tv4Ia4TNf
ypMvAOJXwKWhO+K+OBQs6PPtzxMZic2A6POeYfxHqne0AaLPj6/a2TO5vAMQ
ff6FWGxO9xoGIPp8XWSi7agxAxB9Pv26UwJFgwGIX8FOpy0FKmUdgPgVJPOU
HKScbAdEvz/0/YpVzqEERPT7hkOyendcUxDR73U9N7YaCWciot+zrhicW1eZ
jYh+7/9eObnOKAcR/X7LzTdMh2XZiOj3mnoKEr/n0hHxK3BgpQ1yloQh4leg
E8K2TWvYAxH9vq7mwvzS1NP/Ub8nfgZwNvC4s48aWPAzuN6EDuzxA0S/Lwzn
tuBaxABEv0+SkV1+9hQDED8Dkdffb93QZQDiZ6BGvzn9dCljQc+veiH0I2lL
BiJ6/qrbo5VqWtmI6PmTzdmibhdyENHzJ+/oB/3xykbEzyBpGRDV32+N/ru+
T/wMWK4GKAQyHQHR86m5DoqvFRmA+BnIyv2x+4DzIfEzkHty8PzHnQxA9P4Z
/knNxNFMRPT+Xw31r7jFcP76V+9/YrJbintbDiJ6v1OVsLvx1e3/o97PYs7j
Ob5dFBF/g8Ii18cvHrkC4m8QckaOg9MrZoEH8L12x5VvaQYgen5ZYrzKPF8T
IHo+TeWxSlldCyB6Pr08PO2MeDsgev72iYIT9QkdgOj5vr+X3LqL8z3R85/J
i3bKn2EAouffzqFuhbheED2f9+TKcp/tHYD4HUhnC+7xd28DxO9A7uyH/W2O
LYDo/fkPn58sdD+6oPe3hJR9omaHI6L3x88Prtkx8A4RvX9bEt+uZU1piOj9
IR4bH+S5ZCGi92dnmUq3HclBRO+XGfLLs2XLQUTvP2m9PPbJdCYier9d3v3W
K8JpiOj793nUhJN/RCOi7/PaZ9rF+AQu6PszGZYF9z7eXdD3azyfelGuLQf/
Sd8nfghaYb5Kcq5nAfFDGDjS3mv3PhgQfZ9+SkRa1qUZEH3/y15cUJa1AaLv
x734lPBjrh0QfX/g2fiNjSsYgOj7piGbe/SNGIDo+8PC3Y4BRxmA+CHkCVGq
rJs7APFDkB9RpOnZtAOi/x/4VmtefjAeEf3/hohXvJVECiL6P09KoU359wxE
9P8ZO8s693fZiOj/NYu7NE7h/RLR/2UnJq58VcxGRP/vP8pumqucgYgfwnrW
3QFz1uGI+CE8CjgVu4/VCxH9f+cv9Hy7hul/1P+JXwLLy0HPMy0KgPglWMjN
an5X8wVE/zezpi4VHOkARP8/w7iUefIEAxC/hI/HXM/V6jMA8Uv4aNl43YTG
WOABQoKmZr4NpCPCA8xsfeX9ZlM2IjxATJ1VXjDe/xMewDH95Z338dmI+CVk
ZL0qRUuvov/OBxD/hHxTSxbBk/aA8ADi52iGO/D5nfgnuHTBlUE4/xD/hG1x
H5574/M/4QXWvNagphVmIsILLFGXmLjEl4MILyDBkneIQzUHEV6ASx7s+Xh5
3//GCxA/BZbgbHPWzHULfECFmNV28SMMQPwU9Gp0Z17g+Ub4APlEWogXrj/d
fDYbH1jywoxx15rFLdmI+ClkhbAqZvPfRIQfcBNkqfs9uhwQP4Wa0bKHVUet
AfFTKP34ul4O5xvip1Cm+Dpg80HGAj/AoFjtu/EtG+mz3BKPleaFH8pull/G
+w/ip5BQMRlEi9dBxE/BxPJawPy4NiB+CgU7OC7z4/Emfgr2iZGbP+kwgEfP
eOkcF56EWlry73E9If4Jcqcex/ji+BO+YHCzad9VBVxvBOfva2vwwjev/BKU
NuYg4p+wtq+Qey5GFP1P/AGLZ9ytT0gAET+FlIu5oq4sDwDxU4CH9FnPfote
4BOYmUVX7jxPB4Qv+HDLRubnVCMgfMEbhZd+anktgPAF7eVSk54r2gHhC24W
aonqveoAhC94GWe9afVeBiB8gWYupSgax5vwBWF7MlwMNuN6/C9fYJujSs3e
2wGIv8LhDZ03RQLbAPFXEPmQPgG9WwDhD2rkAl4HJZ5Z4A+89Th7TkiFI8If
CJU25h9Je4cIfzCZNBiqmpKGCH8Qmz4yKWCZhQh/UJLV1u94MAcR/sBla7Rz
BncOIvyBvteLuG7+LET4g7BkjfZI1TREeIP1nNy3vVRjEOENhEvLN3FuDlrg
DZ6laBnHlDst8AbjR16y3H1KAf+JNyD+C2GfVWRpmSaA+C883Vc7Jfo0CBDe
oEfyQJfYpWZAeIPT6pqKFNY2QHgDF75fEVH4vEt4g9ylK8Lj6QxAeAMNLfc7
loYMQHiDP74iinuP4fa//gs9Y3RXja4OQPwX1s04GVbeaQeER1h0ZZ1NY0kc
IjxCkVvYsxeT7xHhEaYPOqcdrMhACzzC7cu9PeHZiPAIvR8+spmdz0GER0j9
+ezGt/3ZiPAI0nW7ux8ZZCDiv9C7jEP5V0k4Iv4LzsKqm/PZvRHhEaY2voqK
umT2H3kE4s/A0mmV0aQjDog/w5HuNCir7QMIj2B6s3Jfe18HIDzC07vczxO1
GYD4M1yX2IKYBgxA/BnE7QyoG/kZC3zCHc/B5MqqdET4hJ15Qr3uK7MR4RO+
KDzvoeHvJ3yCqfhyQ8v0bET8GSacOwSY9nbov/MKxK/BIvJPcofcdUD4hFfe
658a4vVF/BqCN9KizuD8QvwarjrXRdXvYQDCL4x0HRdYHJeJCL9gd6jnqBp7
DiL8QsqbKeuveH0QfsE98oXrtluH/jd+gfg3sGxbURfSvGGBVxjfvT9hnToD
EP8G5erdemfweYbwCv0+OltXG+SgxUCzJsKcF94tdAld0pONiH/D9AfLq/JJ
DojwDGIKv2Zf6K4GxL8BMiXPmfJZAeLfYHCWPfoFPs8S/wbrIuEoscOMBZ5B
K7bgCr0pG62/Hd+cLMEL1SfoBw3x+4l/w9qTQY+XL9NDxL8Buhte82g6Aoh/
Q0dsnVEJPk8Q/4aHQ2xz0vi8oX1W3JHCwQtrg1z9mnF+J34NkTv3X0nD8Se8
Q+0d6dmH0jloyF9mh+FBfP2sdnWbTA4ifg0fvhmkx0jIov/OQxD/BhY7wV/P
vDYi4t+wbOng8QT8vUKurFzfC3ng5HrzzYXaOYjwEWYDQlPm3KvBaUXNw3lB
U0AgRUpxK47/6+scqmXreeGJnUfLPp/JQdcPrZC5FUeHj0+zLaeqmSDi5wDj
HkqGr4D4HDOa0c4/Bdokyx/14nrWfvpB95pFvNB+8+bkbIscRPwcZkRF3mXi
7yW8xM2BxLdsq3OQo/eTcFuIv3dzjVWJcg4i/g7+9qqdH98BRPwdWHQdTqOf
HIj4OwSoa/GX4/zU/9L1og+TBzYd/fbEHfeX8BVF/Yyx5Fcc4JHADL9M2xR4
HL6N6w2uN3731G1DZXlht/hRe8rxHKRyXGnLRZtEAAUNyx6fPwVKLpTSf/Py
QmvhlZv58XgR/wfqAzdxXdx/4vewzlulgL2LD/1P/AWLhxYt+wEFEf8H2cnp
wY3wPiD+Dz13Hqfu8Yle4DOc6YnKF8+nA8JX8B4bufv1VyMgfMX1DYGV1963
AMJX7Nuz6qoAL863//IVNfzA6XFoByB8RYPuvAID4vr6L1/xq2Tv8Sb8/YSv
mGfXpnbKMADhKwJW/3Hac7ADED+ISpNXtYYv2wDxg9iSuoa7N6gFEP4irONd
hETA+QX+QmPRWMqrzjBE+ItkG+FbEsH/q7o7j4bybQA+bptBFCaU7FpICiVL
1HWREEIp2ZK9UkoliZQtKiohiRbaUBKSLdzWmbGNss/Yxk7STlJ47+c9z331
nt9zfuf5nee/t/8cc8bMvVzL6XO+dzZG+ItYGea3rNR8jPAXn4N1pBYfLMYI
f3G32jTy/o4SjPAXzVvYp9UpJRjhLzSvjngNy+Dz87/9xew172WP9uZjhLeg
26eV8fikYYS3uKumFiYXeAd5i59qJrvPbA1B3iJ64K7l75Cf2/6btyB6EeUk
KvlTrRMgehGb55TqP/PcAYS3+CUTcp3iwgKEt9jar7/m1kw3ILxFG3Uk4/RE
LyC8BfY6PH1IhA0Ib/Fik6HshCMbEN6iZ1zcRRifT4hexHRAPfvZaB8gehEj
oSuz/S/1AsJjKHlIRoReysAIj+H4TTjwEvsVRngM43vBI/ZvCjHCY9zVuHn6
YNIbjPAYX1NkuLbi+wnCYwh+ezZdswufb/7tMVLGlznVexViRC9ibCVtBefX
VIzoRayVcYt+ZBaDER5jSansr/gIj//qMYieBIeJ1KRTtSQgehLRgVqys8wY
QHiMgQU1i5zhPkB4jK7VCrve4usRoidRuD4q1Q0/fkRPIlrirCuXKBv5jDpz
e+OlpQUY4TNsLYaPVyx5gxE+Y+f4fitJjxKM8Ble05fO3S99gxE9iSJl/gc6
mmewv3oNoi8Bj+u5OCidAYTPuKwXozC2jg2IvoSIZrrNVnz8IPoSg1oPpj/j
62HCb1xZSHz3K7kII/wGW/2wzRxnCUb4jaXVjuPXzUowwm/o+fstVl5v/h9+
g+hNcCgODkvHKiKv4XtU9P5SfL4jehPeCZHqb/DxnvAaaRumOTfZlWCxbSWr
XnkIQ8uFSqkDE28wojdxP2bhzdHwQIzwHJWxUYakp1KA6E1wzBvpSToeBURv
gk9jrbc5Pv8QvQnmgUZ+CXy+JzxHQZRV5vPmN1iYbqVG4RphaK1TFqZ4oAQj
ehOX1ctGS3vsMaI3wcFaXd0jaQqI3sRp1uvUZfh8S/QmbOkiaa34fPtaflv7
Yl58vPjmdaccH7+JvoTLh4k6DD/+hPeYYU4+cFQqwaz3GcW5GgnDQbbJlvCN
JRjRlzDymw4/+3IT9lcPQvQmOE5vTTzYshojehN3fexufMG/7wDXxvIvZUIw
/S1N5KBVCUb4kHr1TaomecuB5h3t3VY3fwInMcvPtfh+Vmiz/L1GGWE4sOpK
ykq3EmzNi3WDB9KWQqktC27NO1wwoj8RHLHeRHr3FsBq78V8Fv0Epq4OUQr4
fBuquSXIaF4ILjEqWrIJn2+J/oQ4dRnIxL8v4UU0MoqyTMVLsD6LJ7/ObhOG
FgN3XkyDEozoUXjEf99TKmqAET0KjhhljcOqyzCiRyF8s/CsJv55c6XyZe72
4uuV2YtsSecSjPAliwbq1FldIsA9YFiivPUnKN1s//YUPt/80HdreLhBGP6W
5Lptug8fz1+NLF7nlwmc3V8eWKuwD6xV6vOeWYKvt9bOs0/i54voVfCufrrV
H//8RJ+iQ+PR5a+SUthf/QnRq+Dw1Aoa9JfFiF7Ftj5bkxP43yf6FNemTr9e
slsEtOVY7e5cIQz9VPmpx/D7nehVcOQL3+O8pwqWqN0ZdpgWgpv6uvmG8PW3
0cpDn615Z8EZyq0twfjnIXoVHDJmUz4mK7Ft4mKROe1C0FC1t2jIsQQjvIqz
fXKHiIwEWG5QrDhU9RNcmdSSmcCvj0+PlyhwCwjDwMXMFe349yV6FcJl0m5p
+PsTfQrD31tIBWVrMaJPwSEaCkO9lTCiPzGk6pzAeVEKBN73vrqcWxgqtDev
V8ffrzeutFVg7Sw49cTrWAX+fkR/gqO8uMJ48G3ZmpX78yNGhGCciuDzTld8
vPu3b1Euej4iZvVrW3ausODd4Z+gqmpL1CB+/FyfvyyapAjDpIgfUvH49SV4
xute4LFZsGqppdtG/P2JPoULPGjbvosT+zv/EvyIsdVwuQfqVRT+XDBlB9cg
/yL+zn9JSnUz8i9yqVvSTE92IP9SJBTn2VPHRP4lfKOqRKQhC/kX79H0l9yb
mci/cByJuL66vR35l2N90anhKS3Iv8iCepqW3FvkXzjL3j7OE6Uj//Iwjjzb
YVGO/Eu8TV/8zec5yL+4O5rWxVmHIv9yvk7Z9sTkE9SrSORtWDzHLEC9iut2
1+NueFWgXoWywX1X2+Ia1KtwV5nb2htQi3oV8VusFteINaBehULohycx442o
V3Hw9bZSuRwG6lVEecoVhYUzMMK/3B98w3ffsREj/IuAim6m4qF6jPAvmUeU
H9zOoWOEf1nuq5Zj+bEaI/zL7/tazxPzy5F/idCyImFT+ci/JFnpCO/STEP+
JWXRrzOrCm2Rf2laH6e2Y0k66lV89p8o3mVSgHoVnpvkuRuyylGvQokswOG1
ugb1Krb5Jty2YNFQr0I49kZI3Fk66lXsW2TRdY9EBYR/4XT/5fu9GAOEf2kf
fM4rpHUf/P/iX/SeUq2++Rcg/8I1N1bR4cBA/qVlvYrGR6825F8MCzITC3o7
Uc+iSjKRRwO/H4iehZV/7Rf+YSYgehY3T0bk2yp1AqJnoXDPP+bj7jbkV3rp
jBC+zCqM8CuHracO8hbTMNErnzp+MrngzEByms1QHcblv7nIq58b+nVdavkh
14iJM85KfvzMA7G0lNlwbwam1yRx/sN3EgQVJ9W88xlY20xY5JlZMmyZet/u
LszABkzzt17h5IM268nbbM43YBwmJl+XzfHB5N0xcSWr6jDieRv5F8abe8ap
qHcR8LZiTnK0EnmX9BL3z17nS1CfIin7mnGraBXqU7zfrRMlm09FfYqrYrQj
02F01KewjzyoWP2MBgj/MqbIx+XrXwUI//I7+qNUodZr8L/6F8FvFuKrZtOR
fxkXzOSXXFOH/AuLrLUpQaUV+Zcf/LB2VLsT9Sss7hj9eLyMhfoVi16/33lT
lgWIfoVrrHzZqsJOQPQrir+o7969oh35ldut99Xv3azECL/y+87RhKkKKvY+
w3S4IokLyp8M0onTrMPyD2rpvr/LDdmLXkxnPWrA7N7sHct8wQPnHv9WTdzE
wDz7Jy5syCdBh4pwcnExA+t993v+eD4ZCmnwaZ7bw8BaTFZNkCp54RqNtRu0
vjVgwWY337eU8cGliuukFBrqMOL5G01R0UZBrTTUt2j5PnRZ8HMV8i7KRw+6
K00UoR7F95ujqQkTFahHcWqbUf2K2RrUozi9/O37qe101KPwXZ9asV+ZDgj/
cicxIrm4txoQ/uX4r8t3TTqLwf/qX9RvhX+48K4c+RdZg0BZiaXvwHBWSPP8
nnbgnjjkZBrSDsae8V16pdgLvlSyfHXdmaDF66r/Pe1BMHNV/+ulPSzAzDjb
6qg3Ci4r8707kMAERO+CQyCveX1kB8ikCtQxlnHB+e+8Wi4P6di2w/F16hLc
8F1s3LR4eD1mGbNJa2I1D7xRVrI++Voj1spOslDVIMH4fBOq/W0GJlJqfO7Z
JjJUf/0qyPExA2uQFRA+v40XSok9c/coa8S+mpvECOrzwZMDei32M/VYsOHC
TwddfnjXyOqs4sla5F0Sao2y05WqUZ9Cx1fKT2A/DfUpfI+4OgUn0AHhYZQ7
SgVWTVEB4WGyr6z5XsGoQP0KOS+RUwrJL8A/9TBqC1kCkUVJgPAwj7a99HjZ
T0Me5in1mfx4UAvyMB1JekuOMjtQ30K7lCP68BQT9S0+/qKntGmwANG3SAjL
0RP42QmIvkXAq/gdA+fakWc5JiFATl+owAjP8j4195MYpGJ7t8xMrA7kgrHW
CW/OsGqxGGvt3xkB3LCZ6Xq00akBm1WvshCM5oFKd6jdt/Hx7vz7vcFNCST4
I/P2+LMCBua6raj4aDwZ7tDoOR2Cj5cNxl36hg95YUG5o9PdtY0YbHw9kvOA
D/o7iJdukqzHiOd5fGpKdyo3pKP+RVj4w++XfaqRf7EPKzldllyIehWL8vnf
21tWoF4FpVMmIDe2BvUqpOq4yVL4eofwMOb0F1Xk/XRAeJgV98QCmOdqAOFh
lrcZ5T5yLgWEh1n6ejBj08/r/9jDcHgUGdellSAPkxNxfmiZ4luQX/bA4dne
NqC2diaf81cb+PE2VsdxQw+YCPzAc3Q1EyQISJc45wyAFSD2IsmSBY7Ffw9b
UzYCyFm35BTKmYDoYZxx+/qmHT//j6rLNn+Z4oRX11loqKnRsYwZ/Xe3fnLB
879cNs1srseUwjVmnnHzwBM3jpkdsGvEzuznf32dQoIFGcqup/D10xpqdoCZ
KBkeGGsTlH7JwKyiafX+UrxQltJ1yBlff703WxgxleeDizk/TXLqNWCQunJa
R4ofGi9bUePbUIv8S+Myy2P+qVWoX/FeII4mt4iG+hXUsKPia+PogPAx33Ye
8vhqQwOEjxHM9oammZWob7FXtnZ7glQu+G8+xq63y5vTtgXo1mvVdL1tBWLS
aQ9f6HaBi6/Ntb/c6ARSuwy2jz7sB1uV+4Ja1Fkg7sjHgaKKYWCyK6BsjIcF
uo9qBihj3LDFabP64aEGrNBwJGRXEw+c1M+uuYmP97s7Q4OutZHgc5LhTUt8
PrD3gNtPdZKh8b2XJ47j80WnXp6ISYQIVO/f8dTWgQp2ZNrxf+elQK5HTd2e
R+jgBC3fqDOaAt2NcxyXfqEBM7UgvrUCS2Hnq9/HqzZVA8LPvDSkt5+RK/yP
PgYz/MLbRfJ94NH9y6W2yUwgXPdDg4UNgmhJ7xNfLVjACJtdFVc8ClQ+vm4e
O4Svf+5u9FtnwgMjlhf6Z5Y2Yhu9VMaa9pHgjc5YRfCUgf1+1XuW35oMnymd
ylZKYGAmryz2XnTmhUY+Ufv8bzRiChd3MBVqROBl5tSF6Ls0kKNo6LjMnAIt
nunnBVyjg6/SmW7+DRTo4Rpb3h1OBX/na9iKNVzjcdcA4Wu2x49FdedRka85
sJntkqzQ8qe3sff2/lNPO1BvI27nrlG1fibqbdwwiHrmtpUFiN4GrFA8kb6M
CYjeBkdHsKlPejvyMaITJ3svvq7ACB8zenhPXO5cDXaVy/LT/qNccGLBQVTi
eS12vrGw+8oRbhjQm/O7cUsDZuY9y6kXyAPLOJbI3JprxMgn+DnlIkmwmH3d
rC2PgT32vb3cKwzff1xruxJ2Dj9+NE1vt1he+CVPauLK9kZMbgl9SC6GD2aY
a1Xe1K/HiOePBA1uWZYUSEc9jnz6ibSql9XI02hP718T8rUA9TMsLQI23lko
R/2MMRe7VzWONaifYS5XG3lshob6GRf0zK3qDtNRP+P73scbH1TUAMLXnK7T
qfKLKwOEr7F66lVb9TXhH/uaDYI/9rPFi5GvKfS7+cjGtgk8oG6QC25rBb94
5W9q5LWB+cGOuOycbqCxnfuFMDcTzDiMHKj0HgDPinNKr5qyQD7/KweBiyPg
xZDYAY0WJiD6HF/XpSY/4OwE97cnHuUa5oTBDRa370zRsN7yxFbaOBcshcLp
txfXY2LzeZ1Xv3LDKj2VvJdbGzFqLDxcxkmCny8WO57Hz0eOqcevZB4y/H40
N1z9FQOLrXyy9qwAL1TmzCpwwc+nZ709xUuED+6ZbypMcGzA5Hg1v6cL8sO6
OueanzO1yNPIALPPTQ5VqKfxofNu3xybinoaIz82buTG7wfC29iBt8pxoTRA
eJs8K4+Hofj6nPA247cWQqKyX4H/5m0MRrw2dnQ2AyXDi0+4gluBlNqH35wY
C4SuShk+69EJLtwTGDY52A8sH2l9K1qNj1+9mcX3Q4fBYzWTtBEKC9QO59sv
yuKGPUO0VzHVDRhfsPTmoDIeGHCRi3FrOwPrdtSa76khwZ3XC4e+4ePZ3WSZ
VB8aGU6vUH1/Gv/9DdHKwmMXROBTW7vKsHVU0On4+/6JBRE43ij+g8uWDu5L
Ld8+FE6BO8bCwy2F6EBlROejI/dSWKlzgNMgqhoQHudE7kXoEVr0H70O9u0q
5YOPe0GL2KrQ0mAmOLWiol33/CA4KVE5mrSbBWI0in6fDRwFNdLsnPyLTOAq
/spGQIsH5nV8OLH2aSMW9sQtecGQBLXuSnnsesDAIrTjZuy2k+E3Lmpv9j0G
dnVcJTfIkheGDdq2HEtrxDptrIONS0XgxtICv7IAGjDsHPkSu50C1fSoTjfx
+Ujh9GLn8GoKTFnD79JRRgV/9Tpw230lwU42+PDpw6VoXhbwqV3rdZhnGChx
bR8YUGaBZ9NRyd13eaB94Zv+RAUG9sUjZeHCUxK8zStXlVrEwOT4uhy9n5Ch
qUF6b5AzPv6W6td5fhSBR31mX1isp4N5Kkv3ty8FKhaCl1sM6Kj/wZaQCn5h
eRF8Lt3Vx/u8B3wyM7/fsIMJNN5Yr1j4PgDEKxS4M/HjtUqqmfPgShKsOzi8
+tB1/Hzq//45u5IMD7ZamK97xsAO66hIX91IgYMTd9fb4uvXUOm3tnfzKDBC
dldYsyINFP/2T7000g+Kz++O/qnLAqbfVQXaOEbA9QeaJvfw9STVmvFbb5gE
Fz/cYdBYyMByf+Wf9hemwMBsrzMUfzqAp/aZNsRT4H4TjqvxTTTQfFLHL/9e
H0jq1pNamscEWec2xPlzD4FnpzjI8fj9P7BhSiPFkwQ3LDbWVMtkYCdVlX8U
upKhQXiTZvU1BiZzNpWavJcCL3OUvloXTv/bvgjMyHnODggBhO8ROW6UWi1J
Rb7npe73lm/fmpHvEanPwFZFd6D+SN0RyTVm7UzUH9nasFx0pT4LEP2RGFPT
1xfWMAHRH8l/99TeE2tHPocU4pArF1OBET7nTuWM6aruGuyx5+xnHzcuaCU4
cGRZXC12atHPhp/O3NB1f1qOl1ID9n1RQlfLKR54KZZL4tW3Rsw8x03f5CIJ
jppShsXx8armRoTxeAAZlnxNHlp5kYGRI4e4Tl/lhWLXz6upWjViMRveudle
5oM6Fjtrzuytx4jnrZw9ddc3L4GO+iSOJsx42aZq5HmaoyuCLt0rQD0R03hb
P+uOctQTcQrZq7hDvwb1RLTybpx7Nk5DPREK4La+5kNHPZHm/d0nxYdqAOF7
ND68O3dPCQOE7xn5wp5ckZz0j33PRtNnXVG1hcj3fH4h+fkDiwHiTf24Jm61
ArnbOV/YN9pAqPdsuf3pbtB5185+1ZdOoMRTv+Gb2QBYIqjumGzMAg6GsbSg
gyOg71C0mHE3Pn78u1eyds+XUBkxfD3IfYkc1c0JF49YjnzqoGE/Vxm2s/u5
YNnjyI1Lf9ZhgrpT9NlxbjiiriB5RrURO67WrW/zkwcy3jd1ppxmYNPRmG71
bxJ0lBwWfo+vB/J64m2nuXjhSCNLjJuXga2K4ks/x88HvQ0Xr795rAGLUQSn
2Tz8cI9V6sVvS+qQ5+l9u280ULsK9UXa0nxDauqpqC9yqrfrRedlOiC8j223
Z9by2zRAeB+PEDtlbuMq1B+xMvIfKTiTB/6b99H0yhU1uNMM2I1e4IFNK0gp
WqKcGcwC+31Xi5y27ARZOz6/Pre1HzxasHT7JMMCIRLRa0TchsGTvY6lnhIs
UK7wwzTgCTcMOpS0Qj+vAcuWLloils8DZ0CQRoEuA5N/cHMbuYwEzTBJ7Cs+
v5TmL377qYwMf/Rb3xM3Y2BeHDsFLwaIQB7lQDXOpVQg/7rxyPpfIjCMpf/E
yoIONGkm+u+DKfDHu87NOtJ0IK2/vN9vgQK/KHYuvvC6GhAeaKL5+NW2DcX/
0S9xlx/Zz+/ZC1bxrH5ddIoJHlY+STtmPwj6GmXiTPawgMaJxMPvHUZBrF7p
CdUoJrC1/mYUuIEHTitN5nEnNWIq2xd8b+uRoOL0k02+yfh+NWBSO1SXDM8c
MTNUSGVgz3mk+n8b8UJWyapHfK8asTwDVotdkQhkcypOyB2hgWtqhSVWgAI/
X1tdf+wWHRRLb3O6Wk6BDsdE/U+xqOCvXujkSOhPvXw2cN/YHFgyzwRiPPzt
rKEh0D2qHMCnxgJ74hXP+MbzwESZAwmFEgxMM30WpN0nwcr7YiqV+Hisv7Iu
6sNdMhQNiGyWPcTAjMSX3lr1Hl+/837tJsnTQcJJgS1cJ/H1iVZGFtcuOuqh
CJ2rWKV7IBL4GvsI5h7rAaN8T66wNjOBh5v2hGrLAPhkr8KItWKBhiLvrukV
JLhol/f76CsMrD/MZstKKTKs3SnSjOHjd+7NuVHjDRTYz7X8vBz+fVfQOfY/
zKbAVKEHFi2ABiYeHziVX90PlOSHzqzSYoGPG4TOGvcPg6XfJu2OzTGBYILS
Vo8eEsw1L179DJ8vf1tf3qYpSIGjV4XSRE/SQadUhElzDAUmCClplrJpwOaX
wyPng30gdrNuxpc0JuiTX+qe0T8IvE0fh/w0x/cHDTFLtJ1IUG9/UeX+DAaW
fzJcq9+eDJ2iM2ZEYvH5sOnUTTsr/HwE2ZjpXqH/R2/l4DnaC+zJENhBd0va
qcMCFSovy39cJ0Ft409TDvkMrJp6THPJEQqkrdxTYOJMB7RXnNdu3hgAfbtS
5Ll34ft1PoE3pwXJUFDLbcogh4EZGqQEVa3Gj8dFMH86hg52Ta0RXR7SD46J
8KeRVFggYUVP6etGErT5zA4qxe+X6zzrWnO4KVDy2iIOARc60D/VTRK4PwgU
1qv0B+Hng8VLrzi0iwSvqx0/OPKQgc1eFFNsM6ZAVbETfB/w989caYTZZJFg
mtrtvJ34+xE+aGnv/bJTbicAz9ITOxni+PEa0l66B78fZPvt9zRoUuBamZ1r
GPj64Ore+Ld7+QbAU3GfUmuI3/8iviWik/jfgyIfCwsY2JFHw+nFohTYdcLf
wekCHVx4t7PSePUQME/Bxivx8XfLTTsHvhMk+GCmI5KexcDaZN7+6rGlQO+E
wLc78df/nR8q77jbO0LzA4QfWjRUvCqaUYP8UBl536WD3c3ID3VHP7GsvdCB
+i6LQh/bPHnLRH2X6s5lN9gGLED0XTTTvhyuX88ERN/F/eZ7VkNdO/I/MHH0
oFNQBUb4H985P36j+hosd/nbk0EHuaDIpG8VZ2Qt9lFJoibHkRvqHdJQlpNt
wOhMN/qD4zwwfExtMuMjPl80x7g4BpLgqRNPahVyGZiN9Hxvuh8Zui4cZXeF
MLBhzzeNARG8cP/wnqPeNo0YvWzfSt9wPig8cXuu9UA9Rjx/hqLy6KvKYzrq
v+zae022tLcaeaEVht/5vpwqQL0WiT6L/mVV5ajXctxAp811Uw3qtdCfZTwV
GqChXkunWfWYoi8d9Vq2PbnMNfO9BhB+SM7I5ZbCKQwQfkg9aIyS4nUX/FM/
tIh93zxdvhD5odw1K8ZvJzPAdcGk03J+reBpYmFYYFAbMMyN6lDd2w1+Tbst
nR/tBNB2620B3QFg6FFUNr2DBbL6Q+byLUeA8kXnq7lsJiB6MLbfPEG1TCfo
cv1lbdnJCS+QC85z19IwcofE/skeLkh/uvXTm491WKSdWEXuMDeU7pto2KbU
iBksZGxQmOKBURGqU0k+DEwi64ND5wwJzt86EZ37Gr9fjwp+fj1PhrailIk3
AgyM+2jfqRASH3RKF3AL8MXPd0HVxt8c/DCm85dsr0Qd8kKy0xvO5q6pQv2W
wkfGqzkqqKjf4lHi5H4hgg4IT2Rb0HONP5UGCE8U7r7naM/BKtR3EXWTUJLu
yAP/zROpqbRfOnuuGay6syHwpX4rcJ1/AENc8HU8K8d4m2EnoN5xlYlV6QfO
j5na9pIs0Jof6GhqPQxWjR0oj5BiAV39Zds3pnJDO66ndhyZDVj4h4hf7Bwe
+Cj/JfZSCz8e5WVOK4pJ8LFhwr4efDyxMLx06GUxGbJyhyabLBiYrZ+g5mV/
EfhQwdojiUwFRi6aloI/ReCtNE0t7Z34fkPKBU5eoEBqsl5V/0p8PjoeyQqb
o0CLvNxVenXVgPBG0eVCTh/Div+jD7PG8+zxXqNe8NzS9tOVo0xQLL5c+NLO
QbCk18rhDD5+RQhevr/SfBTsEKZPN8UwQevJpWCTMg98aP66riOuEeOgNLq4
aZPgoGxZ+Ik7DOxj8gq7BC0yXPmUx5iKj596sXH+JQa88GlX70hZYSP2sPDe
nGuBCBQYfLJ8tTMN5HbLPVTdSoGrLX8eF8LHR/JpmwPXyihwX0XrnrFRKvir
R7q6Zcpl3xM2iL4zIrxylgkOp84IiLYNAa7z9ooBG1lgjduUC4zhgelXnYzV
xBiYXa2i85skEuwPSg3eis/nzdn6KzMTyZB6zz7L1gtfL1UGBnCPicCoX0un
Hq+ggwHqSh3SCQo8/JMpIb2Hjnoz3z+MGbtuiAKa0ZwrI3f1gO2pBiG5+Hh3
oeCZtUnlAMhwOVLEsmSBlMu69EpxEnS5K5/NG8nAeJ6E2WstJ8MkSRO7qRcM
rH2rZ+MaFQpMn7/zQC+eDjylJWyeZFGg7rm0LxfMaIDnZxOL8aofnLs2cClK
gwVgw3xm8LthIH9p86QGJwtsKNh34ByTBN3uTdZx49eLHMeXlWKLKPDuQtVD
a286WHXqvnHbdQrcMG1/ngvfXyyHk0WbYR/ocnLakJfKBDNnLjVUvB0Eexzk
73BbsIBTstMvbnsSLGT4BLSkMTBmbM7+KRsy1Fd00lwVz8CiA7v8tC0o8Pb9
z4O+UfT/6NnkihcMztwaApIU3wkXfH87tKubLRBFgqqWk7cf4Pe7sNSlzSKH
KFBw/dtTqe50wOb1ncq4gO8nzLuxNjMWuL5WuyuSjwwvklOV9PHx/MhHPreH
KynwTf74x+br+PHZeee8mk8/mGc8T/ykxAJFuot6a2tJUNb65MM+/Pu/yo4r
iuGkwN++Ta53HenAnmpxfOW1QSD0pAOuwPfvWe23sjbtJMGpxq4xeXx9Katy
QTBvBwUOWZMotrF0wDA83ef1jATbXTZk/8bXR4Q/opt/E5eJPAukDvXnjJAG
QdaiSOfF+P1geK1K67kGBYZfPhvyHL9eH6aTdbx/9AOBwKYvm7exwOONqd1K
4yTYKN5EMsWvt+uWFtfvUCiwQd652gIfpxNWlyg7iw4Bxoa1Pdo7WWCJs6JJ
qxcJrtvyzTUcvz5m67T7S2wo8NbWi+v3hdD/o4+zNkZTXiOMBKfLlYTn8P2s
cLYtleU4AOQ91vyWx98v14i13lkWXy8WnuEl4edrPshd5msFCZbxDWyfxY/X
1eObwN6jg+A610DBAn58DodbdpzUp0AvazH1RPx6FI1slI17SIKTWpkftPHj
YS5EDV02NAAurL3avR5//bXheK4javj+dEfi0VZ8PTru+0tqdz8JSidFPTTA
X09tTPkV83UQxG7JM2rFz+/2lYsyA/ZQoOcHqbRGfHy+LxCaMhhLgol3DDwX
4eudrIM3Vp1LGQAj42OcS/HrUS5BK3FIkQLZZhlyIzfpwPfny3up70hwJL73
7DX88yvJeN37mjUIbm8oHqnB77f2lkz96Z0UWH7kxIL5DTq4wiXxwCCXBMe+
Sb27jL+e8Ej+me1HW7YeBB/KfrNfKw6CTPnnOgH4+ZzV+HpsUhsfL2W4ujD8
fDp9NrrL8YUEXed+/JL41/+v/Z0/2muqv/XSWYzwR2q1d0a59tGRPxI2juXf
wNWO/BH8JKRbLdCN/BGspGcpHuhD/uh6okbtYh028kdJU9/mDKP7kD+iFYPN
8R+7kT+aVR+NoIsxkT/CCmPTDme2In+0Ld0twCmFgfyRVcaFoSuC1cgf3VTX
SIyVeYX8UbCqhJClwBX0vJy9gjd0FNrykT8yuOy9u2JbDfJH7lOaA5dbG5E/
GhOabUxwakb+6PDwx7SSM23IHx1Kb6zdmd2B/NFK8dodxxyZyB/dsPdyvqLH
Qv6IP/3mtJATC/kjn9hmyWc1TOSPzgrt92dHdSJ/dMrOx+Ao1o78kdOefRve
rG9F/mhw01B3j8E75I+4d8Wf9dxWj/zR8crj7/zsq5A/mpoYUL+wtgD5owvJ
IfOpMBH1dz7a/PY3wR4if/RZyJp+XL0A+aPXyY9lAaMC+aPIm1zCJU01yB89
yRy0o/nQkD/S4DrDSk2oQf7o7ab4O8Vn//ijX5KiKxbJ/H/kj24vPbFmfxHy
R/4CBuMvo98hf/Rd5dhHP1cm8kcNbPoDE85e5I8cP3TZ7ZJgI3/E0HmZ04P/
TPgjlZZPm5u8e5E/ij7+YH/1qi7U7zGSG+wunmpHHil3PGaxbv5b5JEqyx3z
ejhakUdK50zjLkprRx5J2yOc/8iDTuSRii9YyA8MMZFHGrf57eDgykIeKe+p
SJusMgt5pJn+wqlRPSbySN2XkmTnCzqQR1Ju+y03f6UNeSTloblDZrRm5JEW
cQ6YawRnI4+UUD/cJvquFHmkvY26VrrC1cgjXa57Uu3OR0Me6XnipcJ1s1Tk
kcJyQmXrtf54pIGL2ZeuSf3vHskqQuAspeqPRyrpTeEU+t6IPNJ2a2nqeG0H
8kiNDaddj67oQR6p4pBE9b2uPuSR/A0O3vVUYyOPRMbGzs7w9yGP5Ht5NZVn
aTfq+SjlvRXyFehEPinh56TDxowm5JMW2Zq+MN3cgnxSddWeoK6l7cgnqZS1
mS7d0Il80oFn4v3YUybySWOlJk6le1nIJ8Vt0dy22ZSFfJLY9HuLIxFM5JO0
JWTrk9Z0Ip/k2cW7UL62Hfmk7MGdA4cvtCCfFLdjgvLrRwbySb5cV7NP3ClG
Pqk52qt3+3wl8kmOhluTN4ZTkU+a58hfZ72bhnzSMykG59zlPz5pzWHKNqnM
/90nmT03rWnIr0Q+6W2GKWXdUAvySd8ChC0MG1nIJ1nbzbRUVvQin9RzpItT
aCMb+aS1cscmnD/0IZ+06eb4d7+iHuSTyLkep0UrWpFPurgy5MsW9Q7kkzLr
z33fzMNEPqknOrC7SZyFfJKyBRfnWQ8W8kmUQmvOsTkm8knHEzqPeI53Ip90
+HitlwbsQD7pwCVQ2XSkHPmkp5tvWiRx1iCf9PGsDLxuS0M+KdC4y6fp0B+f
dLGzKcvuwR+fJANrRdSD/rlPknOzpzB2JCCf1MqxdfH0pnrkk/yHX4bxfWhH
PunSfkc7xcQ/z985RxY3O5Xah3yS/0iYd6gmG/kkSlHC1TMWfcgnRYvv27gl
rBv1fiSERqOlYjuRVyrWfRLCXcFAXqlN/EfE7vpm5JVk33wOpFDbkFe66fjh
5ZvPHcgrORZeGpcMYyKvZKj5LGp6Jwt5Jfe41ebP97GQV1KYJTdZpzGRVzKc
i/7tZd+JvFLDzOzDnjPtyCuJzCT3C3W0IK8k1cS3XtvlKfJKjBMxi+bfFyKv
5BSa5Nd1pBJ5JbN3qxaqVanIKzmkpz5oOERDXglGFvSRl//xSsyvfrXVa/94
pSMLMsIu/f/cK7U75zp+C8KQV+r8Xv+5AGtGXimaa2PkBWkW8kp89TBa17MX
eSVywwRpWpGNvFKEjsm3B/xs5JWUfnafuS7ei7xSvoPpgpdrK/JKPInbpqmT
7cgrZc+Z67u2dCKvdFHW/8HBBSbySv030rbo4PcT4ZVinA5HRYixkFc6d5jZ
f0SUibxSY3eVgl5QB/JKZGkBBU07DHklf53kGMVr1cgr3T31cZu2Fg15pXRB
t333CqnIK3VNfzqX7/vHKyU/f9vLz/fPvZLB0O59C8mdyCv5/foyWBLbg7xS
+T3Fm1MkNvJKj6dOeTevYYOaozLPZVvGgcxGdQcerBf5Jd3U4uFdhzuRX9Ja
w+27n8ZEfilkyP5pryML+SXqfO3pbF0WxtrpHU/r54WZAxsOfXRlIs+099Nl
u7VRVcgzUaovZt5ooCLP9K1NY8+kyh/P9HXjd0Ph8SrkmSb3dWf5zxX8rWeq
CBxqExDtQ56p4dtnxwItNvJM5LgjR82xPkD4pUm3t3Mb17GQX1p3tefIUjcW
8ku+z8IGjAeZyC+N5zJXbvOuQX5pSDM4f+woDfml2mzLx7t4/94vBcM8VvD9
YOSXBDodjjvRa5FfWsyfvv2efzvyS07Sz0/rWXcjv8S5be3P+OA+5Jfes0yy
dLXZyC+1Pt95SPN4H/JL8nkCyZeKulFfyPhjnM3e1k7kmQ6XudZZmDGQZ9ri
XPjR7FYz8kySJWVftO+3Ic+UFH6tc/htB/JMn88GXFztw0SeiXnBoSF+Owt5
Jtvq7Clgz0KeCT59mP8un4k8k2uf/YGTpzuRZzK/+4M5ndSOPNPlAK3LT7ha
kWfySnUevX3zMfJM9+W7Ht4QKkSeyc9effyjVCXyTFafE/NUOKnIMz3uE1j0
zZuGPNMia1N+B7s/nimt2/tlqs0fz7Te4oHSefY/90xPFV5wnT9ZgjxT41OL
b/xKzcgz7Sw3YnpUMJFngu+Cnb5q9CLPtP1VcNJmeTbyTEran8+vobCRZwIs
5ZkPBr3IMzVYb9m3oN6KPJNVyRXBpfXtyDNdu3h4RV1RJ/JM7vl5l0O/MpFn
shgfPCztzkKe6X3NOWENORbyTIZSV5g/lZjIM11cYbZpJKkDeabBTRvC3iWU
Ic8ku9Xe/o1l9Z/nA6V89fCTpyHPtKzpiv6OLiryTIyP5VtDOyuRZ5Kb2/Kr
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
fv5/nk/2f//9H9cSNuo=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{628, 2765, 675, 625, 595, 558, 932, 829, 744, 676,
                 626, 596, 559, 933, 830, 745, 677, 627, 597, 954, 851, 766, 
                698, 648, 973, 870, 785, 717, 560, 934, 831, 746, 994, 891, 
                678, 980, 877, 1016, 792, 1004, 901, 1024}}], 
               PolygonBox[CompressedData["
1:eJwV0UlLVmEYBuDjsLJSyya1L3PVnPUHcsqhbYsGKFMbqBYKUaQNYgTiyiYr
/4JD1h9w2OlHQYNpmi6EkCJoNIKioOtZXDz3c7/nwOE9pc2th1oykyTJIM3z
nCR5Rq6yJytJtvI6MsfZTx639duYiswJyunXVfE5MlfI545uO28i00AFA7pq
vkSmjdXc1e1gOjInqWRQd4CvkWlnDfd0O5mJTCMj9sNkMGKvYkiu4VtkrjJh
b2QFE/YC7su7eBuZF/I5Cmiyj5pHyGTUXs1juZbvkZmWWyjkmn0y3mUlH+hk
Uj9vXqKEtfZeczez8qLZTq/80jzPr3iOT9yi2dmYeZSfZLFEB/8Ycz5nXuQP
qbg/uuNust2n82G5jh/B/t68zl+G7TNmK78piv9LVzzjLB3fwCo+cpO0fsG8
zBbW2R+Ye5iLzCv5Qpxxyj5uHiObcXsNT+R6liNzg/U81JXxLjKnqeWp7mDc
Q2Q62MAj3V7mI3OGOjbSp9/HQmTOUk8hRRSziRSb+Q8tJGj8
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{521, 2766, 2763, 573, 603, 653, 721, 806, 909, 
                525, 572, 602, 652, 720, 805, 908, 524, 523, 522, 571, 601, 
                651, 719, 804, 907}}], 
               PolygonBox[CompressedData["
1:eJwV0UlLFWAYBeAvKxsW1soWRWVWNm4abfgDOXuXpS0ssVlDMAjCNCv6CQ7l
0C9w1qWmBHnb1EIJNDM1IohA1Mqynm/x8J5zvs0dMsoqE3dSQghreE1ycwhv
+WI8vzaElxyVnzLIXxK2QRJyFR3Mc87WwRH5CQP8odg2QLFcSTtznLW1c1h+
TD8rFNn6KZLjh2tjljO2Ng7JDfTxm0JbH4XyKJvky4xyW2/lM9l6KwflJFvl
cpI80nv5RYHeS4E8wka5lBFu6dvi5T0v9BlOx8wBeY97jynG9Hr3K1u4Gjfq
42/qfmcHd5mgx/7AneWnvODmxz1ePWVdCM/kH+xkhWo+8Mr7qlvLPBtYpCS+
cdP7P7eBb6SzHHfe8dz7ffdTJJ+KG1lyhlvDJG/0NPdKzNTp290qxunWl8mL
mTx5mFT5EsPc0FuY5qTewn75IV0skWvrIlceYr18kSGu68185ITezD65lk4W
ybF1kiNfo4kpjtua2CtfoIJGJjlmbyQz/o/xe7ObXfwHNt5umw==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WW4VlUQBtBLt9Ld3SWpNNLdDUo3UlKSKrZikoqFSYmISEh3dzdiISoq
ioGuefyxmHf2vt/lO/vMhgK9R7QdnighISFl4oSEqI/6Ixs/slF/Wo0fuMMU
/Va1M7dIxDUmktTnW9n/RG7AL9zQX1THsFg+pPbjLu7Rv65W4LQ8hz1yL1Iy
SL9Obc1teTX+ioTH9NnZJE+lNSv0DeM7y0uoxBv6ipyR5zKYJDxuLQeb5Wm0
oTJJSUZyUsR5kIqZfjYnW+TptKUKC+MZOCvPYwipecJaLrbKM2hHVd60Volz
8nyGkoYnreVmW5w97anGW9Yqc15ewDDS8pS1PGyPs6ADn+ob8ZO8lOq8ra/C
hThnhrNe34Y/5S9Ix9P6vOyIs2Gb3IXEdNSvVBvzs7yMw3J/7uZe/TtqVS7G
mbNXfoBUjNB/qbblL/mKOo418nF1cKyTietMi9mw94yaL56Hnfoz8bv4l5n6
7WpXficJXzOJZAakk/3P5Cb8yk39JXVsPJP95foj8oA4B9LzPVO5z967ajUu
yefVUSyU96kPkpqH9BvUdvwtr+WEPITMcTb6Z9X87IqZoDOr9E3jbsQ9oQaL
9NW5HDPCSNLznLUC7I4ZoQs1eS/OnSsxI4wiA89bK8iemBG6UouMvGC9EHvj
fdON2mQiM1nISjayk4OczPKZwuyLd0J36pCLF60XYX88Kz2oy/txjlyNGWQ0
uXnJWlEOxLPRk3p8YK0GX8UsMYY8vGytGAfj2ejF5/pm8V7lFdTnQ31NrsW7
Yywb9e35R15HXl7RF+dQnAc75G4kjXnVr1ab81vcJ47KA8nA/fqP1Foxa/IF
dTSL5P1qb9LwHVN42PomtUP8Pu7or6rjY17N4Hr9SXlozA9Z+IHppLCfz/6r
com4dxzWn425I/4RnKXslLvzR8w93/BIzGjcbbUFt+TL8X1YKR9TB5GRBvqP
1drx2ZgrDsh9SMs4/Wa1Y9y7uMfk5zV9SY7EDNCbNfqWcR/j7tGQxfo6fBsz
wXgKMNtaKY7GTNCHRiyxVjfOMGaCCRRkjrXSHIuZoC+NKURhijDXfhmOx3um
H01Yaq1e3O+YEyZSlHnWynIizpn+NGWZtfpcj/fNJIox31o5Tsbzs0vuQXIG
6NeqreJdyKtoxvKYm3ivcc4clPuSLt6TfovaKd5nzD4T2KA9pQ6L2SUrN5iR
6P//n4vbXyCX5yan9OfUkSSyP1u/W+7J7ZilOH8mx3e1PzDuEM2ZTAlaUJJS
lKYMZSlHeSrQkor8B1PRAgM=
               "]]}, Annotation[#, "Charting`Private`Tag$354022#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02WAVGUUBuAhDLqU7u7uDunuDpFWWDollMZWbLFQbCxsuru7UxAVwRYB
fc6PZ8/7nm92dvbeOwX6J3UYkSyRSNzyI1XyROKRFIlEYXZFpju1SE0a0vKo
8yLsjkwPapOOx+yLsicyPanDttSJRHrzcWfF2BuZXtQlA0/YF2dfZHpTj/fs
GvJzZCaQkSftSrA/Mn2oz/t2jbgSmYlk4im7khyITF8a8IHdPfwSmUlk5mm7
UhyMTD9W6F1Ixgq9IR/Kjbkamcls0vuRhk16Fp6RS3MoMrvkIWThXn2l2ZXk
rNQb8ZHchGuROSCPIAdT9M3xu6TlIjPYbH/MHEs+7tIXmmU4LJ82J7FQ3m0O
5c94HZeZSX9nq8xu/E4KLjCNm6xyfsQczXXyxPVjXlyblK6n86VyU34N+jnz
QW6wVD9oJvEPOeP+Mide42xLfAbScYmH2GJ/3BxHfu7WnzXLciQye+RhccZ9
+mqzOylZrTfmY7kZv0VmKll5zq4cRyMzgCZ8Ytc8rkNkppGN5+3KcywyA2lK
dl6wr8DxyAyiGTnISS5yk4e8bPf9yGfmpwAFKcSL3qMiJyIzmOYU5iX7SpyM
zBBa8KldC/6IzHSK8LJdZU5FZihr9B7cxhq9JZ/JLeOZiMwMivKKXRVOR2YY
a/We3M5avRWfy634KzKH5JHkivuob417Q3q26ifM8RSgmL7IrMoZ+Yw5mUXy
XvP+eF+y8iOz+C/2zteZveL/5g6+Zzq3WOf8qDmGf8nLVebH983z2tr5Mrl1
PBf8rZ83p7JMPmyOIjdXmMvD9tvMAWTgh9ixzf6kOYGCFNdfNatxNjL75AfI
FlNfb/bmTtbrbfhCbhPfj8jMjOdEH0hGtusleE2uzrnIDGeD3odUbNDb8qXc
luuRmUVJXrerwfnIjKAdX9m1i+sVmdmU4g27mlyITBLt+dquPTciM4fSvGlX
K+5HZEbSgW/sOnAzMnMpw2K72lyUd/heLDZH0ZGyvOWsDpciM5pOlONt+7px
LyIzhs58a9cxnoXIzIv31geRiR16eZbI9bgsnzWnsETebw6P54Ls/MRsEp6d
sc43yn1JzUa9C9/JneL5jMx8KvCOXf14fiMzjq5UpBKVqUJVqlGdGrzrdxrE
347MeLqx3K5zfBaW6wvYKQ8mMzv1U+ZECnGNBaTw2Ws6+x8IQAkk
               "]]}, Annotation[#, "Charting`Private`Tag$354022#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GWYVGUYBuABlqVBkO4F6S5BQuluaaRDukUElO6Q7hDsFgPp7lK6S2kp
QUIQ8P5+3NfzvO+Z2T175tuJad+7Ya9YkUikcOxIJCoqEvk4biSSn/TRkcgB
cyw50ZxbjjX/pQ8gxpxaJpPzwnvkm64f09uQ2RxLxpfT5WrXHssRZCeV/RL5
qv0mWYO/wu/nnj6ETPQx/yG7k4Tt5rh8ohfgN30cjThubkts1phLslmvyc3w
HvoSzad2BfldH09jShGPz+wLcVCfQBNeIz4JSEgiEvO51xXmkD6RppRmi10t
boXfRT+S8IVdEQ7rk2hGGbba1eZ2+P30Jylf2hXliD6Z5pRlm10d7oR7YADJ
+MquGEf1KbTghLkdcVhrLsd2vS53wz3xDn+ae5CUHeaX+FovzjF9Kjf1d0hD
S/NJ2Z4oEvhMZ8h19v/KkbzC6+Ydsh5/h8/P66bqX+r35dDwOrvM8mW5KDx/
OdD1S3pPspqTyURylswnd7r+nz6GnOZc4b7kR+EZy+Suf6OXIIP5uDm2nGT+
UL8lB5KWl+zny7fsT8kOxGW9+YkcRQ7eMO+U9bkXnjf/6O+ThXfNl2Wv8DPZ
ZU7Bt+Gsc0KfRitOmzsSzQZzeXbpDbgfnj2DeJnv7EpyUp9Oayqw264h/4S/
lfdIyfd2pTilz6ANFUnFD/avcVqfSVsqkZo0pCUd6clARjKRmRXeV5oz+iza
UZks/GhfhrP6bNpThT12b/IgPAcGk5Wf7MpyTp9DB6qy164RD8PfzRBi+Nmu
HOf1uXTkjLkT8dhorsY+vTGPwnNgKFfMvUnObnM2fglnkwv6PDpx1tyZ+Gwy
V2e/3oTH4dnxQP8gnMnwuZuvyj6kILFzNFvusX8mx5Kb7OaV4fxwUY/jdZP1
+frtcG7IZpcu3KNcIAvIzq6f098O58ucQCaUM2Veudn1p/rocD7NOWVquVQW
ljVcP6A3JZP5X3O0/NC8Qn8ohxFDSvvF4W+zvyb7hv9HktjPkXvtn8tx5An/
s+ZfZXn+0BdwRx9E+nDP5vOyS7hntphr8pvejCfhzDCMHKyyq8Cf+kK6UIvf
7ZrzNJwZhpOT1XYVuaQvoiu1yUVu1rhWicv6YrpRh4N2LfgvnClGkIe1dpW5
oi+hO3U5ZNeSZ+HMMJK8rLOrwlV9KXf198J3DT3MF2RXErHVXI/D4TuG53o8
z3WavlJ/JIeHM8Ao83XZL3wmJPW6uXKf/Qs5nlx2eWVauUwWlflcX69XJaP5
mjlKTgmfV/heNP+tDw7n0ZwxnFm5UBaUPV2/qHcL55ht5voc0VvxInzejCY/
G+yqcV1fRi8aUICCFKIwRShKMYqz0Xuqc0NfTm8actSuNRFWmcdwQ+9PKvab
I+5zgp6PdPpyWUyWcO1/3pQQRQ==
               "]]}, Annotation[#, "Charting`Private`Tag$354022#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf8TnUYh/HHJqthhGREMpJCkhmRnV0RQlbZUkahyApFNiEqezTsXdlb
ISuKQkZZSSW97z+u1+e+Puf7/J7znHO+55enVZf6nZMkEolqSROJEikTiTOp
EolXkBzL+UC0RfLUicQQXR58z2egJM7yV5ECK/ggtEMK64fq8uIA/xiP4xzv
iJRYyd9FDmun8SdwnrdHSt0w/gAO8pkohd94J6TCKj4Y91k7nZfGBd4BqXTD
eT4c4mX5evMLmMUL8gXmqrjJn+HbzS/HefDzsjNSYzUv4fhycz0M4Tn5DPOT
aGA+KC/qK5k3mVugmflkXE99avN75jYyv6wrv5Pd5A+Ol5Mb4lrKJrKp/FH2
kp84Xkgu5O3lM7KxPCxfk387Xk3uiHOWbeRL8lRcE8cuyC5Ig9r6vXJN3D/z
CnN9DOX384/NZXCJV+ab42/FefE0fIT5QRzmn6KwbhGvhn/4k7ho7oo7sJYP
Q0fcYe1IXQEc4Z+hDC7FdUBarOPD0SnuWVwXlEcFVMRTcY3j3PA0fveZ7kiH
9fw9dEYV/KHrgfTYwEegC9I6j1G6h3CUz0ZVXI7riQzYyEeiK9JZ/76uII7x
OfG84ArviYz4mo9CLmtn8rL4nXdDet0HvBCO87koolvMq+PfuH+4an4dd+Kb
2C/WrIznC+/z3HyWuRz+4N2RQTeaF8aPca34xnh+MI8/zJeYa+A58xF5S1/d
vNPcFi3Np+Nc9NfkG7EPdHfJOnJf3E/5bexBuSqeadkw9pM8Fucdv9HxPPG8
8nayvGwoD8V9kJfjnsktsYdlS9lc/iT7yB6OZ5RjeJHYa+bv5Ym4/+avzS9i
Pi/KPzfXxH+8Bt8V3xu/lV+PvYO7sYk/4fhqcyOM5nn5p+YKuMJfw526D/nD
OMkX4BHdF7wWbvOa+NPcG/dgMx+DnrjL2rG6oviJL0Qt3Ijfh0zYwj/E67jb
+nG6R/AzX4Ta+Iv3RWZs5WPxBurgpu5NZME2Pg698Czqoh7qowEa4m/r3kJW
bOfj0RuN8I+uH+7FDj4BfXCP8xqvK4ZTfDEa41/eH9mwk0/EA9Z+xiviKu+L
TLoJ/FGc5ktQTPdlvH+QiGdRd0sOQHbs4qWtWWNujEk8H59tfiruW7wn5bXY
2+at5lZoYf45rok+s3liPNPyMVlfHoj3g/wl3h/yG95RNotnSZ6IexnPkuOP
yq94B1lHPi+Pxh6XSeJZk7tlF9k+vj/+bqzz2f/k28iBZ/X75e54H5rXxu/F
ZJ6fzzFXwvV47/Bt5tZxn3gWPslcHL/G+y72XewTfMEf40vjO5A09p/utnwH
92EPn4IHrZvLK+NP3g9ZdZN5CZzhX6IJEvqBupzYy6eigG4efxo3eH/cq5vC
S+Is/wpNkUQ/SHc/9vEyfF1cFzQxH493ivzIsYfkfF4Ff/EByKabyh/HOb4U
LyKp/l1dLuzn0/A2mqE5WuAltEQrtMbLSOZzg30mN77j0/EOssc56ErhN74M
xXXLeF0ki33O98QzEPfE/Gvsxfifau3/Io4pUQ==
               "]]}, Annotation[#, "Charting`Private`Tag$354022#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GXYFWUUBdALgtII0g2SUtLdJaGEKN0NEtLdSqqIdCrd3Ug3SigtKKEg
KSkl4Xp/rOfss2cG7p3vzqRv3rlWpyiRSKR61Eikf4xIpECsSGRjzEikBlH4
WbeCj/Wn7J1Iy03dAArqN9lrEpUjupXU1p+2dyYdt3QDKaTfbK/FGxzVtdfd
lr+gIKt0n+jOyF1Iz23dIArrt9g/JhrHdB10d+QvKcRq3ae6s/LnZOCOrq/u
hTyRigzWFdFtlWsTneH2N5ktH3f8M/kfeQSF+db+DsvkNY7Xkc/JXZktp+dd
eYwZlwXyUjNn+Hec3898qdtgTjLnm1nYQyX7ZDM521hjX2nm4SBDXF/U/FG/
1vzEnGGmYWf43OEemm+Fe8z39kXme/zi2o7mXd1I5sgZKSKPNxOxPPy7zqsr
/yZ3IyNj7fFYKN91vL/8KnxWPmCorlj4zPKnvMWvuk66e/IoirJOV093Xu5O
Ju7phlFcv91ehxic0K1nOCUc26GrS0xO6jbwBV8ygpGMYjRjGEvJcF+cX49Y
nNJt5CtKObZLV5/YnNZtor7+gr0Hmbmv+5rS+t32BsThjG4zDfS/23uShQe6
bygT/qb2hsTlrK6z7r48mmJs0TXU/SH3IisPdeMoq99rb0Q8zum66B6E3xbF
2aprpLso9yYbX9njs0h+FJ5R+bU8hcph2lOwNvyWHS8n75MbEz88Q/YY/CD/
5vjn8sPwG2CunIkS8ndm4vBbZIV9hfl+2F3T2LykW2/2Mb83M4T7F36L9q/N
t8Nzx2L7MjMXB/g3vCfMSHgPMdXxBWbWcD+oYp9qpgy/F9aF94WZl/GuLW/u
1zVhppw2/F/h+TVjMkc+77yu8qNwvyjJBHsSVsrbHG8iX5b7kp3H4f2ji8I0
e9VwD3QVwueWm5KAC7pu4XuE70kptuua6q7I/cjBE90EKoZn296MhPyu20Ez
/Z/2/uTkqW4ilfSH7M15hz90O5nEB44d1rUgERd1u5jMFKYyjenMoLLzf3Je
SxJzSbebmVRx7GddK5JwWbeH5vq/7APIxTPdLKrqj9hbk5Qruu66x/I3lGav
roXuqjyQ3DzXDdZFZbq9GrN11exH5TYkY6Q9FnPlPx3vIT+Rx1GGifakrJL3
Od5SviYP4ofwTg6/z/BZzAQskZebufnP+UPMN9jEDMcWmtnCs8GH9mlmqvAe
Yr19tZkv/C3Ce9b1H5rH9OvMtuYsM114x5DcPsqMzRbm2Reb2cO9dG1P82l4
HpknZ6asPMlMxmp5v/NayX/Lg8kTvrs9IUvlF44PlaMx0/5R+N66j+zH5Xak
4Kqul+6ZPJ5yHNC11l2Xh5CXl7o5VNf/Ym9PSq7peuueh98/5Tmoa6O7IQ8l
H690c6mh/9XegVSMtsdhvrzEzBGe1/C9nNsn/C3Cs0gFDuna6m7Kw8jPa908
aupP2D8jNdd1h5nPAhayiMUsYSnLqOW6k87vSBpu6H6inf6WfTgFiIT/Uxed
WXJ1psup2SCvMfOH543lrv8fXplIbw==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$354022#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
2eD3ge4+kOibky2EeT8oFAAAVvUSiA==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{684, 2941, 731, 681, 651, 614, 988, 885, 800, 732,
                 682, 652, 615, 989, 886, 801, 733, 683, 653, 1010, 907, 822, 
                754, 704, 1029, 926, 841, 773, 616, 990, 887, 802, 1050, 947, 
                734, 1036, 933, 1072, 848, 1060, 957, 1080}}], 
               PolygonBox[CompressedData["
1:eJwV0UlL1GEABvB3KrAyNatDEKEFtqgERR1abuWSWumU2S21/VK3Fmdc+gJl
kGsW1aEgirRUiiA6qeP+Fdz9Ai43+/0PP57ned8ZGN45UP8o/nBTCCFGimR6
CAmKHQ5tDuEm2xmyX/OYEoad1ZLOsN3GE2bsBvKYsb9Tyohdxw5G7HaeMmsn
OMSs3ctFUnY9GaTsDp4xZyc5zJzdRxmj9i0yGbU7WdFfcJoVu4F5vZEjzNs/
2NA7Oc+GXc6Yfpssxuy0LSG818vpslflS86waidY0Js4yoKd4Tuf9Cp+Ro9s
d+kXyNF/ycBu/ausocLnxuUddrLXXZ8cd75V/6AfkxXyoPwju92tyVYKnZ2V
++WgPCXX3GfLL/YJWR29n/wXvY1Mul/Um8m38+U+2S9PykX3mfKzfVzGo/9X
/pX97mJ6t15Erv5bxtijf5M3uORzE/Iu2UzY29x/jO54Y6/LV5xj3W5kSW+h
gCV7gMtM2vfYxaTdQxPL9vPoHVi2B7nClH0/emum7Lc0U8m0swfR72XafkcL
VcS5yjWquc5/8t9mFA==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{577, 2942, 2939, 629, 659, 709, 777, 862, 965, 
                581, 628, 658, 708, 776, 861, 964, 580, 579, 578, 627, 657, 
                707, 775, 860, 963}}], 
               PolygonBox[CompressedData["
1:eJwV0blL13Ecx/FPv99vyiEJNC01JAghzEorCLoWayooMTvMslqy1I6xhg4r
G7uWijQ7lKAgCMsjaWr2vv4Cbx29wMdnePB6P78fHcr86rpTtYkQwjr+cy8t
hPtsTYZwl3Gu+YEeFtirn7MQV7cyRp6+wxhX9V/mKdGNzMfVXxklV99mlCu6
mzmK9TPm4uovjJCjbzFCte5ilj36KbNx9SpH3W9Y5bMeZou7nmEu65Q9zntS
qRA6fZtht37CTFy9whH3a1b4pE/GJc3vDenN7jqGuKTP2R9kek/aDvLdx+w7
ku6O+H/q3u4us22ku6d9/+XOce+yO2yDnabB2wH9z11gy22x/WY32mXv+2y7
zrOHbaF9ZZdp8b5fd7m32RO2yLbY9XbQ+093tjvb1jJIle9n7XcyvCVsKW9J
6D/eT7tb2aCndJH7MVNx9RKH3C9Z4qMeIMt9kwEu6t9MslM/YjKuXuSg+wWL
NOt+Nrlv0E+lbmeCQv2Qibi6iT4ydQ19XNAP+EAvGb5dp5fz8e8Y/91UcIY1
fRlrQw==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nfYjnUYBuDvK5G9R5KRvaNokhlZ2WWnkIZUqDTIKESZkVH23pQ9s7dQ
FDLLSFEIWZ330R+n67rv5+N9v+f3vO8hzwsd67+emJCQUOGOhITImf4oQSHz
NnMaOdhcVvYwX9bfpaQ5s7xPjpPPuHZYPs9NPYv9SH2hfqf+iZ6XB82bZA1O
6V9xQ+9ODl41/y7jTaVkrdlfT5gVr8l2vSd1+cXcmlv6NzzEZnNNTutf81q8
PrPtHmCH3ot6lCEJd5GUZNzNHD9Xip16b+pTluTMtS/NLv1jGvAwW+xqcUYf
SwdSMC9+Z3brn9CQR9hqV5uz+jheJyXz7R7ie70PjXiUbXZ1+F0fT0dSscCu
DHv0vjTmiPkFbuvf8hjb44w4p0/gDc6ZO5KK78ypWRhnzV69H//oXcnCs+aj
8sV4UFgU98/h9NHz8bh5h6zLH3pG14brE/Wb8qN4XshtP1G+af+HfIPidqll
dvmVfEyui/OQ/eOeyELxOnKqLC/TxLnrD1PYvM+cVg6JnfzUfEV/L87enFXm
lOPlc64dk21IJKv9KLk4nge9r56fJ8w7ZT3+1CdxS+8R/xZvmf+M34U0rI/3
EPddf4Qf9P404bi5LXewxFyOXXp9zuuT6UQ6Ftk9yo/6AJpSnt12DbigT6Ez
6Vkc94z9+mc040kysCTOhgP65zSPz3ucD5nIHJ9XspKNe8jOveRgadwHftIH
0oKK3Mcy+3L8rA+iJZX43q4hf+lT6UJOlsfZcVAfTCsqs8euEX/r03ibXKyw
e5JD+hCe54S5HXey1FyFvXpjLurTeYfcrLSrwGF9KK05aX6JJCwzV2VfPN9c
0mdwW+9JLt41n4+zJi0bzMk9IwPiuSOPeZWsyC9xfq4N1YfpV+X7ZIvPpPlX
2Z67YufnRsvl9kn1fvFdIQvI++Vk+ZRrP8TzSlG7y3FmckQ8H3KmOb4ge5lL
y9zxfuSkOBfZ1eULeidKmNPJe+XX8UzIja6nkJ+Zi8Qzr0+L17dfLStxJJ4x
+2H6F/o1+QH3xHeB+Tf5MklZYa7Gj3oT/tFn8R55WWNXmaP6cNpQnf12Tbmi
z+Z98rHWrgrH9BG05ZT5FZKx0vw0B/RmXNXnkOj99o57Ee/V/JfsTHpyuDZW
brJPqX+ul5FFZQE5PZ45md/17/SqcW/Mx+PzJL+Iz7b80vyv/iGlzNnjeZET
4vMi27l+Wn+VYua7457JMXKVa8niO0ovSF59iqxh/5NszrX4bMbr6HPjmPWP
42ziNc1/yy5kYLM5lesD47Xi9zCvi+eHE/pIruvd4vzj+Tefka+RnNXmmvys
t+BffR7duGh+m4xsMRdkvV6Nk/oo2nPW3IEUrDHX4qDekuv6fLpTiA121flV
H83L1KYwRShKMYpTgpI8QCk2+ntP85s+hleowyG7VtzQF/ARl8zvkImt5tTu
0SC9eNx3fUbi///3Ke3afwt7Cqc=
               "]]}, Annotation[#, "Charting`Private`Tag$354106#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HMAVlccBuAvm0NTC9vaampoaspctt2ybds2llu2bds2l40954+n9/ee
c7/6vnvvKVWleoXqRolEIq/8kSlqJLIhWiRShlhs0AfQiMxkISsb7ZUlNhv1
gTQmG5uslSMOm/RBNKFVvEgku9xsvTxx2awPpik52GKtAvHYog+hGef0lnzC
OX0OOdmqVyQ+W/WhNOe83oo0nNfnkotteiUSsE0fRgsu6K35lAv6PHKzXa9M
Qrbrw3lo7svPPNRbctHchs+4qM/ntXk4WXit52GHuQqJ2KHHih6JjDfnYYT+
SPbjFx6Fe8Ylc1vScklP4DNTzAVZoEf0EeaspDAvlRHeMP8ri5PXdTtlVRLz
jr15cqf12OYJ5q9kXplarpAj7T2W/fnCWkaZXC6WGeRj+0nkDP1bWTTcP7k2
3BvZ2v5lczvS6enk+3Kh/F5etp9QTtW/kYXC85Wr5UJ7UcwjzdlIaV4mo/Cm
eZYswV+u2yWrkYRdehz7E8Meo/QncgC/8kRvwxVzez7nir6IfOzWq5OU3fpo
2nJV7xDuA1f1xeRnj/53uNfs0cfQjgLstVYjfF/26mNpT0EKUZgiFKUYrZ2P
4rIEJSlFafb5fE3eYp8+jg6UYb+1WrzNfn08Hbmmd+RLrulLKMsBvTbJOKBP
4Kl5IL/xVO/EdXOn8E5wXV9KOQ7qdcL7w0F9Is/Mg/idZ3pnbpg78zU39ESe
yTRzYZbpUfVR5uxEDb9Nny1LUt7+IVmXdwN78+Uh63HN/4S/V+aTH8mV8sew
bv+5eXD43fof8kO5RP4gn9tPKmfq38li4bzKdeG8yS72b5q7hPdCTy8/kIvk
TXuJzdPNRUhjXiOXW49mHm3OQSrzchktPBPzHFmKCq47LOvxHof1ePYnmfMz
SX8hh/AnL/Su3DJ3DeeDW/oKovvcGD0n0alo7YisH84XR/TJvDQPJRMv9W7c
NncL55Xb+koqcVRvEH4vR/UpdOc/vXu4X/ynr6Iyx/SGJOeYPpUe3NF7hPPN
HX01VTiuNwrPg+P6NHpyV+9JBu7qa6jKCb0xKWjjXJywNp1eVOOk9Sak5KQ+
g95U55S1puFZcEqfSR/u6b3Cu8A9fS0x3Muxei5ihLNs7bRsRurwrOwvkKet
xzdPNqeXBeTHcpX8Kfw/a/+VeRiZeaX35b65d3g/ua+vowZn9Obh/eWMPot+
1KQWtalDXepRnwacdX2L8G9zVp9Nfx7ofcJ34YG+npi+1zg9NzFJps+VpUlr
Xi8zyoau/R94jgeP
               "]]}, Annotation[#, "Charting`Private`Tag$354106#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xe8zmUYB+DX3mRLZO9NoSJkZe+990r2LmWULXtTNtkrssuWvcpKobL3
jOh6/rg+3/t7P79zvM553vdkaNml5qdRIpFI/qiRSLHokcjZGJFIc2rGjESi
yKJyh2whf3SeQS7RG8gKsrw8Ikc4i2MeZy5ASfM+ed0+r3mDuS6f6o/kANJw
Ss/ufJW5Ogv0lPoccwme6sU5F14DUdmsjySu58brBbmhd+Gx+TPSclpfyIec
11sSjS36KLpSgpKU4iNKc8EzrYjOVn003SjDRbvWxGCbPobuPNE/523O6Iso
y+96G2KyXR9LD57qA0nHr/piynFJb0ssdujfEM//c4JeiJt6T56ZvyA9v+lL
KM8fejtis1MfR3xfP1F/h1t6L56bvyQDZ/UcnlltrsFSPZX+bfg98kwvpG82
N+Jj/U/Znji852yn/Mk+o3mpuSLj9QT6JPO7lDLvl7ft85l/MDeV9WRleTJ8
T9nb+b/mQdTWM8ricnf4vchzznPKNeH1yJqygjwWfnbye+dvyu/CnZOlZBn5
i3zu7B3zFnNjqppPh6+3vyw7EJf37X+SP9tnCt/TXIkJekJ9srkwd/Q+vDAP
JhPn9WWk9txc/SP+1StyxdyReOzSJ5LIc1P0ItzV+/LSPITMXNCXU4mreifi
s1ufRD8q85fdJyRgjz6Z/lShKtWoTg1qUova1KEu9fjb13YmIXv1KQzgP30o
Wbior6A+/4T3NInYp0/lM17pX5GV3/WVNOCa3oU32K9P43Ne61+TjUv6Khpy
Xe9KYg7o03nDz2uqXpR7+kAidsP07Pyhr+Ytu3l6aV7ojbhh7kYSDuqZPbMs
3D9m6In1aeFOc1/Pr2801w/vNz2KPtycgw/Ne+Sf9rnMa8OdkrXC/ZfH5Rpn
aczzzfVkGVlWHpKt5Uvn78qtejPZRFaTZ8JdlI2d3zR3p5aeVH4gf5Ytw512
nkUu1xvKKuH9KY/Kmc6SmKeH+xzuofmAfGBfwLzJ3CB8DuhR9RHmnFzWc+vr
wvuPtXpafUF47fynN+GWuQfJOKTPIqnnZoTXyEN9ENHsRuq5uKKvoym39Z4k
57A+m8E0ozl37HuRgiP6HIYQ3fcbZZebq/p6WnBX701KjurfksyzM/ViPNKH
EsNutJ6Hv/QNvG23UC/HK70l98x9SMUxPatnVoTPDL7Tk+uzzMXDHTMflI/t
C4a/leH3QRXzqfBesI9pHmOuI/PKEnKv/NtZHvN6cxNZJ3zWyBOyXficdJ5O
Lgr3UJYPr1Melm3ka+eF5Ta9uWwqq8tfw2eNbOX8vrkvb4afhd0uedw+m3ll
uHPM1VPos8Pd5on+NbHsxur5+EffSGse6P1IzQl9HsNoQ1va0Z4OdKQTn/DQ
8/15i5P6fIYT27/zjV1+rumbSG+3ONxpIhTRt4f3CjXMv8lOsrNn/wc9+Rs1

               "]]}, Annotation[#, "Charting`Private`Tag$354106#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfcTgUYBuCXrISUUcnKyKw0yMpIyF7ZlaKSPUN2ssqKslc22WS1KJJV
ocjMSFbZKRG6nj+u3/Pc9znn+z7nPef1UPMOddsnSSQSDZImEm1TJBIFUiUS
81MmEuW4LH/BNCrrN+teJj0HdO0oqF8gl+eK/CXTeV7/na4Z93BQ155C+k/k
Z/lL/opmul/lbuTnY10V3Rb7K9zLIV0HCusXyhW4Kq/nFd0RuTsFmKGrqttq
f5UM9JVvmmM5HH+7/Kd9IMUYJqdmpr2j44/YF9mfY7Q9PX/ru8fUjWSD/Kp8
1N6Difb7KWgfbCZnJVPlWWau+PmuqWZu031iNjfHmZlYQ0a5n3nLXGaOi/th
5uDLuE9xH81z+sXmIHOK+SCf8bQ83LyLVcyS55p56eTaR83FuoqMsd/DP/oe
MXWj+FpuLh+zv02h+Pt11XXb7S3IxJH4THTn499LcTrrHtMtsVfimvwNs6mh
36F7jcwc1XWhiH6pXJl/5Y3MoStv0S3ue/yNvE1PetGbx127zHXPc13exFz6
8IRjy/VVuCF/yzxq6r/Xvc59HNP15Un9Crkq/8mbmU8t/Q+6N7if47p+PBWf
r1yNm/J3tNAdl3tSmAW62rof7S15gN90/Smq/1Suzi15C6/pfpN78Ug8I7o6
up32N8lCf/m2OZ4TjneUL9iHUIJ3dMXi87fX4HbcN/ma/QO2yq/LJ+y9mWR/
gEfjZ5gpmGafbeaO9835dc1duoVmq/jdZmbWxrMXv9NMxP1mQryDZk6+4nfX
dzIv6peYQ82pZlY+p6Q8wkzDambL88yHGeDap6PX1eRD+73xu+Iem//G+8k2
570Rv8veh8cYKqdkun2R4/Xsu+2tycoAOQkT7Scd72y/ZH+PUryrKx7vpb0W
Sdiua6k7Gd8pFIn3UPeC7id7G7JxSjeQEnGP5NokZYduCfX1P8ttyc5p3SBK
6tfJdbiD73VLGUypeMd1dUnGD7plDGEo7/E+wygd99Y59UjOj7rlDOcZx77Q
vUAKdupW0EC/R25HDs7oRlAmvnvk+qRkl+5N3an4ruJxVuoa6vba25Mz7p+c
lEn2s/Gu2y/b36c0I+W0zInd8bLxvNgb8JE9A6niXTCvm2PY7bxW8ul4D5hs
z8IT8bnF+fFO8bE8x8zDhuhc18j8JZ4Fs4M5wbwv7jcPyQPNO+I7gMnyzOhZ
zx/xfWRe0S81h5nTzGw8Yx9lpmOufb6Zj1GuKRfX6xoy1p6RO+O9M2/E88xP
zmstn4n3iCfjHsV5zLCvcryxfZ+9I7kYJCdjiv3P+J60/2UfTpl4z3Xl499u
b0Rqfta10Z2NZ5+nWK1rottv70RuzulG86z+a7kxd7FHt4am+gNyZ/JwXjeG
Cvpv5CakYa9uLS/qD8pdyMsF3Yc8p98oNyVtvLfyf/HZM92ePZ7T+Myc2zY+
g3imKMo63Uu6Q/auPMxF3UdU1G+SXyQd+3SfMZZxjGcCE5nEZKZQyXXfOv8l
7ma/7nNe1h+W3yIfl+L/JN1V+wjKxv2W72aefYGZP+4dU537P/AvRDI=
               "]]}, Annotation[#, "Charting`Private`Tag$354106#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hf8T1Ucx/Evkj1KtvAjhawkq4SUkZFQJJXsvbcyK6NsKjMaVDRVSEY2
FSUjW9m7zIzo+fnj9XiPc+793u+955ykFl0bdEmWSCSWJE8kVqVOJFamTSTu
wadpEon6yIqL+j91T+AnuTvKYrX+R10hzJefRjZc0v+lq46f5R4ohzX6Vbp7
sUBugOy4Lr+EI/ybuGzeIbkGfpF7ojzW6lfr7sNnckPkwA25OY7yb+GKeYfl
mtgs90LBdInECDkDKsgZ5R78v/wsrHPNGrkwPpcbIZc5g+TbkFP+j76MY/xj
xubyY/ji/AQ+e9zPfY7QWthi7FFj7/O9+Xv4kXxrmpE+Tb+lPWlF45loz/gN
elWuRT+Tu9D35IfoVLk9zUcb06W0L13vd9fyRdBM/sL8inSW/Ayfmx/Mp0Rd
/iuaS3+TtsBxvpp+Hj+WL8FP5HPgqnsfpU/iV2N9UMj4KDkTHpYzy734a/xs
bHDNOrkovpSfjWfALbklTvDjcM28Y3Jt/Cb3xSPYqF+vux9fyY2RJ9aKfhM2
6Ivha10T3B3rQP8TfsYv2Iwt+BW/YSs2uqY4Fpr/HPLGd9X/HvfVl8A3uqbI
F+9Hf1xXB1vlfqiEbfFbupL4Vn4e+eP/6U/EO8bvcv9YA9gez6Urhe/kZkhC
wntrpTvJj4+Mk3I9bOMHoDJ2xH/SPYBF8gsogGSub607xU+IjFPyU9jOD8S9
5oyWM6OKfIfcm7/Oz8HOeFdyaSyWX4x3bc4Q+XYUlJPLbfjT/OP8x/xEviQ/
KfZHrDN+CU2uP03rx77W7Yj/QD+QO9NX5Pvom3IbegdtQL+jvWhV43fSPrE2
6Q35Sfq53DX2U5w/dJrcgeanTegP9I/45vRBLDHv4dg78RyxRvihfKo44+QU
clv+DD8JpeTJsS+QQj4TexQ7+VdR2Phb8p14TM4i9+X/4z/Arlhrchl8LzeP
fYLbzGunO8tPjoyz8Z/jeflBsfewO9ap7iEslV+Ob4eUOKdriF384PgG2BNr
WlcWP8gt4r3iduyNNa0vh2Vyy3h+pMI+Y/txAAfjbI/zGtvMLY/l5rRCEaTG
IWPb49zECrk1iiIN/tY1wm5+CJ7AYfN36CpipdwG98f/8B7a687xU5AW/8S6
wR5+KKrjLvP66W7yH+KI++2McwY/ym1j35ozTE4d50D8Z7kD/3c8A/8J/zb/
AD+Fz4108nn6LPbyVYx9yA+L/8qP4dvSLPGu6SLam9YwnpX2j7OL3pJrxxkr
d6MfyeXodLkjTaLP0WW0Hz3q+f/gH8EL8qo44+hsuV2cM/xwPk3se/7rOKPi
W/Ed+X/ivfCf8u/wpfm3+TxIL1+gjbGPHx7fxvhY+S7UlLPJA/gE5srHPM8u
vhJWy+1RIr61eZ105/l3kQEXY29hP/8aauG463frHsUauUOcA7EeXN9Zd4Gf
ioy4FO8CB/jXYx/jhOv36CpjrdwR+V37mpw2zi5+Ie1BS8U6oV3ki/w0ZMJl
uSkO8m/E98BJ990bZxzWyZ3i+yNznInGTuMMzuIc9plXFeuNd473Gmcjruie
x5/8CNSJdR57JvY9Nshd8CDSebauukv89Di38K/cDH/xI1EX2c0bqEuGebHu
Y//x1bBR7ookc16PdRpniJxe7sZf5mvw8/kZ8bv8O/zdsZb572kW/dVYX2iu
OyRXjbUpj4r9x4+L9Uazxp6li2kfWs94jjiX5VY0Oa1Dv6Td46w3Xp7OkDvR
AvHu6XLan56Pc4R/HC/Km8yvROfE/uAL8G/EWkV9/ps442J98d35K3xNfgE/
ky/Dv8vnjTUsX4v74jA/GsWMj5ezxVqRc8qv8inwiVxBnskXjO/Ir6AD6AXP
+T9ohm9l
               "]]}, 
             Annotation[#, "Charting`Private`Tag$354106#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
KtW0E6/9+/Xn9E3pncRrX6xaefHrIIt4ba3WV39793URr/3m0eDogXldxGt/
ZhxgW4mwiNdWR1Ifdvl0EK99xLHr6rGdbcRreyDdOasrzcRrt3w78uPXoUzi
tQOVbHrbqhHx2gWsHX/k5CqI1/4ZXSO8bC2TeO3sNcK12/X/ee2Dz6Q7fub8
89r+V5OWRrz557XTPpsAL6Fw4rUVXSxUiswvEq+92/RW82meY+T5t5wyel4V
n7yI166ofll71TCYeO0Vhw2qnylEEK89nvdr/Q6Jm8RrX5mqf9TGG028NtqW
2O/lGEO89ssna3fOnYwlXvu0rnxAkuc/r503Ly15qLieeO34W95cfjEdxGuL
A/TtTE4P8drmO9iMdP1+4rUPB/gqcjzpJ1675vpxwatb+ojXZtU3wrebukk/
1fueZ2PN2g7itx8lvLt7eEUT8ds5pXTO5xdaiN9ed/DI23HtduK3/SNXqSTo
dRK/XbcvVnzhUxbx20tdFpwZ2NFF/PZdyzuyU2u6iN+2mlRxfGvNIn47+G9/
v9fXDuK3PSttou+OtxG/rWLjE39tYwvx249vfduUfe8F8dtVPscW+gUXEr+d
csR7zFWwnPjtajlTunpSFfHbq+ardW+68c9vD9V3ng2b/ue3s76sLfomV0z8
9u9N1yqaRW4Qv33343hHsqQX8dufJN6ZaPhvJs+/FXJ623iF05P47Vc7Ykrd
1AOJ397fYUe7+ySc+O0zUv3XrAL/Pf82QS4NSEdFEb8tXS4wvHh5DPHbIiOx
oR2qscRvb+g4aDBFXQ+x364f2kl3Ri3Eb/td2kDdznURvx1aNll4Y1sf8dtO
wd8c+/L6id8uDn+d063UT/z2EqGbnWdHeojfrq35Ozf2tZX4bf69L7YvMu4g
flv5VVStrTCL+G3mEeHzuSJdxG/ncAu+sqX2G+y3gy6VxrzoYv3z29sOm/fk
dRK/3dqneZGDr4P47YFhay9zhzfEbz/b3dVzVLKS+O1bRuOirEAm8dvdtImm
k0X//Pavt5uDctaV/Xtebv9vuuatf357U8l+k8dbgonftn/QyaGjeYb47ZHv
vYHOqY7Eb4s5jz3vr/YlfrvkulQNz9ZQ4rctHUY4l+6IJH47N/Gmv9/dm8Rv
q1vtPa91Ppr4bYVdu/ety4whflv44kS6YWws8dtqr2tOLvsZQ/y2mUDZ4F2u
WuK3HUbubuMubCd+28bu1PdinX/P8w1Im/WmifQTv/3k5j2B4zn9xG/f2Bcq
oebfR/z2fJfLE9Q3kfRib4aKKGlndxDPba7kuDb2ZCPx3KFLD1fZCLYQz83g
XnfN/XMb8dwlWjc2pPF3Es8dVF7VeDOIRTz3o9ulmZNbuojn1jaYVwJ0uojn
jo/O4t3izSKee5XBcblkhU7iueOWyo1NabYTz51Ut5/HIKKFeO4OrRQRsT9P
iec+JDFi8aMtn3junl9CN/Kcy4jnNqww5kvdU0U8d7hpEce8R/88t97hc4OW
vv88t2GTbt/ktn+ee4e1cNXN+QnEcydrOiw8deCf51bpmDuxs0GHeG7ryzVf
I8+5E8+dELnV5sPiAOK54z9oz+dgXyOe29e9KG6Jzr/n9Ubvvk8TM48intty
zqKuYTqaeO65po9xsSKxxHM7/pkZ3aiFiOdebGZWxh/XTDz3kNDggXwWi3ju
la684X2feonnLjHJfy/2rJ94buc5OYvlJv3Ec8+dPhqupt9LPPdc2dUj7TGt
xHNvejw7+GFBB/HcHqpnh3vYncRzs3Xuphz6zSKeW31OXf/T/i7iuZOeL/3O
8Z1FPHdGw/sWy9FO4rktcpJWb9fvIJ57t+XviajUEuK5rf8UcbvFVxDPHcNT
GBh3jEk8d+aQer2hwD/P3fWgOsFg7p/nTjyXYedc+c9zL2owS2fcDyWe20oq
SEJ4lRPx3BUuzVG9F+wQ9twSPyIOCiT7EM/9PV67y3VnCPHczgbChy/0RBDP
7T+kYUezuEk8t1KpS8EznWjiuQOvOnI+jYwhnjuQ22T/tFcs8dzxW/bFtNp2
Es9dlGb8l3tVL/Hct+w3yOSf7yee+/2PlZ/Y1Pxa4SCburRlDBSL92o5fekl
vlt+QbGCp2cn8d392hEKjCoW8d2fpTQi1+7tIr57UfmDvU+XdKGuXY7RVQP8
sFdHyq1Lk0W8t7Vb0aaXt8uJ915dmRPW/rmKeO/3fgNllU7/vLdFsJu9zrF/
3lvT3fDz15B/3rtpKJ8mdD0CYL+dyNm2ZffuWOK345s8NkhE9BG/fb/YbeuC
N/3Eb+fHnHkROt0HsNeeFTafFJHvIl57/N7Bws17utDOLCMzbxt+KCYzuO5o
MYv47aMCl63C/SuJ325zfF93KI5J/PYmyUuLFI5XkZ6tyQbNJbOpscRnS1xc
8Ill6EN8NojS+9R2u5r47F3fH5knGbYTn73d0TpGZKab+Oy3L+J4Fk32EZ8d
qdh4ybuwn/hses/ALenkPuKz5dRp278NdJM+bn0ut8TRqQ7itQ8d5xazm2wg
XnuEf96qrNZm4rXftqjur2G2Ea+tvETwl9BYB/Hah9JjlmRdZBGvrWzc1eWl
1UW8thSUli6BXcRrV9AGTl2NYBGvvfzyl5UWsJN4bTFJ7/FXh9uJ1x7zWvzL
vqCFeG2px6K1nKufEK9981Ztut9UHvHahycyfj1aUUa89txeeYkomSritasv
mh79mcIkXpuufTpkI/rntRfWXRUeaP3ntdWs11vMPvnntVt6j6Sv9v3ntWkb
14m2G+0hXrt7cvp36xI34rXbBpU3K17zJ15bwK/Jcsula8RrHwxTfBAgfoN4
7a9nb1Q90IgiXnv1rgCP2eFo4rV3B+dEVXDEEq8dkim3T3FdIfHaYjlALp+/
mXjt4sxtVfY+LOK1t56vVuJ800u8dseaEM+BuH7itYuKhMVcT/QTr91o2jR1
0amXeG3XO24/C061Eq+98/eK59YT7cRrf1km9+Ecs5N47bifEr8CPrOI164Y
uV+YR+332Gv/aRZ2DPvLIl47ucF3T+rvTuK1r/rsY0fYdhCvXfjuU5/krhLi
tYVSBdtbbCqI137kd6uGw5BJvDZcusJHVumf13ZW9Jhssf7ntT2VX+qcM8wh
XltvwPPHgeYw4rUTcoI1G3VciNf+E7b5w3d4AmGvvUF30QJTYR/itcejruSH
1AQTr60W/JHf2C+CeO19ya4lHpo3idd2X2syK7gsmnjt/NX3h3Z6xxCv/as7
weSlcyzx2pdrQM2LuQ7itdmpJw66fe0hXvv43u/Ljlv1E6/dSzu1peJBP5h4
zPhVcH0MwHv/a+reo6HM/ziAj2KUrsSalVTrEnLJJSnpeSRkXCMa1kYlbSrF
YlHpxkb80GBEtGmRiBRKUi4rMxHKdebBPEmI3dalVu5+z++cvp/5zX/fc+Y8
55nvM9/v5/0553W+z0L4C3kh+G3WpZ8dRg/ywW9rZOueuVcmAL8t7m9/yYNJ
gN/OCygM1FMjKl1f8SoH3kriE6POP9xlCsBzr2JI8SSdasFzS8gaaUQ3cMFz
D16u8DC5IvLcEW6N6WEPRJ57SlW5N7pL5Llz45cTXN8EDPns176dzkxTDvjs
lyHBwiBfIfjsuSx1TuQLEnz2Bo1Db8akSQx57IT2rEQLBQI89jvh+7E79kTl
tSGtR+cdJHGxc4uj+l8LwGfHk50WifZ14LNnCw+JsZJ44LP3Jx1hGbO5cH6v
qsXectdMDvjrlEUXbVM2k+CvO8ZO0WKLSAx566bBKzovdhPgrWsmb8/OUpUL
eWvlfWae/aFc8NaB5kYZzTdF3losOHLxv/dugJ+eUgnwXF1MUvuf0X2zuQHs
tpaqnPkuEjx1RIZs6HE6AZ56h+bOnrPUekSeeoDOj/oriAee2o+el1bxgYsh
H53ovmBTcYnEmF90l7XTBrAGi8z3rAgSvLTTreJH7g4EeOlwh1LpldI88NIn
+u4/avLggX/Wz1tTf46qz8g/6ylmcRQ2E+CfvxowLLZYE+CfZez7PjRk8eC8
3TDmbe2djzngnQOj21sHYp3AO/8U4qmxpJcH3lm6sSuifnUHeOdb2Z12OL8L
vHOYR9uM9nsheGf3FVp/HaX+T8g74+YNe0ZKhOCdNWfjHozOdsH5vWoZX4c1
v+eDf+7waFc5XtYE/vkUJv1EobwF/POChu3SbaXt4J8JZ7ETAYJO8M8a4vpN
YScF4J9HpHL+jNxKgH9OYtKttpkT4J9phSuXeqUIwD/XOjkoz9jywT8vj/N8
6HKmA/yzzU9xD5hvW8E/v+49+kMQfhf8c3zUMIsb9RT8868y2eYjszXgnz3E
yt1DFnPBPzOVxw8V3+WBfx4uePEku1vkn/mH/B9or60G/1xXl6LD8ssG/3xc
RbailiHyz59GDnj1N+wD/5y2pmL61i9B4J8/ZnydPmQeAf55deMiv50WseCf
N7lYnZ+mXQf/PNurX5+tlgj+2WnB4PkxIgn8c/NEvH7RZDL450yV3+Kl75aD
fy7oMavXfPYW/HPGqf41uU4C8M+XM1q9dO71gH+WU3x/z/8GCf5ZjcVVpp8i
wT+zNhqQsVd7wD//eLLz/bB9G/jnTwcUFQ50dYB/9rjyyvDTMz7456VqT0ec
hwTgn2vqHBu8qPWM/LPslrVFSyQI8M8+wsmb8nQB+OdQHl3ign8n+Ocu+XCG
kXwV+OfEfLeeZ/hL8M8SDEezyZ088M9tJRve5hiJ/PPSee2csWsi/xzv4oSn
SJaBf66RcfUT+sWCf06VGIzZtTcQ/PP+1SUsy6zDlcg/GyqfPWtx9QL45573
fna8a1Hgn/3kHiQV7I8H/3yiMb80QI0N/pl+2Nzz8pok8M9aSmf1/IOTwT//
Zqw44H2SA/6ZdOsamHzVCf45pHS6saqtG/zzaeZOHxdHEvyzRPzt7Yw/SIxm
+XjdtZND2KKgTqk3mkLw0PcLLyzqdeSDh1bZrTDxuUgAHpq1OmSyeC8BHvrc
74bzWppEpWx0sMvEK0l865DjzTfOAvDRadbzw9PateCjJ485PN5VxgUffaXY
Ozr32v/5aF7UoGS7yEe3JlSNVF94Dj76z237iq48T8CQd+5TO7N7vREHvLMy
+wzf9oAQvLO6B/PnYKrfQN455khQNWcdiSHfnPaoaUeKHAG+uXXH4qwUqh7k
iyv2zlpK4lNjjzx7WwXgnWv2mshV6deBd9b01HSRjOOBd8bTpxuYuVw4X5ju
6/p7z00OeOahn6ymf1AiwTOr7KKd1SkhMeSX12odDztF9R/ILzspJOcYUf0J
8ssVCVhdFtWvIb+8TGfYu/N3kV8OGB6vf++TDh7ZpFbel19IYlw3OUZJzwA2
r2y72nsvCT45qXPSZopGgE82Cl3y9ytqPSKfPP5dtdSWkzzwyXFeHv0zE1wM
eeP0l84OEqEk9o/Oql+tevuxi8vMJPbFkOCPGzabr3On8gryx7Lsuc/tNJE/
TrqnR6s4xgNPbJEjyb5K1VfkiWd9pWe0NxHgiacuj1g0UPkOeeIbK/YtkbjD
g/OAGUv9ytUfciqRF9bzDhlVLyfBC6dYyrTZmRCVV9xyh4Zj6Hi5kgbG2EWA
Hz6j5Kd4PJuHIS+cGhs+VJ1Fghc+3VX17iM1P8gLO7YYthm78jDkg59IWT4W
HCUx46xGe607/Zj8yfeDktR+irzw+NmVS7psqPoXMLhHGCWDe3wJuzcaxsOQ
D2Zor/iwvIrEzCaMy/Rs6LjlZ9adCDsCfLBvR7rKq1Qe1hDHnP9XuR8bMb6/
79x9EvNRzDOdCJHBW1b2zY1yePC+8ezlxPG975Iw5IGHyrLKKx6TmOtC5tOW
zXRcNXVknTj1e5APnnybpNEczgP/+0kqy1bPkahE3ndhTV/TJ+r+tD41P07w
peMT22cqT1gR4H1vc/PP5FP9KvK9bXzfTKNnHPC9eesjl8S0Ha5Evrf2XOFa
nwge+N6s9htl7M/t4Ht3714d8T23C3zvgzPjIbMCIfjenGDldzqVJPjeNUe8
nB9WCMH3xpJLvZykuuF84N4VjiPhGnzwvud70gsdbzaB9y1ZUN344n4LeF95
dV/Tg/nt4H1v/f2qkP22E7zv6g2N114fE4D3FWuaOTFlQID39fjFOdVrDwHe
V+hxdtTspgC8r15oI2OXMx+870Ud3zJOaAd43zypqwW63a3gfQ2lNa1H6nPA
+5o/FLPMc3wK3vc7XaPx4Y814H0D4qKkcifqwPvSxAXWtVTeQd5XZ+iG9cKw
yPtqHjwVWm9aDd73QRJ/XYl9DnhfZsh/Ghe8Rd73qs25XxtuO4P3zfW0Ul+h
FATet7bEQrFOKQK8b/dld96azbHgfft9F0upfk0A71tjZsRKU0oE7yuev+eY
THsSeN/A6W6DtC/J4H2V8xOad/c+Be/LyXMpi0p6C943Q+nokUsmAvC+d1s/
spdl9ID3LVocVLQ4mQTvq188t1nDnwTvm+rigQWxe8D7MgpHjo/tbgPvK7+o
kF/b0gHe16CrLj+1lA/e94lYVZX6gAC8b6N4fqbK//aPb96XtaXZrlSSAO9r
H7ytetcyAXhfixuqYkMhneB9L+iwg0xmK8H7yha4Pw7f8hK871E3JS81Kt8g
7zseWe+RaCryvnNdQXopmSLvGym+Y2bSuwy8Ly/JwD7meSx4X1rxplKT5kDw
vo34dY0XbYcqkff9vi/sNw2TC+B9CfpW0xLfKPC++R+6j5SZxoP3Vf4itOxd
xwbvO+7ZkVu0PAm8Lz3y48EZ/2TwvraLTC8aHueA9131/VBV+4NO8L7dLLkp
jbpu8L5JHQPRyUwSvO8tvCAjNZvEpJKbt/j/OIRxOwo1DAyF4H83hwxx66z5
4H/TV8xJSxYIwP+Wb9Ieb6b2N+R/7TLV0xlaROWXn+02zL+UxBtjVim4sgTg
gVcsPzRTt7YWPPBVtz8c9xVywQOrtQyzl8eJPHC5a2Kd76DIA6sVuzGfvRF5
4PM2IX8yBhMw5Hu7BCbz4foc8L142OObl+yE4HttRoMSTZ6R4Hvd35RbWihT
ee+b5x3acqRPew0BnrfgWbTXImp/38lODKnYLYkPq/edtusUgO99Lf84MlOl
DnzvBWNbbgyV15DvbSYYG74+4sL5xd044S2fygG/68rydtKRJ8HvyuBT1zpK
SQx53VoTzG0rRoDXPSYxZ1G9nQCvu7FJdmQXiwteV2ks0TQmU+R1t4bsd7qB
3wJ/27ZRsv4qVQ8Vvorbf2ocwPgDizkOdiR43FGm7RLdeQF4XM79/Q691HpE
HnfwusTfYlQeQR5XrjDQunqBiyFfm1t8wDYgkMTw1/P3L77tx6KirZbnxJHg
bQNlP8rVU/UaeduXBaXLTk9ywdtG20Td6KHyFPKzd8csFH6k8g7ys2/bTkeo
qhLgZwWzb/SjqbyA/KyqM+tXm9s8OG+4c74iMbmQU4l8rBvtktZh6vkjHzu9
biHtL2o+ZQfXX8q7Sse3d9eaBVDzjbysjB9OWlP1GvnYmFpGfF8mCT5W9+WV
qx3U/CAfu6DdMmvkSM3PNw9bOuRj9tCLymtmzyOOsvuxtZ7nWj6nkeBj6w4/
Fd9I3b8Td8G89zcZ/EFzXpPeBR6GPOxFQydNd6p+e8v78C2s6Lg3zXWOQeVF
5GG3z5v+oZVCPW+tHYa6sv2Y+TV67XUqzz7yr9k5FSyDl4TtND9L5SHkYSMy
45qf1HEw5F9tS/THvlL5OnRDs2BgEx3P/sfcwOJ/++83D2vozwoIofIX8q5G
v+SaNVD5H/nW+s+Hai2o52O/cq4jy4eOG4fk6ztT/Q/yrXrTC8V8Ki8izzr+
lBdRUcapdN3HcTgR/AHb2GlQffE5lU/qSg3kj8jgUq37m/2o+tt2gr22iEbH
6bMnwtnU/SCvaptNk4qnvn/PrYrhh9HxrXIT4T9Q94P8apaL5Xmb6zyMqfh5
x0KADP5o+16zfzJ4GPKqv9zZNCjxkMReHNZQWLWBjn/nLLs2l7o+8qivFZ7k
kNT8Io8qs2Oihk39PuRRjbckmUX+QfXL/vu3LTshg39RFfY5Z/Ew68GeNM/V
dLz4+JdXo9T1kC+V+nnoXQaVB5EvvVmPWWmn8+D99FGNy52yJtjgR11tDIiD
ZVQ/JgxMfaFLxz+E026VUfvPwVHLdNqYBM7cmtoXS419zne66Rp9wP6VTKUH
UdcvCjj23YK7DH7SOrfbnJo/5EmZ5kRU3nNOZZq+7kOS8QGjffv86Pppz9b1
dByN352zGR8/KgNj5E/RGPk7NP4vdEDGmQ==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVzLcvxHEcBuDf6XVhMnGJxGyS6H3XT5nERjDbiOg1ErNESUTC5pxeFn+E
fnr5G3gMT77v+37ud+HeoebBhCAIQoxzpexkBcE2pYl2bmxRmpKC4EmfoIwE
bu0HNLvF9UnKSeTOPmj/ldeJkM+oLYd9uZ+Y37Xoz/IUq3IRFf/dm8cuJ/qa
t/j/W5L0EW8me3If9/5rSA/Y0Dsp4NDeanuRp6kkmQf7EW1ur/oMVaTwaD+m
3e1Nn6WaVJ7sJ3S4vetz1JBG3H5KxO1Dn6eWdJ7tZ3S6feoL1JHBi/2cLrcv
fZF6Mnm1X9Dt9q0v0UAWb/ZLetx+9GUayebdPmwPsal3EWZMzyUqD7AiF3It
b3lLiPEHlBtFYw==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0clTznEcB/Cvyq2yVQdmjA5RaZkxbsiWsTt0pRBxQwuinHCoGcPYnsqa
6HkYM4qD5aAZwxBpsf0VtKicvb6H13zen/fv93t+y5Nfe7zqWFoIYQ6DpDJD
SJJQrskIYSg9hBMU8Fv3kQ7WOvZVV89y/ug+Ua0ft19lK9l06tfph+UGVjCu
G6RGP2G/xjbm0aWv0I/IjRQyofvMfv2k/Trbmc8t/Xr9qNxEEZO6el0avfa9
fNEdsE/JN9jBAlp0mfTJddx23gb7mHySYs7bc3glTzneIKeTtO9jSHfQ/le+
yU7a7It5Ky+kVc6iPz6zWcIR+bK5jPfyHb+zUf4mn4rvKRewUr5g5vKU1/a7
Znm8p2sazQyekIrf3CzmBdX2S+bS+I68s/eYq3kZ/0fX15rT+pSZMBNmIc/Z
ZW83l/CMAXu3uYpF8jkzO54bv51ZylH5ipnPh/is7rFJ/i6fpoSL9jzeyNOO
N8lzeWyvYVh3yD4jd7CbHO7pN+t/yM2UMqMb4bB+Nr4/e8jlvr5S/1M+Qxmz
ulG62eLYL91ZyvmnG+MBPTzkEb0k+Q8KDGpL
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{658, 3242, 3239, 710, 747, 804, 879, 971, 1082, 
                662, 709, 746, 803, 878, 970, 1081, 661, 660, 659, 708, 745, 
                802, 877, 969, 1080}}], 
               PolygonBox[CompressedData["
1:eJwV0ttPznEcB/CvwxyaLW5UFIvNZjZLOf4DSk7J6RIZHZyuUoaEcMFsbDbL
obSanlJEj7VxwWzaXBIdlMM/oXTi9b147fP+vJ/nd3h+vye75Ezx6ZkhhBl8
onVBCAmuzQrhN0WzQ3jtC8vkgzQxzSn993igvIU6frFbn9RnyQd4whQn9UP6
f2y2X+Unu/Tdukx5P41MckI/qJ9mk/0KP9ipf6VbKu+jgQkq9AP6o3InKfZz
TOk22i8zwg7dS12FnGSRvZYl8l4eM065rt/3SuQO5turmdS9tafLN9gg1zLM
dnuXz3vllfJdyuVuFsqXyJDzzCbey1nmLYrl1eZ9HskJ869ZZn5zzp54LZr5
oO8yl3ObI/Ea5hrqeWZvN+dRxYTjk2YODbyJv8lM4zrr7avMe/Ee5afx3ZqF
5ov4/MwWPupWmHcok9fGe43vQ041a0iX35Ep32SP/JAxSu1fne9wvD/m2s8y
rsuz1zDENt1zXVr8//GAUY7r+/SH5Dbm2Cvjc9Ll2i8ySIGuU7c4/h+p5w/H
9F/0Y6yzX2CAfH2H7jOj5OjO08/W+Dx17bSRoJX/c1ZufQ==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1negjnUchvFzMgpZISTZ2dmblK1QZEYUKiFkk529Z6WiQpE9W2RUdkWR
osjIJrNkND7f+uNy39f39/O+z3nWObnadm3UJTEhIWHKbQkJkSf80xS9+a+8
udzGR8qJvLJczAfJirKD/FE2tpZTn6zfh6f13XKbeT19nf4ISvHbeR89GZbx
Gny1Xg29eDH+tl4UP3CacFJvhuP6JDRBLgtTzHJgOy+NO8z68uRYznsjCU7x
5jihT0ZTlEFSJEPyOK74/zhtXwucjPOCZiiLFDhj/iRO6VPj/KBcrPnefua3
YwXvg5Q4y1vitD4NLVA+1uzvb34HVvK+SIVzvBXO6NPxJCrEmv0vm6fAKt4P
d+I8fwpn9Rloidz2TjXLiR28Yuw1G8BTYjXvj+Jm7/AH8CNPjd/01jinv4oq
9izhleK4eB4+Tc+Fnbw+/0x/NPbEZ/CBeqo4Lv1ruca8pr5Gr44X9YPyZfMS
+rvRZTHZXu6V+6010j/Xh8vHZXd5VE6Saaxf0NugDz8f51Zu56Pka/xBuZQP
lpXlC3K/HCefsp5XTuf9ZW75jPxWfmWtgb5er4du+mFZ2TyNPki/Ex/yWvxD
vQYG8JJ8jl4cB3haXIznAb/pr6M18tk3wywPvo7zHHvNBvPU+IgPRDpcimPD
BX0m2sTPFmv2DzFPg4/5IKTHZd4WF/U38DSq4i5cMW+HS/qbeAYPIQMyIhPu
RmZkQVbcg6txbXBZfwtt8TCy4XfzZ3FFn4V2qBbH4viGmqfFJ3ww7sUf/Dlc
1WejParH8dk/zDwdPuVDkB3X+PP4XX8bz+J+e181y4tveI34Gcxe4emxlg9F
KbO5vAR+4vfhz3hv4Q/9nTg39izjVeK4eP64f/R82MUf4xv0+qgZ54kP1++K
Z0X/Rq4zr61/FHvQRT8kh5mX1ufF/SFLxrmS38ux8mfrT8gv+AjZUPaQx+Rk
mcP69bh30Zdfi3eC3MFHx7MT108u50Pkg7KjPBDnzFoB/XX9/rgn9O/kbvPH
9Y16A9SK685H6BnwGa/DP441vMLL8Pf0UjjIc+JGfBf+1OegAwraN9MsP76N
cxL3k9lInhHr+XDkwk3eCdf1uXghvjfuPftHmWfCBj4i3mm4xTvjhj4PHVE3
3knxLMczhb/i/YKb+nvohEfifsHfcV1wS38fnfFo3Oe+b7T53djIR8Y9gH94
V/ylz8eLKGTvG2YF8B2vF8+I2RieGZvimPgneu14F/Gy/H29dNxf+j55yLyx
/qXeKD6Pxy+6bvrfakt9p74gnjN9hT5UVo1zJn+S42UX64Xlm7wg9vD68cya
jeVZ8DkfjXJm83kZ/BLXColmL/F/9A/QFUXM3jIrhL28QTznZuN4VnwR55R/
qtfBGF6eL9DL4jBvwjfrT8TnxI/Guycm/PdHRiv9K7kw3hP6Sv2huLbxPMhu
5kX1WXrheF/pe+T35g31TXFPysfkS/KInBge7xc5nveT98g2clccY5zruN5y
bTyXsm5cX/mLnBDny3oF+QEfKMvFMyR/kEesNdW36I3RU/81js88id5DT8Si
eJfxVfrDcXz8AT5bL4J98ezFe81sAs+GzXwcKpot5OVxNK4Dkpr15LdhMe8e
5yDeY+YTze7FFj4+zhmSmfcyS4IlvAcaxTGgGIqjBJLb19uepFjKe8Z7CDnM
J5llx1Y+AZXMFvEKOMab8a16E/TSjyf+//djSWv/AscyLNM=
               "]]}, Annotation[#, "Charting`Private`Tag$354191#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HccjWUUB/Br71VIKJvsFYqyKVv23ntLQ1N7i+yGyt6KsncpM1uUGSmS
UbaKvueP7+ec83vue8f7Ps/N121ws0FJEolE8aSJxBgeSJ5IbEmWSAwkP2dk
GxnLOMbzoNdstTaIAvwh+44JVLa2TTaYgpyVfc+s9InERLWK9e3yIRTiT9km
JvGQtR9kQynMOdlmOsrPm8fwCBn5UP6wfIf+cYpwXraFTvIL5rE8SiY+kleV
79QP4z4uyLbSWX7RPI56ZOZjeTX5Lv0TFOWibKgsKTPN7dkm62L+Sz+e+mTh
OVl6vtT35BOvq27erX+SYrxqzspy/V/WH9cnY5a5A9tlXc1/6yfQgLfNOVmr
v4Pn9RlYFN9ZLUEv/Sg1Lxv1k71PDf0e/VPxO/WFKK5/Tc3GfFaYP1VLx2e6
ZpianLnMjnuuFuMrOppHqvfGb+Qb8zT1fpbFc3R9N/WSfLY6UZ2o3sdiGprf
UXPxBevMU9Ry3Kl/Qc0Yr417p5akt360mo/v4rv6jJr6vfqnKcHr5uys1F+y
/oQ+BXPMndgh626+rJ9EI7LymbyWfJ9+OCW5LNtJD/mV+P00Jhufy2vL9+uf
oRRXZLuYQh1rP8qepTRXZbuZyjSmM4OZcTaY7XzMVucwl3nMp673ORD7iTJc
k+1hAY9YOxh7gLJcl+2lp/xq7HmakJ2F8kflP8W9pRw3ZE/KUsYzNndmn6yX
+VrsJ5pyF1/I68l/1r9IeW7KnpKlYp65C/tlvc3X47nxGO+ac7NenyOu12eK
fRR7Uy1FH/0Han6+189QK8be8n711UOyWeqIOGdq4dhr+jfUu1jAqniOahmW
8I9rn1ZTx/eLPR73JPY9X9PV/L6aJ84P35qnqxXiTMbzc30f9YZ8jjo59oxa
lGb699R72KCfqpbnbv0INXN8hr5v/G/pC7BJv8h7NtAf1r9EBd4052C1/l/r
w/Vp4jeZu3FA1td8M/Y8zckZ18uyxG/V92Ox1zU0H9G/TEX+kz0jS8tCc3cO
yvrF/Yn7RQty8ZW8kfyo/hUqcUv2E/3l/8a+pyW5+VreWH4s/st4gNuynxkg
/y/ONK24hyXyJvLj8b/DgyQ4JB8ovxX3kdbcy1J5U/kvca7jGTgjldUkHLa2
jMesn4h9QBWSckS+nGbWTsb95SGScVQ+SH5bP4025In7JbuDpfr+rPC65uZf
9W8xQV+Eh2OO5xz3kzVxT9SycW38X8aZV9PF/5q+B8e812BzgunmtuRlpbyF
7JT+baqSguPyVbS09pv5HaqRkl/kq2ll7fc4W1QnFSfka2ht7XTsT2qQmpPy
tbSxdsY8kpqk4Vf5Otpa+yPOBLVIyyn5etpZO2seRW3S8Zt8A+2t/WkeTR3S
87v8GzpYOxdnm7pk4LR8iDwJM8ztyBd7Lv77WaYfwFh9QTbrZ6qVWBHn1PX/
A2N1I6w=
               "]]}, Annotation[#, "Charting`Private`Tag$354191#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GUYFGUUBtClQVBS6ZQSkJYQkFZaQgTpDmmQVEI6BQEllJDuFASkuxsU
pLsbVErP9+M8933vztbszKZv0qF6+yiRSKR91EhkXfRIZGDMSORFjEjkzViR
yGjzgd6SVHpx/bhckST6eT2K2UN/Q15r5ma7/K/Zka/kK2Zd7st3vMcMOTmL
9fqckWtwXc7Kbrk4x+QB/O45g/SX8hhKEJd1dnnYIXflruNm6ilYojfgPdbb
D7Z7JX9PSeJxz34DG9nEZrawlSGOf+2YsZQK54P79rPsU7JUb0g2ttkPtftP
Hkdp3grnzn52OHcs0xuRne32w+wijNfLEJ+H9nPsUrNcb0wOdtgPt4vCD3pZ
EoTzoudlp9yNR46bq6dhhd6Es/Jn3JDfZ49cguPyQHZ6zgg9Kj/qH3NCrsQF
OWE4f3I+dsnPzU50l6+a9Xggx3Qd9JYfe715ZloS2K302FO5bdjpTfVzck2S
6Tf1GOY3emYzp75XLkli/YT+KlxHZNAH6bfkxuF31p/qccx+4fN575FmNCaE
82m24hP5pFmZi3IiNsj52S334Jpcn4fyE68zX07Hr3ozcrFPL8VJeXC4Th03
So/ORL0cidmof8AeuWf4/o5boKdnld6c3OG3sP/OLgaT9PIk4Zn9Xkbbx2Sy
XQXe5m/7feznAAc5xGGOcJRjHGeM58biJ8+ryDv8Y3+C7+1j87NdJZKGe9Z+
YTjPrNZbkCecO/uxdnGYolcmWbgW7BfZvctvekvy8of9uPCfwFS9CsnZpBdg
r9yLF45brGdkjd6KfOzXS/OHPIQ/HTdej8s0/dPwHnIVLskp2CwXZJ/8NS89
Z4meibV6a87Ln3NLzs8BuQx/yq/NrgyVb5tNeCa/4dr6Vj7l9X4w4/GW3fRw
v8mtw/2qVw2fU/6Ut/XLelSzZzg/Zkp9i1yIhPr+8P3lzuE6C9e/fl1uEP4b
9Ud6LLNP+N/y3kvD/cG6cH2Y7fhSvmDW4rb8AQflsuHzysO4Izflb/m01/lR
fpNf9GqkYqtemANy73AuHLdMz8LvehsK8Jf9hPD9maFXJzX/2S+3y8p6vS0F
OWM/0S4+M/UapCES/pc8do7zTAr/Fcyy/4y0RGGF3XtskNtRKHxfx08O55DZ
ek3SsU3/kINyn3DuWalnY6Pcnotybe7IhTkkf8zp8B3MbgyX75rN+Cc8x/v9
JCdijv44nPdwHcmnzKq843e6okcze4Xr2Uyvb5eLcEjuGx7nVz07m+QOfMjh
8B/FX/IILnnPn/XEzNVrhd9OrsZVOQM75KIclvtxQ27IYzk6q+QcbA7/GWZ7
OobXNr/grlyEI3I5zoTfxefuLo+U75nNSWn3rx7X7K9f9tmmmEnC72o3z2NP
5Dak0WuH60SuTlL9Wvg85tfhXjTf1XfKxcI51Y+Ee1XuQvpwr+k35UY8kWPb
9ZVjyKvN99kS/sfMDnSSL5t1uCcX5ahcnrPyKK74zFPDfcl8/Qsyskv/iKNy
f2Lym56TrXJninHV86eF35kFeh0yhfuTax6bHr4rC/W6ZA6fO9zPHrvBTW7x
i2OSschj9chCHNbY5WKb3IWPOKZX4Jz8HfflFjyX4zknA8L9ad72uv8D7M5N
ug==
               "]]}, Annotation[#, "Charting`Private`Tag$354191#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfcjmUYxvGHBtLe2ppGZe/KaGho0JC9kwbaQraGNBQVLRlN2vaeySgq
KUpDqTQpEUrf44/f5xjXc7/vPa7rLN2+W5OuRQqFwtqihUKZYoXCuSUKhbHF
C4UTMU/ug+borH9PdwG+l8egLM7Tj9OdhPlyX7TA9foluobYKI9FOZyvH687
GQvkfrhXt1HuhD3RUtdF9z5/IX6Qx6E8LtC/qDsFC+X+uE/3g3wd9kIr3Q26
pfxF+FF+Xd4fD8nj5af47fxdOByz5GPxDH+69Yb8S/yp+T/8yViU+6B7YqB+
gHw//yPfGSv4M7A3P4Uegd/xhLyO1kFr19xIl+U90ovp+7QstuIn62/QA/AL
Hrb+Ga2Jf/Ps1kfSf/JctAddRSvlefI/5dn0OGzGs/J6ek7uzbUX0pd1p2ER
fwoW68fTvTBIP1B+IPfCX49iaKO7SbecvwSb5JcwSrdDvhtH4kzdRbpX+DJ4
Tx6EtrhZv0LXCD/LL6MCLta/qiuLJfJgtENFVEJlVEFVVEN11EBNXOLa11xX
Lu8xewntUQuNrE3Ql8fS7BN0QFf9B7pL8Yv8CmrjUv3EfH8sy7dFR3TTf6i7
DL/Kr6IOLtO/rjsDy/POMES3Se6C4tnTuu66lfzl+E1+DU/rdso9UQpn6S7X
vZF3mL0kv5i9hMHyEPlB/mf+BpTIftfdolvFX4Hf5TflA/GIPEF+ht/F98JH
fGUcxc+hx+M5/itaF2f7/RX0Td0GWoEupqfir7yzfHNaLPeBe62vptXyLHjQ
+tDs25xZeiP9gJ6JbdhHnkqPxB94Uv6CnoXOrr2VfqRrnO/Fl8vv9G/Rg/Co
fqL8bM4C3xtHY658Ap7nz7HemH+Lr4gPs8/k4rhPHio/xP/K34SS2eO623Qf
802wOfMCddFE/7auElbm2swm3K7/RHcltuTMoh6u1L+jq5xzKT+cWYQ79Kt1
V+HPfCfUx1X6d3VV8n3kRzIf0ABXW5ukr4qP5UdzBjOjM3czSzMPM6tyrnGN
30/222r4RB6WM5fziKbWpuir55vJj+Uc4E79p7qr8Vfedc4jrtVP1dXAp/Lj
eRbdb/LN2BfddHfp1vDXYKv8Np7T/Sffg2MyL3TNdNP4mliTMyeXwP3y8Dx3
ZiXfNd8sew/78dNoKTzFf5k9iu5+34N+pttIm+a80vL4O+Q+6MH5zhhm/XNa
K/eV72P9ebpb/xPtk/dLq2Su4lh5Hi2NLRgtf03roZFrm9PpulqZb/xpuZfM
hexxPKAfke+V/Zv3hP0xPWcPI/lbrN/Nf85fi23yO/IheEx+Vx7NF9BXPi7z
StdCnsHXzjPJT+Q76zbL3XEAbtX11K3lm2G7PCnzCi31M3V1sFZ+Mnshz5l7
woG4TddLt45vjn/kyZlPaKWflXmFdZllckkMyT6h1TNv8r2yZ+ifuR8chNt1
vXVf8C2wQ56SmYPW+tm6szMT5JE5M7hH/6WuJXbKU3O+0UY/J+c9+0Ielb2M
Pvr1ulbYJU/LGUZb/VxdXazP/M3eRV/9V7rW+FeenjOMdvp5unqZj5mj2XPo
p/9a1wb/yTNyhtFeP19XP3slMyrfF/313+jaYrc8M+caHfQLdA3wTc4MhmfO
5v3jYPTUDdB9y7dDAbNyztFRv1A+F99mP2OEbmveMw5BL91A3Qa+PYpkX8mH
4nF+tvUX+CLoJx+PprpO8iL+PGyQJ8j7Zr7Lo7Pncsb4OzIT+Yr5m/wMejRG
8b39bhD/Hd8By/nTUZSfRA/LLMHw7ENaO+cx39R1Y/I7bEL/zDJaFTsy5+X5
9MTsLbyQ90fr56zs4yy5/jp+sf47ej5dQsvkXqxNzFzB0MwhWiN/I+eAbtPd
icMwUz4GT2eOWR/Mf893xB6YLB+OEfxc62P5PTBALo0F/EkYk+9DG+Q9u79m
fvs/9U+VEA==
               "]]}, Annotation[#, "Charting`Private`Tag$354191#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfczmUYhvHHyg6JKMnee++dzIQyooysyN6bzKzsvTNbCkVRZpOsyqi0
VUahRSh9rz+Oz3kd5/0+7/s+v99937k7923RJ0kikVifNJFImiaRSJIukRiQ
NpG4ZV6BtiiHAvpF+tzYz8cgGZLqB+r+Na/E4yiPgvrF+jw4wMcieXxGP0j3
n3kV2uFB3Zu6WviOV0Ah3RKeFwf5OKSI36EfrLttXo32qK/boauN73lFFNYt
5fnwHh+PVroPeHP8zu+I36kbwhNYwzvy4+Z2eII/xHea62CM+bL8Qd/b/LW5
ByrxInyZOT9Gmi/J9/XdzafNi2RnOVX+E39LPmu9tfyQz5Mt5LPyD7ky0voA
+QNfKnvLGfJfuU6mjO8gh/LZMokcKn+Ra611Mp8wt8ck89/ySX0D81vmuhhr
viJ/1Pcxf2N+GpV5Ub7cXAAf8B78jPkpTOBt+EfmlviTp0JK3TCeFC/wDmio
e5vXwzleBcV0K3hBfMgnInX8Dv1wXbL4jvE+UBVpYt3aCH1yrI/vh2pIi3RI
jzuRARmRCXfFZ31upM+kwAbeGdWROT5rbZT+DmzkT6EGiutX6grhIz4Jd8ff
0Y/WpcQm3gU1UUK/SlcYH/PJyBL/k36MLhU2865opNvFH8RPvBZK6lbzIjjE
pyBrfB/9WF1qvMi7obFuN6+Pn3ltlNKt4UVxmD/NvzB3iT0X55h/bH4Uf/GB
/EdzH9wTz4yPM6fBMPN5+VI8K/OncRbQnTfh75gfwjjzVfmLvq/5W/MS2VNO
l7diD8g61kvLtXyuLCZHyV/lCvmJ9Z7yS75YdpXPyRuxj+Vzca/IQ3y+fCz2
n/xT/m1tkPmcuS9mmv+T2WIPmMeb02K4+YJ8Od6x+bM4C3F+eVP+rrkBzvO6
KKN7gRfHET4t7irdYd4K13j22GNxjnk6vBLPHQ/r9vCGuMDroaxuHS+Bo3w6
7o39qZ+gS49X4znEfRh3rn69riSO8Rm4L/asfqLuTmzhveL+Q47Yn9Ym6TPg
Nf5M3F+4HznxAHIhN/LE/vTzk/1sRrwed1rcDcgbe8/aFH0mbI27Ic4xyus3
6ErhOJ+JfLhHP1V3F7bFfkAz3V7eCBdj36OCbiMvjRN8FtrHHuCtcZ3nR7Z4
7zwztsc545+bO6Aff4TvMzfGJd6Pf2fuFR2vyDeZy2C0+Tf5aTwv81fmbphm
vimf1z9hPmJeINvIifIvuSrua+uD5U98mewnZ8nbcQ/JArEX5DQ+R94tR8iL
crl8I869PMkXyo5ysrwm+1trbt5vboLx5t/lr/r+5u/Nz8Qar8Q3m8vis3i/
/GycS8zmT/Kj5ra4wQvGHtNN51nwJh+AFroDvCl+i/2PyroXeTl8zuegUOw5
/QxdVuyIewMtdQf5w7gc+x1VdC/x8jjJ56Jw7Ev9zLhjsDPuL37K3AlTzNfl
ajnI2qPyPd4MV2L/oKruZV4Bp/g8FIk9rZ8V5xxvxfuJPYFq+ld0FXGaz0fR
2P/653XZ8TYfEs8d1fWv6irhDF+AYnFW9LN192IXHxrPDTX0W3SV8QVfiOJx
rvRzdPdhNx8Wzwk19a/pquBLvggl4gzq5+py4B0+PL4/aulf11XFV3wxSsZ5
1c/T3Y93+Qg8htr6rbpqOMuXoFScYf18XU7s4SPRCnX023TV8TVfitJxhvUL
dA9gLx+F1qir366rgW/4MpSJM6pfqMuFfXx0/D+69/kjuMrboF7sf14T3/Ll
6KA7xh/HzXgX/Oc4C3EWzYm4Y1DW2v/E31RO
               "]]}, 
             Annotation[#, "Charting`Private`Tag$354191#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1.9999999999999998`, 1.1102230246251565`*^-15}, {2., 0.}, {
          2., 1.1102230246251565`*^-15}}], 
         LineBox[{{4., 1.1102230246251565`*^-15}, {4., 0.}, {4., 
          1.1102230246251565`*^-15}}], 
         LineBox[{{6., 1.1102230246251565`*^-15}, {6., 0.}, {6., 
          1.1102230246251565`*^-15}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQEKDhD6ig0q/wCUr+TAgAJU0OTV0OQ10OS10OR1
0OT10OQN0OQN0eSN0PjGaHwTNL4pGt8MjW+OxrdA41vC+QAYng/i
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 25}, {0, 1.1102230246251565`*^-15}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8647534907552085`*^9, 3.86475354592855*^9}, {
   3.8647567908559933`*^9, 3.86475681701962*^9}, 3.8647569048255167`*^9, {
   3.864756946324235*^9, 3.8647569747961226`*^9}, 3.8647570090021744`*^9, 
   3.8647571022013454`*^9, {3.8647571965171595`*^9, 3.8647572279830885`*^9}, 
   3.8647573174664493`*^9, {3.8647573533579617`*^9, 3.8647573761696606`*^9}, {
   3.8647574545135865`*^9, 3.8647574892234774`*^9}},
 CellLabel->
  "Out[663]=",ExpressionUUID->"1c3fe754-2c12-4a3e-979f-27bbf218b668"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.1267041550026187`", ",", "3.0608212373420294`", ",", 
   RowBox[{"-", "5.003112144346042`"}], ",", 
   RowBox[{"-", "5.003112144346042`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8647534907552085`*^9, 3.86475354592855*^9}, {
   3.8647567908559933`*^9, 3.86475681701962*^9}, 3.8647569048255167`*^9, {
   3.864756946324235*^9, 3.8647569747961226`*^9}, 3.8647570090021744`*^9, 
   3.8647571022013454`*^9, {3.8647571965171595`*^9, 3.8647572279830885`*^9}, 
   3.8647573174664493`*^9, {3.8647573533579617`*^9, 3.8647573761696606`*^9}, {
   3.8647574545135865`*^9, 3.8647574892984533`*^9}},
 CellLabel->
  "Out[664]=",ExpressionUUID->"d7079069-321c-435c-8573-6eebca2ad563"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.864757335247758*^9, 
  3.86475733656034*^9}},ExpressionUUID->"05d4e916-91c7-40e6-b858-\
0a7d07c220ea"]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"149fc050-1f06-4088-91f2-f3238d72a84a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 254, 5, 51, "Text",ExpressionUUID->"d5842f38-cc35-45d9-9af7-da158ecf4acc"],
Cell[CellGroupData[{
Cell[837, 29, 6246, 158, 444, "Input",ExpressionUUID->"aa2c8684-6e16-4bb1-a4b1-c0e9049a7f4e"],
Cell[7086, 189, 384, 9, 28, "Message",ExpressionUUID->"1f4d3e25-a583-460c-a129-126650944454"],
Cell[7473, 200, 582, 16, 51, "Output",ExpressionUUID->"530d5236-0895-4da9-a9ae-e66f4035e763"],
Cell[8058, 218, 222, 4, 32, "Output",ExpressionUUID->"efacb8cc-5b9d-4327-ac4e-c243c046f721"]
}, Open  ]],
Cell[8295, 225, 65038, 1595, 1787, "Code",ExpressionUUID->"fc3c1402-abed-4553-a13d-021194ac6f85"],
Cell[73336, 1822, 293, 6, 51, "Text",ExpressionUUID->"9f439e66-0252-4504-9415-cefa2fb91a2c"],
Cell[CellGroupData[{
Cell[73654, 1832, 7643, 222, 276, "Input",ExpressionUUID->"c113c91d-ba61-46bb-8acb-0d58082f1b10"],
Cell[81300, 2056, 78426, 1383, 206, "Output",ExpressionUUID->"d1121813-fc8a-47aa-8362-7667d47ccec8"],
Cell[159729, 3441, 79538, 1405, 208, "Output",ExpressionUUID->"b899fabf-1904-4bff-b953-246ae240e3a7"],
Cell[239270, 4848, 88284, 1550, 206, "Output",ExpressionUUID->"36b0c00a-02ac-4a63-a003-5c03be04af92"]
}, Open  ]],
Cell[327569, 6401, 258, 5, 51, "Text",ExpressionUUID->"717b448c-0568-40b7-93ff-966702325a00"],
Cell[327830, 6408, 34738, 854, 933, "Input",ExpressionUUID->"54ebfcf8-c8d4-4971-8be6-85cd58106294"],
Cell[CellGroupData[{
Cell[362593, 7266, 10431, 316, 542, "Input",ExpressionUUID->"5ee4d0c0-6ce1-4573-b81d-893d5180084a"],
Cell[373027, 7584, 463, 8, 32, "Output",ExpressionUUID->"382f6a25-6219-4607-a69b-f6fc59d5fcf6"],
Cell[373493, 7594, 460, 11, 28, "Message",ExpressionUUID->"9d0704e2-67d5-49a7-a8d2-49fe013b5cc2"],
Cell[373956, 7607, 819, 16, 28, "Message",ExpressionUUID->"1868f889-4f1f-4fff-a4c8-6fa88760d80f"],
Cell[374778, 7625, 272977, 4767, 404, "Output",ExpressionUUID->"eb94f6db-bf7d-4025-897d-1a6098f47cfe"],
Cell[647758, 12394, 465, 9, 32, "Output",ExpressionUUID->"da0584cb-7537-415e-b240-43fefeb2ccb7"]
}, Open  ]],
Cell[648238, 12406, 203, 3, 51, "Text",ExpressionUUID->"796555a1-e709-40c9-8e76-66ea78266730"],
Cell[CellGroupData[{
Cell[648466, 12413, 10791, 288, 352, "Input",ExpressionUUID->"64c954a2-a20e-4e79-ac9e-42d8f28dce15"],
Cell[659260, 12703, 220426, 3904, 404, "Output",ExpressionUUID->"1c3fe754-2c12-4a3e-979f-27bbf218b668"],
Cell[879689, 16609, 712, 12, 32, "Output",ExpressionUUID->"d7079069-321c-435c-8573-6eebca2ad563"]
}, Open  ]],
Cell[880416, 16624, 151, 3, 28, "Input",ExpressionUUID->"05d4e916-91c7-40e6-b858-0a7d07c220ea"]
}
]
*)

