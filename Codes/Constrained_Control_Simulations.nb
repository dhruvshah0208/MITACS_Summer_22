(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    888217,      16781]
NotebookOptionsPosition[    885457,      16736]
NotebookOutlinePosition[    885863,      16752]
CellTagsIndexPosition[    885820,      16749]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Computing the Adjoint Equations given a cost function symbolically\
\>", "Text",
 CellChangeTimes->{{3.8647382131648855`*^9, 3.864738228348024*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d5842f38-cc35-45d9-9af7-da158ecf4acc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "Bugs", " ", "here"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "u", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "20"}], ";", 
  RowBox[{"\[Tau]", "=", "15"}], ";", 
  RowBox[{"\[Tau]1", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]t", "=", 
    FractionBox["\[Tau]", "n"]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xState", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fx", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x2", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A", "*", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", "+", " ", 
          RowBox[{"A", "*", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
           RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", "u"}], ")"}], 
        " ", "/", " ", 
        RowBox[{"(", 
         RowBox[{"1", " ", "-", " ", 
          RowBox[{"A", "*", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], "^", "2"}]}]}], ")"}]}], 
       ",", "\[Theta]2", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], " ", "-", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", "*", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", "+", " ", 
            RowBox[{"A", "*", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
             RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", "u"}], ")"}], 
          " ", "/", " ", 
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"A", "*", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], "^", "2"}]}]}], 
           ")"}]}]}]}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "->", "x"}], ",", 
       RowBox[{"x2", "->", "xdot"}], ",", 
       RowBox[{"\[Theta]1", "->", "\[Theta]"}], ",", 
       RowBox[{"\[Theta]2", "->", "\[Theta]dot"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L", " ", "=", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"u", "^", "2"}]}]}], " ", ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Cost", " ", "function"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqn", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"fx", ",", "u"}], "]"}], ".", "\[Lambda]"}], " ", "+", " ", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", "u"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eqn", "==", "0"}], "}"}], ",", 
      RowBox[{"{", "u", "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"u", "/.", "sol"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"u", " ", "=", " ", 
  RowBox[{"Clip", "[", 
   RowBox[{"u", ",", 
    RowBox[{"{", 
     RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]dot", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{
       RowBox[{"Grad", "[", 
        RowBox[{"fx", ",", "xState"}], "]"}], "\[Transpose]"}], ".", 
      "\[Lambda]"}]}], " ", "-", " ", 
    RowBox[{
     RowBox[{"Grad", "[", 
      RowBox[{"L", ",", "xState"}], "]"}], "\[Transpose]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fSymbolic", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"fx", ",", "\[Lambda]dot"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "fSymbolic", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.861902342328802*^9, 3.8619023425067463`*^9}, {
   3.8619023760720234`*^9, 3.8619024181895714`*^9}, {3.8619024838915834`*^9, 
   3.86190250318342*^9}, {3.8619026675159273`*^9, 3.861902682122262*^9}, 
   3.8619028766101365`*^9, 3.861902937842575*^9, {3.8619029852474327`*^9, 
   3.861903011510045*^9}, {3.86190326064746*^9, 3.8619032656028795`*^9}, {
   3.864737722444943*^9, 3.864737934826968*^9}, {3.864738068759104*^9, 
   3.8647381126010714`*^9}, {3.864738149206354*^9, 3.8647381993453064`*^9}, {
   3.8647382530321245`*^9, 3.864738281367056*^9}, 3.864738385972575*^9, {
   3.864738419632804*^9, 3.8647384267365303`*^9}, {3.8647385308402095`*^9, 
   3.864738561920263*^9}, {3.8647386241073604`*^9, 3.864738625081049*^9}, {
   3.8647386619882374`*^9, 3.86473899869847*^9}, {3.864739043396165*^9, 
   3.8647392140865345`*^9}, {3.864739296574133*^9, 3.864739299028347*^9}, {
   3.8647395267484655`*^9, 3.8647395340431304`*^9}, {3.864739577945079*^9, 
   3.864739661032486*^9}, {3.864740184684888*^9, 3.8647402025441737`*^9}, {
   3.864740263603631*^9, 3.86474026379557*^9}, {3.8647407876239157`*^9, 
   3.864740835905461*^9}, {3.8647408676742954`*^9, 3.864740950202881*^9}, {
   3.864742069748563*^9, 3.864742075366767*^9}, {3.864742204489438*^9, 
   3.8647422253447638`*^9}, {3.864752270286827*^9, 3.8647523496704206`*^9}, {
   3.864752389105799*^9, 3.8647524040910015`*^9}, {3.8647525828767815`*^9, 
   3.864752585871823*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"aa2c8684-6e16-4bb1-a4b1-c0e9049a7f4e"],

Cell[BoxData[
 TemplateBox[{
  "Remove", "rmnsm", 
   "\"There are no symbols matching \\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Global`*\
\\\\\\\"\\\"}]\\)\\\".\"", 2, 2, 1, 17533304191359290124, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.864753344064159*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1f4d3e25-a583-460c-a129-126650944454"],

Cell[BoxData[
 RowBox[{"Clip", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Lambda]2", "-", 
     RowBox[{"\[Lambda]4", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"A", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.864752407264985*^9, 3.8647525872963657`*^9, 
  3.8647533441001463`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"530d5236-0895-4da9-a9ae-e66f4035e763"],

Cell[BoxData[
 RowBox[{"{", "8", "}"}]], "Output",
 CellChangeTimes->{3.864752407264985*^9, 3.8647525872963657`*^9, 
  3.8647533462704515`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"efacb8cc-5b9d-4327-ac4e-c243c046f721"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_", ",", "uMin_", ",", 
     "uMax_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", " ", 
       RowBox[{"{", 
        RowBox[{"xdot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"Clip", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
             RowBox[{"{", 
              RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Theta]dot", "2"], "+", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
         "\[Theta]dot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"Clip", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{"\[Lambda]4", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
              RowBox[{"{", 
               RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "0", ",", 
         RowBox[{"-", "\[Lambda]1"}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
              "2"]}]]}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["A", "2"], " ", "\[Lambda]2"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
            RowBox[{"4", " ", "A", " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"5", " ", 
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"4", " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"5", " ", "A", " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"4", " ", "A", " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["A", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"4", " ", "A", " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"A", " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Clip", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[Lambda]2", "-", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
                  RowBox[{"{", 
                   RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "A", "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {"\[Piecewise]", GridBox[{
                    {
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]4", "-", 
                    RowBox[{"2", " ", "A", " ", "\[Lambda]2", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "\[Lambda]4", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
                    " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
                    "2"]]}], 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "uMin"}], "-", "\[Lambda]2", "+", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "uMin", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
                    "\[LessEqual]", "0"}], "&&", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "uMax"}], "-", "\[Lambda]2", "+", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "uMax", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
                    "\[GreaterEqual]", "0"}]}]},
                    {"0", 
                    TagBox["True",
                    "PiecewiseDefault",
                    AutoDelete->True]}
                   },
                   AllowedDimensions->{2, Automatic},
                   Editable->True,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                   Selectable->True]}
                },
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
               "Piecewise",
               DeleteWithContents->True,
               Editable->False,
               SelectWithContents->True,
               Selectable->False,
               StripWrapperBoxes->True], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Clip", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Lambda]2", "-", 
                 RowBox[{"\[Lambda]4", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"A", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
               RowBox[{"{", 
                RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "A", " ", "\[Lambda]2", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "A", "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", 
         FractionBox[
          RowBox[{"\[Lambda]3", "-", 
           RowBox[{"A", " ", "\[Lambda]3", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
           RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]2", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Clip", "[", 
             RowBox[{
              FractionBox[
               RowBox[{
                SubscriptBox["\[Lambda]2", "i"], "-", 
                RowBox[{
                 SubscriptBox["\[Lambda]4", "i"], " ", 
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "i"], "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", 
                   SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
              RowBox[{"{", 
               RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, {3.8647525495264535`*^9, 3.8647525696120253`*^9}, {
   3.86475260002929*^9, 3.8647526595642357`*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[1255]:=",ExpressionUUID->"fc3c1402-abed-4553-a13d-021194ac6f85"],

Cell["\<\
The constraints are being satisfied. However due to interpolation, sometimes \
the constraints are violated\
\>", "Text",
 CellChangeTimes->{{3.864753092867558*^9, 3.864753117490677*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"9f439e66-0252-4504-9415-cefa2fb91a2c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uMin", " ", "=", " ", 
   RowBox[{"-", "2.5"}]}], ";", 
  RowBox[{"uMax", " ", "=", " ", "2.5"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "1"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess", ",", "uMin", ",", "uMax"}], "]"}]}], 
    ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"uMin", ",", "uMax"}], "}"}]}], "}"}]}]}], "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{"uMin", ",", "uMax"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.864752675691077*^9, 3.8647527331306915`*^9}, {
   3.8647527991195717`*^9, 3.8647528275444736`*^9}, {3.8647528874323072`*^9, 
   3.864753042532665*^9}, 3.8649293888446264`*^9, {3.8649295531191874`*^9, 
   3.8649295648353753`*^9}, 3.8649295977456713`*^9},
 CellLabel->
  "In[1463]:=",ExpressionUUID->"c113c91d-ba61-46bb-8acb-0d58082f1b10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "0.741254271073148`"}], ",", "0.6720345583012772`", ",", 
   "0.9968613940434397`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8647526895596356`*^9, 3.8647527350620723`*^9}, {
   3.864752803605135*^9, 3.864752829776758*^9}, {3.8647529038850393`*^9, 
   3.8647530463684373`*^9}, 3.8647533630670757`*^9, 3.8649291628801312`*^9, {
   3.864929361288589*^9, 3.8649294128498163`*^9}, {3.8649295358707976`*^9, 
   3.864929626635272*^9}},
 CellLabel->
  "Out[1473]=",ExpressionUUID->"804feefe-9b04-4ff4-b1f0-cfdaab08501a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
6eYzcE9mp0/c40JsXW0yU3+wHrg1H04cIfZvsbCmxwcTNrBvn42qvV+IZZho
98o3MhHF6s95bSJes/F73ivf/oCEvEuLuUT+Xk7/eNSmi4nK+XQrS4j41N5j
F6keSOxv08JMpfRCbNxR2scqtQ465Z6KXCTe9+yx6lwRXjaoLVmVsDerEHOJ
juxeNc5E3WbSSXbE+5ReUOcXTKsFMYX8d8lEPb7yhdzqJSUzIN7Z+F6XeJ9o
lUQe/d0zMP/Ir52poYWYkvnkWGpyPVyumhpTJ74/beFt4+ldxH6nvVJ2elKI
ScufPtheS9Q/ursnrxP5ufxbvKJOPxM1x4uydYnf4ynB2hJezYBga59tAFaI
iR67kRWoVg/z5v+onCC+7x6s5QtYTty3PMaHgYh30icDE0U5TPRFHrOVJz7f
6vJip/qGOmB/GFTOIPLdHv/z7hFdRHy8JVt+Ir8Q27r/pFrL2h/Q3lzKs574
d7M7C3xMfzLRkqqT39qJ+SR52P7TO2UoFAYiedjz0vOpfi8ZiORhwXV8Zk1D
dETyMMncqBbDXTRE8jCDVdNr7xdw53hYsf0hfwnrqTkeFl4XuYU+ODTHw07t
O6K6bax1jof5fgl6oM3/ESN5WNzXJv+LvZ0YycPaj9Y+T48cwUge1jDvyafU
7Kk5HlZfc3rqmDFnjocJdo+dcZyg4CQP2/fRAH0xp+EkD0uLptP4r9FxkofF
X1m9xk+HgZM8LOZu+I61FAZO8rDS8HfLXJZTcZKH7bz37OIZx0mM5GHKh1Ob
PP90YiQP4ze+x5tl9GmOhwXLj8jKPmHN8bCAjvNFN37842GnS6+/Oi82M8fD
eidZ3Hj27BwP4+6o0v9kzZ3jYecdRleoHuPO8bCBNv17nsacOR5mcG6XP3cP
G0geZjdwzrwlbApIHmae7LLgyPMxIHlYOfXXLqWBQSB5mKdgxJvI3C4gedhl
g0mVbPXvQPIwamXj9yb9UozkYbTpH8uc5bsxkofJhtHzMjpHMJKH3foocrHW
jI2RPKyWohmg0k7DSR5G+c8fkoeRY5KHkWOSh5FjkoeRY5KHkWOSh5FjkoeR
Y5KHkWOSh5FjkocVaeWuyvBlIJKH/bnqim3yYCCSh41rNLv4b6IjkoeF6gXr
h66gIpKH6af6OXh9Ys/xsLJyl/Yf1WPgLX5e5fDREXgo0i7XLjOAkTzsid1l
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
ciVXkikoNKqPl27HwEPwZSKbUqko4Nzpmz2GRHzbfeZBSRsfkn8PPbaKk4CX
OfWPtfAj4ZGKgDIrNpy7Z/Rz+KcA4l/btMTrPQdikmPMbboE0RNLpaJ5flzY
UjYvxo0lhC5dtJzA53OB5Nnk86uh/NJer2zYX77t81QcY45v+3WGbS1dwEDF
4TFDpmoU9ME3PzRpDQNnmzym2q+hok25Bc4Oyxh4eqmZVaImDYWc+W69+x0V
xwsaZy9bCKDrHpMtFhmzkME+yxB2EETHVnqGOu3mArOqlnnOXghR9oeYphPn
adhy2ln6nDA66Gr1+7gvB0je3f7oAE/8bhq+/3r88TP9/+ab5N9qE2JyHlIM
RPJvr3mNHK0XDETyb6+i+JPvWuiI5N81Qw0RK5fSEMm/8228dUMduXP8+019
WWrs8CQkJ01JxDkPg+exUI6bXDdG8u91Od5v7/GOYiT/Lk5LagoUm57j38Oc
+lzee5w5/r1LU+GntxgVJ/m3iueunY7ONJzk3/I8OzxdiXpjjn9fWT9kZ8TA
Sf7deMTVs6uHjt+i7RswPU1DZrKiL0PbKbj3l8zmmyfpSJyuZ/j4+QS258w0
deslBoqdZ24totyB8ToLUBff4EH9foWxYjs+Q5x7hMwpf+J+ppAZda2pD/RL
Np2xC+VD7TKiPyLQOCwWLe1YHMKPFqx4nbndcAYcjbyU/G8JoD7xp5mRiziQ
3rTtxYMIQXTquFjtTmK+up18twqHCSGZ85UtSaZcGK2KEmK8FEbKTry6Lps5
8DfqatqaFBG05PIPGxMlNpQ69HrkJoqi73d2lDKI+3K8zzF3dpYY2jAt2nDF
egxsijvLuUfEEWc6LnTR40Egeb6NxnZO7F82RvL8HhnbrOur6Hhlt+WA0Yl/
+3fcjZmq7v1vf5C8/9JGiprqLQYieb+YiHqMMHE+Sd6v0yO6dYEcHeVNBQrt
8RkBiTHhKIX5gxjJ90Vyss2ctk5gJN93WJGiYHSFPcfzaS+cEz8VU3GS59tb
M3f6idFxkucPa56+3T5Ax0mebyJVf1bfgoE/2Rl5mtZJRYW1kUpTX2l4isHx
mUcMXjR4nce0X6IdQgterDovxIeO1haMfbs4DA6fLSROzeNH8yPkND4snoLF
fJtG44UFUJT58hsyf9mQ+DHKMHqeIEoKVM1KJO4PyrPnrF9JCSHB4iBlz6tc
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
//+f/w/slIoP
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{549, 2893, 469, 470, 471, 472, 923, 790, 685, 605, 
            548, 514, 947, 814, 709, 629, 572, 971, 838, 733, 653, 473, 924, 
            791, 686, 1001, 868, 606, 980, 847, 1034, 742, 1017, 884, 1046}}], 
           PolygonBox[CompressedData["
1:eJwV0UlQDnAcBuB/izCpiHSyhBvZBlccbH2RSRczXBpamMmMA2NwQmXrZl/H
mnuWvi9LWi4xnJSLmboYFaIaByY9/8Mzv/d959u/ospD5XXpIYQ0eijNDiFB
0pDiVEYIEx5wiU3MYNB+zz6PFn0fS2mzn7b9ly+zmRyG7Pft83mq72cZL+1n
bIEr+hZyGbY/sC3gmV5FMa/s9bY0rupbyeO7/TUN9nSu2bYxkx/2h7aFPNer
Wc4be6Mtg+t6CbP4aX9kK+KFXsMK2u1nbZnc0BPk06qvoUc+zojHPdYX0Rq/
u1tFrdzrlpOdGcI3/a98hJVyp7ueT3I9/fIeRuW3XvOcPIWb+le3klL5g1vC
dK/Zr/+RD1Ogz9aT8tr4XP1d/HzyQfL1E/oXeTc5+og+IR+jUP/lfZvlxfF3
0pPxv5GrOSD3ubsYlP+5R1kld7kb6JVH3Toa5AF3L2Nyh9c+L2dxS9/ORznB
gDyHlLyO9/JJfnvOE30Jqfi/uzXx+8if3QqG5NV0yxvpkxvj7+u5F/Sp3NZ3
UBA/n72Li/Zp3LGVMZcxezdN8fflrm0nhYzbJwH8kmt4
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0LsrhXEcBvCfS64Dg8VlsWHD7G4gJSyUCVkUMiicXGN23fEnuLOyoJgw
EQPOYaAM4qB8zvDp+zzf9/4W9w53DCWHEJKIsC20ZofQwpF8yAvZTmpkjT/m
UkI4sI+RpTewyi+zju3bR8nU61nhhxnH9uzL5D52KLLb5Nl+Qj+nUj8kQ65j
mTjTdrvOW5CvqdZPKJVjtMs39MrbFMobPLnmXe+S7xiXB8x3zuSKxPeQLo+Y
nzzIGakhNMuX1Oq5ek/iXVnSk/Vvc0rf8Yx8PSIH88M+x+xO3It5PU8flD+4
0tP1KvmYEn3UjBOV28xreuR+85UtucBc59Hz3vRO+ZYx+ZTyxP8nTb6nSb6g
Rl7ki0n9H7WVRag=
            "]], 
           PolygonBox[CompressedData["
1:eJwV0jdMVlEYBuCDEgexl8QuaOw6WWibZQMTUVDRaKKTCQqWwTjYNktir5td
AetMsyR2QHCwJQ5o4iAmJoJdfL7hyXnf797Lvf855KyrLNnUK6WUwSuKslIq
5qVBOxkuTmQ1tQzvndJZ2uIBfQKrqGGY+RleuNZDjlk51Qw1P02reaG+jQfM
MrvDP/NsfSXXGGJ2ihbzAn0r95lpdpu/5uP1FVxlsNlJms0P6u9YpD8hX97C
PWbot/jjvr16G4V6E+PkjyyW21kuX2GQfILnnunW18ofOCBXWbt4Ky+0PiZP
3h7fSKfcLzOlsriHzfGt+gb5C3f1TH26fJPf3jFC3yH38NX1AXq5/J49sZd6
RVyLvdb76AVyI2Njr6w/4hvl4jgryuT11k9clgdaj/PM+7r0NXIH++VK6zfe
yAusj8iVP1Mac6rkJqbJN/jl7+zWW8nXGxgjd1AU30mpfCl+j3yMp57Zp79m
vv6QefF+GpmqX+en+3bpLeTp9YyWl3GR/vrROGv3zdXjH7qBKWa1sRfmO/Vm
cvU6RslLuRDnox+Js3PfHH0j9Uw2q+G7+Ui9hPNkmR2OfTGfrVdQxySzarrj
DPUlnKOv2aH4feb/AePYdOA=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1WWUVmUUBeABpEO6a+huaelQMVFSMQhRQTAxAAUDFRUVFVGku7G7Fezu
7u5uefbyxzN7n/ebBd+999w1heOnD59WpKCg4CY/kgP8+EwuZwr70JkRzv+U
N3MOh1OUgc4/lyuYyr5MdFaah/TL6cJI81/yFs5lprkhr+tHcKJemSf16yjG
IPMXcmU+53RzbV7U92OSXoaH9StkFxbo58nmvKcvlnuzlz5K/i1vzffSOzFH
nyULWc0b5kWyF9sYZ84NqsIKnjJfJbuymcXmebI16/jIfIPsyw72MA+WX8ql
cpWcL9szTZ8h6/CSfo3swTD9WFmWR3JtnK+34H29K6P1f+RtzGW2uRFv6kcy
Xa/K0/r1FGeI+Su5Op+zP5OdleNR/Uq6Mcb8r7w995KjKMFQ51/LNZzEAXSn
ZPbEZ9/ItZzMgfSgFKUpQ9nsh9/7Vq7jFA6iJ2Od/yfvyLVyNOXynJ1/J9dz
KgfTK/uXZeVOcQHHUJ5hzr6XGziNQzjOWXkey7Ojd3Yu+85d+oXZab0xb+nj
c316NZ7J8+QivQ0f6xVy7/Qf5MbsJWeY6/KyPpzj9QrszH3N/rEw31W2ZC0f
5NnIPtlRfZwsynLuNi+QndnEvLw3sglreDvviezNdibkvsvqrORZ80LZjS0s
MV8s27KeT8xLZD/2zLOUP8pNXKp3YIZ+pqzHK/qhnJDfZ5d+de6d3ooP9T7Z
Pb0Y9+SeMUdvyjv6xDxzvQbP6TdSMbti/kluzn3kMKY4q8jjeS/omz3M+8S9
uRYmUSk75OxnuSXflxH0yw45L859+iV5p6icHXL2i9zKWYykP1WoSjWqU4Oa
1KI2dahLPerTgIYU0ojGNKFp9s7/8avcxtmMYkD21HkJ7tfnM5lm2Rlnv8nt
zGQ0A7OLzkvyQJ5Ldjnvgbkmz+tLaZ5nY/5d7mBWrstcn1f1MUzVK/GEfi2D
mGAuxYP6ZczVm/Fu9jfvj16LF/KsZXeW5V7Kdmzg0zxH2b/I/39DWuT5yT/k
spzl35Yd2cjs3A/ZgFW8lu8je7KVseZFDM6u0ZIhtKI1bWhLO9rTgY4MpRO7
AQevwCE=
           "]]}, Annotation[#, "Charting`Private`Tag$1251506#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hf8jXUYBuDjhzIKyW6hkBElIxJK0x7JSmQ2jIyolGghSkYoo4xC9p5l
k71H2XtFZlal6/n0x/X53vdz3ve857wrV5O2NdskSyQSrZISienCB8kTiaty
X8qxXn+e/fItzJYf4Vf5HfbIdTgrH7H/d3IOpumnrM15Vd5urc5x+br1bR6U
l1qf4NYUicQ2/YLcmkz6J/oBuQHp9Qt6wtpFz26d4Xhd5WvmSfpX1mNxPDLo
5fUN8guk0g/of8nt4njyHGtRVst/Wt/gXXmvtS5/ykcd43v5LqbrTdgh1+CE
nJ9lclm2y58y0z4f6tflfjxJKuaaPcoa+b34rbYbqd/NDL0pBZhl3s3shtyf
p0jNcfPZdPfZ3/oAKpCGE+Zz+Mhn/+gDeZq0nDSfyzwqpU0k5lsX8LFt//X5
1zzDbXHNzEeZ38NMvRkFWWj+idlNeRDPcjunzUeb38ssvTmF+Nn8U7MEg/Xn
SMcf5mPM7mO23oKH+MX8M7NkDNGfJz1nzBfRwzyJb8xeIANnzX8wy8kcvSWF
WWze0yw53+oVuSOusfmPZrmYq79GEZaY9zJLwVC9EhmZpxdjrdyFc7Ybq+dm
Xvx3awtel3daa5LWfXZSvyF34mF5ubUcO+TPOCi/zMW4/33n53JKhsU1tjah
srzRWpHUvvOgfkVuT2b9Tn2+XDz21dfF75PfJKP+vr5Prsft+jn937i/yaqf
d9xx8v1xnvT5cW3klvEcyLustTgl/23tHM+9vMJanp3yRWsbesiHrA25FM+D
7+4t38JwvQqb5EockjOxQC7BevmDeO7tM15/gAVx3a2vxf+Rf7O+yGm5KCvl
J9kl94zza98+8UwzQq9K5vh95iv4Ip5/vjOrRhYuma/kyzi/fG9WnaxcNq/s
OVll7euzNIw0r0G2eIeY/2SWh4VJ/787H+VX86/iHmCUXpPscd3MJ5jl5We9
NcVYbd7P7DZG67XIEc+aXpINcleu2m6ino9f9DYUZ415/7i+jNFf5K549vTH
2Ch/yDXbTdIfZJHelhKs0p/iN7kXa203QE/HD3ptNse9yGH57nhO5VJskrtx
3T6T9fws1t/id7k2f8gl47zIFfg9zru1LZ/Lh62vcFle53sGyun5UT9hbcpL
8hZrFY7EubB24B55kbV03Gfu3836ebkVd+rd9f1y/fg/cb/rN+X3yKbfcLwp
coF47vUl8T6JZ5k79Hb67jh+XB/9jP6P/E6c27h21qfZHfeL9S16y0esjfhL
Xu8YX8sZGKvXYatclaPyvfGukh9ni/xRPGv2maoXZKnenlJxrfVn2CP3YYPt
BsVvZZxel/viN5pPMyvEMr0DpeNdYj443g2M1+uRM94J5tPNHmK53pHH43k1
HxLnkp/0+uSKc2i+mW/MMzHBrAG5ScS18tm35pmZqL/M/SSL/+6zbVTxbG23
7mAnuxhq+yxMsl1DHiCJGWaFWSG/TZm4T/Vn2St/Ee8H+w/TszJZP2ltFveW
vM1aLZ5h1/BYPAtyxziWnkdfIpdhq/wxyZmpF2Gl3Ikn4p52jOFx7zBFb0Re
UsR94rM97GUf+znAQQ4xwj7ZmWrbxuQjJbPMHmaV3Jmy8Rzoz7FP/pKjcmOu
xDmM97qcw3rY9/4HAuVLRg==
           "]]}, Annotation[#, "Charting`Private`Tag$1251506#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HfcT2UcxvGfnVWRZI+EULYyQsgqyt57k4wU2ZIRJYUSEUUL2atCCGWT
GZkhUlZaKL2/f3xe1/X5nvt5nvOcc+47b4feDXolSSQS3ZImEtmTJxKnUyQS
rfG7Pgc9kTVlIjHFrDCO8LpIYjaEZ8RG/hoKmn3Iy+I8z4Gf9Da4rs9FSWs+
59XwHM/G39aL4CivwtfoDfA0T8qH6vegvr5DfmNeXl+hPxW/X/9Bvm7+oD5H
7ynLyabyezlIXnC9htzA+8mmsoM8JofLnK6f0duiK/+D15Hf8v7yI15KLuS9
5BOypTwY7lp2/R39ITTSd8sfzavqa/WGeIYn48P0TNjEK/CVeh1M4IX4XL08
fuG5cFZvhz/1j9E7nq91U80exjFeD8nNhvN7sZm/gdw4x9vjL/0T9EF9pLB+
hHlmbOETkQc/x7PB3/qn6IsGyIv7kQ8PID/OW9cR/+if4Xk0REq/+2Xz+/At
fxMFcIF3wg19HvqhEVJZP9I8C77jb8U3hV94Z9zU5+MF5LT2XbOiOM4b4w6z
V3hWbOWTUDjeG6+Ai/F94KLeBbf0BShtzSJeHS/G8+bT9GI4wavxdfFO0YSn
5qP0bPGd6jvlNvPH9FV6XUzmRfjH+mNopu+Tv5rX1DfqL8hm8ezkcTlCFnL9
1/j+0I3/G/tNfscHxN7hZeRi3lvWkK3kITlY9o/3LafzZ2Vx2VjukSdde0L/
OmbxPelHY4+Yp9FH69mxnVfkq2MPYgp/iH+iV8Rv8VzxW9wj/tMXYkB8O9a9
Z1YCp3gzpDUbw3NgB387ng0u8e64rS/CS2iOdNaPNc+Jnfyd+Pu4zHsggcV8
IFrgYVyJ/xdJsIQPQksURTEUR4k4f3A1zgckxVI+GK1ib+NanEtIhmV8CFoj
vXt61SwXdvGp8d3g99j7SI7lfCja4E7rx5nlxm7+brw3XI/3hhRYwYehLe6y
frxZHuzh0/AI/uB9kBIr+fDYg9bO4CVxmrfD3Wav8bzYyyvxL+K8wfR4RvxT
vRIu8Vr8G705HuV/yr5IFe/cta1yVdyDvkSvGd9n7H0+Uy8Ve0HfK38yr66v
15+XTeKskT/KYbK96xnk6/H+5P2yodwlB8b57Hpl+WXcg6wn28ojcmh8T/Ee
5WfxbmTluG+5X152rba+SW8R54p+QpY1/yvuB3fEczDfJlebP6ov1Wvh5TjL
+Pt6aZzhHZDRbALPh318RnxHZvP447jCy+FvvR9S4ws+Ms5F62bxMjjLO+Ie
szf4A9jPZ6I8/olzAGnwJX8FnVABN+I8Qlp8xUehc5wzsT/jHcdzw03X+yMd
1vDR6IJM/uZEs/w4wN/H47gVZwnSYy0fg6641/o3zQrgIJ+FKviXv4Q7sY6X
tW6ZXhtjeX4+W38E53g3ZDZ7ixfEofi7/Cu9PmbHfuTz9Srx3vQD8qr5k/rm
+L9lS9lZnoz3JKu6/l98M3Fu8LtkPbk97i/OtXgncnnsGfmkbC0PyyGxf10v
ID+Ibx4/8+64z2wSfxCH+Qeohtt8EO7Gej4OPeIMje8dNVAz9lJ8g3HveAoJ
v2+wn8mADXw8nkUW88lmhfAD/zDOJLMFvCquxc/zLXordNFPyZGyjmv/A8We
LLc=
           "]]}, Annotation[#, "Charting`Private`Tag$1251506#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nf8T2UchvEvKiuKMrKVhpRVQnZGCQ2EQiQjylaEpIzsllB29kgZFbJX
9h5llD2zZYbenz+u13Pd93PO93fGc8755W7UunqrJIlEYljSRKLHXYlE6xSJ
xF/JE4nmSI+dup/RE73QG5+hD9rY9m/btMB92KX7BV/ob8v98BSu6PqirX6/
/C7uxx+6X/GlPoH+uqdxVdcP7XQH5PeQAX/qpumyYIL8EubqvpKTYIBcBJt4
aazh18zP53kxR66PvbwKdvL+5tvzg7wlDvMayMhXGYtgCb9obITdtp9uzIo7
UiYSE82d4m8gnfxynBd/HqnkrfIN3gKZ5Hn2/5onjXOWB5o/xmshrfyMvJmX
QXJ5bVw/3hTX7fub8XH8rD9rfDPg+4xVsYsPsF0Hfoi3Qib8Lj+DpXyP+R94
NkySX8F83WA5GQbJRbGFl8W6OAfzC3g+/CI3wEDd+/Jh3hqZ49rGMeKbuD74
XFcM/+kG4QPdEbkNHojjjt/F57FuYi3E/YxrhI62PWqbtsiCv3QLMUR/J77Q
FcfNOHZ00h2T2yEr/tYtwlD9XfhS9yxuxfHhQ91xuT2yYb9uhi47JsuvYrFu
WNwLfCWXwFZeDuv57Tgm/gR+lRtiiK6zfIJ3QHaslotiGT9g/keeA1Pkf4x1
UT3WuPEFpHbvt8V14+/GGrTPt8YUsdbNfW3uOK+Ne+SS8jb+XGwjb4jniDdD
BjkhL+JPYi4/Z2yAt+K6GqvhDz7U3+nCT/L3kQNr5GJYzg+a/4nnxFS5Bpbq
vpNTYrBcCkkwTN9Vd4p/gJw4pFsW5xL74CPz/+g7Ilc8f7rlGI5u5k7rOiE3
juhWxFw8W/hGVxpJMUL/se4M/xAP4qhuJUbE9cQQXRkkw0h9d91Z3hkPxXOo
m6nLhWlyzXgH6EbKd2OoXBZ3xLqQ82Meb4RRtvtEPse7IA/WysWxIu6V+Vk8
N6bLr8UzqRslp8EwuRy28/LYyO/EEl4A8/l5Y0O8HWvb+BL+5KP9zqf8PO8a
14nXxMN8nfHZWP/WwEr5UuyP++QT9pvNH4znSf7B/GleD+nlWvJuXjnOX94e
zxp/D5nl1fYfHe+teJ/J35o/wevEOuQ7jBWwiV8zvhPHEevFWBC/8cbx3PGX
sZuP8Zs9+AX+ER7BSd0c3UOYIdeONakbE2sf38nlkRxj41ulu8i74VGc0q3F
9/ENM3dJ9zEei2dPtw5j9fdiuK4CUmBcfO90//LuyBvXJ76Hujz4Ua6D9fHb
cjqMkCtiJ6+IzTwllvFCWMCbxDuAv4I9fHx8U/ll/kmsW/4aHo/fNpbAKv6v
sXGs8fjOxv3FT/ozxvp4ne8xvhhryv3YEe863hIPxDvBfuPi3iKZPDKubewX
5y5XknfxSvEsy1vk67w5Msqp5OW8MBbyC/H+QNN4LxhfxV4+If4/4Ff4p8iH
DXJJ/M7PxnefP4KZ8hvYqBsf6xKj5OeRGivkp7CIN8PE+F9Cvsp74Il4l+nm
6h7FLLkuNukmyPdjtPwC7sak+N9Cd433xJPxXOk2Y6I+A8boKiMNJuv7667z
Xsgf563bgklxXTBW9yLSYop+gO4G740CuKjbisn6TPheVwX3YKp+oO4//hkK
xrWQS2E1v2xsEufh+l+y7Tz+GGabq4dtuinxPGKcXBX3Ylp8b3U3eR8UivWj
2x7/v8T3P7518R2K93m89+L9FO+D+Bbb75bt+6JwHINuB6bGOsJ4XTWkw0r5
aSzm7+AQr459/LaxFbI49jn2/x++xnPa
           "]]}, Annotation[#, "Charting`Private`Tag$1251506#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1VWYlVUABdAL0iGIlHRIhwhIS3eJSEk3AgoI0ijdjSiNlIJ0dxmkgCIh
JSnd3eA6D+vbe58zM8z8d+6QvnnHmh2iRCKRPFEjkZSxI5ENcSKRUpzXp9KW
aqQiNWlIy0YfU5oL+jTaUZ0jzhrxSl/LYNKxyVkZ/tOn056POOqsMa/1dQwh
PZudleWiPoPPuWZ35m3+sGvwj96ECOvtoTzW+5KOY3YGtujluKTPJErcSGS4
nZ0v7OuyC4nZZ7/p/nu9IB/bx2RTopDK3Ty5wXksfZz+fvha+ko5zPkT2S98
vrP0MqNcFJ6BPO4+kZxqF5dFZW65VlaSGd1v1cuHr2tftpPLWXYJ+YMdVY6w
C8scMrNcGp6Z7OD+hv4V+e0k4VnIBXK/uwT6JL0QNe3jshlR2WjHdj9ez8tw
+6nsTwZO2O+yTa/AFX0WHblpdyUpB+xPOKE35w022SPIxHa7Ilf12XSiFpn5
JTwHrulz+JLaZCEr2chODnLyq4+tzHV9Lp2pw0lnLYjGZnskufjNrsINfR5d
uGV3Ixl/2nU5pbckOlvsUTzTB4TXk5N2bn7Xq3JT/5E3PL+Rds7wGti3ZXeS
85ddj3/1VsQgtY//UW51HkefoOdjtP1cDuTdwN1iecr52/o0vRjv6etCOt8h
q4XXztkt+x052y4pf7KjyVF2EZlLZpHLwntDdnV/R+/BB/Y7Mr38ObzX5UH3
CeXk8O/KwuFnlKvlp+5Oy9bEJE349+Q253H1b8PvImPsF3IQmfjXTux+uv4h
eeydsjq39fl0467dkxT8bdfnjN6GWGy3x/I+u+yPuKMvoDsNyMtu5zW4q/9M
DxqSj/x8QAEKUojC7Al/A7inL6QnjSjC3vAe4r6+iF405qyzz4jNL/Y4ivKH
/QkP9MX0pgnnnLUlDr/a4ynGPrsWD/Ul9OGe3YuUHLKbcl5vR1x+s+N5phPD
68gE+6UcHP5OcNpO4n6GXjw8d3u/rM0jPYW7OfpSPbo+Ws9NVn25/Nr5fdmb
As5Shb8NcqE87O4tfUr4urKIzCXXhPe7bOb+gt4+/I7b8WRaOV+Wkr+7jy+/
s4vKAjKHXCUrhN8j96/0IRSys4TfI7lEnnGXVJ+plwg/m31A1uGxntLdXH2Z
HkMfE94zfGM/kH3Ce5EjdnP+0z8nPjvsibzWh4ZnwVm7BH/qdXmiL6cvD8Nz
Cu8DjtotuKh/wZvstL+jJH/Z9Xiqr6AfLbnkrAMJ2GV/TykOhvcbz/SV9KcV
l511JCG77UmU5m+7Ps/1VcT0s48N7zWy6StkeTnA3aPwPMJrwj92a67onXiL
PfZkynDIbsALfTUDaUNZylGeClSkEpWpwmGf05CX+hoG8RlXnX1JIvbaU4j4
voaF75NzdrLw/59eMnz/+npZWVZ19z+Aqh+z
           "]]}, Annotation[#, "Charting`Private`Tag$1251506#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, {-2.5, 2.5}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, {-2.5, 2.5}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8647526895596356`*^9, 3.8647527350620723`*^9}, {
   3.864752803605135*^9, 3.864752829776758*^9}, {3.8647529038850393`*^9, 
   3.8647530463684373`*^9}, 3.8647533630670757`*^9, 3.8649291628801312`*^9, {
   3.864929361288589*^9, 3.8649294128498163`*^9}, {3.8649295358707976`*^9, 
   3.864929627823885*^9}},
 CellLabel->
  "Out[1477]=",ExpressionUUID->"3c8ecc16-f652-40b8-9ccb-28d5cd1bf38d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
JPUAFoF6qLKRC27s9WTiHqpNb74nbRkNnx/64Kbu8tw2JkA90x11fhelC/+C
f+t2/+rq5oVPNP8k09JmgbDO5LfpYT4YyJ27s5t8n85t69C3+scPy1Tfvhh9
OYv7pnlFP28KBLCxh919/PMbUV8m7pvGJo0kCfIxcN9UPsKBq7iVjvumQvdO
vu6coOG+aZ1axFV1Kzrum6ZuX0xs2coAD+Xp/WqPxaCu0Avb9RaTwMHI+vcM
lQKzsiXfHrhIzoexlAtjMRRoHfTJX4ucH5uZBhJAThyuWNfjmeXOAcjPkrvs
jTwLJrGXtQ3m5zm2nQ5QL9VmX/zjH+S6E/nW/Q1NJva58yBo5M5txQ/joGsh
EfZGnknc/NFmFtZPB72n7gVEXmIRVPucVdcGmCBtXi+ZZ5hJ1O951ZsYxwvn
XkeqrJuZAYVrpoyuvuWD2uHL7TnNXJAmlysqlcUPU42+nOuS4+IeasbNVzNv
LBnYsz7doFSTakHHPdSLF8YHI8jrhTxrrXzk5G4VOqiUfvzHmCMGAx+ald/a
zgEuPPuFb1ylwCvDV4N8yPlFPrP27JYZCuS/ceXJubcc7Fs3a1Et968cA3Ud
t2sOlNOAhYJ2eeoicj+hvXCFVBcDHI18p5NxjkWse79XZh2HBX6v7HDe284g
1vEPf5OR54MH1nUL6+pywVELlqGvMj98ltdVp1v+v37qoTNFD+5/peN+6ueq
MscKCTr2qkNZM6UXyPd55pps53stCnRN+hy54v/PTTFo+26dS87nVYfFBMj5
PXRbzteDQBzOai4/4rieg/1pit5WE2c1HrhaR0yO9o4OktIkWwNPs4jI0KiT
kXFM8FlSJLaFyiKeSv8V0g7kg4x1Xm1thVxgHrXB+2IUPzwS3joebMHF/dSM
hQ8cJidp2KMm/KDuX7SGDlo+Otp8c6FAL97NHiG/yPlIWuLRuhEKHA/4MsrM
4+DeKkXf71BuzBjQsV80wwtpYGNuNHBvYRLxr7WHvGIZQHGpc8JLXxbxIOpx
vd8CPpguN/RpZGYWqO5lL9IR5odtdMPIE21c3FN9vnmPpdVqOvaoou/CNS5w
aGBrX97x74oUeMC+QL3yAXl/mZPyb5IocPHWevN+cn7rcX97U2UdAyz3mijw
v8EiBpQ5d/Mq+GC1bbncq15yP2i+umOWKQRfHdR8pk3Oj7MHtxRohFDgwrQt
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
W43bPSJj2CsWLjb7YTjRj73ir6n5jLSgNuwVlcrT2xb5lGKvGNznN2XMVwrO
VH4YqN0kBR9KRTxqTi3Gvdrw+yx/FatC3Ks98Ot82udDubhXG71ygRx/yAfc
q51zmAnZ+Mgb92otOhK3da9JI5CHnNh7iz5SUkcgD+n3uvtAfEof7s1yhQYd
wycHsY/8qO9JN9hJB8hH3gw9sFTzGgsgHxnXQL8ZkjYJkI/cQ1nL42LGweep
L6vddPz3nkncq+X2fj3a8pCJe7UfHD63zr8cxx7SafJRvb0gm0AesuTD6VA7
x38E8pDnveqtAu7N4vPPzStcLldc4OLzz33j39jygVkCnX8+NwktGXn/cB92
vUXEv6NjfdgrDglUtUTeGsFe8YbogfEN8RPYK15x4alzcqZjr/j36hPF6xp0
7BU52Ud2fdAax15xysO33S1pEHvFPxkctYkrf7BX7PbfWLD1Win2isvmfLaf
USsFi699VN0uKAVlOkJO5Kwowb1ZuQanXGO+ItybvX66Zepx4BfcmxV2OmKg
GfsJ92bzNul26ExG4t5s+8MHf7ZcekcgD9l2sChC90Y1gTykW2PzoDabAZCH
FGwL3/KnjA2Qhzz6OMGshnyfkYfM9rP9dX8BByAP2Xz2m9daqf95x/b3f/ZE
THMI5B37NYhlOTtmCOQdvYLP8+cbcwnkHXXemqx+LMwl0HnoO7Yc6l+3foao
E5AtiFAXg3erheDO/kHsE+NCQ04OF41hn/g9+frAegE69onhh1+tVbtCxz7R
0vhR6BUFGvaJzy530z7kjeA+7Pji6MDZpX3YK2ZdVL0RaPATe8Wx6Qc6bm6l
4PrJPeudyyRh3cvb51aUlYBvUilPnYylYFzTr/ixrcW4J8tv0ndn52YC92TL
XU76vBjOwj1ZutmjA9mnE7B/9L8rKPKIv5FA/vEkx7woSnUA9175Kf5azqUD
2ENmb6+lckNpAHlI0+l3sb1yLIA8pFebe6rLjUmAPGT6YyMpUQsOPk/9ROMN
pXH/SdyLPWVl/eDuJBP3YuXN1NTPv53A/vHKjq9+ipBFIP94uuaCOk/7XwL5
xzPjO+406s/i88/f3yoKuO7Nxeef/zZb++m4zyyBzj9f+fzmQYFV07jPmi1R
EvFzTR/2ift82U/cB4exT/STDc5tUJ3APpGuKHZ06xE69on7U3wsdc3o2Cee
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
BUaERKOEVrRF1XasrYA3+757LvwXkHjBTA==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{466, 44, 386, 387, 388, 389, 840, 707, 602, 522, 465, 
            431, 864, 731, 626, 546, 489, 888, 755, 650, 570, 390, 841, 708, 
            603, 918, 785, 523, 897, 764, 951, 659, 934, 801, 963}}], 
           PolygonBox[CompressedData["
1:eJwV0k1MzgEcB/B/bG1cjApbh2bMkkv0Irl5CzEk7kJP0Yu4YJy8XGx1afUU
5ck6aIlKteQlpZO83iIyueKgVN7G53/47Pv7fv//pz3P1oqiyoKKeUEQxDHK
WtKIGEpInx8E7V7YzHf9PvXstT+zHWYxY7ZS1tlv61uY0geIss8+aitiCW9t
x1lv79C3Mq0/oIH99ue2IyTwznaCDPsdfRs/9Ic0UkamZ3ft25nRH3GNAvsL
21ESGbeVk2Xv1POY1R9znQP2l7ZjJPHeVkG2vUvfwZw+SLHtk36GVJpshbZX
7mKi7gSWui/Jf7Jf1slbciUffKZKfrFdJINqfQExd6XnG9zd7p3Uuhfx035e
ztr6ZLVslSkM88TziJy0d8uz4feTyxlkjX5VxjNAk94uVzNCs88flK/tnTIi
G2Qiy9yXZUC9u02uYsJnTsmv4e8l5k4m010jF9LiPum9HPc99y5+6Rf0ufA9
hsL/P/2z+xxp3LAdsr1xl9DoTgp/j/uKjCPq/ui90+5v4XckiyrbRluPO5/f
+jCx8PuS61mvfTd/9Ke0hH+HTZ712ffwVx/hJv8Bggpssg==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwVzzkvRAEYheFrS1SIRqKQkFgyDKG29ij8AMvMUKJBQoWKUGBQmEQh1kQU
DAoKjeUHoENtV9ARzy3evOec787MndLYUNdgZhAEGZhAjxDlCAbkfqzgFF9o
8/Ae6rKCIKEv4wSfaLXvotYtridxjA+02HcQdYvp9yjQe3GDTvuSrVIewxP6
bWnbO5r1bdTY+vQGeQovGLbdhe8i/2Faz+ceXKNDX3RPyTnyLCrkIk5hVH5E
Qj7yXAlvYN6W5h+e4De3c84L3xVN9gPe4mrudb/kKuxj3X7GueF3oV6/4OLw
hkn9iJ95iG99voy3kbT9hv8x/D0u5FV0y1dolxc8vyZnyzMol0fwgLh+6D4n
f2Ncf9Ub5U1E9H92r0Dy
            "]], 
           PolygonBox[CompressedData["
1:eJwV0jdMVWEYxvHDRQUig5MJCiKDcbiom2Biwb5ZsPfEDSxoQlGpLpbEAU0Y
1MREwI4mxsFeExvWWNHJQtssm5qov3f453ne//fde875zinaWFW+NZUkSQZ6
kEYxdhMtuICXyLFpFe5hfmaSNHPn8QLZ3ErcxTxrTVwXniOLW4E7mGutkRtE
kXk7PmIDf457hmHm5biNOXwDN4Cx5m34gPX8We4phpqX4RZm8/XcFH0/fqKO
6+cK9Sr0YB13hpukN2MQW7gn3CH9D1rMQ+RS3MQs8y7rHXqufhCleoFsxz79
B2r1PvvGxT3iCHdVZsYejIl7lSNxFHH4F+V7uVae9tv7cjy6cIy/LrNwABPj
LGVerMVZmy/JAblZdsdZyRNxj9zveMa4vhwh27BEv4GZ+k772/XheitK9Hx5
HHv176jRe+07rKfCoyDODO+wxnzK+gS9Ef3YxD3mWvVfaDKnZHk8D8rMO6xP
1vfgG6q5r1x+PAveYjV3kivWG9CHSu4Rl6EvxjXM4Oq4Lxgd18eb+GbjLLi0
Xo9eVHAP44PXF8X7wXSulvuMUXENvI7vmu/kHuAfFnJXMI2vMX9CXvwnXsW3
znfEO8RfLOAuYypfbf4PyKlv5Q==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt03l8z3UcwPGZNhVarp3OmJCaSRiyhQ7MtbRWbJWUqzZUChUlZ4dI0V1C
RXSv6BDdOgml292tw935fD8e/fHc6/N57/f47fv9fL9rMqSiqLxKQkLC+X5E
q/nxqt4UM7qSQ6r5B3oHI+hDIkear9apDCKfpmaf60OMow1pZh/qPEZyiv1P
+gx9OcF+mz7G9VTlKLPXdBqDybX/TldQQDP7L/RhzrD+W6+mk/Vv+gKF1lXJ
tU7Xj3SA3qk99E8dRXvrn/UcfVZ7xXkwiH72rXW7nq2P61n67//nNinOSfdp
ib4U96RJlHGE/dG6RvvrdD1ND2opba2/1ydjTrb9l7qQa+hs/7u+GJ8lw/5j
vYvL6GD/iz4X38+J9jt0KZNJorrZWp1BGd1obvaVPsJ4TibTbL3O5/I4K5Kp
Yf66zuQCutOOLPMNuoByiuIdoqb5GzqLC+Os45nH+xLPNc4jroljfO5NvZmL
OD2eBfXNP9G7qYhzj2sgxfwtvYUh8dzj/mlgvlHvYTQD4xo41vxtvZWLOZPj
zb7WRUygIw3NNum9jImZ/R59Pt4JTrLfqcu4gXz7/fpy3AO17N/R2+JsrQ/p
0DhT6x/0qXhnaGH/jS6Oa7H+RyfSxfoPPVdXap94byglz76Rbo7z1fvinPQv
PU/Hap7+qsVaqb01kcEU2+forjgXfUJ7xj87N0qBHtBX6GedTIp1bX1XZ8fz
tj6sl8Rzt/5Rn47voaX9t7qEaznVfq+uohON7T/V+7ki7pE2Zrt1OVPiOVHH
bJ3ezqX0opXZVn2U6+hME7PP9AGupCTOn7rm7+kchsUZxLlynPkWfZCr4szi
3qhn/r7OZTiFce1xHfFd8XtSSSOdDDLJivcz3rl4b+LZxD3GdcXfoinNyKZ5
vG/x3OOcqPTS/wex85NE
           "]]}, Annotation[#, "Charting`Private`Tag$1251617#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1XfYzlUcx/HbI0kR0iKyI0oZEUIqyiwqNGzZsxDZUfYoe2/KHpmFZKdC
ZEVmEVLZFer1vfrjfX3GOb/n/o1zzpO9QZvqrZMlEomWSYlEXSZf8kRiJv8U
zsnvyZf5QVgqN5R/4jsgN/rLt2A8/5HxyvwWvg5G83fhTv59eoOOwGw+B34w
vw09o/uM9qKTaSasR0F5ML0NX2CyPJ/mxWbUc31+Oku/kJaiw+P3sAa/Ge9C
r+iX0cF0On0QnxlrRI/oOmICfx8e4gfQFJjAf2xeFX5rvB+kRW/5Jh2Jvcbb
ymfjGVEI9XWP6GbzpXFeXoa3dEfld5En7lVXVbeNr4d02KdrgEf1n8hl8Lu8
HCPi/aOAsU/1T+MPeQVGxvPgMWNz9GXxp7wSo+K30Ti+r2/dhDbF4+bONe8Z
XJBXYTRe1H8dz4H02K9rhoL6efKzuCivxhi8pN+ua4C7cEDXHIX08+XncEn+
HGNRTf+NriEy4KCuBQrrF8jlcFn+AuPQEkWMLdSXxxV5Dcajuv5bXSPcjR91
rfCEfpH8PK7KazEBL+u/072Fe3BIFxugqH6x/AKuyevifemOyZ2QFxN1r+h2
8I0xhs+Ae/k+9F+6ko6in9CcOOyadvRcrBsUxhA5FabwbYwX45fwFWJ/8Gnx
l74rvapbTofQGTQrvsKXxpvQ4/oltHPcH70f6/CwPJDeitWYKM+N9Y2NmOT6
V+lO/SLahI6ld8c+4D+gCYzmP6W5Yt+75u3YV/G8mMI/gCL8UHo7pvJtzXuS
X8pXxN9yN/lazMP6WH/yCf495It9r6uh28U3xTj+nnge/kOaDGP4I+a9w5+P
e8QTaKcrHnuar4R/5K8wJe4XJYwt01fGdXkDpsbfQUljy/VVcEPeiGlxrnj8
9vQp4yuMVcVNeROmo6b+e10zZMRRXQeU0q+UX8S/8mbMQC39bl1zZMIxXUeU
1q+SX0ICW2Kv6U7yXZAfM3Wv6fbwLfAAjuveRZn4vnI1JMPW2Hu6n/mueASz
dK/HeZv0/zmfGSd07XW/x/tF0Vjnuqd1n/PVkYTusRbpMGyLfSr/wnfDo5it
e0O3l2+FLOgrJ2EsfzLeC/9H9JjKZ0ax+Jv0DkzjO5tXNs55/mWM5NMhOd+D
/k0/infBZ4vzKc4Fekq3lHank2jG2BsoIA+iKeN5Yr3L82gebIqz1fVv0n36
xbQ1HR97GWvjf4TcL34/vg/GyXNo7ni38e3onzEH0/gseDLukabG9Fjb5j3D
r+FfwS3oKf9DP8b2OKvk0/GMeCz2mq62bn+cDciKX+Jb6y7w/VE81obu2bhX
/lWkwDe6OaijPxD7ENlwKs4SPBdng1wDt+Jb3VzU1R+MfYTsOB37FeXiXco1
kRLf6eahO8obW6+rhduwQzcfPfB8nFG615AKO3UL0BO94n+jpf4+7Y0++AAv
uGaDua/jduzSLUQ9/Y/y28iBX3WddBf5ASgR61dXIc41/g2M4tPH2uJ70et0
BR0ee4Fmj9+K/RtnP/01vgsexyJdfd0h/h3kxBldX1SMtSO/idTYrVuMfuiP
ARiIQRiMIRiKSq7bbH5tpMEe3RI00B+W2yMXzuo66y7xA1Ey1omcBjP4BXGu
YwuGmfsfLwRC9g==
           "]]}, Annotation[#, "Charting`Private`Tag$1251617#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfcjXUYx/HjwWOP0iLZiiRFySxZJaOMkpCRTVb2KmTvvUWhtJXKai+y
V/belVGUTe/rj8/rO37Xue9z7vF7nrzNO9XpmCKRSOxLSiRWp0wkjqVOJCri
u1SJRBPkwr3JicRgXQrMk6+YS6drJR+VB6MiSumm6LLhM3mNueN8JXwvN0VV
M+/IeZFbvk9+k09CF34Dna9vwH/JP4KrjpNebs0fs9aBX8O/yT/Lf8hPoPfT
AXQPnUsrWS9Np8pj6W20B91KZ9PP4zvRr+WptGwckx6ib9PfnPcEXxnD5R/M
t6Y/yc34p/gFfD704XfQPPpC/BA+JbryG+N4+pf4r/hHcc2xM8ht+OPWhuA5
+SO5SJxTLiNP42/HUnmtz5zkq+BHuTnyorC5obpUeEe+bi6jrq18Qh6KKlin
P6Wrip/kV5APN/SZzLfTn5SHxX3Cev0fuqfws9wC+XFTvwEbsQmbsQV/mnsa
v5hpiQJIILNjt9ef4ofHdcNW83/pquFXuRUKIgWymO+g/4Mfgaexzfxp3TNY
Hfchnkvcb3aYLjUWyEnIqntV/pMfiWooq5uuuwNfyNsd7wxfHWvkNnEeMwvl
/LhPLiIP55OxUG4oL+NLxr2Vb5E78n/xr8bzwo/ia/Mf8w/E95XLyTP4O9GT
30a/1Dfjv+Gn0XJ0CD0c95D+7vud5WtgRBw7viP9WZ4e9zZ+F10kj6cFaF+6
k86hhaw/QEfIo2ka+hrdRBdZa8Qv5x/DQH5/PD/6W/lO/Gm+I782Ps/X4T/h
i8Y1k8vLM/m78JW8w/c9x9fEWrldPJcoam6kLi3elVMjm66zfIYfgxrY6fN/
62phndw+7i2ScZv5Lvqz/FjUxC7z/+iexfrYE+J+IQ12Wzuvfw4b4t7EtUBa
7LG2F/uwHwdwwVxtbIzfHN8Z6XDQ2r/6Otgkd8KDSI/bfaeu+nP8ONTCIfP/
6epis9wZxZABd5h/Tf83Pz72LRw2f1FXD1vkLngozmF2lC4d3pMz4k5dN/kf
fkLsFTji85d0z2Or3BUPxznNjtalx2I5E+7SdZfP8xNRV/5UfjB+u/y4PIvP
jmWxt8jf8uVx1Hku0xewzVpba7/E88Q/w7/LF0Q/fhctHr+DH8OPoRloN7qZ
zqLvW29MV8iTaSk6iB6g82hm69lpD3kkvRDXnq6TZ9BJcj26RJ5Ii9HX6d64
V9ae4GfzOdCL306Xx37Hf8c/jmN+0xVaH9utdUN16+/J96JEXEt5LJ8RH8S+
hBy6nvK//OS4jqigm6O7Gyvk4459lX8Rv8vd8UjsS7jbbC/9f/yU+B04Yf6a
rgF2yD3waOwvOGntuv4l7JR7omS8pzgV+3Psu7GX4oaZhthlrRcei3cNOZ2z
t/4iPxXP47T5m7pG2C33Rql413CP+T76S/w0vIAz5hP6xvo9ch+URnHdOF0m
fBjvBXLp+sqX+elxPvkz+aG43vKT8lw+J1bKZx07he5lea/cN/YEeXHswygj
l5DH85nxUbxPOBd7RuwDSLLexNo+fT+UjXcGufX99Ff4GXgR582n1DfV75f7
o1y8I8ij76+/ys9EA1wwn0rfTH9AHoDycU91E3RZ8HE8s8irGyBf42fFtYv/
M+SH4x7KFeW3+HuwSm4hf88/Ec+U86SWm/MHrbXjf41nm68Z7w1fCP353fEc
x3PCT+Szoju/hX6if5lfyU+hpelgepDOpzms56Ovy6Po9dir6Hp5Zrw7cn26
VJ5Ei9M36D76Fm1ovRKdJ4+juWjv+JtFv7bWMv5X4itgKH8knne/LZl/hT9k
pj2/Oo4beyf/AV84rkM83/GO87fgU7mJvCqeg3jH5PzyG/wNfk7cU/mLeGfj
eZYry/P53PhGvujcaXQt5MPywHhn4/3QTdbdiiXxnqCAbqB8k58b+xQu+Xxa
fUv9EXlQPMPxnqCgfpA+Edcmrjuq6N6W8+BbuZX8I/8khvFH6QJ62XH/B2+U
dcY=
           "]]}, Annotation[#, "Charting`Private`Tag$1251617#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfYjmUch/HH9paRUSIjUooUZZdIRlmFhkJCRTZpUVIihDKLFGVkE2Xv
LbL33iFbVkSf3x/n8Tu/3/u+Pc973df1HPI2blO7dbJEItEveSIxOnUi8WXa
ROJKmkSiG4riim47xuAXjMU4jEcP9151T3c8hqu6HXGfPhtG62ohGyboe+qu
8S/xOK7pdsa/qb8bY3S1cTcm6nvp/uU9UAz/6hbrimKh3AK74vvI2fGLXAdH
+Is4xLNjPS+HP/lHOMffwBk+yfNf8eu8Z3wn/g6K891mNezkSUmejfvcv8R8
DPfoFrmWzGwnFzRbyqd4fdwnn5Qzm5/H9zZ3x9rxHLFG8ljX/+OtUEB+UT7K
X8K98mE5g9k5nuEbzPJYx1Pp3+Md+XmzEc7yyT6jN7/Be6EE9sjVsYvfcH0p
fxyL5VZxXTch/iaMk1/CPdgoP431vBOmuK+P/B//CiXj++v2YqI+J8brXkZO
TNX31d3kvVEKN3X78CumYTp+w+/42r233NMHpXFLtx+T9LkwQfcKcmGG/htd
An3lMkjggH6yLjcmynWRGzP1/XTJ8LX8RLw7LJOLYQlvjYPumyLnwST5VRzj
L+MIz4NNvAI28I9xgTfGOT7L8/15cnwT+9Zsjif5XrMGdvPbvL+OcR9fHnsu
1k+3VE5utpcLmW3k07wB8st/y1nMrrEPzUM+b2rslzhH8uRYY94aD8qvyX/x
V5BXPipnND+NZ/hm8xls5Kn17/NP+EWzCc7z2T5jAE+BfnJZ7OM1sYenwApe
Ast4WxyOdxyfiSlyPeTFHP1AXUr0l59Cyji3+rmYh0GupcIAfbnY63EuYr/o
8mGqXB/5MF8/WJcaA+Xy8XfEO4u9FecQv8oNcB8W6L/VpcEg+WmkwUq5JJbz
drFmsS9jzTFNfh35sUWuiE28Mxa67zs5LQbLFZAWq+RSWMHb43jscfl+TJcb
Rsfr4hi/H1t5JWzmn+If/iYu8EWeH8KT8K183WwR747vN5+PPev97ZVvNzvJ
j5hJ8mpeOs6QvDLel/mu/HBM+Qx/Pb6bfErOan4RvxHmCZ87gz+A7PJvcS55
G7zBT5iv4i9+h+td4l6+zayMLbG++g94F37JfAsX+WL/9lB+G76TK8b55S9g
X5wR/MHLYBXvgJOemSkXwO9yIxTAEv33utsxRK4U64C/9bPiLGCG3BgPYql+
mC4dhsqVkQ6n9MuwHD+4lh7f66sgfZxF/WzdQ5gpN8FDsf/1P+oyYJj8LDJg
jfwEVvP3Yq3dN0cuiFnym/E38ddwnBfEdl4FW/lnuMzfxj+xTz0/nGfED/IN
syWei98usxb2x99izT+O+/ja+P1Bbt0fcd7MDnLhOO/yWd4w3pt8Wr7T7CYX
M8/GuYzfIuSQZ7ueMNvGGphvxRrzenE2Y7/ImczP5CJmIXkHfxbb4mzoPuSf
8ytmU1yK8+JzRvA78KNcFYd4bRyIvYU/eVms4R/gXPxexD7GHPltPIydsR7Y
zrvG/nffT3ImDJerxXfEef38WAfMlZuicOw5/c+6zBghV0dmXNCvwUh9Fvyk
q4EsuKhfEGcO8+RmeCTWXj9KlxU/yzVxmNfBwdhT1uMT/qiZVV7Hn8Ja/mH8
Bnh+YVzHfPkdPBproR+tuxMj5efjvcX50q/DemzARmzCZmzB1vj/nGfuwij3
v4C7Yo/pF8U7wwK5OYpgl1wVO/gXuMqb4XI85zt358XNbZ7/H7dAZJs=
           "]]}, Annotation[#, "Charting`Private`Tag$1251617#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XccTlUcx/EHlVAhpOyZWTTssvfIyAhl7y0zIdl771U2GZGGVRQKaQkN
oygVpTIis96/Pz6v7zj33uc+955zbs42PRv0SJJIJIYlTSSKp0gk0qRKJEam
TCQy4EN5LDqhBEqiFEojreNGOeYBfCSPQ2eUwf3GRuszYrc8Hl1QVL9cVwyn
5NV4Cun0Y3QPYo88ATV078vP4LrcFY/pVsjFcVpeg+d0B+UXkAJP69LrxvIP
Ya/cTv6W74yJck35A74ubsh95F/5gegmPy6v5EtgBH+V/qTvxv/I98YbclP5
M75FXJdPICX/Ej1PV9OhdC69B5tR1nkZ6Dj9QpqJvkIvxTXpx8bb0+/kZbQL
nUKTYQMmGa9Fd+pfo/XoWHqT3jTWl/8t7gEz+bvRXf8EXaUriZH8v/RnfXf+
FP8i1srN5M/5lkiFcroHdOP5zPhEnozaul1yfdySe+BJ3Wq5FM7I61AeGfUT
dFmwT56CnqiAB41N1GfFfnkqeqEiKqEyqqAqquGheAaOzYYD8jT0RjH9Gl1p
/CKvR3Vk0k/WZcen8nTU0X0oN8Bt+UUU170hl8Gv8gY0130ht8I9qKHLrJvC
58BBuYP8Pd8VM+Rn5I/4Z/Gf3E8+yw9Cn1hH8lr+KYzir9Hf4vnxp+MYTOfv
wpv65+mXutaYxCfBvXE9+iddQ1+h86LH26jpvCx0qn4RzUmH0cvxjmPOGu9I
j8nLaTc6ld4Rv4mZxuvS3frXaUM6jt6iCfTnz9GXMYtPgb6xP9B1sQZxNt6x
/BPfFxvlF+Sv+Da4D7V0WXXT+Fz4XJ6Fero9ciMkQb/Yd3Tr+bI4J2+KOYhs
+um63PhCno3+8Y7jXcT/iOuhPhrgWTREI2R37gzn5cGX8hwMiP0t1lrMffwu
v4XGyBHPRpcXX8lzMTD2vHhuuvL4Q96MJsipn6V7GIfkeXEfur1yYySNdRp7
oG4jXwHnY/7LP8f/xttyC/kQ3xap47nLf8U7xXPGc8mz+Xx4lf+Hfh37Nn+c
74758f9jf+GbYDx/mybDAP53upIOprNjH8NbGOS8p+km/WJakY6m1+m6mIOx
/ugZeQXtH+uAJo9z8I7xlvRr/VLajk6mSZGGH0z/jvuOe+TvQ1Pn5KZzdPkx
nL9CD8c3hj/B98CCeJ/yJ/EccEc8G13ZuHe+Ev6S30Ur3WG5PdKimS6Pbi5f
AEfkhTE3dPvkprgz7k9XLvZuvjL+lt+LvQF59fN0BXFUXoQhsefFOtRVwQV5
S6xjPKyfryuEb+TFGBr7YDwnXVVclLfGWkE+/QJdYXwrd5FP8j0xjb8z5g1e
i/lM9+uX0GZ0Av2Pro+9hA6kf9BVdAidQ1PF3hF7LX1XVw1j+Bv0UuyL/C8x
P7BNbi0f4TvgfgyRL8T7QQvj+eWF/CP4Tu4q/8D3in0k1pB8gG+O5DF/Y4/X
vcdXx2V5O9rojsodkQ4tdQV0i/hH8b28JNaY7lP5edwdcyi+F7otfA38I++I
d4+C+sW6IjgmL8Xw+Lbot+pq4or8fvxPFIrnqiuK4/IyjIjvkH5b7F24Kn8Q
94vC+td1j+GEvBwj45ul366rjX/lnWiLR/RLdI/jpLwCo9AOjxpbqn8CP8gr
MRrt43uDIsaXGXsSP8qrMAbV9Tt0dXBN3hW/pftG7oT0GCpfpCNi/fCpY+6h
o2P/B2zAVPE=
           "]]}, Annotation[#, "Charting`Private`Tag$1251617#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8647526895596356`*^9, 3.8647527350620723`*^9}, {
   3.864752803605135*^9, 3.864752829776758*^9}, {3.8647529038850393`*^9, 
   3.8647530463684373`*^9}, 3.8647533630670757`*^9, 3.8649291628801312`*^9, {
   3.864929361288589*^9, 3.8649294128498163`*^9}, {3.8649295358707976`*^9, 
   3.8649296279618406`*^9}},
 CellLabel->
  "Out[1478]=",ExpressionUUID->"70b30d44-89f5-4a4d-beb5-a82938a154de"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
eM8JyX9Rm1Znokef30PruQrw+7NNWk3sbNBiMWvHj+cK0O6rkvt7yTzwW76o
p3w+HTJWl92rfZoP3okc+rwgjg7tHjs/eLakAOyJK+TmaCjCu9X5ptbMfDDX
+Pvqq/KDIH5Kll7/joukl6vNkJbhAv5rOY9/LVwkerPNdc6SIcAeejCSIsdB
jAqH/anrBKG+gnHtkpvj4Ed914cqAyEYt275Yzv+JPCNXuWrbS4Mi88EVm6Q
4ZM+49XGqTb3q73Ek75z8Dd/d4EFsCdVRPM0og6zgOFKr5dtxbJQyWJfWdYq
NtiZ8eqSlRkN3jXrz/DZwwYL/Db/WlBKgxLPDtqKLO4HvG++jZvbFGDAoxEP
O34e2B9pozmxnw5dLfnjpf/ywaH3Wx887aDDwajh9CtzC4g/DTgSuMHGI4/4
092RK9YOaw4QPxpzF/Rcz+tA+HzgQbHIy3GW1PzztYe+pKQPbPT3WyFtzkG4
71iddPVbaDeX9B0beSu2Hs7ikr7jJRe/gJzbg6TvONnbwxiWYpHzgDt+3+/f
c2aA+FGTDd6/ft4aJn5URnHp/sTVE+BSVd6f4GNCkN6hOjhMzVNbT0zMWH9R
GF7ZGlzd/X0SiHqJz5gfJAK3Vki5qFSOE2+6eEj4uK/9EOk3Sia0vJvo5ZB+
Y83dOomMqQHSb7x576QCf7qP9Bt3vOpOyt7QC7A31VbyKrzowiL9Rr7yNo6T
D4v0G62W631R0uwl/cY4u8rvMtv7SL/xh0vzir+X+8FLi5Ti7w2y8MlN4fzN
NtR8fnp85/R+GjTOeAi3GrPJecjOTX4v1r/tA9inqpXsmJc8swdgn7pX8+K8
h+btpAf5ZuPm4xfO1RGf6mDqvK8l5RLCPlVYUzfLNPYpwj71i8LOzZPHwolP
fZBZ9WOPRCrpQdap1bXb3MoiPcg1abKn9m3NJT3IXLeti66b5JMe5Ec3DZqw
fAHpQWp8z582lC4g3vW6eJ2Ro0s+Of+4J1clam08E9nkskstY1kg4lG63eDb
AVRV0u1k9ZsNjj2LUBOx5aLotAWCF09xQHVxVP0MMR7CfUju7A+82kYO6UP+
GvhdFN/ST847bsmzUsjI5QLcd2yuEcxoXDYG/hZH/ijvEYTxJy16ZK5MAvl/
2Q23uELwpmGjUqQ5H5SFwaNFM0Tg64urUjdxJohvrYibu/d51yDpPa6Y+eBs
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
sM+Er/8PkDbHaQ==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{620, 3387, 3385, 619, 1087, 951, 842, 759, 698, 659, 
            1109, 973, 864, 781, 720, 1131, 995, 886, 803, 1157, 1021, 912, 
            1184, 1048, 1210}}], 
           
           PolygonBox[{{3384, 3383, 606, 607, 608, 609, 1077, 941, 832, 749, 
            688, 649, 1107, 971, 862, 779, 718, 1130, 994, 885, 802, 610, 
            1078, 942, 833, 1161, 1025, 750, 1139, 1003, 1193, 894, 1174, 
            1038, 1205}}], 
           PolygonBox[CompressedData["
1:eJwV0MlL1WEYBeDPAYJAsIJWTTZng43+A2aplZYWVMtSl16ltJyg2iRUBIE4
XL0OGQQRFLSznLLW2abBodqUG1vVokl7vsXDec/53YmbcyFRXpMeQkjjNflZ
IRyiwLg+M4SOjBByead3c4nDbPCs076T93qSyxTYh22l/NFHKCTH3mXbxQe9
h/r4WfbntjL+6qMcYaO927abj3ovDfGz7C9sJ/mnj3GUTfakbQ/TeoorFLHZ
sx57HjN6H1fj99hHbKdY1McpZou917aXWb2fxvg99lFbOUv6BJW2GT3BGkps
W20p9z7m9Br9q7uRAf2s/sZ9kWxa9B/yJk3xN+tj7gpuuTMI7nq5IB/Ja7JT
ZvPSe6rkrK2We+7lrHVfl7/kbVLu1Rzz+m2yzzYo98fvlkvyifzkeUJ+0x/K
Jtkus3jGoOfn5JT9gayUd+UynrJCb5U/5WPZJpNyFc3xP5bjttPxd7kzSXM3
yO/xNzPpddX6nLuOddzQf8s7HPd8u97vPsBnvVafdzdzXz+vv3VXsTL+z7YS
24T7DOm8sp1gh31AP8gXfYhWSinjP7g+Zcs=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{3384, 3385, 658, 697, 758, 841, 950, 1086, 618, 657, 
            696, 757, 840, 949, 1085, 617, 656, 695, 756, 839, 948, 1084, 616,
             655, 694, 755, 838, 947, 1083, 615, 654, 693, 754, 837, 946, 
            1082, 614, 653, 692, 753, 836, 945, 1081, 613, 652, 691, 752, 835,
             944, 1080, 612, 651, 690, 751, 834, 943, 1079, 611, 719, 780, 
            863, 972, 1108, 650, 793, 876, 985, 1121, 689}}], 
           PolygonBox[CompressedData["
1:eJwVzzsvg2EYBuDXIRKJQyIxUCQSxx9gcayuWAzMWGkRQRhYGEgkRVskBovB
YDCI418gjgMrm4kFg7i+4cr9PPfTfu1XP5oaTOaHEPKYpcPSXhpCGwlzL9Ps
8kxrQQhZ6gpDiNun2OGJFn2GWrce+yQ5HmnWb1Pj1m2/5pcB3QUJfcqe5YEm
3RYxfZc9Zk7yypjuSvdDv/2cXl30IqvmLxbt5XKUW4btGfcSuc287p0J873+
z7xqbpQHclNWy063M1nJPuv6Y/ktl2W1PJHFpJmwH8qX6Lflpe+fRv+FHEv6
I/khZ6LnuOfLNfp0Z8Sj5+gr5B4ruk8WzGWySG4wYr5hKHonn58zvzFuv7M3
mNNU2f8BCKo7xg==
            "]], 
           PolygonBox[CompressedData["
1:eJwV0slTzmEAB/CHijAdGllu6kplibL3B2SplzYVxgExw1hmMENRb5QZy4yT
GTNm0B4dOjTOaJNxsN6soZiRCwcOPs/hM9/n+33afu+vnH1HE0dmhhBm8JzC
jBCKqDPW0ko/PyhOCaGP1akh1OiXeMB3Ntt7KXC3S7/IfabYZO9hlbtq/Rlz
9TrGSNhbbH1MstHWzUp7lT7OHL2WUcrsSdti58O8Za+t1/aNDXoXK2yVeo7z
ST5Qb3tqSzr/4oyeLmsYoVRvdn/Z+Q+N+iJ5iDfs0Xvcn3Oe4rj+NX6AspX1
truyUy6XFe4exp/Bba7Z++U/mZTZckDO4wYn9E75Xh6UY75/UGZyM/5t8R3I
aXlazpZp8kr83J3vyWG5XTb53ix5izbbbxqcF8p0eZ1659fsdu729WedJzmm
f9HXOXeQr5frV53/0qwvic/POw7oo+6bnH9ySp8lqxlim37B/YL4XLyK79/W
ZZtgrd5Onm2nPkKaXsUTttrPx+eJv4uX8f8hfs62zxTFZyfXtkMfJlWv5DFb
7I22+c77eRHfua3D9onC+N5YZkvoQ6ToFTyixN5ga+cja2x3WGov00v5D/WD
ab0=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1mfAjQUYBuDzZRSSlb1XlCgzKyMqRFmVmUIplCJbklEhVFbDHqm0hGST
7MiIMovIVkb26Hry43Lfz/N+45x3nE/+1p0avpSUSCQq3pRIRI73T16W6D2p
S2m+syvPr/r7PItvSUywy8dSvRf1WGeuyzH9E8owz1yB3/SRHNU7kobnzL/K
plzQZ5OMieb8LNN7s19vSzIeNa+X9Tiu3+zFDNZn6Kflq2Tidvsxsqz997Ii
ue12xO+Qg8yj9GPyRe6wu1Wml+/L0rKd47/pzeL1mC+aU8t3zPfKOebzek+K
mbPJrPLDOGcyueOT9ALkNC83X9P70Uf/Uz5Lch4z/xTvjxP6p5zRu8Z7oZx5
vqzETn00x/W4iGl53rxDNueSPpcUTDYX5Af9NeqzIX4fJ/XPuI8F5srs0sfw
AimZYleIFXpfGlCehXb3s1sfS/u4Fky1K8yP+us0pAK3kCrOH2mYFueclXo/
GsW9yCK7KuzRP6ADtzLdrgir9DdoTCUW21Vlr/4hHUkb959dUVbr/Xmcjeb6
/K1/TmWWmKvxu/4RJ/RO3Bb3hXmnbMHleBa4oPcie3yNeYa8kzX6dfkGA/QD
cX+TgifMP8sG/BPnwr0wRJ+pn5Xd4mfYZZaZ5di43vJ+x5fq1clj/sOcXL5p
LiE/Np/UX45zY04nM8iRsox8yfFdesu4B81X4tzLYeZ5+kXZmxxks/9Ipot7
T97F2sSNh72/PlA9KNuRkifNm2RDTulfUIVl5gfYp4+jE7vNT3E1nkXSx30X
zwzr9EE0YbO5Eaf1L6nKcnMN9uvjeZkMcf3s7ma9/iZNqcYPdjX5U5/AK2Rk
pl1xftLfohnVycTtZCYLWclGdnKQk1zkJg95yUd+ClCQQvH+45qwQX+b5jxA
4Xgv9vewUR9MC2qwwu5BDugT6cwdfBWfL/ysD6ElW8yNORPHqcmP5oc4qE+i
C3vMrbimz6cIX5tLskkfyl/xecHNcV3MW+XjnI2v5V+9O1ni9ZlXyof5S0/h
fnhLn6z/LV8hPRntR8lX7ffKp+Nzx+56PL9yeLwGucB8Se8T18+cM56luJdl
BVnU8W/0UuQybzYnyQFx/eKz13xIfyE+Z8y3xHMo343vka0c/yWeOf6Nn8VD
rDLX4pA+hX/0zvG80NX8u3wmKfH/H8OF4rJ8LV5DPJvmWbI0W+KR8HsG6sP0
w7I9qeLZsX8v3rv9tnhGyGd3zpxKDjXP0s/JHvGM2WWN8yw/kPfJhx1frdcm
r/mwOaV8O+4hOdV8Su9CUXNGmUmOlmVlN8f/0FtTKP62y7RyhFzk2BXZl9zx
+83fxmcFW/XhHNE7kDrOh3m7bML5+FpqscZchyP6NLpTjNnxGvhFH0FranM3
c+zLsU1/lzbUoTgluId7KcncOBds19+jLY+w1u4RjurT6cE+cxtuYrH5qnyd
POTwvscl3fg/TinH/gPOEAkk
           "]]}, Annotation[#, "Charting`Private`Tag$1251729#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Xf8zVUcx/Hbj4aQksqe0ZDKyN47269Cmf2oZEt2ITLKysiemdkroUlT
FJGVkUIhKjsKPT+P/ng93uN8v/d+7/mec26elM7JnW5IJBKDkxKJMsiSOpEY
kyqRuBffyx3ko3xPjJcbyd/xz2IUfxNu4/vQs3QwpvAZ0dH1Fek6XW28ySfh
b/3L9JRuEe1PJ9IMWIsPjKfQH/Xz43PoGJoGq5BVHhCfQ5fR4XQ6vSu+C2Xd
n5WO1c+m+ekQeo3uMNaRP8b3it/Ep8Pb+sZ0my4FGdBXPhf3opPxSvJ6vg4u
yx+itW5/jCMbyumy6cbxBbBTnoDOqKzfoKuLK/JHKI/s+vG6+/CDPBFdUAE5
4tn092OXPAldY16R09gE/QPYLU/GS/Gc8V14LH0iUYXmct1E1zyIPfIUdENV
5DY2SV8Qe+Wp8W5QJd6Drh7+kT9GNeTRT9Y9hH3yNHSPz9J/qKuPf+VPUB15
9VN0hfCjPB094rP0H+ka4Kr8KWogn36q7mHsl2egJ2riXmPT9I/ggDwTveJ7
9B/rGuKavBGPI79+uu5RHJRnoXd8j/4TXTKuy5vQRndA7ozsqKUroJvBF8Yh
uZP8K9871pXcRN7Ot8bteEU+T4fGfohnlj/ln8BwPhUSfHd6mi6mA+gkejs+
c89z9KCuC8bytyIH/xq9TEdgBn83arv+PjpT9w4tEt9Nr9MV9KdYd/Q3eSHt
Q9+m6bEG7xh/mn6vn0fb0NH0ZqzEHfKr9AJdSofRqfRO9I05pht1T8Zz8alx
A9+D/hHPjM9d97x8iO+KnBgoX6EjYy8Zv1+exRfF4Vj78vHYf5gjPyPv4J9D
xphnXS3dJv4pJOELXV08oJ8tF8PP8ly8inqoj+L2RAPaEA/GHLjuMfwiz0M/
1I53oWuEVPhSl4yC+jlycRyR56Opbqf8PO5Ef10d3ed8Y6TGV7on8JB+rlwC
R+UFaKb7QX4BmeJci9+h+4Jvghvxte5JFNLPk0vimLwQzXW75La4K+Y8fqvu
S/5p3ISe8p8x79hs/IVYG/xLyIVB8j90VMyn8Yfl+Xwp/BrnjXwi5h3vyi3k
3fyLeIu/JdYj349epG9gGp8JA2Pe6Ve6ufSZeO/0xlhnfC/6F11CB9HJse7w
Pr5xb1t6WL+AdqPjaFqsRm75dfovXU5H05n0njin0cj9j9AFsY5oaTos9mDs
iTgr6clY41gkt5T38O1wT7xL+RJ9M+bIeAP5a74pbolzQD4Tz4Atxl+Uf+Zf
Rp54/7pHdQv5MjguL0Yr3V65PTLH/bEedZv5ZkiDrXG+oLD+XbksTshLkv7/
r06O+dE1x634NvYyiugXyeVwUl6KIbGHUNTYYn15/C4vw9BYwyhmbIm+Ak7J
yzEs1mesMZSwb1rEHMXz49n4f3HPUtdXxGl5Bd6Ita7fomuBtPhO1073C98d
eZESe1G3jK8UaybOjjg34r+J/h5rjfajE+hteA8lPcfK+H5+n7EOyBLvKPaI
bivfEumwTdc6nl2/XK6MP+VVGB5nPkoaW6Gvgr/k1RgR5zBKxTmor4oz8hqM
jPMMpY2t0lfDWfk9jIq9hTKxPvXVcU5ei9GxllE2zl59DZyX38dbsXZQLn6j
viYuyOswJuYO5Y2t1T+Oi/J6jI1nNB/taYXYM8Zq4ZK8AePwlP5bXSukx3Zd
e90RvgfyYbB8NfYyZvGZsQEdXPsf3/VHVA==
           "]]}, Annotation[#, "Charting`Private`Tag$1251729#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HfcjQUYBuDz4bNXiOxIZmZI9m5IoUmZKcpMlKzsrFJRKTSsdjSozGwq
u7L3XiF7dz1/XL/nvp/zfud857yjULtuzbomJRKJnikSiXmpEom3UycS6ZiU
nEjcT2Z+1+vxjzyYk477Xi/JAv0FyrJFb8oB+W3mO+4dPT2T9Qc4ILfktJyF
P+T6bJZTpUkk+stD5P/MTtyQ//U+P8ilWKgnOa6P/KJ83GxPQbuL8Z7mCL2E
WU7fKjcjj35QT2sO0ouZ7+gX5e4U1lOa2c0x5l3mAp/7rpyBXPrHjr8uv0IR
/UH9oNyKM3JGu2FyVvlPswFb5GT7AfJQ+azZmZvyKe//Y3wWi/ROnJCf45Jc
nm3yoxyS32WhvxmnZ+QTvRG3sEZvyFZ5GKcd95Nemt/0zlRgkf14u0x8qj9E
Ns7Yz7Yrw2K9C3fzm/17dpn5TG9M9jg/9otZwlKWsZz3HZeFKY55mBzxne3n
2JVlid6Viqyw/yB+L6bqj3Ar5+x/tivHUr0blVhpP8HuFqbpTcjJWv0+tsnD
Oe+4X/TyLNO7U5nt+mMclsexynEf6tmYrjflkNya/+RcrJPvZ7v8RvxvchcS
XPD3v5oVWO61FM5zX/mluEfM57ksZ7UfKd8j7zAfJ6/dET2dOVgvbo7XL8Xf
c4eeysxhvhnn0Vzt8z6Ka5Tb9BmOvyG/yp16M/2w3Ib8+lk9kzk8jpfXmw+w
Q05t/7o8In4vsytJXPQZc827WeG1HnH/yR24Ildhp/wER+X34vngbybG/8rn
+qPkZoP+IDvlkfHdHDdPr8hK/WXujWeA/SS7W/lCf4w8XLafb1eJVXpPqsa9
ZT/ZLidf6o+Tlyv2a/g47le+snuCfFy1X8s61rOBjXwSvw1fO+ZJ8nPNfhOf
2ufmG7unKBD3v/0Cu8qs1ntRjb/sP4vnDN/qzSkY58d+YZx7ftdfoTp/20+J
64Dv9Bbczk37RXZV+EN/lRr8Yz/VLh8z9acpxEa9EbvkUSTintXv5U+5dzxn
5I5clWuyS36SY/L78TvLPUhms8+ZFtcPs+L/MXvzjHzEbMs5uTCb5IfYLadx
PQ2UR8sXzG4UsksR95c52ixlJnl9sVw1flt9jZ7S7KcXNV+LZ5f8Arfr1+L5
Zo7SS5q19N3yU/Fb6Mf19OYQ/YO4BsyXSR3Xk/1b5hbfabpZgO8d05KjcjvO
y3fE+ZMbs0ceE/cyS/RqrJX7UJs9enNOyBPY6r1n6AX5QW9FkTi/+sPsld+M
78hSvTrr5L7UYZu//zy+Kz/qrbmTVPG88toX8Tvyk96GoiTHc8RrO9nFbr50
TGFme60txeIeZ5ldDdbL/agb38HxX8Uzhjl6O4rHOWS5XU02yP2px17Hf21X
hJ/1ZykR16T+CPvkt0jLCr0WG+UBnJFf5LpcP95LbsFJOYPzM1T+MO5Psydp
4v183jfxTOOXuKbjupDby8fMZ+Nc2l3QM5tvxLUhbzabsF8eSzpW6rXZJL9O
A/bpT/Ov/BH7fd63cf3xq/4cpeK6YpVdHf6SB9KQA47/zq4Yc/XnuSu+Dwe9
NtO+OPP0DpQmI4e8dpgjHOUYx5nl2BLMd0xHypCJ1XZ1+VsexH3xv8a9yCl5
ItfkXqSN56HfYqxZxjzhff8HHYFOYA==
           "]]}, Annotation[#, "Charting`Private`Tag$1251729#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1mW4VWUUReFDSCsWBiWloqg0Io10d3eXtAIiICklYDcGBjbSICUgnZKS
0hLSpaTv+jGeNcdc5+hl72/ve7O37Vm3R5JEIlE2WSKRN2Ui8WbqROLPVIlE
eWzjY9EG+ZAfBVAQhfCWz+7yuQrYzsehLebrE3hBf4NPR2G8rdutq4gdfDza
4Vd9EnTX3+QzUATv6PboKmEnfx17dTkxSfcI2usW8KTowW/xtGkSibp8MZ/J
z8tF8RUvhIz2bfgG+Vn7d+W9cmU8avdCXAN9ErmyXN+cZfecOZRPsNtn5kIt
3Rt2ec1+vJ2ZjWcwm/Om5uq4nuZ43tXs4PsL5WSoynvaP2n25q3M2/bpzHq8
obnEvrT5Gp9ld8F8Dl/Hv0f/ilxYziS3lTfKRX3uPXmfXAW7eFL7KrrZfCLf
Lz+KN3l2dNQt4snRiycwW3eRF8M3vEhcB937fL9cFbv5JHTCYv0d6K1Pgjm6
YvhA9xevhj38DXRGcZRASZRCaXzoswd8rjr2xplEFyzRp0AffVLM1ZXBR7qD
vAb2xbnEX7rH8JYuB7rqfuMp0ZcnwzzdJV4cU+MsoKzuY35Iron9cW5xQPc4
3tblRDfdUp4KL/LkuNP1rc9/k+fbX5ZL4Fte2G5QnEM5s9xO3iQ/73OfyIfl
WnjMrntcK30yuarcwJxjV8wcxjub79gflHOjdrh9PrM/b2/m4g+YLXgzc008
p+brvFuccd9fJqdGNf6SfR6zT9w/+S65gbxULiOPln/1nStmSXwX5wBZ7Nrz
zXI5+8nyEbk2DsSzhUO6J/BuPF/orlvO06AfT4EFuvL4VHeU18HBOMPogQqo
iM/sj9nVxaE4h+iJSvjc7m99PRyOM4de+F2fFv31KbFQVxlf6I7z+jgS5w69
sUKfDgP0qbBIVwVTdCd4AxyNc4fDuifxXtw79NGt5HfiZZ4ai3VXeSl8H/cx
nhvdl/yk3BDH4tzhiC4P3tc9jr66VfwuDORpkN41b8iXyUvs/5VL4wdeHFnj
HcP/iOfN/iv5lNwo/pt2PeI66ZPL1eS58T15uPyJ/qj5FOroPrDLbw7gHczc
/EGzJW9uro33uTkh3vfmi76/Wk6P6vFusn/K7Mtbm2n53WYj3shcHs+cOSae
G9/9zyyDH+Ndox8cz1C86+WO8pZ4L/jc1/I/cmMc53fYV9fN45P5MflpfMif
wEu6NfxuDOLpsFRXA9/oTvMmOBFnEP1QE1Ptzuib4mScP/THWv09GBzPPZbp
auFb3VneDKfiTOJv3TP4KN7zGKBbx+/FkHjWcI+fvzH/XV5uf00ui594SWSz
78S3xrNl/518Tm6O3PE7JK6HPoVcQ56vLyGPkL/QHzfzoq7uY7sC5su8o5mH
P2S24i3MdbySOZF3j8/5/nr5PtTgr9o/HfeatzHT83vNJryxuSLea+bY+Pf4
7nXzefwc71j9kHgW4neO3FneFs+7z30vn5db4DRPaV8z3jt8Cj8h54szGmcK
A3Ub+P0YGucKK3Q3eDlM46XjXaH7gV+QW+JMPHs4qcuPyfHvwSu6jTwDhsU9
wUpdPfyou8hb4Ww8UxiETfoHMDyuAVbp6uMn3SXeGufivGIwNusfxAj9fVit
a4CfdZd5G5yPM4kh+EP/EEbq78caXUNM013hbXGBp3KtaukWxHmRR8pdzKl2
p+QC+NTuGbyq28IfxiieAWt1jfCL7ipvh4txnjEUW/UZ8Vr8XsE6XWNM1/3L
2+NSnEsMwzZ9JoyO9wXW65pghu4/3gGX455jOLbrM2NMnEVs0DXFTN013hFX
4j7iH11BfKbLixG6HTwLxvKHsVHXDLN013knXI37iNO6Qvhclw8jdTt5Vozj
GbFJd5OXxy+8TDxrutn8htwZ/8Z9xhld4XjO4l2JUbo/+SMYzzPFvXYvmvKV
8mb7W3IFTI/3H3LYd+Hb4/zbz5Fvyl3i/WXXK66bPrVcW16oLyWPiudKf9Ys
gnq6KXYFzYG8k1kgronZmrc01/PK5iTeI/6u9P1dcjbUjL8R4pzE3wS8rZk5
zp7ZjDcxV/Fy5rj4HeO7t82KmKEvGu+HeN7lnHJXeUc8dz43V74ld8U1nsa+
jm4Rn8bPyc/iy/j5MVq3m2fHBJ4FW3StME93m3fD9Ti3GIM9+hyYqM+KrbqE
/08l3cz4uZGLd+M75Srx97vcM66Pz/4PfduvrQ==
           "]]}, Annotation[#, "Charting`Private`Tag$1251729#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfc1lMcxvG7UrRUlJGijCQrMhNl7yizZGVFtIfsUVI0JJsGmjRoUkZp
ag9UaBiltIyEkPf1x+f1va7rnN99P79zzvc8d/XmrRu3KlIoFGYWLRTalCoU
upQpFL4pXSjcgj0wU/Ym2qId2qMDHjDvW+O3ojhmyd5CRzxobLWsOUpgtuxt
vC7fzT+JI/GTrBMekq/hb8OemCObLDsIA/lzMUT2Bl9AV74mNsrm8sdgLH81
Osse5tfSt2MvfMGfhqn0XOMf0FUwiD8P6+mLsYAeanwAXQTd+F3qTTiKXq2e
jZl0qbKFwn30JvM/V4/N3yt7z1gx9U6+lnoNv5VuhMP5L/gKagf+RPV+zz9C
r5Pvx9+h7uCvRw2+JP8lfToO5j/KGqn35L3Vzz3/IV0Vg43tVpvjfHqDegkW
0sPMG0gXxVN8Layhz8Es+mfj8+jj8D5/LbrIHuW/o+/MO2OebEr+FrzJX4Dh
skF8MXTnj8bmnBE8JvuevwulMV82ImcEjxv7QdYCZbBANjLnIXuYdcn35zPw
hLk/mnM3ymKh7J18Bp40tl52D/bGItm7GCzfA0/LjsGWfA66yjbwLVEOi2VT
ZYfgLf5CjMq554ujB39s9lE2nz8e4/jrcpZl3fif6HtRHl/xdfExvcT4R3Q1
vM1flHNPX4pF9Oj0DV0CPfl/1JuzD/Ra9VzMztrZ61b0NvMXqLUxPj0qvyvn
hd6mNsYRsi/5fdSOfB21q+eeojfK98/ZVf/gm+BIvgK/gj4j68B/kt5RW+Zs
q0s9/zFdHZX5IcYL6m3pnfSiehkWZw/kbekx6Xt1TzwjPx7r6PMwh95ufCF9
AibwTdBN1j19RbfKO2CZ7BPZoRjKX4KxsiH8XniWr41f8o54WvYz3xr7Yrns
vXwuehjbLGuDirkbZO/nmYyhJ57Bs+iF3uiT3HNbzG+LSulJ2TgMlZdEL9kJ
+FXWN58h28q3S1/nTMjGY5i8FHrLTsRvsufyfdlbvn32J3sh+1R2GIbxl2KC
bDhfGn34OvguvY659O/GF+VewUS+adaYvgpf0f3yTvR2ugN20k1xAL1SrYdP
o82blvsKw/ki9vP27C+9Sb08eyFbkv5R22UP1YnpbbpMPpPva/xf+hbU5E/i
v6cvSD/k7krfq63TU+oOzy/OeUUVfpLx4moL/obsr3o1VmRf5Z3o57NH6i+y
jvgzc3EgvUo9E9OizZue3sAI/vLceXRDLKUn5e6hy+I5/uT0h2wJfxIm883Q
P+eB/5XuhMr4WvaZrAZG8g0xOfcTvzf68adkvWUv5HzIfuM74yB8k/9JubPk
5fJOslPzLrIXcz5kv/P3owq+zZ2PUfLy6C87DX/JXkI/2Q6+C6rm7+PPwnS6
pHW7N/eLutrcGel/vGPsCkyRjeYr4AX+dPwtexnPy/7gH8DBWJN7E2Pk++BF
WV3skr2C/rKd/IM4JPdZ7kKMle+Ll2Rn5M6TvZq1kf3JP4RquSty56R35RXx
sqxezpTstayN7C/+YVRPL+SeSD/LK+EV2Zn4L789sjayv/lHcGjOYnosfSzf
D6/KzsLu/NbIO8t28Y/iMPwgm5mzjHf5KzEtfc3vj9f4+rkXMSBrIPuHfgyH
40fZLNlRGMU3wnTZhPQLXucb5HvoCzEvvYel9Mn4gL4xdwx9DVbSA7N29L/0
4zkDdLOc85wrtT4+o9ebN5uuhdF80fzWoBvTm9UrctfIlvHl1fZ5zjMT00tB
9kbWkr4178CfnXeiL0J1fj5fVm3D11aL8svoU1CV/5Avod7NH63elPuPvhar
6IqyzvSg7K/6n+yJnD/6xvRXzr7aADPoDebNyWdhDH8VttBXYjk9w/gkujIG
8OegGJbzp2IKfXPuTfo6fE1Xym+y9Lw62PP/A+S4jXU=
           "]]}, Annotation[#, "Charting`Private`Tag$1251729#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, {-2.5, 2.5}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, {-2.5, 2.5}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8647526895596356`*^9, 3.8647527350620723`*^9}, {
   3.864752803605135*^9, 3.864752829776758*^9}, {3.8647529038850393`*^9, 
   3.8647530463684373`*^9}, 3.8647533630670757`*^9, 3.8649291628801312`*^9, {
   3.864929361288589*^9, 3.8649294128498163`*^9}, {3.8649295358707976`*^9, 
   3.864929628276738*^9}},
 CellLabel->
  "Out[1479]=",ExpressionUUID->"ae5139f5-2030-45ce-a24b-7257a2ffc70c"]
}, Open  ]],

Cell["\<\
Understand the performance of the functions wrt random initial conditions\
\>", "Text",
 CellChangeTimes->{{3.863702871824973*^9, 3.86370289295422*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"717b448c-0568-40b7-93ff-966702325a00"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ffCartPendulum", "[", 
   RowBox[{
   "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
    "order_", ",", "maxIter_", ",", "InitGuess_", ",", "uMin_", ",", 
    "uMax_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "data", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", 
      ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
      ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
      "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
      ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
      RowBox[{"xGuess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["xGuess", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", " ", 
      RowBox[{"{", 
       RowBox[{"xdot", ",", 
        FractionBox[
         RowBox[{
          RowBox[{"Clip", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
            RowBox[{"{", 
             RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Theta]dot", "2"], "+", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
        "\[Theta]dot", ",", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"Clip", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
             RowBox[{"{", 
              RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "+", 
          RowBox[{"A", " ", 
           SuperscriptBox["\[Theta]dot", "2"], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"A", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "0", ",", 
        RowBox[{"-", "\[Lambda]1"}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
             "2"]}]]}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["A", "2"], " ", "\[Lambda]2"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["A", "2"], " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
           RowBox[{"4", " ", "A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"5", " ", 
            SuperscriptBox["A", "2"], " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"4", " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"5", " ", "A", " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"4", " ", "A", " ", "\[Lambda]2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["A", "2"], " ", "\[Lambda]2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["A", "2"], " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
           RowBox[{"A", " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "A", "+", 
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[Lambda]2"}], "+", 
              RowBox[{"2", " ", "\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Clip", "[", 
                RowBox[{
                 FractionBox[
                  RowBox[{"\[Lambda]2", "-", 
                   RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
                 RowBox[{"{", 
                  RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "A", "+", 
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
             ")"}], " ", 
            RowBox[{"(", 
             TagBox[GridBox[{
                {"\[Piecewise]", GridBox[{
                   {
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]4", "-", 
                    RowBox[{"2", " ", "A", " ", "\[Lambda]2", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "\[Lambda]4", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
                    " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
                    "2"]]}], 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "uMin"}], "-", "\[Lambda]2", "+", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "uMin", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
                    "\[LessEqual]", "0"}], "&&", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "uMax"}], "-", "\[Lambda]2", "+", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "uMax", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
                    "\[GreaterEqual]", "0"}]}]},
                   {"0", 
                    TagBox["True",
                    "PiecewiseDefault",
                    AutoDelete->True]}
                  },
                  AllowedDimensions->{2, Automatic},
                  Editable->True,
                  
                  GridBoxAlignment->{
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                  GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                  Selectable->True]}
               },
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}}],
              "Piecewise",
              DeleteWithContents->True,
              Editable->False,
              SelectWithContents->True,
              Selectable->False,
              StripWrapperBoxes->True], ")"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Clip", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{"\[Lambda]4", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
              RowBox[{"{", 
               RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", "A", " ", "\[Lambda]2", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "A", "+", 
                 RowBox[{"A", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
             ")"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", 
        FractionBox[
         RowBox[{"\[Lambda]3", "-", 
          RowBox[{"A", " ", "\[Lambda]3", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]2", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]4", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"A", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]}], ";", 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["xGuess",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["Table",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["If",
          FontWeight->"Plain"], 
         StyleBox["[",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"i", " ", "!=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]], " ", "=", " ", 
            RowBox[{
             SubscriptBox[
              StyleBox[
               RowBox[{"x", 
                StyleBox["Guess",
                 FontWeight->"Plain"]}]], "i"], " ", "+", 
             RowBox[{"\[CapitalDelta]t", "*", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}]}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "0"], " ", "=", " ", 
           RowBox[{"{", 
            StyleBox[
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}],
             FontWeight->"Plain"], 
            StyleBox["}",
             FontWeight->"Plain"]}]}]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], "\n", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
       "}"}]}], ";", "\n", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
             "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                 "\n", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                  "]"}]}], ")"}]}], "+", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"sv", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"froot", ",", "data"}], "}"}], "=", 
      RowBox[{"Reap", "[", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}], ",", 
         RowBox[{"EvaluationMonitor", ":>", 
          RowBox[{"Sow", "[", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "n"], ",", 
               SubscriptBox["xdot", "n"], ",", 
               SubscriptBox["\[Theta]", "n"], ",", 
               SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], "]"}],
            "]"}]}]}], "]"}], "]"}]}], ";", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Clip", "[", 
            RowBox[{
             FractionBox[
              RowBox[{
               SubscriptBox["\[Lambda]2", "i"], "-", 
               RowBox[{
                SubscriptBox["\[Lambda]4", "i"], " ", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}]}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
             RowBox[{"{", 
              RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.863893336562357*^9, 3.8638935104547806`*^9}, {
   3.863893544100028*^9, 3.863893549383339*^9}, 3.864135408269006*^9, {
   3.864142771556004*^9, 3.8641427819726334`*^9}, 3.8642366861025925`*^9, {
   3.864739935175744*^9, 3.8647399858885136`*^9}, {3.8647400853146915`*^9, 
   3.8647401070617313`*^9}, {3.8647401401521406`*^9, 3.86474014471668*^9}, {
   3.8647405605585876`*^9, 3.8647405780110025`*^9}, {3.864753156971038*^9, 
   3.8647531974430847`*^9}},
 CellLabel->
  "In[1480]:=",ExpressionUUID->"54ebfcf8-c8d4-4971-8be6-85cd58106294"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["\[Tau]",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], "5"}], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uMin", " ", "=", " ", 
   RowBox[{"-", "2"}]}], ";", 
  RowBox[{"uMax", " ", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "1"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "1"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess", ",", "uMin", ",", "uMax"}], "]"}]}], 
    ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  StyleBox[
   RowBox[{
    RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["}",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.864753222902938*^9, 3.8647532312442665`*^9}, 
   3.864753307706794*^9, {3.8647568375150604`*^9, 3.864756868210238*^9}, {
   3.864757086753292*^9, 3.8647570935951014`*^9}, 3.864929254372369*^9},
 CellLabel->
  "In[1596]:=",ExpressionUUID->"5ee4d0c0-6ce1-4573-b81d-893d5180084a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "0.638173046847784`"}], ",", "1.5297866686317683`", ",", 
   RowBox[{"-", "0.7064454234546389`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864753232570842*^9, 3.8647532455516872`*^9}, {
   3.86475337345875*^9, 3.864753384419242*^9}, {3.86475684110791*^9, 
   3.864756868900015*^9}, 3.8647569176933985`*^9, 3.8647570947547293`*^9, 
   3.8649291726519523`*^9, 3.8649292585929956`*^9, 3.8649296763181105`*^9, 
   3.864929719332118*^9, {3.864929758160487*^9, 3.8649297640435734`*^9}},
 CellLabel->
  "Out[1606]=",ExpressionUUID->"3859f62b-be78-4da2-a4d1-1ae25ffb3fa9"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 1608, 112, 
   17534376668544537073, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8649297673984823`*^9},
 CellLabel->
  "During evaluation of \
In[1596]:=",ExpressionUUID->"3dcb6ca0-8edb-4f7a-b39d-83fd7ef59b34"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
7DSB/KaUYha19BiHQH6zPtkvS2Ev+f388ZvWNidC3WM5hEix3ckrK/hhx+XL
6ayt0zjPtkz7DI2v6gf2mPwgk/eaRjf2mA78pVci7VjYYy6rmjq7L7EXe0w9
n/ik46tCsMdkhZwKcQkvJJDHXME/FfzUo+Cv+bXIY44V1XBZ9k8C5DGTgUqI
yAUOQB5Txjnh43ItCvQhPJbGrhgHZVd8e9rvtQHkMyX1B1/vz5klkM/MdfiV
5mBMYSKf2a817UrMozBP3zNpGmrig8s3nN12zX6GQP7yUp2F/I3JDuwvlxxV
lC9J7sP+sno1G4qx+nA+rYrrqt9Bzh8I5DHfOPon7hMuIf7NY/pI6Yw16VMg
8pjXAhnmGuockGFfKKQnwQZLIjXiGkebAfKYuz38ugbHOQTymHdTvvulmpGf
J69+xtOaDwrOD7+RMp9DIH/Z1zibskqyB/tLvZ1f5knFsYB56vNLRgYLoNu1
7fRlgj0AXA2t99smBO+mL6yf1S8hkM88/Wni01bz7H/Now2Lddg9fbUVe8u7
9/adDTs9iPNlI7g17qgtmADIW0JqlYeK7ixA3lJ8y81DDuR+h7xlQkOTeIzp
LM6bVRn7sSvJeRDnzQa9fnhYyKET5802Jaxkmos347zZkYObJW4+q8V5s/PO
XLhQu+0rzpv9YHc+RIDIwHmzP3hOKfitLyKQz1yk9cGiin+SQD5ze8+FKca7
GQL5TAnODHwtTWEin6kf27HPB1KYyGcub4jWHfWeJZDPHF5XoXZZcBLnx5oX
gV7ZKyXYW5q736s6WN+KvaXUmZcf0vR6sbeUTTiTs/IRC3vL2VV2UycSurG3
zD7m13p6ZzH2lpbuAmYVj14TyFuSw6VbwPpSAnnLy7fdZi58Tf5rXizylDZP
2zSVPEYB8pQmjq+OHyPnd+QpndOME5eR+xvylFvePTJfTu5/yFNqGSy6/Dqt
F+fBbr37y0p4QSvOf32sTVm4Q/87zn99pufd07isBOe/ZqbRjfqkIwjkLWNO
6EORrikCeUtrA+6nW3U5BPKWH98qbNlmRX4/f7yl9vAqGbkSDpH0Ptzo8QJ+
WPSQW3dF0DTOd82P3BMZsqQB+0m6V5AMLb0L+8l7Fzcf0tZiYT+ZBOMdFpPn
NPKTuXzSXBHXYrCfzOXkLh9IKSCQn7xQ6pm/5HHhX/NckZ+8d6S9cA25jpGf
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0DksZnEYxeH/2BIKa6L3KW2NLWprOyWJXaKiIlQIEltCJIJojMTHdKOa
iX2ZhA6t2q61azy3OHnP75z3vffm5rX3/uxJCCH8oCHaTw9hjyYEb0khrCeG
cGChlK5ltckhPMvSaVS2LcuTneMH3EyLuMZtS7SHO3AWLsCr+BT34Vk86f6d
j/OHujIa1hfL6mU3+jr8wmfQOx/Xjdn7wzfzA/IdezF8wT/q7viF6Bv4Jb6W
704JoVUfMy/wipmh79Rn40ZcqE81/+J585f+TN+PB/Gcvsq8xxvmlPd+RF5e
jY/sX9mfkJXzI3wJ36DP1f/nb93Uy19lmfTBb8jH7W/xLdG75Lv28vEl/6Rr
pWVcp2+LbnEXzsFNnl0kSzP/4TXdtPtPflN+jCui/yLboxn60v3Wncgr6Ru+
mEZF
                "]], 
               PolygonBox[CompressedData["
1:eJwV0jlMVFEYhuEzC24FBYg2YoJsSiuFIAPYWYkCsoiViXYOCmFNLNRCaVga
lWijuAAVri2MSoN2goKgBkwUNLGBWn1u8ef/3vc7Z+6dgYJz7fXpeAghZmZN
EmSyQ5hOhLAknzB/lfPmSFYIP/hguvhiM8bn8DPcZ1xn/nGt3PZkCAX8LW6B
q+B+4pjp5kpMF1foXIp7hh86l8tl8DI+aQZxlTNN0bPxGbwDH8C38TS+iG/g
j+5X4nU5bjbl+7oe58blJvkSX4q7cRGuxjnbfAf5Of+Bvypf4e7qau0/eNJ+
5PN361/zx/GK86t4SH8dn8JDOIXP42bn9tlz+I4d07fpd+LTuDB6T3sq6nUz
urR8kz/Mr8qfPPMov8ElTK9zE7hZdxkfxD24GNfgF/ixO3ncG/wF15u4WeSr
+F980vRxh0wvV+J+LfcSP3FuD/cWf8Vr8rC+QR6Wq+UWXb53fCcn+LP8rujv
xBVF72o/xYP2aPR/pW/HnXhAX26v4TF7yfNS+t98Hc6yt/CD6LfA/e5P4hac
xh36MnsRl+n6dKXyMT6Xz8iv+Hn+mnyPH/eMvXhW/qb7Lo/oGuURuUa+4G6r
fr/9Ho/a/wGrqWDp
                "]], 
               PolygonBox[CompressedData["
1:eJwV09lTT3EcxvHT6kpmLJW6MmOnhspdZR0XrbjHDJVKuLYzQ3ZjKUILF5aa
sRdmMIwtKczYKf9ASBQzlOV1Lp7f53k/z+ec81u+vzHL1ixaHRkEQQQN93I3
Lgju0AH+X3QQnI8KglYLmfRZlhsTBL9kI2in7J5souwN7sXdfI3rivlaPocv
iw2CIv1Y8wUepSvVxfPT5KfxwfANyC7gxziLvsjyZL9lI2mX7L5skuwt/oZL
KJ7KZAnuN11+Bh+yFyG7iNtwNm3DaXbyZD36fDzAj6Ld+ma8TL8BP9BPxu/4
77pP/DHdCr6Oz+XLfZ5i/TjzJa41E/Tl+kS8GKfph5o38WHzrL5dvzZkXaas
O/SeFym/JHtiZyZ9lRXIBmXxtEfWgpfb34gf6qfg93xf+Pvwx3WlfD2fx690
/xL9ePMVrjMT9Sv1o/ESnK6PM2/hKvOcvkO/Dq/HVfos8xNuDNlzo/SX5fNx
u/0uvFu/Fc/C23E6zreTKHvE97quUP5HlkADfKN8r/1rfBG/Sf7I3lT8gc9x
bX94FvAJ/XZchhtwfvh72BmNK3ASzsCNuNo9omVXcAeeTZU4w05BeHb0C/Df
8P3RIN+k22fvOl/Mr/GszboUsxM3mK2uS9F3ynPxD/s9uFZficvxSVyAK3Cp
vQnma1xvJulX6ZPxUjxDP8y8jZt0T3Xr+Wp5tvwzf8QzY+RXZU/tfOT3yOfw
O/gZfGF4Tu0txP/C74T262/gEv0WnOp+Xfxje6nyLlme7Gd41nBdeF74U3xh
+L/VJ+Oj9mNlzfgZnkt9sjaqoSG6Ft1z+Tzql/0Hl/+Stw==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0L8rxHEcx/GPnwspnMzya5EfIzcrziKzgTuxkYnOIooMiEIxMlyYmBgO
5RSbXwv/gPNzJCGPG969n6/n6/35dl1NfKxvND+EkGfGTboshBMTIYfMh7kv
CKGxKIQzRy8myl2Yff6vMIRlbhVP4it3O7pjXFocQgvfb1fJI7pK3TWu5RK6
brzFJ/gNnMXv+E7XgE99+4Fvcj/FDeJDft5NCn/jCr5X/2XH5Gdv1uSMvtru
4eN2mzyr7/B2Wl6QH+WM3CnvufvllrxPyVkctVf4pD0hX7rfdn+ES7hmXQQP
534HH5e75E05Lq/jJ/yGb3X1+MT3k3hAdyDP6crlz9z/IWf1Mdyqn5Hb9edm
l/vhFvXl8qB5NTd8nbs0/2T+AeulP58=
                "]], 
               PolygonBox[CompressedData["
1:eJwV00lUT2EcxvGLNCks2JjSBpWMx7RLhWNrQ6O0sTM2OIdKKc4xKywMhWRj
OodkzKJwTLFDC2OTlVm2Pu/i9/893+f5ve/933vfm1q6ec2mkVEUjVCJfmpV
19go6lTJgiL1Vb0aFUXTR0fRXXmfWsh7qC7yh2OiaB9vSF8WG0WHeTv0MvzE
mhZzHXQ8L102ni7lJ/GLcS4+iQvxkOrhpeA79qyki+TXcZ2sjf5HJ/N/qxX0
F3Pd/In2X8XboGfiGtkCa2rwPtyLO3EObjX3l7fX2kt4kF6qH+JX6tvxY/PN
5o/hWzhOT5Pn6ePwBvkY+Ws6lVcky6FP8Av4x+lBepB+KZtG33a9CrpQdg3X
ypLwr/Ac8Gf5fN4DdYH3x1wDr83+A/QS/SC/Qt+GH1lz1mw7HcubJRtLl/AT
+YU4Gx/H+XhAveBNxR32LacL5Ffx7vA+6eFwX/yf4X7oT+FM8CfYfyWvRJ+N
q2XzrKnGe/E7fB9n4/Ph/fDqrb2I++nF+gF+ub4Vd5s/Y/4ovolH6zPl6/Rk
vF6eEM4ePZ1XIFtON/Hz+E30AN1PP5dNoW+5XhmdL7uCa2SJ+Ed4DvijfAWd
Ia/Cc+X31LnwDnh75PF4nepTz/iTzbXzq3EC/h7+B+8DL5dOt24XniNvoN+G
74RuCc8Q14VvRl/kHvbzyvQtuMvcaXNH8A0co8+Qr9WTcLE8Tn4K9+AUPV++
Uc/CjfK18nrciPvDt4BX46fmJuGbrt0rywhnOpxd+jK/ylwr/ZeO539TWfR7
8zl0mmwnzgz702/C90g3h2eJ/wPFsYpR
                "]], 
               PolygonBox[CompressedData["
1:eJwV1EdwTmEUxvEbIaOTpQhJsGCFIBLMWOllIgVrzGjpLKPXEL0HEdEWUTdK
9JUuTdtIoi3NYIZECX7v4nzn+T/POe/9knvvl7KgMKugUxRFMSrNx73eUXRf
xXeJomrcpDrULENv1J3YKOorO8kbgleqf+oTfyy/kb+ZzutsFh+Q7YiLoks4
Rk+W5ehxeL78j/lc3ni8A880/1rd5vXBVfIKeq28EV+R3aXjnTGBP4heyR8c
9uhh/EJ+vp6Lz8lWyLbgKvwN/8Wz8UdzabjBNapxqzxV38Qv0Zfj2/L95svx
RRzpSfJsvQueJ/9t/xHdn5cjG0eX82fY20m30q/oW7Le9AnzR+g1sgZ8WTYe
p+AVeBAuCP8nfBaX4A71gTcG19vfSC+T38L7ZNtd+wL+hwfKOtNz6V9ms3EG
3o6nm32pbvJ64Ur5YXq1vB5fko3DybgEp+BX9FDn54e/mz7DL+afoL+Ge0jP
kr+Xj8Z1zjyJW+Qj9Q38Yn0pvinfa34bPo//4gHyLByLc/FP+4fwQ5ygZ8kX
6el4m3xaeKboFvoFXSvvSR8Pe/QqWR2+KMvASbgYJ+O8cC18Ghfh3+odbxR+
br9dTeU1qRv8HvxjvAs4HQ+0W8RLwsvxHHwKF+JfqpWXip/ZaZaN8L3X84r0
JbhWtsdcGa7BHTgxnIM74RzcZvcgfoD76XPkC/WxuEw+xf56XI6bwzuHp+Dr
5rrjo/Y/yybyDvJK9VL8XHY+vMN033CebABdGJ4Z/jKciatx+FGopL+E+0G3
yEbST51dZfetbLi+jr+YviHbba4/jsHZ+IfZzPCO4a14srxBXeN1wxXyGpyG
E80UhGcB56t21cwfwXtibhdOwJG5LN533iRevbrK78o7wksM91i1qbf84fzH
/P/GoaI1
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8T3UYB/Bru1Zce99rXHuWkoxK9sgmKySjSCKyiUqlbMrMbNqyV0Y7
o6JCE2kqZZWK9/Pqj/f9fL7POfec+zvne38pvQa1eShNQkLCeD8iq/nxo3yN
R2nBjaSlumM/ydcZRktuIl2c49jP8g2Gczc1SB/nOPaLXMVjtOJmMsQ5jv0q
VzOC1txCRjKRmcQ433nn5BpG0oaaNIm/m736c9xPlriG2W9yLaNoy600NU/L
Pv15+pA1rmX2u1zHaNpRi2bm6divT6Uv2eJaZuflesbQnk5mOTmiL+A2mlun
54A+jX5kj2ub/SE3MJYO3GOWi4/1hdSO52+dgbf16fSnh3UBvtBXkCPuZf2n
3Mi4eA7WRflK70hnPYlP9EUM0EtxRq8T71LPyDv6YFmOGfoDsgSnotNTL8hx
faisyEo9NlEqZ+Mdy6rcEJ9BXoh3K9+UD8uyjGF8PH9ZjFF8HXtOVmIcnay7
yNyM5FPrIbICY1lsPVCWZjTfx96TVagbe1Bm4l39EVmemfqDsiSno9NLL8QJ
/WUG6WX4Qc8Zz0e/KDcxIfaAdXG+iXdGVz0PR/WXqBd73Doz7+mz4nmTi7pm
l+RmHo/3wu2x780TeV+fHZ+LpLiW2WW5hYnxPLgj9r95Fj7Q58TzJ3dcy+yK
3Mqk+Nu4kzzxe479JbfxBN2oT17ykZ8CFKQQhSlCUYpRnGRSKBHXdb2/5Xae
pDt3UTKu69hVuYOnuJcGtDXPyof63HjWlIrfM/tH7mRy7HEa0s48Gx/pL8T+
oXRcy+xfuYunY1/G5zHLyzF9CY1ob52dg/qLsbe5z7owJ/VXSI17Wf8nd/NM
7In4PGb5+ExfSmM6WOfgkD4v9hW9rYvwpf4qZeLe1tfkHp6ln3Uy38b943no
+flcX0YTOsb/DIf1+QyhbNzXLL6c3xJT6K+n8J0+TFZO8//3d2/r5TRlKOVo
RnkqUJFKVKYKValGc6pzHSkFonY=
               "]]}, Annotation[#, "Charting`Private`Tag$1312357#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$1312357#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$1312357#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8VmMcxvGnn9LUsErakmiK0E5LgyijQTuRlqRoaKJoaKtQ2nsvI5q0
96CBaElbu1Te3z8+r+91Xfe5z3POvc6Tu2m72m2TJRKJaUmJxKDUiUTXtInE
kTSJxNvIhj9lK/AZumk7KmuP7PhLthJfym/HEFkZJGGw/APZMfod5MAh2Sp8
JU+JobKyuA1D5N1lf9MdkBOHZasxFD20HZe9i1w4IluDsfJUGCYrh+QYJu8p
+4fuiNw4Klsiy4WZfB38JBvHp8ZwvjxSYLi8l+wE3Ql5sJUvgTX0Me1L6dyY
xdfFQbo6dtM/a/+aToMR/EW1EZ6mf1UrYDOdKp2xibGj16iFkVn2LX+TfhMF
+Nf5v+na8Zv8b/wd6nt8MXWE3+tNn5Rnilw9y9dHXv4BfhtdEln5n2LM1TYx
3vp+o+bBbPlVtRnqxdyrNbCHXuu68XRajOQrYC9dEVvolDGedBFkce/v+Ft0
SxTkW/DH6RfxOz3S/frQp+j3kTfaZevwOUbhQ+2n5Z3xIP6RrccEeTp8LqsY
44jR8o9kZ+guyIcTsg2YKL8Do2SVkBpj5B/LztJd8RBOyjbii1jTsU5jfcUa
ifmM94/fRl/9zrm+G/LjlGwTJsnTY7SsMtJgoryf7F/6AzyM07LNmCzPgDGy
Kkgba4cviu/pNzDJdZ/w5+nueATb+VL4mT6j/Vv6Aczh68e+pJ/FL/QW7VPo
jPiCv6Q2xjP0PrUSttLpYo7pR7GMTpizt2INxrirL8Uakf3Bp1ff5x9TJ7v/
p/QF+Z18D/Uc/yoe5AvwO+jSuJ9fG3tUbcsXUs/q/12sU9zDz9V+jW4e94gz
Q30OObX9GmOkdowxUrfqO5XOhC+1VcV+ujK2xR7Butgj+IFuiSn69Ocv0j1R
MJ5X9n08L+bxr8V+kU3j78RXfLV4b0yVD5BdonuhEP6VbY/rMVDbZVlvFMZ5
2Q5Ml9+FsbLqyIDp8kGyK3QfFMEF2TJZPsznG2CnbAZ/N8bxNZAR62MO8CP9
FmbEOc1fpT9E0ejLl8G6OIe0/0A/hAV8Qxyma2IvvUv7zJgHfM1fVpvEWqIP
qFWwPfaPse8Q405vUB/HfbLlfDK1Fd8q9p/6cqxN2cF4Z7VzXK/O9FuD6Wvy
u/iPYhz51+Ld+UfjeeiyyMav51Oo7eKcVC/p/yOdHwu1XVdfD6+tEX+Efh77
6N2unUXfi/H8c7FWMUs+RHad/hjF4p1lezBbnhkTZDXjGTE7vkWy/+i+eAxX
ZMtlD2MR3xi/yObEOYiJ/PP4LfYcdtB3YyNdHCvo1nH20K/gT3qO/sPoG3S/
WEN0gxi3eBe1HLJ7zw387erbMefxnVYfifeULdb2H90ino1vwh+lX0Aufn/s
ebVT7PnYW/rPjXmMdcZPinejm8Z64V/gf6erIge/M8439d1YL/Qm9QmspJPk
rek2cTaqdfAXPddvDKdv0p+gOPbw5bEx9n38n6ALYAl/Q30j3sn9mvLH6Fo4
QO917Tw6KybztXAv5slHyG7Rn+KJWBuyfZiPBRipPYH+2p6McZLtj/Y4ozBF
VhuZsTC+R7JkGMA/Fc8lOxD3irWJqbIXkQWL4tslS8JAvgRuxv8eviCW8s1i
PcgWxjxiGv8S/qCrYRd9HzbTT2IV3Ran6bo4RC/WfzR9GwbFuaE2RMlYf+rT
2ESnNHbt6SLqrfg/RRfCN9qax5zKFsWcYjr/MrJiiXyMLDk+40shEc8Y/33i
P0N8d+LsjrMzzqw4W2JPxvdTnxQY7PrScSbgoHyxLCdm8K/gfmzhn8Jquh3O
0PVwOM44z9wl9kmcLfr/D6SgevM=
               "]]}, Annotation[#, "Charting`Private`Tag$1312357#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WW4VAUYReEBFFA6BAwa6VY6pMMAKUmRUhERRKS7u0FCCelUWkpEQQkD
LFSwkTLpkND3+7Gevdc+MzAzJ27uDt0bd0uSSCTGJE0kyqZOJO5Km0j0S5NI
3I2dfDQ6oxzKowIq4m6v6+81qbCLj8ELKGCfbSuI7/hSVEIq+wBbarzLx6Kq
7S3+CM7xLihom8ML4RhfhspIbR9oS4PdvAU/oLfEOP4If1uvhvPxWfh3ehe8
yAvxuXphDNT/lMft7fXP9Q6YrN+Wy+2P67v0JzBSvyRv27vrP+mr5ctyprwD
21HF8TRykH2uTCv7yjNynXzP8ZbyIF8qW8nx8l+5WY53vJpcz+fL6nKoPCcv
xO+jH4vvg2l6EnS1F5bzbEXwPe/Av9A7YgV/gr+rL5IN5Ch5WW6U/zn+svyZ
90BVnpYP1tNhD5+Al+I3js+HdI4PcSw93ucT0Q1F7K/biuIHvhLVkd4+1JYB
H/BJsds28Bq4GL8ritre4MXwI+/Iv9Q7YRVvwHfrb8qGcrS8IhPx2fVf5Cvx
b3ptBj5Mz4i9fHJ8T9RERseG2zNhH5+CHihmn28rjp/4atRCJvsIW2Z8yKfi
FRS3L7CVwM98DWojs32k7R58xKehJ0rYF9pK4he+FnVwj32ULQv28+l4FXVR
D/XxKB5DFq8d7XVZcYDPQC+UtC+ylcKvfF1cw8hqH2PLhoN8JmrYNvKauMR7
o5TtTV4aJ3gn/pX+LN7iDeP61Z9Ekvid+a+yZ9wjjmfjY/V7cYi34of01pgV
vzvfpNfCMP28vGx/UT8e5zeuZTldJsU29HG8tFxsf0M+JAfJv+R6+Zvjz8qv
4zqXz8kpcU3Ld+J54PiTcg9fLBvJMfKqTBqfXT8hX43PqN8Z94f33CvH2e5D
P/2s/NjeWv9Yb4PX4trgm/XauML74iHbEv4wTvL1aGR7nzdGMjS03Rf3u34/
PuGz49qxbeF1cJX3w8O2pbwMTvEN8Z1wv32C7QF8yuegf/xfaIwmaIoHvG6i
12THZ3wuBqCMfZmtLE7zjWiG7PZJthw4zOfFNWrbyuviGh+IsrblvBzO8E3x
/9o+4E1wB56y5bBN1nPiCG/DP9GfxutxjfN39Hq4zrvy7/WX4lzzcnyFXh6D
9b/lWftz+lF9pXxeTpWJOB/x3eVe2xLZVI6V1+SmOMdxvuPakWtkrziXMjl2
oLn355RT7PNkLtlf/h73QfytcPxp+SlfJtvKCfJGXKNxv8a1qy+Q9eVweUFu
iOd8PEflD7xbfB9enq/UK+B3viXOm20fb4bkaGHLZZuq58YXfD6GxN+TuNeQ
2/FpjuXBl3wBhqKCfZWtIv7gW+M6Rh77dFtefMXb8s/0Z7AwnjnxN01/FDf4
MFS0reaV8Cd/nn+jd477La4f/mGcd4zTr8sU6KWflGtlbzlbpsBOtPG+vHJG
XA8ynxwg/5Bvx73t+DPyMF8u28mJ8qbcEs+8eDbGuYvPLR+TI+RFedOxbvqP
enfM0JPFs99eSa6xVcYQ/R/5l72z/q3+Arbxp/hHenOkRG9+SvaJa9jxfHym
/iCO8nb8iN4ek/Rbcms8W+P5Hd+ZP45bfAQq29byKvibb49zgQfts2z58Q1f
jJHxW8T/gfbogI7xrI7nYNwTyO99r3lPAXzLl2AUqtjX2ariH74DzW374/rC
XfGd+GnZF3P0lNgV95fX/g8IYWHp
               "]]}, 
             Annotation[#, "Charting`Private`Tag$1312357#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
jSpSkmvuSrBQeEXPQtWCfqSr731bq74Z4+rJ1Jid60vIeYyrJ/d+4sfKYug4
V0+enf4RY7hsFnO9v4LX5PIkcj5b5NVkWIhZ+53YoBgwjTT7ohcfIfNm71D9
P/vYWURzar1dEMNCUl6mH11vsFCf5ib1Sf0xdCPOgc87g4MeLvt3AeXWzOvT
pn0j9sec/9OnrXhYe1ZLceb16W8R6KhNHzGvT29j6JYvTSXm9emkMJPQRRZU
nKtPZ711Xa92g4pz9enDC/dGqdhPz+vTSs3CE/uXVc3r07pX/Squx/Qhrj6N
nzN7/ad/DnH16dgil5IFsRTg6tN+W9PeiG6hAFef/njfQj9Bm0AD8aGZq9+I
QPVu8ztS1wlUcqzHNy9dFKow3LKwhwopQUd8WLliYJ2qs8ddnQoOxR1lxCFx
MCqe2fqscxQlb3uB/64Vhwq5UfF81st5vdvuxt7tT9XH5vXu1Sl/v9Ws5czr
3SJyf/3va1Pxt3nqF9XbJSE5oNv0OLnPYJe+6945woStRZqZV7zZmNXk+A2b
biZo9PV+g4ccrKLLdsjK5b/6wtXLubE3/60A77Q3yLcwhHDfSIWhYK8+u62l
qL/oXrBBDAUSizWWBldXodNPda4nlnEQp60m5vWbBlTjunFVtBSBpg91Hi7w
bEWviD6ZJl2yTgu8OyQU1InitEQc5d/RwCp78It5Ui+qlUuIU7RpQz8Kug5b
1A8ic5Fvu6afTGFcvX4zb6fLPQs6nj8TIbQ9aAxR46zSy55S8bubfWZbgqaQ
/uU3Z4OHm5E4e7l1a8QMYmRsXRtMfj/enLtKMmoOEcNrZ4yWzaFM46vr9RPZ
SOaWObs9pA4N79PZs+0jgVIF0itYn4axnQeE8/b+I+sij4adm+Mc9tD47nFa
BxUaqNPhs2S/acLvVn3toUHTaW/WdCaBSXMya6+O0sFrw1FG9xiBFUeDaz6V
FxZ6Jnwy5lBxrr8gReZESVUhMe8nCJdTWpdY8Atx/QQlzzvVP6ZPIK6fIMN4
+ff6xRTg+gmuUAoUVlwh7zfFTeT1YmGYUGQHhv8i0PVDP0xV1UWg1Mih4p0C
gbL+loVZaIhC+u3+jswHFPizsP2Qp5YYvD99k1/NmAbeYzpTlfLioJh50TZT
j4X+vNbM15SXAFYBzSMmrgN79/6qfN0DCdApczlxJmQGuxF/yixkmSQ8UWEu
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
7rfOoduG22uUCqngZzclbOFDYOa7TOvVymhwcNAmcAonsKGR9/fMK+hQNFfl
9qiWwFwEMsoXN/OAmd+oYlsPFS/eU87S6+CFzyl/VK+douANDyXpf4YEYJfU
AzHRawQq9+l8vXxSEBw9roYeJOc9lxzKdKKgCESXa3w9S+7DPGXTP3nERGE4
W/6AqxYFoo8fdQyRFIN3e4PO/bagQWTn5Fe2sDgMJZiPnz/IQW/nsk77iUtC
eUWZdPV+Cg7e+8y/x0rC5gcieaBExXdotMH+WCaMyJruX0fW3/wLzkKup/IQ
A34FeRhRQe1OVfj5ihr0+qbEq46r/6fbbzqT9eAfKjWL8oxsJtCrcxoxfvR2
tHDThMG0PA+wtulZvprpQgcCc+J1Rcl5Qn69G3PjMIq+N1xeR6fg+edC4+00
RpHhi/ChZZl0PD5J9a3mnlnUs4Mx8MuYhfSlW1trLFjo/a0/SoMikyh3W5DK
fXMaWKwY0AiYIvuhWBR+34wOF9ZV7/q//bVVY0Ir6RgvFG2qmSr7SsWXCq5X
HTojCHn6rW9uXqKA+4mFvavChSHeXqtBfTeBqEbr13+JEoE4hcc1Ki4E+sEw
TFSMFIXAf+bij55RIUnewUwzXgx8tmWnb7xNBYWzj4rv75WEx7kejHBlKn7s
w/6HRA0TRkP+pgT0s+f9l9x6zfVfpqx+9ekVOU9y/ZeC+2r33dci+8X//JdS
r2Ltt5cT8/7Li7wKH9MiOfP+S3vW/RzV7RTg+i9LShIj3y7jgYfa23fMHexG
4lmdwjkqbOQwcqUtLqkf9W+JOxQT0Ihx/Zl+x5xrf+dRcK4/U+JkldKVRDrO
9WfqjP3MulI5ix17U7Hh49lJtCVCBc/lLcWEYYvxVvdp5Prg6cHSMyPIiKLx
MTl8Fsk43TrEvMxCuWsLTh86z0Iro9MXn2aNobuLYm5lkn2mSOGaw++iqnm/
J6dC0vLFwv/8no7L1piZDLHn/Z6xJ7wEbg4S835PFU75j3vPiXm/52hEzcoj
m6g41+8pe11ibOQBFef6PdXrdQ+E9U7P+z3rVqXM6Qb/mfd7littwe5e6EVc
v2chSN3OJ/cSrt+z38/DM/YWBbh+zwuChGXgNjJf/uf3VCrUKnqpRyDKwhtf
D6WKgPAX4vKhMAJlf7xy1ihZFMrqQ0S//KWC1jm8QeKdGDys/2Y7spUKQWMF
pxWsxcH7fcsd5ZAxtLatsvlBlTicpJJnGkXP+0dHCnzmanNG5/2jFX3URQmD
7Hn/6K1x2T1/11PxxzJCfqbNknCg7MNpKy8KrmA1kWx7mAlLTt++03qZjbHE
zqu7tDPBfJf5jfteHKzPcw0Pw+m/eZDrP+XG6q7o4PqM1+jqvWKvnLVUYCDm
Fg2sBD0fXVbW/JACseZnaH23q5Ck/eDZ+ioOCvWcxQ+ebkAyWrdkpfkJpMLz
TWNseyvyTGIH3llEh0Nbor+et+9EMe6UE5/raeC4b1m/DHnfnfcd16143YFS
2i6r5uYMolW+jySavk9iXP9r0CPxIwnadHwxLyVhp9cYcu6wSm2qouK3dy1R
sz45hSx7trWbHfiHioqmjvL5zaBjfI+jHdbOoIMjwnwHgudQUs2u9p8H5tBB
Pr7+NTfYKNlyoZrkp0Y0+9e96Voa2Zf3P3RcsmwYG9V3drtUQ9bRszJeq1bP
YfL0i3zXGqiwz0fzygVyn5xR2vKnuYUGD5oOT3/KJjDhzRMlsz102J9byIjv
JzCvtQ2G+2d4wNOtTK9+lopz/brYxgaj86JkP/2fPzfl+J8i5dvliOvPdU8e
WOGqO4G4/ly2TMsZfnFyfvufP9fvXchSsUgKOJ89WLFCWhiSZhkhkU1kfV+/
aKxYUQT0iMZTEvIEKtv3J85fWRS6M+NTJsIo8MUj/PComhgsGp5gYltpoHPS
9UWjjDg8ISRqq4tZyNHcpmluoQR5Pm6a/PRqx248kjjZf08CIuxWjIWpzGA1
o0ZMtFgS7sm2U8SjKLifd+GO3CRJKLmJJo0kqfgdtxXmzxWYMCsBcoeXEJhW
rSuN7xETFmsY5X9oZmFqvnN7riv+l19cfzE3Hql3TvRJe4QEW8y0j1RSoGzN
JoHU80XojZrZzLoJCmi7v5UyuleJzDzvtCkhAiXliK5KD65D7oONP5vectAr
k+H35/RbEG+F6yYx8jmFyEYqSzh1oOg9rR5zpXQI7424pPJyABn8kFZK5x/C
QqvqdkR1DKNX0mosTT0avtDhw5LznaPINVAmBqh03JX2sEp5ZBr9WqKYPvJ7
ApX7PWg+T5tDfpaF37acYSGzWc7GJCUCrb4sfmPgTwdGO634nUnOoUWF1njK
rhlMkOht/HmXCgdfvmHwTnCwnyaJbSmPaZBSfTDxTCWB4cunzP2f0qG2qbdw
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
R21qNzmAvcqg+6Vqiz05gL3KlYdCzyXd4QD2Km9rM3P3/+UA9iqZ087/MnLn
AvYqP7efL9hSwQXsVYZL05bW9z8nsFfJy80c6b6ZRmCv8sGsNd7vzzAJoVdp
dCtdc28Sgb3KWpMk7T/ZwcL325hPuyyfGc4C7FVO2xPXXuRWKfQqd+vZBagv
ahK+/0baJ/32eFwbYK/y24ZFrfMudQD2Ko3N3vws+NUF2KvMG1S+cnl7j9Cr
fOrS+fx7f6/QqzS6L0KvuNcv9CkPh1k41LweBOxTmm/41ZrEGQLsU9a/HSMs
k/mAfcqT1SqCkAE+YJ9S1tvzrNUbPmCf8mthxhnX8iHAPmXB16u7ZD0HAfuU
qhEmR+iXBoQepV3ytm/nXnUKPco4a9ZtJyMuYI/yv5uc6EcZZK7651H2vKX8
AGe20KNcs/DHjzAJttCjfPOByFZPZQP2KJ0gK6rXuQ2wR7my4PTILeV2oT95
WyTX7pJYH2B/0vsUf3+n3ABgf7JbYvDhRRkeYH9yetpEi5w1D7A/eWHSp6s/
ZwCwPzk23zjnZUQ/YH/yEsvb78FoD2B/cmvpmqhOnS44VPiWUzqPjhz263Td
FLQD7WfK+deJdFRnaq32+QkXfg5PP2ZrwkAtkWJTecUcaJvPSXuXykA+uXdU
mnw5EGjRcmrbAlV0vqK75OkpDrz023mWmqqK3ApK66mfODAtf1nN8UVq6JjZ
j1dTxlzA3mXgjQa9mOdcwN6l+1EnVw71NoG9yy2Ld3llBqYS2Ls8ediq1JTL
JLB3udVicLNObQqBvcsxSbXW7pKrBPYuM6zO5Kx1zwDsXa6VzjhxbMUPoXe5
P264I2rpb+H7g+RTjPSNT7UC9i7vSLkS5v97P8E/71I8L8uu52AXYO9y5VTb
tb9T3ULv8mHgj9CGM71C71JynrnOkvX9Qt/SWv1xmvH6QcC+5cdlQZ97Y4cA
+5aX++ZNJl/hA/YtM8Z5y1V6+YB9S7MV1NF7RXzAviXFpKyqic4H7Ftq9ezO
9P4+CNi3DBp5rXqAXC/Ys0y7SE8xeNwl9Cy7sln5kZNcoWepVeV45KBFG2DP
stx5a2XvQzZgz/LWimdqFTS20LNc9tLTsMGXLfQsT6Q9XuBV0QrYs1xiVLvO
YRtX6Ff2FRhFX5/RC9ivNJadyOj72A/Yr1yuvOtqW/0AYL/S4fLlX2vseID9
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
Y0OVhyrkefTPf0uuVdogldAK2H/rc22ZOrqVLfTf9m7XuG47jS303/bobvtO
y2ID9t/217sM2nm1Cb23QINPXYbafYC9t3UrShr4agOAvTcb0aZV8Yo8wN7b
mxdNdtfW8gB7b/s1ayqGmQOAfbc4TalTs5t7wFJG4oP/KxW0RC7MIVKhC4Zu
Gf2mmNCR17eLsY8H2gHZV6y+846OaB+GNU7c5UIctT/r6kIGilDJs5lF5j23
1p2lr5gMVNRJ2FT9L4+sePN48SJV5B7rXsQ7zYG9CvUGS5mqaFfp8T79rxzA
nhxdW+m26Etyv/rnydU9n5dmaHWXwJ7cpSrFiBMFqQT25PiKRQbBzUwCe3Lb
v6oM615PIbAnt0/HVefa6UsE9uFuh+/5+6qwHbDvNscwbFgrjA/Yd+sZZQQO
kOcp9t3oT7XNjfL5gH23vRtdan/J8oVem2Li8P5vc9sg1IjDrfwhjbKvZT+p
i2QD9ttyRFHyJTIfYr9Nxjn/7tRpttBvy904svl0Sytgn+3wN23z5JYBwD4b
/cFruw1kPpy5Uq3ZX6CEkha8lDnfOQDbbpfNWxFJR553Sm9G1XNB/w3silBk
oA3HX92i9HNgl9araX1RDPS0+fyM9EAO7JvcF6RJV0UHXVifVMj7gT23Av16
rpRmArHGoSfoPaUUPmdUHtk+i0lg3y3Pv7Ktbmu60E/T/Sb5+COZj7Cf1rT7
IGOYzE/YT8vXiZ3WE8gH7KFlGZgcSlzRCthD+69eUDamyxZ6aPnRI5r2Wmyh
h+YQtuDRJalWwN5ZQtr5wfkLeYC9M+PB5W/CzXig4xStfuk/BnpY5SM4EMeB
o/FKkXt/MtDPHIW26+T+xjk3mLlpqypSDB6jJF/mAPbPAn0jSyJyyf3sn3dm
v332b+bVFAJ7Z3cDFfRyOpnEsp92nTLBNDTcee1GDpl/sUfGmtfYOE7m44eS
iYMJSdLISubTBPcDG7AvtqfYp3WNGFvoixlzDJTzdrMB+2ED7xy3O+UNAPbD
xkw+cyTIfOi0ouSV0hUGKglPvL7zEgc+N6zoixQj56nDSv5LyHwYt+58c/+f
InA7vsFmR2g6gf2wAAYtL7InXeh1eVy0Wr2enGew15Wp0pvympx3sK+Vnz+D
MrmMLfS1bi0N0cxTIj/vPz/LM3P+4tk6PMB+1rRU45CI5TxoNbTpuryGgcyW
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
w/m8GR8XPuIQuH/oFqemk7+hS9g/pKk/XTCW0i/sH17xeW9tKjck7B9a+99y
qhYbEfYPS2itO9d+nyRw/3DJgcm3mRo0Fu4fHvyaOHNDlwgL9w9/uHXJeW2k
sXD/8PvmjWaBalME7h8uRJrtNL+/BO4flk+g+/l/BgncPxxNHOuXvMcjcP+Q
OpJhu2gLj8D9w/6WPb6BnwYI3D9c4XhMpLymj8D9w5f5SPf2QCeB+4fPlm6J
tY7iELh/KB2v6+hxo4XA/UPB0oSJzXmNBO4ffjF6uy1YuY7A/cP2CR2F/yPq
zuOh6v44gNvH0jKyTaVSaaWkKCXOUULSot2WoqikIkQpUY8kSUpJKZKoqCxl
d4YsEbKv2XcGY2xj7Xd7vTrn9+d9PZq57tzle8zn/XyGssoR9ofDW7SSr/GV
IOwP+81Syu8czkHYH3LnaBxoCY5A2B+yfn5ysWtNJ/5wenCs4cmvcuIPNyru
ngwxbCL+kDfhz9echR3EHx6DWhq1s3qJP4xKaqW/a+8n/jBQoWbW7Bk28YeL
bzxjP5DjEH9oPPa+ZVbMEPGHq0yl1216P0r84YM9OlukhCaJP1R/oZTQH8UD
sT8M2TAruL6RH2J/WCEZf030qBDE/jBfomTRUh8axP5QqD3s3a3zQhD7wxvv
Pu4URQIQ+8PMI+ovzF34IfaHixw9eea+5YPYH0poOJ23mccHsT8sza9buT2f
F2J/2FDTm9MfxQuxP/yUUpmhH84LsT88mMOTOI/axv5QtXwy4vZHXoj94Uvf
d8lHqrqIP/RPPDklsLmf+EPttcebVPdxiD8UEHe5Vj4wQvzhn5J+BeWoCYT9
4QWvohnWbR4m9oenEvfrydvwM7E/1KzPGVjnwc/E/rDw+pdDhRk8TOwPhRxT
Hqj8N4GwP7QYV7nucWAEYX/4/Ur5r3GhIYT9od/3gSfy5zgI+0P/FQmubfIc
xJPn/nbZjWlQ+MYf8EyxEfaI1dfqbj++1IewP9z6fe7Zuy5tCPtD3gyLE6Md
TQj7Q07ArXPvsuoQ9oe3bY+vQPmVCPvDVR+VMuLGShH2h/qfoibLKgtQi/43
jXu8wrBxA6qsiE1D2CMy3tyrTe4IIb5wB7thd1lUF/GFx1Nzri+Q7CO+8MnR
Pa+W7mETX9jwkiNi+mAQfNpX6HvQnw6VeNXjXxZxiDd0ulAgsXB8mHjDNhvD
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
3lTVE8D+FowP288D4wMAbFSCqg==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVzjkvpWEchvHHzqHwBUgOgsQXIHQEiWWSM5EIMoUlsYWCinBkxpLQoVUP
Z9DO4phPQGFN9ChtjS0Sv7e4k/u6r/+T9433TyYmMkMIGZKU1uIQWqTN8C87
hOGsEL47eMY/pSAnhN+2E1uzzNmu3a3bdnFcetzk28qiO74Sn+t33ICs4lo+
YWvnD/QR/Qf3ghv5R1wo2ziG/+in/IE+4r5Fn9Ljej037+5G39D3uBTXHf2D
3qsX6DW5IZTzN3gDf8On3lXhC3sJvnd/hGf4LjyI13AdbsBf3X3gX3gUd3if
jro9Dy+63+LbbK9ck/7EFcmVvmLfsRfqf21n7tP6qL1Vn9bLom9xSXe3+qa+
z5VLHx+zVURv+Wp8qZf69gN/jGf5Ib2TP9TH+CX8hlOyIF/kPzfOLXPv+BOj
3EJ5
                "]], 
               PolygonBox[CompressedData["
1:eJwV0jlMVFEAheE7A9rYAKLIosYOOlEhbCYUYiE2DDQq0cQoimyFKy0zAo3a
ibK4BUxcExutVWYwLiW4NEqCbEKrhQt+rzi55z/n3Hl5M7PjeE+iOx5CiFGa
ppjGnBD6skIYVeTSS9kQ/c4O4YH8tayKFmVtNC1PysdkefRKVrIuhLeyOXyI
bsj+2D2UTeJqWpJV2c3LAp2XnZLN2KXwLbyRmmzWcGH0bP1W/I7/rjtMfXin
OwdkN/V/+Ud8WvdcdwLX8B18Ib9bt2xXjRf4GE3zSd0Fu+v8Pr5+fQhHdVnO
Z7jLedq9j/xl+QZ8237cPiHbj/NxAgdciovsvuIr+AiedH8bfi/fguft0/hs
1PNJvpxv1P/kx/lhd/45H8syNrXUqSuS7ZH90NfgRT5OF/Xtsk/6fnwHb4qe
IxuhNfkT+ZSsjlZkte4vRe9Kl2RnZJ/tBvBdPKFvxpv5Zj7GF+u+8Vf5jP12
/kP0O3mvBbsMPqdrwq04hXfhSnzQ7heewG14NPoD4qfyPPzG/gU+GX0XeC/u
wsW4HFfYreIRvOpuHb8sy6YZPiXvdWeIb+CPyTvsvvCD/D3dfV0LLuBb+Dhf
5rNL9LP4Gm7F/wEQcWWN
                "]], 
               PolygonBox[CompressedData["
1:eJwV09lTjnEAxfGnVMaFNv4AmaHSZlyTdUZFdorQwoWl7BRmcGMPMWOn/AOV
RDFDkd0VLtB6a6cG1V0+z8V5n/M95/ze533reZPKti/bFhkEQQQlesmLD4Jc
Ws53RAXBjlFBcMpgBDdSbHQQPJR9kC2go7LvdldlzbheX4RT+GJ+LJ8eEwTJ
+s/4Iv7kTBrfKftjt4lWyJ7qdspOhx+Ibsvi7B7JPuKFdEz2w+6a7C5OpU5Z
ul2X7C/eTCtlz+x2yapxBM23+YfjqEkfj9v4T7p8qsSTnJkpO67/yV/n7+ka
dGvxFL6Ej+UzfK8U/Rd8CRfjLucycLd8Av5n/xYf0q/CW/BZPD1kmxG+PvTO
PXfdLTtjE0l3ZAn6dlknXkRVeLLdLNkJ/S/+Bt+ia9Stw2l8KR/HZ7pnqv4r
voxLcLdzmbhHnoQH7d/hw/oCvBWfwzNwNi6wC1wbcHnIzr/g98jH4LP2dfb5
snl4FM7Bg/p46uZP6pqdS+Qfy7ps2vhy+WJ+P5/Mz9adtPvN3+THer/W8FnQ
r5fl4HRchuPD/4dNj30W7uWHdOVUKHup3ys7h6Mo12YIJ4TPjn4cfhJ+Pl07
X2G/hD/Ap/DT3GuOvh/X4jJ8yrl+vlYei+/bN+mLZbk4A2/ACTgLp9l9w1dw
Ke51firuk0/Ew/bv8RF9BV/DZ/OF+gh9I7/amVeu+2Q1NrdsFuFoPo8flieG
z6ndeNwR/k10S+kgTrWdKxvg6/jTdgOudeFvwT0ehM+ariR8XviNfGL4u9X3
2a6h17gSn9fHUIusmoroja5Kd0E+mlpl/wFDGYnG
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0MsqBGAchvHPMeWQcgGSGeISaGxERhaIQrGwYDGZyYIVC4cyip3ThhuY
cVyScANsnHIBThs5LJn8ZvE2z/O+/6+Zpm481Z8sDCEUyLR0VYcQlwdFo+FE
dopCeC8OYVl3IDlZ1af0V/p+Pohb8XpJCJO2eXyDv3BtaQiP9mZ+73bD9owb
dBV4LM/uRnAWH+Nt2xtfcr/r80PfpovgWdztJoHP8R2u8R1n9kq+780QT9uf
eJU+yn98dvI/ezvvse/xtPdlPGm/1PXZEzyLc/YBfYy38DU+4X4OX+NP/GBv
yv8O76K43DbKo7ZhnMFHeMv2yhfdxXA9nrHFbbdymv8/eNZeib+lg//yFfsU
v/Cml99KRHcom/oX/YIuI/+gpD0r
                "]], 
               PolygonBox[CompressedData["
1:eJwV08lXTnEcx/FLo46FddJg2NiiyTlUSsMxRsXCUIayKZxDJeOicEyxQwtj
kxUq5R9Ag8KCjalsDCXjMS287uLbfb8/n+/vud37nCeloqa4emoQBFNMnD+5
ZsWMIMg3IzhZecucjwiCscggOChrNT/NMXmlvE9exDtd/0UFwVrZ4uggSOMn
eYW9ejyAx/Ez/Tw87EwKjtFt5Em6TtMsG5U16DNxMt6rz9NV4ft4BPfoYvFN
e03yFzhONte9J11z+A9dDi/St/CjzkXznfpeWaF+F+/Af/Vr5Jk8lZ/g5fbX
8zrezz/xBP40vA9/7PwF3TucLIvGG3CivTLcgTvwOd1bfsB+Bk7Ce3S5umHT
Hb4HfkP/3RyR7ZDds1fAq9yzHf+xs1qewRfx43yr3Vr8CH/ET/Rz8JBzSThK
V8Zn6drNWdkbWb0+HSfi3fpl4feJ+8Lnwl3h8+Dr9hrlz/G08LPd+7NrNv+m
y+aF+sv8sHNRfLu+R5avr+Rt+Ld+lTydL+RNfIv9dXw/f8g/8Jl8xN5sPuj8
ed1Y+E5lkbgUJ9grxe24DZ/RveZ19tPwLFyjy9ENmbvhe+DX9LF4wmTxr/yQ
fhvvdmY5HzAzZa3mtPyVvDZ8Tj5o7oT/h7NXZTF43CzlX3iB3Uv4oL0KeRfP
C38zrr/kK2Vpnm8Bb+Sb7RXzffwBf8/j+bC9FN7v7CberB8Nv0P5fB7BS3i8
/XxewtvC3wKfzk/Zeynb73yL64QuVZaAq3GWvZ24Fw/g27oIfMV+NP5klvBJ
nm/vIm6wVy6/y/8DvbuERw==
                "]], 
               PolygonBox[CompressedData["
1:eJwV1EdwSFEYxfEnyhAtRhpWNswgUkgso7cgEb2TRF2IttHLUidE26RoSzOY
IYiIPrpYSiLqgpUuovzu4uSd/znffe8l9770LijOXxkTRVEryvJjfFwU5dCL
NlG0GJdSDcUZOkHbW0dRna5I9oGGyGrprLxZflg2jk/lt7eNopm6vHZRtAbf
wm9wEr5vphe+bj6Z/0t5uKv+OG3Dz60p1M/jR4R769fpdvAv+H/8O90Q/r25
4/JPfIYszTOS8QqcZW48LsQX8Q3cDZ8x90t2yNrFuJL/ph8rz8QD8TY8w3wu
Xo1v4tc4Ed8z1xNXW79b18Anyf5QLt/F3GR5JX+M3yp/hgvMz+WHh2fr1ur+
0ltZFn6nT+eT9Mtxpq6GTst+ykr0Y/gUfqt+um6S91mFa3ETvqvvwV8zm8i3
0CTcWXeUtuCn5hfp5/DDwn31a3R/6E34G+C3+mO6j3yaLJFfxg82U8BfCHvI
x3n+Kf0P2UFrinAF/1U/Wj4YD8Bb8DTzE3ExvoFf4QR8x1wyvmr9bLxLX48T
5H3xb9eJuFM4U7oK/gi/Wf4ELwzr+KHhHXSrdS30Ojw/nD19Kp+gX4oH6arp
pOy77ID+CnWUldIm+WP5Atkq/JuaZIPCGZAN5OP1S8KZ012jStk32X59uesX
3aiwxvv3x5vxVHMT8EpcgxtxPL4d9hxXWTsL79S/xPHyPrjZdQKONT8K5+rL
8WEcizfqH8nmW3/ONUY2S5btmh1+P7PF4Rvm6/hm/pU+I5wZa1L47uG7x+m6
Rfz5sB98he4r3meu0P3K+M+6kfJ+/CZ+irkGuhXOCb5stnv4xigHd9Adog34
oTXz9OGfzy9qlKWHsyBLw1eoXPbF3F5ZPq6nm2H/zF2StccltF72wNxcWWPY
Y1kVlck/y/fI/gM3pKKe
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8zWUcwPF7i2SVrLrcQkYoyh3GTZEGWekaJStXInSvrSiFKJqINIw0
bC1F2aWQTXZFw94VaeH9ffXH+37O7/ucc+45z+95nTJZOZnZiQkJCbf7E73I
n9U6gRyakBpzLrb2rb5OT5qSFnNyWVujb9CLe0iPObmtrdU36U0zqsecS6yt
07fow73UiDl5rK3XifQlk5ox51LyRj1ng06iH82pRbL5L/oxI+lCvniN+Uad
TH9akEH+WLe2SacwgJbcTAEKchmXU4gr4jWev1nf5jFaUZvC8RprW3Qqj3Mf
t1Ak3svad/oOA7mfWyka/8PaVn2XQbSmDsXif1vbpu/xBA9Ql+Lxmaxt1/d5
kjbcxtXmv+onjKIrV8bnN9+h0xhMW+pxjfk+ncfzPMJV8Z3Md+p0nqId5cyO
6BeMjjNEKbP9+ikvUMX1H/oV3bjO9XFdHGfA4//0VW7y+E/9Ju5fHESSYr90
V9wHnaGp+rc+zfUe/xZ7p8vj3Oi5+N7aXsvr0dh3Xajp+m/smY7RG/VM7K9+
HWdLz8c+6B1aWg/EPdXPNE3/0Rep6vFpXUF3Kro+oUsYRzXXZ3UlJeLeut6t
MxnCDa5/1y/pQAXXx3QRY7mTMmYHdT4v0YNKZid1KeMpGWfD7HudxVAe5C6u
NT+kC3iZR0mO82L+g85mGB2pH2clzoa1H3UOz5BFgzgXcW9jT+JzxXtTNs6G
5+/RuQynE3fH2SDJ2l79gBE8RMO4L7En1n7SD3mWzjSKfYgzEvsZ35XKcZ9j
v+Isxb7HfYvzEnsc39/7/Kwf8RwP0zg+m/lh/ZxXyI73Mjuly3iNFNd/6Soy
4vcv8f/fwRTXFwBGU4qi
               "]]}, Annotation[#, "Charting`Private`Tag$1312441#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
rRvPb/GcF3sc/kdeGGeN3xEPjXMAr7M+O/6KnxUf1/8Cd5LXivtYPEfhB3AJ
/Ezsr3hWPAda+5fjHN7nesVNW1nW+M15J+Ul8M/0TVmX2L95e+V9eBNx2nhu
4o0x1/hz+Rt5Jcwr1maLc553Sv4YPhnPjrKuZix+St6E10K+j36bniSbLauH
08U+TN/kF/H+s8W5gIfFOrzBuhx4Gz8bPqG/GXeW18bP4b74QfwYrhL3Azwb
t8Fjrf+bnhf7Et6kv1LeKvpxH6Lvoh+R/0Z/QJ+2piR9Kp7XdLqZcbiirCmv
pXw/3ZeeLEsf+7T8X3xXfNfyu/H2OGdkW+gu+nW8fiPcDxfDVeNa0L1Oz6e/
kJWMe5k8e5x/8bwpL4VPx/OKrLsZjyvJm/FayQ/Q/egPZHNkz+IMdF36P372
uAbo4fyN+vfQO+K9ej8n9b7EXWNPjn0e98cP4ZLxbyu9v/CceC7E462/QS+I
PRVv1l8lbx3PObgUfg3niO8UF9e7gD/EZ6wtTf8S90C9Q/Q7cU+hJ9BP0y/K
WusdpPvTH8ruNPXkt3AOs0meE++Mz+Y1Tsm34m6xl+MX8AD8cOzPOhP0/6EX
0ltkpc1ZXhvzDX8AfwovY1xbvInmZXNIVtOe9o58qixTnHv8SeambBH/S14Z
c47X1hyO5zr+NF7m+O15ubyXXbzTuLGZzPtXbzFvK37cnOeV0TsT913TI64v
3hG9QXg6zhL7u85tfHe8tjw3/jrOE1kT8w5+JH6LOB/k/9FL6K9i/5a1wWXp
9vTdsWfEvUrvcXw27j/mMD0w7j16E+nK8ewR/4ciS+b4Sdy3HNtZ9y09mJ8W
z9Cfq1+fVyX2stjTcSKeDeP/cPSO4xFxHeGt1t+Ld8fvis/of4W7R04PpB+N
30B+jZ4bz4DW3HL8iLdNp1zc+2X3xPUc17C8LD4Xe7DpGdcT7zv5u3gmzhav
w5tibvOX8rfznjAXeOWsPx+f1fSK85n3vd57eBaeJ2+A74r7Cp2Ezik7QY+k
t+nnoffE7+RzndXbhl+XPYub4UG4OC6Fa8UzDJ6H2+Kp1ifwsrjH4x1xf8Uv
x3eBn8Qdcc7YI3BJvYt4Cr5o7RP0r7zk5gg9KO671kyin6Gb89vrHaWH0LNl
82UNcXa6IZ2ULupv54o9DI+K/QZvty4v3ss/F/dhM42XhLectxOXN7/zOphj
1r3Pn8PLYXbwppuOJv5TsbPpYrqabqa7ed38YN1Q6+Zac7fZyZthknqdj/m7
eBXMJd6TvN94KUzvuL5wFetbxHfgPX9Kd3Lsofs/FTehjQ==
               "]]}, Annotation[#, "Charting`Private`Tag$1312441#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf8TnUYh/HHHiVp0BBlUyKUFWVlhqwyQsjeu0EoIyWjbCGy9x4pZJdV
tlCZlSIkI6r3/cf1+tyf63vO8/s95znnex5r1qlWxySJRGJIskSiU8pEIk2a
RKJM6kRiSqpEIgf2cI25Mdxf+hv4jCvKdeJ26bVwm+vOzefSYjjXmUvLldWn
6jnxnr5Ofwh7rTfRx5qvWnsTE/Tv9YKYZr2Y3tm829pi8y/m2ubh5m3mnPjX
cT30BeY7sM78lxwR/6v5iPm0LCp3yuTo4pw7ZDnuO/mZY+fJU/pZmUsfKL/U
f5APy43yhrwov3N+UzlOPyj/dvxKeUH/Tb6lT5T79J/kU3K7TGC6c4vH/8Dt
cdwS86/mOuYR5u3mXPjPcT31heY7MdL6NP2ouRi6Wr9TLx/XylpufM+9xo3n
rulv43OuBNc1rrleFwl049PxFfjpeh7s45pxE7jreh/M4Epy3eJa6fWQBN35
u/gX+M/1vNjPzcSzfHf+e+5lJEUPPj1fkZ+h58MBblZ8T9xtrZK1mfzjOMjN
Rim+B7+PewXJ0IvPwFfmZ+lP4BA3B6X5nvx+rj6Sozd/D1+Fn63nx2GuOTeR
u6H3xVzuOa4Xd0BvgBRx3/P38lX5OfqTOMLNw/N877gPuIZIGfcyfx9fjZ+r
F8BRbj7K8G/wh7hGSIW3+Pv5F/l5ekH8wC1AWf5N/jD3KlLH78pn5Kvz8/Wn
cIxbiD7oi0zWa1hfYK0QjnOLUC7uT/4I1xhp8A7/AF+TX6gXxgluMcrzb/NH
uSZIi378g/xL/CK9CH7kWnCTuJvxmXFvcxW4PvEc6U0xUt+h547nNX5LfZE5
HUbp0/UfzMXR3/kP6bXMi63NN582P20eZP7KnBlfm2/Gs+b4182fxvWV/zhu
lbyon5f99Elyv/6zLCR3yCS4gqXOf0H2jd9fHnP8Uvmb/qt8TR8lv9FPyDxy
q/w3ntG4z8yLzXfhS/NV+XE8g/FZ5hIY4G88rNc2L7H2DAbr6/VH4v+y3lKf
bL5lrT+WcRW5d7jjejOki/uSW8Klxyf6u47LzNXRl+pFcZJrxU3hbusDsJyr
FNcjvofeHHfF/sw/wtfll+nFcIpbgYHIYq2eteV8cZzmVmIQBiOr9Zetr7BW
Ame4VajM9+d/5FogPYbwj/Kv8Cv1kjjLrUYVfkD8ntzruBvv84/x9flV+rM4
x7XmpsZ7IL4/1nBVuXfjWuotkSGeyfh9ubsxWh/quGxcA321Xir+J32DngW/
WG8T74bYi+PaYC1XjXuPO6m3wsf6t3pe3BPPsr7MnAFfxbtBjol91HzcXDLe
m+YU+MDnZZcNY6+Uaxy3QJ7Rz8nS8b3lRv2YzCo3xX0t/4z3hvPbymmxP8T7
Jb6L/FP+Lgc6/1N5IP5fWVh+I5PGOxJfOP/FOI4/FfeZ+by5tfkT805zPtwb
e46+PL4jxuoz9RPmZ/Ghz8mhNzKvtfZcXF/9a/3ReCdabxfvPnMSDLK+jqvO
DdJP621wH/pwK+JvYpw+zHE5uVf1L/TncZ5rz33OJcVg7kuuBjdYP6O3xf34
iM/FN+bX6WXwO/cVhmMEcltvEs+stbL4g1uPmvwQ/izXDhlj/+Lz8E3j99XL
4QK3AS/x78dvx7VHptgv+Lyxd/Dr9fL4QN+kP4aL1jvoM8zJMMT6Rq4WNzTu
Q70DRuu79MfxgN5XX2m+Lz7XfE2O52eZfzSXwm5zSnzs8/LJZvEejXvccQvl
2fh8WUH/UG6O/UVmk5vlLXkp7ifnd5Qz470hk8s18pL8I76z8yfLg3EfySLy
W5ks7gHn1o57PfbQ2HvMv5s7mseYd5ufwIPxztBXme/HBH22/pO5dOxvPudx
vbl5o7UXcInrxM3iUmAot4mrw30Y953eCQ/F9eOf4FvE+0KviMvcZoxBfmuv
x/PFV8IVbgvq8sPi/cF1xsMYyz/Jt4zrpFfGX9xW1OM/iueP64LMGMcX4Fvx
W/QquMptw8v88LiOXFc8gvF8Qb51vF/0qvib68zN5lLiA2479wo3Qr+gd0MW
TOCf4tvw2/RquMZ14eZwqeKZ5XZw9bmRcR/q3eO76Xv0/Miq99NXmzNioj7R
OYW4tvp2/cV4RvUtenZct95Vn2tOHfuB+bIc5rgp5kPmp2MfclwDfVTsZdZW
mP8w94jrZd4b7wv5ZHwH+Z+8LB+13j/2Sv2ozCQ3yOtxDeQk63Pkz7EPyOfk
HpkKV2Pd3y0s2/H75Q7HL5Ln9OqxX5i3mnPEb2W+LW84p5t5njlN7EPmK/Ij
x081HzY/E/e84xrG8xbPjbWe8Vvq3+kF4nnXB+hr4xnGp7E/O6cI1z6uiV4D
N7mdaMR/Et+b64Vs8ZzxT/Md4u/pNfEPtwtT8Iy1jtZ28i/hFrcbr/Kj+Stc
b2SP92W8A+LZw2R9rn7S/Dz2mlPH+wtTnf8/pkn6tw==
               "]]}, Annotation[#, "Charting`Private`Tag$1312441#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
8uxx/8uVMDHeZ2O7mPc8pXz2f0+Tq64=
               "]]}, Annotation[#, "Charting`Private`Tag$1312441#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
14n/U/jZ/wHKpbd3
               "]]}, 
             Annotation[#, "Charting`Private`Tag$1312441#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJxs3Hk0lP//P/6ZMTPWJLtSWUpIor1Uj6dCpWihUimyRFIJqVChXaWSkMpS
CEn2bLkukl2W7CT7vo59mPGbzzmva97nfM+vf15nTq8jM3Nd1/PxvG73+yVv
cfWYNYVEIq0WIJH+778KL1ifgld47uYdKLpNdp0B/R+8ht02GOy7epcpND4F
ZYu28FPPVkBVTwH/xMAE7Hmhi38+XA+F0gnt/m8YYL2euUhzUSucE3IXWuIx
AgYq1mOS+zph77c5v8LEHkisvn29aFsvqMa41ru0NIOWqOo36t1BOBFh/tkl
MgVs5nw/RJiMQqhDDCa1oRK7mt+z8ZsBA0bpZmc+ebdh3qfpq1n2E2CopLf4
6eE+zLLA7YKm7RTEZAlh/TojWA6vzNFLp2ZA1sZM8dFmBqa5xMO/z5kJ9naG
b7f8nMDMx3epGdrPg/lsp/HQyBQWFvxLdvo5G/4esW2Pos1iST47mqqOkZAB
VhvfX8LEnDN2HflwiIw25qoc/LBvHsOKIxhPzlCQ3cnN2lcrWdjFfdt/XDTh
QYOFJ4NSTyxg76M0Uy7ZUdGtATnFpUkk/NX4D0+HGzQUemFLUfsZCt4dc93F
1pGOQC3MKrWBhhe8Clx+4M4AkP77I2O258i06TT3tUTCD/rkvXnu6/fHpLIf
ZfEj4rWot4vd8VNi3Ne2H22XqLL/95r4PonXcfEO0wsL0uj//7UIXvyq6Vqv
zTdIi1rLbsCmQY71/T1rSyFoMA4eNWNNwuPfPzqPn6iGmLry+8cqxoE+LTtM
3dwM6T53N9/dPQanYr8tKKq2w+GSuKfCjZz3dffaxlHoBvwRnW/1kQ4YMP9h
q2o0BsXDbo/0Axsxd5EbaifOjkMu77dW48gubEokRzfAbhJEatsPCtkOYuJP
RupmGyjo+xLLNl0fNka5uTndro0H6Yi7DsuuIuGSv28sGx6lIt9GDeybNRnf
WS7jPjhBQ2zhzYxHCTx4zcy9R9eZdFT71CX3gawAXrTjXvqgTQi4bywfll85
A+1Df8/fnPwJX1QuTt9wmwLV4dmp2FNVACs/3yo4PwGr9mqePLGnEWr1nURC
hsfg31D1w5hlbfDWime4I3MIlIwv+d7b2wVrg2QLA191gYq6Mk9vzSi8//rU
vo5ci7lcWh/vVcOARhOGtFhUB4anWG4u5pw3r8W0blt29mP90fpdOUEUtK/E
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
D/gWX/Gp7KbghB9c/ltSZStJwwk/eH7NjqRLZWFWO5UMp65OQaZv0dRIYCvW
/Uldv+H8DFSEHRB2+t4CGXx1ygXuTLgsKROSc3AAFomSKqqdOetxgNxuq4nP
8N5Ure64Pxtaf/Z361bNYhbvhGkZJ0ioPxZdpW2n4ymnCygNR8hI+c0+WZ1M
QXypnus1oxZRpDXU+nJ8moLKEvhPwxkxhCP6t6r3wViVrPbc5XYxtHxT5ni/
yRz2ONC/6LVmPHRvIdFxHwoSD7YelXArBKez/PtPBFGRj1CQk5xLNZRHVldr
9NMQ4RV9GP18RL4gimvzZKUe7gbncyN5Y1W8yD58x8KCfT+4n00IYe3oBsmJ
k4vHoobBd2kDmSE1h0knS75gnx6DTYujJI8o0vBSby2rP9bjIC8nmmjVQcFj
uvMl7ztOAt3nI5Z+g4H5NTvvfW07DaHpud/8ywMgWLndPvDqLFzwyl8xSOmH
ytkUp1s358DjePvVyqEO+Nqzd3/0Axb43OGNtCjtwxaWUVet+7gAxutXvy6z
oOBNFnNGh+vJaGlfvWp+lzCeV9Bk+CNYFPUoHLu8+vpiJBLgtzdZVgyZ3bdJ
H+wehQ6t2997g8WQdEOZxbm/w9iXnWJ3Nn8LhRAn94NsLzKq9Xma8nJ7HmwO
vSsatI+KNNRqH9y4VQWvLnSJGz2kofy3Fit81dqA0dbXJVQqgKpT3Uz1jbog
morkKQx+xGCa2Ju9H4I3phe8btqOYyc8PVWy/o7C6PiDxdFGVDy/a7xn4S8D
TM4sb3izk4rvufC4Ka13BkQ0H4t0lXaBrqeeYSiTCacHn0x9+dALBjsDb2vL
LkCox6Eg4+ec+f3W9FnrHH70UaWbP21kiHMcKnLG7jSwz7dhvj3CgzIkpUUe
HOiAi1nHJD/PCKKHQo+DFQ/1QJ4Gv/LHBSraOXQi0StlBP7EKwR5hpPwxu4v
E6h+DHa2+b+/Y07Dq9ffa40cGgecX8/50jIyHqsmm93WOQ3vJ9c2Hx8sB2a/
FvvG1CzsyMoZD2sagLOOq98em5qDtCAnll1aI9SztloLiZOQTvkV1sfXVHyE
tPXCD1wMmQuQrfYnTGKj94V6bsa8gnsMuv75JhLa9miF9G/pXFCs7A5mS1CR
947J88cjWqHcvxr/ISiAbMNmBMVrOqHx0K9LjRkCaKIndWppyCjQT55b6pbA
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
bO8YFuFsepucKIW2ugqSA+VpOH/BjjqnTdJonsIaD1Ai4Tt4j8SnpEujD80X
2zYZtAPhj87xdtIiST1cf/QY+3ttsH6Q648PZhW/OdWMcf3xq9apheekKa4/
+ssm5TUHzmGEP85piVmQisk44Y+rJtxanJ7RcMIfb6/gT6FuoOOEP3ZLRqxy
3MrD7RNvNvVUER1nc5/Hk5B82MBo9n99Yo2ShL0SaZPcPrFTP/lfX8k4Rvhk
4Pye2gNbR7n9YdLFrKpQ/kFuf/iyw9Ebj0t6McInj5zbVLZ6dw/3eT/3SOut
O5p7uM/7OePz9Lj68kHu837ev3Cj3186iRE+6Rq6883SxzRu/3gdM7R15iQF
V88vIx+rF0J5HUGC8doC+M3EXXtkWhehtcsz2l/nTELk99SafU4iyPNZmE/J
ASF0Iv7HgiRDBD1vnii2CZkFvcFys1cuS9D26Jbv2gk1mN2ikE0DU0vQy6fs
TfHRTOz3tVsw6i6K3r4ZX+roSsGJvrOulVx7mBQPTvSd9/hJLTXlpeDINO8v
L0kcvSGneQ8ySLj6z8uOMx7iSLjrvdrZi6MY3+1vG7bwSyCc9ErJf18XSMrG
2Rg9l0AC2wpGAlexwST04pIjiySReqeHy9gOMmq20Rib9pVESrHXPzUZT8CO
ybentZZIIV/BdebyEu1Ylb+NjM5LKWTucrTGR54Hj3FDwjPi0ihC97AGBXhw
j0Ts2Ut/aaQna7naJvIXt4/t+alFIEC0n+u3KoL1cwaLRrl+G/e37nBh0TjX
b2W1v8GPhzMY0ce+2ytbdqWMByf62FbPuwT3XqPjhOdS39nWxcxQuX3sh9+Q
lIYJmdvH7r1Mf67qO4cRfeyva6r9t8hMc/vYd4LmUnpjJzDCe41ZlxO11g7/
r2+9ISaua1M/RnivlqbwlSMVPRjhvbxuXpRL23owwnuFTmfo/X91nXk4VO//
uGfF2GKYGZUKiZKUFlrU84Q2pGxFKUsRSWQJlfYktAtRooVKG5ESzkmFiJA1
KoSZse+78Tvf6/o85/3X70+XLjTLOc/rmvu+X193Csnek9zx4f1L4nsx9Hnv
+kiDhDT6FHbWeHps7zoWvPFLvSP+uyTe1tSWtclYEvpHLijaMl8cLzCnrA/Y
LwMTVyoHrBd0YYZ9l+RX75OF3YppIcflWTCUZzzlt0oeHnxTtc9OrBlc13HS
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
rhldQ8cpQH0Je1EHuP9jpv3Jg8Q8/z9+js29rSXfzscQPzfTf26R9DI+5res
o+QAiw7h71fK0wpCzEAynVesyIC/B2yCfPR6MXXlCqrDfCY83Xc9mYlPYI6X
5EeLFrNgx4CJko2WDH66Ui3KeYUkbB6ffvacJ4a7rdGeE7acDS/8Pfdxjh0F
Pz+nzPZeOvF6SOs4N2s2HfdN9FPQ+kL8/z4uvedA/F3p+nP187dyIf2cTFJd
ogjQZ1uH7ijmQduApsS4EiYev/TD/gu8dnCP07JyKV0MX7fZLYJu0w2uLItw
9axi4ojnW5UpEye+iI+ZWGyuX1xEg9+fJbkkmBLn+3g2vbqHBetSxa2DmXQc
+tiYfI8k5qXUNy+3V9HwwydwtSG2AvzmGT6xboiGL8+7rf2Opwhzj9n+vto4
jV3me4//fMyBX9UMZnyXp0C9Js/aYg0uVIyauEhJosBl6x3Ubz3jwQ/B8INt
LgNfvnKyJVJbCaZ9z7mZSZzfnM2vTySs7QQxY/kB20+K4YgvVDUSfTS7ysey
tp1ZGGdCg5XUCramMx9rPFc4LXuYBeXTwevi50x8bkBifpw1GwYtzZhvHErF
8wpNDh2pZMMkZtEXy2V03HFvoPbZfxx46dkk58dRKqwe3dop3cWD798OPntx
gomfjYt4pTeiBFdtmJ+2+MQEyTMq7DukdiinjeQZx3NCZ68K7yB5xodiEQkY
cX1APKPxqXuR9tQhkmekF272rVMZxxDPeD0kavX9VgqOeMZbMuCLSTUDRzyj
5MbpmAfeYjjiGR9khgeNTv/X45l8ab8nbjuF7PF4HqIcSZoYI3s86TG3r0YY
D5M9Hqt0523LlgxiiHesGfjQb/W2F0O8Y3B4cKNXTyfZ39m4ZamZma0QQ7zj
X8nKZ/RjfLI3nerhdHPLWT7ZmzY6ynwgetRO9qar7qfnKdT2Y4h31J6d+ZrD
pOHpW5Qi5c+zoO+XLyN+4gz8QVBs0NvrkrD2zuV/D6OkcQrvWsHeZzLwi65O
xKnV9SDz45UAw8eysKT6W6bDb1l4ZiDPd66tHCwq+OVdKzcDLvtX0Xi/Ug5m
1RrDnTcocLPD2afye+VhxPzc7OWGccAjwBafXScPC1yHJtMzhrHB2aXLZzmx
YaO6/+vZjVSyJ1QtFYlTifkI9YS+LurPi7Og4agn5K72PnLBXCre4bmUIXFA
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
McXF4tYpMRzx5a6ZSdFO0XxsNevI5/mGNBh35+KdA3Z8bOfD8tObnVnQoPiB
4kcbYh744XPTbidxffpK2RxxiErcq0+6+JSxITX6nM7gUjqu1rLb/c5fDjQy
L23JPESFyvuKQJWAB1U9Ze+p32XighuzJCv6leDTOS/rPu0aB89ebzP7+K8T
0ApeuEgS8w3i2QOapBvfOfAxZZuG94O3WPBcTOCFH2vp+Cdn81tsATGfDp/e
27yIjpscXhelMMqBzJOyQW99qPCa9OM3JlQlKKX2OnV1DDG/zcx+cCqvHaxI
uFQWvlUMV7mYUhbURYXZVQkFxBOGbZ3jbPXqKRue3uj5U0+cjmetUyhyf8+B
9eZ5BzreUmDlltrzT3N5MCvueHDhdSaOePmvctfPtRDzVm5Yp+m5ahb8WMq+
MzOIhov58I3/hBLX867wYbsXNLwQ7xiUmcWFG6ZndBZMUCDt8L+5Hfd4kItf
+ZnKYODxCzWPSlV2gDfUXoMoYp5YGbppbKUuDe72kvFim/CxZf/+ncqwZMHg
vnXWCv/E8bDCBqfThcTjfXJ5r/0SOp40xP2H1XDgg2Ka7iUrKny6oKTNpZEH
dTapfcO/MHED7W9zGIe7wKZLWec4G8RwxOsfrDw1lmXEx7q9DtI+prPgEjeF
k0GHiPl2uDL/+QhxfbAoCZ+rTMdRLy2jXGvZq1EKHnrn9lc5FheGe4ReZZhS
YWdCn5ixaQfIEtlm+XuI4Vohowd3z6DBF/GBVW0r+Fi7z4M9Ue/Z8BdxOVlK
zMdvlO5UKxZyYDVYOm6pQIW57ypWXv7Bg/H3C+HCGiaudH6/wb1iKnzr6Kn7
WJOP3Xjid2fLKAtuZ5sdCdlGx9trf5d9e8mD281jBaf6Gbj5G/uqCvtOkJaS
RPsTKIZ7O2Fna46x4Ko4OXEfeSauNXeWu2stcd6hJh2bRcxX8RUxPYf5HPgv
P/Rlky8V3ogsiDHu48Hh8dY5nruYOC9JZBk3oQRNVYeVNtyZJH2EI37G9ze/
aCN9BOzrrpPSfh2kj6Bu5eDxb7qX9BGMVys6v+8ZJH2EfxpGxRbi4xjyEQRS
nT/9qyg48hFq88vyXhYwcOQj1ICuUY6vGI58hIgpwcIfMgyyr5b18P4SnX0U
sq923XX+ul3E/Qj11X4k5Hob7Rgm+2oypt2X3VcOYshXiPu5zoCR3YshXyG2
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
P4ctxx8=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{29, 28, 558, 437, 345, 283, 245, 224, 578, 457, 
                365, 303, 263, 601, 480, 388, 325, 202, 559, 438, 346, 634, 
                513, 284, 610, 489, 669, 397, 647, 526, 683}}], 
               
               PolygonBox[{{27, 26, 340, 278, 239, 218, 573, 452, 360, 298, 
                259, 197, 554, 433, 341, 279, 240, 589, 468, 376, 314, 219, 
                574, 453, 361, 299, 619, 498, 673, 406, 652, 531, 260, 600, 
                479, 387, 324, 198, 555, 434, 342, 280, 241, 220, 199, 556, 
                435, 343, 281, 242, 221, 575, 454, 362, 300, 2585, 2584}}], 
               PolygonBox[CompressedData["
1:eJwV0DkvhFEYhuFBoqAwiITSMv4BQ4MSiW2oiSGoKJAoLAkaCgkSCQ2FRGw/
weAXIJYENbGraKzXKe7cz/O+3znfzFecHEoMpkcikTRMowiFOECJxbZFE3Lw
YFZvdiIPowLnZpVmB3I3StGnv/Iivu0T+rU8gRqM6F+8jpR9qb4jNyOKTv2O
5/Bo36CfhnOYkjNRKYcf/sGrWJALcOH5OKfMVjjJ45yBLZTp/fwW3s9L4T0c
xT5+nG/nm3AvT/IMZ4VvgVp9lL95kzd4iYtw6GwZ75q1YEz+41x0yfc8jyfP
Nepn4S7EMaR/8hou7avCfXIPYhjQ33kZv/Yd+m34HpiVs1EnH9nF5D25FXl4
NrtCtfmR3oty/Jkdozz8d70N+Xgx+webDkTX
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{29, 31, 203, 2587}}], 
               
               PolygonBox[{{27, 28, 201, 262, 302, 364, 456, 577, 223, 244, 
                282, 344, 436, 557, 200, 261, 301, 363, 455, 576, 222, 2583, 
                2586, 377, 469, 590, 243}}], 
               PolygonBox[CompressedData["
1:eJwt0T0vQ2EYxvHTpomFQYNEt05tv4G3BSNTpaxIvA5elopBUhIdWolBRaId
GCwG9RWoT8CABCtLhamWJv2dxPDP/7ru++R5nuQkFzezG9EgCCJYxSASuDXI
WDzIk3KPXMSBXOMPnuMox7mMU/kX63KGV9DAmP7qnJr8h219mHfwhGn92/5I
/sKC3h8+iHcxI1e4zmluWNU5gRNcml9xm/M8wdfcjUPs61V+51mO8A33ooSK
fsE/vMZpjvEeluUzvudRfnH3AB+jatbCljzEXVxAXn7ElNz0fVn+xLzex9nw
fqTCc+3H5QLO9TfO/f+QFJZwhxGzZ+MOGeU0Eg==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0TlPVWEUheELiQmoSGOiiV7g+guYrJBKRUEThhIUDGrHJBQkakgwYWgU
KAg0UsigBTXzL2AUC6FlTtBOIyiJ4dnFm3fttc93bu75Uo2tNS3piUQiDdOY
QQ6u4wy3LJ5hCbc9+E13hCvmx/iClH4pzvAQxnTj/I87uJQz+R3eytuojr0z
g/JPvDSnuAGLKDZv2o/Kv9FsLuZ2rOOB+dC+X97HU3MW/0en/Ig/I09e9Nw1
HsRH3Sf+G+/iO/EfOAPdeGMe5S2uiufiu3A2+jGgH+Mf/ILzeIrT4yzqzcO8
wEX81fmr/B4jul9okov4AnfhlbyGMvnA833yHp6YL3NF/AZy4732G9jHJV05
JpFjN687RW58D8yjUL+uK5TbsIr7uj3dRfkhJpDUzelO4v7jtzGHAv2arkBu
xQru6XZ1vfIu6syZcSdx77hpnrUvkV/jOyp1f3Qf5GM8NyfjLGaRb161z5db
sIy7uh1dj7yD2rin+E5xh7hhPge7vlgg
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl0udXzgEABeBfCBHZPr8SIiuVkCIhm9cebW1KohBSIbNktCMjiYb5//V0
fHjO/XrPuTdUWB2uigiCYIyp7OEueWSxkRDT6OUe+exlEyuYTh/3KWAfm4ll
Bv00Ush+ElnJMM+4SpidRDLAA4rIZgtxfOM5VZwknZm8p4nLHCCJVcxiNlF8
oJliDpLMauYwSAslHCKFNczlIw8p5TBbiSeaecwnhgUsZBGL+cQjyjhCKmsZ
4QXVnCKDJXzmMeUcZRvr+M5LrnGaXSzlC61UcIztjNPBDc6TwA/aqOEMu/nF
W+q5xDKGeEIlx9nBBK+5yQXWM0o71znLP7ppIJPfvOMWOSznK0+5wgn+0sUd
0vjJG+q4yIbg/x9fUcs59vCHTm6TO9XbeJPXa0Hc
               "]]}, Annotation[#, "Charting`Private`Tag$1312526#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1He4j3UYx/EHFQ4y4xwyjr3+sPeo7BWOiotSCdFCA6VkZJRKdlNmuyjX
ZRUh47Kzs+qyZVMhRK/7j7f3fX/u53m+5/d9vo/0Hv0ynsuUJMl6/yzkIpmT
ZJa6ObKhq/4Qj8Ih8yb6Deq4qQo2yarIFqm7oSie0J/id3HZvL1+t/oV1Mci
2d2y2eoWyB736g/zaBw2b6rfqO6HqtgsqypbrH4YxXBFthhF5XP0LZGCI7Jm
sk3q/qiGLbJqsiXqR1AcV2VLUEw+V98KOXBUthVLUdzsM1lr5Iy19Ud4DI6Z
N9dvVg/AUPXtqK5+hv/iaXhHXQC/ur46L5VN4e48hDPHGiih78mneTqP57Gc
G9/gX/d34D3y93kID+ds+AIN9M/HdTyLP+H3uBB+dG8J/lzWBoPUNzlX7If6
aKyF465rod8Sz0INPKv/O9bENvMa8Tz1o0hHL/2ZWAvXzDvqf1O/ihHq7Gio
foGv8WyezhM4FT+5Jz1+g6wt7sQJ2XbUjLn+MZTEdVkqlqGk2ZeydsiNk7KW
sq2xFmpih6yWbJn6cZRCb/3ZWB83zDP0e9WvoRFe1F/nT7HcvJT+K/X9yIPu
+mP8Jv40bxXvNu7D6+o7UCu+Ef6HP4hvQX0Xdrq+Ni+XTeUesU+cJd4NSuuf
5HOxPk+MdTgPvsV/7u/E++K5PJRHckrsBRrrX+IbPIdn8EROw8/uLc1fy9pj
sPoW5413qT7Ob+GU61rrt8WzUDu+Q/1l/hC7zOvE8+JbRxn00Z/nSbhp/oB+
f+wH3lDnwD3qFWZl4jyrOyAfTst2o658RXwDKItbspUoG79d3xH5cUaWhj2o
Z7YyziDKIcGDsgPxt/IwvherjMrpv1NnoECcKf0JHoez5m3029UDMUydFXXU
/fkKf4Tx6oJxvl1fn1fFN8694/zwbSiv7ssXeAZPjn3lvLE+Mukf4oPxTB7O
ozhnnDPcF39DvGueyzNjX7kw5uEXa5ePWj6ZO/HLnMQZi3POJ/ltnBO31e+I
bx51MUB/lT/GXvMG8cw4d6iAp/QXeUrsjTpf/B+l7sy/x308gkdzLjRRr/ac
Cur56sLx/rkgzqv3oaHZ6jgnqIgsWCOvKP8+3hkK4YKsXXwncT5RD/tljWRr
Yl9RCU/rL/FMnhq/lfPH/qu78B/xXaAp1rq/kuyH2Hek4qLsANahstmC+H1I
wyXZQTSWr439QOWYpSTJ/xgl5nY=
               "]], 
              
              LineBox[{2583, 222, 576, 455, 363, 301, 261, 200, 557, 436, 344,
                282, 244, 223, 577, 456, 364, 302, 262, 201, 28, 558, 437, 
               345, 283, 245, 224, 578, 457, 365, 303, 263, 601, 480, 388, 
               325, 202, 559, 438, 346, 634, 513, 284, 610, 489, 669, 397, 
               647, 526, 683, 29, 2587}], 
              LineBox[{2584, 27, 243, 590, 469, 377, 2586}]}, 
             Annotation[#, "Charting`Private`Tag$1312526#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HWYFmUUhvHZoJbuWmJREAkRRURRBEGwRVDsAEUwCANssRAsFAtssUgR
pBtJ6e7u7m5/54977+c875n99puZa7NadWjWPiVJkj5+DElNkp1pSdIDNyIb
1uvypyfJCPlpVMMs3Tn+DfehFI7oytibKr+MazFUt4s/Q0NkR0U7c7gLNjgv
YB4pP4PquMy8lLtjtvPz/DvuR21na7k0qsgLuQm/z/V4K9/JR11XlqeZG/Er
8ffwRr6d6/IVvJJv4U+4Pm/nu/gf1++WP4/7YG7EtXg150AleS6/jevkzbzR
NQXlUfKzqCOvj++DGvIy/hBz7F3gP/AAMlHV+SLuimPOy5mny6/G78cw3R7u
iZuQE5t0heyNlp+Lz8BcXaL7U34QZXBcNxx75S/QGLmwWVfY7hi5HS7HPF2K
rq/8EMrihG4E9slfxv1GBrbo5mMk9pu/ws3Ija26BRiFA+av4z4jD7bpFiLV
5/QzP4xyOKkbjYPyN7gVebFdtwhp9vubH0F5nNKNwSG5F25DPuzQLUa6/QHm
R5GF07qxOCz3jvcA+bFTtwTjMB4TMBFHnH2LO1AAu3RLkc3vHWh+DBVwRjcJ
R+Xv4v1DQezWFbE7Vm6Pmlimy64bJD+Oi3BWV143Q34N12Oy7hh/H+8jCuES
O/P4HexxXtQ8Tu4Q73I8P/Ny/gjLnecw/yW3xNXyOr4Y1eTF8az4A76Bt/E5
12TJM+Md49e5Lm+Ke8D1+EpeFc+GP+UGvIOb8r+uPy7/gIbmpnwVr4lnw4W5
Ms+Pd5Dfje/KW3iva4vJ4+WOuEbeEJ8X901ewR9jhb2c5sFyK1REdfMS7obz
ziuY/5PfiO+GKboT/CPuRhHs0xW3N0F+HrWwUpdL97f8BCrhgm4qTso/oRmK
Yr+uhN2J8gvxPbFKl6EbIj8ZzwsJpulP8c9ojmI4oCtpd5L8ImpjtS63bqjc
Ou4VUjBdf5p/wT0ojoO6UnYnyy/F88UaXZ743yU/hUuRGu+Ybha/ifqYYe8M
98G9KBG7dhbwezjkvHQ8T7kT6mCtLq9umNwGVZAW75NuNr8V7wJm2jvLv6IF
SuKwLtPeFLlzPFus0+XTDZfboirSkZmRJP8DOSzWFg==
               "]]}, Annotation[#, "Charting`Private`Tag$1312526#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1FdzlVUYQOEvkAJeqneUNNID6E9QJEWKEEpAeiw3QAooPZXeBGcEFQyK
hDSKSrFdIIIKMwxSlCRUHWUcR+xKSUICz75YvO9ae5+TzOHkSy4pKyqNiaKo
3j/jY6Pon/goGoDyuCi6zRtRiQEJUTRS36En4pxWhH+1gajQ7vAmVGGg+3n6
Tj0J57UJ+E8bhAXaXd6MagxyP19/R0/GBW0i/tcGY6F2j7egBoPdL9Dr9RRc
1CbhtpaIV7RO3opaTMYdPQmvOuvi+1CHRO9VqO/SU/FduK/VaJf4NBRrd3ky
FvFuPtedbfw3vp8/xefy4zwP6/ghHo+VzpP4s/Z3ne2xn7UPsS+zN4SfZXby
z8yf+e/m915XbNbyc2ab8wNmO//FnM7fMI/xq+aj5pfmLfNvc4rX37On4BRf
7H69eYrfdzbPvt1+Sz9sv24/oD9tnxfeS8/Hen6YJ2CV82Q+yv6eszRc0qZo
dVo7n4GpWidPxRLeww9iNVLcHa3v1tPRpj2PrvCZYKnWyz/AGqS6P0Z/X89A
uzYN3VoalmkP+IcY4e587YRWgLXaEG2stodnokObjvtaOpZrET7S1iHN/ef0
Bi0Ll7UZ6NEysEKLwSFtPWZiFnqdZaLSWZ/wmWobkO79xul7tWxc0WbjgZaF
Kq0vjmgbkeH+eL1Ry8FVbQ4iPVuv1mJxVHtGK9VO8kJs0jK1Iq2J52I538u7
7NecT+UreQefiW38C/4YSpzH8Bx7jbNd9tP2OPt8+5vhuxl+V/sN+8fuj7SX
2c+aXzlrNi/ym+E7zzeYR/hls595zPzV/Mvc7PVZ5gR+xmx2v8H8lv9kDuUr
zEbeZnbzz82b/Hr43thXhffWD9o77LPs2+3H7Y/jBff68Fx7rbN4lPK3+B/2
T5zn8XL+NR+Fjfwo74/XnGfzifYWZ8NQyZvC35H9Rvg+8tX8Cp+NF7W+4ffX
6ngCyvjb/E/7p87zeQX/ho/GFi1Hm6S18uGoCp8J77H/EL63fE34e+dz8JIW
qw0LzxneD+V8R/h8w/PEeQFfEJ4BfAy2arnaZG0ffwLVvIX32n8M33e+ll/j
JXhZi9OGh2cA748KvjM8a8L/ifNCvpCf5mPxujZUK9b28ydRw1vDs/SRKHoI
yxzfDQ==
               "]], 
              
              LineBox[{2594, 1330, 1921, 1707, 1535, 1249, 1886, 1672, 1501, 
               1967, 1753, 1379, 1943, 1729, 1557, 1986, 1772, 1127, 1798, 
               1584, 1992, 1413, 1951, 1737, 2015, 1290, 1906, 1692, 2003, 
               1521, 1973, 1759, 2026, 1211, 1866, 1652, 1998, 1481, 1961, 
               1747, 2021, 1359, 1932, 1718, 2010, 1546, 1983, 1769, 1170, 
               1838, 1624, 1453, 1331, 1922, 1708, 1536, 1250, 1887, 1673, 
               1502, 1380, 1128, 1799, 1585, 1414, 1291, 2589}], 
              
              LineBox[{2591, 1292, 1212, 1171, 1839, 1625, 1454, 1332, 1251, 
               1129, 1800, 1586, 1415, 1293, 1213, 1867, 1653, 1482, 1360, 
               1172, 1840, 1626, 1455, 1333, 1252, 1888, 1674, 1503, 1381, 
               1130, 1801, 1587, 1416, 2592}], 
              LineBox[CompressedData["
1:eJwV1OdXl3UcxvHb1DzHwXAAYnlOf0Kp7KXZsyxFLSvLREVAhYYpauNB65Qi
K/dCXOc0FEwF90IqwFU2TllHLXGF2+phr++Di+u63p/vl/u+f/d4rKAsv7Rb
FEXb/BnaO4pm9Yii3r2iaPjDUfRJzyiKoUPYMppNfcxGmH2Kx9JhbDk9jr+E
N2ApdBmbQ33xFHwxFkdHsBX0BD4Zb8RSqRMrpX54Kr4Ei6ej2NPYPKxdH0cr
sWHYy9hOPY3e17/Su9EV86n6YvmCWWHYox/TE6jMPEZPkyvM+tOb+jr9rnzM
fIw+X+/QP5fPyflyhdwk96FV1g3XX5G/Ntsin5bT5Q/k7fLP/CG+n1/mXfyq
fQV8iX6GX7S+gf8azp3P1Ffx4/p5nsiP8y5+h79mfyxP17/jS62v423hevkA
fS5fr9+T98gXwv+w7xm5XD6Jj6elerPel1abj9CnyLvMMuga9jrF4Rl4JTaQ
WrA1lIK/iu/GMuk6Ng2rwC7pRfQGFo9lYlX6IHpL36Dfl5vCbyDf4CesfZYv
0E+ZTaBKfa/ej9aap+pT5T1mWXQDmx5+B+xPvTjcT6w/loVV6wnUiq2jNLwA
b8Ky6W9sLg3As/EaLJG+wcZiC7HT+kRaj6Vj07BmPYe6sBlYJfaXXhKuDxuI
5WC1ehLN0+v0B/K35uP0ReEZ0J+jKn2fHkMbzDP06fJes63yGTlX/lDeIXen
A3Inv2l9oVwlnw3PmnWN/Df9Kp+lr+Yt+u88ibfwm+GZD++X/YN4rt7GP7N+
I2/XL/LB+ny+UT/H/9Gb+aXwDNqbL78djo1/If8oPy9Xy/vlWKqzLlOfIe8z
y6OP9Aa9B90yn6lXy51ms8MxsQQsD1umJ1MbNh57B/tenxTOFcvCCsO7po+k
21g5JeIj8eXYEGrH6ik7vGvhN8RG0R2sCKsJ76E+hxZgSdgobIX+CJXr9fq/
cof5BP1d/Qf9S/kn+QW5Rj4gx9ER+TrfZH2OXBS+Lfygddv42fDs8if1j3mj
/gvvyQ/yK+Ee87v2F/PacO3hW2L9Tn5ev8ZL9TXhPdL/CPeNn+C3+EJ7B4dj
yCutq5c75EfDdcqb5P/kk9ZN1N8L91p/kWrDuerxtNk8Vy+WD5mNpnvYIkrG
R4dvIzaUTmFbKA8vwQ9jT9F9rCQ8Z+G89TJaq7fqydQq3w7fr/BcWfs/Oczr
mg==
               "]]}, Annotation[#, "Charting`Private`Tag$1312526#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GdslWUYgOGvrJYZ9l4lMWEPkS0/2MgygiCzyEZIqDIECrL3SEA2Kls2
8oeyp5CwZS9Fww5DlFEohTKu98fV537e7xTO6fnOie+Z2HZQTBRF0/1IiY2i
UVmjKD0uin6iA+XIzQvXXpLKaI956+xnvqI8eXjl2g+uvdO/0JEK5CXNtTGu
vdfL6ERF8jHfeQG26UQakmyvySU9h9d+f6w9Yrm9Mwd1A27oSqzTZTmq75h9
mKDPml/wROdngS5Isr5h9uBbfdxsQYZsUfTA/kwPIbe9kX27rhVeA5ft981v
yOH6XPsV3ZFYe6o9VY8gn/2N5z9Ox/CaFa5fN7vRRR8yG3JTPzYHUVmvN8tx
TE/knG7LU12AhboQ2/V3NGaHvTZX9I+k+7/Hh9fFSntXqlCQt65NcJ6RVfZu
VKUQi5wVZoceTBPeefxEZ5lYbU+gGhvs5TmuJ1GYxfYi7NRDOKFb8lA3Zaeu
w1U9j/f+7Un2zKyxd+d33Yhb+mM26gqc0HfNvkzW5812PNNFWKKLskvfNHsy
VJ80W4XX6z15ZH8ezsljb2bfpeuG+8x+zf5ADyCnfb79qu5EnP1VuOf1SPLb
I/tknYU3/Gr/20zga33YbMxt/Z+ZSHW9yazIST2FC/pLnuuiLNXF2K2H0ZyY
8Nhwr7FW9+ATNtsrcUpP5aJuT4ouFj7Xujh79C2zF9/rU2br8L56Hf/aU/Qw
PtO7zXrh3nXtT/tDPZBc9gX2a7ozWe1p4bOuk8Jn2p4hPI/w9yKddfZ/zO7h
PdFHzCbc0f+HzyE19JZw/3Na3zP7MU1fMjvwQhcP30G6BHv1cE7rNjzWLdij
P+Wv8FkhI9PCc2W97kVNSoTvLGcl2adH0JJMTHeWjQ26N7UoSWZmOM/ORt2H
2pRimbNS7NcjaUUWZjrLwSbdlzqUZrmz0hzQSbQmllnh3mOz7kddfrNX4Y/w
3IhnhT2eg3oUbYhjdnif2KL7U4+t9qqcCc+fMqy0l+GQHs3n7LXX53r4LuAj
7+cH9wvORw==
               "]], 
              LineBox[CompressedData["
1:eJwV0rlP03Ecx+EvAwTKIQL/AKGAK4ebXAvHJHKEAQdDGBA5ggNOIs5ys6Bu
IIycrkKCgk6AShw0wEAUEojAAINE4/Mbnnxe7zZpm7a5bb0NPQkhhNfEYyHU
J4eQwkhKCDeY1w+5w6JdxI5+QR7Tdh7r+in3eGeXs6eniDFqZ7KgO9nQ1fzU
ZSzpYj7rIeLM2HHe6wG29F1+6wZWdQX7+sTt4qX+7rbyR6cypm+yqA/cBzzS
m24Nv/S52xd9br3slvCPL/aR20Gq72fY/qZbSLKv7Cv9hCw7336j8/nLB/vQ
bSfm+Wf2tq4n0T6zL3U/jXrNreRAn7rdvNI/3Ptc6zTGo/djSXfxUddypCtY
0aV8jX5LCpi1C9jQgzSRzoTHslnW3XzSdRzrC/dx9F/wWSvtt/o2u9FvSiFz
diGb+jnNZDDpsRxWdA9V3Ir+N17rP68XVII=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$1312526#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdzTms/FYdBeArKBioXFBMgYRBKBohBCZsA4Tksg+7+bMNS8AEEoY1Zs1A
CFz2CZXLKV2+DpdT3nJKl690OaJy+UqEiIT83ebq+x0dnTc98/yjZ18VQnj6
1SH89//fm596zTv+9fLrHj0eXznEsHir+MYX/v3ia1+qXrkX5K/Ha/wGXOI3
47fgx/AGvxW/Db8dV/id+HH8Lvxu/B78Xvw+vMXvxx/AH8RP4A/hJ/FTOC6d
cPgwOQ4fIcfho+Q4fIwch4+T4/AJchw+SY7DjhyHT5Hj8GlyHD5DjsNnyXH4
HDkOnyfH4QvkONRLR5xwxuGL9HHCGYdH9HHCGYcv0ccJZxy+TB8nnHH4Cn2c
cMbhq/RxwhmHr9HHCWcc9vRxwhmHr9PHCWccvkEfJ5xx+CZ9nHDG4Vv0ccIZ
h6fp44QzDt+mjxPOOHyHPk4449AsXeKIG5xwjzOecPgu+zjiBifc44wnHJ5h
H0fc4IR7nPGEw/fYxxE3OOEeZzzh8H32ccQNTrjHGU84PMs+jrjBCfc44wmH
59jHETc44R5nPOHwA/ZxxA1OuMcZTzgc2McRNzjhHmc84fBD9nHEDU64xxlP
OPyIfRxxgxPuccYTDj9mH0fc4IR7nPGEw0/YxxE3OOEeZzzh8FP2ccQNTrjH
GU84/Ix9HHGDE+5xxhMOz7OPI25wwj3OeMKhXbrAJa5wxDVucIsT7nCPB5zx
iCc84/DzpQtc4gpHXOMGtzjhDvd4wBmPeMIzDr9YusAlrnDENW5wixPucI8H
nPGIJzzj8MulC1ziCkdc4wa3OOEO93jAGY94wjMOv1q6wCWucMQ1bnCLE+5w
jwec8YgnPOPw66ULXOIKR1zjBrc44Q73eMAZj3jCMw6/WbrAJa5wxDVucIsT
7nCPB5zxiCc84/DC0gUucYUjrnGDW5xwh3s84IxHPOEZh+PSBS5xhSOucYNb
nHCHezzgjEc84RmH3y5d4BJXOOIaN7jFCXe4xwPOeMQTnnH43dIFLnGFI65x
g1uccId7POCMRzzhGYcXly5wiSsccY0b3OKEO9zjAWc84gnPOPx+6QKXuMIR
17jBLU64wz0ecMYjnvCMw0tLF7jEFY64xg1uccId7vGAMx7xhGcc/rB0gUtc
4Yhr3OAWJ9zhHg844xFPeMbhj0sXuMQVjrjGDW5xwh3u8YAzHvGEZxzS0itc
4DUu8QZXeIsj3uEa73GDD7jFR5zwCXf4jHt8hwd8wRlf8Yjv8YRveMYPOPxp
6RUu8BqXeIMrvMUR73CN97jBB9ziI074hDt8xj2+wwO+4IyveMT3eMI3POMH
HP689AoXeI1LvMEV3uKId7jGe9zgA27xESd8wh0+4x7f4QFfcMZXPOJ7POEb
nvEDDn9ZeoULvMYl3uAKb3HEO1zjPW7wAbf4iBM+4Q6fcY/v8IAvOOMrHvE9
nvANz/gBh78uvcIFXuMSb3CFtzjiHa7xHjf4gFt8xAmfcIfPuMd3eMAXnPEV
j/geT/iGZ/yAw9+WXuECr3GJN7jCWxzxDtd4jxt8wC0+4oRPuMNn3OM7POAL
zviKR3yPJ3zDM37A4e9Lr3CB17jEG1zhLY54h2u8xw0+4BYfccIn3OEz7vEd
HvAFZ3zFI77HE77hGT/g8I+lV7jAa1ziDa7wFke8wzXe4wYfcIuPOOET7vAZ
9/gOD/iCM77iEd/jCd/wjB9wOC29wgVe4xJvcIW3OOIdrvEeN/iAW3zECZ9w
h8+4x3d4wBec8RWP+B5P+IZn/IDDy0uvcIHXuMQbXOEtjniHa7zHDT7gFh9x
wifc4TPu8R0e8AVnfMUjvscTvuEZP+Dwz6VXuMBrXOINrvAWR7zDNd7jBh9w
i4844RPu8Bn3+A4P+IIzvuIR3+MJ3/7v/wCiDd0b
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 861}, {0, 18.320473294515093`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.864753232570842*^9, 3.8647532455516872`*^9}, {
   3.86475337345875*^9, 3.864753384419242*^9}, {3.86475684110791*^9, 
   3.864756868900015*^9}, 3.8647569176933985`*^9, 3.8647570947547293`*^9, 
   3.8649291726519523`*^9, 3.8649292585929956`*^9, 3.8649296763181105`*^9, 
   3.864929719332118*^9, {3.864929758160487*^9, 3.864929768842012*^9}},
 CellLabel->
  "Out[1614]=",ExpressionUUID->"aab45b66-a315-4f4c-a9e1-22ed33929b4e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "17.518141995504045`"}], ",", 
   RowBox[{"-", "84.51498172383792`"}], ",", 
   RowBox[{"-", "15.835254389224891`"}], ",", 
   RowBox[{"-", "15.835254389224891`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864753232570842*^9, 3.8647532455516872`*^9}, {
   3.86475337345875*^9, 3.864753384419242*^9}, {3.86475684110791*^9, 
   3.864756868900015*^9}, 3.8647569176933985`*^9, 3.8647570947547293`*^9, 
   3.8649291726519523`*^9, 3.8649292585929956`*^9, 3.8649296763181105`*^9, 
   3.864929719332118*^9, {3.864929758160487*^9, 3.8649297689149885`*^9}},
 CellLabel->
  "Out[1615]=",ExpressionUUID->"574f5a73-a26a-431d-8c69-66f8b14fa91a"]
}, Open  ]],

Cell["Individual Test Benches", "Text",
 CellChangeTimes->{{3.8637030744782195`*^9, 3.863703080794203*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"796555a1-e709-40c9-8e76-66ea78266730"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "50"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "7.5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"uMin", " ", "=", " ", 
   RowBox[{"-", "50"}]}], ";", 
  RowBox[{"uMax", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.638173046847784`"}], ",", "1.5297866686317683`", ",", 
      RowBox[{"-", "0.7064454234546389`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitGuess", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess", ",", "uMin", ",", "uMax"}], "]"}]}], 
    ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  StyleBox[
   RowBox[{
    RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["}",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8637030916107454`*^9, 3.8637031163048553`*^9}, {
   3.863703146634164*^9, 3.8637031467241335`*^9}, {3.8637032271314416`*^9, 
   3.8637032981877384`*^9}, {3.863703344313999*^9, 3.8637033675275803`*^9}, {
   3.8637034246933155`*^9, 3.863703488801831*^9}, {3.8637035225560446`*^9, 
   3.8637036066221848`*^9}, 3.8637039678437643`*^9, {3.863704003356416*^9, 
   3.863704015206629*^9}, 3.8637041910564413`*^9, {3.86387938554615*^9, 
   3.8638794077180634`*^9}, {3.8638794473054113`*^9, 3.863879456186574*^9}, 
   3.863879487594535*^9, {3.8638795768290167`*^9, 3.863879601771044*^9}, {
   3.8638860815410876`*^9, 3.863886103615032*^9}, {3.8638861483497353`*^9, 
   3.863886172621978*^9}, {3.8638914447629833`*^9, 3.8638914562922993`*^9}, 
   3.863891796977415*^9, {3.8638918475872407`*^9, 3.86389184764522*^9}, {
   3.8638937946529503`*^9, 3.8638938135878987`*^9}, {3.863893847458075*^9, 
   3.8638938597471466`*^9}, 3.8638940187133408`*^9, 3.863894098689779*^9, {
   3.8638941539631133`*^9, 3.8638941576359406`*^9}, {3.863894255027814*^9, 
   3.863894255155772*^9}, 3.8638944064184275`*^9, {3.864132884995618*^9, 
   3.8641329073813734`*^9}, 3.8641331504876966`*^9, 3.864133195282199*^9, {
   3.86413327929601*^9, 3.864133287553337*^9}, {3.864133332576766*^9, 
   3.864133353182098*^9}, {3.8641334403238955`*^9, 3.8641334566426144`*^9}, 
   3.864133562247438*^9, 3.8641336317199535`*^9, 3.8641336640694847`*^9, 
   3.8641338838003726`*^9, 3.864133916131909*^9, 3.8641339918014193`*^9, {
   3.8641352038731537`*^9, 3.8641352725329356`*^9}, {3.8641417727182617`*^9, 
   3.8641418023916583`*^9}, 3.8641418403363776`*^9, {3.864143075053784*^9, 
   3.8641430827452946`*^9}, 3.8643991519070525`*^9, {3.864753462527244*^9, 
   3.8647534836674776`*^9}, 3.8647535246163716`*^9, {3.8647567977028036`*^9, 
   3.8647567993372808`*^9}, {3.864756890714034*^9, 3.8647569005039015`*^9}, {
   3.8647569351738043`*^9, 3.864756950301964*^9}, {3.864756993772049*^9, 
   3.8647570201716013`*^9}, {3.86475707781815*^9, 3.864757083908201*^9}, {
   3.864757189368449*^9, 3.8647572411128883`*^9}, {3.864757277725168*^9, 
   3.8647572778321342`*^9}, {3.8647573437950234`*^9, 3.864757343850005*^9}, {
   3.864757450294937*^9, 3.864757479598558*^9}, {3.8649293086877017`*^9, 
   3.8649293251113577`*^9}, 3.864929692433869*^9, {3.86492973430225*^9, 
   3.8649297480877647`*^9}, 3.864929783768159*^9, {3.864929815935695*^9, 
   3.8649298600933304`*^9}, {3.864929890339491*^9, 3.864929902304597*^9}, {
   3.864929960837558*^9, 3.8649299610624833`*^9}, {3.8649299927671704`*^9, 
   3.8649301448367023`*^9}, {3.8649301870479717`*^9, 3.864930204137411*^9}, {
   3.864930250361376*^9, 3.8649302504193554`*^9}, {3.864930295488696*^9, 
   3.864930447927107*^9}, {3.8649304919997697`*^9, 3.86493050100584*^9}, {
   3.8649305503807817`*^9, 3.864930612641525*^9}, {3.864930655734507*^9, 
   3.864930712464053*^9}},
 CellLabel->
  "In[2187]:=",ExpressionUUID->"64c954a2-a20e-4e79-ac9e-42d8f28dce15"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJzUfGk8lNH7t91YYzAje6IFSUooOSdLpZBKElJKJXuINpFE1shSqUQL2QvZ
OZLsZN+zzkyW7Ps2PfN7Pr97evs8/3f/3tT5TMZ9n3Odc67ru1xbLjudvsrE
wMDwhYuB4T9/Z5msL0ykBWh6laXeZLy7DJbqHxf8CakEl5W/vDoiuQiyBJt4
/II6gVPK4MGqyVngLL+vsfjgEKAOBO46Fz8JCEeXIqsFRkD08Ry9GkgBc8VE
23e2kyDmbTK3weMO8PiihPBzuVmwf29K6WPlOJAacvGR9sUFcNxs9nPYqzYk
esfCftl3GczHBSQ0xZNRYlJPvZ/bGohUvFrnHj6JGvwDcu+9pwIBvgdT7jfn
UGBbL7dsAwP8fOCdl0TOImr80XyfT5sJdolySWlYriAS94BSRgcz9Aw6YL/y
YQ35uyvGHzjFCuPZORruKm6gpf2RZ++MscF80/RsPgUq4mrvOKZxHwc7W80R
gwMVpT+3WB6f5YD6/A+/CjNSkcTn5XHDAC4Yyz2jdL59HYmPt72KZeGB6FxK
21mxNTR2v+Zp/Fte+ObxhJh/9DJKcze0itzMB7dlrETw3VtAu2CnaUMbH5RZ
lBNnZppFAl8dZgfj+eGZikDZccI4Oly4dczuEh6qpv9ollYbRN8+H2NUExWA
in8K302vVqLEU3cKfpEFoO1E8TJXYz1oe1TTtPJOEOZQg24wbyYBW6vtQVNO
QrBLJX9u0XQanFKcu7JdnQB7bGzDcgsXgFdwf0zbPAGmRGs5EIVXgWB0h+uF
UiL0cUt4NHGYCqaVppPNHwjD4QfawryDDFCi0IPxtdpm6OZtcuijBxPMmuZc
/cokAh2qRadyBFng09wSoyNIBKpoBIa23WOFzTsf6H0OEoUlXrxZ5G42aLHL
Mi7suBhs+6C1NDPBDtWk0ghZrOLQ9JDleEI2Dt4rYd+d0SgODxKn9IUkOCDr
pM/HLaESUHiXjvHaFg64WMVR4mAuSR+/rv676omXoo+tljiPeDv/G3etil52
av83XjhyKO2lyhb6uICTgCM/+zdW/jC/V3z539jQbzg0zESaPn7kG7nyF/0b
n0uzPjsZkgskvpxKPGi5BDo2AlQ0dzaD50fyGBtfz4Oar2Id3g/7gJ5zor7B
vhmQV2fkNrOJAUozG2sobltAafUd5TFPGGHPq9APOqLLyOxGV/tFHmaoPFHs
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
7lrdDdH5l/meG6QrPDtxz6Ldhf+pBe9v3LOof3XvY+eeBjxfkU8G5pscS/F8
5dFHT2WRhGw8X4m7zMt11CQDz1eerVYQrvIpwPMVrg+5kucDqnDPQiOacGe7
1Ih7FuxPNhz/INYG0fmXTm9E/cN7qdDkUlP9aR42kGNy/sRMZxvuXYRl/XDQ
XtaMexdM8YymU7E1uHdxIZnlSrF0Ie5bHH5V+dmRNQeff5nk9VDS7Hw5Pv9y
XwaR1VZbi8+/NLJ8p7BjawOBehdxqo9LIi/WEah30cX5qPaFWjk+H3M//xYd
jgcpBJoftXJZ7wwpzsO9i9Lial5pnzrcu9j5Z6i8U6wJ9y4cfYcv7PhejXsX
lkfWdcue/oJ7FkpZfDe05Kl4PiTRGZtd/aILn395zULp9c8VfXheNN0q+5pn
kobnReatHANaX2l4XuQ2m/dLj7UXz4usLeUeHqppx/MicH4fR9j6//d5kb+x
fu46vW58XmZB1lgR4O3CPQxef6X5FebtuIfhWaFR+l236a8expxtfohPJZ4v
GR3MSHUa/YbnS+9/Vge0n0nH86Vju3W1X+p9x/OlZ2Fbltu7VuAexu6cc/Lr
S+pxD+P5bu460d2t+LzMFnv3Xst0KgwRq9+k9JYV5FwWmuCyo+JehpKnPDV8
ZwvuZZh1/bZy9q7DvYwXp1svtL79hfsY4e2L52x/peHzMnPvsKSN0X7h8zJl
Po/M68TV4PMyj5e8XfZ1pp5AvYw1P4/06SvXE6iX8f1F6IaU3VX4PM0ZSZ21
b3OyCTQ/a+b6+uLPt0zcy1h/7p2YIaMa9zI47p6SVt3dhHsZepYq/pvX1eFe
Rma/ZdO2tHzcw2jaeEt7W3gLno+92yEcHxD213mZs88eiKUb9OJ52X32nblf
k2l4XvZuBeMGO3s/npf1f+jk3dnfi+dl57QStTJM/pqXaSi6HrrI838/L9MX
jBq7mvideLJvhvVFSxdE5216OGjza7V24H4GiKq6w7OmCM/ThLsim2JzP+N5
mnWL2OqApVl4nlbruvvWTcEi3M+wbctMszhZg8/TvFimsJxJbYJrq0LBcnsW
0MeXIKVX3gZzD9dF1/VQQKbv9gu3h6hw9dfWO76ObEDgzNHdzRvacH9jx+az
uT6fGnFP49ac3O2NY3n4PE2bUIZDaVkl4WxUVt2uxAvi/d/WivyqI9T0aZNa
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
4FO1
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{2987, 2993, 331, 888, 712, 577, 480, 417}}], 
               
               PolygonBox[{{450, 2992, 366, 367, 368, 369, 920, 744, 609, 512,
                 449, 413, 948, 772, 637, 540, 477, 983, 807, 672, 575, 370, 
                921, 745, 610, 1029, 853, 513, 995, 819, 1076, 684, 1048, 872,
                 1094}}], 
               PolygonBox[CompressedData["
1:eJwVzzsvQ2EAxvHXJRFtF4sBiVBbxUKI0SBpdZEiFguDwaUdfAC31ifgC1CJ
a5jLwqgVl5XZbXMZ2PzO8M/z/J/3vCfndM0Vcvn6EEId8jiNh3CCZuONMYfV
hhDueBqv/AAVWwybtm4Ubbv8S19EDC98EGd61XlVb8c2b2kMYVbv139lGld6
0r6iT3h+Td7bMtEH2sf5m/1JpqK7trKzVjnPR+Wh8ws9jj5edJ6QM3xEJvln
1DHMK7xTFnhWltzf07/tKb4km+R09M7o/+UQzvU2+4Jec6cmO7BjH8CfnsG1
Pul8XX/Qx/DOn3kv9vkRv9QTKPEebNnK/Edfjv4Bt7YpbNgfeRYf/Bj/Seg3
Ug==
                "]], 
               PolygonBox[CompressedData["
1:eJwVz7kuhGEAheHP0ohEYotGgURBg8reUYhoJJZpJGYsjZAILsK+NbgBYmuM
pSAhLgBBhZme0pYg8fzFm3Pe8/1reXyiezwzhJCBSRzmhnCAQUMc81khPLmg
B+88iRXs2n9sUyjEve3GVoYN3oCEbYE/67344Cleg21+zC/1fMzyqugdehvO
9VXne/qvPo2c7BBivEh/lc2otx3xUjnGO+SD+271ctTxzegbZSJ6tmzkP3on
Wvk1r5TTvEsOuX9Rf4m+iffJTNlt+3SWlrXYsZfYR/UT+5UswJw9zz6gV0f/
Ldtxoa+5bl//02dQjDfegqT+6PxOr8AWb8KwbYmn9H588VOsYwTLztL2GL75
Gf4BoL494g==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0DlMVFEAheHLDqGhIQELYKzQBiFakaBBYBp1wMLGxpAgDAUmdMriDPQm
SgsKjELB0jLT0SAMAj10LEPFWlHi94o/55z/vpd382L9n96OFIcQivANK9Uh
rGKYvMVCSQjTDpdxjjh3gEm+z86j0k7iBvP8FLeEAnq4fUzwvXabPoMH9i52
uHX7mV5AhT6Ea/yy085z+gv9BjF9ClV6Dn+cD8ja0hAy/GP9CGd8Qt6jm292
vifH7YSzUfmQ2+TaZdy+Q6vdaX/Qa+QPu0XW23lsR//ATur1ci26u3wafRPl
dof9LupyMLqTvJI/uZT3R2QDl+We69do0t/Laj6tV+pZ/Pb8ov1IP8Sp3WX/
w5j9xn6if0dd9D/xlyuzP+ISc9xXrlFPocLeQIY7wUtuF1+41/YWSu0BXGCW
n4zugWN0cnl85l/ZE/gPvw9Iiw==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0TtPk3EcR/E/lEkHBgqohIGALFoSnIhCw8RAcAEnFDDERG6FsHhBX4JA
vAAqWHZNLGAiiRcwUXgDIKCwtKhMMJoIcvl0OPl9z3n6NGla1jnQ3J8bQshB
EqnTIcxgSviCY9z0gR1MREJI8Eks4ggd+h+Me9bHt1DCHyKivcNLbQGHaNd/
Y0zv5XF7GpV8DZvaOf4AuXwOL7QqPooivozP2ht+yc7gP7/m5uWF0Kb/wjPe
o99xK/Vl7ap9iDr7lhvVk9nvcc/z7/jpnUaesEvdec9r3Djfw1lez1vtU+4Q
j7k5fBbPvd/EB+0yd9Hzy24D/4sY73DztRG70F7CJ++95tV2Gge8xY343A19
G095t75kN2V/N2rtV6iwV/HD8/e8zt7FGft+9k+2ZzDh+UU+jCj/ho/aPq5r
GTzRuvgVewrlfAUbWjG/h2OktHHtgv0IBfwrPmj/0Kql8Vi7zddRxO/iCG/1
Me0E6cVUrw==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0jlPVAEYheGLUpCYAaQ1LCYKFkpsBDQkJNAYIghoBNk0tCYC4j8QGJhB
oFL+AJsCCtrhllizyaJCpAaRRYiCVD63eHPOe7577zRztqm56uGJIAgS8BLj
p4JgAvcN/XiLA9z20BriJ4PgHu/DG+zjln0VMbdGvog03oZjvLD32i7o3Ujl
nzBl+40q2/fwZmvg+foAMvkcvoS/xa/pP3Faf4R/GOVP3d/pJfoBcvQupOgf
Mek+zHP1dezxSpmQKO3fwud5vf2xPGf/bCuUpfwYeeH3eZOeJp/zyzKDz2LB
u9f5A/2MnHLPk1f5JlJ5Ea/Rk2QrvyiP5Iitx/stMss2bSvW95GtN8iIPaon
6x/w2vND/JL+A7u8gn9FlNfxK/ozpPMZzNsmeYG+gRS9BYcY5nH383onIvw9
Xtl2cNO2Et5stXwOybwZfzFkj9kmsI1y2zI67Hf5LCI8/LP9waC92zaOXyiz
LaHdXsOr0YUxbOGG2yKeuN/hUfwH15tcqQ==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8zWUcwPFLlNAwuiQVyrzutRUatoiMbGVlzzLTQFJZTaOsssnKDmUU
WvbMpkiZqTSM8P6+/PG+n+f3/Tnn/M5znpfcrbvX65YqISGhhj/R1P6s1w/o
SHVKxJyb3NugI+kUr6FkzEnj3jc6is48SamYk5abuYV03Ep6MsQ9r/tWR9OF
mpQmY7zGve90DF2pxUMkmu/VGbzKs9wW72/+vX5IN57iYbKZ79OZ9Kc5t8ez
mP+gH9Gd2pQhu/l+ncUAWnBHPLf5Rh3L89Qht9kxXcgQynK32QH9lIG0JJ/Z
b7qMd7gz9sBsk47jBQq5PqMrqUse18d1UXxv64s6lKLWf+paHrW+puXIYX1Q
Z8ceWv+nr5Fs/btW1lX6iF6N31ZbaX49qRX189gzvaTV9F0trhe0in6tj8VB
SXXjzGSK31E3a3kdH2dC/9EeJFmf1S9ib6yvaD0esP5FFzOMYq7/0q/i+bjH
9SGdwyBSXJ/X1bSmgOtTupz3yBxnxmyLTqAnT/Og2QldwvDYL3KaHda5vM5z
ZIkzZL5VJ9KL+vFdudf8iM5jMG3IGmfIfJt+TG8a8Dh3xXlxb7t+Qh8axv6Q
GL+9ezt0En1pRAWyxdmL8xO/ZexBPGt8PvdxP7nizMXZiD2M70cm77dTJ/Mi
jeO3JG/si3u7dAr9aEKleD/zozqfN2hLvtgH8906lZdoGucmPtv8J/2MN2kX
5yb2wXyPTuNlmsXnmv2qSxkR5yae2+xnXcBbFHH9h66hPQVdn9YVlLG+rO9T
wvpvXRd7G/9HUSD2WH+MfdPpWkr/1ar6ihbWc/Fd9Ustp//rE/qMvh3/lg7x
2VSjEEnxWpJJieekKMXitRTnOsHGjKE=
               "]]}, Annotation[#, "Charting`Private`Tag$1648036#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nf8lnMbxvG7SVkZoRAJEY+Z7Un2KlSkklKUhgalnUQDKZQWLWSUUEYZ
hbSL9t4L2Vt2z/t4PX98XudxHOd13b/7ur7f73n/KjZtV7ttkUKhULpYoXAd
0UWdX7RQuARb+Wfxyj6FQk+1BrrqL9C7FNv453A/Rsm/kTVDccyR1UQ3+UL+
Mmznn8c02V54QHY0eslG89/SzVECc2XzZYfjSf50XC/rzi+iL8cOfh1/Ep7j
x/Pv0HujN79P8ULhVvoY+nv1YrxDV5C3zd93/Rj1O1kV2V1qSbWurJpakt9J
V8XZ/Kt8ObUlf5U6z/0L6HI4jR+sX0a9nb9UPYPfnWtxIf8Rf6x6L3+De3uo
n8hOlF2h7kmOnXrr1Sp4Xl5Wvxn9gvxdtRQelFfED3R1vEv31h9Lf0+3wF74
LN8dr9Hz9RfS5TGEPxM3ynryn9JX5nr+RTyIcfIfZC2xNxbIamW95Yv5q/A5
/xIeyl6R/yhrhUn2TCl1obw2eukt4a/GF/zLeK/Y//fdQ3kv6JP9xP9Et0bp
fD5/Dl6nF+kvoo/AU/yB3ksT+iz6d/VqzKQryTvQdVz/gLpUdg0K8hv5XfIN
6sm5VzZe71C1OX+FOkH/fXofnMr30d9Xbchfolbif4zG+fx72cdqu5whtW/2
Of2z/GT+7qyFeks+M8+vnovJdHl5q+wD93yiHomh8qr4g74GH9M36feml9HX
4kt+I39K9gU/kZ9O74u+/HHoJxvP/0K3yTPgU9nNWV/5cv46fJUzjletWX+1
btZTf4VeDXzNT8LDuAX10Ed/pV5NfJN78QhekP8qa4v9sFhWH33lq3KG8S3/
Gh7NXpP/JmuH/bFE1gD95Kv5G/Ad/zpmyPZDP9nxGJC9x++m2+MA7OLPwxR6
qf6n9FEYxp+NW2X9+TXZ+5kL/Cb+P3iRn8x/QO+P/nkG63MbfQL9U8413qeP
kbenH8teVn+XnSK7J2dFrZd5o5bJWmWfZB/zb/BHqK2zX9Vl7l9MV8Dp/HD9
g9Sm/GXqOfyf9LW4iJ+VtVU78g2zJupaWS0UkdfKmZVvzt7FS/Ip/If0AXiY
r4yf8/mYTg/Un0D/Qd+bc5U9wV+AN+nl+kvoozGCPxe3Zb35dXTtnAf+DXwk
K4NHMtcwSDaR/5PukGfDClmjrL98PV8n75Z/E4+jMQbobci+z3fl38ITuD17
xz5tojbFY67b6Jqb8Qv/Np7Mfpb/JeuIg7FStjS/BRjJn4c7ZAP5TXRd/Mpv
ySzHy/xUfiZ9IB7lT8rfoC/HDHpwzgX9N30fSnn/9flDcmYy83POZW/xR2YO
5Dyrq9y3jK6IM/in8x3VO/LZ6vn8X5kl+C8/O/tdvY+vqd7p/kH05nynzBW1
qFo7Z0lva/YSJsgPy+8aPU3+sXoQBuSsyRvRVfLcmXv4gB6Ss0z/Q3dC2Zzv
7D28Ta/WX04fi2f4C9As68Zvoethd36H8RSaZ930tsrrZ07nNyzn2RoOzVrq
/SvvnBmMNbK7sobybXyDzMH8VmCW7OCcucxVDMvn8HvoLnlWrJWtkFXCKP5C
tJAN5rfn/Oc8Zb5jdtYKA3N2MVw2mS+gK394ZlXWAFPpdfor6eMwmr8If9M1
MIduqT+E3kE3RDHvuE72oXxb1hoT5dP5OXRZDMrccl3jzCD6N/XKnD3Zh3zF
zJT8DXWE+6bQRXIt302/tNqAr66Wy6ykq2UG8tP4o9Q2mR/qevevoo/HmfwY
/UOyn/KM9D/ZX5hLnyDvRLfKOqo7c+ZRXH5T9rx8ez4Hr8hn8HPpQ/E4fypG
ZibwRdGdL48NstWZpxjLV0Nr2VD+M7pRvkdmMJ7OTJAXQ4/MTWyU3Y1hss/5
xvg38w3PoA2G630hvx17MpMwKmtrz+Wf3XZoj3swwrW7XNcEBcyUjc68kRdH
z5xdbJKt4StjHH9xZqVsJP8l3RQlvJubsz70DvUsVJVNyl5SW2Rt1Y/dN48+
DE/onYYxmV18CdyfdcNmWYe8B9lXmVc555glG4uOuA+d0Bld0BXd0D3vw31f
u/7O7EXMlo3DVHlJ9JJVwBbZWv5EPMtXzzulr8c8urLv3Dle7eHa/wGQ04zG

               "]]}, Annotation[#, "Charting`Private`Tag$1648036#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfcjWUcx/FDZlaFSskIJUkolQYZIbNUChkhsmUrM7NkFOKx9957q2yi
gcoelexRqJB6//74vL7jus95nnPf1/W7czdoXb1VskQikZQ8kaiWIpEomSqR
WJwykSiBX+Wp6IVX8CpetL7EWkn8Jk/DR2ig36d7B6mxVVcdpfRL5RdxUp6O
3mio/1HXAGmwTfcaSuuXyaXwuzwDPXR/yN2RF310jXQ/8Q2RFtt1r6OMfrlc
Gqfkmeip+1PugXzoq3tX9zPfCLdjh+4NlNWvkMvgtDwL/dBYv1/3LtJhp64G
XtKvlMvijDw77pfuitwTD6G/ronuAN8Y6fGN7k2U06+SX8JZeQ4G4D39QV0T
ZMAu3Vsor18tl8M5eS4+Rk1UsLZGXx7n5Xn4BLVQG2/jZdestV4BF+T5GIim
+kO695ARu3V1UFG/Tn4ZF+UF+BTN9Id1TZEJ3+rqopJ+vVwRl+SFsT90V+Ve
eBiDdM11R/hmuAMT5cyYwH9nfTCfDIPkJzCPz4W5fD3rlfkNfCVclpPk9Bgl
L4o9xl/jP8Jq/jHk52fQ++LZY7q8hRbHYJ9pQY/Gb6HN6QpaIP5P3ClPolli
32KivJE+hV/wvc8PocnDx/dZX0cLx3fiSXk+zR37CPPijNBnUd9nq9AvdZWx
hH8o9rx+NM2AJP1iuQ//F98bj2CmfD9m8EOst+SP8S1wF37QDdXdhiFysTij
uqryV3wV/CkvievQSn9c1xKZsSfONqrpv5ar4oq8FJ/FOY6zGPPB+kZr1XBV
XobP0Vp/QtcKWbA3zl7MEv0m+RVck5ejr+7vON8ogGG6NnF/+dbIin3xd3Up
MFR+Ks5UzBp5M/8q/pLHyBkxOp5jnGH+nzj7WMMXwqP8LJodM/nhrnuf/zX2
IG1DV8Z1uJufTLPG3MEkeRN9Oq6PPRG/l6bED/jM+npaJJ5HXCcvoA/GHMD8
mHn0OfyGJjH/6JaYDbQ6XUofjntibSzNhDHxP8n9+et8PxTEbPkBzOJHWG8b
38u/j3swJX4DJvM/WR/Gp8Ln8jNx7mN+ylv51/CPvApfoJ3+pK4t7sXPMS9i
Xuq3ya/jurwaI9Fe/7uuHbJhf8yLmJf67fIbuCGviVmnuxEzEo9hlK6D7hTf
HvfhgG64LjWGycXRPOanvIOvgZvyOPkOjJXXxlzkb/IDUAhz5ByYzSdZ78if
5jtgFV8wzhI/ld6DKfxm+gwOun4ETYM9GG5tAy0a5yXOsbyQ5olrsUDeTp+P
e4cWMb/pTv0u+iZdRvPjEP61Pj7mDPZinPWvYm5gXczxuEb3cfw2/vGAn0tz
Yg4/2nWd+DN8R2THNPleTOUPxfPk02KE/Fyc83h3yN/wb+GWvD7eCbpb8ico
jDG6zrqzfCc8gMMxL+L9ot8l18R/8obYr+iiP6frjBw4EvMg3kX63XItJPBl
PLs463H+Yu/Gnov3leu+tV4byeJ+xD3CB/rzchfkxNHYc/G+0n8nv43k+Fo3
AR/qL8gfIBeOxR6L95X+e7kObsPGeLfp/uMHoggm6rrqLvIfIjemy9kwjT8e
e56/HV/Eb6FPxHPnF9G8WMjvoC+go+vrxYzQ7aZ16XL6CA7HXJMn0LuwD+Pj
d9BiOIFNPj+IJvCptaKYpOsmX+K74kGciL2A+rFf5XpIGftZNzmeZTyfuJdx
f+I3xnegO3rgndiHrq+PVNiimxLr+styN+TBL7pRunQYKb+AxXw+LOJ30hIx
D9DTtf8DfY9rNQ==
               "]]}, Annotation[#, "Charting`Private`Tag$1648036#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HegjXUYwPH3hnuvvfcupBQZESVklD3KSCpkldxLZJfdpkEZTSrtjAZF
ySyjQUNTUWTvvT/PHx/f3+8557zrnKt8z8wOGSlJkkz1z87UJCmZniTr05Lk
SW6nOiXY5bXd7GEvpbxvg/lTdKUGJaPm23QOA7mFfd5f2vxb68ncQU0amx3R
jxhHqZib/auvM4j29ikst24ex7M+qYvpYZ2fR6y7aDqD+Ma+nxZjv3OX0e/M
+uuUOL/mZDDd7FvrOc3UL/QeLcgwatk30aM6QD/WuzUvDzLevqNmY7V1Xy1K
aeta+p++wZ3WuXnAuoNewgrrFnFf1qf0Mx7lgGsua/a99dPxWa6lTNR8u77J
YFpy0PvLmf9g/Qx3UZuyHPLaYY5wlGMc5wQnOcVpznCWc5znAonPl3fcjfps
3Dd1KBfHN9+hcxlCK1K41HyTPkd32tif1y+5jqb2x/QTJtDJPpU1ca44vvX/
+lbch3WeeM7Wt2oWVlr30SK0juenpzVDP9eeWoChPBa/Yc0ez5219vdqcUbE
d2B/mf6o9+tU7aa5GEIP+7Z6IX7Lukx7aSHqWjfT4/pp3Kt1PiZad9Y0vo7n
EfdtvVPfZii32WdlVTyf+A6tz+gSHicLFcx+0mlxT9SLayUrFb32sz4fv1Wu
j/eTjUpe+0VfiGvlhng/dc136TsMi/silcvNN+t0elM/jhHnM9+t7zKcdqRR
2fxXnRHfAzfGMeIazPfoe4ygPelcYf6bzoy/DRrEMchODq70+u86i340jM/E
dZvv1fcZGX8z5KSK+R/6YnyXNIpjxHWb79MPGBW/F3Jxlfmf+hL3cVMcI647
/m/QDxkd3wm5udr8L32Z/jSOY8R1mx/QeTxER/JQ1XyLvhK/IZrEMeI+zA/q
fB6mE3mpZv63vsqAeK72CV/F89fCDKep/c16QhcxKc4V92t2SBcwJn5r5OMa
83/0NTJoFuciPwUoSCEKU4SiFKO6z23V2WTGOeNY8ZzMD+tCxtKFVmZndSlP
0NU+B+vi2WoJRsbfl/1Fmv7BUw==
               "]]}, Annotation[#, "Charting`Private`Tag$1648036#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfcllMcx/G70h7aS3sgM5IVDZUySxIaKFFCpVJpT9o0aO9dtKjQoKUd
0d5be2ov798fn9d3nHNd931f1znneQrWa1KtcZJEIlE8WSLRNlUisTZNIpEF
3VInEjXTJhLj+Lv4x/h2/Cl+k3mZ5ZryWrkeXpD7y0nxg/Hz9GlMN/YcShv/
Ur7MXzdeVP5U3iN/jna6dXJWdJfzYLMui3m1dOvk9zFDd0Euhe/l8riha4/1
umz4UpcXW3Qz0QEb9NnxlT4ftupmoSP+1OdAD31+bNPNxn+6Z+L36Crgpq4T
/tLlRE9dAWzXZfU9a+vWy/UxR3dRfhYz5IooY85X8hX+lvG75cbyXvlj/ke+
Jf8aP5RPg/b8CtrZ/I00F7rqeplXi46Xh9GCcknaXv6anpab0p/lsXSH67PR
OvG96QbjH9IZ8ij6gfwiHSB/S5PRL+gS+qNrL9HSmGleXf1U/nm+LN+Dv8rf
Nu8euYm8T26FLrq/5dzoLRfCTt1PuKwrg1m6Skigq/6fWHPoIxfGLt1cXNGV
xWxdZSRBN/0mXR70lYtgt24erurKYU6sTyRFd/1mXV70k4tijy677/2O7s94
LpivuyY/F78/ng3KmdNTvsYnw71yU3k/3xrV5GFy2liDrt9C88X7MFbb2AT+
bv5xvgN/ht9rXg75XfkvuQE/k2/Av8QP5L+jd9A2dCmdFO/Vddf58vFZ8k+x
D+k0eQR9KfZdrBN5AL0e+4wukifE/eRi9LN4zvSA/EncJ947/zo/nE+HDvwf
sXd85laaH9+YU0c/kb+Hf4LvyJ/l95mXU35P3ig3xMvyIDk5fjF+g1bA3BhD
ctxnTjPdQb4Nepi3TS6A/vG8sV/3K27qKmKe7hWkQE/9dl3B+M3x+3BAtwC9
sENfCAPjs3BQtxC90Qc7jRXGIGP345BuEW7FWsd83atIib76XboisV/kB3BY
txi3dZXws64KUqGffreuaLxP+UEc0eXym+vq/pY/wm+6hK5yPCe5apxxcm/5
Bp86vpvcXD7Et0V1eYScPtaa6/fEOsNgY+8Ym8Q/xD/Jd+LP8Z/xv/D/mp+b
r8f3ov/E+6Kz5EbxbPlv4140BW1Ll9HJ9HfXJqEvxNqgv8YZTafLI+lrcW7S
PvHM6U25JV0sT6Rp4rnRFrF36WH5UzpXbse/wY/kM6AjvzLWnc/cG2sOQ8x5
GE8Z6yyf548av0t+X94U5yqW6JLqXtQtiH2KtPEOdJ/rjvDt0d+8ffK9GCoX
xzFdHvPq6zbHHsFSXbLYY7qFsVeQDgP0+3XF4kyWH8Fx3TIMxAH9fRiufxQn
dMtxh3u9rF8U7xLpMUh/UHd/7Ge5BE7q8sZZrdsSzwordMl1r+gWxzNDRbmv
fIvPgIfklvGu+cb8vNjTfA1+FH8nOvGrYi273yH6ALrF8zfvXTpZfox/mu8S
74FekJvFe5fH0VOuzUc/jLOebo01TWfLo+NvXewf+l28O5oy3jNdTqfEGeP6
FPRVuQf9zfz69Hu5Bv8834+/zbeK8fjusQb4VvxRviPelEfLGWOvuedh+iBG
GSuJ07r85jTQbZObYKUupa6K7ve4BzJisP5I7J/4DXF244xuFYZgKIbhX+MP
Y0ychTirW41U7llVv0T3FjJhuP6orjjGxr7EOd0apI59o1+qexuZMUJ/TPdI
POdY7zivK2BuQ912uSnW6tLoqumWyTWRJdaxrrXuGN8JI807Lj+K8fFOUcqc
rvJ//AXjBeWP5B1xVsQ5Jg+WU2Gd8bTy6/xyYx/wP/C1+Er813GG0gRtHecE
zRr7gf+C70ePx3On8+OZxf6N50PHxN6jmWhnuppOjXXqM0/wJdA9/paa/x6d
EvuJlpKfod3ibwW9KDenC+I3ubYQ34jfqW/Ez+GbxfnKD+FTY7156eTq/Apj
tVFZ/kZOgmyxb+U2/Am+C0a75mTsjTjT4jvgoq6weR/rdsX3wAZdet0buj/k
OsiOMfpTupKYJD+LS/E/KTKYX0O/Ms5x5MBY/Wnd43EGy6VxOf4nxZ3mv6lf
FXsWOTFOf0b3ROwxuUx8hnnd5Ut8C35hrAN6xdwi9BN5d4xhoy6j7i3d6njm
yIXx+rO6J+P9yGVxNf7XwwRMxCRMxhRMxTRMxznXPIVprimHa/E/HzL5nLf1
a3R1kTvOPV1b3Um+a+wJeaycGV34NXGfOCNc/z88iLpv
               "]]}, 
             Annotation[#, "Charting`Private`Tag$1648036#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 9.37499980867347}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
iORjbne3RX78j41IPmah0xfovp+JSD6mufI9V835DkTyseZtlPRP/fWo8YzT
qvc5i0Eu6mmnvlIzHjlAcfviR4d2HW3+ltBu3Fbsnh22VhyMs1+dkbdl4QG/
o5suz4vDvQfDrd5mv/ANpYkb9/MlwE6IAWFh77FgC1yXCpGE8rhrChIt35FU
bo3mY2spSPu+sSTgaydKD+fc3SLKgO4nxvfMjFjI81XueoVGBrToWlJMT7LQ
OtVPH57flQb1zyn3fbu6UI1KKLTvlAHlVhmXsu2tKMKlk2+rrCzE/K1vXJtX
gUheNzUn2dbfOIJJXlf8U/zX/pBpTPI6cr6Q/IxsR3x+qFXz6TvK7i26Iv3x
E1oU5xHyj9OO2GmaaESqCmXL62h96WKhXUllbfsZtehwpJbsYtoASv/1qPdg
fjWy9pjseiQ6gsI7/nuf9f4TOiS/tOWK1hjy/BbfJ7zmOK6Ln4+ut5lE1/7z
DN0ylYu9Jre7pB2cQcNpSr0bKYX40p6e9vbT82gTT6Gt7of0BV4X/u/6jPJQ
KyJ5Xb9TQ09WcBcieZ1ATEF59TEWInmdh++vwKRzbETyOlWvsL2591mI5HWL
ZD3bLV93oeGzaMWUNB06SwcnlRM7cFp97FmtH3T4WvOzfct2Ft4pKXi3/YE4
RPnpNoUqduNdES+OiS+RhJodMxdtPhYi/0+JXumDkoBe39zQ0duKdHq3bPFJ
kQKeNZydF4a70YU756/QfBhQ8aGihZ7PQm0TW2zk9Yn9f71BJL8XE1n+5uv8
PCoNVoF1LW+qOhDJB3vXW1Cng8cxyQfJ8SH5INkOqipT4+H7hZjntn9JKi9H
1XvnDYtOMdGsFmcwqKIGvfTuZh706UN3D31KUraqQRPHCg6eCJ9Avi5qf29v
y8TWWgM1VXHTaNqoX6HRuhCPt15IUE2cQ11n34/GJ2Yt8MYM3s3TX38wEckb
FSUiZ10c2YjkjV1CKwKMBNjIKLG/KowhDEpDRfsdbnejnfdqvc4m0mGJ/vXh
P1FMzBjM1Vh3QhzSDMaCFoUy8eZq7wtOeZLQ/CT4qc/bRvSs9mb2jUtSkCVx
zFiXiOeM2xvDlm0m9sOj25z+EuOnURNY+khQGngEr28f5mYhkmeS/WGVRfPj
XOhErPdOc0p839DTbnv50v2/Uaw7D+WJci2STvX+7+uTQfRysuO00opKlNKy
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
5/MjksXcWwuB/9RI2ujwVeAH8J+Mo8mZ7r9Lwfdc7B0msdVxGvjO6vGsyIlC
FvCdHZcny6NdWcB37tZrEPxVNwX8pKqcpfJhDg6K8JNT1nIPJBxpFOEnA8uK
NV2EaBThI48rGKx43PYXfMr821YZzds+Dj7lYKOZ1IeWo6j+q9AOeR9JKvlv
zqSjzjDS2m/46+UxKeqKxMyqoaUDiPCTEfTJGCmHHkT4yRtqr5J+SPznX5Ze
4NurfuMX8JM9CW8tY8ojgZ902sh/8YRuBfCTKmd838+Y0P/jI60LHG9snQQ+
kvPBopDigBngI/PsGbIR82eBj4ya/Tn6MWMG+MhEt/FVe55PAm9ocPx3G82Q
hQhvGChRKP8mg4MivOHKywVy0s9oFOENIz74J9y5z0ER3jDNludOdfUM+Igf
uss/MmycAB/xTOuN5RfK/4CP2P7Lw02X7cfARxwuVuKp0z8CPmJKTu7Ooiom
+IgVxbq3SYczUH1UrXdVvSTFf+Fq/ALdIUT4RLP7E8YDrn2I8ImPJY4pFu7t
An/x99cvXQTXNCLCJ8YMDEssj08DPrF7pPfQ5OMoRPZGY+0bX7xdmoDI3uhC
98/GUf3JiOyNCr6Jj93RnIbI3uiMzVS2Im8OInujx+e/W9k/Lx+RvVHF33v3
csR/Af5xbMrmiL/Vd+AfOZNmFs9ylYL/+I7/+ZO3+KeBb+x4/b287TUL+MZr
yuJ/R9JZwDdei5m9Za01Dfzgy8HPQmN35xDhB92TxqOzztEowg+Km/Q1d2yl
UYQPTBmVPnsQ/QO/cOiNW6+3uY6DX/iQ7Q6bY8GjaGbfjg0+tySpbc1nJ4q8
h9HEqa3PFiApKtnc71yq3wAi/KB47fGb8+XpiPCDSoeEDjvT2sFH3NXwLeT3
1XLgBy+pbVf01I8EfjBG99F59KscEV7wgHy35/bVLOAF06l8rPWXBf7f7/nb
zXukaNStQrVd31VEqR15+9VPW9Ngn9Thzdn78roR6LpA3onhXyNoer1D21AX
C3i86q/3S1v1WODTfWdd9zzcnUb5nGwzNH4qSlU0dZ0o6+GAfVL/nRrG2QUV
wMP5l7ZYe0/2AO8230Y6o2RiAng3zauLLz23mgHeLb70uPxr2izwbsoetWfF
W2eAd5MT+Dp57dsk8GNj/5BeODcLEX5s6XyX7EuBHBThx9Z6HxMK9KJRhB/7
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
jU6sDf4o/r9vcEjRq5z5//PC//z9B09k0Uc=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{3152, 3158, 399, 956, 780, 645, 548, 485}}], 
               
               PolygonBox[{{518, 3157, 434, 435, 436, 437, 988, 812, 677, 580,
                 517, 481, 1016, 840, 705, 608, 545, 1051, 875, 740, 643, 438,
                 989, 813, 678, 1097, 921, 581, 1063, 887, 1144, 752, 1116, 
                940, 1162}}], 
               PolygonBox[CompressedData["
1:eJwV0DkvRGEYhuHPWgkjlhatrbMUdDoxxiQaBUJiVHNEQ4hyCskMjVii0WgU
lij8ANuMX8AfYCSWgnq4TnHnee73Pd+Xc07XQpTOVocQqpBFuiGEKUwYNmLf
4rYmhBbkeQ8+zCo8iUe+hKLZKx/EBU+iuzaEDf6jN8XwOf6sT+un+po+ouf1
OmT0G3ngvjvZioJnxsz39F69Q4/is7LMZ+QZ35afzv3pk1jlRfuUPOE5meED
Mse3ZIUvymu+K0vOv+lDiPil/bg8ju+Mv1/f1H/1Wf1cT+gJfV5/0dcxygu8
HofuvJdt2LHrQ6f9Cn/Xv+Kfz1O8xJfxZFbmw7iKvwHNODJ/MGuP35f349vs
H62uOGk=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0DkvRHEUhvH/2KJQIqgMekqDZGh0mrFHI4JEMSSWyt6NQkQjsUwjsTdK
fAj71uALEHTGkvhN8eR9n3POzb250YGxxGhOCCGCcXQUhdCOHYNdXOaGUIl1
R/XImN3h3SyOE7NulKE4L4RBsyd9BnvurngUGzyGajcT/FX/ts/nnfycJ7Pv
4Ckewb39h2zGqV2bXVrv0Wv1eX1afvF+ecyXZTkvkUN8Sj5nv1Hu8ZSc5XG5
whdloRyRp3JV7nvvtV6FJN903yrXeINeo0/qb3qffqT/eKZA79IvzBP6tp79
uTF9Sc/Bg7tP2YIzu17U2S/wjF6BUj7MX/Q5HHjmhldjizfi1+wRh7g1r0Ha
vAl/Zv9YLzwN
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0bkvZWEAhvHP0uBey/QkCgYVg2pKDRexRCNBYasshSVUEsSayIyl0Wg0
tikUOtuM5S9AaxbDjIoWid8pnrzv837fyT05N79zsHkgOYSQhCU0xkJowjdj
ZUoId7h0+IgS2yI+2L5jzRbnddhDhe0PLuz/UWxbQI7tFKu2UX6DDp6ZGkJM
f8Y4L+a1+i7K+W+ce+aNT+sVznv0C9TzN/xzviVbnd3bB/Q8vUhf0av0eb1P
ZvMTrHjmQPbaUuWEXJSf5Yi7M3KTt8hrPiTbeVxmRN9A7vF2+RS9uxzjRTLB
J+U6T8id6J3kJ/4LZ357X3baXp1N6eV6t76hN+jn0TfVX/Hg/l/er+c6+6jP
IYsfY9n5ML9CG4+5k67XYBtltp/44V4XP0Mtf8G9rZDPIpMf4astjVdjC6W2
2+j/jt4DBdH3Qdx2iC+2U7wDX8JKKg==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0rtPU2EAhvGPlkRo3EERLwOgMulogoKKdWJQCKgIwYSoHcCSyES4NE4O
pkw6FQQGE5XLwMJF+BMUI6CAVN0lQdREE/R3hifv+7znO6dJzzlxp/taVyyE
UIAcGg+G0IS8odCFS5hAdTyEDczYtxG3XcQ4Tts/Ydp+nLdjGUnbb3y2x3gd
xnDK9hFT9gz/hhQ/XBjCMb0NS7hi+4Ut53r4e9zkCecK9B308kpeqz/Tr+rP
9ZP6OibdOydT9oQcRp0+5MwLvUX/Gj1H3ueH5FH+RM7wDvmX98kMPytv80cy
xxvkG56W9fwnNv1mls/qnTIu++VjeU6mo/9Nv66v6Df0Yj3o3/GQV/AL+lM9
qY/qVfoaXnt+scyi1rVB177gHi/l5fofDPEzvFVfxGW+F71H9z/g79DCi5z5
ZzvPR1BpW8Ur2wDP4y4vce6IfgsL0bdh+xG9e+e6+Vs08wPO7dtqeA4Vtg94
aSuL3iHmo+/Htht9C/b/pilQmA==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0U0zlWEAxvHby0ybNh1F9GK09lpilOza2ThHtia1iIxi2lCaZpph0zSF
QxMqNG0szKD0DSrnKMoqfYEoQ4hd/Z7Ff67rf933Oec58xS13Ip3ZIYQMjCN
+OEQEnhtWMUBql14hsKsEL5gyvYN+6iyj+C0/TMmbXm8CQuos23iq72dL6GR
Z2eH8Nd2ng/jlG0JE7a7/Aeu8Rz3cvV93Oel/Ir+Dpf4b6xEDy/7Ue38prM0
EjyL7znf4F38DK/Uk/plPamf1NN45d57ecN+SD6Qj2Wd7HGvX77hTXKN35Et
PCaP8UdyhjdH/433yF5eIhv5QznG6+VbflvW8l9Y9tvz8rrtn7M+vUpv0yf0
Bj2lx/VMfdf9dd7Ji/g5fQgneAovnXfz77jKj7hzVN/DPV7ME/o8LvKN6N36
TCtfRAPPcGfHdpYPosC2iBe2nOhZMIcLtvXo/dv/oMI2gHzbJ4zbYtF3YhY1
tp/R+7Zvo9z2FMdtHzFmG0UaWyhz9gR5zj7guS2F/2jiWgg=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1Xecz3UcB/C7w9kjm3PHmdnbVSeJSLazGkouGZFLqI4oZGWGpCgUlVE0
KDS0CJW2VVFpkKIoNNTz/eiP571en/f3e7/f9/v5fh936dk5WSMSExIS5vgR
eZEfx+U67qIbTUniYsd+ls+QS3eakYdLHPtFPstYetCcvOQjmfwUoCCFKEym
3zsh1zOOLFpQhJaOnZQbuJueZNDLvADv6gsZRlEuNftVPsf4OC/uh97mBdmp
P8hwitHK7Df5PBPivLhH+pgXYpe+iFspzmVmp+QL3BPnMcCsDJ/pK2If6Gtd
mN36Q+To1fhWH8FgPYWD+lOUoLX1afki98Y1WlfhcHwe2XpZPo99kg15XB8l
a/FD/J5sRqZ+tSzCFN6LZyIbsFi/TVZnOkfiXmRTZpFjPURWYipfxN7LRtzP
09ZjZG1mcNR6omzObC6wvlz+Lu+TG+M9kvWYGHsp0/k6rpGb9HLs1Z9gtH4h
P8bz5xq9KO/rDzNSr8F3cR8M1VP5Ul9NSdpY/yE3MSk+g4Fm5dmnr4x3hWut
i/GB/kh8NqVoa3ZGvsTkOC/eFa4zL84efQm3U5orzM7Kl+Oe47x4VyhDO8fO
yc1MoV88a8rS3rE/5Ramcn3sHeUoTwUqkkIlUkmjMlVIpyrVqE4NrvSZf8mt
TOOG2I/4XvMSfKgvjfeGmnQw+1u+wnT6x/3HtcSz5CP90Xgu1OIqs3/kq8zg
Rm42q8B+fVXsR3yvdUk+1h+LvdJr8n28P9yip/GVPl42Zo1+h6zDsXh2skW8
D3pHeV6+Rq5eP95HPf54VWUa31hPkE2YyQDrQbIiB/Qn43nEPVqX4hN9WXwn
telk9q98nZlkxzOiDp3jjyPbxKx4b2OvqUsX80Te0GfHuxb7Sj26mifxpj4n
9ir2kPp0M8/DW/rcuNa4TxrQ3Twvb+vzGBzXR0N6mOfjHf0BhsT10Ygs82S2
6/MZGtdHY3qa52eHviCeQVxfPEOz0nyqL+dOhllX5pC+NmZ6XX7SJ8uMxP//
ZzSx/g84Hqn7
               "]]}, Annotation[#, "Charting`Private`Tag$1648120#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nf8zVUcx/HLz6ahIsosq1JpG5WKsiL9UDRUQvbPjgihksrKzsiOjIzM
ConMSEX2Htl7j56fR3+8Hu9xzvfe+73fc869+eukJDdLlUgkMiUlEr2ZH2kW
fJw6kSiAfbqqWRKJxbQPfjJ2Az4xVhD7db9gp64YJurKIyP66n/W3YhP5UI4
oLssV8Kv8rtYotslP4RJcgVkQpY0icQbur/51uhn3kL5JvSQCyO3OU3l/fxB
41f4F7FUfsnYSL4u/wjfjb/C1+FnxPubv5s+jGa674xVpEPlrrSiXIS2k9vT
k/KbdIr8Oc0s30DflFvRDXJ1Oja+H9pGLkU/lzvTNLQ+nU2/8t6L6M1oovvM
3DL0K7kIn4dvxh/ga/ET+X9dc5VWxjJ9PTxqrLt8lV9qfA//CCbLlXCP8fby
qfg+caNcW97It0V/1yyWs6JnzMch3TLs1T2KKboX414xIJ637pb4DuR7cVj3
G/bpHsNU3cvWTOV4Pww0tkR/K76Q78MR3TW5Cn6T62O5br/8OKbJVeL1fd4P
5NP8TYH8lvwPX4Mfx7/PP8l/wafFe/wcOsjr/Upvw5fmlNX354vyefmUuJYe
lF+jk+TP6FHXXedfQkt5ufGq9JvYF/Q9+TH6sfwhvRbrmM6MPURXuP4A/wRS
5O/jWdCv4zXj/vkO/Bm+Nj811gF/M/82v4lvh6fkL+V0GOw1l9Js6GXsfuQz
3jzWBX8sNrFcVV4hN8BK3UG5OKbHPSArhsTz1WWPzys/gOO6ZM9sFR0az9PY
7ehj7EGc0K3G1xiG5cZyoK+xYjipW4N/dSUwI9YAbsFw/QpdTvSTH8Ip3e84
pCuJmbpk3IoR+pW6O2KfyA/jtC6V+3tZt1JuiLW6w3IpzJKroag5HeWz/G1x
v/I78ma+PUa6ZpV8J/rHuYD85rSQD/FnjKeWk+VVcQ/8KL4R/zj/CX+dr8vP
4teZf4Q+iea6H2Kv0GFyN1o9nhX9UP6AnpPfotNiL9Bs8R3ROnJrukV+hY6P
MzPWvvw07SV3oelpAzqXfhPPhObCAPOe1w+IPcvfxbfkD/NnzUuSq8mr5cZ4
Qv5UTuAP40fpU5gd+yrWhPFO8nk+ezwX+V15K98Bo+J5y7kxMPYDzunSxD3r
1shNsF53TH4ac+LecDtGx/PX5Yl9Gt8tzuv+xBis1eeNdR+fFRd0f2Esqlmn
4+h4rDMnH4aYUxwXdX/juK405upeRY5YDz5bXd02viMmmPeHnB9D5RK425xW
8hH+kvG0cg35d7lpvIfcQ06FDcZP0Gcwz1hlY8P5mrFn+M58B3pBfjvOgTiH
aE45G60nt6Hb4zPSCXKPWCtyadpb/ohmoA3pvNhv9Fvvu56/C03jXDH/BTow
9hJfgG/NH+Vfj981/rJr0vGv8Gtjr/Gj+WZx3/H7w6fGRvNO0mcx31it2N/G
u8gX+TtiPcj15R18J0yM5ybfjWFyKVzR/YNJ8dz0BTA8zmlc1VX3DDfRU/rn
sCDOYNyJ7+IZ6gpiRJyDuKZL731fjT0np2Cz7rRcBj/GvSJXrK84o3U7+c6Y
bN4GuRBGxn7CdV0G82rG+pebY4vujFwWP8lvxFllzkfyJT53rCO5gbyL74Jn
5D5yRkxx/UZaOPamsXLGBsU65AvG/wH+GJ9ARrmWvD7OLX4M34IvyffkO9Ek
Wi/OlDiH6Vavf5Z/PubKP5tfhY6Qu8f/kDgraVe5I70sv0Ony71oHjknbSi3
pbvlmrGeYp3xz/J9k/7/L9iIn0+nxnOkRTDKnPL6wbHm+UJ8W/44nwqZ5Nfk
P/mW2Obac/ILWCjXRt5YQ+Y10u3hu2KaeZvkezA6PgdSY7v+vK4cFsW5iXz4
Xr9Zdy/GyM8hCTv007FFfx/G6sogDXbqa1hzM+hMzMIP2GpeUYwzpyzSYpf+
gq48Fsfejd+IWJs+d2PdXr4bZpu3Tb4f4+UKxofE8+EL8+/z7eiJWEt0styT
ppMz09flv/hW2O21LsoV8Es8tzjDMUe/XfcAJsQ+R3rs0c/FPMzHgvjvHv/P
4z93/E/GDtc8iG9jLSID9uov6SpiiVwnzrzYNz5PE90+vnt8p3I/OTMa8wto
P7rI9f8BX3aMhg==
               "]]}, Annotation[#, "Charting`Private`Tag$1648120#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nccjVUcx/FrzxQiiYzsTSKiMoqsyoqiMitkpaRIoYwmyh7Ze4/MUPYO
CWU0yKrInvX+/fF5/b7f7znPvc99zjm/5+Zp2al+xySJRGJ60kRiaPJE4rOU
icTNFInEhyiEk7IN+BJf4XPjt+QfoTBOyTZigTwXpstqIx2Gyb+Q3ab7owhO
yzZhoTw3ZsjqID2GywfL/qMHoCjOyHbKKmED/yo2yxbxeTCTr4s7cISvgx/p
tzHCvCF8AgP5Yjgr28VXxkb+NWyRLebzYhZfDxkwUj5UlgSD+OL4S7abfxSb
+HbYKlvCP4DZ/NO4E0f5uthP98CoeI58UnzMl8Dfsh/4x7CZb49tsqV8Pszh
n8FdGB1rIEuGT/iS+Ee2Hd/I8mOu7FlkxBj5MFlyfMqXwjnZDozFOIzH1xhu
Tgp8Zk5pnI/njmWyApgnq49MmCAfIUuJz/ky+DeeK5bLCmK+rAEyY6J8pCwV
vuAfxAXZHv5xbOE7YLdsBV8IC/iG8bn0yzhF341jdD38RL+D/+jXcZme5PpR
dGoM5svG/qGb4jf6ovG9dBVsjT2XymfE9fQ19RUUlZ3j71X78z+4ZqVaONZX
ttBYGrU7X1ptFL+FbhFz+NN8VrUfX07Nwv9KPx3ryR+IvaH24suo7/IJtSNf
TL3C36cO5Cf77tFqGgyRp5C/QT8U+1h9Hr/Tl8zbR1fFNr4jrtOv4jy9x/gq
uggW8Y3jHvEb/wwO0j0xxbwxfFoM5cvhcjwzrI5ng8Wy53APpsY+kqXDl3x5
XIl7wTRMjz1mLD2+MvYwrsp+xLfxe7FE1gTZMCP2o+wODOMrxLrEfL4atvOd
sF+2hi+OpXzTWC/8zj+LQ3QvzIy9zWfAcL5inF/6BfwRz8j4fro6dkQPifWg
O9M31NfwL51dPiD2nPlr1RL4Rp5W/nasQ+wttWU8Y9mZeD7qh3x5NTv/B10/
zij/c5xn9T3+wah8ErVT/Cb1Kp9DHcQ/rM7yvRPoO5GbH2E8pdqNfyR6iNoM
x+O8yT+gb7jmJ/UJ7JR3wU26HS7QB4yvo0tiGf9C7CO6Fc7GHsRxugF+oXtj
tmsm8ndhJF8pPlN2EN/JSmG5rFncP+bIJ8kyYhRfGbdkh/B9nB+skDVHTsyV
T5Zlwmj+UdyWHeCfxC6+K36WrY/zg5X8i7gfJ/iGOEy/j3nmTeEzYwz/WPRL
ujlORO+Ie6drYDf/Rtwf3R4X6V/i3RdrhFV8Os+2B/1SnAu1Nf6KvSv/iM5F
/6k2QgHZkejDam++bKwLn1TtHHtIvRa/W/2Yr6DO931T6buRhx9rPJX6ZqyT
+nj0b/pFFOT/jJ6o9uET9CG1ZvQsOoO8J90tnqHaAZfow/G+jvvBav7lOLN0
G/xN58ZJujGO0n2wIM4znwXj+CqxX2Md+Kewh34TR+LdHv0J3/ItkAcLoxfI
smI8XzWeA47KN8vKYQ3fEnmxSD5Ddg++5qshGY7FezretfF+jHceZpqTDROM
V0fy6LfyLXH2sJZvhQewTD5Ldi8m8k9ET40+KN8aZw3r+NbIh+Xy2bLsmMQ/
Gecu9gVfC3vpt6LvmLct1hDf8W2iz9Ft8Q+dH6fo53CMzmRt3qf7xu+iu9DX
Yw/Tn8SZ8Hlz1PuQVzbZWGr1rThjag3+fOxDFOJP8lnUvvHs1VSxznRt7KO7
R/+J/wl8RXzPt0UBrJTPleXAFL5mfFec/XhnRN+PXh39Nnpf9Iw465hnfk5M
NfcppInzF+ca8+X3Y5qsVvTJOBfxvyP6Fdbzr6AgTvNN8CvdL9bP/XeN/kXn
oj+Ne1bXu/5/lcFsAg==
               "]]}, Annotation[#, "Charting`Private`Tag$1648120#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1He8T3UYB/CfSrREuxShUimigey91yV7Xpvca5S9995S0ZA2Cg2jorL3
3ntWRqFUSLyfP973+X6ec1/n9Tvn+31OtuTUpJQ0iURimT+F0iUSb6RPJIry
t/X3jKYDhSlCUYox1f8U4x/rHxhDCt/oNeJe9smzKM6bcnH+tV7CWFbKKTzB
GTmVb60bcx/75e1qb15gtrxO7UIujjOa8/r71EH8RSFOM4kSrr0Vld+5JB9U
h8YzslTerHbnAs9xkrFcZpzrq9RUzpGTo4yMZ+Gs67vV/hTgFBPpqL9AbcL9
HGY4B/R3qH14kTnyevU1nonfIJfkbeuS8Rusf2Q8nVio15QHOCh/QSmmyaW4
Yv0TE+hMacpQlnKUpwIVqURlqlCValSnBknUZLp7luY/65+ZSBcW6TXjQQ7J
X1KLd+QyXLVexhbrHuSN/ZBXx7vhydgPeY86gILxDuTFajIPcYQR8e70d6p9
eYnfmMBc/Q3q63EGeJYTjIl95k/X96uDuUjhOGdMjufhFdffVcvyB//Lh9Rh
ca5ZLm9Ve8a9yMcvcSbiHq6tUTvxFMcYFffR36sO5OX4bfJ3anMyxzPJu9R+
5GeevFHtSu44v3Jt3rMuxzXrFUyhK3V4X788CVbGzNKNuszQq0AaVsWc0j1m
WW7Bw3F+5fnU4wO5IjewOuaUHjHTckseiWeTv6I+M+VK3MiamC16xkzLrcjC
cflrGvChXJmbWBvnml405CO9KqRlXZxhetOIj/WqcjPr4xzSh6Vya7LGXsf3
hsZ8IlcjHRviHNI3Zkduw6OcjO8LTfhUrk56NsY5oF/MjtyWbLHXMcM05TO5
BrewKfaH/jETcjuy82vMJ834XE7iVjbHnjEgZkJuT444xzFHJDNLrsltbJG3
qb14Pu7LeK4ww7W1amee5pw8kOXWr/IYp2KOaM5suRa3szX2m0G0YE7MAHew
LfaWwbSM74pebTKwPfaRIbSKWderw53siH1kKK2Zq1eXjOyMfWQYbZinV49M
7Io9Yzht4zzq1ecudsf+MIJ2cfb0GnA3e2IvGEn7OGd6DbmHvfHeGRUzI3fg
cU7HDLLJuht5uCgfUIdQhLNM4Wq8R9euA+tiBi4=
               "]]}, Annotation[#, "Charting`Private`Tag$1648120#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1mW4VWUQhuFNSKcKKI2AhHRIdzdSSpeEUoqBBSq20h0qGNiUgJLS3Z3S
LQKCjaL3/HiumfeZtc857LW+WeTrMajVwCSJRKJVskTidqpEon/aRGJumkQi
O5KkSyTqyl+nTiSOqrnxDt9FXqL/R98Hf8rX5bL4UC4lT9P/qG+Iw/I5uTDG
yyPkbfqMeEFOi//87gHyPH0OfOOarljK/Sv3xV9yaUznjsuNcEQeiQQG8vO5
nJgtd0MZJMEgs2/5XJgjd0dZJMUTZgv43Jgr90A5vM+f4BrjqDwKyfAkv5DL
g3lyTyzjbsuP4W+5PD7gTspNcEw+LxfBBHm0vF2fCS/Kd/qu2+rTxfepVsFn
+vx8b31y1w9WF3FFuLxqUrUeV0Odb35Mnwfl5HfNs6kd5Abqo+bL9f/xJeTH
1fRqS66uesv8l/gsKssz4t+n9pAfNPtQPcU1RSq+Sdxf/oJaFBP5MfIOfWa8
FD8fd3BPyd/p8+FbuRcqYAZ/mmuG4/JYpMDT/PfcfVgg90ZFzOTPcM1xQh6H
lHiGXxzfFRbKfVAJH/FnuRY4KY9HKjzLL+EKYJHcFyu4BPpx/8iV8bF8Tm6J
U/JF+QFMkifIO/V3YqicIZ5PfVV8rk9tPkS/VF8QyXxn9eN74H9U8+K9eF7k
H/RJ0D9+juseimeev6GWj2eBm2mWV+0pN1WrmH+iP88Xi8/E71SbcrXV0+aX
9MVQQZ4c50LtKjdWJ5rv0t+F0vIw87vUdnEu4xlWq+GL+J74Pvo0PvOcuoy7
H8n5BnGv+ONqPozgH5dX6pNigHxbvhnPET6Sq8qf6i/oW+GMPAm7ubvxMpcp
9gL3vLxcXwiL5X6ohln8Ra41zsqTkQ4v8Cu4wlgi90d1pMeLZj/E+cFSeQBq
IAMy4iXzlWZFsSz2CWriM/4S1wbn5CnIhKH8Ku4BLI8dg1r4nL/MtcV5eSoy
Yxi/Ou4XVsTewSouGQbGDpRr4wv5J7kdLsiX5eKYIk+T9+iz4BU5M27pq+PL
2CPmL+vX6IvH+XOPGsa/mz+h3oeR/D18R/2T/OrYLyjJDTLLqLaK86D/NZ6f
eK65j+MMxy6Rm6l1fPZL/ZX4XfLDahq1GVdHvWj+k74EKspTY/+q3eQm6nTz
vfqsKCO/an53/Jw4V3EOY7fhqzhDfN94Xn3mFXVt7DGslE/K+TFKHiyv0d+B
J+IdhrrcV/LP+kdwKXY79nHZMDye/fjd3KvyOn1JrIrdhbVciviuYueiHve1
fFXfHpdj1yMLhvPruVJYHbsM9ZEVr5lt4EtjTewtNMA3/DWuA36KXYtseJ3f
yJXB2thbWMelxODYKWjIzZav6zviinwl7iWmyTPk/fp78Jqcxff4SJwz/b9q
TXwd55l/LK5z/RvqpjgHXFk1hdoorlXXmZ/SF4jdJI82v1ftJDdUh5iv16dC
KfmpOMtqa7memlz+LZ6H2C/yJ7Hn1V5yI5+do/7CdYrzzzeP+8b/HD8P0/mZ
8gH9vXg9/k2xY/S18E38PeZv6jfry2F97C1s4FLj6TgXaMzNlW/oO+NqvDOQ
HW/xW7jy2BB7CE2QAzmRC2+7Zqv5g9gYuwdNkRvvmG3jK2BT7B40wzz+JtcF
1+Idgzx4l9/OVcTm2EXYGDsXz8Q9QHNuvvyrviuuxzsAB7nseIPLGu8J7j15
h74Stsin5YIYIw+VN+nT4lk5JX7XV8Kn+hbm3+p/03dDOvehRdwX/mq8L+Ja
7n2z3Gr3+JzZITUHynJvxt+itpfrq9liv+lrx66SZ8dOj/+HyM3VfD4/Qr8z
9qlcOf4utXHcV3Wr+Rn9/fEekceaZ1c7y8PMNqvpMCR2It8mnkH9H2plzNK3
dN0C/e/67rghX4vdgw/kWfJhfU68FTsynk1upLxLXwXbYr9iC5cez3Gp8RC3
UP5D3wM3472B/BjF7+aqYnvsL7TCIv5Prmfs2XhvoABG83u4atgROwmt8R3/
F/donKF4T6AgxvB7uerYKZ+VC2GcnMN30SXOljrcbKs+A56PXY023Pfy3/pe
8RzETsf9GMvv42pgV+wvtEUhjDPbz9fE7thVaIfCGG92gK+FPbFP8DCKYILZ
Qb429sY5xSMoiolmh/g62BdnEO3xACaZHY5djv1x9tABxTDZ7EjsZRyIs4eO
KI4pZkf5+jgY5wydUAJTzY7xDXAozgw6YzF/i+sdz4/8FY5wufB27Bck4v0n
z9EX1vfTt1BLuvZ/YLmwvQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$1648120#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 9.37499980867347}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
cf4/2EqHiA==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{3477, 3485, 432, 1049, 861, 712, 602, 525}}], 
               
               PolygonBox[{{3483, 3482, 467, 468, 469, 470, 1081, 893, 744, 
                634, 557, 514, 1115, 927, 778, 668, 591, 1157, 969, 820, 710, 
                471, 1082, 894, 745, 1203, 1015, 635, 1170, 982, 1250, 833, 
                1221, 1033, 1270}}], 
               
               PolygonBox[{{481, 3486, 3484, 477, 1088, 900, 751, 641, 564, 
                521, 1122, 934, 785, 675, 598, 478, 1089, 901, 752, 642, 565, 
                522, 1123, 935, 786, 676, 599, 479, 1090, 902, 753, 643, 566, 
                523, 1124, 936, 787, 677, 600, 480, 1091, 903, 754, 644, 567, 
                524, 1125, 937, 788, 678, 601, 1158, 970, 821, 711, 1197, 
                1009, 860, 1236, 1048, 1277}}], 
               PolygonBox[CompressedData["
1:eJwVzTkvhFEAheFrSVSiGQSNoeIXIJaCBolCQY1BghAtv4CxNJZSSWIZjWAI
hVIYFDISjSiEUUhEbIl4pnhzznvud+8X7Z/oHs8NIeRgEquFIazg0ziDRuw7
rMwPIZYXQor3Zc/4Ba9DhI/wHb0Mm/zZnXbbPP/is1jiad6KJj7FT/QanOp5
OLKvy4ytB1d6BAfei8pB26288l1CvvP+7Pv6pf4g6+WZLMAHip2PyoT9XpbL
pPyTb3LL+Zp85E+yS57LIvzixb875II9Lb99v5dNHteX9Tu9Dc18mp/qtTjm
G/xV78Wht6r4kH7tbABxnuINKOFjfFevwDbPuNNpW+Q/fA4tSNqr7cP2Gx5D
Kf4BJHFCNg==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0LsyQ1EAheGdhBkFhUYtLqUkHoCSKIVK6QFEImq8AIW7klKFQaMQgmA0
0RlBg0KhMC4ZCl+Kf/611t7nnEni49nMRDSEEEEB6y0hrOHccIGehhBysRDu
XapfjOPLnrGv2CNYtA1gxnaqJ3Csl91L2PJ6Vc9iXq/ofejQc/q+3I4jOWDX
vskvtmHcyK349r4RXrXdcZQP+ZeXPLMuV+VnTnOZm1HDoPNZLtkfOclFbsQH
is63+d3+xmNc4Tb84dK3kzxlf3B3R/6UJ+UF+VbuR0luQqc9zwe2OPb0Lf1V
zuDH+0b1NTmGZecb+oM8hLQ+p5/JKZzoV55J2Qr131D/79CFmv0avc6mnT3V
v41u/APv4EKx
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{3483, 3484, 597, 674, 784, 933, 1121, 520, 563, 
                640, 750, 899, 1087, 476, 596, 673, 783, 932, 1120, 519, 562, 
                639, 749, 898, 1086, 475, 595, 672, 782, 931, 1119, 518, 561, 
                638, 748, 897, 1085, 474, 594, 671, 781, 930, 1118, 517, 560, 
                637, 747, 896, 1084, 473, 593, 670, 780, 929, 1117, 516, 559, 
                636, 746, 895, 1083, 472, 592, 669, 779, 928, 1116, 515, 695, 
                805, 954, 1142, 558}}], 
               PolygonBox[CompressedData["
1:eJwV0UsvnHEYhvE/tZKoU9DUKd2oT0DVTpwWbCRWGDWSVjcsWx+gxmkn7Fgq
igRDDK2lxDitZFZdlOopsSjV2kj6m8WV+7nu58n7TuZ9Eh3qGMwMIWQghumc
EGYw+SCE1qwQflgsOXjEV/BaV8hf4AT9ukrdlrvvKND14hhRuwq7Tf0Or+af
MKyr56P4iwldi+6bu3bzOeb4ol2JeRkDPJ/Xmo8wyiP82rxqPjKfyT5eLuOe
VShP0an7KX/JeZlw+1tmYg9P9Z/lR/lWPrf/J7Oxjwb9hUzJKRmzv5J3PC5v
eUqO82Z56d0PZRJtui+YNS+4uzcnzMXyA16Z8/Q15kPEeA8/TP/HvIxveN42
r+K7eKOr4yP4gzFdk+6ru/e8iC/hpS6XdyOZ/i66Ut26u2f8HW7S30HfqL9I
/27ehQNE9I/1a/pz/AdZoUvT
                "]], 
               PolygonBox[CompressedData["
1:eJwV0TlTk1EYhuETiIhFGhtrwFFUGhNQO2hFpFCRxY4foEUSRLECfwDMMGoW
rKSjYsSloAEFmWERl8rCuIAww4wUjAUqep3inud97vecL1+Suv5bV25WhRAS
GEchFUIRCbIJd/AD96pDuJAM4V08qJ/BIDYxZHfebt2uUy/hCPcYffw//jR3
Gxu4y5/j3/Kv9Yz+Bve5y3oRtfoEerkD566ZtzGpP7M/bn6JvH5KbzN/xJg+
oP8yT5u/x+9gbjGvec4x+R43uB25K6fkK+f2ZA3mkOYrclGOyA77fZnCEi7x
m7Iiy7Jg/1P+0V/Iw/KTLMse+ddnH5WruMpt4Yl5xr2EnEVDvIucuZFvNX/A
qJ7Xv8XfXG+Oz/G8ef2svoDh+E56u/kzSvojvSbO6I7v5s5Trl5/jix3Us/h
a/x/uAy34ly7/hCHuCKu87/5E1wWXzDAp/ll/qL+AEmugC5+n/8P2zlSmA==

                "]], 
               PolygonBox[CompressedData["
1:eJwV0btOVFEYhuGl0BkTGhLkqAmoCFwBFIqijQhaaWsCyCgzXIBwBSIgciih
hEJACA0oiBoaCwkohzFWmBjDScTEgCjPKt58//v9e+/Za/a5+6k7yZMhhBMY
Rf/pEAbwXvEbZy1bkEZrRgjlmSG80++jSPcI60jZldm91dfwZ/Ghul7c1v/S
j+uK+CRadYX8IdaQ1F3SzbtullfwebTrrvEb5i8Y4N38P57zer7nnnrzNwzx
MbtC8wRSvIBXmRfRwRN83zxmXo3nM5ea33hOtlzEPd0PuS1H5GvX7clMzKFc
/zXeI9vkVfs/8hQWcF2/IdOyX3bZb8sDPiX/xXPLHl4nf/rtLPkBdbrvckMO
ytF4XvN0PIt8iaQ5X19p/ognvJmvxG/CL8b39My75i0M81d2ZeY5PObVvMa8
jj7eyY/it+O3+K77X/B8Po4WXR5/gM/x2+ku6GZdd4U/xV9062v1O/pc3oRP
SOjPx/9Sf5l34BBd+pvxv9af4Y1YRrO+JL63fgZbyNE3YCm+h32x/bR+E8f3
8WV+
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWYVlUYBdChO6QbhlS6S7oxEZsWBVFRlFJsQATBRAEDQTrF7u4Wuzuw
u9u1H36s2fucC99zv3veO1M4cdrIk4oUFBTc4EdyoB9fyvWczD50oiiDXPtK
buAU9qUzxRjs2tdyI9PZjy4UpwQlKUVpylCWcgzx/76Rm5jB/nSlPENd+1Zu
ZiYH0I1RuVfu0RdyFBUYZu87uYVZHEh3Rtsvyr36IiZSkeH2vpdbmc0IejDG
fjHu0y/gaCrlWdj7QW7jVA7iOHuVeVpfTk/GWhfnfn0xZ+iNeUc/Js9Vr8mL
+rVUzrO0/lFu57R8vnUD3tBHcry+B8/oF8surNDnyj35SF8h+7C3Pk6W4AH9
QtmJJfqZsgnreNd6mezFdiblXGUtVvOS9aWyG5tZZb1AtmY9u6yvlH25PveX
c5c/yZXZy/OT7ZmT7yUb8qZ+MCfoVXg2n8M8fS8+1nsxXi/Jg/kOnKU35T19
cuZMr83L+mqqZH6sf5Y7OJ1DmGqvKs/pV9GbCdaleEi/iGOpmhmz90veh5wb
h9InM2a/NA/n+TOFapkxe7/KG/NsOYy+VM88ufabvCn3zuH0o0Zmx7Xf5c2c
zRH0pya1qE0d6lKP+jSgIY0opDFNaEqzzInP/EPewjkcyYDMu/0yPKJfkpml
ec7A3p/yVs5lFAMz7/bL8mjOP7NHizxLe3/J2zJ3jOZEe9V4Xr+aQZlx63I8
pl+W76c34/2cOTP0OryS67I71+nnyzZ8lnOS/TLbOQP5d94VebtcLDuwkXnW
c2Qj1vCW9eWyJ1sZY51fcNXZqV/DfL0ln+iDmaSX5/HMguzM0jxD2ZwP9OWy
N1P1mbJu7plXrZfKHmzJPVgvlG3ZwOd5LrI/OzLfmRH5j1wl75BLZEc2MT9z
KwtZy9vWV+SdZhtjrafJGryQ85RdWamfJ1vxqT4k74hegSfyTHLGegs+zLkx
S6/Ha/paWmZGrf+Vd+bzGMfQvB/2K/Jk7ifPlFaZW3v/ybtYwHiG0Zo2tKUd
7emQmfTv84fm7pw3ExjOFHuVeEpflu/IbOv6vK6vY5Heji9yjnJAkd1/tzpa
/w/gmL68
               "]]}, Annotation[#, "Charting`Private`Tag$1648205#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
hX6yjXxprOdn8ZfUrbFdnSW+cRxx3v8Beo3Qaw==
               "]]}, Annotation[#, "Charting`Private`Tag$1648205#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XccVXMYx/HbRqlEJZUG7aUlUhoUUWlRob1Dg/bee2rviRYqkbIq2qGi
jNAelKK9lPfzx+f1Hb9z7j3n3N95bq7mHet0SJJIJFYlTSRuJU8kkqRKJDqk
TCQupUgkpqIeHsFta0mtdbR2WZ6GF1EcCSSz1snaFX46XkIJ5NG/rc+C9XIP
JEFyfWfdVX4G6qMk8uon6R/AZ3JPJEUK/Zu6a/xMNMBTupW6MvhZLoV8usly
Vnwu90Jd3Qb5GZyKa0VK3VvydX4WGuJp3SrdY/hFLo38uilyNnwh945rRyp9
F90NfjZeRhXdat3j+FV+FAV0U+Xs+FLuE/eCO/RddTf5OXgFVXUf6crigFwG
BXXT5Afxldw3rh136rvp/uPn4lU8hkL66foc2CD3i2vFXfruulv8PDTC43Ed
8VmxjtSB43o47jY/H41RFoX1M/Q5sVHujzSBvqcugQVyEzyBIvqZulzYJA/A
3YG+ly4JFspN8YxujfwEfpPLoahulpwbX8tt5B/5VzAw9qW8kX8Wf8pd5MN8
W6SV08q9+aRYFN8jf8vXQzP5Wfljvlx8Hn+W/q7vwB/g59HmdCy9TstbK8bP
5qfSh2g/epq+Q7+x3pbuk+fQV+koeoUuo4PifaGb5Om0Gh1C/6Xv0r+sd6VH
5Pm0HR1Pb9J01tLxffhk6MWfpIv1zfjv+BfRXK4mfxLXiz/kjvJvfAs8Ge+y
PId/GJvlwfGu6r6Wn8NpOX2g6ysnj/uTW6BCvO/6ubo82CIPwT2Bvp8uRdyP
3BIVkQH3hlrvby0l3pNboVLMCP08XV5slYfivjhHP0CXCkvk1nhOtzbuAwfl
yjEzdPPlfNgmD4tZEr+H/DzOyBnjM3UD5TuwVG4uf8+/hDby8/KnfAUM4s/R
Q/pO/O98S4zjb9CnYtbwC/hpND/tT8/Q7dba8fv5ubQRHU2v0uV0eMwuulme
QavTofR8PBf6t/Vu9Gi8T7Q9nUD/oytoprif2E/ynejNn4o9Fr8Rv5uvH++B
XF1ex1fEYbmz/AffCk/HfJMX8gWwQ24v/8Q3xoiYifIWvgbOypmRSTdYvivu
J+415l7MOv0iXUHslEfi/jhHP0SXOq4/viPmXMw2/WJdIeySRyFLnKMfqkuD
9+XXUEO3Xq6EIzEvYtbp3pEL41t5dMxg3Va5Js7JD8Rn6obJd+OD2JfyHr4B
Xpdryp/xlXFUflM+yLeO2RIzUn6XL4IB8fvQ7+K6+J/5JhjDXwuNOc5v42fS
F+gweiH2MP3Hend6TF5IX6MT6a24V5o1rjn2iDyZpqV96J8xw+iH8d7QvfIs
2jB+J3qJvmHtBf7z2J8YHN9Hj+nf4g/FPke1mOfye3xRfC+/Lv/CN8XY+C+R
t/O18K+cDVl1I2IWYWXMSdTSfRF7Ccfj/YzZr1siF8NueRyyx2foR+rSY1XM
pXjnYtbrl+oewR55PB6Mc/SjdPdgdbyHsZ+RAzmRC7njWMeNdkwGfBR7PPYL
yuuX6YpjrzwBD8X5+jG6e7Emfu/YA3hSv1xXAj/IE/FwfJd+rO4+fBzPErV1
X8pVcCKee8xG3Qq5JH6U35B/5ZvhbbmRvIOvjeH8RXpe34M/HnsxjuNv0zxx
f/w4fgrNSPvGfwRdHPM95iH9QZ5NX6Yj6eWYbbSL9Tr0K7kqTsZvFfNY975c
CvvkSWis2ynXwQU5bzxX3Xg5E9bKXeOeY17rP9CVxn55MvLFc9VP0GXGpzG/
4vuRHwVQEIVQGEVQNJ6tcyY6/n6si/cCdWOmxz7XPYqf5Clootsl18VFuad8
IvY8JvGJuC4Us/Y/9RtOvQ==
               "]]}, Annotation[#, "Charting`Private`Tag$1648205#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FGUYBuClpEtCGg+dkhLS3d3d3Z0GdhOKCrbS3d0t3R0C0t0N3t+P
+3qf9zmzO3tmZyeqfZ/6vaNFIpHM0SORubEjkapxI5FDcSKRYRTkpe4s85jP
AhZSzXGH/X04hXilO0cn/V37D9QhLYv01fVH5BEUJsJIXVxmy50577jO9nvy
j9RlvD0TW+R0fConY6k823yHvvIfZl42sc++1KzIbhZ73xrmUf1Kc6Q5ySzA
Vt62jzbTsZ519nlmKXYQzf6uGY81zLHPMIvSRf7ZzMFOeYlZgf+cs4t5X/cT
U+XC1AvXxswczi2n5zM5OcvkfuE9vLam/Vg4L0WIzgV9V/0DeQL1yRD+V30t
/XH5PYoSg4v6ZSxnBStZxWrWsJZ1rGcDG9nEZrawldre94T3ep9ixOSSvpv+
oTyRBmRkm76O/qT8AcUZY08frqscK3w+OT5z5a78Iudkl3zZ67vLj8I1ZVr4
bmgY7gczC9vC/WSW4035czMFa1lun2OW4B/62/8032Iz++3LzErsCcc4X13z
lH6VOcqcbBYM5wn3ln2smYENgX2+WZrXwjUxEzBPnmkWo5v8q5kr3HvyFefo
IT8O/yuNwv1gzxrOL0fxhZySFfIAtntNPftp+UNKEJur+h3U97cz9o8oSRyu
6XfSwN/+tX9MKeJyXd9T/yR8NhqTiV36hvqz8ieUJh439L30T+XfaEJmdusb
6c+F3yFliM9NfW/9M/l3mpKFPfrG+vPhHqcsCbil38s+moTfSvgeKUdCbuv7
6J+H3zXNyMp+fVP9hXDNKE8i7uj76l+E75vmZOOAvpn+ovwlFUjMXX0//Uv5
L1qQnYP65vpL8ldUJAn39P31r+S/aUkODulb6C/LX1OJpNzXD9BHmGRvRU4O
61vqrsjfUJlx9oxslBeYZcJzhNfDb8hMyHy5Ow+8fmB4HjHZ3ppcHNG30l2V
v6UKyRilS8QCuQcPHTfIHp0p9jbk5qi+te6aPJqqJA/3ni4xC+WePHLcYHsM
ptrbkidcW/sbrJQHcsxxbezX5TFUI0W4X3VJWCT34rHjhthjMs3ejglyNrbL
ecP3IKdilTyI417T1n5DHkt1vgvPAjbJKcO9LydlsTzLLE7vcC+bucNvX37i
fYbKsZhun24Wob080cwevhN22Beb5cMzKjxLwndtpmYdq+1zzZLhMzM43FNm
PrZwwL7crMxeTjhvO/OmfrU5zpxiFqKG/L0ZFZ5X8kKzbLi24fcZ7gmWyH3C
70zOE95Tfuo9h4VnEjPsHcgX7jF7GtbIQzjpuPb2W+GaUZNUPNMP18dmpr0j
+Tml76C7HT4XtUjNc/1pztDR3+/oxlObNLzQj9DHYZa9EwXCvWlPy1p5aPgt
yfk5KK8wq7AvPL+8/n/KXSzB
               "]]}, Annotation[#, "Charting`Private`Tag$1648205#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nccTXUYx/EreyehjISSJHtklJVKpWSTlT0yMqOsjBAaZkXDKkIZJcoO
lYa9Z2Rki2x6P398Xs/z+T7n3jPuOb9z87ToUqtzkkQisSZpIrE5dSIxKl0i
MT9tIpEcj6VPJJrwYWkSibT6ovoh8uL8oD45GvLd/AHz6nwKT8aX6g/oS2AR
z2ZeQfYeb86v6HPhNX6Bb7Hv0XwBT4G3ZSVwSJYCjWR7eHL8wA/ykviWv4Kt
Pj9GvlCWEsNlJZEC28zeNVskT4URslJIie1m75l9K0+NkbLSSIUf5YdkpfAd
b4Edtn9f/p0sDd6RlcFfspR4WbaXp8Yy/hcvjcX8Htfgcdn7vCW/qr8P3XgN
s276f+WP6mvpZ8pf0Q/T77TfD9TFsraytGpZtalskDrK59KpxXgPdah5bfV1
PlJ9zPywPhU68cbmT6uv8rfVfeYPqs/yN9RPzBurg3gas+XqYVkZVJa34d/L
79U/of9A3opf0+dGd36R73LcY2Nbng6jZWXjfsIK+ZG4z7CEt8Zu24+TL5Gl
xxhZuTg3rJT/HeeNpbwN9th+vHypLAPelZVHeqySH5WVww+8LfbafoL8B1lG
vCergCOy1Ggi288zYDU/xsvjR57duVaUjeXt+HX9/XG9+SVe2Lw2/4Lvs5+J
+h/1d8YxmDWL3z6OTV88niv54/zvuMZoyp8x6xTPjjy//jn9m+qnZk3Ut+IZ
UjOar9Efl3eIZ0utoraNZ1RdZp5DrcR7q+PMG6j9+Gi1vfkNfR505T3NX1C7
8//Miujr6L+Ut9C/rd/vnCapy2SZ4rrIm8dvH9dLXyLuJfkT/Kg+LZrxg/wh
8+f5Z3E9+E/6E3H+WM474KYsL3rJLvMD9vchX87vwlhZRWTCWvk/sS+s4B1j
TbL9R/IVsswYJ6uEu2IdMfvYbKX8boyXVUbmeHbNDmOy+SqzLJggr4K7sU5+
UlYRK/mrcb/Yfop8tSwrJsqqIgvWy0/JKmEV7xS/se0/ka+RZcMk2ZM4JkuH
5rJDPCt+5qfjOcNqntO1qywbzzvzW/p88bvyK7yoeV0+ix+1n0/1P+nvQQWz
V/iHtsuoL6kfLq+j76OvJj+upkfn2Nasuto51i6zAvoa+n7q52ZN1cFxH6vZ
zH/Rn5F35FXUqmo72VB1jXmuyPnr6gTzhmp/PkbtYn5b/0C8B2KtMn9R7cGv
mhXT19PPlh9zXp/p1+rvxUfmd5qXko3gT/ET+gxowQ/Heotf+dk4LvzEuyLh
cw/K+8iuxfn77s/5Op4dH8uexj+yjGgpOxJrHTbwc/xJrOWvxX59fqp8vSwH
JsueifUivsNsmtnP8pyYIqsezyZ+k5+XVcM63g0nbT9d/ossFz6RPRu57E60
kv0d9wR+5xfi3LGe3+e8qsom8u48Cc/P+/Ka8Yzrr8uL6+vrv4r3kH543K/2
O0P9NdY22X3xbKotZG/F+hPPnVqa91RHmtdV+/J3Yp0yP6XPhC68tfmz8RvH
/aYeNX9YfYH3V6eaN1OH8Fxmf8S7L95JcW1jfYprJs+tf1I/Sd6D38EfincU
v8FL8AZ8Dj/tHGbqN+hz4zPz53FadhfaxH0U1wl/8oux3uIX3hNnfP4L+W+y
+/G5rEYcA86ancN5fGmb383zYKrZC7gfF8xmmf0hz4tpsheRBxvll+LZwq+8
F/61/Wz5n7J8mC6rGcchy4y2suM8LzbFuhzXFBt4byR17gXi/SC7yS/6vq/4
Rv4AZsTaZ5sy8Rvxl+I89HejHT/BC5q/yKfFMfDN+sv65+K+NOsQ1yPOT18t
nhn1Q7NG6oB4rs2S6R/Wd4v3S+xH7RXPpXrLvKTakA9U55q3UkfEe1S95Jjn
6DfJ28dzGWu62lI2WJ0Za3T8f4n3QvzPMa+nvsFrmZ1Ts6B9HLO8a7wX5I/o
a+qnx7XgW/RX9M/j9/hNzJ+SfcT78OS8YNyb/Db/z3HN5Zt5fnwhq43zsqzo
IDvJH8TWWK94DfzB++Kyz8+Tb5E9hC9ldeKdjm3ya/G+xZ/8DVyx/dfyrbIC
mCWrG+9NbI/nNtZGbORv4qrtv5Fvkz2M2fGucg5lZaN5ff2b+lGxhsa9qc+G
jmanYl3HDn4j1gZs4v1wzffOl2+XFcRXsvrx7GKn/Gb8vtjM++O67RfId8ge
wRxZg7i3Zffg1Xgu4z7DLn6L18IWPgA3fH6hfKesEObKGsa9LLsXnWRn4vfE
bn6b18ZWPhApnN8j8gGyRDwHvm8R36V/FPNs0wiXZNnjHSc7ywthD0+gjmxb
PGe+62n+MR/EU/JCcd/yJCjFG/F5+lv2861+t74wKpq14l/7XBZ9uXjHyV+O
e0mfI9bFuP/MXot3SByD/qU4dnWGWfP4384/UB8136tPEtcw3u+xzqsd+TB1
u3k+9ZlY39XJsS91IH83/ieap4rv4d3jf3xcd7U3v0NfWv9yHK++dazncW2d
03fqHlkRVIp1nH/ju7Lqy8d3yxvH/a3Pia78PC+MffHdqCfbwQcjtc8VjneI
LGn8RrLFfK++KObzJiiC/fKkqC/fyYfEOwzfy/bJimEBb4qi8S7AErP98uJY
yJuhGA7Ik6GBfBcfijSOpUisK7JkKMMbx/np2+jf0Y9Tk9r2f6SRACA=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$1648205#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 9.37499980867347}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 4.770486090583549}, {2., 0.}, {3., 0.}, {4., 0.}, {5., 
          0.}, {6., 0.}, {7., 0.}, {8., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 8}, {0, 4.770486090583549}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8647534907552085`*^9, 3.86475354592855*^9}, {
   3.8647567908559933`*^9, 3.86475681701962*^9}, 3.8647569048255167`*^9, {
   3.864756946324235*^9, 3.8647569747961226`*^9}, 3.8647570090021744`*^9, 
   3.8647571022013454`*^9, {3.8647571965171595`*^9, 3.8647572279830885`*^9}, 
   3.8647573174664493`*^9, {3.8647573533579617`*^9, 3.8647573761696606`*^9}, {
   3.8647574545135865`*^9, 3.8647574892234774`*^9}, {3.8649293126544094`*^9, 
   3.8649293294729385`*^9}, {3.864929696340597*^9, 3.864929753359049*^9}, {
   3.8649297897522106`*^9, 3.8649299064062624`*^9}, {3.864929985998371*^9, 
   3.8649302276847515`*^9}, {3.864930276931731*^9, 3.8649304511050725`*^9}, {
   3.8649304967512236`*^9, 3.8649305259137373`*^9}, 3.8649306161263914`*^9, {
   3.8649306589334664`*^9, 3.8649307153031297`*^9}},
 CellLabel->
  "Out[2197]=",ExpressionUUID->"138c9d4a-7150-4269-ab41-887b7ddf0a9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.12819487633350418`", ",", "0.09297557930235043`", ",", 
   "0.6552470768481096`", ",", "0.6552470768481096`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8647534907552085`*^9, 3.86475354592855*^9}, {
   3.8647567908559933`*^9, 3.86475681701962*^9}, 3.8647569048255167`*^9, {
   3.864756946324235*^9, 3.8647569747961226`*^9}, 3.8647570090021744`*^9, 
   3.8647571022013454`*^9, {3.8647571965171595`*^9, 3.8647572279830885`*^9}, 
   3.8647573174664493`*^9, {3.8647573533579617`*^9, 3.8647573761696606`*^9}, {
   3.8647574545135865`*^9, 3.8647574892234774`*^9}, {3.8649293126544094`*^9, 
   3.8649293294729385`*^9}, {3.864929696340597*^9, 3.864929753359049*^9}, {
   3.8649297897522106`*^9, 3.8649299064062624`*^9}, {3.864929985998371*^9, 
   3.8649302276847515`*^9}, {3.864930276931731*^9, 3.8649304511050725`*^9}, {
   3.8649304967512236`*^9, 3.8649305259137373`*^9}, 3.8649306161263914`*^9, {
   3.8649306589334664`*^9, 3.864930715373107*^9}},
 CellLabel->
  "Out[2198]=",ExpressionUUID->"b7b47c94-7ab1-4516-bad3-52be15a5f8bd"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.864757335247758*^9, 
  3.86475733656034*^9}},ExpressionUUID->"05d4e916-91c7-40e6-b858-\
0a7d07c220ea"]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"149fc050-1f06-4088-91f2-f3238d72a84a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 254, 5, 51, "Text",ExpressionUUID->"d5842f38-cc35-45d9-9af7-da158ecf4acc"],
Cell[CellGroupData[{
Cell[837, 29, 6246, 158, 444, "Input",ExpressionUUID->"aa2c8684-6e16-4bb1-a4b1-c0e9049a7f4e"],
Cell[7086, 189, 384, 9, 28, "Message",ExpressionUUID->"1f4d3e25-a583-460c-a129-126650944454"],
Cell[7473, 200, 582, 16, 51, "Output",ExpressionUUID->"530d5236-0895-4da9-a9ae-e66f4035e763"],
Cell[8058, 218, 222, 4, 32, "Output",ExpressionUUID->"efacb8cc-5b9d-4327-ac4e-c243c046f721"]
}, Open  ]],
Cell[8295, 225, 65043, 1596, 1787, "Code",ExpressionUUID->"fc3c1402-abed-4553-a13d-021194ac6f85"],
Cell[73341, 1823, 293, 6, 51, "Text",ExpressionUUID->"9f439e66-0252-4504-9415-cefa2fb91a2c"],
Cell[CellGroupData[{
Cell[73659, 1833, 8935, 264, 409, "Input",ExpressionUUID->"c113c91d-ba61-46bb-8acb-0d58082f1b10"],
Cell[82597, 2099, 579, 11, 32, "Output",ExpressionUUID->"804feefe-9b04-4ff4-b1f0-cfdaab08501a"],
Cell[83179, 2112, 70514, 1253, 206, "Output",ExpressionUUID->"3c8ecc16-f652-40b8-9ccb-28d5cd1bf38d"],
Cell[153696, 3367, 75489, 1336, 208, "Output",ExpressionUUID->"70b30d44-89f5-4a4d-beb5-a82938a154de"],
Cell[229188, 4705, 83448, 1465, 206, "Output",ExpressionUUID->"ae5139f5-2030-45ce-a24b-7257a2ffc70c"]
}, Open  ]],
Cell[312651, 6173, 258, 5, 51, "Text",ExpressionUUID->"717b448c-0568-40b7-93ff-966702325a00"],
Cell[312912, 6180, 34743, 855, 933, "Input",ExpressionUUID->"54ebfcf8-c8d4-4971-8be6-85cd58106294"],
Cell[CellGroupData[{
Cell[347680, 7039, 10189, 306, 523, "Input",ExpressionUUID->"5ee4d0c0-6ce1-4573-b81d-893d5180084a"],
Cell[357872, 7347, 632, 11, 32, "Output",ExpressionUUID->"3859f62b-be78-4da2-a4d1-1ae25ffb3fa9"],
Cell[358507, 7360, 417, 10, 28, "Message",ExpressionUUID->"3dcb6ca0-8edb-4f7a-b39d-83fd7ef59b34"],
Cell[358927, 7372, 269716, 4725, 404, "Output",ExpressionUUID->"aab45b66-a315-4f4c-a9e1-22ed33929b4e"],
Cell[628646, 12099, 688, 13, 32, "Output",ExpressionUUID->"574f5a73-a26a-431d-8c69-66f8b14fa91a"]
}, Open  ]],
Cell[629349, 12115, 203, 3, 51, "Text",ExpressionUUID->"796555a1-e709-40c9-8e76-66ea78266730"],
Cell[CellGroupData[{
Cell[629577, 12122, 11572, 300, 371, "Input",ExpressionUUID->"64c954a2-a20e-4e79-ac9e-42d8f28dce15"],
Cell[641152, 12424, 243062, 4285, 404, "Output",ExpressionUUID->"138c9d4a-7150-4269-ab41-887b7ddf0a9c"],
Cell[884217, 16711, 1070, 17, 32, "Output",ExpressionUUID->"b7b47c94-7ab1-4516-bad3-52be15a5f8bd"]
}, Open  ]],
Cell[885302, 16731, 151, 3, 28, "Input",ExpressionUUID->"05d4e916-91c7-40e6-b858-0a7d07c220ea"]
}
]
*)

