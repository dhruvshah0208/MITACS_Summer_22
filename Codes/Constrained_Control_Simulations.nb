(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    470466,       9542]
NotebookOptionsPosition[    468537,       9507]
NotebookOutlinePosition[    468943,       9523]
CellTagsIndexPosition[    468900,       9520]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Computing the Adjoint Equations given a cost function symbolically\
\>", "Text",
 CellChangeTimes->{{3.8647382131648855`*^9, 3.864738228348024*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d5842f38-cc35-45d9-9af7-da158ecf4acc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "Bugs", " ", "here"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "u", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "20"}], ";", 
  RowBox[{"\[Tau]", "=", "15"}], ";", 
  RowBox[{"\[Tau]1", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]t", "=", 
    FractionBox["\[Tau]", "n"]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xState", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fx", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x2", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A", "*", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", "+", " ", 
          RowBox[{"A", "*", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
           RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", "u"}], ")"}], 
        " ", "/", " ", 
        RowBox[{"(", 
         RowBox[{"1", " ", "-", " ", 
          RowBox[{"A", "*", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], "^", "2"}]}]}], ")"}]}], 
       ",", "\[Theta]2", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], " ", "-", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", "*", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", "+", " ", 
            RowBox[{"A", "*", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
             RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", "u"}], ")"}], 
          " ", "/", " ", 
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"A", "*", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], "^", "2"}]}]}], 
           ")"}]}]}]}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "->", "x"}], ",", 
       RowBox[{"x2", "->", "xdot"}], ",", 
       RowBox[{"\[Theta]1", "->", "\[Theta]"}], ",", 
       RowBox[{"\[Theta]2", "->", "\[Theta]dot"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L", " ", "=", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"u", "^", "2"}]}]}], " ", ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Cost", " ", "function"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqn", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"fx", ",", "u"}], "]"}], ".", "\[Lambda]"}], " ", "+", " ", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", "u"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eqn", "==", "0"}], "}"}], ",", 
      RowBox[{"{", "u", "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"u", "/.", "sol"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"u", " ", "=", " ", 
  RowBox[{"Clip", "[", 
   RowBox[{"u", ",", 
    RowBox[{"{", 
     RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]dot", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{
       RowBox[{"Grad", "[", 
        RowBox[{"fx", ",", "xState"}], "]"}], "\[Transpose]"}], ".", 
      "\[Lambda]"}]}], " ", "-", " ", 
    RowBox[{
     RowBox[{"Grad", "[", 
      RowBox[{"L", ",", "xState"}], "]"}], "\[Transpose]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fSymbolic", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"fx", ",", "\[Lambda]dot"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "fSymbolic", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.861902342328802*^9, 3.8619023425067463`*^9}, {
   3.8619023760720234`*^9, 3.8619024181895714`*^9}, {3.8619024838915834`*^9, 
   3.86190250318342*^9}, {3.8619026675159273`*^9, 3.861902682122262*^9}, 
   3.8619028766101365`*^9, 3.861902937842575*^9, {3.8619029852474327`*^9, 
   3.861903011510045*^9}, {3.86190326064746*^9, 3.8619032656028795`*^9}, {
   3.864737722444943*^9, 3.864737934826968*^9}, {3.864738068759104*^9, 
   3.8647381126010714`*^9}, {3.864738149206354*^9, 3.8647381993453064`*^9}, {
   3.8647382530321245`*^9, 3.864738281367056*^9}, 3.864738385972575*^9, {
   3.864738419632804*^9, 3.8647384267365303`*^9}, {3.8647385308402095`*^9, 
   3.864738561920263*^9}, {3.8647386241073604`*^9, 3.864738625081049*^9}, {
   3.8647386619882374`*^9, 3.86473899869847*^9}, {3.864739043396165*^9, 
   3.8647392140865345`*^9}, {3.864739296574133*^9, 3.864739299028347*^9}, {
   3.8647395267484655`*^9, 3.8647395340431304`*^9}, {3.864739577945079*^9, 
   3.864739661032486*^9}, {3.864740184684888*^9, 3.8647402025441737`*^9}, {
   3.864740263603631*^9, 3.86474026379557*^9}, {3.8647407876239157`*^9, 
   3.864740835905461*^9}, {3.8647408676742954`*^9, 3.864740950202881*^9}, {
   3.864742069748563*^9, 3.864742075366767*^9}, {3.864742204489438*^9, 
   3.8647422253447638`*^9}, {3.864752270286827*^9, 3.8647523496704206`*^9}, {
   3.864752389105799*^9, 3.8647524040910015`*^9}, {3.8647525828767815`*^9, 
   3.864752585871823*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"aa2c8684-6e16-4bb1-a4b1-c0e9049a7f4e"],

Cell[BoxData[
 TemplateBox[{
  "Remove", "rmnsm", 
   "\"There are no symbols matching \\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Global`*\
\\\\\\\"\\\"}]\\)\\\".\"", 2, 2, 1, 17533304191359290124, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.864753344064159*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"1f4d3e25-a583-460c-a129-126650944454"],

Cell[BoxData[
 RowBox[{"Clip", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Lambda]2", "-", 
     RowBox[{"\[Lambda]4", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"A", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.864752407264985*^9, 3.8647525872963657`*^9, 
  3.8647533441001463`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"530d5236-0895-4da9-a9ae-e66f4035e763"],

Cell[BoxData[
 RowBox[{"{", "8", "}"}]], "Output",
 CellChangeTimes->{3.864752407264985*^9, 3.8647525872963657`*^9, 
  3.8647533462704515`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"efacb8cc-5b9d-4327-ac4e-c243c046f721"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateGains", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",",
        "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_", ",", "uMin_", ",", 
     "uMax_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "K", ",", "S", ",", "x", ",", "data", ",", "xdot", ",", "f", ",", 
       "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", 
       ",", "\[Lambda]3", ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", 
       "bcs", ",", "eqns", ",", "sv", ",", "froot", ",", "xff", ",", "xdotff",
        ",", "xff0", ",", "xdotff0", ",", "\[Theta]ff0", ",", 
       "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", ",", "\[Theta]dotff",
        ",", "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", " ", 
       RowBox[{"{", 
        RowBox[{"xdot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"Clip", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
             RowBox[{"{", 
              RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Theta]dot", "2"], "+", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
         "\[Theta]dot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"Clip", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{"\[Lambda]4", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
              RowBox[{"{", 
               RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "0", ",", 
         RowBox[{"-", "\[Lambda]1"}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
              "2"]}]]}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["A", "2"], " ", "\[Lambda]2"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
            RowBox[{"4", " ", "A", " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"5", " ", 
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"4", " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"5", " ", "A", " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"4", " ", "A", " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["A", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"4", " ", "A", " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"A", " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Clip", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[Lambda]2", "-", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
                  RowBox[{"{", 
                   RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "A", "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {"\[Piecewise]", GridBox[{
                    {
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]4", "-", 
                    RowBox[{"2", " ", "A", " ", "\[Lambda]2", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "\[Lambda]4", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
                    " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
                    "2"]]}], 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "uMin"}], "-", "\[Lambda]2", "+", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "uMin", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
                    "\[LessEqual]", "0"}], "&&", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "uMax"}], "-", "\[Lambda]2", "+", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "uMax", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
                    "\[GreaterEqual]", "0"}]}]},
                    {"0", 
                    TagBox["True",
                    "PiecewiseDefault",
                    AutoDelete->True]}
                   },
                   AllowedDimensions->{2, Automatic},
                   Editable->True,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                   Selectable->True]}
                },
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
               "Piecewise",
               DeleteWithContents->True,
               Editable->False,
               SelectWithContents->True,
               Selectable->False,
               StripWrapperBoxes->True], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Clip", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Lambda]2", "-", 
                 RowBox[{"\[Lambda]4", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"A", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
               RowBox[{"{", 
                RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "A", " ", "\[Lambda]2", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "A", "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", 
         FractionBox[
          RowBox[{"\[Lambda]3", "-", 
           RowBox[{"A", " ", "\[Lambda]3", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
           RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]2", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox["xGuess", "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"froot", ",", "data"}], "}"}], "=", 
       RowBox[{"Reap", "[", 
        RowBox[{"FindRoot", "[", 
         RowBox[{"eqns", ",", "sv", ",", 
          RowBox[{"MaxIterations", "->", "maxIter"}], ",", 
          RowBox[{"EvaluationMonitor", ":>", 
           RowBox[{"Sow", "[", 
            RowBox[{"Norm", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
             "]"}], "]"}]}]}], "]"}], "]"}]}], ";", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Clip", "[", 
             RowBox[{
              FractionBox[
               RowBox[{
                SubscriptBox["\[Lambda]2", "i"], "-", 
                RowBox[{
                 SubscriptBox["\[Lambda]4", "i"], " ", 
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "i"], "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", 
                   SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
              RowBox[{"{", 
               RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulumMultiple", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "initGuess_", ",", "uMin_", ",", "uMax_",
      ",", "maxCount_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "frootNew", ",", "errorNew", ",", "InitGuess", ",", "error", ",", 
       "maxError", ",", "count", ",", "K", ",", "S", ",", "x", ",", "data", 
       ",", "xdot", ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", 
       ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", 
       "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
       "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
       ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", " ", 
       RowBox[{"{", 
        RowBox[{"xdot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"Clip", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
             RowBox[{"{", 
              RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Theta]dot", "2"], "+", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
         "\[Theta]dot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"Clip", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{"\[Lambda]4", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
              RowBox[{"{", 
               RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "0", ",", 
         RowBox[{"-", "\[Lambda]1"}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
              "2"]}]]}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["A", "2"], " ", "\[Lambda]2"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
            RowBox[{"4", " ", "A", " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"5", " ", 
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
            RowBox[{"4", " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"5", " ", "A", " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{"4", " ", "A", " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["A", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"4", " ", "A", " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"A", " ", "\[Lambda]4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Clip", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[Lambda]2", "-", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
                  RowBox[{"{", 
                   RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "A", "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {"\[Piecewise]", GridBox[{
                    {
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Lambda]4", "-", 
                    RowBox[{"2", " ", "A", " ", "\[Lambda]2", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "\[Lambda]4", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
                    " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
                    "2"]]}], 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "uMin"}], "-", "\[Lambda]2", "+", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "uMin", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
                    "\[LessEqual]", "0"}], "&&", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "uMax"}], "-", "\[Lambda]2", "+", 
                    RowBox[{"\[Lambda]4", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                    RowBox[{"A", " ", "uMax", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], 
                    "\[GreaterEqual]", "0"}]}]},
                    {"0", 
                    TagBox["True",
                    "PiecewiseDefault",
                    AutoDelete->True]}
                   },
                   AllowedDimensions->{2, Automatic},
                   Editable->True,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                   Selectable->True]}
                },
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}],
               "Piecewise",
               DeleteWithContents->True,
               Editable->False,
               SelectWithContents->True,
               Selectable->False,
               StripWrapperBoxes->True], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Clip", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Lambda]2", "-", 
                 RowBox[{"\[Lambda]4", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"A", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
               RowBox[{"{", 
                RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "A", " ", "\[Lambda]2", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "A", "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", 
         FractionBox[
          RowBox[{"\[Lambda]3", "-", 
           RowBox[{"A", " ", "\[Lambda]3", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
           RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]2", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox["xGuess", "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", 
      RowBox[{"maxError", " ", "=", " ", "2"}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], "  ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errorNew", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
            RowBox[{"error", " ", "=", " ", "errorNew"}]}], ",", "_"}], "]"}],
          ";", "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
      "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Clip", "[", 
             RowBox[{
              FractionBox[
               RowBox[{
                SubscriptBox["\[Lambda]2", "i"], "-", 
                RowBox[{
                 SubscriptBox["\[Lambda]4", "i"], " ", 
                 RowBox[{"Cos", "[", 
                  SubscriptBox["\[Theta]", "i"], "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", 
                   SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
              RowBox[{"{", 
               RowBox[{"uMin", ",", "uMax"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "K"}], "}"}]}]}], "]"}]}],
   "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, {3.8647525495264535`*^9, 3.8647525696120253`*^9}, {
   3.86475260002929*^9, 3.8647526595642357`*^9}, {3.86596996928654*^9, 
   3.8659701594146185`*^9}, {3.8659703544431276`*^9, 
   3.8659703692113953`*^9}, {3.8660402955691757`*^9, 3.86604029614599*^9}, {
   3.8660403348015175`*^9, 3.8660403464077725`*^9}, {3.866296402899356*^9, 
   3.8662964371022844`*^9}, {3.866296472111952*^9, 3.8662965493879375`*^9}, {
   3.8662965808157644`*^9, 3.866296660383009*^9}, {3.866296730146426*^9, 
   3.8662967412778225`*^9}, 3.866296790521883*^9, {3.86629690804784*^9, 
   3.866296916909971*^9}, {3.866296950595067*^9, 3.866296969683889*^9}, {
   3.866297046071162*^9, 3.86629704950605*^9}, 3.866297194165224*^9, {
   3.8662978456693335`*^9, 3.8662978905408087`*^9}, {3.866297990670397*^9, 
   3.86629799742721*^9}, {3.8662980701176796`*^9, 3.8662980718991027`*^9}, {
   3.8662999716031713`*^9, 3.866299976366629*^9}, {3.866300050026786*^9, 
   3.866300100607413*^9}, {3.866300227574314*^9, 3.866300233319454*^9}, 
   3.8663005419105635`*^9, {3.866300634061734*^9, 3.866300638285367*^9}, {
   3.8663095326732664`*^9, 3.8663095331121244`*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[3350]:=",ExpressionUUID->"fc3c1402-abed-4553-a13d-021194ac6f85"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListBadICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5919233888024076`"}], ",", 
       RowBox[{"-", "2.626560404936485`"}], ",", 
       RowBox[{"-", "1.8337732091632066`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8988421797170734`", ",", 
       RowBox[{"-", "2.781568090526754`"}], ",", 
       RowBox[{"-", "1.7208327942083077`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.5130003928325353`", ",", 
       RowBox[{"-", "2.7638782645015807`"}], ",", 
       RowBox[{"-", "1.5499618641831363`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.1258783007678108`"}], ",", 
       RowBox[{"-", "3.075660607934064`"}], ",", 
       RowBox[{"-", "1.8180933102904318`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.0862158325400353`", ",", "1.389077323652403`", ",", 
       "1.2418614212135708`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.410811763077299`", ",", 
       RowBox[{"-", "2.6799695626956286`"}], ",", 
       RowBox[{"-", "1.249504352429808`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.8018187254571911`", ",", "0.6312196180519329`", ",", 
       "0.3007314035275339`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.6639286656315342`", ",", "0.3762926167702396`", ",", 
       "0.9290478726251834`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.03706862009377243`"}], ",", "1.2622064778502988`", ",",
        "0.8466788889730772`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5434651973062383`"}], ",", 
       RowBox[{"-", "2.601835119680123`"}], ",", 
       RowBox[{"-", "1.7656478532020108`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.277167056780228`", ",", 
       RowBox[{"-", "2.939647560942354`"}], ",", 
       RowBox[{"-", "1.4975993973103163`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.591878596354511`", ",", 
       RowBox[{"-", "2.898678940703004`"}], ",", 
       RowBox[{"-", "0.8043365992636904`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.8881446664424688`", ",", 
       RowBox[{"-", "2.3394205463410316`"}], ",", 
       RowBox[{"-", "1.837011306641183`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.0744667175310116`", ",", 
       RowBox[{"-", "1.7285609705780498`"}], ",", 
       RowBox[{"-", "1.954902635840356`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9498789296971752`", ",", "1.4434997322554963`", ",", 
       "1.0211631207173442`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.9096980484776003`"}], ",", 
       RowBox[{"-", "1.6160359759348495`"}], ",", 
       RowBox[{"-", "1.9523905732877624`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.401393896381272`", ",", 
       RowBox[{"-", "2.488365977780391`"}], ",", 
       RowBox[{"-", "1.3431904393576986`"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.866299630299652*^9, 3.8662996355709457`*^9}},
 CellLabel->
  "In[3360]:=",ExpressionUUID->"1fcc698b-a09b-47ab-ba7b-71b38b3f1d76"],

Cell["Conduct Simulations with ICs following an Energy Criterion", "Text",
 CellChangeTimes->{{3.864753092867558*^9, 3.864753117490677*^9}, {
  3.8662984915032797`*^9, 3.8662985081328945`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"9f439e66-0252-4504-9415-cefa2fb91a2c"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"iter", " ", "=", " ", "6"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "40"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["\[Tau]",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], "5"}], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "50"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"uMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"uMax", " ", "=", "2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxCount", " ", "=", " ", "10"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["While",
    FontWeight->"Plain"], 
   StyleBox["[",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"EInitial", " ", ">", " ", "1.5"}], " ", "||", " ", 
      RowBox[{"EInitial", " ", "<", " ", "0.5"}]}],
     FontWeight->"Plain"], 
    StyleBox[",",
     FontWeight->"Plain"], "\[IndentingNewLine]", 
    RowBox[{
     StyleBox[
      RowBox[{"xdotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Min", " ", "=", " ", 
       RowBox[{"-", "\[Pi]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotMax", " ", "=", " ", "1"}],
      FontWeight->"Plain"], ";", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"xdotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]Init", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"\[Theta]dotInit", " ", "=", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"ICs", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
        "}"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     StyleBox[
      RowBox[{"EInitial", " ", "=", " ", 
       RowBox[{"Energy", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ICs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}],
      FontWeight->"Plain"], 
     StyleBox[";",
      FontWeight->"Plain"]}]}], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Plain"], 
   StyleBox["]",
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.6909899189385493`"}], ",", "0.6897150795907763`", ",", 
      RowBox[{"-", "0.7182564346929077`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"EInitial", " ", "=", " ", 
   RowBox[{"Energy", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ICs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"InitGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox[
    StyleBox[
     RowBox[{"(", "*"}]],
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
        "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data", ",", "K"}], "}"}],
       "=", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "InitGuess", ",", "uMin", ",", "uMax"}], 
       "]"}]}], ";"}],
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
     StyleBox["*",
      FontWeight->"Plain"], 
     StyleBox[")",
      FontWeight->"Plain"]}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "K"}], "}"}]}], "}"}], 
     "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulumMultiple", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "InitGuess", ",", "uMin", ",", "uMax", ",", 
        "maxCount"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox["time",
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1c", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
         RowBox[{"u1c", "[", "t", "]"}], ",", 
         RowBox[{"x1c", "[", "t", "]"}], ",", 
         RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
         RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
       RowBox[{"Filling", "->", 
        RowBox[{"{", 
         RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
          "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
       ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}], ",", 
       RowBox[{"GridLines", "->", 
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["IC2",
    FontWeight->"Plain"], " ", "=", " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}],
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.864752675691077*^9, 3.8647527331306915`*^9}, {
   3.8647527991195717`*^9, 3.8647528275444736`*^9}, {3.8647528874323072`*^9, 
   3.864753042532665*^9}, 3.8649293888446264`*^9, {3.8649295531191874`*^9, 
   3.8649295648353753`*^9}, 3.8649295977456713`*^9, {3.865970165240754*^9, 
   3.865970221278796*^9}, {3.8659702612339954`*^9, 3.865970266815208*^9}, 
   3.8659703861329737`*^9, {3.8660402426322575`*^9, 3.8660402551922045`*^9}, {
   3.8660403637391834`*^9, 3.866040412184551*^9}, 3.866040547895765*^9, {
   3.8660407146249704`*^9, 3.866040747831257*^9}, 3.8660409983884172`*^9, {
   3.866138849096942*^9, 3.866138903301705*^9}, {3.866228406682971*^9, 
   3.866228410933613*^9}, 3.8662284775323305`*^9, {3.866228543619212*^9, 
   3.8662285461723957`*^9}, {3.8662286718112483`*^9, 
   3.8662287782412357`*^9}, {3.8662960423260727`*^9, 
   3.8662961407272205`*^9}, {3.866296212746909*^9, 3.866296228992649*^9}, {
   3.8662966655063505`*^9, 3.8662966994303694`*^9}, {3.8662967599177895`*^9, 
   3.86629677221181*^9}, {3.866296820608144*^9, 3.866296891482202*^9}, {
   3.866296996654158*^9, 3.8662970034829473`*^9}, {3.8662971330160184`*^9, 
   3.866297139041068*^9}, 3.866297242166686*^9, 3.866297453845166*^9, {
   3.866297730186715*^9, 3.866297776982567*^9}, {3.86629789501536*^9, 
   3.866297899044056*^9}, {3.866298023433791*^9, 3.8662980234997697`*^9}, 
   3.8662981123280163`*^9, 3.866298275110324*^9, {3.8662984881303697`*^9, 
   3.8662984887291775`*^9}, {3.8662985716143456`*^9, 3.86629858315561*^9}, 
   3.866298684500807*^9, {3.866298782948938*^9, 3.86629878325484*^9}, {
   3.866298818734354*^9, 3.866298838539943*^9}, 3.866298902856124*^9, 
   3.866298961592111*^9, {3.8662997426612797`*^9, 3.8662997699104595`*^9}, {
   3.866299845024144*^9, 3.866299846180772*^9}, {3.86630014553487*^9, 
   3.8663001456978188`*^9}, 3.8663007267317376`*^9, 3.8663009364958377`*^9, 
   3.8663009881571145`*^9, 3.8663011598415403`*^9, 3.8663012802955494`*^9, {
   3.8663095434357834`*^9, 3.8663096077379694`*^9}, {3.866309642525708*^9, 
   3.866309668704233*^9}, {3.866309949997181*^9, 3.866309991432768*^9}},
 CellLabel->
  "In[3440]:=",ExpressionUUID->"c113c91d-ba61-46bb-8acb-0d58082f1b10"],

Cell[BoxData[
 RowBox[{"-", "0.2`"}]], "Output",
 CellChangeTimes->{{3.8647526895596356`*^9, 3.8647527350620723`*^9}, {
   3.864752803605135*^9, 3.864752829776758*^9}, {3.8647529038850393`*^9, 
   3.8647530463684373`*^9}, 3.8647533630670757`*^9, 3.8649291628801312`*^9, {
   3.864929361288589*^9, 3.8649294128498163`*^9}, {3.8649295358707976`*^9, 
   3.864929626635272*^9}, {3.8653451680663605`*^9, 3.8653451752940497`*^9}, 
   3.8653531498677483`*^9, 3.86597038726561*^9, {3.8660402494490557`*^9, 
   3.866040255498104*^9}, {3.8660403878653965`*^9, 3.866040421192644*^9}, 
   3.866040609439907*^9, {3.866040738482272*^9, 3.866040782384107*^9}, 
   3.8660410009465895`*^9, 3.866138877327964*^9, 3.866138986887122*^9, 
   3.8662284172785835`*^9, {3.8662284837313485`*^9, 3.8662285150463414`*^9}, {
   3.8662285528542595`*^9, 3.8662285758898983`*^9}, {3.866228676543734*^9, 
   3.8662287902374024`*^9}, 3.86629614746204*^9, {3.866296209686898*^9, 
   3.8662962508885612`*^9}, {3.8662963064245844`*^9, 3.866296325694347*^9}, 
   3.866296814516116*^9, {3.8662968594155817`*^9, 3.8662969266138306`*^9}, {
   3.866296978748954*^9, 3.866297007446665*^9}, {3.8662970571195855`*^9, 
   3.8662971024089255`*^9}, 3.8662971405065937`*^9, 3.866297202062668*^9, 
   3.8662972427385015`*^9, {3.86629742550434*^9, 3.8662974543440046`*^9}, {
   3.866297531410059*^9, 3.866297554508582*^9}, {3.8662977065383697`*^9, 
   3.866297714409822*^9}, {3.86629775856253*^9, 3.866297780129549*^9}, {
   3.866297911208119*^9, 3.8662979282086153`*^9}, {3.8662980046058865`*^9, 
   3.8662980240385957`*^9}, 3.86629807629568*^9, {3.866298113715567*^9, 
   3.866298120671316*^9}, 3.8662981829771476`*^9, {3.866298238719104*^9, 
   3.866298259638332*^9}, 3.866298324114462*^9, 3.866298584672119*^9, 
   3.866298686018314*^9, {3.866298766820158*^9, 3.8662987837566757`*^9}, {
   3.866298819434127*^9, 3.866298840037458*^9}, 3.866298904235677*^9, 
   3.866298962814715*^9, 3.866300108240942*^9, 3.866300146328613*^9, 
   3.866300239584427*^9, 3.866300487997015*^9, 3.8663005518513455`*^9, 
   3.8663006563935056`*^9, 3.866300728589136*^9, 3.866300937109638*^9, 
   3.8663009887419252`*^9, 3.86630116033838*^9, 3.866301281493162*^9, 
   3.8663095635012875`*^9, 3.8663096104210997`*^9, {3.866309653817053*^9, 
   3.866309673825576*^9}, {3.8663099535420322`*^9, 3.866309991922608*^9}, 
   3.866310043790819*^9},
 CellLabel->
  "Out[3446]=",ExpressionUUID->"73197643-67ea-4140-a54f-f14bd171ba90"],

Cell[BoxData["2.046875`"], "Output",
 CellChangeTimes->{{3.8647526895596356`*^9, 3.8647527350620723`*^9}, {
   3.864752803605135*^9, 3.864752829776758*^9}, {3.8647529038850393`*^9, 
   3.8647530463684373`*^9}, 3.8647533630670757`*^9, 3.8649291628801312`*^9, {
   3.864929361288589*^9, 3.8649294128498163`*^9}, {3.8649295358707976`*^9, 
   3.864929626635272*^9}, {3.8653451680663605`*^9, 3.8653451752940497`*^9}, 
   3.8653531498677483`*^9, 3.86597038726561*^9, {3.8660402494490557`*^9, 
   3.866040255498104*^9}, {3.8660403878653965`*^9, 3.866040421192644*^9}, 
   3.866040609439907*^9, {3.866040738482272*^9, 3.866040782384107*^9}, 
   3.8660410009465895`*^9, 3.866138877327964*^9, 3.866138986887122*^9, 
   3.8662284172785835`*^9, {3.8662284837313485`*^9, 3.8662285150463414`*^9}, {
   3.8662285528542595`*^9, 3.8662285758898983`*^9}, {3.866228676543734*^9, 
   3.8662287902374024`*^9}, 3.86629614746204*^9, {3.866296209686898*^9, 
   3.8662962508885612`*^9}, {3.8662963064245844`*^9, 3.866296325694347*^9}, 
   3.866296814516116*^9, {3.8662968594155817`*^9, 3.8662969266138306`*^9}, {
   3.866296978748954*^9, 3.866297007446665*^9}, {3.8662970571195855`*^9, 
   3.8662971024089255`*^9}, 3.8662971405065937`*^9, 3.866297202062668*^9, 
   3.8662972427385015`*^9, {3.86629742550434*^9, 3.8662974543440046`*^9}, {
   3.866297531410059*^9, 3.866297554508582*^9}, {3.8662977065383697`*^9, 
   3.866297714409822*^9}, {3.86629775856253*^9, 3.866297780129549*^9}, {
   3.866297911208119*^9, 3.8662979282086153`*^9}, {3.8662980046058865`*^9, 
   3.8662980240385957`*^9}, 3.86629807629568*^9, {3.866298113715567*^9, 
   3.866298120671316*^9}, 3.8662981829771476`*^9, {3.866298238719104*^9, 
   3.866298259638332*^9}, 3.866298324114462*^9, 3.866298584672119*^9, 
   3.866298686018314*^9, {3.866298766820158*^9, 3.8662987837566757`*^9}, {
   3.866298819434127*^9, 3.866298840037458*^9}, 3.866298904235677*^9, 
   3.866298962814715*^9, 3.866300108240942*^9, 3.866300146328613*^9, 
   3.866300239584427*^9, 3.866300487997015*^9, 3.8663005518513455`*^9, 
   3.8663006563935056`*^9, 3.866300728589136*^9, 3.866300937109638*^9, 
   3.8663009887419252`*^9, 3.86630116033838*^9, 3.866301281493162*^9, 
   3.8663095635012875`*^9, 3.8663096104210997`*^9, {3.866309653817053*^9, 
   3.866309673825576*^9}, {3.8663099535420322`*^9, 3.866309991922608*^9}, 
   3.8663100461620507`*^9},
 CellLabel->
  "Out[3450]=",ExpressionUUID->"c107329b-4c38-4e51-a4d0-6a3f08891061"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
vt4aHgd63S7khYoZr58k49ezZ88ywescEeit6PjV04QFDBVXtfWHkOCZFRFq
vvjf24mmzb7s6QCCR41vy3vRMLZGwodeRV44otU49+IuFxypkd6ZeloEvn5d
G9aB388hB2OT+W9JMHPBWOxCEzYg3Sw+2DbZBdp2KAuS8PPqyd3Tm20TeaHu
ju3rVaq54Oo2Q6u9P0WgziqbOD98/32g3ghxP0GCt/exPG/h/RrBF2oLe3y3
jQoHezaY9Ilbi8BGv2KB0/j582PJ+8GgpyQYVGR69RDej8ZYJn6zFOgBi948
vB+N9zMTL09lt/7khS+jVCQiX3LBl6CcHSdjSZC5SLbfAV8fpgwJQ+H2TpB/
OIh+K4yGReRSyy6a8UJp0VNf3F9wQYxX7yW5FBF4/lNwUBC+Hv4bfwgl35Ai
wvwxgj9M+OW1cZFwA8p/St2xvUhUqgsjfFNvrCYLJXioGOGbusJbUkC6TMMI
39TiNixgYD4N5UUpbUzQODXdg3xTKSKzmXz6ncgHlaOecE2mfhTxhJVGzedD
rScB4YMayqaRwbpZQPighh/0dTQXcwHhgzIVWVqQIYzX5z8+qG+kKeW2Z9PI
/6Tj+GPjWO8Y8j8pKV3mtbo4gvxPQxcVlNQzh5D/ycVVPOj4tkHkfxL8tHpO
KImN/E9Wwr4V/ddYyP/k054tegF/vgR/6P7+pugIft4R/OH6xrHwvt8sIBqz
vWarNQmqPL/ftAjvv8bzewcvNuD98seUV1mADVR+6DTIHCLD/uDq+Y74/E3k
Vw2O1/P1WfYDgl/Ud0g0TUqiA4Jf1F049jvMqwf5pRJEDJ0CNzcDgl+Uif7e
6LX1Ofi3/GLL0buR0QYVKN+K86H6pF5bCxYrfNtfNrARlBSY5a526MEI/1Re
2PunaQI0jPBPXcpxVokNx+eHP/4peePsuzc3UJFPqvSF3JmpVRxA+KS0nMiG
nwLwfvmPT0riw6yolRoXXD609P1zGi/Usz+j1v6ECwi/VF6W2JKlfLOIZ9zR
dGN2X+Yo8kfl9s1YzYsYRv6omnge2xfNg8gflV4w2ORr/xv5owTyTmRpjbOQ
P2qLd27vfrzfInhGacWZW3vxfmz3LcuOl3KLYdQu/0UfnrHA3W1h/BQJElwr
9CA6dj0brHztoK6TiNfbg6/75PD9uVHSh921lAxN1Onfvdh4fZH8kTJ2iwx1
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{489, 2742, 411, 412, 413, 414, 822, 711, 618, 543,
                 488, 858, 747, 654, 579, 455, 845, 734, 641, 566, 511, 866, 
                755, 662, 587, 415, 823, 712, 619, 888, 777, 544, 873, 762, 
                908, 669, 896, 785, 916}}], 
               PolygonBox[CompressedData["
1:eJwV0Msz1XEYwOGfakYOCTWWShe3/AUVuky17tAdCzMsmCFdp2lSEhKNMtMi
iyw00y63c+TyH7TIXSkrsZTuLWrR81s8877v53uOQXZVQ7R+UxAECbwlHgmC
GFPCa4o2B8E7H2gkhw2tiSx9wB0lkWltgGJ9yn2FXL5qd9mlD7pL2cqMNsg9
mtntfUgvI4lZbYj7ZHsb1s4QYU4bpoU93ka0syQzr43wgL3eYto5UljQYrTS
xj7vcf0821jU4pTo0+6r5PFNa2e/Puq+QCrvtdPair2Vg4xqR7QZ+zXy+a6V
a+v2J5zgoZajvbFfZDvV7t/mcz54j7o/29u4bU/hkL3BDOi3t5g7w5/j80fN
Wa3DvG7eMiM8pcBda/41H5svzGYzg2f88P0K84v+KPyOecdMpYeT4f/D3EI3
r8K/2cykw3dzzTHtEjfsiaTZa8w/Zi9LPlfqXrW3c5jL7gRe2se8H7PPhT+D
A9S5/5l9/PRe6d6w93Aq/F21PG3cXk46H7UybS38P1PEuHZcm7ffpJBfWif5
+oS7ggw+aRN0UeBtUqtkB8vaJP8BUi9mrw==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{376, 2743, 2740, 518, 593, 686, 797, 381, 494, 
                549, 624, 717, 828, 429, 462, 517, 592, 685, 796, 380, 493, 
                548, 623, 716, 827, 428, 461, 516, 591, 684, 795, 379, 378, 
                427, 460, 515, 590, 683, 794, 377, 492, 547, 622, 715, 826, 
                426, 569, 644, 737, 848, 459, 664, 757, 868, 514, 589, 682, 
                793}}], 
               PolygonBox[CompressedData["
1:eJwV0dtPj3EcB/BHrc2YsTkkYXNN57oVRiqubE5XCMVWGbOVpKxZo5RI5XQh
G/MPcNVJp8vuUqKcC1e4SOnA63vx2vvzeX+f57ff8zxbCs4dKI2JomgJQ7xY
FkUveaC4zz0GmWKzC88ySFZsFLXpBphkk+4MA2Q6a9X185WNuiL6yXDWolsk
y36Vcfbr+3RfSLQX0ke6/q5ugUx7Ne/Yp+/V7TI38IOjus+6DebT9JKma9bl
m1v4zQndvO6J+R+l9gxZxVvy7a+cPzPHmi+w03yT7xyxf3K+SlbzSDcbnt+c
IJfKMk6Zr4ffkqnyjnvaZDy1PNc3yTgukmdvliupCs9tr5e/5HE55/5WuZoa
2vWNclGWyHS5XFZwxTxGnrnHfWvlNZ7qYuR5dphXyErqzd84bP7o+ofmmfDd
7OvlSXpIsd92nhv+Kz85pvure2xeoNieJit5Q66923m2uY4pDuk+6OLNBXST
rGvSzZJqv8woe/Vduu3mG0xyUPdety58T7pI0t3SzZBir2CEHH2nbiK8h/Au
6WSbvlH3h2T7JV6zR9+hG2dNeD462Kpv0E2TZC9nmN36/xYebxA=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl03e8zmUYB+BjHnvvfRw7ISFRocwyj1GUskU4MhvKbBhlR2ahYVdGO1Fm
VlGirEjLTEaa1/3xx/V+7+d+38/vOb/nuU9St9SUAWkSEhKG+4gs6eNr2Ue+
LO+XuRlEX+sWMh392WrdXRamqbq+vCw/4CF1fiaqO8hs7FXfTHX1z3IFT5Fi
nYmdsR9N1f/KTcwgLaX0vpFzeIRmNNC7Ij9kEjXi+Xq/yJU8zQOkI0n/gJxL
P+6mJunJQEYSKe1338p59OceasWz9X+VqxhJZzKRrH9QzmcAzbklnq3/m1zN
KB4kM2X0D8kFpMZ5Ujv20D8t32J0nB9ZKKv/nVzIQFpyp95V+REvcGvsqXdG
vs0Y2lpnZpe6S5yX+j/5GTO5zzoHX6mzUk79vXwlzkydh0djP5meGJJt1j1k
EVqp75J/xnnKj2MfWYChvGh9r8wez+FL696yeJrrs1Yn3luejfuU78QZyXwM
Yax1O5mFgey27iWL0TXuL4aVz0VXWZCX1B1lTvaps1FefVi+yiBaWWdgu7o1
DdXX5CdMpm6cp945uYZxdIs5iP8PNqtnkZ0K1kfkIgbThkZ6f8kNTOE26uid
l2t5hu7koKL+UbmYIaRwe/wN+hfkOp6NMycnlfSPySUMjTvmjthD/3e5nufo
SS5u0D8uX2NYnCf1yE1l3/0gX2c47alPHvKSj/wUoCCFKEwRilKM4pSgJKVI
ojTJlOFGe5yQb/AYHWgQM00V352Ub/J4zErMdby//kX5Ls/HncdsUlX/R7mU
J2J+aaz3t/yUqTGPcR56f8j3GB8zFzNANf1TchlPxt1bZ2RHzAxN1P/IjUyL
uYiz0rsk32dCnJF1VvaoH6a5Oi1bYkZkIWarO8lc7I/fyRJUUN8kf5J95XLZ
WeZlMCNifmQiqXwR9yiLMoxO1tNjvugTsxPvHzMR9xz3Gecd5xpnFe8b+8V7
UZ3/Addsngg=
               "]]}, Annotation[#, "Charting`Private`Tag$863571#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GWYVGUYBuBhKUlFursRpLsb6e4SCxQERaWlRRolpJQU6VZaSrq7QVIa
JBXF+7v8cV/P+z7fnt3ZmXMmY/su9TtHi0QiWaIikS8MKaNHIvPNtYiig/2x
nMQe53Xtl8yDKM58XQndHnNnMnNb14NU+gX22kRnr24BPelFaucL9XWIwT7d
Qkrq99q7RP3/uu7oepNGv8hel5js1y2ilH6f/WOyclfXh7T6xfZ6xGJl3Ejk
gH4xpZ3t13UlG/d0fUmnX2KvT2wO6pZQRn/A3o3s3Nf1I71+qb0Br3BIt5Qv
6U8G58v0DYnDYd0yBpDR2XJdI+JyRLecgWRytkLXmHgc1a1gEJmdrdQ1IT7H
dCsZzBCyOF+lb0oCjutWUVZ/0P4JOXigG0pW/Wp7MxJyQldP97t5MCVYrSun
O2T+lJw81LXU3TGPoTJf6bLpfjY351XesT+R33HSeX37ZfMQepnjUzJ83jLC
LPNAmST8Hj9fXh7WDZPdZQ8Zl7HksneUf8uRcrrsL19nPH+6vpW8q/86XCP7
yISMo0p4P2QMRvNj+J9lMoa5Nrv8RdeCz8yxec38rnwqJ3PKzzWwXzEPpVS4
F+3RmG3+xXkF85HwO8hNJ/sL+T2PnLe23zOPo2p4rbocujXmliTitK6h7mp4
nynNGl1F3VHz5+ThsW44OfVr7a14nTO6tYwgl7N1utYk5qxuXbhPPCOVnB0L
3we8wRP9SHLr19vbkIRzuvVU1h8Pnwt5eaobRR79BntbknJet4Eq+hP2nuTj
mW40b+g32tuRjAu6Rrpr4bOnDBt1VXUnw73DmzzXjSGvfpO9Pcm5qGusux7e
T8qySVdNd8rcm/x8aP9H/sBfztvY75u/oRpjdfl0v5rfJgXv2Z/JKVxy3sR+
wzw8/F5zAsqZu8oo5pgHyaTh9/j56vJ0uBfD+2CORwHzR/JfOUrOkANkYiaE
e9x1beWD8Hfkt7KvfJVvqB6eTRmTMcwLz5hMzsRwv7v+Tbk53D+yQ7hn5Cuk
NL8vn8up9Av3efgOcE1T+YduBOXpZo/OXPNm5zXMZ8JroSCd7S/lTF44b2d/
aB5PjfC+6vLrtoTvBlJxWddMdzM8x1Rgi+4t3dnweijEP7pvKaDfGp5DUnNF
t5Wa+nP2LynMv7rxFNRvC58babiq28YECjnbHv5/0nJNt52JFHb2m+4D0nFd
9xuT+I7JrPbMTJFTmcZ0irhuh5/vSHpu6JrrboXPlors0NXSnTf3pwgvde3D
95Z5Am+F7whdUd1Oc6fwXJrjkCG8LvlX+GzktPB/y0Th3gifmetayNv60VRi
p6627kK4tyhKJNz7+mL6XeF5ICM3dbuYwUxmMZs5zOVH5lHcdbvDvUsmbul2
U0d/0T6QYkQLz4/ukZxITbrbY/GTeahMwaSwu/4/ujkZAQ==
               "]]}, Annotation[#, "Charting`Private`Tag$863571#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hf8jWUcBuBjEzIiIzskGlb2zN4ZUUmyKrIVLaloS1NSyN4zysgIWcnM
JrKSnS2z6/vH9fnez32e9/c75z3PefO379Gse5JEIlEsaSIxPFkiUTZFIrE8
eSIxw+xgDjXzspB7rAeYaZjLNOtx5oP849ou5kXd14yQC9NYHmzezQJ5vX0t
5P3yW5TjPeuM/CCnoK+cYKz8FN+6ppz1CrkjuTiue1F3SR5GE37XPa47IL9N
eVLynb68fqXcidyc0G1gBCMZxfeMZgwV7P/VvufIw0ndRsZS0WurdM+Tl1O6
TbTU/2X9DhVIFfdHX0m/Wn6BfJzWbaaV/qD1QCqSmvH6yvo1cmfyc0bXVXdZ
/obH2KJ7QndIHkQl0tBPl4Rxcmsm2FfFeq3chQJx363vYLp81uvd5CvycEbK
99FU/sTMFt+9vNW+J+XD8rvxncgFqSy/b2bixzgX1hPN4iyL/2P9ipmUOYy3
Hm0WZTFPW39m5ozzEZ31FLNUfN9M9H+rmuv0M80X43yZ+bg3vmczLTPi3pkP
8a9ruptX430ySi5CM3mImZ1F8h/2PSUfiTNIFT6wzsw8OS2vysmYILdhkmuq
Wf8md6Ug53Q9dP/FWaM523StdUfj/lCVdEzWV9evl7tRiPO67Tyt/zveA9VI
H/dC/6j+d7k7hbmg20Eb/THrD6nOnUzV19BvkHtwHxd1O5nGdGYwk1nUtHej
PT0pwiXdLmZTy2ubdL24n8u63TwTv3frj3iUDMzR19ZvlntTlCu6PbTVH7f+
mBpk5Ad9Hf0WuQ/FuKrrqbsmj6AFe3XP6k7Ig6lJJubq6+q3yi/xAP/peumu
xznmcfbp2ulOxnmmVtwv67vivMqZeU1OHmdNfobP41nHEnme6+vJf8gvM0zO
H8+8+J2b6ZgpX7Ovt3wjzhvfy/fTUv7UzMF8fo4zYJaM5yx/uq69eUo/2xwS
Z8gsFHupHffZzMJPIc6gWYJf4nNYv26miOcnk6zHmMXi/dPW+gszF0vjfJil
47P7v/XNbbq+8VyRC8TvRx5opmeWfN2+PvLN+Ey0Yr+ug+50fDbqkIU3dCmZ
LD/LT/Y1sN4u9+NhbugO0FF/Jn771CUr8/UN9TvimUFxbur+YgGNvLYzfpOU
4JbuIAtZxM8sZgmN7d0V3y0lua07RCf92fiOqcfdLNU30e+Oe0kpEhzWPxfP
k7iH1Ccby/SP6ffEZ6Y0g6zvZLacJM6kfMsczRMccc3zunPylzSI34N11jgX
cnb6y6mYIo81H6Bd7Ddzx/NUnmY+Et+9v9fU3KubZfY3h8czMZ5tscf6XTND
PMvi2Ws9wXw4zgFJ4zybt+O88CRH/c0XdOflr2hIDpbrm+n3yW9ShmT8rV/B
Sn5lFatZw1rW0TzOuL0DKEtyjuk76y/IQ2lEzvjbutRMldvHe5DzxGeVp5tl
WBnPXtf/D3EdJzM=
               "]]}, Annotation[#, "Charting`Private`Tag$863571#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfcjmUYxvEHWSWzIpJRRoiQkS2UEUohJCJlv2bZ2VRoFxGVdmZGy87e
WSFbWdl763v+8fscx3Fe130/9zWfPK2SGnROlkgkZiZPJJamTCQWpk4kCmBa
qkTiOWTFRfV9ajWxQe6JslimvkitIKbLDZENl9T3q9XCRvk1PIbl6ovVHsIM
uRHuxXX5ZfzHv4fL+h2Qa+NP+XWUQ7o0iUQPtWv8F1ih3xK5EGbKjeN9+gyS
0yC7fIO2wXH+fVzxzEG5DjbJvZDXM2/JmVBevlPuyV/na/BT+S/54vw4Pjee
5X+nK73vD1oYjdV+irmhn8uv0ufl7HSw3IKmjXmhM2kSzaH9Jv8Kmskn5Kr0
e7kD/UAuQj+UW0d/+jT9hV712//Qp7BZvwrqX/G9+Qf4t/nMqCCnl1/jb/CT
UUL+VM6DVd6zlBbBLG1NcB9uxRhwkv8Q1/T7V66LLXIfVMRq9WVqD2O23BQ5
Y13V12C5elHMUWuG+2Nd1NdiHdZjAzbiT2zCZmzBCs8Vw1zPvIBcMV/qh9Tq
YavcF5WwVX2l2iP4WW6O3EgYa1u1U/xHMS79Dsv1sU3uh8rIoN/rajf5r7BN
v1Vycfwiv4gc+gyRb4+5k5PJ7fjT/MfxWzgSa4S/Yn60f8335x/kR/FZUEXO
KPfib/FP8NP4r/mS/Hg+L57j58W7fMtqWgLPq/0aZ4p+IbelLWLN6FC5Jb0j
zk/sR9qF5tWenLaXX6Bn5MfpD3JH+on8MP0oziK9jz4Tv0OTaTsaGdtjrtW/
4Qfw+fjR/F2oKmeSe/MJfCNvjz3Al8RvcsvYm/EtOKbWADv4N+J7sCP2hdqj
+F1+KeYNKbBT29+xZ7SVwjy1VvENuA3/xbnETn4gqmFX7C+10pgvt0Z+pMTx
mF/8zQ9CdeyOvahWBgvkl1EAqXBCrSF28YPjbsCe2LdqZbFQboOC8b3moYPa
WX4sUuOk3Ai7+SGx5tgbe17tMSySX8FDMR7Pd1Q7x49DGpyKOwZ7+KExDn3G
yHfjSTmz3CfWC9/K++Is8eWwWH41zqU+w+R0cW/GPMid+PP8pygqfyznRFr5
dOw37I0zou1bfljMCf8Of0+cQ34uramehe/Lv0iTx3fR6bQz/U77o3RC3Hf0
gZhPOp92p/vj3PPl0UReon85+qXcLs5w3B10uPwSvZPWobNo4VgjvjN/Idae
/5EfzxeL/c3fH+dWPhPvxz5+eKyX9nflrKgl3yX341Pge/lA3EVxj+IPuR2K
4A6cVWuK/fwI1MZB/beqVcRSuX2crdgD3pukdpGfgHQ4JzfDAX5krL0+78nZ
Ymzy3XJ//jb8IJeSP+MfxD9+ZxuthGXaymubzHeIe5IfwafHU/xsWjT2Ed+F
b04vxZ6nU+RO8V75ETpWbkNzxfmkv9FuMd/az8f9EWOWD8pVYl3l9vRNuRB9
X25F76X16c/xDdru4QfwKWOv8DPoj+ql+Yl8PvxrTH/RyliurSNyax8pZ0Ax
Oa3clb/MT0R6XIgxxZzwb6Fw/HfK2VFXziq/wafCFPmQ39nOV8EKuVOMHbfr
103tCj8JGXAx9nN8G/826uGw53fEnYeVcmcUR0ZcUmuBQ/wo1McR/XeqPY5V
chJKxH2Jy2otcZgfjadxNO46tWpYLXdByTjjOKZtl3p1rJG7xrmKs4crcTZw
hB+DZ+Je1H+3Wg2slbshT6yXnDHmh59Du9JSsa9pd/kq/3mcB1yNNcVR/h00
wHHv3aP2BNbJ3WMtY8/GXantJE7hNM7gLM7hPPbG3YD1+vZAmdgfuKbWGsf4
d/EssvmegWqpMTX6ypP4/GjEL6A96AXv/R9HeWKm
               "]]}, Annotation[#, "Charting`Private`Tag$863571#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WW4VGUUBtABpAUF6VA6paQ7pZUu6ZQWg05JFWkQ6e4uaaRLBKRLEJSQ
kBKQdn0/1vPu/Z5z5k6cmZu2xWc1O0eJRCIlo0YiXWNFIunjRCKLY0ciFXlh
38sCyugP6D4lJVd13cigX2KvxEv7PhZSVn9Q15ZUXNN1J6N+qb0yr+z7aaD7
w96PD1ikK6f7xdyO1FzX9SCTfpm9Cq/tB/hEd9nen7ws1n2oO2Ruz7t0s7+U
U7jheGv7bfN3lKCnLrNuubkqET6zP5bjOeh4Q/sV8wCGmxOSz9xbRmWmeYnz
ypt/NXfgG/NbvGfuLl/JuXJqeFyZkhX87bo28o5+phwuR8rE4f2lpP1rGYv5
gf3H8Lisopfrs4TH0k+VH8kh8k2imLvIJ3ICY8zJwvvrmkbyz/DY5KePPRqz
zEsdr2A+bO5IGm7qPtX9Y/6eUuH167LqVpo/JiqHdMuoqD9i70Rabun6kC08
b3s1ovGrbjl9ye7Yal113uCwbgX96M8A3nfOGsdqEJ0jupV8TQ7H1upqEoOj
ulUMJKdj63S1iMlvutUMIpdjP+lqE4tjujUMZghDye2c9Y7VITbHdWuppD9q
70w6buuGkUe/wV6XOJzQNdb9ZR5IAdbpKut+C/cc6bmja6u7ax5B6XAv6T7Q
bTTXIy6f2/+TP3DS8Sb2q+ZB4fMxv0NBc1/5BrPNE+W74bU6v4o8ppsuu8hv
5dvhN4AM9h7ytZwnp4X7R6YKn3W4B1zfTt7Tz5Ij5SiZJHzHKRNeo4zNgsA+
SabhW9fmlZt09RlqjhfuV/MX8ml4npxyXlP7NfNgCoXfCXt05pjXO17VfDy8
F2Tkrq697n54PpQN33NdPt1mcwPicVq3gY/0J8LfJRP3dMPJr99i/4T4nNFt
5HtGMJJRjGYMYxlHAddtdX5D3uKsbhMf60/avyQz93XjKajfZm/E25zTbaaa
/pT9K7LwQDeBQvqf7Y1JwHldM9318J2nMFt01XWnzV3JykNdB90D82jKhftG
V1i33dyEhOH52Z+F3xcuON7cfiN8RhShvz0Gc81bHa9hPmPuFt5ncwKymXvK
CNPD35Gp+df5HeVD3Ww5JjwXmZQPw30r47AwsE+WacPvARNdW0Tu0E+TTeUw
GZ9F4V4P75V8LufISXKsTM4yfnd9i/Bbq58hh4XvlkxEUfMAGZN55m3OrWk+
a+5OdnqF31JmmB853im8nvA3KB/eL11R3U5zMxJxUddSdzN8fynGz7paunPh
+8X7PNZNoph+l705ibmk205t/fnwnpKDJ7rJFNfvtrcgCX/odlBHfyE8Z3Ly
n24KJfR77C1JymXdTuqG98fem1w81U2lpH6vvRXJwr1kfxE+F8aZU7CcK85t
JW+F3xCKs0tXT3fR3IfcPNNNo5R+n701yflTt5vpzGAms5jNHOYyj9Ku2+/8
NqTgL90e6usv2fuSh+e6zrpH4XlSIfx+2OOGe8U8RaYL/0OY79z/AZeqOdA=

               "]]}, 
             Annotation[#, "Charting`Private`Tag$863571#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
BnlM8t5/vnDeFT/+Hz/Gn/s=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{563, 3266, 3264, 704, 643, 603, 1015, 901, 805, 
                725, 664, 1034, 920, 824, 744, 1050, 936, 840, 1068, 954, 
                1088}}], 
               
               PolygonBox[{{3263, 3262, 549, 550, 551, 552, 984, 870, 774, 
                694, 633, 1025, 911, 815, 735, 593, 1013, 899, 803, 723, 662, 
                1033, 919, 823, 743, 553, 985, 871, 775, 1053, 939, 695, 1040,
                 926, 1074, 830, 1062, 948, 1084}}], 
               PolygonBox[CompressedData["
1:eJwV0dtPzmEAB/CHsolQqYTNmIvKBYtpKhWFS4cohysi5JAb53+gUi5wx1Yq
IjObC9MFm0NvJ93TJTbnOUflxue5+Oz7/T7Pu72/3/suqT1R1TA1hDCFBI9T
Q3jEXodreJcUwkky6bMbmc4TezNf9Tb2UcR7Z6fIImE3kcJTewvf9HZqKWYG
M3nmbivf9evsp4RUnjvfxg+9gwOsZRZ9zqv4qXdSRymzSTjfzi+9i4OUMYc0
+t3t4Ld+g0OU88HZabLpt5tJZ8CuZky/yWEm7EZyeWmv46N+hnkM2BdISg7h
kl3AazuDQb2GP3p3fFefuWoXU29PyibyWOzunnzlPFPv1FfLCpkvH8oyud79
J/0sy+0cuUjelUVyML6LbLdXyfL47PKBLJUt7pPlZXuFXCmXyvvxueQb9zmy
2y6Um+Qy2SvnuhuSO/mrL3Teo9+K/5V+TS/hiP1PNsdnZ9TOct+lV1Jhf5bn
mM+Q3co0n7kSn5u38XdgWN/FuH6bo1Tyxdl5FjBsX4zfwQt7NxN6D8fYQDYj
zvcwqd/hOBv5Dx46YGI=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{514, 3265, 3260, 669, 749, 845, 959, 519, 646, 
                707, 787, 883, 997, 567, 607, 668, 748, 844, 958, 518, 645, 
                706, 786, 882, 996, 566, 606, 667, 747, 843, 957, 517, 516, 
                565, 605, 666, 746, 842, 956, 515, 644, 705, 785, 881, 995, 
                564, 726, 806, 902, 1016, 604, 825, 921, 1035, 665, 745, 841, 
                955}}], 
               
               PolygonBox[{{3263, 3264, 784, 880, 994, 562, 602, 642, 703, 
                783, 879, 993, 561, 601, 641, 702, 782, 878, 992, 560, 600, 
                640, 701, 781, 877, 991, 559, 599, 639, 700, 780, 876, 990, 
                558, 598, 638, 699, 779, 875, 989, 557, 597, 637, 698, 778, 
                874, 988, 556, 596, 636, 697, 777, 873, 987, 555, 595, 635, 
                696, 776, 872, 986, 554, 663, 724, 804, 900, 1014, 594, 736, 
                816, 912, 1026, 634}}], 
               PolygonBox[CompressedData["
1:eJwV00dI1mEABvDX0ThIQUFqzk8NIjMMrISKCipLbdDVyrK6Zrug3bFhSzsV
FCRBw5UGHeraoZwNoXXKbqaNm6vfe/jxPM/7fnzw/0airn7HweQQQhJveJUW
wmuKHBZSwHZO0cW0lBAOMEjC3sZJOkl1tp9P5NtbOcFzUpzt4yN5dhMD8f3t
S/xji32cDpLtOj6QazfST8K+yF+q7e8s0RsIqSEcs9tJsvfynhz7J8v1O8z0
utv2Ov0Bc+0+O1+/wB+q7A2ymXT33+w2vUAvkdeY4mh8PrnA+Wq5VN6Ts2Wb
u3L52M6WQZbIPXIgnrlfY7/Ui2WFXCEfyUw55H6l7LCL5DJZKpvkDHnL/Qt9
ob5Wlsn7co7sdfcsftZ6njzPbyqdr5cPmefuq90av0t9sbzKJEecr5J3meWu
1Z6i1u4nS/9Bmd7IdK+5afeQa59jlM32F4r1K0xw2G5hkt12H/P1G3STY59l
hE32ZxbplxnnUHw2Jthl98bPS7/OO7LtM/yiwq7nKePsdNZDht7AW7Ls0wyz
0Y5/iCeMUeOsO/4G9P/3YGEe
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WW0lVUUBdD3CAlFuru7u0NKulu6JBVp7ERU0lZUUkpQurs7pRQBsTCw
sXVu+TFZa5/74N3xffsM8vcd2W5EYkJCQmIS5IP+uJPrrDOfkgO4yVjzFtma
7/nNfFmOorn+rqzOVf28HMoc/aDsQXIqml+URTimT2W33ol/9X6s0hvxnf4e
vlrCQ+a0rNfH0YJF5hp8qs+lEi+Zi3Jcn0Z/kvKws3Rs0MfTksokIzm3kYJH
/Ex6NuoTaEUVXnZWjBP6dAaQkkedZWCTPpHWVOUVZ8U5qc9gIKl4zFlGNuuT
aMNic02u6fOoxqvmEpzSZzKI1DzuLBNb4l3RliXmWnymz6c6r5lLclqfxR69
8/8vOiFhsFgtG3ND/0jGEizXj8repOJ28xMyM1v103IgD+lbZRt+4HfzFfkA
f9POvFTWjnfI5+YLchh/ssB8SN7Dz9wW351xibdedg3xul6KbzhjPivvjd/F
i+a9sguJ8f4ZE587XyObxH7qH8uRrNCPyT6k5g7zkzIL22I32Ka35Q+9Pcv0
OnyhL6Qmb5hL82HsGUNYa24az0F/nzQ8Zc7K9tgnOsQem+vyZdwTavGmuQxn
Y78Yyp087SwbO2K/6EhtZjsry7nYL4aRlmecZWdn7BedqMNbzspxPvaJ4aRj
srMc7Ip9ojN1Sc+zznOyO949XahHBjKSicxkISvZyE4OcpKL3OQhL/nITwEK
Uogp/v1c7In3QFfqU5jnnOdmbzxHutGAt52V50LsNiMowvPO8rAvnhvdWW6u
x1f6Iu7iHXMFLsZuMZJ15rv5Uf+Aorxgzsv+eK5sj32OvdV7sEKvz3V9MQ2Z
Y67IR7Ej7NO7koT7zOtlM37SL8UZK/Xjsi+/xF2LXWMCxXw2Vebjaw6Yz8hB
/MZk8w7ZPr47f5mvytH8E/cqdlE2iL+vL6ERc82V+Dh2j/16N5Jyv3mDbB53
Ul9FcaaZ83MwdoOdeoe453rPeG76XXFP9YtyOEv1w7InKeL+M57GzufJynzL
JfM5OSTuHbPNB2T3eFYk4xpj+ZdRPt8oW3Ajnpv5k/ju8QxYbT4h+/Fr3PO4
b0ykhM+mywIc0j+Ug5mi75Id49npvVipN4zvqC/jiN6LlDQxz5dV+CTuGA+w
ydwyfq++hpLMMBfkcOw1vWnKAmdVuRx7zWhKMdNZIY7EXtOHuylNGcpSjvLM
8nOFORo7S1+asdBZNa7EzjOGzeZW3NTXclLvT5q4I0xKvPX/fwWf/Qcg7wHL

               "]]}, Annotation[#, "Charting`Private`Tag$863656#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GW0VVUYBdDLoxukG0QpCUnpEhAUaZGQ7gbpRkFByqAUFaVLQLobFVBQ
ulO6u8O5hz/mWN/a+7zxzj337JuleZdanaNFIpEKUZFIFGujRyJVuGz+jvgx
pF6Mj/RH8nOycVAvxL/mbiRlsz6M6KzT3+WKeTKNKEwMYrLe3ntcNX9PY4pw
ztrHvMIW/TNisUGvyjXzDzThLc5b604ytuqfE5uN+vtcN/8Y7idBJNJUFuWC
9R4kZ5s+nDhs0qtxwzyFZhTjorWepOA3fQRx2axX56b5J5pTnHjh2bHFXg1u
mX+mBSVIwFbrNbltnkpLSpKQbdZrccc8jVaUIhG/Wa/NXfN0WlOaxCThd3t1
uGeeQRvKcMlaL1Lyu/4FSflD/4D75pm05bE+nOwc0sty2dybVPyhjwzfs/fj
az0/Z/RX2G6uywPzrPBZXTNZL047/YkcQQ4y21soD1tPbp5mLizLy5xypSwt
y9m/Yu5DXj21zCh/Ce+m3B4+i/xJLyjLhHuXy2UpOSq8d/IbPZ8sILPKxeG+
5Fn7qeUsvYisJHPJVeG9srdDfshDczrrc82zw3dl/t5cgvb6U/lFuHeO6Cns
Tze/TXn9quxLGnboo8NZcM24cN/8G54DO831eGSeQwfe5pq1fqRlpz4m/A/+
1Ovz2DyXjlH/n+mU/GW9AU/M8+hExXD+nIdUcpe9hjw1z6czlbhurT/p+FMf
G54Ru8NvAc/Mv9CFd7hhbQDp+Uv/kjT8rTfiuXkBXXmmjwzPmKN6ZW6aB5KB
XfpXpOUfvTEvzAvpxnN9FG9wTK/CLfOg8F6wW/+aWJ7teL0Q58J3xx5zE16a
F4Uz5Zof9JLhd0d/IUeTmyz2Fsnj4VmaZ5gr8K5+Ww4mU2Bvgfw7nAHzz+F/
yrLhPZcr5Df2YpsnmN+UheVrckl4f+T58LzkbP0t+U74fHK1LCPT299rbkoe
PRKetZwni8pfw2+A/DGcR1lKvi6Xyu72Xsox4W95NVwvT1hPZZ5prsh7+h05
JJxN/tGT2Z9qLsc4PY4+MZwTLugZ2GduRjQW6z2IuG5sOK+c1Kty1/xJeK7s
0ceTkf16c6JYovfkfe7pn4b7Za8+gUwc0FsQnaV6L6qRmYPWWhKDZXpvqpOF
Q9ZaEZPleh9q8CpZeY0NzsXrMhvZycFh17cmFiv0vkTz+b4Mvyec0mty3zyU
rOzTJxLXdZPCd8pFPSdHzG2IHd53+/PlSutJzFPMBWRpmU0uC++m3Oi++rkm
yvxVeIc4rdfigXlYeJ/Yr08iF0f1tsRhld6f2rzBMWvtiMtqfQB1yM1xa+2J
xxp9IB+QhxPWOhCftfog6pKXk9Y6koB1+mA+JB+nrHUiIev1IdTjTU5b60wi
NuifUJ/8nLHWhcRs1D+lAQU4a60rSdjk+WyyNpSGPLT2WTgDHNC/JZ5n9204
L1wKvy/6HHPlcN7Na2RZWdDef1QdExo=
               "]]}, Annotation[#, "Charting`Private`Tag$863656#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XUYFEUAhvGju7tLulNSuhSRkhTp7kaRVCmlS1BSSaVBGgkFQelulFK6
QUDxN3+8zxcze7c7OzeXpXWPet2jRCKRKlEjkYrRI5FHMSKRgegeMxJJQRvS
c/Rj+qvxCvQXuS9tTdvSv+lkY7n5Ffw7aM7/Sf/T1+KPhM9EHzmpPIMvhhty
Nfk3viNWyyXkLXxjxEMl3WP6EVJinzwFecxbKdfCa7kvkum+kovjL3kNKuNJ
eAakwn55KvqhCqqGe0B11EBNPDVvEFLjN3ka+uNtPNN9gjT4XZ6OAUjuu2fq
SuBveS3ewXN5MNLigDwDA5HC/Fm6N3FTXhfWCv/IQ5AOB+WvkNfcVfK7iIS1
0KXUfc2XxC15Pd7UbZWbIH6Yr3tBhyI9DskVzdnDt8FMOZ+8mq+ND/krNEq4
lj9Ke4S1My+V/A1fCs34y/R2WDf+d74/7UQ70Nt0GP3ReEm6Te5Nm9JW9HpY
E5qA1qUnwzPRPrQzvUc/pbVd/zJ8VrgPOQNtRM/Tw8Yq8XvDPkQ7/iadpc/P
r+HfQwv+Ko0anpE/RnuG92teank2Xxp3wvuXD4R7wAa5lLw9PC8Shs/TvaLD
kRFH5K9RwLy1ch1EC/tDl0Y3hy+Du/JG1MG/8ghkwlH5GwxGWvPn6srinrwJ
dfFfWAtkxjF5NoYgnfnzdOVwX96Mengtf4YsOC7PwVDURwO8j4ZohIjP+Ny8
rDghz8UwNEYUYyP12XBSnofhSK+fr3sLD+QtaIKo+lG6N3BKno8RyKBfoCuP
h/JWNEU0/WhddpyWF6Cgbl3YE4genluXUfctXwGP5G1ohuj6MbocOCN/i0K6
9XI9xAjroMuk+46viMfh9y0f5Ltgu1xa/on/AInCtfIp2jd0xmPIY/mcaMxf
oGfDuRLOxLDv8J1cOOx3vj5a8tdozLBn+ON0IO1FO9G7YQ+EtXddZrpQ7kUr
he+kf4Q9RJ+EM4cekgfQrrQjvRP2YLhv42XoDrkPbU5b0xvhDKGJw/3Q07Rf
eGb+Pm3uupj8F3yucF7wF+m5cCby+/j2WCgXkTfwDRALI3VZdIv4yngq70BZ
3c5whiBJUF0s3Zd8bpyXF2EUsuoX66rgmbwTLRBbP06XBxfkxRiNlohjbLw+
Ly7KSzAGrdAabdAW7RDX3Anm5cMleSnGIpt+ia4qnsu70B7x9BN1+XFZXoYv
8IZ+qa4a/pF3owPi6yfpCuAP+XsU1W2U30dsfKnLrlvGV8eL8H8gH+a74We5
nLwrnFFow/9Fk4a15s/Q/ujKPwjv3fwE/GS+Jy1Im9JLdFD4vzVele4P75p2
CO+Q3qJD6Q/Gi9FNckPECeeVfIL2xjjjOeTv+Rp4Kf+Ct3S7w55GsrB/dQl1
U/hCuCIvR3HdZrkR4mK8Lmf4Xr4mXsl70BmJ9FN1hXFVXoEJ6ILExqbpi+Ca
vBIT0RXd0B090BO9kMT86eYWxXV5FSYhl3657m38K+9Fed3PciskD+9KPht+
W+Gd8A/DmUF7m/s/l4UmTQ==
               "]]}, Annotation[#, "Charting`Private`Tag$863656#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$863656#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WW4VFUYhuGhu1M6DbAw6VIJAVFKURHpUFoJRbo7pbsllbAApSTsVsKg
u0FSvb8fz/XGt2fm7L3XWqdw8071OiZJJBJ7kyYSB9MkEv+mSySa4q+0iURf
lEV2FEufSAzWp8Qi+VUccv1/8qv4W+6HcsiB4q4fok+FxXIzHHZ9Qt9Md1Du
j/J4QrdQVxzb5Zy4UzdUTo0lcnMc8fkk+ua6Q/IAVMCTukW6O7FDzoW7dMPk
NFgqt5V380+jhVxfXsc/ip/ko747qa6FfFgeiKby53IVVJSfkhfzd2Ewf5R+
oe/C/8DXx2T+Ks2tv5sfzs+laWl/epAuM2vH74l7o7XoeHqRrqctzRvQ9fIC
+hgdQU/RNfRn8570d/k9+iKdSq/Tj+gx95IsvkeeRY+4/h36hzwo3h2/ha+K
SnI1eQl/N3bKXeUf+Qa4Q75HHsGni9+TW6GhboP8OH6Rj/vN5LpW8lF5MCoj
D0roR+rTY7ncGidcn0LfWndMHoIqyIuTZinN2pgdl4eiKvLhlNlpnEEq17R1
zQn9sFhHyI+zZqnN2pmdlIfHGkEBnDNLY9be7JQ8It4rCuK8WVqz18xOyyPj
2aAQLphdxCWkc83rrjmjH4XqKIyS+lH6DFght8Fl16fXd9CdlUejRnxGt1R3
D3bJRXCvbrScESvl9vKXfG20lRvJH/Kl8at8xXdn0HWUz8ljYp/JW+UnUDN+
S17Gl8CQWBt0t74b/xPfEO/y/9Ci+vv4Mfw8mokOoIfoarrK/DX6VewpWodO
oJfohnje5s/Tj+SFtAwdSU/T9+lv5r3o3lgH9CU6jd6gV91LRr4Tf951ffg/
+bGx9/lt/JOxf+Wa8nt8SeyJswn368bKmeNvjWeHF3Qfy2Xxu/yP38ik6yxf
kMehVpxVeEA/Tp8l9ljcJ665PrO+i+6iPB6142zCdbMbuIlbuB1nZ5yHccaZ
Z/G5rj53iZ+AOnEm4UH9eH3WeCby60iCrPpuusv8RDwT5wdK6Sfos+EDuQOS
Ipv+Dd0VfhLq4mndct29+DL2LR7STZSzY63cEY11n8jlsFdOhuy6N+M98JPR
Qt4uP4Vn4znJK/j78JX8RpxDfKNYW/LD8iQ+Bwbyh+m6uD/+a/4ZTOQv0076
F/lP+fIYxZ+h+/Rv8fti/9CX6XR6k35Mk5vnoN3l2bFm5b70L3kVfVduSXfI
i2k1Ooaei3unz8X7oyvl+fR+OpQep1+bvcn/wj+PKfy1WGP6R/jJfM44n+Md
yN/wddFZfkneyFfAfjkFcup6yNf4KagXayD2kO4BfBP7HY/G3y3nij0kd0FK
5NL31F3np6J+7E08pp+iz40P5a5Ihdz6Xrob/DQ0iD2Bx/VT4xyP/w2x75Ea
d+jf0t3kp6Nh7AGU1k/T54lnHu8ZaZBH/7buFj8DreQv5OqxR/nz8b5po1i7
dLX8IL6NNY8yuulyXnwSzxppkVffW3ebnxnnR6x5lNXP0OfDp3J3pEM+/Tu6
f/lZscdjjaOcfqY+PzbKPZAe+fV9dP/xs2Ptx1pFef0sfQFsknsiAwro++oS
mBPrNN4/Kuhn6wpic5xjyIiC+n66JJgbayHeKSrq5+gK4bNY18iEQvr+uqRx
xsovx97VrZFL4bt4x6ikmysXxufy28iMwvoBumSxhuUmeFb3vvwQvo93jsq6
eXIRbIl9L38bexm943flTXxFHIjzCkV0A+XkWCC3lnfyNfCK/Jz8Af8whvEn
6A/xbvhf+RdQWq4iz+eLYhB/hG7Vd+K/45fFXqST6JVYx/FO417oZnkRrURH
07Nx7tE/4hnQ/fJK2oTOoLdiPdGs5kXpoHhvNAXtR/+mC83a8Lv4mhjHX6BN
Y1/ya/lHMJw/SX+M9RP/r/jGKCNXlRfwxbBN7ix/z9dDH/kV+TO+Mv6Ue8sH
4rlhJn871jHNZvY/K/eBVg==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$863656#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8647526895596356`*^9, 3.8647527350620723`*^9}, {
   3.864752803605135*^9, 3.864752829776758*^9}, {3.8647529038850393`*^9, 
   3.8647530463684373`*^9}, 3.8647533630670757`*^9, 3.8649291628801312`*^9, {
   3.864929361288589*^9, 3.8649294128498163`*^9}, {3.8649295358707976`*^9, 
   3.864929626635272*^9}, {3.8653451680663605`*^9, 3.8653451752940497`*^9}, 
   3.8653531498677483`*^9, 3.86597038726561*^9, {3.8660402494490557`*^9, 
   3.866040255498104*^9}, {3.8660403878653965`*^9, 3.866040421192644*^9}, 
   3.866040609439907*^9, {3.866040738482272*^9, 3.866040782384107*^9}, 
   3.8660410009465895`*^9, 3.866138877327964*^9, 3.866138986887122*^9, 
   3.8662284172785835`*^9, {3.8662284837313485`*^9, 3.8662285150463414`*^9}, {
   3.8662285528542595`*^9, 3.8662285758898983`*^9}, {3.866228676543734*^9, 
   3.8662287902374024`*^9}, 3.86629614746204*^9, {3.866296209686898*^9, 
   3.8662962508885612`*^9}, {3.8662963064245844`*^9, 3.866296325694347*^9}, 
   3.866296814516116*^9, {3.8662968594155817`*^9, 3.8662969266138306`*^9}, {
   3.866296978748954*^9, 3.866297007446665*^9}, {3.8662970571195855`*^9, 
   3.8662971024089255`*^9}, 3.8662971405065937`*^9, 3.866297202062668*^9, 
   3.8662972427385015`*^9, {3.86629742550434*^9, 3.8662974543440046`*^9}, {
   3.866297531410059*^9, 3.866297554508582*^9}, {3.8662977065383697`*^9, 
   3.866297714409822*^9}, {3.86629775856253*^9, 3.866297780129549*^9}, {
   3.866297911208119*^9, 3.8662979282086153`*^9}, {3.8662980046058865`*^9, 
   3.8662980240385957`*^9}, 3.86629807629568*^9, {3.866298113715567*^9, 
   3.866298120671316*^9}, 3.8662981829771476`*^9, {3.866298238719104*^9, 
   3.866298259638332*^9}, 3.866298324114462*^9, 3.866298584672119*^9, 
   3.866298686018314*^9, {3.866298766820158*^9, 3.8662987837566757`*^9}, {
   3.866298819434127*^9, 3.866298840037458*^9}, 3.866298904235677*^9, 
   3.866298962814715*^9, 3.866300108240942*^9, 3.866300146328613*^9, 
   3.866300239584427*^9, 3.866300487997015*^9, 3.8663005518513455`*^9, 
   3.8663006563935056`*^9, 3.866300728589136*^9, 3.866300937109638*^9, 
   3.8663009887419252`*^9, 3.86630116033838*^9, 3.866301281493162*^9, 
   3.8663095635012875`*^9, 3.8663096104210997`*^9, {3.866309653817053*^9, 
   3.866309673825576*^9}, {3.8663099535420322`*^9, 3.866309991922608*^9}, 
   3.86631004650294*^9},
 CellLabel->
  "Out[3453]=",ExpressionUUID->"dd9fd51c-3f06-4475-b659-65980da846ba"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.866309568511668*^9, 
  3.866309579010268*^9}},ExpressionUUID->"f145fe8e-520c-4c86-8296-\
07264c0c6d37"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "10"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["\[Tau]",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], "5"}], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "50"}],
   FontWeight->"Plain"], ";", 
  StyleBox[
   RowBox[{"uMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"uMax", " ", "=", "2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxCount", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", "IC2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "K"}], "}"}]}], "}"}], 
     "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulumMultiple", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "InitGuess", ",", "uMin", ",", "uMax", ",", 
        "maxCount"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox["time",
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1c", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
         RowBox[{"u1c", "[", "t", "]"}], ",", 
         RowBox[{"x1c", "[", "t", "]"}], ",", 
         RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
         RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
       RowBox[{"Filling", "->", 
        RowBox[{"{", 
         RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
          "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
       ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}], ",", 
       RowBox[{"GridLines", "->", 
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Tau]New", " ", "=", 
    RowBox[{"\[Tau]", "/", "3"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], " ", "-", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "\[Tau]New", "]"}], ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "]"}]}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["IC2",
    FontWeight->"Plain"], " ", "=", " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1c", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"xdot1c", "[", "\[Tau]New", "]"}], ",", "\[Theta]Init", ",", 
      RowBox[{"\[Theta]dot1c", "[", "\[Tau]New", "]"}]}], "}"}],
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"initGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]1ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]2ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]3ff0", "[", "\[Tau]New", "]"}], ",", 
      RowBox[{"\[Lambda]4ff0", "[", "\[Tau]New", "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.866040578058033*^9, 3.8660405842670307`*^9}, {
   3.866228567688521*^9, 3.8662285694589553`*^9}, 3.8662961609136863`*^9, {
   3.8662972766555223`*^9, 3.8662973423202667`*^9}, 3.866297403104591*^9, 
   3.866297528243083*^9, {3.866297902897808*^9, 3.866297908193095*^9}, {
   3.8662982362169137`*^9, 3.866298236347871*^9}, {3.866310010650546*^9, 
   3.866310032033626*^9}},
 CellLabel->
  "In[3484]:=",ExpressionUUID->"8aa4157b-8e27-49a9-bb19-fcc88bf4e770"],

Cell[BoxData["0.4375`"], "Output",
 CellChangeTimes->{
  3.8662284597909985`*^9, {3.8662284917127976`*^9, 3.8662286073598423`*^9}, {
   3.866228814283718*^9, 3.8662288261809163`*^9}, {3.866296165736125*^9, 
   3.86629617779922*^9}, {3.866296270296279*^9, 3.866296286880911*^9}, {
   3.866296335830066*^9, 3.8662963594464216`*^9}, 3.866297308461227*^9, {
   3.8662973469227767`*^9, 3.866297362467745*^9}, {3.866297392784931*^9, 
   3.8662975973956985`*^9}, {3.866297696154731*^9, 3.866297701526992*^9}, {
   3.86629779816571*^9, 3.866297836931162*^9}, {3.866297936859815*^9, 
   3.866297975188408*^9}, {3.8662980625741215`*^9, 3.8662981042866197`*^9}, {
   3.8662981455862503`*^9, 3.86629823304694*^9}, {3.866298352746193*^9, 
   3.866298368115219*^9}, 3.8662984665673494`*^9, {3.8662986349338493`*^9, 
   3.8662986688238792`*^9}, 3.866298699398982*^9, {3.8662987365709496`*^9, 
   3.8662987618037815`*^9}, {3.866298872493952*^9, 3.866298889634403*^9}, {
   3.8662989217400103`*^9, 3.866298992057249*^9}, 3.8663002113885527`*^9, {
   3.866300696776434*^9, 3.866300705775521*^9}, {3.8663007934601374`*^9, 
   3.86630092863838*^9}, {3.866301053652913*^9, 3.8663010877548747`*^9}, {
   3.8663012243386626`*^9, 3.866301273123871*^9}, {3.866301356961733*^9, 
   3.8663013870319986`*^9}, {3.8663100151660843`*^9, 3.866310066952321*^9}},
 CellLabel->
  "Out[3489]=",ExpressionUUID->"ae616cb5-5349-44e2-b5a4-2924801c5b40"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
Lzl7BD8/8d/bV6f7X6xno6MqBrqFsePA9HDmp9IsPH7/+q/9rQ9vHjiwQPo5
/l3lUjR4R1T1Q5YbC/w5NL5maMUkuBu0QlgMv5+0HQ3oXjoPnycazq4vw+fZ
HPdTmnkCY6DCzC/jCmCjV6MPWQlSE+Cs0KlWc3w/xIOd0tWR2U0WeBy3M5qv
awL4e0eOJuWx0a/EQIfbnSKQzzk/2jCOBYgP/87fk3bXpwddF58UU2gdBzWd
LScevWajUvsy+iANr9eO/Od3AvD7TKNRqpD1BNBQPL19APcX8d5RNOHCjmEB
iQczhncm//YX8d6TmRPQUWMERBj8KvGy+ANuLBm7fG+MiYpguuO6QwNg2739
x0YiWhHx4NCRHcCQsxMRDx5x3C15TKYbEQ/O4P4kZ26J94t/PZi7NL2qCN8P
8eBSriEz2ZNsRDy4X/xoWN+xbkQ8+GI6+0hZZScinrs9/Y7aWPtnQDz3mZ5a
RH8NExDPFf22fMXFhkZAPDe2gPZk0dtmQDzXnCUq3IX7k3huh4GFwDAvC8x5
7quM+oreRqDM3FW72EwUnrbTYCQ9YYBbK9/en6gXhaqO5iJ9PFWAeG/5eZeq
/Cu5gHivzqE1kfeU8xDx3isDJQLhS5mIeG/NIlc3F4tuNJYZc6Pb4m88EbOy
y09w/zseC3PFb84c7gdwzwXqotEmVHl9m3WdzSBoF/9e6xzQjh73lIr7uw2D
vYKLrBMUuhDx42KR48qM9m5E/Dgs9PZtlSdsRPzYa9uGO98fsBHxY1YNEjw7
0o2IBy+tiv44MFAHiAen+d4xqDrdAIgHW+cMCej9bALEg7d+lmH6HmYB4sFG
tW8GlS6xAPHgSjHd10EbmoGchHNv+wJROBSygkKb3wB8JJixw9GicPC+5Ymz
eDyn7j4ZW7pEDFayZSQeW74DxI99tbcrVD9yR8SLNz5dPBln34Y4LyPpiBV/
+y9QMIjzW/7f/vMJqSrX/DUCTpY2bV2A92uNk9dYr76NAd9LF94Eh7KRlp+2
QdLEBMhb5GLo+YqNiD9fdlFu89vERsSTb0iEfmPYNQHiyTWCXMdsFuLz5L+e
vDNSY/UqvJ7EV+j4qbrToMMZfr7Kh83gVtejPqUhGhQ4nncgRQy/n+3jEJnH
+fd+09dJFnZ0jwJeGROhrLVsNPFj24zHyDhIXmb24iM+z5q7rYo1HJkEjvp6
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
7XpwuoIEuzZrvaG+omFCCsEXnlDx8RP1WiscWYOdZ9sl4O0uDBcaaJ2rv5WA
dZk155R+C0MBqx5B489UoF5moj/iQ4b2yrdfR+L7C+F1svufWRoOlgDC61zI
OKucqJLzV97H103aXyMjmoHL/hKWrSETnFrHPMTr0A12z2WOjuL764viV28c
bfC+50H4j9M6TFDtPq7pp8MNk80oBRJGNOwdp3jfnBEJyst7+irh+6va3cez
cyY8kDd1QktDh4ZlGLQ3Wufg89tNPioQSQF3t2Tn7wNkmFnxZeINvp/lSugd
DSkkQ5fkI1/n+yl/+Z0PPTHdlkFtINz+BiZ9jgmcmX4zulm9QH1D7boA/Hyj
L115Z+wJN3xxm6yvHYfv98FKyWpJJKgY5P4tGq/nRiuXR20YEYajn+QsBb2p
INqZX5vdmQy/+mwXHcX7F8LvOG5f4/DrciAo1j58Azygg15/t4Or1ZjgqrGT
QJpjF2CuMfaXxMfj9EnNUeXGfrDUv0T+1m4m6PO30pYW54ZuK+RjM/Hzg7Jz
65OZDSRop+B9joLXX8XQ/ft15Hmg42v+06M2eD24P88y3oyv3yv20bN4vypW
znboxQcylDh0XcdYjwoiIgOucbh3AEfjA4UDbkww+vKIS1ZpHxCU03xjdZoJ
tEz3i3zv5Ybun85fyMb7bfEQbOHTMAnK2Fa5vgzD66tFsJ66ABlax75024f3
H63igSYN4WS4etnPt9KVVGD12zbB/lgP2Ac9sHa83sjGHNvIdo4El2ilegbT
8HpY63Lfeh8Z8u3F1CHeD/xf/9OobhYb59ILzFSngq/g9TCEdLvF4jEJxt+S
jusuoGGlVEf1Zefw+X2zTGwvfv51t8l04P7aCTrqNi1w4L/P+U3W7M/lJOjt
dio3CT9/GRo88yzZSIZSXnY/+mXKQMzritpD8+3goEaL8xDeT3j4KLtM1nJD
h1PGgwF5NOwep0LTRw4yrHbg/K7ZSgXcLizD7mAy9Hu91e0Wfr60W/Z8PqO/
G19Xf0Ti8fk6R9vuv3AI7z+W/DS+iZ/3Z71XyNKNyfCW0u67kvh5zkE8afv0
dTLksXmVbStYhvJIciNUA7+vvwQc1RTSjgx3gRytKPEi/P3GtWf1fm8jwdKA
KJdYfL2v7bM5UK1Ohh2sp8vHdMpAiA9YkzrdAeSmQj854Oe36eVXsqYmuWFn
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
RV1Xl5cgj2TSrhLWgn9ewiMZiTm9Dzv4t0dyqpA/f5aTAdgPeJpUJrKArpR5
+BTXMHAPT3msgtdbwiNZ6RhoR/DRkUf6meYvUI7XA/vQhCGDVB6YV1zVaLGd
jnzSkzC1FVacFOSTbLY9//LUnIp8UjWmIamv7YX80S3Hox5t2iz8fldP1p9n
grU8BkFH8H6NDWxQIsuPgqDNce1xsSxAeKSQXQEZXqfpyCMFhYQNdeH7O/JI
f4okj66kIo90sk7E1uQVBZhOKfPT2fC6d+n9lGY5C8Qp5xz1XzUCzjzqDXIo
ZAHCH5ED5KDDLTryRwl+ewtorynIH32L0vWax99/bpfunpQZFlD4utY6BK9H
hD86sNJ56rMnHfOibVuW6sQD/xgNFVbZ05FHkuQzCpbcS/2PHsmLovjuj1cV
8kgiEnZpvk9akUdy5dNw1x3tRR5p+e916W8lBpFH4ls6v0TTcNEjxaU8eqZ/
j4U80k1OX/sN+PojPJLC2yvpihYs5JGiJQVjWxcYgHg+0OrMbvvANYMoz2cd
t2+6/p1S5JGGCyaSw+arkEe64blMKUS9Hnkk+4VrZzX9G5FHEqYfzvHqb0Ie
aStDqlbcn448kuOwmkYhvp8RHim791v4I+cm5JGWvJuxnvrUgJ4fpEsVm9By
rkP5Pkkfw9VK5tORRwo/z0v+eLAQeaQA/yVSzwNLkUfiXU9JPovXE8IjFfiW
9um9LEUe6aJsnK5wx6JHSqdWBFCS/7lH8t0VnyJ2pRF5pIBOZb+F0C7kka52
Z24yfd2PPFJB8fuoUnMG8ki5Gr/covlYyCPlGt35FV7HQh7p3tVzcloZLJA4
ECSfmzMBhFe+BhFFTEB4JJuKtK/Ui7XII0mOVqp1X29AHmnzq9qTVaZNyCNt
cNnfpLiXjjzSPUUdrNSXjjxS8Q2jVrHZJuSR7rUnYI3/Ou/82yOFZx9SuJaX
izxSgVPBoaUpxcgj6dWSeuqaKcgjsWIu3D70nYI8Ukt7gNw560WPxKkg69/z
8b97JMIXdV3V6etKXfRF9h7lcbJZ+H5ilCUR4jgM7Gc6Nfbh4xcwEhwo934c
nLt7Rf6YEAsQ3shcYuCA8Hgj8kapSU92fltLR95IYXXGenO8nhDe6BU1aYeU
Eh15Ixj+ULkgvAh5o/el3efmjCjIG003L9t/GC56oxDX6A1+zxa90Y22Dk4D
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
EvH6/wFvoScs
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{554, 2658, 526, 862, 762, 681, 618, 573, 494, 841,
                 741, 660, 597, 552, 527, 495, 842, 742, 661, 598, 553, 528, 
                863, 763, 682, 619, 574, 882, 782, 701, 638, 496, 843, 743, 
                662, 904, 804, 599, 888, 788, 928, 707, 915, 815, 935}}], 
               PolygonBox[CompressedData["
1:eJwV0UlLVmEYBuDzaYt0VQunbMBACMMhhWxepDYtLLVVlpnarrSgIBWKJkuQ
Ioggp4gI2mjtUhBsUUFBZc5jutasfkBp17u4uO/nOef7eM85GTUN5fVxURTF
GOBcYhRV881iiO/sjI+iYTfd5CBJ/LUvtV/Un3KKbIbtC+1H9FsUkcw/++P2
S3o7leQwYr/LflS/TTEprNifsP+pd3CaXEbtd9uP6XcoIZUauxXZQ3igVfeV
2S3rnZyh0ZzEez2PC/paOnlrfiCzuBbOLjfzRR/zX3v0cf0uh7hiXsegnkat
vip7aeC6eQOfwsulXP8lu2jVM6nSm2QyH/THMo8d+kWZQBd95odyOy9pDO9K
buE5X81PZD6vwjmdd6+cCN9GtsgWuZUXHDZflevp5p35kcwOZ9brZMRrvU1u
45J+Q6bzWY9Rof+W3Zyl2ZzCRz0/fAc9kf7wnEw41z7zpH6PI6Rz3i7GG/0y
cZw0/5HPqKaASb/fbz+l3+coG4lnyrUDrk2H98sxNrGGaddmmGWOH8yzwH8M
kF5h
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{457, 2659, 2656, 462, 461, 460, 459, 458, 507, 
                532, 577, 640, 721, 821}}], 
               PolygonBox[CompressedData["
1:eJwV0UlLVmEYBuCTppnDRjcFNliWCCFEswXNJWilZqWlC7/KoUU2qC1KKAgE
zTJFhFo0ObVs2lSbalFQ0A/IBmezWjQ57LzO4uK+n4f3HN7DSYvUFJ6OCoJg
Dm8ojw+CCBmWRbQzTE50EPxyaIteTR8zlNknyZUcpI0h9tr/dH6zXkUv05Ta
J8oVFHKTQfbY/3A+W6+khymO2SfIep4Raz5Ful5AKwPstpvw/Ca9gm4mOWof
L+t4Soy5muV6Pjf4xi67755v0F+SZD7LRv0dC/UGTuoZspku/T8l+ny5Wnbw
QV8kr1CrZ8oWnui35VyqWBZ+p8yijdfmOzKFCxwwd4V3pZHr5lvyq9wpx933
oVxDJx/t78ulXOWSeZVs5YWeKM+wQX/LgvAMJ8L/J5t4oP+jWI+T70nVL3Ne
f0y0Xkma/opkvZ79egtf2GEec7+L+nMSzDWs14+H9+QvR+zmyXM8IspcEX6D
vo9rfGa73aj3rdMj3OMPh+1j5RLyaKafbfYjzq/Vy7nLbw7Zx8jF5NLEJ7ba
Dzs/xCADzAJYPV5E
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWYlVUUBlC6S7qR7k5ppLvtHAOLVklFRUEJsVAJFUVQFBAFuxUVu7u7
u9v1Pv5Yd7/7zNw795xvn2caFkyfMK1woUKF9nhJ3c/Lb+o2TmYUnSlCUYpR
nBKUpBSlKUNZ9vf+39XtnMJoulCOA/zsD/UmTmUMXZlqvSK75eUcRXkOtPan
uoM5jKUb+cKVeERewdFU4CBrf6k3M5dxdGe69b14VF7JMVTkYGt/q7cwj/Gc
Zq0BL8nr6MEMfWUek8/nErkbX8rHskRuwdvyJtbLfflRrsQh8j/qTubnM/Qd
+FiewOny3rwsb1aHsV5eo/biXr7Luanj2UeeqVbhVvboN6qDeZBV+tVqd+7i
K/1WdUzOjCn6pWpLbucd/fXqCDbLV6j9+ClnqU7M+cmHqv+qu1jAKn1HPpEn
skhuyCv5DHoyS1+Vx+ULOI5z9a14V76OyhyW4ct+lIVMohezrVXjCflCjqcK
h2deuS3PjMn0pipHWC+SveVsM9P0oRrVqUFNalGbOhzp94tyR/aROaYvdSmw
Xow75TMyx/TL/bBWnSfliziBeplfa8Vz9vKZmeO8T9+IV+Ur6Z/7oa/BU/LF
nEj9zLO1Etwtn5W5zufoG/OafBUDcof0NXk6M8mlcg++lk/iPLk17+X55u/K
/flZbpB7IJfkHvlqdSCL85zUTnyaO5LvIDfh9TwvdTgb5LVqb+7je/0OdULu
Cfvq56i18ox4Rn+tOoSHWK2/LLOcffKNfps6NveUqfplaps8E97Xb1FHsiVn
oA7gl9xfdVLuUO6jWip3Rj47MyN35rPcQxbLTXkje2Ygc/W1eTZnyDSW69vy
gXwDDZmiL539yufkPjCIedbq8Fz2xHQaZdatleF+eUlmnME0pglNM89+XpYH
5KWZa4Yw31pdnpcvZwbNMmPWyuWe5x5l1rNPfTPelK9hKAv09XhBXsNMVujb
8aF8I80zc/ryeSaZl8yx3IXPcyeyT7k5b8kbWSf34Qd5GAvl+rwob1KHsjbf
We2Z2eJb/XZ1HLPklWr73Cc+yvmqo3iYrfoNmZ+cG7/qd6qTC///P6pFZlut
wK68J3tWB+UMWZa7pHbli+xTHc1uCjKDDGc2LRlBK1rThra0oz0d6MhIOvEf
X7LRSg==
               "]]}, Annotation[#, "Charting`Private`Tag$875621#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl02W4FlUUBtCPS0p3SF7pRrq7GwyUBsGkVFRQJFQQCwtR6S67u5Nu6S7p
Lsm1H38s3vfsmfmYO3Mmue/gzoNSJBKJ/f5ZQrWUicSapERiNI3IyWXzpSxj
OStYSe/0icQquZo1VHftWuePoTG5uGLe3vyw/i5dKc9a8xrm6/RnaEJurpp3
MD+iT6YbFVhnXtN8vf4sTcnDNfOO5kf1KXSnIuvNa5lv0J+jGXnpa3ZNfsAg
rjuvk9kxfSo9GG6di9/1SgzQ0zGVr6wnyDIMi3uXhVihb/BbtfV/9LE0Z6h1
Vn7S83GPfl1+yGBGWt/MEj1BZ/24nMYLenF66k/K3PyhT5SVuFUfKG9iGl9b
vyrLMo/h8axkYWax0nqSrMzCuE/3W0dujHcjx8lx8hbm0ML6MZmN6fxs/bos
H/es95MJPtJflqUYoo+S+Vmqp+A2/YScTi+ess7Dn3rleA96er6Jv5ON7quu
9Sb9eVqSn/5mKfhYf5gkbrc+KWfQmypscn098836eFpRgJRsdqy+Y1vi+dKa
gqRii2Nb2cZ2drCTXfSx13fLPexlHw38zlbXvUgbCpGaO8xPyZn0oWrS/99X
Q/Nt+ku0pTBpuNP8tJwV+5NqHHB+I/Pt8WxpRxHuNUviE/0R0tLF+oycHfuL
6rG3zDLwbTxvDvq9xtY79Fdoz+PW2flFT+Y+PSWf6o8yWi/AMj0dd+ln5Zz4
m/US9NNHyLz8pddgiJ6R7/TXZDlGxHcoizCbVdZvyyos4l/310TuNJ8sJ8S7
l0WZSwfrJ2QOZvCr9RuyAvNjz1rfL1Mxhc/i75SlGaqPkQVZrr8V3058N/rd
8pycG+9FL0l//WmZj7/1mrHf9Ex8H8c45H6bWu+Kb46OFOUBs9R8Ht8O6elq
fV7Oi/dHLQ67vpn57nhGdKIYD5ql4Yt4P2Sgm/UFOT/eEbU54vrm5nvim6Qz
xclId/OLckE8E+pw1PktzPfGc4tvkhJkoof5Jbkw7p+6HHN+S/N9+pvxnVEy
9qfvILPs6dh/clHcM/U47ppW5vv1ifEdUIosnHCstWMH4vnHnqc0Wellflku
5iHqx942y8wP+khOur6N9UF9EuP1YnTRh8mczOS3uF9ZkQWUid+Uafky9hDZ
6G19Rb7HABpwyv/RNvZi7M3Y75QlO6cdO8NZznGeC1zkEu1cd8h578Seohw5
6GN+Vb7PQBrGt2WWhR/1UYzVk1kd18uqLI7n63dvALeD8VY=
               "]]}, Annotation[#, "Charting`Private`Tag$875621#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GXYFAUUBtClQ1K6Q0LaAilpkO4GaRBU0hawFRQTW1EU6e6SFhFQEOlQ
kAYJRbo998d57nvfb+bb3dmZLdRjYMsBSRKJRMGkicS0ZIlEjRSJxObkicQQ
SjHCno0l8lV/HyInGG9/hD91ne1/y+/xMNmYrq+p/01+ktJc0+3nEf0p+/vU
Jzsz9LX0W+SnKMN13QFmMovZzGEu85jPAmo773fHP01Zbuj+YiF1/G2r7hnK
cVN3kC760/YPaEAOFunr6rfJz3IPt3SH6Ko/Y/+QhuRksb6efrv8HPdyW3eY
bvqz9tE0IhdL9A/rd8jPcx+JuD66JEyQu3DEcd3t/8gf0ZjcvKhLx2y5H0sd
V9++U36B+xlpz85SOUlcSzkpE+Wu8f/kQvwkH3V+D/lf+WPGymVoEt+lmTf+
D6vsU82K5JFfMtOzkDn28eZ9rOEx+2dmUVawwT7TrMp6fvCaDcxd+rnmUHOM
WTJehwfsb5k54p6L4+2TzPLxOeI7NpMxSR5n3kO3eP9mYdbJx7xGT/mc/AlN
416z52O1nJeX5QzMlR9nmXMa2nfLwyhPsrhvdMmZLHfnuON62f+TP6UZ+Viu
b6TfIw+nAsk5oe+tPx/XhebkZ4W+sX5vfK88SApO6lfSxN/2xbWmIin5W7+K
1azhR9byE+to6pw/4rNRiVSc0vfRX5A/pwUF+FnfTP+n/AqVSc1p/aP6i/IX
tKQg6/XN9fvlV6lCmnhOdCmYIvfgjOP62i/JX9KKQmzQt9AfkF+jKmnjudGl
ZKrck7OO62e/LH9F63hG7fnj/pILx/uVMzJPfiI+l1yMjfJG57eU/5Jf52u5
FA/Jb5s5WSZPNitwRzyLZioWMM3+vXkvveL+Me9iOT/bZ5hVIsfz6bUeM6/o
55tjzG/NsnGf0cb+oVkg7mN+tE8zK8XzF/83rqWZiUXMt08w76d/XH+zOL/I
s+IzRPaarcyDujeoxih7rniPcrr4LZBTM13uzb/Oedx+Na4HbSkS34Muc3xu
eQC/Oq61/ZD8JtVJzzn9E/pr8je0oyib9G30h+UR1CAD/+k38xtt/f2IbiQ1
ych5fX/9dXks7SnGFn07/dH4DaAWmRiqS8MMuQ8XHDfAfiOuNx0oHt+37s74
XZIH8rvj2tuPxXdPbd6x547fJjkzw+S0zJQfjWdaLhK/VfJF5w+Ub8rfBbkc
HeXRZsG4l1hrn25Wjt8f7o7vxszC4vhu7RPjty3uAQbFsxHHsZJf7bPNamxg
q9ftYB7XzzNHxXU3S1NHftfME+fKU8wH4z3EZ7cPj3uaWXJfLvlfg+y35HF0
ogTb9B31J+KaUJcsXNZvZwc72cVu9rCXfXRy3sl4H9QjK1f0g/W34/mhMyXj
PtJljesgD45nWi7BJnmOWT2e2/jdcv7/8EwhKw==
               "]]}, Annotation[#, "Charting`Private`Tag$875621#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hf8TlUAB+DXL34kI8mWmZGdPTILDWQTsrM32YRCZCZklj2yVUaZZW9l
7z2z9+w5fzyf8/2ee+593/e89970jdtXbRcjEolUjIpEdsSKRAbEjkReYXJ0
JFKJlDw3/5O5dKzSW1OInea/NheTKfqnpOJ3vRB75QG8sO5nPT2r9TYUZpf5
b8zFYqpemdSs0AuzT/6al9ZN0zPwh96WQ3JtbstF2CyX57T8PbudM1CP5ie9
CnvlKlyV32KlXIT98k1jB76RTxkb8lh+auxNRJ5uzEhUnEjkT/263Jb4ejv9
sPwZsfU7+iO5B4n1ovoW+cOwX/oZ/a7chYT6GP2C3Iy4+suw73Jf9vgtg8J1
+dn8FWMrqsr7wsg1OQ2r5KL8Iw/ktNyIJ3IMZshvs0ZuzxG5DnflYmyVP+Ks
/EPYM589WI/DNL0aaVmtF+NfeRBRzNQzsVbuwHvh+zn/W3OvMl2vTjpeYZa5
zKyTO1Kc/dYPCXvADL0G6YnJP44NNf8aM/WaZCAW/zp2gIMc4jBHOMoxjvOd
8+Ixy/paZCSaE44NC/8js/XavE1sZpvLwnq5EyU4af1wcwmYo39GJuIwx1xW
NsidKRnuJ+tHhP+ZuXodMvOH/h4H5MG8ylz9HTbKXSgV/kPnjzT3OvP0umTh
T704B+Vvics8PRt/yV9yVK7LPbk02+SPOSeP5Yxrj9ITMV+vF/4DuRrX5ays
kUtwSL5l7MiQcK6xMU/lZ8Y+4b+R5xuzh/eI+/hv/T+5Xdgvvat+TK4X7in9
vv5Y7smbehl9u/xJeC/o5/V78pfh9+vj9Ity8/BZesT4gq/CPeu3jDa+wS/W
XTW25vNw7xir85/8DmvlkhyWh3JWbsIzOR6/yDnYJHfjeLgOD+T32SFX4II8
nnM++/vwrLNAr0821umlOCJ/R3wW6DnZLHfnA847f0zYAxbqDchOAhaay8UW
uQdlw7vC+h/MJWGR3pAcJAz749glLnOFq1xjrLVJWWxNI3LyOtcdG2c+GUv0
xuQiEYvM5War3JNy4f+0fry55CzVm5Cb9XppjsrDeIPFeh62yb0oz069Ihfl
H7nhej/qKVimNw3Ps1yDG3IeNshlOCbfNnZieNh3Y1Oey4lZIr/L9nBdY3t6
h2fcWD+8h9wzD/Uncq+wf/qH+i65EtH6Jf2+3DU8F/oE/ZLcIrw/9BjGl/QL
+6nf9P0nyCmJoS+3/prchi/kA8aa3JQfGLuF7yhvNL7PcfmOsTMjwr0Qzgv3
tfwmS+W87JD7hPeP3IBH8kfslj/lsjwxPKO+z0Q9Fb/qzcjLX/oHnJBHkoRl
ej52yn35OOyv8yeZS81venPy8bdelpPyKJKyXM/PLvkrPgm/xfmTzb3F73oL
Dsq1uCU/NHYPz6m9yq9vkstxSh5NMn7VC7Bb7kcF7rruFHNpWKG3pADJwzvC
sfs84CGPeMwTnjLVOWlZaW0rCpKC38wVZI/cn4rs0StzRZ7EZbklUUR85/7h
WTE+c93/ASJqQFg=
               "]]}, Annotation[#, "Charting`Private`Tag$875621#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfcjmUYBuCXMsvIiMxQVohE9ohsKQlRlAgphGRllYjsLSJCGkYhFNky
y6qoKGWPsjcd1x/H77zO+37e73vfZ+Vp1alhxySJRKJW0kQia8pEYnOqRKIe
R80f0pY6HLHWnjtZpr/LfWzR63PMPJV21OWotVdJxnJ9ENnYqj/JcfM02lOP
Y9Y6kJwV+ntkZ5vegBPmj3iV+hy39hop+FYfTA62609x0jydDtzU+5OdH/Un
OWF+nZR8p+dMnUjMMJdniH6XPsJciD9inx3mpzllnkFmx0zSS8Z30W/JAeTg
UXvfyJ+sP2Cea348fot+UnYkFSXsLZYrrecyfxzfX1aQleVa+bx83/7dcmRc
H1lYlpHfyqbygP1C8gu9oawZ/09ukC/IXPZ/jD1q6Kf1YnKR3ij+r36vnBzf
Pc6DeVWcI+u35UByUsr6MrnT+oPmT83V4jvrp2QnUrNKz21/prkiQ/U0+ijz
QxyMfX4yP8MZ80w6knDcO9ZysUt/mtPmztzF9/ow7mdnfH/+Nc+iEw3Jwy7r
z/Kf+RM68wx5yRfXJX4D+SlAwTiHFGa3zzXmrHk2b9CIh9hjvQnnzHPowrOc
sfYGd7Na/4Ai7I1rxHnzXLrSmH+tdSENa/ThFOVn/TkumD+lG0mck3et5Wa3
3oT/zF1Jy1p9BGkdN1ovwp9xjfnF3IyL5nlkccyUuJa8qSfVB5nvZ4/elLPm
bqRjXZxrx8wyV2Kknk4fYy5KWfN38q84d+YvzbXivjBvlA9b/1U2p6a1S/rD
8qu4PvIzPav8MN4NsrSsIL+P8yC7279DvqfXkXlkabk8roPcG9dQzovnU1aX
VeX6+Ly9c/E7qW0tvXxELpHr4z4xfxLPGqP09PpYczEOxfXW58dnKa7vi+eR
y+bP4x1of6r+GG/pd+qDzXn5WW/GeXN37mGDPpoS7I9nkyvmL+hBcy7E3yID
G/UxPMJveguumr+kJ89Tkt+tt+SaeT69eIFHKUVpHqMMZfnDsS9y3byA3rTg
orUeZGSTPpZyHNBf4oZ5IX1I5rcOsZaPX/SWXDL3JBM/6OO4x3Hj4j7gb708
B82tuGleRDbHTNPL8LaePN555gf4NZ7PuE/MT8T31i/LXmSmpL2lcnM82+bZ
5irBvE6Ot57BPN5cXxaX5eRK+U88o+YF8R6SdWR1uSnOdbyH7f9pfjnuaf2W
Xlx+He+HuIf17PIjvYEsKyvK1fHMyb72U8ihel35YNwrcoXcF+8c8+fmGnF+
9SuyN/eyJd5T9ufE/cwEPaM+wVyCw3pF/jK35rb5a/qR0nHDrOVnv96Kq+Y+
ZGGrPpFKHNLbkGCx3p9UPv+BXoDf9Je5FteGrGzTJ1GZv/VXSMISPYfPTo9z
HO8L85p49uUAe6nlcL0gv+utuW7uy31s1ydThX/0tiRlqT6QNlTlcapRnSeo
QU1qcdjx7biDb/R3eIUbej+ysUOfQibfZ2K8EziiF9UXxrWKe838QzxXsra9
/wGhTiXJ
               "]]}, 
             Annotation[#, "Charting`Private`Tag$875621#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
qAf55peGp4xCbZjIN/t77I7Z8rkd+ebx2yu0VoU0I988F7w4HH/qXz+xeLdF
q+LqQuSbw7eLCJ/67oH6iaWzf0z7FLKRby4U2/S+0rEK+ea2pYM6u2cakG9u
eVknpB/zzzfLOdT56KxtQ745eeVnnkcmDOSbBezXLjbX/vPNuj0bZF7t+Oeb
47bQbh5lpCLfLLzulS3lxkn0fs/D4+lNkneTkG829TRYiv/MQr55xQvXnXsY
hcg3j7j2ZNnuKEW+eV/OB82konLkm13X0HvwzArkm+k83LUOE5XINz8z45Vf
KK1CvvlM3m+ror/dyDfbrD54bY5Y16Bv7vpVYOspMY58c1h8mEvAnUnkm3+o
3tjydPifb75xq/6Lzl4O8s3Z9r+aNVrZyDeffbvJ4U3wJIDvB+0cijgj2DgO
4PtBc3tO8oz6jCL/LHhCo2FuTT3yzzpJh0NnH9KRf9YgyRk5HOpC/llja/Gr
7andyD+/Pzi5ikuKhfxzpOS+4r8dLOSfd4rVMa3KWcg/P5DftOX8TA/yz7cc
rE/evdqN/HPA0ZW/L2JdyD+r2pssPhijI/8s47K+Qbi2Dvln76Plyb7e//xz
3LJbR3ZrM5B/Vus68EJIrg35Z5b3h/vpwa3IP79YMnH6k+M//1xv/9RAZX0e
8s9WEmslour+9RYX0q21nAEFve9z9fHBorLoDOSfr8ZlOHmH5SP/XLyq5s5s
fDHyz8FRbyP6g8qQfz7q4UIubXiJ/LPKq6r7/OaVyD+XJ1sp/TpThfyz/s2w
XYZ7u5B/PhnuLq90bwD559kv9dPVpmPIP4cP6O8L+TOB/PMjnxtZSk/ZyD9b
mORtDSPGFfTPXOWaIj9+sZF/NrnUnuc3NQng+0LbKuyVb4IJAN8XemfrIftK
2THko6Mtrj3z/1aLfHS65J9dJ0dakI9eEIu/IKPQiXz0Eeub9dwbupGPvt2Q
VU3u6UE++oCH3sxwEQv5aLbiV17tLhby0cs7PmaQVVjIR+9RSZTVmuhGPtp0
c52PWm8X8tHeT7svfnFrQz5aNvxwug5PLfLRso84+Rv3//PRORsCBpjedOSj
i8op19R2tSEf3VukuIknhI589GXzy1LHG/75aOdNR7zL0wuRj+4PpPyYPhGP
fPTNbKXmdGN/9P7Pc7QgQ52UVOSj39fr3qpMzkU+2q/cVOJPZRHy0e1/FNJG
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
xYhFqE17UrpNezq6/Q8h0mhW
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwVzDkzHHAYB+C/UAi7CJ2OwjFanSPuzozRYUZhzKTZ2HUrM/kE7vvmK2DX
mSZdNERrRquwSBzp8mzxzPv+fu/MWzYQ7x76EELI4jtTQk0khGqm7TFyc0JY
yQ6hjgf5gBm+8tFtVV9PWj5klgr9ka6HCNe6Ot0v+xBlmanL063ZG+iy35mP
+mb7lX3QHMv8Me/NWOave635U/5CKXO6Sl3S3kuU37o4+fp1uZEnOck8CSJu
G/rPPMspFhgm6rapb+KPfMwiIxS4bemb+SufsMQohW7b+hZe5FOWGaPIbUff
yqt8xgrjfHLb1bfxJp+zygTFbnv6dt7lC9aYpMRtX9/BP/kH61TpU7o+CrjR
1esu7XHK6ZRvzW/029NmwvwPtuND2g==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0ttPznEcB/BvuLQ5C3HhQue4whUX2ByLDkQqh80cNuECm6hQTvE3KOmE
v6BiIx3mggtsRUSzZmvdOKYSr+/Fa+/3+/P8nvb01PLDp/LKpoUQEnhB6swQ
Ush2/DY9hKusoM++Szk5fHerJpl+u46L7OSHWw0pvLPrucT8GSE0um1m3H7K
Ln7a10jlvX2PChZ4vsltCxP2M3L5ZV8njQG7gTTPttnFzKLSbaFbs76VSbuT
PH7bN0jng32fdM+22yXMpsot0a1F38Zfe4P9Wj/Lc3u13a0fI4l8tzF5kww+
2us881I/TaOdYXfopfF5/YucE78TvU9e4LLnFtmt+nZy9SE55b5Rf6Mfkedk
kRyRJ2WX19fIHvuQPC53y2F5Qi6NP08OyKOyIn5fclSWyQLv/6Pf4oCdKXPk
oBz02nr9lX6GQv2rbHLP1B/H9zA3/r3sflnOFa8vth/oO/hnb7Lf6ufpttfa
vfEzsix+ZrdxWUsWn+xmsjz3xD7IvPi/6bbE7aGeTaDHbQ8T+m1W8tluoZok
zz+KvxcJ9LoVMqnfYRVDdis17GUfReynmBL+A8yQapo=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{583, 3114, 3111, 634, 670, 727, 804, 898, 1009, 
                588, 587, 586, 585, 584, 633, 669, 726, 803, 897, 1008}}], 
               PolygonBox[CompressedData["
1:eJwV0UlLVWEAxvHXe6/atCwzKIcGqE05NKib3BQkQWWZQVhmaQ6VUJuCwp2V
lZaNn6Fy1rZNbtQGdWFQBIHZbN+g4fcu/jzP8z/n3vNyTn5da+WZRAghDdNY
vySEDRgm51GWDOEBMlMhtNjTWGwfwhOs47u4IfxCKXcfGXyzPYVFdjVGsJbv
5AbxEyXcPaTzTfYkFtoHMYw1/A1uhd6AURRzA9wPbLPvIsU12m+xwK7CEFbz
17lsvR4vUcT1c9+x1b6DJHfSztNPYwJl3Bvugv4OO+1MeQCDyLevuX5J/4AK
e7mci/foJ+QLFOp98Xnxvenn5HE5JcvlN9ea5Cd7j9wia+VtmZANrrfK33aN
bJON8qPcLXNli/wa35s8JevkuCyVr+O30Q/r5+N7lDNyh8yQs6jU98sB5Okd
fnNRf49ddlY8M56jwO51/aw+ie3x2fZmvRtpdr2dE8+FMZRwr7j0+Cz0I5e7
yi2L58UzbOJ6uC8otm8hxHdpTyBl70Mfcvgr3GPMoYi7iX/xrPY4kvpe9GKV
+y9zS/VjeIqN3CPuMwrtLvyN57HHkIjfBD1Y6d527iFmUcB14k/8P7sWR3EE
/wFGv2VY
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1mWYVWUYBdBBukG6HRqlO6W7U5SSRqUVRKWkG5RGQUBplFLplO7uLqUR
kBRwfY8/Fnu/78dl5p5zzzCRrbrU6xwlIiKi0hsRESF/9UdRjuhDqEsBHEdE
JRrRiUFMYhGbOPzmdcU4qg+lHgWJy+/2xTmmD6M+hThs14i/9Z/oQjxW2pXg
uD6cBhTmiN17PNDn0JX4rLIryQl9BA0pwlG7xjzU59KNBKy2K8VJfSSNuGHu
RCzWmotyTH+fR/o8uvPY/CXJ2GlOyBr9XU7po4jigg02vxW+X/NNGS50bNaZ
i3Fc/4B/9PnhOnrNaHN2PjU/kV+RnIzO5spd9m/qk/R8JDKvlaU5radyNl0f
He6ZPkQvLCNlVrlQlpGNnd/Su1DAHEdmkD+G6yLXh/clx4d7KnPLnHKpLC+L
Oz+hNyGv+bE5rZxpXhA+D/oYPUeg/yw/s38qe5OCTPbz5G77JPpkPT+JzevC
98kZfUz47DkfGq5DuB/m27IrcdlgLsFJvSlP9IX0CNeK9XZlOauP5QNKcsqu
GU/1RfQM3wcb7MpxTh9HE0qRlI3h/XNe/4amvEsykpOClOE+kJo0bPL3K3BB
/5ZmlOa0XXOe6Yv5PFxDNttV5KI+nuaU4YxdC57rP9OLdGyxq8QlfQItuGPu
Rjw2mstyVv+QF/ovfMEzcx9Sssecnj/0ylzWJ/Ihd83dic8mcznO6S35V18S
nnP3aKz57fB8mJ/LvqQis7P5cm+4jvqU8LkLnznzVlmFK+GaOZuhT9Kj6cP0
IjKTzCYXhXspWzq/F54TCpoThGdN/hSeQ7nZeSI5IfzckXlkLrks3AtZ3vl5
vVV4jswvw7WUs8xLw88gfZz+Tng/+i/hWbR/IfuRmn3hvjubGr6H8PXN22RV
ruqTie58eHj/4WuZ74fngIRsMVfggt6aV/oyehPJdrtqXNOn0JqKXLRrw2t9
OX3IyA676lzXp9KGSmRip30N/tSn0ZbKZCYLWdnlvCZ/6d/RjipcsmtL+A9i
hehLNnaba3FD/572/G3uQSL+MFflst6OKPxq7se/en/SsN+cnT16bW7q0+nA
A3PP8DOBreZqXNHb8wa/mfvzUv+atBww52CvXodb+gxiuBcjzFn4yPxQfs6b
bDNX56regaj8bo7vNd/oOcO/b34lB5COg+GZdz5NLxQ+J+Z9si63w7Pv7Af9
Bz2mPlLPSnZ9sfzY/pHsFV5vl0RGyjmytNzuPLGcaC4h88rccrmsKGs4vxbe
C/nN0WR6OVuWlCudJ5DfmovKXOHzLJfIcnKA89f6wPC6cF3sFshD9in07/TC
4TXm/bIed/SZxHI+KjyTfGL+R35BUnaYa3I9vEeis8o8kJwcMNfnrj6LjtTi
z/BvEYPV5kHk4qC5Aff02XSiNrnJQ17yccjfach9/Uc6U4e/7DoSkzXmwYRf
aAaZM3DYmNL8vV6EPPqKKP//TpTf2X+I9gxO
               "]]}, Annotation[#, "Charting`Private`Tag$875706#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4VGUYBdChpVEaaeluBCkBRTpEukGkGxEQQQXEokG6u0ulW7q7GxEp
CSkJ1/djPe+793fm3rkz59wMLTrX6hQlEonkjhqJVOCfaJHI17zDCXkyvfmI
ilSiMlW475pvyMRJeQp9yBovEqlqPtB/S2ZOyVPpSzUe6gaShdPyNL6kOo90
g8jKGXk6/UgSPRKZravAc3kLNfhXHkw2zsoz+Iqkrp+j+4j/5K3U5LH8Hdk5
J88ku2vXyo1ISH9dMt1ce0VeyNuoxRN5CDk4L88ih2vXyY1JxABdct08eyVe
ymXlo/aebJcLyzvsbXibj3VPze/JyQW5pGsO2LswW84pr7c3Cdfbr5lvhs/E
fsrsE74/16WQ59srU9N+xXylL2c/Zv/U/NxsYN4yO5p/OC9i7pSbm23NT8w/
zXZm6vDzzHPmZ+ZX4fMy75idzNpe/8z+A03lXGY186J50Vkp+0F7V+ra/zLn
6HPZN4TX8Fb4vuTTZt9wfzlPKS+wV+G1XF4+bu/FDrmovCu8R9KE96x7bv5I
bi7Jc8ntuo1yMxKHe1OXSrfQXpUIO3V1+M/+E3m4LM9jIG+7flH4u4jCLl1d
Xth/Ji9X5PkMoh71aUBDGtGYbJ6RJmZTmtGcl147lHxclRcwmNR+52JddaKy
W9eCV/Zh5OeavJA8rt0Uvj+ShPtcl0a3xF6DaOzRteS1fTgFuC4vYghpXb80
3DdEZ6+uFRH9CLkgf8qLyavbLLcgabh3del0y+y1iME+3bu63fb2pA33ny6K
bqS9EDfk0vIhezeWyPnkLfaWJAvPoXzG/DLcY87Ty8vDcxB+l/2qGZMP7CfM
1uYXZkPztrnfa4rZ94T3a3Yw65g3wvsy04V7zDwfnkmzf3iezbtmZ7O110c1
R4V7yCwcvhPzktk23M/Oy5iHw3s2u5v1zJvmUmf57Vvtrahtv24mp5L9rNkv
3LOuyyCvCNcQiw/lk2ZvDjgvLu8Nzyzpw7Ooi6YbbS/CTXkZBXTbwmdNinA/
6zLqVoZnhDc4qGtDdP0YuSh/y8spqNsePkdShvtb945uVfjciM0hXVti6MfK
73JLXsFQMul/Dc87cTisa0dM/S9yMW7LKxlGZv1v4XMjLkd07YmlHycX5468
KvzP9gwNNzvwhvPxzt7jrvwrI+hIbGcT9CW4J//GSLLof9fVJx5Hde/p9tk7
kSFMXRzdRHvJ8AzZL5v/6N+3Hwnfp9kj/Bzzb7ND+LnOC4X/qeH7IRWjdFl1
q+0NiM8xXWfi6ifJpbgvr2Y0XYjnbLK+NA/kNYyhK/GdTdGX4aG8lrF0I4Gz
qfr3eSSv4xe6k9DZNH1Z/pXXM44eJHI2XV+Ox/IGxtOTN53N0JfnibyRCXzO
W85mhuePp/ImJtKLxM5mhXuZZ/JmJoX/g/o14RklAcd1JXT7wzNHRqrKF8wB
NLHfM7uEZ9u1/wPtdxbH
               "]]}, Annotation[#, "Charting`Private`Tag$875706#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FGUYBuAFKWlJQbq7lAbp7g5pCWlEOgTplkbpLmkQkG5QaRSl0wJJ
KVHE+/txX8/7PjNzds/OzqZv071utyiRSKRi1Ejk42iRSMYYkciK6JFIeZ7b
D9BYd9nen1ws0ZXVHTF/SDJu6HqSSb/SXoEX9oMs5RMyO7ZKX5G/7YdYRi96
04e+9KM/AxhIFtetdk0lXtoPs5xBZHXsK31l/rEfYQXl9Ed1bUnOTd1gsunX
2Kvwr/0oKymvP6Zrx9vc0n1Kdv1ae1Ve2Y/RRHfFPoDcrNJV0H1rbk8KbuuG
kEO/zl6N/+zf0lR31T6QPKzWVdR9Z+5ASvrYX8pZ/OJ4e/sd82gmm5NQzPyZ
jM5i81Dn5TSvN1dnlDk2r/U95BPdcjlFTpdvh9d07AN5TbdYDpITZEI2kNc+
SEbCPWCefbZMw+bw2bu+kvxev0h+JMfKeOF98I69r/xHfhH+n9Dxq+s6yLu6
MUwxJ6W4eZiMwZLw/zkvV3gv5hpE+Nj+VE7le8eb2a+bB5OPNbrKuuPmjqTi
N90wcus32msSheO6tVTRn7B3IjW/64aTR7/JXouonNCtYwR5w2egq80bnNSt
ZySjGM0YxjKO8eRzzRbn1iEap3QbmEB+x77W1SU6p3Ubqao/ae9MGv7QTaSA
fqu9HjE4o9tENf0pexfSckc3iXf12+z1iclZXXPdDfOn5GezrrrutLkr6bir
+0j3Z7i3lOBz3Xu67eYGxKKn/ZmcxjnHW9hvmodQINwfexTmm7c4XsN8xtyN
ceb4pDf3k//KL8N3xpwqvLbzO8p7uqVyXLj/MhklzcNlzPB9ZKl9rkwXPmsm
u7ag/Ea/QDYMz5GME55t3rR/Ip/LFXK6nCFThHvPD65vKW/pl8ihcqJ8i3fD
ZyejssA8R6YN99E1NeVZXXcy0N/+Kjw/3HO8k/2+eTzvh2dAV0i3w9yI2Pyo
a6W7HZ4F3mOrrpbunLkHGbmvm0ph/U57Y+JwXreN2uH/CM8OmXigm0YR/S57
E+Lyk24705nBTIo6Z7djTYnHz7pvqKP/Mdx3MvNQN4ti+j32D4jPBV1r3S/h
2aYgO3R1defDZ08WHuk66x6YJ1Aq3H9dcd1eczMScFHXJvyGhPtOIXbq6ul+
MvciK491XXQPw/2idPhO6Uro9pmbkzCcb38R7jmXHP/Q/pt5BJPMiSgcvsfy
DRaadzmvvvlnc+9wD80JyGYeIP+Tq+Sc8JoyNX+5pqt8pFsmJ4VnRSYPv0mU
Ca8pY7GGZfZ54ZkI3ydmu76k3K9fKFvIMTIu68L3MbwX+bdcKWfKmTIll13b
Vv6uGxmeX3NiipiHymgsMu92XgPzBXMfsjPQ/jo8UzxxvJv9cfgblA3fed37
ugPmliTiiq6d7g/zKIqyR9dQd9Hclxw81c2llP6gvRWJuarbyzxKO3ZI15ok
XNPtYz4LWMgiyjjvsONtSMp13X4a6S+F3xVy8kzXPdwP82TKhc8k/A6w3Dxf
Zgi/rSx27v/o6TTm
               "]]}, Annotation[#, "Charting`Private`Tag$875706#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfcjlUcx/EbZUSSysoe0TAqEgkZUTZFJYrsvfdehShKhZYVKtI0MjOz
VXY22XuP1Pv3x+f1Hde57mucc53nydW4fe12SRKJxMakicTc5InEmpSJxKP4
NkUiUQ1pcFx/Ulcdm+QOKIx5+t91j2GWXB13I1WqRKKN7jQ/GieMOyXXwGa5
I4pgvn6triBmyzWQFnc5v63uDP8eThp3Wq6JLXInPG7Mh/IDeFzOIvflb/Nf
oLQ8Sc6NBc5fRwvhO8cqOfZ1/B6fnx/Bp0Y9fgG9R5+ab8e3pGfj3ugPci/6
vlyCfip3pNloQ7qMDqKnXO8MXwvN5D+Mr0Jny91pZ/kJOk5uRzPQ+nQxfcKx
B/l+/H98Hf4X/ku+DD+Zz4NfXWM9LYw5jtVCAcdHymmQLuZObs+f48fgtHPO
yrXxp9wFTyKrcf11CUySFxq3gS+C7+XauBdn9Od0dfCX3BVFsUi/MeYBP8Q9
Iz3O6hdjUzwXftS9hPtwTr8ES7EMv2E5VmAlVmF1rEdsdu6T+Ml5L+N+nI+1
hy36ovhZVxcP4IL+vO4lbJW7oRjW6v/QFcMvcj1kwEX9Bd3L2CZ3x1NYp/9T
9xTmyq8gY6xx76uD7jw/FpeMuyjXxXa5B4pjvf4vXXHMk19Fpljjzu+ou8B/
gMvGXYr1hx1yz5gXYz6SM+JpOZs8gE+CyXJZeQqfFxucvzXGYb5jlR37hn+N
f5h/l78br/C/0sz6e/hOfCt6Ua5Jf5R7x3cll6SfyZ1odvoG/Y0Opldc73L8
HprLO42vSr+Te9BesS7ox3J7mom+TpfQAbSE49npQDlpzBM/l07RP8dP5fNh
o+tsoyXiG3asPh5xfJScFlnkdPE98Zf4cbjqnCvyq9gl945nQQ7jBumSYaq8
ybjtfMn4luTX47vDNf3VeHfYLffBM9is36F7BgvlBvHd4Lr+Wny/+Fvui1LY
ot+pK4VFcsOYQ9yINYhd+mexWPdGvA/cjPUWaybmM5497jGui93GlsYS496M
58Et/fV4t9gj98Oz2Kn/W1cGS+VGyIl/9Td0DbBX7h/7JHbp9+jKYpncGI96
X6NjL0Su+P7lLvxl/iPcds7N2PewTx4Q35gxn8T6imvHNeXB/B3xbfHz6DR9
OX4a34U+RBvTlfG+/eZe+hyaxnoz9gX6rdyNviU/Rt+T29J0Mc90Ie1Hc8e+
Q7vKrWOdxr5If5L7xHqMuaSfy51pDvomXR57rWvfinWO/cZV08/hB8ZewI+P
9RbvSM4lD+HvxFdyefkrPn+sAb+zj5bDcseaoGD8zZDvRZ7Y/+Ru/FX+EyRi
buJecIAfFN8Bchs3VJcc0+U9fns/Xx4r5KbIG/uhcd111/jxSBLzIzfCQX5w
vHPsdf4BXQWslJuhkHPHyOljzfOLaH+aL/ZS2kO+zk9AUvwX84VD/JB4duzz
uwd1FbFKbo6HkCyeLeZNf5gfigrYb/wh3fNYLbdAftwR9258E/0Rfhgq4oDx
h3WVsEZuiQK4M+7J+Kb6f/i38TwOGn9EVxm/y61iH0TyuCfjm+mP8u+gEg4Z
/4/uBayVW8c+gxRxT8Y31x/jh8feisPGH9W9iHVym/hekMHYnrob/ESkjHvU
tdAd50fEekYe3TBdCsyQj/i9Y3wVrJfbxjpHxthLdTf5T5EqnkHXUneCH4ni
8gT5wbifWA/y23xKzIz3LU/nC8Q7cp3jtCo2ONYOhR0fK9+HgnImuTd/i6/N
/8x/Fnsa/wWfM9YVv4LeFe+Ib8W3oCfl6vR7uWf83ZGfphPlDjRr7D10aXxX
tIrj+eg7chuaital82nf+B8t5p/OkLvSh+lbdFXMn2c5Qatho3Ev6mfx7fki
/Af8/SgkZ5b78P/yn8ceKX8Z+xpSxzzJrflT/ChUjfWrGx7PiG9iXckz+UfQ
hF9Nh9Bj7uN/fpR3sw==
               "]]}, Annotation[#, "Charting`Private`Tag$875706#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf8TnUYh/EH2SuyVWZpGA2kKEJZmUWRHWmhpGWFkp29tzKyt8yyNey9
qYykSLIyet9/XK/787nOeX6/5znne74nX/O2ddokSSQSk5MmEj1SJxLd0iYS
/6RJJLogHw5zSzGVz4GvuOeRBF/w3blL8qfIjyPct5jG58TXXCUkRU/+M+5f
uSsK4Ci3DNP5XJjCVUYy9OI/5y7L3VAQx7iNXCms01/Hcu4bPTem6lVwB3br
z2OH3B69nddDvyJ3x33x//VaOCQfd3yT/CTW662wgpuh341pelWckl/Br3Jy
7JErYaecSJdItJM/kC+YzfGn3Mff+UK+Kn+Gy/IbuD9+k1kbWX32cHx380M9
r3nC5zbLTyGzvsHxG3Ib3KO/oZ+TG8f90X/X05id9ILmSp+fGecikz7d8Wvy
2/Gb9Gr6abk+fpNTcR3kFPJeszJ2xf3m35c/lP82X8Nfcl9/v6d8Tf4cheI6
6nVwRP7F8R/k0tiov4lV3Cz9Xnyjv4CU6Mf34q7LPfAAfuVWYzafBzO46vE9
0Z/vzf0XaxEP4jfuO3yJPo7diHWHh3CS+x4DMBCDMBhDMBTDMBx9fe5mrD88
HPebW4MR6OfYrVhLKBzXjluLOXG/MJOrgdQYyffnbsf9RxGc4dZhLp8Ps7ia
cc8wKr43l0BfvSh+59ZjHpcfs7laSIvR8Vu4JOinF8NZ7ke9DDbpb2EDN18v
gDl6baTDPr0KdssfYUxcFz0p+uuP4IT8Io7Kfzj+k/w0Nus3zbaxluQ/zSY4
K2903oJYf5irXzffiTURv99sgOzW08m4TmbH+G5men2/XBVZ9D2xb5jt496b
H+sX5RaxV+jn43eYXfT7zLFxT+VkyKh/6fgV+U08GmvRfAnH4rl1/CP5nM/8
bD6DH/hb5rvxfeW/zKb4Q97kvIXxfzBPfzHujfwqTskZcECuhr3yJxgX60u/
AwP0x+I6cVv0svhRb43N3KLYCzBffwkZMT7WJpccA/XH4zvF84TFXCEs4Ori
TkyIdRzPLgbpxXE+1gMmxvrmU2IwXyL2p7ifmITJ+ApfY0rs9/EsODcVhji3
ZDz3ca2whHsAC7l6yIRp8XxwqTFUfyLuVfzWeH9wD2IR9zIyYzo/kkuDYXop
/MNt1cvhJ70Ntsb7RH8Ii/VXYo3LDXFavgsH5RewT07mvn4gd4i/Z7bEBTk9
/2nsN/7eKDMt7uSGO3ZVfgu59Sdjz5HrIpt+XE8Ray+eV/OSz2+Tn8Vd+s+O
35bfi/1MbxvXXG6GnPq5eFbNzvq2eNeZD2MJ/5/ZGvXj2TIb4YycBYfk6tgv
d8Ql+XX8Lc/wd0bL6TBCfyr2PbkeTsj/Or5dLo8t+rvYzi3XC2Op3gBZcViv
gQNyJ8x03hg9PUbqpXGZ26FXwFb9PezgVuhF8K3+KrJhFj+Wy4BRepnYd+WX
8Yuc0rX4RM5vXnHuTrliXBvH2mEnt1IvimV6Q2THbH5cPNcYrT8d943bhVVc
MSznGiEH5vDj4x5jjP4MrnG7433CPYIVXGPkxFx+ApcJY/WysW9xe+J9EvsH
VnJNkAvz4pniMmOcXi7uJ7c33jHcY1jFNUVuzI/nLNYMxuvP4ga3L94t3ONY
zTXD3VgQzySXBRP08rHfcvvjfcMVx3dcc9yDhfH8clkxUa8Qexl3IN43XAl8
z72Ge7EonvVY45ikV4x1zB2M9w1XEmu4FsiDxbEvcNkxWX8OCezSn8N2+f1Y
t87boD+BtXpL5MURvSYOyp1jjcqtcFHOYC10jf3PXOLz/wNoxnyp
               "]]}, 
             Annotation[#, "Charting`Private`Tag$875706#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8662284597909985`*^9, {3.8662284917127976`*^9, 3.8662286073598423`*^9}, {
   3.866228814283718*^9, 3.8662288261809163`*^9}, {3.866296165736125*^9, 
   3.86629617779922*^9}, {3.866296270296279*^9, 3.866296286880911*^9}, {
   3.866296335830066*^9, 3.8662963594464216`*^9}, 3.866297308461227*^9, {
   3.8662973469227767`*^9, 3.866297362467745*^9}, {3.866297392784931*^9, 
   3.8662975973956985`*^9}, {3.866297696154731*^9, 3.866297701526992*^9}, {
   3.86629779816571*^9, 3.866297836931162*^9}, {3.866297936859815*^9, 
   3.866297975188408*^9}, {3.8662980625741215`*^9, 3.8662981042866197`*^9}, {
   3.8662981455862503`*^9, 3.86629823304694*^9}, {3.866298352746193*^9, 
   3.866298368115219*^9}, 3.8662984665673494`*^9, {3.8662986349338493`*^9, 
   3.8662986688238792`*^9}, 3.866298699398982*^9, {3.8662987365709496`*^9, 
   3.8662987618037815`*^9}, {3.866298872493952*^9, 3.866298889634403*^9}, {
   3.8662989217400103`*^9, 3.866298992057249*^9}, 3.8663002113885527`*^9, {
   3.866300696776434*^9, 3.866300705775521*^9}, {3.8663007934601374`*^9, 
   3.86630092863838*^9}, {3.866301053652913*^9, 3.8663010877548747`*^9}, {
   3.8663012243386626`*^9, 3.866301273123871*^9}, {3.866301356961733*^9, 
   3.8663013870319986`*^9}, {3.8663100151660843`*^9, 3.866310067279215*^9}},
 CellLabel->
  "Out[3492]=",ExpressionUUID->"96c17d8b-64dc-4d2a-b530-180f5c0e4c6d"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"149fc050-1f06-4088-91f2-f3238d72a84a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 254, 5, 51, "Text",ExpressionUUID->"d5842f38-cc35-45d9-9af7-da158ecf4acc"],
Cell[CellGroupData[{
Cell[837, 29, 6246, 158, 444, "Input",ExpressionUUID->"aa2c8684-6e16-4bb1-a4b1-c0e9049a7f4e"],
Cell[7086, 189, 384, 9, 28, "Message",ExpressionUUID->"1f4d3e25-a583-460c-a129-126650944454"],
Cell[7473, 200, 582, 16, 51, "Output",ExpressionUUID->"530d5236-0895-4da9-a9ae-e66f4035e763"],
Cell[8058, 218, 222, 4, 32, "Output",ExpressionUUID->"efacb8cc-5b9d-4327-ac4e-c243c046f721"]
}, Open  ]],
Cell[8295, 225, 132444, 3231, 3081, "Code",ExpressionUUID->"fc3c1402-abed-4553-a13d-021194ac6f85"],
Cell[140742, 3458, 3150, 80, 181, "Input",ExpressionUUID->"1fcc698b-a09b-47ab-ba7b-71b38b3f1d76"],
Cell[143895, 3540, 289, 4, 51, "Text",ExpressionUUID->"9f439e66-0252-4504-9415-cefa2fb91a2c"],
Cell[CellGroupData[{
Cell[144209, 3548, 14530, 414, 657, "Input",ExpressionUUID->"c113c91d-ba61-46bb-8acb-0d58082f1b10"],
Cell[158742, 3964, 2456, 35, 32, "Output",ExpressionUUID->"73197643-67ea-4140-a54f-f14bd171ba90"],
Cell[161201, 4001, 2446, 34, 32, "Output",ExpressionUUID->"c107329b-4c38-4e51-a4d0-6a3f08891061"],
Cell[163650, 4037, 152358, 2675, 209, "Output",ExpressionUUID->"dd9fd51c-3f06-4475-b659-65980da846ba"]
}, Open  ]],
Cell[316023, 6715, 152, 3, 28, "Input",ExpressionUUID->"f145fe8e-520c-4c86-8296-07264c0c6d37"],
Cell[CellGroupData[{
Cell[316200, 6722, 7539, 225, 314, "Input",ExpressionUUID->"8aa4157b-8e27-49a9-bb19-fcc88bf4e770"],
Cell[323742, 6949, 1413, 20, 32, "Output",ExpressionUUID->"ae616cb5-5349-44e2-b5a4-2924801c5b40"],
Cell[325158, 6971, 143363, 2533, 209, "Output",ExpressionUUID->"96c17d8b-64dc-4d2a-b530-180f5c0e4c6d"]
}, Open  ]]
}
]
*)

