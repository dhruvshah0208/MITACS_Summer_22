(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    662199,      12953]
NotebookOptionsPosition[    660746,      12923]
NotebookOutlinePosition[    661149,      12939]
CellTagsIndexPosition[    661106,      12936]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix2", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_", ",", "nGrid_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "RHS2", ",", "xdot", ",", "\[Theta]", 
      ",", "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", 
      "Af", ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", 
      "Mf", ",", "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", 
      "t", ",", "sTable", ",", "s", ",", "time1", ",", "dT", ",", "time2"}], 
     "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS2", "[", "i_", "]"}], " ", ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          SubscriptBox["s", "i"]}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["s", "i"], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "i"], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            SubscriptBox["s", "i"]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}]}], "}"}]}]}], ";", 
     " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["s", 
       RowBox[{"0", " "}]], "=", " ", "S0"}], ";", "\n", 
     RowBox[{"dT", " ", "=", " ", 
      RowBox[{"\[Tau]", "/", "nGrid"}]}], ";", "\n", 
     RowBox[{"sTable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["s", 
          RowBox[{"i", "+", "1"}]], " ", "=", " ", 
         RowBox[{
          SubscriptBox["s", "i"], " ", "+", " ", 
          RowBox[{"dT", "*", 
           RowBox[{"RHS2", "[", "i", "]"}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "nGrid"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "sTable"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"xState", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", 
     RowBox[{"x2dot", "=", 
      FractionBox[
       RowBox[{"u", "+", 
        RowBox[{"A", " ", 
         SuperscriptBox["\[Theta]dot", "2"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"A", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"\[Theta]2dot", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"u", "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"fx", "=", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", 
     RowBox[{"L", "=", 
      FractionBox[
       SuperscriptBox["u", "2"], "2"]}], ";", 
     RowBox[{"Af", "=", 
      TemplateBox[{"fx", "xState"},
       "Grad"]}], ";", 
     RowBox[{"Bf", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", "u"], "fx"}]}], ";", 
     RowBox[{"Q", "=", 
      TemplateBox[{
        TemplateBox[{"L", "xState"}, "Grad", SyntaxForm -> Del], "xState"},
       "Grad"]}], ";", 
     RowBox[{"Mf", "=", 
      TemplateBox[{
        RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"u"}]], "L"}], "xState"},
       "Grad"]}], ";", 
     RowBox[{"R", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]], "L"}]}], ";", 
     RowBox[{"S0", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"Transpose", "[", "Af", "]"}], ".", 
         RowBox[{"S", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"S", "[", "t", "]"}], ".", "Af"}], "-", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", "Bf", "]"}], ".", 
           RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"xdot", "\[Rule]", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]dot", "\[Rule]", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"u", "\[Rule]", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     RowBox[{"sol2", "=", 
      RowBox[{"S", "/.", "\[VeryThinSpace]", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["S", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "\[Equal]", "S0"}]}], "}"}], ",", 
         "S", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
     RowBox[{"S", "=", 
      RowBox[{
      "sol2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
   "]"}]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"CalculateGains2", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "sTable_", ",", 
     "nGrid_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "index", ",", "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", 
       ",", "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q",
        ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"index", " ", "=", " ", 
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], ",", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Tau]", "/", "nGrid"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", 
          RowBox[{"Indexed", "[", 
           RowBox[{"sTable", ",", 
            RowBox[{"1", "+", "index"}]}], "]"}]}], ")"}], "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateGains", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",",
        "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ffCartPendulum", "[", 
   RowBox[{
   "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
    "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
    "maxCount_", ",", "initGuess_", ",", "maxJ_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "frootNew", ",", "errorNew", ",", "InitGuess", ",", "J", ",", "S", ",", 
      "K", ",", "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", 
      ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
      "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
      ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
      "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
      ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
      "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
      ",", 
      RowBox[{"xGuess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["xGuess", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{"xdot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
             ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "\[Theta]dot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"A", " ", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                ")"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
             ")"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "0", ",", "\n", "\t", 
        RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", "A", "+", 
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Lambda]2"}], "+", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
              RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "A", " ", 
                  SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                 SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["A", "2"], " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
              RowBox[{"2", " ", "\[Lambda]4"}], "+", 
              RowBox[{
               SuperscriptBox["\[Lambda]4", "2"], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"2", " ", "A", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                 "-", "\[Lambda]4"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
              RowBox[{"A", " ", 
               RowBox[{"(", 
                RowBox[{"\[Lambda]2", "-", 
                 RowBox[{
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"A", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}],
         ",", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"4", " ", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"A", " ", "\[Theta]dot", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
         "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], "\n", 
     RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      StyleBox["xGuess",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["Table",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["If",
          FontWeight->"Plain"], 
         StyleBox["[",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"i", " ", "!=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]],
            FontWeight->"Plain"], 
           StyleBox[" ",
            FontWeight->"Plain"], 
           StyleBox["=",
            FontWeight->"Plain"], 
           StyleBox[" ",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "i"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["+",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"\[CapitalDelta]t", "*", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}],
             FontWeight->"Plain"]}]}], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "0"], " ", "=", " ", 
           RowBox[{"{", 
            StyleBox[
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}],
             FontWeight->"Plain"], 
            StyleBox["}",
             FontWeight->"Plain"]}]}]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
       "}"}]}], ";", "\n", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
             "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                 "\n", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                  "]"}]}], ")"}]}], "+", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\n", "\n", 
     RowBox[{"sv", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\n", "\[IndentingNewLine]", 
     RowBox[{"froot", "=", 
      RowBox[{"FindRoot", "[", 
       RowBox[{"eqns", ",", "sv", ",", 
        RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "n"], ",", 
               SubscriptBox["xdot", "n"], ",", 
               SubscriptBox["\[Theta]", "n"], ",", 
               SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "0"], ",", 
               SubscriptBox["xdot", "0"], ",", 
               SubscriptBox["\[Theta]", "0"], ",", 
               SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
             "ICs"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "i"], ",", 
                  SubscriptBox["xdot", "i"], ",", 
                  SubscriptBox["\[Theta]", "i"], ",", 
                  SubscriptBox["\[Theta]dot", "i"], ",", 
                  SubscriptBox["\[Lambda]1", "i"], ",", 
                  SubscriptBox["\[Lambda]2", "i"], ",", 
                  SubscriptBox["\[Lambda]3", "i"], ",", 
                  SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                  RowBox[{"{", 
                   RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
          "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", 
     RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";"}], 
      "*)"}], "\n", "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                 "2"}]}]}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
          " ", 
          RowBox[{"(", 
           RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
        " ", 
        RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
       RowBox[{
        RowBox[{"InitGuess", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         StyleBox["xGuess",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["=",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["Table",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           RowBox[{
            StyleBox["If",
             FontWeight->"Plain"], 
            StyleBox["[",
             FontWeight->"Plain"], 
            RowBox[{
             StyleBox[
              RowBox[{"i", " ", "!=", " ", 
               RowBox[{"-", "1"}]}],
              FontWeight->"Plain"], 
             StyleBox[",",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               SubscriptBox["xGuess", 
                RowBox[{"i", "+", "1"}]],
               FontWeight->"Plain"], 
              StyleBox[" ",
               FontWeight->"Plain"], 
              StyleBox["=",
               FontWeight->"Plain"], 
              StyleBox[" ",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "i"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["+",
                FontWeight->"Plain"], 
               StyleBox[
                RowBox[{"\[CapitalDelta]t", "*", 
                 RowBox[{"f", "[", 
                  SubscriptBox["xGuess", "i"], "]"}]}],
                FontWeight->"Plain"]}]}], 
             StyleBox[",",
              FontWeight->"Plain"], 
             RowBox[{
              SubscriptBox[
               StyleBox["xGuess",
                FontWeight->"Plain"], "0"], " ", "=", " ", 
              RowBox[{"{", 
               StyleBox[
                RowBox[{
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}],
                FontWeight->"Plain"], 
               StyleBox["}",
                FontWeight->"Plain"]}]}]}], 
            StyleBox["]",
             FontWeight->"Plain"]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           StyleBox[
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"n", "-", "1"}]}], "}"}],
            FontWeight->"Plain"]}], 
          StyleBox["]",
           FontWeight->"Plain"]}]}], 
        StyleBox[";",
         FontWeight->"Plain"], "\[IndentingNewLine]", 
        RowBox[{"sv", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
               "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"frootNew", "=", 
         RowBox[{"FindRoot", "[", 
          RowBox[{"eqns", ",", "sv", ",", 
           RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"errorNew", " ", "=", " ", 
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "n"], ",", 
                  SubscriptBox["xdot", "n"], ",", 
                  SubscriptBox["\[Theta]", "n"], ",", 
                  SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
               ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "0"], ",", 
                  SubscriptBox["xdot", "0"], ",", 
                  SubscriptBox["\[Theta]", "0"], ",", 
                  SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                "ICs"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Thread", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
             "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
          RowBox[{
           RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
           RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
           RowBox[{"uff0", "=", 
            RowBox[{"ListInterpolation", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
               " ", "froot"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
              RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
           "\n", 
           RowBox[{"J", " ", "=", " ", 
            RowBox[{"NIntegrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
           ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
        RowBox[{"count", " ", "=", " ", 
         RowBox[{"count", "+", "1"}]}], ";", "\n", "\n", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Count Shooting= \>\"", ",", "count", ",", 
          "\"\<    Error New = \>\"", ",", "errorNew", ",", 
          "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}]}], "\n", 
      "\n", "]"}], ";", "\n", "\n", "\n", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                 "2"}]}]}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"CalculateSMatrix", "[", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"K", "[", "time_", "]"}], " ", ":=", " ", 
      RowBox[{"CalculateGains", "[", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";",
      "\n", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}]}]}],
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum2", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_", ",", "initGuess_", ",", "maxJ_", ",", 
     StyleBox["nGrid_",
      FontWeight->"Plain"]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "time1", ",", "time2", ",", "sTable", ",", "frootNew", ",", "errorNew", 
       ",", "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", 
       "error", ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]",
        ",", "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", 
       "\[Lambda]3", ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", 
       ",", "eqns", ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", 
       "xff0", ",", "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",",
        "uff0", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", 
       "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", 
       "\[Lambda]4ff0", ",", "i", ",", 
       RowBox[{"xGuess", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       FractionBox["\[Tau]", "n"]}], ";", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{"xdot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"\[Lambda]4", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
         "\[Theta]dot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "0", ",", 
         RowBox[{"-", "\[Lambda]1"}], ",", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"A", " ", "\[Theta]dot", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{"\[Lambda]4", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}]], 
          "-", "\[Lambda]3"}]}], "}"}]}], ";", 
      RowBox[{"InitGuess", "=", "initGuess"}], ";", 
      RowBox[{"xGuess", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[NotEqual]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]], "=", 
            RowBox[{
             SubscriptBox["xGuess", "i"], "+", 
             RowBox[{"\[CapitalDelta]t", " ", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}]}]}], ",", 
           RowBox[{
            SubscriptBox["xGuess", "0"], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}]}], "}"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["xdot", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["x", "n"], "\[Equal]", 
          SubscriptBox["xdot", "n"], "\[Equal]", "0"}], ",", 
         RowBox[{
          SubscriptBox["\[Theta]", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["\[Theta]dot", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["\[Theta]dot", "n"], "\[Equal]", "0"}], ",", 
         RowBox[{
          SubscriptBox["\[Theta]", "n"], "\[Equal]", "\[Pi]"}]}], "}"}]}], 
      ";", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "i"], ",", 
                SubscriptBox["xdot", "i"], ",", 
                SubscriptBox["\[Theta]", "i"], ",", 
                SubscriptBox["\[Theta]dot", "i"], ",", 
                SubscriptBox["\[Lambda]1", "i"], ",", 
                SubscriptBox["\[Lambda]2", "i"], ",", 
                SubscriptBox["\[Lambda]3", "i"], ",", 
                SubscriptBox["\[Lambda]4", "i"]}], "}"}], "\[Equal]", 
              RowBox[{
               RowBox[{
                FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                 ")"}]}], "+", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["x", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["xdot", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Theta]", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Theta]dot", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]1", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]2", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]3", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]4", 
                  RowBox[{"i", "-", "1"}]]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", 
      RowBox[{"sv", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["xdot", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Theta]", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Theta]dot", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]1", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]2", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]3", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
              "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time1", ",", "froot"}], "}"}], "=", 
       RowBox[{"Timing", "[", 
        RowBox[{"FindRoot", "[", 
         RowBox[{"eqns", ",", "sv", ",", 
          RowBox[{"MaxIterations", "\[Rule]", "maxIter"}]}], "]"}], "]"}]}], 
      ";", 
      RowBox[{"error", "=", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], "-", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], "-", "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "\[VeryThinSpace]", "froot"}], ",", 
         "\"\<Frobenius\>\""}], "]"}]}], ";", 
      RowBox[{"count", "=", "0"}], ";", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], " ", 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"error", ">", "maxError"}], "||", 
           RowBox[{"J", ">", "maxJ"}]}], ")"}], "&&", 
         RowBox[{"count", "\[LessEqual]", "maxCount"}]}], ",", 
        RowBox[{
         RowBox[{"InitGuess", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         RowBox[{"xGuess", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[NotEqual]", 
               RowBox[{"-", "1"}]}], ",", 
              RowBox[{
               SubscriptBox["xGuess", 
                RowBox[{"i", "+", "1"}]], "=", 
               RowBox[{
                SubscriptBox["xGuess", "i"], "+", 
                RowBox[{"\[CapitalDelta]t", " ", 
                 RowBox[{"f", "[", 
                  SubscriptBox["xGuess", "i"], "]"}]}]}]}], ",", 
              RowBox[{
               SubscriptBox["xGuess", "0"], "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "4", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "4", 
                  "\[RightDoubleBracket]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
         RowBox[{"sv", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["xdot", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Theta]dot", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]1", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]2", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]3", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]4", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "\[Rule]", "maxIter"}]}], "]"}]}], ";", 
         RowBox[{"errorNew", "=", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], "-", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], "-", "ICs"}], 
                ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "\[VeryThinSpace]", "frootNew"}], ",", 
            "\"\<Frobenius\>\""}], "]"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", "\[LessEqual]", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", "=", "frootNew"}], ";", 
            RowBox[{"error", "=", "errorNew"}], ";", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[Lambda]4", "i"], " ", 
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
                    SubscriptBox["\[Lambda]2", "i"]}], 
                   RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                "\[VeryThinSpace]", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], 
            ";", 
            RowBox[{"J", "=", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
            ";"}], ",", "_"}], "]"}], ";", 
         RowBox[{"count", "=", 
          RowBox[{"count", "+", "1"}]}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}]}], "]"}], 
      ";", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["x", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["xdot", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Theta]dot", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Lambda]1ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]1", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Lambda]2ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]2", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Lambda]3ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]3", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Lambda]4ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]3", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], " ", 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"sTable", "=", 
       RowBox[{"CalculateSMatrix2", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A", ",", "nGrid"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"K", "[", "time_", "]"}], ":=", 
       RowBox[{"CalculateGains2", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "sTable", ",", 
         "nGrid"}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["xdot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]dot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"uff0", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
        "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", 
      RowBox[{"\[Kappa]3", "=", 
       RowBox[{"-", "0.1`"}]}], ";", 
      RowBox[{"\[Kappa]4", "=", 
       RowBox[{"-", "0.65`"}]}], ";", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["xdot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]dot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
        "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
            "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"us", "[", "t", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J"}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", 
     RowBox[{"\[Kappa]3", "=", 
      RowBox[{"-", "0.1`"}]}], ";", 
     RowBox[{"\[Kappa]4", "=", 
      RowBox[{"-", "0.65`"}]}], ";", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["xdot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         FractionBox[
          RowBox[{
           RowBox[{"u", "[", "t", "]"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Theta]dot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"u", "[", "t", "]"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
       "}"}]}], ";", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
         "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
         "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
         "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
         "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
       "}"}]}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
          "}"}]}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
             "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"J", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"us", "[", "t", "]"}], "2"], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.865967298267394*^9, 3.8659673001198*^9}, {
   3.866571893798601*^9, 3.866571940716648*^9}, {3.8665719967138014`*^9, 
   3.86657200493918*^9}, 3.8665721461421776`*^9, {3.8665731331726017`*^9, 
   3.8665731928485823`*^9}, {3.866573291140256*^9, 3.8665733048578844`*^9}, {
   3.866573636752106*^9, 3.866573657335546*^9}, {3.86657481838451*^9, 
   3.8665748273656473`*^9}, {3.866574870351947*^9, 3.8665748910333557`*^9}, {
   3.8665788373566265`*^9, 3.8665788400997524`*^9}, {3.866579031902623*^9, 
   3.8665790413156233`*^9}, {3.8665801062232275`*^9, 3.866580141002143*^9}, {
   3.866664127693946*^9, 3.8666641298202667`*^9}, {3.8667356182927976`*^9, 
   3.86673568611979*^9}, {3.866735735976613*^9, 3.866735746106326*^9}, {
   3.8667357917795067`*^9, 3.8667357922973385`*^9}, {3.8667369179510965`*^9, 
   3.8667371366351404`*^9}, {3.866737410171386*^9, 3.8667375163569317`*^9}, {
   3.866737646330759*^9, 3.8667376465136995`*^9}, {3.8667376988837075`*^9, 
   3.8667377777961025`*^9}, {3.8667386986753044`*^9, 
   3.8667387105614476`*^9}, {3.8667389141044035`*^9, 
   3.8667389332601886`*^9}, {3.8667389783395615`*^9, 
   3.8667389806728044`*^9}, {3.866739043478426*^9, 3.8667390512579017`*^9}, {
   3.8667390870272956`*^9, 3.8667391318757434`*^9}, {3.86674040926027*^9, 
   3.8667404968818393`*^9}, 3.866740531578581*^9, {3.8667406439541187`*^9, 
   3.866740650558975*^9}, {3.8667406893863773`*^9, 3.866740713276625*^9}, {
   3.8673532212089357`*^9, 3.867353262241763*^9}, {3.8673533765330715`*^9, 
   3.8673533879534054`*^9}, {3.867353479603982*^9, 3.867353730198533*^9}, {
   3.8673537746842513`*^9, 3.867353800998803*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[1253]:=",ExpressionUUID->"e27c67ff-0fad-4f7e-bb41-9ac878c93826"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "20"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "4"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
   RowBox[{"nGrid", " ", "=", " ", "30"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"EInitial", " ", "=", " ", 
   RowBox[{"Energy", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ICs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time1", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K1"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time2", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K2"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum2", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
      "u1b", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K1"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K2"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ff computation time case 1 = \>\"", ",", "time1"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ff computation time case 2 = \>\"", ",", "time2"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1b", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<feedback solution with backward integration \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<feedback solution with discrete integrator\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "p1a", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p1b", ",", "p1c"}], "}"}]}], "}"}], "]"}],
   FontWeight->"Plain"], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}, {3.8648376392630434`*^9, 
   3.8648376724073963`*^9}, {3.864837714278944*^9, 3.864837730198832*^9}, {
   3.8648378000064077`*^9, 3.8648378125593743`*^9}, {3.8649192769420185`*^9, 
   3.8649193477849746`*^9}, {3.864919494855133*^9, 3.8649194949211097`*^9}, {
   3.8649195280303416`*^9, 3.8649195281572976`*^9}, {3.8653430179727*^9, 
   3.865343036098905*^9}, 3.865343126059147*^9, {3.8653475497269955`*^9, 
   3.8653475530049467`*^9}, {3.8653477236523952`*^9, 3.865347782090714*^9}, {
   3.8653478250659747`*^9, 3.8653479145413723`*^9}, {3.865347947982681*^9, 
   3.8653479716121283`*^9}, {3.8653525506493053`*^9, 3.865352599733616*^9}, {
   3.865352652578721*^9, 3.865352654559091*^9}, {3.865353691929463*^9, 
   3.8653537130737047`*^9}, {3.8653538376038947`*^9, 
   3.8653538378768077`*^9}, {3.86535394844846*^9, 3.8653539491322412`*^9}, {
   3.865356726928239*^9, 3.86535675400958*^9}, {3.8653568966909695`*^9, 
   3.8653569073245697`*^9}, {3.8653569602766423`*^9, 3.865356975731701*^9}, {
   3.865357167158506*^9, 3.865357170606405*^9}, {3.865357223946353*^9, 
   3.8653572240363226`*^9}, {3.8653573936860905`*^9, 3.8653574653461814`*^9}, 
   3.8653581484318137`*^9, {3.8653592129605074`*^9, 3.86535921807887*^9}, {
   3.865449250153057*^9, 3.8654493036779404`*^9}, {3.8659655743007927`*^9, 
   3.8659655800469513`*^9}, {3.865965617846839*^9, 3.865965644481305*^9}, {
   3.865965768794471*^9, 3.8659657912472773`*^9}, {3.865965935003215*^9, 
   3.865965935326112*^9}, {3.8659659868356075`*^9, 3.865966006077441*^9}, 
   3.865966083507631*^9, 3.8659664582355595`*^9, {3.86596655432277*^9, 
   3.865966563962682*^9}, 3.8659666064800587`*^9, {3.8659666379409776`*^9, 
   3.865966662002268*^9}, {3.865966724901114*^9, 3.865966734984883*^9}, {
   3.8659667752089934`*^9, 3.8659667994792185`*^9}, {3.8659670983784432`*^9, 
   3.865967114308339*^9}, {3.865967415398863*^9, 3.865967415558814*^9}, 
   3.86596806058513*^9, {3.8659697572814713`*^9, 3.865969792480193*^9}, {
   3.865969847631523*^9, 3.8659698777298765`*^9}, {3.8659699125237284`*^9, 
   3.8659699227194633`*^9}, {3.8660520784155097`*^9, 3.866052078606448*^9}, {
   3.866299038992057*^9, 3.866299063807024*^9}, {3.8662991135359306`*^9, 
   3.866299117442664*^9}, {3.866299188589633*^9, 3.86629919001517*^9}, {
   3.866299354438949*^9, 3.866299364496692*^9}, 3.8662994378149586`*^9, 
   3.8662994758636427`*^9, 3.8662995455700784`*^9, {3.866309716236847*^9, 
   3.86630980613275*^9}, {3.8663098363239756`*^9, 3.8663098541502047`*^9}, 
   3.8663105182622347`*^9, 3.866310619892336*^9, 3.8663117939323*^9, {
   3.8665656447826576`*^9, 3.8665656490393023`*^9}, {3.86666037409522*^9, 
   3.8666605929433*^9}, {3.8666606653571625`*^9, 3.8666608053664308`*^9}, {
   3.866660839553507*^9, 3.8666608737455826`*^9}, {3.866661162186427*^9, 
   3.8666611737737226`*^9}, {3.8666653738348045`*^9, 3.866665397429268*^9}, {
   3.8667344208606143`*^9, 3.8667344797394304`*^9}, {3.8667353231215725`*^9, 
   3.866735333097335*^9}, {3.866735385339385*^9, 3.866735418014782*^9}, {
   3.866735702678417*^9, 3.8667357070869875`*^9}, {3.8667358235761895`*^9, 
   3.86673582400605*^9}, {3.866735896269603*^9, 3.866735924112569*^9}, {
   3.8667361218833976`*^9, 3.8667361220503435`*^9}, {3.866737159880598*^9, 
   3.8667371629755936`*^9}, 3.8667373705322485`*^9, {3.8667375563659506`*^9, 
   3.8667375763234744`*^9}, 3.866739987559099*^9, {3.8667402825863724`*^9, 
   3.866740283643031*^9}, {3.8667403886539574`*^9, 3.8667403924007425`*^9}, {
   3.8667405674789343`*^9, 3.8667405865157566`*^9}, {3.8667407977972016`*^9, 
   3.866740821291578*^9}, {3.8671630011884055`*^9, 3.867163020098357*^9}, {
   3.867352977485181*^9, 3.8673529973358107`*^9}, {3.8673530973936853`*^9, 
   3.8673531264093695`*^9}, {3.8673532479253597`*^9, 
   3.8673532480693145`*^9}, {3.867353394522298*^9, 3.867353424387709*^9}, {
   3.8673538177504263`*^9, 3.867353991042793*^9}, {3.86735409649494*^9, 
   3.867354178349663*^9}, {3.8673553380933447`*^9, 3.8673553396948304`*^9}},
 CellLabel->
  "In[1462]:=",ExpressionUUID->"fe1c9938-1e81-4c93-bed6-a86c7347dd44"],

Cell[BoxData[
 RowBox[{"-", "0.2`"}]], "Output",
 CellChangeTimes->{{3.86735298013033*^9, 3.867352984957781*^9}, 
   3.8673531272351046`*^9, {3.8673532437467012`*^9, 3.8673532685517373`*^9}, {
   3.8673534066334085`*^9, 3.867353425221441*^9}, 3.8673536594832354`*^9, 
   3.8673538183512325`*^9, 3.8673538877569513`*^9, {3.867353932911455*^9, 
   3.867353991326702*^9}, 3.867354179894165*^9, 3.867355340868453*^9},
 CellLabel->
  "Out[1476]=",ExpressionUUID->"15d040c8-76f8-42cb-bfdd-b7aa4ebae07d"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 1480, 99, 
   17550245024740879615, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8673532499667034`*^9, 3.8673532699612846`*^9}, {
   3.8673534070882626`*^9, 3.867353426841921*^9}, 3.8673536608198056`*^9, 
   3.8673538197157946`*^9, 3.8673538890955215`*^9, {3.8673539342740173`*^9, 
   3.8673539928722057`*^9}, 3.8673541817845583`*^9, 3.867355342728855*^9},
 CellLabel->
  "During evaluation of \
In[1462]:=",ExpressionUUID->"0b2a125e-9510-4c15-901a-cb7f06d17bd0"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$233817\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$233817\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"2.421797291797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.486994504056302`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.0024288839691570417`\\\"}]\\) for the integral and \
error estimates.\"", 2, 1480, 100, 17550245024740879615, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8673532499667034`*^9, 3.8673532699612846`*^9}, {
   3.8673534070882626`*^9, 3.867353426841921*^9}, 3.8673536608198056`*^9, 
   3.8673538197157946`*^9, 3.8673538890955215`*^9, {3.8673539342740173`*^9, 
   3.8673539928722057`*^9}, 3.8673541817845583`*^9, 3.867355342739852*^9},
 CellLabel->
  "During evaluation of \
In[1462]:=",ExpressionUUID->"7eb7131a-ce2a-4ffb-a285-54b3227c31bd"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ff computation time case 1 = \"\>", "\[InvisibleSpace]", 
   "0.609375`"}],
  SequenceForm["ff computation time case 1 = ", 0.609375],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8673539343359976`*^9, 3.867353992907194*^9}, 
   3.8673541818185472`*^9, 3.8673553427628446`*^9},
 CellLabel->
  "During evaluation of \
In[1462]:=",ExpressionUUID->"0345059d-8208-4682-a6eb-d8a84ee4ee0b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ff computation time case 2 = \"\>", "\[InvisibleSpace]", 
   "0.3125`"}],
  SequenceForm["ff computation time case 2 = ", 0.3125],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8673539343359976`*^9, 3.867353992907194*^9}, 
   3.8673541818185472`*^9, 3.8673553427658434`*^9},
 CellLabel->
  "During evaluation of \
In[1462]:=",ExpressionUUID->"1fa4c5c0-b2ba-443d-acb8-e72906eb111b"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
8EwsVo9xPt3M6rsrVEQofu+aLbKunwBZLMv3Ktj1kQ18W+85RIShjlEn7M7M
Icti1i/BFWS4i75yLuYwExS9unw5PZkApSbOr+HuZ6F7hqzNfr/IMGT/Secg
YyaI2z317pECEXZOLlCjReYRx7SAe4w5GVY7Zx47g+1fGyuc/ZhFZJhqtCEm
Fts/cV7ta978+v0eYvH6nyctzvIQ4bNdjjWfsPne2hGo2LybDCPcXLvWmTLB
dn7x0oFKAlSTfurtzDOPJBMesep0iHBft5DA6WkWahZ59MnSjwyN0kJWnsfq
3fLXC8efzS3ND86z+fY5SJoIEaG/fnZKo3MrcNmd+gpW9AKDjruvpFb3AJ/V
rtNpBc2Aed/jU9dpGlDN79gk6vME4Hw7Uq7sd+OFSjbfPtdb/27rix9snn34
qADdFS7xbNfEt/6sezQ2z77lGvbIR5fO5tlJnX/P2y7+ZfPsjOp0lfGUMTbP
Nl1cp113ZIrNsxeTuCaHLRhsnl1jbBVsZMxCOaaVHG1HibCiWLpGms5CmVL1
bjcsOGB6Ts++/YxZNKwo/SXjLCeMP0uLqD09hqrazle9cOaCmiJ/KPW27ci5
MdzqrDc3PJ4waqce0QBOr1r4lXyVByZG/FBOpg+AXrtPtV53eGE4V3NeQPYE
qCo6te5KIAmmNc1CzvQZYKrTX9N6gw9ulpCXOP+ZAaKqqn6X3ifD2b8KxH94
hNCLPz177vHDoKqevwl9DLBeUijU9akAFOfTzD59Eevvfog1uL8ShPcPHv3e
qjANtvSZzHLFC8GuTuOJQbMJwJwaCZf5IAwzeNWXuW8fATiPL7SPYar8mUU4
j/9ETsgvcCEUz6Y/CaVZLtUn0fMOn557LN0POpn3W1ROdoIVyn4GMKIbQGOt
x/y7sf6+ZCH6YU85eE+5OZ9r1Afu/zzDs80vl83vZVbNmwtLNbB5fGlX+aVV
en1svp7JtfeX8KUZtLiSS37zy0VgTT74YgWDifarhYMXTQToG7gjKl9oHnVY
z50waiXCvt0OEzqv5hBPi/SZoS4OKC94f1jbfwpJv/9r1jrLDfvXVR9TnKcA
nYsCozkLWD+gXbZrLGkUcF7sdr/JTYJ7XGQfQAL2PJRXtpVF4IOXhPn17Ptn
QdwH3rExLqx+025zfML6edKfhec/+Pih5DMut5cHmKBia1NGj4gApF45q5C8
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
PUk=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{901, 2748, 2746, 422, 423, 424, 425, 812, 708, 
                622, 552, 499, 466, 834, 730, 644, 574, 520, 851, 747, 661, 
                591, 426, 813, 709, 623, 871, 767, 553, 857, 753, 892, 667, 
                880, 776}}], 
               PolygonBox[CompressedData["
1:eJwV0slLVWEYB+Bj0sKMypyHzP6BBoeGpUGBRQWBlWWTEBSREY0mGRQ0WalN
uigocFfZYMO1eV40u6zUJoeVLRIabHy+xcPvfX/fOfdyzz3jKtbPrxwSRVEc
7bQNi6IYI5RvlDHy46PoqX0T4/mh20+y/qy9lJG81bVRoH9m38wEfuoOkKI/
Z1/AKN7pblDLQVKdn9cvJIkO3U0OkeasRbeI0XTqblGof27fwkQGdYdJ11+w
l5FMl+42dWQ4u6hbTArvdXeoJ9PZJd0SUvmgu0sDWc4u68pJ46PuHkX6F/at
TOKX7gjZ+lb7UtL5pLvPZP1L+zby+a2bo+sx11HCUV2O7op5GRnhOdv7ZSOf
nc+wd5r3stYcT3G4Xn6TNfK03CgTeeCeKfJV+G5ZJVfLiF0UhGciv8od8qTc
IBPYwx/3z5W9+ipZL9fJoexmlr1CDsqdsjm8M3I4x9w7Rl7VLWdV+DyZGd4H
8xfZRLfrZtq7zPuYHq63f5dneOh8qv21eTtrzHEUhv9MDshT/HXdPHufuYHZ
HNfl6q6ZV5BFj+4R0/Tt9mqK+Kc7wVj9dftKsunVPaaRPGex8JvJoU/3hP9P
hmz4
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{387, 2747, 2744, 596, 682, 786, 392, 503, 557, 
                627, 713, 817, 439, 472, 525, 595, 681, 785, 391, 502, 556, 
                626, 712, 816, 438, 471, 524, 594, 680, 784, 390, 389, 388, 
                437, 470, 523, 593, 679, 783}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVWEABuDj1QyEfkLDda72VtokaZaZlBtbFKSWlppCEIGV2gBR6SZd
pFaW5Y/QJrXABm2wyVZNG7VBjYIiiJ5v8fC+33vuwDn3xisbyxpiURQl8ICB
lCgapN9wkxu84AdZXniI+6xMjKI+23PmybTVM8IK167bnjFHhq2OYZa7ds22
UF/Had6Rb39qnyXduZYhsu29tmR9LaeYZKN93F6kt/OZbbbvtjT9IPfIsl21
leqdzFBmWyB7+cUe5zx5krdscB4L967/ocJ5s0yS9bTpnyjWv4V7kY10247J
OblLpobPlP9ktTwgj8q7MlNe8d6zchFH6Le3yr+ySm6XZ2QyDXQ4N8lpuVMm
yRR5ONyj/pPdeq6MyVpa9Tes15/4vj79N3udC+UFPrLV+avrXfos5c5xWcMd
Mpwvu16iX2SKHbZEuYYWXoff1PbY6wr083xgi+2LbVl4Dtwm3dZji+mraeZV
+I3tj+yb9HO8p8g2Y1uq7+cWaeF52xL0VZzgJXn2h/ZpljjvY5BUe1f4k+s5
HGeCXPuofYrF4bkzQNx+yfYftkRk1Q==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03ecz3UcwPHL3tzZ2xmHqBRJRpnhKCESJTMJnWwyKntUPDSMJqFklJHd
IDsNIqOByMgolArl+X48+uN5r/fnfb/73fe+v+8ld0lr9eQNCQkJfX2JlvZl
n8Zypj6qeRlCT+eWmpH+bHPuoUUZThPnBnpZn9K12lULMsncXnPxjbmXlqSq
+XY9pYsYTlvnbOyKn6GZ+T/dyHTSUcbuO53FEzSlod1fuo7JVKO63WldzAg6
kJ6y9vt1dlwLqXEdZCAjmchMOa87oK/RO64l3pM77H/VJYzkYbKQYn9QX6cP
zeO11LA/o0sZxSNkpbz9IX0j7jn3xmu50/6sfsAzdCQbFey/1zdJ4z4a2f2t
65kSP0tNu3P6Ic/yoHN2vozPNK4rPmw2yUtx/eY87DFnp6L5B32LTuZ89DW3
0kxsNz+uxWhhvkf/0X66QbtpIZ7m+bjvmptB7I57qaUYSU3nWnr+/+dwmXbR
AgzjOed2moOBfBWfuZagU9yzeHb53NxdC/Ny3GNN5FtzDm40/6hvx/NJa+fM
7DDfT2PzFf2YF+KaqG33my5nNJ3jntulY7P5FXJSyfknnRP3IP5PaGJ3VT/h
xXgv6tj9risYE38nuahsf1jn0j/uc7yWu+wv6ErG0pXc3GR/RN9hQPwt8Vru
tr+oHzEuPgfycLP9UZ3HQB6I15LILb73s85nEG2oSxJ5yUd+ClCQQhSmCEUp
RnFKUJJSJFOaMpSlit9xTBcwmLbUoxy3+t5xfZch8axSP67B/pKuYnx8tqRw
m/0v+h5D49mgqd01/ZSpNIj3t/tDVzOBx2hhl54t5lcpT1XnE7qQYXFvnLOw
0/wQqeZ/9TOm0TCuz+5PXcPEeJ1zTr4294jnyZyBrfF7tQgzzB01icHsde6j
yYyignM1Palp+n48b5qfofG/FJ+NZmUAXzj31OKM4DoBYZ5S
               "]], 
              
              LineBox[{146, 69, 104, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$233955#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jnUcBuDXkZGRvfemKHtTFELI0aDS0FJCKZV2jj0yi4wyM9oDxyaU
vSqr7Owyyyy6vp/+uM79+96/53nPeZ9xSnTqntwtTSKR2OVHCtnSJhIzkhKJ
tmRmm24OfehLP7I7Zqa9ZLKwXTeXyvrV5h5U5LyuPzn0s8ztyMoO3Tyq6NeY
X6QSF3QDyKmfbb6H1EyJxA1ypz6VqvbWml/iZi7qBpJL/6n5XrIl/f995lNN
v87ck1u4pBtEbv1n5vvIzq+6BQxmCHnsf66/nxz8plvIUPLa+0LXnpzs1i2i
un69+WUqc1n3Hvn0X5o7kIs9usUMI7+9r3QPkJu9uiUMp4C9r3UPkod9uqWM
oKC9b3QPkZf9umXU0G8wv0IVruhGUkj/rbkj+TigW05N/Ubzq1TlH10r3SHr
YTRnlK6w7jvrh8kf19n8pxzDQftNzLut+9PFOi2N4nh5Xr4lJ8W9lpn53jm1
5Kb43bKX7CwT9KZaXBN5Vr4pJ8gX5PX041/nt5aH9b3kcNlVpiOFFuZO8rJ8
W06LZ0ZmYbRzi8g5ukd4Mj5PFojnwfqkHMvvjmtq3mM9gMZxvPmCnMwK+7XN
m61f4xnrNFSPeybPyYlcdVwb8xHrEbTkfV1R3VzrRynIId1K6ui3mF+nBtd0
H1BMP8/8GIU4rFvFGIrbS43vTGGO6H6Id8D7M1aWsD9f/zhFOKr7kbr6reY3
qEmCD/Ul9Qusn6Aox3Srqaf/Ke4JtUjDOH0p/cK4lhTjuK6Zbq/1QG5nja6+
7ud4HqhNEuP1pfWLrJ+iOCd0d+r2WQ/iDtbqGuh+iXtKHdJyt+6oHMldTHBc
Gd1i66cpEe+x+VR8N/6w39y833owTeIemC/KKayz39C8zfodnrVOom68b/Iv
+RE9rDNxnXVbeSyeAzlKdpPp6UOruO7ySnyenC57yqz0Z6LfV1YuifdWdo7r
IK/Kd2VJ2V6ejmdCjpPdZYZ4B53bQh7QDeG5+HtoGs+JvCSnst5xt5q3x2dS
j47mv+XHpCPZfFyOpnV8R+eU0y2NZ5tSnNS11B20HkozNuhu0+2w7k190sfn
6svrl8U1pDSndBtppN9pTqEBGZikr6Bfbt2FMpzWbWIyN8b/jfiOlOWMbjNT
uMneCl1XynFWt4WpTGN6/H/3LnwiZzCTWVR03sq4X5TnnG4rjfW7zH1oSEba
6U7Eu0sbZjuukm5V3I941qyvyQp0sD4T75UcL5+XGenLfzCQ8T8=
               "]], 
              
              LineBox[{844, 740, 654, 584, 467, 835, 731, 645, 575, 521, 427, 
               814, 710, 624, 554, 500, 468, 428, 429, 430, 431, 432, 433, 
               434, 435, 815, 711, 625, 555, 501, 469, 836, 732, 646, 576, 
               522, 852, 748, 662, 592, 868, 764, 678, 886, 782, 904, 436}]}, 
             Annotation[#, "Charting`Private`Tag$233955#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUYBdADl1ZJpUNaQRpplEZBGqSV7hDFxsLAQDokpLvBQEWlW0Cl
DFIBpfNRBEHX+2M97/72fHPPuXNmJn+Xgc0HJEskEknJE4nhSYlEiZSJxOcp
EonZZmvzA/MeVnKX9XNmgkXMtP7ILBDn8KvzO5mn9fPN983RZi5qyEPNO1kq
f2wW5VvnNDD36gZTjFesU7NA/tvxfvJf8kQa8aGupG613Ib0HNJ11p2J70xN
1uoa6vbJz1Kc67oRlNJ/Yd2WDBzWrWMkoxjNGMYyjtL2f2lfOzJyRLee8ZRx
7CtdezJxVLeBx/T745rxAP/oJlBWv8a6A5k5pttII/0B6+cpwQ3dRMrpv7bu
SBaO67rozsrDqcUmXWPdQfkFSnJT11/3d/xONI6pK6/7Rn6Cu+PzrJMxS/7N
8a7yubjOjJFzU1t+M+4Blsmb7Wsi/yS/yEg5B6XkV800LGGh9RSzcFxv/nXe
APO6foE5yRxv5uNTmlgPMzPF57DKerp5f1zj2O/8B+O+0c8xn4xrYGaN+zT+
dzM5s+VJZkF+d04387xuBGPlPNSR3zLTs1zeYl9T+Wf5JUpzSzdQ9488maYx
dRV0a+VOZOWErrvuQlwL6rJV10z3i/wyZbitm0JF/TrrzmTjpG4bzeM5sh5C
Wf7TTaWSfr11F7JzSredFvpD8cxQjkQ8W/rK+g1yV3Lwh24H05jODGYyiyr2
brSnGzn5U7eT2VR1bJOuO7k4rfuOlvrD8VtTnmTxe+ir6TfLPcjNGd0uWumP
WL/GgyRnrr66fovckzyc1fXQXZRHUY/dusd1R+XXqUAS8/QP6bfKvcjLOV1P
3SV5NPXZo2utOya/QcX4HtZp4z0mp+Ap+UbcqzRjvnMe1m2Te5Mv7nPrJObI
5x3vJV+OZ4Rxcl4ekd82M7BCnmbex/f2tzGPx/c2h8b/Z+bkEyrF/2ami/cj
i62nmkXivUNK60HmTXOhOdWcYN7LZzS3ftfMHPdy/E3rGWaxeI/67Brmdl2f
eK7lbHFu3OdmCubKF+zrLV+JZ4RHecc6IyvlHxxvK/8W7wIqk4qn47mO+44W
8f3sq6nbIfclPxd1fXRX41rRgB917eL5jOeQKqRmkb6WfqfcjwJc0u1lMbUd
+07Xn4Jc1u1jCUtZxnJWUMfeXfYMoBBXdPtprz8RvxVVScNKfV39bnkghbmq
O0AH/cm4HlQjLc/obsVvTEtW2VdPtyfuJ4rEcx+/HfPka473la/J42nIQV1H
3Sl5GNXjHrW+I96fcjoGy7fN6UyU89NKfs/MEvdZvDutZ5rFWRO/v79bP+67
eM7MQeYIM3u8UylqPcRMFfca860nm4VYzf8lrQ4i
               "]], 
              
              LineBox[{1269, 1174, 1100, 984, 1374, 1255, 1160, 1086, 1035, 
               948, 1352, 1233, 1138, 1064, 1013, 985, 949, 950, 951, 952, 
               953, 954, 955, 956, 1353, 1234, 1139, 1065, 1014, 986, 1375, 
               1256, 1161, 1087, 1036, 1397, 1279, 1184, 1110, 1418, 1300, 
               1205, 1442, 1324, 1468, 957}]}, 
             Annotation[#, "Charting`Private`Tag$233955#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8zlUYxvHH3mTvsiMzMxQKEZUtIWUUSkZGoaGsSslIJUQhIyNCGdmU
WZS9s0MhZKR63398Xtd13ed8f9/nOefc5/kV7NCjafckiURiQNJEYnWKRGJR
qkTiLsxImUg8jqy4rL5LrRZ+lHugAtaoL1YrgJlyI2TDX+q71R7EJrknKmKt
+hK1gpglN0Z2XJTb4Dj/Lq6Yt0d+CJvlXqiEROpEopvaFX4C1pn3rVwIs+Um
SG/OK3ICOeRLtC1O8CNw1TN75drYIr8Un9kzg+TUqCwnkV/kr/L38dP4iXxh
/gM+J+ryC+izdL2/+R1fGPXlr8wtST+WW9GmcgbaX25Mk9DqdAZ9huaMNeaf
wqPyyVgvOiU+O31Pzk/fkZvTzLE2dB695t37aB1sNa+c+kS+d6wt/yafBlXk
pHL3eIafhCLyKDkXNvg7S2kRzDHWDLliL+V2OMW/j7/N2x/fH9vkPrFG2Ki+
TK0o5srNkRvX1X/AcvVimKfWAnlwQ/1HbMJmbMFWbMN2/ISfscJzd2O+Z1oi
L26qH1B7GNvlvqiKHerfqxXH1/ITyIdb6gfV6uEnuR+qYaf6SrUSWCC3irWO
Myg/jdP8SPxj3qHYX/wsv4wc1u8tOW3sp5xM7sH/zX+GovJoOTd+8fwqeg8W
Gitl7BP+ST4jP4BvQpPS++lM2p7eGWc2zgkek89EL9DP47zEeZTvpO/KLWiW
ONt0Pu1Ib3vvYf4RNJB3mH8vnSS3jl6Rc9LBcrp4t5xc7slf5yejmDxGzoNf
/b3VtCS+MdYad+FafF6c5UfhX/OOxDuxU+6PB7BLfY1aKSyS26AA/os7I/oe
a42VxmL1tigYvY+9xtapl8ES+SkUin7FUbWGsc78ANTAPvPXq5XFt3K76OHo
AxyLXovvww9ETew3f4NaOXwnPx09Emde7oDf+dGxz/gt9gO7+FdRCwc8v1Ht
XiyVn4kzED0Qe4Fz/JhYXxyXH8du/rXoNWs8RE4f96acQu7F3+Cn4GD0kVwe
y+T2yGTOQDlZ9Fb0E+2E8/zY2BfjI+SsSCGfoI2why9v7DP+9ehTfiifAbX4
OXG/qKfkX4pn6M3oLzo9+iLOn3w3HSs/QfNGL9KF9Dl6KHqbrxBnT15ufmk6
Ps487SDfQV+Vm9Lk9AE6K3o9+jvuVlzgK6t/wX8YZyXuQz4bUsonaWPs5d9A
baQyp7faLf4LHI47Rq6IFXJHFI95OBJ3j3olfC93Qom4L+J74A9+HFLjVPQo
9vGD4g7znmFyRtSJOXIf/h9+arxD/lDOh6Nxv9HKWGmsjLFP4zvymfnXYo9Q
g58d90TcObRznBO1P+UqdKrcjn4UfUHfl1vS7PEZ6NdxBmga46djbaMv5P1y
BTpZbhO/C3GP0uFyM5opzh2dS+saS8P35W/HPcl/yU+LteHH8flxLO5rWgWr
jJU1NiHWjc/Cvx57FHeFfJt2wUX+4+hb4yPlHEgrn4nPgQP8W8hn/G35jjhX
clq5H/8vPz36L34n5PuwWu4cd2rcO3JXXOI/QTqclZvjID8Y9aL/4jdGrSrW
yF3ifMY9JD+Py/x4pMfvcgsc4oegfvRS/D6pVcNauWvsKTLgXOwJDvND8Uic
0/gtU6uOdfLzsV7IiPPRQzjCD0ODOGvm71C7H+vlF1Aueh4X1FrFmeKHo2Hs
tfk7o4ewQe6GrNbsDTkVasb/JXGP0f8BU6RDsg==
               "]], 
              
              LineBox[{1899, 1779, 1690, 1552, 2030, 1881, 1761, 1672, 1612, 
               1512, 2003, 1854, 1734, 1645, 1585, 1553, 1513, 1514, 1515, 
               1516, 1517, 1518, 1519, 1520, 2004, 1855, 1735, 1646, 1586, 
               1554, 2031, 1882, 1762, 1673, 1613, 2059, 1911, 1791, 1702, 
               2090, 1942, 1822, 2119, 1971, 2151, 1521}]}, 
             Annotation[#, "Charting`Private`Tag$233955#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFGUUBuAhlFBCQlIBpVMaVLo7BJTukO4O6U5FFOnuklBBkQZJwSAk
lMagpEG83x/3dc7zzM6y3+zMkqFFl9qdY0RRlDZmFHWIG0Xp4kfR/HhR9A43
5a3Mpph+u64+CTip60h6/QL5XW7J25hDcf33ugYk5JSuExn0C+Vi3Ja/pY7u
F7krGZmrK6HbYW9IIk7rOvOGfpFcnDvyd9TV/Sp3IxPzdCV1O+2NSEx3+Z45
mTOON5Mv2geRlyFyTGbZuzj+pn2xvQR35fby3/bRbJfrySfD+zLenpDM9n7m
U/NT5ntdKXmXvXE41x6fV+w9zPvmInOKOd1MyVp+c15z81J4D3OwOSmcx0ry
yR+ZsVjCbPkzMw3r6er8jOGYfpZZ0hxhxuFfxzqY/+jGMNWeLHxX+vfNU+Gz
McGeiCz2/uYzcwYLvK60vNvehCT0lB+E9+Ks4y3ky+Gakj98L7pMuqX2UtyT
d7CQMvo9uqYk5ZyuO5n1y+TS3Jd3sogeZHFsub4MD+RdLKYnvehNVq9Z4XhZ
Hsq7WUIfsoXrqC/HI3kPS+lLdsdW6cvzWN7LMvrRnwEMJIfXrfaaCjyR97Gc
svq9umYk47xuEDn1a+SKPJX384HudLh+ZGWFrpxun705ybmga6m7Er5zCjBY
lyvcK/ZKPAvPonzTPpYDcn35jL0X2Rgg/xfuE1Y6Xl7eH541s0W4F8yXwjXj
1XCe+dBcbE4L97OZinX87vxW5tVwP5hDw3NlJgnXjoLyUDN2+M6ZI39upmUD
Q5yfO7yXfrZZ2Rxpxg2fMfxOmLd045hmT84P+gbh2dD1JjsD5efhvVnleAX5
gL0lKcLr5Efmx/zheGv5mn0YhcL11OUJz4y9Cs/lgzTUnZX7kIPVuorhM9hb
kZKLuqG8Ff4muSoRh3RrGMZwRjCSUYxmDGPJ67wvvb4aMTisW0sl/UG5Nam4
pBtHPv1GuToxOaJbR2X9IbkNqbmsG09+/Sa5BrE4qmukO2fvS07W66roDtvb
koYruja66/bhFA6/BboCus32msSms3zbHM8xxxvL5+39yMUgOWKmfYPjVe1H
7O3CPWp/OdwP4Rqbj81PuOp1beUb9hFMsSelSPjOzBfCbwJz5Znma+EaMtF5
Bc0t+jlmLXOUGS/8ToTz5C7mHXOhOSHcE+E+D88wPzq/iXlBP8/sb040E5M7
PG9mDL6wzzBTh3/XOdXMo7oPw71qTxA+U7i+5hNzOte8rp38Z7jHKcokXSHd
V/bavEhX+W74dznueNPwnIXnljxs1FXXHbO353Wu6yZTWP+1/B5xOKHbRI3w
t8kdSMcN3RSK6L+R6xCXn3Sbqak/LnckPX/qplJUv1WuSzx+1m2hlv6E3IkM
/KWbxtv6bXI94tMt/L8T/u7wPdtThN9C/gd1diWA
               "]], 
              
              LineBox[{2530, 2428, 2352, 2232, 2642, 2516, 2414, 2338, 2285, 
               2195, 2619, 2493, 2391, 2315, 2262, 2233, 2196, 2197, 2198, 
               2199, 2200, 2201, 2202, 2203, 2620, 2494, 2392, 2316, 2263, 
               2234, 2643, 2517, 2415, 2339, 2286, 2665, 2540, 2438, 2362, 
               2691, 2566, 2464, 2715, 2590, 2740, 2204}]}, 
             Annotation[#, "Charting`Private`Tag$233955#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{385, 386, 384}], 
             LineBox[{906, 907, 905}], 
             LineBox[{1470, 1471, 1469}], 
             LineBox[{2153, 2154, 2152}], 
             LineBox[{2742, 2743, 2741}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], ""},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
2HgUE9M5mbfwQ6hybiQW24/74feqEbevQHvXq1qjq8GI1Z9qRpacA3kzKsRX
qlRUtflsV43EAsjsUb4+cYaKcq+Vk1W3LoHR/KM+tem9CDx80RagQYZ/XySJ
vDHG5vN0ikPgbzJkkzKLF8XqhwKDnaGL5yjwut164Rq2/vg0Vuof/aHAcAUd
Tw5s/i/4ptyymRCC+rtyOYsE2WGFnL05q4Un2LKLnP7qEQXdvVHgpFtWDExO
2iv1uD9H/RuTVWU76sD1a48bf73MQoFRQpIyHsNgnp5/+bNiK/KpGxGULBkH
5+SNRuIrOpGQ+tKhBecp0KW45tEZ14MyM5b5ku7MgKF5dkfub71I/9N2y8yg
OfD72i8ltotUZPFq18ZTfguA9ViC56ZjVKTvcueg2P0l0Jo6WS7s3ot0J9u7
r0XQgPTwE+VtX7oRxVbtq0UIHVi67HEcHWpDIZEmrA4Za6A12FSg4FEjsvse
+OjODSz/h/dJaIWUop0ifvNGnbyQb/zRY7twVmhoH6NAucUHN5BN82xvssHP
RdKPpfv5oN+9hzveMBMh8v2p9OI6GcorHz+7aEuE5xbmQq4Mk2GxxKfmOWz/
1g0ZTp4zp0A6T6tOEzafxaWZVixTFHho4dujSuznJO2xpgYnfth6gVC7AXu/
27Vbmk2z/PDoobY/g8lEuOBA/qzgLgQ3za5++MfKDh3Ynt53eP8JBO37Q3s2
7oImvWzHjE9XA0MN1xvTR5LRubyJcs34UWBV1krwj2lHtSVDRmfaJwAx7UWu
eHI3ep22k/m+wzSoSdF2ksLy9bdlfw4tz1nAlh7wVVOYisrMWwI0A+eBZ9ho
K68hFUUdvUvr9VwE7tIXf+TO9CKe1Z36VP9lkGuyyXhfVQ+y6imQ4gtbAY2x
fJTzIZ0o+2Sg/PG4VWAcLJHw+tFf1FMZfiE7iQ8eX7pfcSefDb7jPn05eCcZ
Rr5R/34fEGEzD4yCb8nw7vXKZxvCsPxz1THXcw8Fnin8vqUU28+ivgpvij5Q
4M3Cflt/bH94GaY1ystj9ZKCgzsf9rrFNoXlByVCcJY+9tiAlx0+2EKkzsQn
gtW6jW/HLK+hz/YRma0by0GBQtIBN7d41OYW/Fpxfgo8kvM6+nq2B+XrKoc6
L84A/o38LXdne1EI531XD4550FLj+CwCG7/X2E/PZxsWwbr0KiV3GxVlK1VX
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
//1Cx0dtsYcKFqqODNxG54PaaD8yav8Pmn9img==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{565, 3251, 3249, 564, 968, 860, 770, 697, 640, 
                603, 987, 879, 789, 716, 659, 1003, 895, 805, 732, 1020, 912, 
                822, 1038, 930, 1057}}], 
               
               PolygonBox[{{1054, 3248, 3246, 551, 552, 553, 554, 958, 850, 
                760, 687, 631, 593, 985, 877, 787, 714, 657, 1002, 894, 804, 
                731, 555, 959, 851, 761, 1023, 915, 688, 1009, 901, 1045, 811,
                 1033, 925}}], 
               PolygonBox[CompressedData["
1:eJwV0rtL1XEcBuCvWZl3MzumQtmiSyDkZt5v7f4D6dFKK8o2bSpSK6hBMMK8
dRu6aGUOLlY2l+ZiLbqUmpkuQZCD4PMbHt73/XzhnDOc4/ErTZf3hBASmGYi
LYRxmh3L+JwYwhn2MWPfJIXndjk/9EFaOMUXt2b2897uIZUXdgU/9YfEKSeN
dF56q2RFH6KVCjJ45V7Fqj5MG5VkMu5ezZo+wlmqyGLCvYZf+ijnqOYgr91r
WdfHOE8N2bxxr+O3/oh2aplzayGJD3Yvh3hr17OhP6aDOubd4hwg7A1hQObJ
j976WLG7OMqi/V/e5SQ59qRs4I++I/t5om/K6xRFv8XnDckL7kuyk2y3mEyU
D2SBnPP+T79Drl0iU+WYPCbrvX/VW8myk2WCvC/z5az3v3ofMfuETJGj8pa3
VdkdfVb0X3EflN/ct+U9Sjlsv5ONbOpP2dJvUMxFe1lejX4j83YDC3pb9H18
sm+zpl+jkO92jCn9NFv6My7RSC5H2AXYiVdk
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{516, 3247, 3244, 664, 737, 827, 935, 521, 642, 
                699, 772, 862, 970, 569, 607, 663, 736, 826, 934, 520, 641, 
                698, 771, 861, 969, 568, 606, 662, 735, 825, 933, 519, 567, 
                605, 661, 734, 824, 932, 518, 517, 566, 604, 660, 733, 823, 
                931}}], 
               
               PolygonBox[{{995, 3250, 3249, 602, 639, 696, 769, 859, 967, 
                563, 601, 638, 695, 768, 858, 966, 562, 600, 637, 694, 767, 
                857, 965, 561, 599, 636, 693, 766, 856, 964, 560, 598, 635, 
                692, 765, 855, 963, 559, 597, 634, 691, 764, 854, 962, 558, 
                596, 633, 690, 763, 853, 961, 557, 595, 632, 689, 762, 852, 
                960, 556, 658, 715, 788, 878, 986, 594, 724, 797, 887}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVXEcBuB/JhJ0naqFOZRXLVJQCuoz5NzwEYRGyyGHjbmpoHKMFhHR
IhfN6aqyrDaVlStTG6xF00bdqKUpFIjPWTy87/s7VzjqjdfUH6xLCCGsYZj+
WAgDbHfcRgH7aWWAZQ6sDeEF+fo+WuhnKfqs+3Py9EuMsME+wSTVdjMP+Bv9
vNsz4nov70i3a/lMld3EfRapdhsiV+/hLWn2cT5RaU+Qrbfyi1N2kTzHPPfs
Bar0p2zV98he/vPVzpftzNBtl8gLLPLGviITEkNIlenymPxIhWe59g09JnfJ
DNkplxmP3s2+qifKLLlRtsifNHqeY1/X18lCuUmelXPc9fyyXOGPnupZpf6E
LXafTHbbLXv4xxf3azLJPU+eZpou92J5ngWG7RR5lA+U2ztlB0uM2ZmymR80
2DvkGWa5Y/+mQh8kR58krrcxRaf9mmT9CBOU2e/ZrDfxnXr7NvOU24/J1jt4
Rcw+HP09KbVHyYj+13wj+lLfYo4y+xFZ+kVest4+FP1O7LVPcpNZSt0ekhm9
E6u/hGW6
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt02dsllUYBuCyh+y9peyh/GGUXQr+kL1klgRlD4FgFAQUlI2RIQqI7C0o
Q9EylCUQNLK3AaQoyBIIQ8OQ4PUk/Lh6389p+vV7zzlvYq9hHYZmSEhIGONH
5Lt+5OAvNpsPyZ484G1zmnyVW9wzn5NDaKkvlzW5oJ+U/Vis75WdeKbXZJae
yK/6x+zQ2/JI78V6PZnr+joyMsqck+/0d2jFCnMtfteXUItPzOU4qE+nN5kY
be0FvtdH0JraZCYLWcn2fB9ykaaPpA11mG2tPIf0GfQhO+9Zy82W2DvaksSn
1ipwWJ9JX3LwvrU8bI1noh0rzbW5qC+lLp+ZK3Ik9ot+5GSstbxsi2eiPavM
dUjXl1GPOeZKHI09Yafejsd6fzboTbihn5ED+Uo/ILuRKfbLPE7mY7t+WL7O
GH2LbM5t7pvPy7hIj+lgXi2T4vO5ZD4l+/OQ5eZ9sjN349LxR9wvnlLf0lxZ
mWscMx+TvfmX2eZdsj1P9ItyOAP0jTKFm/pZOYiv9Z9ldzLH+Zo/kPn5Ic6Q
rXqLuOd6R9bodeN7xT2jAfPMVTge58tANpmb8nfcW3LzobkAP8Z58xpfmuvx
Z5w3DfncXJUTcd4MIg/jrRVkR5w3nWjEfGvVOBnny2DyMsFaIXbGedGZxnxh
rTqnYj95k3xMtFaYXbEPdCGZ/EyyXoTd8Rx0pQkFKEghClOEohSjOCUoSSlK
U4YXKUsi5ShPBSb7/KLsiWelGylUZIr1YvwUz0V3mrLA2kucjnNgCJWYaq04
e+O5SGVt3CEux7tBMxaaX+ZM7DtD+cbcjFvxPlCZaeYS7Iu9YJvekn/0HqzT
G3Al7jj79S5k4BXzIlmDs/px2Yf5+u54L/hPT5dvMUz/Nv4u7k+8S+bf5GA2
6r/I1Hi/yBLPwwiexT30+49kSa6y33xEvhHflcnm7bIVd+K9MV+I/xnvDP8D
qh66iw==
               "]], 
              LineBox[CompressedData["
1:eJwV0jcvRWEABuDLgB+hjurFjE1NGDAY9ERiEDXiF4jOrpsQBnViYdAHiUSi
RCKixaAsSBDPGZ687/ude+49OblJjW3lrRGhUKiXHOVBzpPPtB3mQh9nR6/g
V29nXc/nVV/hSK8mimR7SMayp5/KRvr0LVnKp34j26nRl2QuLzza57KZbxbs
PVnFB5Hc0c0fBa7PyEyeubTPZFPwO0zYu7KSt+Ae+1Z28UOHvRF8T3Bdv5Qt
rOrHwfMRTYo9LOPY1/vZ1sv40mtZ1vN40hcpZNbO4kqfpJNURpzFc6APUEcR
aYw6T+BQH6SeYtLJIEwmWYz5XCJHwXungRLmnGVzrU/RxaZdyLu+xoleSwz3
9AR/iEj3iX88akng
               "]]}, Annotation[#, "Charting`Private`Tag$234045#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GV4VnUYB+ADjBgMBkNGDJQBknbR3dL4VWq0EiJhe0lKKIhKt0qZ2Era
AkpLqaS0dKOXcT8f7v2e33NgO9d7/ufNzhnceVCuJEnW+5GSO0nezJMkNdln
fp2HeYC85OMt12qx3zyNLtQkP4vta3PAPJ2u1GKDXRfysFIfSQGW6HU4aJ5B
N2qz0a4rKazSR5HKUr0uh8wzeTctSbrLOvxk3428rNZHU5Blej0Om2fRg7r8
bNedfKzRx1CI5Xp9/jDPJod6pFGYt11rwBHzHHpSnyK8Y9+Qo+a59KIB6XGv
9o04Zp5HbxpSlPfsG3PcPJ8+NKIY79s34YR5AX1pTAYf2DflpHkh/WjCJrse
5GetPpbirNCbccq8iP40ZbNdDgVIUjx3WVquc20cR/QnuZmd+nX5Evdwk/6h
bM6f5n/kVN4wn5YvUDnuxe+bIx+x/10+RoZdZpwLOUNmyU2uXzFPoKR+pywk
F8hbZDPXt5h7UlRPlbnkNFlGfuX6RfM4MvXbZEE5X77o2lH5VPyuOCv2s+Qu
+xvyZe6lhP6RbMHpeCc4Yx5JFR7V98khcY9s1puz1dwr/h5f6+M5Zn6a8uzW
M/nY3JIz8T4xgBaUpFScB+e6tCzDJ/5dK87G+8VAWrLNrnd8NnyjTyCLT/XW
nIv3i0Hs1x+nFFv0Vmw39yGNb/WJlOUz/UHOx/vGYA7oQ+NMsFVvzQ5zXwrz
nT6J4+ZnyGaPXo7PzW24EO8iZ82jqBpnQD8oh8WzY5t+VU7krrgP/RfZjyJ8
r1+K58jtcQb1E/JZKsS77HnOlnvt/5KTuS/u0X5RnF/7L2Rb0u0u6v+aX2W5
+ZwcHWfatWrxPsi5spwc4voh83CK61kyRc6UZeV216+ZJ8XnrN8dn61cGM9e
tnF9p7k/xfR0mVtOlz+4dlmO5444h/pJ+RwV+VX/W07h/ji7+peyHZfiO4nz
5jFUj2etH5Yj4t7YobdlV7x/8d7woz6Z8qzU23M5vsMYSjt2x1mP+2W9PoVs
VukduBLfawyjPXvsBpDBBv0VKrBa78jVONsMpwMVWWPfiWvxXccIOlKJW6kc
e+9DFVmValRnrf/TmevxPcgTdGKv3cB4RmzUp3LK/DyV+E2vwTrzQ9ww/ydf
Y4X5ghxLCc+mhkyV8+LsyP8BaErdzw==
               "]], 
              LineBox[CompressedData["
1:eJwVzzk2g2EYBeA3oXRUUSpS6AwxLiQy/r8qC0hKY8QSHHZgB2Y6JMI5lKrQ
Ke2AGB7Fc95771d9+Uar2MxERML7SMQ6k7xkI4oM5CY5nvQDprnRS3zKx2yw
ygy39jJf8gmblJjlzl5hKJ+yRZk5uvYq3/IZ21Qo0LPX+JHP2aHKPPf2Or/y
BW1qLNC3JwSX+i51FnmwpWS40jsk//8Zi1hyH+1rZLnW90h51VtM8Kwf8iF3
mOJNH7r7rDA+GnHk5t1lb3/qhjBP
               "]]}, Annotation[#, "Charting`Private`Tag$234045#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GV4lWUABuBDN6igdAwY6uhmYwxHDgYGeCmpNCgxfiipNBiESkmjhEGn
dKuEdINKg0GDNKj3++PmeZ73+zbO2b6zqHYpTXqkikQit/0TnTYS2Z0uEnmD
xPSRyB27lFxlN5Lf27nlLLueTJTV5Db5vmup9JF6DBX0DfKU82L6Ir0xb9p/
y/fIyXa7oOvf6fUZa2ezJ+lVuWyXYE/4Wu7q8+hFaveNclaS03YzLofXQi52
2ON4nr12M+7p8+lNc17gRWIoGd4vpdnn3ubc1xfQhxaUYb/zFjzQF9KXllxx
1otn2WmPpywH7JY81BfRj1Zcddab59hlT6AcB+1WPNIX05803utoZ6U4Y7fm
mt6H3PxiTyS7+yaH3wtX7PIc0lvzWF9CHvfMtmvxgZ3WHqOX5qxd3F6sv8xb
9nXZlzyUc22d3O28UHgm9CSZJKvLn+Vr8kvXc8gpdh0ZKyvLzeH7yqvhZy+X
2w1lE5kgd8qmsoLrh8P/H16n/ST8XuRqe6meV5+j1yZW/1F+6Dyd/plehor6
RnnOebS+RH+Ft+0bsh952WMXdn2e3oBJ9lP2VD2Oa3ZFjoSv5V99GQNI777P
nZXlvN2Gm3p/8rHXnkwljtpt+E9fzkDaciv8HsjPPnsKlTlmtyXCCnsQ7bgd
3isF2G9PpQrH7XakYqU9mPZUpRqxxFGdE+5pT2p+sIfQgXhOOutAGlbZQ+nI
P/YACnLAnkYNfrU7kpbV9jA6ccceSCEO2tNJ4De7E+lYYw8ng5/jF+H54oLd
mbv6IApzyJ5BTX63O5OetfYIMvr6sXZ5LtpduKcPpgiH7SLumR+eN2baT9vT
wnPLdfslTuldyMA6O5975oZnmI/sTPY4vQKV9E3yUvgbpS/VX6WGvkO+4/y+
HBKeU2dR4fXJ9bKxPOJ6lFwQnjuZLOPldtlEfuX6M3K6XVfGyypyS3iO5Y3w
t0uusJNlU1lT7pKJrp0Or4GM4fPgfI1c7zy//k34nnxsZ7bHh88Lf4S/l/ay
8DnmXfuBHEpRjtpfk9M9M8J75aZdizPhfjKxwf6ELO6bEH5W/Gl35aE+jGIc
s2dRm7N2VzKz0f6UbtThnLNuZGGTPZLu1KUe9UmiAefd052sbLZH0YNH9nCK
c9yeTUMu2D3IxhZ7NCk8tkcQzQl7DslctFPIzlZ7DFm9z4l2Zf6ye/IkPDOU
4KRd1D0L9UbMtXPZM/UEqupb5S3nMfpK/fVwr31J9iQHZV1bK7c5L6B/q9eX
9WSc/Ck8g/J/MbT4YA==
               "]], 
              
              LineBox[{1431, 1334, 1258, 1137, 1534, 1416, 1319, 1243, 1190, 
               1557, 1440, 1343, 1267, 1101, 1511, 1393, 1296, 1220, 1167, 
               1138, 1535, 1417, 1320, 1244, 1191, 1102, 1512, 1394, 1297, 
               1221, 1168, 1139, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 
               1513, 1395, 1298, 1222, 1169, 1140, 1536, 1418, 1321, 1245, 
               1192, 1558, 1441, 1344, 1268, 1579, 1462, 1365, 1600, 1483, 
               1620, 1110}]}, 
             Annotation[#, "Charting`Private`Tag$234045#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1ne8z1Ucx/GfvSPK3hktI3tvFSote1+7cG3CdRGy3cresmdmhGwZhcre
e5aRUBR6nj9ej8/79T7n+/i533t+58oVFf1hp3iRSCQufiRSP3Ek8nPSSCQ5
opNEIk/4KozAfV0RTNTnxQldA+zXpUBn3VO+GiPxQFcUk/T5cFLXEAd0KdFF
94yvQcZkkUhd3UZdDYzSPeTFMJnnxyldAfs66H7lzdBId5CnQlceQXl7+vEL
8lrrmXg9vonXRB0+jj+SR1v/Wy6OKfzl8PnWh/Fb8mnrBXlH/hvvKa+Vm8tN
5enybDO+OczcbTb2zC/mcxit62ZvG3Men2vG4xXMmPBuzIu8r7mBLzO/83xm
sz7/yvzBehdzBV9k1uJ1zfF8hvmYDzZ38DGe/ccsgan6Dvol8ivhZ5eHy7fl
M/YV4p34Id4CTXS/8tTozuNjnS6LfQ10m/k7GKt7xEtiGn8VZ3VN8ZsuDXro
EmC9Lg7NcEj/PHrqE+J73ZdojhaIQku0Qmu0QVu0w2HPpUUvzyXCBt1XeKwr
hem613BO1x5HdOnQW5cYG3VZ/RwNdVv4u/ha9y8vHd4jfx3ndYXti9Yd5lH4
RHeUv4DPeBJUtKc/vyRvsp6NN+Jb+Xuoxyfwf+Vx1v+Ty2Am72htqVxAriWP
kO/IF+x7g3fmR3ivcBbkluGsyzPkb8wE5nBzj7na/NRzx+QXw++f97G/rTmf
zzOT8kpmbPgumZd5P3MjXx7Ol+ezm4351+Y2613Nlby2XF+eKP8nD5F3yuM9
88Qsi1n6guFsWBvJ78oXrRfhXfhR3iqcRd1xnh59eTJs1k3AU1258F3SFcIl
XUec0GVAP11ybNFNRCdE46S1jIixlgJbdZPQGaf0mdBfnxLbdJPxTFc+vEtd
YVzWdcFpXWbE6lJhu24KIn6OCvo5ujdwRdcVZ3RZMED3HHboctjbRLedv4+p
uni6iuG7z4vgqq4bzuqyYqAuNXbqctrbVLeDf4Bpuvi6SuF3yYuGs8tH8T/l
a9aL8q78GG+N7rpzPBsG8TSobM8AfkXeZT0Xb8Z38g/RgE/iT+Tp1hPwynw+
7yQvC3dxONvyaPmePFDeKl+3v1i45+QJ5nFrvc11fKnZhjc3Z4Z3aCY0R5h7
zTVmD8+fl7NjLP/c/nbmgvD55vO8ijkw3NHmVR5jbuI/eja33Fzepe8mr5I/
khvKk+Wn8gz7EvIqfAEvjtp8DP9LvmG9OO/OT4TvT7jrdRd4DgzmabFbNxOJ
7K2qX6grgZu6Xrioy4khunTYo3vJ3hbh38o/xixdYl21cJ/zkuGs8LH8vvy7
9RLhvfCT4V2E+5nP4onCnWb9kpkLQ621t7Yw3E9yVXmQfE3uH77b8l7788hR
8rjwNyqcEXM1X2zW4Y3MKeF+Mp/xoeYuvtKc7fkkZnUeZy62Hm0uD+/SLBXO
qhkX/h6YD/igcI/wFeYfni9p9uQTzVPWPzPX8/bhjg2fISfGSHlfuGc9c9nM
jS/CHaxfFO44uVo4I+Hcyfvsy8tb8j28LhrzqTwSvuPWk/I35SXWSofzzr/k
D+Vb1kvxXvx0+Bz00V3hL2EYT4+fdPnsaxXeZ7jfMUeXTPdWOOe8DG7r+uKq
Lk+4p3UZ8LMuv72tdfvCnYq5uuS6t3XLeFnc0fXDNV3e8D3RZcR+3TyksL9G
uLd15XBXF4Prunzh/eky4YBuPlLaX1P/ra48/tT1xw1dfozSZcZB3QKkCv+/
CL83XQXc08Xipu5ljNZlQXX7BvMbcqy8OXyG+T/MKVvu
               "]], 
              LineBox[CompressedData["
1:eJwV0klQz3EYx/Fvl5ZLdl0shYMW0jHM2ONgrRwsOdiiiIsZcolUzBhL4UIz
BoeUrYTqYsbBJZLdxXJW2UKFg9f38J7P83k/z69+9f9nbN1XWJEQQujBzuQQ
upNC2ICmxBBSU0JYybXqCzDIVaGPy8QpbhJ6uesY5X4V38YtxE/uCPq5LJzm
JuM514zR7lfzd7lF+MUdxQCXjTPcFLzgWjDG/Rq+nVuM31w1vnA5OMtNxUtu
pttS7om+ETe4sdxa7p6+BEPcMXzlZqGeS8crLtPtLu6pvgk3uXHcOu6+vhTD
XD53kHuvl6OG+6bPRoOegQI3Nfpn82v7LH233qNvxi1uPFfIPdCXoUiv14fM
I/Zz9UP6B30PtulX9CTU2n+XuTgX38Ou2TzNvNxca74o+/Qq+VB/45lsc5n5
vHxmd0C26y2yRC+Rl/TLMkHWycfx85W3PT9BFsX/u+xwvz96vUkW6MWyQW+U
w3q1fKT/8ew8c6X5I19p7jTvNW83XzUnx9/n7oecE9/RbjpW2Nfp/ea39jl6
ud6rb8EdbiJXzHXGvx9/ueMY5PJwgZuBd1wr0tyv57viz8c/bj53mPukV2CH
fk1PwUlzd/weyRNu/wMAk3Ii
               "]]}, Annotation[#, "Charting`Private`Tag$234045#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HWUFlUcxvGhlFK6W5BWWgkJpXVppduWjiUkBASVbiykMRAbpKW7uxeO
eo7Ekrv0An7uH9/zxPxm3nfi3kJdezXvmSyKouLJo2hVmij6L10U1cGGtFHU
FllwWZ8hfRR111+QR6EqVusv6Opio9wOWRGvz2i+h/6i/DGqYY3+oq4eNsnt
kQ1lzE7QpcYC+Yq5TLqe8iV5NF7CWv0lXX1sljsgO8qanahLg4XyVXOZdb3k
y/IYtJSXyWVRXa4hz+Zz4nd5nXMu8w2wRe6IGDNL5KLIIZeTJ/Fp0Y8/SBeF
WX4tXxkj+Dh6zfWy8L358TTeXC+6V/6Eb8Uv56fTcnQYPR3+P63heE36jTyZ
5qID6VE6l/7h+Jt0o/wFrU5H07/pd/Qvvx3PN8RYeav5D+gOuRPfiP+RLxbu
Xy4vT+bTYbHcSV7HV8F118oq9+GvOPZp+G+opZujy41l8npzV/hXsU3ujFy4
oc9mtq/+qvxZOBcb9Fd1r2G73AW5cVO/Edf0Mdih64o8SNBvwmZswXXHG2Fn
eB7Ii0T9VtzQN8Yu3VvIh1v6bbipb4LdureRH7f125Ggb4o9undQAHf0O7AT
iY41w179uyiIu/rs7rFfeO/yWLyMXfpbuubYJ7+HQrinz2G+f3i+8ji8gt36
27oW2C+/j2dQwewUXXp8K983l1MXK9+Qx6O1/KdcHrXD78tz+TxYLu9xzh3+
dRwI3wMam1kqF0dhuaI8lX8K/flD4XsK7zJ8U3xVjOTP0Qeul4sfwE+gN831
pvvk2WE9y23oCnkGrUCH0zNhzdA64Z7pPHkKzUsH0WN0XriX8N7oJvnLsCbo
GPpPePZ++y59AwfNddPv5LvxTfif+BIoIleSp/FP43s5ybm5dQPlBHki6qK2
br4uH1bI+8zd41vikNwdz+KhPo/ZQfpEeRLqYb/+vq4VDss9UBSP9AfwQN8a
R3Q9UQyP9QdxCIdxBEdxDMeRZL4Njoa9A8URhe/c7w/W3+Inoz5OmH+oa4tj
4V2gBJKFb9/8h/rb/BQ0wEnzj3TtcFzug5J4wex0XQb8ICcP60M3RL7DT0VD
1NEt0OXHSvmU6z3m2+OE3BdNzfwsl0Qp+UV5Bp8RS+QUYX3phsp3+WloK6+U
K4a9JLwbeSFfAIP543RVWLf8Zv4rWjPsqfRfetr/iPgO/Dh6Mrw7ukv+OqxR
uRn9RZ5GS9EhYY7Op6Udr0xnypNoJhpLD9M5Yd8MexVdL8+i1egoep6mDPsB
P4y/F54pv5+fzrfjV/GVwp4Xvhl5EV8Qq8NeI2/ha+GMe0gmd+RPOdYfzeVf
5dJ4Tq4iz+IzY6mcKuwtuuHyfX4GYsK3oVusK4Q18lnXTq7rFJ6VHIvn8UTY
a/QfhbXNz0QjxJlPoe8c/pc8AGXwJArrR+iT+FlhP8E58yn1XfRn5YEoi9Qo
oh+pf8h/HtYqzptPpe+qj5MHoYX8W7hPDOVP0QX0fzckM8Y=
               "]], 
              LineBox[CompressedData["
1:eJwV0ctTzWEAxvE3Uc6l3FlLucu4VSoLbFw2JNQMm1y6GJmxMCOXkC4YCwtT
nQgLycItO5eyKWZYWFi0MZzqnPBH4HMW33me7/O+8/vN+Z2ldWeqmrNCCJ/Q
HQthAZ5FQ4igKB7CNf5X78E+JCMh5NiP2X/w89iAKJbb2+z/9F7sx4T7ufbj
9p+8BRsRwwr7dXtAgldh0v3Z9hO2JL+ATYhjpb3dnoU+fgBT7kfsJ20T/CI2
Iw+r7B32GbjHq5FyP2qvt03yS9iCfKy2d9qzcZ8fRNr9mL3BNsUvowTlth7b
Qjznc7DG1sVnop8fwi7bAC/AOz7teXFbI0/xVpSiwtZrW4QXfC7W2m7wWXjA
j/A3egkO8938ib4M73k9H9W345f35PEmPe3stP5Zv5L5DvqQXowyXskT+mKc
07/Jl/Y6/YPeLStlm0zKATnP+Tp5k9+WOfKs/Jr5dvKh86PyLb8rS2Wr/C4f
yxrne+QgvyMLZYscl8POGvQxfQc69ZT87Tfl66f0aXea9S/61cx/pb/W12Mr
38b79CV4xeej2HaL5+IRr8Ve21NehBHeyD/qO9Glp+Wg/OPd/wFj3GOG
               "]]}, Annotation[#, "Charting`Private`Tag$234045#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{514, 515, 513}], 
             LineBox[{1059, 1060, 1058}], 
             LineBox[{1622, 1623, 1621}], 
             LineBox[{2487, 2488, 2486}], 
             LineBox[{3242, 3243, 3241}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution with backward integration \"", 
           TraditionalForm], PlotRange -> {{0., 6.24999987244898}, {-4., 4.}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJyEvHk4lN//+D/2GTszlmhRhLRRUlGdg0gqKSWJrJFUlpBEhFSSbCEJKVkT
WSrFsUT2kOzrZM9uBsPE9371bvyuy+eP3/zjOtd97nPf53me6zmP20Zzu9OX
mHE4XAofDvff301P/ryKWX/3EA4n5Xzg5r587XwOnQFrBDKsdY2D5kPQRZ2i
qi14Ouhb/6P7EH8HUnuiUZh4sgUs6Wje32BfjNb3vWs9VdUG7guUxO16UYoG
NberLeWRwQWzqsSG8Xr0Odo7Qo9/CJCOTT5q+NCCVATl3rF6joLwY+xHDe52
IuvFkBcJBpPgrcz3O16+PciubHD3uxPTIDKYS8LuTS/yN2Tf/OcqBRTKRAtU
q5KRxbfbVgqXZ8HjnB2c5TvJqIhjzSnb8/Pg08CM0imXXqQg4BU+7LQAOJ9s
GqjI7f4/7/8ypnTt3OMlgPc3nsh7/QNlBSq3N5zGwUUnxfL1XSXIKe+g7ovj
TLBwUkep7l0EkE/s6SexMsOqykl9ZYsy4EPfo3LlPAt0NhaQ99zRDaKTFHJs
r7BCznIfek3hIGg99SgIpbNCr5GvlOL8YbD97/3s8NHU/gB7nyng+fd+Dmjp
It3d6UcFTCfbyE+88FArdfe6CN950P73fjyER827g2fmwc6/93PCbF2lY1dG
F4HD3/u54JUxU4EnkUug966iJXjKDeNOO74Qd8HB/z2fG94p2a5a9BgHd/y9
nxe+TL1nR6hggr5/7+eDPt8NXDbhWWA+0yWyth4//H6A9bz2EVY4lqRRbnKO
H1bIzTornGSFEXqTjpzMAjDJ8qSGSxQbVFqKWpeTJgAzZ07xfe5ghy1/n4eD
B4sWzqgvfkChN4avmHYIQvtrY7AmDw/dhdbzbTpPhMPOcs2VKgSYvIWt0qmH
CKVYOQuMfAmQncK0pugiCV7yU7lOeUyAifKZd2IGSbBFPNWuLJAAt5in6Py5
JgR7Y01iHP0JsP3op/dnfwvB5uygSwd8CLDhldt2cEMYhsr1ta6/RYDzWacO
bJoWhn3rWrr0rxPg8kfHHL/rItBEnalb1IIAj8lrarhTRWDbqSs+L/UJ8Jvx
ThvbG6LwA9zNK3SMANMz7OeWl0Whv8Wf/aGHCLAyuN1hyPodeKXtqGxbcwNJ
/PkQ/UepHHhXf/1l75KAHtTm953VbwTbVCbhC7XPyGVGT3DwwgiYlonL8jzV
jnxZZakykeOg8XTzgKd1N6Kwhz3cemIKrLcee1a0qRe589/cpm88A3wij3rm
Esholr9II+IKFZxbCiBcPEFGIdaVF2pN58Axtwn8wFAvynwlvNHTmAaURGzZ
+Wp6kBazSe9z+0VgNoMzGA7uRLiKu683efwBbDoFtZdfNCPWiy9sap8tgzWP
2Ey3Kdei1eslcYzURRcVhHISFwqzojgg/zrKicJoQVjRPSxSaoWHTvvZdiZK
1IFzond7fda9RyGxwVeroolQs/X0vQUbAmwJ9JmK2kCCDxadovc+IkD9kNaq
na9IsIZjt8vmJwR4ueLtQI2cEAx5ReeSxNaXuSnTKzlNCBI/i9vI3CfAptk1
9to7haHU0d0brtwhQGUO3YycT6Kw5MYVw5LDBFih7PNp1DoW4HeVj5XtOYPI
Y51mrtQSECqzec+VoRdIbpw2m3a+AfBeW7Pvc0UuIvUNqRtoD4MHJmOXtCXb
kMh082jSpTGQGs7qJGfYhbbskGUZ+jkJ1qdqKru09iAX250Z3j+ngQBtdqNh
Zy8qzLHYU/mbAhxfKJ9+cZyM3EQkez37ZoE1x4mMJAEyWlfpSNbumQevznLf
Yd/ci748nPhcPL0AeoMGDx1934Xku0wuf6TQAXOgYYLZxVZ0+o5CCZm4DKqS
HhDNnevR6/O3XTWCcXAXvue49tZ8dIUnVvH3rAA8sS/mdropB6x1uAUm3QVh
ldxQI3kfHvJGz/4IWhSEuvEzHLXdeHi/rTl/1o0IjQ6//KZ4lgB3lFxznPci
QS2ZVPMSzF7wHu92KRGE4E1Wp4drsLbw2nRrvcdCcGyYmenXAwI0iLMR0OUR
hoEOT4/2eRGg13sUEBQuCv32BdwcOkKAq/25MXdIs7drNegwP5JnOpSGWphR
j/O13yDoy145OYcOlPxHOvLT6wkwOyW1PUSiB70NPV17tW4KeNdZ2MZf6UU+
OQVJW/pnwHTegvmRrWS07ep6fcthKni7eKbjpzoZpXxwaFrbOQdYb6ll7M3p
RT91pNk4x2nA8JIBK5dBD2p0q2V3Hl8EHaF46XdnOlBd1queALYl8DxVWORY
zk90uvy6UdAXQWj35Ff05hA8ZB7jfzO1nwiF1g2d9JEgwBjLY+JxBURo6quW
UI35B7siNbYdgAT163LvVwcQ4B0zjc3WpSSYUaeWJonpa7lQWtSl40JwrcCs
8TCmz5QLPT/aOkTh3vTc5Deq2PWABi2q9RPg+nYq5KGNIjo8YP81p7EIWD39
uCZcLhLR/4h4GVyoBzHcbSdUErORhVFWR1DREKiIUo7ivd+KagOTvU6wjYG5
SywP2Jm6UHmYcZ1mxCTonUftf971oOlIrunI4GnQ2d6bsaukF23G73lrkUYB
dOYcyxtaZHTMaLjLK34WSN1LV6BuIqOJodI17dHzIK136LzlyV7kUrN3S1PW
AjieP3tkdm83Kh/S0fbJoIPbR6J1YuTbkFvg4sRo3RJ4fczcZkNIA9pGadvC
7YiDb8oH29apF6En1/tMyP0CUOLFj/1s6hxw+9oD+/DXBGGNcs6cwEY8rOOw
j53/LQjVd4V6pdZg8p53s+K+QoRp5uds+I5i8iru0zs0SYS8Z3LCL2H2HdX+
obTDDvMPn1PFrmD62KKfYXBlngSbjG69uIW1JcC2C0keQvBxs2RIxkMCFHMW
IJ+mC8GF0/ZtJG8ClHowt/DHVxR67jf95YGNv6ShWDAZlwX8W49nPo+5gwpY
NysXnqsEF7M6DogTk5HM7Ye30vtGwBcZSWalX+1I+G5imf36CVAwXtVxt6kb
HV+4/7wqeAqwZT2R9Trai3C/okbAyxnwsLtKuUOcjIILJmr+JFOB2INfaOAo
GcXwrX9GjZkD3lmHcQ51vSjx2q0DUSk0YKT5uuVzUA8KLBB2evBuEdT3S6fO
zXagywUhxeeK/oAtjq3sZ9KbUKajwtmkNEEYEXflT7k7HpYa+DuclyPCYGdN
QpAAAar/jadE+L4nhpfXEZuvrMVty50k2Lkko8yP6efIrSeux7IxeZ086S2P
6WfkRFrhMxUhuFWudV8gdj1CQVRNq0oUWnlUDOxWx9oROtYTjxOBm8uZvThv
K3SXqr2sLFwGvLiOi2cJxSP/b9N7HpKmwOTJTet+4XoR7aDe9atrZoDhAaXR
TkovumARki+/lQoq/Fy3qeuQkR9yWZ+4aQ5US65TiVvqRcdSN6TmSdIA4Yv5
Orm5HsSdryjU+4gILddrblYwJcAA6ivrej4SLLOqjFDF4nVxiuQGUggJnnap
vsGEvf++V+nczGKYf/rIQUzE4oECLCofdvsMvve7b2y5+BixPyBbEbdQwCF3
5rKJvWRUvuZEV6XsLOBht4yXVCGjXJNS4mHxedAhL3tGPqIXSR1JcvT/ToQz
G0Y1iz0JMM9w05M5HRI0Ovo+4ho2vuDRxXrvJhI0NAtbXMb0bV4l1UnBWAjC
dWlgD2bfp/ySLl0bF4XIg/xFHBJgmbyDNftlT7Cgu06q05uEnMzznM98LQTR
9C6Zd55PUR9b4uEdHXWg9LaLO+FFFvKPFN2y3WMInNVNE/y4txX51g2LbCke
BT7egn3pRZ1IVGteafbmJBhk9rDwjOpBGe9ogq/tpkFg2BWKJObvDDLX2WQE
UICgudnydQ0yuvx8M5vG/VmQqiHlprKFjAxc7fZI3p4H0QMqwloWvejMRHu3
SdgCMK9yvLLftRuRrmt+vhxIB8WJ9ddgeBvioNm6NL5fAmfutm6u4v2B7Iv8
ve3McdDtsEz2WEgx2rThPtW4UwBejS3ZxqnIAY0cXiiSLgnCIyW371FIePg+
f9u9bX2CUPyynK3eVzxEftXKEWZE+LE52jZIjQB1ZimB54eI8PFgViHejwDr
Bo0mdKxJ8FQgX98uTL6FJRm2rJMkSLma7R6PtV/r/m5scBaC9Q/UBIiYPriZ
XNJunBGCzDOpFcmYfc86Et8ruotCJqYetaPaBOjIEXzbMSUTvMmhmKSPu6IJ
r+u/Lx6pABJXct94HExEOh/GS7XjRsAdl5tK9VHtqKZ40Ph4+zhYVyMb8yi2
G0W/3cR823EKVE3cTNm0rxcV0B5wHfOcAbQ5wd0SRDL6at3yUNsf0++YoxLU
Y2QUqeK00Os5B+7e++TEgsV//j+bDMgPaODem8N971N7kG1Pnpxg0CKInbLT
O6/RibLV/XcfjP0DdM/dPCYm04x6voWcyn4tCHvvm91rd8DDN7xHzj3eRISV
w5HppQQC/MkPI2ECES60nRi8jOWjdy7cyPWUIUHOLR/8EjH9k/BTjM9PJUGl
xlzCDsw+vIze/ti9WwhutE5614bZ9+W1irQ7xaJQRsXiwiJm33fE8OTpuFdg
9Nl9plu2Jui9Q1hGK1sp6EiY6Gxyj0Ntbo+j91Engdm7iLvXx3rQxzOqT27O
TYMt5+9R7Id7USD37VseXFTgWVa3swjLL71+V3uGssyBhLrq9W54MspWrihj
ZqYBviaxpQe8vajymN+wrQ8Rhr7fkd1iSIADstnxoxxYvt4ru+cz5q/nc8u1
/B6SoDXzUdT/nz/nf7chWkAI5pgkBZAx+3vNtN7P1vcTYP9VKHDJ5eG/eowC
Ki0PaUvvIqOF4j1RIoRZMPZ+xqYekFHGI3Fnefoc6Ow+ZhaI1X+9P2maQt+I
0Dtk/dZpdwIkBe6qFDxCglGho1YS2PhaZ+MWKTUkuKyoGUvC5NeTlHq/6owQ
VLaalwvG5LvJ4eva1/2iMDUvebAHs+9wOJs+8zgCfDh3dNOLVk00ffH4lHA1
BXQomDi0aJORk/ottauls2BtZgHbdjEyinrSKCo5T4T2Cl0kRyx/svwuGH3F
lQSjG8/ui8Lmi/v7E4K+jTquulj7iB189rEhG3RoriEmb7uL1KrTKhRLZkDb
3qTnw5JkdFGIQzCzggq2CFfTFI6Q0YWZ6Am5XCKMzj3Oq+eC1RuU0/DoXhLc
X/6k1QFb/+xrIzqtX7B8GsYyb8fml0F6OvrbLRXIPGNyz3a7jmTzkpn6tKkg
5uP+K5swfx0Qc4f6MooE8clrE4Sx/loOFA38MQr4Zk0f23uQjMLtLTfd0ZoF
bz3k7lXtISOrj/oxy81EqGo9EamC2aOpjOCZDn0SZLcXV87G5NtxQD+Jv/s/
fyra+9/6ej0PSFeaE4WW7BHbzgECLHJNfy172Q6spWTWCgZRCgIkTGolDxQC
lY3TN5/tDUMtD8eln0XXgZMyOj5la7JQjNKxk4uGQyB253RWIV8rMp16+Cs8
bhS0XYvUfPWyExW+1Bg5cXkS1HJbTD150oP4P9u/Sr44DcL6dx3qetuLptgE
vzW5U0DFl9TjmVj+aJVZt+fzzVnAnEZ9EL6NjLjhYfUjV+ZBcINGz+DVXqSG
2/H5te8CKN/1ufhDRDfKky++ccGDDrQNT4wplrehSLHQ4OyYJaAmvLWFzewH
Ekwi73hpiIMGd2pFxfaXINubBoXirQKwQMfL3mcbB6SI1+4SMxOEW9KXBlt4
8TBelMtVs0cQ4orEuMIRHq7Xob42MibCgipFMyVMPnQ+j23WfUQoaasRcuAe
Af6+tpMVb4Hpz5qAUBImT8UFeef63ySoouUslIO1rVorBYYchGB69bq96pi/
TDnzZClsQgge1NxiMYOtz8XLL3nqbopC29kT4u8wf7ntMjDc/S4DLA80zvAe
d0F4QDy8A5WDXJO0e+sN3iDzsxtHRe+MAJP+yBoNl3aU9Ov+lrxP44DtcfDR
JJ9ulPG3npwC7HtseBS39aJ1bLho3eszwKNHddmLl4yMv1QP2rtRwUTmgGIB
Vg89PbVhq4H9HEi6tD6J81cv+vp17hK7K+Yv+0ommj72IMMpbvZzXosgLt7t
aLttJzJkZx/dGfgHuLa6yAeZNyNXx5KTeXFYPdMQaXL2Kh5G2GzWTlxPhIYV
Qh+q2TB5tFxmZn9JhOYBJdkqVwlwq/Oi3mNJEpwuinazx+xZhZvjg0siCSpW
u9+Tw/SbErK9E7dTCFLCU8yXMXupFyg+I1YgCgkPq4+aYPXjVLtlrFPKS9DF
+dLpjc95VLlzPyHZ4yuYynfET16NRd6NbSeD+ifBI+63Zd6/epCI6ccNHgPT
wAX5fnDD5idjZtf8apECcujqduqYv/Rgcs0gUGaBQqduoTQPFq+ZYxqlp+aB
ILmj5teaXiRLfKen4EmE5yS91/AbYPna3/0TEny2c8fSKcxfEg8+Nwb3SLBj
x7nLP7H1DtPcucWGRwiWxKpFL2H2dtG82nLbw49gm+7ez0NR95FUyhFRqdkZ
EPEnYW32DjIKFZGbP0ijghs9pflDqmT09mVZwpvRObCgIxFAw+wDvtiU2VZM
hBS9lmWb21j+lZhnLaFOgg6/JU7OYfKxaHfkT68gQf7WZ21rMfmd6d4aHKkr
BOcLCfn5mHwfWZ12Bb2iMKBrIUcdq3c8St5tmYsLBQolgabJdQAFZMGTB79Q
wNIbrV+fsPz4f/nGLIihzwZQ1pPRkWSjXHkKEQr+DJ+hYvm/59n+DEknzH/t
0eD0weZrKSF/8gWdBD+yzxhbYO3D/fe6d0ZnA9PRiyGvfnqhl82ShsrvZwCH
bE/t/AYymrdZtGv+RAVeuS77XmL1T15e6fnJTCKMWG8sc9OJAG/ytnfq7yZB
Ky/5EVVsft9nvliEfCTB1tBznjux+Uk1TSVf800Gxtr1J9eev4KKeWNMOFWo
oOuGkMIRzF8mSp3ivBBOgocPvWnjxvonuts28ShTwLr6ncdSlMloZ6mB1+t9
s+DgrafjAfvIqNTTE1/6gwjhlEE34S4B8qhGTQ2fJsFEpcyPwdj6zRXL5le0
kWDauPzzGWx+Q0FinA3TotB+aL/ZJ8wfhIdoHKI/vg8uMg2anGGTQQVGW7j8
oylgcwgPPxsWD152XJ06NkqEmQ1jkkVYfpVj5t/21BbLpz7/tDyJjSdH7Nsq
FUUFbZ2/3jJj+Qsbzvwxawbmr/FKHP/VB5znU6UcIhKAZfsnP9ysOaJ88BM/
J04ForMbXYWx+XbKz+6ueYzl58cUr1Kw8S6Fnp8TFaUAyc2l7ngsHphdVz0w
JToLTEZ/Fj7B4oU3b33HySoifFPMTbe8Q4Dbv9cMqDSQ4JSaxhLnf/Eo/4Di
pNtzkPXjOPM29pPoPKdB6GQ7BVx5e4NSi73fmPPx20J0IuzsOt3YisXPo0fh
/Ux3EqxXDU5+hz2/tFAw27+VCvQfJfdHYvnvs0ERZYkiErTNV+ffgo3/5FLO
q3xDKuC05f3SiNmfg2haz1AMCX6P8W1ej10vzvUJPfeLBAdrj9Q3YeOJvFk6
/XxRFLo+M91APUSAH/BbNly7bAIEdrHs2fC8sUBh2ZwqPIlAqq5wxlR4KFq9
v5V0z9KcfHQIbB6xU32/2IJqmQwrap6MgjmHubf3gjtRmM5oyS3TSTBBdFHi
9u9BhTDNdpv+NBD7rtS2NaUXHZLnnh12ooCZAxExJWpkZHlAWmfWbhY81zl8
SxGz34FXO7RbzeaBifRv/VcOvSgP3yz7zX0BbNIq0NNJ7EY8gri6Ric6aOzN
NZjvaUPRRtuaz4YvgVfdD90p3j+Q+XNetjx9HDyGo14qelSCgiSLEhaaBCBs
fFifL8sBx//u3wrC6F+JR78uc0AxTTcHvS5BGEKIFtidj4c1mQRDcIEIJzi+
VngfJMCGtaqL18hEuObzfbHvvlg+lxEZ2GeK2ZPI98+smDyvC03RPgyTIFXh
2Ug+1i5/oZwxbScEl5yymC9g8Unt5GsD5zEhOPnFYk7EB6u3LC5/fuEsCh88
vCVAxuLTg8jwilCFDPBSdD5kH94ZkWIuTQrdLgdGYkoZdQMJ6Opr5eXlqyPA
u5DCO2KB1euUc3xTSeOgmI+SHe3c/X/8S7W/iuWPSzPg448O6Y3cZJQyUCbs
60gF/iEXNIiYfoR1OKmHXp4DZ/Pv1v3p70UxsuSrkXY0oKxB2KWHelA9LefG
LddF0P8lonTyTid6O6iulXzvDwjJa17H79WMvn5r18mPEYQbqjTvBNrg//lv
IkxXMxpdO4iHv1Q8PgzFEKFHxuCzdbYEyOyNNoVtJMFD4vyaZzD/qXXSXlUv
AfOv8p47ZTH93JE+Zja4TQi2fcgzEMD8gx/3Q+ahz6JwWL/9RDAWn1IPEO/s
eRcHaPs6Qiwr9FFT4KOcoP1fwcL6cNfXyTFI/+7dLV86JwFzHM8zr64eVNY/
M7jcOQ0M8sZy7Hp6kdMjG/YPMxRwcyLkChWLz+4BNeWHR2dBefdZ7mt8ZKRm
9aD949A8qCg1knbf0ItaXErwJA8ibGFnLX2tj+XrXqxD4j4kqJD26nk1tr61
ZhNvT3IJwWeS1nu5sTZB5YrAdHMOuM3y2qCmxRs17vTpeTM2A8YfvNFk2U5G
PapSMqemqGD8SE5wH6bvadvWFvT2zYEU7l8qMZm9aAK31yq/EPPX279SX7hh
8TD7jpKMKgmK/4jdSMb8tf36jij/byR41uuXvQQmr8CF30KeOkLwSdzP1B+Y
PKHZGmmeblHI3qmw1RmLR5O+3IOuKcFgXVnfJ6Oa/ailU/mObjYFpEdfihPH
4tHq912fK3Fv7zQRfrFS0c7A4lFApI4KzpEEP9RSKl2w+cWoTP7wWSBBVmXm
19ex9kuhTp2g9dmAeUd+pza/F9I1NtmUnzwDeC4P0SfWkdHhMGrMSCYV7K/Z
q3AUe57N+jbeH++I0Ec4yvPuDaw+Fo9NM1YgQbs5P+0t2Pw6lKTHr+eSYK26
rvx//rlLKe7BjodJ4JkK+KBoeRnx7o8MXLebCgQ3uWlqY/452zovbG8YCTqR
uC5wYP31mRNjghQo4KDKUvzp/dj6Tpx+90F+FvR2yL7oxNpOv0LzE+uJkFdk
b/VlLwLsO3GxcFKXBD08LDs8MX1jZQ858qYF00+p1lkaNr/oR70fYidFYc3Q
bv8RLB65Cy1/XI7zAYa9L2I8mCQQ131J5RdhFBA8F/HnkCYZuQ7LF54eIcKi
Y5zXrbF4VPx6xtLRhgRF+8UvqmLj3TzYZbg3hApuT6eR7mL+XlC9SqT3LQlu
dMPv/y/+fv10nmVX9Gtg91FynfFxM6RK9tK+QqSCzqIvfZOYvY7cMClIfkSC
6GC29hg2HmnNU/ScjwJUC/hEfXeTUXqkii2rwCzYXcVLzjlERrsc+4N3VRDh
Ud1g1XQPAlQW3OsgWofFkycqi3zY8yQ9n005+D4DDQu7l+LLtdEbxdPFLI0U
8HbjRI4B9n5fvfm11y4Qoes+NZ8kLB7pByQLBLqRYPWsmmwC9nzB39y/XtRj
+vzANO0KNv83cne/0gtIcAfzwN6t2PgdT9411J2mgvf9DZk4bL3uXBCyLY3G
6i0pnikx7Pp32ug6xV4SPKCQ6NOFjVcdV4qzoYnCbT85Nkpj8g5V6jPiCbwJ
PO7gd+4R40D8IQ0fjb2p4PUGp8aLmP3uqHixLSoZW69bua7bsPHalJyTglio
4GnfT6P7mLz0Iwl+9VUk+M6vf1j0v3jPrHfVOeIp+GSjy2GzXx2Bh5oScl8p
oNmeW04Hq2ftoyMHt8wSYfU+7kAlbL7FGXqtOXkkeKtmwu6//Qbnvlfyc2pU
EPa8YWg/Np+o3kHPO5EkWB4kOyOAXX/HF1Ay7/YIiCst3gw+thPNf5lnln1P
gr/FKp3+0+ekxwGj6pJU8Mz7wYACdj93j7Fl5y8KUBl8v0UFm8/lNL7H1D9E
eKx3zSQLlv8GvE5/p15CgqfW7wuQxu5XU/nslGJOBUq79tyLweZn+VNNn/sl
CVrm8pzfhF03T92bUPNHFPpsTZf5isXzHQ4Jt1n82wCT4Wuqs1YpsuORJZ6L
IoM2N5PfO0vqkbqFx+W0iUEQqX2+jhjcghoMNoj9XmSCL89W+d68XQo2pzvZ
wVMs8KmUu4FbRhfmJyq/Pn3DCjc+7iBevjsMvv/tzwbXaq9j+3l5Cmz8258D
ar0kJ8nZU4HH3/54eGzz15S1PfOg/m9/AsxMEDx0uH0REP/254JdZfVNtQ+W
/o3PDeEns/PyfjhY97c/D3z+NPHe7SImKP23Px98kIvrssGx/J/zVuu/8uOH
Dje//AgJYYPs5/L2xiUJQGv9S/JHf7L/238QgSmqozzC17B68e9PBDp2XMn3
NybAs39/onDfYq9x8wkCLPh73isINdwelZrROKD+3+vCMNJs4eoNrF5w+/u+
ONhupnnt1PVP/9ZPEHq0HvC9R8bD1L/jC8EzOMckdcyf4h9TX2YWfAfko/iP
QVGZKD7zkGLT3CKQIuV7tat0oNiPDflMGmMglqZgp3CgC1H/nn/SwMtHG5/v
b+1BxL/zIcKt9bfnhO0J8H/nG0vg2903LSGnfvwbbwbs3KgACDvJ6H/zIcHc
iPLuN5h/W12/rj5fXX1esnp/ZrU+reYXVuvXap5htb6t5gVW699qfmC1Pq7m
B1br52qeYLW+ruYLVuvvar5gtT6v5g1W6/dq/mC1vq/mD1br/2oeYbU9rOYT
VtvHaj5hNb+w2l5W8wqr7Wd1vrzaPlbbw+p8cLV9/P/Zw+rz6NX2sfp8f7W9
rD4vWm0/q/f/V9vT6v3X1fa1er9itf/+n78hQUe81Jwc1mbwQ0fGq26prmeC
m//lXwaO7FM58XSQ+c8+o89bbhGS6l7hh+5yW4vzN/aDSzsXeBR4eoBe53zT
ffATnNhyaUr4SB94n26asp/6EhT8s7eXD+2tbyZ/XeGHCrSzH2T5N67wQx7v
nQ+Sf7Wj1c9j6MvdcxZvjb70AwY/9Cl267dzh4ZW+KElScR+aePYCj8UYhy6
/mnx1Ao/5K+1cfPQU8oKP5Q8eXSD5RXaCj+0SeFuBI8afYUfGjXY7K7uT0eo
MmH64QVmKN0CBn72zCHff/bf0pccmHxyHDH4oTiWwSG+Da0oeCb/rv1NNjjJ
eUR+K+UHGEhxdrnsyA6zjRIvNo3/Bl81QyK9vTngBnkBTjtsHRn8kOYRB8+N
gXMAp5rLFHcLi6snPt8SN6eBByJzJxruc8KFHYMjw5M0YG9oUTznwwUj1Z52
/bhCW+GHShYKCs+0zAFS6LO2hy954NrdlYT6SCp4wy9369tzXugV1fGqr30a
FDlu0JBJ5YM3XLS6XQ6PA4b9ddzVLBDJ7wer5c2IZ9rWTuUzA3WAYY/bA6X3
6pRWopF/9uduQpvynx1Y4YdyNVy15c9Nr9gb80RRI+ceCmLwQ5MyfJHn7XGF
DH5ocXxaOOxeFWLwQ51HP8gm3ihFDH4ooLT6rfDzQsTgh7Qi9pPbv35CDH7I
yoRfM148CzH4obDwrsSAiVTE4IfSz7NevObzCjH4IaPtb7q/1kQgBj+km0CK
I0zeRwx+CKdsY3oh8CRi8ENL3lR7YeUlwOCFHJ7WZt60HQXv/9n7IZEne3Jw
k+h82rtlSTkyqAnvuv5mfxnAeTrsngQD4CwYJ2+ve7/CF2XF3tEIFahb4YsC
G3QP4R+2rPBDGRsTjIi7B1b4IXPx2bNb40fQ6ucx+KEZFTJy9plZ4YeOqLHb
6HvMrfBDcQ5FH2b7FlCY1Behj99xUOOBxfZjJXQUVezwktjIBDuU3yyk71tE
pIcTzbRWZjjIqXP7VB4FMbvu+XSllwXKu9iHIr8BJFx7U3x8khVqH96mlvfk
DTjwfY37KIUN7jILyt/DRAY/533uOy+ww3tyonMN7FOArJ178CETHorHGnsO
EWcBTktrWuQPHqYYjLwRfMGIV7wwR2WNl2oKBdD3bcf3s3HBO48MHqkX04Ds
+LHQ59zcsCWe2edgwTxw47SOtRTngTKXj3xk7pkFnfW9yUnreaHD123XaMYU
kF0kZXJTkg9av2PxzMSevzwaYTJE4ofBXyo4XkmMAAb/dMB73GUzlY4Y/FP7
uzoXv4paxOCfOkx5xvL0yhGDfzIVahCcHixGDP5Jmu5M1jqVjxj8k9PG37as
mrmof+tAdsZ7Yej7ejfxi20Gclciu56RF4HM9xrkph8mogQnIw+m9yKwfLS1
ej1vLCJ8U26+oSgK0wrFD96PC0YMfiroMk/y7mZXxOCnfNYe3TizHgcZvFS8
HP9p4vgEkFJXOKev1gYozE1PQuvJoHus0S9FvBdUXbpJZVn+DqTP2Ib4qPeD
zSfLrO0Gnq7wVf6Ls50d/FXIlGvL6fBHY0Aym3rHMKtphZ/KFNBxztTqX+Gn
+vZvrGm7MbzCT1E+7kzoDxhf4afubtXvToiZXuGnpotFXc0cZ1f4Ke0/WVoD
cgsr/FT1uq5J3Vw6ul/Q7GoQxART654k0VnpaCRZu78oihmWuPEJ+ZnMolyT
vSoj0SywlRbrujFmBDHyq2z1BH1pQg6y6v19Z0cuGyxKvSwVw9EBuurpS9dz
2eHF+ryM64QJ8ENL6jdbMQdcvnt8eFicCryOBY/8KMD0McxH6qrIPIh3KQvb
lk+AWVuqmNYm0oCarGBqexknXNtaFt/cSwPHXzenHC3ngmbJigSZtTSwo6yG
6XQLN7xMcA14bD8HXN8fVFvTwwN/m/EInJmggO02Mldju3nhzz9iLu1zU8D0
jQyz+wgfrGQR3aBwYBQw+C/ZnENZzrQFxOC/xoItd/zsrUAM/uuy9AaBu5u/
Igb/lczUtm7NPoQY/NfCTf6GkwsfUIe1/NRciDA8HLYV1n/ORMrUZ4YqAiJQ
+pa77vGMZNQQbr3mcJAIFB7k4Np46yVKuQ1550mi8ItwYOT3hDDE4Mfwr4Q8
yARvNJSCv5cl0wX06r81h5u0gR9X/F1f7PsF+LbSbu0u+QRak282Gh0YBBnt
86oEUbTCk6no5kpcudSwwofZZJiKH9k5uMJ7/aJUGuq7z6O2GFZ8Jx8Oil3a
LogPWkS+E/T3crxMUNwpf8PhUjpKK+OqrBVhhiOEBaVDp2no0OWwSoU1LPDS
0yPyw9PT6GTQ7r2/N7NCNbtfE/lFvaixJ0pnpyIbrI7XCFCIKwMC+Udupexm
h01sYqUhxGFQvYGL3/0QB5yKmbii7zQNpo9rBXGr4mGeDZUy2zELvA4v0y6o
EGA/Pv3uZi4aGOgdyNM4zAlnnodnBY3RQO5RrUvjh7ng7c6cB9KhNMC6r/D2
mC43jH15SePu6XnwTQd38OZFHpildmcmRW0WqE3dE9hnzAs9T/yu9Y6fAcpi
m06ftOaDXDwPW19tmwQMnk2AWn+zuXYJMXi2zGzDuIPrahCDVzMNLbpWoHkV
MXg1UGBdyhOLgww+LdplYw9f1yTYbfOZa1mrFXSHv1Pn1OkD8YHWldfCesBx
fzX2itAGkHdoSPVEaR+4flh1bqLgFmDwbJBlG//tC+UrPFsc/0bVMw9/rvBq
u0ZYYr609q3UX/3uxlt9ioZWeLUwgffXbX+MrfBqN47OGNvsnF7h1d652J+i
D1NXeLVfEvruFSW0FV5tjOd20TNvOrrzxb/P7ToT9LH5k/lMl47OKM//3nyb
GRaZTI83SM2hIL199GQ3FiiXlbP9+YNRtKBQosMdwApZz08WZ839QO4jZ7y+
h7PB8263olSXm4H5oU95tmHs0DzR9M8DjzFQfaRd9XA8B2SpU285/ZQCYE3O
QGYsHuakpd8jdMyB+guHjlk9J8BQ/d0FzfdpoD/Wl66fyAn9b52Uv/ubBi56
vsiVeMMFJUfbStw0aAAvxZRVnssNm6qulI9kzYGyeNvA+kIeSKsJuXtJgwpG
viQ5ZuXzQiW/o+vu2U6DoIBXr+or+aC7bF0rn/oYYPB2Ewfdo9KWaYjB29n/
9kjVGMcVMng7JWX+mt8ZlYjB21mSZkUdK78iBm/HwtTSTBQrRAze7vcP6J/X
8RE13zv7RNxHGD5fp+SfY/MePWt0rkpnEoGadknX8qtT0JDMNetLniLwqxXA
bbsdjxbOlmxRZhOFPUvf6w33hCMGr4fTWJAqmvFFc3Uh+412dIK+aqW8d9yd
wOzI/+rrEdkmjnCWInA1jOIjXTAALlYKfJ8ifVrh977zbWz7rFq/wuNlv1B6
350+sMLX6T6MEUxYmkMdJ34c+NqxDB7X6zY3KS0ibn8jy6lxHCSJ6+X/qKKj
V18L9kxRmaCkpaSHz8cFlDyvWv+Uxgx9IyR3NLbNIFlfxfkUFla4x1LQmvdU
H3I+R8gJFGSDKZxr+Z1lvwDpsgy3YyR2SIr1tfFNHwS6Ad+qXNdyQOGdMeav
C6fAyLHlAe2NeBgb/6fU+PYsgGWSs/vXEqDAAV1PfPM8EPp20cFzEyfUatBd
HvlFA+eL8nJtNnPB/VaUAxFpNCBM9Lv/dQc31BYar1DynwdxabvHxw7wwLBr
TVd/h8yCoN4s48mDvDByQw8+nokC5q69MrDQ4INSXpp9ex9OAlHv8ZKct0QY
VKzt/67yD2Lwg19x15Y+T9YgBh8oYajj+/zqDdT2j/9W2HOaXTGFjoIKpXiU
3jNBvvlGyrPEReS55kWXcR4zbNjg2q4RTEUdtkpucogF8gnll3i9GEIfDw/c
PfGdFWZsPf6o9dBTdKrF2+PxTzZYvCfrxiBrD2g7ei3sWy8HdDkQzJX/nAoK
K66OUzvx8IDQ9hEl43lwI1ina7oLq09+vrLjLaSB2IzY86YDnHCXGK2Hp5EG
lCsEYh1HuGBuy+Q4ZXwenLkcpdtO44bPr0stDWyZ+7cfwQOtPxWfComjAAZv
OG6pq1uc+B3tS85eKjq6BJ58neuppM6jsvDYqXMKOIgI8suOE4uIfuYFk+V2
rE7NmZGzf0dHueUGF9P2M8OUvOgfzrHzqLF5oKRmHwtM8H4lGMc8jVyid7ls
1WKFwd/SBKr0uxA9q+smQY8dplbOdbp7jgCtLJ0znqYccKF+528F2xmwcCJ4
f60pHvYunHn4dN8cKCxu++NhSIBhxPfWbvtp4AP9Oiu3FSc09v7O2TxFA8SG
n8QbllxwMct5U9JDGrhTFndM5SEfNJNhJhFPY/nZP77x87XxE5JNy4jBK+KG
QqStqGaIwSu6H9v4pbwLBxl8olWhtLuI3hRQdsdZ6VW3ABv/IZFOvn7A2i1/
9btuD6Dc6Tj/ceAHYM1+s2aXXx8YWh/TuR7/FDB4xpywibIFStkKz7gpE8e+
levnCq8YS7fI+Piqb4VX3C4g0fvZZ2iFVyy7xmNz+9bYCq/It7UW/25+aoVX
XD962ehsAnWFV8yLnOB0CaWt8IpPz6tWky3o6JaKpViAMRO8sU50wzs7OvJn
PjlxzpYZxuDeEVh955B7zceOhzYs8OlrdoUQ5zF07NoC04HbrNDj/dPduwKa
ELsdgUniPhs8sDV0fxPtJ3jtFCF6xYcd3plp6NDPHQVa35SuWYRwQJXaMOH4
kxQgwVveJxGEh+xZy1I/cubAZR03aR9/Atw66Nda6YzF8/aDCWERnPCZ5vfP
aJwGBq96HeB+ygXLHGfckgxogNIQxcX6hhvLHw893/1xDoxFeWdvz+SBu3LV
de3tqKDcatg5P40XNtvI7lj/ehokeZo50fP4YAGVTe/G1zHA4C15lIrWF/nQ
EIO33DFWfXPDO1whg7dsOs679ZFYFWLwlkYPS5S815ciBm9prnEpTtGwEDF4
y5TTGt8EdD+hRtLli9tvC0P9YWa1LcXvkdbXXz5DNGEYZCDcpm+cipwm7Xhn
XURgTA+08lmKR5tKfPde+CMCSYo2j+1xEYjBa0LxZtZgOz+09Ks5NCOzA0wN
icYHX+kC8xcGjIuvkcH6Ujn/9f0lIJeQdYHLcwBI+ToaDSzkrPCbRo/gtcOp
dSs8Zq6y+MnL9gMrfKWIxyNr64I5NHl2n97Rz8tAtYH0jcy7iHTPceef6cZB
C/aXedcr6ChGPdKWuZ8JmqVkWnxZWEBdhZGN34aZ4f2te7teHqMgoaXsFv9p
Fuhgjo+UvNGPykLg5QImNqi/Aepszsj6Vz+yw7wn0pWTtAEQUpyw5SYXB7Sb
XLzlYDkFrKoMBa8I4KGkfcpdI61ZIMGhREniJsD4xyciKvLmQdqnqOPRApyw
QvHjCfZOGpD7c8MkUYgLBszwfB38gPk3nA1PxjpuyLqgsi/z9Tx4fKFGc8s2
Hvhk+/fvHZ9mQW5rpc/xHbxQrocpSFqeAppE+i5cU+SD0tlML4zKJwGDHx0O
1pFpdP6DGPzoQgmvpbNRLWLwoaaLv03frXNBpgFVG8hxOPjsdpe2DBb/AsCS
2pGXTJDjbbu3V8siyu6d6X2Swgx/GKS3etKoqKI/15AznQXq2kYEhccNI7zX
uj0eBaxwyEfnwDwlBXUY7V3qLGWDCZnPG94TuoB+RTkaqOeAgloyDu+NqCCO
03PUshYPz9u8buBTmQecvv6f+GoJ8M5Oxd9G2TRgP2rAHNPECT0LLMqd2mmg
JJcidbGVCwa6ignj2WlAVUQxWXiYG6p8PZUZf2IOnMqTXps/wQPrjC7F6ZRQ
AIM3fS50zPg2dx3y3ZFmlyizBJR9ZSTjP82jOrEG9ygJHPT9VCWhUbSI4KYT
ht/WMUGCC87z8Bc6yjyyKyxflhkK/2BXNFuYR4S4g9+WZVng6aKjnd9vTyNz
4Sx9rr2scIlzafH8zR7kty90/rw6Ozxs7dfbX47VucPb3nuc5ICnn06fiq+a
Bi41o5ZjungIrrkduM81B+JYxhZHtQmw8bXeNw5JGtCZSOmWPcsJFVUqWYwn
aUD63/54uZVeseIDGjCy79XRcOWDmW/ltW43TQAG3zpkvG9Q+PQyYvCqXvyW
ORzC1ujVv/3hMdzuKPrSzxU+9bPRHrM9W4fRkPTW+qS7OMg/ysInHkNH3gcz
0208mWAnJXs7x3Y6Spl99LwjmhWy6Vm1jpjVI4d/vIvcnkElJ6ZpoGzDbH80
jQBfm38P1YykAZJlld6aD5zwxY/+G7sGaUDc2drw8TduOKniJfwmZA4weNjz
3bOjNduZCsu/pHEFLuHgS9b8Y46VdJSk0b/czc4MJc3P+E29oSEn+d81FgQW
2JfZsfW39QyKVqXTFiSx+Dlk8YBiMgRM7wnMV24lwHnBBqn6qXlwp3FTuPlu
Tki/bx10dZgGHtxj4t22hwteXNMddzaOBtr+nS9UJwRFBJXMAQY/60qLXTI9
voRapmyvixfi4ETTqw+On+ioTK+WfqCfDfYMdQ8Us/SCjhhBlqYJAuxI/dC1
p5IGap0GMjbNcsIc7pSWN1VYfVY5/52Vjxd2mBXwij+igFHJ/McdtksgxP5M
3hd5Gvp4fywJd5AJ3g/bfK4Uk3cMX1Dhcy0W+Ov59h0X7k8hdg/7WS8HDqjt
LLI3PG8GSHDu3jLhwgm5C3T3s07TgFr4Wts9TlxQZuLLhnduNMDgaXGBXakn
Ks4jBk+752Pm6GNMrgx+9uAyoYT2eAoUsEmG/nncAhaPH6lLcegHiveFDuJ2
9gDOH13LFiGNIGn83r3XVlg89x64vGQXDRi87d2W9wXph8pWeNt7hWrPlasa
V3jaZXfJXv6HfSs8LY/O2n19pkMrPO26qKDje06MrfC0H3CH3jzunFrhaXVd
DIPHvKkrPO0DK/KSgh9thaddNNrgaKhHR7MLujmks0xwvIg55qEHHb22Wpi0
t2CGn+KtPnx6P4ccOWnVNFMWyDHvx7M8PIYonOHtPxxZYaFVql/bz2Z0PNNC
VcuTDT4oPPCZaa4RlD7xOzLsxg6zUwzyn50eBez3+5hv+HNAB5+QrL3bKCBo
R72FwQM81LvTm7Alfg5kHxENE/AmQG3C0BeZq5h/vhV1K+sJJyzwlY6fm6CB
tF8Oy3cDuGAz96usLjMauJIy+OHlC25Yequg7WL5HMCJBH67kMwDPxu50vb4
UsGHzw9vqr3mhfG5tDzxwmmgeKuwQyCLDybphSq9ZB0HDB6Ym2/HObwmDTF4
YNPNKDLjCa6QwQNfOKe1hnyyCjF4YLc+oZYprVLE4IGvqFoaPHYrRAweWOnr
oc1a/p+QntGUhtJNYYjF6cGv4++RxBcxU7ZZYahDe9Z78E0qyjszZVbgKAIL
btgXlsJXKPfWpQJbmgh8cPqpc4NVBGLwxOVhcfp7d95H3tcWCg1vdABf972m
58S7gSxr1Y6ZY2SQ+LTmB4WnFFw4HPLNw2QAFA9ot7yyzl7hiyfFRL42Xqxb
4YX3169teHZqYIX/5Y2KJ82/mEMLrVe6HqUsA/Unvz7KYfF6+qCljV8zDtY0
Wu9pLKOjtSz32B91MMGw2MwNQGwR0aQON/X0MsMS4RvpB30oiFuFWr4wzALH
8GfF4v70o+vyHar6NFaonEUp/zST/q8+YIPj4jGmHx3IILszzGCWmQOukRko
r9kzBaQe4ZNuEfAwAu7x0d2B1Vcy4EYPKwEe+1q5f13aPJh/vy9PjsAJzz9+
ucDdiuXnz+t2l/FwQf8jc26K+TRgedOwbrMQN1RrLIFPM+cB626xmTJJHpg7
UnOEUDMLKs82hbtJ88Ib1MRt0kcooPSqr/H0Vj44oPVd4OXgJGDwzZXzPpmX
9vxBDL7565z524aQWsTglzPUFXrMbt1EzDckq4nPcFDpmxPcUkRHnMsjnd8j
mSBn7Mlzx7F65rtG7K+keGb4Z2fHZMW2WVS4aU7bLYEFq0+KD/NIjKCMdZ94
hXIx+Ww2q3jul4k2xgYfYi9gg6qiel968J2A9NDl7GwFB/w0XCF37wAV8G99
YBtdhocXFbkir22ZB/oesjIxpf9xPqdzx99i9at/TtOXWk4YciB6tqwL88/b
BwZ/1HHBmddrjikJ0MDHca+z2T3cUCDY/9QukzlgqbRr5+9BHniMQDS0aqWA
ULUDcIGFBLP4tlzg3lKH5KZkZKOEl8B3y11mG57Po59GtsUqolg8WSMvyJ68
iMj4BHaaEBN00/2Rdwib/w6ODTs1JZjhvoYF2SxpGpJiHS4X3cgCP+6rs4r9
MI0M9GY0b+9ghWJZewhFa3tRtdvYPm8VdsjKs3uZ+/owSGVd20vX5IAaVmeP
7InD7PVx1AJdCw/vjfTK2FFmAb/UrJuUOgFeDkguOixCA1FDWic+HOeEpEBW
j42Yf6hJ/R30/TgXpPe54/cG0MCx0ru6lXbY+tJvPODkngQM/jo8SbLemH8Z
MXhq3PnUg8ZpNmj6GiGnW3oMuBr16YR++7nCNw59Nhk5gRtG/jw+Hm23cDAg
IsS3OIiOcH9eHJ12YYIFbxTKTAAdnQ6TcXYKY4UKhxyVZtIakPu/8/vzRB8B
t9E54Gce19n8igA1zB68VAuiATqTrOy+d5zwtjRv+G0snoYcz2bfinn1oU5m
NotXc4DBaz8ip17/w8NUeOUV60c0i4OS1BoYjeWP9f/4Bb/lxz8l4hZQYFj4
d3cmFjjiMDcT/3IG9froK0uuZYe563xax9mHQF2C2E1mKQKsd3lx+3nfPKis
KWSZkuOEFEHpuuYBLB+UvEjW3s4FLaofnAt7QwP4NSznuk7wQSnPc5XnbCYB
g+8O/XOZbMe1hNxaSsROfMRB9rX9G6Wz6Ig7XPbgpU42+CVY/dcd3x4gG5lh
bzlIgL+OZAnqlWL1maD6PdVxTij08vumhe+0/3M+FDKwT/O74RLouKD8y5ZI
Q4bXNc7u2sMEtSudXj5NpKNPN1SKsyELfMkrexCWTiGZSJPNOBsOGHuqvJIY
OgOustSHe1znhI8BflAYi+dyirfAmatckKVlQUzLmwYYvHdhrHmlWNNFZHvP
rbE2fBbMkM+MdL0ZQr6CO27vLFwCqGjdDZ5kLB7cvunJYsUERWYqz2Sb0lH8
94uyr31Y4bKU6buNaj9RxljBpeEIPAxULKhfVzEHag/21jnHckLgHFygNvZ/
8yEGP26knmb7phZXmG6fzS85iIN5eR7ha7D1lPBNrbs1xgSvSkuulW1bQFfx
XJ9vcLPD4yKu30v1B4FpIb2LR4wTbjJMtErooYGBYnXDoQN8cLdHzK6+pEnA
4A2qqeS+C8l//ukfDu5KM384VE9HD3To2z27OOFMm1xEbzMNHDokTngyxwPX
btk0zf2WAmJUqG+fbmaCDVQD/rO5dDSuElI6IM8CuQsX37uB6X/n4xxQyTTt
c9bRGcA8y+0YZcwJzeaz59WnaMD3H3/ScXxn4vNQLD/9x1Pc+WXY6He9Cd3c
Xisw2zgLrqTfjDI/OYyYz08WHU5ghWSzgvAE4To0aRtlw/UBD2mfmK9zsc2D
rWXXPRcKOOH+A+3H3/TRAINXl/mkdfHDCaZC6aYzJkbsTJByNX3j2XI6kvOb
tzzHxwwTJn/3LLnT0K52X9lGFU6oyZlITf5NA1vsivUaL/LBp56EO4QTk0CJ
i1Q8/A0HZWeV+hoL6OiugNMX0hgbXB7TLEzz7gVBCU5Pj8wTIDldx+9DLQ1M
nhj70iTMC4PFXl+Mc6IATTPVn8PuS4Dn/iwl7wQNCb98Sq89zASrAy5oLIfR
kW9qX4G3LguU+q3LMqU1hRr5n3429eSEDirxabGYvBg8PK6ySMng6xnE4OF1
zizSbHiZ4Op6wEs7O7nhegsoIss/qozvB8fb7yeIru8B26eGfpUNNYKFR86f
O/X7wGaFTWcdheIAg5dv7M7KLyaXrvDy/D+ERTlTG5HiP97k5VbHxRdVv1Z4
+FOB/s/DTg6t8PBt6NqtQ3vHVnj4BwedVbjrplZ4eCGtfe9yHKgrPPwMuRyd
daWt8PAaXRrm1dp0lGP4jblVlwl6DZskcPrS0XvROgcPE2YY1oBf114xh8Zl
15RmGrFA+nyx0nvJcVTealEee50VHg1JUPV1a0HXG4LMjG6zwc8iFS1PnRuB
/rqlriQXdti4Y+3CB4lR0G/1ucbNjwNqHTjJZCJGAeUFZyWdfPGQcCreUiFy
DhgeHqxs8SDASBfD8h3WNBBWXv6r+BEnzFRP876F1YO8sSM9Bx5wwclid0cz
K6w+FOYNtH/GDQtKDrqb1s0Bzp/EescEHsjNwt30IJAKdgycn2eN44WiPwpL
2GunwQJ1ImjtOz5I9NgmHCE1Dhg8f1afKruKDA0xeH53o/kNzF64QgbPf95z
f+q7K1WIwfP7XGwpVr9Yihg8f9mmpJEq/0LE4PkrUyxO+CV+QoK43E/KzsIw
Dx09v5UtC3HvU6olUoSh4EY3tZbKVNTB/v5RvL0InI7p6uA2f4VwP38yOc2J
QFfbFwH7oyIQ43uAfZtbut2e3Eeb//1/CXJj9W3+uV4ADQ5GcKmQweDu7YKO
r0pBeu/dP7knB4BFznC1XXTWyvcBeg3+zjr76lZ4/94jrHEn1AZW+P0ncfrm
bx/PoWVxVqnt8cugydtYKG5iAakrBIHYH1j82Hfk+vZSOmo3X9Q72cIEmVXf
eTzbsojYm9ecG+tkhpvHPrxoiaGg++eFit73s0BtYk/oBWx8teXkHZuorNA9
YTtzbGEKWJM+eqFlng3qT9v91INkcNiWezJniR0WPyhgu7B+CrDYdjveZcND
B9utVJmNs6D8Q8kuOo4ALUbmP716/f/xdSZ/+hzcm7D4N7L04ieBC549fBWV
IBoo2/Ujs4efGxrv9e2a/DAPUAyseLqBB9YcibYIaJoFjUSjuOBNvNB4Nvbc
09MUcCDiTFe2DB9M9POq3Dk3CRjfJ4wbejUAoT+I8X1C+qOKjxvTaxHj+4Og
tXeT2GVdkZ7VyfhtT3FQz2zzgZbPdFR+0WxrWBgTrPqZsHRkYRF1zDlZ5sQw
wwiL+437NWeRiqqI+q6XLPCFvE6auskI8h31W+zJZIXcl+WZlf2z0OHCgoti
eWyQrA0Tjj/oAJTLJySWSjmgkcAeeY1tVKD1mXvrx2I85LNmL3OVmAf0W3PG
l4oI0IpfbTY4hQZ0Wn/B6kpOuE5s3PccFn9Ghi5WBFZzwfdbCk1yhWnghmHi
Vp8ObkjxDbwzYD0HrlM+7GPu44Gjhi0u5n0UwODXxmjHQzburUMeDZd8ibxL
INq9/k7Jo3nU8mfvJW4SDhqf74+LiV5Eu+l1HQKCTDBG5SaTaQkdjVk9dedc
ywyD4qJKgg/QkEJuwdHN61hg+0EBtrM/p1GjAxHslmOFEov3Np2w60Xjz8XO
h+9lh+Hiu7eWwGFwICTU9YsaB7Rje9+v5z8NiNccSlk18DD0VS0XGpoFWtlu
yhAQIFt301uI5cuwX8T3jhYndN+ZV2UxTgPFC2sWu7S4oHn3GYHcJ1h74lR9
gC0f9N609Np47SRgfE8xsNR5JmxiCTG+j8C19i9w0a4g0zutUcLCY+BFsiq8
l/QTrT5va8e905txxkHh7l1L3x7SETIiReQ6MkGBerXnElp0JG1BNYNBrLDg
+ZSk8ekfCH9QQSb8FR4Ou8KPF/rnwDYTO1JsLAF652mLiGH576SufsiRVE7Y
5Wvd4TdCAyc+tnXQ8rihYVHQk7epc4Dx/cU9iR231i/hCj+Hywe2TOMgvc1C
tQnLR/ostYa2LTBB0kSW3bHEBRSteVX34R9myNR1y/p4wQxiTfAx3CvKDq8/
XrM7oW0Q4JVildZLEKA7qSK1s3Me2Fc+Uf4ozQmrJIHz/2PtzaOp+h7/f0Nl
LmSMCmlASYhS7B0ZGmjSTEqSVKQylIpKRYkMlXnmikgyFNWmNFBJyDxzuTfu
JUTm73m/X/Z+r+X1x2f91vr1n0XXde4+Z+99zvPxfJyhU/uz877bDykJwMuD
Ydsin4wAT4OK6pgt86DbkaM7zS71AcxrsJSiEvm6J9CXL719J7I44KL4x2eT
n1H7i9y9lpdqZ0PGsrCVbza3gNJgD5pKOx80iBDnefNuBKQcc+rd+YsfSpUt
HBMo//d6hP7JJc5k9yRQyLoBE2eNoNRjTirb1nDCoUOTEbGp4+jjUhGDwo3c
0MTh7UeOjt/o5dLq18iGBwYHn32g6jEARDlivm2254cLnNvNOan15aKbtCfH
7QTg8H0vg6lbIwDzGwWnP0nnPzuK7IXLevj8hwDIvvDX4CED+Zh/KijLnQSq
e7X1fcNHUF496+unY5wwK6n59V67ceQStVL8nMcs+Hwx7zatrp+IcdVg6exg
ar93VvaAFxoG73znbbgVzg/n86ZU81Hj8cp0fnfr54FEqdxhgHkQ5xPPu5vf
chRMHW/p3NDOATmadFdbl4yj5nb5RXpMTphtcOVQ8C9qv6C0rv4O7xxY0p5s
tFKlC8x580X8pzg/nDfni3grtX88wppfn7JuHhw9ZEtPetkHlqWptFvS5kOd
th11so8m0LzQ6C3FCRxQia/zXcX3cXQlUjnEr44f8uVDkxfU/txkPEY0aUAI
0pNn82i8HAS9qvJe6fKckOZUff70q3E0zjppNLCSGzqb/BzJtuxHy6bz0H4W
6z8FVPaD5P765GMH+WGQ6qXZ9X3485wHDf96Po481gdmPp9yeblEeQ21z2/d
PhStr8tEVcvfpgvHzoJcsavkdrwum36+yguH22dHC/weBnLikUy+fH74/nXt
y0FqfGL+5MfsdzeRLmeBa7HnWmcuTjgsumzFjeJxxKQ7ZMoIcEGj8drVooEj
qKZ6j1W4Nj8ckV6+5NGvf7+/O5MghKuIAypW22lsej2OEtRjG1YwZ0N2mL6X
gUEr0Ioz+Dp3kA86N3/8cuPrCBgVuPCRJToXaumO6bZ7DIJQfY81xy9Ogu01
1ruNwAg6GVxY3gU5oe+FnDmcYeMowDIP+G/nhhr+X/O07H6jy0I2/cvd+eHp
hRqKDdT6EvMtML/sU43hfpI31lfc0n/RdwSlKJ+ZlxBE/f0SeodsqP3zM73C
1vJYQehT6Ny+o4Dar2xdF3S2ngOGWh09DKj19erp/Hx8c0tBWNYI8rpobrok
fj78NW+N7OO9E+i5x/Cf0QgOGCO58oXBR+r9iV9Sa5HmhHOXi+u1UOvrBa4J
W3S38cAEjiLN0ex+MNh9SaJvJz+0FXzSWEz9/hqLN8sKdgpA3qEh9yfe1PG0
XP89WZsFjA6olF/r/InOl5Yeor0ZAmvSUZ2ONBNd+3DQOzlkFlz/nmbuylOO
uKbz3Zv92nPLDfoB5mvOnekNbFvIWSCdUdOaNMoBNRZlxi798u+/R/HH769K
q/lhwMKeZasY+PnAPBiPPg8HWPQBJfrjzZqvOeDu0BWxp6j90Vzva7UyAnPh
fvXCcuNHg+Bp4YlNyZu54cWYJ4eOJP1GH+dwHc05T60v67OqJKnrxZlRxddB
UUPgfNerAt+XDPTef7nP40xBqHvII3nB62FgedVbh7+bWi+v4C0Lpt4fzpNv
5XzYaJE/8a/9l6bnwynXMSH48mOOTUPsIKiBH7v1LHhgjdmunYv2DwCLEd0N
Fcf44axYo4HH1HjglZ917cZRAXjLWCtV//4IKJUZ0f52mQV6BLLPjgRXIcwz
pF0qLbz+4Tvhg+jbZhcxLTgLfrat8DHg54RJ7h2K3dTn69uU/VsQUvPjxX2L
knuo66sko7vsCzXeXxWEryrE9yf4IG/XdubdMnw8uWHXCGN4nsFvpCr20Sv0
Jj/8m1beZUa9P8wTwRf7jpVs3o32/Jcn+Q3mm6VWXF7eipL/y7cMgZaC3c2D
cm1I/b/fzwYbE5vW5lOLqSf//X4d+JStsa3y/AeU9N+v20CRw8MtnLU/ENd/
8/EMUFOiqHohoQb9k5fngjuEm1gHej+Af/gVbsgoMCq60tsE/uF1ZsHK/J1e
D6OZ4J+fnwPrIlM/K7j8Bv/wOTyw5d6szV7uf8A//A0vhNrzDauZf6d/nh+u
dk/YXN0+Nv36AnDLIenB9AeT0z9PrSffGn/768Mxnd+fC6NjHl3W/8A5zQfN
g3Per1Q2msU9/bUwLNW42qW7bdb0z4vAuexbvl6PZk/zPyJQLrF+MVftnGl+
SBSy00N5gsZ5pvkjDigZKHesJOvl9N8/H0r4bV/3o4MX8v736zKg+bxoO3/D
8+nvj4Mb0iZqQssa0OH/vh4LLDcJ/71qWxP65/VHgP2ujzsVK1rQP69PrW8P
CN0UdcK80yQI5YRTqmoV0683CMbf5RY9Vmv71/n6Z5oPWugxqxvlNiG3af7h
8neVY0cD2tHMvDrmSXLVh+30JssA5keappyGxs6WoLxpXkRu9ONgaXUn4aV8
M65cblkyiI5P80bmKkFz8hnjAPMgHwoUnIs8BxHmr+KmfP4c8sya/loKTnFo
XNI/cB+tneaTdGubrCZOtIGhaR7EMVGArvK5F2EeS4T36GeTc28Q5r8+6tUd
+9YZjYym+aShRTXMvrD3hJ/qP9pP05r6gpjTfNPgLMWqedbvAO6zkVxYXDXk
UYQwX7atJbiCryflXz8/8/7gzOvJzLzRzPl3Zh53Jh8xc78083yfmQea+bx1
5vV15npm5v2jmc9bZ85nM+f3mfdfZ46vmfc/Zo63mfzEzPE2k5eYOf5m8hMz
x+NMfmLm+JzJ68wcrzP5l5njd+Z+/v8arzN5npnjc+b98Jn50Zl5jZnPe/6v
+5Mz55+Z88XM/ePM+QnzT+1ss6FvxwfQjP5kXdyf3EXXKOueDASW059/8Of6
6zmXOwHmn571zM8xfvEO4L7NnDup7MzJDwDzh7x9+8XFwsoB5g2vB69dEXS4
DmD+6f21iMHFWi2EJ9zXniUd96Vkmif5DWKFzite7WsHeLy2OLy+drShnfQn
O4lEZmySYwDMP+04mbSgeZABMP80Xzq0aOF6Jjg6oLvS7Mw4UA0vy7tcQH1u
0/yTdfiXha4mXQDzT5Zr5NZcyuwAmH8azuBbkajcCvD6p+7KsRiF7/X/er+Y
f8q0f35ix3Jfcj1w+/xE+CBPHMK8o8i2ap/jij8QXv9K2HKBN3Z0hPkn+XDe
p39N2hHmn75fpZc4CnQizD9JSLxyOS/KQJh/ClJ7Rb8izESYf1oUcOTNqjVM
hPmnEYdz/W9OMRDmn079acs26O8k/bmz1QbB2dvthH9Sqvx0p2i4lfBmDvtS
jtKaW8l8sj9/yWU743qEz+fg8FYXBcNyNPP4YP7pvEbgZ47cDIT7kw+c8gx7
GuRC+Ke2wCaJhJYwgPknWymVXVKnwgHmn7bfv7VT2/ARwPyTy8Gzbapn7gHM
PxmbL1PIirQHmH8qj633Y3+7SfinKs1U98rIx4R/cldbv7diLI7wTyapH1Zq
y6QS/umqZODiOMfnhH+6c9zhl3ZZNuGfdtywreD7fgHg/mTZvw2qIt6JhIcS
rxiZPXArf/p68RuI0+t9mU3tAPcjV976dteYQQeYbzqG9uza49UFMN90Zo1H
Q0cYA7yY5pum5IXsy1cyAeabWqRftu8Vp9ZX03yTcoud84nlDID5purfe7bO
U+wkz4siy5uLYn51Eb5pQ/Rz6TlRjYRP+in2vfptSB3CfJLjt6JHofdbEeaT
lOhtsqc+dJD1qcCmu2fal3YhzCcJxKoadj5lIMwnpa9uUowGTIT5JCdT+G4u
k0Gu369EOrv7G5IQ5pPi6cFfb7bSEeaTwjdtEHp4qB3h/uaVV6Vinr3NI/02
8XXpVq/XZRJ+qcbywvej2/wB5pfguds5pkYRAPNLOU5CXtcPhQLMLxWFrOS9
cyQQYH5pwb69BeZ3rwPMG2lxWb+zjX5BeKOdU60SalrmAPc1h0mWWtX8jQSY
PxJ4FlVTPZQDcB+zY803nebD7QD3MR80/u748zQdYJ5o2NxG64JKF7nfcncq
7+LAIIPwRHy+N1NHJZgA80Ssm9+iRFYxAeaJTD74AMMrDIB5ovPR9/VTUSfA
PNFyf/Hv3361A8wTvaq6wjae00J4IDcHvqjhRTUI80BNpQf99oW3oJnXV8wD
lTwLyLBM7ESYB8q8Zm/3yJaBMA807hQU2bSaiTAPNCzkM2+lGBNhHiiyoHce
lGUgzANxDPINhTh2IswDeXmnb+jk7kC4L1q0+9eWwzIFCPdFR1bbNceEJSPM
C60NlXc3z3IDmBfacU93UZVXGMC8UO/Pe7HodDDAvBDPraWLIyNvA8z3wEVH
ZhveySQ87IWXeb2nGQyA+6FfJ4GIPL40gPueDRjzuhItOwHmedTFmfWzq7oA
7nuOM391ZOlXBsB9z5LZ9LR0ar7Bfc8Zc2337/vNAJj/SW4wERIq7AKY//Hy
OHhsiTMdYP5nc3ryraxlbYTPUf7RBzTPtyHM5yyzbTis70hHmM8xWmhm/zO5
C2E+Z4TPYP01OgNhPkfmzjGjEep8xHyOw87GlUsyGAjzOeWLftE0j3aR/ukt
l5ZX2gVkI9w//fX4rTV5lwMR5nVG/LbGSIQ9ApjX8bldEXltJBzg/mkazPXz
Zz8GuH96M2ib1yn3AGCeJ92lIrAkN4vwPAl7nKsTTmkC3D+Nvlo8XLA2BGC+
Z1z54snbX7IA7pemeUx+0xFvB7hfmjU/2ZtPhQ4wr3N6w5TWyfFOgNdbUq90
sr4BBsC8jphYA9dmHibAvE6YXnWMlyYTYF7nyTuV5XYxDIB5HReunYbWc7oA
5nUAOFtTtbMDYF5HfCqItz2shfA2jKfFVr+qqxDmbfi1/LNWLGxBmLcpyeIb
W5rWjjBvI5/G3nT6UCfCvE27q7sn1GMgzNvYjr3bv1SBiTBvEzyf7+lFRSbC
vM2E4Wn7k5sZCPM2lawP7cczOxHmbY76+69/vLcD4f5rhrQp/+LbhQj3XzdH
yV9wZj1FmMdRExXedClwE8A8zlCZ3FwuRjjAPI6NeZE2N0c4wDzOKxVTw5VW
DwHmcRQiX+75KOQDMD9z5sC5Wqux5wj3XW9V8vt7N+4awH3XA1qXlJ+qPAG4
v3rxaJR945JOgHmZ6+qPsyTSuwDur7YIMhj1z2IA3F+90Mpmq9VaJsD91dda
X4kxZjEB5muabdu7Lw51AczX+KA3G/i/0wHma/58VX5kEtVG+Je9CpYLoznb
EOZfPDt7rPll6QjzLz2KGZWcDl0I8y+zaz/qd5UwEOZfNBzOymRvYiLMvzxT
Fw03LWUgzL9o+Fs81w/qIn3aT/xki9UXvUS4T7tvt7fbnfuhZP+pc3Hnyird
IIB5mMDbP7nDVkQA3Ke9PFRa2fVpCMB92t/38/3wNwwAmJdpTCvjCFbJQrhP
+2en4mLem7YA92mbC0o//yMfB3A/dsAKevhqDwbA/djm37u8+5cwAZcRzezZ
mjHw7OPXikwFJgipOHebtW4CZOjuzBzewyA8TIStnJxxTyfCPEzaqSNarvcY
CPMwQlduXX22nokwD/Nke9IGC2p/hPu3JebZDV13uE14mG0pkqliuyMA7t92
bzEZVvwbCnDfdqeGV6W57X2A+7SXXZ0zN7SVAbjVKr5dWjMK0o/PZg7qMMEC
7duhx1b9x58yJ/R+HQPgfq35P6yff6+/AfotRh0lLgjCp7f+dl3QYSJ239d7
HJ7U57dJY12YH4P0c4cfLF7YJh4KcD+3h8fVhmuvwgHmWUIiY25zb84mPEt/
TmVmxw0xgPu3Hy+5e4J15yHAfEvDcqdQhzcvAO7XTri6Rf/87zaA+7Xvtc09
yMVPB5hXeWHrmaPb0QkwrxKICrKM1jAA5lU2L9ffazvJAJhXSQxyMlfRZgLM
qxha2FT+zmCQ5wEppYm7aYpdAPMqopFG3po3OgDmVbjPj7cfbW8hvMnKBwPv
GGuqEOZNHhyl/U141Ywwb8LvxSPs7t6OMG+y/+bpWAeNToR5E5P3rk8/r2Ag
zJtsY46d/i7NRJg3SeYEbgYqTIR5k44lhSfO7mcgzJv83CiwOrO8E2HeZOy8
1taUqx0I939rG+SdvaT3DuH+78u3XBuXrHiGMI/yorfBn6fiOOFReN/d/XjL
LRxgHsW0mke6TiscYB7F42rfEnrFQ4B5FPV7b5s3gLsA8yNSqu6B7tnPEe77
1un8WL/5txvAfd/2sk7ZVrtpAPd3xwWmRm6b0wkwL5LxKXXUIbQL4P7uBSN8
J8dpDID7u/dX8W1ZoM4EuL+7XWHE+IYQE2C+RMHD8f7leQyA+ZL4I71qK0bp
APMlBs/WSDrVtBH+w+/jSkH+z60I8x8FD6w+LfvdgTD/kZts2CC+owth/uM9
84eJ+WsGwvyHz1zrOkXq+ob5j7q7WhyyDQyE+Y8P3qdWlKR2kT5xvUhBEYEz
rxDpE1//w10BRCLMgygtEuL9GhMAMA9yc/ETuSfrIwDuE9fvdw/0nB0KcJ/4
+uv2Wt4VAQDzIo7r+D+7018g3Ce+seCPrdsZK4D7xEV3/FnPuh0DcD94R1TE
s+BzDID7wSflW7y+L2SC5pPbZq8XHQOG1llVcAUTdBywGy6XmABvtJeeS7Rj
EB5ko0TzjT3FnQjzID2zBvWcLzEQ5kEG5GSeGKxlIsyD8D9Z5ZLFzyT946rM
w+OPqP0G5kGcdB9/FNsVAXD/OLMz6EcCDAO4b1w08dDxEXcfgPvEu/TLVBWr
GeAMusIsnDcKkqaU1LKo69vM9Sy+f6j9pODoEJuB3Lc2/uG0FoTVPm7wmS4T
1UXbdmxwFIIcc3V+FEczSD/5C8vnIu9YjwHpJ/duORBUHw4wz2F6KHJ110QW
wv3jmisvbW2pNQK3D8pOBr79C278zVziMo8JQlODzm+vGAW0Cz9cl69hgp8B
eWprcwVggPhTVw8lJsI8xgbWrdpCWSbpJ5d4OKrlqRoBcD/5k3cBJ5OKwgDu
u3L8eY5n2errQK/pu9zuryPgztp19E7q+vY84vybydIxMLRJnuE1xiC8hclA
Vl50DQPdXxrPWQsE4erYy4yd1PjFvMVhT8sjwTIPAe4r50teNao2PwLgfvL7
vYt+hF9xAG0yLv7nDUfA73Nt3seUmGCpInfI0l1joLfe1eSELPX761Wl74wJ
QIuIZM4l1PFVfxe0MkdSDKq6bFNxNYsAYTFKmWv2jILTTVKmDtTnhfmJo/uV
1Lh4mMjeUfKXspcg7B4UsTDRYpI+c9ekuUIFImEA95kn7Q1P2xkUTniLBN6E
V4vuZhPegnHqpJv4g0E93F/esXUisU4vGGD+Iutt+fH9614A3E8u6tuUd665
DeB+cq3PGs37RjoA5im86ko8OWo6AeYpItRltStWMADmKTaXDRXnjjAA5imY
XHL9OuuYAPMU6qY+KlUvGQDzFFP0B+pH13UBzFM8Xfun71JYB8A8xcCblWeU
eVoJD7HdI3TVtqafCPMQBn9vL85wa0aYh4hQvfnB3LodYR4iXnfE3X8xtf6Y
5iHG7PYcf7WQgTAP8Sx3frGhOHW8p3kIcTChvVeViTAPYRa39OzTowyEeYjS
pZVPAts6EeYhGC/8710P6EC4P/3KmjmfLcPfIdyf7tCocrhGMQNhXiJbJfLy
8Mpz/+MlAjNEQtaEA8xLxNdUed7fGQ4wL9F7f8OfMcFHAPMSnaV6NUZVdwHm
G5ZFCjreD3yOcF86v+bjZ4vMXADuS7/u/uDR7tNJAPefp4D+L/uH6QDzDE1n
5gT2+nUB3H9e8T6V73osA+D+85oKLs81akyA+8/3Pyp45yVCfT3NPxh5FS0L
kmEAzD80CExd05/XCTD/oHl9xT3ZP22ET+AdVdRgpbQizCe8fHJn9fH6DoT5
BJV5onoAdCHMJyz4djTjZRYDYT6h63DRG0/IRJhPUP/x7FdGGwNhPiE87I7N
t9wu0scuFrut6oNYHsJ97It1ebuL5KMR5hXMhrkk9iQ/AJhXEH0u9dEHRgDc
x64bu131ploowH3sozt/xJyUDgSYZ+gtZJede/cC4T72v7St7mZeBwHuYx85
uUdFxSMa4H71tcb1SPIUA+B+9RelO9XcFzBBqVtky1WuMcD9E74pUGaCuzId
zz7MngAHzX1bH51nEF5BXVez1S23E2FeYfllYRf5cwyEeYXRFY4HMtSZCPMK
2regve88Julvb5ltE5czfJXkybhl/2puM40AuL99bfzQOZPjYQD3te/74yzy
LPoOwH3s3UkLerJ/MIDcnV3D9MkRsFs4vXkLdf3Cz0+M1OruLmUzCE/gsDaP
Ht7NQLCw9KXrQUGoI6Tv0a/HRDtdXzyotRWCIE3NUiSZQfrdeX6PuO3e8hjg
fvfngo8XzOsOB5g3EHgi1FBTl4Vwf7u23Jlnv8oA0JH/LZCb9hdErLdLPC/A
BN6v6aYB70fBdq+oyR5qvRTG+3QgJV0AAtstlb+XMhHmBc66eGTlyjFJv/v7
2gB3e+EIgPvd33OvtO1oCwO4z/30MddZPDWeoD8xQdUlfwTENo7/ytNigpi0
ohADNAas9MWKdnAwCQ/wbM/Fj00/GGh3RHCRmbYg7Kuw9Iyl5hvMA4zKlNRe
3h4McN979dRIpuOiCID73a2D1indOWQPHrVvjXykOQL6/y5IK1hGrd/X7r1g
v2kM3GHwKSYsZgKX3XIN4/0C8DDI1/HewETN9TIl7+dT4/lnyvWanRHAzG4S
7dWnjse1/vQS6vPC+f6owKKCAU4mUu3kTYtxF4RGF+wkrqxjkj747SIPftqE
hgLcB/9TV4j7V1I44QFiWm/tFjmZjXD/++xPmmG2s5eDE00+s2QSRsHOy8xE
NrUfVxjyu/QoUgC6zTdkSC9iIpzv71RbfKByOZP0wz8YEFt0KDscWKw12/o2
dARcad2/s1KDCep8XLfqLBOE99MWht2jjt+PTd1S51XEYNeYe23amgiA++F7
r55RzB+yBhwXBl82iY4Au23iNsNyTNC3b0RpUH4MCO66GBuwlAkmAbc1o5Ua
D7enUkO0mWj9vJWzmwXEYOTsdnclan/5cphWHyk3ChQ5t5uxqOOVU9Gt7msv
CFmD6U9Xb2SS/vjmrO9NZndCAO6Lj1MzeEObswOkhG16zNM+CnaojRVprGaS
/H1mvX7tav0IcFdiTFS1cQR8Uun71UbNj5/Tn+sdNxGETaJZF99T1zfZ+pK4
DRvEoCfK6mmeEwF6bHT3icwShEH8h/o8qPPnVrKAf7KMGMyXTW/q3xoBOmvM
E4RsRsGFZNlzzeuZIOnv0uXZvoKwdBNvY40GE/H+XqWp0zAfhrWv/tJwLYzk
5x93a8SopGWT/Pzk1eU0ufBKPdwnrxa5e9WbyCAw8367xfTz5bnLd1xf/qUF
4L5435xD2sN9Hf96Pojz8Tckbqv7KTIAzsd3549l7hxmAJyPFxm063tOHQ+c
j59t6Hsi4zUD4Hy8XZ1K2UXYBXA+Xqlng/mNpA6A8/HwOX/Kb6lWkm8/5uB9
bm/WT3RrOv8jcmnpuTNNjQjn251/PXdK29uOcL5dLfRD1h3xToTz7Qbnl7bJ
SjEQzrdfLhXZxBRlIpxvD1EE8Z9XMxHOt/voObfpnGAgnG83uuQr7/Sr81/P
9/Dz7Vvi2/IfeL5HuM/ed0mVf8HZDITz78/rH8r2Hr5A8u8VzOAUS/5wgPPv
HFLnlvy1CAc4//7hzjrVtUqPAM6/b+dvsbKSvwdwXt3zc6u95PXnCPfXOyb2
rhbidwa4vz70Sy1NeyQR4D76C4dXalf00gHOpyu3O/En+nQB3Ecf+keVXzuK
AXAf/S31jSkq1HjHffTsPdmXLsxnApxnl7yzRuSWPAPgPPvUvbsBmdKdYObz
R5w3/6U+sWFrRCvCefP4ganBM2UdJD/xNaVr7aO1XQjnzY385+yrymAgkjfP
L4uTpM4nnDe357iY30nHz9v/9zwM9+NHMy/IPDyV96/nUzh/7ui6yNNwxQOA
8+ejcxVd/A0iAO7HL0MXZ8UbhgLcjy8R985h3sZAgPPppVJ1Kd0ZLxDux2cv
kzrzq3gfwP34N4VvPxnMiwI4LyDk03Rinwm1np7uu49dHuNYIMUEhteNzGJG
R4FJlwB/rwoTNI7LC4KJcVDK4XbGxZVB8ucT1yoPXUjvRDh//kg+scb6NAPh
/Ln8Z6GtO9YwEc6fKywU3tIuwiR9+mH3c/3fHHIHuE9fV7lYWf1i2L/ul+F+
/PAPqt2/S6n14K8Nk65DI6Bbs92Si7p+Wp5fGrp7aAzw7S+MS6HWBzgPHicz
UBvEYKC4K8Zh6nsFoabRlwtXARMJttfaJlsLwd87rKbknjJI3768p3Cq4MAj
gPv2mVZzb9r1hwOcFw8+eyprV3EWwn36pTsu/7nzbT0Qu1UvuiXxLzjmfDbr
KB8TTBX55b/IHwVui6ruvKXml/H3ij9PpAhAhY5P5+crMhHOex9YP29HpAKT
9O0PdW896TERDnDf/mMur9rHv8MA7tffO+e0s4uoJ/jK57+W9wW1P3wYyz+f
Wh9I5pydY5s7Bjjo7HVxXEyS57byiKg+VcpAWfuFkvg0BOHkq7u9mdT8hvPc
f3L+fORsDQK4f/+QfJgPbUkEwH37249xLT99wg6cM16bsGLlCBgyCQBW1Px2
T3eyxXf9GEBTxVfWyDNBjVDom1y2ABxaUxIRr8NEOYzmkBIRan97p+BI+K4I
sOIr42PX+lEQxI8EOqnPa+bzyAex1/0OuwrC01fvXvNYzyT9/IdsFUfnHAwF
uJ8/yHnHor0Z4STPXZzh6Hp3bzbCffwvV12Lv80pBxo61c/rRowCU874+EDq
+Hg95zm8K1QAjivsvz8uw0Q4z9QkVSgkqMIkff2zoreZaYaEA63Qdbt2BoyA
gkPRShPU+m6jYZ/KH3lBuDiP3m5FHb9ks2ddbkpisG9MPKN0bQTAff3ZCSkq
f7cfA3VVTegc/wgIQa48p6j1k51V3GOJBWNAQeC2ci+1vjo65m4Q3ygAld57
9DtT+29h2b4KOp8YvPB45GIRdbwCDwe2rZYaBVFrH/+qoo6XlL+NmLGtIJTz
658cotYHuM/fz95Fp3NDCMD9/Z9Wmqya+rwVKMT/mqVcPwokPx6x06D2Vzg/
7c6/kydpfQSwuUyXLqgcAQ/ue3fbU/Ohsr2y3KLNgnCXJ8dnagZCA11+Tvrr
qfXi9fIIZSFqfSeXo/11SgDW8K1Qr9VlIovs75bPpMVg3f64TbXbI0DBRpAa
fXgU9FRoaqyi3i9vVhTvOW9BeMOsTVRqLRPlmuszZevmw5MGDSm5W8JI/ll0
bZ5eYng2wv3+ge83uOss4AFfhr1Mb/iOgsv5fIUvtZlgKfcry6Od82HVaYeu
nfvCAdfrVra9tCAUaEq8VAf/c39f+9btpWIwsOkrY6NuBHi91s1pYDa1PjU8
p7yAWp8aLTnZt4dnFOiYLVO6Rb2/ptn7ql9bCsJV19+eOUCtd7APoNWtNyxk
vQHJJx8OudZeIBcBpPTzlne8HwFisz+17qPeT1+LTHvQBkEo+mPkhyd1vMQe
00Y3DQvAVRoLDltSnw/v9/1jr8XF4J3xXwe+7ogAF2eJvXq/dRScMND8HEf9
fuwHsAxNEMncthqUfE9WMGRT6+FlXpWD38OBW+mknYeyIPR8PjxFo17fmstO
q0ZIDFpv2Sm/mVo/NgW9qRRQGgXwwrJdw9Tr4bzV7bC4xmbjCJCRKSwYQR8B
71RptWbUes12YJ1l8nZqPeH5rv8EdbzuPim6uI9XEF5dxQElqetherhxQexC
6vPcXr25yCQCCDrbR7qfGQV+LTYjXtT/x/lfC+OQuudvsxHOz2r2h6TdrBgB
OB97Z5TFOJU4SPK05QcLNRn3RwDOyw7WJ3yStOoj+VoB7XdR5m+GAc6vLu03
yi3UqkI4n3rtSMS1P/4jCOd3ae6ba96xhwHOwyYfO+Ear9APzKfzyBvOaN79
xWpCk1P/+TcA1CbNVD3S2xHO5z7tqVyb95oOcD537Gu2VGh/GcD5XJbxV4nE
0BKE87kNK48OrOzqJHncTzuiac4rB5HadL65qfSr+8sP4+Cf3zcGnsxSMN13
b5DknSWqf7Juq7ZNv78RwPVLbMWXjl40ezrvbGiesEJToYjkp20jmu4yWhgo
YTofXSYxwS7PLCT5Zl9z64eV2R0A56PtHLW/WCqPknxv3NiGYxaZEwjniYvO
1RnPfTuOcB7atOl8ocK8AZKfdvd94MK/9APC+WraUJTV+bV9pN8/xWzZTZek
DwD3+TcPqaZo2pcD3N9/bntukNyqOtAxnf/cIepfoZ/TQvr5FynxOi30/kL6
+HM0LMcuSUQh3L9fotqrcbu07F95L5zn7DeWefTzaj3JbxpuS+ftdS8nec1Z
P6wGvFvfkzzwutd7t+wYcif5W67quMjD2qEk31vgt3utU1gSwn4HkaCageU3
Mgiv/8DlnqbI4gawfDpvO0uGxyEqpBHhPGyRouVfJ3c6wv32ql9nu0TFtZM8
7RWDqhOaQ10kL5omqWTfM0gjeWOOprLtIo3XAe67F3pT26qQ9RzETudbm4Wd
D2qf7ST5WGWd4jmN79oRzhdHS/6yhr+DSV7Tfm7K91SrQDA8nRddPqjve1uZ
CXD+VqDG+tIzzS6A88u7XJM3d4aF/yvvODM/NnP9OzOPNXP9ODP/MPN5wMz7
6TPv58zcr8+cn2fmPWeOz5n5z5njdWYedOb4nbnf/L/G88y85czxPTN/OXO8
z8w7zsxDzhz/M/OPM8+Hmfu9mefHzPE9c7/6//d4//86vmfmD2aO75n5xJnj
febz5Znjf+b9yJnzJc4n6x429Xm4NQKQfLJOS6o8/dFbnE9OO199k+9SOclj
j5xa8d3mdxvxM1zdlWKuvaADYT/DIn8p94DbdIT9DE3z6ZevdXf86//jfHLT
6wXr1TubiJ+h6O6Aytn8KuJn0KjiUbI9Wk7y8ZICAkrxn3JJPtlCZU2cb/wr
wD19flZ8cM6JESgA2dPHr9Voidl5oRpgMf387kbcYr7t1+gkn3xIZtnOGwv6
iA8lPb7Zm1dziOSTL3BvRrcSRwD2M9AXbIR8DhMA8we5evKvK1omST5Zmlfs
sDrvJMB+hkG3POXTQWNAdfr8kA7Xy11Prctmfo3zyY7+kWNJpwaIn0H5ioPI
14e/iZ9BIST2WMOKPrKfUO2ND9tRyyZ+Bhez7habTBbxM1xON5DR9GERP8Ok
dFp9egOL+BmeKZmmb7z0Pz/D2p1Nm5RGqK+vjHLYlQnD9ZJxRV2ivUB+G8/4
kv0isKiCR8bMjA2yvivdq60UgY9YrpE37XoA9pWcE6qa3LCpkfgZLMxGA368
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
8XaIfFFJb9+9da19AHkcyeyptw4KdYNjfA90Nznfzs+sGecf5knvT3lCHwIr
+B5JhdcqXLXxC/Y7tOODQ02nxnHeYnv/K1GdnX0433C7Z996oTW9APma/J2X
rl0r+47zEJmvTU9v7enD3qi1or0qwW+C324AVUfr1V/lMbFnMNAuYA89bMC+
wNxkTaefQiu/HqcQd6zPC4pc4cJr/P352Q+Wrxhe1I3z5EoDPOMZf1qgON8D
vP4WQTC5xfzXixDx4/fnGFp+4PsEUULY94xM280anB+nsql8UblAEc4ve+vj
9f2MwgAc5XsJ4G+vsj02GXuFkaJIrzLAwB5HWsArvm9NKvY4PrNSPt9WaMP+
4IV3vXVi2d/8vNNK1m+v9vrzr58k8d0F/D5Zl469TS3tXPuJW0xA3X+HvE3z
3LAVqewE7BG+OWx5eezNZ+wPDh6/1Tvz7hDOX+v3WDabodWOfWbu/dyChuIc
7CtcVP7MNSnuxP6m5dQGobU9WdjfnPHcIPDn21fsC0o764UFozj/8/0e8gMq
0n2/Pf1Z2LtY+MoeLqPxIHU/PnU/MnX+Q73fUZ8nUZ/nU/ef/8/9jLL/n1p/
1P371Hqk7uen1id1vz21Xqn776n1S92PT61n6n58an1T9+dT653qF6j1T/UE
1P5A3R9O7R/U9Rm1v/xf/YNa/9T9w9T9gNT6p+4fpfYH6n5Qav+g+hJq/6Du
v6L2D+r+Imp/oe4voH6fQe0/VB9C7U/U5+HU8Rn5nH8Ssrbtknf963P4f07x
zx9qL+ffb1B7Gv96ofYF/vMu1Fbnf178ev79ALVR/0Xt7RZ6BmMMJm6j/o7a
6HyjdgS/HlAbXR/URl4OtWX4+9FRG/Vv1EbeDrVRPaE2uj+gNqpv1Eb1iNqo
/6A26h//Pf4kbqP+h9pX+feP/x7/779H9YvaDfz7D2qjekBtVP+oje5/qI3q
CbW3sJ8DesPfv0fP5/77/tMpx59BeX8hyvH/tpGn++/n/9tG97//Hn8W5fiz
Kcf/20be8r/H/9tGPvO/x59DOf5cyvH/ttF4gtpovEFtlK+K2jOz9/++Z0bH
bZRHjNoobxW1Ub4qaqN8VtRG90/URvmsqI3uP6iN7r//ff3fNrp/oTbySf99
vQRu/z9T1RZU
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{1364, 4000, 3998}}], 
               PolygonBox[{{1361, 3959, 3960, 590}, {1365, 4001, 4002, 616}}], 
               PolygonBox[{{1366, 4003, 4004, 617, 618}}], 
               PolygonBox[{{3977, 3978, 688, 1189, 1023, 898, 804}}], 
               PolygonBox[{{1360, 3957, 3958, 1101, 1319, 677, 637, 589}}], 
               
               PolygonBox[{{1375, 3954, 3952, 675, 635, 1162, 996, 871, 777, 
                712}}], 
               
               PolygonBox[{{1368, 3965, 3966, 640, 594, 1130, 964, 839, 745, 
                681, 641}}], 
               
               PolygonBox[{{1092, 4005, 4006, 619, 1149, 983, 858, 764, 700, 
                660, 1182, 1016, 1291, 891, 1258}}], 
               
               PolygonBox[{{1372, 3963, 3964, 1049, 1298, 924, 1268, 1102, 
                679, 639, 593, 1129, 963, 838, 744, 680}}], 
               
               PolygonBox[{{743, 3961, 3962, 1127, 961, 836, 742, 678, 638, 
                1164, 998, 873, 779, 714, 592, 1128, 962, 837, 1245, 1079, 
                1310}}], 
               
               PolygonBox[{{923, 3955, 3956, 587, 1125, 959, 834, 740, 676, 
                636, 1163, 997, 872, 778, 713, 588, 1126, 960, 835, 741, 1214,
                 1048, 1297}}], 
               
               PolygonBox[{{1321, 4007, 4008, 1313, 797, 1232, 1066, 941, 732,
                 1212, 1046, 921, 827, 620, 1150, 984, 859, 1252, 1086, 765, 
                1223, 1057, 1301, 932, 1272, 1106}}], 
               
               PolygonBox[{{1286, 3967, 3968, 595, 1131, 965, 840, 746, 682, 
                642, 1165, 999, 874, 780, 715, 1199, 1033, 908, 814, 1238, 
                1072, 947, 1281, 1115, 596, 1132, 966}}], 
               
               PolygonBox[{{1093, 3969, 3970, 841, 1246, 1080, 747, 683, 643, 
                1166, 1000, 875, 781, 716, 1200, 1034, 909, 815, 597, 1133, 
                967, 842, 748, 1216, 1050, 925, 684, 1185, 1019, 1292, 894, 
                1259}}], 
               
               PolygonBox[{{1320, 3975, 3976, 600, 1136, 970, 845, 751, 687, 
                1188, 1022, 897, 803, 647, 1170, 1004, 879, 785, 720, 1204, 
                1038, 913, 819, 601, 1137, 971, 846, 1248, 1082, 752, 1218, 
                1052, 1299, 927, 1269, 1103}}], 
               
               PolygonBox[{{1326, 3973, 3974, 1303, 934, 1274, 1108, 718, 
                1202, 1036, 911, 817, 599, 1135, 969, 844, 750, 686, 1187, 
                1021, 896, 802, 646, 1169, 1003, 878, 784, 1226, 1060, 935, 
                719, 1203, 1037, 912, 1263, 1097, 818, 1240, 1074, 1308, 949, 
                1283, 1117}}], 
               
               PolygonBox[{{1059, 3971, 3972, 800, 1233, 1067, 1306, 942, 
                1277, 1111, 1324, 644, 1167, 1001, 1289, 876, 1253, 1087, 
                1312, 782, 1224, 1058, 1302, 933, 1273, 1107, 1322, 717, 1201,
                 1035, 1293, 910, 1262, 1096, 816, 1239, 1073, 948, 1282, 
                1116, 598, 1134, 968, 843, 1247, 1081, 749, 1217, 1051, 926, 
                685, 1186, 1020, 895, 801, 645, 1168, 1002, 877, 1254, 1088, 
                783, 1225}}], 
               PolygonBox[CompressedData["
1:eJwV0LkyBFEUBuAzm5IJZZQHUCUSeQoZZRZNytgjyk4gtg2GlEAusPMQmBk8
BoHxdfDVuef/b3dXdV9SHZ7ORkSGhCXLZVfEFdf5iE72chH97OvO7T/Oy/TQ
lFUKEVPmqu5NNsaf/ZYD0g+s6d7lRdr2xDN35iFV1vUfuhLBvazozpE5w4a+
IS+T4UF2zIg7s+amvimvkOVRVmOOLV1LNs6E+znzSX7CPNv6T1lCnmdZyb1T
c4Ed/Vf6LAVeZGeMurNo7uq/5ZN08CqrcyH/ta/QSyv9J7JuavYhGs6D3KTv
9r6y84D5D5r0NeI=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{615, 3999, 3998}}], 
               PolygonBox[{{614, 3996, 3997, 1363}, {582, 3946, 3947, 1359}}], 
               PolygonBox[{{776, 3953, 3952, 739, 833, 958, 1124, 586, 711}}], 
               
               PolygonBox[{{581, 3944, 3945, 1367, 631, 671, 735, 829, 954, 
                1120}}], 
               
               PolygonBox[{{1121, 3948, 3949, 1371, 673, 737, 831, 956, 1122, 
                584, 632, 672, 736, 830, 955}}], 
               
               PolygonBox[{{1276, 3994, 3995, 613, 659, 699, 763, 857, 982, 
                1148, 612, 826, 920, 1045, 1211, 731, 1110}}], 
               
               PolygonBox[{{1160, 3950, 3951, 1380, 870, 995, 1161, 634, 674, 
                738, 832, 957, 1123, 585, 710, 775, 869, 994}}], 
               
               PolygonBox[{{3977, 3979, 1006, 1172, 649, 1112, 1278, 943, 
                1068, 1234, 805, 899, 1024, 1190, 689, 753, 847, 972, 1138, 
                602, 721, 786, 880, 1005, 1171, 648}}], 
               
               PolygonBox[{{1071, 3992, 3993, 1305, 1065, 1231, 796, 1091, 
                1257, 890, 1015, 1181, 658, 698, 762, 856, 981, 1147, 611, 
                730, 795, 889, 1014, 1180, 657, 1114, 1280, 946, 1307}}], 
               
               PolygonBox[{{1100, 3988, 3989, 1251, 854, 1288, 979, 1145, 609,
                 728, 793, 887, 1012, 1178, 655, 810, 904, 1029, 1195, 695, 
                759, 853, 978, 1144, 608, 952, 1077, 1243, 825, 1318}}], 
               
               PolygonBox[{{881, 3980, 3981, 1264, 915, 1294, 1040, 1206, 723,
                 788, 882, 1007, 1173, 650, 690, 754, 848, 973, 1139, 603, 
                820, 914, 1039, 1205, 722, 936, 1061, 1227, 787, 1089, 
                1255}}], 
               
               PolygonBox[{{1085, 3990, 3991, 812, 1315, 1095, 1261, 906, 
                1031, 1197, 697, 761, 855, 980, 1146, 610, 729, 794, 888, 
                1013, 1179, 656, 811, 905, 1030, 1196, 696, 931, 1056, 1222, 
                760, 1311}}], 
               PolygonBox[{{1098, 3982, 3983, 1053, 1219, 756, 1083, 1249, 
                850, 975, 1141, 605, 822, 916, 1041, 1207, 724, 789, 883, 
                1008, 1174, 651, 806, 900, 1025, 1191, 691, 755, 849, 974, 
                1140, 604, 950, 1075, 1241, 821, 1316}}], 
               
               PolygonBox[{{1270, 3984, 3985, 1325, 1113, 1279, 944, 1069, 
                1235, 808, 902, 1027, 1193, 693, 929, 1054, 1220, 757, 851, 
                976, 1142, 606, 823, 917, 1042, 1208, 725, 937, 1062, 1228, 
                790, 884, 1009, 1175, 652, 807, 901, 1026, 1192, 692, 1104}}], 
               
               PolygonBox[{{1176, 3986, 3987, 919, 1296, 1044, 1210, 727, 939,
                 1064, 1230, 792, 886, 1011, 1177, 654, 945, 1070, 1236, 809, 
                1094, 1260, 903, 1028, 1194, 694, 1105, 1271, 930, 1055, 1221,
                 758, 1084, 1250, 852, 1287, 977, 1143, 607, 1327, 1118, 1284,
                 951, 1309, 1076, 1242, 824, 1317, 1099, 1265, 918, 1295, 
                1043, 1209, 726, 1323, 1109, 1275, 938, 1304, 1063, 1229, 791,
                 1090, 1256, 885, 
                1010}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1, 367, 261, 472, 178, 449, 344, 483, 116, 428, 323, 
               477, 240, 462, 357, 75, 409, 303, 220, 455, 350, 158, 440, 335,
                252, 51, 391, 285, 202, 140, 434, 329, 246}], 
              
              LineBox[{419, 314, 231, 169, 2, 368, 262, 179, 117, 76, 410, 
               304, 221, 159, 52, 392, 286, 203, 141, 99, 517}], 
              LineBox[{369, 263, 180, 118, 77, 53, 4, 492}], 
              LineBox[{5, 493}], 
              LineBox[{6, 494}], 
              
              LineBox[{7, 370, 264, 181, 119, 78, 54, 393, 287, 204, 142, 100,
                8, 371, 265, 182, 120, 519}], 
              
              LineBox[{79, 55, 394, 288, 205, 143, 101, 9, 372, 266, 183, 121,
                80, 411, 305, 222, 160, 56}], 
              
              LineBox[{289, 206, 144, 102, 10, 373, 267, 184, 122, 81, 412, 
               306, 223, 161, 57, 396, 290, 207, 145, 435, 330, 247, 103, 420,
                315, 523}], 
              
              LineBox[{232, 458, 353, 170, 443, 338, 255, 11, 374, 268, 185, 
               450, 345, 123, 429, 324, 478, 241, 463, 358, 486, 82, 413, 307,
                475, 224, 456, 351, 485, 162, 441, 336, 481, 253, 468, 363, 
               489, 58, 397, 291, 473, 208, 453, 348, 146, 436, 331, 248, 466,
                361, 104, 421, 316, 233, 459, 354, 171, 444, 339, 256, 12, 
               375, 269, 186, 124}], 
              
              LineBox[{325, 242, 83, 414, 308, 225, 163, 59, 398, 292, 209, 
               147, 105, 422, 317, 234, 172, 13, 376, 270, 187, 125, 84, 415, 
               309, 226, 164, 520}], 
              
              LineBox[{60, 399, 293, 210, 148, 106, 14, 377, 271, 188, 126, 
               85, 61, 400, 294, 211, 149, 107, 518}], 
              
              LineBox[{15, 378, 272, 189, 127, 86, 62, 401, 295, 212, 150, 
               108, 16, 379, 273, 522}], 
              LineBox[{190, 128, 87, 63, 17, 380, 274, 191, 129, 88, 514}], 
              LineBox[{64, 18, 495}], 
              LineBox[{19, 496}], 
              LineBox[{20, 21, 497}], 
              LineBox[{22, 498}], 
              LineBox[{23, 499}], 
              LineBox[{24, 25, 500}], 
              LineBox[{26, 501}], 
              LineBox[{27, 502}], 
              LineBox[{28, 29, 503}], 
              LineBox[{30, 504}], 
              LineBox[{31, 505}], 
              LineBox[{32, 33}], 
              LineBox[{34, 507}], 
              LineBox[{35, 508}], 
              LineBox[{36, 381, 275, 192, 130, 89, 65, 512}], 
              
              LineBox[{382, 276, 193, 131, 90, 66, 402, 296, 213, 151, 109, 
               38, 383, 277, 194, 132, 91, 515}], 
              
              LineBox[{403, 297, 214, 152, 110, 39, 384, 278, 195, 133, 92, 
               416, 310, 227, 165, 68, 404, 298, 215, 521}], 
              
              LineBox[{153, 437, 332, 249, 111, 423, 318, 235, 460, 355, 173, 
               445, 340, 257, 40, 385, 279, 196, 451, 346, 134, 431, 326, 479,
                243, 464, 359, 487}], 
              LineBox[CompressedData["
1:eJwV0rkvnnEAB/DHMfoDHF2M6igWTI7EmZBogkHqSodG3P4Dqi0WC20cA4Mz
0XYhMagBrcEg4jaIaNM4aqmF0H6e4ZPv9/t73rx5n1/exKb2l20RQRAMkaVc
yGkKGbaTOdRHWdLLudc7mNVzudYXWdWriIkMgkiZ5KxHxrKhr8ta3utfZDF/
9R35hlf6pMzmp74lG5jRV2Ql5zzZe7KFS4rsEZnCMUf2Zvh94fswZi/LCs54
sHdlM7/ptOdkHqfc2NvyNZ/1b7KaKPZp5bnzXhnHpv6Br3oJd3odU3oOv8K7
opiPdmr4O/Vxupi38/kT3gvJvLXj+a73U0+0ey2RKfR5lsAPfYAGSonwmVSZ
xqPnL+STTJf/ZIZ8J5+xpQ/SSBmfnKVxok/QzYJdwG34fqzpNURzQPjnuSLT
s//w5k8F
               "]]}, Annotation[#, "Charting`Private`Tag$234591#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[{581, 1120, 954, 829, 735, 671, 631, 1367}], 
              LineBox[{582, 1359}], 
              
              LineBox[{1121, 955, 830, 736, 672, 632, 584, 1122, 956, 831, 
               737, 673, 1371}], 
              
              LineBox[{1160, 994, 869, 775, 710, 585, 1123, 957, 832, 738, 
               674, 634, 1161, 995, 870, 1380}], 
              
              LineBox[{776, 711, 586, 1124, 958, 833, 739, 3952, 675, 635, 
               1162, 996, 871, 777, 712, 1375}], 
              
              LineBox[{587, 1125, 959, 834, 740, 676, 636, 1163, 997, 872, 
               778, 713, 588, 1126, 960, 835, 741, 1214, 1048, 1297, 923}], 
              LineBox[{1101, 1319, 677, 637, 589, 1360}], 
              LineBox[{590, 1361}], 
              
              LineBox[{1127, 961, 836, 742, 678, 638, 1164, 998, 873, 779, 
               714, 592, 1128, 962, 837, 1245, 1079, 1310, 743}], 
              
              LineBox[{1049, 1298, 924, 1268, 1102, 679, 639, 593, 1129, 963, 
               838, 744, 680, 1372}], 
              LineBox[{640, 594, 1130, 964, 839, 745, 681, 641, 1368}], 
              
              LineBox[{595, 1131, 965, 840, 746, 682, 642, 1165, 999, 874, 
               780, 715, 1199, 1033, 908, 814, 1238, 1072, 947, 1281, 1115, 
               596, 1132, 966, 1286}], 
              
              LineBox[{841, 1246, 1080, 747, 683, 643, 1166, 1000, 875, 781, 
               716, 1200, 1034, 909, 815, 597, 1133, 967, 842, 748, 1216, 
               1050, 925, 684, 1185, 1019, 1292, 894, 1259, 1093}], 
              
              LineBox[{800, 1233, 1067, 1306, 942, 1277, 1111, 1324, 644, 
               1167, 1001, 1289, 876, 1253, 1087, 1312, 782, 1224, 1058, 1302,
                933, 1273, 1107, 1322, 717, 1201, 1035, 1293, 910, 1262, 1096,
                816, 1239, 1073, 948, 1282, 1116, 598, 1134, 968, 843, 1247, 
               1081, 749, 1217, 1051, 926, 685, 1186, 1020, 895, 801, 645, 
               1168, 1002, 877, 1254, 1088, 783, 1225, 1059}], 
              
              LineBox[{1303, 934, 1274, 1108, 718, 1202, 1036, 911, 817, 599, 
               1135, 969, 844, 750, 686, 1187, 1021, 896, 802, 646, 1169, 
               1003, 878, 784, 1226, 1060, 935, 719, 1203, 1037, 912, 1263, 
               1097, 818, 1240, 1074, 1308, 949, 1283, 1117, 1326}], 
              
              LineBox[{600, 1136, 970, 845, 751, 687, 1188, 1022, 897, 803, 
               647, 1170, 1004, 879, 785, 720, 1204, 1038, 913, 819, 601, 
               1137, 971, 846, 1248, 1082, 752, 1218, 1052, 1299, 927, 1269, 
               1103, 1320}], 
              
              LineBox[{688, 1189, 1023, 898, 804, 3977, 648, 1171, 1005, 880, 
               786, 721, 602, 1138, 972, 847, 753, 689, 1190, 1024, 899, 805, 
               1234, 1068, 943, 1278, 1112, 649, 1172, 1006}], 
              
              LineBox[{881, 1255, 1089, 787, 1227, 1061, 936, 722, 1205, 1039,
                914, 820, 603, 1139, 973, 848, 754, 690, 650, 1173, 1007, 882,
                788, 723, 1206, 1040, 1294, 915, 1264}], 
              
              LineBox[{1098, 1316, 821, 1241, 1075, 950, 604, 1140, 974, 849, 
               755, 691, 1191, 1025, 900, 806, 651, 1174, 1008, 883, 789, 724,
                1207, 1041, 916, 822, 605, 1141, 975, 850, 1249, 1083, 756, 
               1219, 1053}], 
              
              LineBox[{1270, 1104, 692, 1192, 1026, 901, 807, 652, 1175, 1009,
                884, 790, 1228, 1062, 937, 725, 1208, 1042, 917, 823, 606, 
               1142, 976, 851, 757, 1220, 1054, 929, 693, 1193, 1027, 902, 
               808, 1235, 1069, 944, 1279, 1113, 1325}], 
              
              LineBox[{1176, 1010, 885, 1256, 1090, 791, 1229, 1063, 1304, 
               938, 1275, 1109, 1323, 726, 1209, 1043, 1295, 918, 1265, 1099, 
               1317, 824, 1242, 1076, 1309, 951, 1284, 1118, 1327, 607, 1143, 
               977, 1287, 852, 1250, 1084, 758, 1221, 1055, 930, 1271, 1105, 
               694, 1194, 1028, 903, 1260, 1094, 809, 1236, 1070, 945, 654, 
               1177, 1011, 886, 792, 1230, 1064, 939, 727, 1210, 1044, 1296, 
               919}], 
              
              LineBox[{1100, 1318, 825, 1243, 1077, 952, 608, 1144, 978, 853, 
               759, 695, 1195, 1029, 904, 810, 655, 1178, 1012, 887, 793, 728,
                609, 1145, 979, 1288, 854, 1251}], 
              
              LineBox[{1085, 1311, 760, 1222, 1056, 931, 696, 1196, 1030, 905,
                811, 656, 1179, 1013, 888, 794, 729, 610, 1146, 980, 855, 761,
                697, 1197, 1031, 906, 1261, 1095, 1315, 812}], 
              
              LineBox[{1071, 1307, 946, 1280, 1114, 657, 1180, 1014, 889, 795,
                730, 611, 1147, 981, 856, 762, 698, 658, 1181, 1015, 890, 
               1257, 1091, 796, 1231, 1065, 1305}], 
              
              LineBox[{1276, 1110, 731, 1211, 1045, 920, 826, 612, 1148, 982, 
               857, 763, 699, 659, 613}], 
              LineBox[{614, 1363}], 
              LineBox[{615, 3998, 1364}], 
              LineBox[{616, 1365}], 
              LineBox[{617, 618, 1366}], 
              
              LineBox[{619, 1149, 983, 858, 764, 700, 660, 1182, 1016, 1291, 
               891, 1258, 1092}], 
              
              LineBox[{1313, 797, 1232, 1066, 941, 732, 1212, 1046, 921, 827, 
               620, 1150, 984, 859, 1252, 1086, 765, 1223, 1057, 1301, 932, 
               1272, 1106, 1321}], 
              LineBox[CompressedData["
1:eJwV0DkyRFEUBuDTk7IDGWUBqjoSWYWM0t3PI9VtjigzgdjUxhXIBWYWge7G
Mgi07wVfnXv//9wXvMG0MVrPRUTCdTGil/1CxBAH+YhL9x/nFfppy5JSxIy5
pnuTTfDnfsshddZ17/IKXffUmzvziAYb+g9dleBeVrFzbM6yqW/Ja+R4kJ0w
ZmfO3NK35Ql5HmVN5tnWdWSTTNkvmE/yUxbY0X/KUoo8y6r2zsxFdvVf2VtK
vMjOGbezZO7pv+XT9PAqu+BK/uu+ygCd7J/I+mi6j9ByHuYm+7bv1ZzL5rLd
f2KMNG0=
               "]]}, Annotation[#, "Charting`Private`Tag$234591#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1429, 1876, 1745, 2006, 1642, 1978, 1848, 2021, 1564, 
               1953, 1823, 2014, 1720, 1994, 1864, 1510, 1931, 1800, 1697, 
               1986, 1856, 1619, 1967, 1837, 1734, 1479, 1907, 1776, 1673, 
               1595, 1960, 1830, 1727}], 
              
              LineBox[{1943, 1813, 1710, 1632, 1430, 1877, 1746, 1643, 1565, 
               1511, 1932, 1801, 1698, 1620, 1480, 1908, 1777, 1674, 1596, 
               1541, 2085}], 
              LineBox[{1878, 1747, 1644, 1566, 1512, 1481, 1432, 2063}], 
              LineBox[{1433, 2064}], 
              LineBox[{1434, 2065}], 
              LineBox[{1435, 1436, 2066}], 
              
              LineBox[{1438, 1880, 1749, 1646, 1568, 1514, 1483, 1909, 1778, 
               1675, 1597, 1542, 2086}], 
              
              LineBox[{1881, 1750, 1647, 1569, 1515, 1484, 1910, 1779, 1676, 
               1598, 1543, 1440, 1882, 1751, 1648, 1570}], 
              
              LineBox[{1933, 1802, 1699, 1621, 1485, 1911, 1780, 1677, 1599, 
               1544, 1944, 1814, 1711, 1633, 1441, 1883, 1752, 1649, 1571, 
               1954, 1824, 1721, 1517, 1934, 1803, 1700, 1987, 1857, 1622, 
               1968, 1838, 1735, 2090}], 
              
              LineBox[{1486, 1912, 1781, 1678, 1983, 1853, 1600, 1961, 1831, 
               2016, 1728, 1997, 1867, 2027, 1545, 1945, 1815, 2012, 1712, 
               1991, 1861, 2025, 1634, 1972, 1842, 2020, 1739, 2002, 1872, 
               2031, 1442, 1884, 1753, 2007, 1650, 1979, 1849, 1572, 1955, 
               1825, 1722, 1995, 1865, 1518, 1935, 1804, 1701, 1988, 1858, 
               1623, 1969, 1839, 1736, 1487, 1913, 1782, 1679, 1601, 1962, 
               1832, 1729, 1546, 1946, 1816}], 
              
              LineBox[{1713, 1635, 1443, 1885, 1754, 1651, 1573, 1519, 1936, 
               1805, 1702, 1624, 1488, 1914, 1783, 1680, 1602, 1547, 1444, 
               1886, 1755, 2091}], 
              
              LineBox[{1652, 1574, 1520, 1489, 1915, 1784, 1681, 1603, 1548, 
               1445, 1887, 1756, 1653, 1575, 1521, 2081}], 
              
              LineBox[{1916, 1785, 1682, 1604, 1549, 1446, 1888, 1757, 1654, 
               1576, 1522, 1491, 2078}], 
              LineBox[{1447, 2067}], 
              LineBox[{1448, 1449, 2068}], 
              LineBox[{1450, 2069}], 
              LineBox[{1451, 1889, 1758, 1655, 1577, 1523, 1492, 2079}], 
              
              LineBox[{1890, 1759, 1656, 1578, 1524, 1493, 1917, 1786, 1683, 
               1605, 1550, 1453, 1891, 1760, 1657, 1579, 2087}], 
              
              LineBox[{1525, 1494, 1918, 1787, 1684, 1606, 1551, 1454, 1892, 
               1761, 1658, 1580, 1526, 1937, 1806, 1703, 1625, 1495}], 
              
              LineBox[{1919, 1788, 1685, 1607, 1552, 1455, 1893, 1762, 1659, 
               1581, 1527, 1938, 1807, 1704, 1626, 1496, 1920, 1789, 1686, 
               1608, 1963, 1833, 1730, 1553, 1947, 1817, 1714}], 
              
              LineBox[{1973, 1843, 1740, 1456, 1894, 1763, 1660, 1980, 1850, 
               1582, 1956, 1826, 1723, 1528, 1939, 1808, 1705, 1989, 1859, 
               1627, 1970, 1840, 2018, 1737, 2000, 1870, 2029, 1497, 1921, 
               1790, 2009, 1687, 1984, 1854, 2023, 1609, 1964, 1834, 2017, 
               1731, 1998, 1868, 2028, 1554, 1948, 1818, 2013, 1715, 1992, 
               1862, 1637, 1974, 1844, 1741, 2003, 1873, 1457, 1895, 1764, 
               1661, 1981}], 
              
              LineBox[{1851, 1583, 1957, 1827, 1724, 1529, 1940, 1809, 1706, 
               1628, 1498, 1922, 1791, 1688, 1610, 1555, 1949, 1819, 1716, 
               1638, 1458, 1896, 1765, 1662, 1584, 1530, 2082}], 
              
              LineBox[{1923, 1792, 1689, 1611, 1556, 1459, 1897, 1766, 1663, 
               1585, 1531, 1500, 2080}], 
              LineBox[{1462, 2071}], 
              LineBox[{1463, 2072}], 
              LineBox[{1464, 2073}], 
              
              LineBox[{1899, 1768, 1665, 1587, 1533, 1502, 1924, 1793, 1690, 
               1612, 1557, 1466, 1900, 1769, 1666, 1588, 1534, 2083}], 
              
              LineBox[{1925, 1794, 1691, 1613, 1558, 1467, 1901, 1770, 1667, 
               1589, 1535, 1941, 1810, 1707, 1629, 1504, 1926, 1795, 1692, 
               2089}], 
              
              LineBox[{1614, 1965, 1835, 1732, 1559, 1950, 1820, 1717, 1993, 
               1863, 1639, 1975, 1845, 1742, 2004, 1874, 1468, 1902, 1771, 
               2008, 1668, 1982, 1852, 2022, 1590, 1958, 1828, 2015, 1725, 
               1996, 1866, 2026}], 
              LineBox[CompressedData["
1:eJwVzz0vg1EYBuBTtLUz0KpEQmKwWBSLxdqgdhITiSj+Ay0/wEa7WbBIfAxK
0Q4WDBYmSmLw9RNc73Dlvp/nnPM27Vso5FdiIYRlOpIhvHCQCKEhJ/lkznws
h2lyZ36UU/zwGg+hKNt4Ztd5TU5Ed/QjOURdv5c5uvSyzHCiL3Kmj0R3290z
X/huwfylb5Bl3zxAVQ/s6J0c6vO8eVMyx9kzT9NN1X7V7lvfZJRBvxOTTWdb
zhKUzTOkuLRfi/6jXmSMFvq9e3d2RUqvyWvS+o3skbcyI+ty3Td+vSsxTisf
9tv2SSrmPGkq5l5O9SXO9SwP+pOc5Y+G9/+L0To3
               "]], 
              LineBox[{1898, 1767, 1664, 1586, 1532, 1501, 1461}], 
              LineBox[{1879, 1748, 1645, 1567, 1513, 1482}]}, 
             Annotation[#, "Charting`Private`Tag$234591#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{2143, 2773, 2580, 2425, 2309, 2233, 2193, 2813, 2620, 
               2465, 2349, 3054}], 
              
              LineBox[{2272, 2144, 2774, 2581, 2426, 2310, 2234, 2194, 2814, 
               2621, 2466, 2350, 2273, 3045}], 
              
              LineBox[{2775, 2582, 2427, 2311, 2235, 2850, 2657, 2502, 2386, 
               2195, 2815, 2622, 2467, 2351, 2274, 2872, 2680, 2525, 2409, 
               2146, 2776, 2583, 2428, 2312, 2888, 2696, 2541, 2236, 2851, 
               2658, 3062}], 
              
              LineBox[{2503, 2387, 2910, 2718, 2563, 2196, 2816, 2623, 2468, 
               2352, 2900, 2708, 2553, 2275, 2873, 2681, 2526, 2944, 2752, 
               2410, 2919, 2727, 2983, 2572, 2959, 2767, 2147, 2777, 2584, 
               2965, 2429, 2927, 2735, 2987, 2313, 2889, 2697, 2975, 2542, 
               2949, 2757, 2996, 2237, 2852, 2659, 2970, 2504, 2938, 2746, 
               2992, 2388, 2911, 2719, 2980, 2564, 2955, 2763, 2197, 2817, 
               2624, 2469, 2934, 2742, 2353}], 
              
              LineBox[{2901, 2709, 2554, 2276, 2874, 2682, 2527, 2411, 2148, 
               2778, 2585, 2430, 2314, 2238, 2853, 2660, 2505, 2389, 2198, 
               2818, 2625, 2470, 2354, 2277, 3046}], 
              
              LineBox[{2149, 2779, 2586, 2431, 2315, 2239, 2199, 2150, 2780, 
               2587, 2432, 2316, 3051}], 
              LineBox[{2240, 2200, 2151, 3034}], 
              LineBox[{2152, 3035}], 
              LineBox[{2153, 2154, 3036}], 
              LineBox[{2155, 3037}], 
              LineBox[{2156, 3038}], 
              LineBox[{2157, 2158, 3039}], 
              
              LineBox[{2819, 2626, 2471, 2355, 2278, 2160, 2782, 2589, 2434, 
               2318, 2242, 2854, 2661, 2506, 2390, 2202, 2820, 2627, 2472, 
               2356, 3055}], 
              
              LineBox[{2279, 2875, 2683, 2528, 2412, 2161, 2783, 2590, 2435, 
               2319, 2890, 2698, 2543, 2243, 2855, 2662, 2507, 2391, 2912, 
               2720, 2565, 2203, 2821, 2628, 2473, 2357, 2902, 2710, 2555, 
               2280, 2876, 2684, 2529, 2945, 2753, 2413, 2920, 2728, 2984, 
               2573, 2960, 2768, 3002}], 
              
              LineBox[{2162, 2784, 2591, 2966, 2436, 2928, 2736, 2988, 2320, 
               2891, 2699, 2976, 2544, 2950, 2758, 2997, 2244, 2856, 2663, 
               2971, 2508, 2939, 2747, 2392, 2913, 2721, 2566, 2204, 2822, 
               2629, 2474, 2358, 2903, 2711, 2556, 2281, 2877, 2685, 2530, 
               2414, 2163, 2785, 2592, 2437, 2321, 2892, 2700, 2545, 3061}], 
              
              LineBox[{2245, 2857, 2664, 2509, 2393, 2205, 2823, 2630, 2475, 
               2359, 2282, 2164, 2786, 2593, 2438, 2322, 2246, 2206, 3041}], 
              LineBox[{2165, 3040}], 
              
              LineBox[{2787, 2594, 2439, 2323, 2247, 2207, 2824, 2631, 2476, 
               2360, 2283, 2167, 2788, 2595, 2440, 2324, 3052}], 
              
              LineBox[{2248, 2208, 2825, 2632, 2477, 2361, 2284, 2168, 2789, 
               2596, 2441, 2325, 2249, 2209}], 
              
              LineBox[{2826, 2633, 2478, 2362, 2285, 2169, 2790, 2597, 2442, 
               2326, 2250, 2858, 2665, 2510, 2394, 2210, 2827, 2634, 2479, 
               2363, 2286, 3047}], 
              
              LineBox[{2170, 2791, 2598, 2443, 2327, 2251, 2859, 2666, 2511, 
               2395, 2211, 2828, 2635, 2480, 2364, 2904, 2712, 2557, 2287, 
               2878, 2686, 2531, 2415, 2921, 2729, 2574, 2171, 2792, 2599, 
               2444, 2929}], 
              
              LineBox[{2737, 2328, 2893, 2701, 2546, 2252, 2860, 2667, 2512, 
               2940, 2748, 2396, 2914, 2722, 2567, 2956, 2764, 2212, 2829, 
               2636, 2967, 2481, 2935, 2743, 2989, 2365, 2905, 2713, 2977, 
               2558, 2952, 2760, 2999, 2288, 2879, 2687, 2972, 2532, 2946, 
               2754, 2993, 2416, 2922, 2730, 2985, 2575, 2961, 2769, 2172, 
               2793, 2600, 2445, 2930, 2738, 2329, 2894, 2702, 2547, 2253, 
               2861, 2668, 2513, 2941, 2749, 2397}], 
              
              LineBox[{2723, 2568, 2213, 2830, 2637, 2482, 2366, 2289, 2173, 
               2794, 2601, 2446, 2330, 2254, 2214, 2831, 2638, 2483, 2367, 
               3056}], 
              
              LineBox[{2290, 2174, 2795, 2602, 2447, 2331, 2255, 2862, 2669, 
               2514, 2398, 2215, 2832, 2639, 2484, 2368, 2291, 2880, 2688, 
               2533, 2417, 2175}], 
              
              LineBox[{2603, 2448, 2332, 2895, 2703, 2548, 2256, 2863, 2670, 
               2515, 2942, 2750, 2399, 2916, 2724, 2981, 2569, 2957, 2765, 
               2216, 2833, 2640, 2968, 2485, 2936, 2744, 2990, 2369, 2906, 
               2714, 2978, 2559, 2953, 2761, 3000, 2292, 2881, 2689, 2973, 
               2534, 2947, 2755, 2994, 2418, 2923, 2731, 2986, 2576, 2962, 
               2770, 2176, 2797, 2604, 2449, 2931, 2739, 2333, 2896, 2704, 
               2549, 2257, 2864, 2671, 2516, 3060}], 
              
              LineBox[{2400, 2917, 2725, 2570, 2217, 2834, 2641, 2486, 2370, 
               2907, 2715, 2560, 2293, 2882, 2690, 2535, 2419, 2177, 2798, 
               2605, 2450, 2334, 2258, 2865, 2672, 2517, 2401, 2218, 2835, 
               2642, 2487, 2371, 3057}], 
              
              LineBox[{2294, 2178, 2799, 2606, 2451, 2335, 2259, 2866, 2673, 
               2518, 2402, 2219, 2836, 2643, 2488, 2372, 2295, 3048}], 
              
              LineBox[{2800, 2607, 2452, 2336, 2260, 2220, 2837, 2644, 2489, 
               2373, 2296, 2180, 2801, 2608, 2453, 2337, 2261, 3043}], 
              
              LineBox[{2838, 2645, 2490, 2374, 2297, 2181, 2802, 2609, 2454, 
               2338, 2262, 2222, 2839, 2646, 2491, 3059}], 
              
              LineBox[{2375, 2298, 2182, 2803, 2610, 2455, 2339, 2897, 2705, 
               2550, 2951, 2759, 2998}], 
              LineBox[CompressedData["
1:eJwV00lQz2EAxvG3OEgnXOw0Y+fWZjnad3IQ2sZ+IDMqcXKQLevIwVKYMdOJ
QoXGUsjFwQXTiouDwsVEUZbPe/jO8zzf9/3N7/efppSt+7IKE0II77B/eAit
SSFsQ+2wEEYnh7CRe2wvwwDXzR2XvXwqLvFT0MrdwRjn2fwTbjkGuRP4waXh
MjcV39xr4+9irL7J2VN+Bf5wJ/GTS8cVbhrauU/u3pPj5GZnTfxK/OXK0cdl
4Co3HR1cqrtFXJu9HXXceG4L12yvwj+uhzsl+/lMVPIz0MmlOSvm2u0dqOcm
cDncM3s1AhZyR7jPejFOu/fLnosq+7vzmbKLT9dL+A57Jxq4iVwu99xegxy7
0k6I2IvsMr1bL8Ee+5Y9Amc8/1vOw7X4fmf1+iw9S7+g9+nv3cuwD9id9mG9
Sd8Vv0Ov1qtlsjwrX8v7npmk58W/oXzh7iHZaNfKtXaurLJvykRZLl/Jxrid
L5ZH47fJHrtMtth18VvsvfK2PRIV+pv4fu8dkPNxPf5mvkGfrW/QK/R+/YN7
mXap3WXvxgNuMpfPtdjrMARLuGPcF70U59wbtBfghj0HH7mHSHG3gH/JrcdQ
LI3/A9xX/SAK7Rp7FC7qb+Ujed7z/wHXono0
               "]], 
              LineBox[{2781, 2588, 2433, 2317, 2241, 3042}]}, 
             Annotation[#, "Charting`Private`Tag$234591#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{3118, 3643, 3491, 3369, 3274, 3206, 3168, 3681, 3529, 
               3407, 3312, 3877}], 
              
              LineBox[{3243, 3119, 3644, 3492, 3370, 3275, 3207, 3169, 3682, 
               3530, 3408, 3313, 3244, 3870}], 
              
              LineBox[{3645, 3493, 3371, 3276, 3208, 3712, 3560, 3438, 3343, 
               3170, 3683, 3531, 3409, 3314, 3245, 3121, 3646, 3494, 3372, 
               3277, 3209, 3713, 3561, 3886}], 
              
              LineBox[{3439, 3344, 3171, 3684, 3532, 3410, 3315, 3745, 3594, 
               3472, 3246, 3727, 3576, 3454, 3359, 3122, 3647, 3495, 3373, 
               3278, 3737, 3586, 3464, 3210, 3714, 3562, 3440, 3771, 3620, 
               3345, 3753, 3602, 3480, 3786, 3635, 3172, 3685, 3533, 3795, 
               3411, 3767, 3616, 3812}], 
              
              LineBox[{3746, 3595, 3804, 3473, 3782, 3631, 3821, 3247, 3728, 
               3577, 3799, 3455, 3775, 3624, 3815, 3360, 3759, 3608, 3807, 
               3486, 3789, 3638, 3824, 3123, 3648, 3496, 3374, 3764, 3613, 
               3279, 3738, 3587, 3465, 3211, 3715, 3563, 3441, 3346, 3754, 
               3603, 3481, 3173, 3686, 3534, 3412, 3317, 3248, 3729, 3578, 
               3456, 3361, 3881}], 
              
              LineBox[{3124, 3649, 3497, 3375, 3280, 3212, 3174, 3687, 3535, 
               3413, 3318, 3249, 3125, 3650, 3498, 3376, 3281, 3874}], 
              LineBox[{3213, 3175, 3126, 3651, 3499, 3377, 3282, 3214, 3176}], 
              LineBox[{3127, 3857}], 
              LineBox[{3128, 3129, 3652, 3500, 3378, 3283}], 
              LineBox[{3215, 3177, 3130, 3653, 3501, 3379, 3284, 3216, 3867}], 
              LineBox[{3178, 3131, 3654, 3502, 3380, 3285, 3217, 3179, 3865}], 
              LineBox[{3132, 3655, 3503, 3381, 3286, 3218, 3180, 3133, 3858}], 
              LineBox[{3134, 3859}], 
              
              LineBox[{3135, 3656, 3504, 3382, 3287, 3219, 3181, 3688, 3536, 
               3414, 3319, 3878}], 
              
              LineBox[{3250, 3136, 3657, 3505, 3383, 3288, 3220, 3716, 3564, 
               3442, 3347, 3182, 3689, 3537, 3415, 3320, 3747, 3596, 3474, 
               3251, 3730, 3579, 3457, 3362, 3760, 3609, 3487, 3790, 3639, 
               3887}], 
              
              LineBox[{3137, 3658, 3506, 3384, 3289, 3739, 3588, 3466, 3221, 
               3717, 3565, 3443, 3772, 3621, 3348, 3755, 3604, 3482, 3787, 
               3636, 3183, 3690, 3538, 3796, 3416, 3768, 3617, 3813, 3321, 
               3748, 3597, 3805, 3475, 3783, 3632, 3822, 3252, 3731, 3580, 
               3800, 3458, 3776, 3625, 3816, 3363, 3761, 3610, 3808, 3488, 
               3791, 3640, 3138, 3659, 3507, 3385, 3765, 3614, 3290, 3740, 
               3589, 3467, 3779, 3628, 3818}], 
              
              LineBox[{3222, 3718, 3566, 3444, 3349, 3184, 3691, 3539, 3417, 
               3322, 3253, 3139, 3660, 3508, 3386, 3291, 3223, 3719, 3567, 
               3445, 3350, 3185, 3692, 3540}], 
              
              LineBox[{3418, 3323, 3254, 3140, 3661, 3509, 3387, 3292, 3224, 
               3186, 3866}], 
              LineBox[{3141, 3142, 3860}], 
              LineBox[{3143, 3861}], 
              LineBox[{3144, 3862}], 
              LineBox[{3145, 3146, 3863}], 
              LineBox[{3147, 3864}], 
              
              LineBox[{3148, 3662, 3510, 3388, 3293, 3225, 3187, 3693, 3541, 
               3419, 3324, 3879}], 
              
              LineBox[{3255, 3149, 3663, 3511, 3389, 3294, 3226, 3188, 3694, 
               3542, 3420, 3325, 3256, 3150}], 
              
              LineBox[{3512, 3390, 3295, 3227, 3720, 3568, 3446, 3351, 3189, 
               3695, 3543, 3421, 3326, 3257, 3732, 3581, 3459, 3364, 3151, 
               3665, 3513, 3391, 3296, 3741, 3590, 3468, 3228, 3721, 3569, 
               3447, 3884}], 
              
              LineBox[{3352, 3756, 3605, 3483, 3190, 3696, 3544, 3422, 3769, 
               3618, 3327, 3749, 3598, 3476, 3784, 3633, 3258, 3733, 3582, 
               3801, 3460, 3777, 3626, 3365, 3762, 3611, 3809, 3489, 3792, 
               3641, 3825, 3152, 3666, 3514, 3794, 3392, 3766, 3615, 3811, 
               3297, 3742, 3591, 3803, 3469, 3780, 3629, 3819, 3229, 3722, 
               3570, 3798, 3448, 3773, 3622, 3353, 3757, 3606, 3484, 3191, 
               3697, 3545, 3423, 3328, 3750, 3599}], 
              
              LineBox[{3477, 3259, 3734, 3583, 3461, 3366, 3153, 3667, 3515, 
               3393, 3298, 3230, 3723, 3571, 3449, 3354, 3192, 3698, 3546, 
               3424, 3329, 3260, 3871}], 
              
              LineBox[{3668, 3516, 3394, 3299, 3231, 3193, 3699, 3547, 3425, 
               3330, 3261, 3155, 3669, 3517, 3395, 3300, 3232, 3868}], 
              
              LineBox[{3700, 3548, 3426, 3331, 3262, 3156, 3670, 3518, 3396, 
               3301, 3233, 3195, 3701, 3549, 3427, 3883}], 
              
              LineBox[{3332, 3263, 3157, 3671, 3519, 3397, 3302, 3743, 3592, 
               3470, 3781, 3630, 3820}], 
              LineBox[CompressedData["
1:eJwV0jlPlFEUBuBL4YICamUBGAgkEOhIaPwBKAoWFqIgSwi4gdqhssjm0ih0
YmNiAAUtbOgsCPuS2FjQUICCgohAYlhanls8Oed973x3JjOTWfvw6oOEEMII
u8khNJNKa1IITSkhLNnrOMKYLuNUCNfM687GdEWsy/208Ui/rKvnKOO6Mm7o
x+UL/JGz3TNgPuWxsx/6WxxjIt5PuX5CvsiGPEi659rNJ85+6m9znMn4HlTo
J+Vi/sof6KBZv6K7QyJTukx3lZs3nU3pLrEpf6STFv2q7i4nmI73U6mfli+T
545/uiG6aHX2S3+Pk8zE+6nSz8glbMnDvNLtyS2kkeuu7vg96n/LDSQxG9+T
av2sXMq2/InXuv34e5HOs/id6tbsjSQzJJ/mjX3OeZ898ELOoUpXI8/Zr7Aj
v5cT6ZU/yz32A3sbo/Ycztm/mGd5Z/9mFvLc69vNdd2Ced/8ambFz0WKPGye
if8v+uR5s4Ad5j3/1kxgkZfxP2Hms0GuPGKmxd+Ufvm7eZ7/VHv+EJ1QZ3A=

               "]]}, Annotation[#, "Charting`Private`Tag$234591#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{526, 1329, 525}], 
             LineBox[{527, 1330, 395}], 
             LineBox[{528, 1331, 430}], 
             LineBox[{529, 1332, 98}], 
             LineBox[{531, 1333, 530}], 
             LineBox[{533, 1334, 532}], 
             LineBox[{535, 1335, 534}], 
             LineBox[{537, 1336, 536}], 
             LineBox[{539, 1337, 538}], 
             LineBox[{541, 1338, 540}], 
             LineBox[{543, 1339, 542}], 
             LineBox[{545, 1340, 544}], 
             LineBox[{547, 1341, 546}], 
             LineBox[{549, 1342, 548}], 
             LineBox[{551, 1343, 550}], 
             LineBox[{553, 1344, 552}], 
             LineBox[{555, 1345, 554}], 
             LineBox[{557, 1346, 556}], 
             LineBox[{558, 1347, 506}], 
             LineBox[{560, 1348, 559}], 
             LineBox[{562, 1349, 561}], 
             LineBox[{563, 1350, 37}], 
             LineBox[{565, 1351, 564}], 
             LineBox[{566, 1352, 67}], 
             LineBox[{567, 1353, 3}], 
             LineBox[{569, 1354, 568}], 
             LineBox[{571, 1355, 570}], 
             LineBox[{573, 1356, 572}], 
             LineBox[{575, 1357, 574}], 
             LineBox[{577, 1358, 576}], 
             LineBox[{579, 580, 578}], 
             LineBox[{1388, 2033, 1387}], 
             LineBox[{1389, 2034, 653}], 
             LineBox[{1390, 2035, 1237}], 
             LineBox[{1391, 2036, 1266}], 
             LineBox[{1392, 2037, 940}], 
             LineBox[{1394, 2038, 1393}], 
             LineBox[{1395, 2039, 1267}], 
             LineBox[{1397, 2040, 1396}], 
             LineBox[{1300, 2041, 928}], 
             LineBox[{1398, 2042, 583}], 
             LineBox[{1400, 2043, 1399}], 
             LineBox[{1401, 2044, 591}], 
             LineBox[{1402, 2045, 1362}], 
             LineBox[{1404, 2046, 1403}], 
             LineBox[{1406, 2047, 1405}], 
             LineBox[{1408, 2048, 1407}], 
             LineBox[{1410, 2049, 1409}], 
             LineBox[{1412, 2050, 1411}], 
             LineBox[{1414, 2051, 1413}], 
             LineBox[{1415, 2052, 633}], 
             LineBox[{1417, 2053, 1416}], 
             LineBox[{1419, 2054, 1418}], 
             LineBox[{1377, 2055, 1215}], 
             LineBox[{1421, 2056, 1420}], 
             LineBox[{1381, 2057, 1290}], 
             LineBox[{1422, 2058, 1382}], 
             LineBox[{1423, 2059, 1383}], 
             LineBox[{1384, 2060, 1314}], 
             LineBox[{1424, 2061, 1385}], 
             LineBox[{1425, 2062, 1386}], 
             LineBox[{1427, 1428, 1426}], 
             LineBox[{2094, 3004, 2093}], 
             LineBox[{2096, 3005, 2095}], 
             LineBox[{2098, 3006, 2097}], 
             LineBox[{2099, 3007, 1516}], 
             LineBox[{2100, 3008, 1636}], 
             LineBox[{2101, 3009, 1540}], 
             LineBox[{2103, 3010, 2102}], 
             LineBox[{2105, 3011, 2104}], 
             LineBox[{2107, 3012, 2106}], 
             LineBox[{2109, 3013, 2108}], 
             LineBox[{2111, 3014, 2110}], 
             LineBox[{2112, 3015, 1437}], 
             LineBox[{2114, 3016, 2113}], 
             LineBox[{2116, 3017, 2115}], 
             LineBox[{2118, 3018, 2117}], 
             LineBox[{2119, 3019, 2070}], 
             LineBox[{2121, 3020, 2120}], 
             LineBox[{2123, 3021, 2122}], 
             LineBox[{2124, 3022, 1465}], 
             LineBox[{2126, 3023, 2125}], 
             LineBox[{2127, 3024, 1452}], 
             LineBox[{2128, 3025, 1460}], 
             LineBox[{2129, 3026, 1490}], 
             LineBox[{2130, 3027, 1499}], 
             LineBox[{2131, 3028, 1503}], 
             LineBox[{2132, 3029, 1431}], 
             LineBox[{2133, 3030, 1439}], 
             LineBox[{2135, 3031, 2134}], 
             LineBox[{2137, 3032, 2136}], 
             LineBox[{2139, 3033, 2138}], 
             LineBox[{2141, 2142, 2140}], 
             LineBox[{3064, 3827, 3063}], 
             LineBox[{3065, 3828, 2796}], 
             LineBox[{3067, 3829, 3066}], 
             LineBox[{3069, 3830, 3068}], 
             LineBox[{3070, 3831, 2915}], 
             LineBox[{3072, 3832, 3071}], 
             LineBox[{3074, 3833, 3073}], 
             LineBox[{3076, 3834, 3075}], 
             LineBox[{3078, 3835, 3077}], 
             LineBox[{3080, 3836, 3079}], 
             LineBox[{3082, 3837, 3081}], 
             LineBox[{3084, 3838, 3083}], 
             LineBox[{3085, 3839, 2159}], 
             LineBox[{3086, 3840, 2166}], 
             LineBox[{3088, 3841, 3087}], 
             LineBox[{3089, 3842, 2201}], 
             LineBox[{3090, 3843, 2221}], 
             LineBox[{3091, 3844, 2145}], 
             LineBox[{3093, 3845, 3092}], 
             LineBox[{3095, 3846, 3094}], 
             LineBox[{3096, 3847, 2179}], 
             LineBox[{3098, 3848, 3097}], 
             LineBox[{3100, 3849, 3099}], 
             LineBox[{3102, 3850, 3101}], 
             LineBox[{3104, 3851, 3103}], 
             LineBox[{3106, 3852, 3105}], 
             LineBox[{3108, 3853, 3107}], 
             LineBox[{3110, 3854, 3109}], 
             LineBox[{3112, 3855, 3111}], 
             LineBox[{3114, 3856, 3113}], 
             LineBox[{3116, 3117, 3115}], 
             LineBox[{3889, 3888}], 
             LineBox[{3891, 3890}], 
             LineBox[{3892, 3316}], 
             LineBox[{3894, 3893}], 
             LineBox[{3895, 3664}], 
             LineBox[{3897, 3896}], 
             LineBox[{3899, 3898}], 
             LineBox[{3901, 3900}], 
             LineBox[{3903, 3902}], 
             LineBox[{3905, 3904}], 
             LineBox[{3907, 3906}], 
             LineBox[{3909, 3908}], 
             LineBox[{3911, 3910}], 
             LineBox[{3913, 3912}], 
             LineBox[{3915, 3914}], 
             LineBox[{3917, 3916}], 
             LineBox[{3919, 3918}], 
             LineBox[{3920, 3194}], 
             LineBox[{3921, 3120}], 
             LineBox[{3922, 3154}], 
             LineBox[{3924, 3923}], 
             LineBox[{3925, 3875}], 
             LineBox[{3927, 3926}], 
             LineBox[{3929, 3928}], 
             LineBox[{3931, 3930}], 
             LineBox[{3933, 3932}], 
             LineBox[{3935, 3934}], 
             LineBox[{3937, 3936}], 
             LineBox[{3938, 3885}], 
             LineBox[{3940, 3939}], 
             LineBox[{3942, 3943, 3941}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution with discrete integrator\"", 
           TraditionalForm], PlotRange -> {{0., 6.24999987244898}, {-4., 4.}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.86735298013033*^9, 3.867352984957781*^9}, 
   3.8673531272351046`*^9, {3.8673532437467012`*^9, 3.8673532685517373`*^9}, {
   3.8673534066334085`*^9, 3.867353425221441*^9}, 3.8673536594832354`*^9, 
   3.8673538183512325`*^9, 3.8673538877569513`*^9, {3.867353932911455*^9, 
   3.867353991326702*^9}, 3.867354179894165*^9, 3.867355343974456*^9},
 CellLabel->
  "Out[1486]=",ExpressionUUID->"24d25975-3722-483e-9d12-b4553f36bf82"]
}, Open  ]],

Cell["Compare the 2 Gain matrices", "Text",
 CellChangeTimes->{{3.867353150179739*^9, 3.8673531557459555`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"161ab72d-089e-466b-8b54-c632aa590061"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"K1", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"K2", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Gains from backward integration\>\"", ",", 
        "\"\<Gains from discrete integrator\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<x Gain\>\""}], ",", 
     RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"K1", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"K2", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Gains from backward integration\>\"", ",", 
        "\"\<Gains from discrete integrator\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<xdot Gain\>\""}], ",", 
     RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"K1", "[", "t", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"K2", "[", "t", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Gains from backward integration\>\"", ",", 
        "\"\<Gains from discrete integrator\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<\[Theta] Gain\>\""}], ",", 
     RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"K1", "[", "t", "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"K2", "[", "t", "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Gains from backward integration\>\"", ",", 
        "\"\<Gains from discrete integrator\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<\[Theta]dot Gain\>\""}], ",", 
     RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p1", ",", "p2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p3", ",", "p4"}], "}"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8673542510053368`*^9, 3.8673542802409515`*^9}},
 CellLabel->
  "In[1457]:=",ExpressionUUID->"325fbe3d-702a-4f42-b46e-6cc5c90b3742"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
v9naFElK5fOHV7a2iMi1USJ34uL+s/8DazAhvw==
              "]]}, Annotation[#, "Charting`Private`Tag$222148#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwc13k81M8bAPB130tRqSRXKclRSUWeSVSkkivJV5JylZBKpRKKhJAr5E4S
Irfklvu+j3LvOtbNOtbxG7+/9vV+zXxmnnlm5vN5VtjkgdYdegKBoMtEIGz+
fn5pwixr+lzJRryKkZpdAqXNQhrXhK5Dn8Xw2gL2xp98FyEhC5gWcKNsmuiX
mcLeYQdO6gdaN/250Gsvk9BTcHoZ+mvTklOm3htmrwD9IsZs+i8xfH213RmQ
JZf3psXi2I6v0N4Auuj8ctP3Tj+6v7j3HaTczHm06bSWvtj5s54g1HLLftMr
Vho9M2YfwIn04dmmI+l63i2q+oJNZb7bplVqffdR2/3A5k1TyKZHgs8XzVv4
A6F9589Ne5quGc7RAoDArlm9aRmZtKUZryAwbgof3HQzzdx/eu8nsBGJXNz0
43JBmanUEChcu8mwmY9dH1uqJ86GQZ+6Ef2m8408zCitn4EQ6TO12d9EAjGM
m0WAE7dp2abpac/q5x0jQWY6/8WmW/p098yrRoFTDP3WTcf9kbGaI0YD4TrX
83lsh0SOnNn2aED1Cqlz2Op+JObZyBhAW60SZ7EFHIp0ZixiYfr4yu0Z7Mn/
wqKnj3wBGb6auinswrNPpqdoX6Bh+cLgBLbfQS2lqdI4QKbGQePYptyHPSe9
voJTkkffCPbxBZauCb14QL+r0oaxWboHxCf2foO+tB9MA9gdhb8fUUa+gWaA
XtVf7IS44JLx1ARomLJa6MB29Hy4ZfzZd+hzOvysGfuy3eWbY2cTYbrd6mIt
tpD+waRRziSIXHh/4w/27GlG2khrEkyPuoflb54v0d4LI+HJUGi9sJGBHciW
G0g2+wEyTmuPE7HTn6jbPeRPAc05s9ko7LAx+Z1zjimA2IJNArHf/Lev0K4/
BRoIH7LeYVs3bDWbVU0Fni8Tfc+xr50lEO0SUkGma6H2HjbKnEifIf4ETXHP
+4bYW8Mq6Gfaf8L060Mv5bFpxMxvNoppIOR2oloEe+h1jOZ0ZBoUBv1z5sSu
nfdZfMCUDinS5/zms0og0+xl+JRFOvg8PUvqwo7oslJ9UJcOThXXrAqw3S9d
p0weyQDEncYVjW1beO6jdVAGRJ7819xt3AUGR4+dmqRlwIlADVSBfTZOuP++
cSZEPo68n4YtuZPbfaI0E4IvuV75jL2+PtpK8coC48Wa9XvYZNt2x3uzWRDs
kPJTC7thqFSUopcNaFZk5Dh2VFWE7fjeHJjmmY1eudkF88EZEr2eOXDgw0nF
duxzZtWDTcs5IPSxpDkVm8KwqJvbnAsjVmezjLGhiZM7Gf2CA1Mfeo9h+0WK
VEQl/QJCYl0+M/aJ05dPvXPLg5ETVfoxRl3wnsN0znE+DzQHLCfvY//rfJpo
c+s3XCgon5bDdn38RVBfIR+m9yVM/f6vC9pVfrVfjM8HY/GyshfYEryNPrCt
AMxdKn+dwm74sUovPlUA2YHbc74bdsFWYDPikioE9Lcy+Ca2wn7/U26mhcBa
dlqNB9t7/tvcs8ZCiA+rrDa70QXZ3cca5lmKoDDz7CMidn9xQaK1UhG496qE
pxp0wTHf1jsm34ugg89QYOJ6Fxg5GCv39BdBg8PE+TfYbjfHBfX4i8Emdj1i
J3bXYboOtTfF4P781evj+l3wqkpSXfZmCfis7sxW0uuC+NSs/d8D8Dlzd6Rm
6HZBU7Ayw76aEgh2H8s8gC1mpp/Hf7IUnEDVjKDTBVUMrlIE3jJgNZMRe3wV
788YkeOZWhkE34/bUq7ZBXuaPpHnXpXhe2jftBXbJvJHJJlSBhWpw49CLnfB
9tPdW+v//AEH0fkOs4tdgMTuTl1Y+wMdA5pUT/UusOCYqS4+Wg7GVyhyiWpd
kNfJ/CYzshwa/NeKO853gcnjI4ufn1XAktPBOPLZLvD873fzjtQKMFc+atat
3AUZKhdSfMkVwGObHVxxpgtYeY0s3uhUwkiv47w3dEHyj3fd96Sq4ILuDtHK
U10wtnXMU/1WFfTpWEeEnuwC8cfqSgf8qwBphlaZneiCSEWOqMHlKgjm3Rim
yOHzVOl516CsGlKG3ZTiZbqgTnJix4mlahBSWFQ6J90FHD6XKrcdqgHWYQXj
v4fx+dEjSjb61IB7I1cBVaILHg9+mDlvWAsnHvEytYh1wc9z09H7PtRCw2tB
0ZOiXTD1TVOHobgWIgtJbYHCXWBusyUrX7wORs7J/VIQ7ILYZlvzMIM6MGf4
WuksgM/H8aadz7xwe3HSweJd+H6u+TnKzdWBEIUj9OCOLgg0njvMu78eZFo7
PK5u64LmEu3eaX3s8P3vbHm7gEc83afufT0UfjV6825LF2h48Ckn5tdD8O81
60/cXeA+YT/3bqYeNJ395aK4cP7jLZuObm2A5MzfgR6GZCB07foefagBlHnf
JVveIEMER7XLFtUGWI/JOXTOgAxKp58bOhk1gMoFC6Y918nQY31IbupJA6gz
5x+ZukYG/qb3pJqEBjhHk7zzRpcMvsEaau48jRA7UiHnoEkGl311xI3uRuD0
v7/DRpUMItdeku8vNAKf9rYDS2fJUOguVdhDbIK+B4NMz5XJsDrubZt7pgkc
57XZbIEMj35eaXn0tQku7Pquu+ckGcyg8RPFrhmemTpY2RzC8UdTc7vfN4Pe
Tsm/CQfJEMwo0FMV2wyGfC5/e8XJUFF5V/BbWzMYS2rZnBQjwwGd1eg7p1pA
RyrjcIIAGUbMxRP/0bWCI5Wa68hJBqdqjdraXa3AaPOf3H/seH1SdpN5R1tB
MvZkrzwrGS7M5cmE3mmFRH3GxG4GMnx7oZVxrbIVTpz8F9yzQgJLvxf5DT5t
IHbT93EBmQT0C9G9Bd/a8P7n+KBhEoRcqyD8KG4DZpZ2r18DJKgS4D3rNd8G
XUVvhSL+kuDQ1/hyNf12MPpw4KRAMwkov5obivd2gNa3g8zjeSRwFVyeST3R
AZIHxLxYc0kg8FqQN+pqB2ge+Ja/N4sEGucsdF+5dOD3IPd2hVQSJDWsdyqQ
O8BRc7fGvi8ksB4+OJie3AnZOvKVZe9J0GfUyVpU2QnnHiWCnDsJtDvcpWqH
OsFoQY//sysJTlSTnw7jc8kaVj2i+4IE31WCImbwPfLhFvob95QEgvnnytbw
e0LnTb7k9CMS+MhTx9ju4XNfcLxN1o4EDKlfeLa74ffsf8c7rKxJ8FhC97hI
dBcY/3WXDbckwUgMo6HU7y5waSnlf1Y2DTf2pL8+1dEFu9vkx1+XTENd4O2v
5+a64EZ+d+ubomlAPLy1WsRu8H1/reNNwTSkvSueNTrYDTFvb82+/j0NwY7C
Sk9udsNioOo965xpYKc23HZ51g074zqqjbKm4cUDp3cfAnD/JivlixnTYGLS
2/K1uhvodRLt+VOnQfLCZ6sO+R6od4yYcYmfhiLenZ9O8vyF3U/NIiICp+GY
V0W+6qG/kGdr73vVfxrimB2Grp77C8IPyqM2fKfBc7lN2tLxL0g82Sus6TUN
er3+f0JG/sJlp8XsYpdpGEvgmacV/oPR0GibqQc4PmFX8d4TffCNLvyGneo0
VCj6Sr9U7QN7vSNPupSn4a1+uPwerT4I7thmCmga6H2yz9+w6gM53/zcjVPT
sLJOMWv/3AdZc0/CDGSmYbxHN76evh/Ohwlcf75rGhKWTFKsufvh5pPuhNQd
02DOZ5PNJdAP3YHHqEN80zB00aPiolw/VLfzv1Hmnoae3PyRcrN+GOy909rJ
MA01weIHC2v6weSGfftixxR4pB+TvdnZD3cH5F8xN0/BhYYzJ9eH+8Eh6OkL
7topKGUxVFPc6If0nMRgnqIpyHvsY5EtOwDHM0c5GuKn4JnfZ9trSgNwyhEO
/oyeghPJCU+p6gOQ91mi1TtsCtKHS98dMx0AB++NBXmfKbCja/JtthmAutkf
Txk9pkBmT+8nuxcD8DbU+Vu1yxRMnqBEbfEYAE83Oi+vF1OQpLP8LSVwAEgL
ZYfUn0zBPRvmn1diBiBfxcGLznYKJDx5cyd/DMDLmXXJax3zMPJVqNgrbwAk
hoVvm7fOQ1zJ4SrJygF4zEh36knTPJj2nmqqbh2Ao1GXM1zq50GEdr7LcmAA
AnNKOrxq5iH8iMlYPG0AZrQPiof+mQfDyw9mz7MOwkZE4vXwknnYZem4QuIb
hIhux7MRhfMQGBXIvk9qELh32WiE5M6DN0+1RJTxIDS8mI18lDwPOfJ7Mi5b
D4L5a/sb+77Pw5DRA1h9PggHEj97Nn2dB4UkXp1rQYNgqf/abF8Ujl/N8AVX
3SC4/3znm/RxHs66TNQ/VRgCeqNzNzUc5mFpgfuR1vZhUHkW+XEM5kF0j8nG
hugwaDVd/KqtOA+XVdLfJckOw7u7FYO5J+bhi59+OOulYRgaZ5lykZ0HLemo
8nyXYSiruUcliM5DkvmRXYdmhqEtpHBbItM8mHTrFDDUkKDfdFvFTOUcsIf2
37ftJEHXdR3r03/m4KeBtUAviQR+FEEu9+I5YOhye5pLR4ZUxycau37NQWxH
7lFbeTJUXXv8/GjiHGgEnx/4p0IGPn7VD0/i52D+WouPhhYZZmdYa3Jj50C1
fWJC/D4ZTu/M71D6PAekVqH4f9FkeF9/cvS09xx4ByTpaaSQwe4s49Rzjzk4
rnuKKfc3GV5wOFzOeTsH//jK08Sr8Xt9PpmL6jwHbi3aJgEdZAhXLjly5NUc
yPj38TCQyCAUXV9y//kcdGjfL7CZw99Bnqk/8U/mwIl35f4/wgjwUdpN41IX
4UDzWwEN4ggY81dKuyUvQoMfb3XO7hGwTlQINvu+CA5akU/FD46AEvRGn49f
hMrGnDZ6lREQU3yayhy9CJYNFJ+cpyPwhF1F/nXAImz1eQribiPwJ8Tt2E2/
Rci9wjzp7z8CZHOnZcUPi8BRv/eizY8RsCfqTiy6L0JirRaT+PAIiH/p3rBy
XITJquyn/pqjcC1BeEzz9iLYlrmaPBAfg4XiWncp2UUQHDrHTD06Bo+rqi6p
SC1CNT1bgiMaAx6Dm7cNDi3CPuQ18+76GGwlqXxw27cInbkBTrHvx+A2xVWL
tHMRzqTEhXdOjcG6v195Nv0ibAmt6DqbPQ77u9OOVbdQIT/H42VV6Thc7aId
n22kglWHhsjVxnGQGdXb2FlPhbJtjRZGY+Mw2fZp2qqSCk99OpccBCggVa2c
szOfCv1vxrYnO1EgpezIWsRXKnjHJuYe86LAq8O8HK2xVFAosTb69YkCbVL+
OziiqRBAmPtS8ZMCszuNTj0Lo4Lac9qxwSEKGF2bZ7njSwXqp98dFjMU8Ker
tIr2pkJM9ivH6TUKJJd2jva9p8LaAkPp2vYJkFvXV771lgoJfH/MXEUnoA4F
ica4UOHaUXcODpkJ+HY4VZLkRAVGLfUfvooTsCuN7ZbESyqk2nBq86tNgHce
XemD51SoCeF9mqQ3ASJsqf6ksmUgle6KUDadAO6UrZdrSpaBMCVc1m47AU7F
azvSipZh186D4/deTcB5Q5uFkIJlOHZWZgu91wQY6d4ddfm9DFfuy8sHhUzA
uFIn9f6vZXAtUnUpypgA9nQeS9WsZQgf1/imVzIBGsN5rUcyliF7m079eMME
JGtk3BVOW4YJC5Pd2ykT0PEQMdL/WAa9ra/SLEUmIfnysVeNcctgo/i2c0N6
EtrC/9ytiF0Gj7teG/6nJ6GYp9mjMHoZCnJDLxboT0J0T8nH9PBlOHA7e5D3
wySQnG4ufQ9chpW0Gd7ftEkYakWvut4uA9+/pZNabFMQM5v/iuS6DFKsBGPy
9inQeASjc87LcNuQmLjlyBQ4sW6l5321DDWMh1Tumk+Bcwc1wOQJXo+uqT13
6xT4T+8IVDNfhqjnVmMy16Yhd5AEby8ug0wh25Lbf9Mgk5jxhKS2DIWM8Uy9
t6dhYXm7+IULy9DnNSTkZTMNajowx626DIKR/10bfYe/c3e+PEhVWoaQ0iul
UXnTQLXKNj99ZBkk2CYbl4qnwSfLpzdDZhlyLnn2XqnEbt8/Ii29DB1tFStr
rdOgc2Ei/YDkMmwfPSNrMDUNZR6qFof3L4Mf17HwrSIzcHfovzDXXcsgotX0
3eLADDg2LI1v37kMqYE2OYVSM/BMR4OUsGMZGvYmtVgrzEDa1aP97XzLYGx6
caDszAwIsdYP2fAuw1T86JTAhRlQbTr6iWPrMryccFt7eHkGjJYGNr7yLAPx
yH6Oah3sKMNd57hxvh6X8ovcmIEvlxjejD+kweFfJvuf3poBQmVIjQJ23gbh
WIPZDFC8ixc97WigoRJxRtx6Brg0hFh6bWnQ4376ykv7GdDiv06Txbaq7TZs
fTYDzU+2tL6xoYGHHr+Di9sMbIj4KMg8oMGu0Mw3XV4z8Dw0rPKtNQ2+9ep8
lPWfAX/6DPh3nwYV5r7JvZEzEFD2gfThHg2Yn7MPK+TOQPGJpzLrFjRwjli9
Ok+ZAbGr6cByhwaaMtm2h+ZmQN77U9QDUxoIFj30NVmegQ/HFsY7btMgd2Cs
oYFpFna91VRMNqHB7L7OK0mCs1BTpdx925gGJokZl+5qzoLj5LwX7QYNZE7b
3v+sNwvXX5Ny7LDXayW9Wgxn4c2hPe1jBjQImYqpUbaYhQqxl+S/12nQdMTv
4l7nWbjTuWBdf40GZ3Ks1TrSZsE457N3nzYNiOoSFty5s0CXq0Y0w+7pGnY/
VzgL67Qwt0ktGjisGlak18wChVHFgoCdAhfP+w7Pgp1BFVVakwZCf8RV1XfM
QUnl0e/5GjSY1Bs0fb1nDlyZmuh0sfPI4a7ZonOwPrLDgHKRBvps20v3y8yB
hK73FkFsHw3Gswxqc7Dvdd43LzUaEJr7UN6zObjmkTf2+RwNXEfzo569ngOH
9gm209hshM/0J93nwHLZ6dZfVRpsPXy9NCNgDoZ3y+QJY+9zazz/I2UOVoOv
yuScpUHC5x/x97PmIFPnmKgJtlS6F5tk/hzwRB/T5sQ+0a9WHV89BwZDg/dM
lXG8i+KSZk1zoFWbd20r9hkis9e+zjkQlWVxLjpDA3WF4svRpDmo6YUgUey6
q5E/jCfm4CBJx6UN0UDb/CXP3vk5eNB7INUDu+Oloe3flTkgSF4WRtiGAaea
QunmIfaJerrUy1Xo+85/1IB1HqKVrvjKY98ppn7k556HsGj/CwjbeuqnboDA
PFT57VK9ij3L5JupjesUFuHld9exnwg82LFVAtdZWjrxt7Cd1A51esvPg8r3
Yhtb7I8xMYbuWvPg133v0Ads/tzXv89dx/Pr75IPxA5ruCnIZDwPZafbd33G
jlvb3ff6/jwsfmy2SMDOvuZ/+7n7PNxdVBUuwVa0tis9+WEeZA91jVRgF7lq
7lsKwHXhmpxbHXZVKifZPmYehA8nnu/E7uF4Y2mdj+OJe99MwTYWuV0tWTYP
DVZXL81gD584IzlePQ81oflhC9iTd9YmzDrnYaceR94a9kPH7sv7+3Cd5pfw
nu7VKiz55fwYIs3j97mNDBM2XeEj21vz86DTs7jEgf22TbtpLw3nc9tLAW5s
9gnZo//oFmBENoNvK/YHBh7/MNYFuGv+up8Pm2/X5LwB9wJIRpY778AOlqnR
3bl9AcRt7y/txN5zPiGzXWABNsSuKwtgR//nviNQdAFOZdsaC2Lvt7/roCOx
AFu6w7WEsA+f6tWOkFmA1MNlNGHsYwR96bHjC3DtjNtLUWyFPw3scqcXoJOu
uUsMW9lTjfTq7ALsJAXy7MdW0youqlJbgIrpor3i2Jr8Cp+3aS4Aa+pZ1gPY
1/6lORjrLYDAWc6qTRvFSup8N1wA+qucdw5i37H8Ik01WYBjvHKdm74nI8hx
xmIBVK467JfAfkgNJL1/sACOJhUam36Wx13c9mgBgqX4/+/Xzu6fhR0XQEfq
htim3S/QPb3nvABS9960bo73gfhMJ8t9AUiu729uOrBlVpr+wwIox5sUb8bz
OcSK41LAAgR+Iqxvxh9rPEQKCl0Au5QbWzf9ff9/xQNRC3Cu03JjH/ZPSuvn
w/ELMBmwr2wzHzk/Lz91SMb7s+5yezNfhQ7lOiXpC6BZ9LJrM5/lSkiG+GsB
IsW4JTbzXceYw3G9aAGkmaW1NvejtUqWHFO+AHo9HVqb+9Xjk1A8WbsAzpks
kruwB/VEw0+2LEDd6ay/m/s9JhD21LVrAcIzBs22Yc8M8OnW9y2AyOq7qs3z
shTvJbOLvADrHl+ZeLCZ5F6Rf8wtQIb9GSZ2bE7aYvHKMm5v+FXJjL21yCZc
lUAFv6ff7jJgC10y0e3mpMLys/6Dq/g8i/N2y+znpcLAHynNJWypTm1O251U
+O/cwuX5zft1R7WEeT8V7ONWWsexzx7KD78qSQXCizNGZGz1mePPwo5Qgdl+
S8EAtv6LA7JHgAr34m6zb943+wCOiP/0qYB4Aio27+vzG67P4o2o8M5maFs+
trPwmu6cKRXMjWgK2dg+SZOc72ypcPy/71sTsYMemo00P6HC25obJV+ww0/2
lQjiOnCbG/2lCOzEssZn6R44ngbzcV/stPfqehs+VFhdVSG8x869WiKrHkSF
s2maky6b74cdilwBn6kQOBqa4Yhd8Td9pDeGiutPeb1H2PUxh0slEqhwivFY
w33sNou4iEcpuP8Z78iJaRr8ld77vDCTCkLc392isIcWgvQ4flMhQ+H2qDZ2
9JmjD/+WUOGO1w/i+hQNbnrVffhRRQV9AsEyDrtLjKlSu4MKF30qi2YmadCo
bacQNkcFs7to2m6CBt4RXPrWK1RQ+tFbQMTWGI+3R3SL8Fp2oSSegr/3zr1J
Q8RFWIwkmbeP0yA/VUPosMQiWBwXFNk7RgPHNbLihswicL0O8U0cpcFJNZfr
jfKLwJvlc+wEdnpfjt8j1UWwt/jEpz6Cv0fc4kz5xotwWs1cQZ9Eg6D7dGOX
gxbB9JyFoOAADXRywpiFwxehd5KxyLsff9+YTojOxS5CU+dM4FofjjfM2jDo
5yIUrHP9be3F38fq7rre2s34WFtt/tLA5mBmmg3jElxNv9Ko3YG/V8OWL/xs
l4B15pcLUy0Nzr0QTVRxWILTzFzxKjU0UN7W00V9uQR9z0ZYnatpcEr10okb
nkvQFDrvtFhJA4kv0nOiX5fAaPGSZu0fGnDcmTfP6FkCTb3cb2KFNGBdSwwy
G1yCiFCOjPMFNGAMuPNn59gSWKv/orPIp8FqaZvoy8UlqBdluRWXRwOKWM6/
c7juu5rFpsqZQ4ORPFuuZf5luOFBNhfOxvurI6H4fe8ymGSebjqWhesR19BP
3IeXoUoy+4leBv6eCuhUFB1dBvXfuzJM02nQks65+PDUMigq2J2yTaNBzdAL
nY7zy1DtlrL3TSreP8fjLh6Xl2HsFc3JM4UGpXxTqYq6yxBXyHDY7wcNChO/
9k3eWIYT204uKtQuQZ6KMXeUyTIMPr3G7Vq9BNk9/EraFsvA7TIuVlm5BOn2
jfeYbJbhnhvdSY6KJUiMVa6yeLGM/z9w3npbugTxirSl3fh/wUOq8pOC4iWI
bUkTr/NYhvofjj4LhUsQxrjvzZFgXJc3tzbo/14CL1MWRPu5DBlXSYm0jCXw
WC2wTspZBm2JinWB9CV46+/w+WbhMjjXnzRS+LkEL0tHV0pqcf4UUy8+SMZ5
FqvJ8BxZhmECkTM9bgkuD/kcEhRcgQvPM4N+Bi5BzaGhFkOxFcgR/7le4b8E
Fx/KvwyVWIH0uxcnevyW4AL9vwZ++RWI+9Fvtua9BMpChx7zaq5ARwOFTtht
CeQMywpZnVdAUK7XYP7xEgi0LOvODa+ANpUc3amzBCG7L23IUlZgTcgjOVZr
CXbejoy3mV2BosASl/uaS7B99hxtYn0FNrSlA5YuLgEPj3/kyA4aqHgyfp5X
XgIGDanxv7juk99vH/NWZgmcP772F8B15fWlLg9pqSUgdLecvqGH60rn0+Zt
h5Zg1eK5Tweuk3keSGwRFF8CqluFXPNzGmTykOwC9izBWImJU0USbn8XeFGc
fQn2+nZYeuNzkmH1J+E5yxLoGF3W1fmF60QViYFafE/yl05K9FXQYIPcO261
sQhzZT/44urxPTv9tDxrdREOfNy3YdVGg4uZrV50K4vgd3hLy+IgDa5YT054
zy9C+crb/N/4PaDbrePbNLMIq+Wr8S4zNDDoazrCN7UIsgF2H9WWaPC0xrBd
m7IId01GXnBv0OCt85yL7+gihEobmbcy4bruY+ErMq6jG1abtUI5cR2ltKz0
jG8OmKvUTt/iXYV/H+POs2+ZA4WgAnHxXatQHEAJD+KaAxtTua0TQvg7l8qi
LsI+B3Gy31d/iq+CUrPG5QRmXOfWBDYqyeHveJaow8+NWRgiWD/X08R1zJ8t
UzEzs+BpKVD/5u0qhAzJJvK0zkKRvF/ORa9VUKmI+/6wcRaojKyxW/xXYVd7
492WWvy/IWLO4XMU/g40mEp++DMLx1qqRDLyVuFxT3f+WNYs/D399PHQ7CoQ
z1z9hkJmQWpL256zN9dAZ6RIKfq/WSB5kZwD7qyBGLkhk8tgFj6zL5LJVmvQ
535NzAH/r+Fk5P/p6bAG9vXWdOpXZmGMev1cm+8aNHiVpw2gWfjS89faonQN
bM5++T0lOguG1yebf1Wtgd4hu2+XhWaBr239BLFxDXoasnYlCczie7OXIe3v
Ghxgep9uvg3HX3wraJW6Bm1BK53dzLMgED9c8OHgOkj167Tljs5AixhVbEB6
HbaXyTVvJ83A+yhmj2PH10HstveK3cAMrISI63Qqr8MRzT/zh7pnoMPLYkTE
cB1IgiUNUTUz4MP+7NIjk3VInEUGhMoZOO/m8bPcfB2sewPMb5bNQKbTd8d7
j9Zh2v618t78Gfj4cIIn03sdQhS2yn/9MQPq02uPWAPWIdfS4ghH4gzQ3yd2
G4Sug8e/Q1tt4mcgZ1QQJUWtg/OWbwOtsTNgc1f6y8bXddBgVk1RjJqBA4PA
rpW8DunVV9pPKoxA703NB7Hp62D8cOjpg6MjENhj3ELNXQfHiOGnXw+NwOXr
tifVivD6XOjn+kVHgLntdXho+TqU5u+g2yswAr+1/Bgma9cBqUgXGvGNgKRG
Wq1f1zro91gXkxhHgB0WbvXMrQNjv9rSbhIZHM4cYM1cWYeK670dtX/JQDp7
I/kD3QaoCAvPu7SSofhC0Yoy9waY/ki1XSslwzMtr4/fJDbAnGibdTCWDON3
9pU9vrUBGr71Me9uk6HGU/fAlvoNSJR/4ehKJsGpD+51Y60bkPe79wBHHwni
fX/Zl/ZsgCbBVy60gwSugcJFT8Y2oG/ylUhHJQkEG6iSU/QE5CqRcOdPIgna
OovLdAUJ6ESDQdFHexKcnzBYFNElIIdrzx6kcJEgnM+l+ZU+dmdMXxsLCeYV
vv/ouUFAPW9eiHLSkyDSg2YWaEJAGiY7OmKow7AiHtbBZkNAfIH+27z6hkHz
Smn63Yd4vtFbktLdwxD3mOJT8hj3bzrh0d86DNplimovXhDQtGte25PqYUg0
+Zsz7UFAnNR77Q+yhoHegynwkjee75yj+qefw6CfetguwZeA7Mepji1Jw8BE
eClhGkxAQq49PU6xw2AoHsdcFEpAYZfjzGcjhuHn5bqBPREEZEwMsnkcOgys
j6n5z6IJ6NjpflGuoGEw+iwY2v6FgC4kZ6Zm+g1Deum5J8e+EZCA03m1h97D
wE6x1vZNJCB3YzOrIZ82MOYNkp78QUAHtN/Sf3Jvg6xTBRwX0wio4/NJ3kdO
bUA0IZO/ZuL1oN1rDg5tYPqOu5QxF8/flLH3i00b8HTcdMwvJKAK4rDnk1tt
cHfDTX93KQGlNEoGChq0Qd7+lGMO5QTESvXWndJqA4tHhAnZOrw/8xN23Kpt
UBh2oNK7kYAid5Z631Rqg+2lml/GWwio8JpJT5d8GxRvjfrvSzceT1fMTedQ
G/CfqjxJ34vjDV2O1N7XBta3ZrbdHCAgJ8aFO6/2tsHulDN1/KN4fP06cyO+
NrC/NKDkSSWgbONsDxVCG1TZs+8eXSYg9DZaPo3WCkJhRxZV13C+D606XF1s
hdox5x8bDHSoz531oOBUK4ht/f7ekIUO8cgTr1wab4VnJ5vNctjpUMeGqEMS
uRX2u4sKPdxChxq+dSvR97eC44+Lq/V8+HkLI9/Fv63Q1PawQ5KfDmVHJGnu
7W6FA+uh6e920yEhf+O2px2t8GpfqQ9JkA4FN/98ztLWCm0alHtnRejQyOPX
nyqaW0HSnk8tch+e3+KC++/GVnAOVdy3doAO2STujSTVt0JHsSmdgSQdOhCe
fUKlrhWmz3TteiFNh5wWrrhN1LQCS9GVY5FH8HgfGXeVVbeCICq7VCJHh1iV
OeSrq1rheMEpM9IJ3L6uLEbAvqyU4sSmSIcQ11Fx08pWuPN7X4gk0CFjOrY3
ixV4fYqhaVeU8Xx1gc652P6/eGrtVPF8TZqmSdiJp96SAi7g50kXrRuwS3Jo
G9kX6dAFM4UhUTxe1wnbnT2XcX7OPWCLx57NIh3ZuIrj2dEk9B+en03eUENE
lw6585PvncXxCmU23lHVp0MEtQrpG3g9J+TOvzK/gfNtK/Y9trYVrqTnBb83
wvPLnxYSwvm4e/TIz+RbdKjw4HB9bUMrvPz5tbrRlA7Ft7xYSWpqhQDZPcPz
ZnTIp2mht7AFx5vit77Dig5V/PtTwNzeCqXSrPwK1jjfY3MdrzpboTv5hayR
LZ5PmsVSsqcV2JPMTWOf4PVdix4XGmgFEcl/L8qf4fOw1KhnMdwKJ79rB429
oEPT745Kk0ZawfybUpWMK94vquaOl9Ot4HQgfVDbDe/3avTnT/OtEPT14Npj
Dxzv+ysvx5Za4c8XPpnfPng/lFiOH6Zvg39iHmp9H+nQErrxai9LGyzEbJgw
BOF89QaxXOBsA7HosQC1zzi/rlJpijvaQFHY+Me9SHzevNVU2Pa0gXZka8WH
GDx/fPUUp2gbOIcX0lq/4fmobFa50m0Qsuf4tuVEOnRi/58Y0+NtkBr2XUog
Bbt/uOLc6TboCwm8ZZJJh/jZ3sakXWwDpaB75ZPF+DxInGSSs2oDve0DfVv+
4HzwavLEPmyD+wHXVo5V4vYoVy8NxzYI+6h8+Hk9HYosC/NX926DlQ/8H1l6
6JC++ZvvG+ltsJXbO1Gilw5pmsuKQEEbHPRm+HNpAFvm252cyjbQ95xc+jiC
19faN2vU2wYPOEy3Zo3j+BSLPDzG2uCtR+ehrkk8Xvb39zMLbZDhXmoktIDz
E15oaMfVDvHq1fxuS3TIPCyX139XO4RwNjVN0OhQyuj+y6vi7eBV1+Gps4Hj
q3SU/y7XDk4+ved+0dMjJ4k/t7YM/4SHWiSCCDM9MhbeofpYMA3u8k3kurPR
o75K2XCafhpoBK9I6fHQIyFPzTsWjWkABnSjebz0iGBhEqHFnQ5HBFhjRHfg
5xn1yf9dTocdkdt2zOzB7QLhq9316TDwVWbj/SE83nKex8u+DGi1kM+ZlcL9
Df3incQzoeKQ0sPrR+hR4frQatyDTEj6cZG8/yTuv7FvwZghCxyy7tYXnaNH
kVbPvnqdyAZieVjE4i38fM4lk5bOXKB7F3Pd6A6OT6K9VeToL5hXT+AtM8f9
DVzyArx+QWddlpvfA9y+nig/opoHsW1NDw6/oEdo3yueU6W/4RSJFd0Opkea
DY9G4p8Xwl2mR311dXj8lOWeA7tKYdfeynZaIz2q+Hx+90edUqg7saf+QCs9
4pfNNX38oRSO3yv77dxNjy6sKvXEMZcBc/O20OMj9MjBPdUwbqUMvkRm6obT
MaD4Ro24pqVy0M9lv1TNyICcRrk0v5yqAM4WI5UlFga8/o7b444VYM/CclSL
yICyTeekG+grQcX6Gg/zbgbEb5r/b5q3CoYUlqruH8P9z8j+kLpYA8G6GsUh
8gxIf7LVlMm/BjQeROaUn2JAfU0PfS78rYH06AvxwmcYkIPE+TtbbWvBPC8s
4rIKA2LNq90Z/KsWBNqmA5+fZ0ANBssG7sx14Mr26U3rJQZ0wOLYh7jPdXBC
dMKR/ioDMjcefdM8WgcUxTP20jp4vK3BPBbH6yFSL8DK8BpeT07idGpIVIGO
zajJOwMcX5Gd5YfbkQWsHqcNMv9jQIQfi/MJuuEFeTG+VweNcTv1ZAhnf2iB
WPtJdNoMtxNDFm9NBhZ0THvJW1oyILQi99rIxr/Ak31AKug+7h+bdER5yrdg
/rTHnpmHuL/YxlBU+buC0tiulVgnbC2RQ9oqdwpu2z3P4AzBdu0X8L7hB8eP
/Ms4+Bk/r2Yd95LmD+yzKPNcJG6/368hEh4EKbbMWU5x2PkcBNvxMFi18c2e
/8mAhCj2g21NMRD44OuvnmocT4zXTd2qZKi811yUuMaAbLIFrwnX50KY5PHi
SgIjShHf9l+lxy+woQQXkxgYkdN2oUuN5/Ng+z2jEiF2RiSzcn2HfclvMLEa
LfXfzoj4Re8etjUuxP8HN8odpRlRoXmt6xeLEpA2O1SncYsRVaj2Pe2Kq4R/
FnsfJJkyopGdB0+zbqsCz3u8PERzRoSmX6xZu1TBqC3tar01IyKomjwbMq6G
GMfq1quOjEjoQ2aqgWAtaL0qePzzFSNyX9r3RcG7FgjOaTt4XRgRT6VC2pX1
WvjPLfR6yztGpP9tVZHYWwc7/Kz+6gUxothhHWfzqw3wx//my6wQRmQqVG6y
26MB7IO09/KHMyIHPYHloeIGEAk5X+gQxYgETl2nlNIaoDFM4VZnLB5fa2Ew
91gjOEVI05+KZ0T3tva4/bnfCFLRojEh33F+JIK0XXiToCd2hwotGccrG84V
U5YM779yDN/4yYiM/UvQQcUUOJWw8SYvA7ej1bfl21JhJHFu/54cRuSTk8P+
fSoVVH92m/8rwPlgf/FJMTYNNvK+U4xrGZFmzpXROzxZkFwQ4VXUgNtZdUXZ
KVlgWPxRSqQFz2/0x2q0PBtyyp/bDHYxIptvb47rOOXCw6aL83dGGNG030nP
7LnfQCaP0ywZmJC+nNJQh20x1G+V5Hh0kglpuqcHI5tKULp/fzRUkQkJOV26
JtJZCcnlyeXFwIQqtj7SJypXgbejrCvPOSYUaSjhxcBXDRqk42vftZiQDrGz
/Vp2DVTlnJkasGJCpn1isQfpGuAUn0st2wMmVBVeltAq1wAJ1qXfZezwfCJz
rS6WDfBO9Lz5SwcmJPHn3shwcwNc8NLo3/mGCd096nciL64RyoyvNWuGMyHH
C3qfPDWa4div4NQnUXi++JXBc6+bIXZb14fwWCbkYdOZTchsBtcqQw1KAhMa
efjFzG5vCygfMylzy2JCGu7yuWqzLfDTOyYmOZcJCXAPHFvdj+uB0aHXrb+Z
UGxCM3fSjVagCzdTEi1lQg3javpsZa1QyHI/K7+BCdVc3H07PqgNZEySA4ab
mZDgjBCXek0bROZNPeRsZ0L+qf8YRgnt8MrWTsbgLxMqvSGjI2jZDpPVacTX
fUxorGD6Xnp4OxjtX6B8HWRCyReLNM83t4NS95NvC6NMaD3ai2ai2AHJcjlu
AhO4vema67hNB+zxWblzdpoJ8bPU3bD50gGeYwoqlnNMaNI47vZMZwesqrwQ
8aXi9c2OvLAmdsK9iHxC9jITcr0w5UlW7oSe5Y1//1aZEJF6+6Hhk07Q0Dnz
m4nAjIIKjncVD/yFX8nOoZIMzIjdoeuIAN0/YNbQ3RXEzIzU6ljPE0T+wdVR
8U907Mzo7ulfTYPK/4AsWhvYxsOMfJtliN9c/wHvpx1+ToLMKMTn6yUJ1l6w
ckl0bznJjPKSJgVfsPTBbv22R442zGhpdEovg6sf7i7Ez5MeMqPR2gtqPIL9
kOr3/OHVJ8xIZj/wWUr1w/laIdv9L5nRXKKtwK4r/fBQ2epew3tmdO6nk46V
Tz9USxJui31lRvcOT72v3ToAz+kkNGv+MqMYHZkH97cPAkmFo2N/PzOyljUN
v7R/EDTdKTdfDzGjS0rN2yWPD4IY948Hx8eZUVt/S/Og7iDUCBz7ELnEjMTM
aLxKAYMgeEKpzp6XBeVeff4ihHcI3J/v1avfzoLUOENc/xMdgtl8wr+Du1hQ
B0NyqODRIShXLZn4J8SC2j40UkK0hsBG+wKXmhQLqrCYK37uOwRdgQcDYmRZ
kHPsrRmpqCFQ6WLfs36MBVEtadv7UoZg561ayTQFFmRAz6Co2DAErrHJ6VzA
gsj9KXLk3iGYJH9QNFdmQUoX2Hf7TA1BsbWWxh41FqSy58vnbuIwSP482vJE
gwVVrTyQeyk4DIELfIZNV1iQwp7lJEGpYSCcpA5KarMg24RQxt+nh8HKsd3K
TQ/HT5h6YDQ4Bm0F2XP911kQX+K72tmhMUAMIc8V/2NBO78t63qQxoDPw/D9
zG0W9GL8Y3fx6Bi8rD3Nq2HGgs7fbmu6PT4GIzx7Q+MsWRBHhuAoy8QY/A7q
T7hhi+Ob6rl7fXoM7n65W1X2kgWd+u+xtvDiGDSMnNcScmZBiTdvTHUtjcEp
yYNdz96woIx2Hb+glTHgThsflfZkQSxetv0718cgu9CGLeQTCyqMd7+izDQO
7D3PLlins6DagqqivXzjcPzJN64PWSzIYivTPfK2cbi1taPpRy4LkjW85p26
YxyyL8j9N1OIHXVV9tLucbibMWVrX8uCLlAWEqJExqHI2zT0GYkFPbYvhN+y
4+Bw5vLkW35WxK6ruPLh6jjE9jimfd3Niu7lJjGEa49D/ZPvDhWCrGiX/cDR
ZN1x2J/MysC+jxU5tJwktF4fh+ZdJTu8ZFmRUawlUdFkHKTm5c98VGdFlJDB
o9YPx8Hgw13m9EusqPJjdurnR+PwRiKgukUTu9hdrv7JOPQYz+puv8aK1Kz3
nD/hOA4etYmWn26zIo+fzgYib8ZhOE7YP8KRFZlGNHnoBI0DxbV/mcEJj+9k
8qz10zjMmkTdNHdhRf9aZOP0w8aBsFf4kKwHjsdhKP5O1Dgwr/X5BHixoqzH
S8+mYsaBqzuSuuzDis6qJ716HjcOu4KEiouDWFFFg/2OkO/jIPyoT1w8lBU9
Plj9RTJ5HA5oR3q9D2dFH76q/VeUgtcnazw3FcWKzASDFfTTxkGOW+i6zhdW
xFhjrDSTMQ6KE7352fGsyOCG5m3P7HFQro4Q25PIis5p1kaZUSig9u2mx+sf
rKhwjyNaGaGAptve6eGfrKih1e6E7zAFrt3p1VXPZEXWV+zeSA5QwOhsxK/k
HFYkpa0kWvOPAlYbgm5PCvH6KNcRfwcF3j4RFGSrY0XcnvzvB6sokGe2R0Ny
lBUlZT8sVE6lQInq31QfCitqaqXbL5xMgSrRzzsWpljRlrtyIQzfKdDeKzD4
m8qKquhswltiKTB7TeDZFUY2lOm6Oy4umAIHLuyOt9vLhh4u7lJkeU0B/wM7
GXN02VDZK33HCB0KGBrt/zqoz4ZynX+f2KdFATH/o+pEQzZUo/SKN/kKBdI3
LvncNmFDGnJa/JXqFGhpcxYgPmBDM6O6XGJnKMD7hnLstjsb2q0sLWglRYGu
3OV2r/dsaCT0P1NhSQpETzM/z/ZmQ7u8FkK6DlLgiKFwEVcAG+JNVKrT3UcB
raN6l7Kj2JBOc/WGtQAF/PoL7nD9YkOTYj2HJDgoYLCjlvVEPhsqeVUgTWSj
gMilru8mRWxo2vXL0jwzBX5mz89klbOh3oSluip6CjR9OPjSpIUNDaUWqwSt
jENI2XFhr3Y25DKdIu67NA4mtLOlWV1siJDVn+tFxefvrhE7Vz9e/5cusvfs
OGxR+hiYNcGG/nDf2ZY6Ng4dDyNPDkyzIYYFn6OFI+MQ+S2ph3OeDbUL9E00
ksbBvDf3lfwiGzL823mGNDQOMtsqRExW2NASG+vhtYFxWFJvLfNcY0O+s9TE
7f3jUOg0YJ5FYEfnBvXV5SLHwD1zimOAgR1tOPeZ7Pg8BpqU1WROFnb0ItVZ
ZfXTGPCLsGvJs7OjnXp2lMHAMei7tmPhFhc7Ovx1+FrdxzGwKZFVyOJlRwXR
yPq71xj4hNwtvyXEjlz+9F18+3oMnjx2fugoyo48ObeO+r0cAyOt8L1B+9lR
45/TO6Ofj4Eke9uTGkl2JN/48EDFozGofKp6QP4kOxqof5d3xHIM6K+LvePU
YkcShZaBr7TH4NGOAfUsF3Y0/unMK7L4GBjOrVEb37KjyDf8TWf2jYFK/c4Y
yjt2ZBLSei9cZAy2ul2lCfuwI1YufVujPWOQTC387hnGjlIFLJ8tb8Xv49YI
TpMMdmRZ+T390/ooGPj/V8dJZke7BK9627ePgkAa+26rMXY0or5LvK9lFHob
s8wqJ9hRWpuG6OWmUTDl3kr3dp4dKU7YK8rWjoK1x5+jG3QcSC5eLoW3ZBSc
naQ/zQhwIL/j7KHnf4yCSkTP8BUhDjTL26jTkTgKLPnvjiSLciBtbc9LVgmj
4EkbrLaU4EDD9NJzQV9GIfBx8PqgPAcae0xt4ggbBf0A1YvKChzo4T2BC8mf
RmF3+mxQpBIH8rQXGdcKGoXIGQ3Z/1Q5UHCI489ov1Ew4Vl58esCB5IZSW66
5DMKYtJfq3ZqcKCayBf8NK9RIF3S2eFwhQM94+p9nfB+FL7dozNt0+JAcVdr
OA3fjcK998kpx/Q4kPF4EWO4DRmkEm6s+V3H6zFiUfewJsN0Bav6jCEHEvqt
+8LhHhl+kjMCrxhzoBjC3zBzSzLYM98eTLrNgT79qI8zMCeD/D4eGU4zDqTb
ZfLp8l0y5JlYVlbcx/lyuSiraEKGl693bBe35UBfsnY0yxmT4Uxkqckbew50
o85WT9aIDH/+Cq6eec6BDlp0rBw2IEODfrPUL3ccv/Jxj9NaZPB74vR8pycH
Os8qznpOkwy6gYcrnnzA+cmlXte8TIauZrdbxwI50Onj7+ws1ckwdFnRPymG
A0nx3FBLVybDksqX5Yh8nG8mfbHPR8ng+CvCpbSIA1lP7OzvlyUD4UgI12gp
B+L7NSd4QIYMLHs/CB+p5kD10TT+HEkybF92UCttx/G5bxmi7CPD0SSNTyPT
HMh/m15lCD8ZrLfNn5AV5UQ3advP8GyQYPb9ZLHufk4kcuvye5c1EjyiH9V4
dpATlehLSi/RSOA49de4RJoTKWZ+ejW8RIL3leXuuoqcKPBQ+b6GWRLEvwjt
eKrLifj1D0cNkUggOR9gEq7PiQrL77HdHyZBiqUPpfgGJyqfYvpFHSRB1rU3
BE4TTnTquAWVq58Ef2QfHAi35kSSMcppF7tJMDis7FDsxon22vvZMzSQQDmi
LlriPSeaTDwn7VxHgkh9g1o/b06UOfLxBn0tCYyqbUVuB3CiBv03jCxVJPjt
uqZRHcyJDBTmX76vIIGA0rsnR8M40aPHvne3lJOgKyWyhiGGE2mWEZ4Kl5Lg
pKXkolUcJ/qrkxj1vZgEwaLZwi3fOFHP4ZNH5YtIsNhzVkMxiRNJ53G8zjs/
BHqB9Y9jUzhRilUNf+25Ici4ciOKM50T3VBRGfynOgR8bORq+yxO9CD4U++M
yhA0PV8XUs3nRDxVjpa7zw6BrJzHxaQiHN8Wo0VZ5SHwmdz2eFsZJwqNKvmp
dmYILt86XD1czYnq6BpTHWEIqs4ZPnrbyYkql47kTivgenJLbmX5PCe6k71P
mUduCISrVeellzjRa3vJayePDYGTa6NgMI0TXeYX9L6N612lxZGH5vRcKPdO
mdEv2SHI7dkhyMbDhe5HPn3sIDUEP78+slM/xIX6+X/8FT8wBNGnZXfX3uJC
1nzCP/UE8HyX2V1oplxo361tHsm7h2Dg5uDYQXMuZBeeeZEFW9Q5IPetNRd6
9Wn+3a+dQxD7Z/k6es6FJh/IDEntGIIvV4qD0/y50M403ki0dQj+GIcSBoK4
0HeHtLa4LUNAsrU35wnF/dX4priw9/vvP3E/igu9c5Qp+cc9BHEdHu37k7lQ
RK/vuAfXEMTf0t4eUo6ft7jfwsk2BBV2ki8rqrgQ4m2cdGIdghEXJhK1lguZ
/3MbXGAZggNxWRnaLVyInyxsMMA8BN/Gduty9XOhofrXD8oYcX5p83kKQ1wo
smvhCsIe46wTsyRzIb93kix5DEMgIe00/2eCCzkKCi1l0A+BOrpuuDDNhYap
qzLHsC2vHikVnedCvLo9Sml0Q+BhwiGptciFmJYuCx/FTng49NFphQv9HRtu
TyPg+Vx/05LXuJC8yxETOeyxgMDbfwlElGTQfe4H9AP71wfVHIxEFJ0hRheA
fSj7wtFTLET0Ca6YPcfWqBQONWcnoiedaw4m2Pe6VuiDuIioyK1ZTh07cTWx
aY6XiJi7nX7sxq7hentKZAcR0SQirJiwKYI3ozV3EVFWv23jlFI/SJ7ZYpck
RESiHCXBf7CT3jzaYnaYiEZ4NjgcsSmK/zm/kSGiW0q3blpt9p9XmYs5SkQJ
lYLaN7ATTPha+04ScX1wdddp7LGdq6obikRkk7BrQgr7YONg5h5ERBrDQ0bC
2PGQFmxwjogKDcUEWbFHqCFsT9WI6EIXxXL1dD+IJzs/C9IgIk7D/3RnsO/e
sRzPuEJETS57/5Kw4wS0DFu0iEh2pofuLzap+WTtrC4RERCUNGPvey+stOU6
Ef1jnhaqxo5dnt57+SYRcR8b/PELeyilw+eeCRGtRjj0pWOLmhfSvb9DRFKe
9InJ2CZ74+2+mRNRmpHE1m/Y0W0fBsutiOjpg09bY7H7vZ7okKyJqIZ5OTEC
W0j1ZhmjHRFRbsz2hWIbr547LvqIiHw/SiUHY0ekSX0940BEL/L1+AKx/1lu
5zd+TkRcHby8/tiCIuvuL18S0Z9SYoIf9n+dw8thr4loQnO6wxc7zKfW8pcr
Ee2RvhWx6Z7zGd2dbkTUSmVb2/TujTCNJQ8i2i76cWbzeYNM19/bvfF+bPni
uDl+yP17UnK+RPRgnfx5c/4uMZ0IbX8icmdl1P2EvbNHgccuiIjuSURFhWHr
fxR97RNCRLUKZi6R2MHqHLPJn4no89Ta8ub62+nmTGojiSiyiZMpAXt7Tlfz
eAwR7VdXiP2BrWdTrML+lYi++Mm0Z2AHiCdkHEggIov8j5/zsFv++e4/n0RE
Z9I5Fkuw+QKfBt1JIaJDUjC4uV/al26xuqbh/cxuudWC7ceo9jQ6k4gkk+3s
Nve76ZfMWGEOPo+KBXxk7C0P+W/05hHRWUPjC5vnxaefrChQQkT9cvImLPh8
NQTXJ536Q0Qqf7PO82Jza2YJXq8kor1TIr/3YnvnvyUE1uP2qot6p7DrHlnb
pjcR0fl8racXsLkO6w00tRJR8YM2iWvYnqH7Srl7iKjyz6D8Y+waLS45qV58
HxLT/d5ic7AvfNEYICLVOp9nQdgeDqVu70aI6P5j6lQutpvu7YsMC0R04PQp
M1Z8H6Ov9BjeWSIi/6ZWsiB2npqudTmNiLrOkNiPY8+ePu/7np4befW/PH4X
23D/oXZeHm70el18ex32E6HYkUe83MiOg/nzKLbfrj0r7du50aK8UzET6ody
IveesD3cCAR1yIB9ZHHWROwQN0riSvb4hX1pxsr+rRQ3MpKJXerGNh8fejMi
y43czRDdGvbn3rb4xBPcqCflbh860w/ZnVdyiYrcKEhtIuM2dlNzRbUNcKPd
dLxibtisFbmTx85xozM7pCvqsUWLjxKC1PD8/yuyzqOp/L4GgKtkCN1nMGTO
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
1KxLlFnyJtOzfjGkNj4zM+v/AT+nD0M=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$222148#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"x Gain\"", TraditionalForm], PlotRange -> {All, All}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Gains from backward integration\"", 
           "\"Gains from discrete integrator\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             
             LineBox[{{1.0204081632653061`*^-7, 3.2036722441481444`}, {
              0.0015335896027981336`, 3.2024737026959773`}, {
              0.0030670771647799406`, 3.201257253211228}, {
              0.006134052288743555, 3.1987705224653427`}, {
              0.012268002536670784`, 3.193581017016866}, {0.02453590303252524,
               3.1823326876202938`}, {0.026069390594507046`, 
              3.18084479725992}, {0.027602878156488854`, 
              3.1793386867341766`}, {0.03066985328045247, 
              3.1762717836022025`}, {0.0368038035283797, 
              3.1699191332915966`}, {0.04907170402423416, 
              3.156338267487043}, {0.05060519158621596, 
              3.1545587297063813`}, {0.05213867914819777, 
              3.152761040778725}, {0.055205654272161384`, 
              3.1491112853284866`}, {0.06133960452008862, 
              3.1415948280982846`}, {0.07360750501594307, 
              3.1256991821371214`}, {0.0817389455782309, 3.114535720239717}}], 
             
             LineBox[{{0.08492772108843498, 3.1100231012627653`}, {
              0.09980578224858389, 3.0879802370413154`}, {
              0.10146825848951577`, 3.0854173819628823`}, {
              0.10479321097137956`, 3.080232424609366}, {0.11144311593510714`,
               3.069628119070984}, {0.1247429258625623, 3.047503254096596}, {
              0.1513425457174726, 2.9997765613205143`}, {0.20454178542729323`,
               2.892304327008044}, {0.2060940921839099, 2.888966057350488}, {
              0.20764639894052658`, 2.8856179738431225`}, {
              0.21075101245375993`, 2.8788929316828096`}, {
              0.21696023948022664`, 2.865331391309156}, {0.22937869353316004`,
               2.8377963448513936`}, {0.24840561224489813`, 
              2.7946962183698023`}}], 
             
             LineBox[{{0.25159438775510223`, 2.787381975410069}, {
              0.30388941785076046`, 2.665246775850459}, {0.30541127451081707`,
               2.6616644847235786`}, {0.3069331311708736, 
              2.658082454856137}, {0.3099768444909867, 2.650919779240331}, {
              0.31606427113121294`, 2.636604171543137}, {0.32823912441166536`,
               2.608045497105403}, {0.3525888309725703, 
              2.5514813611834253`}, {0.40128824409438024`, 
              2.442566395279618}, {0.40293908943338685`, 2.439011205876259}, {
              0.4045899347723935, 2.4354666267905785`}, {0.4078916254504068, 
              2.428409884613963}, {0.4144950068064334, 2.414430114419593}, {
              0.4150722789115647, 2.413216697990954}}], 
             LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAc6V7A8rE2j9AddHxl0ADQMETGZk5
EN0/ZOC0BZGtAkA0jci+RSvdP6BkIC0epwJApgZ45FFG3T9gmw0Ks6ACQIz5
1i9qfN0/qGfWHPSTAkBW35TGmujdP0iB3irVegJA6qoQ9PvA3j/YX+aJHkoC
QAohhCffOOA/cDL/+CHvAUDIPJEvfkXgPwQbvvkZ6gFAhlieNx1S4D806bPu
GeUBQAKQuEdba+A/yNWe0DHbAUD6/uxn153gP1xIvC/CxwFA69xVqM8C4T8Q
BPG2aqIBQKr4YrBuD+E/mKN26uSdAUBoFHC4DRzhPxBWCW9nmQFA5EuKyEs1
4T+U2UN+hZABQNy6vujHZ+E/ONq9NSZ/AUDMmCcpwMzhP/BgrIz9XQFAirQ0
MV/Z4T84u/LC/lkBQEjQQTn+5eE/NLP0hAhWAUDEB1xJPP/hPyird7Y1TgFA
vHaQabgx4j/E0jMU9z4BQK1U+amwluI/IMX8eBciAUBCLUL+mp3iP6yk53Mx
IAFAlbi3Pg==
              "]], 
             LineBox[CompressedData["
1:eJwV0m9MUwcUBfALrUAImxhQkUBAICtTpigZZNNw79KyDQXiWizQaIEuCxUL
tGbMlQpRNMjiVgfhlSIVQkUHav2zoZ1luGyamAVhq3asgwVn2/ceipjOMcWN
4d4+nJz8kvPxrNXUyT8IBYBsIf93RHpMicvpw5vZ5+YT1oRQz2bNw4F/fKhz
MhGV4SFkjh5d11fhR1vaW3rPY6BrOYlXimr9ONObbz83CxRQ1+GiyY/vJu55
+ukM0BZHTHFJpx+1L9uXanxAM/m7Gl8a92PrsazywQmgWMOF8OEpYV/xVO++
C4RWaNc+8GPybFiHyA1k4frP3BAH8IDKHNIyCiQ9PPejcUsAhw4+ShJ9B1R7
FlWS/ABGWzdoTNeBTrjbAh5lAIOyxu5/h4GCSdnPN+4LoFXaG0hyAvV805TC
DQQwoUsin3IALfy1vF6+isV0fVb5qyeBUhM1L16ksii70/AwtxuoSDb0iWMT
i+L4tkR1F9Dp9tKeiEIWPWlpmmsMkHxj363rh1m8E759yGcGalL++Z6ujcXW
FafGZJ8BDTbm/baml8XQ8fhdl44Bwe0HwQ9dLMalTo6cagVyaDfHr/+DRd/u
0zf/bgbyHj/S711i8Wpow8gXh4DEzokNLVEcqq4qg7sPAqmWmaT3JRw2d9lY
thGoJWNszPw6h2eHv7Y6DwBdViSVbpVyWJ0nrWo3AUXYb+g61RzGja/Med8I
lPXDymcyHYcpr7wtKfsYSB2sOvTEyOGCRb6idD/QldwoSyHDoe3M4kV9PZBm
qvhb0W0Ow14rSonaBxTZfb/G8CuHnpPmqgID0Jeq2oR7HIcwlRPN6IFEk0eN
rhAeLT+5tVgHdL4rNj19OY9mPBLWVwtUXNY3wSTweKL+kT9ScL/XlWXI4TG4
dPGNZzqgAus7vmkZj+pMd69R8HyJ5/MCOY+TdZK1YsG21ZXoKucxw6UbsuwF
yvtlbk5Sw2Nk4dYdmwQ/tjTYmAYeudUZs3erhf8ow7eLWnnc1uYyNQnOXdXx
XM/wuEOvWMgUzP2cPDBt5xEUZSWze4DMjENZcInHRUnccYfg7J1vLnON8PjR
3jFmv+Dp2FtfSUZ5tM0PVuYLPupRaBgvj76YezMpgjM7fo8WcTxWeKuTxYLt
zZ2K4BMem783DM9pgf4DJpSKMw==
              "]], 
             LineBox[CompressedData["
1:eJwV0X0s1HEcB/BPpy5Wnq5lTdLD0l02yiS1ls+3B1SXcibNJnE97ESdrAe3
oZs5iuLk0CLs5ilJrBYnk1qKkyLboaZWS31/v98lrA7lj7798dl7r+39z3uf
tUp1xCkRAPiy+5+qdFWjsyNFi9+xI/0qIAM3l/WZVlK8vbjW/Jw5NaJKI91I
cSDw+EwX8xqJj6x4K0VVsGPJS+beQZNFtJfi66Ped4aYUwpDdMkKitaWLXaU
2V0x5P8xlqL42f1OuwQgz13ivsiTKErGhO4NzGcGrHqThmKk1NdZwSzRa1Ca
Q9Gjqfx6JnP7YfGEwUDxsTx+5xNmpXNRuchIUVm5fdlf5iVvV8uTH7D++nG7
3WeAPMpvnBvroNikkS3SM8cc2l4vN1N8kdW/dJy5sT9ikXScouHEFXF1IpDI
G58eGqYphlzY8dUxCcj8wSSlCDg8Od1amcEc9lr3dMydw8dafc6Fs0BseZJz
chmHxkFz5RxzhbzSwxTAYUVY5lndOSAT5jaNIZxDXmaBFjWQktxgmSiWw/AF
7i3hyUCCDryzqBM5nDxdZbUxF/QK/vJsDqnY931UCpDNPZ4TCzo4vOo0Hn/i
IpCRnHvl6l4OVyysC9p6CYg2dJt8zMJhQ+BwuPNl9q+Xivq2KQ7nXb2EoVQg
57uzlGopj3q/wt6aNCCeX0PENn8eS+6bdKXpQPpEDg1phEejpxCTnwHEi9yY
uhbN461oW2CeFshoe7G2Oo/HJOWMsSsLyK7m2orRnzyusB89Lcln+96odsfN
85i7rqxQUQCk7If3t2/2AiZP6fcW64H89n7g82utgJPtVau8i4DcrWntcIoU
sErcVHr1FhDXsp73e9oEdIt6le1SDaTTlJthfiGgcVfou6IaIIkjB9cpBgWM
2WFzWlkHpHv5YEIsL2BaRVdAQAMQjX50NtXDirX7vm8qbQbyWce7NWmtOOv2
OdOhE8ifYWt98L4fOJmdsH/PByD/AI5RVPU=
              "]], 
             
             LineBox[{{0.9182610544217695, 2.1090353880380777`}, {
              0.9218048661212237, 2.111254772604809}, {0.9284370006480889, 
              2.115479345238872}, {0.941701269701819, 2.1241854026547715`}, {
              0.9682298078092793, 2.1424586231562808`}, {1.0212868840241998`, 
              2.1808347242745327`}, {1.0228347481716007`, 
              2.181961734664105}, {1.0243826123190019`, 2.183089055866435}, {
              1.0274783406138042`, 2.1853443531488432`}, {1.0336697972034083`,
               2.1898556111799765`}, {1.0460527103826167`, 
              2.198865299362293}, {1.0708185367410334`, 2.216710151609485}, {
              1.0723664008884346`, 2.217812838231951}, {1.0739142650358355`, 
              2.2189136281636594`}, {1.0770099933306376`, 
              2.2211092365753187`}, {1.0817389455782305`, 2.22444672721479}}], 
             LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAABJSJK91b8T94A0pKQNABQIKf/FH0
7PE/DvEUVXQBAkBQMLhxK/PxP7paxy16AwJAHsFzkWL58T/o2d/yfQUCQLri
6tDQBfI/+K1oHn8JAkDyJdlPrR7yP8yN4wBnEQJAYqy1TWZQ8j/g1LMyxSAC
QDA9cW2dVvI/ijkcp6UiAkD+zSyN1FzyPy7nz3mDJAJAmu+jzEJp8j+YYSEW
NygCQNIykksfgvI/9AqWL30vAkBBuW5J2LPyP4bNDhp9PQJADkoqaQ+68j/s
GS9CLz8CQNza5YhGwPI/Rl9POd5AAkB4/FzItMzyP+Y9k3AyRAJAsD9LR5Hl
8j9mux8Is0oCQCDGJ0VKF/M/QOsWAA1XAkDuVuNkgR3zPx4xOeGHWAJAvOee
hLgj8z/cnxkB/1kCQFgJFsQmMPM/JvoL2eFcAkCQTARDA0nzP5jMq+14YgJA
ANPgQLx68z8Gn/mw5GwCQITpvqF6gfM/4ndpyDluAkAJAJ0COYjzP8T6YMiJ
bwJAEi1ZxLWV8z8mm4hTGnICQCWH0UevsPM/UNqSTfx2AkCqna+obbfzPxA9
t2EneAJALrSNCSy+8z/efbUATXkCQDjhScuoy/M/0g+ZsId7AkBKO8JOoubz
P/RIv5G5fwJAzlGgr2Dt8z8yI/G1t4ACQFNofhAf9PM/bNZ2B7CBAkBMwcsp
ePnzPyqHb8lwggJA8ejv3Q==
              "]], 
             LineBox[CompressedData["
1:eJwV03sw1WkYB/DjXbRxJqYUi82lZVqdFl2E2p5XZ506lOQyYTlu2SadZdvF
cti1JE4n90sqh6aUTrqQNZWmbdDqwm5X2cLIzlo2uZTe97dKap/94513PjPv
vLfn+9jFJAbEEZFIJMfx/9y4flVPniGDF17bRStzCI1rF8osTBiQ05Jhn32E
Jkw2BVdYM5h3yfLZZC6hUwYlFwOXMHh811LWkkfo99aJ5vOdGIidT6VnqAn9
Sb7sSeEaBjvSbaUv9hNaVlsbrg5g4DJqMSc/n1CLK1m/yEIZ2MrPPLcvIFR7
L3KxQRQD2Y8Gfj+j62atBrO+ZlBoEqtoLSTUyewNpUkMun0P8XVFhDY4PT72
TsXgmsPr/ib05e3lselqBlGVtxM0xYSuS/j2V48iBtOBajKGbsvxd5iuYJDy
3rRFVkKorOqz3ItaBv2JZnlH0J0XxCNJtQwUjd7RI2i/W6MbV9YzuNO3et3y
UkIfDtzSvWxkYOkZKVaiQ3jd3MZLeN42rxu16H7jffEJ1xjU74xUdKOj7GO7
JB0MktT09iz6b3cvyfMuBqaaxBmbMkLjt9oUnH7AIGxB+jNP9ETc7PjOJ7jf
MZ7nh/4uo8/PcZCBYUFyVxh6urSlYWiYwaBphS4SnXG60rR2HO+zdWpBBFqv
NXlPNGPgvt2ZBKJzewIf2Mww2CSZ2umFNhp3XTmgx6H05JDHUnTRB6bl2g85
WMYfVs5Bm1lOsDATDm8UGjaA9z3k8lvwR4s4NFt53jiP/nhj/cU/rDlc/cK5
JwV9PEJtfnAJB6GUWaxBOyZ9lRrkxEHZZ7F3Ev9vuefTwKMuHDTC+OGT6FWi
EOdRNw7am1dvBaHX3rhntPpzDm+zpIazWJ8N+fLhTCmHzQVSeQ1aHtDe1inn
sP5Altod7W+xtnqhP4elER1XurDeihOSoDPhHHxiCx/2Yz7i4k86CzEcrFUX
ToWhlS6Ljb12cRiTjMrvY55UV03ae5I5eMpSHuowf1nZ6mq7DA6Nff66uWj1
Jr00ZTaHe8eljrEHCD3YPeVMijjoL6qbfo/5rT6y23hLBQenc5c9pegTUUPD
lVUcXoR+qpeJeW8ae1S9XMfBf7JEeIr90dLkl5Z6nsOUQr7AAN2aejPoejOH
etFAkT320x39FuPQNg5uXrIc2V5CH3W6jtTexPeG//lsczbmqbi+feJ3Dnek
AxrfLEJHrbVpOb0cSG9pmGsmoQarM0caXnGIyuxZUaMiVDzzb/ub1xzyHwUl
x6UROr/tmxpvkQBXOjvqP0kl1HZLTHCfWAD9DeWdmmTsjzjv64aOAgzNxPzF
EgmVLrtWs00iwNmS8XZVAqE+L91U2hW4PsTcb1qJef9hqesKEECtPybt3UVo
UoXx0YgQAQanxZfcYwlN/zJHpVMIIJn9560qmtBsu9ngVzsEGDDz0DVHElp8
bkK8f48APlVa8bxwQs923Fc1awRYHOVgFRJEqLA7pdv+hABGdxcavvMl9D+H
dRp4
              "]], 
             LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAWunegDKx9j9eAukXe0cCQKJBM3Pd
w/Y/pr3IuMRAAkBfjc6Pr8r2P/Idlds8PgJA2iQFyVPY9j84qCHDDDkCQNFT
cjuc8/Y/+nyn+SkuAkC+sUwgLSr3P8ivQxlRFgJAfP3nPP8w9z+sI7xrIxMC
QDlJg1nRN/c/WCDLYOoPAkC04LmSdUX3P/zi4wtWCQJAqg8nBb5g9z9yEDVc
o/sBQJdtAepOl/c/UDyc3Q3eAUBUuZwGIZ73P86jMfwl2gFAEgU4I/Ok9z9e
LlUrMtYBQI6cblyXsvc/dhsemibOAUCEy9vO3833PybUxNJ+vQFAcCm2s3AE
+D86CRJD8ZkBQErlan2Scfg/NidbyXZKAUBGfSOsRHj4P5AdF8UrRQFAQhXc
2vZ++D9YFVpF1D8BQDpFTThbjPg/9H39uv80AUAqpS/zI6f4P9LmetO/HgFA
C2X0aLXc+D9CVUEt4O8AQMzkfVTYR/k/Xjd1LoSIAEDIfDaDik75P6bEGJ6g
gQBApBYhf81O+T9qH8pwW4EAQJcdtl4=
              "]], 
             
             LineBox[{{1.5849277210884356`, 2.056528323709024}, {
              1.5931184674066499`, 2.0390551114494793`}, {1.6061966420295761`,
               2.0098653439535994`}, {1.6323529912754284`, 
              1.9467355469925876`}, {1.6338775936189789`, 
              1.9428614633353085`}, {1.6354021959625296`, 
              1.9389660869862917`}, {1.6384514006496307`, 
              1.9311115663901575`}, {1.644549810023833, 
              1.9151482506870199`}, {1.6567466287722372`, 
              1.8822113249694308`}, {1.681140266269046, 1.812365869534334}, {
              1.7299275412626636`, 1.6575829172503678`}, {1.7315811322851642`,
               1.6520050360289797`}, {1.7332347233076648`, 
              1.646406546582476}, {1.736541905352666, 1.6351482270810775`}, {
              1.7431562694426685`, 1.6123896952596564`}, {1.7484056122448977`,
               1.5941027858974968`}}], 
             
             LineBox[{{1.751594387755102, 1.5829550307403766`}, {
              1.782842453982684, 1.470551656122983}, {1.8357573667027043`, 
              1.2669425835941794`}, {1.9150722789115633`, 
              0.9421453731513703}}], 
             
             LineBox[{{1.9182610544217675`, 0.9288755599326581}, {
              1.9362087553637064`, 0.8542075863866394}, {1.937881165580842, 
              0.8472581306714639}, {1.9412259860151129`, 
              0.8333668530278509}, {1.9479156268836548`, 
              0.8056217810879316}, {1.961294908620739, 0.7503371649958552}, {
              1.988053472094907, 0.641034087179567}, {2.041570599043243, 
              0.43088692317373756`}, {2.043212559163819, 
              0.42468304311108174`}, {2.044854519284394, 
              0.41849626009791674`}, {2.0481384395255446`, 
              0.4061748278491377}, {2.0547062800078466`, 
              0.38174639776987807`}, {2.0678419609724497`, 
              0.3337939868900959}, {2.0817389455782314`, 0.28447233106154}}], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQzXLqyNR3axkcDoi+1Xxbd9E+7X97hPQRIN9t+94Z
9ufs96htMKk4zuCQYPucL6LrrH1mKcNbw3MMDg3WnSW6SmfsDwktjF16G6i+
UCc2PvqkfYnvI7ueb0D5Du6lVl8P2984lMIYpcPo0KC8ImHRos32HxxvSdXq
A/nP+LNbmjbZsx/0N1lgBOQ3nmUQTNlob7bfKv2ZBZBven1+asQ6+ym7Bc4W
uQL5N/Tvr1u41N5/y54Z3XGMDgy/5kydldNsn2ZstGldIpBfEl5RP6nMvm7T
8tMXU4B8Ac4NExZF2q/ZMOmfeDZI3tLwz+TK/VxrM1KWlAP57XEzfLmn7T+2
VMRg7wQgv+Jqoc+PlfvvqXR5PpgMtO+IunHl0dX7vy7+n8Q8HchvnlRwom/t
fpVFr6Z6zgWq773ger9rw/6meQd+X10J5LPXZ/j82rzfbnrO8XeHGB0c0l5U
eFTu2h8m9uiB4DGg/t5NSqwOu/fnTg3/ZXISqL7ca95mlj3750x20q0+D5S3
mxpzr33v/l/9EpPZ7zA6JPz3vzrL6sD+rR1H4hS+Mjoc8BfpUvp6aP8Kr9MS
7T+A6v3jHJv9Du+fxXPp0tvfQL7rrztzlh3ev/zBU5E9fxgdFG77hXjvPrwf
AJvC4Ik=
              "]], 
             LineBox[CompressedData["
1:eJwVUn001Wccv34/L2U7RiWbkNuNRJloebnt9jjajDgrkmTjTnOLcHvB6ORM
RfRyTFZzvZQrKmSRicOhL3K57v09P2pjWS9HkRVTK5rrZbXv/njOcz7n+/08
n8/3832EUfKgaEYgEPjh+f8OW2457sMyZMi9sCY0shMCFLPOO0wZorzc5+eW
r4JNu/SetyxmCCmsk1g9VYGr1YIykQVD2hL/4avXdYGF0tzilTXyZ7Lr2rq6
4MlVl3ennRgiWDVZqBjqhv4Y96bXzoidw23KRGpQO0kOhbki31sZFRithp9r
tvxp74nv3yh9L21EDSmNst72z1F/fVfm2rs9sC81/qSDP/YrfTMsjTUQIU70
+SGQIbaWAS0lRAM+cLTxq+1Y760/J6/UgEl3ccn0Nwz526NlqXGsFvROloVF
RDMkPWNeXPKTFqb8qxar9jIk96CdSNWuhUG+MStPjv512bdhMQdc7i3vmYMM
kVqNDuR5cXArSDUXmcyQrS+PSCcjOSgfuCtfm8aQ/fkB2rArHOQrBlefS2eI
aVXM46+7OTi1a2h49jjimXUvx0c5kD+aCFWfwvmHJf6XhBSilFNmH+egvoHL
oHojhe1Rc9rzZ9Fvqutw0g4KXqMLyG4F6h2+4C/NpLC24oPZniKc77sNzsWF
FGxjl9a7lDCk796Nw+HXKSxaY52Qf4khtfrZmy60UTB4IXJ4exn97/syT3qH
gq7G8cm3lch34s+WD1EYO7CuWFuN9RyBbO8LCg/dPHa41mKeq5eTa7MU+t5I
TAt+wTyul++KM+DhduNnmncNWI8Nnqky4aEhNSBD1ox6Uq8Y2VIeKsTBEtqK
fk9XTl+w4qHo3zCdWztDXJydO7cKecgBaV1hJ+bVYT6StpKH9KN74vTUiC1O
JK+05+GQT4L9Xi3m4ZRV7oNYZpA0xPOY1/SC0j+w33J5z+9zd7C+v/++/Qoe
eA/rXod+5D8qeL3MhodjQQe6Qu6hX9+xkKYPedgQp2o9dh/37TaZ9taMh7HM
j27WPEJ/x+ng2EIeLpbEVz94jPM3bKpJE/AQ1NRetvAp6iVG+TS8oWD4q3nR
hmeIJeHDPz6n0PxXTN7ucdTbIh0xf0AhwfDWydwXuC9RS5mYUlhhu+ho6yv8
vzN9J/RbKQx4ylLGppDfvmxOfo3CqeBmuYUOsYl7cpqCgiTeZM/mOeyveJi0
JoPCZWVDyEU9ltTeD+yMC6Wws9k4UKvPkq0bUyrmJRTe/y1is86IJS7uGQec
7CgkGhm5BZmwJN33seXuCQ4chOGO35uxRODlqIrt5eCBV42weglL2ur8npnU
crA5IdTUcBlLcmNSzzjGc6DLumbkZsOSoeYWi1I/DqpL372NFCL27Ji/sZKD
Jf1XJ5pWob7ttJ5yQAsjYp0mfj1LpLKd4qLVWlCEBHQUurPE1MZQcXdWAwFy
ZVO3F/rZ0l1QotFA/aUvKoTeLOkbs63URWsgY2FBZn8g9tuJ2POne8BDNHGE
2YbzXKkPjdnWA/OfiGPNgtDv6PySm5/2wH/SJzGK
              "]], 
             LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAArnRvQJlYA0AwCv4yl8DIvyTXOUA9
ZwNAEO+WQvqRx7/Y8I03amoDQGD5VgVJTMe/jAriLpdtA0DwoGOrJAXHv/Q9
ih3xcwNAwAY71oByxr/EpNr6pIADQKCE4Ka/O8W/Y3J7tQyaA0CQYe4X64fC
vzYy3rUpnQNAIPqk1acswr8K8kC2RqADQCDmnOn4z8G/sHEGt4CmA0BgLBni
VhLBv/xwkbj0sgNAwDfwCe8Lv7+Wb6e73MsDQCC3H1ECUbi/aS8KvPnOA0AA
ct3Ztmy3vzzvbLwW0gNAYJO/PIqFtr/jbjK9UNgDQIDIiU2MrrS/MG69vsTk
A0BAdif+792wv8ls08Gs/QNAwOqtzuZjob+cLDbCyQAEQIAu4JeNe56/cOyY
wuYDBEAAyjdoUR2avxZsXsMgCgRAgJr2LgA+kb9ia+nElBYEQABgvhxgvlA/
/Gn/x3wvBEAAI0uim+WjPy9nK85MYQRA4HpGWDR4vz/eaR9vrWQEQEBpZS/4
g8A/jGwTEA5oBEAgvGlAek3BP+lx+1HPbgRAYM4uymXlwj+jfMvVUXwEQLCh
1rO3KMY/F5Jr3VaXBECAEyAYBfzMP1KLkL9mpwRAsP7vygad0D9S4eCS
              "]], 
             LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAABMrEle6tBEDYbDEIvX7RP66/n43B
0ARA9P2JuNhg1j9cwpMuItQEQPj3KxYi3tY/ucd7cOPaBEBsKVRTx9rXP3PS
S/Rl6ARAwCPZoDHc2T/n5+v7agMFQJzYf+8P/t0/zxIsC3U5BUAeO4HEO1jj
Pz5tbembPAVAjh/xByib4z+ux67Hwj8FQOgRdFFG3uM/jnwxhBBGBUACc/bX
FGXkP0zmNv2rUgVA1uDoLNp05T/KuUHv4msFQA7WE8AFnOc/xWBX01CeBUC8
OTG8IwDsPzS7mLF3oQVAREQGTf1G7D+kFdqPnqQFQBXTizHgjew/hMpcTOyq
BUAynw0kvBvtP0I0YsWHtwVAIApYPaI37j/AB223vtAFQEbmOo1oN/A/p+Dl
FLz8BUA4HuzKFSHyP/vvkfY=
              "]], 
             LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAWR8a60MDBkCYpBzJv2jyPwZMVRqX
BgZAUDX4xRSN8j9R6SeZAQoGQKDwvEhRsvI/5yPNltYQBkAMyG1rf/zyPxOZ
F5KAHgZA/jWn/pKP8z9rg6yI1DkGQDYm+9Wyr/Q/G1jWdXxwBkAIaaL8y9D2
P2b1qPTmcwZAq4kDIzjx9j+xkntzUXcGQOpKCDNtEfc/R80gcSZ+BkDDXhd+
LlH3P3NCa2zQiwZAU045BvbN9z/LLABjJKcGQAUeWdHku/g/FsrS4Y6qBkB/
jknSfNj4P2FnpWD5rQZAqE34I9H0+D/3oUpezrQGQJPFHgKsLPk/IxeVWXjC
BkAfQS7WGJn5P3sBKlDM3QZA4vcQskxk+j/mRAvYJuEGQI2qmJjxe/o/UIjs
X4HkBkCxq0GtTJP6PyQPr2826wZAoPEm0CPB+j/MHDSPoPgGQJwZXvhLGfs/
NmAVF/v7BkBsBm8qmC77P6Cj9p5V/wZASWFh1pdD+z91KrmuCgYHQG0rnpCw
bPs/Hjg+znQTB0BQ584kQbv7P4h7H1bPFgdA31bXpCLO+z/yvgDeKRoHQG7l
tPa14Ps/x0XD7d4gB0BYNXmH8QT8P3BTSA1JLgdAvqrqorlJ/D/CblJMHUkH
QD80abyFxPw/LLIz1HdMB0Cpo5ZPfdL8P5b1FFzSTwdA2sMqeSbg/D/8NTtq
EVIHQARrzh8h6fw/26DzMg==
              "]], 
             LineBox[CompressedData["
1:eJwVVH0012cUl98vz+Nl5bUU89ay/LAOI9HRveZsUd6yjLJK1C9ZJfNrhJXV
0KG8FkN5aYuTIRG9WogyeevlmMSWfiixwsjI87Vnfzznns+599z7uZ9772Mc
GOq9R1FBQcGVv/9tuSwUs/0IOruxNpkiA+3Er5PGgwj27DC6XGPO4Gibo5bb
XoIP4kIkYMfglbphblEI9986fSbqMwa1Wf0l/mEEH1ptsVH1YyC9KG1pOkpw
TfnvUznHGHS+2uBtdJzg7vactQ0nGThYmPVExRGsmXe6mJfGYHHVyPDqUwS3
q4q/irzAIOpda1hiCsHKv0tdvythMGBfPjOQTvB2i0+zpJLB9bpDyjnZBBWV
dKev1zEwEXunTZ4jeC4uPDzjPoNTGz5d5lnA66+o0DBtZ7CrfWqVuJigzc8W
Ww/3MGjV+KNiRwnBqukmufVzBmt8rq+9UUZw8FaVe8kgA5XeKJeDVwm2WOam
Nb/l/ohLH6RcI/jxOgsPk0meT7P70eWbBGdTvyjAf3m9MqWfOmsJJuwyGVsx
x/m52G4fryPo6i2/2DrP+cuDTDQbCTZaZ5mtEwmw+Fj6S+v7BPsdbeWhSgJI
q9+GydoInuj2umCpJkC6l4Hd2U6CEaGHE64tEqB2xG2u+jHBsYFEf2UNAV7F
R9d3dRG8G5KcvEJLAG2TkvjppwTVJKapSjoCQG33Jt0+zienu7NyiQAhfkTD
/jnBuXud91bpCpD5j23XVjnBjf7Jw8HLBKhP3p0bNUTQ3Hz+cvhyAUbNMgJy
hwm+fnE01VVPAN2m+pW3Rwm++KtLYYRj54Cx171vCVbrDEX66Qtw8L1BBZsg
qG2vKEvnOCfT/bDBOx7ve35/NsdNVjEOMEPw2v6BvgMcj7WWzO+cIwgd1c7q
HOsHP22MnSdoZ39j2Q88v4uIJhYqUtyyr/T+I84nPG+NZ8NCisr+qmnTnG+e
/R5tOaUoN83LHOX9tDzJeCpSo3iy5k+fyqUCvAttyPtoMcXo6A/BlfdvrDoe
9LkmxS+H+h5f0RbArcjQTKpD0bzpTcaopgCRTh5v4nUpxlmrCTPqAvzSG1NV
rEdxMvB5Sg/XvyPi18hmA4q64eJ7yXw+s5o9jsPGFD1tF+gvVRHAtJyKVFZS
rJz3VJMRATa72jVLVlG8c8RfvUgsQMzAntObzCmKp/QKyxYI8Hj53aWnrSh6
REzthfcMhOrx3jIbiqsvyQpbphlINhtdaLejeGXi2T5Lvm+xCd9bqK+n+DJ/
W0H0KINPJu2cMjZS1Kwot3R5xmBbilTpqjvFel9R9PkuBnGSsw+eeFHc6Fvq
2P6QQW/AhM8SX4rrD1gbNvL7SGwrDckO4nq5nxlexO+pJvjZ6ptSige/VTnu
XsqgX6Qy1bOP65EvkX5TxGCtw95j+ocoesk6Fm7IYTBYZHwmP4bPZ7pAKymW
weiP/TOiWIqhCTaN648wmAgs3Bl8guIBM4/ozjAGCobG5laJFH/bleSSGshg
eZZRQ0MWxVlxXF8a/z82J6XekRZTrBuYHQnQY/Af8tsfTg==
              "]], 
             
             LineBox[{{3.084927721088435, 1.815021859463714}, {
              3.089008971099854, 1.8095593006616615`}, {3.090665307805849, 
              1.807300651748442}, {3.093977981217838, 1.8027138021119915`}, {
              3.1006033280418164`, 1.7932755208351596`}, {3.1138540216897734`,
               1.7734478951925505`}, {3.115510358395768, 
              1.7708892092680608`}, {3.117166695101763, 1.768314184609406}, {
              3.120479368513752, 1.7631168416827003`}, {3.1271047153377305`, 
              1.75254462652177}, {3.1403554089856875`, 1.7307804260676476`}, {
              3.1668567962816017`, 1.6854332807452306`}, {3.248405612244896, 
              1.5418145976378748`}}], 
             
             LineBox[{{3.2515943877551003`, 1.5363128668591857`}, {
              3.2688429327193225`, 1.5069194982490897`}, {3.271874366969561, 
              1.5018149471502644`}, {3.2779372354700382`, 
              1.4916654711575204`}, {3.2900629724709924`, 
              1.4716177412184097`}, {3.3143144464729013`, 
              1.4326095248586201`}, {3.3628173944767186`, 
              1.3593638880830872`}, {3.3644621002807877`, 
              1.3569964004184445`}, {3.3661068060848574`, 
              1.3546366234918161`}, {3.369396217692996, 1.349940198260362}, {
              3.3759750409092737`, 1.3406398071234875`}, {3.389132687341829, 
              1.322408288926051}, {3.4150722789115644`, 
              1.2878936377850856`}}], 
             
             LineBox[{{3.4182610544217686`, 1.2837796944971076`}, {
              3.4711476385766673`, 1.219501495821381}, {3.4742167112161755`, 
              1.2159918428075567`}, {3.4803548564951923`, 
              1.209041918628968}, {3.4926311470532254`, 1.195414881765461}, {
              3.517183728169292, 1.1692385744385931`}, {3.566288890401425, 
              1.120773578432886}, {3.5679524154001294`, 
              1.1192154315752565`}, {3.5696159403988332`, 
              1.1176624779529403`}, {3.5729429903962417`, 
              1.1145720417782554`}, {3.5795970903910588`, 
              1.1084522936935801`}, {3.5817389455782314`, 
              1.1064995527632955`}}], 
             
             LineBox[{{3.5849277210884356`, 1.1036075705634478`}, {
              3.619521690359961, 1.0733560468050252`}, {3.672754490318497, 
              1.0304373757352554`}, {3.674307845832886, 
              1.0292446190278046`}, {3.675861201347275, 
              1.0280550253143241`}, {3.6789679123760535`, 
              1.025685257265191}, {3.6851813344336097`, 
              1.0209829164974726`}, {3.697608178548722, 
              1.0117232327775034`}, {3.7224618667789464`, 
              0.9937545539935637}, {3.7484056122448974`, 0.975723413233109}}], 
             
             LineBox[{{3.7515943877551017`, 0.9735559468574947}, {
              3.8696351899804458`, 0.8994299746206855}, {3.9150722789115644`, 
              0.8734159113676929}}], 
             
             LineBox[{{3.9182610544217686`, 0.8716308438963352}, {
              4.074026787371984, 0.7887709645966567}, {4.081738945578232, 
              0.7847991275687544}}], 
             
             LineBox[{{4.084927721088436, 0.7831579218850725}, {
              4.2484056122448965`, 0.697480975396874}}], 
             
             LineBox[{{4.2515943877551, 0.6957320055942258}, {
              4.383855279967578, 0.6174791086792849}, {4.415072278911565, 
              0.5968756083807553}}], 
             
             LineBox[{{4.418261054421769, 0.5947146965000017}, {
              4.581738945578231, 0.46757219531248345`}}], 
             
             LineBox[{{4.584927721088435, 0.4647447393168623}, {
              4.686348598577197, 0.3676076392208605}, {4.748405612244897, 
              0.30161764105667993`}}], 
             
             LineBox[{{4.751594387755101, 0.2981044881959073}, {
              4.890171541989135, 0.13618766016339282`}, {4.8918876100511675`, 
              0.13409307107602925`}, {4.893603678113199, 
              0.13199691754742524`}, {4.897035814237263, 
              0.12780001349841125`}, {4.903900086485391, 
              0.11938848977660675`}, {4.915072278911564, 
              0.10565094024498307`}}], 
             
             LineBox[{{4.918261054421768, 0.1017200448908752}, {
              4.945085719974159, 0.06850507541048553}, {4.946801788036192, 
              0.066372496813282}, {4.948517856098223, 0.06423913845976573}, {
              4.951949992222287, 0.05997018203550594}, {4.958814264470416, 
              0.05142401023832959}, {4.972542808966671, 
              0.03430424855070419}, {4.974258877028703, 
              0.032162197648680564`}, {4.975974945090735, 
              0.030019768234307066`}, {4.979407081214799, 
              0.0257338743787977}, {4.986271353462927, 0.01715865295261425}, {
              4.987987421524959, 0.015014279432225806`}, {4.989703489586991, 
              0.012869729094215878`}, {4.993135625711055, 
              0.00858019893191557}, {4.994851693773088, 
              0.006435269615885486}, {4.996567761835119, 
              0.004290264484266727}, {4.998283829897151, 
              0.0021452085207591446`}, {4.999999897959183, 
              1.2755102085352696`*^-7}}]}, 
            Annotation[#, "Charting`Private`Tag$224337#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwd0mlM0nEcBnDSNDWl6dyyZvHvMNOoYS3sRfq1kHQdZs1MK60xGpIHhmke
zFbNLR0Wnlkh4hEmaoEwtVZOl5mtLEoNz7JmSYlySB5hx+/ni2fPPi+f7dnA
4h0/b0MikegouMuzWfZ+7KzAssAbBWMwAZ29xOGTRDQIdsjysf91tV0nCC4I
JKPXscmFzQqnAT4QQlUadnl7PsWOyIBL1KNx2FQD++Y/zhUQ2GWdwh4lS/4u
aq+B1F4Whr1Z5kj/bc0Bj4pxJnZCQGriHCUXHHpNQdiqvrEaC0MI82G0Jf+O
Pzxi4tyCNxn1DGzpspHcOWYBuOd4HMIO7inwmtUWAlWgPYGtKwvpsHCLIeiY
hYUtZP85M2Mtgagf3hexaTTVvCn/Nki3DGZj91rjio2UO+BsWpeHnfZyPc2g
vAvdAU9F2GuL+l5PMcSgd9+25LbYPI6+vxxaS4pysFm+QbaTnAqIWHifiG1j
zXxnEUghqjhtaV/f2Il1FmYlUD92OWDLumjxM+QqGAlpU31GTm9Y+disrYLk
G6v2Yx8s/G5vllZDa6jXo0/InukdESZuDTgwN82OIk/HiKuMO+9DQ8CEK3Y7
47LRYL0P7tOOf4aRC32OBxo6ZRBuM6YcQmav2i6czq8F6sos30Fk+q8VQ1OR
D2AxWX5Oi7xi+Kv3FKUOLOzFI/3IA+3PUvW6OtBo2iY/IMtlZc8nlXJ4wCTt
0iALhCmuk5n1INKJPHuQw/hhZ38yGkARa1v5CpmI8mn84dwIe1oaW18gmwOW
W3X9jZAQIT/dgf+16XOoTvIQnHsHrj5FLnV8UjrBeQTFxk8bW5DVlw/yUzwU
oOf50JXI4p/+a2YECnizqG+SI+fEeLXzvyhgwMVbVI2cpHHjmJlKCH4h6byH
fJJBIvPlStij+XagCDmoeUptIjdBd3C0Sx6ym7jbxqRtAsLqD6nIVnJzXfJe
FUj9Yku5yONXq8ONUhU4J211jEHusYjmeHZqOFe7IDyK3MzJlhi4aiAi7Vbv
Q64Yimfy3qpBHxou9kN2uuBq1urVQDu0u5WK/B9iO70z
              "]], 
             LineBox[CompressedData["
1:eJwV0mlME2YcBvAiZmMwEClFIBHCRHCsNJkDplz/jilQQEIc6xiTc9DCLErd
hhshMVMOxSrHEMFABsQZGJXDlRYolLa0HD1pyymHdhibQbnWvmNmQPbuw5Mn
v8/P45N99WLuIQKBQMX5vyOpjf364T4YTNF6PZxH8OkTH2NBJh/KN5tM5dhk
jyO3N2R8IFTOOJVgHxz8OWO+JwBxl31aDraJPVfC+ksAFyll17/AnnolO2Gm
98M1NXuWht2q+IW97j0A9EeSGDK2taEv4AVnAOq9o9c9saOZylX9mwFY+WO+
1g7bbLv7+aBhEMJd25Uv5xCA/t0jXVQhJHzLjFdi17a8N9H6VAiJ7uFcHvaZ
iMTQOxVDEOcVuHEL+65DjqXEOgQHTW7CfOyVhR+5hVnDkCzsOZ+IXVr0q1dK
mAji1J2Xidhz54Rz8e0iIG8GWy2zCAKIumogjQDfW0Y0YE917x3y3xqBkGn2
DgfbBd5Jd6SIIXbPv4mJHeZXF1qRI4ak+84CKvZ9a4elWCcG/tfbpM0ZBP2L
QVPWtyVwibd3XoptlI5wr0RKgFLDENVhB9XM5GZ3SsBsXc4Iwk7/ITNqySgB
7uWq72ywKzLWvejuUmhPNLWrphE8D7SZp5VJwTOaFpOGfUNBjvswYxS4yuaP
GQYE7b0Cv84Ho+Da2+Z3AlvfEGV7UjUKqRf6jct6BL7MlCH3szJgTDfWJGAr
bEspBKIcvnkU8tRRh/dZc3Iopsnh75UDnWAKwXF9o8lyQw6vIygFGdiFLd0t
JrMc9q7fXHyiReAWseiiHRsDZ3ZBHkmDgOrL2IrdH4PagQPn39QI8h12lNKP
xuH1Q5+FMOyhhbfK+C3jkEm93URXIcguOr3bXDwBV47yRUwFAk7asOFY7wQM
Zg2dfjWJoO9cbE+NaQJYjMCradh2xPT8suRJmHbUkaInEHR131lkURRw6uUn
a5tyBGsua5y4LAWwyt53+grbvygu8lSdAipDSB4yGYKWcIfW1TcK8D27LeaM
4j9NchipciUs7TNzdsUINOSNY2f+UYJnj72Khu1QfWGS9IEKGAa3mYYR/B+6
E1lXrYLZL206yCIERatVOzGX1MB7/iAvQIjgWfR228kqNSwtG9YzBxFsdSQl
20rVYI5MUv08gCCv8KhA5K8B0b/f39oUIHhsYOc1pWqg2JtFc8M2hug9iu9p
oL4tND6UjyB1v7Yk2KKBhjy6sYiHoD7TEkj004JdaVBu1e8IDKOfvdhO0ULs
ccfDj58hcPbnVWvuaqG8eaSP14sgodI1iivCJgRfk/Qg+Mk+PVGi1ELy4fHw
m9j/ARyhJHA=
              "]], 
             LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAzvrQWB8a0D/G6UbBCRYAQJ8Ly4MR
RdA/vhK56DoVAEA+PXtcgF7QPwqh5sq9FABA3G4rNe930D8Ek3m1PhQAQBjS
i+bMqtA/jZUHlToTAECRmExJiBDRP77YexcaEQBAgyXODv/b0T/+40IKdQwA
QCJXfudt9dE/fuEEw9YLAEDAiC7A3A7SPza+qEs2CwBA/OuOcbpB0j9ZtE6/
7gkAQHWyT9R1p9I/wGaa1EQHAEBnP9GZ7HLTP1YkWvKCAQBAAKL2utuL0z+A
EjwBxAAAQJgEHNzKpNM/yjHTxQIAAEDIyWYeqdbTP6t4osry/P8/KFT8omU6
1D8Uo+dmlfb/P+hoJ6zeAdU/q4nFp/bo/z+Ay0zNzRrVP0dWBRIt5/8/GC5y
7rwz1T8Fi/CXXuX/P0jzvDCbZdU/Rw315LLh/z+pfVK1V8nVP03Dawog2v8/
apJ9vtCQ1j/qTjLuCMr/PwL1ot+/qdY/drvnHe/H/z+aV8gAr8LWP4w0XynQ
xf8/yhwTQ4301j9MX+PFgsH/PyunqMdJWNc/hasruam4/z/su9PQwh/YP23E
/uD7pf8/hB758bE42D9UAOtVjqP/PxyBHhOhUdg/QLK0dxuh/z9MRmlVf4PY
P3kxkLglnP8/rdD+2Tvn2D9T+B/y+ZH/P27lKeO0rtk/Z+xvlZ98/z/gXtkI
wcnZP3CpuKqfef8/U9iILs3k2T+/U6VZmXb/PzjL53nlGto/bi5Zfnlw/z+r
RJef8TXaP8raVvFfbf8/Hr5Gxf1Q2j9Lc2X4P2r/P5A39uoJbNo/VmFfkhln
/z8DsaUQFofaP/VWOL7sY/8/46/ZUYuQ2j9QLSf+zmL/P83bSYw=
              "]], 
             LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAcaV7A8rE2j+139K2IFIEQFsdtIE6
2No/AX9t5SNRBEDOlmOnRvPaP1Jl1czBTwRAQBATzVIO2z/xojT9XE4EQLOJ
wvJeKds/DspjdvVMBECYfCE+d1/bP8DiyUIeSgRACvbQY4N62z+vueeVrkgE
QH1vgImPlds/ZkGjMTxHBEBiYt/Up8vbPxk/N0NPRARALEida9g33D9LqwXT
VD4EQMETGZk5EN0/ySjU6d0xBEA0jci+RSvdP27y2+RCMARApgZ45FFG3T9A
D2UupS4EQIz51i9qfN0/Rg/mr2ErBEBW35TGmujdPwamVoO6JARA6qoQ9PvA
3j83cX1D7BYEQAohhCffOOA/CTeVelj5A0DIPJEvfkXgP6aO8HGK9wNAhlie
Nx1S4D8j1ck1uvUDQAKQuEdba+A/6udlKRPyA0D6/uxn153gPzTx2+6q6gNA
69xVqM8C4T9BrjF+c9sDQKr4YrBuD+E/35DkDIPZA0BoFHC4DRzhP98T9ISQ
1wNA5EuKyEs14T8IGEs5pdMDQNy6vujHZ+E/wEow7bXLA0DMmCcpwMzhP7S6
QWl2uwNAirQ0MV/Z4T9hYdyOZbkDQEjQQTn+5eE/tnM0wVK3A0DEB1xJPP/h
P3n4yFUnswNAvHaQabgx4j9N2HqDuaoDQHqSnXFXPuI/YPHOU5moA0A4rqp5
9kriP5UZzUR3pgNAtOXEiTRk4j+qESiTLaIDQHIB0pHTcOI/GK/C9QWgA0Aw
Hd+Zcn3iPy7fgoPcnQNA7jjsoRGK4j/74xQ/sZsDQK1U+amwluI/5EEqK4SZ
A0BCLUL+mp3iP1oucixSmANA6kAl+w==
              "]], 
             LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAACCgTV7q34j9TSlZGBQkHQKbDLcos
yeI/Ja0BeN8GB0Bk3zrSy9XiPzh3vUlQBQdAIvtH2mri4j/okPblvwMHQJ4y
Yuqo++I/jNYahpsAB0BcTm/yRwjjP6OCK44H/wZAGmp8+uYU4z9IbARpcv0G
QJahlgolLuM/xkt+n0T6BkCOEMsqoWDjP5wkUUvb8wZAuTcdtU5u4z+S5WuB
G/IGQORebz/8e+M/JJAqalrwBkA7rRNUV5fjPxLH0F7U7AZA6ElcfQ3O4z/q
ZE0kueUGQEOD7c95O+Q/ZlwDqUjXBkD49Q91UhblP+ZF0ZiUuQZAIx1i//8j
5T8MdiXasLcGQE5EtImtMeU/6Da3Lsy1BkClklieCE3lPx6Oah4AsgZAUi+h
x76D5T/EMXFyXaoGQK1oMhor8eU/WgHfxvCaBkBi21S/A8zmPzfyxUyRewZA
CpvhbXHZ5j+IRmeSn3kGQLJabhzf5uY/cBwMWq13BkAD2od5ugHnP64PO3zH
cwZApNi6M3E35z+amUlm9msGQEyYR+LeROc/EY4dFgFqBkD0V9SQTFLnP0Qs
uGELaAZARdft7Sdt5z8EuCrZHmQGQObVIKjeouc/CiFzo0FcBkCOla1WTLDn
P1D654tJWgZANlU6Bbq95z/m0/opUVgGQN4Ux7Mny+c/0u/mgFhWBkCH1FNi
ldjnP0CA55NfVAZAMJTgEAPm5z8knTdmZlIGQKKCl1Pw8uc/af+k3X9QBkBP
gQBp
              "]], 
             LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAaH1orA8N6D/AYdb3kIcIQCjThhxM
Dug/gB5urnqHCEDQkhPLuRvoP5VZpIqIhghAeFKgeScp6D8YwcpcloUIQMnR
udYCROg/lQO+6LGDCEBq0OyQuXnoPxdfBMjofwhAEpB5PyeH6D+0KYR89n4I
QLpPBu6UlOg/1oWWMgR+CEALzx9LcK/oP3SEPKkffAhArM1SBSfl6D/c8fbo
VngIQO7KuHmUUOk/EH7M88dwCEBxxYRibyfqP/eH6yW+YQhAHuRGBvYz6j+w
oZnk3mAIQMsCCap8QOo/pqrny/9fCEAlQI3xiVnqP3w91BhCXghA2bqVgKSL
6j/Ah+HKyFoIQEGwpp7Z7+o/WqhChd9TCEARm8jaQ7jrP8qmI9s5RghAvrmK
fsrE6z+jierHYUUIQGvYTCJR0es/NMOM/4lECEDFFdFpXurrPy9ieVPbQghA
eZDZ+Hgc7D9z7WGqgT8IQOGF6haugOw/bmE/9d04CECOpKy6NI3sP+RcqggL
OAhAO8NuXruZ7D+1dOt2ODcIQJUA86XIsuw/DqrRZ5Q1CEBJe/s04+TsP9RS
KrZQMghA9pm92Gnx7D82Pki7gDEIQKO4f3zw/ew/Jm7pIrEwCED99QPE/Rbt
P4TNex0TLwhAqhTGZ4Qj7T/0502yRC4IQFcziAsLMO0/rhtlrXYtCEAEUkqv
kTztP36trw+pLAhA+tfsqEVI7T8TBihS6SsIQAAUA5g=
              "]], 
             LineBox[CompressedData["
1:eJwVx30s1HEcwPFzU/pqyEPX0oOcHi7E1RQd9fmiNotYVq4ZhuPmPN5FJ7W6
rc4R3dpEjE1YQ9PZTHJa5ui06ImbS7VGk2UXv6fbakbo2x/vvffyzSxKzObz
eLxDpP83WQYdsjMp4LsrB2MUCP80ez+KyqKgc2nNHE/MY3xHp1UU+GWXG64T
e+88vJivoUBy7nhTO3FItNidr6dAlNyltxAnFISG1jdSQC1otevE2uGzd4b7
KJgyWm8m5SLcvBj3JOkVBca6cs1tYuP2ix8XJyhoOeis7SamFJm7BEsUiCPW
H2zOQzjJQ9ObK6RB8kxtfk6sjNB92Qimwb+sd3KOuEqu36g9RcPrr7UzrvkI
D71oih26TMNIVftvObFIZvzheZ+GsLhGlx0FCK/0cp6DqzSYnFIq1YUIe80s
n0xEDNhl9WltxEFbeOkLAgYkztNHPhDLUlyfuh9jQCjq6TtQhPA7x4Az8hwG
9nfMp00RN1/KKnGzMvBHHdgfrEK49UbeL7GUhT0pxn5rMcJiE1quSGWhUNf2
+C+xybFz06yMhQYnWuNXgvB3/fw+vZKFXKuUpyLe25Iqtd1loS1H4rP1KsKN
5gRz60sW1kcCqsPVCPsjenJ5hAWhtPJEBvHA+XuzCWMsJEevjuuIP396s7Jm
ZYEfOGGYJBbYIo8mMyyEvbVdkJciXOMS0uwh5MA+WzpWdQ1hYaKlSyHiwOCQ
MdNN3PNQOWAK4iDUtG3aQjzhY5gqDOegzqq84l2GcHpW7NxoJAffOkq9ThMz
nTZmdwwH7W72hgziW1TFWnE8B1GK6g0tcavAV/OeeDxcZdcR/wOY8SOP
              "]], 
             LineBox[CompressedData["
1:eJwVznsslXEcBvDXtX4/C12WW45aOw7OKYckZWffL13EkZBU68xkQjPKspFa
zaUdWRpSa9UptK6rKBRSHVIYSqWGktuOhNL7/qymod7+ePbs88ezPStiDobv
N+Y4TiHmf5sVn5L37eVhbV2UZ1k/wfq/nFdnPA8/ox0G3AYJBm+66idL5iEi
wqF7WvTnXNX246k8jGRJepuHCCZ2fNJ8yOBBBZyheJhgXqRteraWh1L9G2uF
gaD9pUcne/N5mPBPc/8l+nZ/xFmPYh7OvTkU/nyEYEtC4f3+Eh6Sk7tKQkYJ
mh+lBt86HqLjemHfOMGsqzNhUxM8uCnHT+/kCYYqa1LkjIdGjdBkIRCUNBwu
jJnmodbU/I9edN3QWGenmQDaKJ9dLlMEBWnP9nsSAWL+eDWM/SIYc7d6W1yo
AM0lDimqGYJKVUqSLlKAtwMe3LDouQ5FfpdGgMlin2PaWYIXJ6+1+x8Q99ku
6zrmCL7zLFI7ZQlw+YunTm1E0a82ObC7UgAb/d6wxeYULYPcDljVCVClndtw
U/TnXkPuFr0ABXfkxhvmUUyf0bRUtQswy8VJNfMpVoA6oNAgQKhRyPUiSnH5
K9nmIBsGEpn0abMlxR+Rw7GZjgzKzjy0DrSiWP/1Sk7NSgY3dPI1raJ3k6VN
zkoGV0wjB19aUywINt1oEshAreFbKxZR5N4PYH0GAz9JMA1eSjHn27PSjEwG
fWlM/kI04XTG63MZ8CrXjz42FBet2tNUfY5BfZ6J3smWolT7NqC8goEJLmn/
ZEfxjq78VtJjBl3OzUsC7CmursonimcMzic96KsQ7TMY2HarjcHPNruJEw7i
398yRfw7BqmSIneDaD9L83xpD4MLQd6TW5dRDPJtDCkbYRBbadZv4UjxdVhJ
efR3Bvdl3gsSRe9IOG7tNMXgyejlyhbRIQ1trunTDI7U+A4ulFD8BxccQ54=

              "]], 
             LineBox[CompressedData["
1:eJwV1Hs01FkcAHBabL+IjrSkSaGdrEcoJdX2/VmPjT2JMaQHq+w0p4dHRTHy
GHlMj23seK28TqFaQk1Wq1anGZU9U3ZlPRLKwdKJUfS7P5bFfv1xzz2fc+65
3+/93vu95ocjeYJFGhoaPBwLs3ynU0eGDgMyRYW09ixF91WabNq/mIHLTq4P
etECJZtlYsBAvU2ZMDqWoiM+yANyOAyMd4XfzI+j6Antn+r8LRm4I9RythJR
9FlOpLGhNQP565wMatHJXjZdV5wZKE9+mdUYT9FZpaUHJTwGJrelNikSKNrk
gbjBcx8DHf1BMdsSKbqw5Xsz7VAGbHe9Cr2DvjG7qk8czkDmHvFIVhJF/7Y3
OyxewsBARHqFi5iid0SceuIiZWCupXptIVqR6vvlVA4Dube1VDNo1V294ehS
Bu43ce7KUyi6RzftWMQjBnpSrlfNnafoUIuw57ZPGZhva873TqXof7a62o48
ZyBt+5qaLPSYYFYt7GKg5Sbfd3UaRZ8+1+3D7WNA+GtzVzB6SlZfMzjEQPho
bkYBWvNxzMlDDANtx/d9p59O0ekd/q1rZhgYjZoMcUMvUTtueqNJ4IqZvSwG
Lf1sWXbhYgJGrZ0DZWgj0zFmvwGBC2oV7yX6Z4cXASu/IFD3eqB3Gr3624q6
Tg6BkaUaqeYZFH09WGKca0lgFTXv5oHmRh+J5VsTUIYoOUfQdtve+pc4EDjK
l1mmoJ00guzfbyEwfyD8WgF6+7OWJZu/JvCmJjJHjv7mstdQkhsBrXX3556h
vXhKhcqLgK9VWM8rtK/J9qIVvgQaVNl279B739yLDQ0k8Et9xDiDDimz5Vce
JGDouWL9PFpwrNyePUxgUFDdrCOh6BMOZrquRwn41R0a1EWfZnOHLkUSWJMY
dEwfLfrdQNkRQ2C2piFkweIUSZH5OTzvaMPjhfWSXZpxJ1II3EjPkC7sJ9UX
8e9LCEyLvVVzGC+3bcJ+kZSAa/7WqIV8iq4e192dQ+DVzrTkYXRZ6OBQXgGB
iyWC6U50JTdY2X8N45cv632Klo+2F9ndItA+9Wj9XXS93CcutprAkHZlVz76
cWwTv7EW6/3fsokkdNNO2kH/IYHg1g1RYeg/tep19ykI7PFy93dHt6sch0ub
MH+17KoFuiezQjnWTGAtJ8RjDu9zINCy2KWNQLzmCK8T/Z5TGJf6mkBfSbKy
Cj3ebxTwVx8BuxZhlhg9detHB9NhAjPuI094aO3NScM1nwgUGM94qvH96c1M
Kqf/JfC5Eze3Dm2oiCr20GCh0djGLQG9dvfhgG49FlplRrWL0OuXdztwl7Ng
xL15RoHvfUOXv97JlSz4JEZmJ6B3CDwadbgseLYZvlVjv7jZPCr2s2VBJqxc
ch3tPb5FVLiRhQ8fmSv+6KAEK8eNwML7cZuSauy36BzdkuAgFjwsZc3u2I/x
B1JFt0JYMJ3Wqx5IpugU89mATz+wIFdK+5PQmVVjehdOsuCsTvK4g/2ed1r4
7u+zLByd6j7lji526Ws0S2RB4LN6oh3/h9tPX4pqL7IQWuU++BH/k3uXvAPn
M1l4kWEdKEI/8Gt09M5jIS+QGGuiFcY7luYUYT3irL9KO0fRf/TWvntbyoJF
ht8FHfTk8TNtFmUs8E0fOmui/wdYfm5b
              "]], 
             LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAW+negDKx9j8iNZ4Hc1YHQOT1l1YL
vfY/opOy/RtVB0CiQTNz3cP2P0igJ65QVAdAX43Oj6/K9j9g65MegVMHQNok
BclT2PY/mhFYPNVRB0DRU3I7nPP2PxKbmFdKTgdAjp8NWG769j/SDLbzXE0H
QEzrqHRAAfc/ps4/SmtMB0DIgt+t5A73P0pPISR7SgdAvrFMIC0q9z8A+cl6
Z0YHQHz95zz/MPc/snna2VdFB0A5SYNZ0Tf3Pzj72O5DRAdAtOC5knVF9z8Q
/bM4D0IHQKoPJwW+YPc/Pl9qP3I9B0CXbQHqTpf3P0ZfQMRpMwdAVLmcBiGe
9z8WLglSFTIHQBIFOCPzpPc/Ut4pkLwwB0COnG5cl7L3P0ohthz+LQdAhMvb
zt/N9z9osexyTSgHQHAptrNwBPg/ksnAvCQcB0BK5Wp9knH4PyK7LU83AQdA
Rn0jrER4+D84WZ1ua/8GQEIV3Nr2fvg/tnTlR5v9BkA6RU04W4z4P1K/uyfu
+QZAKqUv8yOn+D/qzqicYPIGQAtl9Gi13Pg/oIpDe3jiBkAI/ayXZ+P4P7AC
f0No4AZABJVlxhnq+D9wzr7IU94GQPzE1iN+9/g/sJVlDB7aBkDsJLneRhL5
P8ZkMol/0QZA6LxxDfkY+T8Mpi5KTc8GQORUKjyrH/k/uNlmzRbNBkDchJuZ
Dy35P9rk5h2dyAZA2BxUyMEz+T8iWfbsWcYGQNS0DPdzOvk/zBPRgRLEBkDM
5H1U2Ef5P9TV6QB3vwZAyHw2g4pO+T/e1ELtIr0GQKMWIX/NTvk/5pR7jAu9
BkDTsRyi
              "]], 
             LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAB5SJK91b+T9uAVXZLPYCQLxEYA+h
Yvk/qMiQYWzzAkC43Bg+U2n5P6AHiUOu8AJAtHTRbAVw+T8KnRdT6+0CQKyk
Qsppffk/7MerAFfoAkCoPPv4G4T5P6pLqqGF5QJApNSzJ86K+T9qIzF2r+IC
QJwEJYUymPk/eDBTwPTcAkCNZAdA+7L5P/gsDglG0QJAivy/bq25+T/qZx12
Ts4CQIaUeJ1fwPk/2j33JFLLAkB+xOn6w835P3aIIVBLxQJAbiTMtYzo+T9+
A9QXBbkCQE7kkCseHvo/+mTedJifAkDMK+TUXCT6P1xqRG2OnAJAS3M3fpsq
+j8AROJmgJkCQEgC3tAYN/o/PAgWZ1iTAkBCICt2E1D6P4IC8d7YhgJANVzF
wAiC+j+iDC7tHW0CQBzU+VXz5fo/iPIC3cw2AkCaG03/Mez6P9Zvs1JIMwJA
GWOgqHDy+j+A97opwC8CQBbyRvvt/vo/TujxCqUoAkAQEJSg6Bf7Pw5atQZE
GgJAA0wu691J+z8MBkxz2vwBQIKTgZQcUPs/jq7t3h35AUAA29Q9W1b7P9D1
Q+5d9QFA/Gl7kNhi+z9W2XIK1O0BQPaHyDXTe/s/Ho6SvJjeAUDqw2KAyK37
P5Rf41KIvwFAH5HYao60+z96RkzQQrsBQFReTlVUu/s/MtoluPm2AUC++Dkq
4Mj7P0qpJuNcrgFA88WvFKbP+z+wMn40CaoBQCiTJf9r1vs/VDenDLKlAUCS
LRHU9+P7PzCXrm75nAFAx/qGvr3q+z8I32AHmJgBQPzH/KiD8fs/Sq6MRDOU
AUAxlXKTSfj7Pxzozy3LjwFATMHLKXj5+z9am+75BY8BQIuhNYE=
              "]], 
             LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAsD401ocG/D9IuDIuKrf5P9D801Kb
DPw/MOEEtSyv+T8Gykk9YRP8P7jQNsI9pvk/O5e/Jyca/D/A2fClR535P3Bk
NRLtIPw/iPdubUqU+T+mMav8sif8P+yMLSZGi/k/EMyW0T41/D/kA6GiKHn5
P+QAbntWUPw/TB8PWJtU+T+MahzPhYb8P5jmPxJFCvk/wTeSuUuN/D98N8Xt
3QD5P/YECKQRlPw/ICo6tXD3+D9gn/N4naH8PwiyyE+E5Pg/NNTKIrW8/D8I
0Ui5Zb74P909eXbk8vw/PGH1biJx+D8uEdYdQ1/9P5x4KlQa0/c/5o3mgpVl
/T9Qo79jw8n3P50K9+fna/0/eC1Hj2nA9z8MBBiyjHj9P+RAYJGtrfc/6vZZ
RtaR/T9cA1mwFoj3P6Xc3W5pxP0/fJuXhoE89z9cWe7Tu8r9PzAeZwEHM/c/
FNb+OA7R/T/s92kOiyn3P4LPHwOz3f0/KJFURI8W9z9gwmGX/Pb9PyjMOvGK
8PY/HKjlv48p/j9YoymWZqT2P9Qk9iTiL/4/3CLbiOGa9j+LoQaKNDb+P3CZ
vLxckfY/+ponVNlC/j9gEJtbVH72P9iNaegiXP4/lLgPq0tY9j+QCnpNdWL+
P9Tl+trLTvY/R4eKssdo/j88cPY4TUX2P7aAq3xsdf4/XEjH+VMy9j+Tc+0Q
to7+PyCv0fV0DPY/SvD9dQiV/j/IarP7AQP2PwJtDttam/4/mPa1KpH59T+5
6R5AraH+P0AmOaMi8PU/+Gt21CKk/j+kls/+d+z1P6z2OFU=
              "]], 
             LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAXOnegDKx/j8AVUcmzdLpP5bcYNT2
uv4/qEPBpjC36T9OWXE5ScH+PxgDe0xYpek/BtaBnpvH/j9oBuOphZPpP71S
kgPuzf4/qKCY/7iB6T8sTLPNktr+P4Bgf5gyXuk/Cj/1Ydzz/j9QF3q3eBfp
P3hBKAi2+v4/0JaDr2QE6T/mQ1uujwH/P+gTMSFa8eg/wkjB+kIP/z84SgvO
YsvoP3pSjZOpKv8/aM/49PR/6D/rZSXFdmH/P0jdPn9r6+c/zIxVKBHP/z+w
Qt+rNc7mPzqPiM7q1f8/6Ixz4QO95j+okbt0xNz/PziFT3jnq+Y/hJYhwXfq
/z8YI9Vn8InmPx7Q9izvAgBAEOCN7gtH5j/W2cLFVR4AQHB2bQyyxeU/R+1a
9yJVAEBAUE2WxNjkP54Ug9N/WABAaFnS90rL5D/0O6uv3FsAQMjXvV7zveQ/
oIr7Z5ZiAEDocG/sq6PkP/onnNgJcABAeI/i3cdw5D9QT8S0ZnMAQGB18j9q
ZOQ/pnbskMN2AECYra4KMljkP1PFPEl9fQBAQOZHjjNA5D+sYt258IoAQHCL
B0AKEuQ/AooFlk2OAEC4+qrY4wbkP1ixLXKqkQBAUKRgROb74z8FAH4qZJgA
QAgnVktn5uM/XCemBsGbAEBwa9DB5tvjP7JOzuIdnwBAeNLMwZDR4z8Idva+
eqIAQPAZ7rhlx+M/Xp0em9elAEDosNQUZr3jP1GLkL9mpwBAOHctItK44z//
Eh88
              "]], 
             LineBox[CompressedData["
1:eJwVUns0lGkc/ma0K3Lc1WxTdlKKNblMamOt38duFxWFlN1KaCat0CbbbkVN
SmRsdWia1qVFSRaxERHb+31zUSZZuqylhNZUypwuaxVp9tcf3/nOc97neX7P
83vfWdE7QiRciqJC8PvwN2pVyfWVFB3J329L1ysh0kbhpq+i6L7Q/iBFsRLq
va9NWVlD0bRU+n24VAnm0Y8fl9ZRtGD7FBsmQgnioxaqSY0UXViW2Nr5pRIs
uzYn/0HwvGqSZnSCha2G9HC+Cv1WRLibP2ShaW61508teB72YPw2YeG7H6hh
j1sUTTVrJ3YdYYHkO9041oF5bv+2LjiWhamqNSXP7uD8oj1h/wSxwFoXbSrp
oWjpPd4hj+ks8LxveHEfop94WbueYiEh6qXd5gH0o83exTxhgF/td4v3FPWx
Wc4nGxhIChzwzfqPookrxTWIGWhNMuU/fYt659Y0TTADgnzR6JIJ7FMwa9E6
YKBtKLXKYMShSco3rndmMDDHuly20ZhDFxZ/mqw2Y2Cv1+2YBlPE5+Zx0yYI
zM2YLdhlxaHp9PjapH4CyVUr37Xbcmhq6mBP6R0Cnfd2dQl5HDpyz5hH1XUC
Tu/zao/yUR+pcM9qJnDAUXVCZ8+hBYl2a+gaAvdWPY/7yoFDS5NFxm1lBIRJ
tgGFjojPTNIuKCKQmufjOOGEftv15rt/IdDFijnfCnHe5Jyv5dkEXvh1T09x
Q/xWPO11FgFjZrVnoQjnPWgpsMkgYE+rA5ULOXSfVZph9BCBRde8Y3SLMT//
RXSRlECQb7XUxAfzLOx9brmfgKTZMVcIqO8pIMuSsZ9PXs1qf9zPWr1h6T4C
J69atiUuQT+v0VYLxBXeR3Ty5ajHKziLWNkwbriyEvkHS5O5KQS6F+/85H7Q
h31tyHM9QOBVvU5kCEb/kD8vO6USMPl84yqHMOS7XHn0Mo2AoK5DsiQc8fCY
tyyTwOKFyw5s24D605XtI8cJrK5tOi2LQP2ASa3oFIGtC0SXLkZhnk7JG/8C
AvsvlWo7xMhf71I+r4SA3GPm4L8xyB9s7+qvxLzV2e+nbcd92t+UJdYTULlN
5n2RgPtOyrnZzRDouZjiEbETcY+siN9GwLRym/jcj8iPFU1z0RFwEPamtOzF
vjvsG8dfE/AqD1UMpSD/+vmRC1wGtpX5trofxvxXHjsUODAgdap9FJqO/PNO
H+kWMKAodZ7YnYl5Iz+OsljKgKbE1r35BPKnzw40jmegd05mQF8O5td4XP3r
IAMjZw3RRgrk18VFZCnwfRYPyQMK0C/BYbBEzYDPrMiquELUe9Zlm/UyEFp4
9/rxs6gnp002jDKQeoaM3y3D97HHT3tJyELuzEV2byvw3CxR27ychd/zy11n
VCMW1BtqJCz05Z6Kiq7DvqY3gyXFLPgq4lr0LM67VWb/aq4S1k0d6LPSYJ4w
dm38CiXEy9ePed7A/jXDlt0JSsjP8Z+/rx1xNNdc1qiEseO8HOP76D8+ard5
kwqsLY5VfPYQ9cZa2d4MFTgfM9IEDuD99Kfa/1yrgvAs/ZucJ4jDT7nkWqhh
xxSxdf0zzG91WCf3VcORzL9duvWo70gAWYIaLmeoIgQj2H++jbOkQw0XVmh5
6W8w/5aa7F8nayDXrLNzeBzz87YIuX4aKO0btG16h36uRkMZQRr4H34GTsA=

              "]], 
             LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAWR8a60MDAkCwth0Edh3Mv3NS5gAi
BgJAsN23lOnty79mFO26iAkCQBABr85+tMu/TJj6LlYQAkCA/JpsVz7Lvz9a
Aem8EwJAICIbEZoBy78yHAijIxcCQJAXInjAw8q/F6AVF/EdAkBwMS1Lt0TK
v+KnMP+LKwJAUNs5ZkU5yb/VaTe58i4CQEAihFme88i/yCs+c1kyAkAwTLAY
2azIv62vS+cmOQJAIJlYZ/MbyL94t2bPwUYCQLDkpm+47Ma/Dsecn/dhAkDQ
e5I+f1jEvwGJo1leZQJAcNld5e4AxL/0SqoTxWgCQBBNiH1AqMO/2c63h5Jv
AkBwv8FFivPCv6TW0m8tfQJAgDpFs758wb865ghAY5gCQECWDXTfs7y/ZgV1
4M7OAkDAEWAHbgqtvxofydf70QJAAP5LH8RAq7/OOB3PKNUCQAACSrRqc6m/
NmzFvYLbAkBAMc+Es82lvwbTFZs26AJAAHUMh/usnL+loLZVngEDQAAcSuI7
SWQ/WLoKTcsEA0AAbvKjWT96PwzUXkT4BwNAAFjUIhA7hT90BwczUg4DQADA
iHLZzZI/RG5XEAYbA0CAAsiCvMChP+Q7+MptNANAAOJh7qOLsT+YVUzCmjcD
QOBQyVSMqLI/TG+gucc6A0BABkQVGcezP7SiSKghQQNAwBWH8xcJtj9ovJyf
TkQDQOC55C6GLLc/HNbwlntHA0Ag8Kb/kFG4P4QJmYXVTQNAoBBYcnSguj84
I+18AlEDQACokxNJyrs//DU7ahFSA0CAnuMk5C28P5YhA5w=
              "]], 
             LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAArnRvQJlYA0BYYT5pe3vQvwiKPVq2
XQNAAOLXCWYI0L+8o5FR42ADQJCmu5rrgM+/JNc5QD1nA0DwaSDhBV/Ov9jw
jTdqagNAoNidrwLNzb+MCuIul20DQNAAFVJLOs2/9D2KHfFzA0DQEXBAxBLM
v8Sk2vqkgANAYIJmSXK7yb9jcnu1DJoDQBCqkxiv7MS/NjLetSmdA0BgvNmr
/lLEvwryQLZGoANAwEk5n7G4w7+wcQa3gKYDQNBR7dRFgsK//HCRuPSyA0Ag
LjPoRA7Av5Zvp7vcywNAwEyK3BUVtr/JbNPBrP0DQAB6lCWddnO/nCw2wskA
BEAAIEljgYU/P3DsmMLmAwRAAGIprEGPdz8WbF7DIAoEQIB12KyXupA/Ymvp
xJQWBECAtmkMNkqjP/xp/8d8LwRAgBcSq0W8tD8vZyvOTGEEQICelDfUwcU/
3mkfb61kBEDwfLeD4IrGP4xsExAOaARAIBSFCFJUxz/pcftRz24EQJAZMjZf
6Mg/o3zL1VF8BEDQwlTG+xTMP1J/v3ayfwRAMIAPcwvhzD8AgrMXE4MEQID1
iHF1rc0/XYebWdSJBEBAOW4MU0fPPxeSa91WlwRAmCGC14c/0T/GlF9+t5oE
QEhKD2rmptE/dJdTHxieBEDgGuvibA7SPyKaR8B4oQRAaIZ0nRp20j/RnDth
2aQEQBjq4/Xu3dI/UYuQv2anBECYdkT9fSzTP4Hn+0Q=
              "]], 
             LineBox[CompressedData["
1:eJwBwQI+/SFib1JlAgAAACsAAAACAAAAA8rEle6tBECQGblFg9e5P9ykF0T7
rgRAEBGAGNtFuj+LpwvlW7IEQIABa8c+qbs/Oqr/hby1BECQBi31FQ29P+is
8yYduQRA0Pmbfl5xvj9Fstto3r8EQGDl25OdncA//7yr7GDNBECwrp8O9GnD
P66/n43B0ARAcAZWrocdxD9cwpMuItQEQKjTIKlL0cQ/ucd7cOPaBEAYRbul
YDnGP3PSS/Rl6ARAqHES0aILyT/n5+v7agMFQCiZaiyut84/zxIsC3U5BUDo
bVxrthPVPz5tbembPAVAZDMoo3dp1T+ux67Hwj8FQKgfW0dBv9U/jnwxhBBG
BUAUu6+J7GrWP0zmNv2rUgVAnC6PC5rC1z/KuUHv4msFQBQG+M4Lc9o/OhSD
zQlvBUB03fVRLsnaP6puxKswcgVAUCAbX1Qf2z+JI0dofngFQFgzmvWpy9s/
SI1M4RmFBUDwWqFGcyTdP8VgV9NQngVAQCUIGkLW3z80u5ixd6EFQMTxMUI+
FuA/pBXaj56kBUB0BbgbW0HgP4TKXEzsqgVAfMUyPpOX4D9CNGLFh7cFQHIi
IuL5Q+E/so6jo666BUDiWjvZEG/hPyLp5IHVvQVA5uwSgSaa4T8Bnmc+I8QF
QPbtrG5N8OE/wAdtt77QBUBO6TWjhpziPzBirpXl0wVA7pHo/4/H4j+gvO9z
DNcFQJzhCiyX8uI/f3FyMFrdBUDM2T2HnkjjP+7Lsw6B4AVAIK1MgZ5z4z9e
JvXsp+MFQIC/xuCbnuM/Ptt3qfXpBUAwoPBojvTjP641uYcc7QVAJC7FXoMf
5D8dkPplQ/AFQGK6TVR1SuQ/jOo7RGrzBUDgtMUwZHXkP/xEfSKR9gVAOICr
20+g5D9sn74AuPkFQBQRwDw4y+Q/p+DlFLz8BUDkrHHXQ/TkPzEISxs=
              "]], 
             LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAWR8a60MDBkAanv5DN6vwPwZMVRqX
BgZA9u6fQoSz8D9R6SeZAQoGQCDpRq0MvPA/5yPNltYQBkDAFiUrIc3wPxOZ
F5KAHgZACZgmTljv8D9rg6yI1DkGQMif8nD7M/E/G1jWdXxwBkCE8lmN+L3x
P2b1qPTmcwZA6G/GYp/G8T+xkntzUXcGQP9D9/RGz/E/R80gcSZ+BkDp4R1B
mODxP3NCa2zQiwZAfRsDFEMD8j/LLABjJKcGQL+XZpK2SPI/ewEqUMzdBkCW
lt13/dPyP+ZEC9gm4QZA+C7Bgozc8j9QiOxfgeQGQKRmTd0b5fI/JA+vbzbr
BkCkqwd2O/byP8wcNI+g+AZAbCOI530Y8z8eOD7OdBMHQEd5hWQNXfM/iHsf
Vs8WB0AbtkgeoGXzP/K+AN4pGgdAWgM2/DJu8z/HRcPt3iAHQKUGPRpZf/M/
cFNIDUkuB0BKHp2XpqHzP9qWKZWjMQdAnWk1Kzqq8z9E2god/jQHQGZjus7N
svM/GWHNLLM7B0D9v7U79cPzP4SkrrQNPwdAandLAInM8z/u5488aEIHQLOB
DMsc1fM/wm5STB1JB0C/eHlpRObzPyyyM9R3TAdA7GljONju8z+W9RRc0k8H
QASz9ANs9/M//TU7ahFSB0DB1LfGKv3zP5Ya4hs=
              "]], 
             LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAr3RvQJlYB0BnhtjPDGz7P9a/uPPh
WQdAGY5MOgNq+z9AA5p7PF0HQJYrIbO0ZPs/FIpci/FjB0Bbcz8SKFr7P37N
PRNMZwdAhoSf8ulU+z/oEB+bpmoHQGjJ40SxT/s/vZfhqltxB0C51fsyUEX7
P2alZsrFfgdAqao3384w+z/Q6EdSIIIHQINStvi7K/s/Oiwp2nqFB0DJ9jtr
rib7Pw+z6+kvjAdALFJ8TqMc+z+4wHAJmpkHQMpDfrLMCPs/Ctx6SG60B0Dg
TwMFG+L6PzZ3qQ2PtwdARcPftK3d+j9hEtjSr7oHQHeGJN1E2fo/uEg1XfHA
B0BLBH2LgND6P2a173F0zQdAyaDeDi2/+j/BjmSbeuYHQEePBSNYnfo/eEFO
7oYYCEBlMjd3GV36P6TcfLOnGwhAkhpxNDxZ+j/Pd6t4yB4IQLcw1PFiVfo/
Jq4IAwolCEAMlrdfvE36P9MawxeNMQhAisydqp4++j8u9DdBk0oIQO1aKxYe
Ifo/Wo9mBrRNCEAS5ltHfx36P4UqlcvUUAhAev/IQ+QZ+j/cYPJVFlcIQChj
TJG5Evo/is2sapljCECoPfMjkQT6P+WmIZSffAhA2bykVPHo+T/shOH5A4AI
QLFMj5lE5fk/8mKhX2iDCEA25M8XnOH5PwAfISsxighAOjoysFfa+T8G/eCQ
lY0IQK1+ScK71vk/Ddug9vmQCEBP4aH9I9P5PxqXIMLClwhA+Nsb4ADM+T8h
deAnJ5sIQMuSRn91yPk/KFOgjYueCEAgr8Q37sT5Py4xYPPvoQhAXQehBWvB
+T81DyBZVKUIQAb96OTrvfk/UouQv2anCEAkXIYpy7v5P6LMKuM=
              "]], 
             LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAABMrEle6tCECE0RE41c37P0mpX4qB
rwhA6Uj0dgrK+z9Qhx/w5bIIQNz8P7riwfs/V2XfVUq2CECLQDHbwLn7P15D
n7uuuQhARhQ81KSx+z9r/x6Hd8AIQNgwfjh+ofs/hnceHgnOCEChUIUvdoH7
P7xnHUws6QhAGKDUEHZC+z/DRd2xkOwIQC7/SyKvOvs/yiOdF/XvCECThta0
7TL7P9ffHOO99ghAe+DYR3sj+z/yVxx6TwQJQO0NP5HXBPs/KEgbqHIfCUBE
7GoakMj6P5QoGQS5VQlAshitB91T+j9cXian41gJQHBSS2c1Tfo/JJQzSg5c
CUBjxHoEkkb6P7T/TZBjYglAiFuu51c5+j/U1oIcDm8JQFr56+IVH/o/E4Xs
NGOICUDpLwpCV+v5P9q6+deNiwlASTFkpPHk+T+i8AZ7uI4JQGzYFwaQ3vk/
MlwhwQ2VCUAdHmC42NH5P1IzVk24oQlABETdbpm4+T+S4b9lDbsJQMl3+d/U
hvk/WhfNCDi+CUBY4I52rYD5PyJN2qtiwQlAlMsR0Yl6+T+yuPTxt8cJQN2D
ZsNNbvk/0o8pfmLUCUAd8ZI4Alb5P5rFNiGN1wlALnbIifhP+T9i+0PEt9oJ
QDIUQILySfk/8mZeCg3hCUCySdRa8T35PxE+k5a37QlAuhRBSBom+T/Yc6A5
4vAJQEOTJHEtIPk/oKmt3Az0CUDwyk4lRBr5P2jfun839wlAU5tMYV4U+T8w
FcgiYvoJQFacrSF8Dvk/p+DlFLz8CUBZrrLrHwr5P1z3F/s=
              "]], 
             LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAWR8a60MDCkBAUpVagrr4P1Ds/K4M
BwpA24cehlGz+D8YIgpSNwoKQDzd4PJQrfg/4FcX9WENCkA0BfrNU6f4P3DD
MTu3EwpARrWlwGOb+D+QmmbHYSAKQHX07TKsg/g/d3aCc3wjCkCIDplf5H34
P15Snh+XJgpA4HHXvB94+D8sCtZ3zCwKQK4PzvufbPg/yXlFKDc5CkCeX6Yv
xlX4PwJZJIkMUgpAmpd/mqYo+D91F+JKt4MKQFtsVYuh0Pc/XPP99tGGCkC8
xz2gOcv3P0TPGaPsiQpABcw2gtTF9z8Sh1H7IZAKQFRpx6ESu/c/rvbAq4yc
CkBHCg3/r6X3P+jVnwxitQpAmB3MuWx79z9alF3ODOcKQHqUGw/bKPc/HLMK
G2vqCkCOKnroWCP3P9/Rt2fJ7QpA1NjJp9kd9z9kDxIBhvQKQOCoZMvjEvc/
borGM/8BC0DDBIBNGv32P4KAL5nxHAtA08j1gQ3S9j9En9zlTyALQFiTRUG4
zPY/B76JMq4jC0Dbhu60Zcf2P4z748tqKgtAttFsrci89j+Wdpj+4zcLQOAc
1JCup/Y/WJVFS0I7C0DgtougbqL2Pxu08pegPgtAR8U/TTGd9j+g8UwxXUUL
QFR4NXK+kvY/YhD6fbtIC0DGZczkiI32PyQvp8oZTAtAwlIK6VWI9j/mTVQX
eE8LQHgBI3wlg/Y//DU7ahFSC0B/QQlBJn/2P5b6/cY=
              "]], 
             LineBox[CompressedData["
1:eJwVzn0sFGAcwPFLptbz9I7YGkOOvJWXDZv6/cgq3Njk8naV7hah3LzkXdMQ
RlyGItyFXtbi1FZaThZHdMhiyyyrxi1WK/Q8eRlb+uO7778fK6k89JKBQCCw
3+z/29PkWBdBMP1rdp5RBQeXJ9EbVZEER/VG6g/lHBYGtwcuSgguKbLWlCUc
nn9/URsSQ9D/y0BhSiGHNCPZTJuMoEmUIuhUPgdP2z1HaRzBl+3ZIotcDhpp
wtDgVYI7joX9+ZjK4fqNA6Z2yQS3JDZUd8g5+Kq00qI0ginizlhFIoeBaYt1
3xyCJ097V5+VcRiLGHfpKiFoJ5+dWA/lUJWRn2NeTnBEZdP9I5iDuNZ5MKOS
oG2zk/ZzIIep8eKLHrWbvpUx234/DrPBPtVtLQR16py1djcOK/4PVpVvCIr6
+4h+H4fcLmWB9i1ByQnHcK/dHARu9TvntQTrL2jO3SIctllWWrnpCE6ND9f4
GHIwXc0M0H4iKE73LFRzBu5torq5BYKxE/e5fpJBkgnzcrWh2JMqzGlUMVgq
+9UrFlK8Uq3QCBsZXDOYF2UfprhYUF/wrI5B7u/pmL4jFDtbNQ26KgZlQ+9K
xD4Ub+cZju8tYvA4795klphi/UaJiT6egROrkTZFUDQP8Nx2M5ZBR4LiZ280
xXxN0GV7GYPO8CIBlVK0U8elJksYDLjK7ZuSKP6ljqXGIQxm9H6ZvcUUD82v
32n0YOCnHG12KKM4N5Yl2uXKQBURNVJVQbHVzqwu35nBeV2ytayGYljAaxYv
ZNBduCHS3aW4NtEv+GbN4ODx0gz3BooOQQbKSEsGUx2q4a0tFJeHfcpDzBh4
JzgtJz6k+PRM5OSwMYPQMkVP7KNNn4S8er+fwT+8kizd
              "]], 
             LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAABMrEle6tDEDO0vmwW/HyP1aWz3ak
sAxAAvuQsGfv8j+1T1uhDLQMQJyhvmn07PI/FAnny3S3DEA0Bhp3guryP9J7
/iBFvgxAGtjiiaLl8j8xNYpLrcEMQE78GY004/I/kO4VdhXFDEACRxLgx+Dy
P05hLcvlywxAbOLwcPLb8j/KRlx1htkMQHKAhCBX0vI/whG6ycf0DEBcDK3O
Xb/yPyHLRfQv+AxAq2czUAS98j+AhNEemPsMQMKfERGsuvI/Pvfoc2gCDUAD
ywBN/7XyP7rcFx4JEA1AOXJDk7Ss8j+yp3VySisNQBsvVoxZmvI/oj0xG81h
DUB4RZIoh3byP8JOCoP7ZA1AkjkbInl08j/iX+PqKWgNQGKKchpscvI/I4KV
uoZuDUDKiSYFVW7yP6TG+VlAew1AbjIhsjJm8j+lT8KYs5QNQI7bSOocVvI/
xmCbAOKXDUAXZ1OLHlTyP+ZxdGgQmw1APiQiIiFS8j8mlCY4baENQMz78i4p
TvI/ptiK1yauDUAAcvG2REbyP6hhUxaaxw1APOeJEKk28j/Icix+yMoNQNyx
N9G5NPI/6IMF5vbNDUA/dsZ/yzLyPyimt7VT1A1AGii0pPEu8j+p6htVDeEN
QG+ARwFJJ/I/yvv0vDvkDUCi9WwkYSXyP+oMziRq5w1Alu/oMXoj8j8qL4D0
xu0NQGi3MgqvH/I/SkBZXPXwDUBXLCrUyh3yP2pRMsQj9A1AVXHLhucb8j+K
YgssUvcNQMnXrSEFGvI/qnPkk4D6DUC7rWmkIxjyP6fg5RS8/A1A8xTVTNIW
8j8v5h8V
              "]], 
             LineBox[CompressedData["
1:eJwVjmssFXAYh0/YhPz/TujikuNuiS5YbnlfaiTiJFaiRBnKLTqEFlmurZaS
ozDLfXZopWSmtjS3ndJy4oyp1GxspNelFdnq9OG3Z8/2fPiZx6SExKoJBAJb
1f4z3Mxo7qA6Q6OFB81XRwnsuw47uWsydI32izD9SBA4ZF4Vr80wqE5uqaEg
SJxYU5PqMsytqmmf+0AgW5eNLOszdJ9p1Xr5nuCtbqG7xVaGc1Z2403DBPM7
ourERgyl3zMSyt4R7PIWprWJGGaPGcjj5QRtBRJhnAPDGxYBxaIBVe95Or9g
D8OISEmLYb+qXzm0XO/EMNrYM1enj6A1xmB0yo2hpD80eLWXoAU6Kk/5MjS5
J0/99IqgYZXMgqIYGgfkpA90EjxMSnR0KWOo3ilPEDUTTFiF1h4vZ/h4xWDQ
volg+6SHXpqUoVfFE8X+RoLKIzpL7TUMZWcnF4/VE9y3bX1u18rQW6TwuV1L
cOfrjKfJG4YvSlP+2lQSFIWdC1D/yTDEwNpVWUJQFzwZGfubYYey79t0MUGP
f1jywB+Gk0MJ4uUigqUDfmU31TgWKB6lby4kiLSxV+rrcdSqdx4JzyfIFDXM
SvQ5tp0JupV0neCukemacgvH/FJvrfw8ggHGTatNOTpIG33arhHs+7UUY2XP
ccyMP9uUQ3B08eLlQkeOkV3VyTbZBPFz0wWzezlq7FyYwSyCmi9jLTJXjp81
lYZXMgm6xoO7mSfH9sD5ofIMghHFoDwVOOZte+3xVEKwcbB7wdmX43BF84kf
6QSWvU4CqT/HEjW3DVzlXj0y4Wogx6zzJXG70whOdlpbRog5+lqEl4ovEay7
eFwQhqj+Cwy1p1IJ/gHZ3hmh
              "]], 
             LineBox[CompressedData["
1:eJwVz38s1GEcB/DLcU7M8yxXq+uWpNp19F0r5LT1fKaUjnblTD8WUdhJKEkm
yinyK52brfsqtppL1xbbscasRkSqU8NauK4fYmx6rNMPSdPTH5999vrr/X77
nMiISnISCAQb2f3/jVkZwB9GYPe4akjlKLlfrz+kO4qgtOJgm4S5q84tZSwW
AR+YX3JxMyV2Y2FuWAIC7TNp4Zg/Jb8Nf8obEhFkL543RTJLrmfVumkRGENH
vj3yo2SfLrnDmo6g9siU0w0FJS0pKlFMHoKClBBHpJySspBlhuSbCAbGHYmL
vpQE2u6Yr1kRqBRNuUoZJZjTzjW9QaDvvLRgXU3J9GVu77tBBBO7Sk+fZK73
bf8iH0FgGe6TVElZfuqQ94sJtmcgOOvXSkrm84QRIgEGu1z2YWY5JZOm5Mya
JRic5mvnDMxv+/t4TohBkObyM4jZslY/GSPC4Kyy8zoJJae6ZcUNHhjW+4nP
+XhRMuwe1Bm+CkN679hgGaakJ4CftEkxSOUuozuYW2IX0FkZBm0j1/4VUaJv
ehrHe2NoLeoXRjOHa9QLUxtYnqnyrsKTktYa7fbyrRgK0oqyF90pudf1Ms47
AEMSRW2PmaunueLmQNbXwvXlMZ/Z+WNoNBhDjyNI/XcpJfLPukx/gkEhtLx3
ZV7hPs53AIb4gnU5r9wocQ4I74wOxTAQv22kivljkSfOD2P7hrc41jAbN916
aI3AUNcYdSxUTMn32T2mK/sx7P40axEzq584bivVGHK8uqdfu1LyoKSueuYA
BrOiV2xkFmlUFaYoDEqlQJTAbA57frxZg8HWe6GKMP8DZ9oMQw==
              "]], 
             LineBox[CompressedData["
1:eJwVz38s1HEYB/BvWSE2T8tmu+oqnchdy+jn1J4HzfrhbHfcXZzKRHcsboQa
0Tpak6uRW7katWSENDHt/KhrVyyzCZlqWnHV4qOFahipT388e/ba3tvzvDcl
GJRJywVBkPD5v5cljR2eVQOFGO6llwcyFD2Wn+nWAD0YuLM4yJ11fj4lLwbI
uUFeowhi+Dq8OiFICxRcqhvu45atVsSOxwH1iGuLI3cw/Fxde0gVD/T9iTFX
vpOhsk/jt00HpBc1Rit2M2y0OG106IHWZHgaB7ldEx95WVKAhKyoreo9DG1z
K51XpAHlVXp/itvLcLt365eRTCCl7UCPIZihe5ZnlckIZM1u1tUhQz3aboUW
Av2S+JqDiKHd9fT1uUtAT1VSn07unEr7xcQioN72bEN/CMPx7oz4fSVAqrqJ
/KUwhl2i/vWTFUDPJwtUyQcZXrBdLT9iBeryGPM+p2A48cFmnm8Dakh9Veii
ZKhe+FlS0wGUJrm7zsIt2xVb5GTjfSNav7VFMXxbvyWnvYv3aWrqFdQMA28+
00rfAGnzy8zmWIYVLTOad0NAJaGiZl8tQ5cBn+jLw/z/esd0G/dHd1OE4z3Q
C/++ntE4hibj0f23R3n+5R97wAmGX1OnxW4/gFxriqsGTjJUFEvWWqd4noVv
1iUy7KjVeOlmgNR/rz1c4C5zdHrYfwNl3jg2IjnFcEmYdkufBTJ1B+RbuVPE
EpcN8/y+1N8nUseQYq4IuYtApWGyvLN6hvXZnYt+S0ByWaHUPZlh9FTGquPc
91uGCsTc/wBEwAx6
              "]], 
             LineBox[CompressedData["
1:eJwVz1tIE2AUB/BVVt7dkSjEymylYuBlSL2U35HGBqVhWmauZmmGEnhdGjJa
0DKn6aaQzIGpmZeBRZi3civN5SVQK6jpulDiwzGmQ9PK0Ozr4XD4vfzP+Qem
5SRkbBQIBCI+/3e7T8Vy4wbAQlmwU5JLbG48aUG8CTA0oqM0MI9YskM799UF
cPX66ohXPjGrm2W2cgvg4RhFzwq3USKa/u4G2Pf7ruGNktjmtKQvBg/ArYua
0r6rxHLVWrvUC1Cbb9nTUkhM9sz57r4Q0GKVSoqvEVsKNw+m7AD8VV0VvltF
LM7/dPPrfYBS0baziTeJGWbC+uVBgNP66JEQDbGZh64fHcGAZ9rUtjVuFZqF
PgcAS/9OvG0pIdaeIVIlRgJe7m7dvqQl5v54IeHTEcDBKJ2jWE9sWFIpmE8C
XLePp4rriPl6Z/qrkwHLn8ZbVrgVtpiDwhRA32Pptf33iP3MWr4iPg9YM3xh
NLaBWJDunK0wHXB/2M55RRMxzVToo/UcwH7vquIsE7GY7GE5aAGLGiOV0EXs
z+Ss1FoGeDvuRsgH7s6jnuKiO/zerR8iYzfP8zvp+lkHqK8ocAT0EvO02jvb
agAjChpNe/uIDYWt1csNgDLbqOobt7o2oNzbyPtNPNHVm4ktZl+6qKwDjFec
yPN7zvtPlcQG1wMOjEmj33NnSEyH7A38/zK9TP+C2KTfvBc+AIw+NeThMkCs
WiNcWWwG7GgSvjJzH3eKZ5pbAVPHMnuUL4mtG3d1uZoAJ3ttUe6DxP4BcQkK
ow==
              "]], 
             LineBox[CompressedData["
1:eJwVznlI02EcBvClZUamva8588S5kebMiizFbb7fDs0r05VXh8dARPKcYl6s
WNsQJRDCa3iFWjrN1DG85kmaiAeaEFiWR2+EWGYpmUr164+Hh88fDzwcSao4
3oDFYrkw+d8RPR61QS0IWHsVq55ZlGSfVjf0M04QdtWmMj6r1hentyK4Krfu
JPcpqU/dl/C2HYFCt7l/IZuS6HmuuFCLIDLaQaDJocTSx1ck0iEwTazKzcql
pNC6yLyuC8G7DAtzk3xK0kaODaYMIBjtllbwH1DicsajmTOEYHer4NAG4xV1
VOncMIIfT8JluoeUhKdVJ3mNIlD2HswUyCkR2jhbGU0imNIfkAuUlBinC6RV
8whsqq+NHC6ipMZWwpvYQhDHipCtllDidY7vJvmFQF9+a1ZRSsmc/6bH9jaC
tdKcS/ZlzP6+KpC3h6BA3JkVXM78m9FI8w0wSEzkp+rVlIDq56CrGYZV7zvT
vBpK5iv148NHMewYTy62Mc7UKuciMQZZudBUWEtJ46LlF4UFhqDKe33Xn1KC
BEKzBRsMM7PLqUl1lCyvK+4+dsbwzC7jSt5zSvKNghO4LhjEfeu834zZdpbp
3XwMJ6Qr3KxGSgICmhTUDcN2tJMsuYmSjvrJZtF5DI07ac2hzZQE9Zbq3lzA
MCf6pBpj/HkmZiDRE0NZ2B+5dwsl1n83ZksEGNheKR+cXlDyKIq98/UiBvfg
bv73Vkrs0z4aKi5jeO07ZRH7kpIuVeMRax/GYZHcacZrWi+Orx+GfnacRtNG
iWrckP/eH0N5XhvPsp0Sh6UJd2kgBtdI9is545umMX7VwRisOEsZER2UfOM5
i91DMLRPnlQOMi4QbNweD8VQnxzS56ylxFHcEx97A8Pu0IRtMWONz1iMlnHT
cTfHBsb/AEfBMYs=
              "]], 
             LineBox[CompressedData["
1:eJwV0WssFWAYB/BD2A4Rj1hLSoWiY1i20HifadZZbiOp434nLafEMhIilUVo
kyNzbLlVSBwhcj+EIrFFrm99kJNEcw/r7cOzZ78v/2f7P4cDhW4h8hwOx4TN
/y0f8u3cmgcg9XrTYlFLSXrF1MMGAaBw+q7nJLN+Z1musxfgEa81FxsJJQO8
9eIJb8D58s68fObYXH5thC/gVrTP/jXm/stzg2kBgF+tVfsq6yiJUj/BbQ0D
/BLpJtOop6TVpyreNBpw+Yl9RV0jJeE9Ow/exQDye/S6lN5SAuYueQ43ATUj
l3QvMocqLErC4gB7i7dEK8y7X5oviJMAbTOnpEbNlHiuS/zVMwAbFZNThC2U
KAQqCgszAc0KBcp1zFX9FxJ4WYBRFRpTG8xy4lUR/zHgpr+mMLmVknJ7y+Ek
EWAeChzvt1GyktNkv1QC2KFTWRTTQUnhlop7YhngAdByrWbmh3oHqj5n+WTE
U8ZcYLV926gCUHuzNMG7kxK7GduGgBpAtfOq+6y6KMky6TD+3AIo6A73G5Gy
e5Ze3DttgP4RQkNuN+vjzPKseQfgFb98KxvmBYFhSbYUsH9gjf+M2SEt/ZDr
B8DxCQEvrIeSwOyjO5wB9p8auZhc5riC5onqQUClX4aaUubymgWR+jCgRP6V
u957SpSm3fZ+GgPkyHzVBpl1ZT//JI4DGhjn6G8wW6ykDplOAp7mzouO9FIS
pFKf+WgG0HDXdukN5rZTOlyXWcA2fd5VtT5KRu0kszs/AHkmBuKTzL+dnLqr
ZIC52mbWl5gPBiemqC0AOhYlV4uZ47O+b39cBjw+FNZ+rJ+SnKe3JhJWWT/O
tn585helWk0m64CDzvbXwpnbX1eJJjcA61M7V+4xjzafjc34CxhszFkqZV7s
mfGw2Qbcs2UXJGV2X4xS9t0BTHWcuz7G/A8i7WD1
              "]], 
             LineBox[CompressedData["
1:eJwV0n8wG3YUAHCls3A6dY+UYdGutWHdnU31VyQvrcwuLW3J1RgmSSmt/lAS
FM0kKQ1KVa+K7VyJdBptzXQMu51y+sNOMapB6H501uk2P4Igm73+8e57n7v3
vt933/c2ik+FxllaWFhwKF6d9fYX56+vAZTJJl4snNNz/V/oZvdbAt601U8z
5HpusDGw32wFmP5+yOQ28pFVw5361wCjtjS8ISaXOq0/YWcDGNuTZGomT/NS
J3vsAUOZnOTIz/VcRvC67kwHwAfsgndzyKxPtBofAEz2/mDjDXLIyaeiAiag
Vn5/fJqsq2CPCdwBdXxtV2aOnhs/t7b/oTegBzP09WSFnhtzM7A36j3KTzxm
zCcfFql6/tkKWDczH64hf/TYqtvJF5ChtFIPkT11lm2i7YCRbawOX6We+5Z4
T4txB+A3MebiIDLTRXE3bxfgrDr1lyiydd6ahlsBgCVz7c655Odii9qlvYCe
Qg/TAHnMBasL+YA2Ww85PCcP9smrWEGAid72bQvkLs5qOV8AGPzz1W5nlZ6r
efO/opKDgBlTwX+Gk7/oDyjcHApofTqhKZ585UK2ujkM8CG/2VVKVi2YlYbD
gEprnweXyEcGVtK9ogF/U9V0dpKj1Ltl7TGAy4Ka6sdkIWamHIgFnJti+YyS
A28vn5BKAA0ppZwZMjtu13FGHN1fnPfjCtnP7WxCZTzgqdFZG+vzeu7m/CVx
RyLgqqNjuQvZjbczVngcsDer+a9NZEdTevRkEs1vtn7Rh7w23hS+7jSgQ/8h
3wDyr7zF/REyQE2VSBJFHjH5C16mATIlinwJeeCOLEieAXjgCe/MMfI99wVe
bRZgwriTOo3cOriNu+Mc7Zf2WWs2ubFAyu6RAx49+W2jkly9ZPSfUQA+uzyw
VESuaPDzU6kAnY3f7btCvnw01XdDLvUf9HdCOVkxNOcToAb8dL3ItoZ8tvBD
r758+o8Zr5Ib5DN7UzwlhYBstfAPHVn89ayHuhjQzXzPromcpAgzC0oAN214
Z18LWRrWNGxXCjhmyhC2ky/MS4suXaV5Dub2dr56v/tJYug1wMXcnD33yZVl
2/mOFYCfffwy7xH59s6llbIvAXcvRlzsI7fYRg5HVAE2J6Uc/IncMdra6Hod
MG3Ya2qI/KjetchQDThSuxzzlDyYnZVYpQH8viz61gjZEGIIFGmp/7qu4THy
7yyOx9tfUf2/lRPj5NUK97uMOsAfrGzHJsj/A8TZ058=
              "]], 
             LineBox[CompressedData["
1:eJwd0F1I02EUBvD5R7wwI+rMSKzNLVJRIheJeKPHttaoVOyiSYSuMFwfksVg
jTCCZCFsscpqOM3arOZY5YYfWUxmjmSKUtMlLYnYMiOWtdbHmpGdtwcOD7/L
84iOnNp/lOPxeGI61sonJbf3OQF7dGu0Nx0T5dw1lVv9APDbzt1mMzmjYdRY
8Ajw7GmdooOcWSw+Fu0DHLgiD1nIgrSLsoduwJcn+dVd5Py5iLC5H/DQaIX9
Fllily1LBgGzCnMXu8myPWnugWFAa1NVtpVcld1o1D4F/Pl9I9jIyui4utQD
eNgz9INZ5cmXLY8AiuQ1vh7y8cttQo8XUFzLv3CXrKn/lDz/DJD7vLngHrml
aO8r9AEuZFrGmPUpThf3HFASNlTeJ5sCGUbfOOAWeaqfucPWpNb7AQ+kpJbY
yTbNtFQxCfi3VW9mdu7aJkyfAtwealliHlxvSk5OAyYuzZT2kr2LX4PGF4Bb
depzzP7HNa7qAP0f5vczB9rchrWzgKo8+3vm+YOgngkCRr0fVzvIHwo10utz
gDFRexHzlz+zAuVrwGBnXSVzYqo4ueENYLsi3sDMdd8IhuZp/4W4lnlV86++
zreAm8YSemZ+Ra2h7h2gy2q6yixYN9yYEwZc6kILc14kSxqOAJalt95hPnMi
RxCL0V47ynqZR+K5v1dWAB3/M1H+D1TqDSg=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$224337#2"]& ], {}}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"xdot Gain\"", TraditionalForm], PlotRange -> {All, All}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Gains from backward integration\"", 
           "\"Gains from discrete integrator\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwVl3c81d8fx69xr3mFK0p2vpSVSkrJOZRkJBVSJISERGVFErJ3GWVFSGSk
Qcj5EFmF7KSy7yB7j/w+v3/ufTwf57zX67zP+ZwjaXPrvB0zgUCYxH/+/5/m
Z0Pab+uj4UWx2zh3Yh3VdUoYXJS4BDy07YXbD6+jrS/VgRISN0DzxdhCLYV1
lIZFiRMlvAE3jRBC3L6OnI+731wWDwOOdhXGrONrqHPd4cmM+FOQXxEotvpo
DbH9HJb9K/4KmCU/uG5VvYoymzPcJsQ/guxLNw27BVdQUXHYT2elZsCYyfQX
Or+AGPyMSD3rZuB6+XGL4skFJOuhp7HnSTPQ2mKknFZdQM/VuTJHVpvBvbeK
5pHCCyi+KdL+cn0LUFASPmQ0Mo88RmJmdSy+gdfMF4up7vMog6slkE+7HYS+
rrul9XwOaRz3sfC3bAd3iwMq5R/PoQEX+UPTnu3Ad3q5XDR4Du3oiBj/mt8O
Zip5tEWc51BcsoFuKO93EMA7vBx8ZA4F/tfKs/XzOygK7piS75xF18H3p5O3
OwFmMPnyDu8sImQtVfyM6ARVvYWto6yzKJlVZKA5uxN0xMQGW6/OoMYme7FX
PZ2Adv8rwW94Bu0x3siyO9oFoFyYs/b7GURzkH39m6kb0HQPe4ldmUGO8fer
22N7QLJOV/Kw8zRiXsz6g171gMiDnxymzabRs4uNhOLaHmBG3vIS0p5GzSKU
E1ELONtufPooOo3kX+Y16Jr1grtdo9a67VNosrKzvVa8D/gaa61kH51CLmN7
R94V/QAGHt0n3kn/RYOWP9hrmn6AxhaNnVT+v+hCX6jSt9EfQF0pf+UY0190
pIXqPSbcDxxOHhnW/z2JWN7k8AqG9ANeR4Vi1meTKNlXUsPz6k+wkPWXq19o
EnEutV8LvPcTRMpElSuyT6L7t/zDYhJ+gkFzo3MvViaQjc2frpctP4EBr6Hi
wo8JpHA6zanv8ADw0nW3lk+fQDWUnU/VeH+BxrVO1xGFCaQS1VitLf8LsL6s
2G8kPoFySV6j5079As9XwlZ/8U2gyNWefY6+v4BCl8Api2UGMv3z5Msz2i9g
MBt6Y+gzAzHyeRfWsd8g+9e45KoNA1lIYzvZB36DoFlFI6eLDNSWdgsILP8G
G7Mmsxv6DPQutjVcQfEPaBwa5vM7xEAPPCIlrzz9A2iDy+cXOBiIUzJI9s+R
QeBslXXvcTkdNarH7fPTHgQ7JqX3xBXTUbBZ+mHR84PAtujl6bxcOmKOLdcx
dxoEo/zH7aQS6Gjt3+T13rRBkFp7IUvrDh1NDJjktTEPgeR9tj6CKnSUv2JT
4rJtCFTdSOZLVaAjBwHXcrLIEPDPW9w48h8djeqHN+ofGgJB+++cLBeko4GK
alrD9SEAFWvfN67R0Ndk2b3Y1yHQcyjuD28DDYW/U9l/9ccQeNemGbuG0dDp
dk21f2NDQP24zeHVChqqY7PQVd8aAhL+Ai0qxTRU5RF7o3z/MEjn+ISeJ9PQ
vfg0t4saw8A41b5f8TENHSnK917SGwZrqXfetkbR0LuxujAV22Eg8aJzWS+Q
hgqNV1+VJA4D1RNdQntv0ZCzK6n07IthoKdp5nvWkYbkIikVU8XDYMWDTT/U
joZyPys2KzQNg6oN7wfKFjSUfsCGkbc+DKyeSFSa6tFQNG+LXKbVCGA8cJfs
2UtDHw+Lvjd0GQHw0eJl9B8NjVreAhs+I8CIM1uwUpKGjhVSjC8mjYCKM27q
9J00RNO1uE9uHQG5Z3SvC3PRkIBbEVvlzxEg89SwPY6NhkAyId6BPgIMKayc
wqw0lDienfuZdRQcKSFQLDap6ETg3zbvY6NAJP1X0PMZKnLJB5dldUeB8fzE
veS/VPTse9xol+koSO4rjM1gUNGMuOrqvtujgD/t9an+USpKr/KTGs8bBYm9
62PrP6hoZXGb+3nBMeD1p5up5gsV7Ra12draPQYsxnJa4+qoyPDku7DC/WOg
/F2uvUstFeXEm6WznxkDMvGaMnrVVHR+X2ZDdeAYSO2zPBL8gYr8TOfPOceN
AdrEQknxOyp6dV97YGfGGOhpNbk0UkpFhK/0mbsVY+C3ynFXh2IqKnQ4ICw/
OwaC3MrlRvOoqC8mKLvv3xgQuzCfeuklFbGW9SgFc4+DL7qlhb05VHSZ6HNi
SHYcPDMIoE5mURF71mfnJMtxIOHB5OmRRkU2P40Ry9dxkL9t2WDgMRVxpgzd
dPsxDrBLllrN8VRUetlF5M/4OLC8nFz8KY6KWPpDvCuYqGBS3kjnXQwVZfdV
HHQ7TAUGU85tPyOoaLxbIu93FhUUDbGdmQmiouiEQlODEip4taJwTgpnVZOj
xIpPVKD6gU/rYiAVhXRdsEnoowL3jDijpodUtKczWMSAhwaex4yLNvhRkWP7
ZOxHbxr4NCrdyOVNRfyx3kA2hAamqmXkLntRUcVZ0tSTJzRg5yLk/MqTirja
xPVdi2ng3NttC7oeVPT623mi7BgNRL/n9om5Q0VTzeXeT4zowHFL6BKvCxUl
hmvvYbakg8lv3RJXblKRhl5Hzy0nOlAgazbkOVNRTNPEQf1gOqDRV4+pO1GR
cqPYFFMVHSQePfPCyIGK3OqDbG7JMsA+IRluIRsqEhs9RVo6yABfTgp+P29N
RS3MHPm+kAEGskfEI62o6D8YNRt2iQGkS+w4ly2p6EdFgn92BAMUBWWNFZhT
UfCPi9LyyQxwSkim5ftlKjq4srPxTTYD8Fo9Tl24REVRh9K3oU8MkDZd+0HZ
jIo0S3LTf0wzwD+vC1/9jfH6Wh20rDYYQPB30bbIC1SU8ldufJx9AhQk5RU/
Pk9Fi3LFiguSE4BN41hNkhHebzllVTzGE4B3xuWCmwEV8aU09p8onwBCI5tb
5ieoqPpjuF9z3QQgvI+3+U+Lipz6DKTOfZ8AGxXHZRiQiuq3f79hyZgAl2st
k+00qMg79seKl8gk6I/zyZRSo6KhRwzBIv9JUMZ/tPiVIt4P2a8rVKImAd+f
iz+lFKjo2GcXy8qnk4B/cSQlUY6KEgjzOY2lk6BtMfH1TVkq0vVZVxkZnQSn
ps+090lQ0RtX7gs7dP8CL+WSbc/4qejrM4p3oelfYJi5GhzNi/dfnXCGlu1f
sGE8/9uHh4qEd+6dcH7wFxAq14ianFQUVKMdWPP+LxBX/ki6y0RFpvwP3jpK
TYHEA3v33J0aR67qwT+29k2BX1Jjf2cnxlG4fdTWk+NTYH8Vtn6dPo5QRYo+
MpsCn7/mtquPjqM918pHKDFT4Fivd0joj3G09naW8ml9CvC0ah/Kqh1HAr9X
1M5zTAOFgXd7MtE4UmInWFEFp8HLhkPrSVXj6JoFz2u+A9NgQve57M0P4+gr
q/xJe4dpUM2sv+v9q3GUbmJ7d1v3NDi8ra25LHocZfo4MZQvzgBCDNuxtPPj
SBnjWAm5gnNuAn+/4TjCWPOIf67NgCpF1bRt+uNoMGpUIsp1Bmwsg0bbE+NI
7PmVi/SwGXCD54xD2cFx9KzubF1m1QzQVQvT2eQfR/FklXR+qVmw1J24h+Pr
GJI631FwY88sYEOLmeYNY+hNoutHTGkW9BjJN+fWjqF28cIul2OzwMV/WUH2
4xjiOSDD1WI8Cwj9fDbtOWMo3HSHV2DILAj7dCOi/v4YCsjYOLcwOQsSWVjs
Tu4ZQ0bK5W7y87PAer43qkVqDInV3ImzWZ0Ffv8Z/dIXHUMVw4z2duIc8GOh
rB3mH0Nz//04Wyg2B6oyqp2r10eRzev3Z+yN5sA2917e4G+jSPOji27f2zmg
UGa2m9d5FBE6B2HVvXmQYRLOnpkwgoLo1Zn3Hs6D0fJvioyoEcRBSGNWC50H
dWZ7SArBI4hf8VLd+4R5EPJ59++nHiPov5DvOsUl82BeRS9D7OII0jtWa5g1
Pg/ahwzr2wRH0OMXLyxCzy8AHjVjfZ64YSRz197LWG4RyHvKRz5wG0Kji0mm
XJ+WwG6Hf8ZB8r+R3pjj/Xi3FaBy5l1Q/qU+ZDgaKy8mtgbsFFkbZYkdiPHZ
xr+xcB2curlrW2dQAxKP63OMfrcOViiMA1yGDcjY0tDEuHIdVOk/5tURakDV
K2pyg43rIFlsaa7l1RcUr8jXtTyyDr6A4rwdbfXoWBKSlRXewL8PW4GOwnUo
0lGk7VHwBqCN24h4lGOo5nD8R/2oDWB/yyVsMgBDS6zs2XxPNkDFxF9T7zMY
ssqY90rL3ADOeW943tYjpNLVLPW+agOU12zcfCpajX4d9/YYndsAvg/8A9L7
KpASX4/oiaubgPBFdLAs/B0ajxoPSLDbBKdP/EnJ3/cOpXEuU6lOm6Dv8jMf
5u63iJt1R2mk1ya4u/c2+4TEW8RYunSqJ24TsBrfezL+6Q3KGfjlcqNuE+zQ
LOJJES1CFpemOiubN8GKd9SfMI9CJNDz7wjP902gnLw/M6n9NQpoE2d5+2sT
HGHKlNsTWoCsaq2TNpY2Qbvjplwj8RUSyRtDMXv/gVimEr5EmI26pJekh/f9
w+9PM6I3il6giExSuIrqP/D85a+Uz6Iv0NozWeMfWv8A+yflX/JMWagv6gZN
yuIfGLzWXgjLMlAs570z7jb/gNVsgSVrYTrSCQkvbXDA+VSsx7ncNPTBv8DX
2f0fIOjMVX95kYIe3/nL+yEaH9/x9uNUSxLSm9l0Z0/4B/z97h9p/pOImG/y
/Lyc8g8Yce+afr+cgFzt9+VsvcR5pwwnq8oTZHjJTU23BmeOj29uDcYiUs/D
9JQG3H5dve6zYCz6dD6eZerbP4AVez7zfBGNFAzefovvx+NdERBvKYhAnGDR
emAezz/013jogWDkpbmH/cPaPwBTYh5ROoPQ+AnzohimLQDjT4ww+wei2tM1
a1rbtgDhsqs2Y8sfKesvPBcR3ALY3dSwjNwHKP2MrM6SyBbwt1z/S79+H907
H/X4lRzOss95Px7zRjRjTC1wP+5v1WtL5qwnMr04/8fiCO4PK6wZ8nNHdZdk
glUB7s+8rO5qyx10wOKSAu8pfHzA7YXQodvouWVkB90A97eR8sC/yhXxWCOv
zxfw8dj5Drk6F+R7bU4s7TLOBjviXho4owm7/+o9rHEWZb92m+KILjuYORk5
4Cw9WBW80wE1Okbwyd3CWWnFZvCqPVK9WV3G4oEz08zvB1RblH1r9sovX5y9
ltld3lxD/LelWcsCcb4yir2rtkH+dy/mx4bjvN9czJLXBk15hBs5xuF874vj
3ZfWyML709KJZJz3lrOxPrJGzT4zqaIZOKfZLkrlW6MjfrtPLOfgvO9+Jl3I
BuX6m9LbX+M80xTn2maDBALDYvLf4hxXa9/+/RoKeFR1KKgC520nOKUk7NBM
yPTPKzU4aweFP6q0R5bhUgGHG3E+Wn99d44D+hppsoevDWe3pufSvx3R0ZjQ
VkY3zu3ph0qv30R5cZV36wZwPfGXzT1JVyT4ZEo4fQRncd/tUeVuKChRssaT
gXNLX3y+9x00l2x8/dwszvvVz9y0c0dWKSFk+RXcn8zHDVdfTyTWvqQwzUyA
/tlyRQf3+SKTc7wECxLO9WnTAl/9UGTH3s5GDpx/N1eAFn+01mXhncWL88zW
HcOfgWi/qYfBNgEChM8rWHuCHyGH3hhxXyECxN69NPfVC0E9P2rrTcRw/kvu
898VgcjmA8m1kvj8sKKgyL1R6OTAotO+/wiQsJFP4D8Xg0p/7+HnUCBACZ3x
/+aW4hD9qtaY+z6cpYyGp/Y/RhJD5uXDBwjQau47x8V7T1D0SLRllRoBPt91
/LqcShKqt83bv/c4Ho+pwnApJxltjNWwJkLcXqm6eOq/Z8iRtpB/SwfPP7bk
7H/n0pDO38vLUiYEGMuZ92FeIQulCwR2PjDD8+MxuZ4r8gItHCsoHjDH4/W6
1o1TstHz8PXriTZ4vp3zV+7uzEVrsql9HK4EOHjH475rYD4yOlv3zv4Obv/T
N0+ztADlekzGfvbA52+O2drSX6ML9eq69+/j86+kmhDditFrm18fZ8IJMPTH
XX+tu6WIOZyYeCaaAPuOLuaaKb1FZm8Ub+fH4VwqzP5v8i0iEvzkbJMJ0CvZ
30jB6z2yTBNL6c0hQN7SzIrohnL0ru6Up8orAizXWRJOfPkRcU66XIh7jft/
GJqVFFmByo4iLv23BHg60F65xq4K8fZd9a3GCHBBsJ9VWB5D9lshZrvqCLDE
9sPepmIMVcmUqHg14PYHXn5XOFyDbrgT/u5vxeuz7chUMqxFtfyZV3J+EmBj
gJLkWFod2nG0SY35D65nR985JrV65GI9u/3qMM6PlaS5euvRrhLN1h10Aqwa
eWFHFGlAd88Ma0QuEeDrS1711s1NqPku5y76KgFOMm7kl99vRhKpB5a1Nwkw
r8294LBKC/rGCCjeYmGCkeHZsl/zvyKZ0N0Sd/iYYPsTPW8x1Ib6am2ZLisw
wdPBLy/d1u5EM5r9wvf3McHQg1ORR0s7EVvNWZXnB5hg1+54SqJEF1JFR6+P
H8HnAxF1CnM3elLJ++22NhMcKPyZ5t3Xg86+q0qOsGSCCrFZ8Snd/cj+4IHS
ImsmaPHMXIf5yk/kV/qy5bstE6QFFN9UGP+JXpfE/xNyYoJfAw7X92wOIM5C
B9tsT3z+jLdYt9Yf9CVHQPlTLBM0XEw7w0IZRr+lw3UHHzPBDt7mNn+7YbT4
YsuGJYkJJqtpSyyXDyPpLEaCbhoTZDh8Suq0GUEB6dh69ysmqL5vy+127SjS
SHJumKplgkUfI3rv4u/N96F1lhKL+HxFiVtXLadQnl7LjpAVJpg+LVytPzCF
nnF3dPxdZ4IfKJayEebTyD/2z6lKZmbIYxanPK80gwyS15RMeZlhg1Gbh7Da
LBp+qbwVIc8MXS+yvqu9OY+6bxz+OKfEDFnM7mc7lM2jRnmNO5cOMMOM0zHm
1UwLqLBYnyqjxgy3k9hf3kteQF5l9m01p5ihdnvTXti6iHgaUjOWrZnhQYnt
umrmK4gp7MUlSztmyOkrRNoqXkELevmUegdmaPM9L8mLuIp+tJaFxN/C4708
mhtSuoqyezpuKd7H81M4JCm0fR0dHWeH15KZ4T67a2BrfRPZE90HW1uZYWy2
/Aj/HmZMWLypd/07M+zt7xcQuMyMtR4RbdvTzQzPrnl7W0cyY6rO9Z8CfjLD
l9HvKYOzzBipc3uKKo0Zps97VNtjLFjO8w8m6UwskGP/+Z12TkRs9NhK800V
Fpg8a/STd5kdu3bb5z33MxaYrWRy7oU9L7bvunyrgTUr3NkzGD85vgP7fUP8
VqEtKxRMMVQZ5tqJRTpTeHkcWGFr83JZo/JOjO62fq7NhRVacw5ts7u3E3vh
29J9zpcVVvjK6NZwC2NC8U6/TJNYoZXbRyd1xV3YVlXBpNU3VmhW2qL8zFQU
K0IZUTXtrHAtvHLit6coZlH7WEmqixW+nlnoX0wWxT42+LiO9LPCybYyzcR+
UexOh/6CHY0VijzX7AwyF8Oo1Il1RxYiJLRO2ipcEMcSGX9SW0hEuKnE8UHI
TRw7+bfzuAInEZqN5N6qixbHMucqH/zlJcKwwGSSZZM4Zr4ZweIqRoRR2mlL
H0UlsDZ+BS53NSKMvyL3TjRMAtO4eZOeok6EBeap6qQECayooaihFhBhdt/U
/q/PJbBo3/1BvKeI8IjeX2yqTAIzGFfdLDhPhF+ilvQCRiWwKuj1s8OECJeC
Bu30piUwhZSPH1fNiDAk9UDS5KoExmWk7qFzlQg9aQI5n3gkseaPmtPDTkT4
zMaiKlhVEjsqEPiN4xYRqp7WlxCAkli+S12B8m0i3Mand91LVxIL263j4OdF
hOfAQ946c0nsdJTB0M5HRBgrtzFr4SeJlVOjEAzF47mefJUYLInJarWlXY8g
QuW82WPZ0ZIYafnc5fdxuL8dOQFq6ZJYvdXFTqN0ItwrwT6iVSmJqVQmv/HM
JMIJp5IcvlpJLHt7f0x6NhHWCLUHvmmUxIKaLQwm84lQXHLR4Fq3JLYgnS5H
KSLCbzUsj+/+lMSuPfjDfvQNvj7NlcUmQ5KYlopNfUgZEf4KPqIRPCmJlUa/
eFFUQYQzT0V2dc9KYlL00Yfdn4gwKbIqa25JEmNKv66xu44I9dC3J8kEKcx1
JU9Er4EIpwy0PCWIUtjgecaaazMRpt/A5tw5pDCM7WZZdTsRdgrYvg7lk8KU
bYoSxjqJ8HbiKWft7VLY86rpO9y9RGj0WrCpdYcUxiu0//zBfiLke5AVJi0i
hT1wu618+RcR/tzbdfeUuBQ21fKW5+EgEd5/ImasIiWFWcosTr4cIcI0p6a5
v9JSWKu/akvrOBGCiA3RO7JSmMZPz1eLdCKsvtaZ/XmvFFZ06GOIyF8i5LI9
bvZHXgoTjV2zOzGD+/c9zvVFUQqLZBw76ThPhHeOvIn33CeFbZy8LxW3RIRx
/Kn188pSmHNGNaF8lQhtkwZ8jx6QwgZWt37/3iDCOr+Hj/UPSmEGxpqfiAQS
VCvQkpdVkcIqiwJSFFhIcJd9zJ5lnEkGJsJJJBJUPun5KfWQFHaOLvuUiZME
nUusxllUpbDU4DUhZzIJyqm99VXAmbr7W2IPLwn6kKXMBXE+UJOxXVOABA8u
Ol6twe3vW95+UiBEgod5zjsq4ty4fpIiuIsEy8LTrl7G41GeCsX7i5HgTVc+
mdN4fpaqDN4JSRL8mu+Xu7RfCnvVWRVj8h8JSlqhr3Z4fQuuMTzYHhJ8paYe
lqAkhQEemyg5BRLcqMLfiQpSWHiBCnfCPhK05wRPVOWksO7TbBFbB0jwdPXB
7y9xvSXGf3A4qpIg1qX28Ae+Hk6Br0O71EgwsfJIVoukFPZB4gEbOE6Cgjd0
VfzEpDCm6nPBryBej23r8VlhKSxpZSnQT4cEKcrfRnZQpLDhhCZmuh4J/h2+
lvqNRwpTPJj68IIhXg/9OSt+A8Y+39R8sMeEBH2HfA654v3IwyXwL96MBP+r
TlDcsy6JXcob9900J8HbEdjRzEVJbHo44l6HDQm+ORQr30uXxHaZ9bj7upLg
1dHTc6Ztkpj9Yt7C+B0SdEwvExDB99ObeJ875zxJ0GLVtuIFJonpfJNwk/Ej
wfTD3bHrJZLYHS0n5/YIEjSyZKAufP9W/zk+cTQGX1+yl9H7R5IYx31ex5x4
vB9qNDIv+0piGWXvr997SoKGa0wTCw6SWIsC4Zr0SxKkit7bfRtIYoLNHUPR
+SQYSRevCVCRxKyv51itFpKg6W1rKfO9kthypp5l6zsSNP5lsWTLL4ntFkq4
5FVLgstarbb0IQnMh0nO6OsvEqwXtBDc7SmBjZ/k6pMZIsFw63whhRsSmFHo
5NWHoyRIk04rIZlLYNLbim+pTpBgw+kL1AMaEthXEZWY5yskWC1tRPFklsDE
jmi03qWwwbYLFdscSOJYrct5A1FdNtinpZE+3imCKZQe7PI0YIM1/262VxeJ
YImLAhYdZ9nglYeZUzZhIpiTb69TiCkbdKqa9hHQEMEEwi0iZq+xQcaNQxsn
cnZh9jn2zfV+bDC9zb6T5CyMcQ7cO+3yjg3+LGP6EDYqhKl6viLHlLHBy+X1
uieqhTBr/r6O4go2SDCJclpIEsLKTx+6MouxQfbJ50aa+kKY/ftpt7vf2OA9
ffWg528EsZpo25R742yQ0+Dsfm2/7ZiXpuFU8A52OONz8bmfOAXLHvB9+3IX
O+zzaAtSWuPH2jwLvBrF2OHgB02jmS5+TKaInYXzP3b4SKB09+twfqxT+LNQ
1H52GHFWuXn7Mh+mtHBY87EeOxyz+fb4YBcvNpYr+STDF7dvP4I0T5GxyaCh
VRZ/duh7y9TffYMbm7PJvOoQyA77fVSWlku5MYK4pPz+cHaoukteZ1KCGxNO
kqitTWKHpvCMfx6BCzMKEZ8ZK2WHXm/ObuNsZ8eqrosaKNDZYfl9xnnRUlbs
s/avN7GT7PDow2Yu4zusWPPuNKHFaXa4SgcKdBVWrPePyMinJXZ41u+v4b6P
LNjcRZF7Z1k5YHVh3IjSF2Zsz+ldebfFOeB6flM19xwBe7JnJ+tHEw4oPaDl
cFBqHVlYyrwcMeOAnB7y1YKf15D0k4N6PBYckCBcbZlqu4bebZ2JvWbDAQ8w
S3JFvVpFXT0BIjy3OOAut0691aMriPJoUuVaKAeMmnSTTPNZRP0Vq71RERxw
YuNb8B2ZRZQ1Q/Ipj+aA/Lm3RMa+L+DvfckacgIHLOk8+yFJbgGdP2h6pjyT
A3qVSdvKj8yh+CFkR67kgP8cbxlHus6gy0Lf2I9Uc0DRWqZ9HdIzSOpMf4FN
DQdUZTvXdeHtNCotX5gta+CAX75cmN8RPoU6Yvb62XRxQBsPn1kh7UnEp/E4
sewvB/TPIo/VTFNR7DP7BmsJTtjvGZaWyT+IPD0C7vju5oQbt4Wz/cAfZHk+
XTxJhhMqP9OjPTb/jRQ4ezy/KnBCqKxzTPPpAGry1t5zWI0TmrmXLFyW+4GY
L0mHcZ/nhCuukuwqmR2IrgIPyZpwQgV9Z6OW3u+onddiSNOME96NS/jKx/sd
ZTQ+VvO05IT+TFy3T3C1IfUjLIwhR04YmuB1iY2jCbkLDeuVBXJCq1fmLmrq
lchifnPpezAnnKnx6H94vxydbNv5YjKME2JXBF8O1b1H/CHn1iVjOaGrR9B8
tV0JKlrCCiJT8Xynu0XsKpMQrTuD2+Y9JxxknGlk6SoAl59caeWm4vkb67YE
1jcCkbecu5wYeHzXjxnbR5rAn+9l15v+4v5UFdTrNpuB7TZ+puAFTuigcfFX
lNw34BL+5eAWExesSzzAqvqmHQT473s6K8IFF+S2dZPzusDJjIGxsxJc0Iqm
9plFshuwVYcdKNrNBQXOmIyVJneDyPWRFkc5LpjsxXRAJ6gHJHok/xs5zAW/
2t58Fm3QB145M9n2nOeCjfOiIZ9e/ATOEUUlKqZc8N0X0g43jgGglG++GX+J
CxqnLvaxugyAUur7xLNWXNDW4Yx0z8FfoMrGsanxJhck/BxjuVr6G7SbdSpV
hnLBD6cLfvhUD4J4T3+fnZF4vOnYVwO0QWCSqNjoGcMFX1vOcCD+IdDfGWKt
ksgFW4Wa4rnthsCoofqTwhdcUELFkDHOMgxWTuasZlRzQcGNYyHu8iPAtzIj
sK4G1+O9QTW/wQggHHhGptfh/nllbc86jwA28RjJAy1csDrl8+yrghEguOql
W9eL1xM2GLXy3yg4WGjwlDbDBVVKuE6lcIyBD7t1dpMXuGCVgFzVI+kxcPSZ
ZuH+ZS44wNxJEwZjQCtEtebeJhcseV09oXNnDBhZS9C5Oblhs0hy5NXeMeCy
feHI/t3ccEHRn3A7dhzMRUzVmshwQ4GCqNNHc8eBOzPd4N5efPygbVlZ5Tjw
nf5l9XkfN8yq4nbsGhsHEU0NoSbq3NBFQfZijioV8MBa/nuAGxK4Q4Vk9agg
/kNVaroWN2Qt/RNhc4UKnr14U0I9zQ1Ph0y8ZQ+kgrz7KX3eJtyQvWX6sWQL
FSgsJNikm3FDW6L0Bf8BKihxjJ2sNeeGcp7Ncml/qaDs4iMCtw1uT/8AKNto
4Mv+W3vSXbihjUqL5ZYhDYyMaXnVhnBD55o31tqfaUArozVLLoIb5q3e9xn6
TgPPzS5/i4/G8ytc91UbpAHLFjepawncsOOpQbL4Bg30lzz/yvKCG7ZGYaZd
ynSg5qiw7JTLDb08CGNXj9NB8u5yya5X3FDQTWaoQJcOTBPbPLJLuOGTleFT
IdZ00OHzT0K7mhtyVpvcMY+mg/2HwvULa7jh7wveravJdBA7td1jez035PlT
PWfxgg4MrRVbxlq44Vzxy+w7ZXTQfMrCPfgHN6zWX0meGaCDvQRaxtQAN6x7
EHns8xgdhH6802w6yA15T7ClWU7RwSmFCHFZKjekiQylzv6jg1q+iqaGBW4Y
3dYklSjKAJIt2gv7VvD6dsteqZJmAP+g72LJ69zwy+7o3cXyDKCxTLvjwEyG
zoF92zeOMEBayd30diIZrsfGiV4EDLBxg9B0hIOMn88Pnfy1GaBiQEiMg5cM
HRaLX4FzDLAz8cVpNwoZxn5++6DHlAG8zu6780OQDG/od9gdt2AA1dpTja9E
ybDeaGXnfXsGKH3pfltPngzv/fuvts2LAfismdJKlcgwl3uufs6XAVyFoxqE
D5ChRNEZYbo/AyhFZYtMHCFDmZXv4FwoA0SdUta5oE6Gcq3PBj9HMMDkVqVb
JSDDxMXYG1wxDJB/u/NLxCkyNJd4+EU4gQE4FK7OzuuS4Z8b8VdHkhjAYYyx
y+IMGfL6MjkFPGOAhnSPU3VGZHg5+bDOSioDyJgxuykY4/WarhhpZzDAI77o
lCcXyVD3sc3IjUwGGG3e+WXjMhkGmM5etH/BACeCcmZsLclQFfmSjuUwQNbx
/bu+WZNhR12XNi2XAWoNOQPXbcnw2l21VpM8Bhi+OsLY64DrZ7Mem/mKAZjd
qs6bOZFhBGf6j5Z8BtgdkFAR7EKGcaE+c10FDHDysYvUezcyXNlfL/3pNQPY
ZuuEj9wlQxuloPKgQgYIei8xx+eFM8+zBfkiBsj+snoJfxzAZasasbc41/V2
1Lj44XrrRPsIF+P50wr2pj0kwym2W4Y2OLOuBcW1BJGhcfrrH+E4S3NZrq6G
kKGigZPlE5xPihy23hNBht9lCkQe4GyryNtkGk2Gme7hF/RxDtKgKz+KI8PN
rBDtVTxeztna5LdPyJBg03w4DOcvVimE4SQy3P8oyGUdz3fc7a4DbwoZXgzr
VTDCmRR4pl0jnQwfCHe/C8Hrk3kic+RmJhl+SHqgk4XXfypnKyMlmwzbE5ql
n+P62H/oY2t+SYa+VikRD3H9ghve3FrJJ8Pge00fT+H65vaF98oUkWGgiPjk
NK7/F/o1YPIG16f0kuV9fH3G19RfBr4jw4GLcvrT+PrJik57DFaQIcQ+3nv4
nAFOKzX+5qkmw41b71Sz0vF+AZmnjteQoRXV7koe3h951hcEnzWQYafVYpdd
MgM03lbwa2zG+0Xx4VPRRAagBRLHl76RoUEH15vKxwywJ7fs/YUuMvz6dL6y
IBr3XxYrGtBLhudT6sX/4f3r0HjjUUk/GbZ831Z+OIwBXjF2mZCH8P3TwWpj
HcgAzesLVcdGybCxUGjoHL4fGNyt0o5UMsSOhdySu88Acvv8F778JcN008KY
Jx54/98Zfey/RoZvzGZyzzvg9kGf1os2yXApuvlimC1un5B47ReBBx7edehI
rhUDyJefPniUjQcyQvlfRJgxwOuN1x3zFB4on5rzwFiHAQofufNdV+SBg9f5
FDgk8f2mfiXgkTIPpFixeBFEGPh5fXL+xUEeKLa5X2NMEI9vI9A9qMYD/3Ie
nPfkxvUCb5Mvn+KBEXJnp74s0UH26oy44VUemBpToqvcSAfPbjorHYrjgSzr
CZ3qV+mgX9o448ITHnivztX7gBkd7Bw4xns7iQdabgp6CZ/Dz189rrmiNNz/
+AhTrRYdJMjmv9+TzwN9zjU03/4PP1+HqOoin3mgkZXOsheNBkJMrumzLPJA
04Tp7Hk7Gsg6O2Bht8IDFaR7sj9a0ECVrolLwzoP3O37VebuBRqYO64TF8G8
DVbXNag2QBqwkJHvpfBug4ksl/bShWngwPKcjbT8NkjYb0Q59o0KficH3NO2
3gb1rvOdW5GjgkMDma9Cvm2DAgv88irfx0Dy3pTCb/q88Gu1j23v7hHwAItK
1v/IC3+7v1KGaoPgzC6TnGZpPpjklPbeZLUfaLo0mPOF8UENp36ZcOkekCFi
I/11kQ/GEdt7coS+A+nPLxMNzfnhhZIBr5jpRhCrWCvXUc0Pzds7VatUMZB3
xJwjAOOHnaE6PS78GEAnFqj7a/mhYf/vx9cHEJi6JJMTV88PrQLqn0/oI6Af
HC5+7is/fNzhd79OoRqQ/pwXaP/BD88+E7+vvlQJfGJHNr8t8EMqKV6t7HUZ
iE/xHbi/xA9D3Nz//LlRBvJzt1cqrvBDhTB2N03ZMtBXpeMVtc4Pu1J7t5dm
fQCq9II5A2YK1LBWDrJIfQ9mNO9SW7ZR4KfJ0mrXlLfAfp71e5McBb67zH9Y
K6UYWOafbLVQoEDOsM0HF5SKgal1UMu0IgV6Vt0qm64pAqfaWL5s30+Bzn5m
Zd8YhUCmgLnS+jAF3nrVq6l54jUYsyHkrJ6gwLKz4mK8vK/AwE6YFalNgTXU
o0uWr/NAV/uDDHEdCjQ/OfVZXzcP1GlsPdXWo8DjkoQ1lkcvQbbwv+g4Iwq8
Ez3dvI01F9h2rHvtvUKBJur/TFMkXwCLsGMeVZYU6CDC0DBtzALG0OfOWSsK
jN9eU1NzKwucLFq76X6NAnv+GCoWY5lAOnzVpuYGBa5t5NxjcXoORjSXDS55
4PXcu14nUJ8C+ldU9SY9KdDJbZG3YG8K6Cj20HngTYG7rudLfIl5BmpFlzRz
fCnQ+JbSULzVU5C1uqA6G0CB2xt2ZGMCScDmzZxEWAwFGpW8nznSFA+cAy5s
6MXh+hDuWnEeiQfuF971cj+mwJJauUZaXhwIXXSPjk2kQE17+Y6e2FhQpLa6
npRGgYIqxl0P5iNBOefl3ksZFKjk1e0WMBcBan5WlO7KpEDt7B+SjYvhoOu+
742MbAq0mdCz3ccRBlZrtnpyCyhw6OmLq5PXHgHmx1alDoUUqDJ84E3IoyDA
bVsTJVdMgTPDCt7hBYFAjBR4sqgUr9+b5t7HGgBO6pFK33+kQJ+gAT3B/vvA
cNf1KM9KCoxd5e0rsfUFFycbHNQ+UeCYO7+J+co94BgdJv4Jo8Cvug9W/h31
ArEd3FF1DRSonnMp85TSHfx+edMhuIkCF39lpe5lvg1e3G09cbqFAt+nFuRf
+OMKPgjGrrW0UuCCTF6CotNNgFFnuqPaKZB449hPjytOoKn83JuzHRQoI7rx
3dfmBhi4THHo7KbA/2RumNCy7cC4/N0TCb0U2Ob85LnN8DUwvdEldvEHBbou
7BT+fMAGMGckdvcPUGDX+9/xFTssAZfrcknqbwpMplTBM/LmQEDTLNJykAJ/
pp3mn75mBmRHdp4YHqHAkZLu8lSdC0D53T2x7DEK/JHR1vtlzggcffRz1Y5K
gRUn7Cy8Q8+AE6bq3bJ0PD/0LVfQSxcYyKaV0Bm4Ht4BDz3eaQPTlc2Igklc
v7b6ybzjWuBqk+X1m1MUSI73afeR1QAOz5DWvhkKPC19aDz85hFw20lCbHYW
ryfKdUfGmYPAV/3hauk8BfoVTDeWxCiCR+ThrruLFBgqfnAjt/w/EP1bq0R1
mQKPEn7svqUgBpKLX0SsrFDgvwtijmtGFJDlz3q9Yo0CmwINExSriaDgnJ2W
7wa+v9tvbnmbz2u8k/oiqvGPAp/++sZc9KhTo3peZnVriwIJ/j38PmcPHP8f
CQ34gg==
              "]]}, Annotation[#, "Charting`Private`Tag$226554#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
cGjl+NTUtP8HtSA9kg==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$226554#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\[Theta] Gain\"", TraditionalForm], 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Gains from backward integration\"", 
           "\"Gains from discrete integrator\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwV13c8ld8fAHDrXvuaZd0QFSGjPdTnNFBIRpoSvokSUSkrVErKzsoWysgo
VCTPY2QTrkoiyubaO+R3fn/d1/v1Oed8zvg8z3PueqvrxtZsLCwsHOwsLP//
jfO0ompccj8Q1Te87c/BQahgyOqflj0Lhpc30COxVytLHsjKXoE2ztpdKti0
0He5PG03YOLPQdskNAhxZIAMRdYVgnNMg+ZgEFTGLwWu2nhBk93WIGXsTlr8
v+Xv9yGN3VYXHRiEDS+5d/5deghR84PJ2/cPwrX9zvbzMn5gwc7jxaU5CHmt
3Skzh/3hTMU94uPeQfhrp98xaRMERy/aHjPYMwiJrB1+81oh0LZxFyu5axCO
NIRsnPseCrn7qusEdw7CYJRO6cyVMLDddyoQbR8E/0srZtNL4WBblKJ6Yusg
MJZswyZknoP478QMLtVBuF0lrT7+JhoGnw2fzVMeBMlnrXWjh2PBVlw8QHPz
IFgpIfYRmwTwvmerNCw/CGxLbl9mPBKBrJC0o60fhNZu03UzWkkw+L2xQ1B6
EFxe8xZOfX8BR93OceSKDYJuaD91KjEZXPJePdMXHQS6S+nJySsp0KT3m1ol
OAjk4TsT40upwKJuomfKPQicP/8ojMqkQ7CGX/HXhQFoIz85MwfTgWv98w8X
ZwYg42VU+cibDEiTqFGqGh8AgxsGF4cPvwbSV05HtX8AIriLIgZscsAikkXX
rHkA8u/o3rgpngvV+cO/muoGIHZ4l8S0B/beuTi5ygFwaBK2mdJ6A00NdW4X
igZAOLaabfL7W+D6GzqjljQAS7R36Y6aedAtkKcUED0AvfeSDScS82BC/KFd
1bMBeGfjGT9+JR/SqjhFGA8H4Ny27XvHlgpAtvzBNh3bAUiqTXAakSkExZVb
T1M3DcBMVIFSl38hcEXZmKxZNwDaNnU9LYuFYHF61cBMZACY7POmRYwiOKo2
tclxtR927zfY6+dbDGf8uy68+doPTTnLbArjBDxm8zuU6dYPwsBtzq9KguC3
mBORDv2wb1PYXt9LJKSFVX89b9UPgTPp027NJKiHFRU4HOuH7SFfra0yS2H3
RhknYk0/eNWq6GpcLIdgk4Ozyq/6IO3N+02Z4eWg+LD6XE5UH7REHWLfWF8O
iapW9vxP+mCDzZli8T0V0CTIuf3ctT6oZfdRZRH5DInCBUL71Ppg7f6fwl8q
K0F8x4kBrexeyM7x+3lNtRa6X12izob2wLDwsL+uZS0kJrxrun6vBxRu6x5Q
DKsFxz/8fE3XeyBRkzepZ7EW0jwOpx3U74HQGv/L5z7XgSHX4pVx9h643RM0
qWPWAI5F9Jo0hz+QwFv3QEirCT5U6Pft3/YbbKD5OfMGA7oDTefWCHSCQ9/m
nvzsH0B+77WTnGqGbvMfXKU1P8DbrUPLs6wZTNoeqzb04vhqr/5saDPsrhtw
7ZNsB1SQf19mezOwv0kVXOvbDrKtRSW37zRBlMf6A3cu/gQUI7TVi9IIpSIS
z/cIdgL5KTJnrUU1bA+oLtFS7gTvSwFCYlzV8JLq0mukjeNXjhdeyq0C/8Vv
alc9OgFdjN3PZK2CU11hldGDuP3GT+a1aZ9hOENwZon8BeT5tl3Z1HLgWe+j
0LW7G7xHby2JixZDtWaImqcWtmVFRsDDj/DoTPyudcbYLEuLJfNFwBb8Qee8
XTewRHrWmP0qhL//mDbf43C8dmtBev57GOkwTfvC9hu8G+PtEx/lQcaCVa6D
APbtp6u3OfLAVtTxAz8du/h74boHb6FX70m13g7svUHc3fffQEdRyWCVzW9g
qZVVfS2eA/VRCpvJemyFiwFfg17Bk/ztGhd/YL+Fcc+XL+Fo08E9//qwn32j
DZakQgWn2THNVeyPVWdZZpOh+HbwlQ8af4Bl8+LzO7cTIevkYnpuBDafYcn7
hGdwzZH69kQydm7g4bvUUFDyFykay8GuvpM26RgML8u31KrUYDPfxP1OegLx
W62G05awBx97bJ7zgEDBOqUkix5s2tBXhiNRuGtdgYEDtqPXrNqn20Sv+XVY
dv+/lblSwzyIfVkiJ09HYquINXVTfYjBY2Z3+RuxY8P1VkSCCFGnbM6PP7Eb
0+rPdAcTEMUSajuELbccpLI1lIjoT3lZztELLBt+a2lWhxGHH4x+cd2HndYS
/+vTc8IhA84pHMNeXvQaGI8moptDeltPYZ+sm7JcF0tMyOxcVLuBXdIbl3Y1
nogv9pTrT8OOO66xxyaJWJgVcDZe2wcsZ99oX72QSsivs1pdlcc2HXIfbk4l
DI7k+2VpYN/iGZI78pJIDT0Tz3Uc27+t8NP6V4SxWlJVyQPstFHr1NI0wvPU
tNG1EOxqK9tJ+XQi/a5Wh0QC9s1rhQsP0gmW+qGJW0XY0fd19+3PILJst0oq
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
0EvRlIrmq646Sd+UIqXOfHP2cKSir/0fR7wWJMnLs2kz/TepiIvaQ20fkCTf
hLrfNLpDRZmPKqnD3yRJnQZZp02eVHT/whONLfmS5M1DdteanlKRU6vOhK6d
JFmnwvLfhldUdOjCxF/teglybW3L78AMKlqRfHds63sJ0tIm1WIxi4rUUpXn
25MkyPkkXfPGfCp6bJT+5/JtCVJeLPysSxlef3zYNje6BOnOqmRY30lFN7ad
f7HhgjjZf4S3bdNvKtK1+M8o/Yg4afiYefFeLxVNplIvLyiLkxsEcq7vHKEi
/pgd5QuLYmQ9fXtQ4gIV2UX6GkQ+EyOldx9ovCXCiU6M8vxd+bSWLHMw1l93
jBON7rkWajqLv7cdbkcd8jmR+vrZWS8ZIXLnnXT+oPec6HiacqgZmxBpKdzW
klPEicbX+b3d0ydIfji648IkyYl4Ik5zLGQIkpcLxp1uNXCi3YaFc+E7BcnS
wEsxbv2cKFf/cmlBHI10OWgw9kicC9kYbOiTE+YlUzo88l5JcaGS03vdnrfz
kF/uZLpUS3OhHMOn5RrJPOSmbC52no1cKMXdKqB2Ow/JkCwXC9DgQq5NS+1v
znKTqjO7Dj7T5UI6Xg1KcxmcZN/L9WEJHlzI0SYw5tl1DpLp83uR3ZsLqacP
yuvv4SCnrJIu2j7gQlfyc/YcYucgWWTWK2s84UKX++2Zg5HspGSkbFlZJBeS
eBzfrVLBRhr6ykz0veVCpLtHd68iK1lss05fZYgL3ZZ1i6TqLhPlWp1vgplc
iE/4/FvZsSWiVj5ObHacC4V71SpXhi4R37voPZ/muNCaY+rP8zr/ElOn6W4n
OLhRq+75dgm3RULxqFTaDRluJKArZifQMEeEKUpwFJpyI8NzsVsj2icJM/NN
r3rOcKOoYEvXvrBJYkPYNl2aGTd6vlRxP/3EJJG/ejz4PytuNHdCLzSwcoJo
/XafTrvOjRTIsPuPbo4TIg+Z2/97zI0O5lio89qNEKG/CWv+j9yIL5cysnm1
hzgn1sC1u4Qb7XVx2uoR1EPIHW/PtCrlRoGBOXFxsj3E2w8zk++ruJGSuCuH
rtYfoiVos6dVKzcymL9RviWqmxA68Czi/Sger8R97GFlOxEcfbnKUpYHiV9d
0NJWaSTu3L5/00OeBy24SLTe+1pPmBvHy0Ru4kFpvCVvztyrI1R4vt2pV+FB
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

              "]]}, Annotation[#, "Charting`Private`Tag$228717#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
DIFAcE3ejGuHlcenpxEU/f96gf8H5veTlw==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$228717#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\[Theta]dot Gain\"", TraditionalForm], 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Gains from backward integration\"", 
           "\"Gains from discrete integrator\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.86735328938205*^9, {3.867353419565257*^9, 3.867353435761058*^9}, 
   3.8673539652710667`*^9, 3.867354197549497*^9, 3.8673542832609806`*^9},
 CellLabel->
  "Out[1461]=",ExpressionUUID->"68e6c879-dee0-4cdf-9901-0be91df2b3a3"]
}, Open  ]]
},
WindowSize->{1428., 735.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a98e1d43-5aca-4c9e-82d3-ff42f854f3fb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 150877, 3701, 2592, "Code",ExpressionUUID->"e27c67ff-0fad-4f7e-bb41-9ac878c93826"],
Cell[CellGroupData[{
Cell[151460, 3725, 15775, 380, 600, "Input",ExpressionUUID->"fe1c9938-1e81-4c93-bed6-a86c7347dd44"],
Cell[167238, 4107, 497, 8, 46, "Output",ExpressionUUID->"15d040c8-76f8-42cb-bfdd-b7aa4ebae07d"],
Cell[167738, 4117, 744, 14, 28, "Message",ExpressionUUID->"0b2a125e-9510-4c15-901a-cb7f06d17bd0"],
Cell[168485, 4133, 1027, 18, 28, "Message",ExpressionUUID->"7eb7131a-ce2a-4ffb-a285-54b3227c31bd"],
Cell[CellGroupData[{
Cell[169537, 4155, 440, 10, 22, "Print",ExpressionUUID->"0345059d-8208-4682-a6eb-d8a84ee4ee0b"],
Cell[169980, 4167, 436, 10, 22, "Print",ExpressionUUID->"1fa4c5c0-b2ba-443d-acb8-e72906eb111b"]
}, Open  ]],
Cell[170431, 4180, 270210, 4825, 416, "Output",ExpressionUUID->"24d25975-3722-483e-9d12-b4553f36bf82"]
}, Open  ]],
Cell[440656, 9008, 207, 3, 51, "Text",ExpressionUUID->"161ab72d-089e-466b-8b54-c632aa590061"],
Cell[CellGroupData[{
Cell[440888, 9015, 3586, 102, 105, "Input",ExpressionUUID->"325fbe3d-702a-4f42-b46e-6cc5c90b3742"],
Cell[444477, 9119, 216253, 3801, 553, "Output",ExpressionUUID->"68e6c879-dee0-4cdf-9901-0be91df2b3a3"]
}, Open  ]]
}
]
*)

