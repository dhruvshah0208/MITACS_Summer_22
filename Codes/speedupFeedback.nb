(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    797458,      15544]
NotebookOptionsPosition[    794619,      15490]
NotebookOutlinePosition[    795021,      15506]
CellTagsIndexPosition[    794978,      15503]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix2", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_", ",", "nGrid_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "y", ",", "x", ",", "L", ",", "RHS", ",", "RHS2", ",", "xdot", ",", 
      "\[Theta]", ",", "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", 
      "soltn", ",", "Af", ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", 
      "R", ",", "Mf", ",", "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", 
      "sol2", ",", "t", ",", "sTable", ",", "s", ",", "time1", ",", "dT", ",",
       "time2"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "i_", "]"}], " ", ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          SubscriptBox["s", "i"]}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["s", "i"], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "i"], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            SubscriptBox["s", "i"]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", 
            RowBox[{"i", "*", 
             RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}]}], "}"}]}]}], ";", 
     " ", "\n", 
     RowBox[{
      SubscriptBox["s", "0"], " ", "=", " ", "S0"}], ";", "\n", 
     RowBox[{"dT", " ", "=", " ", 
      RowBox[{"\[Tau]", "/", "nGrid"}]}], ";", "\n", 
     RowBox[{"sTable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["s", 
          RowBox[{"i", "+", "1"}]], " ", "=", " ", 
         RowBox[{
          SubscriptBox["s", "i"], " ", "+", " ", 
          RowBox[{"dT", "*", 
           RowBox[{"RHS", "[", "i", "]"}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "nGrid"}], "}"}]}], "]"}]}], ";", "\n", 
     "sTable"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"xState", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", 
     RowBox[{"x2dot", "=", 
      FractionBox[
       RowBox[{"u", "+", 
        RowBox[{"A", " ", 
         SuperscriptBox["\[Theta]dot", "2"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"A", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"\[Theta]2dot", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"u", "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"fx", "=", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", 
     RowBox[{"L", "=", 
      FractionBox[
       SuperscriptBox["u", "2"], "2"]}], ";", 
     RowBox[{"Af", "=", 
      TemplateBox[{"fx", "xState"},
       "Grad"]}], ";", 
     RowBox[{"Bf", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", "u"], "fx"}]}], ";", 
     RowBox[{"Q", "=", 
      TemplateBox[{
        TemplateBox[{"L", "xState"}, "Grad", SyntaxForm -> Del], "xState"},
       "Grad"]}], ";", 
     RowBox[{"Mf", "=", 
      TemplateBox[{
        RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"u"}]], "L"}], "xState"},
       "Grad"]}], ";", 
     RowBox[{"R", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]], "L"}]}], ";", 
     RowBox[{"S0", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"Transpose", "[", "Af", "]"}], ".", 
         RowBox[{"S", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"S", "[", "t", "]"}], ".", "Af"}], "-", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", "Bf", "]"}], ".", 
           RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"xdot", "\[Rule]", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]dot", "\[Rule]", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"u", "\[Rule]", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     RowBox[{"sol2", "=", 
      RowBox[{"S", "/.", "\[VeryThinSpace]", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["S", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "\[Equal]", "S0"}]}], "}"}], ",", 
         "S", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
     RowBox[{"S", "=", 
      RowBox[{
      "sol2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
   "]"}]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"CalculateGains2", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "sTable_", ",", 
     "nGrid_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "index", ",", "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", 
       ",", "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q",
        ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"index", " ", "=", " ", 
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], ",", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Tau]", "/", "nGrid"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", 
          RowBox[{"Indexed", "[", 
           RowBox[{"sTable", ",", 
            RowBox[{"1", "+", "index"}]}], "]"}]}], ")"}], "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateGains", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",",
        "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ffCartPendulum", "[", 
   RowBox[{"ICs_", ",", 
    RowBox[{"n_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Tau]_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Tau]1_", "?", "NumericQ"}], ",", 
    RowBox[{"A_", "?", "NumericQ"}], ",", 
    RowBox[{"order_", "?", "NumericQ"}], ",", 
    RowBox[{"maxIter_", "?", "NumericQ"}], ",", 
    RowBox[{"maxError_", "?", "NumericQ"}], ",", 
    RowBox[{"uMax_", "?", "NumericQ"}], ",", 
    RowBox[{"maxCount_", "?", "NumericQ"}], ",", "initGuess_", ",", 
    RowBox[{"maxJ_", "?", "NumericQ"}]}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "frootNew", ",", "errorNew", ",", "InitGuess", ",", "J", ",", "S", ",", 
      "K", ",", "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", 
      ",", "f", ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
      "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
      ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
      "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
      ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
      "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
      ",", 
      RowBox[{"xGuess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["xGuess", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{"xdot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
             ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "\[Theta]dot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"A", " ", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                ")"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
             ")"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "0", ",", "\n", "\t", 
        RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", "A", "+", 
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Lambda]2"}], "+", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
              RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "A", " ", 
                  SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                 SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["A", "2"], " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
              RowBox[{"2", " ", "\[Lambda]4"}], "+", 
              RowBox[{
               SuperscriptBox["\[Lambda]4", "2"], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"2", " ", "A", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                 "-", "\[Lambda]4"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
              RowBox[{"A", " ", 
               RowBox[{"(", 
                RowBox[{"\[Lambda]2", "-", 
                 RowBox[{
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"A", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}],
         ",", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"4", " ", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"A", " ", "\[Theta]dot", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
         "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], "\n", 
     RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      StyleBox["xGuess",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["Table",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["If",
          FontWeight->"Plain"], 
         StyleBox["[",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"i", " ", "!=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]],
            FontWeight->"Plain"], 
           StyleBox[" ",
            FontWeight->"Plain"], 
           StyleBox["=",
            FontWeight->"Plain"], 
           StyleBox[" ",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "i"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["+",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"\[CapitalDelta]t", "*", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}],
             FontWeight->"Plain"]}]}], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "0"], " ", "=", " ", 
           RowBox[{"{", 
            StyleBox[
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}],
             FontWeight->"Plain"], 
            StyleBox["}",
             FontWeight->"Plain"]}]}]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], "\[IndentingNewLine]", "\n", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
       "}"}]}], ";", "\n", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
             "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                 "\n", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                  "]"}]}], ")"}]}], "+", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\n", "\n", 
     RowBox[{"sv", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\n", "\[IndentingNewLine]", 
     RowBox[{"froot", "=", 
      RowBox[{"FindRoot", "[", 
       RowBox[{"eqns", ",", "sv", ",", 
        RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "n"], ",", 
               SubscriptBox["xdot", "n"], ",", 
               SubscriptBox["\[Theta]", "n"], ",", 
               SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "0"], ",", 
               SubscriptBox["xdot", "0"], ",", 
               SubscriptBox["\[Theta]", "0"], ",", 
               SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
             "ICs"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "i"], ",", 
                  SubscriptBox["xdot", "i"], ",", 
                  SubscriptBox["\[Theta]", "i"], ",", 
                  SubscriptBox["\[Theta]dot", "i"], ",", 
                  SubscriptBox["\[Lambda]1", "i"], ",", 
                  SubscriptBox["\[Lambda]2", "i"], ",", 
                  SubscriptBox["\[Lambda]3", "i"], ",", 
                  SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                  RowBox[{"{", 
                   RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
          "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", 
     RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";"}], 
      "*)"}], "\n", "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                 "2"}]}]}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
          " ", 
          RowBox[{"(", 
           RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
        " ", 
        RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
       RowBox[{
        RowBox[{"InitGuess", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         StyleBox["xGuess",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         StyleBox["=",
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox["Table",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           RowBox[{
            StyleBox["If",
             FontWeight->"Plain"], 
            StyleBox["[",
             FontWeight->"Plain"], 
            RowBox[{
             StyleBox[
              RowBox[{"i", " ", "!=", " ", 
               RowBox[{"-", "1"}]}],
              FontWeight->"Plain"], 
             StyleBox[",",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               SubscriptBox["xGuess", 
                RowBox[{"i", "+", "1"}]],
               FontWeight->"Plain"], 
              StyleBox[" ",
               FontWeight->"Plain"], 
              StyleBox["=",
               FontWeight->"Plain"], 
              StyleBox[" ",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "i"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["+",
                FontWeight->"Plain"], 
               StyleBox[
                RowBox[{"\[CapitalDelta]t", "*", 
                 RowBox[{"f", "[", 
                  SubscriptBox["xGuess", "i"], "]"}]}],
                FontWeight->"Plain"]}]}], 
             StyleBox[",",
              FontWeight->"Plain"], 
             RowBox[{
              SubscriptBox[
               StyleBox["xGuess",
                FontWeight->"Plain"], "0"], " ", "=", " ", 
              RowBox[{"{", 
               StyleBox[
                RowBox[{
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"ICs", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"InitGuess", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}],
                FontWeight->"Plain"], 
               StyleBox["}",
                FontWeight->"Plain"]}]}]}], 
            StyleBox["]",
             FontWeight->"Plain"]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           StyleBox[
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"n", "-", "1"}]}], "}"}],
            FontWeight->"Plain"]}], 
          StyleBox["]",
           FontWeight->"Plain"]}]}], 
        StyleBox[";",
         FontWeight->"Plain"], "\[IndentingNewLine]", 
        RowBox[{"sv", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
               "\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"xGuess", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"frootNew", "=", 
         RowBox[{"FindRoot", "[", 
          RowBox[{"eqns", ",", "sv", ",", 
           RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"errorNew", " ", "=", " ", 
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "n"], ",", 
                  SubscriptBox["xdot", "n"], ",", 
                  SubscriptBox["\[Theta]", "n"], ",", 
                  SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
               ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "0"], ",", 
                  SubscriptBox["xdot", "0"], ",", 
                  SubscriptBox["\[Theta]", "0"], ",", 
                  SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                "ICs"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Thread", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
             "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
          RowBox[{
           RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
           RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
           RowBox[{"uff0", "=", 
            RowBox[{"ListInterpolation", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
               " ", "froot"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
              RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
           "\n", 
           RowBox[{"J", " ", "=", " ", 
            RowBox[{"NIntegrate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
           ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
        RowBox[{"count", " ", "=", " ", 
         RowBox[{"count", "+", "1"}]}], ";", "\n", "\n", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Count Shooting= \>\"", ",", "count", ",", 
          "\"\<    Error New = \>\"", ",", "errorNew", ",", 
          "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}]}], "\n", 
      "\n", "]"}], ";", "\n", "\n", "\n", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                 "2"}]}]}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"CalculateSMatrix", "[", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"K", "[", "time_", "]"}], " ", ":=", " ", 
      RowBox[{"CalculateGains", "[", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";",
      "\n", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], "}"}]}]}],
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum2", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "maxError_", ",", "uMax_", ",", 
     "maxCount_", ",", "initGuess_", ",", "maxJ_", ",", 
     StyleBox["nGrid_",
      FontWeight->"Plain"]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "time1", ",", "time2", ",", "sTable", ",", "frootNew", ",", "errorNew", 
       ",", "InitGuess", ",", "J", ",", "S", ",", "K", ",", "count", ",", 
       "error", ",", "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]",
        ",", "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", 
       "\[Lambda]3", ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", 
       ",", "eqns", ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", 
       "xff0", ",", "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",",
        "uff0", ",", "\n", "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", 
       ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", 
       "\[Lambda]4ff0", ",", "i", ",", 
       RowBox[{"xGuess", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       FractionBox["\[Tau]", "n"]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", 
        RowBox[{"xdot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"\[Lambda]4", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
         "\[Theta]dot", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "\n", "0",
          ",", 
         RowBox[{"-", "\[Lambda]1"}], ",", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"A", " ", "\[Theta]dot", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{"\[Lambda]4", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}]], 
          "-", "\[Lambda]3"}]}], "}"}]}], ";", "\n", 
      RowBox[{"InitGuess", "=", "initGuess"}], ";", "\n", 
      RowBox[{"xGuess", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[NotEqual]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]], "=", 
            RowBox[{
             SubscriptBox["xGuess", "i"], "+", 
             RowBox[{"\[CapitalDelta]t", " ", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}]}]}], ",", "\n", 
           RowBox[{
            SubscriptBox["xGuess", "0"], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "InitGuess", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}]}], "}"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["xdot", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["x", "n"], "\[Equal]", 
          SubscriptBox["xdot", "n"], "\[Equal]", "0"}], ",", 
         RowBox[{
          SubscriptBox["\[Theta]", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["\[Theta]dot", "0"], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          SubscriptBox["\[Theta]dot", "n"], "\[Equal]", "0"}], ",", 
         RowBox[{
          SubscriptBox["\[Theta]", "n"], "\[Equal]", "\[Pi]"}]}], "}"}]}], 
      ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "i"], ",", 
                SubscriptBox["xdot", "i"], ",", 
                SubscriptBox["\[Theta]", "i"], ",", 
                SubscriptBox["\[Theta]dot", "i"], ",", 
                SubscriptBox["\[Lambda]1", "i"], ",", 
                SubscriptBox["\[Lambda]2", "i"], ",", 
                SubscriptBox["\[Lambda]3", "i"], ",", 
                SubscriptBox["\[Lambda]4", "i"]}], "}"}], "\[Equal]", 
              RowBox[{
               RowBox[{
                FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                 ")"}]}], "+", 
               RowBox[{"{", 
                RowBox[{
                 SubscriptBox["x", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["xdot", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Theta]", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Theta]dot", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]1", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]2", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]3", 
                  RowBox[{"i", "-", "1"}]], ",", 
                 SubscriptBox["\[Lambda]4", 
                  RowBox[{"i", "-", "1"}]]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["x", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["xdot", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Theta]", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Theta]dot", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]1", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]2", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]3", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], ",", 
               RowBox[{
                RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
              "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time1", ",", "froot"}], "}"}], "=", 
       RowBox[{"Timing", "[", 
        RowBox[{"FindRoot", "[", 
         RowBox[{"eqns", ",", "sv", ",", 
          RowBox[{"MaxIterations", "\[Rule]", "maxIter"}]}], "]"}], "]"}]}], 
      ";", "\n", 
      RowBox[{"error", "=", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], "-", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], "-", "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "\[VeryThinSpace]", "froot"}], ",", 
         "\"\<Frobenius\>\""}], "]"}]}], ";", 
      RowBox[{"count", "=", "0"}], ";", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], " ", 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"error", ">", "maxError"}], "||", 
           RowBox[{"J", ">", "maxJ"}]}], ")"}], "&&", 
         RowBox[{"count", "\[LessEqual]", "maxCount"}]}], ",", 
        RowBox[{
         RowBox[{"InitGuess", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         RowBox[{"xGuess", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[NotEqual]", 
               RowBox[{"-", "1"}]}], ",", 
              RowBox[{
               SubscriptBox["xGuess", 
                RowBox[{"i", "+", "1"}]], "=", 
               RowBox[{
                SubscriptBox["xGuess", "i"], "+", 
                RowBox[{"\[CapitalDelta]t", " ", 
                 RowBox[{"f", "[", 
                  SubscriptBox["xGuess", "i"], "]"}]}]}]}], ",", 
              RowBox[{
               SubscriptBox["xGuess", "0"], "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "ICs", "\[LeftDoubleBracket]", "4", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "3", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "InitGuess", "\[LeftDoubleBracket]", "4", 
                  "\[RightDoubleBracket]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
         RowBox[{"sv", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["x", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["xdot", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Theta]dot", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]1", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]2", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]3", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  SubscriptBox["\[Lambda]4", "i"], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "\[Rule]", "maxIter"}]}], "]"}]}], ";", 
         RowBox[{"errorNew", "=", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], "-", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], "-", "ICs"}], 
                ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "\[VeryThinSpace]", "frootNew"}], ",", 
            "\"\<Frobenius\>\""}], "]"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", "\[LessEqual]", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", "=", "frootNew"}], ";", 
            RowBox[{"error", "=", "errorNew"}], ";", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[Lambda]4", "i"], " ", 
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
                    SubscriptBox["\[Lambda]2", "i"]}], 
                   RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                "\[VeryThinSpace]", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], 
            ";", 
            RowBox[{"J", "=", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
            ";"}], ",", "_"}], "]"}], ";", 
         RowBox[{"count", "=", 
          RowBox[{"count", "+", "1"}]}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}]}], "]"}], 
      ";", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["x", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["xdot", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Theta]dot", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Lambda]1ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]1", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Lambda]2ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]2", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Lambda]3ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]3", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"\[Lambda]4ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["\[Lambda]3", "i"], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{
               SubscriptBox["\[Lambda]4", "i"], " ", 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "i"], "]"}]}], "-", 
              SubscriptBox["\[Lambda]2", "i"]}], 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "i"], "]"}], "2"]}]}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
          "\[VeryThinSpace]", "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "order"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"sTable", "=", 
       RowBox[{"CalculateSMatrix2", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A", ",", "nGrid"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"K", "[", "time_", "]"}], ":=", 
       RowBox[{"CalculateGains2", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "sTable", ",", 
         "nGrid"}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["xdot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]dot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"uff0", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
        "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"uff0", "[", "t", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", 
      RowBox[{"\[Kappa]3", "=", 
       RowBox[{"-", "0.1`"}]}], ";", 
      RowBox[{"\[Kappa]4", "=", 
       RowBox[{"-", "0.65`"}]}], ";", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["xdot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Theta]dot", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                SuperscriptBox[
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
        "}"}]}], ";", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
          RowBox[{
          "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
           "}"}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
            "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";", 
      RowBox[{"J", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"us", "[", "t", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J"}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", 
     RowBox[{"\[Kappa]3", "=", 
      RowBox[{"-", "0.1`"}]}], ";", 
     RowBox[{"\[Kappa]4", "=", 
      RowBox[{"-", "0.65`"}]}], ";", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "\[Pi]"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", "0"}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
          "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["xdot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         FractionBox[
          RowBox[{
           RowBox[{"u", "[", "t", "]"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Theta]dot", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"u", "[", "t", "]"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"\[Theta]dot", "[", "t", "]"}], "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}]}], 
       "}"}]}], ";", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
         "ICs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
         "ICs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
         "ICs", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
         "ICs", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}]}], 
       "}"}]}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "\[Rule]", "None"}], 
          "}"}]}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "\[Tau]"}]}], 
             "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"J", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"us", "[", "t", "]"}], "2"], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Energy", "[", 
    RowBox[{"{", 
     RowBox[{
     "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "A", "*", 
     RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
    " ", "-", " ", 
    RowBox[{"A", "*", 
     RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.865967298267394*^9, 3.8659673001198*^9}, {
   3.866571893798601*^9, 3.866571940716648*^9}, {3.8665719967138014`*^9, 
   3.86657200493918*^9}, 3.8665721461421776`*^9, {3.8665731331726017`*^9, 
   3.8665731928485823`*^9}, {3.866573291140256*^9, 3.8665733048578844`*^9}, {
   3.866573636752106*^9, 3.866573657335546*^9}, {3.86657481838451*^9, 
   3.8665748273656473`*^9}, {3.866574870351947*^9, 3.8665748910333557`*^9}, {
   3.8665788373566265`*^9, 3.8665788400997524`*^9}, {3.866579031902623*^9, 
   3.8665790413156233`*^9}, {3.8665801062232275`*^9, 3.866580141002143*^9}, {
   3.866664127693946*^9, 3.8666641298202667`*^9}, {3.8667356182927976`*^9, 
   3.86673568611979*^9}, {3.866735735976613*^9, 3.866735746106326*^9}, {
   3.8667357917795067`*^9, 3.8667357922973385`*^9}, {3.8667369179510965`*^9, 
   3.8667371366351404`*^9}, {3.866737410171386*^9, 3.8667375163569317`*^9}, {
   3.866737646330759*^9, 3.8667376465136995`*^9}, {3.8667376988837075`*^9, 
   3.8667377777961025`*^9}, {3.8667386986753044`*^9, 
   3.8667387105614476`*^9}, {3.8667389141044035`*^9, 
   3.8667389332601886`*^9}, {3.8667389783395615`*^9, 
   3.8667389806728044`*^9}, {3.866739043478426*^9, 3.8667390512579017`*^9}, {
   3.8667390870272956`*^9, 3.8667391318757434`*^9}, {3.86674040926027*^9, 
   3.8667404968818393`*^9}, 3.866740531578581*^9, {3.8667406439541187`*^9, 
   3.866740650558975*^9}, {3.8667406893863773`*^9, 3.866740713276625*^9}, {
   3.8673532212089357`*^9, 3.867353262241763*^9}, {3.8673533765330715`*^9, 
   3.8673533879534054`*^9}, {3.867353479603982*^9, 3.867353730198533*^9}, {
   3.8673537746842513`*^9, 3.867353800998803*^9}, {3.8674250653573227`*^9, 
   3.867425103219036*^9}, {3.867425211775809*^9, 3.867425260810897*^9}, {
   3.86742535854918*^9, 3.8674253968377547`*^9}, {3.8674265266621175`*^9, 
   3.8674266199138565`*^9}, {3.8674271804199677`*^9, 
   3.8674271965717263`*^9}, {3.867427267981553*^9, 3.8674273052754507`*^9}, {
   3.8674273491782045`*^9, 3.867427384921605*^9}, {3.867427420566038*^9, 
   3.8674275576965384`*^9}, 3.867427676198084*^9, {3.8674281649544783`*^9, 
   3.867428175713987*^9}, {3.8674282062290845`*^9, 3.8674282201715593`*^9}, {
   3.8674282835409956`*^9, 3.8674283269169197`*^9}, {3.867428359760262*^9, 
   3.8674283772535853`*^9}, {3.8674284114824777`*^9, 3.867428418922064*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[2647]:=",ExpressionUUID->"e27c67ff-0fad-4f7e-bb41-9ac878c93826"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"n", "=", "20"}], ";", 
    RowBox[{"\[Tau]", "=", "5"}], ";", 
    RowBox[{"\[Tau]1", "=", 
     RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
    RowBox[{"A", "=", "0.2"}], ";", 
    RowBox[{"order", " ", "=", " ", "4"}], ";", 
    RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
    RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
    RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
    RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
    RowBox[{"nGrid", " ", "=", " ", 
     StyleBox[
      RowBox[{"6", "0"}]]}], ";", 
    RowBox[{"maxJ", " ", "=", " ", 
     RowBox[{
      RowBox[{"2", "^", "2"}], "*", "\[Tau]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
    FontWeight->"Plain"], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ICs = \>\"", ",", "ICs"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Energy Initial = \>\"", ",", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time1", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
         "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K1"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time2", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1a2", ",", "xdot1a2", ",", "\[Theta]1a2", ",", "\[Theta]dot1a2", 
         ",", "u1a2", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
         "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K2"}], 
        "}"}]}], "}"}], "=", 
     RowBox[{"Timing", "[", 
      RowBox[{"ffCartPendulum2", "[", 
       RowBox[{
       "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order",
         ",", "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
        "InitGuess", ",", "maxJ", ",", "nGrid"}], "]"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
      "u1b", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K1"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a2", ",", "xdot1a2", ",", 
      "\[Theta]1a2", ",", "\[Theta]dot1a2", ",", "u1a2", ",", "A", ",", 
      "uMax", ",", "K2"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ff computation time case 1 = \>\"", ",", "time1"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<ff computation time case 2 = \>\"", ",", "time2"}], "]"}], 
   ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution 1\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 RowBox[{
  RowBox[{
   StyleBox["p1a2",
    FontWeight->"Plain"], " ", "=", " ", 
   StyleBox[
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a2", "[", "t", "]"}], ",", 
        RowBox[{"u1a2", "[", "t", "]"}], ",", 
        RowBox[{"x1a2", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a2", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a2", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution 2\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}],
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1b", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<feedback solution with backward integration \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<feedback solution with discrete integrator\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1a", ",", "p1a2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p1b", ",", "p1c"}], "}"}]}], "}"}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}, {3.8648376392630434`*^9, 
   3.8648376724073963`*^9}, {3.864837714278944*^9, 3.864837730198832*^9}, {
   3.8648378000064077`*^9, 3.8648378125593743`*^9}, {3.8649192769420185`*^9, 
   3.8649193477849746`*^9}, {3.864919494855133*^9, 3.8649194949211097`*^9}, {
   3.8649195280303416`*^9, 3.8649195281572976`*^9}, {3.8653430179727*^9, 
   3.865343036098905*^9}, 3.865343126059147*^9, {3.8653475497269955`*^9, 
   3.8653475530049467`*^9}, {3.8653477236523952`*^9, 3.865347782090714*^9}, {
   3.8653478250659747`*^9, 3.8653479145413723`*^9}, {3.865347947982681*^9, 
   3.8653479716121283`*^9}, {3.8653525506493053`*^9, 3.865352599733616*^9}, {
   3.865352652578721*^9, 3.865352654559091*^9}, {3.865353691929463*^9, 
   3.8653537130737047`*^9}, {3.8653538376038947`*^9, 
   3.8653538378768077`*^9}, {3.86535394844846*^9, 3.8653539491322412`*^9}, {
   3.865356726928239*^9, 3.86535675400958*^9}, {3.8653568966909695`*^9, 
   3.8653569073245697`*^9}, {3.8653569602766423`*^9, 3.865356975731701*^9}, {
   3.865357167158506*^9, 3.865357170606405*^9}, {3.865357223946353*^9, 
   3.8653572240363226`*^9}, {3.8653573936860905`*^9, 3.8653574653461814`*^9}, 
   3.8653581484318137`*^9, {3.8653592129605074`*^9, 3.86535921807887*^9}, {
   3.865449250153057*^9, 3.8654493036779404`*^9}, {3.8659655743007927`*^9, 
   3.8659655800469513`*^9}, {3.865965617846839*^9, 3.865965644481305*^9}, {
   3.865965768794471*^9, 3.8659657912472773`*^9}, {3.865965935003215*^9, 
   3.865965935326112*^9}, {3.8659659868356075`*^9, 3.865966006077441*^9}, 
   3.865966083507631*^9, 3.8659664582355595`*^9, {3.86596655432277*^9, 
   3.865966563962682*^9}, 3.8659666064800587`*^9, {3.8659666379409776`*^9, 
   3.865966662002268*^9}, {3.865966724901114*^9, 3.865966734984883*^9}, {
   3.8659667752089934`*^9, 3.8659667994792185`*^9}, {3.8659670983784432`*^9, 
   3.865967114308339*^9}, {3.865967415398863*^9, 3.865967415558814*^9}, 
   3.86596806058513*^9, {3.8659697572814713`*^9, 3.865969792480193*^9}, {
   3.865969847631523*^9, 3.8659698777298765`*^9}, {3.8659699125237284`*^9, 
   3.8659699227194633`*^9}, {3.8660520784155097`*^9, 3.866052078606448*^9}, {
   3.866299038992057*^9, 3.866299063807024*^9}, {3.8662991135359306`*^9, 
   3.866299117442664*^9}, {3.866299188589633*^9, 3.86629919001517*^9}, {
   3.866299354438949*^9, 3.866299364496692*^9}, 3.8662994378149586`*^9, 
   3.8662994758636427`*^9, 3.8662995455700784`*^9, {3.866309716236847*^9, 
   3.86630980613275*^9}, {3.8663098363239756`*^9, 3.8663098541502047`*^9}, 
   3.8663105182622347`*^9, 3.866310619892336*^9, 3.8663117939323*^9, {
   3.8665656447826576`*^9, 3.8665656490393023`*^9}, {3.86666037409522*^9, 
   3.8666605929433*^9}, {3.8666606653571625`*^9, 3.8666608053664308`*^9}, {
   3.866660839553507*^9, 3.8666608737455826`*^9}, {3.866661162186427*^9, 
   3.8666611737737226`*^9}, {3.8666653738348045`*^9, 3.866665397429268*^9}, {
   3.8667344208606143`*^9, 3.8667344797394304`*^9}, {3.8667353231215725`*^9, 
   3.866735333097335*^9}, {3.866735385339385*^9, 3.866735418014782*^9}, {
   3.866735702678417*^9, 3.8667357070869875`*^9}, {3.8667358235761895`*^9, 
   3.86673582400605*^9}, {3.866735896269603*^9, 3.866735924112569*^9}, {
   3.8667361218833976`*^9, 3.8667361220503435`*^9}, {3.866737159880598*^9, 
   3.8667371629755936`*^9}, 3.8667373705322485`*^9, {3.8667375563659506`*^9, 
   3.8667375763234744`*^9}, 3.866739987559099*^9, {3.8667402825863724`*^9, 
   3.866740283643031*^9}, {3.8667403886539574`*^9, 3.8667403924007425`*^9}, {
   3.8667405674789343`*^9, 3.8667405865157566`*^9}, {3.8667407977972016`*^9, 
   3.866740821291578*^9}, {3.8671630011884055`*^9, 3.867163020098357*^9}, {
   3.867352977485181*^9, 3.8673529973358107`*^9}, {3.8673530973936853`*^9, 
   3.8673531264093695`*^9}, {3.8673532479253597`*^9, 
   3.8673532480693145`*^9}, {3.867353394522298*^9, 3.867353424387709*^9}, {
   3.8673538177504263`*^9, 3.867353991042793*^9}, {3.86735409649494*^9, 
   3.867354178349663*^9}, {3.8673553380933447`*^9, 3.8673553396948304`*^9}, {
   3.867423858690897*^9, 3.8674239583605523`*^9}, 3.867424003139022*^9, {
   3.867424050904522*^9, 3.867424125774227*^9}, {3.8674241562363405`*^9, 
   3.8674242324536085`*^9}, {3.8674242665505433`*^9, 
   3.8674242818535786`*^9}, {3.867424314162092*^9, 3.8674243698710146`*^9}, {
   3.867424420135703*^9, 3.8674244202186756`*^9}, {3.867424456268978*^9, 
   3.8674244741041913`*^9}, 3.8674246173657007`*^9, {3.8674246693478317`*^9, 
   3.8674246877288685`*^9}, {3.8674247403247986`*^9, 
   3.8674247408206377`*^9}, {3.8674247893518896`*^9, 
   3.8674248932321787`*^9}, {3.867425936549614*^9, 3.867426049116087*^9}, 
   3.8674261141789722`*^9, {3.867426149856395*^9, 3.8674261956245418`*^9}, {
   3.8674262312599783`*^9, 3.867426231496904*^9}, {3.867426262045988*^9, 
   3.8674262624308643`*^9}, {3.8674263520347853`*^9, 3.8674263565563188`*^9}},
 CellLabel->
  "In[2659]:=",ExpressionUUID->"fe1c9938-1e81-4c93-bed6-a86c7347dd44"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ICs = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
  SequenceForm["ICs = ", {0, 0, 0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8673539343359976`*^9, 3.867353992907194*^9}, 
   3.8673541818185472`*^9, 3.8673553427628446`*^9, {3.867423847477535*^9, 
   3.867423960490861*^9}, {3.8674240044286036`*^9, 3.8674241266959267`*^9}, 
   3.8674241609937963`*^9, {3.8674242532768497`*^9, 3.867424283498043*^9}, {
   3.8674243591414957`*^9, 3.867424371634442*^9}, {3.867424421173366*^9, 
   3.8674244749539137`*^9}, {3.8674246004931755`*^9, 
   3.8674247009425783`*^9}, {3.867424732730263*^9, 3.8674248955464277`*^9}, 
   3.867425116800629*^9, {3.8674252435035133`*^9, 3.867425267958577*^9}, {
   3.8674253824394274`*^9, 3.8674254156496506`*^9}, {3.8674259392377415`*^9, 
   3.8674260172214355`*^9}, {3.867426049890834*^9, 3.8674261285553064`*^9}, {
   3.8674261881349726`*^9, 3.8674262851684847`*^9}, 3.867426357577987*^9, 
   3.867427326755481*^9, 3.867427482922803*^9, {3.8674278594636126`*^9, 
   3.8674278668362207`*^9}, 3.8674281807123647`*^9, 3.8674282383986444`*^9, 
   3.867428310764162*^9, 3.867428382620844*^9, 3.8674284237155085`*^9},
 CellLabel->
  "During evaluation of \
In[2659]:=",ExpressionUUID->"434c70f3-636a-4be3-afc5-a92f92c87795"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy Initial = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2`"}]}],
  SequenceForm["Energy Initial = ", -0.2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8673539343359976`*^9, 3.867353992907194*^9}, 
   3.8673541818185472`*^9, 3.8673553427628446`*^9, {3.867423847477535*^9, 
   3.867423960490861*^9}, {3.8674240044286036`*^9, 3.8674241266959267`*^9}, 
   3.8674241609937963`*^9, {3.8674242532768497`*^9, 3.867424283498043*^9}, {
   3.8674243591414957`*^9, 3.867424371634442*^9}, {3.867424421173366*^9, 
   3.8674244749539137`*^9}, {3.8674246004931755`*^9, 
   3.8674247009425783`*^9}, {3.867424732730263*^9, 3.8674248955464277`*^9}, 
   3.867425116800629*^9, {3.8674252435035133`*^9, 3.867425267958577*^9}, {
   3.8674253824394274`*^9, 3.8674254156496506`*^9}, {3.8674259392377415`*^9, 
   3.8674260172214355`*^9}, {3.867426049890834*^9, 3.8674261285553064`*^9}, {
   3.8674261881349726`*^9, 3.8674262851684847`*^9}, 3.867426357577987*^9, 
   3.867427326755481*^9, 3.867427482922803*^9, {3.8674278594636126`*^9, 
   3.8674278668362207`*^9}, 3.8674281807123647`*^9, 3.8674282383986444`*^9, 
   3.867428310764162*^9, 3.867428382620844*^9, 3.867428423721506*^9},
 CellLabel->
  "During evaluation of \
In[2659]:=",ExpressionUUID->"7100afdc-768a-44a8-9611-22263cc82a09"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 2678, 522, 
   17550804117752938973, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8673532499667034`*^9, 3.8673532699612846`*^9}, {
   3.8673534070882626`*^9, 3.867353426841921*^9}, 3.8673536608198056`*^9, 
   3.8673538197157946`*^9, 3.8673538890955215`*^9, {3.8673539342740173`*^9, 
   3.8673539928722057`*^9}, 3.8673541817845583`*^9, 3.867355342728855*^9, {
   3.8674238474145555`*^9, 3.867423960415886*^9}, {3.867424004120703*^9, 
   3.8674241263320446`*^9}, 3.867424160579931*^9, {3.8674242528739805`*^9, 
   3.8674242830541873`*^9}, {3.8674243590975103`*^9, 
   3.8674243712005825`*^9}, {3.867424420810485*^9, 3.8674244745460463`*^9}, {
   3.867424600073312*^9, 3.867424700809622*^9}, {3.86742473258531*^9, 
   3.8674248954924464`*^9}, 3.8674251144673862`*^9, {3.867425243432536*^9, 
   3.8674252678866005`*^9}, {3.8674253806170187`*^9, 3.867425415579674*^9}, {
   3.867425939188758*^9, 3.867426016733594*^9}, {3.8674260494849653`*^9, 
   3.8674261281314445`*^9}, {3.867426195060725*^9, 3.8674262852754498`*^9}, 
   3.8674263597392855`*^9, 3.8674273276591873`*^9, 3.8674274850441146`*^9, {
   3.8674278594766083`*^9, 3.867427867850891*^9}, 3.8674281817570257`*^9, 
   3.86742823952328*^9, 3.8674283118038244`*^9, 3.8674283837314835`*^9, 
   3.867428426269679*^9},
 CellLabel->
  "During evaluation of \
In[2659]:=",ExpressionUUID->"3c400aba-938b-4ba5-9ae8-f454980e0b21"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$503859\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$503859\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"2.294844166797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.445415386059924`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.0014733461967489678`\\\"}]\\) for the integral and \
error estimates.\"", 2, 2678, 523, 17550804117752938973, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8673532499667034`*^9, 3.8673532699612846`*^9}, {
   3.8673534070882626`*^9, 3.867353426841921*^9}, 3.8673536608198056`*^9, 
   3.8673538197157946`*^9, 3.8673538890955215`*^9, {3.8673539342740173`*^9, 
   3.8673539928722057`*^9}, 3.8673541817845583`*^9, 3.867355342728855*^9, {
   3.8674238474145555`*^9, 3.867423960415886*^9}, {3.867424004120703*^9, 
   3.8674241263320446`*^9}, 3.867424160579931*^9, {3.8674242528739805`*^9, 
   3.8674242830541873`*^9}, {3.8674243590975103`*^9, 
   3.8674243712005825`*^9}, {3.867424420810485*^9, 3.8674244745460463`*^9}, {
   3.867424600073312*^9, 3.867424700809622*^9}, {3.86742473258531*^9, 
   3.8674248954924464`*^9}, 3.8674251144673862`*^9, {3.867425243432536*^9, 
   3.8674252678866005`*^9}, {3.8674253806170187`*^9, 3.867425415579674*^9}, {
   3.867425939188758*^9, 3.867426016733594*^9}, {3.8674260494849653`*^9, 
   3.8674261281314445`*^9}, {3.867426195060725*^9, 3.8674262852754498`*^9}, 
   3.8674263597392855`*^9, 3.8674273276591873`*^9, 3.8674274850441146`*^9, {
   3.8674278594766083`*^9, 3.867427867850891*^9}, 3.8674281817570257`*^9, 
   3.86742823952328*^9, 3.8674283118038244`*^9, 3.8674283837314835`*^9, 
   3.8674284262966704`*^9},
 CellLabel->
  "During evaluation of \
In[2659]:=",ExpressionUUID->"22471696-cffb-420d-beba-b296a61c1b43"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ff computation time case 1 = \"\>", "\[InvisibleSpace]", 
   "0.640625`"}],
  SequenceForm["ff computation time case 1 = ", 0.640625],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8673539343359976`*^9, 3.867353992907194*^9}, 
   3.8673541818185472`*^9, 3.8673553427628446`*^9, {3.867423847477535*^9, 
   3.867423960490861*^9}, {3.8674240044286036`*^9, 3.8674241266959267`*^9}, 
   3.8674241609937963`*^9, {3.8674242532768497`*^9, 3.867424283498043*^9}, {
   3.8674243591414957`*^9, 3.867424371634442*^9}, {3.867424421173366*^9, 
   3.8674244749539137`*^9}, {3.8674246004931755`*^9, 
   3.8674247009425783`*^9}, {3.867424732730263*^9, 3.8674248955464277`*^9}, 
   3.867425116800629*^9, {3.8674252435035133`*^9, 3.867425267958577*^9}, {
   3.8674253824394274`*^9, 3.8674254156496506`*^9}, {3.8674259392377415`*^9, 
   3.8674260172214355`*^9}, {3.867426049890834*^9, 3.8674261285553064`*^9}, {
   3.8674261881349726`*^9, 3.8674262851684847`*^9}, 3.867426357577987*^9, 
   3.867427326755481*^9, 3.867427482922803*^9, {3.8674278594636126`*^9, 
   3.8674278668362207`*^9}, 3.8674281807123647`*^9, 3.8674282383986444`*^9, 
   3.867428310764162*^9, 3.867428382620844*^9, 3.8674284263166637`*^9},
 CellLabel->
  "During evaluation of \
In[2659]:=",ExpressionUUID->"c46d6f09-5712-4287-a6ac-d961b4d0eaab"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ff computation time case 2 = \"\>", "\[InvisibleSpace]", 
   "0.375`"}],
  SequenceForm["ff computation time case 2 = ", 0.375],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8673539343359976`*^9, 3.867353992907194*^9}, 
   3.8673541818185472`*^9, 3.8673553427628446`*^9, {3.867423847477535*^9, 
   3.867423960490861*^9}, {3.8674240044286036`*^9, 3.8674241266959267`*^9}, 
   3.8674241609937963`*^9, {3.8674242532768497`*^9, 3.867424283498043*^9}, {
   3.8674243591414957`*^9, 3.867424371634442*^9}, {3.867424421173366*^9, 
   3.8674244749539137`*^9}, {3.8674246004931755`*^9, 
   3.8674247009425783`*^9}, {3.867424732730263*^9, 3.8674248955464277`*^9}, 
   3.867425116800629*^9, {3.8674252435035133`*^9, 3.867425267958577*^9}, {
   3.8674253824394274`*^9, 3.8674254156496506`*^9}, {3.8674259392377415`*^9, 
   3.8674260172214355`*^9}, {3.867426049890834*^9, 3.8674261285553064`*^9}, {
   3.8674261881349726`*^9, 3.8674262851684847`*^9}, 3.867426357577987*^9, 
   3.867427326755481*^9, 3.867427482922803*^9, {3.8674278594636126`*^9, 
   3.8674278668362207`*^9}, 3.8674281807123647`*^9, 3.8674282383986444`*^9, 
   3.867428310764162*^9, 3.867428382620844*^9, 3.8674284263206625`*^9},
 CellLabel->
  "During evaluation of \
In[2659]:=",ExpressionUUID->"1e96fa20-4844-45a3-91a5-2626c0d0467e"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
8EwsVo9xPt3M6rsrVEQofu+aLbKunwBZLMv3Ktj1kQ18W+85RIShjlEn7M7M
Icti1i/BFWS4i75yLuYwExS9unw5PZkApSbOr+HuZ6F7hqzNfr/IMGT/Secg
YyaI2z317pECEXZOLlCjReYRx7SAe4w5GVY7Zx47g+1fGyuc/ZhFZJhqtCEm
Fts/cV7ta978+v0eYvH6nyctzvIQ4bNdjjWfsPne2hGo2LybDCPcXLvWmTLB
dn7x0oFKAlSTfurtzDOPJBMesep0iHBft5DA6WkWahZ59MnSjwyN0kJWnsfq
3fLXC8efzS3ND86z+fY5SJoIEaG/fnZKo3MrcNmd+gpW9AKDjruvpFb3AJ/V
rtNpBc2Aed/jU9dpGlDN79gk6vME4Hw7Uq7sd+OFSjbfPtdb/27rix9snn34
qADdFS7xbNfEt/6sezQ2z77lGvbIR5fO5tlJnX/P2y7+ZfPsjOp0lfGUMTbP
Nl1cp113ZIrNsxeTuCaHLRhsnl1jbBVsZMxCOaaVHG1HibCiWLpGms5CmVL1
bjcsOGB6Ts++/YxZNKwo/SXjLCeMP0uLqD09hqrazle9cOaCmiJ/KPW27ci5
MdzqrDc3PJ4waqce0QBOr1r4lXyVByZG/FBOpg+AXrtPtV53eGE4V3NeQPYE
qCo6te5KIAmmNc1CzvQZYKrTX9N6gw9ulpCXOP+ZAaKqqn6X3ifD2b8KxH94
hNCLPz177vHDoKqevwl9DLBeUijU9akAFOfTzD59Eevvfog1uL8ShPcPHv3e
qjANtvSZzHLFC8GuTuOJQbMJwJwaCZf5IAwzeNWXuW8fATiPL7SPYar8mUU4
j/9ETsgvcCEUz6Y/CaVZLtUn0fMOn557LN0POpn3W1ROdoIVyn4GMKIbQGOt
x/y7sf6+ZCH6YU85eE+5OZ9r1Afu/zzDs80vl83vZVbNmwtLNbB5fGlX+aVV
en1svp7JtfeX8KUZtLiSS37zy0VgTT74YgWDifarhYMXTQToG7gjKl9oHnVY
z50waiXCvt0OEzqv5hBPi/SZoS4OKC94f1jbfwpJv/9r1jrLDfvXVR9TnKcA
nYsCozkLWD+gXbZrLGkUcF7sdr/JTYJ7XGQfQAL2PJRXtpVF4IOXhPn17Ptn
QdwH3rExLqx+025zfML6edKfhec/+Pih5DMut5cHmKBia1NGj4gApF45q5C8
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
PUk=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{901, 2748, 2746, 422, 423, 424, 425, 812, 708, 
                622, 552, 499, 466, 834, 730, 644, 574, 520, 851, 747, 661, 
                591, 426, 813, 709, 623, 871, 767, 553, 857, 753, 892, 667, 
                880, 776}}], 
               PolygonBox[CompressedData["
1:eJwV0slLVWEYB+Bj0sKMypyHzP6BBoeGpUGBRQWBlWWTEBSREY0mGRQ0WalN
uigocFfZYMO1eV40u6zUJoeVLRIabHy+xcPvfX/fOfdyzz3jKtbPrxwSRVEc
7bQNi6IYI5RvlDHy46PoqX0T4/mh20+y/qy9lJG81bVRoH9m38wEfuoOkKI/
Z1/AKN7pblDLQVKdn9cvJIkO3U0OkeasRbeI0XTqblGof27fwkQGdYdJ11+w
l5FMl+42dWQ4u6hbTArvdXeoJ9PZJd0SUvmgu0sDWc4u68pJ46PuHkX6F/at
TOKX7gjZ+lb7UtL5pLvPZP1L+zby+a2bo+sx11HCUV2O7op5GRnhOdv7ZSOf
nc+wd5r3stYcT3G4Xn6TNfK03CgTeeCeKfJV+G5ZJVfLiF0UhGciv8od8qTc
IBPYwx/3z5W9+ipZL9fJoexmlr1CDsqdsjm8M3I4x9w7Rl7VLWdV+DyZGd4H
8xfZRLfrZtq7zPuYHq63f5dneOh8qv21eTtrzHEUhv9MDshT/HXdPHufuYHZ
HNfl6q6ZV5BFj+4R0/Tt9mqK+Kc7wVj9dftKsunVPaaRPGex8JvJoU/3hP9P
hmz4
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{387, 2747, 2744, 596, 682, 786, 392, 503, 557, 
                627, 713, 817, 439, 472, 525, 595, 681, 785, 391, 502, 556, 
                626, 712, 816, 438, 471, 524, 594, 680, 784, 390, 389, 388, 
                437, 470, 523, 593, 679, 783}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVWEABuDj1QyEfkLDda72VtokaZaZlBtbFKSWlppCEIGV2gBR6SZd
pFaW5Y/QJrXABm2wyVZNG7VBjYIiiJ5v8fC+33vuwDn3xisbyxpiURQl8ICB
lCgapN9wkxu84AdZXniI+6xMjKI+23PmybTVM8IK167bnjFHhq2OYZa7ds22
UF/Had6Rb39qnyXduZYhsu29tmR9LaeYZKN93F6kt/OZbbbvtjT9IPfIsl21
leqdzFBmWyB7+cUe5zx5krdscB4L967/ocJ5s0yS9bTpnyjWv4V7kY10247J
OblLpobPlP9ktTwgj8q7MlNe8d6zchFH6Le3yr+ySm6XZ2QyDXQ4N8lpuVMm
yRR5ONyj/pPdeq6MyVpa9Tes15/4vj79N3udC+UFPrLV+avrXfos5c5xWcMd
Mpwvu16iX2SKHbZEuYYWXoff1PbY6wr083xgi+2LbVl4Dtwm3dZji+mraeZV
+I3tj+yb9HO8p8g2Y1uq7+cWaeF52xL0VZzgJXn2h/ZpljjvY5BUe1f4k+s5
HGeCXPuofYrF4bkzQNx+yfYftkRk1Q==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03ecz3UcwPHL3tzZ2xmHqBRJRpnhKCESJTMJnWwyKntUPDSMJqFklJHd
IDsNIqOByMgolArl+X48+uN5r/fnfb/73fe+v+8ld0lr9eQNCQkJfX2JlvZl
n8Zypj6qeRlCT+eWmpH+bHPuoUUZThPnBnpZn9K12lULMsncXnPxjbmXlqSq
+XY9pYsYTlvnbOyKn6GZ+T/dyHTSUcbuO53FEzSlod1fuo7JVKO63WldzAg6
kJ6y9vt1dlwLqXEdZCAjmchMOa87oK/RO64l3pM77H/VJYzkYbKQYn9QX6cP
zeO11LA/o0sZxSNkpbz9IX0j7jn3xmu50/6sfsAzdCQbFey/1zdJ4z4a2f2t
65kSP0tNu3P6Ic/yoHN2vozPNK4rPmw2yUtx/eY87DFnp6L5B32LTuZ89DW3
0kxsNz+uxWhhvkf/0X66QbtpIZ7m+bjvmptB7I57qaUYSU3nWnr+/+dwmXbR
AgzjOed2moOBfBWfuZagU9yzeHb53NxdC/Ny3GNN5FtzDm40/6hvx/NJa+fM
7DDfT2PzFf2YF+KaqG33my5nNJ3jntulY7P5FXJSyfknnRP3IP5PaGJ3VT/h
xXgv6tj9risYE38nuahsf1jn0j/uc7yWu+wv6ErG0pXc3GR/RN9hQPwt8Vru
tr+oHzEuPgfycLP9UZ3HQB6I15LILb73s85nEG2oSxJ5yUd+ClCQQhSmCEUp
RnFKUJJSJFOaMpSlit9xTBcwmLbUoxy3+t5xfZch8axSP67B/pKuYnx8tqRw
m/0v+h5D49mgqd01/ZSpNIj3t/tDVzOBx2hhl54t5lcpT1XnE7qQYXFvnLOw
0/wQqeZ/9TOm0TCuz+5PXcPEeJ1zTr4294jnyZyBrfF7tQgzzB01icHsde6j
yYyignM1Palp+n48b5qfofG/FJ+NZmUAXzj31OKM4DoBYZ5S
               "]], 
              
              LineBox[{146, 69, 104, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$504006#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jnUcBuDXkZGRvfemKHtTFELI0aDS0FJCKZV2jj0yi4wyM9oDxyaU
vSqr7Owyyyy6vp/+uM79+96/53nPeZ9xSnTqntwtTSKR2OVHCtnSJhIzkhKJ
tmRmm24OfehLP7I7Zqa9ZLKwXTeXyvrV5h5U5LyuPzn0s8ztyMoO3Tyq6NeY
X6QSF3QDyKmfbb6H1EyJxA1ypz6VqvbWml/iZi7qBpJL/6n5XrIl/f995lNN
v87ck1u4pBtEbv1n5vvIzq+6BQxmCHnsf66/nxz8plvIUPLa+0LXnpzs1i2i
un69+WUqc1n3Hvn0X5o7kIs9usUMI7+9r3QPkJu9uiUMp4C9r3UPkod9uqWM
oKC9b3QPkZf9umXU0G8wv0IVruhGUkj/rbkj+TigW05N/Ubzq1TlH10r3SHr
YTRnlK6w7jvrh8kf19n8pxzDQftNzLut+9PFOi2N4nh5Xr4lJ8W9lpn53jm1
5Kb43bKX7CwT9KZaXBN5Vr4pJ8gX5PX041/nt5aH9b3kcNlVpiOFFuZO8rJ8
W06LZ0ZmYbRzi8g5ukd4Mj5PFojnwfqkHMvvjmtq3mM9gMZxvPmCnMwK+7XN
m61f4xnrNFSPeybPyYlcdVwb8xHrEbTkfV1R3VzrRynIId1K6ui3mF+nBtd0
H1BMP8/8GIU4rFvFGIrbS43vTGGO6H6Id8D7M1aWsD9f/zhFOKr7kbr6reY3
qEmCD/Ul9Qusn6Aox3Srqaf/Ke4JtUjDOH0p/cK4lhTjuK6Zbq/1QG5nja6+
7ud4HqhNEuP1pfWLrJ+iOCd0d+r2WQ/iDtbqGuh+iXtKHdJyt+6oHMldTHBc
Gd1i66cpEe+x+VR8N/6w39y833owTeIemC/KKayz39C8zfodnrVOom68b/Iv
+RE9rDNxnXVbeSyeAzlKdpPp6UOruO7ySnyenC57yqz0Z6LfV1YuifdWdo7r
IK/Kd2VJ2V6ejmdCjpPdZYZ4B53bQh7QDeG5+HtoGs+JvCSnst5xt5q3x2dS
j47mv+XHpCPZfFyOpnV8R+eU0y2NZ5tSnNS11B20HkozNuhu0+2w7k190sfn
6svrl8U1pDSndBtppN9pTqEBGZikr6Bfbt2FMpzWbWIyN8b/jfiOlOWMbjNT
uMneCl1XynFWt4WpTGN6/H/3LnwiZzCTWVR03sq4X5TnnG4rjfW7zH1oSEba
6U7Eu0sbZjuukm5V3I941qyvyQp0sD4T75UcL5+XGenLfzCQ8T8=
               "]], 
              
              LineBox[{844, 740, 654, 584, 467, 835, 731, 645, 575, 521, 427, 
               814, 710, 624, 554, 500, 468, 428, 429, 430, 431, 432, 433, 
               434, 435, 815, 711, 625, 555, 501, 469, 836, 732, 646, 576, 
               522, 852, 748, 662, 592, 868, 764, 678, 886, 782, 904, 436}]}, 
             Annotation[#, "Charting`Private`Tag$504006#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUYBdADl1ZJpUNaQRpplEZBGqSV7hDFxsLAQDokpLvBQEWlW0Cl
DFIBpfNRBEHX+2M97/72fHPPuXNmJn+Xgc0HJEskEknJE4nhSYlEiZSJxOcp
EonZZmvzA/MeVnKX9XNmgkXMtP7ILBDn8KvzO5mn9fPN983RZi5qyEPNO1kq
f2wW5VvnNDD36gZTjFesU7NA/tvxfvJf8kQa8aGupG613Ib0HNJ11p2J70xN
1uoa6vbJz1Kc67oRlNJ/Yd2WDBzWrWMkoxjNGMYyjtL2f2lfOzJyRLee8ZRx
7CtdezJxVLeBx/T745rxAP/oJlBWv8a6A5k5pttII/0B6+cpwQ3dRMrpv7bu
SBaO67rozsrDqcUmXWPdQfkFSnJT11/3d/xONI6pK6/7Rn6Cu+PzrJMxS/7N
8a7yubjOjJFzU1t+M+4Blsmb7Wsi/yS/yEg5B6XkV800LGGh9RSzcFxv/nXe
APO6foE5yRxv5uNTmlgPMzPF57DKerp5f1zj2O/8B+O+0c8xn4xrYGaN+zT+
dzM5s+VJZkF+d04387xuBGPlPNSR3zLTs1zeYl9T+Wf5JUpzSzdQ9488maYx
dRV0a+VOZOWErrvuQlwL6rJV10z3i/wyZbitm0JF/TrrzmTjpG4bzeM5sh5C
Wf7TTaWSfr11F7JzSredFvpD8cxQjkQ8W/rK+g1yV3Lwh24H05jODGYyiyr2
brSnGzn5U7eT2VR1bJOuO7k4rfuOlvrD8VtTnmTxe+ir6TfLPcjNGd0uWumP
WL/GgyRnrr66fovckzyc1fXQXZRHUY/dusd1R+XXqUAS8/QP6bfKvcjLOV1P
3SV5NPXZo2utOya/QcX4HtZp4z0mp+Ap+UbcqzRjvnMe1m2Te5Mv7nPrJObI
5x3vJV+OZ4Rxcl4ekd82M7BCnmbex/f2tzGPx/c2h8b/Z+bkEyrF/2ami/cj
i62nmkXivUNK60HmTXOhOdWcYN7LZzS3ftfMHPdy/E3rGWaxeI/67Brmdl2f
eK7lbHFu3OdmCubKF+zrLV+JZ4RHecc6IyvlHxxvK/8W7wIqk4qn47mO+44W
8f3sq6nbIfclPxd1fXRX41rRgB917eL5jOeQKqRmkb6WfqfcjwJc0u1lMbUd
+07Xn4Jc1u1jCUtZxnJWUMfeXfYMoBBXdPtprz8RvxVVScNKfV39bnkghbmq
O0AH/cm4HlQjLc/obsVvTEtW2VdPtyfuJ4rEcx+/HfPka473la/J42nIQV1H
3Sl5GNXjHrW+I96fcjoGy7fN6UyU89NKfs/MEvdZvDutZ5rFWRO/v79bP+67
eM7MQeYIM3u8UylqPcRMFfca860nm4VYzf8lrQ4i
               "]], 
              
              LineBox[{1269, 1174, 1100, 984, 1374, 1255, 1160, 1086, 1035, 
               948, 1352, 1233, 1138, 1064, 1013, 985, 949, 950, 951, 952, 
               953, 954, 955, 956, 1353, 1234, 1139, 1065, 1014, 986, 1375, 
               1256, 1161, 1087, 1036, 1397, 1279, 1184, 1110, 1418, 1300, 
               1205, 1442, 1324, 1468, 957}]}, 
             Annotation[#, "Charting`Private`Tag$504006#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8zlUYxvHH3mTvsiMzMxQKEZUtIWUUSkZGoaGsSslIJUQhIyNCGdmU
WZS9s0MhZKR63398Xtd13ed8f9/nOefc5/kV7NCjafckiURiQNJEYnWKRGJR
qkTiLsxImUg8jqy4rL5LrRZ+lHugAtaoL1YrgJlyI2TDX+q71R7EJrknKmKt
+hK1gpglN0Z2XJTb4Dj/Lq6Yt0d+CJvlXqiEROpEopvaFX4C1pn3rVwIs+Um
SG/OK3ICOeRLtC1O8CNw1TN75drYIr8Un9kzg+TUqCwnkV/kr/L38dP4iXxh
/gM+J+ryC+izdL2/+R1fGPXlr8wtST+WW9GmcgbaX25Mk9DqdAZ9huaMNeaf
wqPyyVgvOiU+O31Pzk/fkZvTzLE2dB695t37aB1sNa+c+kS+d6wt/yafBlXk
pHL3eIafhCLyKDkXNvg7S2kRzDHWDLliL+V2OMW/j7/N2x/fH9vkPrFG2Ki+
TK0o5srNkRvX1X/AcvVimKfWAnlwQ/1HbMJmbMFWbMN2/ISfscJzd2O+Z1oi
L26qH1B7GNvlvqiKHerfqxXH1/ITyIdb6gfV6uEnuR+qYaf6SrUSWCC3irWO
Myg/jdP8SPxj3qHYX/wsv4wc1u8tOW3sp5xM7sH/zX+GovJoOTd+8fwqeg8W
Gitl7BP+ST4jP4BvQpPS++lM2p7eGWc2zgkek89EL9DP47zEeZTvpO/KLWiW
ONt0Pu1Ib3vvYf4RNJB3mH8vnSS3jl6Rc9LBcrp4t5xc7slf5yejmDxGzoNf
/b3VtCS+MdYad+FafF6c5UfhX/OOxDuxU+6PB7BLfY1aKSyS26AA/os7I/oe
a42VxmL1tigYvY+9xtapl8ES+SkUin7FUbWGsc78ANTAPvPXq5XFt3K76OHo
AxyLXovvww9ETew3f4NaOXwnPx09Emde7oDf+dGxz/gt9gO7+FdRCwc8v1Ht
XiyVn4kzED0Qe4Fz/JhYXxyXH8du/rXoNWs8RE4f96acQu7F3+Cn4GD0kVwe
y+T2yGTOQDlZ9Fb0E+2E8/zY2BfjI+SsSCGfoI2why9v7DP+9ehTfiifAbX4
OXG/qKfkX4pn6M3oLzo9+iLOn3w3HSs/QfNGL9KF9Dl6KHqbrxBnT15ufmk6
Ps487SDfQV+Vm9Lk9AE6K3o9+jvuVlzgK6t/wX8YZyXuQz4bUsonaWPs5d9A
baQyp7faLf4LHI47Rq6IFXJHFI95OBJ3j3olfC93Qom4L+J74A9+HFLjVPQo
9vGD4g7znmFyRtSJOXIf/h9+arxD/lDOh6Nxv9HKWGmsjLFP4zvymfnXYo9Q
g58d90TcObRznBO1P+UqdKrcjn4UfUHfl1vS7PEZ6NdxBmga46djbaMv5P1y
BTpZbhO/C3GP0uFyM5opzh2dS+saS8P35W/HPcl/yU+LteHH8flxLO5rWgWr
jJU1NiHWjc/Cvx57FHeFfJt2wUX+4+hb4yPlHEgrn4nPgQP8W8hn/G35jjhX
clq5H/8vPz36L34n5PuwWu4cd2rcO3JXXOI/QTqclZvjID8Y9aL/4jdGrSrW
yF3ifMY9JD+Py/x4pMfvcgsc4oegfvRS/D6pVcNauWvsKTLgXOwJDvND8Uic
0/gtU6uOdfLzsV7IiPPRQzjCD0ODOGvm71C7H+vlF1Aueh4X1FrFmeKHo2Hs
tfk7o4ewQe6GrNbsDTkVasb/JXGP0f8BU6RDsg==
               "]], 
              
              LineBox[{1899, 1779, 1690, 1552, 2030, 1881, 1761, 1672, 1612, 
               1512, 2003, 1854, 1734, 1645, 1585, 1553, 1513, 1514, 1515, 
               1516, 1517, 1518, 1519, 1520, 2004, 1855, 1735, 1646, 1586, 
               1554, 2031, 1882, 1762, 1673, 1613, 2059, 1911, 1791, 1702, 
               2090, 1942, 1822, 2119, 1971, 2151, 1521}]}, 
             Annotation[#, "Charting`Private`Tag$504006#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFGUUBuAhlFBCQlIBpVMaVLo7BJTukO4O6U5FFOnuklBBkQZJwSAk
lMagpEG83x/3dc7zzM6y3+zMkqFFl9qdY0RRlDZmFHWIG0Xp4kfR/HhR9A43
5a3Mpph+u64+CTip60h6/QL5XW7J25hDcf33ugYk5JSuExn0C+Vi3Ja/pY7u
F7krGZmrK6HbYW9IIk7rOvOGfpFcnDvyd9TV/Sp3IxPzdCV1O+2NSEx3+Z45
mTOON5Mv2geRlyFyTGbZuzj+pn2xvQR35fby3/bRbJfrySfD+zLenpDM9n7m
U/NT5ntdKXmXvXE41x6fV+w9zPvmInOKOd1MyVp+c15z81J4D3OwOSmcx0ry
yR+ZsVjCbPkzMw3r6er8jOGYfpZZ0hxhxuFfxzqY/+jGMNWeLHxX+vfNU+Gz
McGeiCz2/uYzcwYLvK60vNvehCT0lB+E9+Ks4y3ky+Gakj98L7pMuqX2UtyT
d7CQMvo9uqYk5ZyuO5n1y+TS3Jd3sogeZHFsub4MD+RdLKYnvehNVq9Z4XhZ
Hsq7WUIfsoXrqC/HI3kPS+lLdsdW6cvzWN7LMvrRnwEMJIfXrfaaCjyR97Gc
svq9umYk47xuEDn1a+SKPJX384HudLh+ZGWFrpxun705ybmga6m7Er5zCjBY
lyvcK/ZKPAvPonzTPpYDcn35jL0X2Rgg/xfuE1Y6Xl7eH541s0W4F8yXwjXj
1XCe+dBcbE4L97OZinX87vxW5tVwP5hDw3NlJgnXjoLyUDN2+M6ZI39upmUD
Q5yfO7yXfrZZ2Rxpxg2fMfxOmLd045hmT84P+gbh2dD1JjsD5efhvVnleAX5
gL0lKcLr5Efmx/zheGv5mn0YhcL11OUJz4y9Cs/lgzTUnZX7kIPVuorhM9hb
kZKLuqG8Ff4muSoRh3RrGMZwRjCSUYxmDGPJ67wvvb4aMTisW0sl/UG5Nam4
pBtHPv1GuToxOaJbR2X9IbkNqbmsG09+/Sa5BrE4qmukO2fvS07W66roDtvb
koYruja66/bhFA6/BboCus32msSms3zbHM8xxxvL5+39yMUgOWKmfYPjVe1H
7O3CPWp/OdwP4Rqbj81PuOp1beUb9hFMsSelSPjOzBfCbwJz5Znma+EaMtF5
Bc0t+jlmLXOUGS/8ToTz5C7mHXOhOSHcE+E+D88wPzq/iXlBP8/sb040E5M7
PG9mDL6wzzBTh3/XOdXMo7oPw71qTxA+U7i+5hNzOte8rp38Z7jHKcokXSHd
V/bavEhX+W74dznueNPwnIXnljxs1FXXHbO353Wu6yZTWP+1/B5xOKHbRI3w
t8kdSMcN3RSK6L+R6xCXn3Sbqak/LnckPX/qplJUv1WuSzx+1m2hlv6E3IkM
/KWbxtv6bXI94tMt/L8T/u7wPdtThN9C/gd1diWA
               "]], 
              
              LineBox[{2530, 2428, 2352, 2232, 2642, 2516, 2414, 2338, 2285, 
               2195, 2619, 2493, 2391, 2315, 2262, 2233, 2196, 2197, 2198, 
               2199, 2200, 2201, 2202, 2203, 2620, 2494, 2392, 2316, 2263, 
               2234, 2643, 2517, 2415, 2339, 2286, 2665, 2540, 2438, 2362, 
               2691, 2566, 2464, 2715, 2590, 2740, 2204}]}, 
             Annotation[#, "Charting`Private`Tag$504006#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{385, 386, 384}], 
             LineBox[{906, 907, 905}], 
             LineBox[{1470, 1471, 1469}], 
             LineBox[{2153, 2154, 2152}], 
             LineBox[{2742, 2743, 2741}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution 1\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
8EwsVo9xPt3M6rsrVEQofu+aLbKunwBZLMv3Ktj1kQ18W+85RIShjlEn7M7M
Icti1i/BFWS4i75yLuYwExS9unw5PZkApSbOr+HuZ6F7hqzNfr/IMGT/Secg
YyaI2z317pECEXZOLlCjReYRx7SAe4w5GVY7Zx47g+1fGyuc/ZhFZJhqtCEm
Fts/cV7ta978+v0eYvH6nyctzvIQ4bNdjjWfsPne2hGo2LybDCPcXLvWmTLB
dn7x0oFKAlSTfurtzDOPJBMesep0iHBft5DA6WkWahZ59MnSjwyN0kJWnsfq
3fLXC8efzS3ND86z+fY5SJoIEaG/fnZKo3MrcNmd+gpW9AKDjruvpFb3AJ/V
rtNpBc2Aed/jU9dpGlDN79gk6vME4Hw7Uq7sd+OFSjbfPtdb/27rix9snn34
qADdFS7xbNfEt/6sezQ2z77lGvbIR5fO5tlJnX/P2y7+ZfPsjOp0lfGUMTbP
Nl1cp113ZIrNsxeTuCaHLRhsnl1jbBVsZMxCOaaVHG1HibCiWLpGms5CmVL1
bjcsOGB6Ts++/YxZNKwo/SXjLCeMP0uLqD09hqrazle9cOaCmiJ/KPW27ci5
MdzqrDc3PJ4waqce0QBOr1r4lXyVByZG/FBOpg+AXrtPtV53eGE4V3NeQPYE
qCo6te5KIAmmNc1CzvQZYKrTX9N6gw9ulpCXOP+ZAaKqqn6X3ifD2b8KxH94
hNCLPz177vHDoKqevwl9DLBeUijU9akAFOfTzD59Eevvfog1uL8ShPcPHv3e
qjANtvSZzHLFC8GuTuOJQbMJwJwaCZf5IAwzeNWXuW8fATiPL7SPYar8mUU4
j/9ETsgvcCEUz6Y/CaVZLtUn0fMOn557LN0POpn3W1ROdoIVyn4GMKIbQGOt
x/y7sf6+ZCH6YU85eE+5OZ9r1Afu/zzDs80vl83vZVbNmwtLNbB5fGlX+aVV
en1svp7JtfeX8KUZtLiSS37zy0VgTT74YgWDifarhYMXTQToG7gjKl9oHnVY
z50waiXCvt0OEzqv5hBPi/SZoS4OKC94f1jbfwpJv/9r1jrLDfvXVR9TnKcA
nYsCozkLWD+gXbZrLGkUcF7sdr/JTYJ7XGQfQAL2PJRXtpVF4IOXhPn17Ptn
QdwH3rExLqx+025zfML6edKfhec/+Pih5DMut5cHmKBia1NGj4gApF45q5C8
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
PUk=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{901, 2748, 2746, 422, 423, 424, 425, 812, 708, 
                622, 552, 499, 466, 834, 730, 644, 574, 520, 851, 747, 661, 
                591, 426, 813, 709, 623, 871, 767, 553, 857, 753, 892, 667, 
                880, 776}}], 
               PolygonBox[CompressedData["
1:eJwV0slLVWEYB+Bj0sKMypyHzP6BBoeGpUGBRQWBlWWTEBSREY0mGRQ0WalN
uigocFfZYMO1eV40u6zUJoeVLRIabHy+xcPvfX/fOfdyzz3jKtbPrxwSRVEc
7bQNi6IYI5RvlDHy46PoqX0T4/mh20+y/qy9lJG81bVRoH9m38wEfuoOkKI/
Z1/AKN7pblDLQVKdn9cvJIkO3U0OkeasRbeI0XTqblGof27fwkQGdYdJ11+w
l5FMl+42dWQ4u6hbTArvdXeoJ9PZJd0SUvmgu0sDWc4u68pJ46PuHkX6F/at
TOKX7gjZ+lb7UtL5pLvPZP1L+zby+a2bo+sx11HCUV2O7op5GRnhOdv7ZSOf
nc+wd5r3stYcT3G4Xn6TNfK03CgTeeCeKfJV+G5ZJVfLiF0UhGciv8od8qTc
IBPYwx/3z5W9+ipZL9fJoexmlr1CDsqdsjm8M3I4x9w7Rl7VLWdV+DyZGd4H
8xfZRLfrZtq7zPuYHq63f5dneOh8qv21eTtrzHEUhv9MDshT/HXdPHufuYHZ
HNfl6q6ZV5BFj+4R0/Tt9mqK+Kc7wVj9dftKsunVPaaRPGex8JvJoU/3hP9P
hmz4
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{387, 2747, 2744, 596, 682, 786, 392, 503, 557, 
                627, 713, 817, 439, 472, 525, 595, 681, 785, 391, 502, 556, 
                626, 712, 816, 438, 471, 524, 594, 680, 784, 390, 389, 388, 
                437, 470, 523, 593, 679, 783}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVWEABuDj1QyEfkLDda72VtokaZaZlBtbFKSWlppCEIGV2gBR6SZd
pFaW5Y/QJrXABm2wyVZNG7VBjYIiiJ5v8fC+33vuwDn3xisbyxpiURQl8ICB
lCgapN9wkxu84AdZXniI+6xMjKI+23PmybTVM8IK167bnjFHhq2OYZa7ds22
UF/Had6Rb39qnyXduZYhsu29tmR9LaeYZKN93F6kt/OZbbbvtjT9IPfIsl21
leqdzFBmWyB7+cUe5zx5krdscB4L967/ocJ5s0yS9bTpnyjWv4V7kY10247J
OblLpobPlP9ktTwgj8q7MlNe8d6zchFH6Le3yr+ySm6XZ2QyDXQ4N8lpuVMm
yRR5ONyj/pPdeq6MyVpa9Tes15/4vj79N3udC+UFPrLV+avrXfos5c5xWcMd
Mpwvu16iX2SKHbZEuYYWXoff1PbY6wr083xgi+2LbVl4Dtwm3dZji+mraeZV
+I3tj+yb9HO8p8g2Y1uq7+cWaeF52xL0VZzgJXn2h/ZpljjvY5BUe1f4k+s5
HGeCXPuofYrF4bkzQNx+yfYftkRk1Q==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03ecz3UcwPHL3tzZ2xmHqBRJRpnhKCESJTMJnWwyKntUPDSMJqFklJHd
IDsNIqOByMgolArl+X48+uN5r/fnfb/73fe+v+8ld0lr9eQNCQkJfX2JlvZl
n8Zypj6qeRlCT+eWmpH+bHPuoUUZThPnBnpZn9K12lULMsncXnPxjbmXlqSq
+XY9pYsYTlvnbOyKn6GZ+T/dyHTSUcbuO53FEzSlod1fuo7JVKO63WldzAg6
kJ6y9vt1dlwLqXEdZCAjmchMOa87oK/RO64l3pM77H/VJYzkYbKQYn9QX6cP
zeO11LA/o0sZxSNkpbz9IX0j7jn3xmu50/6sfsAzdCQbFey/1zdJ4z4a2f2t
65kSP0tNu3P6Ic/yoHN2vozPNK4rPmw2yUtx/eY87DFnp6L5B32LTuZ89DW3
0kxsNz+uxWhhvkf/0X66QbtpIZ7m+bjvmptB7I57qaUYSU3nWnr+/+dwmXbR
AgzjOed2moOBfBWfuZagU9yzeHb53NxdC/Ny3GNN5FtzDm40/6hvx/NJa+fM
7DDfT2PzFf2YF+KaqG33my5nNJ3jntulY7P5FXJSyfknnRP3IP5PaGJ3VT/h
xXgv6tj9risYE38nuahsf1jn0j/uc7yWu+wv6ErG0pXc3GR/RN9hQPwt8Vru
tr+oHzEuPgfycLP9UZ3HQB6I15LILb73s85nEG2oSxJ5yUd+ClCQQhSmCEUp
RnFKUJJSJFOaMpSlit9xTBcwmLbUoxy3+t5xfZch8axSP67B/pKuYnx8tqRw
m/0v+h5D49mgqd01/ZSpNIj3t/tDVzOBx2hhl54t5lcpT1XnE7qQYXFvnLOw
0/wQqeZ/9TOm0TCuz+5PXcPEeJ1zTr4294jnyZyBrfF7tQgzzB01icHsde6j
yYyignM1Palp+n48b5qfofG/FJ+NZmUAXzj31OKM4DoBYZ5S
               "]], 
              
              LineBox[{146, 69, 104, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$504095#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1He8jnUcBuDXkZGRvfemKHtTFELI0aDS0FJCKZV2jj0yi4wyM9oDxyaU
vSqr7Owyyyy6vp/+uM79+96/53nPeZ9xSnTqntwtTSKR2OVHCtnSJhIzkhKJ
tmRmm24OfehLP7I7Zqa9ZLKwXTeXyvrV5h5U5LyuPzn0s8ztyMoO3Tyq6NeY
X6QSF3QDyKmfbb6H1EyJxA1ypz6VqvbWml/iZi7qBpJL/6n5XrIl/f995lNN
v87ck1u4pBtEbv1n5vvIzq+6BQxmCHnsf66/nxz8plvIUPLa+0LXnpzs1i2i
un69+WUqc1n3Hvn0X5o7kIs9usUMI7+9r3QPkJu9uiUMp4C9r3UPkod9uqWM
oKC9b3QPkZf9umXU0G8wv0IVruhGUkj/rbkj+TigW05N/Ubzq1TlH10r3SHr
YTRnlK6w7jvrh8kf19n8pxzDQftNzLut+9PFOi2N4nh5Xr4lJ8W9lpn53jm1
5Kb43bKX7CwT9KZaXBN5Vr4pJ8gX5PX041/nt5aH9b3kcNlVpiOFFuZO8rJ8
W06LZ0ZmYbRzi8g5ukd4Mj5PFojnwfqkHMvvjmtq3mM9gMZxvPmCnMwK+7XN
m61f4xnrNFSPeybPyYlcdVwb8xHrEbTkfV1R3VzrRynIId1K6ui3mF+nBtd0
H1BMP8/8GIU4rFvFGIrbS43vTGGO6H6Id8D7M1aWsD9f/zhFOKr7kbr6reY3
qEmCD/Ul9Qusn6Aox3Srqaf/Ke4JtUjDOH0p/cK4lhTjuK6Zbq/1QG5nja6+
7ud4HqhNEuP1pfWLrJ+iOCd0d+r2WQ/iDtbqGuh+iXtKHdJyt+6oHMldTHBc
Gd1i66cpEe+x+VR8N/6w39y833owTeIemC/KKayz39C8zfodnrVOom68b/Iv
+RE9rDNxnXVbeSyeAzlKdpPp6UOruO7ySnyenC57yqz0Z6LfV1YuifdWdo7r
IK/Kd2VJ2V6ejmdCjpPdZYZ4B53bQh7QDeG5+HtoGs+JvCSnst5xt5q3x2dS
j47mv+XHpCPZfFyOpnV8R+eU0y2NZ5tSnNS11B20HkozNuhu0+2w7k190sfn
6svrl8U1pDSndBtppN9pTqEBGZikr6Bfbt2FMpzWbWIyN8b/jfiOlOWMbjNT
uMneCl1XynFWt4WpTGN6/H/3LnwiZzCTWVR03sq4X5TnnG4rjfW7zH1oSEba
6U7Eu0sbZjuukm5V3I941qyvyQp0sD4T75UcL5+XGenLfzCQ8T8=
               "]], 
              
              LineBox[{844, 740, 654, 584, 467, 835, 731, 645, 575, 521, 427, 
               814, 710, 624, 554, 500, 468, 428, 429, 430, 431, 432, 433, 
               434, 435, 815, 711, 625, 555, 501, 469, 836, 732, 646, 576, 
               522, 852, 748, 662, 592, 868, 764, 678, 886, 782, 904, 436}]}, 
             Annotation[#, "Charting`Private`Tag$504095#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4FWUYBdADl1ZJpUNaQRpplEZBGqSV7hDFxsLAQDokpLvBQEWlW0Cl
DFIBpfNRBEHX+2M97/72fHPPuXNmJn+Xgc0HJEskEknJE4nhSYlEiZSJxOcp
EonZZmvzA/MeVnKX9XNmgkXMtP7ILBDn8KvzO5mn9fPN983RZi5qyEPNO1kq
f2wW5VvnNDD36gZTjFesU7NA/tvxfvJf8kQa8aGupG613Ib0HNJ11p2J70xN
1uoa6vbJz1Kc67oRlNJ/Yd2WDBzWrWMkoxjNGMYyjtL2f2lfOzJyRLee8ZRx
7CtdezJxVLeBx/T745rxAP/oJlBWv8a6A5k5pttII/0B6+cpwQ3dRMrpv7bu
SBaO67rozsrDqcUmXWPdQfkFSnJT11/3d/xONI6pK6/7Rn6Cu+PzrJMxS/7N
8a7yubjOjJFzU1t+M+4Blsmb7Wsi/yS/yEg5B6XkV800LGGh9RSzcFxv/nXe
APO6foE5yRxv5uNTmlgPMzPF57DKerp5f1zj2O/8B+O+0c8xn4xrYGaN+zT+
dzM5s+VJZkF+d04387xuBGPlPNSR3zLTs1zeYl9T+Wf5JUpzSzdQ9488maYx
dRV0a+VOZOWErrvuQlwL6rJV10z3i/wyZbitm0JF/TrrzmTjpG4bzeM5sh5C
Wf7TTaWSfr11F7JzSredFvpD8cxQjkQ8W/rK+g1yV3Lwh24H05jODGYyiyr2
brSnGzn5U7eT2VR1bJOuO7k4rfuOlvrD8VtTnmTxe+ir6TfLPcjNGd0uWumP
WL/GgyRnrr66fovckzyc1fXQXZRHUY/dusd1R+XXqUAS8/QP6bfKvcjLOV1P
3SV5NPXZo2utOya/QcX4HtZp4z0mp+Ap+UbcqzRjvnMe1m2Te5Mv7nPrJObI
5x3vJV+OZ4Rxcl4ekd82M7BCnmbex/f2tzGPx/c2h8b/Z+bkEyrF/2ami/cj
i62nmkXivUNK60HmTXOhOdWcYN7LZzS3ftfMHPdy/E3rGWaxeI/67Brmdl2f
eK7lbHFu3OdmCubKF+zrLV+JZ4RHecc6IyvlHxxvK/8W7wIqk4qn47mO+44W
8f3sq6nbIfclPxd1fXRX41rRgB917eL5jOeQKqRmkb6WfqfcjwJc0u1lMbUd
+07Xn4Jc1u1jCUtZxnJWUMfeXfYMoBBXdPtprz8RvxVVScNKfV39bnkghbmq
O0AH/cm4HlQjLc/obsVvTEtW2VdPtyfuJ4rEcx+/HfPka473la/J42nIQV1H
3Sl5GNXjHrW+I96fcjoGy7fN6UyU89NKfs/MEvdZvDutZ5rFWRO/v79bP+67
eM7MQeYIM3u8UylqPcRMFfca860nm4VYzf8lrQ4i
               "]], 
              
              LineBox[{1269, 1174, 1100, 984, 1374, 1255, 1160, 1086, 1035, 
               948, 1352, 1233, 1138, 1064, 1013, 985, 949, 950, 951, 952, 
               953, 954, 955, 956, 1353, 1234, 1139, 1065, 1014, 986, 1375, 
               1256, 1161, 1087, 1036, 1397, 1279, 1184, 1110, 1418, 1300, 
               1205, 1442, 1324, 1468, 957}]}, 
             Annotation[#, "Charting`Private`Tag$504095#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nf8zlUYxvHH3mTvsiMzMxQKEZUtIWUUSkZGoaGsSslIJUQhIyNCGdmU
WZS9s0MhZKR63398Xtd13ed8f9/nOefc5/kV7NCjafckiURiQNJEYnWKRGJR
qkTiLsxImUg8jqy4rL5LrRZ+lHugAtaoL1YrgJlyI2TDX+q71R7EJrknKmKt
+hK1gpglN0Z2XJTb4Dj/Lq6Yt0d+CJvlXqiEROpEopvaFX4C1pn3rVwIs+Um
SG/OK3ICOeRLtC1O8CNw1TN75drYIr8Un9kzg+TUqCwnkV/kr/L38dP4iXxh
/gM+J+ryC+izdL2/+R1fGPXlr8wtST+WW9GmcgbaX25Mk9DqdAZ9huaMNeaf
wqPyyVgvOiU+O31Pzk/fkZvTzLE2dB695t37aB1sNa+c+kS+d6wt/yafBlXk
pHL3eIafhCLyKDkXNvg7S2kRzDHWDLliL+V2OMW/j7/N2x/fH9vkPrFG2Ki+
TK0o5srNkRvX1X/AcvVimKfWAnlwQ/1HbMJmbMFWbMN2/ISfscJzd2O+Z1oi
L26qH1B7GNvlvqiKHerfqxXH1/ITyIdb6gfV6uEnuR+qYaf6SrUSWCC3irWO
Myg/jdP8SPxj3qHYX/wsv4wc1u8tOW3sp5xM7sH/zX+GovJoOTd+8fwqeg8W
Gitl7BP+ST4jP4BvQpPS++lM2p7eGWc2zgkek89EL9DP47zEeZTvpO/KLWiW
ONt0Pu1Ib3vvYf4RNJB3mH8vnSS3jl6Rc9LBcrp4t5xc7slf5yejmDxGzoNf
/b3VtCS+MdYad+FafF6c5UfhX/OOxDuxU+6PB7BLfY1aKSyS26AA/os7I/oe
a42VxmL1tigYvY+9xtapl8ES+SkUin7FUbWGsc78ANTAPvPXq5XFt3K76OHo
AxyLXovvww9ETew3f4NaOXwnPx09Emde7oDf+dGxz/gt9gO7+FdRCwc8v1Ht
XiyVn4kzED0Qe4Fz/JhYXxyXH8du/rXoNWs8RE4f96acQu7F3+Cn4GD0kVwe
y+T2yGTOQDlZ9Fb0E+2E8/zY2BfjI+SsSCGfoI2why9v7DP+9ehTfiifAbX4
OXG/qKfkX4pn6M3oLzo9+iLOn3w3HSs/QfNGL9KF9Dl6KHqbrxBnT15ufmk6
Ps487SDfQV+Vm9Lk9AE6K3o9+jvuVlzgK6t/wX8YZyXuQz4bUsonaWPs5d9A
baQyp7faLf4LHI47Rq6IFXJHFI95OBJ3j3olfC93Qom4L+J74A9+HFLjVPQo
9vGD4g7znmFyRtSJOXIf/h9+arxD/lDOh6Nxv9HKWGmsjLFP4zvymfnXYo9Q
g58d90TcObRznBO1P+UqdKrcjn4UfUHfl1vS7PEZ6NdxBmga46djbaMv5P1y
BTpZbhO/C3GP0uFyM5opzh2dS+saS8P35W/HPcl/yU+LteHH8flxLO5rWgWr
jJU1NiHWjc/Cvx57FHeFfJt2wUX+4+hb4yPlHEgrn4nPgQP8W8hn/G35jjhX
clq5H/8vPz36L34n5PuwWu4cd2rcO3JXXOI/QTqclZvjID8Y9aL/4jdGrSrW
yF3ifMY9JD+Py/x4pMfvcgsc4oegfvRS/D6pVcNauWvsKTLgXOwJDvND8Uic
0/gtU6uOdfLzsV7IiPPRQzjCD0ODOGvm71C7H+vlF1Aueh4X1FrFmeKHo2Hs
tfk7o4ewQe6GrNbsDTkVasb/JXGP0f8BU6RDsg==
               "]], 
              
              LineBox[{1899, 1779, 1690, 1552, 2030, 1881, 1761, 1672, 1612, 
               1512, 2003, 1854, 1734, 1645, 1585, 1553, 1513, 1514, 1515, 
               1516, 1517, 1518, 1519, 1520, 2004, 1855, 1735, 1646, 1586, 
               1554, 2031, 1882, 1762, 1673, 1613, 2059, 1911, 1791, 1702, 
               2090, 1942, 1822, 2119, 1971, 2151, 1521}]}, 
             Annotation[#, "Charting`Private`Tag$504095#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFGUUBuAhlFBCQlIBpVMaVLo7BJTukO4O6U5FFOnuklBBkQZJwSAk
lMagpEG83x/3dc7zzM6y3+zMkqFFl9qdY0RRlDZmFHWIG0Xp4kfR/HhR9A43
5a3Mpph+u64+CTip60h6/QL5XW7J25hDcf33ugYk5JSuExn0C+Vi3Ja/pY7u
F7krGZmrK6HbYW9IIk7rOvOGfpFcnDvyd9TV/Sp3IxPzdCV1O+2NSEx3+Z45
mTOON5Mv2geRlyFyTGbZuzj+pn2xvQR35fby3/bRbJfrySfD+zLenpDM9n7m
U/NT5ntdKXmXvXE41x6fV+w9zPvmInOKOd1MyVp+c15z81J4D3OwOSmcx0ry
yR+ZsVjCbPkzMw3r6er8jOGYfpZZ0hxhxuFfxzqY/+jGMNWeLHxX+vfNU+Gz
McGeiCz2/uYzcwYLvK60vNvehCT0lB+E9+Ks4y3ky+Gakj98L7pMuqX2UtyT
d7CQMvo9uqYk5ZyuO5n1y+TS3Jd3sogeZHFsub4MD+RdLKYnvehNVq9Z4XhZ
Hsq7WUIfsoXrqC/HI3kPS+lLdsdW6cvzWN7LMvrRnwEMJIfXrfaaCjyR97Gc
svq9umYk47xuEDn1a+SKPJX384HudLh+ZGWFrpxun705ybmga6m7Er5zCjBY
lyvcK/ZKPAvPonzTPpYDcn35jL0X2Rgg/xfuE1Y6Xl7eH541s0W4F8yXwjXj
1XCe+dBcbE4L97OZinX87vxW5tVwP5hDw3NlJgnXjoLyUDN2+M6ZI39upmUD
Q5yfO7yXfrZZ2Rxpxg2fMfxOmLd045hmT84P+gbh2dD1JjsD5efhvVnleAX5
gL0lKcLr5Efmx/zheGv5mn0YhcL11OUJz4y9Cs/lgzTUnZX7kIPVuorhM9hb
kZKLuqG8Ff4muSoRh3RrGMZwRjCSUYxmDGPJ67wvvb4aMTisW0sl/UG5Nam4
pBtHPv1GuToxOaJbR2X9IbkNqbmsG09+/Sa5BrE4qmukO2fvS07W66roDtvb
koYruja66/bhFA6/BboCus32msSms3zbHM8xxxvL5+39yMUgOWKmfYPjVe1H
7O3CPWp/OdwP4Rqbj81PuOp1beUb9hFMsSelSPjOzBfCbwJz5Znma+EaMtF5
Bc0t+jlmLXOUGS/8ToTz5C7mHXOhOSHcE+E+D88wPzq/iXlBP8/sb040E5M7
PG9mDL6wzzBTh3/XOdXMo7oPw71qTxA+U7i+5hNzOte8rp38Z7jHKcokXSHd
V/bavEhX+W74dznueNPwnIXnljxs1FXXHbO353Wu6yZTWP+1/B5xOKHbRI3w
t8kdSMcN3RSK6L+R6xCXn3Sbqak/LnckPX/qplJUv1WuSzx+1m2hlv6E3IkM
/KWbxtv6bXI94tMt/L8T/u7wPdtThN9C/gd1diWA
               "]], 
              
              LineBox[{2530, 2428, 2352, 2232, 2642, 2516, 2414, 2338, 2285, 
               2195, 2619, 2493, 2391, 2315, 2262, 2233, 2196, 2197, 2198, 
               2199, 2200, 2201, 2202, 2203, 2620, 2494, 2392, 2316, 2263, 
               2234, 2643, 2517, 2415, 2339, 2286, 2665, 2540, 2438, 2362, 
               2691, 2566, 2464, 2715, 2590, 2740, 2204}]}, 
             Annotation[#, "Charting`Private`Tag$504095#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{385, 386, 384}], 
             LineBox[{906, 907, 905}], 
             LineBox[{1470, 1471, 1469}], 
             LineBox[{2153, 2154, 2152}], 
             LineBox[{2742, 2743, 2741}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution 2\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
2HgUE9M5mbfwQ6hybiQW24/74feqEbevQHvXq1qjq8GI1Z9qRpacA3kzKsRX
qlRUtflsV43EAsjsUb4+cYaKcq+Vk1W3LoHR/KM+tem9CDx80RagQYZ/XySJ
vDHG5vN0ikPgbzJkkzKLF8XqhwKDnaGL5yjwut164Rq2/vg0Vuof/aHAcAUd
Tw5s/i/4ptyymRCC+rtyOYsE2WGFnL05q4Un2LKLnP7qEQXdvVHgpFtWDExO
2iv1uD9H/RuTVWU76sD1a48bf73MQoFRQpIyHsNgnp5/+bNiK/KpGxGULBkH
5+SNRuIrOpGQ+tKhBecp0KW45tEZ14MyM5b5ku7MgKF5dkfub71I/9N2y8yg
OfD72i8ltotUZPFq18ZTfguA9ViC56ZjVKTvcueg2P0l0Jo6WS7s3ot0J9u7
r0XQgPTwE+VtX7oRxVbtq0UIHVi67HEcHWpDIZEmrA4Za6A12FSg4FEjsvse
+OjODSz/h/dJaIWUop0ifvNGnbyQb/zRY7twVmhoH6NAucUHN5BN82xvssHP
RdKPpfv5oN+9hzveMBMh8v2p9OI6GcorHz+7aEuE5xbmQq4Mk2GxxKfmOWz/
1g0ZTp4zp0A6T6tOEzafxaWZVixTFHho4dujSuznJO2xpgYnfth6gVC7AXu/
27Vbmk2z/PDoobY/g8lEuOBA/qzgLgQ3za5++MfKDh3Ynt53eP8JBO37Q3s2
7oImvWzHjE9XA0MN1xvTR5LRubyJcs34UWBV1krwj2lHtSVDRmfaJwAx7UWu
eHI3ep22k/m+wzSoSdF2ksLy9bdlfw4tz1nAlh7wVVOYisrMWwI0A+eBZ9ho
K68hFUUdvUvr9VwE7tIXf+TO9CKe1Z36VP9lkGuyyXhfVQ+y6imQ4gtbAY2x
fJTzIZ0o+2Sg/PG4VWAcLJHw+tFf1FMZfiE7iQ8eX7pfcSefDb7jPn05eCcZ
Rr5R/34fEGEzD4yCb8nw7vXKZxvCsPxz1THXcw8Fnin8vqUU28+ivgpvij5Q
4M3Cflt/bH94GaY1ystj9ZKCgzsf9rrFNoXlByVCcJY+9tiAlx0+2EKkzsQn
gtW6jW/HLK+hz/YRma0by0GBQtIBN7d41OYW/Fpxfgo8kvM6+nq2B+XrKoc6
L84A/o38LXdne1EI531XD4550FLj+CwCG7/X2E/PZxsWwbr0KiV3GxVlK1VX
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
//1Cx0dtsYcKFqqODNxG54PaaD8yav8Pmn9img==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{565, 3251, 3249, 564, 968, 860, 770, 697, 640, 
                603, 987, 879, 789, 716, 659, 1003, 895, 805, 732, 1020, 912, 
                822, 1038, 930, 1057}}], 
               
               PolygonBox[{{1054, 3248, 3246, 551, 552, 553, 554, 958, 850, 
                760, 687, 631, 593, 985, 877, 787, 714, 657, 1002, 894, 804, 
                731, 555, 959, 851, 761, 1023, 915, 688, 1009, 901, 1045, 811,
                 1033, 925}}], 
               PolygonBox[CompressedData["
1:eJwV0rtL1XEcBuCvWZl3MzumQtmiSyDkZt5v7f4D6dFKK8o2bSpSK6hBMMK8
dRu6aGUOLlY2l+ZiLbqUmpkuQZCD4PMbHt73/XzhnDOc4/ErTZf3hBASmGYi
LYRxmh3L+JwYwhn2MWPfJIXndjk/9EFaOMUXt2b2897uIZUXdgU/9YfEKSeN
dF56q2RFH6KVCjJ45V7Fqj5MG5VkMu5ezZo+wlmqyGLCvYZf+ijnqOYgr91r
WdfHOE8N2bxxr+O3/oh2aplzayGJD3Yvh3hr17OhP6aDOubd4hwg7A1hQObJ
j976WLG7OMqi/V/e5SQ59qRs4I++I/t5om/K6xRFv8XnDckL7kuyk2y3mEyU
D2SBnPP+T79Drl0iU+WYPCbrvX/VW8myk2WCvC/z5az3v3ofMfuETJGj8pa3
VdkdfVb0X3EflN/ct+U9Sjlsv5ONbOpP2dJvUMxFe1lejX4j83YDC3pb9H18
sm+zpl+jkO92jCn9NFv6My7RSC5H2AXYiVdk
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{516, 3247, 3244, 664, 737, 827, 935, 521, 642, 
                699, 772, 862, 970, 569, 607, 663, 736, 826, 934, 520, 641, 
                698, 771, 861, 969, 568, 606, 662, 735, 825, 933, 519, 567, 
                605, 661, 734, 824, 932, 518, 517, 566, 604, 660, 733, 823, 
                931}}], 
               
               PolygonBox[{{995, 3250, 3249, 602, 639, 696, 769, 859, 967, 
                563, 601, 638, 695, 768, 858, 966, 562, 600, 637, 694, 767, 
                857, 965, 561, 599, 636, 693, 766, 856, 964, 560, 598, 635, 
                692, 765, 855, 963, 559, 597, 634, 691, 764, 854, 962, 558, 
                596, 633, 690, 763, 853, 961, 557, 595, 632, 689, 762, 852, 
                960, 556, 658, 715, 788, 878, 986, 594, 724, 797, 887}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVXEcBuB/JhJ0naqFOZRXLVJQCuoz5NzwEYRGyyGHjbmpoHKMFhHR
IhfN6aqyrDaVlStTG6xF00bdqKUpFIjPWTy87/s7VzjqjdfUH6xLCCGsYZj+
WAgDbHfcRgH7aWWAZQ6sDeEF+fo+WuhnKfqs+3Py9EuMsME+wSTVdjMP+Bv9
vNsz4nov70i3a/lMld3EfRapdhsiV+/hLWn2cT5RaU+Qrbfyi1N2kTzHPPfs
Bar0p2zV98he/vPVzpftzNBtl8gLLPLGviITEkNIlenymPxIhWe59g09JnfJ
DNkplxmP3s2+qifKLLlRtsifNHqeY1/X18lCuUmelXPc9fyyXOGPnupZpf6E
LXafTHbbLXv4xxf3azLJPU+eZpou92J5ngWG7RR5lA+U2ztlB0uM2ZmymR80
2DvkGWa5Y/+mQh8kR58krrcxRaf9mmT9CBOU2e/ZrDfxnXr7NvOU24/J1jt4
Rcw+HP09KbVHyYj+13wj+lLfYo4y+xFZ+kVest4+FP1O7LVPcpNZSt0ekhm9
E6u/hGW6
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt02dsllUYBuCyh+y9peyh/GGUXQr+kL1klgRlD4FgFAQUlI2RIQqI7C0o
Q9EylCUQNLK3AaQoyBIIQ8OQ4PUk/Lh6389p+vV7zzlvYq9hHYZmSEhIGONH
5Lt+5OAvNpsPyZ484G1zmnyVW9wzn5NDaKkvlzW5oJ+U/Vis75WdeKbXZJae
yK/6x+zQ2/JI78V6PZnr+joyMsqck+/0d2jFCnMtfteXUItPzOU4qE+nN5kY
be0FvtdH0JraZCYLWcn2fB9ykaaPpA11mG2tPIf0GfQhO+9Zy82W2DvaksSn
1ipwWJ9JX3LwvrU8bI1noh0rzbW5qC+lLp+ZK3Ik9ot+5GSstbxsi2eiPavM
dUjXl1GPOeZKHI09Yafejsd6fzboTbihn5ED+Uo/ILuRKfbLPE7mY7t+WL7O
GH2LbM5t7pvPy7hIj+lgXi2T4vO5ZD4l+/OQ5eZ9sjN349LxR9wvnlLf0lxZ
mWscMx+TvfmX2eZdsj1P9ItyOAP0jTKFm/pZOYiv9Z9ldzLH+Zo/kPn5Ic6Q
rXqLuOd6R9bodeN7xT2jAfPMVTge58tANpmb8nfcW3LzobkAP8Z58xpfmuvx
Z5w3DfncXJUTcd4MIg/jrRVkR5w3nWjEfGvVOBnny2DyMsFaIXbGedGZxnxh
rTqnYj95k3xMtFaYXbEPdCGZ/EyyXoTd8Rx0pQkFKEghClOEohSjOCUoSSlK
U4YXKUsi5ShPBSb7/KLsiWelGylUZIr1YvwUz0V3mrLA2kucjnNgCJWYaq04
e+O5SGVt3CEux7tBMxaaX+ZM7DtD+cbcjFvxPlCZaeYS7Iu9YJvekn/0HqzT
G3Al7jj79S5k4BXzIlmDs/px2Yf5+u54L/hPT5dvMUz/Nv4u7k+8S+bf5GA2
6r/I1Hi/yBLPwwiexT30+49kSa6y33xEvhHflcnm7bIVd+K9MV+I/xnvDP8D
qh66iw==
               "]], 
              LineBox[CompressedData["
1:eJwV0jcvRWEABuDLgB+hjurFjE1NGDAY9ERiEDXiF4jOrpsQBnViYdAHiUSi
RCKixaAsSBDPGZ687/ude+49OblJjW3lrRGhUKiXHOVBzpPPtB3mQh9nR6/g
V29nXc/nVV/hSK8mimR7SMayp5/KRvr0LVnKp34j26nRl2QuLzza57KZbxbs
PVnFB5Hc0c0fBa7PyEyeubTPZFPwO0zYu7KSt+Ae+1Z28UOHvRF8T3Bdv5Qt
rOrHwfMRTYo9LOPY1/vZ1sv40mtZ1vN40hcpZNbO4kqfpJNURpzFc6APUEcR
aYw6T+BQH6SeYtLJIEwmWYz5XCJHwXungRLmnGVzrU/RxaZdyLu+xoleSwz3
9AR/iEj3iX88akng
               "]]}, Annotation[#, "Charting`Private`Tag$504185#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GV4VnUYB+ADjBgMBkNGDJQBknbR3dL4VWq0EiJhe0lKKIhKt0qZ2Era
AkpLqaS0dKOXcT8f7v2e33NgO9d7/ufNzhnceVCuJEnW+5GSO0nezJMkNdln
fp2HeYC85OMt12qx3zyNLtQkP4vta3PAPJ2u1GKDXRfysFIfSQGW6HU4aJ5B
N2qz0a4rKazSR5HKUr0uh8wzeTctSbrLOvxk3428rNZHU5Blej0Om2fRg7r8
bNedfKzRx1CI5Xp9/jDPJod6pFGYt11rwBHzHHpSnyK8Y9+Qo+a59KIB6XGv
9o04Zp5HbxpSlPfsG3PcPJ8+NKIY79s34YR5AX1pTAYf2DflpHkh/WjCJrse
5GetPpbirNCbccq8iP40ZbNdDgVIUjx3WVquc20cR/QnuZmd+nX5Evdwk/6h
bM6f5n/kVN4wn5YvUDnuxe+bIx+x/10+RoZdZpwLOUNmyU2uXzFPoKR+pywk
F8hbZDPXt5h7UlRPlbnkNFlGfuX6RfM4MvXbZEE5X77o2lH5VPyuOCv2s+Qu
+xvyZe6lhP6RbMHpeCc4Yx5JFR7V98khcY9s1puz1dwr/h5f6+M5Zn6a8uzW
M/nY3JIz8T4xgBaUpFScB+e6tCzDJ/5dK87G+8VAWrLNrnd8NnyjTyCLT/XW
nIv3i0Hs1x+nFFv0Vmw39yGNb/WJlOUz/UHOx/vGYA7oQ+NMsFVvzQ5zXwrz
nT6J4+ZnyGaPXo7PzW24EO8iZ82jqBpnQD8oh8WzY5t+VU7krrgP/RfZjyJ8
r1+K58jtcQb1E/JZKsS77HnOlnvt/5KTuS/u0X5RnF/7L2Rb0u0u6v+aX2W5
+ZwcHWfatWrxPsi5spwc4voh83CK61kyRc6UZeV216+ZJ8XnrN8dn61cGM9e
tnF9p7k/xfR0mVtOlz+4dlmO5444h/pJ+RwV+VX/W07h/ji7+peyHZfiO4nz
5jFUj2etH5Yj4t7YobdlV7x/8d7woz6Z8qzU23M5vsMYSjt2x1mP+2W9PoVs
VukduBLfawyjPXvsBpDBBv0VKrBa78jVONsMpwMVWWPfiWvxXccIOlKJW6kc
e+9DFVmValRnrf/TmevxPcgTdGKv3cB4RmzUp3LK/DyV+E2vwTrzQ9ww/ydf
Y4X5ghxLCc+mhkyV8+LsyP8BaErdzw==
               "]], 
              LineBox[CompressedData["
1:eJwVzzk2g2EYBeA3oXRUUSpS6AwxLiQy/r8qC0hKY8QSHHZgB2Y6JMI5lKrQ
Ke2AGB7Fc95771d9+Uar2MxERML7SMQ6k7xkI4oM5CY5nvQDprnRS3zKx2yw
ygy39jJf8gmblJjlzl5hKJ+yRZk5uvYq3/IZ21Qo0LPX+JHP2aHKPPf2Or/y
BW1qLNC3JwSX+i51FnmwpWS40jsk//8Zi1hyH+1rZLnW90h51VtM8Kwf8iF3
mOJNH7r7rDA+GnHk5t1lb3/qhjBP
               "]]}, Annotation[#, "Charting`Private`Tag$504185#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GV4lWUABuBDN6igdAwY6uhmYwxHDgYGeCmpNCgxfiipNBiESkmjhEGn
dKuEdINKg0GDNKj3++PmeZ73+zbO2b6zqHYpTXqkikQit/0TnTYS2Z0uEnmD
xPSRyB27lFxlN5Lf27nlLLueTJTV5Db5vmup9JF6DBX0DfKU82L6Ir0xb9p/
y/fIyXa7oOvf6fUZa2ezJ+lVuWyXYE/4Wu7q8+hFaveNclaS03YzLofXQi52
2ON4nr12M+7p8+lNc17gRWIoGd4vpdnn3ubc1xfQhxaUYb/zFjzQF9KXllxx
1otn2WmPpywH7JY81BfRj1Zcddab59hlT6AcB+1WPNIX05803utoZ6U4Y7fm
mt6H3PxiTyS7+yaH3wtX7PIc0lvzWF9CHvfMtmvxgZ3WHqOX5qxd3F6sv8xb
9nXZlzyUc22d3O28UHgm9CSZJKvLn+Vr8kvXc8gpdh0ZKyvLzeH7yqvhZy+X
2w1lE5kgd8qmsoLrh8P/H16n/ST8XuRqe6meV5+j1yZW/1F+6Dyd/plehor6
RnnOebS+RH+Ft+0bsh952WMXdn2e3oBJ9lP2VD2Oa3ZFjoSv5V99GQNI777P
nZXlvN2Gm3p/8rHXnkwljtpt+E9fzkDaciv8HsjPPnsKlTlmtyXCCnsQ7bgd
3isF2G9PpQrH7XakYqU9mPZUpRqxxFGdE+5pT2p+sIfQgXhOOutAGlbZQ+nI
P/YACnLAnkYNfrU7kpbV9jA6ccceSCEO2tNJ4De7E+lYYw8ng5/jF+H54oLd
mbv6IApzyJ5BTX63O5OetfYIMvr6sXZ5LtpduKcPpgiH7SLumR+eN2baT9vT
wnPLdfslTuldyMA6O5975oZnmI/sTPY4vQKV9E3yUvgbpS/VX6WGvkO+4/y+
HBKeU2dR4fXJ9bKxPOJ6lFwQnjuZLOPldtlEfuX6M3K6XVfGyypyS3iO5Y3w
t0uusJNlU1lT7pKJrp0Or4GM4fPgfI1c7zy//k34nnxsZ7bHh88Lf4S/l/ay
8DnmXfuBHEpRjtpfk9M9M8J75aZdizPhfjKxwf6ELO6bEH5W/Gl35aE+jGIc
s2dRm7N2VzKz0f6UbtThnLNuZGGTPZLu1KUe9UmiAefd052sbLZH0YNH9nCK
c9yeTUMu2D3IxhZ7NCk8tkcQzQl7DslctFPIzlZ7DFm9z4l2Zf6ye/IkPDOU
4KRd1D0L9UbMtXPZM/UEqupb5S3nMfpK/fVwr31J9iQHZV1bK7c5L6B/q9eX
9WSc/Ck8g/J/MbT4YA==
               "]], 
              
              LineBox[{1431, 1334, 1258, 1137, 1534, 1416, 1319, 1243, 1190, 
               1557, 1440, 1343, 1267, 1101, 1511, 1393, 1296, 1220, 1167, 
               1138, 1535, 1417, 1320, 1244, 1191, 1102, 1512, 1394, 1297, 
               1221, 1168, 1139, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 
               1513, 1395, 1298, 1222, 1169, 1140, 1536, 1418, 1321, 1245, 
               1192, 1558, 1441, 1344, 1268, 1579, 1462, 1365, 1600, 1483, 
               1620, 1110}]}, 
             Annotation[#, "Charting`Private`Tag$504185#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1ne8z1Ucx/GfvSPK3hktI3tvFSote1+7cG3CdRGy3cresmdmhGwZhcre
e5aRUBR6nj9ej8/79T7n+/i533t+58oVFf1hp3iRSCQufiRSP3Ek8nPSSCQ5
opNEIk/4KozAfV0RTNTnxQldA+zXpUBn3VO+GiPxQFcUk/T5cFLXEAd0KdFF
94yvQcZkkUhd3UZdDYzSPeTFMJnnxyldAfs66H7lzdBId5CnQlceQXl7+vEL
8lrrmXg9vonXRB0+jj+SR1v/Wy6OKfzl8PnWh/Fb8mnrBXlH/hvvKa+Vm8tN
5enybDO+OczcbTb2zC/mcxit62ZvG3Men2vG4xXMmPBuzIu8r7mBLzO/83xm
sz7/yvzBehdzBV9k1uJ1zfF8hvmYDzZ38DGe/ccsgan6Dvol8ivhZ5eHy7fl
M/YV4p34Id4CTXS/8tTozuNjnS6LfQ10m/k7GKt7xEtiGn8VZ3VN8ZsuDXro
EmC9Lg7NcEj/PHrqE+J73ZdojhaIQku0Qmu0QVu0w2HPpUUvzyXCBt1XeKwr
hem613BO1x5HdOnQW5cYG3VZ/RwNdVv4u/ha9y8vHd4jfx3ndYXti9Yd5lH4
RHeUv4DPeBJUtKc/vyRvsp6NN+Jb+Xuoxyfwf+Vx1v+Ty2Am72htqVxAriWP
kO/IF+x7g3fmR3ivcBbkluGsyzPkb8wE5nBzj7na/NRzx+QXw++f97G/rTmf
zzOT8kpmbPgumZd5P3MjXx7Ol+ezm4351+Y2613Nlby2XF+eKP8nD5F3yuM9
88Qsi1n6guFsWBvJ78oXrRfhXfhR3iqcRd1xnh59eTJs1k3AU1258F3SFcIl
XUec0GVAP11ybNFNRCdE46S1jIixlgJbdZPQGaf0mdBfnxLbdJPxTFc+vEtd
YVzWdcFpXWbE6lJhu24KIn6OCvo5ujdwRdcVZ3RZMED3HHboctjbRLedv4+p
uni6iuG7z4vgqq4bzuqyYqAuNXbqctrbVLeDf4Bpuvi6SuF3yYuGs8tH8T/l
a9aL8q78GG+N7rpzPBsG8TSobM8AfkXeZT0Xb8Z38g/RgE/iT+Tp1hPwynw+
7yQvC3dxONvyaPmePFDeKl+3v1i45+QJ5nFrvc11fKnZhjc3Z4Z3aCY0R5h7
zTVmD8+fl7NjLP/c/nbmgvD55vO8ijkw3NHmVR5jbuI/eja33Fzepe8mr5I/
khvKk+Wn8gz7EvIqfAEvjtp8DP9LvmG9OO/OT4TvT7jrdRd4DgzmabFbNxOJ
7K2qX6grgZu6Xrioy4khunTYo3vJ3hbh38o/xixdYl21cJ/zkuGs8LH8vvy7
9RLhvfCT4V2E+5nP4onCnWb9kpkLQ621t7Yw3E9yVXmQfE3uH77b8l7788hR
8rjwNyqcEXM1X2zW4Y3MKeF+Mp/xoeYuvtKc7fkkZnUeZy62Hm0uD+/SLBXO
qhkX/h6YD/igcI/wFeYfni9p9uQTzVPWPzPX8/bhjg2fISfGSHlfuGc9c9nM
jS/CHaxfFO44uVo4I+Hcyfvsy8tb8j28LhrzqTwSvuPWk/I35SXWSofzzr/k
D+Vb1kvxXvx0+Bz00V3hL2EYT4+fdPnsaxXeZ7jfMUeXTPdWOOe8DG7r+uKq
Lk+4p3UZ8LMuv72tdfvCnYq5uuS6t3XLeFnc0fXDNV3e8D3RZcR+3TyksL9G
uLd15XBXF4Prunzh/eky4YBuPlLaX1P/ra48/tT1xw1dfozSZcZB3QKkCv+/
CL83XQXc08Xipu5ljNZlQXX7BvMbcqy8OXyG+T/MKVvu
               "]], 
              LineBox[CompressedData["
1:eJwV0klQz3EYx/Fvl5ZLdl0shYMW0jHM2ONgrRwsOdiiiIsZcolUzBhL4UIz
BoeUrYTqYsbBJZLdxXJW2UKFg9f38J7P83k/z69+9f9nbN1XWJEQQujBzuQQ
upNC2ICmxBBSU0JYybXqCzDIVaGPy8QpbhJ6uesY5X4V38YtxE/uCPq5LJzm
JuM514zR7lfzd7lF+MUdxQCXjTPcFLzgWjDG/Rq+nVuM31w1vnA5OMtNxUtu
pttS7om+ETe4sdxa7p6+BEPcMXzlZqGeS8crLtPtLu6pvgk3uXHcOu6+vhTD
XD53kHuvl6OG+6bPRoOegQI3Nfpn82v7LH233qNvxi1uPFfIPdCXoUiv14fM
I/Zz9UP6B30PtulX9CTU2n+XuTgX38Ou2TzNvNxca74o+/Qq+VB/45lsc5n5
vHxmd0C26y2yRC+Rl/TLMkHWycfx85W3PT9BFsX/u+xwvz96vUkW6MWyQW+U
w3q1fKT/8ew8c6X5I19p7jTvNW83XzUnx9/n7oecE9/RbjpW2Nfp/ea39jl6
ud6rb8EdbiJXzHXGvx9/ueMY5PJwgZuBd1wr0tyv57viz8c/bj53mPukV2CH
fk1PwUlzd/weyRNu/wMAk3Ii
               "]]}, Annotation[#, "Charting`Private`Tag$504185#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HWUFlUcxvGhlFK6W5BWWgkJpXVppduWjiUkBASVbiykMRAbpKW7uxeO
eo7Ekrv0An7uH9/zxPxm3nfi3kJdezXvmSyKouLJo2hVmij6L10U1cGGtFHU
FllwWZ8hfRR111+QR6EqVusv6Opio9wOWRGvz2i+h/6i/DGqYY3+oq4eNsnt
kQ1lzE7QpcYC+Yq5TLqe8iV5NF7CWv0lXX1sljsgO8qanahLg4XyVXOZdb3k
y/IYtJSXyWVRXa4hz+Zz4nd5nXMu8w2wRe6IGDNL5KLIIZeTJ/Fp0Y8/SBeF
WX4tXxkj+Dh6zfWy8L358TTeXC+6V/6Eb8Uv56fTcnQYPR3+P63heE36jTyZ
5qID6VE6l/7h+Jt0o/wFrU5H07/pd/Qvvx3PN8RYeav5D+gOuRPfiP+RLxbu
Xy4vT+bTYbHcSV7HV8F118oq9+GvOPZp+G+opZujy41l8npzV/hXsU3ujFy4
oc9mtq/+qvxZOBcb9Fd1r2G73AW5cVO/Edf0Mdih64o8SNBvwmZswXXHG2Fn
eB7Ii0T9VtzQN8Yu3VvIh1v6bbipb4LdureRH7f125Ggb4o9undQAHf0O7AT
iY41w179uyiIu/rs7rFfeO/yWLyMXfpbuubYJ7+HQrinz2G+f3i+8ji8gt36
27oW2C+/j2dQwewUXXp8K983l1MXK9+Qx6O1/KdcHrXD78tz+TxYLu9xzh3+
dRwI3wMam1kqF0dhuaI8lX8K/flD4XsK7zJ8U3xVjOTP0Qeul4sfwE+gN831
pvvk2WE9y23oCnkGrUCH0zNhzdA64Z7pPHkKzUsH0WN0XriX8N7oJvnLsCbo
GPpPePZ++y59AwfNddPv5LvxTfif+BIoIleSp/FP43s5ybm5dQPlBHki6qK2
br4uH1bI+8zd41vikNwdz+KhPo/ZQfpEeRLqYb/+vq4VDss9UBSP9AfwQN8a
R3Q9UQyP9QdxCIdxBEdxDMeRZL4Njoa9A8URhe/c7w/W3+Inoz5OmH+oa4tj
4V2gBJKFb9/8h/rb/BQ0wEnzj3TtcFzug5J4wex0XQb8ICcP60M3RL7DT0VD
1NEt0OXHSvmU6z3m2+OE3BdNzfwsl0Qp+UV5Bp8RS+QUYX3phsp3+WloK6+U
K4a9JLwbeSFfAIP543RVWLf8Zv4rWjPsqfRfetr/iPgO/Dh6Mrw7ukv+OqxR
uRn9RZ5GS9EhYY7Op6Udr0xnypNoJhpLD9M5Yd8MexVdL8+i1egoep6mDPsB
P4y/F54pv5+fzrfjV/GVwp4Xvhl5EV8Qq8NeI2/ha+GMe0gmd+RPOdYfzeVf
5dJ4Tq4iz+IzY6mcKuwtuuHyfX4GYsK3oVusK4Q18lnXTq7rFJ6VHIvn8UTY
a/QfhbXNz0QjxJlPoe8c/pc8AGXwJArrR+iT+FlhP8E58yn1XfRn5YEoi9Qo
oh+pf8h/HtYqzptPpe+qj5MHoYX8W7hPDOVP0QX0fzckM8Y=
               "]], 
              LineBox[CompressedData["
1:eJwV0ctTzWEAxvE3Uc6l3FlLucu4VSoLbFw2JNQMm1y6GJmxMCOXkC4YCwtT
nQgLycItO5eyKWZYWFi0MZzqnPBH4HMW33me7/O+8/vN+Z2ldWeqmrNCCJ/Q
HQthAZ5FQ4igKB7CNf5X78E+JCMh5NiP2X/w89iAKJbb2+z/9F7sx4T7ufbj
9p+8BRsRwwr7dXtAgldh0v3Z9hO2JL+ATYhjpb3dnoU+fgBT7kfsJ20T/CI2
Iw+r7B32GbjHq5FyP2qvt03yS9iCfKy2d9qzcZ8fRNr9mL3BNsUvowTlth7b
Qjznc7DG1sVnop8fwi7bAC/AOz7teXFbI0/xVpSiwtZrW4QXfC7W2m7wWXjA
j/A3egkO8938ib4M73k9H9W345f35PEmPe3stP5Zv5L5DvqQXowyXskT+mKc
07/Jl/Y6/YPeLStlm0zKATnP+Tp5k9+WOfKs/Jr5dvKh86PyLb8rS2Wr/C4f
yxrne+QgvyMLZYscl8POGvQxfQc69ZT87Tfl66f0aXea9S/61cx/pb/W12Mr
38b79CV4xeej2HaL5+IRr8Ve21NehBHeyD/qO9Glp+Wg/OPd/wFj3GOG
               "]]}, Annotation[#, "Charting`Private`Tag$504185#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{514, 515, 513}], 
             LineBox[{1059, 1060, 1058}], 
             LineBox[{1622, 1623, 1621}], 
             LineBox[{2487, 2488, 2486}], 
             LineBox[{3242, 3243, 3241}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution with backward integration \"", 
           TraditionalForm], PlotRange -> {{0., 6.24999987244898}, {-4., 4.}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJykvHk81N/7/z/2sSYzlkolqSjRXpTOZakshUoqRdoQJUQlRKWNslWShKJC
kWSLcpC1FEXZZcaS7NsMMwa/Z70bn9vN64/vHz//dDu3M8/lnOe5Htd1nXO/
WnDk9K7jvCQSqUGSRPrzr2LgeEzkvEubSaTBPRvPbXhv+F7IuN0Wo8MvnChx
zBD8WXydML9lBVqVaLT6wr0U7KohoP5coQYZls5fsmF1Pt750MKX49aI8m2D
tI7PLcU7VI4PyGxrRXdm3W0yZVfiU6bLdSay2lG04Ap7+TnV+F3E5fu7JbtR
hfe8K0Vyjdh2LOTR0339KPvNz/ToG83Yyjjvkwp5EC3V8G58fIuG/SwEF42f
HEafsXT1iBEdHy32sFlpx0Rd6148Ldei4zyhWTsd9o+iK4GO7LQbNNwTt6Xk
ULUUsLpVh+7NJ4P1kJaq8UkOOt5TmofW1uPHkYXyI7cnUOjrprjM3kq8OMn1
NOwkwbPDzULBbwrwmufNbVR+HrBVNN5/520Mxh+fDt48wAsBLcFFjzTKUcDL
P/18cDJcxLPVuRZFxK1Mc7DnB+XFsPLO/l9I7O/1AqBn2FHw6m0Xak9wO2vn
IggipzmbzKIG0cq//UKgJ9to/cF0GPGY1NEDfcigE76TGa85ihT/9gsDKdCk
K8yRhW7Ijuz4dl0ELn3J+lIfw0FOz/70i8Ly5OZ1xqHjiHZpzTF0Twx6YpkR
ZzeTYH/Kn35xGO6S+cp6TIxLcql78UMJyHDzH74uwQt5LvO3LHkxA6r7bp97
TIyDufjh3DRVSThzv1CM9ykffNjV7yJyWRKc+APbXXT5YYGREGfh3plgYhRQ
wiwTgOnfX771Ve3OT98QT3LkyprcDCzCcjhbldKPdl8ZqhEubsae0vNmKO6n
wFqdPS0zwsgQryLw0bWZAsO2j+e+/UIGwWGeWXlWVNAeJ+PiUjI8X/H6YuQv
KqxpO+ZkQrRVjiQYj5+Shh1Pipc8In5fb/A2ZU+XNIzkzDwtXU2GbzEXlqMz
MnBJLU+ugE6G0Tc7NykOykCeyFJ/ah8ZJjNd0q45ygKbP1GxfIwMRiu2bvFk
yILE2pyRz8LCUGypfsLhjByE+c1Oj5MRhqRkp5HJSTnwVJfsOaMkDB+D6507
bF+hr19mJ60pO4MVxjMixteVIGt+NSbzzNP/jF9ysLo77vhv5NQT+fOrbh32
5VdmLAnrRV63VCsdT/3EXdbv7ZbuHkD9g7syQ5fRcHKMzAJvyyFUd9E2fIEU
HTMl87bct2cgYWk722P76Vjo73xyUF3kpz5R2zrsfqvszFJbFpJRGZUvrWvG
r/9eP4mUfU4svOFTgUmll2IVvcbRjyZjW97m6v/031V6J51ZTgJDO3nd/Dtv
sIIRtYkjJwVq6Wb8UXJCMN0+bxTwaeXNpoBiybyJQ8fJEBIVfPJTBAXeiB5I
e/meDDUBVwbC51NB0vrM5YQyMpiH1H5Sj6HCKtutHfElZHiRQPwtlYasLZ+/
WX0iA++P1z7xL6XBUHzH6UvfyPCDOcvJUF0G1qg/aH3RQAZNIdPktLdyoJ4+
se3pXGEo1bzytts2CjnVjZnMXWuG6T2Nh88zPqB+K9MoxbZHeGkvi/ly/zf0
infUfLAoHYdlfnvPs+U3OnWr26ljXh22FlXZFerfgwyc550Ou9SERf/O5yj6
NhCctm4PDZ91UE++/H0QuS3e9ulnKw3nph1d+7FrGA2UX5z7ei8dX5BdSPNu
ZSL/9S9cMxTo/7n+3c2+7PxBNjr9uFGgvbUJr2g6ZJc5zEEiIi3OZx/V4l0X
V36gUyaRgV1m9/oPX3Hsfo/zW4JJYL88VzXkaQ62F49a08WcCdUuFlklNEH4
4uyO+j2lwOXO4OFliUIgEcGsDBqTgvBWu5e0rWS4Xlf9nnmBAo0z55hvTSQD
6c+fDxV8cz5fmiTmm+z1atU6YWngGKwMUftIBhn5JNvdt6VBX+U977kKMuyL
PjHTVFwGFpwXgi+1ZPBJwbeCQuUg47zqZtXZwiD34YJuz+0MlP36rA36chU/
mptGZnV9RJSY7uAb0gm4hhc3u53qQjPD177c4dqA48cXh72N7UObXgjqyik1
48Q7u76crBhAb1Wuro11ouEraTlxKm1D6I1f9qIba+hY9eQ882O/GSjt12v/
GlM6Tshw/iHfOIJudQ7muRXR8HfjxQIivSxUY/HsprtjM6668EXQrXcMrXn6
sk3rdgO2/OsfJlCSLHWsZuA73lXieDDonRQcVEIrGZNCELb7j35RoE71icbc
12SIPGY0JzqHAnEf0j/1EfNzOk9HQA1RYX1xg94YMT8XD29ZZFtIBdaCybWl
RH+J9Mvw49ul4WHuu8QGYj0PH2iurGuQg5VOmeVSC4Sh5NY3fYZtIOq/2pG3
+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
Tw7euu340CUrDAl/x0uFYwNvMgQIvZ4e7+X8Hc9MWJXnYXz3mSBMz+emn1dN
P++Ynt9O9z/T9Xf6/sp0XmN6/DZ9f2p6PjXdXqbzKdPtZzrvMd2epvMe0+1r
Ou8x3d6m8x7T7W867zHdHqfzHtPtczrfMd1ep/Me0+3XS/lP/0yIfXfGtnSW
4H/sebq9Tudnptvv9Hxhuj1Pt9/pPMX08/3/lz1Pj6+n2/d0e57OH0237+n5
0/9fe59+vj7d3qefd0+3/+n8yHT7n56f/L/0YHr8Mn2/aPp+1HT/9ldPSFRI
ERAtbCL6uXyZkNEud+15PMDly9z4h3fZqLARly+73XdC1vPTALL4l2+6aOyN
6LSuwcfV2eIrxZvR5k/XFwge+o64fMqLM7vmCJyoxClVXm6lGzpQ+cdWefkf
BXh6//T7nS76tfrVjkHUf0TOQKmoeYova22S6H+8rhXv+/d9lZj5ZwoG+6f4
MrXzCV8/DHfjK3/1SBAc4ostYgTbEZcvs7pW099txpjiy2KSht/G6bKm9KqP
IfQ4S5CDXbO0TB9t5wFx/ZNfz1I5U3yZqrXAts4RJj6xTeP9iX184GyeNHx9
Xx/m8mV+laFho1CFufa8maUhqbqxE01/n4KtIWGXLwvBXXtVk8Gzg1N82WfG
g/v975mIpJ3OE+0uDGMPVD4lG/0fX3Zv3+O+hj1s5GRxNH/kiigYPNqqMqbI
nuLLfAoFZSwLRxH1zoO6m4/FYZu253WXp0x07e/zJWBGvJlCaNAw8uT7WHDv
2Qz4XtL9TXlRP7Kq/ONPJMHPhCdnhVUn4uqNFRxwEBJsRVy+TJLufy3gyGvE
1Zt161adzU9+iW8VTaxQsJSCTx2fV+9rbsd3zvy2t26Qgpq5q36xJwaw17/8
62MkYmXuZk7xDiFSi+Nc6xmYy5dN+Mz0URL8jLh82XcxmTA1diHi8mUVul6D
cVa5iMuXqZnf75dWyURcvix3e73iR99kxOXLFGJHV+ebPEVcvix68d3M5Tfv
Iy5fRmLH+9aluCMuXwbjbxr2kzwwly9TCDE1PfE9BOcq/M//MVsej4tbTyIu
T3bUymt70bI+JDgi38u/tgFZ8Hm8n9/1E0n81UMasql6qp/l9xmRvJ1X96N2
tHHnxChFLGVKL6soWlXuzR+n+LP7H2Pz25fW/NODIZTnJHNo/tn/483CSbXq
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
Zfx7fPj1Zt9hPjfL+JwbeoeGbqfKTQGUjx6seGbwgGMeQ3nmcxYfp1bMBACU
P87pXeBq2N8DUP445UlizWeJ1P/ms2Oa11cpTWHTjDyyhR9/o4ppL0hi5K1J
foXVVYcaifzt6cG6iy4qfUQ+eKYB+h0ljzCOdwnsSxl/YthPZuyvILyjGqTs
lzYBICPvff0sp4bLvT8A5ZkP9Q/zUs8NA6N/Pu8EOjUtn3IkqwDKNzs9neAj
vSwn8sIyMyn1163+mxfGhF+bYicGiPxzCfmtvePecQzlza+msBoKsM9h8//s
bzcIb876mWedDlD++XdeVZSIfg2RX7a/fymU7TsNM2TkyROMdK+pF/8GKL/8
ga3gUovRDJE/P5gF2M14WIpQXnnzz1T58KpJIn9Ok0teFmfwlsh33+3mSnO8
M//3/JME4J3H7dxnPKYYvzcrzD7Af/g2yxyG8ubGJwzVAyzojPPBBi1kV4yJ
2U1jKK8udTBTza9pCKB8+4fKa61fro1hKJ+u5cJxfhfHDOP7OeGC+7x7cH0D
Y5sdUvdQvbb49TP2lwceCAOrGsPR9cYBjwSC20obmxjfJwTt+V56338wBpBv
Y3TDH9dO/W8A+TWEgkQfP9FoBO6MvCOHXPJ39YBOwq/Rlbgg+EunmvBpuMW0
jp71eoOhPKaB8W6Vy0kdRP5Sfyoy4mdpDZE3rss6GCXZ9BEg38zBa+Hdokal
APlmlibfe+js843IX3JsoG+VX1MM4hm+hyrRd+xdz3sY+TY2+GqLzHbsYhOo
ZuTlIkQnTb1PNGGiJn99Ggc8hldcTOrCUD7yl1Hl4Y+WbwHKN169aPCgoYsM
UP617OqRLtnMXiIPPLts0PdPVTvBgySnWYVunCUTPprakrUBNjvzGfnBSVDn
ZcHiSUN5MW4oZzO2kCzcxeDBeOFVsYz6F0f6CB+F1i8D1oSxpL/3X5047Cj9
OpCjkgOQn8LN+Zz9+43dRN52y6fkTRMS7RjK+0k6ZibOTpIJP0VgnpJNxaFU
Il+dc2uujWOyD6C84UDBxUv1qV2MvK0gLFY9e9NKuY/IXyft81CmLakEyEcx
NxL77WQChXh/gVjZQCbLAQqRfxQrq02uKacQ+WvyxjGhe4crAMpb2zWc1S2f
ygLM63/M+TLm5/nM+QPm56fM8wPm9WPm9Ujm9X7m9R/m8ZN5fYd5vZ25f2Tu
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
woYV5j8Z//o5rA/w3n3+9cyaZNS/zZW6NWZX4wvUv20WPfaWZnkhqg9wNHJW
XcOnIlQfoEqpNebr3RJUH6Dcs+TWaF0pqg8w/KFxIjCEjuoDmLQIyHr20lF9
gPGtUVk5wmWoPgA+tUvi7hc6qg+geNgyOtP+OeoPF+btLHg49RPqD8c+tbEk
jt4KYH2AS1fnh73yZgFYH6AZb/2RqMUBsD7Awb4xO/ohDoD5RVAJ+P7aig1g
fQCTW+/Td7ky/3U9wn5yEeuWdabK16L6Va3SussS5xWhfnIM/fvbz1pk4rCf
3FJz4QVz3OpwWF8guVt5OOV+Pw7rC+wc/AFsNgzjsL7A6INLj7sFRnBYX2B6
mcHpuzweDusL4Hqihxd6DeOw35zKVu01+kKDqP9bXy7+vFiVgfx/wNadripq
LOT/lVSEEt43dCD/P1dWfp2RGhf5/6xj+cEeo1zk/x/J7Zip2PrH/6v4RZ0/
nshB/j/Kqh07G9qG/L9JakFvVPQn5P9XSPfMbc3IRv3jjNeKHHPAXiL/X75D
MJy2qwj5/7gdB1cvXluC/P+zR780mZGlyP+fMph0DD5MR/5f/+te/cJvdOT/
NfpzV9wVKUP+fyVnZpUZl478v8/3IzbsF1Uov1q4+XGiaMY3AP3/uT0s7xp2
O4D+f/8E1lMazgbQ/wedyxCYe54DoP9/0RkRKijIAY1TcMapY1ywdzMI9PNi
If+f5ORfl5swiEP/P3TplVeeGQ+H/r80rUadsn4Eh/5/x0oR8WDi59RX+l4p
a0QxbzcfTSHzIRx6/Vr2otW7v7ah9V6owzZFGyK/gF7fTc13//tlXcjr26zZ
66RZx0VePyJp9f3NaX+8vg/2rlyyqRN5/SkzJz3kLFlo/TbqXiltP4WBvL6n
bf+xDKW3yOtnBp/ZfiTsKepXl78gOXLuu1zk9W/0Nz7VVn+NvH6t0YN7B82K
kdc/3rZgrH60BHn9nzXGHqrT6cjrC3tj5rKpdOT1PTL1wgXG6MjrP3Vfnrlc
oAx5/XsnB7TXl9OR1z8VRxlNzopH/fF0VTJvr4v7iPrjddm+5Gxa1Aqg1399
rJheq8QC0Ov7FNaXPZfhAOj17VWO1Dad4ADo9T+6bkxcFcoG0OtXlKuezXnG
RP32ck6wJsYM21A/vZfyAQt859ehfnoaW9ZPcektQv30xgLC7LvG41G/z/VX
4vMtlGtw6P0rlmBiQjP7cej9l9cFxMa3DeHQ++ecV/V43szDofd/o9VsuY86
gkPvL5hLU/yYOIzDfnts+9s/0q0HUf+7aS8nvU/3fUcefx0vyDb7CRN5/BbN
+ECrkx3I4xsVnJ+yhNeFPL6bRsOqpJ9c5PHL1j8/5aLERR7/Z2qMfYtKB/L4
s1bdS/li2I48PuUxiPYta0QefxlbdJfMwHPk8W/lqPsOxf/pnzd2Xbza8EQB
8vgn9DJnb5xehDz+uEjRkbHfxcjjV/cNK6S4lyKPH/vy8eeuXXTk8ZWvsat1
P9CRx3eS7D77kJifoMdnRbx/rD1ARx7/YsOp2YM736D+fF9HjbjW678B6PEf
Oh+c+8qlHUCP318UJq1rwQbQ4y9fbXRI+CwH1eMKGtv2c+cCDljsc8XrKbML
GCyKoOTnsJDHX6x4JKtm+SAOPX4qe66EF42HQ48/JeaYQ4bGCA7vF23Qfhe3
/DYPVynP9N4+WxST3uz5Sez+EA79PH3Zps+UdW3Iz7fK3a+0yWYjP58eavks
sLkT+fkLTyafg+dc5Oe1agPMRN7+8fNW0YURG/s6kZ+/duGB/cpRFrr/c01d
8uR5LQby87RPh0czlWuQnz/8dm/K5vVpqF/fhHZwxbZPOcjPP/uZoBJ+4RXy
8w2NBdWf5xQjP/+Jl5gR/K4E+fl7UXcsO3tLkZ9vOG5l/vMuHfn5Q5kb7A4M
05Gflxcq/dFG5L/Qz1+6Glr5tZaO/Lyp83Ktt/vbAPTztxfStCbfsgD087sE
nTZe2cMB0M+bRRv0bNzFQV7eYqe94cSVYRx6+bjusj29MiN43la2v0mNMJYa
HPTx/CceDu8XxVp0ytNXdgLo3YO6Xa97HeKCxk3PqQbBxPG4vDJocR8Xefca
C/c51Ogu5N2FyzTLVpsnIs9e6mHflONFR559y+s1QrpsOvLsz3lzGx8R82fz
t0vyC5No2LVT2hHH2+kAevZb5iezHEvZAHr2X/tmbZh5gQP08F/KNwo4YH7v
2yM539nIs9uubkqnBPNw6Nlv1sr1mhPnJ/ToMx4wm556dCGP3n7t2DEPNhco
nd/WpFRGxTbQzVdsu8RFHt37/MRZXh4deXSdl6GHXCeJ+X39s8D0QzRMsCPX
K2qcjnx61vrO1pwCOvLpBz8trZ7SdBP1I7S86d6+K6oe9SPs+3z1ye86BoA+
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
Dj3srRD1/aB5GIce9lyczFHKihEcetimNlbxwjQeLvO0+0DjqAjmjFdf9v46
hEO/asAJH132uBX51ZZwJZnjemzkV0/IPDsReqsT+dUKqZM7A25ykV992Btm
vfo7F/nV52M/qCs3dKH9et5WtWYNxPUM/eqjQldd8RYG8qtdkQo6bVl1yK9O
Xa0+8EkuBfVzLZNNso0cfQGgX/WhUzaZthQiv6plZOre9L0I+dVKo9XZA7El
yK8ayV7wf9pQivwq9stQ70kYHfnVtf0He+1/0JFfvTWm1XKZiPfIr/aKNR1v
oiO/Khwd94LzuRVAv1pFUV2kFsQC0K82Pw6c5QA4APrVXo+O85nE+hl6Vfmq
m2aVW4Zx6FV3fGWrfBQewQO7g8cYWcLY0f0aTm0DPBx60+prsmx6awfypm5f
V66ZpclF3lSsrc62hsj3oDe97W6vub+xC3nSQU8nBYGjdORJA30S2yab6ciT
TtqOrU0m4m9V7uj3khgaJqgpW3+IWL9AT2pjtCstOooNoCfNzuqRvULMz8ES
lx8sNOaA84uERbjjbORJazKXupzZx8OhJ+0uW7VyjJgfoAdl2nlUz9XoQh6U
scJ/vuFHLnicd/+3fS4VU5sp6j81iYs86OFz3k6daXTkQRfLGzSdIeZz+Vz6
QY4FMb9L1VPKiPwO+tCwo23Uj3Q6gB70XuO0l/vkOeBI7Kj47AYm+Mx21Nrr
zkEe9FtSYI5fGw9XOTRsh0UIY5rM5/0mM0Zw6D0Pa5/fWvW7C5QvWhJYd4SK
LbV92dZKzJfOJT7eQh1UrGBiik3hPC7yoFYLDzqcj8tG/rPi9drNhvV0kPnL
jL16Kg1TqFt/p4o4v9zD1EzULtGwwtGr8m79dORDR42vrakn1lvQh2qFS23U
8eKg/c+vvuuN6MjxcOhDY8oKGi8Q8z30nXGfY6eZ5RHx+kj+9rREKmbW+flQ
VjkX+c711+1PKxL5ndt1/bNL9WiYx+6P+2KI+AZ9pwjPWcB5HwdgVRNpF+pY
QEFQZ/49Uw7ynQpzWn5YyI7g0GvK0fYJ2B7lgq7yPo7OZSo21SDN+HYvF1D0
TDLSVWjYqVyliAji/Bo9FVRVXNsOPpZcmiwlzh/oNb86CwjYrBnBrzGvuzoZ
UDGJBuEjER1coCEWkCFTQcVOHsl9rxTART5z1exjekzieL//tnlzgiMNm6mb
5TObyPeh1zxaqOmumU8Hz+bmto/eYoJ66bee/US+5vt77XKeLRV7F/P85R4i
v2t0mj1kNimNndDMshcgjgf0mA1c+/xXJ4n8v+Um4wNPCOvVzhi+uXoEpzDl
nhrLE/OZXl/onkQifwUVA7UPqRiumRRkUc8FURPTgo10aNiYR4Z5OpHfwf3j
87wuyWgQ+TH0mJcCn+5XmjWCfF7iHsrALbERfH32jFfv5Yn88FHT4pfE97W/
3NRtYVg7mFKeau1A5HeckUhrcy1hLPOwdFQokc8nSbemjQEqpvJjNMe2hQve
fg6jGH2Xxl5PCMp3/KYDium85jR3KjYW9fDJC+J8hZ6ycGrni7r8NHA57Hoj
ZSYNSzfLGdxHvJ+sU2sWW6QdhCxR+76UyO+KuTcUpGSEsdeP0mXiiesXesm2
2Czlb4c4wLP+VmzkRyHs8s0TM8eI/ELjRxs2L4KK7UviqelzuKCjMSQ2dCUN
szFMWruM+P35/Hojjk8nQQvx+2cIR96/YSWMDXfdZa1XHcE9s3RX1O8kjk9H
R8jHH1yQrXe5ZMkPaSw/dUvITSK/g37y8TW9rbRsIh7sitrhcpoJFmR8djc5
ywGWnYV+06yomNsv/3U9PC5wlR/2PjQmjU2Vv3wq4K/jkWlZ/uVgG+DWZ07a
E9d/hGxDrW6vEOYpkt8gvGoEX/aiU+LARmL9FZ9mrkScD+Tj43s1qO2ULxVL
O0d5upb4/VVHf2xpmUfDzmJXq/KJv++q2xqw26UddMl656oQx6tZo960VF0Y
WyC8RdWX+P66NsSq4a5UzFLF+usUYn0ou9XDRlGcht0r2D53PvF645nlAdLM
NiBtqbrgsA8H5C75OPMiRRhbawwcqojjDft7Gi2znuXwV/7P36+d4pLqM+HH
4e+/F8amxj1KXE6sRwS2OxvfN6Zit3iayu7EeusxNeNzuwMV+zy8g2pOnA9x
j3f32U8KYXLfZLKKiOsP7td29dTKWjjIBfHjquteK9Ew6dxS23Ti/ZbIO98f
eNoOtobay28h/r7+AjO39i3C2I2dUjqqRPzRsL9x5Y4nFUsW4Pz4OcpFnvGk
Tp3Hg+BEMPQpc5eAFA3rqzbbfoX4fd2vxxkvFreD2QkqF68Sn//tU/NVcYrC
mNb6eSXT1o/gu5VS5/mqE+u1rRebGcTxOHzu875V65jgtujBIlUin+iQni8h
ZkHFnsl5rnw1wEWe0UFn9oehDDryjN8jzCiChrDeABXrvSTkGvyji7/fcRam
In1kg09NB/KNd+eLTbJqvyLP6HDCe47PtW6+d6Jgb9rO9rdDryQghEUvVjfX
3z+B/OLH+fYuok+6AYfvFR3tvokplH7AoU/UshO9rqIzgPod/3Qd+rRTiP/5
LJqBg4eh5htdFt/XtQLGM68or3AWDvvVqtPv+nwOm0D9jVcHzlnXUtGD/B/+
ZVvb2zmlf3s8ixGw1FP3GTEBIK/J1BplRCW2Adiv2fONuItCVT/ylIoPa7L7
fw0hf1i9Uc3CS2KE7/G4wH+4kPOQ0YJDHzlHoPr07qEvqP/xu6QtoKp3FHnB
4bvtQvJPBsFivufMqKIt/W73kv//O0FXnKrI2rltqL+udYiF6YuBbgA9YtHp
cP/AERaAnvR1J89u55I6AP2hDV3CO1y2D0B/GLPEMj5jH98HNkhhTnsE3x/f
+gz1/w2tq/Svrf3Tj5qq+bz/1ZZhAD3iePHCBBVKP+o/Pb1BTT80uwck8H1i
g35BO1v7G+pn3FiZmTlTZRR5xKHJ5ObM9G7kD+exFoksLekFsL90255fNhkT
7agfc6fTgSUG0+DxnoI9ulcym6nyG3nU3UIMufv1fC+WIoi9vCSmRJ34hfpZ
qzuK1cod6UYe9fL8rNdHQsb5n/cDMOu1yS+Jb0V+VKC6gtMU08M/36mYxW+/
eXdNelC/Y2Wxg1Klbb+Rh9x3bU2qZM835It2b/D+briwDafzfdXBPBe3BEcO
PovvS6JT6zxS2HX42KG/6z+kfpdV1r5XCqAf2hJ74kzA53bUb1T3yM0z592J
PI3fLzbbdU6BkH8MeMzvV+lhkGuYsOxPf1HT4yJVP8EADv3QiTilvqtKBf/a
Dz7I91Qa+Ikdn2qr+P0px8BoRVhZ3a885O2O9MzboPWzH3mjfekmX9xLGMgX
PcvxfTv2gIN8UefelcXp6p+QJ3wrN+zWGlYCIvieZlTnnakpkXds5XsqHQ9D
k7BNLL5PmYKZnnowQ+HwEPKexYa2xU+mD6F+oXtaZ6TOc2Qij7RMZq2e2ttS
5C8TY8ouFT/OQ/5yZFz++xbPYv54Lvb4gfODohl01P84QXlPXTKxzoT9duvV
de4syStCvkmASeu0vTKMQ39pZu5o+WF2EfKXTdzbd8L0vqF6gWMq3bq76tj8
9yPybbnWsbK3dOQpZWzH6qYF0QHs9+norLi+S+s9Dn3k8w3j/RlHS5GPfJBr
cHpikI58UY3V9p7bizmo/3H8WLDfUv9U5Oe0lxkIZ87tBOTnm+TnU2TfQfYa
5P2w5P1s5P2w5P1s5P125P0W5PyPvD+AnA+R53Py8zTy817yeoB8f4t8v5i8
viDP9+T9BOTnseT8guyRyPGC7InI8YPse8jxhOx7yPGF7HvI8YZ8/+2/4g/5
/tt/xSOyXyLHJ/L9IXK8InsEcrwi+xVy/CL7FXI8I/sTcnwj35/5r3hHvj/6
X/GOfH/yv+If+X7gf8VDcnwj+wxyvCN7CnL8I/sAcvwj778nx0Py/m1y/CPv
9yXHO/L+T3K8I+8/Ij9/JD/fIT/vI+fj0D9mhmzOrTd98qd/Mv8fPF/hGJ7P
cAz7d8MxjDdwHMWPd3AMz3c4ht8HHMPrE46hj4Rj2A8cjuH1Dcd/f99DaAz7
icMxPB/gGOYL/3z9OOn1Y6T3n0Rj2F8bjuH1B8fQ68IxjNdwDOtlwjFcb/7z
9X/GsD88HMP4/M+xKOn9/oxX8ePVPz/vn3EQ32v/8/XTSK8XI33eP+NAvrf+
5+unk14vTnq9OOn1EqTXS5BeL0n6/H/GwXz//M/X/xlb1/PzX/6/G6l/X19w
LNARXap0nIrGpWZ/X49wbOL/9/yIxvx8AI7PLfl7PoVjGD/Rz/n5BBxPrdFS
kFKjoTG8XuEY+ks4luVf/3AcyI+/cOzJj89wDOd7OJ7Bz0fgeAs/34Djs+4u
Tq0DTDR+yc9P4BjGKziG8R6Ood+E49v/my+H0fjv+Pjn+oTzKxzD+A3HsF/9
P1//5/qE9Qzg+O/r9c/1CX08+r749RDgGPp2OIbzKRzDfAeO4fPYf/5/EdL/
FyX9/M/1tZhf/+Cfv+/P9aPCr0/wz5+Lk37+53qA9TTgeAnf+8MxnP/h2Jef
D8PxK/58CsfQi8IxzEfg2OJ/8Y5Hiod/4iPMn+BYgp8f//P9/4zhfATHPfzn
fXD8f2HX+4Q=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{1427, 4262, 4260}}], 
               
               PolygonBox[{{1431, 4281, 4282, 712, 673}, {1432, 4283, 4284, 
                714, 675}}], 
               PolygonBox[{{1428, 4263, 4264, 650, 651, 652}}], 
               PolygonBox[{{1424, 4238, 4239, 974, 1330, 1154, 635}}], 
               
               PolygonBox[{{1445, 4311, 4312, 1168, 992, 863, 774, 715}, {
                1444, 4309, 4310, 1166, 990, 861, 772, 713}, {1458, 4228, 
                4229, 676, 629, 1169, 993, 864}, {1461, 4278, 4276, 708, 669, 
                1198, 1022, 893}}], 
               
               PolygonBox[{{1451, 4279, 4280, 670, 1199, 1023, 894, 805, 
                745}, {1446, 4265, 4266, 653, 1185, 1009, 880, 791, 732}, {
                1452, 4226, 4227, 674, 627, 1167, 991, 862, 773}}], 
               
               PolygonBox[{{1443, 4222, 4223, 623, 624, 1164, 988, 859, 770, 
                711}, {1430, 4220, 4221, 622, 1163, 987, 858, 769, 710, 
                671}, {709, 4218, 4219, 804, 744, 621, 1162, 986, 857, 768}, {
                1455, 4285, 4286, 775, 716, 677, 1201, 1025, 896, 807}}], 
               
               PolygonBox[{{1457, 4307, 4308, 693, 1214, 1038, 909, 820, 760, 
                1244, 1068, 939, 850}, {771, 4224, 4225, 672, 1200, 1024, 895,
                 806, 746, 625, 1165, 989, 860}}], 
               
               PolygonBox[{{1374, 4315, 4316, 1186, 1010, 881, 1293, 1117, 
                792, 1257, 1081, 1354, 952, 1319, 1143}}], 
               
               PolygonBox[{{1365, 4230, 4231, 747, 630, 1170, 994, 865, 776, 
                1246, 1070, 941, 717, 1217, 1041, 1339, 912, 1299, 1123}, {
                631, 4287, 4288, 678, 1202, 1026, 897, 808, 748, 1232, 1056, 
                927, 838, 1276, 1100, 971, 1328, 1152, 1380}}], 
               
               PolygonBox[{{1260, 4234, 4235, 1381, 633, 1173, 997, 868, 779, 
                720, 1220, 1044, 915, 826, 681, 1205, 1029, 900, 1295, 1119, 
                1364, 811}}], 
               
               PolygonBox[{{1342, 4236, 4237, 1356, 955, 1321, 1145, 751, 
                1235, 1059, 930, 841, 634, 1174, 998, 869, 780, 1249, 1073, 
                944, 1313, 1137, 721, 1221, 1045}}], 
               
               PolygonBox[{{1361, 4293, 4294, 916, 1302, 1126, 827, 1270, 
                1094, 965, 682, 1206, 1030, 901, 812, 1261, 1085, 956, 752, 
                1236, 1060, 931, 1308, 1132, 842, 1279, 1103}}], 
               
               PolygonBox[{{664, 4269, 4267, 702, 663, 1195, 1019, 890, 1460, 
                801, 741, 703, 1216, 1040, 911, 822, 1456, 762, 1245, 1069, 
                940, 851, 1285, 1109, 980, 1332, 1156, 1382}, {1153, 4291, 
                4292, 1366, 825, 1269, 1093, 964, 680, 1204, 1028, 899, 810, 
                1259, 1083, 954, 750, 1234, 1058, 929, 1307, 1131, 840, 1278, 
                1102, 1360, 973, 1329}}], 
               
               PolygonBox[{{1125, 4232, 4233, 1144, 1375, 749, 1233, 1057, 
                1345, 928, 1306, 1130, 839, 1277, 1101, 972, 632, 1172, 996, 
                867, 778, 1248, 1072, 943, 719, 1219, 1043, 1341, 914, 
                1301}}], 
               
               PolygonBox[{{953, 4289, 4290, 995, 1333, 866, 1286, 1110, 777, 
                1247, 1071, 942, 1312, 1136, 718, 1218, 1042, 1340, 913, 1300,
                 1124, 824, 1268, 1092, 1357, 963, 1324, 1148, 1377, 679, 
                1203, 1027, 1335, 898, 1294, 1118, 1363, 809, 1258, 1082, 
                1355}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{648, 4261, 4260, 649}, {666, 4270, 4271, 1429}, {
                647, 4258, 4259, 1426}}], 
               PolygonBox[{{1161, 4277, 4276, 767, 856, 985}}], 
               PolygonBox[{{836, 4305, 4306, 646, 692, 970, 1099, 1275}}], 
               
               PolygonBox[{{668, 4274, 4275, 1450, 743, 803, 892, 1021, 
                1197}, {615, 4212, 4213, 1439, 704, 763, 852, 981, 1157}}], 
               
               PolygonBox[{{1372, 4295, 4296, 1433, 683, 828, 917, 1046, 1222,
                 722}, {637, 4240, 4241, 1207, 684, 723, 782, 871, 1000, 
                1176}, {742, 4216, 4217, 1441, 707, 766, 855, 984, 1160, 
                619}}], 
               
               PolygonBox[{{665, 4214, 4215, 1440, 705, 764, 853, 982, 1158, 
                617, 616}}], 
               
               PolygonBox[{{1175, 4313, 4314, 1314, 945, 1349, 1074, 1250, 
                781, 1111, 1287, 870, 999}, {1159, 4272, 4273, 1454, 802, 891,
                 1020, 1196, 667, 706, 765, 854, 983}}], 
               
               PolygonBox[{{645, 4256, 4257, 1369, 1129, 1305, 925, 1344, 
                1054, 1230, 731, 790, 879, 1008, 1184}}], 
               
               PolygonBox[{{878, 4303, 4304, 1434, 691, 835, 924, 1053, 1229, 
                730, 951, 1080, 1256, 789, 1116, 1292}}], 
               
               PolygonBox[{{946, 4297, 4298, 1309, 933, 1346, 1062, 1238, 754,
                 958, 1087, 1263, 814, 903, 1032, 1208, 685, 829, 918, 1047, 
                1223, 724, 1139, 1315}, {1370, 4244, 4245, 686, 1378, 1149, 
                1325, 966, 1095, 1271, 830, 919, 1048, 1224, 725, 784, 873, 
                1002, 1178, 639, 975, 1104, 1280, 844}}], 
               PolygonBox[CompressedData["
1:eJwVzj8ohHEcx/FfnLgiZ5TJcAyXlEdiEd2gO0knA9sxycBmUSiSYqIIxSKD
jbK5rmwSi0SMLFL+pFi9nuHd5/35Pt/ft6d5cnZkpiKEkEAj8uQgFcIhPiul
vmJhWUZVIdyZjfIEL/ATZPRn/NmL9A3U6SWcmS3KdvtX5sOyB9vu72CAd/r+
igbfx2XSbJq/Y19fcmOIH6NVf8CPWVnv41/xfT4R3/B2jVfzTfe3EPEX1JuP
yRo7U/wNu/qCW4P8CGn9Ht9mJb2Xf6CNF2XK21XeLbv0G/dv8cR/vSmaz/OM
vLSXjf8VHXwdtfwCp3b79T006dd4NJuTLd6em+fkP2i5M/Y=
                "]], 
               
               PolygonBox[{{947, 4299, 4300, 935, 1347, 1064, 1240, 756, 960, 
                1089, 1265, 816, 905, 1034, 1210, 687, 967, 1096, 1272, 831, 
                920, 1049, 1225, 726, 1140, 1316}}], 
               
               PolygonBox[{{1066, 4252, 4253, 1274, 834, 1368, 1128, 1304, 
                923, 1052, 1228, 729, 950, 1079, 1255, 788, 877, 1006, 1182, 
                643, 978, 1107, 1283, 848, 1135, 1311, 937, 1348}}], 
               
               PolygonBox[{{688, 4250, 4251, 1254, 787, 1362, 1115, 1291, 876,
                 1005, 1181, 642, 977, 1106, 1282, 847, 936, 1065, 1241, 757, 
                1146, 1322, 961, 1090, 1266, 817, 1122, 1298, 906, 1338, 1035,
                 1211}}], 
               
               PolygonBox[{{1310, 4248, 4249, 1150, 1326, 968, 1358, 1097, 
                1273, 832, 1367, 1127, 1303, 921, 1343, 1050, 1226, 727, 1373,
                 1141, 1317, 948, 1352, 1077, 1253, 786, 1114, 1290, 875, 
                1004, 1180, 641, 976, 1105, 1281, 846, 1371, 1134}}], 
               PolygonBox[CompressedData["
1:eJwNy002gmEYBuAnZczUT6VFtARDE0uwAM4RYhMkMkET+lNGzgnhWIIVVMIO
EBm5Bte5v+e+3y+3trG6PhURCVZ4SUV0ZiPatKYjPoxLyYg9/riyn+iqtif5
Tla/y4SWvaJ7pOnNm8zoi/zStB/rzm0PckRaf+PekT80vDnS92joX+Wifpsx
dXtZd2a7l0OufS/Ytvim5s2h/o4B87oCX1zaSrpT/9zKPnP6TT65sB/oJuTd
Xe/25Yz+ma5+2V0l6/4H5D0yGQ==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1, 374, 264, 483, 179, 459, 350, 496, 116, 436, 327, 
               489, 241, 473, 364, 75, 416, 306, 221, 466}], 
              
              LineBox[{449, 340, 254, 51, 398, 288, 203, 140, 443, 334, 248, 
               98, 427, 318, 233, 170, 2, 375}], 
              LineBox[{99, 3, 376, 266, 181, 118, 77, 526}], 
              LineBox[{4, 509}], 
              LineBox[{5, 6, 510}], 
              LineBox[{7, 377, 267, 182, 119, 78}], 
              LineBox[{8, 378, 268, 183, 120, 79, 55, 401}], 
              LineBox[{291, 206, 143, 101, 9, 379, 269, 184, 121, 536}], 
              LineBox[{10, 380, 270, 185, 122, 81, 419, 309, 224, 161, 542}], 
              
              LineBox[{57, 403, 293, 208, 145, 444, 335, 249, 103, 428, 319, 
               234, 469, 360, 171, 453, 344, 258, 11, 381, 271, 186, 460, 351,
                123}], 
              
              LineBox[{470, 361, 172, 454, 345, 259, 12, 382, 272, 187, 124, 
               438, 329, 243, 83, 421, 311, 226, 163, 543}], 
              
              LineBox[{405, 295, 210, 147, 105, 430, 321, 235, 173, 13, 383, 
               273, 188, 125, 537}], 
              LineBox[{407, 297, 212, 149, 107, 15, 385, 275, 190, 544}], 
              LineBox[{108, 16, 386, 276, 191, 128, 87, 529}], 
              LineBox[{18, 19, 511}], 
              LineBox[{20, 21, 512}], 
              LineBox[{22, 23, 513}], 
              LineBox[{24, 25, 514}], 
              LineBox[{26, 27, 515}], 
              LineBox[{28, 29, 516}], 
              LineBox[{30, 31, 32, 517}], 
              LineBox[{33, 518}], 
              LineBox[{34, 35, 519}], 
              
              LineBox[{431, 322, 236, 174, 39, 391, 281, 196, 133, 439, 330, 
               244, 92, 424, 314}], 
              
              LineBox[{260, 481, 372, 507, 40, 392, 282, 484, 197, 461, 352, 
               497, 134, 440, 331, 491, 245, 475, 366, 503}], 
              LineBox[CompressedData["
1:eJwV0TlLXUEYBuBzBbfCKp1b0M5Er1dbtXNHm2uRwl0Ei4Ar/gbX/AHXUk0V
TZU0Wki8WgiBFC4XEQu1ECOIC6LgM8XD+34zHA4zUzIwkhyORVH0jRrlUq7R
wJI5zrFemhFFC3LbnORVH2VTr+dW/0FK7ySTMvOMLOCPfij7mdJ/yTYe9bQc
oVvfkLVcc2X+J4d4YN28K7+E/xHjnAleaLS/LCvDOTgx/5WD3LNo3pEd3PBm
PpNjPIc0b8kG/utH8iub+r7sIotP5llZyJ4+zW+9nSe9h+96XThHOBNNrJgT
nIa7ZZzPzFkrIhXui3x33SubydPL5bz9YvbDv+njg70WWUGcHHOlTJCrV4V3
9c1HDvQSa3Oyn1ZWrVeRDvdGkf0J+TPcJXfhPjgIb0M2F0yG96fa3jsjjEsU

               "]], 
              
              LineBox[{265, 180, 117, 76, 417, 307, 222, 159, 52, 399, 289, 
               204, 141, 539}], 
              LineBox[{53, 522}], 
              LineBox[{54, 400, 290, 205, 142, 100, 532}], 
              LineBox[{418, 308, 223, 160, 56, 402, 292, 207, 144, 102, 533}], 
              
              LineBox[{328, 490, 242, 474, 365, 502, 82, 420, 310, 487, 225, 
               467, 358, 500, 162, 450, 341, 493, 255, 479, 370, 505, 58, 404,
                294, 485, 209, 463, 354, 498, 146, 445, 336, 250, 477, 368, 
               104, 429, 320}], 
              
              LineBox[{84, 422, 312, 227, 164, 60, 406, 296, 211, 148, 106, 
               534}], 
              LineBox[{127, 86, 62, 408, 298, 213, 150, 540}], 
              LineBox[{63, 17}], 
              LineBox[{277, 192, 129, 88, 64, 523}], 
              LineBox[{388, 278, 193, 130, 89, 65, 524}], 
              
              LineBox[{390, 280, 195, 132, 91, 423, 313, 228, 165, 67, 410, 
               300, 215, 152}], 
              
              LineBox[{229, 166, 451, 342, 256, 68, 411, 301, 216, 464, 355, 
               153, 446, 337, 251, 111, 432, 323, 237, 471, 362, 175, 455, 
               346}], 
              LineBox[{384, 274, 189, 126, 85, 528}], 
              LineBox[{389, 279, 194, 131, 90, 530}], 
              LineBox[{409, 299, 214, 151, 109, 535}]}, 
             Annotation[#, "Charting`Private`Tag$504731#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[{615, 1157, 981, 852, 763, 704, 1439}], 
              LineBox[{665, 616, 617, 1158, 982, 853, 764, 705, 1440}], 
              LineBox[{742, 619, 1160, 984, 855, 766, 707, 1441}], 
              LineBox[{804, 744, 621, 1162, 986, 857, 768, 709}], 
              LineBox[{622, 1163, 987, 858, 769, 710, 671, 1430}], 
              LineBox[{623, 624, 1164, 988, 859, 770, 711, 1443}], 
              
              LineBox[{672, 1200, 1024, 895, 806, 746, 625, 1165, 989, 860, 
               771}], 
              LineBox[{674, 627, 1167, 991, 862, 773, 1452}], 
              LineBox[{676, 629, 1169, 993, 864, 1458}], 
              
              LineBox[{747, 630, 1170, 994, 865, 776, 1246, 1070, 941, 717, 
               1217, 1041, 1339, 912, 1299, 1123, 1365}], 
              LineBox[{1144, 1375, 749, 1233, 1057, 1345, 928, 1306, 1130, 
               839, 1277, 1101, 972, 632, 1172, 996, 867, 778, 1248, 1072, 
               943, 719, 1219, 1043, 1341, 914, 1301, 1125}], 
              
              LineBox[{1381, 633, 1173, 997, 868, 779, 720, 1220, 1044, 915, 
               826, 681, 1205, 1029, 900, 1295, 1119, 1364, 811, 1260}], 
              
              LineBox[{1356, 955, 1321, 1145, 751, 1235, 1059, 930, 841, 634, 
               1174, 998, 869, 780, 1249, 1073, 944, 1313, 1137, 721, 1221, 
               1045, 1342}], 
              LineBox[{974, 1330, 1154, 635, 1424}], 
              LineBox[{637, 1176, 1000, 871, 782, 723, 684, 1207}], 
              
              LineBox[{1031, 1336, 902, 1296, 1120, 813, 1262, 1086, 957, 753,
                1237, 1061, 932, 843, 638, 1177, 1001, 872, 1288, 1112, 783, 
               1251, 1075}], 
              
              LineBox[{1370, 844, 1280, 1104, 975, 639, 1178, 1002, 873, 784, 
               725, 1224, 1048, 919, 830, 1271, 1095, 966, 1325, 1149, 1378, 
               686}], 
              
              LineBox[{1337, 904, 1297, 1121, 815, 1264, 1088, 959, 755, 1239,
                1063, 934, 845, 640, 1179, 1003, 874, 1289, 1113, 785, 1252, 
               1076, 1351}], 
              
              LineBox[{1310, 1134, 1371, 846, 1281, 1105, 976, 641, 1180, 
               1004, 875, 1290, 1114, 786, 1253, 1077, 1352, 948, 1317, 1141, 
               1373, 727, 1226, 1050, 1343, 921, 1303, 1127, 1367, 832, 1273, 
               1097, 1358, 968, 1326, 1150}], 
              
              LineBox[{688, 1211, 1035, 1338, 906, 1298, 1122, 817, 1266, 
               1090, 961, 1322, 1146, 757, 1241, 1065, 936, 847, 1282, 1106, 
               977, 642, 1181, 1005, 876, 1291, 1115, 1362, 787, 1254}], 
              
              LineBox[{1066, 1348, 937, 1311, 1135, 848, 1283, 1107, 978, 643,
                1182, 1006, 877, 788, 1255, 1079, 950, 729, 1228, 1052, 923, 
               1304, 1128, 1368, 834, 1274}], 
              
              LineBox[{1098, 1359, 969, 1327, 1151, 690, 1213, 1037, 908, 819,
                759, 1243, 1067, 938, 849, 1284, 1108, 979, 1331, 1155, 644, 
               1183, 1007}], 
              
              LineBox[{645, 1184, 1008, 879, 790, 731, 1230, 1054, 1344, 925, 
               1305, 1129, 1369}], 
              LineBox[{647, 1426}], 
              LineBox[{648, 649, 4260, 1427}], 
              LineBox[{650, 651, 652, 1428}], 
              LineBox[{653, 1185, 1009, 880, 791, 732, 1446}], 
              LineBox[CompressedData["
1:eJwV0LkuxGEUhvFjmdq01jEXoMMduAHiBhRKEju12thJLI3dkEiIfbsDjXbs
rsA6o/H7F0/ec573fM2X7ept7ymLiG7cVUZksFoR0Ybj8ogbexUmkj0V0SKL
fA5r/Ie9D9UocCdYcjcp1/WffD9q8MCdYgobui9uALXY9+aRP8OyeVpuuvnW
DaIOT9yW7lzOJLP+hx/CIV8vn/kLrNhn5babX34YDXhJnO5SzmFHX+RHkMEr
d4VVN/NyV1/iR9GIt+SNLp+OuDYvIO/mTzeGI11Wvid/h1tdGjmuFQf6El/g
mrDHdSDFd9rvzc3mcXO3XHT7D7HjP+c=
               "]], 
              LineBox[{666, 1429}], 
              
              LineBox[{1159, 983, 854, 765, 706, 667, 1196, 1020, 891, 802, 
               1454}], 
              LineBox[{668, 1197, 1021, 892, 803, 743, 1450}], 
              
              LineBox[{1161, 985, 856, 767, 4276, 708, 669, 1198, 1022, 893, 
               1461}], 
              LineBox[{670, 1199, 1023, 894, 805, 745, 1451}], 
              LineBox[{712, 673, 1431}], 
              LineBox[{714, 675, 1432}], 
              LineBox[{775, 716, 677, 1201, 1025, 896, 807, 1455}], 
              
              LineBox[{678, 1202, 1026, 897, 808, 748, 1232, 1056, 927, 838, 
               1276, 1100, 971, 1328, 1152, 1380, 631}], 
              
              LineBox[{995, 1333, 866, 1286, 1110, 777, 1247, 1071, 942, 1312,
                1136, 718, 1218, 1042, 1340, 913, 1300, 1124, 824, 1268, 1092,
                1357, 963, 1324, 1148, 1377, 679, 1203, 1027, 1335, 898, 1294,
                1118, 1363, 809, 1258, 1082, 1355, 953}], 
              
              LineBox[{1366, 825, 1269, 1093, 964, 680, 1204, 1028, 899, 810, 
               1259, 1083, 954, 750, 1234, 1058, 929, 1307, 1131, 840, 1278, 
               1102, 1360, 973, 1329, 1153}], 
              
              LineBox[{916, 1302, 1126, 827, 1270, 1094, 965, 682, 1206, 1030,
                901, 812, 1261, 1085, 956, 752, 1236, 1060, 931, 1308, 1132, 
               842, 1279, 1103, 1361}], 
              LineBox[{1372, 722, 1222, 1046, 917, 828, 683, 1433}], 
              
              LineBox[{946, 1315, 1139, 724, 1223, 1047, 918, 829, 685, 1208, 
               1032, 903, 814, 1263, 1087, 958, 754, 1238, 1062, 1346, 933, 
               1309}], 
              
              LineBox[{947, 1316, 1140, 726, 1225, 1049, 920, 831, 1272, 1096,
                967, 687, 1210, 1034, 905, 816, 1265, 1089, 960, 756, 1240, 
               1064, 1347, 935}], 
              
              LineBox[{1078, 1353, 949, 1318, 1142, 728, 1227, 1051, 922, 833,
                689, 1212, 1036, 907, 818, 1267, 1091, 962, 1323, 1147, 1376, 
               758, 1242}], 
              
              LineBox[{878, 1292, 1116, 789, 1256, 1080, 951, 730, 1229, 1053,
                924, 835, 691, 1434}], 
              LineBox[{836, 1275, 1099, 970, 692, 646}], 
              
              LineBox[{693, 1214, 1038, 909, 820, 760, 1244, 1068, 939, 850, 
               1457}], 
              LineBox[{1166, 990, 861, 772, 713, 1444}], 
              LineBox[{1168, 992, 863, 774, 715, 1445}], 
              
              LineBox[{1175, 999, 870, 1287, 1111, 781, 1250, 1074, 1349, 945,
                1314}], 
              
              LineBox[{1186, 1010, 881, 1293, 1117, 792, 1257, 1081, 1354, 
               952, 1319, 1143, 1374}]}, 
             Annotation[#, "Charting`Private`Tag$504731#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1546, 1965, 1848, 2081, 1752, 2060, 1944, 2093, 1678, 
               2038, 1922, 2086, 1826, 2072, 1956, 1626, 2018, 1901, 1805, 
               2066}], 
              
              LineBox[{2050, 1934, 1838, 1596, 1995, 1878, 1782, 1708, 2044, 
               1928, 1832, 1655, 2029, 1913, 1817, 1743, 1547, 1966}], 
              LineBox[{1656, 1548, 1967, 1850, 1754, 1680, 1628, 2166}], 
              LineBox[{1549, 2151}], 
              LineBox[{1550, 1551, 2152}], 
              LineBox[{1552, 1553, 2153}], 
              LineBox[{1555, 1969, 1852, 1756, 1682, 1630, 2167}], 
              
              LineBox[{1600, 1997, 1880, 1784, 1710, 1657, 1556, 1970, 1853, 
               1757, 1683}], 
              
              LineBox[{1999, 1882, 1786, 1712, 1659, 2030, 1914, 1818, 1744, 
               1558, 1972, 1855, 1759, 1685, 2039}], 
              
              LineBox[{2084, 1819, 2069, 1953, 2095, 1745, 2055, 1939, 2091, 
               1843, 2078, 1962, 2100, 1559, 1973, 1856, 2082, 1760, 2061, 
               1945, 1686, 2040, 1924, 1828, 2073, 1957, 1634, 2022, 1905, 
               1809, 2067, 1951, 1735, 2052, 1936, 1840}], 
              
              LineBox[{2001, 1884, 1788, 1714, 2046, 1930, 1834, 1661, 2032, 
               1916, 1820, 1746, 1560, 1974, 1857, 1761, 2187}], 
              LineBox[{1662, 1561, 1975, 1858, 1762, 1688, 1636, 2168}], 
              LineBox[{1664, 1563, 1977, 1860, 1764, 1690, 1638, 2169}], 
              LineBox[{1564, 2154}], 
              LineBox[{1565, 1566, 2155}], 
              LineBox[{1567, 1568, 1978, 1861, 1765, 1691, 1639, 1609, 2164}], 
              
              LineBox[{1889, 1793, 1719, 1666, 1571, 1981, 1864, 1768, 1694, 
               2179}], 
              
              LineBox[{2008, 1891, 1795, 1721, 2047, 1931, 1835, 1668, 2033, 
               1917, 1821, 1747, 2056, 1940, 1844, 1573, 1983, 1866, 1770, 
               1696, 2041}], 
              
              LineBox[{1918, 2085, 1822, 2070, 1954, 2096, 1748, 2057, 1941, 
               2092, 1845, 2079, 1963, 1574, 1984, 1867, 1771, 2062, 1946, 
               1697, 2042, 1926, 1830, 1645, 2027, 1910, 1814, 1740, 2054}], 
              
              LineBox[{1842, 1615, 2010, 1893, 1797, 1723, 1670, 2035, 1919, 
               1823, 1749, 1575, 1985, 1868}], 
              LineBox[{1671, 1576, 1986, 1869, 1773, 1699, 1647, 2170}], 
              LineBox[{1578, 2156}], 
              LineBox[{1579, 1580, 2157}], 
              LineBox[{1581, 1582, 1988, 1871, 1775, 1701, 1649, 2171}], 
              LineBox[{1673, 1584, 1990, 1873, 1777, 1703, 1651, 2028, 1911}], 
              
              LineBox[{1846, 1585, 1991, 1874, 1778, 2063, 1947, 1704, 2043, 
               1927, 2087, 1831, 2074, 1958, 2097}], 
              
              LineBox[{1912, 1816, 1742, 1622, 2015, 1898, 1802, 2189, 1728, 
               1675, 1586, 1992, 1875, 1779, 1705, 1652, 1623, 2016, 1899, 
               1803, 1729, 1676, 2176, 1587, 1993, 1876, 1780, 1706, 1653, 
               1624, 1588, 1589, 2158, 1590, 1591, 2159, 1592, 1593, 2160, 
               1594, 1994, 1877, 1781, 2188, 1707, 1654, 1625, 2017, 1900, 
               1804, 1730, 2184, 1677, 2037, 1921, 1825, 1751, 2059, 1943, 
               1847, 2080, 1964, 2101, 1595}], 
              
              LineBox[{1849, 1753, 1679, 1627, 2019, 1902, 1806, 1732, 1597, 
               1996, 1879, 1783, 1709, 2180}], 
              LineBox[{1598, 2161}], 
              LineBox[{1629, 1599, 2162}], 
              LineBox[{1631, 1601, 1998, 1881, 1785, 1711, 1658, 2172}], 
              
              LineBox[{1827, 1633, 2021, 1904, 1808, 1734, 2051, 1935, 1839, 
               1603, 2000, 1883, 1787, 2064, 1948, 1713, 2045, 1929, 2088, 
               1833, 2075, 1959, 2098, 1660, 2031, 1915}], 
              
              LineBox[{1687, 1635, 2023, 1906, 1810, 1736, 1605, 2002, 1885, 
               1789, 1715, 2181}], 
              LineBox[{1606, 2003, 1886, 1790, 1716, 1663, 1562}], 
              
              LineBox[{1859, 1763, 1689, 1637, 1607, 2004, 1887, 1791, 1717, 
               2182}], 
              LineBox[{1608, 2163}], 
              LineBox[{1640, 1610, 2005, 1888, 1792, 1718, 1665, 2173}], 
              
              LineBox[{1642, 2024, 1907, 1811, 1737, 1612, 2007, 1890, 1794, 
               1720, 1667, 2174}], 
              
              LineBox[{1925, 1829, 1644, 2026, 1909, 1813, 2068, 1952, 1739, 
               2053, 1937, 2090, 1841, 2077, 1961, 1614, 2009, 1892, 2083, 
               1796, 2065, 1949, 2094, 1722, 2048, 1932, 2089, 1836, 2076, 
               1960, 2099, 1669, 2034}], 
              LineBox[{1772, 1698, 1646, 1616, 2011, 1894, 1798, 1724, 2183}], 
              LineBox[{1617, 1577}], 
              LineBox[{1870, 1774, 1700, 1648, 1618, 2165}], 
              
              LineBox[{1989, 1872, 1776, 1702, 1650, 1620, 2013, 1896, 1800, 
               1726}], 
              
              LineBox[{1815, 1741, 1621, 2014, 1897, 1801, 1727, 2049, 1933, 
               1837, 1674, 2036, 1920, 1824, 2071, 1955, 1750, 2058, 1942}], 
              
              LineBox[{1971, 1854, 1758, 1684, 1632, 2020, 1903, 1807, 1733, 
               2185}], 
              LineBox[{1980, 1863, 1767, 1693, 1641, 1611}], 
              
              LineBox[{1982, 1865, 1769, 1695, 1643, 2025, 1908, 1812, 1738, 
               2186}], 
              LineBox[{2012, 1895, 1799, 1725, 1672, 2175}], 
              LineBox[{1968, 1851, 1755, 1681, 2177}], 
              LineBox[{1979, 1862, 1766, 1692, 2178}]}, 
             Annotation[#, "Charting`Private`Tag$504731#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[{2272, 2894, 2704, 2551, 2437, 2362, 3182}], 
              LineBox[{2934, 2744, 2591, 2477, 2401, 2273, 2895}], 
              LineBox[{2402, 2274, 2896, 2706, 2553, 2439, 2364, 2970, 2780}], 
              
              LineBox[{2829, 2676, 2404, 2992, 2803, 2650, 3061, 2872, 2536, 
               3038, 2849, 3103, 2696, 3078, 2889, 2276, 2898, 2708, 3083, 
               2555, 3046, 2857, 3106, 2441, 3008, 2819, 3094, 2666, 3066, 
               2877, 3114, 2366, 2972, 2782, 3088}], 
              LineBox[{2482, 2406, 2278, 2900, 2710, 2557, 2443, 2368}], 
              LineBox[{2279, 2901, 2711, 2558, 2444, 2369, 2329, 3179}], 
              LineBox[{2280, 2281, 3172}], 
              LineBox[{2282, 2283, 3173}], 
              LineBox[{2284, 2285, 3174}], 
              LineBox[{2286, 2287, 3175}], 
              LineBox[{2288, 3176}], 
              
              LineBox[{2407, 2289, 2903, 2713, 2560, 2446, 2371, 2974, 2784, 
               2631, 3212}], 
              
              LineBox[{3071, 2882, 2409, 2995, 2806, 2653, 3062, 2873, 2539, 
               3039, 2850, 3104, 2697, 3079, 2890, 3121, 2291, 2905, 2715, 
               3084, 2562, 3047, 2858, 3107, 2448, 3010, 2821, 3095, 2668, 
               3067, 2878, 3115, 2373, 2976, 2786, 3089}], 
              
              LineBox[{2698, 2292, 2906, 2716, 2563, 2449, 2374, 2334, 2944, 
               2754, 3214}], 
              LineBox[{2601, 2487, 2411, 2293, 2907, 2717, 2564, 2450, 3192}], 
              LineBox[{2294, 3177}], 
              
              LineBox[{2755, 2602, 2488, 2412, 2297, 2910, 2720, 2567, 2453, 
               3194}], 
              
              LineBox[{2947, 2757, 2604, 2490, 2414, 2299, 2912, 2722, 2569, 
               2455, 3195}], 
              
              LineBox[{2808, 2655, 2541, 2300, 2913, 2723, 2570, 2456, 3011, 
               2822, 2669, 2381, 2979, 2789, 2636, 2522, 3033}], 
              
              LineBox[{2691, 2341, 2949, 2759, 2606, 3053, 2864, 2492, 3023, 
               2834, 3098, 2681, 3072, 2883, 2416, 2998, 2809, 3092, 2656, 
               3063, 2874, 3113, 2542, 3041, 2852, 3105, 2699, 3080, 2891, 
               3122, 2301, 2914, 2724}], 
              
              LineBox[{2999, 2810, 2657, 2543, 2302, 2915, 2725, 2572, 2458, 
               2383, 3184}], 
              
              LineBox[{2682, 2419, 3000, 2811, 2658, 2544, 2304, 2917, 2727, 
               2574, 2460, 3013, 2824, 2671, 2385, 2982, 2792, 3090, 2639, 
               3059, 2870}], 
              
              LineBox[{3035, 2846, 3101, 2693, 3076, 2887, 3119, 2345, 2953, 
               2763, 3086, 2610, 3054, 2865, 3109, 2496, 3025, 2836, 3099, 
               2683, 3073, 2884, 3118, 2420, 3001, 2812, 3093, 2659, 3064, 
               2875, 2545, 3042, 2853, 2700, 3081, 2892, 2305, 2918, 2728}], 
              
              LineBox[{2684, 2421, 3002, 2813, 2660, 2546, 2306, 2919, 2729, 
               2576, 2462, 2387, 2984, 2794, 2641}], 
              LineBox[{2423, 2308, 2921, 2731, 2578, 2464, 2389, 3185}], 
              LineBox[{2425, 2310, 2923, 2733, 2580, 2466, 2391, 3186}], 
              LineBox[CompressedData["
1:eJwV0UlIlHEYgPG/QZAz00ag2SJ1qS6CaWmWLQZBly4tZoslQcslTW05lFYm
VET7fm9VW2w9tFzVdnIqKzyU2iFKiyzoYv2+w8P7Ps/7zTcwM3FdxeLylBBC
Et9iISzBp9QQsnEsHsJrXoBDiRBatJ0Ygs1uN/Q0XOAlmIrjers2E618F7b7
bKpZ7nZTT8dFvgI5OKEntVlo4zWIoUJv1kbjUvQu71lp5uKk2xu9EE94LXa4
x80tbrf0DFzmq9CgfedL8ZnXeXaaeUp/q83GU74bCVTqt7UxOODZK9pqNOq9
2jJ08ek4rb3jc/CM78EDbYCvxy8+FFXaHT4WV3krj6OKl/Ime5+9GN18n+/N
M8/oHdpcPOftPA01fC9/aP9n34C/9kL0613mJBzWh/Fq+137OHy1Z6FBbzMT
yPB91W4D9qLozte4X7P/0Efx5WY/z8cU3uPeaZ+ATL7ffbC5kGeb+e5n7e/1
4Xye2cdz8MItaaajVh/kvsBepz8yAzbqv3m3fTKORO/hW+337OPRyNfiuvaT
l+ALr/e+GeY5/YNWhJfR74oR2Kbf1zJx0LNNWhkKcN7toz4fr6L/1L3efKyn
YJP+h/dEvwOO8phnFtlzzZFu/wGn4HKB
               "]], 
              
              LineBox[{2705, 2552, 2438, 2363, 2323, 2935, 2745, 2592, 2478, 
               3197}], 
              
              LineBox[{2627, 2513, 2324, 2936, 2746, 2593, 2479, 2403, 2991, 
               2802, 2649, 2535, 3205}], 
              
              LineBox[{2897, 2707, 2554, 2440, 3007, 2818, 2665, 2365, 2971, 
               2781, 2628, 2514, 3029, 2840, 2687, 2325, 2937, 2747, 2594, 
               2480, 3018}], 
              
              LineBox[{2629, 3056, 2867, 3110, 2515, 3030, 2841, 3100, 2688, 
               3075, 2886, 2326, 2938, 2748, 2595, 3051, 2862, 2481, 3019, 
               2830, 2677, 2405, 2993, 2804, 2651, 2537, 3206}], 
              
              LineBox[{2899, 2709, 2556, 2442, 2367, 2973, 2783, 2630, 2516, 
               2327, 2939, 2749, 2596, 3210}], 
              LineBox[{2328, 3178}], 
              
              LineBox[{2712, 2559, 2445, 2370, 2330, 2940, 2750, 2597, 2483, 
               3198}], 
              
              LineBox[{2517, 2331, 2941, 2751, 2598, 2484, 2408, 2994, 2805, 
               2652, 2538, 3207}], 
              
              LineBox[{2904, 2714, 2561, 2447, 3009, 2820, 2667, 2372, 2975, 
               2785, 2632, 2518, 3031, 2842, 2689, 2332, 2942, 2752, 2599, 
               3052, 2863, 2485, 3020}], 
              
              LineBox[{2633, 3057, 2868, 2519, 3032, 2843, 2690, 2333, 2943, 
               2753, 2600, 2486, 3021, 2832, 2679, 2410, 2996, 2807, 2654, 
               2540, 3040, 2851, 3218}], 
              LineBox[{2375, 2335, 3180}], 
              LineBox[{2376, 2336, 3181}], 
              LineBox[{2378, 2338, 2946, 2756, 2603, 2489, 2413, 3187}], 
              
              LineBox[{2380, 2978, 2788, 2635, 2521, 2340, 2948, 2758, 2605, 
               2491, 3022, 2833, 2680, 2415, 2997}], 
              
              LineBox[{2571, 3048, 2859, 3108, 2457, 3012, 2823, 3096, 2670, 
               3068, 2879, 2382, 2980, 2790, 2637, 3058, 2869, 2523, 3034, 
               2845, 2692, 2342, 2950, 2760, 2607, 2493, 3199}], 
              LineBox[{2343, 2951, 2761, 2608, 2494, 2418, 2303}], 
              
              LineBox[{2726, 2573, 2459, 2384, 2981, 2791, 2638, 2524, 2344, 
               2952, 2762, 2609, 2495, 3024, 2835}], 
              
              LineBox[{2575, 3049, 2860, 2461, 3014, 2825, 2672, 2386, 2983, 
               2793, 2640, 2526, 3036, 2847, 2694, 2346, 2954, 2764, 2611, 
               2497, 3026, 2837}], 
              LineBox[{2527, 2347, 2955, 2765, 2612, 2498, 2422, 2307}], 
              
              LineBox[{2920, 2730, 2577, 2463, 2388, 2985, 2795, 2642, 2528, 
               2348, 2956, 2766, 2613, 2499}], 
              
              LineBox[{2922, 2732, 2579, 2465, 2390, 2350, 2958, 2768, 2615, 
               2501}], 
              LineBox[{2351, 2959, 2769, 2616, 2502, 2426, 3189}], 
              LineBox[{2909, 2719, 2566, 2452, 2377, 2337}], 
              
              LineBox[{2911, 2721, 2568, 2454, 2379, 2977, 2787, 2634, 2520, 
               3201}], 
              LineBox[{2957, 2767, 2614, 2500, 2424, 3188}], 
              LineBox[{2908, 2718, 2565, 2451, 3193}], 
              
              LineBox[{2924, 2734, 2581, 2467, 3015, 2826, 2673, 3069, 2880, 
               3116}]}, Annotation[#, "Charting`Private`Tag$504731#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[{3300, 3841, 3682, 3553, 3456, 3388, 4095}], 
              LineBox[{3879, 3720, 3591, 3494, 3425, 3301, 3842}], 
              LineBox[{3426, 3302, 3843, 3684, 3555, 3458, 3390, 3910, 3751}], 
              
              LineBox[{3790, 3661, 3428, 3925, 3767, 3638, 3541, 3304, 3845, 
               3686, 3557, 3460, 3937, 3779, 3650, 3392, 3912, 3753, 3624}], 
              
              LineBox[{3994, 3836, 4030, 3305, 3846, 3687, 3999, 3558, 3969, 
               3811, 3461, 3938, 3780, 3651, 3393, 3913, 3754, 3625, 3528, 
               3957, 3799, 3670, 3355, 3884, 3725, 3596, 4124}], 
              
              LineBox[{3499, 3430, 3927, 3769, 3640, 3543, 3306, 3847, 3688, 
               3559, 3462, 3394}], 
              LineBox[{3307, 3848, 3689, 3560, 3463, 3395, 3357, 4090}], 
              LineBox[{3309, 4085}], 
              LineBox[{3310, 3311, 3850, 3691, 3562, 3465, 3397, 4097}], 
              LineBox[{3359, 3312, 3851, 3692, 3563, 3466, 4114}], 
              LineBox[{3361, 3314, 3853, 3694, 3565, 4121}], 
              LineBox[{3315, 4086}], 
              LineBox[{3316, 3317, 3854, 3695, 3566, 3469, 3401, 4099}], 
              
              LineBox[{3663, 3433, 3928, 3770, 3641, 3544, 3319, 3856, 3697, 
               3568, 3471, 3939, 3781, 3652, 3403, 3915, 3756, 4005}], 
              
              LineBox[{3676, 3995, 3837, 3320, 3857, 3698, 3569, 3472, 3940, 
               3782, 3653, 3404, 3916, 3757, 3628, 3531, 3366, 3889, 3730, 
               3601}], 
              LineBox[{3504, 3435, 3321, 3858, 3699, 3570, 3473, 4115}], 
              LineBox[{3322, 3859, 3700, 3571, 3474, 3406, 3368, 4094}], 
              LineBox[{3323, 3324, 4087}], 
              LineBox[{3325, 3326, 4088}], 
              LineBox[{3327, 3328, 4089}], 
              LineBox[{3329, 3330, 3860, 3701, 3572, 3475, 3407, 4100}], 
              
              LineBox[{3438, 3332, 3862, 3703, 3574, 3477, 3409, 3917, 3758, 
               3629, 4126}], 
              
              LineBox[{3532, 3371, 3893, 3734, 3605, 3508, 3439, 3930, 3772, 
               3643, 3546, 3333, 3863, 3704}], 
              
              LineBox[{3665, 3440, 3931, 3773, 3644, 3983, 3825, 3547, 3964, 
               3806, 4017, 3677, 3996, 3838, 4031, 3334, 3864, 3705, 4000, 
               3576, 3970, 3812, 4018, 3479, 3942, 3784, 4010, 3655, 3985, 
               3827, 4024, 3411, 3919, 3760, 4006, 3631}], 
              LineBox[{3442, 3336, 3866, 3707, 3578, 3481, 3413, 4101}], 
              LineBox[{3444, 3338, 3868, 3709, 3580, 3483, 3415, 4102}], 
              LineBox[CompressedData["
1:eJwV0UlsjHEcxvF/rRftlFaIpe10cdfFrovlgou2B4pOuSEhIbHrlNoODhIn
h5l2unCQOKAOti56Q0KNk6AkLg4OEieJ+vwP3zzP9/m97zTpmzx0vPVYQQgh
j4dFIazGu8IQarEpEUKGr8DK4hCe2U5hAcrc0vZ/egZ7UIfN9mx8Hs/5aRR5
t1CWu/XYZ/Qs9qIejfY+exle8DPxHVTYL9kC+nip3+mQDWhy67eX4yU/i4R7
QibdLtsL0M/3Yb7bGtnslrNXYJSfQzEq7b22WVjm2ZxtP9aixW3AnsQYPx/f
8cxCWeV2xT4bA/wAdtse8Vq850s9u05usQ/aKjHOL8TnbaO8EZ/5IlTbrvI5
GOSH+Wt9Bzp5K3+s12GKr8dW2xCvwgQ/wfN6Gy7yTj6mN+GW/lt+sXfr03oK
GX1Glthr9Gt6Ts6VvfKHHHI7or/R78ud8rb8I5/KlHubHOH3ZL28KX/JEfkh
fiv5iT+QHfKO/Bu/vdzgvk0Ox78lq+UN+VO+cjupf9Tb0c1TfFxvxlee5t/0
LpTyVfy6Pg/LfYdh21HbW74rPsfb+RO9AXm+Edttd3kNJvkS76Zll33C1oJp
3sO/6weR1UP8P2Ox239bWWuz
               "]], 
              
              LineBox[{3683, 3554, 3457, 3389, 3351, 3880, 3721, 3592, 3495, 
               4117}], 
              LineBox[{3622, 3525, 3352, 3881, 3722, 3593, 3496, 3427, 4104}], 
              
              LineBox[{3844, 3685, 3556, 3459, 3391, 3911, 3752, 3623, 3526, 
               3353, 3882, 3723, 3594, 3497, 3948}], 
              
              LineBox[{3977, 3819, 3527, 3956, 3798, 3669, 3990, 3832, 3354, 
               3883, 3724, 4002, 3595, 3972, 3814, 3498, 3949, 3791, 4012, 
               3662, 3988, 3830, 4027, 3429, 3926, 3768, 4008, 3639, 3981, 
               3823, 4022, 3542, 3962, 3804, 4015}], 
              LineBox[{3356, 3885, 3726, 3597, 3500, 3431, 4105}], 
              LineBox[{3396, 3358, 4091}], 
              LineBox[{3398, 3360, 4092}], 
              LineBox[{3468, 3400, 3362, 4093}], 
              LineBox[{3363, 3886, 3727, 3598, 3501, 3432, 4106}], 
              
              LineBox[{3855, 3696, 3567, 3470, 3402, 3914, 3755, 3626, 3529, 
               3364, 3887, 3728, 3599, 3502, 3950}], 
              
              LineBox[{3627, 3978, 3820, 3530, 3958, 3800, 3671, 3991, 3833, 
               3365, 3888, 3729, 4003, 3600, 3973, 3815, 4019, 3503, 3951, 
               3793, 4013, 3664, 3989, 3831, 4028, 3434, 3929, 3771, 4009, 
               3642, 3982, 3824, 4023, 3545, 3963, 3805, 4016}], 
              LineBox[{3405, 3367, 3890, 3731, 3602, 3505, 3436, 4107}], 
              LineBox[{3369, 3891, 3732, 3603, 3506, 3437, 3331}], 
              
              LineBox[{3702, 3573, 3476, 3408, 3370, 3892, 3733, 3604, 3507, 
               4118}], 
              
              LineBox[{3575, 3478, 3941, 3783, 3654, 3410, 3918, 3759, 3630, 
               3533, 3959, 3801, 3672, 3372, 3894, 3735, 3606, 3974, 3816, 
               3509, 3952, 3794}], 
              
              LineBox[{4020, 3534, 3960, 3802, 3673, 3992, 3834, 3373, 3895, 
               3736, 3607, 3975, 3817, 3510, 3953, 3795, 3666, 3441, 3932, 
               3774, 3645, 3548, 3965, 3807, 3678, 3335}], 
              
              LineBox[{3865, 3706, 3577, 3480, 3943, 3785, 3656, 3412, 3920, 
               3761, 3632, 3535, 3374, 3896, 3737, 3608, 3511}], 
              
              LineBox[{3867, 3708, 3579, 3482, 3414, 3376, 3898, 3739, 3610, 
               3513}], 
              LineBox[{3377, 3899, 3740, 3611, 3514, 3445, 4109}], 
              LineBox[{3852, 3693, 3564, 3467, 3399, 4098}], 
              LineBox[{3897, 3738, 3609, 3512, 3443, 4108}], 
              LineBox[{3849, 3690, 3561, 3464, 4113}], 
              
              LineBox[{3869, 3710, 3581, 3484, 3944, 3786, 3657, 3986, 3828, 
               4025}]}, Annotation[#, "Charting`Private`Tag$504731#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{548, 1383, 547}], 
             LineBox[{550, 1384, 549}], 
             LineBox[{551, 1385, 437}], 
             LineBox[{552, 1386, 110}], 
             LineBox[{554, 1387, 553}], 
             LineBox[{357, 1388, 158}], 
             LineBox[{556, 1389, 555}], 
             LineBox[{557, 1390, 387}], 
             LineBox[{559, 1391, 558}], 
             LineBox[{560, 1392, 495}], 
             LineBox[{562, 1393, 561}], 
             LineBox[{564, 1394, 563}], 
             LineBox[{566, 1395, 565}], 
             LineBox[{568, 1396, 567}], 
             LineBox[{570, 1397, 569}], 
             LineBox[{572, 1398, 571}], 
             LineBox[{574, 1399, 573}], 
             LineBox[{576, 1400, 575}], 
             LineBox[{578, 1401, 577}], 
             LineBox[{580, 1402, 579}], 
             LineBox[{581, 1403, 36}], 
             LineBox[{583, 1404, 582}], 
             LineBox[{585, 1405, 584}], 
             LineBox[{586, 1406, 37}], 
             LineBox[{588, 1407, 587}], 
             LineBox[{589, 1408, 527}], 
             LineBox[{590, 1409, 61}], 
             LineBox[{592, 1410, 591}], 
             LineBox[{593, 1411, 66}], 
             LineBox[{595, 1412, 594}], 
             LineBox[{597, 1413, 596}], 
             LineBox[{598, 1414, 14}], 
             LineBox[{599, 1415, 38}], 
             LineBox[{600, 1416, 80}], 
             LineBox[{602, 1417, 601}], 
             LineBox[{604, 1418, 603}], 
             LineBox[{606, 1419, 605}], 
             LineBox[{608, 1420, 607}], 
             LineBox[{609, 1421, 59}], 
             LineBox[{611, 1422, 610}], 
             LineBox[{613, 614, 612}], 
             LineBox[{1476, 2102, 1475}], 
             LineBox[{1478, 2103, 1477}], 
             LineBox[{1480, 2104, 1479}], 
             LineBox[{1481, 2105, 823}], 
             LineBox[{1483, 2106, 1482}], 
             LineBox[{1484, 2107, 1350}], 
             LineBox[{1209, 2108, 1033}], 
             LineBox[{1486, 2109, 1485}], 
             LineBox[{1488, 2110, 1487}], 
             LineBox[{1489, 2111, 1133}], 
             LineBox[{1423, 2112, 1171}], 
             LineBox[{1490, 636}], 
             LineBox[{1491, 2113, 1425}], 
             LineBox[{1493, 2114, 1492}], 
             LineBox[{1495, 2115, 1494}], 
             LineBox[{1497, 2116, 1496}], 
             LineBox[{1498, 2117, 618}], 
             LineBox[{1500, 2118, 1499}], 
             LineBox[{1501, 2119, 626}], 
             LineBox[{1502, 2120, 628}], 
             LineBox[{1504, 2121, 1503}], 
             LineBox[{1506, 2122, 1505}], 
             LineBox[{1508, 2123, 1507}], 
             LineBox[{1510, 2124, 1509}], 
             LineBox[{1512, 2125, 1511}], 
             LineBox[{1513, 2126, 1442}], 
             LineBox[{1515, 2127, 1514}], 
             LineBox[{1517, 2128, 1516}], 
             LineBox[{1519, 2129, 1518}], 
             LineBox[{1521, 2130, 1520}], 
             LineBox[{1522, 2131, 620}], 
             LineBox[{1524, 2132, 1523}], 
             LineBox[{1526, 2133, 1525}], 
             LineBox[{1528, 2134, 1527}], 
             LineBox[{1530, 2135, 1529}], 
             LineBox[{1531, 2136, 654}], 
             LineBox[{1533, 2137, 1532}], 
             LineBox[{1535, 2138, 1534}], 
             LineBox[{1463, 2139, 1320}], 
             LineBox[{1464, 2140, 1334}], 
             LineBox[{1536, 2141, 1465}], 
             LineBox[{1466, 2142, 1379}], 
             LineBox[{1537, 2143, 1467}], 
             LineBox[{1538, 2144, 1468}], 
             LineBox[{1469, 2145, 1084}], 
             LineBox[{1539, 2146, 1470}], 
             LineBox[{1471, 2147, 1138}], 
             LineBox[{1540, 2148, 1472}], 
             LineBox[{1541, 2149, 1473}], 
             LineBox[{1542, 2150, 1474}], 
             LineBox[{1544, 1545, 1543}], 
             LineBox[{2191, 3124, 2190}], 
             LineBox[{2192, 3125, 1987}], 
             LineBox[{2194, 3126, 2193}], 
             LineBox[{2196, 3127, 2195}], 
             LineBox[{2197, 3128, 1604}], 
             LineBox[{2199, 3129, 2198}], 
             LineBox[{2201, 3130, 2200}], 
             LineBox[{2203, 3131, 2202}], 
             LineBox[{2204, 3132, 1923}], 
             LineBox[{2205, 3133, 1938}], 
             LineBox[{1950, 3134, 1731}], 
             LineBox[{2207, 3135, 2206}], 
             LineBox[{2208, 3136, 1976}], 
             LineBox[{2209, 3137, 2006}], 
             LineBox[{2211, 3138, 2210}], 
             LineBox[{2213, 3139, 2212}], 
             LineBox[{2215, 3140, 2214}], 
             LineBox[{2217, 3141, 2216}], 
             LineBox[{2218, 3142, 1554}], 
             LineBox[{2220, 3143, 2219}], 
             LineBox[{2222, 3144, 2221}], 
             LineBox[{2224, 3145, 2223}], 
             LineBox[{2226, 3146, 2225}], 
             LineBox[{2228, 3147, 2227}], 
             LineBox[{2230, 3148, 2229}], 
             LineBox[{2232, 3149, 2231}], 
             LineBox[{2233, 3150, 1569}], 
             LineBox[{2235, 3151, 2234}], 
             LineBox[{2237, 3152, 2236}], 
             LineBox[{2239, 3153, 2238}], 
             LineBox[{2241, 3154, 2240}], 
             LineBox[{2243, 3155, 2242}], 
             LineBox[{2245, 3156, 2244}], 
             LineBox[{2246, 3157, 1619}], 
             LineBox[{2247, 3158, 1557}], 
             LineBox[{2248, 3159, 1570}], 
             LineBox[{2249, 3160, 1572}], 
             LineBox[{2250, 3161, 1583}], 
             LineBox[{2252, 3162, 2251}], 
             LineBox[{2254, 3163, 2253}], 
             LineBox[{2256, 3164, 2255}], 
             LineBox[{2258, 3165, 2257}], 
             LineBox[{2260, 3166, 2259}], 
             LineBox[{2262, 3167, 2261}], 
             LineBox[{2264, 3168, 2263}], 
             LineBox[{2265, 3169, 1602}], 
             LineBox[{2266, 3170, 1613}], 
             LineBox[{2268, 3171, 2267}], 
             LineBox[{2270, 2271, 2269}], 
             LineBox[{3220, 4033, 3219}], 
             LineBox[{3221, 4034, 2916}], 
             LineBox[{3223, 4035, 3222}], 
             LineBox[{3225, 4036, 3224}], 
             LineBox[{3227, 4037, 3226}], 
             LineBox[{3228, 4038, 3085}], 
             LineBox[{3230, 4039, 3229}], 
             LineBox[{2831, 4040, 2678}], 
             LineBox[{3231, 4041, 2844}], 
             LineBox[{3233, 4042, 3232}], 
             LineBox[{3234, 4043, 2945}], 
             LineBox[{3236, 4044, 3235}], 
             LineBox[{3238, 4045, 3237}], 
             LineBox[{3240, 4046, 3239}], 
             LineBox[{3242, 4047, 3241}], 
             LineBox[{3111, 4048, 2525}], 
             LineBox[{3244, 4049, 3243}], 
             LineBox[{3246, 4050, 3245}], 
             LineBox[{3248, 4051, 3247}], 
             LineBox[{3250, 4052, 3249}], 
             LineBox[{3251, 4053, 2902}], 
             LineBox[{3252, 4054, 2295}], 
             LineBox[{3254, 4055, 3253}], 
             LineBox[{3256, 4056, 3255}], 
             LineBox[{3258, 4057, 3257}], 
             LineBox[{3259, 4058, 2296}], 
             LineBox[{3260, 4059, 2322}], 
             LineBox[{3261, 4060, 3183}], 
             LineBox[{3263, 4061, 3262}], 
             LineBox[{3264, 4062, 2349}], 
             LineBox[{3266, 4063, 3265}], 
             LineBox[{3267, 4064, 2298}], 
             LineBox[{3268, 4065, 2309}], 
             LineBox[{3269, 4066, 2311}], 
             LineBox[{3271, 4067, 3270}], 
             LineBox[{3273, 4068, 3272}], 
             LineBox[{3275, 4069, 3274}], 
             LineBox[{3277, 4070, 3276}], 
             LineBox[{3279, 4071, 3278}], 
             LineBox[{3281, 4072, 3280}], 
             LineBox[{3282, 4073, 2417}], 
             LineBox[{3283, 4074, 2339}], 
             LineBox[{3284, 4075, 2275}], 
             LineBox[{3285, 4076, 2277}], 
             LineBox[{3286, 4077, 2290}], 
             LineBox[{3288, 4078, 3287}], 
             LineBox[{3290, 4079, 3289}], 
             LineBox[{3291, 4080, 3213}], 
             LineBox[{3293, 4081, 3292}], 
             LineBox[{3294, 4082, 3215}], 
             LineBox[{3295, 4083, 3216}], 
             LineBox[{3296, 4084, 3217}], 
             LineBox[{3298, 3299, 3297}], 
             LineBox[{4129, 4128}], 
             LineBox[{4130, 3861}], 
             LineBox[{4132, 4131}], 
             LineBox[{4134, 4133}], 
             LineBox[{4136, 4135}], 
             LineBox[{4138, 4137}], 
             LineBox[{4140, 4139}], 
             LineBox[{4141, 3675}], 
             LineBox[{4143, 4142}], 
             LineBox[{4144, 3792}], 
             LineBox[{4146, 4145}], 
             LineBox[{4148, 4147}], 
             LineBox[{3979, 3821}], 
             LineBox[{4150, 4149}], 
             LineBox[{4152, 4151}], 
             LineBox[{4154, 4153}], 
             LineBox[{4156, 4155}], 
             LineBox[{4158, 4157}], 
             LineBox[{4160, 4159}], 
             LineBox[{4162, 4161}], 
             LineBox[{4163, 3308}], 
             LineBox[{4165, 4164}], 
             LineBox[{4166, 3313}], 
             LineBox[{4168, 4167}], 
             LineBox[{4170, 4169}], 
             LineBox[{4171, 3350}], 
             LineBox[{4172, 4096}], 
             LineBox[{4174, 4173}], 
             LineBox[{4176, 4175}], 
             LineBox[{4178, 4177}], 
             LineBox[{4180, 4179}], 
             LineBox[{4181, 3375}], 
             LineBox[{4183, 4182}], 
             LineBox[{4184, 3303}], 
             LineBox[{4186, 4185}], 
             LineBox[{4187, 3318}], 
             LineBox[{4189, 4188}], 
             LineBox[{4190, 3337}], 
             LineBox[{4191, 3339}], 
             LineBox[{4193, 4192}], 
             LineBox[{4195, 4194}], 
             LineBox[{4197, 4196}], 
             LineBox[{4199, 4198}], 
             LineBox[{4201, 4200}], 
             LineBox[{4203, 4202}], 
             LineBox[{4205, 4204}], 
             LineBox[{4207, 4206}], 
             LineBox[{4208, 4127}], 
             LineBox[{4210, 4211, 4209}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution with discrete integrator\"", 
           TraditionalForm], PlotRange -> {{0., 6.24999987244898}, {-4., 4.}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.86735298013033*^9, 3.867352984957781*^9}, 
   3.8673531272351046`*^9, {3.8673532437467012`*^9, 3.8673532685517373`*^9}, {
   3.8673534066334085`*^9, 3.867353425221441*^9}, 3.8673536594832354`*^9, 
   3.8673538183512325`*^9, 3.8673538877569513`*^9, {3.867353932911455*^9, 
   3.867353991326702*^9}, 3.867354179894165*^9, 3.867355340868453*^9, {
   3.8674238449863443`*^9, 3.867423958965357*^9}, {3.8674240039637537`*^9, 
   3.8674241261750956`*^9}, 3.8674241604259806`*^9, {3.8674242527170315`*^9, 
   3.867424282888241*^9}, {3.8674243572711034`*^9, 3.867424371040635*^9}, {
   3.8674244206485367`*^9, 3.867424474386098*^9}, {3.867424599909365*^9, 
   3.867424694848556*^9}, {3.8674247271530733`*^9, 3.867424893525084*^9}, 
   3.8674251144583898`*^9, {3.8674252414761715`*^9, 3.867425265923238*^9}, {
   3.8674253806120205`*^9, 3.8674254136443014`*^9}, {3.8674259372044015`*^9, 
   3.867426016648621*^9}, {3.867426049400993*^9, 3.86742612802148*^9}, {
   3.867426188139971*^9, 3.867426293774691*^9}, 3.867426361270788*^9, 
   3.8674273334513073`*^9, 3.8674274865426283`*^9, {3.8674278598844757`*^9, 
   3.86742786957833*^9}, 3.867428183505458*^9, 3.867428241254718*^9, 
   3.8674283135562553`*^9, 3.8674283854689193`*^9, 3.867428427740202*^9},
 CellLabel->
  "Out[2685]=",ExpressionUUID->"6015ffff-e80a-49cc-8fb9-21ade467c487"]
}, Open  ]],

Cell["Compare the 2 Gain matrices", "Text",
 CellChangeTimes->{{3.867353150179739*^9, 3.8673531557459555`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"161ab72d-089e-466b-8b54-c632aa590061"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"K1", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"K2", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Gains from backward integration\>\"", ",", 
        "\"\<Gains from discrete integrator\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<x Gain\>\""}], ",", 
     RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"K1", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"K2", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Gains from backward integration\>\"", ",", 
        "\"\<Gains from discrete integrator\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<xdot Gain\>\""}], ",", 
     RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"K1", "[", "t", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"K2", "[", "t", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Gains from backward integration\>\"", ",", 
        "\"\<Gains from discrete integrator\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<\[Theta] Gain\>\""}], ",", 
     RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"K1", "[", "t", "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"K2", "[", "t", "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Gains from backward integration\>\"", ",", 
        "\"\<Gains from discrete integrator\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<\[Theta]dot Gain\>\""}], ",", 
     RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p1", ",", "p2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p3", ",", "p4"}], "}"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8673542510053368`*^9, 3.8673542802409515`*^9}},
 CellLabel->
  "In[1162]:=",ExpressionUUID->"325fbe3d-702a-4f42-b46e-6cc5c90b3742"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
v9naFElK5fOHV7a2iMi1USJ34uL+s/8DazAhvw==
              "]]}, Annotation[#, "Charting`Private`Tag$264116#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
/H9oOf3M
              "]]}, 
            Annotation[#, "Charting`Private`Tag$264116#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"x Gain\"", TraditionalForm], PlotRange -> {All, All}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Gains from backward integration\"", 
           "\"Gains from discrete integrator\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             
             LineBox[{{1.0204081632653061`*^-7, 3.2036722441481444`}, {
              0.0015335896027981336`, 3.2024737026959773`}, {
              0.0030670771647799406`, 3.201257253211228}, {
              0.006134052288743555, 3.1987705224653427`}, {
              0.012268002536670784`, 3.193581017016866}, {0.02453590303252524,
               3.1823326876202938`}, {0.026069390594507046`, 
              3.18084479725992}, {0.027602878156488854`, 
              3.1793386867341766`}, {0.03066985328045247, 
              3.1762717836022025`}, {0.0368038035283797, 
              3.1699191332915966`}, {0.04007227891156431, 3.16641491090655}}], 
             
             LineBox[{{0.04326105442176839, 3.1629162378454083`}, {
              0.05213867914819777, 3.152761040778725}, {0.055205654272161384`,
               3.1491112853284866`}, {0.06133960452008862, 
              3.1415948280982846`}, {0.07360750501594307, 
              3.1256991821371214`}, {0.09814330600765199, 
              3.0905232213966016`}, {0.09980578224858389, 
              3.0879802370413154`}, {0.10146825848951577`, 
              3.0854173819628823`}, {0.10479321097137956`, 
              3.080232424609366}, {0.11144311593510714`, 3.069628119070984}, {
              0.12340561224489757`, 3.0497821342152482`}}], 
             
             LineBox[{{0.12659438775510165`, 3.0443285483304265`}, {
              0.20454178542729323`, 2.892304327008044}, {0.2060940921839099, 
              2.888966057350488}, {0.20673894557823094`, 2.887576392694176}}], 
             
             LineBox[{{0.37659438775510184`, 2.4969100651164347`}, {
              0.40293908943338685`, 2.439011205876259}, {0.4045899347723935, 
              2.4354666267905785`}, {0.4078916254504068, 2.428409884613963}, {
              0.4144950068064334, 2.414430114419593}, {0.4277017695184866, 
              2.387036844480761}, {0.4541152949425929, 2.3347492643188605`}, {
              0.45576614028159956`, 2.3316005254278735`}, {0.4567389455782313,
               2.329751924267754}}], 
             
             LineBox[{{0.45992772108843544`, 2.323728426514492}, {
              0.4673220576546461, 2.309976897158922}, {0.4805288203666992, 
              2.2861910603933033`}, {0.5069423457908055, 
              2.2417640164260817`}, {0.508483021645497, 2.239307356943188}, {
              0.5100236975001884, 2.2368658684401}, {0.5131050492095712, 
              2.2320286081764813`}, {0.5192677526283369, 2.2225383500418}, {
              0.5315931594658684, 2.2043051044752318`}, {0.5331338353205599, 
              2.2020967786269914`}, {0.5346745111752513, 
              2.1999043154453446`}, {0.5377558628846342, 
              2.1955671181160117`}, {0.5400722789115644, 
              2.1923486552181863`}}], 
             LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAttK9AWVi4T+cBIVI+oABQMyYJynA
zOE/8GCsjP1dAUCKtDQxX9nhPzi78sL+WQFASNBBOf7l4T80s/SECFYBQMQH
XEk8/+E/KKt3tjVOAUC8dpBpuDHiP8TSMxT3PgFArVT5qbCW4j8gxfx4FyIB
QGxwBrJPo+I//AIdZKIeAUAqjBO67q/iP/SXyvQ1GwFApsMtyizJ4j+c1PEI
dxQBQJ4yYuqo++I/bLeVCGEHAUCOEMsqoWDjP5wkQXDU7gBAuTcdtU5u4z/o
n0miq+sAQORebz/8e+M/SB1p9ozoAEA7rRNUV5fjP2gOov5t4gBA6ElcfQ3O
4z+IizNfqdYAQBRxrge72+M/SGD2cNHTAEA/mACSaOnjPyDrBpQD0QBAm4KX
U/Dy4z/8xAtXFc8AQBnLkNs=
              "]], 
             LineBox[CompressedData["
1:eJwV0mtIk2EUB/BH5wUsU5xk2SANaSusDEvRsvMSapfN0mmKEV5Wkemms+wy
BRPxElQ2a+8omy5FwsBLqShbpSVW5IUUTc1yluWeZ3ihTDJLotOHw+EH58Ph
/I+vIkt+2p4Q4o/1v7tKhAnmdis0h7p3h50nnMu9z6rs91YYriw7I8smXPPx
TNGk1QrkQ7A7ryacYLxUY7ajoB8YTIMswtXf9ZRI3CiUQZFTdSbh4hKrR3gR
hYoLs19c0LVj5sDsYArf/jaFLCkJJ7tzYMoSTiEpYNCoQS8mDGtlcgrjWWJf
B7TBKxXMyRT8zcpWfQbhIkbn5sQqCi5Re6N3ouf1uQY+l4LVy39mKJ1w+nhn
qeAqhcPl5rx89L61umU1TyFaHfsrAG1951NnqaFAYhMTZs4SroxviJc9orAi
XnezAR10LNTR/IzCxYx+/hLa4vm6RdxLwbD4MPUQunQ4VsGPUZgSTrJN6ADd
J3eBlULKWLqPA3osVtWp/kFBxhfazaURrkD4W2UhDBx25M19REuGSkSyNQyG
SzLW96EHbgl7TRsYVDg/6OlCX5bf14i3MBgITl56jvbx2CbhgxikRbjqX6Hf
DJpG7MMZ9CVsrRxCnyuPLFbHMJh9vEvA0N4xQ4GWJAZOLxo6BLhPl3vKlFTJ
wGNi5uVmdPrArNakYRAn3u4Wg/bQakBcykDUaLheiDYfdZrX6Ri0SVPDnqAV
brcN9jUMFMYQ4R/0qrcbpeomnPebFuzHe7aW1S9PPGXQqJE4atEnjoTUSXsY
dBf1r55G1/fLHcXTDHQnrzjVYl5xNyZbdAsMInP2fHXFfFdkSoU9scGphXZj
Pjqqr7hzwtsGbQXa0hwV4X5e88iUSmxQM9hjXEZXSY0i024bVEUVqorxn76P
ztZFHLRBh5+pIAb/7x8mHjwB
              "]], 
             LineBox[CompressedData["
1:eJwBcQGO/iFib1JlAgAAABYAAAACAAAAt9K9AWVi6T+yck1FhnAAQD5K0tZv
a+k/8Gag7PZwAECPyeszS4bpP+gGLtpWcgBAMMge7gG86T+IDuVhY3UAQNiH
q5xvyek/GASnPjZ2AECARzhL3dbpP6o311APdwBA0MZRqLjx6T/8ESXr03gA
QHHFhGJvJ+o/kDGRyaV8AEAe5EYG9jPqP5atuYWXfQBAywIJqnxA6j+iHutc
jn4AQCVAjfGJWeo/mFn2N4uAAEDZupWApIvqP2xi96LAhABAQbCmntnv6j8Y
CNlmEo4AQO7OaEJg/Oo/iiKbkVGPAECb7Srm5gjrP3DxkESVkABA9SqvLfQh
6z/wuqAdKpMAQKmlt7wOVOs/oAaul4iYAEARm8jaQ7jrPxZWx4YQpABAvrmK
fsrE6z+iQUfSk6UAQGvYTCJR0es/XDv2DhunAEDFFdFpXurrP3yewDU1qgBA
oIKXU/Dy6z9USLZpSKsAQCkdqYU=
              "]], 
             
             LineBox[{{0.8765943877551023, 2.0852550690330682`}, {
              0.8907080123500998, 2.092791578764146}, {0.9151727315943586, 
              2.1071237529757987`}, {0.916830765226075, 2.108147411725942}, {
              0.9184887988577912, 2.1091771969511663`}, {0.9218048661212237, 
              2.111254772604809}, {0.9284370006480889, 2.115479345238872}, {
              0.941701269701819, 2.1241854026547715`}, {0.9567389455782307, 
              2.1344192189802493`}}], 
             
             LineBox[{{0.9599277210884347, 2.1366327860979384`}, {
              1.0212868840241998`, 2.1808347242745327`}, {1.0228347481716007`,
               2.181961734664105}, {1.0243826123190019`, 2.183089055866435}, {
              1.0274783406138042`, 2.1853443531488432`}, {1.0336697972034083`,
               2.1898556111799765`}, {1.0400722789115646`, 
              2.1945176176151717`}}], 
             
             LineBox[{{1.0432610544217689`, 2.1968369119619107`}, {
              1.0708185367410334`, 2.216710151609485}, {1.0723664008884346`, 
              2.217812838231951}, {1.0739142650358355`, 
              2.2189136281636594`}, {1.0770099933306376`, 
              2.2211092365753187`}, {1.0832014499202418`, 
              2.2254746075759195`}, {1.0955843630994502`, 
              2.234086429300376}, {1.120350189457867, 2.2507101676002383`}, {
              1.1218676035087078`, 2.2516978813613067`}, {1.1233850175595488`,
               2.2526816343845333`}, {1.1234056122448979`, 
              2.2526949585507676`}}], 
             LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAABJSJK91b8z+6I3B8i2YCQITpvqF6
gfM/4ndpyDluAkAJAJ0COYjzP8T6YMiJbwJAEi1ZxLWV8z8mm4hTGnICQCWH
0UevsPM/UNqSTfx2AkCqna+obbfzPxA9t2EneAJALrSNCSy+8z/efbUATXkC
QDjhScuoy/M/0g+ZsId7AkBKO8JOoubzP/RIv5G5fwJAzlGgr2Dt8z8yI/G1
t4ACQFNofhAf9PM/bNZ2B7CBAkBclTrSmwH0P/j2/82NgwJA4KsYM1oI9D/E
6wtXb4QCQGXC9pMYD/Q/Aqks5kqFAkBu77JVlRz0Pw63GunvhgJA8gWRtlMj
9D/YzxpGuYcCQHccbxcSKvQ/DC+ne3yIAkCASSvZjjf0P2R7IEPwiQJAk6Oj
XIhS9D8w6hgHjIwCQBi6gb1GWfQ/IEmr6yKNAkCc0F8eBWD0P0Z+BU6zjQJA
pv0b4IFt9D+OD2NewI4CQCoU+kBAdPQ/1EuY9TyPAkCvKtih/nr0P74l+dyy
jwJAuFeUY3uI9D9gl8luipACQDxucsQ5j/Q/+FOIAuyQAkDBhFAl+JX0P3b/
ELlGkQJARpsuhrac9D/cbxSHmpECQMqxDOd0o/Q/XrBFYeeRAkD6a3bUIqT0
P4DMQbzukQJAm5rgIg==
              "]], 
             LineBox[CompressedData["
1:eJwV0n8s1HEYB/DzCYU/2JQkZbQZOjsU6ayez3UlV+JCixtHTOq6sRZ2ZLvO
r67jnK6QQsuvjpZfs0qzhoZyZfKrhR1tYuRo1/djSlaf/nj23uufZ897e1wT
0yKSEYvFOkjnf4qXDLf82hlQWdifStUiHE0ardpeMpBwnjdQRz1jUyBJfcNA
c0q8eJw6wS1Jz+5nIF2J329Rfwvksb/rGbBTpW263ENYEu6ibhplQGR/c4lL
vZq8ZUz5Qvc9IbfDqG/kTIe5zzFgqc7Qi6g3tF2t8wsMzNmV6eKpc5oq7OqM
DDiFm+zjqM16Mq5fYhgIvMhBkdSFk5GjLpsMhLBNKTxqa6PvIYMZAW3D/FEP
as02u/tVOwg4SSql26l3Oq0yIlsCv8UqxkDvfeDz4cIeBwKde7kDLdT7Tje/
+OxMoPskZzKTujZOubv8AIF1LeN4hNo9/bIsyouAdNoxb+0uwt7c2cjHPgRU
68bKBurDrGjOcgCBqsHud1HUQQMj1v7HCPxR8C23ShE+USxYkPMJhKr5ghpq
QURf75CAwPEihTKQWugYVL1LSMAjrv+1XoOwuJ4d9SyWwJmkkrGZEoSTJQ2c
9UQCztntT0XUUp/9NryrBFbYy4JPaoSzu237JjMIcIMzx3TFCCtyldWuOQTa
poU6K2pliFmWNJfASC3fPakI4fJxEwdpCJg7NG78vYNw9cNrNufKCHg9f8Xl
U9cnzC9UPCLwI8bTTK5EuGNlotpbR0C4dnd9thDhro6wLFkLAZNYYG9B3SMb
jHrbSaCZZdC4FSA8bN5lE9NLIIAXnB+ch/DEkO9i3SDtG/t1KTSX/lNpc9/q
RwLDfIPqrALhZeeqrPwpAmhKK/KVI2zhL19s/UkgQT7pV5ONcGiv3lP2i8CV
1DlneRbC/wAliUEK
              "]], 
             LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAsD401ocG9j8iiEOT3XYCQDxlRcMG
JvY/5Pti4/RvAkBDK76eUSz2P6yR7cJ6bgJASvE2epwy9j8EWBdO+GwCQFh9
KDEyP/Y/iATsQ9ppAkB0lQufXVj2P+D4DLc4YwJAe1uEeqhe9j8s/ej8emEC
QIIh/VXzZPY/3hQ5qLRfAkCQre4MiXH2P0qbnAwOXAJArMXRerSK9j8eYCUb
WFQCQOT1l1YLvfY/UOnq2UFDAkCiQTNz3cP2P6a9yLjEQAJAX43Oj6/K9j/y
HZXbPD4CQNokBclT2PY/OKghwww5AkDRU3I7nPP2P/p8p/kpLgJAvrFMIC0q
9z/Ir0MZURYCQHz95zz/MPc/rCO8ayMTAkA5SYNZ0Tf3P1ggy2DqDwJAtOC5
knVF9z/84uMLVgkCQKAWIX/NTvc/LE3v7LkEAkDrMJPM
              "]], 
             
             LineBox[{{1.4599277210884347`, 2.249092020085473}, {
              1.474440492710391, 2.2334248841575928`}, {1.4761057146348167`, 
              2.2315177633904346`}, {1.4777709365592426`, 
              2.229587877785703}, {1.4811013804080946`, 
              2.2256595650136957`}, {1.487762268105798, 2.217527052528129}, {
              1.501084043501205, 2.2001672019843257`}, {1.5277275942920192`, 
              2.161359379858278}, {1.529362366119885, 2.1587748906783375`}, {
              1.5309971379477507`, 2.1561665933719887`}, {1.5342666816034822`,
               2.1508783920869465`}, {1.5400722789115644`, 
              2.141252103538587}}], 
             
             LineBox[{{1.709927721088435, 1.7233714314540185`}, {
              1.7315811322851642`, 1.6520050360289797`}, {1.7332347233076648`,
               1.646406546582476}, {1.736541905352666, 1.6351482270810775`}, {
              1.7431562694426685`, 1.6123896952596564`}, {1.7563849976226737`,
               1.56615580132181}, {1.782842453982684, 1.470551656122983}, {
              1.7900722789115624`, 1.4436423062420678`}}], 
             
             LineBox[{{1.7932610544217666`, 1.4316734649878349`}, {
              1.873405612244896, 1.1146196669122395`}}], 
             
             LineBox[{{1.8765943877551003`, 1.1015237598784688`}, {
              1.9362087553637064`, 0.8542075863866394}, {1.937881165580842, 
              0.8472581306714639}, {1.9412259860151129`, 
              0.8333668530278509}, {1.9479156268836548`, 
              0.8056217810879316}, {1.956738945578231, 0.7691266044325031}}], 
             LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAABMrEle6tAUCAmzQtgRK1v22VV/o0
yQFAAHdKnrMEvL+ck0Ite88BQIA+lVzeh72/+o8YkwfcAUBg/0/VmjrAv7WI
xF4g9QFAwE8UiiL1wr+oSssYh/gBQIBPXkGDTsO/mgzS0u37AUCARfrcnKbD
v4CQ30a7AgJAQD45zDBSxL9MmPouVhACQKCl0Ekzl8W/P1oB6bwTAkBAmrI+
HOXFvzIcCKMjFwJAwHT2zqwxxr8XoBUX8R0CQOD5iLLAxsa/4qcw/4srAkAA
J/OamODHv9VpN7nyLgJAAC5bHqMjyL/IKz5zWTICQMBBoGJNZci/ra9L5yY5
AkBAsaELfeTIv3i3Zs/BRgJAoDTGhS3Syb9reW2JKEoCQMCgR4QaCsq/Xjt0
Q49NAkAgGky8n0DKv/w1O2oRUgJAQJBJM7iGyr9ip5Y4
              "]], 
             LineBox[CompressedData["
1:eJwVUXss1WEYPn7D+EcuoUKuGbnkskm042tqbbJlRxRWzshxCQehWGdzv7UZ
urinULkN3RjD61o45/uiRk4uO3U41VFUmMuR+vrj27dnz/vsed7nNQ3hc8IY
FotlS9//vzWRj8ovMchE1jYo/jIOSvl1AVfCGJSWtetec18I615NOiMRDCpK
OGI+MiAEMenMLeEzSLKVNwQ6IhAV9Z3aTmAQ11A2XeImgj7OiCI4mUE+q7e4
a8EiqJ9+x7cTMCiu1FsY8EQEpWVi67tpDNJsivx0+Y0ICgIl0p1MircdV5dl
IuAv/Lg4WsAglpTtVWuKIeThutaxQuqv4iAePYnhQohCeK+YQT9TnKRJ/hjc
ZGootIz6pVZ7cbMx2DXs2xmrZFD/DRf7qgoMJlF6Lx1qGDQx8yw1qBWDtq1R
bGktg9qV8zyq+zGorJhb7T2m+a+dL+FOYthqO/r5aiPV25DiegkGebxjlbCF
8oUsXsQKhnlnV3+ndtqXtTFq3sEwscHWLH9B+2itD4xWITDUeWb8bwflo3y3
mzQIdKR4Z/G6qR/XLZKnR6DB3ZeNe2ne242b1YYEKv8EbDkPMMjB3n7Yx5RA
IXCfVwzTvgZ1FwUWBNLSw6OVRinWz0m2sCRw3TPWMkJI+7DJrfekmKeSJCGE
9rWp9ugjnT9kPPZBMUn5uKlZSzMCxNXordUU1S+U/zY4TCCDE//ab4bmPSv3
6zpAwCV6pDdjlt7beU2wp0VAnn3wVdsCzZeJxXJ1Ag9qYlrmPtH9OzzaBCwC
nK6BOvUl6pcY4tmxgUH1vW6ly1eK2UHSO98wdH+PLAldpn7nuIu6cxhiVfvy
i1bovcx76twxBjMT7fTeXwxC2xM5yr0Ypk/wbsrXqX7AQMFvxlDg283X36JY
43iyoAwDO0Yj/LSCzjfMJ9lmYXgqWdrfs0vxsFTAScXwD/QJYmo=
              "]], 
             LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAWR8a60MDA0DAJCiL7ErNv3QHBzNS
DgNAgEfhGmPtzL8oIVsqfxEDQAA6KsVqz8y/3DqvIawUA0DAsknoDrDMv0Ru
VxAGGwNAkGl5jCptzL/4h6sHMx4DQOC6vBehScy/rKH//l8hA0DgOcL8sSTM
vxTVp+25JwNAUCD3AaDWy7/kO/jKbTQDQGBmWDubKcu/mFVMwpo3A0AQHgaY
0vrKv0xvoLnHOgNAgEvHmZ/Kyr+0okioIUEDQNDqIKn4Zcq/hAmZhdVNA0AQ
JSMDlYvJvzgj7XwCUQNAMKa0V2lRyb/sPEF0L1QDQPBiS7TOFcm/VHDpYola
A0DAD96ySprIvyTXOUA9ZwNAEO+WQvqRx7/Y8I03amoDQGD5VgVJTMe/jAri
LpdtA0DwoGOrJAXHv/Q9ih3xcwNAwAY71oByxr/EpNr6pIADQKCE4Ka/O8W/
Y3J7tQyaA0CQYe4X64fCvzYy3rUpnQNAIPqk1acswr8K8kC2RqADQCDmnOn4
z8G/sHEGt4CmA0BgLBniVhLBv1GLkL9mpwNAQEKNwoD2wL+eDMSP
              "]], 
             
             LineBox[{{2.5432610544217686`, 0.1074454346295135}, {
              2.5491589242421773`, 0.12902738870872987`}, {2.550808072655462, 
              0.13517692704360318`}, {2.554106369482032, 
              0.14762565967758956`}, {2.560702963135172, 
              0.1731176021687708}, {2.573896150441452, 
              0.22644103696816487`}, {2.6002825250540123`, 
              0.3420567825322316}, {2.6019316734672975`, 
              0.34966104527845165`}, {2.6035808218805823`, 
              0.35730793156824303`}, {2.6068791187071523`, 
              0.37272818696569376`}, {2.6134757123602923`, 
              0.40406456668693735`}, {2.623405612244898, 
              0.4524345006579402}}], 
             
             LineBox[{{2.626594387755102, 0.4682602810978149}, {
              2.6530552742791325`, 0.604520686911062}, {2.654594253208102, 
              0.6126899867167468}, {2.656133232137072, 0.6208831396948513}, {
              2.6592111899950117`, 0.6373390405675254}, {2.6653671057108905`, 
              0.6705141904012872}, {2.677678937142649, 0.7377957107079867}, {
              2.7023026000061656`, 0.875017039835988}, {2.703841578935135, 
              0.8836657051452979}, {2.705380557864105, 0.8923188178729072}, {
              2.7067389455782314`, 0.89995968265199}}], 
             
             LineBox[{{2.7099277210884356`, 0.9179050753268386}, {
              2.726926262869682, 1.013527442626939}, {2.751549925733199, 
              1.1503303141774572`}, {2.7532178933411187`, 
              1.1594436391054224`}, {2.7548858609490385`, 
              1.1685345498399684`}, {2.7582217961648783`, 
              1.1866449543417756`}, {2.7648936665965578`, 1.22255229448217}, {
              2.7782374074599168`, 1.2928951605448566`}, {2.7900722789115644`,
               1.3533115249862697`}}], 
             
             LineBox[{{2.7932610544217686`, 1.3692267601603005`}, {
              2.8065928567945546`, 1.4338914268233605`}, {2.8082608244024745`,
               1.4417545312359672`}, {2.8115967596183142`, 
              1.457319729370213}, {2.8182686300499937`, 
              1.4877834551924891`}, {2.8316123709133527`, 
              1.5458725145016399`}, {2.8332803385212726`, 
              1.5528534139965868`}, {2.8349483061291925`, 
              1.5597697644305786`}, {2.838284241345032, 
              1.5734062273807907`}, {2.8449561117767117`, 
              1.5998772016938074`}, {2.8582998526400707`, 
              1.6494872050966412`}, {2.859937370151431, 1.655259700850965}, {
              2.8615748876627904`, 1.6609617965539025`}, {2.8648499226855098`,
               1.6721532946531639`}, {2.8713999927309484`, 
              1.6936759664400602`}, {2.873037510242308, 1.698875585323914}, {
              2.873405612244898, 1.7000343845450874`}}], 
             LineBox[CompressedData["
1:eJwVknss1WEYx3HkfXEKJ3JcUhSFZFmnM5mep7WaSyHVVFbpQlhlRaOOSmto
VsdtVIzSuoyikpNuJuU2FcLOXLs4Ipy5RXL5vadffzx79tmePft+v89jeyQq
MFRHS0vLla//XdBQnTVSTPBN5cE59pMDg+7zXqfKCDa45KbXj3KwIbZwYWo5
wVUea/zsJjk4LGpvefKa4Gzatjv4l4NrxXo3mysIJh+2G1sxz8FLL8mB8XcE
vQNV9z9pOOhTHbUTVROsdrvh6CFgYHQpY8CtjuAPT4kqSo9BmGL0dMxnglfa
A+66CBlkBNhIs5oJxkadTS5fxKBiePu8opXgWF9KsL4Jg19JsiqlkuCHSLl8
xWIGpnZFSdMdBIVODml6Zgygot1X3MPryWlvLl3CIHIvMXH/TnC+trl2tZhB
9m+Jcp+KoE+wfDDcgkGV/Fju+X6Czs6aJ9GWDNSOmSG5gwSHei+meVsxENdU
2b9VE+z9ptQa5nlLyNhQ9yhBhVl/3F5rBqfmbJ5yEwRN3XViMnjOyd5x1uYP
Px+Ud+IWzzXr4jfCDMHyE309J3ke+1SkOTRPEJoUW4x5tg7vqE7QEJS6v7K4
zO/3EtCUAh2KuyMe17XweqLzN/i/X0BRP9gwfZrXm+8eaqqiFFUO+dlq3k9D
W2aHQEjx6ouve0rNGfyJep+/0oiiTLYUvHn/tobjR7eKKO7q72l9Zspg+4Nl
jmFmFJ1rRjLVIgZxm/1GksQUE92EbMaYwb3u+OcPrShOHvme2snn3xT7KK7e
hqI4WrdWzt9nVtTpOWhL0V+ibW1uwMChhAoM7CmWavyFMYTBTm9pvdNqipXn
go0f6DKI7wu97utMUXfKqqBYm0Gr5Qfz6+so+sVOHYc5DphivLt4PUXXwpiC
hmkOnHYuv9sopfhsoivChf+3hOQLa4w3URy4vf+OTM3B2knp5kwfiqKnJS5e
XRzsTw3TK9tBsSpIIMtTcpDolPWxLYCiT9Bjz8YvHHASj0iTQIpln8mZniYO
/gFGSV4G
              "]], 
             LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAr3RvQJlYCEBleBIGQsX9P4rNrGqZ
YwhAiE2U6Q6y/T+2aNsvumYIQG5yCoJNrP0/4QMK9dppCECFnypma6b9Pzg6
Z38ccAhAUHTPBUea/T/lpiGUn3wIQFT3oBOLgP0/7ITh+QOACEBvhzTEPnn9
P/JioV9ogwhAbSlOe9Bx/T8AHyErMYoIQL5hi0iQYv0/GpcgwsKXCED6BIXd
kUL9P1CHH/DlsghAuKxu0Rv9/D9XZd9VSrYIQEI7CHT08/w/XkOfu665CEDi
yJQWtOr8P2v/Hod3wAhAr+aBberX/D+Gdx4eCc4IQCFFK6xBsfw/vGcdTCzp
CEBRMXDmCmD8P8NF3bGQ7AhAd1Rq7I9V/D/KI50X9e8IQHM0f9ADS/w/198c
4732CEA33WABujX8P6fg5RS8/AhALW9uQLci/D/9Bpck
              "]], 
             
             LineBox[{{3.126594387755102, 1.753366941741994}, {
              3.1403554089856875`, 1.7307804260676476`}, {3.1668567962816017`,
               1.6854332807452306`}, {3.20673894557823, 
              1.6150158962394132`}}], 
             
             LineBox[{{3.293261054421769, 1.4663885958029548`}, {
              3.3628173944767186`, 1.3593638880830872`}, {3.3644621002807877`,
               1.3569964004184445`}, {3.3661068060848574`, 
              1.3546366234918161`}, {3.369396217692996, 1.349940198260362}, {
              3.373405612244898, 1.344257503967691}}], 
             
             LineBox[{{3.5432610544217686`, 1.1428910872603075`}, {
              3.5679524154001294`, 1.1192154315752565`}, {3.5696159403988332`,
               1.1176624779529403`}, {3.5729429903962417`, 
              1.1145720417782554`}, {3.5795970903910588`, 
              1.1084522936935801`}, {3.592905290380693, 
              1.0964512489028144`}, {3.619521690359961, 
              1.0733560468050252`}, {3.623405612244898, 
              1.0700822465081306`}}], 
             
             LineBox[{{3.709927721088435, 1.0027274127323955`}, {
              3.772169243239395, 0.9598113083559545}, {3.7900722789116124`, 
              0.9481645783317891}}], 
             
             LineBox[{{3.7932610544218166`, 0.9461190780335418}, {
              3.975356412174302, 0.8404154877934108}, {4.0400722789115715`, 
              0.8063290523547307}}], 
             
             LineBox[{{4.043261054421775, 0.8046734841412947}, {
              4.123405612244896, 0.7633647438920321}}], 
             
             LineBox[{{4.126594387755099, 0.7617224443448957}, {
              4.206738945578245, 0.7199354963689123}}], 
             
             LineBox[{{4.209927721088448, 0.7182403555015345}, {
              4.383855279967578, 0.6174791086792849}, {4.456738945578231, 
              0.5677575067765677}}], 
             
             LineBox[{{4.459927721088435, 0.5654475474481401}, {
              4.540072278911561, 0.5032453714679639}}], 
             
             LineBox[{{4.543261054421764, 0.5005981990964322}, {
              4.623405612244898, 0.42952880661815035`}}], 
             
             LineBox[{{4.626594387755102, 0.4265195481027523}, {
              4.791785493781253, 0.2528946819125908}, {4.873405612244651, 
              0.15656448123209832`}}], 
             
             LineBox[{{4.876594387754855, 0.15270164211776546`}, {
              4.8918876100511675`, 0.13409307107602925`}, {4.893603678113199, 
              0.13199691754742524`}, {4.897035814237263, 
              0.12780001349841125`}, {4.903900086485391, 
              0.11938848977660675`}, {4.917628630981647, 
              0.10249998350574568`}, {4.945085719974159, 
              0.06850507541048553}, {4.946801788036192, 0.066372496813282}, {
              4.948517856098223, 0.06423913845976573}, {4.951949992222287, 
              0.05997018203550594}, {4.956738945578231, 
              0.05400892222058139}}], 
             
             LineBox[{{0.20992772108843502`, 2.880680005573863}, {
              0.21696023948022664`, 2.865331391309156}, {0.22937869353316004`,
               2.8377963448513936`}, {0.25421560163902684`, 
              2.7813526976282894`}, {0.2900722789115644, 2.697757276054661}}], 
             
             LineBox[{{0.29326105442176853`, 2.6902595038001635`}, {
              0.3069331311708736, 2.658082454856137}, {0.3099768444909867, 
              2.650919779240331}, {0.31606427113121294`, 2.636604171543137}, {
              0.32823912441166536`, 2.608045497105403}, {0.3525888309725703, 
              2.5514813611834253`}, {0.3734056122448977, 2.504071402431988}}], 
             LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAYX1orA8N5D80Fwei48kAQG6qP1on
SeQ/EJguYnu+AECa0ZHk1FbkP/BEfZv9uwBA8B82+S9y5D+YQ5/kH7cAQJ68
fiLmqOQ/HJknUtutAED49Q91UhblPyhwM18pnQBAIx1i//8j5T9E0nrqPpsA
QE5EtImtMeU/BBqRHV6ZAEClklieCE3lP9QkJGK5lQBAUi+hx76D5T/SB0u0
4o4AQH5W81FskeU/iBGjzUSNAECpfUXcGZ/lPwLOGlywiwBAAMzp8HS65T8Y
I9q9o4gAQK1oMhor8eU/4l2lxPqCAEDYj4Sk2P7lP7YCer2ngQBABLfWLoYM
5j9atlbwXYAAQFoFe0PhJ+Y/gpmc5eV9AECGLM3NjjXmP6q7uJi3fABAsVMf
WDxD5j9qRUNnknsAQAiiw2yXXuY/GM4VN2N5AEAzyRX3RGzmPyImRidZeABA
XvBngfJ55j/4llIRWHcAQLU+DJZNleY/nKb8r3B1AEBHLUL+mp3mPwrYhM3j
dABAC8yvaw==
              "]], 
             
             LineBox[{{1.1265943877551021`, 2.2547489484980945`}, {
              1.1324895018645944`, 2.2584972447818696`}, {1.144628814271322, 
              2.2660011254434806`}, {1.1461462283221628`, 
              2.2669175200928224`}, {1.1476636423730038`, 
              2.2678288952419257`}, {1.1506984704746857`, 
              2.2696363190590993`}, {1.1567681266780494`, 
              2.2731879918732094`}, {1.1689074390847767`, 
              2.280023768975016}, {1.1704248531356174`, 
              2.2808518572448886`}, {1.1719422671864583`, 
              2.2816738583896123`}, {1.1749770952881402`, 
              2.2832993311819676`}, {1.181046751491504, 
              2.2864742884334417`}, {1.1931860638982315`, 
              2.2925052649492557`}, {1.1947034779490724`, 
              2.2932279201105663`}, {1.1962208919999133`, 
              2.2939434133477175`}, {1.1992557201015952`, 
              2.295352645566953}, {1.205325376304959, 2.2980822151235536`}, {
              1.2067389455782305`, 2.2987005322149034`}}], 
             
             LineBox[{{1.5432610544217686`, 2.1358356139827723`}, {
              1.5800402927837238`, 2.0666583661576814`}, {1.5816750646115896`,
               2.0632946349438326`}, {1.5833098364394553`, 
              2.0599061635352136`}, {1.5865793800951868`, 
              2.0530549471702724`}, {1.5931184674066499`, 
              2.0390551114494793`}, {1.6061966420295761`, 
              2.0098653439535994`}, {1.6234056122448974`, 
              1.9690409734776129`}}], 
             
             LineBox[{{1.6265943877551017`, 1.9611759362535581`}, {
              1.6354021959625296`, 1.9389660869862917`}, {1.6384514006496307`,
               1.9311115663901575`}, {1.644549810023833, 
              1.9151482506870199`}, {1.6567466287722372`, 
              1.8822113249694308`}, {1.681140266269046, 1.812365869534334}, {
              1.7067389455782307`, 1.7335674254503992`}}], 
             
             LineBox[{{1.9599277210884352`, 0.755971242825602}, {
              1.988053472094907, 0.641034087179567}, {2.0400722789115644`, 
              0.4365628214422159}}], 
             
             LineBox[{{2.0432610544217686`, 0.42450007055394146`}, {
              2.044854519284394, 0.41849626009791674`}, {2.0481384395255446`, 
              0.4061748278491377}, {2.0547062800078466`, 
              0.38174639776987807`}, {2.0678419609724497`, 
              0.3337939868900959}, {2.0941133229016557`, 
              0.24187074901066996`}, {2.095755283022231, 
              0.2363158155772478}, {2.0973972431428063`, 
              0.23078442313861114`}, {2.1006811633839573`, 
              0.21979301634061343`}, {2.107249003866259, 
              0.19810096787922582`}, {2.120384684830862, 
              0.15592129763451013`}, {2.1234056122448974`, 
              0.1464555822729361}}], 
             
             LineBox[{{2.1265943877551017`, 0.1365617353726689}, {
              2.1497196280325883`, 0.06793314237211767}, {2.1527832093051087`,
               0.05926816536121304}, {2.1589103718501494`, 
              0.04224916910600118}, {2.1711646969402305`, 
              0.009484489146072583}, {2.1726964875764905`, 
              0.005510805063264179}, {2.174228278212751, 
              0.0015646374669282537`}, {
              2.177291859485271, -0.006244645238976609}, {
              2.1834190220303116`, -0.02152749292839129}, {
              2.195673347120393, -0.05072249307225718}, {
              2.1972051377566535`, -0.054240977758930775`}, {
              2.1987369283929135`, -0.05772997259305779}, {
              2.201800509665434, -0.06461902098140015}, {
              2.2067389455782314`, -0.07547229133770283}}], 
             
             LineBox[{{2.459927721088435, -0.1262397595243958}, {
              2.474542108580816, -0.09498610001147911}, {
              2.4760622683151507`, -0.09150259798975213}, {
              2.4775824280494856`, -0.08797515853036719}, {
              2.4806227475181557`, -0.08078839200041621}, {
              2.4867033864554955`, -0.06588649706778771}, {
              2.4988646643301746`, -0.03396531365338751}, {
              2.5003848240645095`, -0.02976819266773001}, {
              2.5019049837988447`, -0.025502464281041526`}, {
              2.5049453032675144`, -0.0168380764640923}, {2.5110259422048538`,
               0.001021951541565258}, {2.5231872200795333`, 
              0.0388611446010767}, {2.5400722789115644`, 
              0.09604565160398781}}], 
             LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAWR8a60MDB0CbOyL60lv7Px44Ps50
EwdAUOfOJEG7+z+Iex9WzxYHQN9W16Qizvs/8r4A3ikaB0Bu5bT2teD7P8dF
w+3eIAdAWDV5h/EE/D9wU0gNSS4HQL6q6qK5Sfw/wm5STB1JB0A/NGm8hcT8
PyyyM9R3TAdAqaOWT33S/D+W9RRc0k8HQNrDKnkm4Pw/a3zXa4dWB0BGUUcO
jvr8PxSKXIvxYwdA2l4gr7Yr/T9+zT0TTGcHQMuFaio/N/0/6BAfm6ZqB0Da
u42UekL9P72X4apbcQdA0TFUNAtY/T9mpWbKxX4HQDauyfWaf/0/0OhHUiCC
B0Bkzpo4woj9PzosKdp6hQdAtv9BpZ6R/T8Ps+vpL4wHQF0LBFZ4ov0/evbM
cYqPB0Cy7axJdqr9P+Q5rvnkkgdAvMpVyCqy/T+4wHAJmpkHQAIGGPe4wP0/
IgRSkfScB0CchXNzk8f9P4xHMxlPoAdANiOwESbO/T9hzvUoBKcHQDSjLFl1
2v0/UYuQv2anB0C8NQ6uIdv9PwWduzs=
              "]], 
             
             LineBox[{{3.376594387755102, 1.3397705923949819`}, {
              3.389132687341829, 1.322408288926051}, {3.4154479802069386`, 
              1.28740748154779}, {3.456738945578231, 1.2362934137547141`}}], 
             
             LineBox[{{3.459927721088435, 1.2325320130558888`}, {
              3.4711476385766673`, 1.219501495821381}, {3.4742167112161755`, 
              1.2159918428075567`}, {3.4803548564951923`, 
              1.209041918628968}, {3.4926311470532254`, 1.195414881765461}, {
              3.517183728169292, 1.1692385744385931`}, {3.5400722789115644`, 
              1.1460367936210538`}}], 
             
             LineBox[{{3.2099277210884343`, 1.6093628389823165`}, {
              3.2688429327193225`, 1.5069194982490897`}, {3.271874366969561, 
              1.5018149471502644`}, {3.2779372354700382`, 
              1.4916654711575204`}, {3.2900629724709924`, 
              1.4716177412184097`}, {3.290072278911565, 
              1.4716024882522198`}}], 
             
             LineBox[{{3.626594387755102, 1.0674120429656666`}, {
              3.675861201347275, 1.0280550253143241`}, {3.6789679123760535`, 
              1.025685257265191}, {3.6851813344336097`, 
              1.0209829164974726`}, {3.697608178548722, 
              1.0117232327775034`}, {3.706738945578231, 1.005038767960139}}], 
             
             LineBox[{{4.959927721088435, 0.05003677781778258}, {
              4.974258877028703, 0.032162197648680564`}, {4.975974945090735, 
              0.030019768234307066`}, {4.979407081214799, 
              0.0257338743787977}, {4.986271353462927, 0.01715865295261425}, {
              4.987987421524959, 0.015014279432225806`}, {4.989703489586991, 
              0.012869729094215878`}, {4.993135625711055, 
              0.00858019893191557}, {4.994851693773088, 
              0.006435269615885486}, {4.996567761835119, 
              0.004290264484266727}, {4.998283829897151, 
              0.0021452085207591446`}, {4.999999897959183, 
              1.2755102085352696`*^-7}}]}, 
            Annotation[#, "Charting`Private`Tag$266493#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQPbcuic0wpdpO225VT+sbVocjlxV8whUi7ddbafSC
+P+P7WtWUMi0n7o8tQ/E55u0bQPXjSJ7/mMCE0D8uQd65VkVKu3ldj2eCOLr
vE/p+59eb/8obclkEP8u37x/f6432Ut4q0wF8VWWcZr9+t1qfzbWYRqIn2Nb
mvtdvtPe7PUDMP9Xts+dj+n99hfqO8B8l7MTVb9dn2S/9oXVFBD/xQz3g18y
p9gfLJ84CcTvSfkb8/n3VPvYTUfA7jEw2PzjY+90+6gijn4Q//LvjCkf5Gfa
P74yC+yfsuNyBu83zrIXlTwC9q/U5Cun3zrPsT9Xdw3M3xfXlf7m6lz7nap6
YP8maTkwv06fb1//xgDsP6bfVee/1Cywlw/wA7vvyoNQ2S+uC+3neP+fC+Iv
O2aQ/Zlvkf0a82MrQPyKNdw7P11fZL9lld52EN9r0jO2TwsW27+JOHsSxJep
OBjyMXOJ/dYv9g9B/G91Z/uiWpbY73Le+QTEBwCZadDC
              "]], 
             LineBox[CompressedData["
1:eJwVx3ssFAAcwPGbwhojr2I4XBx5bajrKH7WRaVcppK0vCaPVDjUMWxdKRUx
K9TksYpzXodzuPPanM3cmEd2ouLKONydHEVjt373x3fffexiU0LvaBEIBDdM
80iX75Yh5DpIZcZKjIa0/eMM3QqVRfVg6pFHMUZT/ujOKcLY8Lq+m6mx7vxP
R4VNA6iKc4c1nh3sy5TLGmB3UWRtgubUVQytt3GAKSxmaZxTmG60nt0If8/L
tjWmM+hRa7QmaHojzTRF24Yfb17Vb4b36eU6ZmiV78E92UwzzIW7szUWHVu4
IKtqAYr39K0j6LJDgrKVhFb4kigkHUXzHgUx0s25QMq2V2tcuXbKYiuHCzrW
1zbM0fm3HQYZUi44q8t3LNAPJowTVAFtkF0XYG6JvkEjGDA4bbAcIQi1Qvvz
FbxNg3a4vB/BtkYbV45obUraQTUzy7FF7xnwG1LPdACr71MECb30+GPI75oO
mGvLcrFHj22X7KRo84AwvEgko/kJeVUbSTxgyJIoTujqueSAlHEeZIw3pjuj
C4JvypWenZAhps26oiO8Tvgo9zohflKP6Imm1dlJ70fzYf9DmdZJtKuFYYFC
xAerMVczKlqtXp2RF3VBkEeG2A+9kibJuafqgvgiLuMsemJJdEwe1g3fogyu
BKJrR6vT1m16wF37SQsdvV3R6bxQ2ANs2bN3V9GBCeJfU/96QElaE4ej5Qd2
rgumBVAZ8PZwHBqm9A1b/IWw2zrpeBddWkMaqW0WApUUVpKKpvrSfV487wW1
d2JUHvqVXtxWznYvkAlEcT76x9esptSYPpD1J5cWoZ8+/EwMP90PBS+j/arQ
knNCySV2PzCDI53q0c4mkyVgNgCj5FomF50rXb7oxRoA9rDUQ4CeN+2tZJUP
ADWG5tCL/g9+q1Jp
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQ3fF14UY7kwP2LI+kNr8MZnWwVpti1Z5ywP5Hm/aO
L0B+Cq+8OOPsA/YCDJmLGENYHfq+rPxcdfGAfUttjRA/kL/jtsmFL+wH7TU+
T+WWBfIfHtq/Js/uoP0WjlcTtIF8k4lXU5NWH7R/YKft6wXkx1UkON15eND+
woHpXVFAfnv8a7kwiUP2GSG2idlA/i1dxhuerUB+T9zzPiC//pSOl2H8Yfsp
D99tvgvkr9i4XW311MP2Ydp/xT8D+ZdmODGrnjlsn+P9WZ8zlNVBJT1ij4Tl
EXubq+qd5kD+KeYWPQbho/YikXoOc4H8L6/4uKs8j9o3HHi8aAeQL3tp5vPP
9Uftj9y9c+UKkF+wYP2C52+O2if1Zm/hD2N1ELO9LXT+2DH7Aok/h/qBfAeV
tPcef4/ZH1t/hGETkJ/J/fH0IePj9ncEJmpeBfL33GRr3bbguL3RR2UvuXBW
h6Qyo+9zq07Yq/Qd09gD5PfE7r0svvGEfVqPrcIzIH+ri8eGic9P2MuozZAT
jGB14BCOy2wNOWk/L/OxbRaQb/Trhev/rpP2DP+Pp84A8qMfFitVHjxpL3Oq
fNFxIH/d+s7bOXqn7NXOiWVoRrI6vBJ61eOVeMp+Q7Ll1AggX2orx8/sslP2
1852VuQA+QC+Q9q4
              "]], 
             LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAbqV7A8rE0j+eJ5PBY+YDQFBHYF7C
89I/zIsK63DnA0DueBA3MQ3TPwjhyVUF6ANAjKrAD6Am0z+yZJmkm+gDQCrc
cOgOQNM/2rf62TPpA0BnP9GZ7HLTP05eXAJq6gNAAKL2utuL0z/YzTncBOsD
QJgEHNzKpNM/6Fshk6HrA0DIyWYeqdbTP1qHDaHg7ANAKFT8omU61D9c1hZ7
de8DQOhoJ6zeAdU/nKP6Avz0A0CAy0zNzRrVP2BLgK+19QNAGC5y7rwz1T88
+G1acfYDQEjzvDCbZdU/LsoHs+73A0CpfVK1V8nVP7AChqIB+wNAapJ9vtCQ
1j/Ss3YAigEEQAL1ot+/qdY/alk1aGQCBECaV8gAr8LWP7a8lulAAwRAyhwT
Q4301j/WRC0/AAUEQGJ/OGR8Ddc/botHFuMFBED64V2FaybXP0rHzgzIBgRA
K6eox0lY1z+isaRdmAgEQMQJzug4cdc/UM2iuoMJBEBcbPMJKIrXP+6tbDxx
CgRA9M4YKxej1z/cFUnkYAsEQIwxPkwGvNc/WvZ3s1IMBEAklGNt9dTXP2xq
MqtGDQRALQUvp+Dl1z8o/Vhx7Q0EQH2Sz68=
              "]], 
             LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAu/rQWB8a2D9mx8l5kSADQIQe+fGx
ONg/InakedwhA0AcgR4ToVHYP1ZeugXtIgNATEZpVX+D2D92j7sgFSUDQK3Q
/tk759g/ojjPf4EpA0Bu5SnjtK7ZP5BqbrfLMgNA4F7ZCMHJ2T/0N8boGTQD
QFPYiC7N5Nk/HLl/6Wo1A0A4y+d55RraP9IOYVwVOANAA7GlEBaH2j9MBY0c
jD0DQJh8IT53X9s/qnRAiQFJA0AK9tBjg3rbPzZMWP18SgNAfW+AiY+V2z+Y
8ihJ+0sDQGJi39Sny9s/WPOWaABPA0AsSJ1r2DfcP9YExMgsVQNAnsFMkeRS
3D+W7Ar9vlYDQBE7/Lbwbdw/msA7CVRYA0D2LVsCCaTcPybbqqiGWwNAaacK
KBW/3D+CoHY7JF0DQNwguk0h2tw/GlZHpcReA0DBExmZORDdPxzsnvwNYgNA
NI3IvkUr3T/SQ1/ptmMDQJBahPw1O90/vC0do7JkA0AIcqPM
              "]], 
             LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAHlAmrnRv3T/QjDUfG3gCQIz51i9q
fN0/8kvDKvZ4AkD+coZVdpfdP4rVQ4zBegJAcew1e4Ky3T8cpbvmj3wCQFbf
lMaa6N0/nsi5gzWAAkDIWETspgPeP0oyucQMggJAO9LzEbMe3j8qGaL75oMC
QCDFUl3LVN4/eBWrR6SHAkDqqhD0+8DePwBZmD1CjwJAXCTAGQjc3j/aWi4T
MZECQM+dbz8U994/6nWL1iKTAkC0kM6KLC3fP6a4viEPlwJAf3aMIV2Z3z9g
P7SlCp8CQAohhCffOOA/HsBgqoyvAkDIPJEvfkXgPxpaJqKFsQJAhlieNx1S
4D907w8SgbMCQAKQuEdba+A/lBQ8VH+3AkD6/uxn153gP1AwyzWZvwJAuBr6
b3aq4D+APLnCpcECQHY2B3gVt+A/EkDhurTDAkDybSGIU9DgP5Z73OXZxwJA
69xVqM8C4T8U2dLzQNACQKr4YrBuD+E/MKwXqGDSAkBoFHC4DRzhP56007iC
1AJAJjB9wKwo4T+qNg4kp9YCQORLishLNeE/5GHH583YAkCiZ5fQ6kHhP1Ja
+AH32gJA89fsqEVI4T9c6m5hDtwCQGrN0x4=
              "]], 
             LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAudK9AWVi4T9QZf+fkwICQJrWy/Bm
dOE/3ljbltQFAkBY8tj4BYHhP1S2UksfCAJA1CnzCESa4T+0NE7RuwwCQMyY
JynAzOE/vAPJDxEWAkCKtDQxX9nhP/YXQzFsGAJASNBBOf7l4T9gP8ahyRoC
QMQHXEk8/+E/PgDhZYsfAkC8dpBpuDHiP9blwjIqKQJArVT5qbCW4j82pZeM
0jwCQGxwBrJPo+I/aB88ZFE/AkAqjBO67q/iPzIz21/SQQJApsMtyizJ4j9i
3Wm32kYCQJ4yYuqo++I/YPcflQRRAkCOEMsqoWDjP5YZjGK6ZQJAuTcdtU5u
4z882s1jkmgCQORebz/8e+M/SAyjrmxrAkA7rRNUV5fjP1B9bBAocQJAZtRl
3gSl4z/6DQEfCXQCQJL7t2iysuM/bthpZux2AkDoSVx9Dc7jPyTsqo65fAJA
FHGuB7vb4z8oTetmo38CQD+YAJJo6eM/1jzQZo+CAkCXgpdT8PLjP0yj8tiZ
hAJADFiwCg==
              "]], 
             LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAADSgTV7q35j9KfuCLPdMBQDe0AjVW
vuY/Dp++heTUAUBi21S/A8zmP24558hQ2AFACpvhbXHZ5j+MVKksrtsBQLJa
bhzf5uY/3AQXpAzfAUAD2od5ugHnP+pFnLjM5QFApNi6M3E35z8gyVziWPMB
QObVIKjeouc/9MUsgpwOAkCOla1WTLDnP5KmuZsIEgJANlU6Bbq95z9CY5xy
dRUCQIfUU2KV2Oc/FGuRQlEcAkAo04YcTA7oP5a1kdwKKgJAatDskLl56D/4
MN7GeEUCQBKQeT8nh+g/lixkuuhIAkC6TwbulJToPyxe4hpZTAJAC88fS3Cv
6D92o34OO1MCQKzNUgUn5eg/dowDMgNhAkBUjd+zlPLoP3SpH/91ZAJA/Exs
YgIA6T8EsYoQ6WcCQE3Mhb/dGuk/4o7p689uAkD2ixJuSyjpPzjGqatDcgJA
nkufHLk16T+svlGbt3UCQEYLLMsmQ+k/bjDGtSt5AkDx1+yoRUjpP1DJ7OB8
egJAW9Gwvw==
              "]], 
             LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAt9K9AWVi6T9ubIs91hICQD5K0tZv
a+k/MmhEvjEVAkDmCV+F3XjpP6TlKQ6yGAJAj8nrM0uG6T/S7spuMhwCQDiJ
eOK4k+k/QkX42rIfAkDgSAWRJqHpP+Rlgk0zIwJAMMge7gG86T/63u0wNCoC
QNiHq5xvyek/njRvl7QtAkCARzhL3dbpP6Jije80MQJA0MZRqLjx6T9aLd9f
NTgCQHHFhGJvJ+o/suiQrzRGAkAe5EYG9jPqP2iV7+V3SQJAywIJqnxA6j++
XfrrukwCQCVAjfGJWeo/4q0+VkBTAkDZupWApIvqPyK2ty1IYAJAQbCmntnv
6j+kOBY7SHoCQO7OaEJg/Oo/HhbGc4Z9AkCb7Srm5gjrPzLW8DjEgAJA9Sqv
LfQh6z9SkPpXPocCQKmlt7wOVOs/crHacyyUAkBWxHlglWDrP0KQWZtmlwJA
A+M7BBxt6z/eUestoJoCQF0gwEsphus/wAShgxGhAkARm8jaQ7jrP0Qp9Xzs
rQJAvrmKfsrE6z8k8KWIIbECQGvYTCJR0es/amAy3lW0AkAY9w7G193rPxCX
d3mJtwJAxRXRaV7q6z+iqFNWvLoCQKKCl1Pw8us/jGgBJuy8AkCNttrI
              "]], 
             
             LineBox[{{0.8765943877551026, 2.3112300514292325`}, {
              0.8784756527279703, 2.3131632563897044`}, {0.8800046976807365, 
              2.314732745657338}, {0.8815337426335027, 2.31630061338136}, {
              0.8845918325390351, 2.3194313607757975`}, {0.8907080123500998, 
              2.3256720413174525`}, {0.892237057302866, 
              2.3272276959755267`}, {0.8937661022556321, 2.328781483157414}, {
              0.8968241921611645, 2.3318833328247583`}, {0.9029403719722292, 
              2.3380632796974723`}, {0.9044694169249954, 
              2.3396031406073554`}, {0.9059984618777616, 
              2.3411408905438904`}, {0.9090565517832939, 2.3442099365372}, {
              0.9105855967360601, 2.345741172223054}, {0.9121146416888263, 
              2.3472701761948516`}, {0.9136436866415925, 2.348796918378623}, {
              0.9151727315943586, 2.350321368746}, {0.9567389455782296, 
              2.390774182205358}}], 
             
             LineBox[{{0.9599277210884336, 2.3767908380620737`}, {
              1.0400722789116281`, 2.4476370110639794`}}], 
             LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAABZSJK91b8z/0WZN4FHcEQJYgruEW
aPM/aM/O7Zl5BEBksWkBTm7zP76tpdbcegRAANPgQLx68z/azXMGWH0EQITp
vqF6gfM/NL5Fqqp+BEAJAJ0COYjzP7C4Chv5fwRAEi1ZxLWV8z8saI5YiYIE
QCWH0UevsPM/eK0I+HaHBECqna+obbfzP+Qx6reniARALrSNCSy+8z9gL04v
1IkEQDjhScuoy/M/CA0fOiCMBEBKO8JOoubzP/CSG3eEkARAzlGgr2Dt8z8o
wjKqkpEEQFNofhAf9PM/+gcggJySBEBclTrSmwH0Pxh/jSCilARAbu+yVZUc
9D/Wv8dNa5gEQPIFkbZTI/Q/vMDSm1KZBEB3HG8XEir0P7DTLYA1mgRAgEkr
2Y439D8kCyQD7psEQJOjo1yIUvQ/mP3HtSmfBEAYuoG9Rln0P0L9+XntnwRA
nNBfHgVg9D9mWFvDrKAEQKb9G+CBbfQ/YMhK3R2iBEAqFPpAQHT0P+B5rqnP
ogRAryrYof569D8sxuzyfKMEQLhXlGN7iPQ/clHA88mkBEA8bnLEOY/0PzqJ
P6dppQRAwYRQJfiV9D+6U23PBKYEQEabLoa2nPQ/WiNFapumBEDKsQzndKP0
P/YFxXUtpwRA+mt21CKk9D/qVaTrO6cEQCGG6nE=
              "]], 
             LineBox[CompressedData["
1:eJwV0n0s1HEcB/A7/ZRoadajXeWp2yq6I5RyfX5iKylTeZ4kuiRGhXb0hF2c
UYpcT85TpxkthZIlQ6FRsoZKhl3XKZyWfh/pSX388d13r3+++37en7dleNw+
qQGPx3OgM3uHfhlMcXjAQVfe6h8zBQwbiHfm36/jYGCPFZOiYtgBkwvHYhs5
uHvJNJNfyLBhVhGdtq0cfM6VHD5H/rTZzXaskwOtoiZvijwh/auPfM+BQ3XJ
yLsiho0/88FbOMzBgj9ORu7FDDudW1+l1XHgGrMrsZzMb0o8cYjj4HHmLjtp
CcOm9+1/s/o3B5PqowkNZGO9/cZBPoJ3RzTPtJRhc+YsulpghKD2SngdQl5s
PsEFmyIUBpUNlZGvi1/6rViKMDFvjWiUvHJHxaO3AoRTewUNa28zbOkBxTKl
NUK6oE5+mCxMOCLzXYfgADYZN8l2W4b2F4kRxi0yC16QHXmBolFnhEuh3emT
5K1t3cZOEvqPWYbHcjXDbs/21J13RxCqXHtcyJ77Wpo7PBHMKtIcA8g+y7eq
lvggBNvrI46TAwZrZGH+CN2nzQ5dIIeqbX0rQxAshFnrlGTpsTLRVDiCo81k
Yyk5RrzKxC0KIfe5VlBJjp9S6rLiELpqDNyryMkNpi19iQgz//SiWaemKVSW
ZxCcBV6aCrJiJz8pJg1hlbYpcPa9nIXJvnUKyqNo+ko+WdkzKTLIQWg0LMyW
k1U3o0325CO8dDu4I46sDtPqrt2i+XG8yY9cKTzQoilBeCz59WMTuXq8V2VX
jiB/6Dq2hFxf7Z0ku0f5Jsfc+Ep5NcnafZ/VIsjEHvxWcvs2VrzwCYKNYaql
ktzF1JsENSOwtZrpcHJvh/3I7XaEk1nr09eTBy5XtEy8QvCItXjxlfb50d+6
0KWH5ulXPK0ijwoKkuT9CAmjG6TR5G+axX6vhxHaQoaeWpGnyy+KzUcQ3l2N
auulPs3Ezl0g1SP0FxedlZMNnc6PVH2n/kj8NRvIu5s718p+IugCJJED1M//
1IB+hw==
              "]], 
             LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAsD401ocG9j8eLvRZL2sEQCBNYlXb
DPY/HGNna8ZqBEAnE9swJhP2PzpsWaFZagRALtlTDHEZ9j9UcmNu6GkEQDxl
RcMGJvY/7p9RyfhoBEBDK76eUSz2P3QBBlV6aARASvE2epwy9j9e3XJz92cE
QFh9KDEyP/Y/skw2ZORmBEB0lQufXVj2P9jSSviIZARAe1uEeqhe9j/4nZX8
5mMEQIIh/VXzZPY/cIxmi0BjBECQre4MiXH2P/L8ukTmYQRArMXRerSK9j/a
7rwL/F4EQLOLSlb/kPY/ElKySTZeBEC6UcMxSpf2P+ZmvwpsXQRAyN206N+j
9j+A2qUSylsEQOT1l1YLvfY/6HX/IVBYBECiQTNz3cP2Pxib4otSVwRAX43O
j6/K9j+QiPinT1YEQNokBclT2PY/sITY8jlUBEDRU3I7nPP2P1rCNrnOTwRA
jp8NWG769j+6QF2apk4EQEzrqHRAAfc/jkFrJnlNBEDIgt+t5A73PzJ39TsO
SwRAvrFMIC0q9z+qEuRG+EUEQHz95zz/MPc/5F1FaaVEBEA5SYNZ0Tf3P5pe
gjBNQwRA9pQedqM+9z8ECvGb70EEQLTguZJ1Rfc/PKzsqoxABEByLFWvR0z3
P6ry1VwkPwRAohYhf81O9z8Ykfm9nT4EQLXf5YA=
              "]], 
             LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAABpSJK91b9z/eW1nHC8YDQKoPJwW+
YPc/Qttb2vrEA0BoW8IhkGf3P/hFvpd4wwNAJaddPmJu9z8sxv/k8MEDQKA+
lHcGfPc/krQhLdG+A0CXbQHqTpf3P/z1L2dQuANAVLmcBiGe9z+WTLKWorYD
QBIFOCPzpPc/zFuuUu+0A0COnG5cl7L3P07W0W54sQNAhMvbzt/N9z/SKlEw
SaoDQHAptrNwBPg/BgQcce6aA0AudVHQQgv4PwZqmTD4mANA68Ds7BQS+D8k
Lk1b/JYDQGZYIya5H/g/1JOl7vOSA0Bdh5CYATv4P/AXqvWfigNASuVqfZJx
+D+ud7ru6ngDQEZ9I6xEePg/7h/J6aV2A0BCFdza9n74P/RYjnpbdANAOkVN
OFuM+D+8L3hctm8DQDbdBWcNk/g/Cs1WrVttA0Aydb6Vv5n4PyoZYJP7agNA
Lg13xHGg+D8WgI0OlmgDQPlrdtQipPg/ovDEfkFnA0DN9618
              "]], 
             
             LineBox[{{1.626594387755102, 2.1052745013130947`}, {
              1.6274486757918312`, 2.1043700906949256`}, {1.629083447619697, 
              2.1026319103602518`}, {1.6307182194475627`, 
              2.1008839047736183`}, {1.6323529912754284`, 
              2.099126095790113}, {1.7067389455782314`, 2.009232530360384}}], 
             
             LineBox[{{1.7099277210884356`, 1.817914610908197}, {
              1.7900722789115693`, 1.7040290703564223`}}], 
             
             LineBox[{{1.7932610544217735`, 1.4791201965296814`}, {
              1.873405612244896, 1.3554325079865164`}}], 
             
             LineBox[{{1.8765943877551003`, 1.112044840292504}, {
              1.9362087553637064`, 1.0212765469286467`}, {1.937881165580842, 
              1.0187848434941005`}, {1.9412259860151129`, 
              1.0138167298004133`}, {1.9428983962322484`, 
              1.0113406700262972`}, {1.9445708064493838`, 
              1.008870177131107}, {1.9479156268836548`, 
              1.0039466050550763`}, {1.9495880371007903`, 
              1.0014938851401611`}, {1.9512604473179258`, 
              0.9990474506257678}, {1.9529328575350613`, 
              0.9966074838486323}, {1.9546052677521968`, 
              0.9941741682171727}, {1.9562776779693323`, 
              0.9917476882057565}, {1.9567389455782307`, 
              0.9910796679416691}}], 
             LineBox[CompressedData["
1:eJwVkX0s1HEcx++YeVi1PCzRPBx3l3LNU/KQ+pykEnnIbD3czNN5iDxdRXIR
EWll6SJmmccaRZeKct/vz7MeLlNCCGOpqKXG2grXxx/ffffa+/15vz/bhxOW
cFSsxmKx7PCt/cfNjOc91NlCprY/4H4nBeVcVqMKmbUnUuXSRoGrV18g0kQ9
MWE7r4xCmsv7qFYd5Op4m9YLFPh5luYSXeS/j0y/ulNIb/Re7jdADpLsyN9K
4d2QZESwmS3M/LIYPLmBgtVqWXP+FrZQGDOo+PGHQAavq3DWFLn3XMCzaQJD
Pt/jPCywv+enCfQTEJwx8Krg4fydb5Z5CgJZZW68FSv0S66FyB4QGOmIYJ8Q
oL4sVsbcJbDgPmostcF+v+zKt0UENNv9dlbYI6/yi7vyCZgKu490OmL+wpN1
vpcI7KKuUbPOqO+/GXo6jYDv3qZMbTfM+6b9i3uWgFjBKxUA9vE99VOSCKS7
lT3224cscDSJTCBw68VGZbIn5lVlhSzGE2hwzZ2VHcJ5h3RrbiKBztZ/qhZv
9BtovPyTTGDUOclo3Bf1kuzMpBQCv5/N2qsCsF/RLyuSEtB2EvlYBGFeB8cr
JIeA+dMBsecx9Lewhj9eJ+DseDAj+iQy3y5VrZSAX3NbSUHw2j2qQsdrCUQ6
2MsfhuJ8fnhXzBMCF+V1rwci0C/LUTZ0E5DZmXxejMJ9Hm2qrRvGfZturhrG
IjfoSETzBLpstDbvjke/jnWQkkVh7KHULjgJ9U8aMcuGFHQeREdUp2C+f1FW
uTcFC8GEtDcN+zl36/WjKbjUBxbPSdE/tuTjn0sh+v7eV7aX0a+Xup7XRyHT
qnkm8Arq3eet2+cpFNdtWzl3FVl+b1KmxUBPjYGtohD7Z3q1ntsyMMG96jVV
hPOdRoPbDzCwVKUKUy9G3TFbnitigFs5J/MqX7u/uVj9GgNunJDGuArME3F0
+TUMBFZ86LtRhRzbnuFEGThl5j0tr0X/4SO3nUcZCCgopJF1bOFUuPSNeIqB
/y/OV3o=
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQzXzqyNR3axkdHCb1ns/327r/hLSih/1mID/q8m71
11v2P5g1LTFpG5B/cTOv+Lot+39I8lS37mR0YOATzNLP37Kff2bjlBV7GB0a
3mra5+tt2W83Pef4u0NA9V13NOKXb94fJvbogeAxRocD0oVmPImb9+dODf9l
chKonvXyulsSm/fPmeykW30eyA/UEbrWtGn/r36Jyex3gOr5LAPlHTbuF+Lv
W6N1H2jf1UqrDa827NfsYz7m+wjIN77THz55w/6Innc/Jr8A6j/09eWJvev3
b+04EqfwFchP2dK3au+a/Su8Tku0/wDyJ/7bceTR6v2zeC5devsbqF/Lu9mT
efX+hgn33XYzMTk0lGlMmGW8cr/PjF96YQJAvrwYK0/w0v32UYwv9wgD+YFb
LvH4L9lvJMOxWFmcyYFhQa6Lj9vi/eILRMU/ygLlW7o7G9UW7n+03OB/tzZQ
vnf6effomfuvZprv/KQH5F97xfCebfr+E9p2xZFGQD4fPxfTyin71673fq5m
CeRv+rnnzIL+/QsKgxb22gD5L/Z9zVrdtX+ScWT0F3sg/5Sj0o1Frfsrtqed
P+gG5Is0q5huKNufXZnbqeEF5F/4kLozPGN/nHWJc78vkN/wqeCwoMX+gL9V
f78GAPkSnswSC5Ls/5haZwkGAfkRi1el7860BwAQB+Ts
              "]], 
             LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAArnRvQJlYAkDgv7siR7PJvyhDjysq
WwJAgF/p23lxyb8bBZblkF4CQGDCexk+Gcm/Dsecn/dhAkAQNC5F2r/IvwGJ
o1leZQJAACzvhU5lyL/0SqoTxWgCQBD/HwibCci/2c63h5JvAkAw0nOdvU7H
v6TW0m8tfQJAAM6y0S/Lxb865ghAY5gCQPBi4vIPjcK/LagP+smbAkDwmGNI
KyDCvyBqFrQwnwJAYCxOdiSywb8F7iMo/qUCQACbaXSy0sC/0PU+EJmzAkCA
+152mQy+v2YFdeDOzgJAwCWOURBwtr8aH8nX+9ECQKCGu9Z1g7W/zjgdzyjV
AkAAGg/G85S0vzZsxb2C2wJA4M8ULD6ysr/qhRm1r94CQIA/bVcNvrG/np9t
rNzhAkAgqhZW+sewvwbTFZs26AJAAKnp+Gasrb+67GmSY+sCQIAydRYFtau/
bga+iZDuAkDAd6B26rmpvyIgEoG98QJAQGrnHhq7p7/WOWZ46vQCQEBosCCX
uKW/ilO6bxf4AkAADyiZZLKjvz5tDmdE+wJAAMAcsYWoob+n4OUUvPwCQIC8
nZ4ftqC/sgzQEw==
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQHSkv9dqZmdnhwVIuf80Hp/fzXIlz+cHO7GDw/0Tz
ZoXT+0vY2Y2D+JgdGrT/LDaWPrXfJS9cgE2a2UHh1aIXT1lP7H9i/eNUrgmz
Q8I8t8Bbmw7vnxHqc2iWObPDhj6f7AMqh/f75C/YedyK2eHDpju816Ye2r9l
kccKRUdmB4agpJuTSw/ub+Gc2XrVF6g/V/vJq7B9+1WuWzrYpjM7HMg8+Df7
8Zb9Nz70mmdlAeW/L+yRWbd5fw/XI73puUD3Gvy38i3ftP+LbZfsx2Ig3z1t
tTnrhv1Hltz6taQB6N6HV8/fkVu2v2Kf3qeLzUDzlKWu7ZqzeL/OjaaX/9qA
fGvPyj3iC/dP4da+EdELdM+9Xc6VXDP2JxdVb+WZBeSLvJ33+1X2fjOje1s1
5wL5BtUlUTMi7bk+OWxzWwDkMyz0nXStyv7uxsXbkhcD+S2P9F+ubbffUMi2
vWEZ0H7DsG85fyfYB3ZP2J+2HCjv53//ddUkewCw8a2w
              "]], 
             
             LineBox[{{2.543261054421768, 0.08269076111416052}, {
              2.545989616094557, 0.09195872654194215}, {2.547509775828892, 
              0.09713559039652786}, {2.5491589242421773`, 
              0.10276240260460945`}, {2.550808072655462, 
              0.10840018186368638`}, {2.554106369482032, 
              0.11970803466106483`}, {2.560702963135172, 0.142448703021548}, {
              2.573896150441452, 0.18839670948320686`}, {2.6002825250540123`, 
              0.28190321363832327`}, {2.623405612244898, 
              0.3652505542213942}}], 
             
             LineBox[{{2.626594387755102, 0.41997307264877604`}, {
              2.7067389455782385`, 0.6617366905648727}}], 
             
             LineBox[{{2.7099277210884427`, 0.8614638989080605}, {
              2.7900722789115644`, 1.0196583458870117`}}], 
             
             LineBox[{{2.7932610544217686`, 1.3126926123406524`}, {
              2.859937370151431, 1.3577393806833247`}, {2.8615748876627904`, 
              1.3588844912244027`}, {2.8648499226855098`, 
              1.3611798813951927`}, {2.8664874401968694`, 1.36233014209767}, {
              2.868124957708229, 1.3634821005900484`}, {2.8713999927309484`, 
              1.3657910730716138`}, {2.873037510242308, 
              1.3669480681223254`}, {2.873405612244898, 
              1.3672083810220337`}}], 
             LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAA8rEle6tB0AuJAbqALX8P6CYmcAT
sQdAgMkKDECt/D8K3HpIbrQHQE7JqwgCpfw/NnepDY+3B0CJ6i/sV538P2ES
2NKvugdAyRoLibOV/D+4SDVd8cAHQLqy4eF7hvw/ZrXvcXTNB0DDl9G0UGj8
P8GOZJt65gdAbGnm9wct/D/sKZNgm+kHQLynIeW3Jfw/GMXBJbzsB0DKUzpW
bR78P277HrD98gdAKj0htugP/D8caNnEgP8HQPBN2goh8/s/eEFO7oYYCEDy
0Y8F+br7P6TcfLOnGwhATlrtswu0+z/Pd6t4yB4IQLzZtYgjrfs/Jq4IAwol
CECbst+UYp/7P9MawxeNMQhAQPo5wx2E+z/+tfHcrTQIQAisizBZffs/KlEg
os43CEAT2hSjmXb7P4CHfSwQPghA0HpKhylp+z+sIqzxMEEIQHWTuPB4Yvs/
173atlFECEBKg+FOzVv7Py70N0GTSghAARn22IRO+z9aj2YGtE0IQEVervzn
R/s/hSqVy9RQCEBkx7oEUEH7P/w1O2oRUghANqqu87U++z/oHMcS
              "]], 
             LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAArnRvQJlYCEAzMj13mLj8PzOXT+BX
XQhABhJRG2aq/D+KzaxqmWMIQIkm1bvCl/w/tmjbL7pmCECy76TVeY78P+ED
CvXaaQhAeYqqxDaF/D84Omd/HHAIQCDn5w7Ccvw/5aYhlJ98CEDhT4fMHU78
P+yE4fkDgAhAggAWdD5E/D/yYqFfaIMIQNjXv8llOvw/AB8hKzGKCEAuR+tm
yCb8PxqXIMLClwhAC57rvdz/+z9Qhx/w5bIIQBong5I8s/s/V2XfVUq2CECg
voRDxan7P15Dn7uuuQhA4HkQQlSg+z9r/x6Hd8AIQMeUDhCFjfs/hnceHgnO
CEB0LFZKMWj7P41V3oNt0QhAaD9Dwute+z+UM57p0dQIQLqioFisVfs/oe8d
tZrbCEAlJl/JP0P7P7xnHUws6QhAeO+OGK8e+z/DRd2xkOwIQOepiuGZFfs/
yiOdF/XvCEBRELaaigz7P9ABXX1Z8whAIcdYPoED+z/X3xzjvfYIQET+vcZ9
+vo/3r3cSCL6CEDPdDQugPH6P6fg5RS8/AhAUZiwhJ/q+j+F08ji
              "]], 
             
             LineBox[{{3.126594387755102, 1.7120387455056256`}, {
              3.1271047153377305`, 1.711281880162874}, {3.1287610520437252`, 
              1.7088292546943917`}, {3.13041738874972, 1.7063825482071937`}, {
              3.133730062161709, 1.7015068024341398`}, {3.1403554089856875`, 
              1.6918253546120274`}, {3.1420117456916823`, 
              1.6894194555261564`}, {3.143668082397677, 
              1.6870192973879004`}, {3.146980755809666, 
              1.6822361160053003`}, {3.1536061026336446`, 
              1.6727376803501013`}, {3.1668567962816017`, 
              1.6540076656761857`}, {3.168402963503281, 1.651844935403092}, {
              3.1699491307249605`, 1.6496869082102936`}, {3.1730414651683194`,
               1.6453848944863796`}, {3.179226134055037, 
              1.6368365520909944`}, {3.1915954718284723`, 
              1.6199588237076525`}, {3.206738945578231, 
              1.5996828085111736`}}], 
             
             LineBox[{{3.209927721088435, 1.5960323999450425`}, {
              3.265811498469084, 1.524858778338404}, {3.2900722789115644`, 
              1.4955642452508386`}}], 
             
             LineBox[{{3.2932610544217686`, 1.4765574052736383`}, {
              3.3644621002807877`, 1.4009779922676426`}, {3.3661068060848574`,
               1.3993036000278714`}, {3.367751511888927, 1.397632219155294}, {
              3.369396217692996, 1.395963836162934}, {3.3710409234970653`, 
              1.394298437627518}, {3.372685629301135, 1.3926360101892736`}, {
              3.373405612244898, 1.3919092010471332`}}], 
             LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAABMrEle6tC0DkBC6tUE70P+7J8MYm
sQtANa6VlsZJ9D+w6J0ThbQLQF1cntgIRfQ/cwdLYOO3C0AZ0Q84TUD0P/hE
pfmfvgtAC7YyRtw29D98u5+DxMELQCRM1Zx3MvQ/ADKaDenEC0Bg6iPDFC70
PwcfjyEyywtA0imhd1Ql9D8W+XhJxNcLQKjVn07pE/Q/M61MmejwC0AROEcw
Z/HzP7YjRyMN9AtALy4psB7t8z86mkGtMfcLQFZwLuTX6PM/Qoc2wXr9C0Bu
8Q5iT+DzP1BhIOkMCgxAKXXSVFnP8z9uFfQ4MSMMQAwM0gC/rfM/8ovuwlUm
DEDiljftkqnzP3UC6Ux6KQxAiNecbmil8z98791gwy8MQE7tAyoYnfM/AGbY
6ucyDEDm8tpg8pjzP4Tc0nQMNgxAAwtcJs6U8z+LyceIVTwMQBIYI1eKjPM/
DkDCEno/DECswVK/aojzP5K2vJyeQgxA+uL/r0yE8z8WLbcmw0UMQBivpScw
gPM/mqOxsOdIDEBV38EkFXzzPx4arDoMTAxANrHUpft38z+hkKbEME8MQG7k
YKnjc/M//DU7ahFSDEDyKipuJXDzP/7bzd8=
              "]], 
             LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAArnRvQJlYDEBUWRIuz/PyP7BqkOzC
WwxA8h6PkGTw8j+3V4UADGIMQHKVjIae6fI/xjFvKJ5uDEDq8uOtItzyP+Pl
QnjChwxAuCWe1mrB8j9Cn86iKosMQBaiwHDSvfI/oFhazZKODEAmBUmQO7ry
P17LcSJjlQxApyy2WRKz8j/asKDMA6MMQLBiyu3RpPI/0nv+IEW+DEDeST7i
l4jyPzE1ikutwQxApCiGKReF8j+Q7hV2FcUMQPadIOCXgfI/TmEty+XLDEBt
uSeWnXryP8pGXHWG2QxASk4MArps8j8pAOif7twMQFK0Y6BEafI/iLlzylbg
DECQQQek0GXyP0Ysix8n5wxAC1Nh1uxe8j+l5RZKj+oMQD6NtQJ9W/I/BJ+i
dPftDEDFVZGPDljyP8IRusnH9AxAZjQ3xjVR8j8hy0X0L/gMQDt5s23LTfI/
gITRHpj7DEAipRtxYkryP6fg5RS8/AxANwQ/gj5J8j86KLA6
              "]], 
             LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAWR8a60MDDUCGbBPrpsXxP52wdJ7Q
BQ1AEy1dN5nD8T/8aQDJOAkNQHo07dTbwPE/utwXHgkQDUCEcurBZLvxPxmW
o0hxEw1AFdJtD6u48T94Ty9z2RYNQO1EsZXytfE/NsJGyKkdDUDYhbtIhbDx
P7KndXJKKw1A9TImL7ml8T8RYQGdsi4NQOBh5CgJo/E/cBqNxxoyDUCw9B1U
WqDxPy6NpBzrOA1AkUKHOwCb8T+qctPGi0YNQC5iPTZakPE/CSxf8fNJDUBV
htOjs43xP2jl6htcTQ1Agk0gPA6L8T8mWAJxLFQNQORuoOnGhfE/hRGOm5RX
DUDO6jn9JIPxP+TKGcb8Wg1A9khWOISA8T9DhKXwZF4NQH5dLZrkffE/oj0x
G81hDUB34PghRnvxP1GLkL9mpw1A6hSZprtG8T8A2pGN
              "]], 
             LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAArnRvQJlYDkAMJJNMXZvvP2RCCa8v
XA5AnA7SI5uY7z+k+fAfTl8OQHqCkrY2lu8/5LDYkGxiDkBUPNSn05PvPyNo
wAGLZQ5AdL4P93GR7z+i1o/jx2sOQMB4XK2yjO8/n7Mup0F4DkD6I+1qRIPv
P5ptbC41kQ5A/1Tpuqhw7z/aJFSfU5QOQJLCiU9bbu8/Gdw7EHKXDkASaFE6
D2zvP5hKC/KunQ5AqgKKEHtn7z+VJ6q1KKoOQMacRrNiXu8/kOHnPBzDDkAm
EJBycUzvP9CYz606xg5AmufhNTlK7z8PULceWckOQBiZokgCSO8/jr6GAJbP
DkCWG+VamEPvP4ybJcQP3A5Alk/SJ9Q67z/MUg01Lt8OQO7991umOO8/Cwr1
pUziDkBbYo3ceTbvP4p4xIeJ6A5Al5SYwSQy7z/JL6z4p+sOQOwnWSX8L+8/
COeTacbuDkCG9x7U1C3vP4dVY0sD9Q5AkgRZEYop7z+iT9xcZfgOQBMPA1A4
J+8/vElVbsf7DkA63oES6CTvP6fg5RS8/A5AieNFDEEk7z8jm8CY
              "]], 
             LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAA8rEle6tD0CANEKiO2DsP0URYQwV
rw9ASeclDP9f7D9gC9odd7IPQHW1H5RNX+w/egVTL9m1D0BjnB0xnV7sP5X/
y0A7uQ9A8Px94u1d7D/K871j/78PQKSh3X+SXOw/NdyhqYfND0A0DUWT6Fns
PxAuaPiv0A9A3HhQ6ktZ7D/sfy5H2NMPQAR5sS2wWOw/pCO75CjaD0COrFl3
e1fsPxRr1B/K5g9ANvR0Bx1V7D/6fANLBgAQQA1SMqOLUOw/6KVmcpoBEEC9
Z8KA/U/sP9bOyZkuAxBAgDUNQnBP7D+yIJDoVgYQQC+dn21YTuw/asQchqcM
EECsnzhZM0zsP9kLNsFIGRBAdtraBBNI7D/GNJno3BoQQFxvL9uSR+w/tF38
D3EcEEAtTT+ME0fsP5Cvwl6ZHxBAaGlBfBdG7D9+2CWGLSEQQATDCrqaRew/
bAGJrcEiEEDQmj3QHkXsP0hTT/zpJRBAXtqIgylE7D82fLIjficQQMefdB+w
Q+w//5odtQgpEEDvY/VqOkPsP40rsU0=
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQHb7LfIGPjoDDlJWLVvW/eWV/x2PRiyR9AYdU676t
dUD+qUJWge8GAg6dri9Yy4H8HbMyzLuNBByM74kzFAD5yw6fjpM3EXBofB6/
OBPIn/JGr22zqYBD5mKm98lAfpPopLXu5gIOdzc7PooD8gvsvl65bSHg8Ekq
riYKyI9Lj/iTbyXgwG09Y08YkO8zYbcyi42AA991/UXBQL7VTjnvGbZA9wml
6AQC+RqPGot07AUcDIuKo/yBfDHupzMPOAg4rL49W9sPyGcx8TgY4iTg4DlN
ar4vkP8pZvWLF84CDmreOltA/AetfAK1rgIONay8WSD159YVmgu6CzgwGf/Y
DzJvz/UrcUs9BBwClmhsBdm3isGizdJLwMG594ZHCJA/Q3P22rPeAg4JrY5V
4UB+4Icirrg6AYcPHT0/P7x9ZQ8Av6qbjQ==
              "]], 
             
             LineBox[{{4.126594387755099, 0.7977501470057284}, {
              4.182592701217326, 0.7996239642047108}, {4.18423296441218, 
              0.7996812236264739}, {4.187513490801887, 0.7997960635191884}, {
              4.194074543581301, 0.8000269633789653}, {4.195714806776155, 
              0.8000849291478623}, {4.1973550699710085`, 
              0.8001429866456164}, {4.2006355963607165`, 
              0.8002593676320662}, {4.20227585955557, 0.800317686520234}, {
              4.2039161227504245`, 0.800376087936414}, {4.205556385945278, 
              0.8004345695781038}, {4.206738945578231, 0.8004767808147955}}], 
             LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAAWXiSvfWEEAbFnHn0SPoPwjSJVSH
1xBAYCw62w4k6D9071hQNdkQQJNG88zEJOg/3wyMTOPaEEDII0C4eiXoP0oq
v0iR3BBALGfOmzAm6D+2R/JEP94QQFfHS3bmJug/jIJYPZvhEEAkNMsKUijo
P/efizlJ4xBANzcpwgcp6D9ivb419+QQQPhMLmu9Keg/OfgkLlPoEEDMSueM
KCvoP+Zt8R4L7xBAnPQy6v0t6D9RiyQbufAQQIjt5gmzLug/vKhXF2fyEED3
6LoQaC/oP5PjvQ/D9RBAdn2EztEw6D9AWYoAe/wQQDKW/OWjM+g/mkQj4uoJ
EUBG9MD2QjnoPwViVt6YCxFAKLWRLvY56D9wf4naRg0RQPKzDDipOug/R7rv
0qIQEUAyEs26DjzoP/QvvMNaFxFAzr0yW9c+6D9fTe+/CBkRQJYLDPyIP+g/
ymoivLYaEUCg7zpkOkDoP6CliLQSHhFASdR+hZxB6D8Lw7uwwB8RQPO/CDxN
Qug/duDurG4hEUBUItK0/ULoP00bVaXKJBFAZm8X6F1E6D+Y5C7AWyYRQJQz
wtQBReg/5K0I2+wnEUDyhGOHpUXoP/+aHbUIKRFA8HUKPBlG6D+yPtSp
              "]], 
             LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAArA+N9aGBEUCreXUhFCblP14SOgte
hBFA/O82g10n5T+q2xMm74URQIKdj1cZKOU/QW7HWxGJEUA3wVMNjynlP/rY
6UbEihFAVRYTkVgq5T+0Qwwyd4wRQPSMEE8hK+U/JhlRCN2PEUCJ6Fd2sCzl
PwzE2rSolhFAK9ilWsUv5T/YGe4NQKQRQHKAOcfINeU/koQQ+fKlEUBC51eN
hTblP0vvMuSlpxFAhC8sgUE35T++xHe6C6sRQMi4Mu+2OOU/pG8BZ9exEUD0
WPrRlzvlP3DFFMBuvxFAqjHUJTFB5T8qMDerIcERQIBoOnrgQeU/45pZltTC
EUBDI5HyjkLlP1Zwnmw6xhFAm08ETelD5T8Q28BX7ccRQJpAIi6VROU/yUXj
QqDJEUAkuTMxQEXlPzwbKBkGzRFAKhFVm5NG5T/2hUoEuc4RQKNZfgE8R+U/
r/Bs72vQEUDe/82H40flP2hbj9oe0hFAm0LYLYpI5T+qRchfs9MRQHazaGQk
SeU/8h2syg==
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQzZT6yOv7NUGH4i7mjssZj+2nzv422/y6oINU+v6Z
b4B8PzbJ9lc3BB3+iGlNn5r52J6j0Lpo7i1BhzJWkeW2WY/tD92OjQ24I+jg
skX/5BMgv9qtwYP5nqDDla1Gf7uyH9u/kz4ql/lQ0EE+/MrMKzmP7a8c8ztt
8kLQIUyral5M/mP7+TJJKme+CjrIqkouty95bG9lrK2X9F3QQeEz266zQP4V
zy/mP34IOvREX/gVVQq0v7zNW+WPoAPflQ2sxWWP7QsuriqqYRJy6I71tJ9Z
8djeoe3zAR1+IYeZf9fY7at5bH9rzp5ThwSEHN5bqOrY1z62L9nceiVCSMjh
B0eF+34gf8UD8RctokIODHoMHHvrHtsLWtvw35UWcuh0TNq8ruGx/ZpAVsli
WSGHx45pQpqNj+3dMs4pccoLObjsUl+wCMivmppgZqok5MBm1Ogxuemxvcga
TYfTykIOiVJ5yVzNj+3XHfrkmagq5HDE69DaBiDf4+bu4O9qQg67eNapfwPy
H71vie3VEHJQ/5t8Mavlsf2/WbJbOTSFHM5V1En0AfkAaZC5Xw==
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQHbbLfIGPjpDDTrEZWWI5D+29vFa2PNUTckhNdo05
C+Q/SSjqqzYQcojTUGW3yX1oX1duPUPQSMjBpvXB05VA/qYlZ1fbmgo55Gux
OzTnPbT32T1t62UzIQeZGrY974D8Zxfj92daCDmUlHLmRuY/tJf6//HSVGsh
h5r4qHydgof2zZFiv946Cjm8+JXw70ThQ3u5gvvMLc5CDleNl2vrFT2039G2
glfKVcjhMMvKCZOA/DebrRTdPIQcLr5NZo4sfmgfwhfvMc9PyGGh2Jlpd0oe
2qscXj7NL1rIIV3jwZV95Q/tz+n8WHInRsihfGPqJ9GKh/YV0zw2Z8UB3b9T
JywHyD+d+fJ8W6KQw5qEjE9ilQ/tiwS0OfenCzk81Y7uTq56aC9TVS3umynk
0PdyyYstQP7Rx6dVb2cJOSQqG05grX5oL7E9x+l7rpBDjpXxgSVA/v7YddX6
JUIOVSZ6m2/VPLTPOP6vc2+pkMPNXecL1Wof2gsZ+s/wLhdy+HNOpb4QyN8z
a/6ymxVCDncMDt/eDeSnsXzYkl4FDH8Ppw7Wuof2AnkOh79WCzlMULJu9QPy
d16fcLG5VsihIs/j8jQgP+RDEVdcnZCDWddNnX1APgA5t9Lw
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQvYa/9+vCRiGHRdmbpU943rNPqLvEtadZyOFNoenc
cq979psDi9VvtAk5NH17Klbufc8+6seWBIFeIYfJm6bopPves2dJYs2f1yfk
0FOUpvAAyF93OrRWZ4KQg7Fm051wv3v2jPO/zfSYLOSw0GDPJmf/e/YrXC0u
N8wUcnh69/xvnsB79l8n7Xb9uFTIwTqmRzc95J79vD/cIfXLhRwMdi91PQvk
e6TFJPGuFHKov3vY2ij0nv0cy791mmuEHK7Pv3j8B5Dv9MBuR+ImIYdLE9k6
KsLv2U/QPaR1aZ+Qg/27qm/OUUD7LKI5mw4IOfwSEj46H8jf7/zlueEhIYeo
zANRv4D8d5FqSyceFXLw+hj3eHX0PXvW1P3NjseFHPxLIm4xxdyzlymISPp4
Qshhw5byBRFAvndbl3zgGSEHffegRQyx9+yTJir/Yzgn5FCxX+NREJBfNWfP
nQ3nhRzWaUb/XAzkT1weujvhopDD1jl/Xn4G8ldsejdT4LKQQ7ef0januHv2
q1xPxG8G8h8qzpFNAPIBWqe+Aw==
              "]], 
             LineBox[CompressedData["
1:eJwV0G1I0wEQBvA5wkBXQdfSWrjZKtQiWylhkF04ITSsZvSKqOtlLpOkZpak
lcpS2Uwd5tJKlyZa82VTlzk2nNh004mYziD8ZCXZyNGQ0BV2/w/H8fvw3MET
Lr0lucZmsVhRNMzWb1Iv6x4DVi8VmS9nOI/Vd8fElJYCrrh+pV4n18gUohAl
oNQXN55NLp7x7T1aDpjcG7vtLrlAdShysoLMfuUtIN9OuLPnigpQNhVS+5As
NfwWlD8FXEpTJZWRbxan/k2qBnyEymkVOS+1d5ajAYzvsOyuJpct51VWPQM8
olne9Zz5b3fLJVpAbn+u+wW5oe5w4pZ6wJKasHNN5M64FX/dS8Cmk057K7k/
6NLsxUZAq4lrbifbvgwYeTrAAev+Uj3ZqedVzr0GvJ/WIewiTxc+kDe2AAbf
EzYYyHMpc+LMVsB1jh2eHvJ3frxA2EZ5R1ioibxiW3O3vgPc4D24foDM1mQY
szoA3/uiXWYy56pNHdUFuBATrLCQubE75Z5uwAJ15D8rOSywRNxpBBQF/5AP
kiNm5/m5vYD7PjeZbWRRm9gvMgEeF+p8Q2RxUqCx7wPgWr6W95GcwpOp8810
T8DZaCef94xkxVkAa8/afjLOsESI/VbAP775vhHyjcpyvmUQsEWizRklK9IX
V4uGqH+BHxzkwgPJbhwGtJwOf8tYGaA3sO2AoQGhIie5aoqjHh4BZGd+bWdc
35yTpXQAvtGWcMfIzYqJhBNjgPauRQVjfWI0P8gF+EQR6GBs2lq1OjZB/UrN
m8fJgwveGfUkoFf5TcLY0X/GcGoKsC/7QgXj9sTR9J5PlN9e0c34P/6oPmE=

              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQbbLAJ+blvVP20zyZTtSvYXG4Mz876KDOafs+eUbR
a0C+JPMZ5vnxp+2TKiRf869lcZh0sict6uhpeyu9O4LtQP45nbfiFj9O2++6
uybjCJDPPcH3pKj2Gfsz/zo+MK1jcWgJ49O5OOGMfcaJ2fObgfyyx/0f3WPO
2vdMcLgweT2Lwya3D4tU+8/aT9jZx3IbyH+/MiCE+dBZ+zV+Ck3KG1gcMgoE
t+9TP2d/JudPyg4gP+rvpBrTz+fs5y1sl/m0kcVhPvfpZkHXC/YOkTseLN/C
4mBnWx3TEHfBfgmHNSfrVqB/8rRN35dfsL8kmbgyGciXuNT97MyqC/af0ndG
q25jcZg4w8ezQ+CivYPqpqu7trM4GJz6o/hd86J9zuUGDpUdQP/9XvMr1fmi
fUnwxRN9QD5XPO8a57KL9ss6Zv7J2Mni0Kx6ju//7Yv2K8odqgx2szgohdc9
z/160f5F1ZakZUD+gQ69A3f4LtlvKKx+K7uHxeHP677CXY6X7He4i3wR3Mvi
MEvW3ksz+pJ9ls/jkj4g38L/vdKMkkv2H4r/L+TZx+JwrWH+b7a+S/YrDG/X
9gD5D9bfDOyecMleqGeRzUwgHwA3IdQk
              "]], 
             LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAXX1orA8N5D+aBgkvPssBQMEN9zBx
EuQ/aIWhcm/MAUDsNEm7HiDkP6YNl+R4zwFAQ4Ptz3k75D/UF30hktUBQG6q
P1onSeQ/WLkn46HYAUCa0ZHk1FbkP8SAE7az2wFA8B82+S9y5D+A8Nx83eEB
QJ68fiLmqOQ/wEQkCUnuAUD49Q91UhblP7BMkeB7BwJAIx1i//8j5T9Az2l1
qgoCQE5EtImtMeU/lo+WzdoNAkClklieCE3lP6Axs7NAFAJAUi+hx76D5T88
sFLIICECQH5W81FskeU/BNhK6VwkAkCpfUXcGZ/lPziepqSaJwJAAMzp8HS6
5T/k+LjVGi4CQK1oMhor8eU/Rsynji07AkDYj4Sk2P7lP0p/O/B1PgJABLfW
LoYM5j9+OiXCv0ECQFoFe0PhJ+Y/TuGnoVdIAkCGLM3NjjXmPxACjqSlSwJA
sVMfWDxD5j8WvGQC9U4CQAiiw2yXXuY/PvFWuZdVAkAzyRX3RGzmP4pRowfr
WAJAXvBngfJ55j/8O0KbP1wCQIoXugugh+Y/ROTDbpVfAkC1PgyWTZXmPypU
tXzsYgJARy1C/pqd5j9gHKEW9GQCQEWWyqs=
              "]], 
             LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAsz401ocG8j9iLzWddRUEQFYEYhA/
EvI/IKCEmicZBEDyJdlPrR7yP3AEqboHHQRAwLaUb+Qk8j9yMtpK8x4EQI5H
UI8bK/I/mgm919sgBEAqacfOiTfyP6hxed2jJARAYqy1TWZQ8j+qBF5SDywE
QDA9cW2dVvI/mtyggeItBED+zSyN1FzyP+a6h5myLwRAmu+jzEJp8j9SOl15
STMEQNIykksfgvI/RO5PtFE6BEBBuW5J2LPyP4ItrvbJRwRADkoqaQ+68j+2
KUSLakkEQNza5YhGwPI/jkvE4QdLBEB4/FzItMzyP5qEFss4TgRAsD9LR5Hl
8j/wIXdNc1QEQH7QBmfI6/I/fEnFr/lVBEBMYcKG//HyP/DOVsF8VwRA6II5
xm3+8j9siRXpeFoEQCDGJ0VKF/M/ojkrC0lgBEDuVuNkgR3zP0AisKe0YQRA
vOeehLgj8z8KBU/hHGMEQFgJFsQmMPM/8PDrIuNlBEAmmtHjXTbzP56hdyZB
ZwRA9CqNA5U88z8Enzi+m2gEQMK7SCPMQvM/OtD65/JpBECQTARDA0nzPyYn
jKFGawRAoRYhf81O8z9WHoABgGwEQG0JxqI=
              "]], 
             LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAXenegDKx+D+EhXqcWJgCQCLVoFCI
tPg/IA7HKByXAkAebVl/Orv4P2T7N72clAJAGgUSruzB+D/ynqndF5ICQBad
ytyeyPg/YrlYio2PAkASNYMLUc/4P8LzjcP9jAJAC2X0aLXc+D+4WenczYcC
QAj9rJdn4/g/uvXcvS2FAkAElWXGGer4P8Cz8SyIggJA/MTWI373+D9KjJ+3
LH0CQOwkud5GEvk/TrankDRyAkDM5H1U2Ef5P2qFhQdAWwJAyHw2g4pO+T9S
TVYkSVgCQMQU77E8Vfk/gtyD3UxVAkC8RGAPoWL5P6iiSipETwJArKRCyml9
+T82x81V8kICQKg8+/gbhPk/gAxvfdA/AkCk1LMnzor5PyLXd02pPAJAnAQl
hTKY+T8+W8rtSjYCQI1kB0D7svk/PArOY04pAkCK/L9urbn5P06spQICJgJA
hpR4nV/A+T/442hZsCICQH7E6frDzfk/qmGEN/0bAkB6XKIpdtT5P/ROasOb
GAJAdvRaWCjb+T/mR1cQNRUCQG4kzLWM6Pk/JvMD91cOAkBqvITkPu/5Pyy4
x5XhCgJAZlQ9E/H1+T+W1pr/ZQcCQE3Byyl4+fk/QDnCMI4FAkDumN3r
              "]], 
             LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAABZSJK91b/z+43OPwe9PnP+tlJcV2
Yf8/WOFaFf7D5z9aaFhrUGj/P3gL4bwYsec/yGqLESpv/z94WM4HQ57nP6Rv
8V3dfP8/eGMJE8h45z9ceb32Q5j/P1Cgr+qeLuc/zIxVKBHP/z94h/er2J3m
PzqPiM7q1f8/GPv46hyM5j+okbt0xNz/P4jNUzV3euY/hJYhwXfq/z+4EB2X
b1fmPx7Q9izvAgBAWEAsRXIS5j/W2cLFVR4AQDhVlwcKjeU/DVvcmMIhAEAI
huq82XzlP0Tc9WsvJQBAmKCFocZs5T+y3igSCSwAQKArpL75TOU/juOOXrw5
AEBQP17E0Q7lP8VkqDEpPQBASL93bZf/5D/85cEElkAAQEjh1dl98OQ/auj0
qm9HAEA4HrnLrtLkP6FpDn7cSgBA0DeNOfrD5D/Y6idRSU4AQBi9PztoteQ/
EGxBJLZRAEAYIZFF+abkP/w1O2oRUgBAcPzjrHql5D/dwLfv
              "]], 
             LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAArnRvQJlYAEAQlaP5hwXaP/Q7q6/c
WwBAEMrSJ+/r2T9KY9OLOV8AQICkPvTR0dk/oIr7Z5ZiAECQ7Y+h+bfZP/ax
I0TzZQBAkF8qBmee2T9N2UsgUGkAQDAmwPgahdk/+iec2AlwAEBATRXkWVPZ
P1BPxLRmcwBAYB+bi+Y62T+mduyQw3YAQAB+oB69Itk/U8U8SX19AEBQYEdn
S/PYP6xi3bnwigBAIIlOLgSY2D8CigWWTY4AQHDradv3gdg/WLEtcqqRAEDA
+ZI4PGzYPwUAfipkmABA8HOPZ7pB2D9enR6b16UAQLDw61mk8Nc/ENhffL7A
AECAIQeK7F7XP2b/h1gbxABAwAxm+lBO1z+8JrA0eMcAQADIjKgTPtc/aXUA
7THOAEAAzIActx7XP8CcKMmO0QBAQIHDkJkP1z8WxFCl69QAQKCerZ/dANc/
whKhXaXbAECwKtnmjeTWPxg6yTkC3wBAQDngyvvW1j9uYfEVX+IAQEBjDqHO
ydY/G7BBzhjpAEDwgeR2prDWP3LXaap17ABAkI3pHq2k1j/I/pGG0u8AQBAR
xAkcmdY/dE3iPoz2AEBA3SnzNYPWP8p0Chvp+QBA8KrsleJ41j+n4OUUvPwA
QHD4MamJcNY/1Bzlew==
              "]], 
             LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAA8rEle6tA0CgBSc9eEPAv/xwkbj0
sgNAAFuHK+CFvr/PMPS4EbYDQCD3qd5lRr2/ovBWuS65A0BAJA+wwAW8v0lw
HLpovwNA4C1YQP6Aub+Wb6e73MsDQGD0Q0rVabS/aS8KvPnOA0CAx5MbQCGz
vzzvbLwW0gNAIARJRZHXsb/jbjK9UNgDQEBbSJbega6/MG69vsTkA0AAH0yw
rQ2kv8ls08Gs/QNAAGgDDLHYYz+cLDbCyQAEQACSmcp5h38/cOyYwuYDBEAA
zYcBcqWKPxZsXsMgCgRAgPGpodk/mD9ia+nElBYEQAAg64lhI6c/NStMxbEZ
BEAAXIVayuipPwjrrsXOHARAwHZWUPuvrD+vanTGCCMEQOCC4Y3RIbE//Gn/
x3wvBECAemNZxL+2P88pYsiZMgRAoCkekVgpuD+i6cTItjUEQCALHGe+k7k/
SWmKyfA7BEDgzVXK9Wq8Pxwp7ckNPwRAYJsyycLXvT/w6E/KKkIEQAC1q0lY
Rb8/lmgVy2RIBEAwXVLhaRHBP2koeMuBSwRAoOxKnFrJwT886NrLnk4EQKCs
jRWrgcI/D6g9zLtRBEDAP3suWjrDP/s1O2oRUgRAINw3rTZOwz/k0tT/
              "]], 
             LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAWR8a60MDB0CC4j/LSk76P3Uqua4K
BgdAwp0RhnJL+j/gbZo2ZQkHQCkeUDUHSPo/SrF7vr8MB0D/4QuooET6Px44
Ps50EwdAHLA+z+E9+j+Iex9WzxYHQEH2Q3+JOvo/8r4A3ikaB0AUNuPpNTf6
P8dFw+3eIAdAseS45Zww+j9wU0gNSS4HQGTWqzWjI/o/wm5STB1JB0ByVXYP
jwr6PyyyM9R3TAdArGJERoEH+j+W9RRc0k8HQJ2tuw94BPo/a3zXa4dWB0CJ
ftBPc/75PxSKXIvxYwdA1iaKN6Dy+T9+zT0TTGcHQBC0wba27/k/6BAfm6Zq
B0BST2yy0ez5P72X4apbcQdAYA2fExXn+T9mpWbKxX4HQCW7EyzR2/k/0OhH
UiCCB0AKgJ89C9n5PzosKdp6hQdAq4YwtEnW+T8Ps+vpL4wHQJeqWcTT0Pk/
evbMcYqPB0AFgeNXH875P+Q5rvnkkgdAqzlWRG/L+T+4wHAJmpkHQAX9rxsc
xvk/IgRSkfScB0Ap0moAecP5P4xHMxlPoAdA+Eq2MdrA+T/2ihShqaMHQGal
c6w/vvk/Yc71KASnB0C20IBtqbv5P1GLkL9mpwdAmqMTp127+T8CqtRS
              "]], 
             LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAWR8a60MDC0AyQyeLtdz1PzCpc4Bd
BQtA21s8qfLY9T/zxyDNuwgLQPxAkH7s0vU/eAV7ZngPC0B+FFW16Mb1P4KA
L5nxHAtAlw64+QKv9T9En9zlTyALQIKxFoUQqfU/B76JMq4jC0AXyrDUIKP1
P4z748tqKgtAy9sotEmX9T+Wdpj+4zcLQE5X/B28f/U/qWwBZNZSC0BxB2r4
IFH1P2yLrrA0VgtAiPCFWllL9T8uqlv9klkLQLoC4FCURfU/sue1lk9gC0Dk
MtPuETr1P7xiasnIbQtA/iUkoCsj9T9+gRcWJ3ELQKCuhVR4HfU/QaDEYoV0
C0BZAI6Gxxf1P8bdHvxBewtAkoCMWG0M9T/QWNMuu4gLQB/E3GfW9fQ/kneA
exmMC0BTAPe8NvD0P1WWLch3jwtA7CQIepnq9D/a04dhNJYLQOaveiFm3/Q/
nPI0rpKZC0AwopoG0Nn0P18R4vrwnAtAHo8uSTzU9D/kTjyUraMLQE3WVdwb
yfQ/pm3p4AunC0A5m8Mnj8P0P1KLkL9mpwtAeV9yk/nC9D/E+MYr
              "]], 
             LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAWR8a60MDD0Bg3i1DqOztPww4wKLt
BQ9AFEdxvnDr7T8nMjm0TwkPQJaUpDDm6e0/XCYr1xMQD0CYtncf1ebtP3cg
pOh1Ew9AeAURm07l7T+SGh361xYPQE3xG27J4+0/xw4PHZwdD0C4wX4Yw+Dt
PzL38mIkKw9A7L1ZcMba7T9N8Wt0hi4PQE4aXplK2e0/aOvkhegxD0DNX88V
0NftP53f1qisOA9AQr/9Bt/U7T8IyLruNEYPQK60wLwMz+0/3piCekVhD0D3
uJcIp8PtP/mS+4unZA9ATYuqLUDC7T8UjXSdCWgPQOJfYZ7awO0/SYFmwM1u
D0DgNdFgE77tP7RpSgZWfA9AyNtdXJS47T/PY8MXuH8PQMCmM9E3t+0/6l08
KRqDD0BCud2N3LXtPx9SLkzeiQ9AETfJ3Cmz7T+KOhKSZpcPQHbEu8PTre0/
pTSLo8iaD0AOMfFpgaztP8AuBLUqng9A7sIxVDCr7T/aKH3GjKEPQFaLBILg
qe0/9SL21+6kD0Asn/DykajtP1GLkL9mpw9Asl5TpJ6n7T/kqslR
              "]], 
             LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAV7o3oEwsEUA+fIF6ybPmPxTTb0Yx
LhFAdOYvWbe05j+sZSN8UzERQBhgheM/tuY/+C79luQyEUBYWQeYA7fmP0T4
1rF1NBFAhgnA6sa35j/biornlzcRQAZF0WZMueY/CrDxUtw9EUCALY+dUrzm
P1Z5y21tPxFA/vDbJxO95j+iQqWI/kARQHM6ckjTveY/OdVYviBEEUAbiZlI
Ur/mP2j6vyllShFAdsvmKUvC5j/HRI4A7lYRQBKnCJ0nyOY/Eg5oG39YEUCI
P+wZ4cjmP17XQTYQWhFAmhseHprJ5j/2afVrMl0RQCa22rgKy+Y/Jo9c13Zj
EUA5Pwcf5s3mP3JYNvIHZRFA3mKjvZvO5j++IRANmWYRQCEyjtxQz+Y/VbTD
QrtpEUDOLuuXudDmP4TZKq7/bxFAITpV7YTT5j/QogTJkHERQDM273Y21OY/
HGze4yFzEUC+jDV659TmP7P+kRlEdhFAF0KT6kfW5j/+x2s01XcRQDiPFFb3
1uY/SpFFT2Z5EUDGGRY4ptfmP+Ij+YSIfBFASWN/XALZ5j8u7dKfGX4RQHPx
XZ2v2eY/VPByCl5+EUAMyqAczdnmP+bY0DQ=
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQzZT6yOv7NSGH4Ilsjt3yN+3fXd5pqnBDyOF21vPC
HUA+2/0gkQs3hRx2PFsd/RPIl331+lP9bSGHICs+f0uFm/YmX1su6t8VcviR
+tq3AshP5t7e1/9AyEHj5cTSz0D+AXNpTv/nQg4uwU4L7ynetK+e8Pjv2S9C
DivZREW6lG/aT5pdc6f2m5DDfaXsRbuB/FXLRHfr/hBysFy3P+oNkH9jj3tF
728hB76dmoHeKjftzV6u/uTDJOxgdWdS938g3/eLy8U/zMIOl5rSF2ip3rRP
+X93/RpWYYcf96+/CwHyJ4sK5PJwCjsUaqU6LAfyPziWPD/NL+yw5JXFWye1
m/YcvrzHqgWFHdZOeceaAeTLRyxboi0s7MAo9zu9B8j3y7uR2C0m7MDF9Yv/
MpCfWlnoYC0h7HBQ4m7kVyC/poVL/rWksAOv248vYuo37VfPsrnjJSvscKd9
u1oEkH9o6dVdv+SEHYxLvA+WA/m3NuTNXKUg7HBe9PuWaUD+x93sFVFKwg4R
mzYybwXyOY4vCONSEXbwMStafwnIV7hkabpLVdghVEN/13sg3/zuJeEsdWGH
CXPuqfJo3LT/P0t2K4emsMNSac/bakA+AFllzdM=
              "]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQHb7LfIGPjrDD2jOX8jcmX7YPS2w5/V5X2MHqQfX2
o0C+23nmY6KGwg6hXFJVr4F8tdVMuxPNhR202dldjFIu28slOe34YiHs8KKw
idEZyBeTbNrabiXs8MSvMT4YyGdrZ9yw1lbYIeAHF1MxkP80iWHpT2dhh30a
hizrgPw7kg6LelyFHWpWrH+xG8i/cqF+vry7sMPrgIXlJ4H8I3b/Z7p6CTtM
MD828zGQv0TqX9/EAGEHh/2WgiKpl+3nXLTtUQkSdmj8WJUtD+RP6ajt3B4s
7NB55WmlFpDf8u1P890wYYes+f+32wP5KZd+V2jGCjtwPS+4lQbkx3Ral+2J
E3YI/GHyPR/ID3GoLvZPEHb4OGXCxQog32Xdr9zSZGEHxtg1hzuBfJtUq2yO
VGGHuLfb704E8k1kqjJmpwk77Dj0cedMIF+l62fSwUxhh6eLy/auAPJlHC0T
QrKFHTYyMD5fD+SL/KiIfZ4j7CBoYnF9G5DPkvYjnLdA2MH4m6TAESD/seN3
n8gyYQe/clemO0D+rR9mXm/KgeYH36l/CORfWl/mXl8p7CBecebMMyD/VNo2
F6FqYQcXe+VXr4H8Q7LfHJfWAP0r+ubGByB/1xVTe4s6YYf+fINZX0H++1DE
FQfkFxnzcn0D8gFLeebk
              "]], 
             
             LineBox[{{4.959927721088435, 0.10416663557040991`}, {
              4.960530332532448, 0.10416663824083351`}, {4.96224640059448, 
              0.10416664494424606`}, {4.963962468656511, 
              0.10416665043456624`}, {4.965678536718544, 
              0.10416665485890671`}, {4.9673946047805755`, 
              0.10416665835579093`}, {4.969110672842607, 
              0.10416666105505602`}, {4.97082674090464, 
              0.10416666307775532`}, {4.972542808966671, 
              0.10416666453606013`}, {4.986271353462927, 
              0.10416666633519218`}, {4.999999897959183, 
              0.10416666666666666`}}], 
             
             LineBox[{{3.709927721088435, 1.0457430995382329`}, {
              3.775215054075053, 1.0276587151150072`}, {3.7782608649107106`, 
              1.0268496783711858`}, {3.7797837703285397`, 
              1.026446253614993}, {3.7813066757463685`, 1.026043556430506}, {
              3.7843524865820264`, 1.025240340342831}, {3.7858753919998556`, 
              1.0248398192568244`}, {3.7873982974176843`, 
              1.0244400213767206`}, {3.788921202835513, 
              1.0240409456448303`}, {3.7900722789115644`, 
              1.0237397859518813`}}], 
             
             LineBox[{{1.0432610544218324`, 2.4464877649341057`}, {
              1.1233850175595488`, 2.5046669865772335`}, {1.123405612244898, 
              2.5046800741910076`}}]}, 
            Annotation[#, "Charting`Private`Tag$266493#2"]& ], {}}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"xdot Gain\"", TraditionalForm], PlotRange -> {All, All}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Gains from backward integration\"", 
           "\"Gains from discrete integrator\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
CQ34gg==
              "]]}, Annotation[#, "Charting`Private`Tag$268883#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
NGaK4qL+ZgHj17ixe3cpr4cPieJeVQdEdK25sZb/xNYtrhXF+wXXR3+4wY1d
eh7TJTUugv981fP5ohM3VibEFH/2TgS//v56xS8vbszKl80tvySM1/QfPyv3
mBvr38a/90e9ML5XWaHV/Sk39jbSIMIkWRhf83VoYEcgNyY48imn/KIw7j79
28n/OTd2dlbUK0pDGKfvSZmjh3Fj3sjikgc/8TzFHXmjXnNjvyNVr9rlCuEb
Oc+GsmO4sbBxDS+vF0J44HGNtWdiubHH2zckvbsphE/7i8Z9SuDGUh/PtdYc
FsKvVk/Jc37kxj4xE4WFZYTw30JNaeafubHbZhMnr7EFcU2jH1rZX7ixaZ57
ez5SRPDYyNe4SDo3duOXojPWKYzztbufsM/kxuo0GQoDP4RxzbufVj//zo1h
J+zZG18K41eFm2tTc7gx+QQ31RvORN4Tuy6N49xYx3dsWE5FGL/+bdTJpYqo
l7eXe0eiEF4QbBntzuDG6OJWU+VhgjhL4cWV6AFurGFiua3ZURCX/FWwJY/F
jXGIvx1mE+8z9guyaUsT3JiAN3gZ8gviMjYtxQ9XuLE7xgEhV3nX4G4H9UZ8
JHmIcd8Jm5lVeGK759eP0jyY4HkwiPm2Cv9z9z+3MlkeLCrv2Pl+51X41hQe
Ct8WHszLp0S4Yowfr5MqkghS48GolLoLGUN8+PK38fYvO3mwiV4zrk+f+XBF
A7n46t08WNm69ZXfbfnwh773lQW1eTDTK9/M1/Xz4skbk8dVD/JgvV8O8Lp8
5MWbfrZmGRzhwd6oWvv2XufFVdi7D744yYOJHeD9QWXw4KbPr1MzT/NgJV1a
x/Pe8+BPFSMq6/V5MHF1t2vPrHjwtF9FIVPneDCt0s0Ldlt48PYrE0bi53kw
Zk3bJ+6nvDjPopz0blMezL2RFMLU5cU1Xp3pPn+JB1t88dakXZR4H6lKvvH6
Gg+meBc34CTqZ9m07ci5zoPtnfSx2G3Hg/dQ+KZabXkwJf5T4g928eBae60f
yDjyYBnPrbbplnDjfR82hL/z5MH0Hj/f2dZPxVnePXOUh0S+g2cneb9Q8QmL
uMs2T3gwjv6kK/pOVJy0foOSmj8PlqcaPb1pnguXeiVXWPiKB7tYs6uDtooL
1/ddP9aXwYMtfygS/Pa/ous8Gqr3fwA4rWbflJQsKe2KFJVP73eypV1pRVlD
UonIkrJlLVGSZIsWJESUydglkSbZZWfGHiqk/O73nN85zX+vM/e59709z7l3
y+z8YxatBnqvxfDZ6+LDBtOz8o13xeSmvhHDqRGvudTCWfnnZqRvOuWLYb7k
Lwvuvln5vk7S0qQqMbw5Mvu7gqVofrDBN6/zn4n8Vi+/7rxONP/upmjh5xox
jJantrWOiuTHDS/NimwSwxbR50XDHiL53LNL964TiqEsyaBffssMr0irJT1k
QAxX63R/lCn+y/sg/0jixzCx/u8yCW39v7xqUSP3E2Ni+KN/7ePwtj+8ulap
znc/xdCEslaPdeEP79u7Zt1lU2I4+9Xx7qw/07yuh1Gpvn/E8FPS1D7voGle
/1VD8X4REp6Mv1sx9u0Pb/SYlMuBOST0eDAxdfz6H97k5ubWV/NJ+P7mZ6d2
uT88EfEorUUUwsaKcsFF0zxa9RJWO4uEL0QGHffNn+at0l3yzF6GhF83+9yx
C5nibVBootUtI+HGccVm6qYp3pY5Dy9vVyChE4btq/w6yduVvxjmrCfhQs/w
ZZlLJnnGaotr720joc3iePLC5794d1dJznljQMIhLcYT+odxnqGxwtPO4yTU
nJ758dlhnLf87iY9uiEJ61fs0UuXGedlzuwLMTMlofj7pogixzFeTa2nFP0C
CWXO+vzdJD/Ki6KG8NTsSaifHh9XU/WdZ67xyNTMkYSslz9cQ1y+88ZfZD/L
cSXhaLL1xRP8ER7HZ0DFzI+EDdMj8qfmDfMa307WBQeSUHCw7oDe6SFe/Mg8
15xbJJysERyxyxnkKRvKFdDukVBxh63ckXMDvKk7iuZqESRUa/XwXlDSzyss
2z7f7CEJV8nPmiDL9PP0Nx3dlxNHwhD1y7p3vgh5i63NRjoSiPs/SCiQUxTy
OqIvhtGekVA3rtyr20/AS6px36KWTEK32OKNvkP9PHtyYINpKglvLdnZtNiq
n7cNI9yC00n43CXMt6G9jzfrSqJMTiYJu+I/kgpP9fFC23kWtFwSfkwOHGcc
FPJOSlSKqeWRMJPhR3b8IOAt29eYbFpAwuVqxw1mawl4GTnj37PLSPgtcXFv
5LZeHv/26mumNSTc0mNxK31lN4+1Iyw8e5CE176Nc0+Q2nkhkZZlJrJk/Ni7
KoDa9JnndMXzsps8Gb0DbsCx1mqesX60zH0FMlar/v1QUfaJt45c6/RxHRnT
dms5PGyq4JVf1VqlupWMfk94Cu6kYl6agUnNIXUyihXWZMDCQl6Ekvt1WyBj
xOlDYj7y+TxLYWZ9nBYZmaeMF6/1yOHtK6n25uqSUaTm8GReVCZPJW5gY90e
wtXu5w7npvGWuIu1fN9PxuvJo5ZVWc95s04s96fqkzHW7P3q0Z9xPKEKbl5p
QEY8Y39IxuEur5pp2L7zOHF/5bSlD9VLeTkDTsGGp8i4yGnqecrLYl7M+7Ct
TsZkPJ6Y/FJevojnm/Cy+44JGQXyfmkz4QU8u+sVd1LMyThylKuIlHyeutrs
vnYbMl6UKD/VIHzDkxeXCZ8+T+RPumjzsuY1jzyyTUPiElGf7F3BevmvePVP
7SP3OhHxzntsFrEpmeco0aGX7UXk0/p0l5yxI89w7M/Pz76Ek6u2xYe5guYn
yccD/kT8zWLZZtJhwL556LdcCBllp+sndhUnQurP/OSgKOJ5iS3KbvRsEHyN
oZpmkbFtvd732/Fl8Ck9N8cth7j+YJSOzfJyeB1cZ34/l8incAwHEz+Atxbj
3ccCol5zzLuHnlaCXNa186pVxHojmdSfXz6D2J1ISf3PhD1UI4PC+DBi+7rE
toaMA+IXH07of4G85UNL4xvJKG5unHv4cw2cvGtURe0lo5r2wqtSH+tA6hV5
ybk+MnbZF9AeRNZD6+fss+WDZNybOH6ox6oB4kfMM1d+J9bLvwyYo9oI5gy2
qO84Gefwk6fH5jSBgiJvX9cvMnJ3mwxk8ptAuNc2UuM3GYvbRaN1Ypsh5Zxk
b+xfMpoXuBqknG8Bu4DSTTOiFGS+2+C98dJn2Pj88nWjuRRMy7GtDxXnw1iZ
bGWuGAXbFPuyq7P54DzX1dKZQcHiKOpw658v4Hl9w4PvUhQUe1tC1/erBc2Y
5u4DshRM2Gp4O3xNHczP81dOlaegd/VljRwiv6DfnRU2awgb5zLuMhsg/ErE
305VCvrltvRmhDfBc1tR81p9ChpH0MYM97eBbWBqmspRCqonTOQ4RLeBYtKp
P6EnKChgzk92G2qDjN6s8ANnKChCu+dgdKsduKY25e/PUzD6T8EOi8oOuHZD
YuHKSxS8jp/niy7thJ2xxaY+DkR+eQbcYNtOKG2Rnt7pSsGOJVZaLpQuqD7+
RTHXj4LkageTeN1uCHW67ioZRMHYhBTm+/vdYBC+/r3TbQra7Bk1a+3phsYv
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
pjA5M/PP/wfdt3TE
              "]]}, 
            Annotation[#, "Charting`Private`Tag$268883#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\[Theta] Gain\"", TraditionalForm], 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Gains from backward integration\"", 
           "\"Gains from discrete integrator\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwV13c8ld8fAHDrXvuaZd0QFSGjPdTnNFBIRpoSvokSUSkrVErKzsoWysgo
VCTPY2QTrkoiyubaO+R3fn/d1/v1Oed8zvg8z3PueqvrxtZsLCwsHOwsLP//
jfO0ompccj8Q1Te87c/BQahgyOqflj0Lhpc30COxVytLHsjKXoE2ztpdKti0
0He5PG03YOLPQdskNAhxZIAMRdYVgnNMg+ZgEFTGLwWu2nhBk93WIGXsTlr8
v+Xv9yGN3VYXHRiEDS+5d/5deghR84PJ2/cPwrX9zvbzMn5gwc7jxaU5CHmt
3Skzh/3hTMU94uPeQfhrp98xaRMERy/aHjPYMwiJrB1+81oh0LZxFyu5axCO
NIRsnPseCrn7qusEdw7CYJRO6cyVMLDddyoQbR8E/0srZtNL4WBblKJ6Yusg
MJZswyZknoP478QMLtVBuF0lrT7+JhoGnw2fzVMeBMlnrXWjh2PBVlw8QHPz
IFgpIfYRmwTwvmerNCw/CGxLbl9mPBKBrJC0o60fhNZu03UzWkkw+L2xQ1B6
EFxe8xZOfX8BR93OceSKDYJuaD91KjEZXPJePdMXHQS6S+nJySsp0KT3m1ol
OAjk4TsT40upwKJuomfKPQicP/8ojMqkQ7CGX/HXhQFoIz85MwfTgWv98w8X
ZwYg42VU+cibDEiTqFGqGh8AgxsGF4cPvwbSV05HtX8AIriLIgZscsAikkXX
rHkA8u/o3rgpngvV+cO/muoGIHZ4l8S0B/beuTi5ygFwaBK2mdJ6A00NdW4X
igZAOLaabfL7W+D6GzqjljQAS7R36Y6aedAtkKcUED0AvfeSDScS82BC/KFd
1bMBeGfjGT9+JR/SqjhFGA8H4Ny27XvHlgpAtvzBNh3bAUiqTXAakSkExZVb
T1M3DcBMVIFSl38hcEXZmKxZNwDaNnU9LYuFYHF61cBMZACY7POmRYwiOKo2
tclxtR927zfY6+dbDGf8uy68+doPTTnLbArjBDxm8zuU6dYPwsBtzq9KguC3
mBORDv2wb1PYXt9LJKSFVX89b9UPgTPp027NJKiHFRU4HOuH7SFfra0yS2H3
RhknYk0/eNWq6GpcLIdgk4Ozyq/6IO3N+02Z4eWg+LD6XE5UH7REHWLfWF8O
iapW9vxP+mCDzZli8T0V0CTIuf3ctT6oZfdRZRH5DInCBUL71Ppg7f6fwl8q
K0F8x4kBrexeyM7x+3lNtRa6X12izob2wLDwsL+uZS0kJrxrun6vBxRu6x5Q
DKsFxz/8fE3XeyBRkzepZ7EW0jwOpx3U74HQGv/L5z7XgSHX4pVx9h643RM0
qWPWAI5F9Jo0hz+QwFv3QEirCT5U6Pft3/YbbKD5OfMGA7oDTefWCHSCQ9/m
nvzsH0B+77WTnGqGbvMfXKU1P8DbrUPLs6wZTNoeqzb04vhqr/5saDPsrhtw
7ZNsB1SQf19mezOwv0kVXOvbDrKtRSW37zRBlMf6A3cu/gQUI7TVi9IIpSIS
z/cIdgL5KTJnrUU1bA+oLtFS7gTvSwFCYlzV8JLq0mukjeNXjhdeyq0C/8Vv
alc9OgFdjN3PZK2CU11hldGDuP3GT+a1aZ9hOENwZon8BeT5tl3Z1HLgWe+j
0LW7G7xHby2JixZDtWaImqcWtmVFRsDDj/DoTPyudcbYLEuLJfNFwBb8Qee8
XTewRHrWmP0qhL//mDbf43C8dmtBev57GOkwTfvC9hu8G+PtEx/lQcaCVa6D
APbtp6u3OfLAVtTxAz8du/h74boHb6FX70m13g7svUHc3fffQEdRyWCVzW9g
qZVVfS2eA/VRCpvJemyFiwFfg17Bk/ztGhd/YL+Fcc+XL+Fo08E9//qwn32j
DZakQgWn2THNVeyPVWdZZpOh+HbwlQ8af4Bl8+LzO7cTIevkYnpuBDafYcn7
hGdwzZH69kQydm7g4bvUUFDyFykay8GuvpM26RgML8u31KrUYDPfxP1OegLx
W62G05awBx97bJ7zgEDBOqUkix5s2tBXhiNRuGtdgYEDtqPXrNqn20Sv+XVY
dv+/lblSwzyIfVkiJ09HYquINXVTfYjBY2Z3+RuxY8P1VkSCCFGnbM6PP7Eb
0+rPdAcTEMUSajuELbccpLI1lIjoT3lZztELLBt+a2lWhxGHH4x+cd2HndYS
/+vTc8IhA84pHMNeXvQaGI8moptDeltPYZ+sm7JcF0tMyOxcVLuBXdIbl3Y1
nogv9pTrT8OOO66xxyaJWJgVcDZe2wcsZ99oX72QSsivs1pdlcc2HXIfbk4l
DI7k+2VpYN/iGZI78pJIDT0Tz3Uc27+t8NP6V4SxWlJVyQPstFHr1NI0wvPU
tNG1EOxqK9tJ+XQi/a5Wh0QC9s1rhQsP0gmW+qGJW0XY0fd19+3PILJst0oq
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
0EvRlIrmq646Sd+UIqXOfHP2cKSir/0fR7wWJMnLs2kz/TepiIvaQ20fkCTf
hLrfNLpDRZmPKqnD3yRJnQZZp02eVHT/whONLfmS5M1DdteanlKRU6vOhK6d
JFmnwvLfhldUdOjCxF/teglybW3L78AMKlqRfHds63sJ0tIm1WIxi4rUUpXn
25MkyPkkXfPGfCp6bJT+5/JtCVJeLPysSxlef3zYNje6BOnOqmRY30lFN7ad
f7HhgjjZf4S3bdNvKtK1+M8o/Yg4afiYefFeLxVNplIvLyiLkxsEcq7vHKEi
/pgd5QuLYmQ9fXtQ4gIV2UX6GkQ+EyOldx9ovCXCiU6M8vxd+bSWLHMw1l93
jBON7rkWajqLv7cdbkcd8jmR+vrZWS8ZIXLnnXT+oPec6HiacqgZmxBpKdzW
klPEicbX+b3d0ydIfji648IkyYl4Ik5zLGQIkpcLxp1uNXCi3YaFc+E7BcnS
wEsxbv2cKFf/cmlBHI10OWgw9kicC9kYbOiTE+YlUzo88l5JcaGS03vdnrfz
kF/uZLpUS3OhHMOn5RrJPOSmbC52no1cKMXdKqB2Ow/JkCwXC9DgQq5NS+1v
znKTqjO7Dj7T5UI6Xg1KcxmcZN/L9WEJHlzI0SYw5tl1DpLp83uR3ZsLqacP
yuvv4SCnrJIu2j7gQlfyc/YcYucgWWTWK2s84UKX++2Zg5HspGSkbFlZJBeS
eBzfrVLBRhr6ykz0veVCpLtHd68iK1lss05fZYgL3ZZ1i6TqLhPlWp1vgplc
iE/4/FvZsSWiVj5ObHacC4V71SpXhi4R37voPZ/muNCaY+rP8zr/ElOn6W4n
OLhRq+75dgm3RULxqFTaDRluJKArZifQMEeEKUpwFJpyI8NzsVsj2icJM/NN
r3rOcKOoYEvXvrBJYkPYNl2aGTd6vlRxP/3EJJG/ejz4PytuNHdCLzSwcoJo
/XafTrvOjRTIsPuPbo4TIg+Z2/97zI0O5lio89qNEKG/CWv+j9yIL5cysnm1
hzgn1sC1u4Qb7XVx2uoR1EPIHW/PtCrlRoGBOXFxsj3E2w8zk++ruJGSuCuH
rtYfoiVos6dVKzcymL9RviWqmxA68Czi/Sger8R97GFlOxEcfbnKUpYHiV9d
0NJWaSTu3L5/00OeBy24SLTe+1pPmBvHy0Ru4kFpvCVvztyrI1R4vt2pV+FB
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

              "]]}, Annotation[#, "Charting`Private`Tag$271369#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
oTNtP4cHS2ikrIzww99jbCiCb8xp6jeNrNWwch5gsaHVx49Nd8XRSC/9dIeV
M2zocfzKNymhNFLzKr/1wXkcn8Z528aHRo4/tTB1WsLrV9r8dfkejfwYnmoY
RqUhupdRVQ+DhzRO5z5exE5D/vq8mb8nuUneatODM5w09J1r++6bndzkDU7O
baf4aahP2djy8S9u8qD9aUH6Khoq4R5+I3OFm+zePVN4dTsNKcBVKbc8LjLE
UCfrzU4aOrHxpI9FMhep4xCelreLhu6V+s7IhXKRKRFa0Wv30dC19q+WRte4
SHeu109qjtNQMa8LMljFRa6v00B7rWlo9exPsXFrBlk/6rPz8mUa4v6lY8s4
ySCfc3cqB1+loeeG4zdouxgka6/X6rHrNPSjPN0hmodB5kQ1zkW50dDDzCDG
tzhO0vmP8njFYxo6ye+2kxXESSrVP+pfekpDlqHrglY94CQDeTbVG/vQkMCb
yjerdTnJi9fufud9Q0PrrorysobopNrW1u8bQ2nI4oDZ3d5qOsk9jlIPh9OQ
RmCDV3YGnWxJiky9GElDQpMGNp5RdDLRif7D7RMN7Xj7e5/aczr5WNX2R+gX
GtrDJnGo5DqdNBor+pEeS0OyahP+zpKC5MYk5Z91CTTUmbCkXMEjSC44vvjJ
Sqahguqn5zXmBMgyFdZPoVQaCo9kGqc2C5ARo0ZpymmYtV95ShACpLajVLoN
QUPGJZutXz4WIF85fP7VXERDl3r+GZzjESBtt3BnzJbSEDW6d4PgMD+5Z+RK
hlglri/r2FhsKT/ZZb/1t1497sfwjnPvX/CTKva//+R009BWo6wfV8X4yYIr
VZmxizR0OGXrrc5VfOQ7JbWsAgo7qp5xP7hhgZd0HArJYtLY0aqdE2u2NPOS
YldMs2W42dGM6Q0P+jte0sKuPydQjB2dP3PoV6EkL7ljk87fJAl29HT5lZbO
HA/JGIz/WyrFjnj8/HR/NfCQCZdv5DLWsaO9Sd4pFiE85ILtct69LexIU2bV
tRZRHrJso0X+663saDKkQbdigpuM6M/JT93Bjjh9ht1SKrlJbVuvgtHd7Oio
cVi5tj83KbVxuIAP2FFnZdDFBXtucrTvRKHifnY0kRKk9v44N/nKZkXRJS12
tLjd5UkqNzdpq+Bc9PAYO7rsfuLmpn4uck9fY1GYLju6dZXX5wU+3wLRe4t/
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
3WgxS5y2bDM8morzXWewjnPOEqYH3v+KT2Og7eu2+AbGzhB2y9Iet0kGimLf
7O85PU08vS0tzVXKQOzZHHcZflOEj2Hr46sVDLRBT5Pcs2OKCNwW1l9RzUA2
Wi/dApomiQ8jq7+/aWKg+vCDcx8UJokM69U6Sv0MlJr85dnxnAki+1BLkv8Q
A/WH25n919Gdx0P5dQEAL6mM2We0yJ4SkRBSqXPaJEQpQpI9ypYUISEpW0kl
S9GCFhJSqdQIIVpR9tSYjGHMTKho8z6/d/77fp5nnnvuOefe+8xfk7h/lNOo
fnnOdzHRH8FXq/isUc67qbuPOo7KYOfSmDNej0c4bb2KfU9/yOBsjkXxNPcR
zqen3ebzf8kgaWzT5HPSCIeXfak4/q8MZue98rxS+o0zdMRZbmgKCZlrUFmr
aJQzslMx3EaahMqiqNwCt1HOhFF3772ZJByqFCfAnFHOFLlLG+eSSXhqhkzt
6KsRDvWdAvMLk4QneAbP75iMcDTNFW4Gq5Aw71jmHC/mN85SjS5q23wS2hgt
efihXsIxls4+uEqDhN8YXl2uURLO+qp5IL2EhJcCBJnJbWKOi8m8jxdWktDc
0Whx+plhznlNeelHdiS0vJj7xIok4Di7aNzocyBhr0D8/GfsAGfB+WUWNGcS
vtm70/LNHz6nfHJLqoc7CaVLfDf9lfRzWj/GKtICSTi2qPekSxePc4mSyjEJ
JuE1z+rNbvY8jue6y+4eh0joxl+/9fT7Ps7YnYc3KyJIWPNqRop3A5fDPiE0
9DhFwvivCw+TKz5zOh9PtKUkkTBmx2Kqs+FnzjXJjIiK0yScUrjJudCtl2Pg
rPaceoGEGuHxffE7eji/zup6mmSQ8NnVoeQA625Odf2qmR7ZJCzL8mfdMO/i
2C6z31JxlYQORzZHkNZ0cOb5eki4eST8JFdSY7CincPNCTpHvUnCX71WZYWG
bZzbrUeNTQpJqBa5TGnmzM+cYNmkDvdiEuo9upk13biXsxIzIlNKSUhr8zwK
Lp84UofzVSrKSdhd+fzqk/geTtoXjhf1CQlZKeFFR9q7OE5zXsuYPCNhgFEB
88nULs78LZ2F7s9J6MRgPVit3ckpqxj79rCehJ59Pk+mH2vnNJ/RinJvJaHx
rvHyTK0PHOaac+kPh0kY/ckCls16zUnN8q53U5VF7KzwvErO4IQejj0YqS6L
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
5bLYuCp39G4x4eIVE78vXibyP65lWU24QtapzTGXTbx/52xuIvy863GZwlU2
Tl1+praFcGORwumea2yMWdxW1UW49Wikb24eG0mvV6/vI9xj3bPBrYCoPzls
6yDhfpU1quo32dj4fNGwhPDE88mPBYVspCrS+H8IS51zLfO5Q+TjkcYWKbdG
oHg+T1l8l42aRmE7ZhKeZTTfV1hCrHeZtVMphJVnHN9QXMbGou+3dzIIa7b1
qQSVs9H+ReMuOcL6Nzf81n/ARpPfucy5hDdYzCi7/4iNM2/8uapM2Fphb0ro
EzbuM58dp0Z4p7DeZ8VTNrbLkRYtIOz6VHPD72dsTPrrdVqD8L7TCSpPq4j9
aaLgqSbhkD2Dv6Kq2ThZqVuxmPBRPcuPWMvGFfvNY3QIx08tKpWqI+KzXqSo
Szi1mZJSW8/GnqT+pKWEs677+8S/ZGPph1MteoSvh7xZb95EzF9t/Ls+4aKN
S1VkX7Nxv8P0HwaEH8xO/dX0ho3jVJ+PywhX8SUfUt6xkaP7LNOQ8MuKbaU2
zWzcUp60zohwc0JZMrOVjV72K1v+c7cT26flAxtX93u23rz9GPq1Q9ZfaGOj
MmWv6S3C4j+tyjs72JgdVZf2n8dfG/2a28XGX7FxHf9ZKjf9Q2c3sZ/timfd
JkwO+lly6RMbr46eh/8st9Yh2eUzcR6kObv/Z2XWo72qXGL8OL/I/7yoT349
t4+Nbi+Nz/xnvfJw5byvbHSupl/6zytPdE148dk40r0k7z+vtzf9sEjARne4
dfM/Wy26XCIYJPafgxG3//Oely57/UVsFAcF3vrPwftVlb99Y6PTZq+C/5xx
93rS+Dixvxx+mv+fn41qTExOsvH2/z+P4X8czHp/
              "]]}, 
            Annotation[#, "Charting`Private`Tag$271369#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\[Theta]dot Gain\"", TraditionalForm], 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Gains from backward integration\"", 
           "\"Gains from discrete integrator\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.86735328938205*^9, {3.867353419565257*^9, 3.867353435761058*^9}, 
   3.8673539652710667`*^9, 3.867354197549497*^9, 3.8673542832609806`*^9, 
   3.867423974284385*^9, 3.867424708226215*^9, {3.8674248283542323`*^9, 
   3.867424850348096*^9}},
 CellLabel->
  "Out[1166]=",ExpressionUUID->"92d4946d-b61d-445f-9623-af77c5145647"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Speed up Computations by using optimized code", "Subsection",
 CellChangeTimes->{{3.867424975642438*^9, 
  3.8674249905485992`*^9}},ExpressionUUID->"25d07d48-febf-4952-9fc3-\
6006f20989c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["b", "1"], " ", "=", " ", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"time1", ",", "x"}], "}"}], "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"RecurrenceTable", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"i", "+", "1"}], "]"}], "==", 
         RowBox[{"3", " ", 
          RowBox[{"a", "[", "i", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"a", "[", "1", "]"}], "==", "7"}]}], "}"}], ",", "a", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "100000"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"time2", ",", "x"}], "}"}], "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["b", 
        RowBox[{"i", "+", "1"}]], "=", 
       RowBox[{"3", " ", 
        SubscriptBox["b", "i"]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "100000"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Time RecurrenceTable = \>\"", ",", "time1"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Time Table = \>\"", ",", "time2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8674263714724793`*^9, 3.867426488774413*^9}, {
  3.8674266826944866`*^9, 3.8674267336639442`*^9}, {3.867426800754173*^9, 
  3.867426903576807*^9}},
 CellLabel->
  "In[2231]:=",ExpressionUUID->"fb75e119-659b-4160-973b-0c34878a9507"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time RecurrenceTable = \"\>", "\[InvisibleSpace]", 
   "0.359375`"}],
  SequenceForm["Time RecurrenceTable = ", 0.359375],
  Editable->False]], "Print",
 CellChangeTimes->{{3.867426876944448*^9, 3.8674269062349443`*^9}},
 CellLabel->
  "During evaluation of \
In[2231]:=",ExpressionUUID->"c7cd7145-7a4d-4a7e-a160-95ee57e5a92e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time Table = \"\>", "\[InvisibleSpace]", "0.515625`"}],
  SequenceForm["Time Table = ", 0.515625],
  Editable->False]], "Print",
 CellChangeTimes->{{3.867426876944448*^9, 3.8674269062449403`*^9}},
 CellLabel->
  "During evaluation of \
In[2231]:=",ExpressionUUID->"eed6e7b4-f6c8-4b1e-afa2-104cc43a3bbc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.8674267390981803`*^9, 3.8674267889180145`*^9}, {
  3.8674268307774324`*^9, 
  3.867426843265377*^9}},ExpressionUUID->"00588d69-49b3-447b-b162-\
6afc7608abfe"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.8674264379309115`*^9, 3.867426457375602*^9}, 
   3.867426751251237*^9, {3.8674267915491595`*^9, 3.867426797227317*^9}, 
   3.8674268355038958`*^9},
 CellLabel->
  "Out[2195]=",ExpressionUUID->"553cf10d-a6f1-4751-90e5-4ab8c894b48a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.8674266112146807`*^9, 
  3.8674277572897696`*^9},ExpressionUUID->"7ffd8df7-fe55-4878-8a2c-\
b674616ba780"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S0", " ", "=", " ", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RHS2", "[", "i_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"y", "[", "i", "]"}], "+", "0.1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nGrid", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dT", " ", "=", " ", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sTable", " ", "=", " ", 
   RowBox[{"RecurrenceTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "[", 
         RowBox[{"i", " ", "+", " ", "1"}], "]"}], " ", "==", " ", 
        RowBox[{
         RowBox[{"y", "[", "i", "]"}], " ", "+", " ", 
         RowBox[{"dT", "*", 
          RowBox[{"RHS2", "[", "i", "]"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], " ", "==", " ", "S0"}]}], "}"}], ",", 
     " ", "y", ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "0", ",", " ", "nGrid"}], "}"}]}], "]"}]}], 
  ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.867427680856572*^9, 3.867427736136635*^9}, {
  3.8674277971308427`*^9, 3.8674277991811748`*^9}},
 CellLabel->
  "In[2417]:=",ExpressionUUID->"05d6fa5c-b05c-4338-af7e-2ed8ee21d5c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xState", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], "}"}]}], 
  ";", "\n", 
  RowBox[{"x2dot", " ", "=", " ", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"A", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], " ", 
    RowBox[{"(", 
     RowBox[{"u", "+", 
      RowBox[{"A", " ", 
       RowBox[{"\[Theta]dot", "^", "2"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"A", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
  RowBox[{"\[Theta]2dot", "=", " ", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"A", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  ";", "\n", 
  RowBox[{"fx", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
    "}"}]}], ";", "\n", 
  RowBox[{"L", " ", "=", " ", 
   RowBox[{
    RowBox[{"1", "/", "2"}], "*", 
    RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
  RowBox[{"Af", " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], "*)"}], 
  "\n", 
  RowBox[{"Bf", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
  RowBox[{"(*", 
   RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], "*)"}],
   "\n", 
  RowBox[{"Q", " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{
     RowBox[{"Grad", "[", 
      RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
  RowBox[{"Mf", " ", "=", " ", 
   RowBox[{"Grad", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
  RowBox[{"R", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{"L", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
  RowBox[{"S0", " ", "=", " ", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";", "\n", 
  RowBox[{
   RowBox[{"RHS", "[", "i_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"Af", "\[Transpose]"}], ".", 
       SubscriptBox["s", "i"]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["s", "i"], ".", "Af"}], " ", "-", " ", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["s", "i"], ".", "Bf"}], ",", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         SubscriptBox["s", "i"]}]}], "]"}]}], ")"}], " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", " ", 
       RowBox[{"x1a", "[", 
        RowBox[{"\[Tau]", " ", "-", " ", 
         RowBox[{"i", "*", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
      RowBox[{"xdot", " ", "->", " ", 
       RowBox[{"xdot1a", "[", 
        RowBox[{"\[Tau]", " ", "-", " ", 
         RowBox[{"i", "*", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
      RowBox[{"\[Theta]", " ", "->", 
       RowBox[{"\[Theta]1a", "[", 
        RowBox[{"\[Tau]", " ", "-", " ", 
         RowBox[{"i", "*", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
      RowBox[{"\[Theta]dot", " ", "->", " ", 
       RowBox[{"\[Theta]dot1a", "[", 
        RowBox[{"\[Tau]", " ", "-", " ", 
         RowBox[{"i", "*", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
      RowBox[{"u", " ", "->", " ", 
       RowBox[{"u1a", "[", 
        RowBox[{"\[Tau]", " ", "-", " ", 
         RowBox[{"i", "*", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}]}], "}"}]}]}], ";", 
  " ", "\n", 
  RowBox[{
   SubscriptBox["s", "0"], " ", "=", " ", "S0"}], ";", "\n", 
  RowBox[{"dT", " ", "=", " ", 
   RowBox[{"\[Tau]", "/", "nGrid"}]}], ";", "\[IndentingNewLine]", 
  RowBox[{"sTable", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["s", 
       RowBox[{"i", "+", "1"}]], " ", "=", " ", 
      RowBox[{
       SubscriptBox["s", "i"], " ", "+", " ", 
       RowBox[{"dT", "*", 
        RowBox[{"RHS", "[", "i", "]"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "nGrid"}], "}"}]}], "]"}]}], ";", "\n", 
  RowBox[{
   RowBox[{"RHS2", "[", "i_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"Af", "\[Transpose]"}], ".", 
       RowBox[{"y", "[", "i", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"y", "[", "i", "]"}], ".", "Af"}], " ", "-", " ", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "i", "]"}], ".", "Bf"}], ",", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"y", "[", "i", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", " ", 
       RowBox[{"x1a", "[", 
        RowBox[{"\[Tau]", " ", "-", " ", 
         RowBox[{"i", "*", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
      RowBox[{"xdot", " ", "->", " ", 
       RowBox[{"xdot1a", "[", 
        RowBox[{"\[Tau]", " ", "-", " ", 
         RowBox[{"i", "*", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
      RowBox[{"\[Theta]", " ", "->", 
       RowBox[{"\[Theta]1a", "[", 
        RowBox[{"\[Tau]", " ", "-", " ", 
         RowBox[{"i", "*", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
      RowBox[{"\[Theta]dot", " ", "->", " ", 
       RowBox[{"\[Theta]dot1a", "[", 
        RowBox[{"\[Tau]", " ", "-", " ", 
         RowBox[{"i", "*", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}], ",", " ", 
      RowBox[{"u", " ", "->", " ", 
       RowBox[{"u1a", "[", 
        RowBox[{"\[Tau]", " ", "-", " ", 
         RowBox[{"i", "*", 
          RowBox[{"\[Tau]", "/", "nGrid"}]}]}], "]"}]}]}], "}"}]}]}], ";", 
  " ", "\n", 
  RowBox[{"sTable", " ", "=", " ", 
   RowBox[{"RecurrenceTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "[", 
         RowBox[{"i", " ", "+", " ", "1"}], "]"}], " ", "==", " ", 
        RowBox[{
         RowBox[{"y", "[", "i", "]"}], " ", "+", " ", 
         RowBox[{"dT", "*", 
          RowBox[{"RHS2", "[", "i", "]"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], " ", "==", " ", "S0"}]}], "}"}], ",", 
     " ", "y", ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "0", ",", " ", "nGrid"}], "}"}]}], "]"}]}], ";", 
  "\n", "sTable"}]], "Input",ExpressionUUID->"794afd45-0cf0-4b2a-ae79-\
c5ff2be9d349"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", "/", "60"}]], "Input",
 CellChangeTimes->{{3.86742810311055*^9, 
  3.8674281150686665`*^9}},ExpressionUUID->"324d5f72-0dac-4bb5-82c7-\
9c4758af8753"],

Cell[BoxData[
 FractionBox["1", "12"]], "Output",
 CellChangeTimes->{3.867428105552755*^9},
 CellLabel->
  "Out[2490]=",ExpressionUUID->"1882b083-13c2-464d-80ac-62a36283b09e"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 735.75},
WindowMargins->{{-6, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a98e1d43-5aca-4c9e-82d3-ff42f854f3fb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 151663, 3711, 2899, "Code",ExpressionUUID->"e27c67ff-0fad-4f7e-bb41-9ac878c93826"],
Cell[CellGroupData[{
Cell[152246, 3735, 18435, 443, 657, "Input",ExpressionUUID->"fe1c9938-1e81-4c93-bed6-a86c7347dd44"],
Cell[CellGroupData[{
Cell[170706, 4182, 1365, 23, 22, "Print",ExpressionUUID->"434c70f3-636a-4be3-afc5-a92f92c87795"],
Cell[172074, 4207, 1330, 22, 22, "Print",ExpressionUUID->"7100afdc-768a-44a8-9611-22263cc82a09"]
}, Open  ]],
Cell[173419, 4232, 1655, 27, 28, "Message",ExpressionUUID->"3c400aba-938b-4ba5-9ae8-f454980e0b21"],
Cell[175077, 4261, 1939, 31, 28, "Message",ExpressionUUID->"22471696-cffb-420d-beba-b296a61c1b43"],
Cell[CellGroupData[{
Cell[177041, 4296, 1350, 22, 22, "Print",ExpressionUUID->"c46d6f09-5712-4287-a6ac-d961b4d0eaab"],
Cell[178394, 4320, 1344, 22, 22, "Print",ExpressionUUID->"1e96fa20-4844-45a3-91a5-2626c0d0467e"]
}, Open  ]],
Cell[179753, 4345, 349095, 6262, 416, "Output",ExpressionUUID->"6015ffff-e80a-49cc-8fb9-21ade467c487"]
}, Open  ]],
Cell[528863, 10610, 207, 3, 51, "Text",ExpressionUUID->"161ab72d-089e-466b-8b54-c632aa590061"],
Cell[CellGroupData[{
Cell[529095, 10617, 3586, 102, 105, "Input",ExpressionUUID->"325fbe3d-702a-4f42-b46e-6cc5c90b3742"],
Cell[532684, 10721, 248184, 4360, 552, "Output",ExpressionUUID->"92d4946d-b61d-445f-9623-af77c5145647"]
}, Open  ]],
Cell[CellGroupData[{
Cell[780905, 15086, 195, 3, 54, "Subsection",ExpressionUUID->"25d07d48-febf-4952-9fc3-6006f20989c4"],
Cell[CellGroupData[{
Cell[781125, 15093, 1636, 49, 105, "Input",ExpressionUUID->"fb75e119-659b-4160-973b-0c34878a9507"],
Cell[CellGroupData[{
Cell[782786, 15146, 376, 9, 22, "Print",ExpressionUUID->"c7cd7145-7a4d-4a7e-a160-95ee57e5a92e"],
Cell[783165, 15157, 352, 8, 22, "Print",ExpressionUUID->"eed6e7b4-f6c8-4b1e-afa2-104cc43a3bbc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[783566, 15171, 226, 4, 48, "Input",ExpressionUUID->"00588d69-49b3-447b-b162-6afc7608abfe"],
Cell[783795, 15177, 284, 5, 46, "Output",ExpressionUUID->"553cf10d-a6f1-4751-90e5-4ab8c894b48a"]
}, Open  ]],
Cell[784094, 15185, 154, 3, 28, "Input",ExpressionUUID->"7ffd8df7-fe55-4878-8a2c-b674616ba780"],
Cell[784251, 15190, 1991, 57, 222, "Input",ExpressionUUID->"05d6fa5c-b05c-4338-af7e-2ed8ee21d5c8"],
Cell[786245, 15249, 7966, 223, 451, "Input",ExpressionUUID->"794afd45-0cf0-4b2a-ae79-c5ff2be9d349"],
Cell[CellGroupData[{
Cell[794236, 15476, 177, 4, 28, "Input",ExpressionUUID->"324d5f72-0dac-4bb5-82c7-9c4758af8753"],
Cell[794416, 15482, 175, 4, 62, "Output",ExpressionUUID->"1882b083-13c2-464d-80ac-62a36283b09e"]
}, Open  ]]
}, Open  ]]
}
]
*)

