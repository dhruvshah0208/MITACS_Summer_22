(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    680527,      13080]
NotebookOptionsPosition[    677679,      13032]
NotebookOutlinePosition[    678127,      13049]
CellTagsIndexPosition[    678084,      13046]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Computing the Adjoint Equations given a cost function symbolically\
\>", "Text",
 CellChangeTimes->{{3.8647382131648855`*^9, 3.864738228348024*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"224a2fd0-5a16-4642-88fc-61a70e68600f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Fix", " ", "Bugs", " ", "here"}], " ", "*)"}], "\n", 
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "u", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "20"}], ";", 
  RowBox[{"\[Tau]", "=", "15"}], ";", 
  RowBox[{"\[Tau]1", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{"nDim", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]t", "=", 
   FractionBox["\[Tau]", "n"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xState", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fx", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x2", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A", "*", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", "+", " ", 
          RowBox[{"A", "*", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
           RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", "u"}], ")"}], 
        " ", "/", " ", 
        RowBox[{"(", 
         RowBox[{"1", " ", "-", " ", 
          RowBox[{"A", "*", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], "^", "2"}]}]}], ")"}]}], 
       ",", "\[Theta]2", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], " ", "-", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", "*", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", "+", " ", 
            RowBox[{"A", "*", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
             RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", "u"}], ")"}], 
          " ", "/", " ", 
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"A", "*", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], "^", "2"}]}]}], 
           ")"}]}]}]}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "->", "x"}], ",", 
       RowBox[{"x2", "->", "xdot"}], ",", 
       RowBox[{"\[Theta]1", "->", "\[Theta]"}], ",", 
       RowBox[{"\[Theta]2", "->", "\[Theta]dot"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"u", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "Weight", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"xState", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{"xState", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
       ")"}]}]}]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Cost", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"eqn", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"fx", ",", "u"}], "]"}], ".", "\[Lambda]"}], " ", "+", " ", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", "u"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eqn", "==", "0"}], "}"}], ",", 
      RowBox[{"{", "u", "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", "u", "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"{", "u", "}"}], "/.", "sol"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]dot", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{
       RowBox[{"Grad", "[", 
        RowBox[{"fx", ",", "xState"}], "]"}], "\[Transpose]"}], ".", 
      "\[Lambda]"}]}], " ", "-", " ", 
    RowBox[{
     RowBox[{"Grad", "[", 
      RowBox[{"L", ",", "xState"}], "]"}], "\[Transpose]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fSymbolic", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Join", "[", 
    RowBox[{"fx", ",", "\[Lambda]dot"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dimensions", "[", "fSymbolic", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.861902342328802*^9, 3.8619023425067463`*^9}, {
   3.8619023760720234`*^9, 3.8619024181895714`*^9}, {3.8619024838915834`*^9, 
   3.86190250318342*^9}, {3.8619026675159273`*^9, 3.861902682122262*^9}, 
   3.8619028766101365`*^9, 3.861902937842575*^9, {3.8619029852474327`*^9, 
   3.861903011510045*^9}, {3.86190326064746*^9, 3.8619032656028795`*^9}, {
   3.864737722444943*^9, 3.864737934826968*^9}, {3.864738068759104*^9, 
   3.8647381126010714`*^9}, {3.864738149206354*^9, 3.8647381993453064`*^9}, {
   3.8647382530321245`*^9, 3.864738281367056*^9}, 3.864738385972575*^9, {
   3.864738419632804*^9, 3.8647384267365303`*^9}, {3.8647385308402095`*^9, 
   3.864738561920263*^9}, {3.8647386241073604`*^9, 3.864738625081049*^9}, {
   3.8647386619882374`*^9, 3.86473899869847*^9}, {3.864739043396165*^9, 
   3.8647392140865345`*^9}, {3.864739296574133*^9, 3.864739299028347*^9}, {
   3.8647395267484655`*^9, 3.8647395340431304`*^9}, {3.864739577945079*^9, 
   3.864739661032486*^9}, {3.864740184684888*^9, 3.8647402025441737`*^9}, {
   3.864740263603631*^9, 3.86474026379557*^9}, {3.8647407876239157`*^9, 
   3.864740835905461*^9}, {3.8647408676742954`*^9, 3.864740950202881*^9}, {
   3.864742069748563*^9, 3.864742075366767*^9}, {3.864742204489438*^9, 
   3.8647422253447638`*^9}, {3.8650129916749973`*^9, 
   3.86501299219983*^9}},ExpressionUUID->"a7c4ca20-0320-4220-83d7-\
a5fc3437d70b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xdot", ",", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"\[Lambda]2", "-", 
       RowBox[{"\[Lambda]4", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"A", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
     RowBox[{"A", " ", 
      SuperscriptBox["\[Theta]dot", "2"], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"A", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
    RowBox[{"1", "-", 
     RowBox[{"A", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "\[Theta]dot", 
   ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Lambda]2", "-", 
          RowBox[{"\[Lambda]4", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"A", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
        RowBox[{"A", " ", 
         SuperscriptBox["\[Theta]dot", "2"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"A", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
     RowBox[{"1", "-", 
      RowBox[{"A", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ",", 
   RowBox[{
    RowBox[{"-", "Weight"}], " ", "x"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "Weight"}], " ", "xdot"}], "-", "\[Lambda]1"}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Pi]"}], " ", "Weight"}], "+", 
      RowBox[{"Weight", " ", "\[Theta]"}], "+", 
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A", " ", 
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
         "\[Lambda]4"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
      RowBox[{
       SuperscriptBox["A", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Pi]", " ", "Weight"}], "-", 
         RowBox[{"Weight", " ", "\[Theta]"}], "+", "\[Lambda]2", "-", 
         RowBox[{
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], ")"}], 
       " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
      RowBox[{"A", " ", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]2", "-", 
         RowBox[{
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], ")"}], 
       " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "\[Pi]", " ", "Weight"}], "-", 
         RowBox[{"3", " ", "Weight", " ", "\[Theta]"}], "+", "\[Lambda]2", 
         "-", 
         RowBox[{
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "-", 
         RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A", " ", 
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
         "\[Lambda]4", "+", 
         RowBox[{
          SuperscriptBox["\[Lambda]4", "2"], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["A", "2"], " ", 
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "A", " ", 
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
         RowBox[{"2", " ", "\[Lambda]4"}], "+", 
         RowBox[{
          SuperscriptBox["\[Lambda]4", "2"], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", "A", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
            "\[Lambda]4"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[Pi]", " ", "Weight"}], "+", 
         RowBox[{"3", " ", "Weight", " ", "\[Theta]"}], "-", 
         RowBox[{"2", " ", "\[Lambda]2"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{"\[Lambda]2", "-", 
            RowBox[{
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], ")"}],
           " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox["\[Lambda]2", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{"\[Lambda]4", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Lambda]2"}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"Weight", " ", "\[Theta]dot"}], "+", "\[Lambda]3", "-", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Weight", " ", "\[Theta]dot"}], "+", "\[Lambda]3"}], ")"}], 
      " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]2", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
     RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]4", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"A", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8647402030060234`*^9, 3.8647402679202476`*^9, {3.86474079853942*^9, 
   3.864740837873831*^9}, {3.864740908482232*^9, 3.864740952703079*^9}, 
   3.864742076735327*^9, 3.864742241584566*^9, 3.8649284567028503`*^9},
 CellLabel->
  "Out[767]=",ExpressionUUID->"c33e2f72-e4c3-43aa-9e20-1d77ae8deb92"],

Cell[BoxData[
 RowBox[{"{", "8", "}"}]], "Output",
 CellChangeTimes->{
  3.8647402030060234`*^9, 3.8647402679202476`*^9, {3.86474079853942*^9, 
   3.864740837873831*^9}, {3.864740908482232*^9, 3.864740952703079*^9}, 
   3.864742076735327*^9, 3.864742241584566*^9, 3.864928456708848*^9},
 CellLabel->
  "Out[768]=",ExpressionUUID->"2aba5140-1801-4a6e-8946-d53f4b6ff6fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Lnew"], "Input",
 CellChangeTimes->{{3.86474083888551*^9, 3.864740839587284*^9}},
 CellLabel->
  "In[769]:=",ExpressionUUID->"0398a52c-b289-4835-ba74-41daec77e452"],

Cell[BoxData["Lnew"], "Output",
 CellChangeTimes->{3.864740840120112*^9, 3.8647409431131487`*^9, 
  3.8649284568667965`*^9},
 CellLabel->
  "Out[769]=",ExpressionUUID->"749c82e3-64d6-4420-9efa-591d27603942"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "Feedback"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_", ",", "Weight_"}], "]"}], ":=",
    "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", "\n", 
       RowBox[{"{", 
        RowBox[{"xdot", ",", 
         FractionBox[
          RowBox[{
           FractionBox[
            RowBox[{"\[Lambda]2", "-", 
             RowBox[{"\[Lambda]4", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
         "\[Theta]dot", ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{"\[Lambda]4", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{"-", "Weight"}], " ", "x"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Weight"}], " ", "xdot"}], "-", "\[Lambda]1"}], ",", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Pi]"}], " ", "Weight"}], "+", 
            RowBox[{"Weight", " ", "\[Theta]"}], "+", 
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", " ", "Weight"}], "-", 
               RowBox[{"Weight", " ", "\[Theta]"}], "+", "\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "\[Pi]", " ", "Weight"}], "-", 
               RowBox[{"3", " ", "Weight", " ", "\[Theta]"}], "+", 
               "\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "-", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "3"}], " ", "\[Pi]", " ", "Weight"}], "+", 
               RowBox[{"3", " ", "Weight", " ", "\[Theta]"}], "-", 
               RowBox[{"2", " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox["\[Lambda]2", "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"\[Lambda]4", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", 
         FractionBox[
          RowBox[{
           RowBox[{"Weight", " ", "\[Theta]dot"}], "+", "\[Lambda]3", "-", 
           RowBox[{"A", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Weight", " ", "\[Theta]dot"}], "+", "\[Lambda]3"}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
           RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]2", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]}], ";",
       "\n", "\n", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{"u", "^", "2"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xState", " ", "-", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ")"}], 
         ".", 
         RowBox[{"(", 
          RowBox[{"xState", " ", "-", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
          ")"}]}]}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"Cost", " ", "function"}], "*)"}], "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.8647406075575447`*^9, 3.8647406552042956`*^9}, {3.8647409700865154`*^9, 
   3.8647409938918962`*^9}, {3.864741036547244*^9, 3.8647410613862953`*^9}, {
   3.864741165576948*^9, 3.864741181071989*^9}, {3.8647420850016813`*^9, 
   3.8647421048363333`*^9}, {3.864742172818575*^9, 3.864742178021909*^9}, {
   3.86474225660176*^9, 3.8647422914486065`*^9}, 3.8649263906269436`*^9, {
   3.86492657511193*^9, 3.864926577483159*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[796]:=",ExpressionUUID->"c1f14a8d-6b3b-4fdb-865b-b5be5637e987"],

Cell["\<\
The idea is to use the cost L = 1/2*u^2 + 1/2*(\[Delta]x)\[Transpose]T(\
\[Delta]x) where \[Delta]x = x(t) - r(t), r(t) = {0,0,0\[Pi],0}. The \
advantage would be that now we can choose a fixed time \[Tau] to be very \
large and in case the solution can be obtained in a smaller time, it will be \
done as we are minimizing this cost.\
\>", "Text",
 CellChangeTimes->{{3.864736987743088*^9, 3.8647371329496136`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"dc5bfc69-ba71-4c0a-a899-a16da01c8349"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"Weight", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"InitGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess", ",", "Weight"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", " ", "=", " ", 
   RowBox[{"7", "/", "8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1a", "[", 
      RowBox[{"k", "*", "\[Tau]"}], "]"}], ",", 
     RowBox[{"xdot1a", "[", 
      RowBox[{"k", "*", "\[Tau]"}], "]"}], ",", 
     RowBox[{"\[Theta]1a", "[", 
      RowBox[{"k", "*", "\[Tau]"}], "]"}], ",", 
     RowBox[{"\[Theta]dot1a", "[", 
      RowBox[{"k", "*", "\[Tau]"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.864741199114215*^9, 3.8647412309450274`*^9}, {
   3.8647412638285017`*^9, 3.8647412753688107`*^9}, {3.864741323608369*^9, 
   3.86474133960525*^9}, {3.864742124890915*^9, 3.8647421532108536`*^9}, {
   3.864742303924614*^9, 3.8647423252527876`*^9}, {3.864742422178767*^9, 
   3.86474251208799*^9}, {3.8647427673552923`*^9, 3.864742767707179*^9}, {
   3.864742898915184*^9, 3.864742916706489*^9}, {3.86474298969613*^9, 
   3.8647431425921955`*^9}, {3.864924629853722*^9, 3.864924662618064*^9}, {
   3.864924702490093*^9, 3.864924759817445*^9}, {3.8649264139773474`*^9, 
   3.8649264215218945`*^9}, {3.8649281225515504`*^9, 
   3.8649282156702595`*^9}, {3.864928284639825*^9, 3.864928315106911*^9}, {
   3.864928430146491*^9, 3.8649284365374107`*^9}, 3.864928903813407*^9, {
   3.8649289880729957`*^9, 3.864929015366118*^9}, {3.86510172469713*^9, 
   3.8651017437010555`*^9}, {3.865101820087648*^9, 3.8651018202445974`*^9}},
 CellLabel->
  "In[968]:=",ExpressionUUID->"5e2d0932-2b2f-4ace-be1a-80112973358e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
iu3R+tdV0+CJ50dNyeeA3e3n9fbMWeirFcqQO0oDko/0XqP7xzWSgUk+8odr
ppBSFYNznw3f6ouOIXohmOQl7944NZZ2czWUJUu+qKmmg2zZhTNBX1NhKGv/
H8FPTdDEnVzx9W4akPfdrOoZfzOUnQQkX1kX6xl/gagn40Pds2bLpsDs7qyW
2jAN5Le/Ouj+dwaUrqz2vsGkAclTxm5SvfqniYFJnnIJak1WucXg3Jdz8La5
9fbBi1hc5KSBeepvGG5nbrhHfD95f05rn9XAtR1E/Wp0ab6Q5Qywmvjuxs37
P9TddzjV/eP4cYRS4hxkpSItIyShUq8XIlS0p9FCyc7KKlIakihlFLJX2RzJ
20hGS8ooo+x5OOeUvX7v+7ru16vruu/rc30+1/e/39+3OOc9XuO+HtfzVQqQ
r2y4Z/5Ws4ZOIF9pSONalZ9NJ+Qef/Xzqm0EkRenWe2raaDOYatL3tMfgLt1
CW2TLQ37y7dymSF1mrlgx7KOjsa9M4AjIuB5Gl8pGJJ+fa/l0hyQuq3GlZVd
ApC/PMrafMqU3G+iXs/tri0pPmcOEf/JY7Itfv1RTvIsQB5zqrjm8lr5dIA8
puDA9qp89zyAPOYO/Vd9C7VoAHnMO1sb3ENMaQB5TLZIk8qY5QXYY065yO01
eJKHPWaMpwf1hEMu9piup2zsRffkYo+56rnTmcgdedhj1ruCBAvTAuwvV1yX
y+wUKAao1/N6aUidoVUJQL2elzmMHC3hUoB6Pb69eccuPSwBAkkdCjEn2aBw
1uBpTvMi7DdP1sRoRRzNBshvXhsftbEvvw2Q37zvfcOKa3cW9pk6lYe8Vq7t
JJDPFHDn+x3c2UMgnxmryNu3pq+fQD4zgzqR0g2HCOQzrZUzal6Szxfymb32
P/cyWugE8pnj018zJ+XoBPKZL+oMe5YmDhLIZ/pJxoztWNtPoN4QR+uX+yfX
1RCoN8T3+cc69p+FBPKZa/XCf5nfiME+0+b7mdbnJpuI/9VnpiVtPtnFFQOQ
z1RytNmQeCAboD6RcuI2u+Z9BQB5TSGT7mU85HoAeU0wJc9b2lQAkNdsHN93
b/ZoPvaaEqbJ/CaDudhrrn9RAQ+R4yfymi/XLv3l+zwXe02D9NtFufL54M2b
cXNut0kQ7x7ln/GAACeZvNzHrk0D08KiytGmEnCSm3tIMXAW8DyXeLh0SSmY
+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
9uH9w2Kv2eDqvwk8y00CxgeMj7jfHAIA1rdUuA==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{475, 2986, 397, 398, 399, 400, 859, 725, 617, 533, 
            474, 441, 886, 752, 644, 560, 501, 912, 778, 670, 586, 401, 860, 
            726, 618, 941, 807, 534, 921, 787, 973, 679, 955, 821, 984}}], 
           
           PolygonBox[{{2983, 2987, 362, 830, 696, 588, 504, 445, 412, 863, 
            729, 621, 537, 478, 363, 831, 697, 589, 505, 446, 413, 864, 730, 
            622, 538, 479, 364, 832, 698, 590, 506, 447, 414, 365, 833, 699, 
            591, 507, 448, 415, 865, 731, 623, 539, 480, 366, 834, 700, 592, 
            508, 449, 416, 866, 732, 624, 540, 481}}], 
           PolygonBox[CompressedData["
1:eJwVzzksZgEYBdBnJwoqChqxhUQiUTDRGo0t0dkanb20myknflMShMKS2EMi
JAqFxL5FJBqtfenNdM4rTu797nvvF1mtPfXd0UEQRPGHleQgWA4ZeumjnwEG
qYoJgiMfNBDHuW2FNvuDu5dsXm2jtlgm3RUM2ardx3oj8Yy7U1jQLzwf1r/0
CKXMuTPY1Fc9b9cf9T429QJy9BmZxqq+L0t5835ExnHKlGe7spg7frqXZBY3
7LgPZDn3DPu+Rp7YD2WTXJO53JLgnpCpXLDo3pMlXPp2RP6zjbGtF1Gmz8tM
tsLf816H/qT3s6UXhn9Dn5XprOnv3hvT45l2VzJiqw3/N72ZRK5sv2z/9b/8
YN3WaXvWB8jjI3yPOvuZu4Ukrm0bdNlf3IPk82n7zTdyekiJ
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0rlPkwEcBuCvLZvAJAuJFIiDg4mJiolMIArqZr2YQcUJpLUkIjMtjIqQ
4FIrlw4OHgkDcrUcurCYGAcF6vUHcGygzzc8+b3v+7UFGuo6ehLd0SAIIkwx
fSQIZvhkKPOgnSJXY0HQZ5tmnZjtNgWueJa2/aVe76PEffuUbY2ofotlLtsf
2lrkMWL6EH9sdXqabbpsk7Zz8jD7DNhWbXm5Uh4hIt9kiTY95fl7uTb8+VyQ
R4nKWX6Hn+nO8cpe5T6nVj7hvgl/P3nV3XLvuRPe8809z0L4GvuGW02OBv2L
e5K34d+jr7l77mN3xfu/uqeZ5YX9s1vBUwL9uPuaG/IirXLS+xrdRd7Z4uF3
QrN8yv3AMzniZvjl9TP6UXmcuJxik7v6S8/Pyll26bcVbTm5XH7CP/26vsAl
vVdvkkfCfxR9kJ+2Gj3JD+7Y8rYzcoYdHtkKtkMS+jwXbQ/0Esf0Xr7TGX4n
tmUOuGb7SIu9R/8PX5tXig==
            "]], 
           PolygonBox[CompressedData["
1:eJwV0MtTj2EYBuAvLRwiKgstmNGikZIx08KgtrEjJSxIkVbl1C50IsfChhli
4TAySEUZCwvGgqRzGP+A6KSsEuN6F9c893O/3+H3+1YXV+SVz4uiKIa3tMRF
0SMuKV7yleUuKGOIvbFRdFHXxReSdIcZZI+zC7pOPpOoK2WA3c7O636z3l7H
JJX6F7oREuyH6KdQf043Q6a9lglO6J/rcuRr/KNeN6xbJh+kj126Bt02uZmF
9iamdU/syfId1sk1jHPc3uG8XV4l3yNbzgzv5Kr8N/x2ech1WeYrHug+monc
YGn4HmYqjymxvzN7zQLzrHu/mVt4Q2f4z2YKD9lqHzE30MUt+3tzAY38cv9G
83V4vrNP5gpuk2FPN9uolsc4Jre7p01eKd8N75avMBe+rX3Q+X05Qb5OvFwc
nk2+/YzzXPkm8+2XmdKl20/zk6PhvbrNchN/wrfVDeiWyAfoYaeuXjfJWvsp
fnBE/0y3SW5klmpdv26xXBS+M3m6Ot0EafaTjFKhb9X1EWffTzc79LW6cdbY
q/hOuf6prpdF9n18YLu+RvcfJz5sTQ==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1HfYjmUYB+DP3ntvUrJXEZLMSNlb5kdGWSmpFFH2JoomUfYqVGZRZkZG
ZZZCpFIURTivwx/n+7vu6/mO733u676Pt0hi/+b9kiQkJPT2EZnHxyH5Fn1p
yD0kJa9nh+Xb9OMR7qWs/nm5khF0Jhn59L+V79CfR6lEOf1f5SpeoQvJya//
nXyXATSiMuX1L8iPeJWupKCA/vfyPZ6iMfdRQf83+TEjSSQlBfWPyDkMpAn3
612RG5lMFSrq/S5XM4pupKKQ/lE5l6dpSnW9q3ITU6ga89L7Q65hdMzJOhV7
1N2prb4hv+T1eA/rdHyjTk1h9TH5Ps3VGXlGXV8mY6e6rcxOM/UD8t+Yu9ws
W8ks9GBqzEWmJZH91o/JXPSiWpyhvCg7ybWypczM44yJc5Op6cpe6/YyZzxX
15E35Ve0VmfljZiNTM8BdRqKqI/LeQyigXVydsUeqaH+T37OtDiXuCt6f8pP
GEsP6sYlZZuYRVrusD4h5/MsLXhQ75r8gulxTnGX9P6SnzKOnqSjqP5J+QGD
Y/8x07hL+pfkZ4ynF+m5U/8H+SHPxbzj/cnAXZ79KBfwfMwk3oWMFPPslFzI
C7ShJpm427Of5CKGxPlSi8wU9+xnuZgXaRd3iCxkJRvZyUFOcpGbPOQlH/kp
QMG4x3HH4kxidrH/2BMlfM9puYSX4pzjfGNPlPTsjFzK0LhDcRZU0b8s1zGB
3rFPSumflcsYRofYq951uYXXqEdVvb/leibyRPTjt4jt6tkxG0pb/yKX8zIP
W6dgt7pjzEr9v9zKDB6imt4/cgOTaGSdhn3qJ+Nv1EnZEWchs/GmupnMQDcO
xrvL3Elu/0YWty4jz8X3yhVx32QmujPcuqFMSRe+jvOSOehJJ+uZ1KdPzJwG
Md+YWewz/j9lKUd5KsR+qcgtKm2XxQ==
           "]]}, Annotation[#, "Charting`Private`Tag$152929#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1XfcTmUYB/DXzKpkVHYoSkkR0iKESmYlK7uQyCZkZouyZROvTdl7NShk
RYiKkF32KH2vT398P9d1/c45z/M+59znfnM3bFWtZZKEhISOSRMSmmteSJaQ
sFxfkWvmNYynnvxn2ftk4bDsPUrKV5hf47p5LROoLz8ga0lWjshaUEq+0lyJ
G+Z1TOR9XnRslbwyN83rmUQD+UFZK7Lxqyz+6NLy1eYq3DJvYDIN5YdkH5Cd
32Qz07peLePYGllV/jFvZAqN5L/IWpOD32UfUFa+1lyNf82b6Cy7aO5HEabK
GssO69uQk6OyvrIERphLxWfLXjKv01fntvkzczommzebP9Rf0vfnKabJmsiO
6NuSi3HmTCTqjzneT5+EkeYlaiFe1H+h5uIr/Xr1Gdo4v5y6XvY6s/UPxt+p
H67eyVammJerhdnH167rol6Wf6sOUL9UH2MPRc2T1azsYL55nVoi1g3TXf+O
+qv8G7WdOl99mAf0n6uZmaVfrRbjD9f0V5MySl6aGXE+i+N+OF5ev0H/BkkY
Yb6LqfE9jnfVX9EPpFjcE9m7st/07cnNcdkAWTJGm8vQTlbBvFH/Jknjd8tm
0FT+u7kDeTgha8/L8k3mGiTju1h3dOAVxzbL3iI5W2SJ1mSi2pFOsa7i+cd9
5tW4586rSQq2ymbRTH406f/va15OygbKkjPGXJausormb/S1SMlI891M03/v
eDf9Vf0gijPFnI0FsSYcb64/pu/EAv0jsU7049V7ma1foxbnT+cPUlPwHWMd
W6o+wV5eMs9Uc/MjS8wb1Gdjj6Cb619Tv413QK2tzlEfYhd3mEep6fk+1pJ5
hVqEH1z7kXpNNpiv9AV5Ot5LNTsL4/Niv4o1pe/MQn2B+A79BPU+5uhPOW+w
PiXjzOX4SFYpfpu+DqnYJusuu64fQgnmxh4nO67/kHycjvOoLN9irktqtsvm
xb4nP2HuQn7OyHrEs7Y2eqpV4n2Uv00adsjmx/4nPxnPmoc5K+tF1bhH5nqk
5UfZAlrFczJ34xHOyXpTLe6huT7p2BnfL7uh/4Rn4l7FXig7FfeCApyX9aG6
fJu5AXeyS9ZTdlM/lGdZJGstO63vzqNckA2JZ8vn5vJ8LHvdvF3fkLsYbb6H
L/S74zfqb+mH8RzTzDlYFPuR4230Z/Q94nv1j8YepZ+o3h+fzVzz2lgj/OWa
T9RU8XwY79gy9Ul+ooI5Uc3DTpaaN6rPcZC+rn8j9jz512qjWAdqPnbHO2ce
o2aI+8wM80r1KfbEM1D/kX3KYv3jPK+frubky1jTzmurP6vvSUEmmbMwT/+3
40P1qZlgfpl+sjfjfdM3Jj1745nJ/tV/xgvxnbJ2snP6XjzOxdh3qRG/2dyE
e/hJtiT2Ovl5c28KcSn2T96K99X8DhnYJ1sa+xM1437I3iUj+2XLYt+gVtwL
WVMy8bNsebyHzPYeDIlnFL+RYdSOfcV5zcjMAdmK2GflF8x9eILLcb4sDRPN
r8R9ltWJZ6tvzjx9/tjT9GPVjLGemWlepRZlfzxr132s3pYPp2Q8x9i7Yw3F
2uVJrsT/dOrK95nf4z4OyVYxnBGMZBSjGcNYxvF2fJ/zW3A/v8hWx/8H+d/m
vhTmquxTWVommV9llj4vy/SbYh1xKN4v5/4HSFtScA==
           "]]}, Annotation[#, "Charting`Private`Tag$152929#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfcjlUcx/Ebz2PvXZIUKiUr2RkV2SKKZCUj2bvsmZmVPUPTjCYNSkPD
rLTsvTIyMtL798fn9R3n3Ndzn3Of6zwF23Zr1DVFIpHYmzKR+CtVIvFPciLx
BLYlJRLdURKlUycSk3VZsErOgty6XvJ5fioaY4/PX9Q1wna5B0rhQXOn6LJi
tZwVeXS95Qv8NDyJGrolujuxSd7reZf4xtgh94x55qyRS6C0XEaeymfDGjkb
8ur6yP/w09FK3iBXRBO5pryUvwtfyl3kLXwt7PM3L9MnsdNYH2M7+F58E/49
viTG8Ifog/qH+Gn8PJqdDqZ/0JUx33hHulleRh+lk+hJ+mHMN34L7SvPoRfl
l+iv8nL6mtyafiq/TivR8fQYXUebGn+cLpMLYTi/l36l78p/z9fGfuu6EuvH
LmO90dT4WrkUyshl5el8DqyVc+BWXT/5Ej8DT+GAZ/2ra4qfY49iD5AT+czv
r7/Mz8TTOGj+Vd1T+EXuG38L5WJ9upyxFjkXbtMNkK/ws9BG/kyujGZyLfkN
vjA2y4c8+xr/NH6V+8V3NGddnA+Uk8vLM/hcGML/Sd/Xd+K/5t+gj9FX6Sn6
Ec1tPD99SZ5L/5VfprvlFXS23JZ+Li+hD9MJ9Hg8mzY3Xpu+KS+gRegIui/e
gfi7xrvRH+Q6mMr/TQ9bz/VYK3bHXul38v1jL/n348yhvFxBnsnnxgfxTuF2
3cvyVX4OnkEd3Vu6u/GNfMTfuME3x2/ygHgWKpo3S5cnzma8RyigGyhf4+ei
BY76/H+6Z/B7nNf4bJxjHDN2HDeNtcAfsW+oFGcJd3jeIP11fh6exQnzE/pn
9X/KA1E5PhP7rMsbv0mcLRTUDZZv8PPxnPyFXAUt5bry2/w9GMnvp9/GXcb/
yNfFNP4sPenvpuBb8jPpX3F+6C75nfiecjP6gbyIlqGv0MP0vfjN43vSOfJ8
egsdGs+Je5J+bPwF+o38Jq1BJ9PT9DZjd/JD+P9izfxvcVb4dvxGvipayfXk
d/h78V3cq/JPfD2csoaUcit+j7HBaC5/KD8U+yI/LM/lb8Unca5xl26ofJNf
GHcM6uve1RXFFvm0Z6fStZb3ykNQFVV083T5sD7OHArphsmJ2Kt4b3HG55P0
beJelYeiWpwpFNYP16fA4niX8Lf5yfq2cV/Jw1A9zgyK6EfoU8Y9GL87zpqf
Wv+c7oA8HI/EGcE5Y+dxIf6nIY157cw7aGwEHo39x0VjaY09b+yQPBKPxf7g
bv1Ifap4x+N3wSXz0+nbx7sqj0KNWD/u0Y/SJ2Gp/Dwum59e30F3RB6NmrGP
uvlxDrAh9gP36kbLyVgmt0cD3XL5PnwvX/G8DLqO8lF5TLzj8kdyWTweeywv
4PNjGL+HfqrvzH/L18QU/gwtoi/Kj+FTYxD/e9yJ8f35TbEWWo1OpCfiron1
GG9IV8gL6f10FD1A18S9Zrwn3Sq/RevT6fQc/TjuU+vISDvJs+L/mfn96c/x
jsU9E+9P3N8Yyx+hteI88Av52/GZ/KL8Xaw77jf5PvkVPk28c7GH8pd8dXSU
n5BX8sXwo3zV98ike0E+Lo+NezvOkW6RrgA+j98W9+vGymljTXInXPP5zPrO
uhPyuLhv47dEMf04fTq8HXcBrpufRf9i3D/y+Liz4jfAjbhX4+6M+1BOgazm
don3nJ8Qd0GsEQ/ox+vTx10Vvy1SIpu+q+40PzHe6fjeKK6foM+Ad2PfkArZ
9d10Z/hJcR/Ln8jl0SDeE3kxfwe+iDWhhG6inBHL5Q7yV/wj6CI3klfxD2A0
f5D+pO/Fb4u9oA3oa/R83Ek0yXgO2l2eHf8L5QH0l/i+9FW5JV0f9wWtQMfR
o3QtbRjvLX1dLoiNsUcoqZskZ8IKuSuSkVPfQ3eWnxznIvYIqZEGaZEO6ZEB
GZEJuXyup8+d46fEWmM/UCq+oz4zVsrd0Fi3Wi6OrXJveTvfEDP4C3F/0szG
/ge+EnSp
           "]]}, Annotation[#, "Charting`Private`Tag$152929#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4FlUUBtCPbmlBESlpkW6lBelO6W4EFAM7MFExULGQ7g6V7kakQVBB
UEpSSkVc+8d69rv3zJz57sycm6/7kBaDkyQSiTxJE4nlKROJRqkTiYOpEoln
qUhqzpv3Nr8sj6U5+Vlh3tj8kPwclUjDBfOVNHHssP55KpOWi+arWM0a1rKO
9WxgI5vYzBa2so3t7GAnTa37k7VeoArpuGTex/yK/AktKMAP5s3Mj8gvUpX0
XDbva/6X/CktuY9d5s3Nj8ov8SAZGGmWiplyb644r5/+qvwZrWId/X1slgvy
upyVpfICtRrD5IlqSfbIP1qnhfyz/DLT5HI8JI9Rc8d6rNEvVmuylzviHamp
Wc8s/Ry1Crvoo/9KLcY2duqXqfXi/cbf7b791Wvma9Rx6ky1Iq3jb1ILskUu
xBtyNr6Vh7Pb9S31v8ivUI2M8R2YpWG23Jerzhugvy5/ThsKs8e8lfmv8qtU
JxPXzPeyj9aOHzN7jRpk5rr5fto4dlw/ippk4Yb5QPMb8he0pQgHzNua/xbv
hFpk5ab5IPOb8pe0oygHzduZn4i/m9pki+/YLC1z5H787bzB+r/jWdOeYrxp
lp3v5Mc55Lz2+pNxjDp8oL+XtXL2+JbldMyV+/OPa4bo/5G/pgPj9IXYKhfn
LflOvpefYJJcKr4P+bDrO8i/x3lMl8vzsPyhmod18hK1VqwT+0NNzwbm6eeq
VfmRAfE71OJs5wf9cvWR2P/8636PRTVfq45XZ6mV4tvj0Xj/auH4puKb1H8X
v4f93K9/W83BMnmhWp0R8mS1NPvkn9znUfmPOJ+6fKTPG/tAzhH7Vs7ARubr
56kPspuB+vFxv9gn8i3rDZVvyd/QkRK8Y5aT5fKTHHFeR/2pOEY9Ptbni+cl
54z9G/uSBfL82MMMinXVEvEc5RVqff6z3rCoZuvUCepstXI8WzrFN6wWifcd
z1z/vVqXAzygH63exSZW6BepNdjDU/opahl2xDPWr1QbcNS9O6mnzVaro9UZ
aoV4n/JYNX88P3mpWjvuE/tczchCeTAT4nfEc5VvW3O4fFueSOfYU/qicX+5
JO/Kd7NSfpqfXdNZfyaOUZ+74/+BWSYWyUNIxD7SJ5gkd6EU7+lzsUp+hl+s
10V/No7RgFzx/8MsM4vlx0gS+0WfhMlyV0rzq+u7mp2T36ch95CUEeZJmSJ3
owzHnN/N7E95DI3ITbL4ZsyTMVXuTlmOO7+72fnY/zTmXpLzlHlypsk9KMdv
zu9hdiH2LE34RF8g3rn8rVon9kXsZ/0oNQtL5KGkiOesT8F0uSflOWHdnmYX
Y+/QlLyk5KRjv/MHpzjNGc5yjl6uuxTfPs3IR6p4/uYpmSH3okI8Q/09rJZH
MlUuG9+vvEptyOF4ftb9H4yuKOk=
           "]]}, Annotation[#, "Charting`Private`Tag$152929#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xe8jmUcx/HnmMemlIqEUrILpSTZuzghpJJklmNllL333ltoyIjQXiqV
ZIWUVUZ2dsNI798fn9d3XNf93Ou67qdgq9SUTkmJRGJTmkRiT3IicTJzIlEP
mzMlEp1RGtmQPUsikao/x0/Gk9hr/ildfWyRu+C+mIsc5nfWn+enoBH2mX9a
9zi2yl1xP4qZO0aXHe/Gscip6yJf4KeiMfY7/k/dE9gmd0MZFDd3rC4HVsWx
yKXrKl/kp6EJHtHN1d2BL+UDfu8M3wDb5e6obc5SuTjKyiXkcXxOrJaflj/h
H0Uu+Qa5G3+Jn44U+T25HJ6SK8rz+ALowf9M1+uf59fz1TCU/4P+5nrO0oYY
pfvJvPZ0ozyLviLXoe/Ik2kJ+irdQ+fTcsZL0vHyeJqLdo3foXPjuoy3oJ/K
02klOpAepDcYu5Hvzv/Fd+K38DPiXfNr+AfQVH5Uns8XxFdyK/krvjp+dw/n
aAp2GOuBB1DKnAlxHqyJcyF33JP8Nz8TzXDQ8ed1T2Kn3BMPxlwcMnYYF4w1
wi5dL5THTYHf66H/h5+F5jhi/kVdY/ws98ZDsa7Nnai7EWvlmwNdT/lffnas
WXmt/CCelivJC/hC+Fp+Qf6ar4E/nOcSbYLdxjoY+yHeD1+XX8aXxGv8Xvpw
7BV+Ej+B5qbd6A66ztgz/Gfx/OljdBA9RBfTPMbz0F7yGHpZTqVb5dl0TuwX
uk6eSsvTfvQAfZ22MP4YXSjfiZ78bvqNvjX/DV8Tw/ij9Kh7+yvWM34xp6N+
U9wLX49fzpdChdjP8mT+JrwvPyt/zlfGLfItcm/+Cj839qX8vvwQnpEry6/z
d2GDfMy5/451h1/lPrGPY9+bN0V3Mz6Qbw10r8pX+Xlxbhx3/D+6Ztgj9409
ibLmTtXlwYfybYHuNfkaPx/P4YTj/9U1x165X6x/5A3M76P/j1+Aljhp/uVY
L9gn9491g3w4ZeyKvgX2ywPiPeB2nI5vG67Gc8AB3cB4HsgfxztXX/11fmF8
P3DG/Gu6Z+PbIQ9CFZQzd1o8b3wk3xHn0PWTE7EG5KfkD2IdolUcJy/iC+Nb
+azf/o9/Lva0PBj1zVkhl0bV2NfydP5WdOd30o/jufFf8FUwmD8c37+4D74/
P5Ym0c50G50T5zbelH4oT6MVaH/6G11EXzBelS6WJ9G7aS/6C/3O2Iv8Br4W
hvPH6Dn3cJ22xEFzXtL/yA/hH+dX8vehWnxj5Bn8bfhELhjPTTdAThP7LvYG
qumWyPfge/m8cyR0z8uH5KGojkIooB+oT4slcY24YH6SvpXusDwMNXAnLsY3
JPZarPlYt7H2kCbu3/wj5gxHTdyFy8bSGmsd3x95BGqhcFy/fpA+Hd6Q2+CK
+en0L8aelkeiNu6O69UP1qfHm3JbXDU/vb6N7pg8CnXie6ubqcuLT+V74vp1
Q+QMeEtuJn/EP4J28UzkN/gi6M3/SjfGdfHf8rUxgj8e+895M/Bt+dHRmfcy
3RyZf4J/l59C76d96D66gNaN7zudJU+k+egrdBedF9/U2Kf0S3kmrRrrgR6J
d0SLxLOlQ+VxNCPtQrfTt4015z/mK2IA/zttH++Qf5O/Fz/E85O/4+vE98H9
ZJTb8SeMjUEDeZVcBvXkh+XZ/O34XL433qNumJyMpfGfEu9e95ZcFJvk6347
WddePimPjX2KovFe9cP1mfBOfLeRQCZ9B90pflzsBRSL96gfoc+MZbFfkITM
+o660/z4eP4ojiL6kfosWB7vCGmQRf+S7k9+AhrKq+Wy6MvvpwtpA2MV4v9K
zo8v5BJx77pRclaskDshLbLqX9ad4SfG76Ik0iE9MiAjkuMe47rjWpDNcZ0c
d5afhBSUimekH63PhpVyauwf3dtyMfwot5O/5+tiJH8i9hPNaux/OSB1TA==

           "]]}, Annotation[#, "Charting`Private`Tag$152929#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8647431443886185`*^9, 3.864751680232676*^9, {3.8649246263958454`*^9, 
   3.8649246663018637`*^9}, {3.8649247386913157`*^9, 3.86492476348625*^9}, {
   3.8649264053781443`*^9, 3.8649264245239162`*^9}, {3.864928178079486*^9, 
   3.864928183150836*^9}, 3.8649282170238175`*^9, {3.8649282854075727`*^9, 
   3.8649283192815533`*^9}, 3.864928522906314*^9, {3.864928905872735*^9, 
   3.8649289410632877`*^9}, {3.8649290175684013`*^9, 3.864929049070153*^9}, 
   3.8651016948686595`*^9, {3.865101726283621*^9, 3.865101739630356*^9}, 
   3.8651017874490757`*^9, {3.865101821750115*^9, 3.865101825030067*^9}, {
   3.8651020796127157`*^9, 3.8651020839913163`*^9}},
 CellLabel->
  "Out[984]=",ExpressionUUID->"f24bd078-1d34-4561-a2f2-daed1e1ae669"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
+fNPKg6AiVub0g7qfJi4nH+HhQYTPLPmTDZQ67/Y31+4uI6O5k5XZVRS87Mn
ZK5o7agiWpOj3il+iIZODX24Fh7ABGbYbu85VH5+3ewxsnWAjk5GOjSuoF4/
+trswe/pIRDvPkSbR/XXd4uC1vn3dDSSMKT1v/qkKsZ8eBtzECZO7Ec7qfUb
tP3N3EwBJthqfal4Tc3Pq5Lfmnd8oaOXZ0YHlKnPGzy97bzcNB0dwcbv38sL
o+uqpY6Lrw1DFTj8dKI+f3qZz41jn+loL+vEwWPU3+0XleU98h2CiI5jq3Kp
56kXc7zWbMaEtC+LJ79Q4yM8skJHt5mOeMJ3HxeaK4wU3v2zev5XEa2dNarV
3ktDGcKa/x13OQyWj23V9V2G8apZh3F5JgYrTzPTlMIRXLtV5mnVhRoQ2rf7
j2gwC1+2SH1fe6IBntVoPVDtHMPbmgLeKqq2wOHmsMBg5jieunM665d1B/RI
xOa+rZjAMTeOOrRt6YFa+csXDltT84/3QPnXewPg/XjmaBMVr1DLgcKz9ky4
kzl1vIkanzwU577cehQm56++GXyVjQ21xSd6fcbgw5LiCC8RNj6qr2E5cXIC
SgY28n3dP4G73mhZ/DwyCYMby08YeI3jz8I/lpRemILX5iZrVXXGsIQMT029
zzTYXktyni4dxS9sl//Y+/gfHKZbNIkNM3HIwvy3U9/noNr5azYd+kBDyLNr
lcphGZTWdm4XPVoQzTU957n7N7Xexq5v3uEshL4miRyAg3TEcDXdt7RHCNUq
b/p7vI2ab4+i+Lup+E0mPg3usJdF7ianmWwqv8k4umS9PK2IPN5qlqrW05Bx
8p0fK/c0wwqjnlU/qP4iG4MnYnptcFxmekOW0wROaL0yk76jC9xGD32SV2Rj
jyjd2VmPPjCt0Na4douq/8f2SY3EDMGmmEyeI9T8UUyVv/fvwAisu2fouYSa
35WBekfrjrHAss828rElG3/oKpG/7jUOOx86uWt8msChzT6bH7qwodPwkOqd
wXFcVNpkmRMugz5XLLiWLiGEpJ+Ebk5VpqPTYSY3jBOFULvexYyecOo8Wc+q
MJcURnxX8YLQ+bIoSXZ8YQCV326K3+bryVJEef0/zn58SEOij6q1PQ/2Qnvi
hH6sJ1VvTNl4HH4xCFdu0iv/d76zvnJFM/sXE5qCLNqbqPxW0snqnv01ChcX
W6fkuLHx4xMBjddmZFBY9tpF5XeFUINvobDsRTryz7b4avVPCLnt4JHi5ZNF
Jh9vTVpQ9UBVytuvwZf6oUY4f0XvMzbWH7ROvpo2DCZn6wf0qfXS2BU7hhpG
4M/lNTP5odT5A7+O69Cjo8pix3CfKiE0zLPeKSePagc0bI+g8hs6oqQh8UcR
3dh9LCzFk4bsL/18Ji8/CAdvd3yVp/LbWHf6xNwIJrzb4rKmlspvVqFOSZoe
dDS7bGzNPxa1/6Wr3Vg/SkeSbg9HTlD5TXX5KafS8T7Y1aW9zfgBtT+d+tGy
ceUwrK7e57mP6p+raqNk3Uc6inLYM1xF1WvXzzQYxCwYAoNbfJf2U+s3fe42
WzvlEfjXpRo2Sa0Xu/1q9v/u0pH6p7zauUJUvaLXpGMtNAASjzdPelL7W7dO
f36nChMU8YL7c6j54dP+MCf6Gx1Z+A/GxVLz88Wd1owIpiK68PvMV2RPzcfn
u+wq/KnzRYb4aR8qv/n1audZ9VH52iT2P3vq9fbJCn5yA0PA6+O7/x/1eRrx
y9rtounoVfnd9E1UftP/pMi49mcQIlwztg1T778RKz8venIYHN3Y+8qp16/2
6ry/upyOOo4d6/xNjUfRVWkL5Sk6msOXx5xDjfeo1pMth7yGQXG4c6sHNR5x
927pmmfS0Skt64yh/8V37dN3lceGwFDvtKM/ld/EZLdOnAEmeARovpCj2hl7
jHqVG+mo5daROn4qv1W+KuZx5SgikdV9aa77aGgR/yc7+y46OjxxsyCReh7d
uozN1yqG4F/08bWZVP/sK9O7ZH8Mw/JFbTFi1PeHbJScZhfRUfazYOvtVH9P
vXjarTlBR75rtQSqqP5W7VgvV7lzGKLnSDu5Ua+Psd7gpWs8BOVHpzljVLzO
qs9rTtBiQt7XFcovqP7JK7vvbmPQUf7UAc8u6vsrqmMWmAzRUd07u74x6vOv
3z8TFy0xDK3I/Pga6vP2mmRFK0sw4XJZ8NRpqn91H7IXH/9K1d+zunm7qffL
S7IvMh8Ow7zu3QvtqNfb3FXy3/ebjozRn6f/e36H2PVvv84oIn9Ll4QJKxoi
/GL0wwob54oZLr+w+ePpuuz3GJdfLD26YLFXUB+XXxxwlj6YVvubyy+cvY+f
axmr4PILplPUsZy1j4DwC3rryKbs6hIg/ELSJtJ+4dVaIPzi2eKENfwvGUD4
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
dc1dnYsVH7Cxf90r5FrBO0829q9Xv97u/daXjf3rj0xaK7bZsMH+/u9W9y4J
w1PTh2rWVrIA+v7e7xOa5dE9gwDlu2QkeZ+fHOgFKN/1isU27W1qw/ku7esZ
5i88qnC+60AzVce+IJ9A+S7VWz/PlMswCJS3Gv+c+vDS3iYC5a12KZo5H/01
hH3o0MWE46oaB0Q+9Ct/TBp80ygQ+dDVnVO617SR++xafqrPHh5YsypKw6ub
A6J8klpyb83JDZPYf352NNeF49UY9p/bN6YoeeaMYP/5z92zro2uw9h/7nwv
SWhpCRv7z5P0BOX2+LPBN27x/AglKry8Y9ylldz/6J3tByzeUaGY3znZFnK+
Q2nac+47hSFVZt+vtM1scFf+1MbzmcLwa+vEeUNNFqgLvREiqCYCeWgn7d68
6Qco73T/ReD2dWldAOWd4i+YjjDG/uC8E/eK9Q4NfVk475QgynuI+10BgfJH
BsP7DPPPtxAofyRxU/jJTZVh7FvXXHV4m4nlAPatT73UjMi43I195TEdPwtL
vs/hPE7xoW6rVeR8Il950s6bPLw9FGizJyfXMYobbi9SY/k9J+f/v7yOk2jy
ge3HOSDK58y+C1luKj6NfeV/mK9vya755yufnQn5adY6in3luTsFp+7JjWBf
ufLV3w+K1w1jX/keaV/eT0ls7Cs3lChQkiP3G+Qrb9YKtLYi1zfylRuK1rae
dSD3qzjmm4azwtA9z+vAgR4WQN8n3BB5mF1gNQRQvucoZ8+e1Od9AOV7KuAZ
UdHmdpzvkfhS9nn5sVqc70nfdSsibjKdQPmeL+8lD0wVFhIob5OwJrpZIP8P
gfI2apK11O8nWNgfvnm3Xz2YWADIH97GXVBwOJwCkT/8tuwtjtJ+CjS8VfbF
U5wHRvvt7rRdToEon8KlFXWadW0S+8Jp8XL9BQNj2BdeWR2lXTM4gn3hYp+y
NKbvDWNfuKq/iN90NRv7wg8dv6V/OIgNuqZ+3/kkQ4W7G9dmjZLzqxhryqx/
TIWyrZUPtLzZIM+3zTdeRhjy3F9yZ16dDWabfDwynwvDVk75JMVzLDDT+y2D
S04EvhaI/jipOwBQ3qU7xDsb3OoGKO9iUGtyWWlfC8673C9LXvojkIHzLkku
V74sOVlAoPzJ/JT6AY+WZuwPz1ZfeNCqTYFHfl31vV3LBb8B48HBEQo0OwP3
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
TD3+H5yvQLA=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{510, 3148, 432, 433, 434, 435, 894, 760, 652, 568, 
            509, 476, 921, 787, 679, 595, 536, 947, 813, 705, 621, 436, 895, 
            761, 653, 976, 842, 569, 956, 822, 1008, 714, 990, 856, 1019}}], 
           
           PolygonBox[{{3145, 3149, 397, 865, 731, 623, 539, 480, 447, 898, 
            764, 656, 572, 513, 398, 866, 732, 624, 540, 481, 448, 899, 765, 
            657, 573, 514, 399, 867, 733, 625, 541, 482, 449, 400, 868, 734, 
            626, 542, 483, 450, 900, 766, 658, 574, 515, 401, 869, 735, 627, 
            543, 484, 451, 901, 767, 659, 575, 516}}], 
           PolygonBox[CompressedData["
1:eJwVzzkohgEcBvAX5T52LCbnxMTAIrcSZUAGCxbX7BoNrtl9zI6REIOj3FGi
DAblvpKyKL9v+PU8/+f73u/tS2vprO0ID4IgjCEq44OggiPDBJNMMc0MHRFB
8OiBXjJ4sx0zbI9kwlZCHEvudDb0VmZ9r9P9pPeRyZo7l3393edzejLL7gZ2
9UIu9BOfj+hRTLovZBWl+rbM50S/kw3E68sygxc23Teyjl/a3IeymG+u3fey
mT/mvK9LPtsfZL88lWX8kOVel3m8c+C+lfV8eHZeprBiv5I1NOp7sojL0O/5
3qgezZT7UlaH3qHvyAJO9QRW9Ey29HbmPdsd+m/6ANl82hZsqay6mzizjblj
mHaXk8iCvcf2qg+Sw5ftnHF7LDO2CpJYtP8DLpxNLg==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0jtMU2EYBuBTsHIJs+gmAnVEJ1xMEDQGGUhIQJvIIlgFURYVgR1BNii3
RGEjsciooAksULwPDgoJA8ql3BcXE8PAc4Yn3/u9/zmn7UmL7rTXPcoKgiDC
JNUFQXCDA8V5B91s8zA7CMZ0X9gnpusiQ5uzUV2+fI0xorp+Puv3KNV1ssUD
/YguIX8gZn9DnnyVUU7YX/DJdXH7NGfsE+zq0vaL8gwl8jM2abUPO1+Wq8LP
5678nlJ5ilw5bq7xTb5kzlMl15g/wu8n75rZ9PHRM4/M26yH1zj/a15mgVv2
f2YtP8PfY98zTzPOjvv/m/Wssuj80LzAO4rt183vdMgbtMhD7ms0N/ilqwzf
Cc1ynbnCrFxipsiRv1Iuz1EpD5Ml97LkeTftUxTaX7GtW7CXyW85Jz9lnfv2
pPMmeYZi+2tOylcYImJ/Ttp1DfYUp+wvyeiK7E/4wz3doC4qV5AM/3y6nvCd
6Lc4q3vMbxL6Ad0xeitaTw==
            "]], 
           PolygonBox[CompressedData["
1:eJwV0TdMVWEYBuCjjqACIk4WVlRAAR100IGBgCjEhMFYYBQjA4J9sCNONmBT
EbCjICyaYEtE4yAiRSAODiQOFnpRQ3z+4cn3ve855/733JtcUlZ4cH4URfN4
Q25sFOXxWDHEPza64RLTnFwQRc26Qf6yQVfNFCdce6Qb4A9ZuotMcty1h7pl
9kKaSNDV8UU/S6auigmO6R/okuwFNBKvq6VfXyy3kyzfYUaXIV9gnKO6+7oD
9peskVtZau9is/01O+wNxNlr6PNMr7zV3sm+cH44kzb7KrOJafcVmV95r/9t
ZvGc9eH3MHP4yHn5uzlmHjHveXbO3MswA+GdzWw+UCrPmjsZ5IX8w1xNC4ny
LvNb+Hz7qLmJV2yX880ebtsXm9fpdWaPvMX+Npxtf8pKeyNTrr+TM+3PWGc/
Fz6bw/Jd1/fbO0iRn7AknEU9i+Rr4Vz37ZFbWSE3MKlLl88yQmX4z3QJ9m3c
YqHuKp/1u+UWlod3YEKXJp8JvzMV4T/QxdvzuEms7grd+nFSdaf5xaHwjro4
ey43iNFd5pN+jLW6U/ykPHxv3X9cNXEL
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1XdYllUYB2AUVHLjAiciIG6FlpmVLYUyQdRsaQnaEBLS1LZIzkxL21nZ
UBvasF2uNNtp23bacJSWo2G77ufyj/v7Pc8513e957znfJBRUlE8rkZCQsL1
PiJ7+vha3kcFp3AoNell7ht5P5WcymEkkmvuW/kAlzCQw0kiz9x3cjHjOY0j
6G/8d/k8MxhFrXie8W1yCRMYxJEMMP6HfIGZlFA71mB8u1zKpRTSm3zjf8oX
mUUpdWJdxnfIB5lIEUON1eZV9c0cRYH+L7mS2YzRp/KxejRnqxuwUb2QMnVb
vlQnxx7VO+VDTIr96ZvygXoww9R1eC32KbO5RX2hbMW1fKa/XHalT5yH/Fte
I1fFu5aZzOQ6/fkyjWo+0U+WnWOOMfpzZEOmsCnel+zILO7Sl8t2TOMr/RWy
G4fEGcjv5cNxN9QZTI5zkM34UF3M6epkXlffykXq1nyuPjrujfofuZo5sWZG
GGvEO+q7qRtnqP9BPsJlDGF4rIU31LfRN+6a/l+5Ju4xF1AvztD4Lrks3mGc
McfE/TP+n1zL3Hjf1KeP8d1yeew7zodj4/7FD4OXxLzYDw1iL8Z+lI9yZeyb
42gY6zL3k3yMq2Ld9KNRrMHcHvk4V3MGx9M4nmdur3wizpgzOYEUmtCUZjSn
Bamk0ZJWtKYNbWlHOu3JoAOZZMU6PWefXMEUzuJEsmOd5vbLJ6mKe85JFMbf
CNapb2AsHWPtxn6WTzE17ljsyVhd3lTfzskU6WuyXn0jZYzUN+Zd9T3kxH71
v8inqaZU35yP4p7EO1HX4y31HbEOdRu+UPdnsDqRl9XjZRbz417Ilnwa90l2
oVx9rkyhivf0E2UOs1mkv1imM50tcdayO3PoFO9N/hpnKZ+RlbIDM+I3rB8t
WzCVzfpJ8T1GxnuX9XlbfScDKNYnsUG9IJ5P5zgDY7/JZ5kW6yafLnSlG93p
QU96kRvv3vcOyOeYznkUMMR4LV5R38S4mNM34X31vTGmbs/WuMeyR42D/yvy
9P8DqxCo3A==
           "]]}, Annotation[#, "Charting`Private`Tag$153040#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Xf8TQUYB+CLqIhEpEQIKRKJhtVAhZRRRlGUlZXKThSlzEhm9t577z3L
li1lZGYVGel5P/3xfN7v+z3n3Ot37rlX9jrNKjVNkkgkWiVNJHoItZMlEvvl
ZmTmV90yvtTfsH9HMZLQU19Hf0D+iAc5oltOJ/1Ne2+Kk5Re+vf1B+XmZOE3
3Qq+4wPHDuk+Jiu/61bSWf+vvQ8lSBavq6+rPyx/wkMc1a3iK/0t+/eU5DZe
vcv1jtVz7Ff7p2TjmG41X+sT9NU9T/K4Xl9fd0RuQXaO637UZWSi/S3W6LrY
k/CD/QVSMMH+MPPk9+nrvAb23+SW5GCO/QlWySccHyLfxyR7VdbqvrEnpZ/9
RZbIT7NJvp2Jck7my3vMSnwgrzdfZHfcS7Nm/Pu8XkPz96T/f+Y/yS/Hv1Oe
axbgLKvt+803ucYfrhtqZuIUkx3fZb7OFarZV5nFuci2+GzNd+K5YZ3rvzWT
cZL+jm8zy/GSvNR8hs3yYbM6d8iTzFwskOuyIc7nF7mf1/xQPiq3Jifz7AVZ
I590fJh8P1Ps1eOe6Lrab2OAvRR3Mtmem4VyPfo7r5H9mNyGXJzSbaCbPjkD
daVJyQB9Y91xuS25Oa3byECaOHZC145HOKMr65ncZA5icDxX8fnHfaZp3HPn
fUYezuo2012fgkG6MqRiiv0RFsn1Gea8ZnGf5fY8ynz7k6yVzzk+XH6AqfYa
rJZLsD2eCcd7yLcz2L7dLB/PibzMfJaf4rfBrMFd8lQzD6dZbN9rVuYqDewb
zVJcYk98V81a8RvBcO/3UTxX8R0wPzd/Nl/hLx6zLzALcS6eJfsB8y3+dO0I
MzPT9LvNN3g7vpdmSXbE6zmvZzxT/GjfYb4W7yEvN5/jZzk10+RHWSI3ZIRr
m8ffJncgL+d1I3UPMt3+Dlt0vex3MiR+c0jDSP3HujNyR/JxQbc1fvf0KRmq
K8vdjNKX82yMNj+J76PuCx7nom4bvfWpGKYrR1rG6D+NeyR/SX4u6bbTJz6n
uNe68tzDWH2LuIdyJ57gsm6ULgsz7DXjXum+t6dmhP010jFO31J3Xu5MAf7S
jdZlZaa9Fjt1fe1pGGmvQHqmx2fLUvlDxjuvlf2C/BUFWWh/ivXy346PkR9i
lv1d1srPszN+jxz/Qb6bUfG+ZoX4jZJXmEXjtdliPxLPCPfKM8y88fmwzL7P
rMI/NLJvMktzmb32Y+a7/MsE79navKj/w/w6ngPzVf6O75x9kVk47jMb7AfN
qlxx7VgzG7P1v5gVeU9eZ77ArnimnddPTsto+xuslIuxVc7ATDkfy+XGTHRN
m/i+yV0oxFXdOF125thrx3vq+tvvYYy9IhmZpG8bf7P8DU/xj24PA/TpGKur
xH1M1reL76v8LYW5ptvLFD6L+6HrShGu6/YxlfZxL3TdeJobuv1Mo7zvwXRz
BjOZxefxu+K87jzDTd2B+J3Vp2ecrjKZmGV/nBVyE2Y7r0N8tnIPtspleVZe
bBaJ55mN9kNmNa7HZ+268WYO5jpWJz7H+O2OZ4jx9irczxx9R901uSfPcUt3
iLnMYz4LWMgiFrOEL+L9nN+LoiQ4HP8/6DPE82Z/kwfib7HnZ6XclM1yGfbJ
x+M54lZ8v1z/H6/zYPs=
           "]]}, Annotation[#, "Charting`Private`Tag$153040#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/kM8m/H/CfIgs5TP/g8IGa9q
           "]]}, Annotation[#, "Charting`Private`Tag$153040#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1WXYFGUAheGlu7u7u7sxQEHEBEURDBABUUHp7u7ulpIG6UYaJaW7ke7w
fn8813POmZ39Zndnri9Lo5Z1W0SJRCKJo0YibWMJcSKRQbEjkeK4p2/FPKSx
z7bVQjycsrVDFPtgvQTu69swH+0R1bEh9pJ4oG/HAnRAR3RCZ3RBV3RDd/RA
T/RCb/RBX/RDfwxANO891PuWwkN9BxYirX2OrTbi47RtIKLbh+ml8UjfiYK2
tXojZMYiWzrbXPk9JEAN/Sh3xBnHy+o75RZoLN/l/PhQPs99MMjrYujD5TKo
L1/lx/aq8gH5N27D3/FD7sZ/OV6I1+mtuTE35NvcmbOE6+JT3J67c3N+zr34
D+en59/1n7kON+AbnBA15WPcCc3kp3zWOeXC35Zb4mv5HhfAR/IF7ovBXhdT
HyGXxRO9mn5Q/hW79ML6+vAeyIrFtgy2efL7SIRztiGIZR+pl8NTfTeWYCiG
Ibbjoxwrj2f6HixFRvt8W10kxnnbcMSxj9Yr4Lm+F8uQyb7A9gGS4IJtBOLa
x+gV8ULfh+XIbF8Yfk8kxUXbSMSzj9Ur4aW+H0VsG/RvkA0rbFlsi8J3h2S4
ZBuF+PZxemW80g+gqG2j/i2yY6Uta/gd5Y+RHJdt5W275B9REKNtCWzj5Sp4
rVfX/w73FQ7qxfRN4f5CDtTRT3MPrHI8m75Y/gRfyDc5Bd6Rj4f7DVe8roK+
W24VPqd8nwuF65Mvcr9wXfIrHuP1CeUJ8k9clT/ja+Ge4wi/wf9wW27LTfgR
dw/X7/zivFlvw034K/6Pu3DOcB/xGe7APcNzyC94tXOzy0vkT5ES7+r/hnNx
1fGK+p5wbSgcPrt+iftjrOOJ9IlyNXwuX+coeFM+xO24HTflx+G7DJ/FeSV4
S3gOuCk34jvclXOFe5XPckfuFZ4zfsm9+U/n5+Cl+i9cj7/kW5wKteQT4b3w
g/yMrzmnkrw3POfh/pEfcJHw2eXLPADjvC6xPkmujqh4Sz/M7XHI8ZL6Vvl7
5A7PiX4uXBvWOJ5TXybXR2rU1k9yN1x3vLK+L1w7imK8LYltcvitEQ2HbaVs
2+RmyIO1tly25eEeQRrcsE1AUvuU8L0jOo7YStu2h+8AebHOltu2IvxWSIub
tolIZp8aPiti4KhtPfLYV+oNkA63bJOQ3D5Nfxsxccy2AXntq8LzgfS4bZuM
FPbpeg3EwnHbRuSzrw6/HzLgP9sUpLTP0Gsidvg7+pFwD4fvXX7CPcO96rVl
eIfeHPmwyZY/3CdyQ2TEHdtUpLLPDM8s4uCEbTOmYTpmYCZmYTbmYC5SO29W
eD4QFydtW1DAviY8c8iEu7Yqtv1yaxRDPf0KD0Qr+TX3Cf9zvPZ/6fQZXw==

           "]]}, Annotation[#, "Charting`Private`Tag$153040#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1ncczVUcxvFLySzRRDIiaUgkmkJJk6i0izKSKE3tUsqKIiMZbWS3lVVG
yyYhLVGhTaVC7+ePz+v7PM/5nXt/9/zO+d5ftfbdW3crUigU5hQtFPqULBQG
li4UtpUqFHqiMr6UvYvp8oPwrOx0FEFf+SDZdvpuHIqvZO/hNfnBGCVrgqLo
J39S9id9D6rga9liWX28zV+JmbLX+QoYzTfFHugvf0r2F30vquIb2RLZ8XiH
vwqzZG/wFTGGb4Y981v4ZviQ7ooBrhvM/03fh2rYwrfCKvpb40vpBpjBX42d
dHt8T882/iZdCWP5fcoUCrfSZ9Db1MvwJV0s65IcH9EHuu4e+qb8Lroz3Uj9
ia+p9uXPUp/w+UPoHfIj+fvVUmp32clqdX4rfSHq8Z/xldQH+SbqBvOX0Seg
Dv+u8fLqnfw19C71OvyQ3y7vTc8x5y31EDwnPxPb6cvxFb1Xnhl9Jj6mu2Gg
OU/z/9AP4DB8J1sua4j3+GsxV/Y2XxnP881RHIPkQ2X/0g+iBjbK3s9+yTPH
MOP/yR/KGmGT7AO8Iz8UL8jOQgkMlg+X7aQfxuH4XrYi64yZfDvMk83gq+BF
vgX+pK/A13TJ7C+6OT6hu2OIOSP4XXQv1MJPfGuspn8wvpI+EbP4/azrXdkz
9G71evxIV5c/Rs/P+VKr4ijZS8bKqrfxp6hn83/RV2aP89/knKm9sp/UUtmn
2S+oy3/KH6TeyzdWb87eV2/IPak/Zz3UfvzTvvsZdbfsEZTO9fwR9M9qG3xO
/+i6VfRJmM1fh4JrO/Cb6QU583Q1vMyfg7/pq/BtPhcb6BZYRN+CoeaM5At4
lK+NzbLPsrezD/nrsVA2k6+OV/hzUQbD5M/KiqB3zkfOruxDzJIdhnGy87A3
hstHyYriMf6onB3ZR5gtq4HxsvNzjjFCPlq2Bx7nj85zln2cNcMY+Z7oIz8m
6yX7JL8p94Wxxoqhr7E6+EX2KebIamKC7II8a4ySPyfbC/34Y/GrbHX2AOby
HbBINpc/HK/yLbGDvhob6H1z7uizsZjukd7jOXXhf6FHm/88XRz9+bq5L/oi
rKF/M/45fSre5/c3tyfdkS5Cd0wvUbfkjKuP53tyTtVaOFo2Mfeh3p7PUVvx
/6TfpI/y3/FV1EfSQ9RyOev0OTiOX8IfrN7Hn55+mp6j3pj9p/6aM6f258f4
7hfUEhiQfSG/JZ+T9VMvxlr6d9etoU/DB3wnLEn/yF7HJP7C9Mb0Ff5cLKVv
w1jXvciXxBN8PfyR/4U8M7wkL4WB8vrYlp6bdc69ZW6uwct4JdW1pTHItcen
t6ZPYlzG5WXwpLxBelF6FubJamOyrHV6CsZnjmxvPMWfkD6R3oP5siMxRdYm
zxET5ONl+2Aw3zBnVLY2fQLz+M5YJVuQXoSp/EX4l74WG+kD0kvp87CMrpD/
Jfp2ujjdlf6NPoIekH3q8yaoZTEkZ1Heg26U/aZegvqydfwh6kN8U3WHeeuy
B3AsPz/frd6d55h+xhdVO/EN1a18DbUP3zz/heYvzJ7EMfw04+XUO7Iv6P/U
dthEV5U/Sh+Y/q2ej+V0RfkD9B10Cfom+nd6os9+ld43PZQ/MXuMbosvst+N
f0E3wQK+C1anN+VeMJ2/JH06vZW/ACvoOzHJdRP5chjKn5T1z7lMr5LVwWuy
tjknmCyfJCuPYfzJ+W3Z7+lVWTu8Lrs0zwpT5JNl+2E4fwp2Zh+kf8nq4g3Z
Zfn9mCqfItsfI/hTs//pS7GermxdHqabqbtcuz7PDwuN3Yh16Xs5k3iTvxyV
ME0+VXYAnuFPw+6sW9418/6Yd8C8x+UdK+8keXfI/z2m5VlhpDmNUcB6+SJZ
PbzFX5H9hM18S6yk70JJ99mN/4OunXcsuoU6w/z/AdKHg4A=
           "]]}, Annotation[#, "Charting`Private`Tag$153040#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8647431443886185`*^9, 3.864751680232676*^9, {3.8649246263958454`*^9, 
   3.8649246663018637`*^9}, {3.8649247386913157`*^9, 3.86492476348625*^9}, {
   3.8649264053781443`*^9, 3.8649264245239162`*^9}, {3.864928178079486*^9, 
   3.864928183150836*^9}, 3.8649282170238175`*^9, {3.8649282854075727`*^9, 
   3.8649283192815533`*^9}, 3.864928522906314*^9, {3.864928905872735*^9, 
   3.8649289410632877`*^9}, {3.8649290175684013`*^9, 3.864929049070153*^9}, 
   3.8651016948686595`*^9, {3.865101726283621*^9, 3.865101739630356*^9}, 
   3.8651017874490757`*^9, {3.865101821750115*^9, 3.865101825030067*^9}, {
   3.8651020796127157`*^9, 3.865102084115277*^9}},
 CellLabel->
  "Out[985]=",ExpressionUUID->"1094c3e4-bc89-4c6e-a871-b48a02450482"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
09g7FVAD0pgdKjFcLSD9zro2lc/pAPUUS2z68otak4Hl1/IVtkHk7/thtNtt
VQFAnlfatNS61pWO+4pLd2/ZXSVCwZMLqTfZJ9vBhUc2L9dlk9fTf33FDAHe
T/+6kwHvc1477cRFULlDSGILuT4jz9t2JdL20jM68TmyrPrcYit48OIe63hm
OkC9xcD3XDoe5Hpy2HvscPfWRdDdwiv5XqYALIGVxkO/uWGMyPWKKiM69r1G
xyovPLClE5xSX7fnCDQBQ9XZ1W566eASb8hiSk8nOJYrwZlDXu+BMlstuetH
QdlCck35dDLoNFdIT1FZAjFXrt/021AAkP+9CIenTr2n457jUOR9d2GeYBBd
ecaZhbUVGErrVRnEpYODcmUbWM3GwdsOic8x5PXRGNwm8bV3ARx9rMisXl+A
vXD+mH3/dyc6gbzw7IWGvyfuhIE7Sttpl4c7gEV9J/8kjbwebDf6Ok4tAsPL
ZU9OyZLzb3zS4etaPPDalbV+b97QCddnYH3CTBvY4rw+PJR8/qL+o98PVelQ
8v6NfLt4SfjOInCX0Dz+YGcB0E281FB7aQwc/6S2sbKf/O//+eESp7Q36eT3
Q36Y08/dtzq7BiA//NvqZGzI9VMA+eHT1TxL04e+AuSHiav//txdkQqQHz7+
UfudiUs6QH7Yru3MpcqX6QD54XTzXpZspTTsh6+xHDD5XJqC/bDKK0dugd/J
2A8/Zd3/x0AmBfvhR3KF1N1RqdgP//uwR9HrdQb2wivjXSJZRwiAeo99IYxp
94Y8gHqPZ/+t/PloPh+g3mPybxsPTZYCYPyFl+27AQsM1a4IiZLMw97Yafj4
B8713wHyxhJW4aKxTyIA8sZZ7fbRpxsisDfucrSKYu4pIvpvZv184sIBF7l2
Jrgd6MXemKcw49HbjYME8sbUuVOCB1VHCOSN4/06NspkjRHIG9tlrXkQJ0Yn
kDfeNZAdn0POk8gb79VJ4U0dHyeQN75Qc0z/keUYgbxxuDvlzKe+YQL1K0tf
3fJ+q1dGoH7lg5CRHbTeNAJ54+zLB9RXP3iBvbGuIKehv3goQN5Y99J8v1pu
JPbGSodFrxRsi8ce+HidsGZmyU/w+rN3madiIqjX+LZa40UQWBN4Y1LYrhQk
BrYpigjQwHsePysJ23pwoqSrtzkuDSA/zJRK7Hckr2fkh3ltIwZvTqUB5IeL
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
z85aWB++TEbHhB9GHBN+DHH8f9UsXRo=
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{524, 3418, 3416, 523, 996, 860, 750, 664, 602, 563, 
            1019, 883, 773, 687, 625, 1043, 907, 797, 711, 1067, 931, 821, 
            1093, 957, 1119}}], 
           
           PolygonBox[{{3415, 3414, 510, 511, 512, 513, 986, 850, 740, 654, 
            592, 553, 1017, 881, 771, 685, 623, 1042, 906, 796, 710, 514, 987,
             851, 741, 1071, 935, 655, 1051, 915, 1102, 805, 1085, 949, 
            1115}}], 
           
           PolygonBox[{{3411, 3417, 475, 958, 822, 712, 626, 564, 525, 476, 
            959, 823, 713, 627, 565, 526, 477, 960, 824, 714, 628, 566, 527, 
            478, 961, 825, 715, 629, 567, 528, 997, 861, 751, 665, 603, 479, 
            962, 826, 716, 630, 568, 529, 998, 862, 752, 666, 604}}], 
           PolygonBox[CompressedData["
1:eJwV0bkvpWEYhvH3MJWtHMsMclBQkCCRaOTYJVOQEyaKqRhLRYsGY2ipKGhs
BYVEwskkGrS2apj5D8YylspS+X3Fleu+n/f5tnPifaPJkbQQQgyz6MkOoRsJ
w3z8c3CNG9ziDifpITTjt/NJNKIA/80G8CxXfwhhS16Vi+RFuZPLud8sS/4p
f8RhdK37nsotuNSnkGtnXo+jKXpJfUzOQJ28w3vmpfKyXImE/Is/md/zIDrM
XvQa3ta/8ppezEt6F1dwA6f4G393ns2z+hfO5Xre5V4+cl7Bq3qSa6PfhA/4
3reccSuu7FWab8rTcp68IJdE+3pMH5czsa+X6StyFT7rDzyEV3kdA8ixM2eW
h+Nox/PO5Tb80X+gBYV4dHZh3o6/+gxakeYeE2ZZSEX/UbQrD+NN3sAgnlz/
DnRrQRk=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{3415, 3416, 562, 601, 663, 749, 859, 995, 522, 561, 
            600, 662, 748, 858, 994, 521, 560, 599, 661, 747, 857, 993, 520, 
            559, 598, 660, 746, 856, 992, 519, 558, 597, 659, 745, 855, 991, 
            518, 557, 596, 658, 744, 854, 990, 517, 556, 595, 657, 743, 853, 
            989, 516, 555, 594, 656, 742, 852, 988, 515, 624, 686, 772, 882, 
            1018, 554, 700, 786, 896, 1032, 593}}], 
           PolygonBox[CompressedData["
1:eJwV0jlPlFEYhuEDGFmMjayFolIIBYWamKDDDDqFiYkNSGIo2EZqaUQU0ARt
gQobZZnCgsZEmcKERChwARIE1B+ACwpoI6AVItdX3Hme+33Pd3ImmZOpzoab
2SGELKRx7XAIjbhv+AnJnBAW8MOBMl6He/iIS+bz+G6X4mn8RYfZL5TqCfTh
Ay6azWHN+XY+jj+4YfYTJXoG+Xo3/iPOT8ihaH8ghF6+Er2Dv8M3d52VaVTZ
z9gV6w9xiLfxSv0RjvExPqGf1nf0lL6JYr3Z7KVeJ6tlvXwsK+Sk/XX5jJ+T
efKKvC33UGvfxDN6TB6XV+VgdLfssW+UT3m1XOaXZYK/xVe/Y0omzc7IcVTq
084912v0IvkABXqr+Sl9GEf5KN9GO99Akf4CuXoX/kXv4uVyINr75i5fQpy/
wRdveMUL9X7kO9PCR7CFNrN1FEZvwkH9FnZxgd/Be9Ty1/jsvmb+BL/RGv2P
cEQ/j24sImY2i1Xn9wFtrlBw
            "]], 
           PolygonBox[CompressedData["
1:eJwV0LlPVUEYhvFhUaorUIKFXsElmKiJJCTGxsQIXMAFg4WFhQ2y04vSqIBL
oZUUWJiIa2JiTAQ1NmrvgrsC6l8ggqKA8vuKJ+/7fDPnnDmTPdrT3J2fUsrD
E7RkUjqEJYNNFvbhAr7jQEFKH7BobSPfi/P4hv3m77FgLV54B/m8F/PYwJtw
Dl/jvWbv8Nf+Ln4bebwHv7GeN+IspuNbZm/xx/5OfisOzbvxC5X8EUr1fhQV
ptTAhzAV3zZ7E2fx/HO+Wh9CqX0dfLM+jCy/GefXq/X/epc+hwp9XO4y3yav
xH/pD83v6jV6iczJk3KlzFk7LO/znbJSNslLslwOWm+Ro3yLnOS1spFPxF04
7xH+WN8tq+VBeVVWyWf239N36OVyECV6u3mVfhlr+Y24Y327/k/v1GexTt8q
R+LOrY3zYv0EVvB6XqFfRBkf4F/QwF/H3TvfU16mD6DYnjZ+HUvoMPsZ96qP
YZXeh0L76vgZfEbO7FXcs/cd46NYRLvZTPyD/gAZ/TgKPF/LT+MT6s1exj95
vpVfwwLazH5gjb4Hp/ARdWYv4mz2z2AZnyphoQ==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1WWYVVUUBuChke6uobu7G2kYunEIUQRElBSwlU5BEaSUkpLuRlSwUEEJ
BRVbsbve9fjjne9bm3vvuWeffR8Sk8ckjU6RkJBwyZ/IZH/+kdsZT0dqkJIh
/u1f+SIT6ERNUjE03swOMZHO1CI1w+Kz2alPogu1ud9aPl7V53M7aRhuLSW7
9Ml0pQ5TreXnrL6AEaSN91lLxW59CknUZZq1ApzTF3IH6eJ91lKzJ74D3Zhl
LsP7+krqMd1ckNf0RazRG/OdfieL9ap8pG9gk96a3/T0cT09DXtjP2UHpurL
ZV2+1LszWy/LJX2v7MYqfb1swev8bD4uB3CR+uYHZCHOxGvMu2QXzrPYvFY2
ie/P9+ajsh8XGGl+UlaL/edj837Zg436C7INv+sn5SBuifuWadkX50B2ZJq+
QtbjK70Hc/RyXNZX04AHzYV5I67NXSwxV+eT2D8yMNKcjv3xDOjJXHN5rsRz
oCEPmYvwZnwOo8gYn2stPQdij+hFIx62VpS39KWMJlO8L+6Ng/Ed6U1jMsdr
rGfgUFyPPjQhC2OsZ+RwfDZ9aUpW7raeiSP6I/SjGdkYaz0zR/VH6U9zspOD
nOQiN3nISz7yU4CCFKIwRShKMRIpTglKco9rZOGY/hgDaEEpxlnPynH9cQbS
Mr6rtWJxhvSn4h4pzb3WsnFCf4JBzDNX4GqcNVrF/ZgTeVt/OvYh9tpcgxtx
rijDfebsnNRn8Gycab7WBzNfr8gH+nNs0Fvyi9467kcvzjv6btmVZfFa2ZQf
Yp/jHvSafKofkD3ZrG+Wt8bZ4Q/zKTk4fv/xWzSPlzl4iVPmHbJTnB1mmlfK
BpzlG/Nh2Se+D7eZF8hKfKg/T5vYZ3MJ3tWfiXW9GT/Gs4r90mvxmX5Q9mKL
vkW25U+9HBP0nJzWd8rOzNJXyYac41vzEdk3rkeyeaGszCtcM++T3eNZsc68
UbaK3ye/mk/IgbwXexXPXZbkZS6Y98gkluvrZHN+0o/J/ozTl8nafK4fkr3Z
qm+V7fhLL89EPVfstz6b1XojbupDWKRX4bq+nrZxbsyluKiviDNKBSZZy80Z
fQ5DaUdFJlvPE/egz2UY7alEZapQlWpM8bq8sV9x1hlOB2ZaKx37Euc2znI8
T3MdvtC3Bb09f+un40yk+P//2Orm/wA7NeAp
           "]]}, Annotation[#, "Charting`Private`Tag$153152#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nf8j1UYxvGvkeyZlMgMoWwiRcOIkr0pyip7RNmEaNijiEQb7ai07L33
3mVkZ2X0vl/98Xld13Xf5/n+zjnPOQ95Wnep2zlJIpF4M2kisZv5NVkiURYr
5O4ojXTYo/ebejmslHugDNJjr97v6g9hldwTZZEB+/T+UC+P1XIvlENGHFVr
gTP8u2iG/cYvUquANfIreAiZcEytJc7y76E56qVLJA54ZrH6w1ir1hvlkRl/
qj2Hc/xUtMBB45eoVcQ6uQ8q4LrcEynwlZwFf/HP4zw/DS2RKnkiMVgtC36R
D/m9pfwjWC+/ijuMeUu+N+Yl36C9cDu+jj6O861wgX8fOTwzQS4Qc5ZTy0P4
O2Jv+a/or+oF+Rl8CTzO/0QPm8My+iiqqm0wriidLdenr8lZ6dvy0zRXzIt+
S5vQivo3+VfwlJySlqFzaSP6jX5e+p5chxallej8eIc0q/4JvjUu8sXVPuWn
8zn5iXzB2Es5jTyUz4rf5ELyB3xJHLGO5fHb2KjXF3fqvyPnjj2Wb9HeSIVv
o4+T/Av4h5+BVnG+/NYKtcrYJPfDo8iGU2ov4hL/AVrH+TJ+pdpj2Cz3RyXc
FedIb1XsN7bIA1Df2atM745zon8cJ3ASp7Da2CewVX8gHkN2/K3WBpf5Etb2
GT+Tv5efxD9LC8V61NLyr/N34vd41u+u4Z/ENnlQrMeY0XKemJ+ckPvwqeMu
8/Pod+r5+Kn8A7En/AJ6j/pp2hbV1a7IJennckP6oZyLTpZr0/vjjNEfaHP6
Ynwf6DC5Js0Wd51+TRvTP/TvpzPlurRU7An9mZ62lrW0CrYb94D6R/zg2HN+
DJ83xstJ5Ff5NPhezi9P4x9EDvkMbYer/Cy0iW+TMcPV7sKiGOPvrYv7gR3y
EDwZ5xNn9darV8NOeSiqIGncHbW0+CHeUYzl2+MaPxttcc7zDZyH8/QCNsR+
Ypfe66ga+xjj1DrgX/4jtMNF4zfGvcNueRiqIZm/3VctHebLuXGefwnX+Y/R
Hv94fpNaDeyRh6M6knu+n1p6LJDz4AL/Mm7wn6ADMhg3Qu1uLJYv+b3N8T6x
Vx4RZ9yYsXK+mKd8m9yfz4Af5fvk9/li8c5iTbQjbvKl9L7gP4018FP4wrEO
OaP8Bp8dFeI7Q5eoF46zx9ejpeO804W0Jb1sflviOxbvS95n/IP0Y7lB/F7c
MzpOfobmpxXpd7QpraGfgg6IPaMZaTn6Jf1JrwA/nS8e3wL+x1h37DPthFt8
afU5/Gexr/y7fJHYWzmTPDLuFpbKV8x3a8wF++WRqInbjRuolgk/x5mOvec7
I4HP5Y646vltci0ckEfh6dhzXFbrgiT4Qu6Ea8Zvj+8IDib9/9/2Z2JdMRe1
rkiKOXJn/Gv8jrjfOCS/hVooiOt6O9Xr4LD8Np5FIdzQa+jM36S34j8RcU+x
K+46jvDvoHZ8A2Idat2QDHPlLshsD0bFHcayuG/YHe8dR/li+p/wo/l7+PGx
D/Q++gj9njajjcyjjjEp+UFqmbEwzlHsB98dyTFP7hp3C3vk+jjGj0FdFIl7
g71xlvAnPxb1UDTOPfapN8Rf/DjUj29XnCnsV2+E4/x4NIizGe8aB+KbiBP8
BDSM9cWccVC9CU7yE9EIxZEKh+Lc4hQ/CY1RAqlxONaPv/nJaIKSMcZ+pKFH
9JrjND8FTeM+xjtX64Hb8KXcDVns3ZtyTiyPvZBn8WVQhf+FPkfT6v0HVzI+
VQ==
           "]]}, Annotation[#, "Charting`Private`Tag$153152#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nf8TnUYxvHHTsPIXqEyipRVySgyChValArZM3tllJmS7JlQyChRCpWV
vffOppARisze9x+f131d133O8/udc77n/p68DdrUap0kkUicSZpI1EueSHyY
MpH4PUUi8Qau8j9ihSw3JsiewjDZND4JevI5sU9WH31kB/k38R//E1bK8uBz
WWkMl03nk6IXnwv7Zbv5YpjDv4AGsr78IbourvHH+afxC7+AX0XnxUS+DEbI
vuaToTd/H87Sz2ElfUB/D10c3/EZUiUSrekX6Rvq69hBv+u4fvRh+i2kcFw9
/rr8hPoMisp+1cumduAX6q1W70dh2Rd6adRmfDm1LH+FroUn+M18XvV9vrI6
0vkz6OR4iP9A/061EV9Gzc2fo59HCX5VXJ/aNZ6Zc/dGjrnyjPI29Ev0TbU2
dtINHdefPkK/HdfML8Ia2QOYJCuHUbKZfAp8yOfBQVkjDJAd5d+J3+Z/xmjM
kqdEn7guHJI1xkDZMb4ebvG/YK3sQUyWPY0xstl8KvTl78d5uipW04f199El
MY/P5Preo2vEb6p1sIt+UN6LbuL4j9TjsgKy+mrKqLLbeifV8rHeZIv1sqsd
+QrxTPXX0fnwCD9FP63aPNae+ky8G/TLeJLfEv+v2oOvoo51/jf0HXiY76d/
l9o47jF9Qa2GNfQRx+6nH8f3fE3cpt/Abrqp/iD6RLwPSOCP+D+xhF6sv57O
jy/58hgn+5ZPjf5xT3BU1gwfy07G+kYSLJGNxxz5nRggy4djsub4RPZHrBsk
xVLZBLRASwzW/1PeCMmwTPY5vpPfhYGy/Dgua4VPZaf4xkiO5bINsgL4iq+A
ibK5/N34KJ4f/qarYy19Qv9AvEP4ga8V98X9fZPfQ7fWH0KfppsglV6DWMv0
n+qzWErnkHeif3P8RrUgisim6qVTW8R7rj4bs4x+BaX4rfwDas+YK/GeO38e
fQ8K8YP071ab8GXVgvxF+oVYv/w6Prfaja+onnT+77GW8Cg/Xz+z2jbWWDwn
ui69l27j2M/oM7E2Yk3jVPwOltEr9DfF/MA0viImyb7n0+Bj/iFcipmH9bGe
9A/GteFH/hW8JxvK/0U3i3uIlbLNsaYxna+EybIf+LT4hH847rGsLYbJzvLN
cQdWybbEPcLXfGVMkc3n02EwXyiuR9YOw2Xn+BZIjdWyL2NPkqfHp7LCOC1r
jxGy83zLmJtYI/sKHTBS74KsVbyLWCubio7ohM4Y5Zi/Y/3E88O62OfQJeab
3sW4/7gH62MPi/1Nfi+GyB7BGVlXjJFdivuINNgQ+xIWyDPgM1kR/CXrhrGy
y3zbmDXYKNsqK4wZfBXMkC3kM2Io/yjOyg7xT+En/lV0l43j/6HbxVqOe8RX
wnJ6k/62mG2Yyae3vlrGWqavqa9iGz0z9gY6E4bFdTuuKf0YfVl9KeaWbAOf
R+0ef0M957zDdOk4ll+gn0VtFzNXfS1mifpW/N/qvpg5am/++dgPYybR/8oL
8u1j/ajvxm+q6eM+05Xj3aVzyjrTm523Pd5hzJLfK28Vv0lfV1/DdnpW7Fl0
Zgzni+IfugY20uf1j9BlsJB/HT1i7vFX6A7x29gi2xHvLGbzVTE79jc+C0bw
xXBB1jPmouwq3xEZsDX2Cfwqz4qRsuIx62S9MFH2H98JGbEt5jp644P4Vovv
rfhGwheOveaYzsiE7THTsVieDaNkJWIOxXcNJsmu811i1mBHzGwskWfHaFnJ
mBPxvYDJsht813iW2CnbGc8X3/DVMFe2lM+BMfzj+JeuiU2xZvSPxkzEIj5r
PFu6Np2MfpveTw9w3BT6Jt0t3n29hnGP4n1Rq6C4bAWfS+0SM13d5bxddFF8
q1cd82TL+JwYyz8Rzzq+SWKWyG7F+4Js2B1zEsvluTBO9mRcQ3xLxCyR3ebf
R3bsidkX+3Psq7FXxn4Ye1zsPzGnY8Y4J4Eejs+BvTHv8JvsPoyXlcIV2TG+
HH7m6yC5a3qHP0Dnj+9Buqo61LH/AxANicQ=
           "]]}, Annotation[#, "Charting`Private`Tag$153152#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfcjWUcx/GDzLKiSYR2EmmYyV6hqGTvspUyE7Ky90z2Ftkrm8guiiKj
QsOekUTv3x+f13dc9znPc9/nun53joZtqrZOkkgk5iVNJCqmTCReSZ1IzE2V
SDyHg/IEfIxXUdzaF/r8OCRPRFdUQglr8/TP42d5ErqhMqrgNbyOqqiGN/Am
3kJ1vI0aqIlaqI06qIuSvnu+730Bh+XJ6I76+h26qvhHXot6KKX/Uvcijsjj
5GQYIE+Ru/C/861xDz7RNdDt5KvhhjxNTotR8jp5EH+N74av+Tx4jF9IH8RU
fi8tjPquL00X6A7Ql+hKmhN/4qj1z+gdOIaB1rfR53AuviueOf0jniVtQzfQ
p3Aa98pf0HtwAhPkPbQAevhsQ7pL9wbWxP+Jf/XTaTqM1q+XB/PX+e54HIvk
LJjGN7Behl/IF8CxeCbxe8c9yO/hPvTUNdLt5t/ETXlD/A8oq1+kK4hf4u+j
V1yPxihnfbG1QvhVnoHesabfo3sL/8kb0QTl9Ut0hfGbPBN9Yk3/ra46bsmb
8A4q6JfqiuC4PAufxpr+O93buC1vxruoqF+mK4oT8uzYw7q/5PdxP/rGtbq9
fA0kYj/ohuj+ib2EJ9A0zoxuOf8yTspzYt/qTslt8QD66Zrq9vE1kQQz5PQY
w2+xPpS/wffAk1gsZ8V0vlmcP34FXwyr+Fyxv/XjaXIM0s+VP4n9w3+AjfzT
sXf5ebGncBIT5W9pQVxGf59rRr+PeUBr0bX08bgPJJVn0gz4DWPlXfRFXMRW
nx8W+y/OIu0Z90Sfjf3ML6EPYQa/jxZB85gbdKXuFfwhfy6nwODY+3IP/gz/
IbJggK657ge+NpLhG12LmD/6VXJx/BkzTU6JIXHvck/+LN8OWTFfvg+T+IHx
Hfx+vk7MAv6JOLv8LJoRxzFO3h1nHZewzeeG05v6o7QX3Urzxt+KZy8vpdni
nGOm/D0tiqtoGTOTfqX/kZagX9FHYj8GMX9pKvyCoda30/yYH+csZomuPTbx
ueM581/S+zGZH+S6lvwBvi6SY7Z8Nz6L77M+gv+P743caBVzXLeaL4lTMevl
1BgW3x9nmD/Pd0A2DNa10v3I10MK7NCN1N3i++AZtI73g24NXwqn5QVxxnUX
5I7IjiG61rqf+PpIiZ26NvFu0a+VS+OMvDDOT6zpD8ZcQ6rYo7r34j2kXyeX
wVl5UezXWNMf0jVE6vhtde/HO0u/Xi6Lc/Li+J1jTf+zrhHSYI+ubbzf9Bvk
cjgf7y45DYbHM6DPx7OKuRazKc6MvhMexoj4Dt1hvjHujLOp+yDemfqNcnlc
kJfG84w1/RFdE9yF73QfxvtVv0mugIvyMoyKNf1R3TtIi726dvEu1m+WK+KS
vByjY01/TPcu0sWZ1bWP97b+a/lVXJZXoG+cBbkzcmBMXBv7lW+K9LHndR1Q
S79FroQr8kr0ixkkf4ScGBvX6n6NuYcM+CHuQ3eb/xR5Yp/oasfs4SvjqjxF
vhMj5FVyf/4K3wW5ME7XMWYY3xwZMUfOhPH8/rh/PoG+MVtovphj/DKaHbPi
/6Evo5Pr69BvdD/RKnQ1fRR/W5tK74p7wcjYv/SF2Odx5q0PiDmgP0w/ppvp
MzHzYgbIC+gD+B1T4nemheKe4uz6fKeYS/pDtAVdT5+Ms83PpZnxOX/AtWP4
JOgn58Vy/mHMjt/Oet2YZ/xruCavxsC4D7krHsV4XWfdCb4lMsXc0n2Eevrt
8uu4Lq+JeR5r+pMxU5A5npNurC4p+sv5sILPgTnxG9Bi8XfRxbX/A81Wguk=

           "]]}, Annotation[#, "Charting`Private`Tag$153152#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$153152#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8647431443886185`*^9, 3.864751680232676*^9, {3.8649246263958454`*^9, 
   3.8649246663018637`*^9}, {3.8649247386913157`*^9, 3.86492476348625*^9}, {
   3.8649264053781443`*^9, 3.8649264245239162`*^9}, {3.864928178079486*^9, 
   3.864928183150836*^9}, 3.8649282170238175`*^9, {3.8649282854075727`*^9, 
   3.8649283192815533`*^9}, 3.864928522906314*^9, {3.864928905872735*^9, 
   3.8649289410632877`*^9}, {3.8649290175684013`*^9, 3.864929049070153*^9}, 
   3.8651016948686595`*^9, {3.865101726283621*^9, 3.865101739630356*^9}, 
   3.8651017874490757`*^9, {3.865101821750115*^9, 3.865101825030067*^9}, {
   3.8651020796127157`*^9, 3.86510208441818*^9}},
 CellLabel->
  "Out[986]=",ExpressionUUID->"cb6cb0be-b29a-4611-af72-41f499b6a961"]
}, Open  ]],

Cell["\<\
Now Update the Initial Conditions to what were obtained at 3\[Tau]/4\
\>", "Text",
 CellChangeTimes->{{3.8649282235057096`*^9, 3.8649282474809113`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"73fb2c33-247d-455d-a7d4-e35923108b5c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"Weight", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", "ICs2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess", ",", "Weight"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.864741199114215*^9, 3.8647412309450274`*^9}, {
   3.8647412638285017`*^9, 3.8647412753688107`*^9}, {3.864741323608369*^9, 
   3.86474133960525*^9}, {3.864742124890915*^9, 3.8647421532108536`*^9}, {
   3.864742303924614*^9, 3.8647423252527876`*^9}, {3.864742422178767*^9, 
   3.86474251208799*^9}, {3.8647427673552923`*^9, 3.864742767707179*^9}, {
   3.864742898915184*^9, 3.864742916706489*^9}, {3.86474298969613*^9, 
   3.8647431190277376`*^9}, {3.864743150598633*^9, 3.864743155105189*^9}, {
   3.8647432289685497`*^9, 3.8647432331092243`*^9}, {3.8647489797039957`*^9, 
   3.8647489831718855`*^9}, {3.8649246904680023`*^9, 
   3.8649246982424765`*^9}, {3.864928268610037*^9, 3.864928271763013*^9}, {
   3.8649283309997425`*^9, 3.8649283435056763`*^9}, 3.8649284456104593`*^9, {
   3.8651018699917*^9, 3.8651018701196613`*^9}, {3.865102696229679*^9, 
   3.8651027103041816`*^9}},
 CellLabel->
  "In[1067]:=",ExpressionUUID->"0bdf49aa-3cb3-4522-a441-0032566f22ad"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 1070, 146, 
   17535460195298866382, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.865102746211706*^9},
 CellLabel->
  "During evaluation of \
In[1067]:=",ExpressionUUID->"5b0b2b5f-bb33-4a7c-9cef-68e69b993e57"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$221514\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$221514\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"2.255781666797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"222.59274798247364`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.0002797039503382143`\\\"}]\\) for the integral and \
error estimates.\"", 2, 1072, 147, 17535460195298866382, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8651027470464396`*^9},
 CellLabel->
  "During evaluation of \
In[1067]:=",ExpressionUUID->"50773996-5e87-411f-b740-ed1ba419d765"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
VFzmNI38XK5Wdfg0oweH5CoOhM+ixPv28WTaBDp+X4CWZkwC00f7C//r/6e8
N8ulVO0lw22b9WvS7XnhjXixvdsRCiSs3rFmzJQJvTILv74+xMmvljSrRFxj
zvsVkwbMzzNq+IDwK+6/JhY4+4kBhF9RkBKw3WU7L7Sc+lR42Y8bFscpO5gl
0yEv88ByJx8ekCMdNPcK5eQTeXlNWYEMAEmrNoG2HiQQ01mvcY0PjFepRxpz
laFVogK37O5xdFwD3Sx64hPG+CX80+EJP5wN21x6J7wWmxzpC5J8JQiMFxKe
goJ//ZEpMfU5+6zJ8/5IzdHCdT8uU3GVX1tLJEyF4K5qOf3qYS48aPnnJ5Pl
QqD6JGnj0SdknPBPCorHvQ/krB/CPynLCFGoCCHhha95zZC5MOgbf/6yyHoM
K5HUnrJtFIZe9z5ZlR2t/+qvJPjhdXNX2Tu5JpFI9Mn+BVfyUKC4voVRAgUI
/+Vo0WGK3kL6vP9SILMkbdtyHiD8l6fPK17OduMFwn9JauE2UgUG2MSpzc3Z
dCLrnWH7Qjn3p+jwQcGBhF7kJnqfdEeZFxJbc0R9HEZQ6hC3/s3EXhRW47Q1
1GoM5blp8rOkf6FomUabiPMTyCpY5vM4/QP6OfHe8dLFKeR2qeT4QeNfaG4R
dcW6R3OIZT7x6eUuEmxVDEIxpSRgbrUWlx+iw+/jU4Z7KsmQF2eNR57nA3rF
woM9tZz3zJ4xSOW8R8IfqrPMfqGNGhMIf6hklG5rwWE+IPyhGZfF+ezmOOf/
WWb/+1k6VN640obJ8wDX2T8OXjQe8Ft11NmimQo8nbNRv3j5oNShV6SRo4tz
lEpf17OYsFcjb8P9wucIi4b8O0v4IaVUcXS170+sTPhQbLC0AEgLjQQ7ZrZg
D+Q9aU2iLJDpvSXAGp6Z96P+GpPY7L6NCyf8qKJ9Tve0gqi4q9iveyN3haBg
zWTCWzMKPh39fFxqERuOxidZue8k4/9fdWceTVUX/3/Xdc89dzBdU4MGY4oM
ZQhpb2VIGSKVkqIyRApFooyRJiVDiZDmHqkMGeOmIkpFSBOZMkQkM/E737U6
+/7W86xn/Z71/e/351mnezv3nL3357M7r9c70ld1c60YPC1D4ZK+6rzsQld9
/unSNv1jeV0pYpD5JXG0obr9/8mPN0Sfzj2v+wzk6guuCfShQNJXbQy13Gmw
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

      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{9, 8, 258, 441, 186, 417, 321, 455, 137}}], 
           PolygonBox[CompressedData["
1:eJwt0jkspAEcxuEZBXHUaNmOhoZCLJZEIZEQV+GKtcSRVThW6yx2G3YTCnEk
JK5Eglln44pC4mitbjU0FFqW58sqnry//2SS+TIzKU1d5V+jQqFQmCFiiCaX
Dccug/ozfd6UyIWepoI2dyyHeoxuBtwpXOslPlLrfraR98/57k7jr27mm07i
Us8wobN40JW06ziO9LwtZDz4TJvBne5hUKfyR6/aEpb1lM3hmKfgOWwF5+S5
6+yL3bG/7ZzN55Rh9w+bzgG37jVbyhlf3P02mX2u3Iu2mFk9abN51Ou2jCrd
YePZC57LvWCL+KnHbSb3ujf4zvQHbvQK+dS7/9ktRmihmgI2/W4RPukG73u1
24zSSg2dXk/gRP8Kfl8KaQz//0O8Ac0BRNQ=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{9, 107, 1979, 1978, 245, 317, 413, 173, 222, 294, 390,
             122, 235, 307, 403, 150, 325, 421, 199, 271, 367, 91, 338, 434, 
            241, 313, 409, 162, 329, 425, 211, 445, 283, 379, 106, 459, 335, 
            431, 229, 449, 301, 397}}], 
           
           PolygonBox[{{7, 8, 354, 69, 462, 341, 437, 244, 452, 316, 412, 172,
             332, 428, 221, 293, 389, 121, 234, 306, 402, 149, 198, 270, 366, 
            90, 161, 210, 282, 378, 105, 136, 185, 257, 353, 68, 120, 1975, 
            1976, 171, 220, 292, 388, 119, 148, 197, 269, 365, 89, 240, 312, 
            408, 160, 456, 328, 424, 209, 444, 281, 377, 104, 228, 300, 396, 
            135, 184}}], 
           PolygonBox[CompressedData["
1:eJwV0jksZWEABeBLYolyUNo604zGTiJRKCQSnmIMhSWxVIytxFPNTDJoKJhJ
JDLeJJOILagskShspaU0DQ2Nxtb4/uLLOefm5f3vvnsLugZi/clRFCXxjVIy
SKWa9bQo2mJS3+SNNh+ukn+5Jt+OM6TPcEC63Uez/ptzsu1RuvQ4G7zS6lql
THBFnj3BoH5HkT7DtL5Pmt5LTH+gRJ/jl14nE5zpWXKETr1BrvA/fIf8yI9w
jn0ka1hk3d6RL/KLrJBn4T7Y5NE+DL+XBZbtY1nPPy7tPZnLOF/tRrnGrf4p
3AdTeq1cYi/837KHJv2eYn02nKGfkqkP06HfUKh/D2foazzTYpfLP1yQY48x
oP9klxS7m0Z9nhM+hGdHuz7GKk98dq1M9rPtHXgHfDhGWA==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 49, 44, 39, 33, 27, 53, 48, 43, 37, 21, 52, 47, 42, 36, 
           31, 2, 50, 45, 40, 34, 28, 22, 3, 51, 46, 41, 35, 29, 23, 4, 5, 
           1967}], 
          
          LineBox[{1968, 30, 38, 24, 32, 11, 25, 12, 13, 14, 15, 16, 17, 18, 
           19, 26, 20}]}, Annotation[#, "Charting`Private`Tag$226652#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0jksZVEABuCr4E1tKW0dDQ2xTCFRKCSSh8JW4CWYyjIorRWJpaGwJBKx
JBKxBZUlEoVBOUNpGhoaja3xneLL//8nN+fm5r3cRE9dd1IUReMcxaKoW5bQ
4PBN7jBEK7+dpfJHXyBOh53MiT5FT3jezuSvvkYpjfa73GWYCTuPB72Nfj2N
a32ROb2IZ72WTj2FU31VVjKtz8gCHsPdMk5veIfMCs/zz96S1VyxHt4hy7ng
1T6Q9dxQZjfJD3ks9+SKrOCSEXtS5nPGf3tb1tCuD8j0cJe+IatY0udlMS96
HV16LNwRvoNZvZAnvY8RPZu7cA/lNNufcp9REgw6y+BWX6aeX/YPzsO94bcL
z9s53Oub/KTF/grfzxiH/gPfXdNFFw==
           "]], 
          LineBox[{1969, 60, 6, 61, 1970}], 
          LineBox[CompressedData["
1:eJwV0TsohXEcx+G/SdixHjYWFgbFEWVQig4WDG6FcgbX1cHC4hgY5FKUWym5
5LK4lEG5rNhYWBisyPMOT5/v713et3NincmmwYwQQpLTzBBS2sWoh7nc28sk
6HNncWnPMcSEO8aTvUUlbe4fPWSSGXcRr3Y3Y3YeD/YKC3YZn3Yz/XY2V/a6
1pCO3qklvNvDpOwCnu1drWfbXtIKrvmOvkMT3FHlbtdfPdEjXdM4N0y5Z7WY
C97ce9rALT3ucc3nnEf3ptaxai9qOV/2vjbSYg9oDmfRd7k3tJZ5O62lfNgj
0W9mF/Ji7xCnw/2nx0zTSyvVHPjf/gE5Fjx3
           "]], 
          
          LineBox[{1972, 66, 351, 255, 183, 134, 103, 88, 364, 268, 196, 147, 
           118, 67, 352, 256, 7, 184, 135, 396, 300, 228, 104, 377, 281, 444, 
           209, 424, 328, 456, 160, 408, 312, 240, 89, 365, 269, 197, 148, 
           119, 388, 292, 220, 171, 1976}], 
          LineBox[CompressedData["
1:eJwV0DFIQmEYhtH/umSL7Tk51OZiU1BDUIMQBFJLTbrVkGvlbOTQohgENRQ4
BEYgSCQ4BJFD0FBzbS06CbV3/uHwPp8g93JzlWrpMAkhbPM4E8KRXafsx4Qn
fcY+J+55PvQNu8Q/Z3jVbZq6wFgfU9cLfOmu3aSrr+wKL/y6+3aHdzbcFZu2
qfgODOIz7RojGu5ZznWeZ37cD3aLNw7cNZtlyKf7zha51Zd2manu2RJ7umrn
4nN0J74PF7pll5jEb8GpXuRb33OtV/nTA9/yH4LALTY=
           "]], 
          
          LineBox[{1979, 107, 380, 284, 212, 163, 92, 368, 272, 200, 151, 123,
            70, 355, 259, 187, 138, 108, 93, 71, 72, 73, 74, 75, 76, 77, 78, 
           356, 260, 188, 139, 109, 94, 369, 273, 201, 152, 124, 391, 295, 
           223, 174, 414, 318, 246, 438, 342, 463, 79}]}, 
         Annotation[#, "Charting`Private`Tag$226652#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{464, 558, 540, 523, 508, 573, 555, 538, 495, 570, 552, 535,
            520, 485, 567, 549, 532, 517, 505, 465, 559, 541, 524, 509, 496, 
           486, 466, 560, 542, 525, 510, 497, 487, 467, 468, 469, 470, 561, 
           543, 526, 511, 498, 488, 471, 562, 544, 527, 512, 499, 489, 472, 
           563, 545, 528, 513, 500, 490, 473, 564, 546, 529, 514, 501, 491, 
           474, 1980}], 
          
          LineBox[{1981, 502, 571, 553, 536, 521, 492, 568, 550, 533, 518, 
           506, 475, 565, 547, 530, 515, 503, 493, 476, 477, 478, 479, 480, 
           481, 482, 483, 566, 548, 531, 516, 504, 494, 569, 551, 534, 519, 
           507, 572, 554, 537, 522, 574, 556, 539, 575, 557, 576, 484}]}, 
         Annotation[#, "Charting`Private`Tag$226652#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nf8jmUbx/HbKKPMUFLJDJlpSGXvUUiyt+w9I7L3CmUr2SMqOyIqIqso
ZM+W0VJJ8byP1/PH53V8P9/zvH7rvq7z+uVo2bVOlySJROLNZIlE2aSJxKHk
icR/ckNc4rPREzf1eTBUnxaf6srhsO4Wb4Tv+Rw8dEciUUW/SFcMvXT/8rwY
xtPhM115fKO7zRvjBz4XvfGf/hEM16fH57oK+FaXQBPdj3we+uCWLh9G6DNg
p64ijuiSoKnuJ/42svv5quoW6x5DX91tnh8jeUbs0j1hXzPdFl4FlXRHeVI0
4z/zyvZ05/v5O/xhXo0v4cXRko/nP8r9rCd4AT6KD5SXyPfIdeVB8nF5hrxD
/sL+J+Xm8ofmx9bGm+t5Vbmj/Ka8w/yNLzIP8MquO2YmQ3N9H/078mV9FbmH
fEA/Rd4iz9fnkKvLq8yl1kaa7/Pd5uO8lTmBf2z+xN82d/OvzFddn8R8lC83
R1sfFF+Hf25m4i+Zr/ON5gk+0/w0vr5rn5JbyFv1E+QNcjW5k/yW/Hv8/e37
Tk6OFvwKr2q9Jz/I3+U5eQ2+jD+B/rqkuoK6MTwz6vHB/KS8x3oJ3pJv49VR
VXec34GW/CpfgAGohhP6O9HK2jW+EK+hOk7qU6C1tV/4IgxEMt+jkH6sPgu+
1NXAKV1KtNH9yhcjl7014++oezL+jrrkusK6cfxevMyH8FPyXutP81b8E14D
nfl0/odc0/ppORVeiXvd2nz5t/h95F7xGeqnxv0V960+t/y8vNpcYW2U+QHf
Yz7FW5sT4/Myf4773tzDv47P2PV3mEX4irj3rb9uLuM7zft4fXMo32Se5rPM
z/g+15aUW8vb9RPljXJNuYs8Q74uP2/fGTk12vLf4+9vvXf8DHwpz8Nf4Ct5
CQzW3akrqpvAs6IBH8bPyPutP8Pb8DXx/MX3wQv6s7q70I7/wZdhCGrhnP5u
tLd2nS/HUKTwNYrpJ+rvxwFdbZzXpUEH3Z98BYYhpf2P6Sfps+Ggrg4u6NKi
o+4vvhJ57a2le0/3NIbrUumK6ybH7yovlx+Ic1weLn9knuWzzc/jM3fNs/Ir
8qfxe6Irn8n/lF+0flFOh05xdll7V/477l25j3xIP03eGj+L/hG5dpwh+tHy
h3JJuY08KZ4x8zKfb34Z15sjXJc6zpj4rMw3rA+J+47vMh+Md0vs45vNc3yO
uTPOMPNr1z9ntuVr4z6yPsncxGvJ3eRZ8l/yYvmgXNc1l8z06Ky/wWta68sP
81U8H68TzwB/Js5D3V26J3RT+FB5ZZzR5kPx/jJH8vPyIXtL8XZx/vHacf7p
vucZ0IX/w1cjv30v6t7XPRvPmu5u3ZO6qTw7Duvq4QddRnTV3eTvYzTSxHOp
n6YfJr8nPyx/Y600bx/PHq8TZ4fux3jnoBv/l3+AAvbV1X2gew5jdGl1JZL/
/3+DHPhWVx8/6TKhu+4//iEetfeleE/pSmGsLp3uad1bPCeO6BrgZ11m9NDd
4mswDg3RCJetZUFP67f5WoxHel+vpH66PheO6hrjiu5e9NIlsE5X0N568Szz
0niFT44z0rwS7wtzb3ze8V6zP4P5DJ9hLTeO6Zrgqu4+9NYlwXrdRGS0/1n9
TF0efKdrimu6rOijS4oNukm4x/7n9LN0eXFc1wzN8Yv+fvTVJ8NG3WRkck0p
/WzdIziha4FfddnQT5ccm3SF7H05ngFeBm/oMutK6+bwfGjCR/EL8knrZXiH
eM7ieUd3Pjuecbml9d/iDMGr/FVrC+K9GOei3E/+Rn5T3hbni/2F5fpxL5vr
4h4y1/AvzbK8bTzf/Ko8xf4svAyfy/PjlK4Vftc9iP66O7FZV8TeBrr1vFy8
r3T3xtfVzeMF0DT+9+AX5dPWy/KO8YzyuujB5/Ab8Q6z/of8EAbwFHEGxv8y
/Ft5i/WivCHfEPezvFYuL7eTp8jX5AXyvnj27L9PLhdnofl2nMvmKv6o3Ewe
I28xL/G55i5+0Dzj2nJmJ77O3G19svkR3xvPFe9pzo2z2vyHLzG/4m1ce93M
jmW616z1Nxfyz8yUvJbZP/525hH+lvkJ3xfvfNcXMxvFsx/vW+vj4vPjFeT2
8lR5u/kLX2jujzPBdVnl8vI7+hHyarmg3FweK38vz5O/kM/aX17uLO+J+1Pe
LNeTe8nz5JvxnNr3Z5xfGMgHWFskp4pzVB4gH5W32vcYb8w38YrowKfxX+N3
tH4/r8Dn80JowcfxH+Rz1ivwLnF/xrkY96fuL54Dg3jqODPjb8qPydusF+dN
4n7nlTBdl01XUfcuL4zzuoq6rvH58fpxz+j+5jnxOn/N+mL5rnj25IFxn5nf
xdc0t/P98Tm57nGzabz/rFXGDN0Dukq6BbwILuja44YuFwbr7sZ23Ux0QEd0
Qmd0QVd0Q3f845rcGOKaNNihm4UHfZ/K+oW6orioq6TrFvcPb4Decb/zf+Wl
8U6Os8HsYe//AHDv3m4=
           "]]}, Annotation[#, "Charting`Private`Tag$226652#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0ltMzmEcB/DHUl04litcVGSzGU2KHMoVQkI2CnOIOW2K6UBxFXN20WbO
hzHMoVvpSi60YUPOpBvH3NOJNp/n4rPv9/fb83973+dfRnllScWgEMIz3iWG
kJccwvOkEPYwlSF02xfZf9EPM4803tvPtH+hV5HNUNbZ/ZbnWEmPc0vsvupH
mE86H+xn2b/Uq5nGMNbb/ZHnWUWvc8V23/SjLCCDnXYJ3Na38NG52eZ2vYYc
6swjua8PZ4PeLS9QSp9nltp9149RSIN5NA/1cVTog7mjn5VT2KqflOO5yRPz
FZnLPT753DnylX0tudSbU2jWR7BR75EXKYu/zZzGY73f88v0H/pxTuuTWKgf
lGO4Qav5sszhbvw+5kqZyPW4i+9BZsV7Ypv5lMzkFk/NV+V0mujwd/Pla/tr
cq9slBPjGX2/TOVB/N4yO96vXi575SXO6JNZHe9UptOm//XZy/Wf+gkWccg8
lkd6Jrv0pHiH+nY+e6bA/EbfxwwOmEfRoqewSe+L98Aa/nmmxK4rviMWM4Hd
dsnxd+o76HRurvlt/D8hj1Q22/XH98laBpxbYfcr3h2t+n/i1mmo
           "]], 
          LineBox[CompressedData["
1:eJwV0EtQTXEcwPH/RQntdCsGMzUjUgst84xSm7wa7xlSJnnWjNfGMws1o5kS
WWSDZKy8lnnMqGaYqXWIIvKIPPYon7P4zO/7+59z7z3nZlTWltXEQgidPJsa
wvXEEHYynhDCJvs33UQpWQw5L3Der0+Sz0yqnP0xb7CLCfdtdvZdN7OWBRxx
lsRdfZB37ltlf6lPsYQz9hQ6dQp79V/zJuVctGfwXAe26DHzEld1LndYZ79g
zqFLL+SonsY93WYu5lD0juZ8evV7z7Rav9KnuayzWarPmnEe6TjV+p/Zzm5i
bHX2w2xhPfX2uXTrbI7p6dzX18w8Dkf/k5lFnx72DIX6dfR/sIxz9lQe61T2
6XHzFhU02jN5oSexTf+Mnp8NNNjn0aMXcVzP4IGu4YPfLLIPRO/JcursaTzR
aezXE2YHlUxmu7Nf5hU2ksMJZ8k81LV89N1r7G+i92AF6RxwFrit9zCFHfbf
Zitl5DLi88XO30bPxEpmkcAn10pcG9TnKWA2iXx27QtfGeWp+/4D1aReZQ==

           "]], 
          LineBox[CompressedData["
1:eJwNzTsvg2EYBuCnEooEa5MiMUkkRdKhs8OgbA6JBEvDRJwWrFR3iWAxSCTE
YMGqv8BfoFaKHthdw5X7fp73/d5voLA1u5mIiEXKyYhMW8Se7OJB3+ajNWLK
/KofMUaadbsEN/oqSZbMdXnGHMPs23XzqO/w6b28+U0vcqoPMa4fyhTXPJsv
ZZY7es0bsoVbfY12ls0Nec48I1T9Y9q+oh8zQR8dfDn75ocadRo0+WXGd+/u
lZikn05W7JvyggVGObDr4Unf5UQf5EW/kjnu+fPuP8i6LxM=
           "]]}, Annotation[#, "Charting`Private`Tag$226652#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864743162931684*^9, 3.8647431674292445`*^9}, {
   3.864743230555041*^9, 3.8647432344318*^9}, 3.8647489869306817`*^9, 
   3.864751685723919*^9, 3.8649282764404893`*^9, {3.864928335373318*^9, 
   3.86492834735642*^9}, {3.8649285287824025`*^9, 3.8649285839624524`*^9}, {
   3.865101853566948*^9, 3.8651018724469147`*^9}, {3.8651020883309298`*^9, 
   3.865102094219048*^9}, {3.8651027001444263`*^9, 3.8651027471773973`*^9}},
 CellLabel->
  "Out[1072]=",ExpressionUUID->"4e6777f6-df49-448b-8197-0e2c8d7fd043"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
FzwpyoC4yJolslOi0BD1u4wWPY+O9L/Qq+RjQvt3QToaVIPeU/boOBvGhErz
C62ruurRgS6aqC+DBRSv6y99ssnYgYNuWM0lFvxzW7eg0wTBCE+UPhcUkTbG
80Qi86lenNM8T9R8sEJ/rIYGMis2pen862HP3FknkfmMxvVFOw7ucxg7xwCf
9YPlTgwy2IuL7jXhp4I2fzbrixgFto8VNbN7ECDylhRVj7cZbWaAsFW/x2ll
GpzSKZNWxuu7zJC09HldJqysCMZOn+Kgx11jTZ/uZIGyJ8W9yQHBCF9Ub7++
OyuMDoYTKgK1fD3sdzEM3eQYGtcb2bArA86/xV/fo9+8towEKKlMYwy/j8Oj
OXcNK8lw2Qn56pGCr1f/5TN9D426qor3+UtUDnWf7KeC2ZXUIP84Ophtyph2
lWGC0An54HTvSlRptZnqdXkW5Pjorkx4TcHWbz0odzOVBdaC911HQygY4ZW8
RO0j2Pj+R+Q5re/jGLcdoENGwLpb/uQutrlZ8xXhTBrMGmgbZ0z3sp3yJ0Ld
GvDvv/AGdm8XGRq3WzgPvUTghIrinzeHqJBfN21/Eh/fizjPHGOcmRB+V9I4
xqcKzUhp98BcWFAt/E61OxbBiPOFUkHZiFRqD0r4poZL/E59C0a5vumz3xX5
2v0830QqQHyfKlG5vklh6e+X0/Y836QQ07vV2pTnm25X2M79eUzj+iaJxbfo
L/DxQ/im2x+z+h8P8UOyy8yIlxMJdgdebYreg68H/NNfpx3I4Kld2/D7IcLN
k7qjYHTC3h3vK//Lk9Kt8pcbcaQDkSeloXsZ75EYXI/0KCWu1MiKyvVIk5Tm
DUl6fDC78KySa5cofOmf/rPfkooR+VF3vU4IM2JGUPWZ9b7fBsXAYef6C57n
G1CXxjKRvhNMmDCP5OuBGvTZ3si56GG83hZ+8fS7wSBqsX9Ub9MpvN5mvgs4
vWQGlS6QcEAmxSGGPFruPUrC8veOOr73xvfvEMs/X64hGHHesu/J8uBgmwUY
cd5S1fPpDuXnkyjhm3Rei6tPbOf5pt69KmrCOTzfRFZq1X//mOebpEYtVNeG
8nxTfvjxuLERGtc3fQ/Xtxi7R+P6psKKhwn0OTrXN91eqGK1kSPE9UVtbdb9
/r8FYFpuR117BwlUezo0q/FxRuRhlYwWy9q/RYDIw6o/O6F44BANiDys5WX9
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
+Y4atQ8HPRZw388xKLBswrjfB/sfBNuiZQ==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{9, 8, 243, 426, 171, 402, 306, 440, 122}}], 
           PolygonBox[CompressedData["
1:eJwl0TkspAEcxuGxBaPYBh3NaGwh1pkoJBLJOAoWccXRCHY1JMZR0BiS3UJY
CQlWIpG4QuOKQuJod3U0q7GF1tU6Es+XLZ783v+XSWYyX6Szv77vQygUSmCC
JBLJCer4SMxu4KsPJXFqTxOl1f2se4zTxYBnKfy2F/lMtftO1xhk1J3Opd3I
NzvMmT3DdzuLG7ucNvtF95mzC4kH36kR/trdxOxU/tjLWsKSPaXZHHAb/A6N
ckKuu0bvdUvXdVbzOGLIPaYZ7HLlXtFSjmly92oyO5y7F7SYn/YP/cQ/e1XL
qLDb9VW3g9+l81qU8P89xDWTa7sn+M/sNC7sX+Txxf2gGwzTTCX5wXv03sIU
2LU+96ibjNBCFR2ev+khk8H7pZA6z5/0HVzsP8w=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{9, 92, 1807, 1806, 230, 302, 398, 158, 207, 279, 375, 
            107, 220, 292, 388, 135, 310, 406, 184, 256, 352, 76, 323, 419, 
            226, 298, 394, 147, 314, 410, 196, 430, 268, 364, 91, 444, 320, 
            416, 214, 434, 286, 382}}], 
           
           PolygonBox[{{7, 8, 339, 54, 447, 326, 422, 229, 437, 301, 397, 157,
             317, 413, 206, 278, 374, 106, 219, 291, 387, 134, 183, 255, 351, 
            75, 146, 195, 267, 363, 90, 121, 170, 242, 338, 53, 105, 1803, 
            1804, 156, 205, 277, 373, 104, 133, 182, 254, 350, 74, 225, 297, 
            393, 145, 441, 313, 409, 194, 429, 266, 362, 89, 213, 285, 381, 
            120, 169}}], 
           PolygonBox[CompressedData["
1:eJwV0jksnnEABvDXHQZ0rAWDW5Mmhg4SiWNwDY5EmVxl/JSNxLEgcSQS4ZNI
xIfB5IjEUMfoGNuFhcWiaqbd+vsPvzzP88+X98j3Fg6MdMSSoyhKYp4Sskjn
E2kZUZTJmL7HK61+XCk3uOWDPcqgPsMx/+hx1iCXuQzXtIfp1EfZ5Q8tzipk
nBty7e8M6PcU6DNM60f8pduul48U63Ms6V9knIvw7HKIDr1GbvErXEPmMRHu
Y5/Kz6ywY+/LF9ksy+VFeA/2eLJPwvOyyLr9Q1azybV9KHMYod+ulQnu9Pzw
HkzpVXKVQ/2dr3qdfKBInw330M9J1b/Rrv/koz4e7qEn+E2TXSbXuCLbjtGn
T3LAG13OauUCZ6SE/442PcY2zzQ6K5W94ZvwDfwH9/NAsg==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 34, 29, 24, 19, 15, 38, 33, 28, 23, 12, 37, 32, 27, 22, 
           18, 2, 35, 30, 25, 20, 16, 13, 3, 36, 31, 26, 21, 17, 14, 4, 5, 
           1796}]}, Annotation[#, "Charting`Private`Tag$226763#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0jksZVEABuArGKHAlDQoiK2QKBQSiaWwFYaEUdmVto7EEgmFJZGIJZGI
QaHynkimsJWWkoaGRjOD2tL5TvHl//+Tm3Nz815e73DrUEIURbOkpURRlyyk
3uE/ucMQLfQ5S+RUX6CadvtdHjJJd3jeWTqX+hpFNNj/5R+GGbezuNV/0a8n
caYvMqfn86jX0KF/yBirejlT+rTM4T7cLavpCe+QGcS4srdkJSesh3fIEo55
tvdlHecU243yRR7IXbkiy/jLiD0hs4lzZ2/LKlr1AZkc7tI3ZAVL+rws4Emv
5bf+KePhO5ixc3nQexnRM7kO91BCk/0q9xiljUFnP7jQl6mj0/6SR+He8NuF
55395EbfpJRm+y18P2Ok+g98A1B4QDs=
           "]], 
          LineBox[{1797, 45, 6, 46, 1798}], 
          LineBox[CompressedData["
1:eJwV0T0ohAEcx/HH9DBYsLGchUGdE2VQSh0Wp+SlMMnr4sphYXEGBh2K8lZK
IbF4KYPysmJjYWGwYsfg8wyfvr//s9zTc7GBdMd4XhAEaQrDIMhoJyMehtzY
OZL0un/0jDkGmfCsiHt7kzht7k/dZ5IZdylPdhejdj639jILdgVvdjN99q+e
s2bXko1+U2O82ENk7GIe7B1tYMte0iou+IjeQ5NcU+1O6Zce6YGuaoJLptyz
WsYpz+5dbeSKbveYFnDCnXtD61mxF7WSd3tPm2ix+/VPj6P30nWtY97Oajmv
9nD0zewSHu1tErS7v/WQaXpopYbQ//YPlhk3uQ==
           "]], 
          
          LineBox[{1800, 51, 336, 240, 168, 119, 88, 73, 349, 253, 181, 132, 
           103, 52, 337, 241, 7, 169, 120, 381, 285, 213, 89, 362, 266, 429, 
           194, 409, 313, 441, 145, 393, 297, 225, 74, 350, 254, 182, 133, 
           104, 373, 277, 205, 156, 1804}], 
          LineBox[CompressedData["
1:eJwV0D1LAkAABuBzUlEabROiJqGGoIZAEIKWmsxJh6KtD3QrcmgpEoIaEhoC
QxAaChyCqCFoyLm2lpqC/AH6A+q54eF931vuuKmtRrmeCCFUyCRD2JYLlB2O
5B2HVNl1luFNv2SVDftPPnHKsT3Nl77Dvp7jXe/IIh39XM7yyK99K1d4ZdFe
lyk5jm/Q7+Odcp5nmnaaIz3PA592V5Z4oWbvySx9Bva1XKKtn8kCP3pPLrOm
b8YPifeIq/geWvqJnOE7/gUH+iQf+g0X+hxDfcJf/gOTBCor
           "]], 
          
          LineBox[{1807, 92, 365, 269, 197, 148, 77, 353, 257, 185, 136, 108, 
           55, 340, 244, 172, 123, 93, 78, 56, 57, 58, 59, 60, 61, 62, 63, 
           341, 245, 173, 124, 94, 79, 354, 258, 186, 137, 109, 376, 280, 208,
            159, 399, 303, 231, 423, 327, 448, 64}]}, 
         Annotation[#, "Charting`Private`Tag$226763#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{449, 531, 514, 498, 483, 471, 543, 526, 510, 495, 463, 539,
            522, 506, 491, 479, 450, 532, 515, 499, 484, 472, 464, 451, 533, 
           516, 500, 485, 473, 465, 452, 453, 454, 455, 456, 534, 517, 501, 
           486, 474, 466, 540, 523, 507, 492, 480, 457, 535, 518, 502, 487, 
           475, 467, 458, 536, 519, 503, 488, 476, 468, 459, 1808}], 
          
          LineBox[{1809, 460, 537, 520, 504, 489, 477, 469, 541, 524, 508, 
           493, 481, 461, 538, 521, 505, 490, 478, 544, 527, 511, 496, 470, 
           542, 525, 509, 494, 482, 545, 528, 512, 497, 546, 529, 513, 547, 
           530, 548, 462}]}, 
         Annotation[#, "Charting`Private`Tag$226763#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03dQ1mUAB/AfONC6c5tXKkgXipKKM1cBqeGsrqWVk7JliaMUQ6nuyllu
ryvNUZqm6XmZBuIWcf1T4t7jL7diQ5x9nj8+fr/f57kX5P29b2JW9kvDYqIo
+tY/SbFRtKFcFHXgT/1L+pBGibOXuaD/QDYNKXTWkb/0r+jLBft9HuhrSeeA
/QoX9QUM55adQxW2243YqHdivz6BCuX9XLser9sX5QdE/G5ncFB/lUv6Qqp4
zTQ7iRF2mRxLVXbY8e4X6K1JtjfJpynRJ1LR/QS7Pm/Yl+RQYlhnP+r+O705
z9qH5Gtc1hdR1f10uyEj7dvyU6pRZDdms/4MB/RJxHnNRDueN+3L8kNiWW93
5rDehyv6Yqp5zQy7EaPsOzKX6uy0m7BFT+OgPpl+dOGIs75c1X/kY+7a46hB
sZ3CVj2dQ/oUKvmdk+wE+ttX5EeUo4m7FfIP54/p3+udZapsI9fJXrKr+6Ph
eYbPmn0tPHu5zH5O/mRXlzPD75bJsqX8TfaQn7i/p48P76FdUzaVq+Qudwn6
wvA7aafnyyedb5MZHNafcL5En6pX1ifrDRhgX5XDKE++Xdf9PL1F+P/Zx8Ln
guv6Emq4n2U3ZrR9X+ZRi912U7aHzwpH9K8ZSCbHw/Pmhr6UMTRjR3jvOKp/
wyC6ccJZP0r1n8mhOUXOunBMn8ZgunMyPCdu6ssYSyo7nXXluD6dLK7Z2VSg
wO7BqfCe8Le+nJr+1tnhWYfPtP1AfkZt9tgN3C/S24b3yy4O7xkn9CR3S/UZ
+kP6FD2RVH2NfMv5dTmciqQ4Xyk3OK+nzw9/o2wZfr5cL3vLnu5P6wPpaP9j
J8vldqb8xa4l54TnL1NkK7lW9pS57iP5efiuyEdkM7la7nWXqC/Wn6K9XhA+
j853hZ/PSX0mD7ubaj/O2/YNOYI4Cu1enNEH8a++gnHEeN0Xzuqwz27Fbr0b
p/RZDKHUHkklNtq9OasP5j99JeNpzR5n3Tmtz+YdnqcNe8P3iDP6HN7lBc45
y+KW/it5tGVfeJ84q8/lPW7ao6jMJvtFzodnSJm+itr+rrnhexAXRf8DFbnI
Wg==
           "]], 
          LineBox[CompressedData["
1:eJwV0k1LE3AcB/B/bhCkuxTkEx1qEQSWSIKPuwiCgVbO7AWElpYPF61j6Tza
sbbULgmCIC1F6FZ230P1EnSbvoBU0Io+Hj58v9/fnzEGu/p4Ojl1LoTwlkvn
Q6iLhJCrCqGNnN7Prv6OcQZpJ+8+wJ6e5hlJSm4jnOifeEUHBbd7lPQMz/lt
z3CBr/YQZX2UUz3L5ajvtpt4bVfZ83o9efua/VFvp9MuyvuU9Rve1vT3eo2+
qMdp0TflhPuhnCXhVn32PXJD3pXfvF+RH+xeeUe2yS9nv0U+9F7Rn9Bt/7Fv
ynW7T362a2Xa7pG3ZKvclnPeInpKb6BZz8qCe1xf1Tvosn/IB1T0JWLe39jX
mbSP5Atq2LGH2def8lffpM5nMvZt5u2ovaA3UrS7+akPsq8vM8Wx/ZIY3+1H
HOhj/NO3SJHgl1uSA32Fi/5P/wG1mEqq
           "]]}, Annotation[#, "Charting`Private`Tag$226763#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV00tQjWEAxvHPjGpRLrXIhoV72LhbuC9d6lQuOySXBSpKtaSYUVJhh1Wd
TrXAgk2lsmAj1Iy7kg0zlNuIBUPxexf/eZ7/85455zvf+c7swpL84klRFI0h
NjmKliZHUU1SFKWig59DEbbYm2zz8IQ3IRfL7LW2NHTyGhTYOvhajPBibLU1
8/l4yptRauvj2fjD87Dcdp5PQRev4oP6HtTy/bxTX4dRXoJttjhfgGe8gX/Q
jyDOy/hDPQc9eib+2uMhbaeQz1fwOn0qrutJuGOvlkO2d3KvvCdn4le4VueF
sss+LNeH+ybT8QOfnF+RY+FeyHLZLxdiAsedb5ct9sGwy1syFd/x3Hmj/Gg/
igf6nPB6+0n5yBbDOG/h4/pp7OAr+QV9Grp5HQ6E78Q34DM/gWxbgmfhBb/I
R/RjSPBy/ljPxQRPhGvXq7CTr+L1+nTc0JPRYz8j39jey33yvpyF3+G6nB+U
3fa3cmN4fmQGfuKL86vhHobfWVbIAZmFfyh1niNb7UNykbwt0/DS2SU5aitC
nz43vNZeIftteejVZ4T3s7eGtFVjF1/NG/R03NRT0Gs/K4dtBajnh8J31Tfh
K78Wrl+vRBmP8TZ9MV7xy+GZ0IvRxiv5QHj+EGG3bY2tUc/A3fA843D4fL4Z
38JvH/5/tna+BK95OzJToug/9j+KTQ==
           "]], 
          LineBox[CompressedData["
1:eJwV0jdMlHEcxvH/KVgGXRCBRWPiYsQ62QfbLtWuIIktETVRKW7WTeSAyTIq
Rc5BFx0AER1cEEzsgoNO9h7j4Oc3fPM83+e99+7+996c2vqyQ5mU0nMUTU6p
Py+lC9g7KaW+/JTW4gs/hk22Tl6KF7wTDbZhXo4Mqm3LbC16AQb4Gf5Gr0EL
38f79XX4yi/xn3oDjvMy3qUvwC19Gl7as/KDrR5dvJE/1ivQpxdjgn5Npngt
TvEROR+b3bNcXrQ9lTNkTk7BZ9xz/awcs7+TtXJIzsLfuM/1/XLAPibXyzuy
IL4/vrl+Wf6yN2JYn4cT9nLZbVuIV7yNf9QPo5s38RG9EhOxxbbC1qoXYpC3
xu+NCnuPbRFe8x5sxUp71jYT9/k5Pq7vQZYfiDPqG/CdX+G/9ab4vryS39AX
47Y+PZ6bvV1+sr2XR+QjORf/4vWuN8tR+7iskv2yJH4H5PHrMhPnxWk+Kktj
83/b5v5Vepv9mSySN+VUDLl2Xr611eGBPjteaz8oB20bcTeeJX7Yr8o/tuY4
F6/ivfqSeGa8I561fhS9/CR/Ev9b5GO7bbWtXS+Oz4zzxxlRbc/ZlsZZeQ47
sMbeYSvBw/iMeF/sxC7sRg0Knfc/Qfh4Hw==
           "]], 
          LineBox[CompressedData["
1:eJwV0klsTlEchvGDaumGjURaQ0tYSLAw25i1hpVVJyStTlRLWGprasW07qxl
h02r9XVjQ9DWLNHSxEa1SCQNEkMrEr+zePL+n/ece3PvPTezsGpf5ZQQwjjm
poQwOD2EHCSjMCmETckhNJjT0M8v8hFzMfrMGfgb91irkA/1WfjJq5Gj6+Sr
8IF3ogib9Y26dAzwRhzVPeLZ+MVrkKvr4qsxwrvifXVDPBcpOKTbomsyz8MT
fol/NJegiVfyx+ZduGeeg9/6Djmh+ypPyddyGYJvUWs9z3xH/16ukQk5Cz/i
/a03yG/6z/KEfCaX4F+8Lr6DfBvfXebJ+zINM8w35VTUmd/I5Sh2zVbZrJuP
p/wyHzWXoplX8T7zbvzhp5Gv6+ZrMcq7UYJt+hbdgvhsvAVnUIrt1lr1C/Gc
t+IsCvQ9unUY4z0oww59my4DL/gVPmYuQxs/xvvNezDBr/NJczXO8f38rnk9
es2z8Smevfyu+yJPxmeRS+Nea7XyXTx7mS8fyPR4dpjJb8lpGEc9H5Qr4nd1
fuWu32m+ph+WmbJLpsYzw0vrV+Mz6Mvj/x33xP3643JAtxeT/Eb8z801OM8P
8IR5Qzx7nsBhZOnbdYvwirejDkeQba1Dvzj+Z/HfQz0O6nt1G+M34L3xTHXD
vACpuM2TcME8JFfG9/aOFfb+B8Aehjw=
           "]]}, Annotation[#, "Charting`Private`Tag$226763#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864743162931684*^9, 3.8647431674292445`*^9}, {
   3.864743230555041*^9, 3.8647432344318*^9}, 3.8647489869306817`*^9, 
   3.864751685723919*^9, 3.8649282764404893`*^9, {3.864928335373318*^9, 
   3.86492834735642*^9}, {3.8649285287824025`*^9, 3.8649285839624524`*^9}, {
   3.865101853566948*^9, 3.8651018724469147`*^9}, {3.8651020883309298`*^9, 
   3.865102094219048*^9}, {3.8651027001444263`*^9, 3.8651027473183527`*^9}},
 CellLabel->
  "Out[1073]=",ExpressionUUID->"76cee779-8a8e-4208-94d7-bd9dfa18cee2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
Gu0QOkY5NP/rzh8RON+j+i7aho4xd71xUbFg+buu5KfmjmPY2UgD2bmz4lDI
ORHGYbiMzhUeDo/tFge55ja71Q5z6MT9lItXRyUgnVNw3zfO0ZV9dYNdyUgQ
YxLh++qSV/c3cPuxrfC3r47rNh4sJazwtydCLzn21JAA52+v2XvtmL3CDTh/
OxbR4ZSlyAP4flu0s6edoMkL+H57WuexU58878p+W2nSUm3/FeLKfpsYclpO
1XoJmXyQtMsIoqM7gkPKT/gHkW30JsJ+/xm0GylJqPa8QSbuDjs23mQi/pDd
l52yfmNGY81tlhFz6PCc6oD7qRpM5NqBL7bBC6g7QCeMrlCJgp9aEZ3fL6FE
riyHnYJTyLEw4I7DOTa4nPb1uO4OTvDYdWF1kAU7NB1bf/x+L+s8chwbO23P
AXmuYipdHwTA6+enlod2nJAn96l16afACk/8bremY1QRGXCe+DiHoliwIhlw
nljjkJSI2Rwf4DzxZCVnts4yCVJ8rV0W8gTBztjQwLqObYUvbpSQ+2N87r98
cYuF7rHCT0Ta5euzRstnhWEPvQ57bMdJk17nP23xTxg2XzmdU/phAcP5Y/Hl
Y/8qLzEwnD+OlVp3bW6agWH3K7WeWVNBkzbTstaUiRnM0INN+6nge+SZ4LHa
Kaymz3zMwEYEtkwlPLX8Q8doxRn2XOMicOTo9bLdXVMYnje4xz0zuh4/jOF5
g3j+Poq+0C8Mzxu6CDde0Lp7VvKG20a141HSsyt5g8vJsUdVictIuthv55lF
cXB9PKdcVcZAM87UTDUvCaizcNCMkPiF8Dyi5mhzucruOYTz06734rRcQzhX
+OnYM/ss7cRJgPPTRUVhUQ3buAHnp09KLQ/FfuUGnJ/2S3UgT2bzgMHH0VL9
F4PIM7z/5BeWHvlZ1GdxpHkUlatb/+Fu4YaYd9IcN50nUHjzKv4vspxQMPuA
77DvFGISxTsX7KZRiU3DQ/0A1vcWS9POoQYUuctlrsOXgbbaHfKXSSjDhBal
TTofzKLKhietj7PrMfv2PAVK6DzanUJLoazKxLL3BWzfHb+Icj/cOWrY342O
n+bPN2pjg2FBedFHTiSI2xdpz9HDDj/7XfZY27P8Pi2y7tsAy6+VqFreZhdc
4b9X930UOXBYAHD+m7pDbbjThgw4/23qymEe8Zsfwopey7vxkYBsdkxjx3Fe
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{57, 12, 10, 2127}}], 
           
           PolygonBox[{{9, 8, 384, 176, 364, 276, 397, 133, 350, 262, 390, 
            199, 375, 287, 400, 56, 300, 212, 378, 147, 354, 266, 392, 105, 
            334, 246, 385, 183, 367, 279}}], 
           PolygonBox[CompressedData["
1:eJwt0Tksg2EYwPGvEldik0gsEoNro5iIK+6ydEAHgzoWSYtBgsGAWEqtjpGR
icnEYHONjo2Ricnk94bhl//zvN/Xfj2q09lkpiCKohhLFFNEI/0lUTRIh7nJ
DU+6T5Yxep196Ckb4R5qnN1qjjQJ+5eeM0yb/U2PWWUi9vfwK+kkbn7WA2bM
ZSyYk/oTnqOXuqiVjJv79FPX9UzntZwcm/ZJLWSLG/uyVpEnbq/VO13RHZ3S
UraZto/ot16QMVeQMLfru56wRsoe49rcRbP5RQ/D5w3fNZxR5/xed8N3DO9P
Ny3Uu/ageWYZ8vsP0GpucO1R95hjlJ7wOuevevT/H6b4BXTcM6Y=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{9, 10, 2128, 2126, 263, 351, 134, 177, 240, 328, 93, 
            190, 253, 341, 118, 270, 358, 160, 223, 311, 69, 284, 372, 196, 
            259, 347, 126, 273, 361, 168, 381, 231, 319, 80}}], 
           
           PolygonBox[{{7, 8, 239, 327, 92, 282, 370, 189, 252, 340, 117, 269,
             357, 159, 222, 310, 68, 125, 167, 230, 318, 79, 104, 146, 211, 
            299, 55, 91, 116, 158, 2125, 2123, 175, 238, 326, 90, 188, 251, 
            339, 115, 157, 221, 309, 67, 195, 258, 346, 124, 394, 272, 360, 
            166, 380, 229, 317, 78, 182, 245, 333, 103, 145, 210, 298, 54}}], 
           PolygonBox[CompressedData["
1:eJwt0ksopQEYgOGfJGUxpaaUlNvGfZau5ZLbSY1hjI1cxkK5zZTEpJiRcjll
xYytmdVgZTbYjI1i2LossRqs2GCD5y+Lp/f7vs45nf5z0j9+ah6KDYIghnmy
SSSeQmoSgiBC1HxIlhcW6BTrXFPt1qpDLHPKG7dybaD75bMPyHTP12+scUWV
23vd5oF39kH9wUn4PexlusMTbfYv+osLSuz1+jp8H3/Mt0TMXZoQljnzmP7T
DM3TVB1h1zytcbTz1R7VJPpYtU/opVZqiy5oMp/ZCp+J3muTDuicJtLDd/u4
HmuBlmqKDvPX/MgH85i+0l5+ms8pNtfpBjfhM7V36iz7pNtzdZLf/KfCrVk3
ueOtvV+XOCLfXqKjrHBGkVutdjDDHmluOeFvQh+LNPo/PAM4zEFk
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 36, 31, 26, 21, 17, 40, 35, 30, 25, 14, 39, 34, 29, 24, 
           20, 2, 37, 32, 27, 22, 18, 15, 3, 38, 33, 28, 23, 19, 16, 4, 5, 
           2116}]}, Annotation[#, "Charting`Private`Tag$226875#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0jssnWEYwPGviUFiaCKRSBoJZUKrI0rikrhFgoNahEMHibo0EUEkbiFu
iUmxtiaXSRcsLBK3FR0xUZMu2oX+3uGX//s8JyffyfudjM7+WN+rKIpmqE2M
omXtpoFs0n14rLO0UUG+3bV+Z4hC3tld6De+UGd+0l1ilJjvdINxcsiwO9E5
2qk2P+oOlRSYb/QHXc6vGXb+pM96wIDzGz46v9dLHdUV/axJzNNjrte/OqV7
+lVTWaLRXKr3Oqab4R40mUUmzK2awDRH5kFNI9f5rZ7qcHiexjWRuHON/tGf
9DqnUBXuTW91nRFazC96SBF55itdDd8L78T8T/dposz8W7eYDO+ATLszXaAj
3CnFfLD/pWv00Uy53YNuhzsJ90eW3bkuht/t//AfrkNApw==
           "]], 
          LineBox[{2117, 47, 6, 48, 2118}], 
          LineBox[CompressedData["
1:eJwV0D0sg1EUgOHboQmJrYmki8TgZ9V2I34STVBTB3QwKCaJskgwGBBL6YyV
kYnJxGDzs5aRkYnJ5DnDk/ec26Zf79dbb1TXMymlJaY6UhrVIQdtPaXBHJPO
vvSK/fgOfc6etEmdiv1Hb5hh2P6hF+ywEA/iXsYomN/0jBVzFxvmqv7Fc/RO
NzXPvLms37qn17qmOZoc2Bc1yyGP9i3toUXB3q/Puq3HcW/t5Ihl+6z+6i3x
YrqpmEf0Uy/ZpWbP8GAep2h+1/P4v3HXOGPA+YuexB3j95mgxKDPXrXFKtPe
/z9nkS2M
           "]], 
          
          LineBox[{2119, 53, 297, 209, 144, 102, 77, 66, 308, 220, 156, 114, 
           89, 7, 54, 298, 210, 145, 103, 333, 245, 182, 78, 317, 229, 380, 
           166, 360, 272, 394, 124, 346, 258, 195, 67, 309, 221, 157, 115, 
           339, 251, 188, 90, 326, 238, 175, 2123}], 
          LineBox[CompressedData["
1:eJwV0L1LQlEYwOEjQqZQEARBBOFsczXpUuiSReSifYBQJERC9AGBUUPSEkju
5lZjTU01Bf0BNueWY01NBT13ePi977nD5Zx0tb66HwshlFkaDqGjh1SYI+Nj
T2/YZZmss0+9o8ECs84+9JZt8whH5jX91WcOzJOsm/P6pX4Zzs0PuqfjXHNp
39QhmrzZT3SaFvP2GX3XU21rVVNcUbMX9Ucv9EnrOkHSvELOPIjuoPda0zHO
ovtrnNfoPXSKxehNtK9ddsyjHJtL+qcvbFCwf+sjTbbsCYou/A9giyna
           "]], 
          LineBox[{2128, 10, 2127}]}, 
         Annotation[#, "Charting`Private`Tag$226875#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{401, 501, 483, 466, 448, 431, 518, 500, 482, 465, 419, 514,
            496, 478, 460, 443, 402, 502, 484, 467, 449, 432, 420, 403, 503, 
           485, 468, 450, 433, 421, 404, 405, 406, 407, 504, 486, 469, 451, 
           434, 422, 408, 505, 487, 470, 452, 435, 423, 409, 506, 488, 471, 
           453, 436, 424, 410, 507, 489, 472, 454, 437, 425, 411, 2129}], 
          
          LineBox[{2130, 461, 444, 412, 508, 490, 473, 455, 438, 426, 515, 
           497, 479, 462, 445, 413, 509, 491, 474, 456, 439, 427, 516, 498, 
           480, 463, 446, 414, 510, 492, 475, 457, 440, 428, 517, 499, 481, 
           464, 447, 415, 511, 493, 476, 458, 441, 429, 416, 512, 494, 477, 
           459, 442, 430, 417, 513, 495, 2131}]}, 
         Annotation[#, "Charting`Private`Tag$226875#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
45rxu+JPcEqVzfe+M34DY1XH/g/CIh3x
           "]]}, Annotation[#, "Charting`Private`Tag$226875#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV01dsjXEcxvH3tFUjUUpI7DRGgtoRm3Bpk1CqRlxZbY3iCjWbGDdKayQk
rVEiMWq7o9OdzjudrpQYHTeIz//im+/z/H4n73ve8/5Pys7s9VmxKIo6sCEx
ih73jqK5+CwXIReZeG+2HD/k58jHRjwxm4cmuRgn8UlPR4QyPQsf5BX4Kb/A
FTTpu5CEGj0NT+X5aJbv4Kucg+E4pdfwFsRQrv/hs5iMbL2MV+KX/BKd8jGM
xVW9mXdjAIb0iaJbXGsek8/L07FJf8YL0CL3tbss35U7+DCmmo3gYVzEp+1q
OQOTzOI4mW+E5+EK+7/yOczSUzmFH/JS3m9fLq/CRP233p8Lwu/Lr/Qu+Thm
6ON4NN/nArsW3oOBqNPj7C6Ez2KzXsoL0SrfwxnU6VsRj0r9ACrk1eiUk1yj
UH4td/MJjMcY8xIuNG/lvUg1S+ahfDvci+vt4/miPptnhvfAj3gZp4ezJC/C
BL1N78f5+pzwbPo3+Qim6SPDOeDi8M7t6nkbEjDI/CZXmf/jPEzBQb2S16BL
foMeOTfcE9f0Nt4XroEGPcG1LoX3FM5aOK+8GO1yCb7LRzEqvE+9gbejF6r1
Q6iS16JbfovraNczMRiNekY4o/ISfJEfIA+N+g4k4qOeg2p5HXrkd+G/5zv+
B7IKfZ4=
           "]], 
          LineBox[CompressedData["
1:eJwV0klIVVEABuDrIp+pUNBgYKRGYRENhEkQRTbuTW3V9BxqpRVYprWoNpqm
LgxKswF0UZbVqtlqm1NLp5Y5ZNKwUivqO4uP///PeT7uk5sVr8gvT4iiaIjC
pCiqTdRjUXSCGL12JR/1fGb1N7TyxS5nKUP2EZ7ruxnXH1LHsB0niT77HL36
Ieb0t7QxblewjGH7KC/0PCb0Lr7rVazimj0ii1nIEs9/W/Y7/ydr2cR5u08W
MK8v8rmbeo8+Ky+z1Vm2zJQPwm8I3+V+Qj/NRnu5TJP35E454n6BbLRzZY5c
Ix/LvfKY+5f6HrLtSTtFttiP9B/yAhmkO++Q9c5HZQnJDNhV9OuF/NbfMadf
YR3t9qQ8E56PFb7rvhx1nqg36dtYq3fL485fhWcMf+9syk6VN+zt4fntn3o1
W+xMuVJ2yl2ywf2YXsoGOyW8A7Jd7pCD7iNZZ+fIzXK17Aq/192ALOKPvtj5
Lf29Pi+vsp479pQ8G34PY3bMZ5vD/zq8n/ZruY+veje/9BqyuG5/lmWk8smu
ZlA/zF/9A3eJh3fa2X6m9Sc0UkNxeD+dH+Cb/pQmLlJCj/ODzOjPaOYSpZRx
klMUePb/7sN05w==
           "]], 
          
          LineBox[{2136, 1880, 1790, 1730, 2043, 1924, 1834, 1696, 2026, 1907,
            1817, 1757, 2056, 1937, 1847, 1641, 1983, 1864, 1774, 1714, 2035, 
           1916, 1826, 2077, 1958, 2111, 1681, 2014, 1895, 1805, 1745, 1662, 
           2000, 1881, 1791, 1731, 1697, 1642, 1984, 1865, 1775, 1715, 1682, 
           1663, 1643, 1985, 2135}]}, 
         Annotation[#, "Charting`Private`Tag$226875#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864743162931684*^9, 3.8647431674292445`*^9}, {
   3.864743230555041*^9, 3.8647432344318*^9}, 3.8647489869306817`*^9, 
   3.864751685723919*^9, 3.8649282764404893`*^9, {3.864928335373318*^9, 
   3.86492834735642*^9}, {3.8649285287824025`*^9, 3.8649285839624524`*^9}, {
   3.865101853566948*^9, 3.8651018724469147`*^9}, {3.8651020883309298`*^9, 
   3.865102094219048*^9}, {3.8651027001444263`*^9, 3.865102747774207*^9}},
 CellLabel->
  "Out[1074]=",ExpressionUUID->"74766db1-2a2e-4feb-8835-0e315472d9df"]
}, Open  ]],

Cell["However if we put Weight = 0", "Text",
 CellChangeTimes->{{3.864743278634653*^9, 3.864743294513571*^9}, {
  3.864928368831436*^9, 3.8649283768008432`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"30e7c68b-9250-4d9e-bf25-90bff9f1744c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", 
    RowBox[{"5", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "k"}], ")"}]}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"Weight", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", "ICs2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess", ",", "Weight"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.864741199114215*^9, 3.8647412309450274`*^9}, {
   3.8647412638285017`*^9, 3.8647412753688107`*^9}, {3.864741323608369*^9, 
   3.86474133960525*^9}, {3.864742124890915*^9, 3.8647421532108536`*^9}, {
   3.864742303924614*^9, 3.8647423252527876`*^9}, {3.864742422178767*^9, 
   3.86474251208799*^9}, {3.8647427673552923`*^9, 3.864742767707179*^9}, {
   3.864742898915184*^9, 3.864742916706489*^9}, {3.86474298969613*^9, 
   3.8647431190277376`*^9}, {3.864743174202079*^9, 3.864743221917805*^9}, 
   3.8647432521211405`*^9, {3.864928362116619*^9, 3.8649283650156775`*^9}, {
   3.8649283980639267`*^9, 3.8649283981968837`*^9}, 3.864928450503869*^9, {
   3.864929023333527*^9, 3.864929025293889*^9}},
 CellLabel->
  "In[1135]:=",ExpressionUUID->"8ee1208d-b3ac-419a-ab3d-c515866b0670"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
/rpZZTVNlukPRZhsc1f73qiI8v8Ev5k1zsX8OMr/KV1kM3raFhzl//3cfy5u
rOrO/6ffg3gAO/1K3itp/TjiAchSK6X2xmThiAeIOSQx+4aUhiMeYLGz+/B0
SSKOeICNWnKeq57E4ogHULsftPd2dASOeIAN3s+UvZaG4IgHWLaT7S55cyCO
eIAfEV1Pcy744ch/6vzsrXHm1VMc+U+7T9dWv33iwfSfHnxVyTm5343pH31Y
Y7d0t/J1pn8UU933Z8c1DaZ/5OmVNBK+WJ7pH/3e4HQgIbNc8d/8I8QLLEnQ
HKAxonDEC2xSefx4581wHPECa0V4r+/6GowjXiAplNuR5BOAI15AZrOtlpWV
L9MvUo4zzJH3usz0i1KuFglNzJ1k+kXgblgZ2Cvyr34R4glkp7bl7ePa9V/8
H+TnrBA/ua82ixP/p5+DeIOZbYsPPVLcx/Rr8rJsnv7KalVEvMFNTUsvnder
cMQbxD1yuRRXJ4Ej3mDTRGvrq3Nf8//pvyC/5drni0PTK9sUEX+wo26g83CT
EI74g5wWXZ5ox+l85KcsPSlWtXiuRBHxB6O96rnBVuX5//RPEI+gueOorlpm
P454BNkLGb/0P2bhiEfIl9dRGV2dhiMeweqaUm4eNRFHPMLidIONjPBYHPEI
zewTjueyI3DEI1gY844aSYTgiEcgreteqn8oEEc8AmeuBZ103Q9Hfs7s1oNy
UilPceTnRHOkreYJ82D6OXtE38X8OOrG9GMUOdcW3be4zvRj3h0W190fo8H0
Y26U/lzFVSvP9GN8C2Ij8RP5iv/mxyBe4ZuajZoVTzSOeIXVSmH6CQ/CccQr
iHBtcvnM9gpHvEKfYeRj7G0AjniF2uXqC573fJn+i1hE5/FLrZeZ/su1GeGP
y26qMv2XcFcX1c5K0X/1XxDPcKiPZLA4atd/8VOQP2JqZ/mp7/ci/J/+COId
zsxm+e0a2cf0P8L3+yj1jrcpIt5BqHTpOuk1AjjiHQ4/WvPsbP82HPEO7cH2
PAyRX/n/9DOY/kVLlcE35RZFxD+kZhVF+twTxhH/8H21x4D9jvl85E+Uvq95
lJBaq4j4h90WZ3daB33J/6cfgXiIAfkbp+2N6xWR32B402lGLKNZEfEQjAXs
JQzS8xEPYVZqEo+Ltisi/2Aqv6697UqWIuIhsKdas8fepeb/d35CaseJOc6W
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
pADKi0Z0LThuFEfBP/OiuZixpdsaY0AgbUo0wIABlMDPkvpRH8A92+5y48w4
2AgVthxySoNqF6trSRbEeQN3+lq4vBJiT3N9bntEwia1JM99X1oN9W+e9bsQ
+7ebdIJV7FbivNi/AY98QMKUluZp3JOngPsddrbVFTmAeOiDC+KHBTqyAPHQ
lKO95muFiefVf3jolzfqPoZ8zgTltoFRvyM0mMs+PspZkgFit5ZecSumwTdD
I6rW3jT4Z74lpWmX8q4kHsoVd78sEmcAphgqwduWDE3KJoZCixkQ/N7f5lRT
Jegx1jtS3pMwJ4OL7SGN1bC0Y9un4I/E/vgfvrogLTJ3ziGLyVNfPj4XWfY4
E1BelmP6ve22hCnUZvIFfmmKhjUnGZ9D7zNgJO90L/f7RNgXQab5z42D7KcL
Qn/GU0Fer0XKVY0Bij11ImrVFVAl5F6nYEfCUt7Y5C3UVkEYecTasoiECcu9
Pm9DrwHM+O3BPc9J2DiEBr+Kp4DC19znrhzZgPjtYy4uNpbbCH36H35btOFy
aEBDJpjISa332k0Dtw/7lzVPZsCyxddUtLPfQ92YQ0wuD6En5hzeug+kgE5B
lfP0FgZs3kQK2ny+CvqGvEfyiOs/debOarJODWhr+q1f846ENd6Us8sMSYLi
LeImx4jrUVhNo7Weqgae+8dF/Inx/nf5X9iO4A/f8BnwFtGvFZf3heFVhkE7
Dk9Bm+fwluA34ZATWMDZfnwC8rnE/eefxsH8mZ1CXsR+KPt4tQLbzmTg2npT
7/WfcYgbdnePMkoHgQjqe6loBoTuUz07eykbfqwLSMDJk3Bl1JP+MjwXZi92
H+ZWmoZRrhVlLU7FoNPyDsK/sGFGKfV7P9mXQsd+EQ3z5RwYL6Z85PiNctgl
YXXBg41Yn2zSn6LcKoHf9t3QArFffpQpuqVzrxokSsdWhBcQ5zMh/+fpobWQ
pPBrid9VErYijib99lI9JLilDTx7xIFNzJzLWKXRAMIpfWo6F9mZ/cyS42+8
rE8NAMov20jnZPXeUgHll5d1sUNv2joA5Zf5Xyp/aTl9AZRf7p68vjpQoxZQ
fhkRE7LlSlYpoPxyGS3hRGhRIaD88sB+uX3rc3IB8fMDP5z/9O3NAcTPdybf
sRMIJdbLf/h5p7MbknXJWUx+Xsk8/MqB6ExA+aeQinVQo04GoPyzsDvAOOpS
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

      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{231, 237, 230, 2024, 233}}], 
           PolygonBox[CompressedData["
1:eJwNzC0wwwEYB+D/BEP1VY04szoWCQQb4kbZHYE7C04ZU33ECYQF59akmVUs
EiwsOKdJjnPGrHvCc7/3vfd3bySXX9nuCYIgRJZP3vnmI2ynbf6hqlRgkSiD
9PLrdi33SDHJEGFuOSRDgjE6+jW5T5oYw/RxxxFZponwp38jiywxxQgPlFhn
ln7uOWaVGcZ54oxN5un6V5cHLBOnRZk8ozxyygZzvHDJLgM0OGGNJM9csMME
Tc7Z4o0rFnilwhf/jlgvhA==
            "]], 
           PolygonBox[CompressedData["
1:eJwNzCswwwEcwPE/dUP2Cu7mUb2asSRM81rbWBLMjhNEr+axJBA4wZ0FqpnG
SMIETnBHIE2RmJV9wue+v/D7/brS2cmlxiAIGkjRafjWL70kxC07JPkgzwiv
nLJKhDKHLBLnjTPW+PXzSteZop9njlmmlUcOWGCcMHfskiJKN39+FXSDaQZo
o4kSe8wxSg9V+9e6yQyDtNPMPfvMM0Yv//aLusUsQ3TQwgM50sTo44kjMkxQ
c3+j2yR455xhXjihwgqfXPBDHSVNMkk=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{231, 232, 238, 2028, 2025, 234}}], 
           
           PolygonBox[{{235, 236, 374, 492, 419, 474, 325, 495, 426, 481, 359,
             489, 404, 459, 280, 496, 428, 483, 368, 490, 413, 468, 304, 494, 
            423, 478, 338, 488, 383, 438, 246, 431, 486, 
            375}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 188, 152, 121, 94, 69, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 189, 153, 122, 95, 
           70, 52, 23, 190, 154, 123, 96, 71, 53, 24, 191, 155, 124, 97, 72, 
           54, 25, 192, 156, 125, 98, 73, 55, 204, 168, 137, 110, 85, 26, 193,
            157, 126, 99, 74, 56, 205, 169, 138, 111, 86, 27, 194, 158, 127, 
           100, 75, 57, 206, 170, 139, 112, 87, 28, 195, 159, 128, 101, 76, 
           58, 207, 171, 140, 113, 88, 29, 196, 160, 129, 102, 77, 59, 208, 
           172, 141, 114, 89, 30, 197, 161, 130, 103, 78, 60, 31, 198, 162, 
           131, 104, 79, 61, 32, 199, 163, 132, 105, 80, 62, 33, 34, 35, 36, 
           37, 200, 164, 133, 106, 81, 63, 209, 173, 142, 115, 90, 38, 201, 
           165, 134, 107, 82, 64, 210, 174, 143, 116, 91, 39, 202, 166, 135, 
           108, 214, 178, 147, 83, 212, 176, 145, 118, 217, 181, 150, 65, 211,
            175, 144, 220, 184, 117, 216, 180, 149, 92, 213, 177, 146, 221, 
           185, 120, 218, 182, 226, 151, 223, 187, 229, 40, 203, 167, 224, 
           136, 219, 183, 227, 109, 215, 179, 225, 148, 222, 186, 228, 84, 
           119, 66, 93, 41, 67, 42, 43, 44, 45, 46, 47, 48, 49, 68, 50}]}, 
         Annotation[#, "Charting`Private`Tag$1107106#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[{2024, 233, 231, 234, 2025}], 
          LineBox[{2028, 238, 232, 239, 2026}], 
          LineBox[CompressedData["
1:eJwl02WUVVUYgOE71NBItzJ0d4OCdMfQDUMLMkipIBJKh4DSjdKdSnd3SUlL
KDUzSCjlM4sfz33vXuc7e991zzohYeGhPYICgUAcHw+CA4EI3yNZa92f2uQh
edD7mSjX1ukA6pCXFASzgxE0pySZeGp+vX5DXfKRkrjsZCQtKEUI/5jfoAOp
R35ScZhJdKQi8djFKFpSmsycYCqfUY1n9tuo31KfApxlFuGk5gg/0olKXGIB
fYnPbkbTijJcYB69ycJJptGNWyynOlf4hUfR/63f8aXeZTXPrTfpIO4TyjUW
85iCnGM2f9OT26wggjQc5Sf+ojM3WcYTKnOZn3lIv+g6846uIgF7GENrbrCU
slxkPn3Iyimm050a/MFCvuKFPX/VwTSgEOeZwxek5RiT6UIVErKXsbThY7Lx
0l6/6RAaUph0JGIf42jLJ2TnX/ObdSiNKEJ6ErOf8bSjHDn4z/wW/Y7GFCUD
STjAD4RRnpycZgafU5NX7t+q39OE6yyhGL8zN/o504s/WUkkGTnOFLpSlQ84
yATa8ym5eO2MbTqMphTnQ5LyxrW3vCNgHUQMYhKL7QynGSX4iGQcYiIdqEBu
zjCT6Je/FldZxNfcYw1RxOZ/IumHyg==
           "]]}, Annotation[#, "Charting`Private`Tag$1107106#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVzGecDwQABuD/4SI7sufZm2xRRDbhyJ5HtjuzEFmZ2Ssze2fvvWfZeyt7
yw0S6unD8355f+8bEhYRGh4UCASCRSQHYwUC0+lBXUqQnShdNDG84jV/84Z/
eMs73vPv/4c2QcQiNnEI5gPiEo9DzKAn9ShJDj7kMDPpxdeUIifxOcIsvqU+
n5KLBBxlNt/RgNLk5iIrGMo3VCUhx/iF3jSkDHm4xK8Moy3VSMRvzKEPjfiM
vFxmJcNpR3US8ztz6UtjPicfV1jFCNpTgyQcZx7f04Sy5OcqqxlJB2qSlBPM
px9NKUcBPuIkC+hPM76gIMk4xUJ+oDnlKURyPiYFKUnFaRYxgBZU4BOusYZR
dOQrUnOGxQykJV9SmOus5Sc6UYs0nGUJg2jFXbYyiYr8wUbGEcEDdjCVItxg
HaN5wh46c5/tTKE2t9nMBJ6yl248ZCeR/Mxz9hNDWs6xlL8YzGN2E0UY99jG
SybzjH1EU4k/2cR4ulKUm6xnDF2oQzrOs4whtKYyxUhPBjKSicyEkIWsXGA5
P9KGKhTnFhsYSzih3GELE+nOI3YxjRcc4BXZ+A+PKogA
           "]]}, Annotation[#, "Charting`Private`Tag$1107106#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HccjWUYh/FjZoTI3qthK7vskJFsJZSQSEiUJHuU2bALLWUTDaMkZJZN
NOxNhVC2vvcf1+f+Xfd7n3Pe87zP8xZo36Np9ySJRKJf0kTiCvYnTyRa4Xiy
RGIkHkNR3Nbrhzswj3fHVfMH+FM4wUehIYohkSKReEM/FebzHrhm/iBvjZN8
NB5HTrOT9ApiPS+OJHr9eWos4NX5d3JdvBQzfLZcFvv4dd99SG6DU3wMKpn5
mtdAI56LT5YLoYW8Q92gX19eLzeNz8v71BL6SeUBcgc1jdpM3aYudK2GvFJ+
Xq0Xa6D+onZXe7peQp3Dn1PLqU+ou9Su6q/xv9XNvIvaUn1a/S3+m3rDfzks
t8Wz/LT5JuoWPlZ+SP5GronGPDefIhfGRt6Ab4j7RUmejA+U02IRr8m/l+vj
ZV6Sz5XL4zd+0+8fiXvCGT4ufh95zE3VuwebeCkk1xvE78QXvBdu+fxR/gzO
8rfRFKVjH7l2TL8d/uTvoBkeiD0Tzz3WHcfjv+Mv+V00x4NI4fcG66fDYt47
/h9O8Pb4W34PLVAGKc0P0U+PJfyVuGecjOeKc/J4tERes+/r3YvNvCzu0BvK
M+BL/ghfJTfAq7EGfJ5cAb/H/eGU3BHn5Ql42MxS/kjsA56PfyDfh5byTvWn
OGvyRrl5PPvYJ2o5/VTysPhO9a64rm5Xv3KtlvyD3Fl9LM6WulftofaJNVfn
805qRfVJdbf6ovqH643Un/gL6hPxzNTf1Z5qStdPxx6OteUX4jmqW/lEubK8
TK4V38vz82ny/fg53gV8U5y12Fs8NR8uZ8TXvDZfLTfEa7EH+AK5EvbH2uNM
3Dv+kSehFQqYm65XBFt4BaTRG8Ez4RveN9YNZ+OM4qI8GU+hYtwL/ox1wyV5
ClrHOyO+C2lxJ9IhPTLgLvwVZxaX5aloE+cRGfF3rCP+ld9H23j2yIRzcfbx
n/wBno71i99x32/q342l/HXcjfPxjHBFnoZnUCXuyfxb+pmxjPdDZlzg3XBV
no52qBr3b36kfhYs528gC/6JdxWuyTPwLKrFfzU/Sj8rVvD+yIqLsadwXf4Q
7VHQ7Ay9otjKq8c66Y3m2fAtH4BsuBTvNtyQP0IHFDL7oV4xbOM1Yo31xvDs
+I4PjHOvt5A/hAM8Oy7HHsVN+WN0RGFzH+kVx3ZeM56L3lieAyt5Hb5GfhyD
4h3BF8kP4yDPgX/jvYhb8iex7maW89pxFvg9/GO5BHbEOyGesd44nhPf80f5
WrkRBse7hH8hV8YhnhP/yb1wW/4UnXCvuU/0SmJnnO/YD3pv81xYxevyH+XG
GMLL8cVyFRzmuXBF7o0EZsZeMLNCrhPngd/HP5VLYVecxdhHeu/w3PiB1+Pr
5CYYysvzJXJVHOG5cVV+BUnwGe+M+83N5KWxO9Y89pzeuzwPVvNhcW71vuTV
cJTnwTX5VSTF57wLipj7jD+APbG2sSf13uN5sYYPR15c532QDLP4Cyhq9nP+
IH6J9Ys9qTee58NaPgL5cCPeRUiO2XEmzH0rP4pW8p44Z2pX14qps3gZ7I31
ir2pN4Hnx4/8TeTHTd4XKTCHv4j6KBDnKM5C7N/YW7EH4vnEOuKW+deREnN5
NzSIfep3JuoVwDr+FirqfcWr4xhvzH+Wn0S7eN/HvlaLuPY/TqMsBg==
           "]]}, Annotation[#, "Charting`Private`Tag$1107106#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfcTXUcB/BrRyQZ2aPIVijKXpUGishWimgYCWWvMhv2XsmKIpuyMsvK
zkhZLQrJHvX+/vF+/b6fz7nnPveec8/v9eRr2b5uuySJRKJz0kSiU4pEon6q
RGJPykTiJZKzRTeTrvp/5X48wB+6d2ig3yu/TAq26kbo0jNZrsos3bvyJXN/
CvKnrjMv6vfJLUnJd7qRuruZIldjtu49+bJ5AIVYIT/CBvMZxz8z52OBXI8N
5irsNHdxvKF5v/mV+E7mGqQyf2UtwTfm771ulDkDU+Xt1qeobl5nrcgxtsn7
rM9zmjnO62a9oj9kfT/ey/okv1BYXmktw1E2ynusdTjJ2bjG1vs4zELHd1qf
4QXzRmtVdpn3W+vS1TmNrAd0r8Z1Nz/OHeZF1gdZbd7mdaPN9zBNrsFcXXf5
qvkDivCXbpbufr6S6/OurrF80NyK1HFNdJ/TQ39NHkhR/o57RBP9j3Jr0rBD
Ny+uD00dO6R7jTvjO+rmx2eJ96MnzeIaONaGtOzSfRHH9NflQRTjnK4XzfVH
5Lak4wfdl3FMf0MeTHHO63rTIu6B/Dp3sVs3RpeR6fLjLIjXyjfNQyjBBd1s
XX4WyQ3oo3tJ/sn8BulZLD/EmrjHjo81Z+JT+QnWmyux3bzQ8T7mW+ahca/M
NePemVdZy8Z7s0nea32OU/zjvDnWAvHdWRzXyfosx3lR3mStxs/8IB+w1uNX
+jr/5fgt63+0vhnPnfWJeO7MS6wlWRvX01ornnHnjLNmZkbcV+vT8Rs3f2ut
zI54nryur/m2eRgP8bX8KJvNFx2fa36AJXLD2FN0LeOzmt8iQzxfuvG6LHwm
14zfta6f/J/5Q0ryr64/r8SzJrfjnnhOdIsZwKtxXXTtyRjXQreE9/mAgQxi
MEMYSivnnPDaDmTioG4pw2gdz62uI5njGuqW8SGvxT3SvU2W2A90y+Mz6hN8
pCvFJd1HtIk9RO7EvRzWrYjPrU/Cx7rSXNZ9TNu4h/I7ZOWIbmV8F31SPtE9
zBXdJ7yu+03uTDaO6lbF99YnY7juEa7qhvOG7vfYM8nOT7oJunuZKT8V9zOu
mZycEXIZrsW+z5u6P+Su5OCYbqIuK7Pkp/kmrrecgpFyWa7HviIXZKnciJG6
t+Q/Yy8iJz/rJumyMVt+htVx7+SUjJIfjb9hfowt5huxB5kLsUxuzChdO/mM
+T1ysVQuxTrzL45PNmdnjvwsa+L3IaditPxY/G1zObaab8Z+Zi7McrkJo3Xt
5bPmbuTmuG6KLgdz5Vqsjd9d7N+MkcvF3zOX5zvzrdgHzUVYITdljK6D/Je5
O3lYJpdmvfmE41PNOflcrs26+A3LqRkrl4+/ba7A9+bbsX+ai7JSbsZYXUf5
b3MP8nJSN02Xi3lyndjb4hmQ0zBOrsB/ugVyMVbJzRmne1s+Z+5JPk7pputy
M19+LvaVeEbkOxkvVyTBeH0n3XlzL+7jtO5TXR6+kJ9nQzwzclomyJVIwoT4
30V3wdyb+1kuP8y35t3W2vH8x7PmtTOsefnSsbpsjGdLTsdEuTJJmRj/0+j+
MfchP7/pNsVvNn5Pcd/jnsS1i+8bnzneny7Ou+j1fSnA77rN8Uzq72KSrgrJ
WCgX52tzCzabq7M79inrC/HMx77p/P8BFAZfZA==
           "]]}, Annotation[#, "Charting`Private`Tag$1107106#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 0.7812499840561224}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8647431796843224`*^9, 3.8647432624128447`*^9}, {
  3.864751691955924*^9, 3.864751721573445*^9}, {3.8649283805046372`*^9, 
  3.864928401330862*^9}, {3.8649286042048674`*^9, 3.864928608417497*^9}, {
  3.864928913009414*^9, 3.8649289744894147`*^9}, {3.8649290307051277`*^9, 
  3.8649290729283924`*^9}},
 CellLabel->
  "Out[1140]=",ExpressionUUID->"ad38dfe2-91fb-48b5-b182-f160c085130f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
VPVuC14p8Lrv4iQVnkdrK9BPpuOGbOd4HZ8Q9d0uJXPjd5awPbPWYO8cDfYf
HTXO2ZiLI35j7afZ3JEnMon3qW/wvlPl5ficvVBP4hFi/6Y9kpN0csEzTnV+
u0Uh9s9gt30vJEJxxHv1NpJx/q5shYj30O8t2MnefTxAhUd/TKxjzSl4e7K2
eoUh8f2jYjfkDa1BUWDtqx0/ifWZ48J32DcDR3x4QUSPr9GEVLivP0fzmxgN
xKIDGb+FXuPbx5jbYxNooB9MP36Y3xt/lTJ1Z8cyGrySPpP1t+AjPn9lb8FB
T6L+4lojxTt+C8oFHW47nyfa6lMOy4Zu4YqBBa58lTTwlFxUYw+OwxFfov76
upuz/75P9O/qkfTeF5aAeHNFwCon2QmOwvZKUmV5NA3UomaihASd8QyxYzrq
zsT47qUGH5k3Btr52rcCp4jxOsj/nbHFChdpV02PNSc+f5EN5RbW8Pvxxafr
5xnw5VzsKM9vUqGi7VZB/gDieXuUVFThcB3/3C8lNHKNuP78uMFE+k1AfIv6
h3gSv3Oi+BsPqRDxZHqNvygQ9dUs84+fUDJRXwxIZNr3/sJXecpU7FWlgsry
E1WLdl34ZPLgqHMTFZzmheeMPhfisi2nmzbdokGUlPrWgR8G4Cda9G62lQa3
Wk9YmJp9whGfWt3Q3eJJ7JeIT+Uva6u9ih/CEZ+2nZk4mnxvEkd8uv2kZuG4
BkfhdEqIT//d/60vxKuoLR+s0puxuw9kktMlOHzH8bdSTlwMAWI/UDl4OTCm
H9+Sfefo6SAqkLli8h6+acDFBI1HqOtpYMn7R8XmQyxuJ9jyhhlM7BfG9j5j
no/w+YiP08Kb6XB7sudjUGsJXlLepZwfQYfK6rqPa/OpOOLZv5JZilLTozji
2cHo8FKNTQs4hzMuErT9f/1FfIvaAtuVnh1+TIWfvC3col9acD9Gwh+ZCSr8
0JKLbJhPx9WseOU8bGiwrURU5Ur4Y1C8J3eZd4YGdzYfXnwkn4MjHka/t+vy
4/FL6VR4tyLymdX5Crz4vPRv30PE/HtnOnMIu+Mx2eEL97/QoHsqX4zdIQRH
/Jygabkwp8tWiPgZ/V7JOSVTdQbxe6NPpfjP5uBlO8VcGvWJ8XnpPXt8kqjf
i58+IQ3RoNVCUPhCbTqOePvm08fnv14hFU6m1Bln76KBkEIpV0BTML5Kn3Lh
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
GcX/ruZfQPwztZM5/mbZL0D8c+zg8ZROh0FA/FMwsqGlv54GiH9271Z/NC/W
BYh/bhxu3JxZ1wyIf667PFr1cr4OEP9sKJY5xNAtB8Q/98gXeZfcigHxj/hq
Xfpy0wJA/LPv/OU1n3fmAuIf50kvC+4GCiD+ObWxMi3ak8Lin+GvX0i6dhQW
/3yV2shdEJLN4p8IuW0u5mxZLP7x23mSe6grhcU/rbpnTE5KhLP4h8e4z+yC
iT+LfzjeDbrlevmz+Gfs5j2pvQn+LP5Za31Sm1Tmz+IfSPQQqxz0Z/GP8bOt
q+u4A1j8E/dVN+rF7gAW/zCu44N+FwNY/GO56b70S9MAFv8oCnhH3QkNYPFP
h1GVpfHTGdi28OXtglwIFKuExHPtmgKPuvz+G6px8H0F/Y/KKyZwTwmNcB78
BC92O+VNf5+AW5+Sl0Ql0mDFrr+jr9cxgc3R7MAoZEHZvcsV17dNgtX49TXf
NXLg3DHdPfcnp8CFU4y5O6QA6Kaa0dLOszDJV6QQbFgKkS9PXAgJYscC9Ko0
6u6Wg51FnGU5hQOz9a6xkNCrBNKCa993fxKmxKFFCzOthvaQoZk/MySMrfJZ
nIh9LbzMlXoaRidhnHfCDere1EPwtrsxu0+TsKAdeeuz6xvg4fGoUCE5Diy0
2Cx6bXMjaMhp7ThfxcbKDz8ZvC2mTtSJiN/Op1vEnpLsA8RvuxJIp/Vq2wDx
m9Xysv2xE42A+E3S7WnCrZ4qQPwGcQ8Si7JLAPGbsHVtXk1cIaD8ALzO7b9K
7BMoP9D4ucO+9kIOoPzAVIA6LHtNAZQfeFFu4MbpTQGUH7h0sz3d4BAFUH5A
e0vNWo7AL4D48GreK+679eksPlxYfBVjppLA4sNkT7W5tPv+gPIDX4dOOV21
92fxorL18bUnXANYvPijbPnheztmgf67554NMxA2HHYveJU8BRIjM5OfbsXA
yTS+NHE6E3aclrmpeioRNq89LLNlaQL6fje7JW5OBTfbtPAd4xOwS+VhwPPT
mVDQKaGmVMOEdf1Dp9XOU+D1m3b+PMMpuLtC/Nprr3wQ2MLeQm6egcLMBwer
hktgE6+R2C+MHXsiKEpz7C8DzWiHA/XWHJhwlTn9PLUCTDeJ78t4QMLyXvzJ
LR6rgl3Z85+2/iJh0r1a+tkTNRBezb9CnUnCrjnIfKWvrQfPCP2to1YkLO7W
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{221, 227, 220, 2111, 223}}], 
           PolygonBox[CompressedData["
1:eJwl0DsvA2AYBeCvJte1GEutLiODhmq7ao01IDGIpK6ry1iDDgYRWyfU6jIy
MBhEupkkIhT9C0WfxPDkvDk50xtbWMkVWkIIEfK88sI7E60hTPLhrnFitEqS
GG009J+cuteYoo92fvQXcotpBonypT+T66Top4Nf/aXcJssQ3XzrK3KDNHE6
uaFInlH+7K7kDjmG6eGOfeYYp253LjfJMMADByzSxS17zDLGE0csR/6fdc0u
M4zwyCFL9HJPiXmeKZOgyjFvNAFIRi62
            "]], 
           PolygonBox[CompressedData["
1:eJwNzK0zwwEYwPHfNvKwhrlb8rLmLQlELyvONom7CXML0zDNW1ogcII7wlYx
bV6SQOAW3BFIFInxH/iEz32f8DxPIrcyWwwHQRBikZjhU9+1Sog6m8zxyimD
NDiiQCf37JFjnGeOKfLt55muMkkvjxyQJ8odZRYYI8wVW6QZoosfv851jSn6
aCPCNdtkGKabpv0LXWeaftpp4YYdsowQ59d+TUvMMEAHrdyyyzyj9PDAPktM
8Of+UjdI8cIJSZ445INl3qjwxT9coC6T
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{221, 222, 228, 2115, 2112, 224}}], 
           
           PolygonBox[{{225, 226, 364, 482, 409, 464, 315, 485, 416, 471, 349,
             479, 394, 449, 270, 486, 418, 473, 358, 480, 403, 458, 294, 484, 
            413, 468, 328, 478, 373, 428, 236, 421, 476, 
            365}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 185, 151, 119, 91, 67, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 186, 152, 120, 92, 
           68, 52, 23, 187, 153, 121, 93, 69, 53, 24, 188, 154, 122, 94, 70, 
           54, 25, 189, 155, 123, 95, 71, 55, 201, 167, 135, 107, 83, 26, 190,
            156, 124, 96, 72, 56, 202, 168, 136, 108, 84, 27, 191, 157, 125, 
           97, 73, 57, 203, 169, 137, 109, 85, 28, 192, 158, 126, 98, 74, 58, 
           204, 170, 138, 110, 86, 29, 193, 159, 127, 99, 75, 59, 205, 171, 
           139, 111, 87, 30, 194, 160, 128, 100, 76, 60, 31, 195, 161, 129, 
           101, 77, 61, 32, 33, 34, 35, 36, 37, 196, 162, 130, 102, 78, 62, 
           38, 197, 163, 131, 103, 79, 63, 206, 172, 140, 112, 88, 39, 198, 
           164, 132, 104, 80, 209, 175, 143, 115, 64, 207, 173, 141, 113, 214,
            180, 148, 89, 211, 177, 145, 117, 215, 181, 149, 40, 199, 165, 
           133, 217, 183, 105, 213, 179, 147, 81, 210, 176, 144, 116, 65, 41, 
           42, 43, 44, 45, 46, 47, 48, 49, 200, 166, 134, 106, 82, 66, 208, 
           174, 142, 114, 90, 212, 178, 146, 118, 216, 182, 150, 218, 184, 
           219, 50}]}, Annotation[#, "Charting`Private`Tag$1107217#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[{2111, 223, 221, 224, 2112}], 
          LineBox[{2115, 228, 222, 229, 2113}], 
          LineBox[CompressedData["
1:eJwl02WUF2UUB+D/ErKUIN2wSEh3SAkrDRJLSy8dsjTSKiUdAlLSSIcCKo3S
KN0gDbuApHTz7OHDM7937ty57zkTIeERYV2CAoHABw6hwYFApHUUi5135XNC
iMsr9Rssse5GeTITj9fq6+RAapGXFNxUXyq7U4GPic8b9fVyELXJR0puqS+T
PahIFhKwje9pzKe81febHEwY+UnFTsbSgjL8p2+57EklsrKPSbQhIdsZSRNK
cIhpdIp+MPzON9ShAAeYSgdSs4txtOQ08/iMI8zgKpeN+kr+yyJuO18he3GB
yhznJ66Rjf38wCXacob5RPIhfzKKizTlFHO5TkkOM50rdI5Oe56TCwniD76l
LieZQ0EO8iMdScNuxhNOWY4yk+gP546ZK2VvqpCdv5lMOxLxF6NpRilisIHv
qEch0nLXrFWyD1X5hMTEZCNDqE9h0nFP/2r5NdXIwUfEYhNDaUAR0nNf/xrZ
l+rkJAmx2cwwGlKUDOxhAq0oxwP3/yL78QUnmE0u/mFK9HumPWdZQBRJ2cEY
mlM66P3/toXhNKIYGfnfHr/K/tQgN8mIw0PXHvGYJzzlGc95wVo9A6hJHpIT
zFZG8CXFycReJtKaUI4xiwjO8zM3eGnuO2eNhuY=
           "]]}, Annotation[#, "Charting`Private`Tag$1107217#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNzHdXzgEABeDfm5EtKzMadvZeGRllE7KTbNEre2WTkU1C9t7ZPoavkb2J
wvPHc+49555z47LCaTmhIAheU6qcjQiCzcxhGB1pzhvbW97xng985BOf+cJX
vvGdH/zkF2X85g/lVPCXc363MJdkEmnBP9t5uZUMhtOJGAKKyWMeI+hMS0Jc
YBuZjKQLrbjNAbKZRH8iuMh25jOKrsRyh4OsYDIDqMQldpBFCt2I4y6HWEka
A6nMZXaygFS6E889CshhCoOowhV2sZDR9CCB+xwmzFSSqMpVdrOIMfSkNZFc
Yw+LGUsv2lCN6tSgJrWoTR2us5cljKM3bXnAEVYxjcHU5Qb7WMp4+lDCcdYw
g3Y85Ci5pPOcQjYyhCecZB2ziOIm+SxjAs84zQb68pgTrGUm7alHfRrQkEZE
05gmNOUW+1nORPrRgUccYzXTGcpTTrGe2bzgDJt4SRGvaMZ/H/9cdQ==
           "]]}, Annotation[#, "Charting`Private`Tag$1107217#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nfcllMcx/G7JUWbkoqS9lRRFGlpR8OKpNLee8uI9qRFKtGShhUNLU2K
9t4L7USUhvfv5Y/P6zvOua77ua/rnPPcuZp2rNchSSKRWJs0kViMVckTidyY
mSyRqIE0OKM/rquCDXI7FMMS/Wrdg5gl10RanNWf0D2FjXJ7FMdS/Q+6PJgt
10I63JRfxXF+EM6Zd1Kuih/lDsiXIpEYIt+Jh+T0chf+L34SlrlmjZwXc+Ta
yGHOADkp0su3aBOc4Ksam8MP5h/i3+Mz4zn+O3re/U7Ramiq+8m8SnSG3JHP
zw/lW9E0tB79mvagJYxnoF3l5vRKPBs6T+5CP5DLhMrtaQ7akC6jfej3Pnst
nw+N5c/Mf4JOk+vw9/Fv8MnwNP8FzaBP8E35k/wQlJDfl7Pggnv+Sqtjk7FO
KGB8mJwWJeWMcjf+b/5DLHfNOjk/5spPxxwkMa+Z7hQ/FBfN+02ugc1yZ5TC
Cv16XQF8Lj+DTLikX4kN+oKYp6uLu/BHrMFYV7FWsNF4Icw3Vg9347L+d11N
/Cx3wcNYo/9RVxgL5PrIjD/1p3W18IvcFY8k+3/N/6QrgoVyA2RBUt/vNd2v
/DD8Zd4ZuTa2yN1Q0JzhcjqUju8ld+f/4SdjnWs2yUXxhfws7jfnTTk57pGT
yc353/hq8Z754XxJflzMwfP8YnrF/c7G+8dWcyrrZ/Ld+UL8CL41TU/r029o
T1omnivtIbegV2Pf0flyV/qR/Cj9UO5A76MvxRqkfel6n7uZLxZ7VP7S/PL0
49grfE7+LT4FnolxmlWfnG/B/86PiPUgj4+xWF/ueS7WLrYZ64HCxkfGOsaj
8Z7lnvw1fgo2uOZnuTi+kp/HvUhhXkvdaX4k/jHvfPwt2C73xGPYqP8lzg58
Lb+AbLgaawZb9CXwje5FZMe1WB/xHuMZxOfHPWIutgaxb7DI3IZx3uBf/bZA
Xwrf6l6KPYvr+u2B/mF8p3s51gVu6C/o6mKH3AtlsUO/Q/cIFsuN4pnHmam/
GOcOdsq9UQ479TtjTWKJ/ApyxdmnvxRrA7vkPngcu/S7dGWwVG6MB+Isib2o
a4DdfN84g7Db/N3xjrBMfhW5cZv30Ep3hh8VZ0TsU/lZ7OH7xbrBHtfv0T2G
7+UmeBApXd9ad5YfHXsw9m2sMezl++PJ2M/m9dL9y0/FXvfbK5fFcrlpfF9z
3pZvQx75drkNf44fE/su9nTsLezjX0cRc0bJGVEhzgG5N3+dnxZrSJ4s3x/X
+Mx9tBxWxN9lbDrfLJ4dP5BPibxyKrktf56vzs/lx8Z5xU/g78UL/JI4F/RX
ImM/X0U/ix/AF+VH821opngvdBHtRSsav4f2kVvSG3JtukDuFns11lLsdbkj
zUlfpstpP7rf99nPP44m8krzK9BP5Nfi/fLv8Lcjn5xabhdj9IJcg34ud47/
o3G20olyO5qNvkiX0t40hfG/o4vnJR+Qn6Kz5U7xf00uRsfIbeldsYbot7SS
sax8X/4mX4dfyE+Ptc9P4XOhEb+CHvC9DtAnsMqcivpP+eax5vh3+VTIL98h
t+cv8u+jtDxJzh7rKM4V2hAH+TdR3PhY+W5UjrNI7sff4j/BQZ99UC6P1XIL
5DFnkJwaBeQ75Q78JX5c7IE4j+L8xSH+rVgDcU6Z11+XwKfyIfc+xD+JH+SW
KIg05nXU/cGPj3UfZ1i8axzm345njcOuPxzrHGvkViiEtK7vpLvMT4i1G+dZ
PE8c4QeiKo64/oiuItbKrZHXtYPlO+IM47+i3WlhY+loZ/lPfmKsnzgL5Vdw
lH8H1XDUfY/Ge8Y6uU3sy3g3OBa/QeN3Zfw2jN9m8XsmfnfEbwEci/eA9ea2
jf0Szxc3dI1xjH839iCy+3te1yXBjDgH5an8A/E3xfqn/elp9/0PLTxnVQ==

           "]]}, Annotation[#, "Charting`Private`Tag$1107217#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1ncc1VMcxvFbNKQhKpFSQkYiGkaSyMjODkUhszKytWU07Ghr22kQLQrt
pUULZY+olFDh/fzxeX2f5znn3Psb53zvrdGmQ4v2RQqFwsyihULnYoVC9xKF
wvfFC4XbUQ7LZO9glLwk+srqYpusC3rIfuDvwD5YLvtQVhOv8udjvGw0vxf6
8cdju6wresp+5O9EeayQfSQ7FK/xF2CCbAxfCk/zJ+BH+nx8Rv9p/DO6Pqbw
rZLRLfEV3c34Y/RPdHvspm/AvvSXalPMoVeaN5M+DK/zJUp6DvSF9Gb1MtSW
reYrqQ/xJ6sTrRtL743q/DPG91Db8XXVevxP9AU4gl/G76vexzdUd1i/jG6Q
++anGi+tduRb0zvUa/A1fYD8Ubq7Nb3Un2Ud8C/dBvvRX6lnYC69yrxZ9OF4
g78Ik2Sv8qXxLF8ff8mW53owjb8ePWSP87/QHVEBn8vexWvyMnhO1gB/513i
Cdmv/F2oiC9k7+X540ljm2R35/lhtWxy7iPfk7V4ypzfjN2D/bFG9j5el5fF
87KG+Cefh96y3/l7URlrZR/gDXk5vCA7ETvz2egj28x3yrPEOtnHslp4k78Y
U2Rv8vvgRf4k7JKt4E/EdP4G9Jb15bfQ9+FAfM2fiXn0euOf5J3jLb6kd3cH
fQm9Rb0ca+ip5r1Fl0d/fk/zbsneon/O/sORsuX8fur9uQ51t3Ur6ZOyZ/kZ
xsuod/H11DZ5r/S1qMNvyDWqnflGah/r+9Fb5dXyuep/fFscx1fhN9DNMD/n
W3Yv/aV1n+aa8LZ8L/mddAt6q3oF1tLTzHs75wwv8afgF/oirMieNb4q94kP
+bboK3ua/4N+AAdlP8tmy47COP5STJeNy37Hy3yjXHvuB8/ItvEPomreiWxG
PhfPGtsueyj3nPtLv8qajOE5PI8X8CL6J7PmT3MfxsHYmB6FlzLX2A7ZI6iO
b9JD8HI+w9hfskdRA9/mLKafyitggOxUFDAg3yf7m+6MQ/Bd9ibGyytioKwx
imBgrk32D90FNfF99hsmyCthkOw0FMWgXK9sJ90Vh+KHvEdMlO+PwbIm6V0Y
nHuQ7Ur/xGHpubI5sqPxDn8ZZssm8ZUxhD89+xdD5ANku+nuODw9UDY3PRTj
+csxJ/2EPwBD+aYolj7Dn4KP6Bsx1LyB/L/pS6iV98CfhQU5J8bn0cdgAn8F
5qb38AdiGH8GfqUvxkq6ePpTzgJm0jelj9HXYSM9zPpB9H90z7wn+/zGnOe8
Z/VsLMyeNm9+zhgm8qXMa09fSf+RinXpZ/KH0xvS99QqqCF7Jfes3preQW9K
j8h+l63iK6gP5JyrJfjV9Knp6fwsvqx6N19fvTm9kW6FY/lv+Cpql6zJd/nu
wXQBB/OPZT+pN+U8Z4+q52BRnpW5C/I5qGnOJNneagf+BPUqfht9VZ47v56v
rD6Sd6fOT++mD8Ih/PA8c/U2/ni1Gf9b+kb2FP85X1F9kC9Jr1Ebo5bsY76c
eg/fjt6ptsa36RHyrvRw3zdELYJe2fd5HnmOOUvquVic52vewvQ4vMtfje30
1elt9IL8htBVMYI/C7/Tl+KL9DuspU/DJ/QtGGHNUL4oHuePznmkm2NJ7tP4
Irou3uNbYqFsCl8NI/mzs3ewjm+CT+lbMdK8YfweeIKvneuRLc5zxGT+GiyS
Tc17xSj+nLwvjJK/ItsTT/LHYLNsSd4j3uevxWLZNL46RvPnojRGy4fLiuEp
vk56B30eltLlPedOdAN1i7lL6Xr4wNh1WCKbnr2OMXxzlMEY+QhZcfTmj8XW
rM//qfxHyf+M/Pbn9zy/yfmdzG8KRlpTAn2sOS7nLP8B0+ez1zBWdl7OBtbz
p2M2fRt20dfjO7qqa+6WfaaOs/5//Rt7Zg==
           "]]}, Annotation[#, "Charting`Private`Tag$1107217#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 0.7812499840561224}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8647431796843224`*^9, 3.8647432624128447`*^9}, {
  3.864751691955924*^9, 3.864751721573445*^9}, {3.8649283805046372`*^9, 
  3.864928401330862*^9}, {3.8649286042048674`*^9, 3.864928608417497*^9}, {
  3.864928913009414*^9, 3.8649289744894147`*^9}, {3.8649290307051277`*^9, 
  3.8649290730513525`*^9}},
 CellLabel->
  "Out[1141]=",ExpressionUUID->"c26e64bc-7152-461c-8f6e-2b6ac6b31293"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
XAFFo/ku+pVM2OYVAY0B3yrIVozdIxhOwh5S8oW2BtbA8fbnyazEfGdd9Dtx
LqoO9um81jvRQcL+3jx943LBD2DcvvF+yDESvb8K3i1d3Le/HZB+ffXmD4b3
dxoB6dcrTBftX3ZUQU5n9RMl0T5gXW+ZHthbAijPeLtik+/67zigPONMJako
9XABoDxj/c895Tqb8wDlGccmBfmfGJIB5RlPzkgKP9QiA8oz6hxzWDw+mwso
z3g99ojYjeM5gPTzxvWGt2RkMuj6+XLRt/HPcXGA8oxZi6v+tw186Xq6y0tJ
VVKHK/FeMDne3vEB9DXPqGoTPMQr9muZEU8EfndNHomFaXB7v35I4V46cLyX
iElZmoaevuT8SM9suL+l84MEwVtZUlXlTExVUGqnMsJrRsL6Da+wnNlaAxNS
8kxqv0nYoIbRXBNPHdyOIxdZE+PzdrXJ2hI/gKaMFQbokzBlfNjo9d8+cEhZ
KjIoKAKFTGNxlcV+CFCSOPOBVAgob1nDyGr9xSQPUN5S5Z7GOjknoj75L2/J
cFVFtJxY7yhv2W336GO5IBkieXdcHHw6AEkZHJzH6nNAePjMHy0SDYoGTr5o
d82k+wkvTk/KY7KJdD+B+538TokMX1j+NLXhSNMnUNFuWv9FYQYob0qE7sV+
gbjno31NfdNgtau47axLJoh7X3S5f5OoN3CX0eJN1RAatXzW8hsJm9MQuj6+
oRY8T99nkife309Fk83jBevh/hdj88P5JExmw9ebrtIUmNrsPJRolQ8oD7o+
VYOxppYMKA9aYua76dY94v7+y4Oq+/fdnLxJBtmO4cngiwPQQBIX2JaSCwLW
G+4/LR2Am58DYzSssun+B3UtYeKOtisIq9ulJ5Z9hh7zKetVthnAzkce5uxI
A/mBddGZf6bhbdIrK6XmapAyCLXMHSRhLrq3Ot831cKO9VyH8WliPrdYCno9
pAC23yvkTkweoLzp7Vs3L035kgHlTc9hMpPRxHygvKnoaMwjoTNkWC3vOrts
MwAyl/Gl4k25dD9GbdxzeMOAP9TnbH7T0hwHe15Pt+/Tn4G/X6/2syWlgM3h
M6HulGk4WXBj19p0BnSxTO7RPDMD5/t+8KvWVkHt6e0Sl1NIWPo7q6+r9TXw
Z5eyJA/BX7xnIlSsaHUQQ4pik6smYdMQ+Tb8MwX6fXOE/o2TAeVdFY/u+KP9
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
YusQjlY4FtNL/pz2sQyu/x/Szy19
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{228, 234, 227, 2125, 230}}], 
           PolygonBox[CompressedData["
1:eJwNzLkvA2Acx+GXOLq6VnR0rY6xBgatNp0ciaE1MKiISFArNerA0EHEZhDK
6hgZGDqI2DqQSIQ6/gHP8OTzJr9v3mhmOZ2rDyHUMcc7b3ySjISQ4su7xpnR
OhP00EID327nukGcXlpp5Iptphikkx/7sm6SoI82mrhmh2mG6OLX/kLzTNJP
O3fskSVGMzcUmGGYbh7YZ4Ex/vx3qVskGaBCiSU6uKfIPKM8c8QqEW7ZZZYR
njhkhSiPHLBIlRPGeeGYD9Z45ZR/oDsvqA==
            "]], 
           PolygonBox[CompressedData["
1:eJwl0TlIF1AcwPG/NpmlbZbZ4JG5lamLRzooZJtnS2k6JKikiOjmvXiDBioY
IooNRluWtpRHQ0IJioOig+FgDbWU5v0Bhw/fB+/33htedHlN/ovgQCAQxACX
LH7pHuPWP6nnB28I4ROdPGGb16Syzhh1xPCNISp5yAYTNPDX/e+0iTzussoo
NUTwlUGek81lPtPFU9KI5Z+7ZrSZfO5xnVDm6aaEdOLYN/9eWyggkRtcYYEe
SsngNgfmP2grhdwnkqss0sszHhDPd4apIpf/zs9qG0VsMUUSa7xij1p2mOY3
N1nmJRXkEMYSfZSRyR0OvTGn7RSTTBThHNk75oRTzgIXHx5EMB/p4DEp3OIa
X+innCwSWGGEah6xySSN7PKWP5wDGdJLmA==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{228, 229, 236, 2129, 2126, 231}}], 
           
           PolygonBox[{{232, 233, 472, 323, 493, 424, 479, 357, 487, 402, 457,
             278, 494, 426, 481, 366, 488, 411, 466, 302, 492, 421, 476, 336, 
            486, 381, 436, 
            244}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 190, 154, 121, 92, 67, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 191, 155, 122, 93, 
           68, 52, 23, 192, 156, 123, 94, 69, 53, 24, 193, 157, 124, 95, 70, 
           54, 25, 194, 158, 125, 96, 71, 55, 206, 170, 137, 108, 83, 26, 195,
            159, 126, 97, 72, 56, 207, 171, 138, 109, 84, 27, 196, 160, 127, 
           98, 73, 57, 208, 172, 139, 110, 85, 28, 197, 161, 128, 99, 74, 58, 
           209, 173, 140, 111, 86, 29, 198, 162, 129, 100, 75, 59, 210, 174, 
           141, 112, 87, 30, 199, 163, 130, 101, 76, 60, 31, 200, 164, 131, 
           102, 77, 61, 32, 33, 34, 35, 36, 37, 201, 165, 132, 103, 78, 62, 
           38, 202, 166, 133, 104, 79, 63, 211, 175, 142, 113, 88, 39, 203, 
           167, 134, 105, 80, 215, 179, 146, 117, 64, 212, 176, 143, 114, 220,
            184, 151, 89, 217, 181, 148, 119, 221, 185, 152, 40, 204, 168, 
           135, 223, 187, 106, 219, 183, 150, 224, 188, 81, 216, 180, 147, 
           118, 65, 213, 177, 144, 115, 90, 41, 42, 43, 44, 45, 46, 47, 48, 
           49, 205, 169, 136, 107, 82, 66, 214, 178, 145, 116, 91, 218, 182, 
           149, 120, 222, 186, 153, 225, 189, 226, 50}]}, 
         Annotation[#, "Charting`Private`Tag$1107329#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[{2125, 230, 228, 231, 2126}], 
          LineBox[{2129, 236, 229, 237, 2127}], 
          LineBox[CompressedData["
1:eJwl0WWYF1UUB+D/kkt3SC+lpIRBd6cuIA26NIpLg3SD0t2N0tLdIV1KqrQo
vbuAdL778OGd3525Z86Z505IWHjo90GBQCCOyxfBgUCEdSSr3PekOrlIRiyi
7K2WP1CD3CQnNtsZSgM+IxMP1K+RvahJHlIEvZ+3g2E05HMy81D9WtmbWuQl
JQcZRwvKEpedDKcRRcjCMSbTlko80m+d7ENt8vE7M+hAKg4xnpaU4zzz6EIw
uxhBY4pyljl0IoTjTKEdV1lKZf5kAXfpxg1Wcss3/c966778F332XORn7pGf
P5gZXU/0T7rGMiJIzWEmcJNWXGEJ9ynPBW6bM1/eoSv/sIJ47OZHmnCZxRTj
HHPpTFZOMJX2VOEvFtKdx/pvkP34ko85zSzCScMRJtKaCsRnDz/RlOJk44le
G2V/QilAWhKwl5E0owTZeap+kxxAHQryAQnZxyiaU5IcPFO/WQ6kLoVIRyL2
M5qvKUVOTjKNb6nKc+9vkYOoxyV+oTBnmB193nTkOsuJJD1HmUQbKpKY3xjD
N5TmQ16YsVUO5is+IQNJeGnvFa95w1sCngcRg20MoT6fkpGkHGAsYZThI04x
ne+oxt8sogf/8itRxOQdTgiHIg==
           "]]}, Annotation[#, "Charting`Private`Tag$1107329#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVzNVSUAEABNALdiHYASgIit3dLWWggh3YBbYodmGgYnd3d3d9gh8iigHW
8eHM7MzObkxmdlpWSBAEn/gsXAgNgk1MJ5F2NKJQ94WvFPGN7/zgJ8WU8Ivf
/OHv/2PbEEIpRWnKUJaLbGYGSbQnjnJcYgszSaYD8ZTnMluZRQodaUwFrpDH
bFLpRBPus48ljKEvFbnKNuYwlM4k8ID9LGUs/ajENbYzl2F0oSkPOcAyxtGf
ylxnB/MYTlea8YiDLGc8A6jCDXYynxF0ozmPOcQKJjCQMG6SzwLS6E4LqnKL
XWQxkh60JJwIqlGdGtSkFrfZTTaj6EkrnnCYHCYyiNrcYQ8LGU0vnnOMXKbQ
mqccYSWTeMNp1jOYl5xgDZm85QwbqMNdCljEe86RzmtOsY7evOA4q5lKG+pS
j/pEEkU0DWhIDPfYy2Iy6ENbnnGUVUxmCK84yVqm8Y6zbOQD5/lILP8A1zVe
2w==
           "]]}, Annotation[#, "Charting`Private`Tag$1107329#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1mW4VVUUheFDC0orjYSkokiDojSIIG0hICKd0t2NkooKWKRgEyJKiNKh
dJg00qiUSvnOH98zxphr7nPu3nuteU++Vt0adU2SSCQ2JE0kNuKH5InEw1ia
LJF4Fjnwj/pFtUbYJ/dHRWxS/1GtBJbJzyEn/lX/U60x9ssD8Bg2q+9QK4kv
5eeRC2lSJBJd1P7k38B/+v6Sm+CAPBCl9LwpZ8fjcZ08lE+KBfIW1+zkS2G5
3BRF9bwmp0du+U65K/8X35hfzk+Pv43/gL8PrfgN9LrP+5s+jS5qB/XVp0vk
QXxp/i2+N81BW9Dv6ChayXpuOkzuTpPRZ+k3dCj90Hr1UHkAvZ+2pVvoWLrV
d+/iS6Oj/JX+J+mn8gv8/fxEPgPule+Su/F/82/icXm2XAA3fNYl+gx+sjYY
Zay/LedEZfleeTifHAvlba7ZzZfBCrkZ8iCtvlfULvFv4aa+y3Fv+FkegirY
rr5HrSy+lpsjL27F/sJe9XL4Rq0F8uF27KXYH/Eesc96eay09iLyI4Eras/h
F34oqmKX/v1qFbBKbon7kARX1Z7Hr/wwVMNu/QfUHsFq+SUUQDr3113tMv82
kuKa3BS/8cNRVs8MOReqx3ORR/ApsEje47MP8o9ijdwKD+iZJGdEQTm93IO/
wjeJ98vP4Cvxc6IHL/MbabI4f/He0VXtd7kBXSqP4MvxM/k+NDd9kX5PR9Ma
8dzpSLkHTRnPjq6kw+hH1mvQhfJA+gBtF/uPjqN73ctPfEV0kr/VX4d+Fn8f
X4yfzGeKv49fQwupZ+B78lf5magsz4212GMxH2gzHOJHorz1WbGXUTP2gzyK
T4WP5X3+jp/5x7BWbo3CyKivl9o1fhZSxOyQm+MwPwq1sN/1v8TcwHdyGxRB
Shyw9qt6JXwvt425gVQ4GPcf3x3XRx9+w++hcXawTl+7OJO4A4diXb0K1svt
4/0jNQ5bO6ReFRvkDvEMY/7heswQHOFH4wkc0X9YrRo2yh3xYMwx3Ih3jaP8
GNTGUf1HYl9ik9wJD8V8iLOq1hLH+LExT3BM/1G1Gtgsd0bxOOdxVtVewnF+
XLx3HNd/LN4Rtshd8DAyeQ+91f7h34lzFOc5ZilO8ONRFydcf1ytFrbKXVEC
mV3fR+1f/t04H3HW1V5WO8lPwFMxA9RGq92BT+STPu8E/wS2yd3i+eiZImdG
SfluuS//H/9e7M2YC2qt1f7gX0UF+R05D+rF7JDH8KnxqVxTXsQXi2t850la
G9vjvqx9zr8Sz5qfyt+NUvI9cj/+Ov80v4J/n6/Cz+MLozW/KWZDzBu+DX+K
b8gv41/jH+Hf5fvSvPEe6TpaP+YWP5bvSdPErKOr6PA4p7H/45zLg+iDtD3d
RsfTU+7lD/5JdJZ/iOdMv5AHxyyM/UCnyb3oPXFuYw7E7KGlrWeh/eP+6Q35
Gfq1PCT+p8pV6Xy5Py1C29DNdAzNZD0ZbSt3o6flRvRLeSL/KP8e34/mi/1I
19MG1gry4/g70ZRfTT+Pc8N/zD+E0+7vFK2DH63Vs7Y4ZmHsW/51PgvKyFnl
AfxNfjaqyQvkorGX5ORyO/4MPwkV5ffl/GgoF5LH83fhC/mM7z7N18UOuWfs
dT1vyFlRVs4mD+Rv8XNir8YMU2uvdpafHM8jZp3aBLW0WCyf9dln+KewU+6F
csiub5DabX5u7L+YcWod1M7xU9AY51x/NvY6dsm9UR459A5WS2BevNuYg2od
5fP8VDTBedefi/2H3XIflNQ3Xc4W85dfS0fSCtZy0iFyEsyPZx2zUq2TfIGf
FucDF3zu+Xi/2CP3jb0fzwkX4zdl/C6M32XxmyZ+e+AKruJCvAfs1dsv9k48
D6T2PZ3VL/Kvx/5EEbVX1dJhScxO+RO+ODrw2+kEes3n/g9oFmR9
           "]]}, Annotation[#, "Charting`Private`Tag$1107329#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nf8V2MYxvFvO9mUaEiEJCpbIZSRkYQKWSGzZCWKMouGIk1CaO/MpIkG
KirtIbNspYXyvv74vO7rus5zfud8n3H/TtVW9zRtW6RQKMwqWih0L1Eo9C5V
KGwuWSh0QCWsk32ESfJyGCQ7C0XQQ95HtoV+GJWxXvaFrDbe4a/GNNlk/iAM
5uujKHrKX5D9TT+CQ/GNbIGsDt7lr8F02dt8ebzMn42t9NVYSxfLe9LnYg59
F4qXLhRu43+he7n/RXor3RF7utaWr0L/ol6GJfQG4xbSJ+A9vpxxHehr6V3q
TThd9gN/pNqNv1Cd4b536INRi3/F9f3VB/j66jn8NvoanMyv46uqT/HnqcUz
b3SDPJufy1dQH+XvpkvQt9O/0tXp7vTzntlX3SbrhL3k9/CH0b+qTbCU/ta4
RfSJeJ9viZmyd/lDMIQ/N8/I3PMNMY9ug97GvcRvpx/NO+M72Sy8J6+AV2UN
UBJ95P1kO+jHcDi+l83OOqO/aztlnXEEfpB9nLXJb8mzMMCYf1zrgmr4UfYJ
3pdXxGuyhiiFfvKBsn/px7Mm+En2KT6QV8LrsvNQGv3lg2T/0U/gKGyUfSk7
CR/w12GObApfGUP587FH9kfWC/Ppthhg3GB+F/0kjsZv/OX4mt7k+ldZc0zh
D7JGD9PX07vVVviRnmvch/SheIM/wLgH6Qvo7dl/OEW2PnOqPs2fr5bJ+kZn
ffnP+IrqYzkL2Q9ZF/UOvp76G3+M2oO/SB3ouS/Tu+XHZT+qe6vtZGeq1fnf
6aZYlvMpe5z+2X2L8074UF5e/gh9A12gb6Z/oucZNzXnDG/yF2IH3RLf5Bxm
P+V34nO6HQa55xW+gKfzvjmjsiX8qZjK34j56UvZ73iLb5QzgMHyIbIieIav
kfMg+yy/Fa/Ki6Kr/Nisl+zzPDP35Tpew+sYijfijS+GbsbXzJykx+HNjJMX
x7OZQ/yR/oW3cr+8BJ6TH48/018wTVYVw2QXZc4xLM+SlUR3vhb+ytnFdNnh
GC67GPtgeJ4vK4UefG1szl7GDNkRGCG7BPtiRN5JVho9+TrYkv2JmbJqGCm7
FPthpHyYbA/04k/A37Kl/Gn4iL8Ji9MP+CMxim+c3odR8uGyMulV/InYKvs6
PRTT+FZYkv7AH4XR/GXZ/+kb6a34gr4Xo40bwe+J3vxJmWv6Ciynt7m+jK6L
6fzNWJr+wh+NMXwT7KSvwwb6wPQguhEW0Pelr9i/d/K/02PcP5LeC30y767d
m/OctVSvxIqcUeOW54xhBn+wcR3pW+gi9C30xvQb+tn0hvQ0tTrG5j3k7dM3
6H/SH7LXZd+mT6rP5IyoZdMPc3bTr/iFfCW1M99AvT99Tr2LP0P9I/tf7clf
rI713FH03jiefyF7Q72PP0s9JXuOvgor6SqyJ+gd7luRv4k6spmuHaJ24s9R
b+WLpmb+1U3phepzmVt1WXoyfQxq8+NcL6s+xJ+tNuX/Tf/I3uK/46upXfly
6el5fyyiK8u70A+kJ9N303/mLNO96HGeNVrdBy9mL2deMp85H2ozrMo+MG5l
+hxm8a1RzNjW6W/0ctfn0DUwnr8C/9E34vv0cmykL8GX9IMY754x/L7oy5+W
M0Y3x+qsreurMteYzd+GFbK5/LGYwF+ZfopN/KX4im6PCcaN5ffDS/zpmTPZ
ar4+PuZvx0rZPL4mJvJXZT9ionycbH/04+vm98jWZA3wCX8HVsnm88dhEt8s
a41J8vGyA9Cfr5d+QLfAGvowc/ck3VDdZeza7A186tqdWJ0enH2HyXxzVMBk
+QTZgRjAn4Hdea988+W7Kt8q+d7IN0D+r+d/c/5fYqJ7ymKge85EAWvTz2W1
8DbfAhXxM98Yi+mHUMZ7tuH/omvSz2ct1anu/x93l3iv
           "]]}, Annotation[#, "Charting`Private`Tag$1107329#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 0.7812499840561224}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8647431796843224`*^9, 3.8647432624128447`*^9}, {
  3.864751691955924*^9, 3.864751721573445*^9}, {3.8649283805046372`*^9, 
  3.864928401330862*^9}, {3.8649286042048674`*^9, 3.864928608417497*^9}, {
  3.864928913009414*^9, 3.8649289744894147`*^9}, {3.8649290307051277`*^9, 
  3.8649290733622513`*^9}},
 CellLabel->
  "Out[1142]=",ExpressionUUID->"e8ab4aa6-93de-40fa-93d4-7eef32bf3ef8"]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"be5d2567-85ed-447a-9628-cb1a0b7113d6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 254, 5, 51, "Text",ExpressionUUID->"224a2fd0-5a16-4642-88fc-61a70e68600f"],
Cell[CellGroupData[{
Cell[837, 29, 6446, 164, 444, "Input",ExpressionUUID->"a7c4ca20-0320-4220-83d7-a5fc3437d70b"],
Cell[7286, 195, 7555, 203, 176, "Output",ExpressionUUID->"c33e2f72-e4c3-43aa-9e20-1d77ae8deb92"],
Cell[14844, 400, 369, 7, 32, "Output",ExpressionUUID->"2aba5140-1801-4a6e-8946-d53f4b6ff6fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15250, 412, 178, 3, 28, "Input",ExpressionUUID->"0398a52c-b289-4835-ba74-41daec77e452"],
Cell[15431, 417, 207, 4, 32, "Output",ExpressionUUID->"749c82e3-64d6-4420-9efa-591d27603942"]
}, Open  ]],
Cell[15653, 424, 62230, 1534, 1813, "Code",ExpressionUUID->"c1f14a8d-6b3b-4fdb-865b-b5be5637e987"],
Cell[77886, 1960, 522, 9, 74, "Text",ExpressionUUID->"dc5bfc69-ba71-4c0a-a899-a16da01c8349"],
Cell[CellGroupData[{
Cell[78433, 1973, 10197, 291, 466, "Input",ExpressionUUID->"5e2d0932-2b2f-4ace-be1a-80112973358e"],
Cell[88633, 2266, 73263, 1299, 206, "Output",ExpressionUUID->"f24bd078-1d34-4561-a2f2-daed1e1ae669"],
Cell[161899, 3567, 79136, 1396, 208, "Output",ExpressionUUID->"1094c3e4-bc89-4c6e-a871-b48a02450482"],
Cell[241038, 4965, 84868, 1490, 206, "Output",ExpressionUUID->"cb6cb0be-b29a-4611-af72-41f499b6a961"]
}, Open  ]],
Cell[325921, 6458, 258, 5, 51, "Text",ExpressionUUID->"73fb2c33-247d-455d-a7d4-e35923108b5c"],
Cell[CellGroupData[{
Cell[326204, 6467, 7925, 222, 238, "Input",ExpressionUUID->"0bdf49aa-3cb3-4522-a441-0032566f22ad"],
Cell[334132, 6691, 415, 10, 28, "Message",ExpressionUUID->"5b0b2b5f-bb33-4a7c-9cef-68e69b993e57"],
Cell[334550, 6703, 774, 15, 28, "Message",ExpressionUUID->"50773996-5e87-411f-b740-ed1ba419d765"],
Cell[335327, 6720, 55666, 1016, 206, "Output",ExpressionUUID->"4e6777f6-df49-448b-8197-0e2c8d7fd043"],
Cell[390996, 7738, 55560, 1014, 208, "Output",ExpressionUUID->"76cee779-8a8e-4208-94d7-bd9dfa18cee2"],
Cell[446559, 8754, 62027, 1118, 206, "Output",ExpressionUUID->"74766db1-2a2e-4feb-8835-0e315472d9df"]
}, Open  ]],
Cell[508601, 9875, 257, 4, 51, "Text",ExpressionUUID->"30e7c68b-9250-4d9e-bf25-90bff9f1744c"],
Cell[CellGroupData[{
Cell[508883, 9883, 7812, 222, 238, "Input",ExpressionUUID->"8ee1208d-b3ac-419a-ab3d-c515866b0670"],
Cell[516698, 10107, 50966, 928, 206, "Output",ExpressionUUID->"ad38dfe2-91fb-48b5-b182-f160c085130f"],
Cell[567667, 11037, 54659, 989, 208, "Output",ExpressionUUID->"c26e64bc-7152-461c-8f6e-2b6ac6b31293"],
Cell[622329, 12028, 55334, 1001, 206, "Output",ExpressionUUID->"e8ab4aa6-93de-40fa-93d4-7eef32bf3ef8"]
}, Open  ]]
}
]
*)

