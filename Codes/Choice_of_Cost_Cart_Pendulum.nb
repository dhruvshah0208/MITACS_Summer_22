(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    783879,      14778]
NotebookOptionsPosition[    781026,      14730]
NotebookOutlinePosition[    781478,      14747]
CellTagsIndexPosition[    781435,      14744]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Computing the Adjoint Equations given a cost function symbolically\
\>", "Text",
 CellChangeTimes->{{3.8647382131648855`*^9, 3.864738228348024*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"224a2fd0-5a16-4642-88fc-61a70e68600f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Fix", " ", "Bugs", " ", "here"}], " ", "*)"}], "\n", 
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "u", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "20"}], ";", 
  RowBox[{"\[Tau]", "=", "15"}], ";", 
  RowBox[{"\[Tau]1", "=", " ", 
   RowBox[{"\[Tau]", "*", "1.25"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{"nDim", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]t", "=", 
   FractionBox["\[Tau]", "n"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xState", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fx", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x2", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A", "*", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", "+", " ", 
          RowBox[{"A", "*", 
           RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
           RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", "u"}], ")"}], 
        " ", "/", " ", 
        RowBox[{"(", 
         RowBox[{"1", " ", "-", " ", 
          RowBox[{"A", "*", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]1", "]"}], "^", "2"}]}]}], ")"}]}], 
       ",", "\[Theta]2", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], " ", "-", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", "*", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
             RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], " ", "+", " ", 
            RowBox[{"A", "*", 
             RowBox[{"Sin", "[", "\[Theta]1", "]"}], "*", 
             RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", "u"}], ")"}], 
          " ", "/", " ", 
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"A", "*", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]1", "]"}], "^", "2"}]}]}], 
           ")"}]}]}]}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "->", "x"}], ",", 
       RowBox[{"x2", "->", "xdot"}], ",", 
       RowBox[{"\[Theta]1", "->", "\[Theta]"}], ",", 
       RowBox[{"\[Theta]2", "->", "\[Theta]dot"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"u", "^", "2"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "Weight", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"xState", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{"xState", " ", "-", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
       ")"}]}]}]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Cost", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"eqn", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"fx", ",", "u"}], "]"}], ".", "\[Lambda]"}], " ", "+", " ", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", "u"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eqn", "==", "0"}], "}"}], ",", 
      RowBox[{"{", "u", "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", "u", "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"{", "u", "}"}], "/.", "sol"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]dot", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{
       RowBox[{"Grad", "[", 
        RowBox[{"fx", ",", "xState"}], "]"}], "\[Transpose]"}], ".", 
      "\[Lambda]"}]}], " ", "-", " ", 
    RowBox[{
     RowBox[{"Grad", "[", 
      RowBox[{"L", ",", "xState"}], "]"}], "\[Transpose]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fSymbolic", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Join", "[", 
    RowBox[{"fx", ",", "\[Lambda]dot"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dimensions", "[", "fSymbolic", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.861902342328802*^9, 3.8619023425067463`*^9}, {
   3.8619023760720234`*^9, 3.8619024181895714`*^9}, {3.8619024838915834`*^9, 
   3.86190250318342*^9}, {3.8619026675159273`*^9, 3.861902682122262*^9}, 
   3.8619028766101365`*^9, 3.861902937842575*^9, {3.8619029852474327`*^9, 
   3.861903011510045*^9}, {3.86190326064746*^9, 3.8619032656028795`*^9}, {
   3.864737722444943*^9, 3.864737934826968*^9}, {3.864738068759104*^9, 
   3.8647381126010714`*^9}, {3.864738149206354*^9, 3.8647381993453064`*^9}, {
   3.8647382530321245`*^9, 3.864738281367056*^9}, 3.864738385972575*^9, {
   3.864738419632804*^9, 3.8647384267365303`*^9}, {3.8647385308402095`*^9, 
   3.864738561920263*^9}, {3.8647386241073604`*^9, 3.864738625081049*^9}, {
   3.8647386619882374`*^9, 3.86473899869847*^9}, {3.864739043396165*^9, 
   3.8647392140865345`*^9}, {3.864739296574133*^9, 3.864739299028347*^9}, {
   3.8647395267484655`*^9, 3.8647395340431304`*^9}, {3.864739577945079*^9, 
   3.864739661032486*^9}, {3.864740184684888*^9, 3.8647402025441737`*^9}, {
   3.864740263603631*^9, 3.86474026379557*^9}, {3.8647407876239157`*^9, 
   3.864740835905461*^9}, {3.8647408676742954`*^9, 3.864740950202881*^9}, {
   3.864742069748563*^9, 3.864742075366767*^9}, {3.864742204489438*^9, 
   3.8647422253447638`*^9}, {3.8650129916749973`*^9, 
   3.86501299219983*^9}},ExpressionUUID->"a7c4ca20-0320-4220-83d7-\
a5fc3437d70b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xdot", ",", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"\[Lambda]2", "-", 
       RowBox[{"\[Lambda]4", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"A", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
     RowBox[{"A", " ", 
      SuperscriptBox["\[Theta]dot", "2"], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"A", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
    RowBox[{"1", "-", 
     RowBox[{"A", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", "\[Theta]dot", 
   ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Lambda]2", "-", 
          RowBox[{"\[Lambda]4", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"A", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
        RowBox[{"A", " ", 
         SuperscriptBox["\[Theta]dot", "2"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"A", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
     RowBox[{"1", "-", 
      RowBox[{"A", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ",", 
   RowBox[{
    RowBox[{"-", "Weight"}], " ", "x"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "Weight"}], " ", "xdot"}], "-", "\[Lambda]1"}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Pi]"}], " ", "Weight"}], "+", 
      RowBox[{"Weight", " ", "\[Theta]"}], "+", 
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A", " ", 
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
         "\[Lambda]4"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
      RowBox[{
       SuperscriptBox["A", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Pi]", " ", "Weight"}], "-", 
         RowBox[{"Weight", " ", "\[Theta]"}], "+", "\[Lambda]2", "-", 
         RowBox[{
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], ")"}], 
       " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
      RowBox[{"A", " ", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]2", "-", 
         RowBox[{
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], ")"}], 
       " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "\[Pi]", " ", "Weight"}], "-", 
         RowBox[{"3", " ", "Weight", " ", "\[Theta]"}], "+", "\[Lambda]2", 
         "-", 
         RowBox[{
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "-", 
         RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A", " ", 
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
         "\[Lambda]4", "+", 
         RowBox[{
          SuperscriptBox["\[Lambda]4", "2"], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["A", "2"], " ", 
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "A", " ", 
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
         RowBox[{"2", " ", "\[Lambda]4"}], "+", 
         RowBox[{
          SuperscriptBox["\[Lambda]4", "2"], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"2", " ", "A", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
            "\[Lambda]4"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["A", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[Pi]", " ", "Weight"}], "+", 
         RowBox[{"3", " ", "Weight", " ", "\[Theta]"}], "-", 
         RowBox[{"2", " ", "\[Lambda]2"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{"\[Lambda]2", "-", 
            RowBox[{
             SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], ")"}],
           " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox["\[Lambda]2", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{"\[Lambda]4", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Lambda]2"}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"Weight", " ", "\[Theta]dot"}], "+", "\[Lambda]3", "-", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Weight", " ", "\[Theta]dot"}], "+", "\[Lambda]3"}], ")"}], 
      " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]2", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
     RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]4", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"A", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8647402030060234`*^9, 3.8647402679202476`*^9, {3.86474079853942*^9, 
   3.864740837873831*^9}, {3.864740908482232*^9, 3.864740952703079*^9}, 
   3.864742076735327*^9, 3.864742241584566*^9, 3.8649284567028503`*^9},
 CellLabel->
  "Out[767]=",ExpressionUUID->"c33e2f72-e4c3-43aa-9e20-1d77ae8deb92"],

Cell[BoxData[
 RowBox[{"{", "8", "}"}]], "Output",
 CellChangeTimes->{
  3.8647402030060234`*^9, 3.8647402679202476`*^9, {3.86474079853942*^9, 
   3.864740837873831*^9}, {3.864740908482232*^9, 3.864740952703079*^9}, 
   3.864742076735327*^9, 3.864742241584566*^9, 3.864928456708848*^9},
 CellLabel->
  "Out[768]=",ExpressionUUID->"2aba5140-1801-4a6e-8946-d53f4b6ff6fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Lnew"], "Input",
 CellChangeTimes->{{3.86474083888551*^9, 3.864740839587284*^9}},
 CellLabel->
  "In[769]:=",ExpressionUUID->"0398a52c-b289-4835-ba74-41daec77e452"],

Cell[BoxData["Lnew"], "Output",
 CellChangeTimes->{3.864740840120112*^9, 3.8647409431131487`*^9, 
  3.8649284568667965`*^9},
 CellLabel->
  "Out[769]=",ExpressionUUID->"749c82e3-64d6-4420-9efa-591d27603942"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "Feedback"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_", ",", "Weight_"}], "]"}], ":=",
    "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", "\n", 
       RowBox[{"{", 
        RowBox[{"xdot", ",", 
         FractionBox[
          RowBox[{
           FractionBox[
            RowBox[{"\[Lambda]2", "-", 
             RowBox[{"\[Lambda]4", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], ",", 
         "\[Theta]dot", ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Lambda]2", "-", 
                RowBox[{"\[Lambda]4", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"A", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ",", 
         RowBox[{
          RowBox[{"-", "Weight"}], " ", "x"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Weight"}], " ", "xdot"}], "-", "\[Lambda]1"}], ",", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Pi]"}], " ", "Weight"}], "+", 
            RowBox[{"Weight", " ", "\[Theta]"}], "+", 
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", " ", "Weight"}], "-", 
               RowBox[{"Weight", " ", "\[Theta]"}], "+", "\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "\[Pi]", " ", "Weight"}], "-", 
               RowBox[{"3", " ", "Weight", " ", "\[Theta]"}], "+", 
               "\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "-", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "3"}], " ", "\[Pi]", " ", "Weight"}], "+", 
               RowBox[{"3", " ", "Weight", " ", "\[Theta]"}], "-", 
               RowBox[{"2", " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox["\[Lambda]2", "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"\[Lambda]4", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", 
         FractionBox[
          RowBox[{
           RowBox[{"Weight", " ", "\[Theta]dot"}], "+", "\[Lambda]3", "-", 
           RowBox[{"A", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Weight", " ", "\[Theta]dot"}], "+", "\[Lambda]3"}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
           RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]2", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"2", " ", "A", " ", "\[Theta]dot", " ", "\[Lambda]4", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], "}"}]}], ";",
       "\n", "\n", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{"u", "^", "2"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xState", " ", "-", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ")"}], 
         ".", 
         RowBox[{"(", 
          RowBox[{"xState", " ", "-", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
          ")"}]}]}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"Cost", " ", "function"}], "*)"}], "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.8647406075575447`*^9, 3.8647406552042956`*^9}, {3.8647409700865154`*^9, 
   3.8647409938918962`*^9}, {3.864741036547244*^9, 3.8647410613862953`*^9}, {
   3.864741165576948*^9, 3.864741181071989*^9}, {3.8647420850016813`*^9, 
   3.8647421048363333`*^9}, {3.864742172818575*^9, 3.864742178021909*^9}, {
   3.86474225660176*^9, 3.8647422914486065`*^9}, 3.8649263906269436`*^9, {
   3.86492657511193*^9, 3.864926577483159*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[770]:=",ExpressionUUID->"c1f14a8d-6b3b-4fdb-865b-b5be5637e987"],

Cell["\<\
The idea is to use the cost L = 1/2*u^2 + 1/2*(\[Delta]x)\[Transpose]T(\
\[Delta]x) where \[Delta]x = x(t) - r(t), r(t) = {0,0,0\[Pi],0}. The \
advantage would be that now we can choose a fixed time \[Tau] to be very \
large and in case the solution can be obtained in a smaller time, it will be \
done as we are minimizing this cost.\
\>", "Text",
 CellChangeTimes->{{3.864736987743088*^9, 3.8647371329496136`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"dc5bfc69-ba71-4c0a-a899-a16da01c8349"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"Weight", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"InitGuess", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess", ",", "Weight"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", " ", "=", " ", 
   RowBox[{"7", "/", "8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICs2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1a", "[", 
      RowBox[{"k", "*", "\[Tau]"}], "]"}], ",", 
     RowBox[{"xdot1a", "[", 
      RowBox[{"k", "*", "\[Tau]"}], "]"}], ",", 
     RowBox[{"\[Theta]1a", "[", 
      RowBox[{"k", "*", "\[Tau]"}], "]"}], ",", 
     RowBox[{"\[Theta]dot1a", "[", 
      RowBox[{"k", "*", "\[Tau]"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.864741199114215*^9, 3.8647412309450274`*^9}, {
   3.8647412638285017`*^9, 3.8647412753688107`*^9}, {3.864741323608369*^9, 
   3.86474133960525*^9}, {3.864742124890915*^9, 3.8647421532108536`*^9}, {
   3.864742303924614*^9, 3.8647423252527876`*^9}, {3.864742422178767*^9, 
   3.86474251208799*^9}, {3.8647427673552923`*^9, 3.864742767707179*^9}, {
   3.864742898915184*^9, 3.864742916706489*^9}, {3.86474298969613*^9, 
   3.8647431425921955`*^9}, {3.864924629853722*^9, 3.864924662618064*^9}, {
   3.864924702490093*^9, 3.864924759817445*^9}, {3.8649264139773474`*^9, 
   3.8649264215218945`*^9}, {3.8649281225515504`*^9, 
   3.8649282156702595`*^9}, {3.864928284639825*^9, 3.864928315106911*^9}, {
   3.864928430146491*^9, 3.8649284365374107`*^9}, 3.864928903813407*^9, {
   3.8649289880729957`*^9, 3.864929015366118*^9}},
 CellLabel->
  "In[1100]:=",ExpressionUUID->"5e2d0932-2b2f-4ace-be1a-80112973358e"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 1112, 83, 17534376668544537073, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8649290407558584`*^9, 3.864929048257418*^9}},
 CellLabel->
  "During evaluation of \
In[1100]:=",ExpressionUUID->"cd2185ee-fd12-4705-8511-17d3522a4b1e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJzUvHk0Vd//+I+LO+CSG1KSpDKlSeUV2jspopQSklKRSCjJUIqKylSoUGSI
ECqEzPtShJB5JuM1T9c8/85nrfe5/f/97+cfay/Xueec597PvZ/r8VjPzVdt
z1zjYGNjU+RjY/u/35Ivl6PCxB8dMl7qOx28WIK0cok6jOsI1LR4OrXHVaFy
vv1kzouVIG4/b3vdlSak9vIoPfZUI5BqVDy0p6YDXdu5wLebrwNcy6zoc2nr
QSdlrk0Ia/SApvPZRQ1V/Sil9sHdEqV+wP3C9XEY7zBSFpT9yuk6DATtfeJO
z4yi64sB7z8ajoOayrO8Yx/HkW1R396vJ5kgoCC4RcN9AnkZcW9dvjkF/BhR
Gq2qTGT66775bosZ8Ob3iOzlLCbKJ4rqWp2fA+sDeq1/kSbR7jVugQP2C0DJ
aTa0d8ckujypKq9zcwlsapJ7qbplEkWGFYrN+q6AhLbPfDY9TPTtxcGW6jNs
8E+viWKcLRPZZ6mefn+CHRJm62NtyyYQKv3I9LzAAedu9NKGG8eRpcZ/uZaG
BHjBZIPNE70xFBq3O83qBie85Mu2Zif7MPKfzH10y5ELmpq21puk9CFG/F0H
CztueNJnnGR8vwv9PBYQ/PgxEc6oEANmUuoR+6nmrpduJLiupMwsLzETsR1O
Z49wJsMw3fbxMvIv8Fxk9mT1MwpMB+keHWwd4JaRacHsEx6oWfffwJvrA6Dz
kaIZeMML716cG/xrMgHWvnrb7BnJByfSzn696DgNYgRknX+FUGHlkR1/97XM
gXy7TUe3J/BD/kfy1faHl0CYRISYqp4A5Jp0rNl6dhXkuiywWVQKQFNzo9cx
O9nhZm3i0haDNXDRaMhicy8HTP0j491UuwaWHK+ebHvMCX2KVnZJXBSEPG+H
qbv3csNXdwZuXG4VhOTmkFabICJ0ERLnlzxPgzZyzmLzYST4SYar1L6DBiOl
QKqqJBlyT7GL5l9aC9ftUNdb3EyGsbuSH4b1/RvLXI3XWbYWYo1bjmemnBv6
N66OurcD3BFmjee+6apIMv+NVzPs0p7aiLDG2ruOHXWZ/jf+dXGnpdWddazx
l6Rbs6ur/8al/i23+69/Bd5nfcP1W8uRxPL30OX9xeDpGvLwe806xOZ6e+84
YAD3G+x0PtdB5DB5VrDvwiB43K7cf+jVCHLnlJ7eHjwKvghfKk9cN46GLuda
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
+su8E0GfyP/9YPWX8ZFMc/ulXcDqL8MWtN5XQ5zO6i/jHrTlpb5jJqu/zN3h
vaNpDkmsfjLXRD3A+H+eAO8nQ4q9sS7YKxbg/WSu1AUrPpVLBng/GTtrDkUX
z2SWT5zaqnImki0K4D5xCrtz2MmUCFY/mbAjsR/JHD8Q7hNfcDKsGQE1LH/Y
ZGBG/GFAL8L94bg9/XEh4kMI94crKNM3/Z6OIdwf3p6jp3KRNIFwf/iCXSR7
yMUJhPvDJy41yHvTxxHuD088bdXjTRhFuD9cMqkapHN0kNXfJrHA9FeKYRXC
+9tEcx159LI2D+H9bfhOmxibf32N/l994tOX3Y/wkYJY/W3MjqeEFWxKRbhP
7Cjg7kZ9mYFwn1h3aGNqHGcGwn3iy+7rxv0i01k+cUR9kOiaR+ksn1ibRBeu
4clg+cQn5MTCthpls/rh+CunBYccRSy/uLvgpc/Du/msfjg5S1+4rasLWP1w
LtjKiU6p/2D1wxG6e3TFL7aA1Q8nMWEHcTifzuqHY/y++Db1VjarH06aw5ti
vcYUVv8bkreopsOCGcD739hvl53BFjfA+98ICttsp+5JAnj/m8d3pg1UZVNY
PvKlKOZqU0QcwH3kiM02ar/r3Fn9byLW5JuWleQi3Ed+xeXzNPFTJcs/Ft/2
VMxfvAfh/vFia8t5v6IBhPvHF3SFNI4FjiLcP16Kdvtg/Wcc4f7x6aDL8o2X
JhDuH8cqFf8nvITl3//5x0nGWe8XH48h3D/+9OGzbJXXEKsfz+WwpHPMjbUI
78fTkcsY3pn8A+E+8puS3ztOrY9G/68+cjNbtePBhkSE+8htPRz5b859R7iP
bOAllCDyNgPhPrJZdkNR8n/fWT7y+4ltgpJm6SwfmbJCbo9fTWf5yFl5iyHy
AZmsfkCCyxu/TvnTWX6yTeFRkeuqBax+QNxnSA0icj9Y/YBMprZ7Lmz4weoH
lG08MHe2OZ/VD8hLSs7tVVUeq7+Poswy1eN4IMD7++zIXG92uSse4P19ZuQM
xx17kgHe32d82bfU1zCJ5S9nNI1RAweCAe4vN09lTO8v/oxY/vF+V53By8MI
9495lgZbDuwYR7h/fE/4pMTMngmE+8ed7JW189oTCPeP75rly6U6jiPcP96x
56HFYs4Iq58Q72GjQx0m5QjvJ3SD5sIjsu47wvsJFf1/1J1pNJXf37jFUZkd
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
+J/Xokzhez4u3r9nX/8P7pNxIQ==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{534, 626, 455, 456, 457, 968, 813, 691, 596, 533, 
            3379, 3380}}], 
           PolygonBox[CompressedData["
1:eJwV0DkvhGEYheHPEqOiwGgMkSg0NGNJDIlGJUiIxk5LKBASGhqm0NBYptCI
pbCUll+gsCQklhYJHaqxxTXFnXOf87xfJpnSobH20fQgCNIwiU9yjjtcZARB
FMcedCMnMwjG9SQvQpL34YkvpDb3OT2Ebd/vyzysudUhy31Yf+ff7q+8FTd6
hdsyn+JhPsPTcO/dpazCiVu52xLv4bl8gn/xGN/kEf4l+9Fse9ajclXvkot6
RM7rHTJbNsotOSh3/N4Bz0eTvu59mYzrnTKmh+SI3iI/9FqZ0H98+ybbcGuv
tK/waV7IZ3k6Hry7ktU4detFceo/0QfwwuPY9e5QL8CGXo9f2yOubTU4s/Wh
BHv2I1sYCb0Bf7Z/17Q8bg==
            "]], 
           PolygonBox[CompressedData["
1:eJwV0SdPJWEYhuGhJDTHKhQ1tDUkBIGhCWqCIBSBICF0ATgwFLPJJoRiMAgM
oXp26RjaX6BJuqAk4CjXJ+48z/3OOzPnfJPZOdQ0GBtFUQz+ooUUY9PgH/5j
CztxUZSOZdeqkYAb83OzMhzxwvgomtV79Dxsu77LM7DCa5BsZ4i/64l41ptx
oY/h1j0XvBzH/Lf9Ob1XT9VH9E89H996Fx71EtcW9Gk9Q/8TnitTZJVclZ1y
x/P39ExUh7n9XDnFW2UtT5HDvFF+8FK5yNtlEn/RW1DHL3mRnOfjepo+rseH
c9GXZIe8895LvQIn9vrwy3yUf+kF4SPwbv6kz2DXPfs8C2u8LpwfXsNvxZU+
gXt7V7wSp7w/fAvsmR+YZWOd14f/hjfehmt9Eg/2rsM54YwPhHPHvvmhWQ42
eAN+AExkRdQ=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{419, 659, 458, 630, 723, 845, 1000, 506, 569, 664, 
            786, 941, 422, 539, 602, 696, 818, 973, 471, 629, 722, 844, 999, 
            505, 568, 663, 785, 940, 421, 538, 601, 695, 817, 972, 470, 504, 
            567, 662, 784, 939, 420, 537, 600, 694, 816, 971, 469, 503, 566, 
            661, 783, 938}}], 
           PolygonBox[CompressedData["
1:eJwV0jtPFGEAheGBRSNWULGirKKuiRWFJCzKCggkFhayNDbI1RKoIAG00gqN
FY0Fd2JIxDsKFHiBf6ByMVEUIUGi0EAHIs8Ub855z/dNJpNMfmNbqjU9CII0
jGFbuWCYkGs4rFdhFLFIEEzjtf0cv4U5JG1LWLUf4pUYQZ5tCq/scd6MWZTY
FvHLfpt/RQ3fQoZegWGc4JN46d4DvoEmvo+zYcdHXOILWHGvmy8hxTcR0XfQ
qmdmBMEVfQjH+Vu88MxjWe7sqLyHk/p9dx7phfpv/Zps5P9whtfyIb1E7vHr
soNnh/f4DfmQn5cf+FV5kc/jp3fe5MN6UkZktbwjo7LL/V69QF/Uq/W/SNf7
ZMK+rbfoR/RyvUeP64N6rv4Gz70nU95FzFmPs3U08D2c1nfRrmc5b9Dfo5h/
wQ/Pd/KF8Pv4H6TpZRjAMT6BZ+7l83q8Q8L2GcvhT8VL0Y9o+O/gqf0Ur8MM
imyf8N3+H5fD70RO+O9g3PYE33AA75BWBQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwV0btPVEEYhvEDC1aLV2y0wgTwsiJLYWFDsaJoUHSNEYTCUKAGEaWTxivS
kAgWWFjYWJh4hVgLiGAAhf8AFqRSllUBsdPfFE/e9/lmMuecOSUtHenr+VEU
5eE9zpNOTBj8RrF+DkNIxKLoM8bNf2GHWRqDOGA+gU/mVfwmZnHCbAk/zbfz
s3iH/eEcjJk/5jlc5QUFUZTUb2AGtWbfkLOvmy+imW9gm34Gb7EvPBsf7SuS
PdjjrH5rK7jCY7wyfKzehZ28g/frCf2rflxfxIpzLpk916vlJpmWd+Ru+cDe
RvmEV8kFflI28T/YGt6TP9OPyL+8XnbyIlnPL8heXi7fhGfLveFOMOr5L2TK
LC4fokTvs++pfljP6pf1fP2Q/g+3eDEPP/ULjvEFZJ1XKG9jl/X71gb0pJ7R
L+rr2KJvhP+nx62d1l+jPNwtRpzziC+jlefZU6G3Yxo1Zhks23ePz4d74mvY
rJ/CK5SFb8SwfQf5NUzhqNk8fpjf5XNo4Kvh3vQ6vERpeBd8sC/B2zCJlNkc
vpvH+X+F9lve
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Xe8znUUB/Br772u7dp77703lVGKwsVNWVEKIcoqGpS9VXaTBg3KVqg0
FGVUaIgoFYr3efXH+zmfc57ndZ97v9/ze92k5BHdhqdKSEhY5SVqWy+X1dcZ
R1dGmiXxrfwiteirz8FH8rPcTWramf2lbuJhbqI2aUhLOtLT3uf+Vjcznpup
QwY6eO8f9Q0mcAt1yUhH711R32Qi3ahHJjp576r6Fo/Qnfr0M8/Jx/JzDCYz
nc2uqW8ziR40oL95Lg7Ic7mHLHQx+1fdwmR60pBk89wclOdxL1nj7Mz+U7fy
KLcyyqwk38mracQAfR4OyfMZwhh9eX6QXyJbnKX+uvoOj8XZ6Kvwk3wb98ul
OC6voTED9Xn5RF4Qv4dck9/koYyVK/Cj/LTajJfl6Wo9LsWZqa3JHvcUS8I8
3hWfUBuylClxJ2pVFvKzfrbaghX00j+glmYBJ/RPqU1Zzlr9VLUOi/k9dktt
RRN5kJqPT+VZauP4njgLtRbn5WGxt3JFTsuvMEOuzx9yjtin2HXei++LXZGr
8Yt8O6PlMpyU19GUFH1+PpMXMTz2W1+JM/Kr5Ix91KfmfXkad/Cgviyn5PU0
i+dFX4DD8mJGkCt21iwN2+IO6E3z2FmzRD6Xl3AfuWNnzdKyPf5O+tAidtas
IF/ISxlJnthZs3R8ID/OnbSMnTUrxJfysthT8sbOmqXnw7hr7qJV7KhZYb6S
l8fukS/20CwDO+SZ9KV17JpZEY7IK2IPyE8vs4zsjDulH23iHs2K8rW8Mu6E
AnE/ZpnYJT9Jf9qSGGdtnpndsVck046CFKIwRShKMYpTgiRKUorSlIlz93Oy
sCeeCwbQPu7drBjfyKvibikb526Wlb3yMwykQ9yrWXGOys/zEOXi3M2ysU+e
zSS5Or/Gnsfn5HJ8L2+IXZLrclHuGPcvl+BYnEM8H7wgT1Frc0Eew3i5Mmfj
91Kb81rcvdqAJfypn6u2SfX//4Hycc/xvDOf/XGXaiOWMUc/Wa3BIs7p56gt
WUmKfiOdGEsFOlORSlSmClWpRnVq0IWa3ADfObYN
           "]]}, Annotation[#, "Charting`Private`Tag$1085483#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nfcjlUcx/HbSPYs2TxWUiSKzGSnUKSijFRoWJU9iobMUFHZGWWvlk1E
RlSUKHvvbLJ6/1798Xl9xznXdd/3ua5zniepVYeG7ZMlEonhyROJScz0FIlE
Jnwil8Ul3e/YoCuFb3XPICcm62foMmOkXA6XdX9go+4+fKdrglyYop+py4JR
8oO4ojssP4bf5M7YpvtZLo3v5abIjan6Wbqs+FQuj391R+R62CJ3wXrdn9ik
K4OFumeRMWUi8YZ8hc8Tn803xwG+f3TG+8q34kvXz6bZ8JmxCkhl/FX5DH/V
+FG+PrbKJYyN4Lvy2fmefDJsN28zvR+LjBUzNoR/js/Ev8n/y1fkJ/B54zfR
FnhUd1AuQz+Vm9IP5Ly0n9yIpqZV6RT6PP3K583hb0NN+XPzC9MBcmNaUb6V
vhZrRs/Gc6Nj5GuuPUYb4Hd9Sf1HfDf+Dr4Xnxw7zPuFPoDFxpohX6yJ3BKH
+AGYZt5c+XaMlivhuu4v/KoriyW65siP6fp5uuwYI1fGDd05/B3vWrw/mG/8
Dow1XgU3dTvxm64clupaoABm6RfocmCc/BAS2KXfonsQy+SWSMJs/de6nBgv
V0UyHJcfxx98d+w2b6tcHsvl55HZGnWWr/IFcS2eCQ7zA2ONjL8jp8Ec139D
c2GCsSLGBvIP86n5dvy52CP82Fh3/gR9Atv4e/Uf8z34HHzvGKMpaGX6Rbzb
dE/sX74C6sgrzL+LDpWfoa3kLLRL/D56LZ4TnSg3o4XimfGtYo/KR+T76Wfy
oHhu/Lt82vju/FQ612d+S3NjojnVkMZYe/k8nwIn+Yb4k++JvXFuyBWxUn4h
3tt4/vILOMoPxjzzvpPz4Au5OlLiVOyH2G98L+wzb5tcCT/IL8YaY77++9hn
mCTXwC3YH2dGrB1WyS+hKBboF+ryYbJcM84BHIj3BGX4b+L3xveKe2ORufkx
xVit2G84qN+uq4LVcnHr8SHfmr8TC40vlgtgqlwbac3pIF+IdwKn+Sdj//G9
ccg1O+SH8KN8t/nD+DZ8Vr4rfz3OnNgj/Is4xj8Q5wI/JPYI/17cl6aj1eiX
8bzpIvdfwiehVvSxJnSQ/BStI6ejHeMcpBfjTKbj5GdpGvmfOHfwiPyXXIp+
Ivfhc/J9+JSxLvykOPfo4Tgj4lzDGvPaIpu+m3wj3t/Yw/JL8nF+KBa7Zqlc
EF/Jj8T64Ux8V/zNv4UjcZbEu4q18svxLLBEv0xXCNPkuvHbcFZ+Gjv5t3E0
zppYJ/wkvxLrjqX65brCmC4/isZIj2PGdumrY538Ku7BMv0KXRHMkB9DBpyL
vYldfN84e8zbLdfAevk1lMBy/UpdUcyU6yEjzstNsJvvF+eGeXvkmtggt0PJ
ONesYWvdCf5DrDDvB/lOzJLrx/c3p5N8ic+EC3xT7OHvMzaSf4fPxb/F34KT
7rM33hlsNNYetxnvLt+MswvJ5TYxly/Lj+aH8Un8+3z6WK/4exbngfutosVQ
Wzc79gwdHM+GNoh1o6/LDehluQIdLz9HM8sX451EXXmvXJqOinWK80vOTd+O
M4mmij1FJ9OW9JTP3xefjZ/j2emG8x342/kefAKl4myT2/Knkv//P1VBub+c
Ic4h91lN78IcY48jCy7F98Q+/r3Y5+btl+tgk9wx1jrOOfd6WXeaH4FV5v0o
F8dc+YnY97Hn9Adiz2Gz3Cl+L1br1+juxjy5Yeyr2CNxH6zV34P5ukbxzOL9
j2vwOr+W/oR1oeaVwAL9k7EOKJMhkfgPswVLeA==
           "]], 
          
          LineBox[{3380, 534, 1016, 861, 739, 646, 500, 997, 842, 720, 627, 
           564, 459, 969, 814, 692, 598, 535, 501, 460, 461, 462, 463, 464, 
           465, 466, 467, 970, 815, 693, 599, 536, 502, 998, 843, 721, 628, 
           565, 1029, 874, 752, 660, 1059, 904, 782, 1092, 937, 1123, 468}]}, 
         Annotation[#, "Charting`Private`Tag$1085483#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
69bHfYjfjrjOeFb5tvzP8b3iXLX2f18Gtrg=
           "]]}, Annotation[#, "Charting`Private`Tag$1085483#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GW4FGUYBuClJJVuRJFSuiUFJKVDukNKQjpFQZFGAQklJKW7uzuU7lQ6
pAVE8f5+3Nf7PO/s7J6Zs7Ppmneq0TFKJBJpHTUSmRczEukQOxK5FisS6UM2
nttNt0vJYr0p5+yG6VGZoH9CUpbq77NJ7sR8r+uoX5f7kp0Nel72yi8cnyGn
YonejPN2w/VoTNQrsFMuyhE5GcvkD9gsf8ER+RMuyguc30m+IffjtFyNHPJG
Mx/75BtmE156/UwzNUvtL5l1aC4fNEvzmjP6fbMV8eJEIhecN0KOzlN+CvfF
rBn+dscr6rvkYrziqH47vC9xHE+uL5ezhL+BLfofZgM6y0fNClySH5ntWOgz
vzBv2n1JTjbp+dkv/+P4LDkNy/QWXLQbqcfgZ70SKVhk39nultyfXLyyu8Ri
lrCUZSxnBStZxWrWsJZ1rKeL97rtPb4iN//aXWYDXR27Y/c1efjP7gob6ebY
XbsB5OW13VVG2b/BJLvKpAzXat/d7p48kHxEwn2z/94+JpP1KqRis30Pu/vy
N+QnCn/ab2ErPR3/y+5bChCVa/Y/2Mdiil6V1Gyz72X3QB7Eh0Rjtt3bLJdb
ct3rRuuxmapXY7f8EcfkNKyQs7JV7sJ25/TWH8rfUTD8/XoBDsjR+VVOywr5
slmXz+RDZhkivldn9b/k1ryp3/C+Y8J3jmf8Ep4x89Pw3XW8ur5HLs6/HNfv
mC3CNckrzWxsC/fNbEhX+ZhZkcvyDp/RR34kD6YQW/QPOSjHYI78DivlVtx0
zlg9LtP0GqQNz7p9X7vH8hAK8wa37HfRz7En+lCKEDM8V/Y/hueS6XpN3gn3
3P7L8HzKwyhKLObavcsquXW4Xq8bF+4XM/RPeTfcF/v+4b7JwylGbObZpWO1
3Ia7Xjdef4uZei32yiU4IadjlZyd7XI3jsuVuBJe6/yv5L/lEZyRq4fvi7zV
LMihcM/MpuF/Kc833+MFa/QrZr3wDPifttUPy2WJop/TH8htwt+o3/N5E+T4
4TOZ5fgFs1b4nXC8tr5PLsnJcH1my/B58mozBzvCc2I2ort8wqzM1XCu9/9a
fi6PpDhxWWCXnrVyO+573UQ9AbP1OqRnv/2AcG3yKEoQL3yv7X+yT8ivel0y
sEbPyU65Bwe8bqD+Uv6ekuHZ1QtxWH6ThXIG1slXzfp8Lv9mluO8/NBsG553
7/ezmShcE3Mcu2jWDr9R7le98DfLH/Mfp/R74dkM32/HM+pr5Vz8w67wG2E2
JpbjPfWTchWi6n/oj8PfE54fn/1NOM/uB87KNcJnhd8MszC/yW+xSM7Ierk9
v8vluRCuxftMkhMzV68f7pNcitNyJtbJudkt9wq/K875Vn8lj6YU8Vlsl4kN
cgceed1kPQnz9AZkDt9B+0Hhd0UeQ2kShGuzn2KflPl6Q94P997+u3AP5bGU
ISFP7KfaJ2OB3ogPwvXZD7Z7Lf9IWXboRfg9/GaYzYjtnibSl8iZ2Sh35Knz
f9GTs1BvTBaO2A+xizBOL0dintkf5RjHOcFJTnGaMwwNzxzjvb48Sfjbfppd
ChbpTcjKej0Pe+TenJKr8me4ZrN9eEbDb7rz/wc+JF2x
           "]]}, Annotation[#, "Charting`Private`Tag$1085483#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Xf8lXMYxvGTSlq0SztN2qG9N1rau7QoFFokTUWoSEmUjPbeg7b2jkqL
kLSHkMy87z8+r/v6XN/fyXGe57mffF36NO2dJJFI5E+aSKRLlUi0SpNIfJI6
kciI+fxJfKg7y1vhGq+JwbrtvDwO8reQHq31n+oyYQF/ClN1P/PWuM5r4RXd
Dl4Bh/hungmj+Vi+WP5TfhpJkUHXRveZnBkL+UaeEi/znnyafE5ug1/4EZ4H
7/DafIi8U66IS/LD+Eq/x8yM1/Tj+BL5L/kZ3JSrI5n8rVkYU+S70iYSTeWM
/r6tOUOXVpfFPMtLIh9f5HyTnApZ+WDn/8h1cT/v5fwj+Xz8P/K28d15JRTk
N5wflfMiJ5/gPJnZiNdxNtTcpauEy3JZfK3fa2bB6/rxfKn8t/wsksf10bXT
zZSzYjF/GnUxTL9bVxmH+dvIjPb6WbpsWMKfQT0M1+/RVcER/g6yoIN+tu5e
LOXPYrruAm+HX3l9jNDt5VVxlE/AMt0/vDfujO+o66ibI2fHMr6Zp8Yr8Xf8
Y/mi3B6/8W/iGuBd/ggfKe+Tq+GKXA7f6PfFtcEYfcJv+2h8Rr/c/Dd+K10f
8w9eI+4BnoJ/JxeJe4x/wFOazXhpM5vPd5Ln6u/mOcyfeSncx5c73yKnQTY+
xPm/cj30cfaJeUnXATfkyvhdfyw+j4n6R/mr8n65Oo7x/fHv4Q0+ka+Q/5Of
i3s2roWus26enBMr+HP4VHeZd4x7nj+GUboDvAaO80nIjif083W5sJI/jwbI
gS7OFuhzYxV/AQ2RE7nQ1flCZ3mwmvdFI+RGN2eL9HmxhvdDY4zWH9TVxAn+
HvKgu36xLh/W8v74THeFd4rrxZvgNd0hXgsn+QF+L97kk/lK+bb8fFxDnI5n
Ex/Gd3HeQ14i34dzcX3xuf5LMy2G6gfwGfJVuXPc23IV3NIfN/Mjl+s8KZ4/
szEvYT7u/PXYQ/p7eG3zKi8fn+GnnB+Uswf8LedJzMd4MfN956vkROww/oLz
W3LN2Dny9+YDmCqnct48nonY6+ZSXX6cl8vgC/1W824M0w/kM+Vr8hP4k5/g
BfAeb8rHxL6R68R+5Id4DozlU/hqOQn68tTxG8Y7gS+TC2AdfxGzdNd5F/zF
m+EN3WFeN541/gHyo6d+ua4g1vOX0Bxv6o/o6sU1jPcWCqCXfoWuEDbwQWgR
7yz9UV39+J3iPYWCsQf1K3WFsZG/jJYohMKx95yvclYEm/hgtMLY2Cexa/BD
vI9QJPaefrXufmyOdx9m637hXfE3b41xumPxXOPHeC9gje4O9NOliX9D15uv
kR/AFr6N34PhfAifI9+Qu8UelKvGLtWfjHcKJsdOdS80kUuabZyNl4/r08W9
ZV7jFeJa8zPOv5JzxrXl45zfYTbgxc3pztfKSZGF9497Ra4V+5Gnjd9DLoq8
fFrcC2aLuDd9to+5VlcUF+QH8aV+u5kOI/RD+Vz5V7l77EreNt5NuhO8AX6K
dwA+1yXDgNi98e/GjotnVi6GrXwY5ul+4z3wH28X7y7dSd4QZ2MPo1jsuHg+
dMWxjQ9HexRHCZREqdh3/m6dvymB7XwEOmCC/pSuUbwHYt+idOw//XpdSezg
I9ER7+q/1TWOnRN7DWViJ+o36EphZ+x/zI93A38St3knTNR9x5vE882/jv2D
8XwG/0JOjoHxvJm14x6K+y72Cj6SH4ydKm+US+Oi/BB26XeY6WOPuo4j4/eT
68f15KOcL5Bv6jPyp8zfeTUU4gl+KjJyxw7jKWIX8lJmZ5+fJJ/Wp4/evM4r
4oKzw/E5vK1P6ryhPFO/zrwTL8YzZdaJ+0c+E/cppssP+bsB8ia5DHbznTwD
XuWj+UL5D7ln7NrYffHO0X0fOy9+h9hXWK9LgZfie+Jh3UC+OX477Il3D7pg
sv4HXTNciucfZWP36bfE98LeeBegK97X/6hrjsvxTKNc7Lp4NuK/hX18F8+I
UXHtzUfiOfObjHG2SL6l7xXPa+wD3RTdGbkFrsQzhfKxE/VbdWWxP3YvuqMC
KqISKqMKqqIaqsdu9LltPlMOB2IHo0fsav1Pupa4Gs8aNujuwiBdhnhe5RL4
OHab79wy3kNmDX/7P2H+p+M=
           "]]}, Annotation[#, "Charting`Private`Tag$1085483#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8647431443886185`*^9, 3.864751680232676*^9, {3.8649246263958454`*^9, 
   3.8649246663018637`*^9}, {3.8649247386913157`*^9, 3.86492476348625*^9}, {
   3.8649264053781443`*^9, 3.8649264245239162`*^9}, {3.864928178079486*^9, 
   3.864928183150836*^9}, 3.8649282170238175`*^9, {3.8649282854075727`*^9, 
   3.8649283192815533`*^9}, 3.864928522906314*^9, {3.864928905872735*^9, 
   3.8649289410632877`*^9}, {3.8649290175684013`*^9, 3.864929049070153*^9}},
 CellLabel->
  "Out[1116]=",ExpressionUUID->"270e8dc4-69e2-4cc0-a4c4-13ff7e619858"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
kxxwhTqRnfCHhcLd32qeYMoDFSoW612kiVBRgYlj23UyTIhzsykikWDx1IW6
59a80DnkyzGwmQStNVjNXhzmg9sX6kbd54kQXhfdxdP9r97+R2ev633qAVE+
jXTe1Wpk+WGBS/DPAGCZsxqtXW/A+brARzsLauypAOPrhpjThvMvUkF9ynHJ
5DB2eLvYTisrkZkyYcHqphxHhM6v28drGO///IHBR7klPDDQ/p3TtTgO6BTS
QqcVkeG4Z97X49dI8PBzZsmnZztB5YCErP3PLHQ/K1FHo7gP2ClaXJLSa8D5
vRmjQcWbjPMUxu891yleUWLsFyhr5w7mSBChTkr3VV9FAoXLRkrsxE4O6OCq
FBGwh0B5Iimn23qcDHtOGyiFt3NCrxMNzdGavNBU1+6C0THG+3Xxd1tNWi94
P04bjfpWh2DVWrJX3SDIXDg7y6zTgPOBD9slc998oIJlqzcVaJAIu2xf5r99
T6BIsPqPaxLIjHPS/SPm1zjhwuifgXI2XtjkZyw9YUqCG+FEziHYDQpt+GJ1
DpWhhduPq4pq+8H7sJrA3Yz9E8YbqinxWV8QowKMN+Tn2+hGDqGC7J3N+ciM
sf/dT6Zv/kCgjKrW51l6keGa8uTbYXkSZI+orbzzghfaXTzzU26KE0Y8682K
ov2rb6pwVv/C6wFAqLaJimbsDzF+8UjY8rMHVxn7lyHjj5ffEOH1yYk6NQqB
cl5ZdHYphQz7LxEHT+mTYA/RZfbzfcb5maV8nJ/QgPONm+KQAu1/fqK0YvtT
Dnb4sMr2gb79GmI5JBeSxUuEidJrr9oFCJRrEwLtiYq8cJC+ZzZCiwTNNd96
7HPoBbf9TrnlbqlD/scLHt0MGQSV/GWewc8acF5S/fwu9ZQwKnAboc90/SHC
xtA0U9EvjPm/Es0f95cHeudwrYNDnLDplfBw/QwZFnwNTq9gzF+jMm07yRf9
IPLOgTrybAPOW8L0HbWPI6hg6XLGpkIdIuQ1M//l+YJA4Vca6S1xIMMgGtOL
YHESFJc9elBecBBc6HxN0e5rQMmz++eZfi6A6h4FevkDKnAcTji9JZMIV1R2
1kshAuXVcOgktZ4Mxw7I6d+7QYJiFr3fqWz9YN/GrvCnYQ0437mxYdVqUyIV
YHxnbJli/SbG/u3B6NHI6FkibH7JplLgR6BsOv66t1CYFzqJx83bXCXBNzvz
ZUwEB4DrB5RpLdaI86DWB3TFtz2mAtephWtFt4nwz4HzTUdSCJQSrbzX3EFk
aNqpplOtQoJV0aVMVov/+kH/wptz1q6M89j0+OcK0Ua0O55H0TqACG9LfuCd
Zuw/YXDO3IMEMlxdco9WuUCCGG96beq7kCmj3oc+R/lPVhNhmor2qf8Y+8Oy
kcwRg3Ey3HLhgYUi47zrb6cAdK37gcztPgFyfwPOp9auX2/6E00Fxeai0R9m
BsARA8o7ON2A5BP0e2W/EmHA+ON8FsZ68eiYIs26kgzNxidlDjPOOxjP6rjQ
xLaYRAUYz/pQfPX4zk9UQHpzqP8EmRcGOXELe5uQYFl19HLQdD9gkrKmXxFp
RG9Iwy+gLREqez15qcTY73N3NLs9yRgAwfeyPsyQGlHS7lTuM5FEmHWAwBXI
+HzToTt/b+eQYaIEZTTCiAQxXvZF/I6IfsbvHwau1LOrZHhbuVUnhbE/lxK/
9X76az/YFbLMW0BoRKlSyxk8hYznU0ILA/kESuzL+fHr7WR4x2zPDn5Gf2J8
bTdZvisqngowvvbgsyFuN0Z/FMm84AheJcIwX9uX0vcZ58/xme7/tvJCK+a6
hO+XGPPHs/mS/OEBcG7PiKqpeCPSbeTcp3qfCNXUFTnJmYzvn3TkU/Xqv3rj
eQE5uQrBsu6FGK9rk3+yP6DlK56P0bjBK6IsJR3PxyhpN728USMDz8fISbyp
1x6bgfO61t03SRz9WTiv+9aEcO7C7nyc15WMumdxyKAI53W1GghJP3hK8XwM
bepMSaNXOZ6P8Xz/L7+xgl94PsYxxLqqNVKN52N0fudT7FuowfMx9D9TFw6X
1OD5GFwHA7sKNavxfIzf6vXTRQ6VeD7GMz/ygf9yyvB8jM+sxsv0vmI8H6OM
h0gs+1uA87q9A4c9CO+ycV43zGij3NuFTJzX7XhU3x3Cl4/zug8OhMlYfCvB
8zEKm7zhbp46PB/DYeMq7/j7NoTxukLfWs65n+3Hed3zNsO8MndGcV53o8FL
/6dWNITxuptCqhZvKv9FGK8rYruVVrZ1FmG8rh2/o9uB5VmE8bqHTV/frO6d
RRivCwqJtBPNMwjjdfVvQpvM1WmE8bpixxS6nPbTEJ6PcaYip1RyFGG8rhFT
kw+j4DivW3Yt6sIVeivCeN2gd9Ta09W1CMvHaAx32tXB+RNh/O4zPpUe+lwJ
wvjdF9MsbHqSPxDG774PX/fT8SxCGL/bnb4tO1+BgjB+l3bgzrLw/UKE8bu9
TdFcUUMFCON3cxK2DZe2FCKM3z0df6LChr0IYfzuM5dC47iSHwjjd0OMYsfA
nXKE8bubaou9b498xPMyDhtqH7YjpSGM391SrWY6ppCBMH6XlE8N+quXgfO7
Q2wHvg65ZuL8rugWqYSDpTk4v6tQp3H9gSLC8zIifdj2WhypxPMyTh/iuyL9
twrPy7gcKdPX/boGz8uw18qKnuL+jedlvNlPfeu8twbPyzia1ep+gaUKz8vw
6qUdoSeW4/kYyfOWfGWtFDwfo/NYyN42Wi6ej7GmkVsVJpqF52M8YveW+uCT
jedjrKg7UsyLKTjfe+tDKGvCg0o8H0Poy7MBRcc/CON7za0uBabt7cF5Xm1H
wxPqhRMI43kbx2J7a8bpCON5NVdHo4rPzCCM59VsFxMxT5xFGM8bf7Fc9Qff
HMJ43rg9a4/F3GcRxvNO9igsnCfMIIzn7ftq4R3zlY4wnndyfxX/9UsTiG/L
zFlKBD+UC5PnTEXdeJ7H9FrQLT56I8LyPPrzAqSv0SoRxv86m57YWdhQijD+
N1R1lP8UqQRZVnyhVssIMc7zuVaFmsWIpem71+dkISigve/ShxoKapoTddCS
F4ahx4Y7dM4hNLiHmp6SKgzNTrZ/sSYWIo/DfXd094nA2m/iYYHSheiTyxVP
5lQRmHV+Hy/rBgri/Hm02fngRli56TXLR6VihPHGu+3uvP82UIow3jhW92Ws
zsgrPF+k7eJQY4rfd4Txxo+f079v4shAOG+80mYfp5WB548EX5LeGr6cgfPG
taLg69kf2Thv3KceXGb8oQDni5Xi3MoOXa/A80V+Oej87jGuwvNF9t4rLLmr
UYPni7yXkstxJv/G80UCouml3x/W4PkipD28LqvfqvB8EZfeG86GryrwPJHU
k76lo21F//JEbFl1iCb5eJ7IX2vZ8SdpWXieSOCP03e/+GTheSKZUZ5Op3wK
cR75O9vbr0EmP/E8EapC3crxnQ0I45Fp6pP9cVadOH+czye93rZ1HGH8sUyu
2nf+/XSE8ce64UrSq7/+Iow/PsUc2X/MZhZh/HGw/zXfV+Q5hPHHop5+5zPT
Gev3//HHvU3UjVnOMwjjj6dmEl85X5lGGH8cY9pcPT0wiWoc3QHNgx9On5Zf
8rXtxfNP9PyePjEybEYYn8y+Ze3ix+lqhPHJ6Qb+wEC1DGF8slrZ1jhRrxLE
4fntwGFOIeh6/q+mdEYxEhb7aqHzQggube4RLpcsQobRVhvO8wjDb5+Lys0a
EOqw2EefDxGGennMv1IVC9HR2bdGShtEoMljl9Wi5QJU/8ZCVC1IBD6CqfOn
biGUeA+SFwQ3wodPD9mPvylCGA9teK901aGsBGE8dGVCVXd89GeE8dCPf4x8
nOFJRxgPbfjN5cITtQyE8dAX7sm7jThm4Dy0xvwZRV7G+oXx0Kfnl8wUh3Jx
/lkxz9s+gPkXnteS33zuT4xrNZ7XAuxKZ1tqa/C8loi0RU75mRo8r8Uz0Kxv
qqQaz2tR/CPQzaf6C89jmbrGttRaivA8FrOlAo7W5Bw8j8V1TdIrozkTz2OJ
/Pp95S8hF89jSdBNMswOLEYYL40e7vz4Y0MNwnjnbd9E5IPeTSOMd+57WApk
C2cQxjvHLJmYCbXNIox3nvFPCqlinkMY72zxOOa/w/KzCOOdWw78MPZ48hdd
LLe7EpTPD5+e+PK2v6QDz4NZsba8vESpR1gezBbah6HdUeUI46Ntj/+oPXCz
FE0GZrxd/yUEIy/Jf7a5T0G6Zytr1C4Iw4J+OfvFjkI0OfXujlW9MGS6qinY
OlaACt1kQm3PicBDcPexL06F6M7FC72FDSLwzD3iQxFvCrLkPxQ9pbMRfso6
eO3cbDHC+OtvQy4ferb+RBh/HZJiEO+09BjPo/nYSlWKC0pBGH/9Jkonf7kv
HWH8tVVjenITYz+L8dfTPft8O35l4Py1RNmpCwPa2Th/nagQJuXZk4/z1uVX
NL7KTpfjeTTaQmXJCXxVeB5N1Z0NP/g21+B5NNR1/Ut+7L/xPJrED4bG9E81
eB6NbroGm/16FZ5HsyEw21qLtRLPn/kqT3p16loxnj+jvPOFYu7OAjx/hvRT
9thh8Ww8f+ZC+YtnR/dl4fkzGjOVaWmKBTifvWnnvqL3S6V4/oyBdJ7BF/56
hPHZM7yzbPlr7TiPHb/147PZM2M4j63MlTvyvYaGMB47aA/vfhZG/2A8doXZ
ZEO5+izCeGwWzwAFEnEOYTy2m/ypG0LVswjjscNfsaeKx88gjMcWTPHsT/86
jTAeWybA+GnZpym0V0xZkcOWH0Z3ZDdZ/NeH5+XMOX/Yvx7ZgjBeu+HXHsOP
qb8RlpczytyWtBxYhjB+u/pGtZ51Xglq0U8xvLUgCI+/HBWdGitGEkD2coKn
EKyuqQzkPF+ENt3e0HdxRQhmd2afK+GhoObHeoGbfYTh6JP/R9R5h2P9/X/c
uGWG2yyhUKE0SKVS5yRJhUSLIlRSUUK0jKaipNK0SoNKJdw2x95uI3slI5vb
5rZ+7991fc75/umqy317j3Ne57oej+dTw4l9LA29qbxS9INTGub0qq97MZCK
upQdzp7xlIYCLrq9LbIIsQ9nqW7lWQTjB+vcNQwyEObF92wP4uXVyUaYFxdi
hExkX/2MMC++uUHTZu5NDMK8+LXoTdujdjAQ5sWrzeXKz1szCC++4FzBHv6s
OMKL7xn+YWtskkT48LNXsosXhRSSfJ8tnlsuD20qIfk+f+c5pqMZTJLvc2Z7
YpUbdynJ95nvL/R+Ol1C8n28Ai9ftv9YRPJ7jCTPDNacSCf5PR4qzxIX7E0i
+T2N4e7K7L44kt9T8/zbCq4NiSS/Ry29ynd5aAbhybeuN3cV31qMMA+e7R89
1bx7GGEe/HTLTOh571GEeXAPt4ZU4ewxhHnwAiM+xQuC4wjz4JvYw9qDh8cQ
5sE3/GMvcsgdQb+c1A9HRIrB90c8cou2N5P8oLK+fb0F5b8Rzg/68MMwjRVV
gDA//jdmTNw5KAdNRm94fChFEl4M9A7/8ykdSSo6he6BUvDIDd0VleII9SzM
kHqcKQUNaxb8Lh9PRXJHF/D9BdKw7Vday5t9aciv7ci6lkxpaG5/1sJVLx0l
9MUnq+suguMb7yxlvshEmE+P7Zu4/dEjF+H8IlWOcsPQqmB0a2zf/FapXJC7
zkMy6Hg0wvx6ZNG+QGtFBsL8eg/0lYs0YiDMr7u8nXG/pRlH8o+qxuctHb4V
E3598Vn+I5cvM0n+kUNKndBr0VKSf8SjO1p4x5yJPBcHN1skccEZIX8rtw/J
qPHCpuurEDccX+LvteVEPErQ/XfLsJQGH9t+2H5kNB4drL3t/riKBxbUsKT8
hhDCvPvbtSsO01rzEebVe3M+Ge0SHkWYV6+8tY8t/3gMYV49PHZpcTl9HGFe
PceC3z3u9RgSStWU/OsrDnWfRo6LnihGmF9/oVHsIyRIXb+iDGgoLwXXx5pu
2PkEoZa9gqaVYVJw84isoZNcGmqQTOvOWyYN1/37tNNMJA2l8NgUKb6Xhi1X
vy/anoGQOszI776eDDYaFsvk20WiGfF5l91vmED+ln5IwblYJBF6aq/pwRpw
8c7+Q4p7GAjz8s/OnutQe8AgvPzPnnIgfC2e8PHlvy4G6HQySV5UHqPJVvoP
NW/U/Msq0eKG/KFOEhvlqPNjkIbran0aDHbc37SsIQ5pnFfrKj3MA1/8eu87
MZGEMA8/su/Ofre+MYR5+DPH9L70joyh5XsinHxKxWFjzUz68ZQ89Pyq4txO
Gyk47r5OZuZrGhopd63f3SoF0/2ynOP+pSLL10Yr2ZbS8P0qxSPz79MQ5uf/
SFgWncvPI/lVV3fU+jp6u5L8qq+CR11W0qIQ5ue1v9FXfSmKRZifNwuKlz1H
7b+Yn3cfPbTDIJ5B+HnlLYtbWqUTCD9v21T5uvt2CuHlezKOfMtNzCf5VXz3
tu1O6Cwi+VXvu6yq4rmYJL9q+w+dX/YcpSS/ylZ50fJYar3DvLz36Zu221eU
kPyqufy9nFNbC0leleYqxZyr7zJJXpWj+E3PDN9Uklf17NnwuL15Asmrun16
7C0PPZ7kVTGWFG059y6F8PUvAv91xB/MIXlVnm+7fu/xK0eYr3/5k97Ca9hA
ePrVDyrf5rT2EJ7eyfOTgnMQC2GefuG5e2OfrUcQ5umXptZzbNEcQ5in/xcy
PBtOzX+Yp3/dtz3sX80Ywjz9BuXVRm/RKMI8fXzk7t2h1cMI8/TRvAc+2XGx
0InLwZoSZ8QgXda+6Oy7VpKvxdR+tytTrw5h3v6iMmtZg3EZwvlaQ3UJpS55
uQjz900z7GSVumyUnhV1gcaSgB6+5kJPeLPQR+PeyoorkvBx7YvbfrYZ6PrJ
M/sqRyThhsrZ/feWpaNKCTvLNTek4KojjquGzqch/ey2O11TUvDEL3D7SE8q
cmFdEh53lYbyr2PNfkylIcWsu5uPz0rDnhEHRrRKBsK8/40JwOPGlY0w788P
RDc8SPuIMO+fYG/L3XY4BmHe/8SRoR18WxkI8/7p3QntMscZhPd/q8VRlxoY
R3j/R59HF+YIJBG+30S4cVzpQiHJA/PamM3rJ1lC8sC8b8vRLT8zSR7YxUsJ
Wf18pSQPjNvWKGKJJJPkgS22ti9h/S4ieV/7/ALTx96mk7wvWe436GFgEsn7
unW6LMWZI57kfe19Nnl+c00Cyft6pl2+4+jaDOIDiPfvPaRtVoQwz/+rfVVP
+uJhhHn+vS3gzrPzowjz/JP9Ga4/4scQ5vmd7Jw3v6POt5jn53x9pWbiLLV+
/8fzN/68ErqzYwS15D07GPtRDJ7bLxIUOdtM8sbOykRkRZysRDhvLGDxlgC+
/dQ8/B//X/uLK1k6IQe5Zw8v8IyVhPwePCXSSenIVSiXt2CzFLwwK17DpY5Q
V9DvjpAkKbjyfV6fw1wqKtZzSZfRkoa3f/OzNm1JQzKRZtWOSdIwZtrp6uLV
6ajF7FqBifYiOGar/VvYLhNhv+DvDUmUsT4X4bwzhkjj6VMeb1D05YCoOp4c
YEb/ILR34hfC/kGLJyx3laL22//8g9IPXmYHDRgI+wd7tiultErFkbw0qbhN
bfL3i4l/4LDVvfqeBZPkpY0ZSi8D1P6L/YNSLav6zZeof/878vfJVy64orZo
rx9HCiroiDMX+EGdB2xPB5+8F4/4vOQ2uqfRoOwW6KmbEI8aT2yea8rhgT0C
4tf+bEQI+wrHSx14S+XyEfYNupeozb3qH0HYN0jT1z+k4D6GsG/gtcM6LUV0
HGHf4BEzVnxV+Bgq3H+/+8Idcfjgz3CUhGIJwv7Bq5DfudErc9EkQ/ILU1IK
hujv/lYahVBzrZziv7fU/nPa/8bFVWnIh0ctjHOxNEwN2yKYSktDe5innWJe
U+fB12vifQMQ+sgpf//C3UQw4ru1a7PoN6Tmr7+y/UEJeARnwr/viEUzn4cX
qlZUgz2dSxwU9BgI+w7L39s67rnJIL6DjWHbMHNPPPEbbj7S3vW5kUny5Zal
WzNO9DAR/7vtefMq3JA1rvDw7KlEZCMVc0RwMw0mnf3zBlTHoTufTgXO6/LA
H+fVd964loSwz7C64rN4ctsYwj6DlTZr6enpMfS3akpPMk8cil7o5S5Rzkej
Nq62WWZSMMfkiuPxrDTEsnr45Wi9FAwcFI562JWKhB+kNG84Kg25C9ylLjyk
1rP//Ie8ej6fbc55SPy8srh0RyZQWUpHB8V+IfHxB8m368tBcYPDcf6JWKR2
xPXX15w6sPUaXfrhXgbCvgQsyz4a1MogfsQFd63cTYKlJC/v8mW5xawAJvpQ
F7+k0Jcbln9/+uv+v3j0ddw3sDGIBsdH+VJOHYlH2IfoGDoiZEbN21ffdFR8
rheBHO/zj5lnjKG3TyoXKU3+f172Xtunp3JR/bhOOr+vFDwpkduupZ+Getp5
xa/wS8MT3mX3rUdTke/dGo5LrxjgrPu6KuXFEcjvQcMDBbsioFUsuE6zJgYx
40RfVf6uAuFGNoOyOgyE/YuXSz7Iz9oxiG/BK2fzrDGLSfL9xHQdgx/PMJG2
QKx0kQQN9u9X1z36Jw4tl63gPKnEA7u+blqo/ioRYd8iMUjn1v3SMYR9i9Ci
Eofl1Pn1+EjQ4Ko4cWiWp7dKR7EA9Xn82HOjUAraMegcIaxUdPHs6wPhe6Th
RaMxMWSRhoyvcRoFrcwDHUylHtX4aORYbfBldc1v8ORG2KCcGgMJC9jomyU0
gCsfY7VrDzKIr/F9x/wnd5FSNDjEeLOvjBsqz4gc3KEVj87y/2TKtdCgU8yo
uahWAsK+xrGIxr+/qXm4NWnyTuZXKSiob/Iym56G1FYaq/upSMOx62HawUvS
UNErRtbnL6XA/tl526gnsWj1q8q77mU1QNS1ZSaRmlex72Fwcffa7y8YxO/w
Ml9tF8likvzDvM6wjpMVTPRQMfrFfjMaPMmXs/XevziE/Y4xJYfyvaNjCPsd
tyWtak/1jiHbhCMh8zXiUOenctjsiTw0rnNaULNHCkZIT8yfoeZN7H8sDIAW
F5bmk3zFR31H78mV2pJ8xd7R/ktHnX8i7H9ErbBm/EiLRdj/6A05+AFQ8yX2
P14/ax8s+84g/sfX1gCH9bPxxP/gXdGl1XQohfgeOov6Yi2D80m+ItM7Rb6/
oojkK5bcUohTGi8h+YquMzSpKur5wr5HxznP93KpTJKv2L+8jDticwnJV2R/
EQhlHy4keYrLpiINv2dkkjxF6fQLwfdQKslTzL6z98va6wkkT3GT2XehKe54
kqd42C13odPRFOKHGKtcf5Y2n03yFL8WhfQbGZYj7IeM3bJqXDFWT3yQbVd8
T9/93kN8EMmGJc/E7rAQ9kHum76kKR0YQdgHUfz6c73sqjGEfRDfJpUPT+bG
EPZBDj1OtZxoHEPYB3GQKHN+WDSKsA8iL7vdeXfPMMI+SMsF54uzi6l5dglT
Q8ZaDIoFnIheUdlK8h9/LSj4wwisQ9gXadDnUbjqV4Zw/mOr//Msg85chP0R
rVOGfYJd2UiTvf5Kea8E7ACMsw6SWci2rpDedVkSXljqtLz7cgb6eujJXMCg
JKzfJnBWbFU6Mj0xtHuTmxQcCFX0t3RJQ8tSZKx4xqXgRrsLewqp9Tjp0JB1
mpM0XNQienaoKw3FXTuTdmFKGp7JvJ5gJ52BsK/Cp7d36khbFsK+inx/6Ylz
NR8Q9lW+GPFKL1GPQdhXKeJqE1DbzEDYV7kUqTFw6hiD+Cr2eSc9aA/jiK9i
FS3Jl9qZSPyU7Uvvy1oeLCR5lVq2fK9u0EpIXqVo+OWZXSFMkldZZJy1Xo5a
77GfEnfgjeBFBSbJq3wdvI69u7eI5FFq55jc1KfmK5xHyblLiV2Xk0TyKAty
Pzw0FYoneZTWO378sItMIHmU7/we1mdPpBOfZaPSzUyf3kKEfRTuALqyDfcw
wj5Kaf6wfcHxUYR9lPfBRTrKv8YQ9lGYZmI8lSLjCPso31y0kj87jiHso2zw
PiJiMzqCrjplHUh6JwaF/Ndesrf8Q/Iwf1wtKO8Lr0Q4D3MD37kLRkGFCPsr
r3IycntychA0rNgVECUJ9yeH+5hkp6PPnKzkhxukIDP6/ykLhGzbT5SEx0nB
lwJSXBlcaejjjm9BmzWlYevFvK1q6mnISrRBdUucNJQ7/m7RP7l05CJqbnxK
axFs8Qrf9+NgJsJ+zPnVE5EeArkI53HK76/7Hr/tFSpct4X/i3s2OPpM4Nv3
jF8I+zPtGkylQBEGwv6MQ9rUQrv9DIT9GSuW9ZFRvjiS53mKxXFbzrmY+DPa
Cb8XLTdlkjzPi0M7v3tT+w32Z/oG+lbLXmOi0t2hbRFhXDCaparEsT4FpStO
7Lv+iRtu3D/wtSqQmp/kEoUl42iwY4eop1BwPFIIfbpjQRoPdB58ku/UkIaw
b2OcmGBukpaHsC/TezL7ZFfjCMK+zNbnDP1ilzGEfZnGUmOBIur+Yl9GyPbX
6oU/xpCK+E9TdU9xWJezY+XChyUI+zO2B4v172nmIpVvwOIJXQr+KuH7PZWB
kMWycP7Bl9TPnAE0O+p+2MzaeMhLSsOu6rl8QY409EjjX86NAGnYohBmIOuJ
kKVN8Wm1hwng1Wp2ouXxr0jXqN8jhqMEeB/celpQORaxVm1lPX9WDQ7y/zlx
fjcDYV/HY/fj/C5XBvF1buxPXrJ0fTzxc9aetwjuqGaS/NP+p5b7XQaZaDmt
O3+RAjccOxupnuSdiI6ZjujdWEuDcPtBSw1qvlTbNe/ySpsHxghf5Q/anoSw
j7PPuM2W588Ywj6OrKvSqSRq/YXBir/qM8XhS+WtDfPW+Wj5sXcydw9LwTMP
JOncZWnoUoTYU6tqKVh5RHMPF3Ve/uc5kmRsKg1DLW7kl7unIezv7Liq9NV0
bx5SUym+8O9EJqg3HONhVkQhvutlwf1vy4FtdHywbX8sivrzuvmQdx3YUv0r
bzk1X2Lfx371pydj1Qzi9wwa3xES5i8lea6QqXDldTA1T0hNCm69ww2LxkL4
izgTkEmA8hWXABoU1PWsd9CJR9jnKfYqEzzEP45oz3W3pVSIQE5vQ+HDeWNo
z5cTcetHxaGPMmeYzdVcdGxHcbiYtxTcP305zMk4DWU27hh8yiMNj8rZ7tg7
lIp0O+79WRcUC4ZjeacUDMLRZz2vv6w/heDausaui4kxKHPrsWsgoApYjcbZ
+UAGwv6QBO++9QJnGMQX8rIWO9CfwiT5s1/8nfTUOUqRxp5R3m1CNNhd+2Xz
hY44VJzo0DAuwwMtBrylBE4nIuwLyazliessGEPYF9oZtGDsHPX3JSXlmLF+
icOiLwsCVe0K0IXczevu5kpBXRTp6jOSSu2Xpauzd1H3S9Uwd8Q0Ddlt/vz5
QkguGEgwbnL2iUanzQN8X776DTjkxx7cUmagZ8/vXuG+3gDcB1TFVxoziG9k
9uLT3i3UefLf2vGHSXnc8G3l3J/ne+ORaPi+CEYNDQYqtFtvk0xA2DeqF6xT
H6PmS2uu2xeKPkvBn9VHt1+WTkM0ee+F35ZLw5vqvxt3S6ah9sPmsq4KpUB4
/YZjFu6xaNkS2bNd/jVgm4CZ8VVqvsS+klHVm5sJfgziJ9k7fuyU62OSfF7+
CqWW7lom8jo5fC/ZmAbFPhe2zVPzOvaTLgT/ynNnUev9f35SuNebdwWD1P7g
6cmX81scfvgmz1D2zUMuPv3D2v+k4O0mhqsFNV9if6m/N31V1EgeYt06aZO1
pBxkm677hGpiUdxwk9YXgTrwOT6v4A01P2KfyeL+ppoI7lIUVmqp8vEODT7r
jNLPXhqPsM+0P0Hy7g3aOHrfaD+0v08c6vroORz7mosciyPDi2aloEdFhI9u
Xyr6qtO5XVKyCpzgvQW8tRnoujnDdgGrEZyq8V4oa8kg/tOBqw4m1gtKkXyG
S5fMNDf8LHC0fG4sDmHfacVBo07lhePo3OF9cy/SpOChOvGdzuxUZGSjZGy/
6DeYCrNWjZNloNefC0qPztaDV7nvAm0NGcR/kliRN/6Guv8VEa7n38Zxw+lP
gXWqjvEI+048W9ZFnKPud/TCsZx2WWm4+WfQq2r+NCRR8aFEgs4EK3I6v3Qd
ikV8St9Wp9FrQHNgIF80dd4+Ifx+Nra1GXTvXcfNd5uBYq446iYJToI0oQ2f
ZFqp83Wdk20goMEilY6g1po45LBkp2G6lwg8u9a0oWBiDN0WLm88UCQOcyz/
vghg5SGnxRyZRs1S8O7+DkXHzlQUUWx6l4NWD/bsGtnIt49B/Kk563wr7oWl
CPtS0kK9moup69N/xeCG5Iw4NJHWEXl0MBeJ9ZdtOrZQGs7unalunkhF9RoF
sefEq8E630uxF3cxiE+Vc92g9tEkE+mVOCsfl6NBU8EDL7Pq45DqpUzTSksR
aHLCMOgtdb8dNq+wcmJKwb6mnbsWDqSimyY8eelSlWAibTh4x3rq93mBJT/H
G8Ca8tsbck0ZJA/axidV5oxwKZqMvfKlvpYb/knrVduhEo+wn+Ux/K3dgbr+
m8Qfh4mJ1gJROGDeT70/zzouf2qwpsGhGTunuIE45DZdr7R6QApuMbTrKqOe
b+xjLflwxjRwfz7Jl7ZX3n/ccuQIyZdWCb2W/XPlT4R9LFXW0sna+FiEfSz9
u0b8atTzj30swbB1/ru/MIiPpb3Pd0SAFU98rLrAARneHSnEv0Juan1yT/JJ
vvT9xjxp5/wiki9tOpLxDw2WkHzp1emaQp1sJsmXXin3yjQ2nUnypSv5eIdT
YQnJl34qtv3dmVOFJE96weYPiYYVmSRP+sb0sWsv61JJnnSkWca0q08CyZPm
u3qtSXwujuRJf2cY5qENKcTXcrykUGtZk03ypFs8brOWrSlH2NdiNuuVOhfU
Ez+rUIF7Z/2zHuJn+RXZHDRxZSHsZ8kVzAcV7R5B2M9qbr8TNLl8DGE/q/7z
mvDumTGE/awW+31J56j9HftZgy5f9zqUjyLsZ1WaZATRRocR9rOOmzjJpKxg
IXj5n7rcSTE467rWXHygleRfhyW/6HfKrUPY39L0MjdN/l6GcP71uN6bwu2T
uQj7XKJtj/09BrPRRcmhqfhuCbj0Ri/dSjYL5QdvjRq+JAnF5ettgtwykM6B
j8eu9EvCbKsNg21r05EYR1zi1itSsHdE4bL6tTQkpLWJKT4qBZ+/ffxShTo/
NS6I9g1zlIZTJ8/6FLSkIY6qKk6XCWm4fVEpz1/hDIT9sX3zt7NZv7MQ9sde
+3nyGVh/QNgfu8X4sZZLPgZhfyxNWS319UYGwv6Y5BP2CqWjDOKPObkteNbq
GUf8Mc/FJZV21YnEF7Pd0J9gp1tI8rr3p+87Xz9dTPK6N/9TWr3kLZPkdce+
6ucVEyoled32MSOXryszSV53GDN+unK8iORxr7OoWsBVmE7yuJkxb/fpNiSR
PO6vK6fKC8TiSR63uNIpm+xXCSSPOyy+2GGwMZ34ZYW7Pb6cZBQi7Ic1FKYJ
LZ0cQtgP4z1yPdHw0CjCfpjq98meku9jCPthDX/RpkOi4wj7YYj9OKeLmr+x
H5a4UjXhz/QIys5rMEoNEYPi0zcT5/z+kDxw3et2NTbFlQjngb+T97edzSlE
2Cdb1O3jUFmcg97TdVpDfkhCiwfHXdwK0tGOGZrUeXUpqLLLM/vjHoRWPlDY
GRkrBR8GKzoJ8qQh/6RcAT0Nabg78aim8Zo0dDsz0FQuVhqqqsUMnZdOR2kX
Cp9f2LQIeo1d+Risl4mwr4bGdcIfTOQgnEdeXtY67CXxElX7+TL8t2QD3njp
yzOffiHss9WlWgqwBBkI+2wvz5c95qLOT9hnU1G0LtLkiiN55uPKjx/eP1dM
fLatvi9O1BoySZ55hOivnfzU+Qn7bFaWBRUsdyZqnHA5zQjhgiULmnSG9qSg
bTuld2m854a9YW6bvMPj0d2++9Mtv2jQKOCSlqJ/PNJNT7OUSeKBA5kDrRI/
0xD23+zOWhlvfZKHsL/GuWdU43rlCML+2gnxfPCIOv9if02z2fCUFnV+wv7a
kTrJOTvq/FzrmsUn4S4Oh//U3LqbWoKwz7Z+asPRi9tyUfqnQ/GXRKTgQJLe
zvBChGSzL7iPBEjBb6xCA+6N1Pe55tGnJi4NVda/4ayfTUU/2z8PnnwmDTP1
PjmGuCCU/Eyp8pFgAljS87Azfe4LMv4OVgemFIOf1vO2P2ViUU+fhXWBUzVI
sBo/OafLQNife+N99pSFC4P4cx/Az7V3lscTXy74Ky236zeT5L9fzFq5p2mI
idTj0vaukOOGh/8GGK9/m4gqL4uDDatocCH3mq2Z1PmJQ6zE+pQWD3xFX+p5
a1kSwn7cZvXanwGNYwj7ccKvvOb2c4yjQY7Ntqnp4tD62OknG73yUYoJw+W0
qRQcNNzu5lKdhtYa1NDOVErBAxE7R/9S56eKaWHVkwel4Y+a7on1V9MQ9ukS
+it9fDXzkJa3/CLmokywXsM9WiQ6CnFpjwor3SgHK3yDMvd1xSKn5avGVO3q
gOsq4V3T1H6L/Tv+v1qXj5YziG/H4Lu5roa3lOTZb5w/2cB8z0SSGxfRhj24
oWDQkcWNIglo5akxa+hPg3n6MVtkt8Qj7NeFHQ9J2sw3jgpFXAZzmSLw+IjP
Pe1C6n2PW3Zv87A4fAyfXay+k4sWtfovkb4nBWdoqZWRh9LQj2PmFu+4peHt
wccprYOp6L1kk5G/fCxIXJRlANs+o+hPFY9rAwvB4dEdfX1fYlDKzI0eF5cq
kL9pQ9JnwEDY52t3492x/hSD+Huf+SzvmCUySf6+Yn79+hbOUvT9jATHCC8N
vuzf+ZG7Ow69e7AtP1OKB77fyh+ssz8RYX/P616DBxd1/sP+XuOrCGlnAWoe
lq8X/v1THPJauj5Sf1SAVp2fCXuQLQVzv9lUKY6lIo2GnjcVO6XhBwF6rNaB
NOTyctLE1DwXBDkcXmnoHI0sZRNmitx+g7amWU+uFQx0qFbyUa15A0hSddlv
c4BB/L/x4w16LtT8bG0oddspixuu+/6JO9UkHrVfWfTi1m8aLPk6ru5LS0DY
/5Nbu02qj5rnln3W+1P6kbq++aW6Z2XSEOtN2I1ERer5WdWyS0eM+jk2Mt+i
iQmEkh6apTjHIpkmUCt3uQb4M3W1jan5D/uDyfcFYs/4MogvWBp9qSqxm0n6
CU6KPNgg1MhE0+5iHs4GNHg6QmHweFMcwr5g9RW/mlsDYwj7grUME/m2oTHk
0vY8NbxcHMp1DzCtPuQhzbXRtjvbpaCDU2K5OzVfYp9Q2yPQaq4pD/XsuvN7
croMMHhWGpSVx6Krmy8d8OitBQJa4dpe1POM/cLHt2c2SnGVItcQNUlHT2p/
a3t4ZO2ieIT9wsj24uMy3OPoavf6dJMecfiqJq/XLyEXndDPl6yfpuaJ0Vqw
szcVfaQJ/tw3VglOJYYMm2xjIO1QPfeGskbwNPD41NMTDOIjuj1cqBZDvS9v
/wS0VIxzQ1WHID/B6TiE/cMGw4aQPup8oDIl7PQ2RQrmfb5288xMKtJfvifj
/WQF+PWB/9aXxQxk3mv+T625HrTfWLW52oBBfMTF+8KWXaXuv1HeSxuTaG6Y
KN5pFXQ9HmH/UD7gSPES6n6HPBTVHJGRhvo6A0navGlomfr4tZniEtBkcHn7
xN5YxNXBDBoZqgaz/U3LL1LnJ3lTDQmfrGYQLLHxyBJPBormyD0xxj0J5m/E
cJ3/w0SdE88sTbfR4CebLMFman1r301n3r4pArV7I26GTo0hDaeOpxoF4vBh
BlIrF8xH6qnZG00bpWBX6xSbRZ2fztM73la11wFadCxvzl4G8Rn9a168UaHm
GewvhvB5Ju8UGkfZt0X3ybLFYcLavBlN81w0Z9f30VZQGr705bklPp6KKkf7
VoSOVIH6bGOvEh0G8RtVw581vabm+Yze50vFF9Pgi/DXIk2N1Pv85lnlS3MR
uNxp48IunnGk1tD927VYCsq+Xye3j1pfXCVUtcbHf4OtJiy4fS11/sgpU79b
0wDuKDffzTNhkD4M2VPZszPU+cnl94v3zyq5oRmvmLb4+niEfcn1GTZXv1DX
f31VlLg+qwZExptLVlHvjzDtWfBzCxpsevOAw64nDm0KDX21rk8KBhv4yDyh
nm/sRwY8PJrpsjEfzaQ/vanyvRYsfRBdYEo9z8u08wd43WjwxNvtZ/cKxCNN
OD80PiEFiz4Iat3tTkVvH5g8ZTAqQdS+0zs+azFIP8foAVMZukAp8petKtMZ
4Ibta/+EbFoQj4x0YhvXrReBj6bO/dSh9utmF3fxmtB6IL7E/VoNNY/4hcSU
BExNAjfW7ckBar7AfmX9/gZ3A2p+G7eT8rSMrgbdJjMyRbsZqEnzt1GWBg1a
Rpe8WUA9H1E0I7kTtVJQqj9MeSv1/Qbe8uZ7fq4DH6+01ZtS998qdQHPirhJ
cERQtHcN9f2wb6nbJqF8klpPHYNed6qOi8MfzpP57xxyUf5VTT6B2CpQ41G9
9sROBopXqRS5I0qDT77x+qi3xqFIRedkz3wpaPjStpxvOBWVGY1Yrn3TAKTn
GzonjBmkf6RGx1Sik/p7sK/Zc51/WT91v1aaTY5FR9UAFeRrHEjdL9rOisfc
h2lQafSZ/cK2OMT4p+Kp1SUF7x7a6n6Yul+j3w0UK1XrwDu3k6fjqPtz1/jp
ltR5KSjzw+umVX8qWikiEG2wZArcarwX9JF6X7Gvae/kavKZ+jxha++kB+o1
YMm7c7X91Ps3lGRysW0XDe5wmZ4xrItD0Ve2Ge1rkYJj3010eKn35593psNq
pXqgbzyyynQfA02usehurJkEg6cdpfMWliLsd4Z1CV/7Q60vLY6fdmluqAb2
+x9ZclLzTuEP03UfFGhQedXUbUHq9/94btXnUCYFrVkFjzr7Ukm/SpofzwyD
+n3Y9zQ4l6+sQH1f7YPn1JvW1QL314OPuam/Vzrv4HclWxrcv9Vg9+WROJRw
VCpqJUsKNihO3l1NfV/sf85IsIX+WOeTvhanEKGVqgqNpB89QsAo3HC+h/if
w6UN/kn7WcT/NH6+9MgVdRbxP68/MkuLs+wn/ifr4dxgYuf/+tGt5LQfCoW3
E//zmtO/p7QzLcT/3DOYn77Yso74n3XbfPuea/0m/qfwCgeYea2Q+J9Hj7/f
fG97OvE/N7RnPdCZ/Ur8TyHWd+6lEW9JX8vHBys9sssSSV+Ltnuu6JrRPNLX
8nYP7QrkriB9LQPBWadSPGpJXwu75cIfQacWgP1P6zOpOyZ2dgDsfw56CEqo
dfcC7H/Wz1cgCe1hgP3PXUliQ3wXJwD2P9VqWze2Oc4B7H86Zzs+e+HEBbH/
Oal/dt9XMxrE/qeLm0Vl5VoaxP7nhv2ZKxn2XBD7n3u19R/byHCQvpZxIxEF
ozczpB9d+uwQTIj7Xz96p92Cz6YX2KQf/brt7ttan6cB9j83OjdwSA7MAux/
2nWabTA8xUH60Rcfyvo9v42T9KO3fOt801fJQfrRxbZmXq1rmAXY/6RHZg9G
dUwA7H86Sr6qKJgcBNj/tNu57+XCun6A/c8Jm2u6W6xYAPufL1ziDwb1DwHs
f+ZIhAfp3hwB2P9cMPHc4Y7BGMD+p96U78VVyyYA9j+LbAaFW0WnAPY/o5cZ
zmdbTAPsf7osza3fHTMLsP+pfkDEx3szB+lL/8bNvVDrTQfxP1O5fUwbEgeI
/7kjKVWb7sEi/ucGzy1zO5cMEv+zbbdYZqtGL+knj4ub81+qUAWwf3ms8cns
8I1GgP3L9K+9qYUJrQD7l1M5d5U6TnQB7F8uZn7hftgxSPpVevaqa/p+HQXY
v/zK6bcLMdkA+5fe64w69Ho4IPYvexbYiUu+44a4X2XLvZnX9X40iH3MOOkm
zc4L3BD7mIqXrh8P3cEJsY+pIDmuMqg1B7CPWRlXe8rMdRpgH5M9HZk7dJQN
sI+pm+NVJt/MBtjHZB26E/U+agZgH1N1W33Wept50q+Sa6TwPpz6vsv2SzTP
LBKD0jIqSxWpz8d+JvfNGsReyAGxn7lZfu/N69LTAPuZ2e7GBv/ER0k/CywL
GF3+tg9gP1P/YOUead1BgH1JneynU0Mi8wD7krcN+NuYsq3El+z4e+yqtHw/
8SWVXyZwrnRjEV/yWF4/h2z5IPElAzQPHOI70Ef6zxVLGusGfX4D7Cu2OB6+
znO5HmBf8fwNqfnex38B9hVdepYGWGb+A9hX/P6YGTdd1U/6U/oMwmaizo0A
7CuGWa5I1hKfAthXfH6h70iaOAfEvqKI/4/NwlLcEPenHG5Ik3/kTYPYX4w+
8LvtYg03xP5icJKfxbNqToj9Rf7W7oDvavMA+4sZNvHj76enAfYXG/vGPNKv
sgH2Fw830mu937AB9hdPzv0xTFOaAdhfpK3Uqe39PAewv3jRwEMGRHLA8wtD
NXvH6XDjEZnm0L2cEPuMC4vuWZi6c0DsM6pfHJoxezhD+la8jqocLlswDrDP
WKp0+UUCRx/APuOc0eje448GAPYLK+XH3VOs5gD2C1dZMHqrH3URv1DcSMpo
X/Mg8Qv/SGy9aXCGRfxC+QBVOXP9//WriywfXa092gawz7dK8zx7QLwHYJ/P
QWbFBbOFQwD3m9jbiyh6xHFC3G/S3n7oc6UQDeJ+k8+HxU/uc6RB3G9yds2r
c1ZDXBD7fkHv+b85fPlfv8mvlJX+50/MAuz7vbKdkZ7mnwbY98tzHN2UYsoG
2Pc7Za5/VE1rGmDf78/7ecfT+2bBA2ndWZeNdHh0zf7hIiEO+GSttbI9gw7N
OOUfP1jCCasfPPQW3kat93ulbz2V5oTYD1w7XOZxQ3QeYB8w7HPD10yRYYB9
wF/nHF6GbO4H2NfbZl9RVovmAfb1TsSUckmpthBf7/LnfI2CpX3E13sqX1Zk
ZMsivp7epKu3uwiL+HoLQ1tqc2r7SF/7EznRTxY5FQD7ckt557iHXOoA9uWO
vRVgbZhrAdiXWzs9kSAy3wGwL2eanFd+vqGP9JmEWzX63C0bBtiX4w1vy3u6
fRJgX27b/kbJLIN5gH25SFb5gi15XBD3mZy5rNbseYUGsT9nydt4doqHmsv/
8+eMzm4yV1Hkgtif+8F3Xub0j3mA/TnByR0DbntmAPbnEsSSwkQD2AD7cxcu
rnz3zJMNsD8n/Z1/uLd1GmB/TlBuRKJu7xzA/txZcXPDzgfUdbrYfrK1gw4v
h3W8L9rNCbFP16Gh2qlMvY/Yp3N7MvY6f9Ms6T+RWFYqODE5DrBPl8stGas6
3w+wT+eytKN3ucYAwH6bV6KscDL/HMB+286Oteu+KnUSv01cTmlmu/kg8du8
HQeCzK6wiN92Z12gxwLGAPHJvL0cfY4cagPYJ7t1oz4gS7MbYJ/s5ey6PyHu
LID7R/SWflFaaMIJcf/IotaYiQP13BD3j2wxb+rZdZcGcf/I8cADqRvWc0Ps
m3XYddtcGuGA2DezKpXqD8mbBdg3u8IIMeXbPg2wb1Zck651wIQNsG/mZqA8
6ss3DbBv5vqs9Lr4zAxIcW91D15Oh7b3P+fnpM2DmaabVxif6LC0N3r3JI0T
Tnczo3lWicFrPjk6Jms5IfbTWsfO9QUGzgPso8Xmc9VUi48A7KPtSN8UbN3V
B7AvxoCT9m1n5wH2xVRO/v7n39dGfLFuXx1qPe8nvpgp96ZvTdQ8g32x1bd6
7LSvDyLcNyKw5YTXHUtuiPtGwn3Sefqe0GBoVKiZ1T8BWJF4TbTxAzfpFymx
2mP5jzENsK+lbiL5PPk0G2Bfi2PceIaeyAa12rF0/ft0+NfpYvhoMQfcHWnG
P8orBkN26tqp7uGEl/Li9GoficH8ctrTR/ocpI/k4eC7wF6DPoB9LI8WxuH4
qm7iY31L/+qZqcQiPtbayk/MG0YslJ5ZP+tuTr2fHD8XmW2mwfiZizQhWwEo
kL5T/LkpjfSJ1L8S+rixiQ2wP3W6T9lG7gQb4D4Rgxd/00vsp4Gi5+46xRw6
XAZ0zGfXUPdLWfeEtIEYVJGzC8yb4iB9I1ofn3SVC3JA7EtVWBRJjOs0E1/q
R7C2fufzXuJLVU3PbdAzZxFf6u1o47JlCiziSxl2VvzaJduPcJ+HqrUDf9up
CoB9pRPba9SWTtUC7CtlmhgXRcW3AOwr3f7z+nNGaAfAvpIc4zHnHus+0gfS
ulHOM+7eMMC+0rsbEx+5qiYA9pUubF2xt6N5DmBf6aKazsNXwVwQ94E0qknk
Me2o/ew/f0ln37VTyktoEPtLYkeLC97s4YLYX1rqUpywYGgeYH9JY8+lho+X
ZgD2lxT3FXRe/cgG2F/6MLXycBJ17sP+klLPeyCQPQ2wv+Sl2LQ1a8kcwP7S
+6bkVydcqblsqfeYRRMdJgt4CITupK7Tfz5TgWvBW8MMDoh9JqXkwwpnfGZJ
fwgzaVc7n+MEwD6TNcOfmTgzALDPdN2TV/kKzwDAftGyOynuDs2zAPtFPncf
jkbY/CN+UXfvjpc/Fw4Svyj9tvipL9dZxC+yFfOan+saID7P2Lnf9XwL2gD2
eR5Wi1/rzusC2OcJrRS0eb2ZBXB/xyJnNd+H8pwQ93co8OXlKKVxQ9zfUWn8
UzjHh5pb/uvvSFxkpHvDiBti3ycx+fLfzkWcEPs+hQ0np73nZwH2fVxfbMvr
OjYNsO/jppbBsf0QG2DfZ7cMUzBymA2w73MlCWRPVs2A6ij1NHVZOtTgeJr+
2X8exDB8ZOuD6bByf+IanUkO6Pf2sv4tBTEIqrqVpDZTc/N/ftAdJSWmStM8
wD5QnUKK0qmAEYB9IIeYf8JKGX0A+zorufRedG6bB9jXecd7bIcCfxvxdQZY
V9c1+/cTX2fj8b88sjdZxNdhB0+npn4eRLivw2upkb3cNm6I+zoWX7d6MkDN
DY59x7hCqgWgvMpSCW3q+mJfJscn9+58zTTAvkzyYg2fKgc2wL5MUu818aAI
NngikZlg70GHGwzi146mcMDaEzMhl+bp8Hpj7S8Nah4OkV20q/0utR6ue7ww
kjqPY5+m/laL3K+VfQD7MLfmtAvgxm7iw2y/uyRBQpBFfJguOYvAGGo9ecfd
P923jx++jVrhL6NEg0aDX/+oHBaAoh0rzkzb0Egfx66ubMNS6v5hf+XwrTJZ
Uep8h/s4jDwidrccnAa1R0y99qTSIR9zfnD/Ck6oW/tv6NkuMdhnvvihHz8n
6etYoSPYkds7D7Cvsjzx9NulH/qIr2JnvFm56xK13p3jctwbyQ+bF/ILpHnS
SN9G2xqFvR732AD7JWs+yPrV+rLBTOrOQtsBOjzQkr3huj4nxL7Jk29eFUs4
+gH2RzqmjsXFhQ4Sf8RqrvyW5kUWsrpHnyxczQ9fsJ6r+I1yQ49KxZc2GwSg
8/FD0eeodRH7IIvvxHcmKE4D7IOYLf9ptYLa7/UWXGL6f6fDwhSN7WminNBu
i5qcj4YY5Nof2FiuxAmx71GWamvm4clCjSFi3NWD/PBA7MWfj/xppG/DrVfL
1dGCDaKn45yviorB/aK2sTd2cULsazxMTBvW28IivkZV0+XXcZCFWm7lzwuf
54d/7osa+eylwWUCG1QHXQWgFZ/9HxUdGsQ+Rn7c1oVrC9gA+xi/trrP/LFh
gwvhmzXmiunwcfWL5c82ckJ5t/e5gYfEYMnOYBHtLg7SxxGslnQ5VoEDYh9D
1Peg7xnNJuJjcAtHKsfu6yU+xq2ZtVwmpiziY0x6ZFpdUWURHyPj3ZnF77b3
I9x3IcwIF3XbUAGwDxG7l+tKenItwD7E41e6HZnU3I99iCJ191eRjh0A+xBV
e0xUppb3kb4M524DvXSrYYB9iC+/yo6YvJ8A2If4OBXw4l/4HMA+BGPG78zO
B1wQ92XQEwsmfKyp+eY/P0Il7q7rOuqch/2IW1/NvDeYU+f4//yI6tS8BGt+
DtKXcfle+9p9d2cA9iOCLqp9sPjOBtiPkDu4wKf2EhtgP0JZ/2bbXOw0wH7E
8dObRppo1Hn5Pz+C5rwxrd2eA15wO5a+pI4OHdsLOWZ3cELsSxhnCcoYFXFA
7EsYfIg6eSZmlvRrWDNmhAW/TQDsS9j+3ik0fH0QYF9iSDbfWGuwH2B/oSe0
ObsyfxZgf0H43aZjHPMdxF9oUfml8at9gPgLj7IC3QKp9RP7C8a1qO4Y1yDx
BXb+S9LR/9MKsC/Q5bho3ZpnXQD7Aiq/v7nxSbIA7rfoc9+T4kHNw7jfopYR
PH30JzfE/RaP3U+dlH9Mg7jf4vHTyAFDC26IfQIh2UdPU1ZzQuwTWK5zthSS
nQPYJ3h6jLXs0tlpgH2CkU5F0+bDbIB9gm6Hq2hrF7U+/+cTBGRsEdfMmgE2
+8yap6Xp0PJvtMiVa/PA7z3dse8NHcb1DSX4D3HAmmEdcSAnBk8cMM+r2MoJ
sX9Qr8Ml3jUzD7BvwNu+0UWvcgRg32DAHvYHfu8D2AdolNkc2btiHmAf4L1x
ppxUQCvxAUbYi6Q9jvUTH6BuuX9u1zUW8QFC96wT25AyiHCfxZHPpqwCFW6I
+yx6vq9y8aH2fzMfRnUKUwBmd512nCnkJv0VSf5n0kK7pwHm8Tfpq+WJOrMB
5vGNeH6Hdrxjg/Mce4U8r9MhvNXm+jOWAyowSs6tmabD4lN7tYKo/WtTnv7O
Hi8xuGswmuunIwfpu1CQGQuIFO8DmLcv0jffI9TaRXj7eYdAq4XTg4S3j9Jn
L9hoxUKiy8evL9/FD8VPJShpLaLBt136hvEGAlB67cUbnedopK+iy/zDoMYc
G2A+PrXSLXMtdX9xX8Xis/0/mnWnQaxO/W+zRDrktfhX6ruMmnfWJ6QYAzHo
m/rQMZ9azzEPn8esCyivmgeYhx+8J813x6aP8PCXLA6usLvAQvdt3jXVfOCH
Ox3Wb+m/TiN9FCOSa0oePWIDzK9LqcUsfUDtZ3pS4i+W99Bh/pEFx02p8w7m
2Vvr+w5XePYDzKffbhLmq3cfJHz66c3J/hxOLFT2ScaNazk/FDSYdvzeyQ0L
S9K5h1YJwJHyC0nLvGgQ8+ZMXROnH+umAemneJAzz0ntXwrDYwofvtBhkPmz
+SkBThj9dLZzz1rqvKn5p3avKifEPLnnqtQ+R2r/Unkd5Xi6kx9+Z6VbeVP7
F+bDX/PNHWi0ovZj0wc7NgmJwfSouefeuzkh5sE/res83rWWRXjwcpnGwoI9
LGQcVu6hZ8MPNwYu/RoDadCeu/yl+0UBSLPpT5bdT4OY925Zqv92voJ6H//j
vRV75/T1T1LX73naPdECOqw9LD/bq07tv6VOT82MxSC77ZD1Vup9xLz3UIRh
S7YUB8S890Kpox/eUM+T7OHGhNFn/DBK4mHylUs0iHluruPrRviD2ED2PpdQ
Z6YIXH0ceE9eo86ruYxV7/7S4TvZNWfbqf0Z89wxJcOm269S80T6TPNCGQG4
IqyvrMybBjGvXfy23mGhKRvo6rxzz1ohBu/G/bvXq8EJMa992Md9TaY7tV/6
9O2/Vc0PJR7On0/0o5H+iUUzNx8Ln2MDP9rqyl/cYnBjjsMyG2rewTz2kquR
hhXSLMJTt9pXlJ00Y4PZ88VqGzPocOby+Sd51P2Ud9pZJy1TAbZeadYvd2ah
gUunuZJj+WHnTN3v4Ts0GHPGcT5imA4r3L+V7KDeX8xPc70xcV3g1QcwLx0V
HJE0cY6FNBruqlRuE4DmUnHHFFxpEPPRtalHBhOo5wvz0LxiJ035qOfH/5PL
iz2T/LCJ3/fg7BMaxLzzir68eDdzNjj3oSMiSYKaHy121dOo81lUHtKLDBOB
7yPzR9ps2cA/Oaq5t4wORSwOew1ocZL+iaMfr6u+U+OAmHd+pB6pavGtkfDO
p2vufd2zopfwzpLeenVvD7AI78yk1yt5rWER3vlfsdthTaN+hPsdSj/ZKBxe
UgEwb8wpflJ1Q3AtwLxxeIbpU6s7LQDzxmol/rx6Zh0A88YiD4KCuHj7SD/E
09RvG6yNhgHmjT9dMop65z0BMG/8dPbxxjOP5gDmjWnfYvhd3bkg7oeYenBw
2w8LGsT8sbFNwEfhVTSI+eO+RxvuuVFzE+aPy9U02pvoHKQfYjLkzfF0vxmA
+ePqq8KaM7/YAPPHd2KXOvtQ5xXMH5/XNaM9/z4NMH98d4Fv/pWpWYD5Y9qB
/TWydhzQXynjE7uaDlcDobiH2zkh5pGXtAqEqpZxQMwj80yz6b/yZkmfhIrl
vvBz+RMA88hvbfSEehIHAeaRN1mu+LmsvR9gPvjvYKaoUNoswHzwo9Ffp62K
OwgfrPY989mt0gHCB1cU1fPbUu8X5oN5C80SGoQHCY/rbtC9irO4FWAe92Nt
ctx1ty6Aedw08bv8TdwsgPscdmrY6NtNcEDc5/BGfrlpTjg3xH0OE6vfQ1Hq
/cV9Dh+jN/x7f5obYl6X2+WQkRo1b2Ne1yr7Lb/TqjmAed2ywEd5NRenAeZ1
my5HZNYdYQPM6w4kuNEV29gA87osQb477YkzQEXaYaBFkg7Z5SKCVQ7z4KZ0
1ZuxV3QokB7KrzTAAWdCvk3KLRGDB31z6Q+0OSHme10qb/jrLOCAmOeVPNnW
Kj86AjDPe+6V4IXmD30A87bOQe9uDcjMA8zbilsnbkk61kp427gM1THfbf2E
tw3aHn3jDbU+Yt7Wh9vAODF3EOH+hmhOXfbVpdwQ9ze8s1UIlX9InU/r2mBx
oQD87MzyB+XcpK9BI4kdGjA8DTDvevGesGj9FTbAvKvnc6fg1cFscMxVaNOD
q3To82nJp5tRHFDPetMBoSlqPawIjf1KrW+3Za1hv4cYXOSuIrTQjYP0O4TQ
dt9ZL9AHMM+q+qJ85Fd8F+FZWwWDF//tGyQ8a+cih+VMGxbSj72+FQJ+aP/i
5/WXYjQIO6TveugLwIv9y8AqBxrpZxg8KeMsQJsGmD9VdvYJPHuIOo/9189w
dPb+4xs7pkFYQvCsTTwdDuScvSkmT+3PjcvC1m0XgyNJOvRtEpykv0EuvP95
VeE8wLzp9qzaped39hHe1GxwqnDAjoXUTl6SCA3lh3VF75T2XaWR/oWw7WsF
oT8bYD7ULkJm+tZtar7LvHGdu4sOrYNe3A3Uo/aP/3jR3c8uDzxE/QDzn7oO
8gd07QcJ/xltcyAomdpf+DaFbpJfRs0Lfxq2CP/lho6FT7YmrBSAA4rqY7q3
aRDznGFXlOuMNk0DzHMe3FN/W4baP4TtEvdHhtPhB/muJA4+Tli93bZkpZoY
jKw5O9VAzfeY19T0TVPTovYXZoBn+Oo2fmjmftbHgJpPMH/Ze9/TM5U67y7j
GFKSFBCDc+dfR52h/h7MW7YWenhfpM6nmLc0bDSWXLefhR5oHNlhY8kP44+m
1kpp06AYx7sS3fMCkO15L+/sARrEPCX7/ZSwcC0bYJ4ys9lxwyfqPK/Jf/vn
4jw63HXg36fZdZzw0Y0GVy0jMfhxeoXSkzEO0s/wRNu7cD+1PmOe0s9JtfGO
BQtlHvw2mOzHDzeLLW7caE+DmJdc9cYtToOav1u5NNKH0kRgctaRbkM3ar93
khf1/EOHkso1tiU6nBDzkhw9X6/cps4HC1KLJKskBaDuCaaqJfV+YR5S5vQ1
nlfUfHJugO9UmJIYLHijGipMrU+Yhwycy3/BQa2fp72Tb+tX8ENotFmykzp/
Yd5x+RM371MX2CAm6nmiP6cYLCtfaVFDzSeYd8yS0bJ6TGcRXnF79ITGqmNs
0NPy5MgORIetfaJnnilzwkWaZ/YZsstB4miQ/eBlFgqw37DldhQ/vJdh3Nl7
iwZr6XXt3iw6XLzYqrmL+v2YT7RPSWTLpvcBzCOaqa+hL7dnodoa05OBm6n1
o7vjbg31vGP+8LTyc1Vr6vnCvGHwy1chptTzsylsV7HwKD+8NMfhdZR6fjBP
OJ9/JaHjODV/HTDyeyMmBt3PvWEYUtdXZfhJ3sUQEbhreNPVytNs4KHuwjfG
pMOlksrv9m7mJH0Lh+63lK1SptafosF67QY61LgUe9sMckLMC16eqyr/dYOF
TOLO3Tm1UADOivJr8Tyi1r//+EB91HlhnloftCP8PgglVgAOV6H1EtT/j/Iy
Y1UX8MOP4x8SS31pcIbvzF2jWTq0ESna5UKtb5Vvf5XyuojAGw9kgunU/iGc
EKmWkFQOHk1mqCY7sFDLmfLPohH8sMJhftU5dxpUOP/15+4+Orxx33JqmDqP
+A9oVC8xoZ7nDIMPPNT1Ov/aUcY6/jfQfvFw8wPqet0O/LsluJcffhFOiAmi
rhfm+U5JlrOlqfm8Jnyp2VFhMRii4T/qp8sJY2UMd2e00aFSbGlzG/VzlFdW
8R/NKmCZt1O/3pWFkrLWROjJC8DOklhDufs0ePG1c92KnSJQlefnmnfU5x96
N9+8Ses38FZJlLH2YKFFfnKSSfX80A/6R52h5snzxzIHKnjEYL9Ed20F9f2X
R8nZtW6pAO+tOwX8rlDrs/OLopEEfqioGdFScY8G/RJ5ZQpH6TD5H63+BnW9
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
z/8HHrxucg==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{489, 47, 412, 413, 414, 919, 764, 642, 550, 488, 3541,
             3542}}], 
           PolygonBox[CompressedData["
1:eJwVz7svg3EchfFXWwZxWUyChFhEXWY2BsKCRSUWXVya6MKmZXT5G1wSRpcB
CRtba6Ad1MSAWkjcBguJT4cn5znn933TtDmeHJsPBUFQhkVE0Y59w2Y4CEJY
dRDFPe9Dhr97z/AOHOvjeOUjKPAl7yn+yGdQhVu9Bxf82vsZb8Su/iunMMCL
cgg5fuBui4expv/IydLv8gfZjyyvjARBkn+4z8pO1NtOvIXktN4mY/obH0WL
fqfXygW9W6Z8n+ZP9jp9Vn7rMbTq1XqB96JBv9QrZEK/8e25bMKe/U/GMchf
5DDy/NDdNo9gXe/Ep+1K78KpPoG0bVl/5nOoQc52hB17OTZsXfgq3WLFVtQT
pf+FvO0fxdk9UA==
            "]], 
           PolygonBox[CompressedData["
1:eJwV0TlLXGEAheEbncJmXAphXKaQJBaCgkQwKmhnqjESrAIxIDYWKoQYzT8w
7iYufyEz+gdm3EG7mBRWjgtoZaVGSWEWzfMVL+e857v3MnduTd/wq6GCKIoe
YRwNqMeEYRJTmManwii6dOF7JJC3ZfHVHscX253sRbP+29kMJvgVH0EFDnk7
dvUj55v6Y6R5CjlbmhdjITxHvsVz/Ux24pv+x3Xf9WfI8lgsigb0N/qV7AnP
teV5mfzAG+VseC/92l4edvmLv8ZTXhneTe9Aku/xIjnI6+Sx+7f0J0jwjPMH
vR9d+oVM4UCPO3+nN8g192X0Eiw6a8G5/gL7+l/nP/Qm5Hgv5sL/z3/qo6jC
iW07/Fas8JdYt63wUizxVvyzzYdvZ7vhY6jGqW3HVotV3o0N2yovwzJvw73t
c/iGtlv+EUn8B8m1SXk=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{376, 48, 43, 582, 674, 796, 951, 461, 523, 615, 737, 
            892, 379, 494, 555, 647, 769, 924, 427, 581, 673, 795, 950, 460, 
            522, 614, 736, 891, 378, 493, 554, 646, 768, 923, 426, 459, 521, 
            613, 735, 890, 377, 492, 553, 645, 767, 922, 425, 458, 520, 612, 
            734, 889}}], 
           PolygonBox[CompressedData["
1:eJwV0rkzXQEcBeAXDIJCLFEokEbDjL2KjkKoqAgNjcJu9LEzE+t/gFhKS4JJ
aOiIRhZUVIitibUxvlt88zvn3HeL98iob61sCQuFQq9YIItshg3rHJHiA51c
MxSO7YkifZI42zxrtkPe2jq4YtA+aHukUJ8g1jbHqq1CX+CdvsmBLVlv55IB
24CtVl4nT9/jwVagjxOjz/LNVq7Pk6Fv8Ne2rRfLhyTJbVzQr/d73uXGR/iu
tir5ho9yoxtuX5NT3Vz9J/feydLb5Fh31/M0t1Q/IV/P1OvkR8b0FP21/IWv
3s/W2+U4d9/zdLdCP+OD3uA+B79T8Mz9wR/vNblRPrtlfx/8XiTK1e4trfI/
+uS+4O8hV8rX1Mir5Mi73Hm+o5fIx+TJo0TLM6x4XqbPBt9P/85vW4Ie/NOc
02vrtd2Sq48QZZtm2faLN7Zmzuix99j+k6N/JtI2xZJtn3hbE6d027ttn1jk
Be6nWR4=
            "]], 
           PolygonBox[CompressedData["
1:eJwV0sszVmEABvDDx8KmhQgb+SKFGVbUIsKqNppc2rQIM1lYsLBoxrX+gsot
t/oP3GJXlIp23WTFTOg2tdKM5LLI71385n2e53znfPM54s3ttW2JURQlME8x
JYwbVvjJWR+4xxHDsSgasy3zgzzbXQ4Zcm3UlixX84RM2xxv7N/JtfVxwKB9
xNYsL3JRXyVJruIxGfpTXvtcgz5Lkb7CN9sZvZd9BmyPbBvyDfkPTfICF+RP
xOT3XA33Uyk3Oo+YkE85Z3nlOSVJUdQhn3CuuRZ3XtN/U6+f11vkBOeMnuUs
1Jf56v4ivU1Ocb51PdtZpW8Q1/P1m/IePeG79X/Ofn3Y/XecqbZ1W4O8Q6Pc
6ky2P5fL5I8kyu+4Er6by/I46fIMS573Wa+Rf1En33ZGnjMtF4R3xHZ473ql
vE6O3M0eD/Uh12/JzyjVP4TfL1cwRpo+zUufq9Wnwt8pvD+2bKf1Lv7ywDYY
/vHkckY5aZvihf26Psm58D7YtGXrnexy3zZg+88lfYRU2ySLti8cAzS5Xws=

            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hecz3UcB/Czz8re84y7I4pUKqLInqGMjJBklL0iq2FEGWWX1aKBrMwU
hYySEcooLaKFjKKe70d/PO/1+rx/97i77+f7JqlLnxZPpElISOjnS2QFX36W
7zCERrQxy8thfTG3UCe+n0/0KTxCWiqanZbvMpTGVCEd6cnATb7njHyPYTTh
VjJys89+kct4kqbcRiYq+eysXM5wmnE7dc3T8qk+lW4kUtnsnFzBCJpTlXrm
6diuT+NRMsdzmf0q3+cp7ucO6punZ4c+ne5kiecy+02uZCQtuJMG5hnYqb/E
Y2SNZzT7Xa5iFC1pa5aPI/pr3EVD54x8pr9MD7LFPZj9IVczmla0M8vPUf11
qsU7c87ELn0GXfUSnNJ70lEvzHF9STy/Xoof9exxp/qfck387XoZxuidZTG+
1R/gIb0AX+u9ZApvxP3LJAbwg3MsWHmGUD12QibSl93xN8lkBjIzdkmWpD/f
Oz8uyzGYXs6dZJE0/+/sCefeMpVBLI33I0vzk95H3sgN8e7lebk27lQvy1i9
iyzOd/qDtNcL8o3+JnfHjjpnZo8+K34nDzsX5aT+NjliX5wvyA94mtZ0MCvE
Mf0tasReO2dhrz47npGcsT9mF+U6nqENNWPXzbPyuT4n7pRcsS9mf8n1PBv7
xD2x6+bZ+EKfG/dA7tgPs0tyA8/F/nBv7Lp5dvbp8+hLHqqbXZYbGRfvnFqx
63GnfKm/Qj/yxl2ZXZGbGB93Se3YdfMc7NdfpT/54i7MrsrNTIi74r7YbfOc
HNDnM4D8cRdmf8sPmRi7TJ3YR/NcHNQXMJACcRdm/8gtPB+7Q10KxnP77Jr8
iEnxPqlHIQpThKIUozglKEkSpShNGcqSHPfi512XHzOZztSPnTLPzSF9IYNI
iXsx+1du5YXYQxrEzpjn4St9EYNJjXuJ/6DZJl6kKw0pR3kO+Mf7H6vwnaE=

           "]]}, Annotation[#, "Charting`Private`Tag$1085594#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nfczWUcxvHjscuDZCa7lBEyGmZUVCojCpWiQlmhIivJViFkhDLKlpKR
PSLZ68mMSkjJzFZ6f1/98Xl9r+u67/uc3+9e5xRq3r5+u1SJRGJYUiLRhXg7
dSJxkH4ZGbBBNh1j5df5viiGE9EXXeWH+FeQERtlM/CJPIF+suL4K/qim+xn
vgVuwCbZAlleTOQfxkzZOD4V+vMlcDLGorvsF74lbsRm2ULZrZjE14z+vnqW
fLwsCQNkJfETXQPr6VPa19N3YR7/DP6k6+JHurv2HvSvdCtkQgpfESvpLdoX
0fkwmb+mNkMt+oj6GLbRs/WbQKfGQP6i+lx8L31QfRA/xFykSSTa06f1/0Et
hVtk32hLUlvyxdRGMfd0PRTmd/NZ1Df4MmoP43vSh+XZ+VfVc3wj3MYn8z/S
lWLO+FV8OrU1v9XYb9X8mCL/R22OR+ijam1sp+fo9ymdBoP4Ujgj28CXxny+
MXrK3uF/o19DZmyTfYnP5GkxWFYaZ6MvesmO8K3jvbBdVtJ6zo02vBvoc1Rb
G2TFDtlXmChPh/dlZeK9Zb0D2TG+LW7CTtnXmCRPjw9kd+Nv2XuB7He+HbJh
l2yxrAA+5x/FPNlkPgM+5MviEP0QNtDntW+MNcECvkmcAbo+9tB9tPehj9Pt
47vpxriZ3q1Wxmo6vbVpQ6fov0QtiC/k/6ovxT6jj6mPR5u+O2Kvqh1ij8X+
MW4KnRG5+CHaL9HP4w6+HP8z/XC8H78xzpX6Ol9SvWD8JvruOKP8Qu2p1Vb8
s3Eu1aewN9ZC/ibd15i+6h+y12MfYg9fBWti/2lfShfCVL425ss+52/AUL58
nBXZZr4sFvHPoZ+sH/8n3QE5Yr5ky+I8YBr/OBbIvuBvTP3/3VYh3lvWP5Cd
4DsiZzxb3CGYKs+Ej2T34LJsQCD7i++EXNgbZx8DcZe9OUgdjPfxQeT6n9Tv
DeTGvjhXmCZPxvD4bLUp7qWvaPsQg/hT/JvIE9/DV8V39H7ty+kimM4/gcVx
N/OZMSI+R30B99G/qDWxib6q3xa6HL7l08S9EHsg7kG1QXyubF+cD/WtWO/Y
K/FecSfFPEce+5pvgtv5W+Ld6GpxD/Jr+QxqW764esD4FXHvIDc/Q/t1+mU8
Sf+uPoGddLL2jnHvqUviN4TOgpHa7sevdC1sjrtW+1a6PBbzTTE05p8/Q3dG
3rjvZSvjWTGTr4Olspl8VnzMV4x7TjYs1k52lu+CW+N+lq2SFcUsvi6WyWbx
N2EUXynOouyjWEPZOf5t5It70d44FOuG2dqyYbS8csyDbDiGyP7muyJ/nEXZ
6jibmM3XwwrZnLgbMIavggRGyIfKztPdUCDWXbZGdifm8PWxMu5cPjvG8lWR
Ku5ivgKW0C9gZMwDf4HujoKx7/gHsC7WQPt3dDF8Gc9grV6J808fjzXFLnqV
fnPpHPiEr4bD9CPYQidhO30PltJpfc5r9Iv0abUh9sfdK+8c6xTzq16M8xq/
ceqFuH9ibfhC/AG6OvLz3/MZ1XZ8CfWw8WtjTyIPPzfeX20R86Q24P+g68Sd
xKfwmdVOfGl1dfy+0DkxLs5TPGvMC/2b+ii2xr2IHXGmsYxuhjP00zhAj4o1
py/RPVE4xsvWxXPiK74h1sTvE58L4/nqcWaxM842ltPNMVq/Efxl+h0UwZFY
I8yLM4cJshoxxxgjHym7QvfCbTgacxP/7/Cxtquyd3E7jsWzxX85lLbc4+I/
VfyfwSh9r+nTG0XjLMtSkhOJ/wAMElcs
           "]], 
          
          LineBox[{3542, 489, 967, 812, 690, 598, 455, 948, 793, 671, 579, 
           518, 415, 920, 765, 643, 551, 490, 456, 416, 417, 418, 419, 420, 
           421, 422, 423, 921, 766, 644, 552, 491, 457, 949, 794, 672, 580, 
           519, 980, 825, 703, 611, 1010, 855, 733, 1043, 888, 1074, 424}]}, 
         Annotation[#, "Charting`Private`Tag$1085594#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfcjWUcx/Fj70okKiKkUjJSMioSUiQykj0L2dmSmZWZvWdIaCGriEJm
ZGZVQoRsCb1/f3xev+/ne13nOec5576vO1ejNlVbJ0kkEtOTJRJFkicSP6dM
JG6lSCRq4SgfiVypEolK+k90T6Kp7hZ/DP14etS0py8/JK+2/ixvyr/l5fGU
bhe/Lb+JY7yiPZ10O/go/hCvzOfxgmjCR/C/5GbWb8v50Z9niM9ovR8/LK+x
Xpw349/xIfIyuYL8rjxBvigXtW+3nEBt3sXabPk3/StyZ3mnfjTPzV/j83l/
+XO5UPz/8kj5tDxF3iQ3tz8hPx77zQHWepmf8jvif5b7y8vMI3y8uZ5vNr/1
2hJmc77EXGt9qLmcrzdf5q3NiXy1eYnPNLfx7ebTXv+LnARz+VvWu5pz4rsw
f7f+qtmFf2n+HP9fvC//0fzYeh6zCv/MXGB9gPkFLxzfvTxKXmGe4VPNzfxt
r0siPyF/qP9AXijfKdeO70A+Kn9nX0n+Nl/HP5K/kSvKbeRJ8mX5Gfv2yElR
h//BK1nvynfxMTwvf51/yovgHV1SXQHdQH4X1upK6d7Rfc9fQTHdXp4Mdflx
PhYtkMzeJ/WD9BmxLq5f7NMlRz3dn3wcWsZ1Fr9X/E/Ybz0F6ttzgo9HKyT3
NwvqB+vvxvfxmXBAlxINdCf5BDxsb1XdwrhP4nrVpdAV0g3hmbBe9xwO6lKh
oe4Un4h89laL3y6u77hWdCl1hXVDeWa8xT/kx+QN8bd4i7i++DB5hfyq3Fae
LF+Rn7fvVzk1GvFu1ubG/aivLHeTvzJ3W/vY/I5vjN/T+iPmG3yRucj6h+aX
8fvH9cqbm6P5SvNvPs38iW8123h9KrMIX2B+ZL23+Rm/R64jD4x7Vp4gb5B/
8Jrn5ZbyBn0ltONT+FX5BeuH5DRozE/z16x357/wyfxRXp0vjmsxvgtdat1T
umE8C37UlcZhXVo00Z3hU9AOaewvqh+uvxcbdWVwRJcOTXV/86lojxdRFket
pUcz62f5NHRA2vi+9CP0WbFJ9xKO6TLEuaM7x6fjMXtrxBkS1zs66tLpntGN
5NmwWfeCrlV8Z7wyyul+i3Mq7ml+nlexpwffw2fw/Lwm/5wPlL+Sn5XfjvND
PitPl7fI79mfXi4W92mcHdb6xHXA75PryoPk5XE28YnmD/ynuAbi+zXfjfcy
f7Q+3FwZv2ucx7y9OZWvMa/xWeb2eI6Y5b3+9ziD4nkVZ4D17uYn/B9rr8s9
5b1xhvLHeS3+BS8e5wkfw8/Jnaxn4M/y0fx+1OOD+R/ylvhteeu47nkVVND9
we9CC36Bz8IT9r0Z56+uBDrr7tAV133MH8BW3cs4rsuIlrqLfDYK2Fs77jdd
yXhu6e7UldCN4dmxLZ6p+FN3N1rpLvE56BrPN5zQZ8K71i7zuegWz4c4a3HS
Wma0tn6Ff4Lucb/jVNx/aGPtKp+HHrjL5yipH6vPge1xb+EvXRa01V3j8/Fk
PJ90X+tKoacuo66Ubhx/EDvi+sNp3b1op7vOF6CgvXV0S3XP4X3d3brndON5
TtTnQ/hxeWfcY3Gm8E38dXTg0/j1cOtn5Kxoz3tYmyf/q68qvx+f1dwXz594
Nsffiee69UJm3TgvzGXWB5lfxzPHfJ63MMfyVeb5uI/MrXyb2cvrM8W+OPfN
Cdb7mot5LrmBPFT+U54U94H8c5wVclt5s36EvEquGve6PD0+t1zVvr/lbOjA
b/Bq8Z58P1/IC/N6cQ/G2YgPdJl1L+gm8oewK16Hs3HfoqPuP/4ZeuMe+0vr
J+lzY7fuDZzT3R/ngO4mX4Q+qI7z+gfQydotvhh9UQM18Y+17Ohs/TZfgn7I
4r3K6Cfr8+AXXS1c0OVAF10Cn+v64177X9RP0eXFHt2buKh7EF11SfCFroi9
9XXf8NIYoMuqK6ubyh9Gw3gO8RPy3jiDebs4s/hIebVcTX5PniHfkGvbd0nO
iW5xrVubLyeV35A/iOvYPMDHmuvifPCap+QG8gp9mXh26rLpXtJN4/mwT/cW
Lsf1gu66ZPhKNxB1cEX/EHrok+Nr3SDUxVV9bvTUp8BS3WDc533K6afrHsF+
XT1c0+XB+7qUWKYram9D3Ur+Iobo7o8zWDeDP4oDunK69rot8X/H/am7zvOi
F0+F6vb05gfl5daf5o3i3uFl0ZKPizNcHmr9AV6Bz+T95CXyY3IjeVj8luZJ
PtncGO9tHvS68maHOO/jXrQ+ylwTz8J49seZb87k35r/8dnmDr4zfhOv/1d+
GPPi94vzx1zA15qpeQ2zD/9VHid/H5/F656RG8ur9YPlpfJLcit5vHxB/si+
7PxlPovnR2M+nJ+Sf7VegXeMMyTeK65L3Q2eD715GqzQFbOvSTwjeTkM0+XQ
VdTN5o/jkK4R/tM9gj66tFipG44H7X9FP0f3BA7rGuOm7lH01aXDKt0I5LT/
Vf1cXQEcieeZ7j3ddl4znnt8Fr8pz5F3xrkWn9Xe/wEq2uZv
           "]]}, Annotation[#, "Charting`Private`Tag$1085594#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HccjWUYxvFjZScrsreyV4iIbEJoUJIUKdkyQ0QiDUQ0bKGMrFRGoU0R
yt5b2SNb3/uP3+e6rvt+znnf85z7efK369q8S5JEItE3aSKxJWUiMS11IpEN
X6RKJJ5GIWyXm+AgPxYp8L1cEb/x/VELR+XWOMtPxVbfN13Ojnlya5zjX8R1
vjB28E1xiB+HO7BGroT1/ABc4bsgKWrLx+gzOMfnSJNIvM9P45Pz/fk78Zdn
z6D3YL5eer034nP8edoR5dVuyLnpOPlhWkTeyT+K0vJh+W46Wn6IfiAnaO94
R5qGFqIf0Xo0pf5avjJKyBvkTPQt+UH6mnyV74pkyK/2Ia2jfpy2wXl+euyz
3gA5A/72e2bSHFig1wZFsUtuhiP8eKTCOvkB/M4PRF1s8/lZajmxUH4W9yJ1
/L96O7ATu7Abe7AX+7AfB3AQh/CZ78iFL322Le5DGhzWm62eG4vk51AMaXFE
b456HiyW26E40uEHtSr4gx+EejFL1s9Vy4sl8vMoEf8jflSrio38YNSPmbD+
c7V8WCq/gJK4Ez/F3mMT/zoaxF5b/0XsP5bJ7VEKGXBCb556AXwld0Bp3IWT
evPVC2K5/CLKICN+VquGP/khaIh/rF8QM4Kv5Y4oi91ycxzlJ8SM4Be5Ojbz
Q3GN74bkaBTvRZ/FBX5GnJWYJ/ku/Os5C2lhfBO/W28Y/xJ/IRQV1G7KeWKO
5Vq0nLyHb4Ey8jE5G31HrhGzKSehfWKmadp4Bv2Y1qeZ9X+Ns4GS8hY5Mx0Z
exFnTr7Od0eK2FO1ifSR2EvaFhf5mUipN1DOiFN+z5e0CL7VexnlsVd+DMf5
iciC3+JdsZUfhsY47fOL1IpihdwJFZAV69Vqxh3BD0cTnLF+sdq9WCm/gvvj
7GND3A1xBvk30RRnrV+idh9WyZ1REfvkx3GCnxR7id9jr7GNH4EbfA/cEfdM
zAh9Dpf4WXGG7cMgOVPccZ6zlBbD6phPveFxH/IX6cu4xVfCfv4JnOSzW/cu
/xGflO8bdwJNF3tKP6ENaHb9P/jaKCVvjz2lo2IW496Sb/I9UTHut5h9OonW
pc30/+XboZx8Wc5Jx8ifxf3CD+Yzx97yk+N+85uW0eL4Ls6V+pt8V/4S7YTb
fGUc4J/EP/zHuAcb5TrYwY9Ec5ySn8d//OyYec/4Si6B7+VueAA5sCneHTv5
UWgRe2n98phhrJG7o0r8FvypVg+7+LfxWLyn9V/HnmGt3ANVcVBuGeeR/wS5
sDnOCnbzo3GL74VUMSsxq/QFXIn19mIsP4dPw7/OZ4k546fQy577DS0d+6e2
Lu4eOkKuSnvKl/lXcL+coHnp+PiP6YP6h/hWKCufij2l78WZoJ/KyWg/uQpN
H2co6jS33paYG+yJs6T+Nv8Of5u+itQxg3GeaHtc5ecirbVD5KzxH/kN38Z9
gx/0eqEaDstP4TQ/Oe4pbJUbYi//Lp7EFZ9fEe+PH+VXUR15cVVvZcwifpJ7
4yHkw19qjbCPfw8tcc36VWrl8bPcB//xnZEE+bz3hJg3WkPvCP80zvBTkB9/
y49gP/8+WsWd53tXq1XAL3Jf1ESBOP96N3ELt5FQSxLnNPYe38V/h1/5fngY
BbFNrTEO8GPwVNxDcgdc4z9HOu85VL477gx+auwfTa73P7xfSjI=
           "]]}, Annotation[#, "Charting`Private`Tag$1085594#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$1085594#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8647431443886185`*^9, 3.864751680232676*^9, {3.8649246263958454`*^9, 
   3.8649246663018637`*^9}, {3.8649247386913157`*^9, 3.86492476348625*^9}, {
   3.8649264053781443`*^9, 3.8649264245239162`*^9}, {3.864928178079486*^9, 
   3.864928183150836*^9}, 3.8649282170238175`*^9, {3.8649282854075727`*^9, 
   3.8649283192815533`*^9}, 3.864928522906314*^9, {3.864928905872735*^9, 
   3.8649289410632877`*^9}, {3.8649290175684013`*^9, 3.864929049238099*^9}},
 CellLabel->
  "Out[1117]=",ExpressionUUID->"54c2384c-c479-44e1-b89b-b31a191f55e9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
XfEkJzHfo5Hrmzk2SMCdtrsPkoj1gBNV+6JSJWCxxe37ycR6VYrl6spkS8NK
x2tPjy6iwUij+RPnpKfoXPZYp+/uEuzF6ZZKGx1HO9ivxxs1if6ZK7Zm9cgk
ujqW07XtNhuXuT1u9eKaQeka/4zuEvs5cHFnSh7vPyS6/EHVWQ82VqCn6Gzy
pkNQk1z+0p1UuLN3J0xzM+DlaoH3V/ypQN/10BjdYMAj14AHykS+ijq4Ye0l
IQko9+tXSiKuk5/mv3jZP4FseLcdlHAg8vHNkxNdc1NIhG47kk7kG9Ylz3Ub
52ZQiov148YwNhaL3Py+bhcd/F8cb8msowA8Xv6uIZcO/eqfJv8Q+SQ3IdNC
fh8DDrUb6ZgQ+dis0VH0bRED5H3q/jGJ/Kb7e11EtNZ//em+wcPE94Muaruh
Nmlwt0zYqyxPA7VlIwIfkycRNWtqM891Nr71tetExLdpJJtGm1lO7O/nG7Vn
D9rSwalR586PVVQ49MooY+MocT3aKOFF5Gtvva7UFc4M8C6fG1pB9L/m8hs1
H88S+ZF32UAPsV7sF/HKLl+mkGBxaZkd0T/EJX+P3odn0PqksXe8xPklMzPv
zPA7Opymr+TdZksFV+HGZn0VBkw9t/HYTZwPyv9+NYv8xIAXHGZaecT73Os4
+vjelik0NbzIL5Xonxmqek5We2bQF7k6pilR796OCbxeHE4Hzag1BhmaVEhY
eZLf8B4Dwt48CHAnnkfDcg7r7Z1G7G/Qjoj1zfP2puZV02EGXlAv+VBBaE/M
SI82A3DNxJtcYn4nchWyihoYMHzfPpRNjN8dLsNfxZaG3TzZu+6voMGFlts8
i+On0WOZx1/XEfP1tOnyyLF+OtzvyPWwJObneMjG89tGGWCiw0qOIcY3UtU4
mv2AmI+c58f5iPf3LLfULH0yg3KLXoUbEvPjckRK2eMVHZb+vnQu3YIKvBzn
Q3hSGTC+Xt+hiRh/WH9q7eiyGTSc/v60KPH8zRvHVUpDiP2RNqhSQtz/00RC
42P5aeR0c4NbJDEffsKVTZo/6NDSmLNLlMhP68tLWepVDFhy1W1jNXG/pJg9
9ykd08j5VknbMHG/gSvHPSRmiX4q9ItnGbGfHvyRUpPPYYD+Ko79//2+Yyv9
3ddWkxm0+/iqa7eJeHWQftPaHcsAiU0PdmwlxmfV68YLmU+j5U8M5LKJ+1FH
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
daaUiPQoc8mOmwU1Qkfofz+Qc8J/PHNQKDvrGLmPFPw7rp4lyQ7PMc+xzp5h
LVhtIyeus5kDTmzol2deZC54Kq1k0qrNC/ePvJcW0+CELjoNPyIP88Giw4W5
4hvI+3u+pq2a2gXcSybDTI/SCVj5L8mlrg9Aq33XGSllBOKdt3dCtYqz/UAp
4+R5h1Y2+CNptX3M/mXi+4+yT6ntq6DqcoPIVANLweL1YPJSZocSswJLTMUs
BdVBT+IVezhh8Tbm7sWZAUKS4jNymJUXmt76p6IYzAHn/jT1lrHxwbCAAbfy
zVxQDI5m7YC/QYCd1WguczIxd9+zsrC2B3R9/lQlvoOcbxpvL3JIzwGR89Fy
48t9APHU6zR2tS/J9IPMzT9yiUvsUOP9g1VH3VgL/uyvz7nmwguby4Ji7L6S
v6vQ2u8PX/BB7vcxXwr+cGKeOuF46apznyKJVJGMnrnXvcDnnnx1hXc58XiN
p9Ir9znQmlsyKfi/eWrgQvS5YHb4nv6ukMWKtcBwz9rphWReqBQn/zJ4nBN2
sttNJz7uBqkx0wdze0oJxFtHrivOtCXnOT95jZ9eHKvg7kniZFzZP4Jlh1JA
Bh87ZNlVprsEWAvMR4V+ftTgg1KAg0tZhgv6aOd5XA7oA+3Pz0mlLZURbc2/
iDtc8yCec9Si61Q/0FuKFIz7ywOdJHdFQEsO2BwkMlg/xQuHE/TnqJJc8Gyp
wS3pFz1gYe8+x6HRMgLx2UF1qf0C6v1g4VzaunxjdtiQMvtkyoW1oPeAQLWb
Ex/cw9gHQhc54YatmurKa/rA82ev8oOsyomk6e2zTN/mwBC/RtAacr6zHUw4
KpHODuNSPtLV1VgLggbfjPXX80KeV9QdUzxcUPxqV0o/Ww/4dk9Sc2htGXHp
Ud/agsZ5IOTwsoLjaD94XGbbnL2dHR6FQTtUbVgLIt8GNAaf5YM/eUUzjguT
+1/mc+/OY/MgViqMOE/OhzujdSp5yTn8+7Pq7/qJfcQ67ddd+SJ8UPWOf+hq
cj4M3pyrcHFNL7BMv2cifaWcsB+fMy+8zw4NG31aXZxZCxDvPWdzTuiqZRRx
yij4uLV9L2i+XjRzitwHZON5NKz92KG+q/+WV9bk+3OR54KdyzxI2vOCepx8
/xutA9YnM62CL2tPnnC1+0cY7Ke1K6vwwcQ7a01UyP1GySmU8eNuH3CyatE9
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{795, 762, 577, 578, 579, 1122, 960, 826, 727, 660, 
            3832, 3833}}], 
           
           PolygonBox[{{590, 894, 827, 589, 1131, 969, 836, 737, 670, 630, 
            1157, 995, 863, 764, 697, 1188, 1026, 895, 796, 1223, 1061, 930, 
            1254, 1092, 1286}}], 
           PolygonBox[CompressedData["
1:eJwV0Dsvw1EAhvFDa1QWRtI2MVgMBoNNLG03ly9QmzSqNSJhc9kYECZ3ExuT
y2YQajAYbKIGiRgQU/3O8OR53/ecf9qcdLE8MtUcQmjCJErKMJYTIezyRjKE
b7mCFK71LmzLaec5+ShmXOoHegIL+qy+JL/JRTT0c70Da/qoPi3fyzncyb3x
vv2UW7Fif+FB7Nk3+cf2yVV+4n60yTfcjV/s6K88hGRLCBnf5uVje50zfMs9
+MOV88N4F19YdP7MA2hgLr4J1+0fPMGP3IcgX3An1uUxdyvyg5yPv6ef6Sms
6vv6Vvyf8gzakbUVbCcxx3fW5zGOqr1mK+A9vjH+AQJ1Oig=
            "]], 
           PolygonBox[CompressedData["
1:eJwV0TtPE2AYBeBPaK0rRrxOOjFY2qo1cSAx8R8UQZkQGFQGHKVVNwioobiI
LlBXCReTVpugbEzgZWy1AwkJiVHRahcT0PB0ePKecz46tJwevJMZaQkhHGCG
qlKmkwRJUpyjJxJCsTWEOOv6BFO27/pNIqzox3kq93vPyhX5m5txP7pn+eVt
gVl5136XI5y39dpKcicb+ks9xpg+qeflH/ItorzVTzAj3/Cek6tyN5/kOHV7
0W2jQd7bpttFiIaw6H1O3rPX3VG34qb5T7u+5p7hLwV9271C1Ocv+Pw1+bX9
q5to/kZuB++9zbuHGLfX3Es8tE+7O7bbHOSdfpJn8oD3e/Jn+Sq/9ZJ+mGl9
SS/I/+QsR0nbrtveyEk+6I8Y5L79i62HP/oyF+mzl22p5v9Hf8wT2099mBir
+imey1vuZVp87yF/+0Cu2Xtp6K940fzd9BzH2AdWElFA
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{541, 861, 580, 1036, 1198, 741, 840, 973, 1135, 594, 
            766, 865, 997, 1159, 634, 701, 800, 934, 1096, 544, 673, 740, 839,
             972, 1134, 593, 765, 864, 996, 1158, 633, 700, 799, 933, 1095, 
            543, 672, 739, 838, 971, 1133, 592, 632, 699, 798, 932, 1094, 542,
             671, 738, 837, 970, 1132, 591, 631, 698, 797, 931, 1093}}], 
           
           PolygonBox[{{795, 827, 629, 669, 736, 835, 968, 1130, 588, 628, 
            668, 735, 834, 967, 1129, 587, 627, 667, 734, 833, 966, 1128, 586,
             626, 666, 733, 832, 965, 1127, 585, 625, 665, 732, 831, 964, 
            1126, 584, 624, 664, 731, 830, 963, 1125, 583, 623, 663, 730, 829,
             962, 1124, 582, 622, 662, 729, 828, 961, 1123, 581, 696, 763, 
            862, 994, 1156, 621, 781, 880, 1012, 1174, 661}}], 
           PolygonBox[CompressedData["
1:eJwV0LsvHWAcBuAPZS01dK1EqVti6GBo4h9wr9TdIJikHVSZqnUbWjYTZehA
0bot0rHuBgPF0EHSzVE6NJGoGDzf8OT3vu/n5JzIantV8zI5hJDEZ7qUNVoZ
YY/ClBBWqb0XQpHewjC7FNhXeO6tUF/gL9W2E/rszfoQO+TblqmxF+iZ8htu
+GSbt11SpR/Ta2vSU+ROzhm1DdoG5TT5C9t6nr5EtZ6vT8tZ8gYP5KfuCT3y
fyblOX/3zD1lzPbPTWeVC2838XeyT6X3hHsUf7Pb6D0pNYRS+Tfj9iv3Id9J
1m/dYg7p0C/dhPvRHfD5EvdXzLZUd5Yte667xxP7IlVynn1KfiSvkyG/5pqJ
+H/wPirfl1f4o1foP+nRG+Lvlds544PtvW0zfp/+jcr4nfos55TbDuP32Ov1
d2yQY/tKhT1XnyFBme2Abnud3s86j20LlNtzYucFb/lBtrd5yrxn63cidFU1

            "]], 
           PolygonBox[CompressedData["
1:eJwV0kszFXAcBuC/aCaXnRYxtTDatDFDJZeovoKN3NUolfABUioz1aLk1iKr
sMTCdejCio2FSzQWbo2lGVSSMibPWTzze9/3f86MOSPldn1B3YkQQhR9LCv/
uE4N7XwjOzqESW7FhHBNf0AbS2TZJ6j0lq+P8pdS23ea7Pf1BLmeX7yztdoW
uaJ/ocKWpyfLj4nSexixHVBi2+C57Z4eL9fxkw5bi+2VHC/381XP1D9Trl/V
u+Tz8jRJcqa7TIMc3G6GfS7f3Yj8jfY99zSj/PF26KYxR7H3LXfdfeZWe48+
GcINeZNO+757jkni9CM3g0Vq9W33h9vuvvX9HHeFl7Y4t48F+wV3hsv2T5TJ
ufYPcqo8xRn5Ef/p0oe8t8iJkd+Rfb1IX+Opfld/L5+VJ4iV0yO/HQ/lXdrk
Zp97IcfKvczrl/SPlOo5+iC/uWlbpdF+Rz8l17BDq+2NbY6L+jgltmx9gD0K
bSs8sVfpr5klwzZGsT0r8n/DMd+MXr4=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1mW4VVUUBdAHSHd3d3crnQIiJdINojRIC0p3dwiIBXbQ3d3d3d1ggGN/
/hisOdd5cO85d9/3kbF117pdIkVERKSJHBER5ix/5GCfPII67NObEZk1emGW
y1W4I39NV/wTEbPtcrJfHkldihCFt4hKNOb4mVwckEdRj6JEZ659bg7Ko6lP
MWIwzz4Ph+QxNKA4MZlvn5fD8lg+oAQr7KpyV/6GbsTiS7t8HJHH0ZCSrLSr
xj35W7oTmwV2+Tkqj+dDSrHKrjr35e/oQRwW2hXgmDyBRuzXmxOFtXppVsvv
8kD+np4c19sTm616XBbJBTkuT+SC3JUkNNYPmC14i3X6bbM/6XlbX2PW4KH8
3BzBEvma+Smp6KWfMDsQh38Yxzb7++YgEvigM4fXMaeFv2fGc/0ruRAx9BP6
E3koifVJ+kW5G3H1pOYbJpJcb+L6QblluGc9qvkXY1jv2h1zABnCOXR9ivmO
/VqzJo/kF+ZIlsrXzd6kDvemnzQ/Cq/Ndj0+i+XCnJQn05RDeiuisUEvwzq5
Fo/lH+hNgnDu7YpwSp5CM8qy3u49nsg/0oeE4ezZFeW0PJXmlGODXW2eyj/R
l0Th7NkV44w8jRaUZ6Pd+zyTf6YficPZsyvOWXk6LanAJrs6PJd/oT9Jwlmz
K8E5eQatqMhmu7q8kH9lAElZYleS8/JMWlOJLXb1eCn/xkCSsdSuFBfkWbSh
Mlvt6vNK/p3PSB6erV1pLsqzaUsVUoTnGM4wl+Q5tKMqKUlFatKQlnSkJwMZ
yURmspA1PONwdrgsz6U91dhm1yCcO/kPBpEtPGO7MlyR59GB6my3+4C/5T8Z
zCm9I/HYoWcPz1wuy1V5Ppfk7iQLZ1I/bLYmOhv1u+ZAMobfC/oOs2H4Lsov
zVEsk2+YfUjD5/pp82Pi8y/j2Wn/wBxMQt+bLGZUc3r4bpg5wmcslyOmfk1/
Kg8jif6lflnuEe5JT26GX/STzBRmR/WI3CZ879mk12Cn/GF4H/Jybsp9ScsX
+hnzExKwS38Y7oGs5AznyCzPdXkBV+Se4TXDPepHzbbhPYfnz1g2298zPyMT
Uby/qWZN+11mI2LZvdZfyaNJqq/Qb8n9wrPT05mRzMlmSnOI62flTsTRE5qv
mRA+Q32364/CfZFIz2ZGM2eYucIZNytwQ35mDmehfNXsFV4jPAv9mNkuvEe2
6LXYLTfmjbySoZzTO4fXYo+eO5xXuSI35UV04j322DUJnxmrjGHkCedVr8Qt
+Ss6U5u85CM/BSjIMj9XmdvyYrrwPnvtmoZnxWp9OOfl8B+KxOzVH5tDyB7O
t2cyM9L//9co5Np/PpgDsQ==
           "]]}, Annotation[#, "Charting`Private`Tag$1085706#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1XfYlmMYx/HnbVMSoox22nsXDaJCQ9GOtkhDaSq0aGlQlLRVokmD0jIy
2kWlpa2ivQvlcx7++B6/cT3P8T73dV/X+eZo1blep6REIjEiWSKRBY+nSCQ+
Ts5judwTddBBv073OA7JU5AV1fQzdFnxtdwLT6Ojfr2uGg7LU5EN1fUzddmw
Qu6Nt3VH5Bb4V66LTroNcnUckachO2roZ+myY6X8GgbrjsotcUOuh866jXIN
HJXny+nwGD9UN52Oky/xXZAea+Ss+IjPYf0J/pPwWCXPlJOjn9xHHsL/wbfC
TflL+W68Jz8jv8Jv4p/ABr5AfF6/gN6GYfp99KHYc/14ell3hnal22lJ3M5/
Q7PhCibGntBHkSJlIpHTd5/kZ+uP0Zz0J5oH17Da+qz4LM6hv/VdtCxuom/s
CT2mP0lb0620KBL8V/QejOGf9dku/Gb+yfh78kI5PYbLM+QP43fyryIDcume
0n0aPvZZfh310VW/RfcUjscex1lDbtS09pk+dzy//AYa4EHkQS3rc6w9iG/l
N9EQr+q36mriRDw78qK2fq4uD76T+6ERuum36WrhT/kT5Itzr5+ny4vv5f4Y
pjsut0ESGuu6637ha+Mv+fN4Z3hHni1P4K/y3XBH/FY5Oybx+eO+8PP5fPiZ
z4u18TtoSgzQ76blwuuH0xO6U7Qt3UaL4R8kk5fRTHG2MVY+SCsjyVlp4vs9
+F9jb2gdupEWxHWctP4FzYDzGGH9d/pwvD9rH8WZ0nXHDr4U7oz9pDkwmS8Q
d5hfEM+HH+TZcioMlAfK7/B/8i8gOZrGrNFt55+OZ5M/w8T4XXIP3IWCcb91
C+Pv4Ed5EJrF7NHv0NXFaXkOCuEZ/efx3bgX8lt4DoXxrLUv9IVi72MW4fm4
yyiCoiiG4igRZ9bnF/lsYayL2YMRur/kdkgRc1POjPf55jHj+J1xtmg9uokW
whlrczGJ/1vfExlRMs65bjFfBOvlT+XUGCQPkUfGu+JfRMqYvfK9+CDmaMxF
/reYQ9jMF8ZZ/SJ6By5gpLX9tGLcc2djnvXJcY70Z2kvupOWxo2YbXEPYr7E
ecaUmK20apxT3y8V949fEnc55kfsEc2HDfE+aRq8pd9Dy2OofhQ9pXsJqbBC
vg/jYqZb78PvitmDc/LiOHMYJc+P/0X8v3xv3IPSca91S/licb7j3qIV+up3
6+rjfMxilEFj/Ze64vF+4o5htO603B6psVK+H+P5Q7RK3DfP3TrmGb9H3wAX
YibG/7zYN/k1ZMJvurIohybWvtKViPcT9wFtYsbp9+oa4mLMEpRHU/2yOBvY
kuz//9fvxhmSX0YatI0ZqNvHN8KluMuoEPdDv1xXClvjbsi34G15pPxenA++
A37hi8c6v4o+gA/jrsbM5H+PuYfL8hL5LoyWF8nT+Jt8H2TGWjkXpvIPxb3j
v453FOeaz49tcQ/orRis30srxPvVj6Hn4j7TjvRXWiLed3xeXk2z4DImyIfp
I0juvbSLmc3vj7lMm8Te0SJx33DF+lKaERfxrvUDtFLcPWvT416gb7w7Wibu
WMwzmhvT+IdjXvAr+DKxd/I8OS2GyKPlsfx5vhPSxp3VDdAdiLmHq7GP+FiX
hNd196Girrm8ki8bzx7vHO/H/ZU7I13cG91A3UG+Ga7Fc6ESWuhX6cphe7xn
tEdltLS2Wl8eO2Kv8TKq4DoewaOoGnfHZ9f4XIWYCfFMuJo+kfgPzapYNQ==

           "]], 
          LineBox[CompressedData["
1:eJwVy7kyg2EYBeBXLB03QKNwFYgtxF7ow4x9GUks0Wq4BPtSGBdBaQ2XgNhi
xhVoDIVH8cz3nnP+v3E8N5KtiIgM33UR9ZURW4mI7aqIL3eeWhZ1G7qye5Qf
+YxuJvQXuhYe/v8lSw+Ttkt9K4/yDjnSTNmu9Eme5F3y9DJtu9a3UZL3WKKP
GduNvp1neZ9l+pm13eo7eJEPWGGAOVtR38mrfMgqg8zb7vRdvMlHFGiWh7wL
9nt3inf5mDU29R+6MX7lc051CdZ1DRTdTZy4P70paqojhn37B/CHM0I=
           "]]}, Annotation[#, "Charting`Private`Tag$1085706#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nf8jXUYxvEj2bOyyy5b9oqsbEL2zmhpEE17r4oGZYYie++9t6yEaIek
kqISod73H5/X9/pc9znnd5znee6XvF17NuuRJJFIFE+aSKRIlkg0T5FITE2e
SKTBLP44Juq+5U1wgVdCH912Xgr7+R6eHgP5CL5Qvip3w788JVropvG0mM03
8qR4iXfmk+Tv5Kb4iX/Gc+AN/hDvK++QS+MA38szYBAfyRfJf8pP4KpcGTf1
Xzjz4B19Kt5S/lBOh7NyUXyi3+S8E5lTJhIvm12Xa6CL2WTn97qMZo85f+Pl
UYhfND8u34v7+JvmSZz1eSlnZfN+8k59Bl7GeTFmKMgPmu+TM8Zn8MHm/8l1
McpssfMv3ZO4xU/zvHiXp+at5OlyeszhXTFF9wNvhp95FfTX7eJlo5NL41P9
fuddGKJP+Pv15NH6Jc6/dZl0Tzn/5FVQjN82PyPni9+Wv2eezPlofK4zjXlr
eUbcSzyD81y8F/n5XPPNcjJk4a+Y35BropvZVOdZXXNclivgF/3n8RvjLf3D
fIC8Wy6HQ/wAvxtD+Ri+VL4mPx2/KU+LNrqZcS0xjz+BabpzvAV+5VUxULeH
l8dh/gbSoa3+I91dmM+fRDWkRwa0M//Y7G4s4E+hOgbp9+oq4Ah/ExnRXj9L
dw8W8qfxoe48b4lLvAYG6/bxijjK38Iy3T/8mbh28Z10HXSz47phEd/Ck+PV
eB2fLv8ot4r7mNfEEN1+XgnH+EF+D4bxsXy5fF3ujr/kh5FE/jKuZ9yPruF4
ntzZOK6B93SM5yqed11m53leHPfzxeZb5RTIyl+LPSE/Eq/h3c1nyBfi38Rb
O3/nFVGYXzY/IecM+FjzO5wN4jPMhjoPxN7AL3IZfKb/1JkJw/Xj+Ar5hvxs
vB9fxffDhLge5p3kOXIWLOHbeEq8Hu/hM+Wf5Dbx/XgtDNMd5JVxnL+NTLFL
9XN1WbGUP4faGB7Poa4KPufvIDM66+fpsmEZfx51kAVdzObrs2M5fwF1kRXZ
YgeYLzDLgRW8B+phhP5QPDs4wd9FdnTTL9Tdi5W8J+pjpP6wripO8veQI54Z
/SLdfVjFX8RHuou8Lf7gDTBKd4RXwyl+KPYrRvDxfKX8r/wc/parIqn8tfOB
2C+u6fs8hbNJ7Md43pyLY3/rcjp/5A/G6/lq8+1yKmTjfcxvyrXiNbyX+cfy
z/F88nbxXXklFOFXzE/KuQI+zjypsyFvaDbaeVRXPfaEXBZf6A/HHsNI/QS+
Sr4pP4878Q0vgA/iN4udIC+Rc2EN38FToy/vzWfFvpPb4ypvhDG6Y7wGTvP3
sVp3i78Q+xc5Y3/olsq5sZa/hNm6X3mH2OP80dhn8UzwmjjDP0AuPKNfpsuD
dfxlNEZudDdbrs+L9fwVNEEe5MWz5ivM8mEDfxVNkS/ud7OV+vzYyF/DY7EH
9cd1j8Q+4RORP+53/Srd/djEX8cnuku8Y+wh3iz2oO5zXiueXz4Ja3S3eY/Y
SfEZ8YzoVssPYDPfydOgH+/D58i/yZ3iXuTNMVZ3gteOe5IfiX2FUXwyXyv/
J/fENbla7DT5W2dBTJRTun+axv0Zz6FzjS69roDzAi8R9wbfYr5LTovsvL/5
Lbl2vIb3NZ8rX47dxB93XuEPoSi/Zn5Kzh3wt+PeczbiLczGOU/q6uCSXA7f
6I/Gs4LR+il8nZzAi/Hd8Z1cCJPkArEb5LVyQWzl/TBP9zvvjH94y9h7ulO8
bvwefCoKxq7Qr9MVwjbeH61i78WzpKsXf5NPQyH00q/XFcZ2PgCtURhFUBS9
vWaDeRHs4APRJvab/rSuPr7nH6JYPBP6jbqi2MkHoW3sN/0ZXQP8wKejeDwD
+k26YtjFB2O+7g/eBdd5O4zXfckb4iw/FtcSY/gMvl5Ogl7xOzmrx66K7+Ys
jMlyqvg/ZuyreL6cm3XF8ZNcErv1u53pkMNrB5jdluvEnA8xXyBf0XfFDd4e
E3Rf8UY4x2eiRDyj+i26B7GHD0WH2C/6r3WP4nzsd5SM51a/VVcCe/kwdEQp
lEYZlEU5lEeFeHa9Z5vXl8Q+PhydYufEPahrHHs8djM26O5Ab13quA6xmzEl
3L+vmVzGWdFr/wd/a5kJ
           "]]}, Annotation[#, "Charting`Private`Tag$1085706#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
8fygqg==
           "]]}, Annotation[#, "Charting`Private`Tag$1085706#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nf8jWUcxvFDoTJCJKmMjIqMZCTKCskWUtmRLbJHQrZkZu+dEUnT3iJZ
WSEVLbsyI72/f1yv67o+3/uc3znPuZ/7+WVv2qFW+ySJRGLlHYnECykTib9S
JxIP0lupEonL+hwqnyaRaIttxCpSN+wRrAI2Vc9O32EV6G8sC3XEruhz6QVr
22GbsErUHcuKVcSm6Tmolz5Hvy7vMX9NH6Af0RvG38X+0R+iTvpVvZ014/Uz
+rz4+3p7fbP+Ig3Rl+vJqYd5Nr2SPN1sjrxTflTuLc+Vb8h7rXtdf08/qn8s
H5IbyaPlL+Wf+L18Kz/Pr8T7et1l+WH6Rn/b+ql8s/4Lv2benn+oH+RnzT/j
J/RzfL55Rd5B38O3mC/ie/XK8lB5hZyC1su/855ek11+UZ5hTU7qo8/T/5X3
mTfQB+o/6I3jumBX9Eeos35dX0C9qDJdxbNSF7Mb+kLqTTm8T2V8Jp6L9mMv
0TUsG3XF/tUXUSVr34rrg70Unwl7FHsJm6XnpnfiO+s35QPmDfVB+jG9CVXB
ruvZqZt+U+9gzYS4XvpH+ot6R31bdHmfXEUeJn8i30Ub5D/4O9bnlKvIO/ls
6+byXfopnkfvyxfEnuO39K/5L/pF/r3XN+KD9QP8uPlyflg/y5vqY/hX+s88
bXwufoFX9dobPAd1t25a/L7yLfwteaJ8Hl8cv4HeSd+uV6Xh+kr9buprnkuv
Ks8xe4wOYo2xIdgJvRlVw/6NvR37Xv9PXxK/V+xLbEesoXex3Fg1bK7+OB3C
qtNNLGfsMey2vpT6UQ2qSbXolnku6mVNgpZh/SmP96yOz8OeoMNYbfoPy029
sSRxb2ED6DHra+Dzsbx0BHuZbmN5qA+WNK43VsXaznGP6dXpPexxrCa2QM8X
30tfqP8nHzVvog/Vf9TfoLH613o6qmOe0B+LPWI2Xd4q3yF3lCfJF+QV1lXV
u8T+id9K3i/XkEfIn8rH+T1xTvI/+V9x73ndE7yWvis+V5xV/Fv9NH9S78cX
xXnDb+ur+Sn9Ev/B65vyYfr3/GR8Fn5Eby6Pk1fL6WPPyBd5Xa9JIj8ee8aa
GfI2+U65kzw59rT8iXXV9K7x2fSa9L6+Sk9Jg8zz6rXlRWb56RjWDBse56De
guphSbEnsHf1ZLQy9hHWDftWr0WDsXzYy9hHegE6jr1Cd+B58X5YcvoUG0JP
4nXwxVhBOoHVpzvxfHh/LAWtwoZSfrwuvgQrRD9ir1KyuNb4AOyuOHuxYfGc
oeRm+c3ew++mz7Hh8RygFGYFzAbi99AX2AgqgNfDl2JP0ck4a+kuvGBcOywl
fRn3DNYd263XjmuMFcRewZbpham//pGeiOtq/oY+Is4SszdpvL5Gv48amt+t
F5IHm82Ut8up5LflKbF34nvIP8pfxT0r95D38u/MlvAD+h/xe+gj+WdxhvBU
fBM/w//mI72+EK8fvyX/2Pr5fLf+K39aH8AXx3OGJ+Fr+On4/F7bXH4/noOx
5+Sjckv5Q3mtnIEaWXeP/pQ8xCw1ddanxn0UZ3GcOXpPfY9ehz7AnsJexZbr
ReiXOA8pJV4YH4qliXsKGxVnAaWKz2w2DL+X1mCj4z6LvR3XPj4zpbauiHXD
rUlLa7ExVBh/DV+BFaVTWAtKgxfFR2DpaB02lp7GX8c/wYrRaexNuhcvhr+P
paf1cU5iveJ30uvG/Y0VwRpgK/XicebpS/Skcf3jb8dvFM8xs1Y0QV+nZ4zr
bJ5WLy6PNJsl74h9JHeRp8mH+N+xt+N8iWcR3xBnMO+t74tnq/nSeA7qf8be
j+vPP49zlafmm/lZ/g8f7/VFecPY93E+Wr8g9p7+G39GH8iXxllLa+VfYxbX
Rv4gzsc4R+IMlFvLE+X18v3Uyrp08T7yB2YZqKs+Pf6+vNG8jt5H36+/EvsN
K4Y1wlbpJeh3rCU2Kq6l3oZaY+mxEtgoPSNtwiZQcbwx/hn2LP2BtaH78Gfx
0dj9tBmbSM/gTfDPsZL0J9aWMuAl8TFYJuqmz9Avx5kh/xTPHb7F2rr8Hf2A
WX2ahJXAmmJf6KXoDNaOMuKl8LHYA7QVm0zP4s3wL7Hn6CzWnu7Hn8PHYZlp
GzaFSuJvxNmBPU/n4v8vyoQ/j4/HHqTt2FQqhTfHv8ZK0/n434YewEvjH2JZ
aAc2jZ7DW+CrsTJ0AetImfEy+ATsIfoGm07P42/GuYKVpYtYJ3oQL4tPxB6m
nVg9rG88L/VXaQZWGmsZ+0wvR5ewVtjo2HN62zg7sSxYOWyS/gh112fqV+Rd
8azS39UP6q/F2YuVwVph6/TyNEhfFs/bOLvMW+tj5N/juSYfk9vF7xj3mZyJ
Olv3kF5enmw2W/5Gzir3kGfJh/lV/Sv+c5zF8SyU+8Ue54fMlvGD+pk4c/RR
/Av9JE/Dt/Bzsc/iPb2+LG+tfxf3lvUL+Z74rPwFfXCc9/oxniy+I/8tngux
7+Wx8QyxbpV8XG4vT5Y3yg9QF+sejveSp5hlo576bP2avDuez3r/+H56g/ju
WDmsDbZBr0D/xH2DjYvzR+9AU/RNembaIV/iV3lXa/8HFWgeGw==
           "]]}, Annotation[#, "Charting`Private`Tag$1085706#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8647431443886185`*^9, 3.864751680232676*^9, {3.8649246263958454`*^9, 
   3.8649246663018637`*^9}, {3.8649247386913157`*^9, 3.86492476348625*^9}, {
   3.8649264053781443`*^9, 3.8649264245239162`*^9}, {3.864928178079486*^9, 
   3.864928183150836*^9}, 3.8649282170238175`*^9, {3.8649282854075727`*^9, 
   3.8649283192815533`*^9}, 3.864928522906314*^9, {3.864928905872735*^9, 
   3.8649289410632877`*^9}, {3.8649290175684013`*^9, 3.8649290496279716`*^9}},
 CellLabel->
  "Out[1118]=",ExpressionUUID->"dced69a4-a021-44b8-82fa-7389e1d1f18b"]
}, Open  ]],

Cell["\<\
Now Update the Initial Conditions to what were obtained at 3\[Tau]/4\
\>", "Text",
 CellChangeTimes->{{3.8649282235057096`*^9, 3.8649282474809113`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"73fb2c33-247d-455d-a7d4-e35923108b5c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"Weight", " ", "=", " ", "0.3"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", "ICs2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess", ",", "Weight"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.864741199114215*^9, 3.8647412309450274`*^9}, {
   3.8647412638285017`*^9, 3.8647412753688107`*^9}, {3.864741323608369*^9, 
   3.86474133960525*^9}, {3.864742124890915*^9, 3.8647421532108536`*^9}, {
   3.864742303924614*^9, 3.8647423252527876`*^9}, {3.864742422178767*^9, 
   3.86474251208799*^9}, {3.8647427673552923`*^9, 3.864742767707179*^9}, {
   3.864742898915184*^9, 3.864742916706489*^9}, {3.86474298969613*^9, 
   3.8647431190277376`*^9}, {3.864743150598633*^9, 3.864743155105189*^9}, {
   3.8647432289685497`*^9, 3.8647432331092243`*^9}, {3.8647489797039957`*^9, 
   3.8647489831718855`*^9}, {3.8649246904680023`*^9, 
   3.8649246982424765`*^9}, {3.864928268610037*^9, 3.864928271763013*^9}, {
   3.8649283309997425`*^9, 3.8649283435056763`*^9}, 3.8649284456104593`*^9},
 CellLabel->
  "In[909]:=",ExpressionUUID->"0bdf49aa-3cb3-4522-a441-0032566f22ad"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 912, 75, 17534376668544537073, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8649285522817583`*^9, 3.864928583121726*^9}},
 CellLabel->
  "During evaluation of \
In[909]:=",ExpressionUUID->"d80f7c3a-cc7f-41a8-99ab-743e6b54b727"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
P+xCy/7+HD52eRr563SlOZ7uQ6px5b/pnVTAIdpi1dEBdPCjdcy7ajpsX8se
abcbQj4sxV/PglhwVm2ZzojVCFJIOHXwWDF7zmcK2PJ9u+dv4nv/6zN96uox
K9vOAkFRnsJSuymU4m+1tGmPADw1XFVxJGAGyWwLX1USMIuMQzi0pKM8cNjG
P/DqcB1KMMiiVOnygqpF58fTfAMY6UNdaK9YfN2XH8/+cWSJ3S066P26Wpl+
moYbqLfmVl5nQJ7k0XrXmz2Yf3Z2Y6oXE5hGyf1F3sR3h3bUqXmw4Gai51vV
fTywTJzjbU2sO+vYw0ZLVgoAs4xbZPNaEAKtNb2ETjNBqeX4GPUFBzrrZlxn
iHw3MdzrIxUjBJ+X5X242sgAjqdy9uqjwhA94a6VuVoARmJa+tyKifuc6USx
VhEFVMp2FS84LgLeYhXnl42PItKnCjoZ56ZqR+Sn2CDvptP/8rmoifm3Z1f+
rQfSr4KbE/sc9vPjpF+1MTHbdg1Rj5B+FeXsZbv3+gL4xfAts7MXO5CaS2Z+
ytNhJD50TKg/sgdZ/BaQ6JOggGS8+MMZg36U5pFz8o2wAOR5bj1bcm4QtRk4
f8MsmBDVkil+y2YYGcbdrtlryAb/GrtdfuajKHU2XjiFWM/PFRouBlmNI8Xc
6TtUIzYUjSfYOjpMItpbFu+aBwx437pr79vb0+hqTIV0DpsKswup8qtfzqIA
AyvP1u3DqNp48tCBSl7Yt4WbV8fgwUnfi05R/fCMxcb5LP7a3KTRIc3zXdLI
AAt/HiPQ308l6pHh9eeKdr/D6B0zz8qIvFLO+pHlvX4UZa4r+VgnzAb7bo3k
0BNUwJ5DzuNFgnBMnkPFFzGglGv44pEcB+5ImXu/Ic5TtcDDtfHLheBpzl61
KxgTniq50hrFhWGnqVPBrQQ6yHw5uWWXvzD0raSWem+hzflhCj4c3KGZg1Pc
MDn/xf/idYd9j9L27V+8SH9szb6nrU8MqDjpj43w8Slv9mHgpD92bp2n8SlT
Op7ZPNg6+2cAyfDVTv+OYYCd13n+z4NDaL31CYoklQ3X7udnq3eNoCPq34Qk
iPyz09Sj+kvbGFrLK7kMfWDD7pt7dF5MTKASsUq7+c5M+DO1mI2mp1BN8KJ9
crk0GDLXlp3JEIDqee8XPnjKwTvaTuZ457Gg3fLFzBdHCtgavFnpXsOG8qD5
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
UxLJ+j25YN+CVWzQsMXx2yoVSSL0o1xE//sJUCAr9GRTZy/4VJ0kJ3yIDv0u
07YkLWeABL3855Xk+529xMT2sOwIWPqDESEe/7cPl8nT3VOWTYeVlUPDJzL5
iDu8nshrcVxYa58KXbP5iWsPd98r9eXCAJ2e9U1tIsQc67TW49I8UPXweuLa
Dgpx7vWFgwrveNiXs+tuc3tO9j99pcP0rQFUwv7kNfNNUxNAnm9kxcI5ksSc
z7ZLSihswFIQHbKuoIM/Ia9+lwd2Qx/dX1qWswfALyWRuKk8Otzsc2l1u9Qo
aCkKd+cn+5/XR13X7lbnJzyexlvWkfV0gIbl1mN2FEKhTl9noISHfbrv9d8P
WZDPH/l0m/+ob44lzzUtiu/bxWVUgvFnj/RXHTb4p08n9XGxxuj3AfApP9J3
GdmP8CkXGit4jIKSEVc7g2g6zP81+LXsKD/xYSqAFTHMhcX7Xg+9D6YQnwXB
0ftk/4P8uh3VffLeZ8h6/sJSiestVAIc6Pl0gKznDU7Vpx9P6wOp5lkSLYHk
+5O+yGPhAANsWJsz4/+FDsv5rint8RwBY8t+dkWT9d/M8dZu3Q4+wtpi9YrP
v7iw51Ka1j0JCiH/4vq9VGce9u9enjO4GkT2P6WgbLQmlkrULasLPCNH9g95
0vU3WwaBfqdcuwzZ/4hUC5WxZkbBTsq1xd/f0uG3Fv8x3wR+Aiif+i4ez4UO
/u99jb7/z+9njLfv/cDDPt4eH+Z1Twuyf3gXlhfCL0lM54/H7VnEBkmXiRuj
xf1go8NKBT6yfg3SpAY/mBgBbvNXjfzP/wcNrVfwS1XgJzS77ow94JuGpy6e
0qs1oxCjx1N6Z+XxsK93Lm+3T4cduV5a71tuhVSC70dymzp5v5L1IgR1rQdB
5b0F0Wlk/+DHbRMRLRgFS/yk3D+/oMOSP5uPJtzkJ26uXacvWcuFD89q6vi+
oxA3G96Xvaoi68e/5oeoqSyBQ7Zkf0j92ek/TCUmbQWFktayse9XcUm76Npw
PFCK3HloOHcEvBc4+kCJXG+Xv/hscBfgJ37G7lnjxOJCpbG7m96qUgjDNZel
7SPJOhr5f/cXUf/sJ8+fkNcv/N9SCaH3ionG68j+c8OTl19PMMCFmz+728nP
r/1M/+s8FoWY9njSMzuOh33AH/dOq4iSzy85xWSRO6UHNA0H7tz2phtazbj3
5O0eAIuYQkcrIR32ff31UUN7FMgbicqKkfvNyYdF3+kEP+E0KnumaoYLk0b0
CeY58vyUKvg2VMkD3upuImNVVML2ku/1UrJe/acfONqaN30kbQB8CWvpPVtK
rscNG36tOjkKjmzoS6Q/pcNNT5tO7rXmJ/xu3StljnHhvN27DhvfphDvZJRh
Gbn/7qwcatL7RSWueRYyRjexsR/4vt8va4ysj6SacuNGPgyCfYpXC4XI9ffO
x3q44QuFCF9537qimKy/erN7Dw7MIw4eeudsR/aPGvfstvXSRwBlScm9//n9
8oOFV9RaF/MTn3S3Z+SR/V3pV6nkve+phKtXwV6TDWzgd1inOmnjIDg9FC7Z
TNazrSdqX0okUYjcerVF88n+QeF08tsdA1RCa2jPoSOqbFDDDJtn9GoE1HQI
DkWRz3fxO1rbSw4fEfvHb/bJIS72Cb+qKutLkes9yXLThc0GDCCfRzN3IvdP
5BPef3My8S35vMzoa2/Se+mAqsc+ui6qG4auWuMWtGoUcLktQxfJ70+5uvj6
Yh1+4uzUbU1dcr+SljSFyo7k9W92qNhVzgNWclOHZleSn49pOu5FPp9LVnN9
14VTiMzGrl/+5H6SucR0R1EHlfhGvj5a5PUin3DW1iDPs+T+av/EgyLFzwD+
SV/rZ5P3twdc6jadnkeo685mdZPnRfvPkiad2aNAbpO7XwZ5P02NvjReW8NP
1B6IO/6U/DwSYyKCKiVUIre7eUc6+fyqZCY3fvMcBMqzdqeak9drdPFRJTOX
QoS4vFS7Qq4n5B+aLvjUuemzP/AhJhOflI+AW3J6obXk969vVwrUn8NPWMim
BTxnc+HoAnaTnT8DLDRbZ7+ZXP99SQl2PlwKYfdtrLSH7EORjxhyIDkui1wv
2y8Gz/21YxTYLdguX0mu789vnFZlG/ET4VpCnnenuXBT7eai9+7k/iGZmdxC
vt/Pdgxmtn+nEm5fhw68IO/fv/mK88zKrcLVa7GvaLR6Ee1lYTKe9xIUv7Qg
+nQLnvdSFVMx1C4+gH3FlbPtX+mFjGJfkWHhA3V7WdhXnGeerm6S+ve8F+Yj
DYm+hhHsK/rHLH5qtqUP+4pL9Wvc5uf+wb6ivN5Z4fCwR9hXPCzXvmpw2S+A
fEXa+iBTReEBgHxF8OEE16BwDCBfsTUhYE1iIBcgX1HfpaBxPvneIl+xfdcO
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
/g+N+Lj8
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{518, 424, 438, 439, 440, 911, 774, 663, 578, 517, 482,
             938, 801, 690, 3347, 3348}}], 
           
           PolygonBox[{{423, 422, 467, 419, 898, 761, 650, 564, 503, 468, 927,
             790, 679, 594, 534, 420, 899, 762, 651, 565, 504, 469, 928, 791, 
            680, 595, 535, 3345, 3346, 566, 505, 950, 813, 702, 616, 470, 929,
             792, 681, 596, 536, 426, 900, 763, 652, 567, 506, 471, 427, 901, 
            764, 653, 568, 507, 472, 930, 793}}], 
           PolygonBox[CompressedData["
1:eJwVzzsvQwEYBuDjNrQdxE8QWn4AK4uyWFgMEpcmBomoe1K3H+GaYDUYMGFi
oa3FZamBSAShFIPEJuI5w5Pvfb+vJ6enNpXuHi0PgqCMDNvCDkuMVwRB0TFD
HS92u3b1HOj9nIa/1SNs6Eku5DYKcoRjuYmsnOZW7uJRXvb8hPwmz/Ig94Tv
kPNmC1fylznEq9/vmXH+OHR7NfuIVQbBgF6QO6nS7/UfeYQa/czzy3KUXzbd
n83e8Bvc2/VLOUm5fqN/y8NU61H9RG4mJ5fMFGPyndnNk7ziPZPyuzxHnHO9
lWu56L4vJzjSB8narYTfwZbeQYxV+ym7kjxPgje7HGtMu33YLdDAu12edWbc
Pu0WaQz/r90/g49E3w==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0blOFWEABeC5iwmVsaBhxxdg69gEpEIKiQmKLAXGQgWhQt4AURFU1BdA
BBVkUYJC4YJUSAMWsogSEwsSChILEza/v/jyn3Pm3sncO6evdF7oiEdRFGOG
EWGUGbZJuljFU04koqift/ZfJGyVPCFpv88be67ezBS5thf8tMf1Ch6TsPUx
bc/Rm5gkxzbKlv2mvkCRPk9MPsMgcf0eUz7XrS9Tpi+SLW9SK3+jUZ4gWx7h
R/htep28Rrvc6tzhs1zonCOSrzn3wn3kaudXyuVG528eyfvh2bjLpHunJqOo
U/7HH9dT9Prwm7iln9SvyrvhfnpML5W/kKWf0tvkv2yE/1Y/J69yWW8J9+W1
nOV8zmZ4J/p5+Ttt8icK5Pccu76qn5WXKJMfhhcv32HC9S59iRJ9gUx5nRp5
hQZ5nEx5ODyb79zQP5Kvv+PIVqo/4Jje8Jy2DPkSY2TYnrFuv65/IE+f5dBW
og9wxG3buC1dvsgr0m1D4d3ZDyi29XNIj33MlibX85L/1mxhFg==
            "]], 
           PolygonBox[CompressedData["
1:eJwV00drFVEYBuAxEQOS5k3yA1xpirGBZacbe2JdGBCURA0IRixg7/0H2E1T
k7UVrFg2xthdGAULiopCTDU3Iog+3+LhvN87d5J7zswdWb1uUV1GkiRD+EaL
0EqaiS4c5Td7M5PknK5IXkgrRboGXukHmKA7wiB79M26QnkBLRTq6nmprzXf
ocx8jV+68ebDpNmta9IVyPO5QIHuLC/0q823KTVfpV83znyIAXbpGnWb5Ham
mh+Qkt8yK74HlfJ5UvIZnrvno7lS7mCVvML6g1tyifUKfbEHa0/sXz/d2s5Y
ucr6mYPyn9ibdWecVexnaJLUyYN81WeZl8jv2WjOMdfInTyKB2OeIt9nhHlN
7JU3cqZrM+M8qDAPNy+LvxvPyvw37uE0z/zvlOtr5TQfXB9mrpBfs9KcbV4u
f+em+Z+1mMv0xplbu+PcXJsW349yean1EwfkfnbEc/b5L/Ji+R0b5DYmy/fI
lzuYEWfOPLmZfPkUT91fY77BaPOlOGvdGPN++tge74NuvfyQSea75MlzaSLP
fJInPldtvs4o88XYi67MvI9etsU7oMuV59BIru4Ej/VdlMZvgR62xtnqcuTZ
NMTz0x2Pd0H/k5L4LdDNltibLjveP+rjzHXH4iz1nRTHu08Xm+O769r4D8R3
f/w=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1GV81mUUBuANpDsmHaNjY4BiIRYoWKioiG5TmEopohiASAgIgoTdYoAd
2Aq2gF3Y3d2Bndf988O1+5yzeN//85x3xVWTRxxTWFBQcJYvyV6+vCrPZxxD
2d3sZ3kXC9iC7c0+l9cxnYOpRm/z1+QFjGcYe5j9Iu9mIVsyyOwLeT0nc6i+
Lk+pD2E/9d/yAZYzVt+UF9XVKVG/Li9konpzJqhHyc1Yn/fNnupf5T0cp27H
6eoq2ZAFPJdnkF1ZzgD9DvJLOVveIHNIrVnMDP1hsh7zeVo/VXZmKeX6EfIf
eap8UB4vO3BmzlU24yX1DNk971ldKt+QF3GUugUTc7ayBhtyluyl/k3eyyK2
Ykezr+SNnEIF+5v9Kx/K/VKDPmZvyovzGjkftmYn86/lTcykkpqUmb8lL+Ho
vDbbUIva1KEu9ahPA/r6nbflpUxib7alIf187x15Wc6U4WxHIxrThKY0o7+f
fVeuYDL7MJCdzb+RNzMru0Pz7KX5e/JyjmXfvLbZ73INi7O37GL2rbwl95u7
5IAsPw+LsynKnurfl1dkd7KX+po8lv3Me1f/IdcyRd2eM9SHy0Y8n92W3Rik
Hiy/k3Pk6jyTbMMc9WhZn9N4Rj9NdmEZo/UH5vPJXB7RnyA75vU4Rz9eNmch
L2cHZI/sWz4b+gHyA3ll7lHdkinqclmLx7OzOWP1n/I+lnCEvjEv5DPBEPX3
8tbsNmMYaVaNR9Xn0iI7qf9QXpXdzy5mR9nV/Ad5G3OpomV20PwjuTLPlvvI
TtKK1rShLe1oTwc6UkwnOtOFrtlPf+tjuYoTc3bZGXYz/1HezrzcE92ym+af
yKs5Kc+THWGo+U/yDubnLOiefTX/VF7DVCr0tXlCfVD2Tv2XvJ+lHKlvwsbs
AMPUm+Sd2VN129x7zlI24Nn8Tv6Wujrr8hyymPPUE2RR/o/xin6m7Fn4///w
HvqB8jM5S14rJ8lWLGKavlLWYR5P5pllJ5YwSr8s98xYeubO6EVvSiilD2X0
pV/Olv78ByLmq7E=
           "]]}, Annotation[#, "Charting`Private`Tag$976754#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1GmwT3Ucx/ETybhc+/K4Kdu1i9KTYiZLQlxmYjThEpMp+5J9DfHMEu5u
rSfZIltSwl3scglJRPYle3dCr++Dt+/78/md3/zP75xzvZwxPH3YC0mSjPfP
QowsmyRXyyTJBLyCv3Xf6l7FFrkffolr5QrIlNvjEH8HJbwCdvFW2MeH4wzv
gYt8kf2j+DU+EX/yD+I3eIH5Fo7w2+bHuOL6dWZdPMP31q6YH6Hii0nSXy7h
XVBOPic/5J+imrzX/kU8Bf8hy/ols2+cwXoH+TBvjzLySfke/wRV5BT5R94a
+/kNMwMj+FkzHX/xxX5nNL/OJ6EuCuW3cZRftb6e18NWeQD26RbHOZAtd0RF
LNGP0d3gk1EP13T78RXGWrupm4L6uK4rwFKMs3ZLNxUN4n51a1CIZRhv/bZ+
Ghripq4IS/SVkKPrhEpYrv9cd4dPRxpu6YrjPvSpyNW9i1Rk6ifo7vIZaBTv
UXcg7k1fGXm6zqiMLP1E3T98Jhrjjm6Drj62yRk4GPce7wP58nuogt3y6yjg
I5HtuknyPT4LTXBXt1HXANvlgfG96pbLVbFC7oIjvANO8ar4ib+BQj4Kv/Oe
uMRz7J/M7/PZuMB7oykvMtviWJzFHBznc/0msyGeY0d8D2a/eOa+sUHySd4V
L8l/yI/4Z6guH7Y/M75nPMVK65fND+O7tt5VPso7oqz8m3yfD409/GezDRJr
RfHO+cB4f/Jo+RzvhfLyZfkxH4Yacq7fnsIf6EvNL8yLZh8048VmOxyPZ20O
iedvz3dmGnbGt2v2j79nfsrshvPxzF2XFWfEKrkbjvFOOM2rYw9/E8V8DPLs
mSo/5HPQPM6q26xrhB/kwfE8dNlxBqyW30cN5Oun6R7xuWiBB7otusbYJQ+J
+9DlyDWxRu6Omlihn657zOehZfx/ozuOXH0trNX1QC2s1M/QPeFf4rV4t7q1
+BWrMNP6v/r5aBXPX3cCefra+FqXjtpYrZ+lK+UL0BpPdCXI19fBN7qeqINq
qUnyPxeSzvA=
           "]], 
          LineBox[CompressedData["
1:eJwV0zdPVWEABuDvFoyLxqgDvfwA62ABbDihg8aIBXXQOKCoTOofsEuxobMV
6cWGmtiQCVyEKCAKaMJg4mDigNJ8zvDke9/3nMPlwr15hyp2nIiFEEZYOC+E
VfEQ/hqeJkJYwiu9jE+223oq9fpOUmmwn7FNypWs5p/tM42cdW3KVsUaJm0D
3LGnUSc32EtIo0k/Z5+Wq1nLlG2Qu/Z0Gm27SKfZft42I9eQz7TtmW0pr/Uj
DNnu6Rk06bvJoMV+wTYrX6GAGVunbRlv9KN8sd3XM2nW9/BRLmZIzqRLzqdH
PkmrZy7qgat6IT1yEX3yrOvP5eW81csZkLcxKg+7/kDOokUfdx5gr9zn3EIy
6XfT/8jlLNCz9PdyATG9V/8lH2a+fkr/JpcwVx/XJ+QKFuttXvdS9Gz0f+Wa
6z+cpayTe52b6Zd/O8ui9yi/cK7gnfzTeZBj8qBzO2PyVz+7Ts6mVS+lX97K
sJxNt1zIB/k07Z65rMe5rq8nxkt9JV3y8eg9ue+hnkObvo8cOuyVtgQ39A3E
GbHX23Jp1/eTyyN7VfS3pVbfSIJR+2Oq7SnctG0iyZj9SfT60Xcn+vxFnyFq
3DeHW+4pIoXv0WfelkeHvsj37j8+5Hfc
           "]], 
          
          LineBox[{3348, 518, 956, 819, 708, 622, 483, 939, 802, 691, 605, 
           545, 441, 912, 775, 664, 579, 519, 484, 442, 443, 444, 445, 446, 
           447, 448, 449, 913, 776, 665, 580, 520, 485, 940, 803, 692, 606, 
           546, 966, 829, 718, 632, 991, 854, 743, 1017, 880, 1045, 450}]}, 
         Annotation[#, "Charting`Private`Tag$976754#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfclmMYxvGnIWVToq0lJLvMFKEookRUKO097VHRHlQaSEN7ICNaZISM
JGWGQqHsvcf3+OP3Oc7juJ7nfe77us7rfKt26NOid5FCobClaKFQtnihULNE
oTBsj0JhTyzhh/CfqK9FT74jv059Hh5S74vd8nvoz7LrsEZdEU3k59NFsvW0
Nl1IS+JDbLQ+hn4lf4v2oitpOXyGu60PpFvkr9PL6KP0QGzDn9bvp3/J36G3
0rW0Cg6xdjgdLiuJOepiWCofSj+VdUQvvhP/oroxvuIn87+or8f5/AX8YvXR
eJMfy3+t7o0J/CD+bfXl+Is/FLVkI/hS2Se+NzrLXuKb4Ov8XTSVLeHrYBM/
EeVwhHykbC88zPfJZ1EeR1obJd8bj/B90QwVUBFHWR9tbR8s4/vhwnwm7y87
JvvNT0Il1JaPke2b/eX746J8R/6Q7FhszhmjMo6Wj5Xth8f4Aegiezn7hW/4
5vkbsof547Al+4rrZO/wrfE3XwV1ZOP4/fE4f0fOX90JA/mu/Hr1BfiWn8L/
qr4BF+e3+EfUx2ORulTOQz6OfiPrg1Xq8pgiv56+K9tAr8g70IOwHf9Yn07/
lr9Lb6PP0sPwRdT6MXS8/EV6AJ1Li+N9PGH9TrpDvpF2pk/SshhkrRt9RdY0
56reD9/Jp9LfZDfiEv5ifpn6hPQ2P57/Vt0XU/kb+PfUV+JfviqOld3FH4jl
2Wt0l73KN8P3fAtcInuUPzHvyE9DNRyXOyc7KM+cfULLfEf+mOwkvMffi+o4
Xj5BVhpP5ZlwKWrgBGsT5WWwgr8RrTJfci9zP9LjONHnJvnMwbn7/E24LL8r
f1xWF+/z96XvcZL8HlnZnCl/M3rIXuMvxA/85XmOnAVfDx9kTuQZckZ8G/yX
e4K6ssn8IVjND+N3qrvgFr4n/7r6IvzIt857yJbzJ2Mrf1fOUN0P0/MO/Afq
tulndWkU1A+kv+jteE5dNTPR5+ulL2Uv0UPpPLpH/gbWWB9OP8/soV2z15lv
mcuZedZ70Q3y12jzzAS6Pz7GTzlf+nvuIL2JPk0r5T3T/9lv+qT8FXoKXUz3
yoy2djf9XtY/z5/95req26EIZvD/0sGZj9ZP5qeqy+V3+Nsy+2Rv5K7iZ/7K
nJHsKf5UfMTPyBzAKfJpsvJ4hr8dbbLv8hWy0/AxPzP3EKfK75VVwFp+MNrm
LqSfcZr1+6xVzD3mh6BdehenW7tfXinnwQ/FVbhCvlJ2Orbxs9LPOEM+XVYZ
z2dO4eq8j3yV7Axs52enr1Ff/oCsCl7IXEAf2cbccfzCX5P3k63m6+MTfgL/
g3oAHuRvyVmor0JRzOT/o0NyJ62fyc9QH4b56hJYJx+RmSXrhmF8X/5NdQss
y+zKHM19pn/I3qY3Z99p5fQc2mc/04fyV+mZdAndGx/hU+sT6Y/yzXRg7hGt
kBmIOdZvzWflb9Cr6RO0DIqpZ+VuYGj2lFZDXd9pQGfKqmbO8iP5L9XdMZzv
x29St8RvfIecq+xpvgE+4+em/3IP+GtQPPNA1lA2S10tdy77hGtz9vJnZA2x
g5+XfsZZ8tmy6ng5z4KO6VWcbe1BeQ2s50ehU/oyvYdG2QNrNXO/+NHonL6R
r5WdhZ38/PQjzpHPlR2e/ebHoEv6RP6s7Gx8zi9IP+Jc+TxZrdz//D6/S90D
Y/n+/FvqS/F75ij/Z2YbuvLt+efUjbBUvU96Rj4ps0M2CAtzD/lt6vZYrj44
M0o9mxbJ/yLckT6n1XNWqO9759H52Td6BF1A98wMyVzNftDd8k20J12RGZi+
wjjrA+hmeSv8wXfLWcue58/Bl/yi3AE0li+QHYkN/Hh0Ty/lzHOOOa+cSfY5
e5fnQxPfW+g7R6VHM8/RIz0hf0F2LnbxizNfZNv5DiiR+8kXxZ3qdbRG9h+N
ffZ/w5x5Uw==
           "]]}, Annotation[#, "Charting`Private`Tag$976754#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
adk9GCBLjhyuswafF2dcrKPYj2pur/0/GAXNbA==
           "]]}, Annotation[#, "Charting`Private`Tag$976754#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfclmMYxvGnJVqUKIUmCSlpGg0NDRmliFIKae80NGhvRbuU0R5oay9t
2oP2pK20JOV7/vH7nMdxXNf9vtd9rfvJUa951WZJEonE2KSJRNtUiUTdNInE
L6kTibeRDOtlk/Gp/DzfCblxStYO78l/5d9BcmyQTcHHqKdti6wWUmCjbCo+
k1/gP8EjOC1rj/ryrXxt3IFNsmnoLv+L74xHcSZyWSZ8x1dBB9n7/Db6XaTE
ZtkY2Z0YxpfAdFkP/iLdBXmwnH8SP9FntU+nM2Mif1itgldi/GpRrKE76vcB
vZ2ugx10qfhf9AI1N27gR/6EWjXa0ppbz42l78JVDNe+X62IFNpL8mvpZ3AL
K2JMak2k0T7D8z3pS/K/1a7qXrUcHqNXqPmwKNZIrYFznpmhPoBJ8iPxPng1
5lgthqT+9s/8X3RtdPLMh+oOWV3chYX8I5hN/6p9HJ0KI/hSmCnrxf9Nd0Ne
nJd9ggbynfx7SIUtslnoLb/Mf4rHcUHWGR/Jd/H1kBpbZd+jC7qiW+zJ2Eto
qO9ufeojDbbJfoh9g0ba9sjeR1psl/2IPvIr/Gd4It479gUay/fyHyBdrKvs
K1lqjORLY7asb6wf3R1P4qJspiwLJvOvxf6ji2Mt3VN7E/o3+kPspEvjbvon
9VHMiVy/8bHWGMUfUCvhRXqdWgi3sZI/p76NtNZujuf60dfkl9Ue6m9qeSTT
no9fST+Fm1gc5059M95N+6VYDzor/sEU7Udjj+B1+hf1WayLd1XfRS/PNFV/
lzXArhgn7qEXqXkwN3L9JsQ4MZovg7my/vz1mBs8Ffs51lj2IKbyVdFb1ozf
R3+E9Ngtm4cBMVa+F/LHe8e6orl8P98QGbBHNj/WLOYo/i9a6HNAWyPcG2dI
tgAD49zG/0UBXIn/g5byg3xjZIy5lX0tS4cxfNk4H7JB/L90HzyNq7EXZQ9h
Gl8NA2Wt+EN0E9yH32XfxH7AWL5c7AvZ4Fgvui8KYhWfH0voa7GX6YcxnT+m
voY34nyqz2E9PUi/1vRhumnMH10G99OL496IMWMef1KtFveTPbHPc9/Gesa+
wjjtB9XKuEN7eX49XRgJflWcd/qdmBd+kec/p/+T94t3pF+Ku41erRbAUvq6
frPpbJjBV4/7gX4eG+jB2tvQR+hmyBR3puw7WXp8xb8U7yIbwt+i+6MQ/okx
oK38KN8cmeNcyZZE//iOaTsma4EH4h1lSzEUX+BLDItvmn7HtbdEFhySLYt+
cSb5ASiMG7Lh8U2Tn+BbISsOy5bH34z5wkBZEfwrG4EOspN8azyII7KJsgwY
z1fAihgPnwSD+KJYQz+NZfRN7XPo7JjJ18BW+gVspEdq70j/QbeJs0GXjf1J
L1HzYj79R+yjmDP9J6n3xlnFhHhv9WWktMYV+Q10kRgTv5q/QNeKvcyvjLmj
k+IKBmvfp1ZAcu3F+J/pgrFPsJw/o74V3rNz1RyYJT8ed1HcWfQ2tQQ20aP0
60T/SbfFw1jKP44FcS7iNwydEV/zleIcxRrxyfA5Xxy34l7hc+J7/i2Mju8X
f4puh2wxjviNI7sP3/CVYz/HGsY7YQj/LG7H74/4nslO8x8jO07I1mCkPAWG
yp5DAmPjGyc7Q7dHDizjn8BC+k+1OlKZu5PxeyrOMb7V9nLMpWxUnE98wT+P
JBgX303ZWboDcsYay9bG9y2+OXFHx50W91Cc+zhfsf/iW+u5c/p3RK4Yg2wd
RscewJeyF5AU8/lc+IGuie10SWymL6l14j4x9kme/x9W2YQy
           "]]}, Annotation[#, "Charting`Private`Tag$976754#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864743162931684*^9, 3.8647431674292445`*^9}, {
   3.864743230555041*^9, 3.8647432344318*^9}, 3.8647489869306817`*^9, 
   3.864751685723919*^9, 3.8649282764404893`*^9, {3.864928335373318*^9, 
   3.86492834735642*^9}, {3.8649285287824025`*^9, 3.8649285839624524`*^9}},
 CellLabel->
  "Out[914]=",ExpressionUUID->"fb4d993e-04b2-453f-8f6c-221604221235"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
KnHyU6NNE8q+eurzuWlZqPIKrUhKb0DYn5dVzj8w/VGHsD/vEgKLE98wEfbn
fzepV/iq9iLszwf3Jqkd8+9D2JtrTm2evq44g7A3Dyw8saqkfxZhb/5z8iC4
OsVF2JsrWwzfqVSeQ9ibq3ZNUqrtiPvNf978c31SfG/EDMLefH6fdIZE1STC
fjxV6tHPhQGXyT3TnIE5sW76b4D3TEcz1tzTkq4FeM/0VfS1udpzdQDvmT7n
OlY9ta4iPfk8X/ls8nfi+eY/Tz4V1t231HIUYU++cJ+o8pmVbIQ9ebdEbfI5
EQ7CnjzzA8Oljo+DsCfvOpPQXbueuP7/t0+6Vm/CynZbD8L7pKtkKzZfetyB
sDfn9b/ZHS3ahrA3V3qmfJtJXG+NRRbkeCZKwavUH7dFahmI83hVC2W1NLS0
lXjRnsJAcE/V1rD30jB1F42factACdSRT8HrZCCffv78cE0LcuqyK03MloFR
+u4pXGHi+7o5JXK9nixU/aHsGjPfhLBn14KDgPK8FmHPTmVfX7vsOxNhz87u
3gWCq5kIe/bHjswJRhELBVQ37nvYPQKinjo4X74/i7BvD0mTza/8wUXYty9S
2ZhwS3sOYd9+4My2q+OxXIT3VDP67haH+30DeE913z31bJP31QDvqQ7cD9CO
f1cH8J7qu/nmuJEt1QD79Y8LrBYr/BlD2K/voZi+t+xlI+zXW6uuyHMVOOjO
3QZtDS9x6C5r9uTxdTZSl3xntdZXEm5Ksnp//14bwr7ddojuKUzcXyQ3vbQH
t6RgfcV93ogmBgrbvlrjzEJp6MqzXZWex0DWT8o0Nz+ShnKDwpUBbgyEPbyZ
brn4PeJ8hT18juWF9sOPehG/EZ+CdNsoSAssCYoAXIR9vOFQlU3c4jmEfbym
hdzau7xzCO+5LkrrlHgUXgHwnuvC1fOUGeE6gPdco/1VfmT/rAXYx4vXa3pc
d2cj7OPXKwxdiCTOHwJ3BwSDNojDYN4LKXqdbARfqWY0FknCKfcPV41Ot6Ki
xHxnla1S0Lv+e1Qxcb462XRZPP2XFFx/VVI8sYw4n/zn6wf+lBioztYgn6/v
NCajn4Al5h4n3FuJ8+R/3p5Z8TinMI+JnoSEHX8SOwbu/fqmXvmWi+5/gPs2
FXBAVgzT4ipxvsL7sDp6nlsqqv8CvA8bx7zq9SytDmxRK7k3EMkPKbqbNK6J
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
yy8++taln/Tn8od7So2Zg6Q/d+a7Nhs3PUL6c0bDeZ/exRyE98xH1VxFXqdQ
6WObHM/crqNAoB3O3nGAh473zYUv/D7WHEgj980nL98+cTl/DmFvPrtG0WTB
/CjAe+e/aJfOuFdywcOVwK2NVxCilHJp0x9UiPfPd1fESf08QYN4/9xtAsmt
ekKB2I/PnXUznXxcTvpxAY3M4Tz1WtKPvz4SP3E0ugm5ix+xOLlBDto8GpVH
qROk9/YWvXroMHcSpZuOfLy6qR0Y/j0jPNbQjvwX318hcbIbtHz+63lbiIko
27OX3HVhAX5T14QcYxYK7Au6rZ42CO72WZ271PU//3313401FVp9pP9mP7ba
1M7XT/rv2PKLdT4rBxHNTe2P5HMKXKp++rSxIg9d6F9fS3kEFRYdStyzg4+H
Lq4VdC7yuwD8kv713JgOFR70UV/5+hvx+rRn/VweQCP3x59ubF51JbEByRau
XTv+Qg42fYlP18+YRLFF8YkuRzqBZOLiW8ojXUjvQsTpPlsmkFN4VRhxshcV
O97PT3zQD74fOHlC4T0LlTXf/rP7+zD4dCBEy4XWR/rsH6/zj2hc7SN99nW7
L9ua+/pRjd25ImM5CvxTdNjuwVYavUMgnn9amgq7/TcEbTzNQ9dZoLx6uwoN
Dow+W7q2kkrXC3kxw90pANdN3JW4MT0PxJdNXFu2VRAu3aFw9oMucX/o3bkn
x1wIXrtT1/dEjgaxx77j1n7w1fU60luHUHY/fL5xCll89ssu6uwFc/Zy/46K
EfdfV8GPrSsGQV2c70NqEwupGIsvGU4YAeG2SUsFlfvQ3YU3fRqvEvcloyiP
3jEanTL3ateYJxUuiP3m/XYtD70iNdX5WqIA9Awc6giuosDbJ6Jb6t4IQnsb
sZAZXxrEnpoe2nBATqYB/bCRlstq6QHHDre1vVPoRVItB63a+PvBOXBP4eML
FoqLNup1iyGOWs/+fDI/3ofOvuHNRRMUWHEuKe/XSeLnxct70ZYJwg3iw3bJ
NBosKaXzjGoKQUYJZeCNCQ1mlvYHWo6zQP4y+nLj4yx0rf6r/J5cChRP2SC8
cRMPfRF1w+W0fCpUEdG1jf1No6tHvL/oyBSEwm8/luhdoUHPgS9LL8gNgGs/
NtHuf2GhI+dND+jqU6G91a6Tq0/w0C1iK29sPyEIpxXj9zkcopH75HptG687
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
+pznwqc84KP4nWN6dXx29cf7Ly/1TyM//ZkrJ3mCGPzfWO1go7G4EAb/d0Gd
riT6h0aA/9OqdTg6Ru7HylyecnIKEwt23Ypv8SLvO1GTneuWsHD+s06NRypc
NLBEwmddczsKPhxzv3CcT/lAsfrvDvFTDAw+UHjZ0sQACwYGH8hzv6EbRH7+
JraGmBuJsXB2c9j7Cj0u+qUs6ZLS3IryWDFGGaV8dmKgXJ5SQydSVdXJzw3n
s99uE059ZULDenf7ncw9GRg84YCJHv2fvwwMnrA8WvWb9WY6cUywKvbCCVGs
a1JtLa5FPt/rb67M+cjEfORoY15DziNfTkU5bmZhy512tYd6OAj8oZffMXl1
52q07+z7NPbDNqT+XaLQfJBPecSsQ4tOLyfXEzzim5Ro14nz5HxYmq19v5mJ
0fkbn4gZXMT88nUwLr4DrZo5IlJGntfgFVu18iVq/zc//esVZ4i0fOKTv79m
1f0LxQtZWKyKNSWrzUXGDz7Z6iS1o7G5L2/sJfcD8Ixqbhcax4YZGDyjYBC/
X+Q6nYhgLPr2UpCFNQSEy5oWc5HFqR9Cs+Jb0enAIsPyDHJe+Nc7rsr786WN
JoTBOw53xDpVmNGJMT9pjZp1LJz3dFGc1wQHlUdsmOKptqOR0IzsEXJ9wUNK
sBw1s8PpROZB9+knXCY2UWD47VLiIvCR8zbuLq2rjkLgI/3Eg2SNyPvfguad
dhVGLNwcZhgQJctFD/M2JzgrdSCn1e/sYsnvD/hJRr1227SQEAY/6e4yu3Ij
+feOJLc/yZdi4RNzDh3WJOe9i1Xri9YtbEP5Zm8awr/z2eArHZ+dEsnuZWDw
lWekp4lVTnQCfOWveJm29WerEfjKL/2JAlOdlZSvfJiYcbFfLZ/qiwr5W9ta
/9NC9UXdubf7G58PUr5SRqIiRSx0mPKVxwKMlk828ylfueZpmUzF/v96o3qZ
l15UbPlD+Up7FQuF4Fd9VB90tlrc3e0O5L36Xx/JO+eU9dxcAIOP7CrXUhVL
YGDwkSZBMTW/fjMw+MjNvV0zp48JYPCRcnoC26O541Qf1Hy0W01RqpUNPpKx
qdhAk+CxwUeGin1x3XZ7ig0+kh5yUyHhGJ0AH+nduSDj1RSNAB8ZV/FhXtCh
Sar3KW97+ec9gwYEvU98SfrqjZudCHqfOpXaJhtbB9E11bcPx2qZWGTPB9+h
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{701, 607, 621, 622, 623, 1094, 957, 846, 761, 700, 
            665, 1121, 984, 873, 3387, 3388}}], 
           
           PolygonBox[{{606, 605, 650, 602, 1081, 944, 833, 747, 686, 651, 
            1110, 973, 862, 777, 717, 603, 1082, 945, 834, 748, 687, 652, 
            1111, 974, 863, 778, 718, 3385, 3386, 749, 688, 1133, 996, 885, 
            799, 653, 1112, 975, 864, 779, 719, 609, 1083, 946, 835, 750, 689,
             654, 610, 1084, 947, 836, 751, 690, 655, 1113, 976}}], 
           PolygonBox[CompressedData["
1:eJwV0DkvRGEAheHLKGgUEluiIBK7xPojzCAxWoUIKkZDYW8sDQWRCGI2FBKd
KCQKphC/AcMPoKUxxHOLN+e857tfbu5tmJiLJ4qDICjCIsbIOAbQUhIEqUgQ
dOGZn2LS9sJnUIWl8FnbvT6CAt/gP/oO7vk8/9BX0IQ9XoojPeq8VU/r3TjU
y8N32Nfkl20LF3odkvYp+Wq7kbMyKSuRQ3X4XhnBHQ74lWzEE5bdj8oH+7WM
yxNZEX4Dfp1vyoL9Vu7KS1mPx/Ce8wX5aV9FVq9Fs74vy3CsxzzXpmf0Hrzy
df6tbyPFp3leT6Am/D+2WPgd+ij+eA6DaLdnbb3I8zRWMYQOZ2f2PrzxTPjv
MIxOZ+f2frzzLP4BgsxAuQ==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV0blP03EcBuAfYHTBo8hg4qAoYRL+A1AuBdHF0aMot2KKMiCgk7AAgxa8
YuJAwmDiQCKUO3EyDiyUo/wFHmyUitfk8x2efN73/dGmLSUtPdcS+VEU5ZEi
rjRznzcs84erBVG0Qv2BKOrWX7PEb67Yl6nz7J6+zXG9i21u21/ZFvlFk22J
WvtdPUOR3kmGZvtLW6k8yA69tgXbPpf1RWpsXXqFPEyOJ7Yt24ScL48RkzvY
Iq6/CN9NPiQ/56x8wp1kQP7BQ3ne351y34f3sf1jSP5pj7lvabR9DJ/NrXY7
PVt1y5jmnf2TWxi+E+X6Z/ckUwzpC+6e+9jd9Pov7hk+MB5+WzePUY7pxeF9
aZc3uSVPhP+JfFB+Fl4v9/OdB/qc56PyX57qOb1BnueC3qGfC8/Iht/dtmFL
ypE8wlG5jQ1uhs/meYn8iG/02FK2PS7pc5wPn1Nf54jeyjo37EnbabmPryRs
s7YsF/UUVbY2Pc1hvYU018P/zjbDLvW2WSrtrfoahfod/gOt3GD7
            "]], 
           PolygonBox[CompressedData["
1:eJwV00lLVWEAxvHjVFGLgqDIBhAKGqBJU5v7AJV6vQ6VbtpoFtpEwya1QW2R
BQ0UBQXmmNcIoiAoCKeu+hnKoWyAhl1tyn7v4s/zPP/DuZf3HE7W4bpYbWoU
RSmYRoVRiQS+YU9aFD1FfnoUHbDHMMeuxBhK+KtcL75iN9eHPL7cHsVsuwKj
iPMt3Ar9NKZwjHvCfcEuO4FcrswewSz7EEZQzDdzy/VTmMRRrof7jJ12L7Zw
pfY6vRG/cJ5Lcjf0GbTYGfIgkojZTa7f0TP0VizTF8tHOKlPoEbvDmeQneH8
3J/wP/o0v0Deww7uWTibzJEl4TxyFfrwgH8j5+EW1toDMhNtaLBfyp/ynHzn
/qxwVlznXsl/slmmy7dyYfjd8K7s5+EeWSSvuDcpVyKB2/zrcB+uYandLxfh
IU7YL+S4PCK7wjOXHeH9cb/RoH/i58u72M71IFuP8/f1ufpNrNHr8QNn7WHX
W/W/aLLTZDmGUWhfdj1TP44PqA7PmvuIbXY3NnPF9mr9Ar7jDDfEpeplGEIB
d4lbotfhParCWbgpbLW7sImL2YNIsUsxiP38Ra4dk8jnOrGRL7IHwgcUvoXw
/rCPb+QeYwJ5XAc28IV2P2YQD88ce8O7ttswjlyuHev5Arse/wEFxncU
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1mWYVVUYBtAZkAbpblBCulOUBpUUJERAupVWEKW7lBJEpUEaCRUE6e5u
kO7u0rUffize99t77nDvOfvcZzI2+aJmh8iIiIhKUSIiQv7pn1Kc0EdSmwIc
t9aYl/piuuMlEX9Ze4+T+ig+4a65O0nYYi7ICf1zXulLiOPF35tz85X5hexL
et6yN1fut55U/0kvSlTzSvk+p/TU9qbqo/Vo+rDwczKbzCYXyjr27oX/g0LW
ksqMcrYsI7faTygnmEvKguE9yWWyvCxk/6TehALm/8zp5IzwPuTv5rjyB3Nx
mUfmkEvk1/Zeyn5k4G3r8+QB68n0yXox3jCvkqU5rX9PdPvDzdmpa74ffh/J
2GYuzCm9abhpLBU9wnXg7/DZOKP/QD2KhN/JautlOauPoT5FiUFMYhE73J/w
uYjHGj9fjn/1sXxKMd7kn3CdOKePowHFic9a6xU4r4/nM0qQIFxzErHOfkUu
6BNoSElOW2tGJMvMPUnMenMlLuo/0oh3OWOtOVFYbv6GJGwwV+aSPpHGPDD3
IDnbzaU4q7cIZ4wV5l680vuH88LBcBbZqH/AZX1SuG7u0wjzO+F8mx/KnqRg
R/iM9n8MZy88J+Z/Zctwz8NZtzdT/hGusz5Gz0vOcK7kt9b/kwMoYi2TzCLn
h/shD9lPLn8Oz6wsHl4vV4RrKpPZ36R/SH7zFXMaOS28l/BchXsuR4ZzKHOE
8yYXhfNu75H8hpRksj5H7gz3QZ+oFw7PgPmcbEU0/gznwv5YPR/fRbz+ohio
Z+ZweM9s1j/iqj6Zpjw29yIVu8ylOa+3Jjp/mXuTgi3mKlzTf6YZZUjJVutV
ua7/QnPKkip8Z7DNXjVu6L/SgnLh2rDdenVu6lNoSXkuWGtDDFaa+5CWHeYa
3NKn0ooKXLTWlpisMvclHTvNNbmtT6M1FblkrR2x+Nvcj/TsMn/MHX06bajE
ZWvtic1qc38ysNtci7v6DNpSmSvWwhd9HNaYB5CRPeba3NNn0o4PuGrtC+Ly
j3kgmdhr/oT7+iza8yScVVKz2/wh1/Qvicda8yAys89chwf6bDrwNJwT0rDH
/BHX9Y68yTpzfGdoXDjHDDZHmgfpb3EknAnzL3qJsGbeL+vyMNwne9P1OXos
fVR4xsIzqy8On9P6M9k7nGlracNZlb/JsnJv+C6Rk8zvyiIyj1wuK8gq9m/o
nShoji8zyFmytFxvP4EcH96fLCBzyaVySHg89MH622TVF8ij4Szrv+olw575
gKzHI/03YtsfHX5XuNbm57IP6dhnrspNvTMJ2GAeSlSvG2LOwjFzFg7q9Xms
z6Uj1bhlrQsJ2WgeRlYOmT/liT6PTlQnG4etN+CpPp/O1OC2ta4kYpN5ONk5
Yv6MZ/oCulCTdzhqvSHP9YV05WNykJNc5CYPecnHMT/fiBf6IrpRizvWupGY
zeYRvOFaDA3XnePmVOYp4T6TT/8j8vXfRvnt/Q9HIAzj
           "]]}, Annotation[#, "Charting`Private`Tag$976865#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0+dvlmUYhvEHyjaAwYiCQCSuAoLsDQLfAFdLy2hBEuMEBNl7ypal4kAQ
SqeUtkhYkaBBSkHmH6DsveELI5H1uz4cPa/zuPv0fe6799v0ozHpoyslSTLZ
j76VkyS1SpJsSEmS1vhX/xUfc//po1Af07i+3F5zGh7q8/X/zcuwV5+gXzfP
wOv4Vq+BNeZ+1puZc8xt8JO5TnwGP0ve5RaiwNwI6/lP5Aluh/xSrpfPYx9e
iM+VKdiD1XqJfAX/YLrn+8m/+W0yXa6V9WIPeGR9gXzI/yGXy03yZRyI56xP
lDf4mcg1N8Ab5u9kTfxi7u/3mps3mtvihD5bv2dehA36p/pJ82i8GOfD9Y99
mAfgsb4P76AFn8u1w0k9BzPxLt60lse3xyl9Y5wd3kNLa/l8B5zWczE03gXv
o5X1AmsdcUbPw5z4TL6cy8ATvRwf4C2+kOuEs3o+5sZ78Pu5TCTYz6WhNV+k
d8Y5vQDz4t34Cm4gKqGCS0cb/je9C87rhfiMO6WPQQN8He8e/w/zIFTGAW4S
d9M8C6lxhlxbbpO5Ky7oRficO61/hYaYH3vjDpoHIyXuXNwFuQIHrU/Wb5ln
oxm+12thbZyR9XbmYnM3/Gyui4txlvI+txiF5saxP/4LeYbbKcfGfZD148zx
kr5cVsGf+EEvla/iEBbE2cZ95rfLIXKdfC7uZzwXd0w+lrvlSlksm8Yznp0i
b3O75ByZJxvG/w/N9dXyGfyFdXqZfA2Hken59nIzv1V2l2vks7gUd0E+4Jag
yNwkzp8fIc9y45AT39P4Psf5yqr4Mc487kDs0ZyFqnFu+hO5CoesT9XvmOei
RdwfrgNXYu6By3oxRnLn9PFoHOfBDYg9mLNRDYe5QejIl+o9cUXfjFHceX0C
msR7cBncEfNQVMcRbjA68WX627iql2AJMvmj3DDUwFFuCDrzW/ReuKaXYhiW
IgtdrP9urTeu62X4BgP5Y9yHqIljXDa68lv1Prihb8Gy2Bt/nBuOWjgef7t2
kjwFa1XBjA==
           "]], 
          LineBox[CompressedData["
1:eJwV0zlPVFEYBuADGi0EFbUwsUDQWKk/QNxZ3C2sXBEHEHEBNXFDK7BRo2wq
aEJhYmFioQ6Lw2KsDIUFm4CdjWvhArhh5XOKJ9/3vufeO5nJnZxE9Z6qtBDC
O9ZkhvA1PYSnnJoZwvsZIZwjm5u6vboBewlzGNAdIU+flPP5Jj/jFgnWOmvX
F/BdTlLPPv2grjg+w8xg0F7KOmcdciE/5HYa2K8f0iXIZEhXxnp9p1zEhNxB
le6DfJ6lNOoO6IbtpcxlWFfOBn2XvIVJuZNq3Uf5Ajk06Q7qRuxlzOOaHGi0
jzivsU/Ya1nJUd1G3XP7VqbkWnnafp0u+bT8yX6RXOrlWbTYm50fsr+xl9Nm
X8T8eL+ZRi9N8mMzl/54vfsum5P6lFlnPjSX8IpV8h0zg5e0yU/MFbymwv2b
zJQ+aW4z75tZ/HRWZ/7T3eCRPTt+R/0Z87PuEg/si1lmbzBn02q/7bpi+2j8
fciKz5HTabaPOr9in7JfZTXHdJt13fbt/JJTnNV9kWtYHr+T7rBuzF7BAsZ0
leTre+Qd/Ja7uUuJfjx+BgsZ1x2nIP628k7+yD20cIJCZ336XfyVe2nlZPz8
+N+J7198hyhy7QvX7WZa7uNefOf1b3WV5Pnf/Qf8U3fG
           "]], 
          
          LineBox[{3388, 701, 1139, 1002, 891, 805, 666, 1122, 985, 874, 788, 
           728, 624, 1095, 958, 847, 762, 702, 667, 625, 626, 627, 628, 629, 
           630, 631, 632, 1096, 959, 848, 763, 703, 668, 1123, 986, 875, 789, 
           729, 1149, 1012, 901, 815, 1174, 1037, 926, 1200, 1063, 1228, 
           633}]}, Annotation[#, "Charting`Private`Tag$976865#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$976865#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfYjmUch/HHXkmIsr0ZqZRd2SsrK1RIEcmeUSHKSgnZlZE9K0IDFSrK
KJRZ2ZWt7JHZ5/fHeXx/5/e+PM/73Pd13YekNt0bd0uWSCSaJ08kcqVNJI6l
SyS6IIGPeHfUR24c13VFMnzMe6AB8uCErhuS4xPeEw2RPn0i8a7uHvzMxyIv
TvLuSIFF/CU8gQzWj9YVwGY+DvlwivdASizmvVDA2vm8PA7zRrhNN4YXxBY+
HsV1n/PaOMfz4x9zT6TCp7w3Clq3gFfAEd4YGXVjeSFs5TX5JnNLTOAl+Bfm
OjjPk/Cv+SWkxhJeyZrvzU/jZV6ILzRXxFFej/9ibosm/HY+zlwYv/Ba/Cdz
K0zkJfmX5sdxIe4b32HuEPeZn5a9kAZLeWXX15qb4hVemH9kroRj/Elk0o3n
9+JX/h5K6ZbzurgY9xtnzL2RFst4FWvWmZvhVX4v/9hcGcf5U7hDN4EXwTZe
m/9sfh7v89J8hbkeLsVzwNm4V0iHz3gfFLHuE14FJ/jTyKybyO/Ddv4ByuhW
8vq4HPcb5+K3Iz0+531xn3WLeFWc5E2RRfcevx87+KS4Xzgfvw8Z8AXvh2bI
av37ugewk0+Oe4ALvA9uw5f8NTTHndZ/oCuKXXxK/C5c5H2REct5fzwTfyPu
xyV9P9yOFXwAWiCbz5ukexC7+VQ8rPuKN8AV/gAum19DJqzkVa35wdwcr8d3
8MXmavEszXvlqTj75l/NL8b+M/8ln9VnN0+OXj4Ue1v+Ee8H+ZvrdeRm3lG2
jvMi/4xzIT90/RH5NW8vG8pn5P54J8j/4izLnbyz7Chby8Nx31y7IvvjDjwZ
3ye/0lcz/xifhTfid/NPzdXxT7yr+DZzOzzH7+JTzMXwO5+GR3Xf8CdwlT+I
/8wDkBlf84Foibutnaorjj/4dDyEq3FPkQXf8EFohWLxLop3Bq7F34isWMUH
43nkiPujK4E9fEacd1znA3EnVvMhaI2c1k/TlcRePhNldat4I1yLc4wb5kHI
hjW8ujXrzS0wlBflS8yP4V/eBrl003kp7OOP8y3mNpjFy/HV5sbxOeYD8nq8
N827zJ1irfmILK2/KQejrS67fEr+LrvIb11/TG7gHeSzsc/kQdlDvhnPQi6N
5ydrxN6V+2Q3edr1hnJ7fK9sH+8X+bd8wbXc5hnxd6CpeY/cr69r3hprMJuX
52vMTXAj3iW4ZR6Cu/AdH4a2yGPtTF0ZHOBz4uwhoR+quxvf87fwYux5JIvf
os+BtfxttIt9h+SuDdPnxDo+HO3jeSKFa2/pc+EH/g46xDNAStfe1ufGj3wE
OsZvQQVURCVURhWksn64tXmwno9EJ+TVz9I9jIN8brwnkFr/ji4vNvBR6Ix8
+tm6R3CIz4vvi2cZ5xI340wijW4Ez4eNvAbfGGcwMB+SPeP/CXF+5DJeE2d4
F+TXzeGP4k8+P/Zv7Jf4LNRELdSO907sU6T1b0Zanx+b+Gh0RZJ+rq4s/uIL
Yg8gnX6ULgk/8TFxXnWf8Vo4y7vhHt08Xg5/84Vxf3XfxX7GLd6E7453V+wr
81HZS9Zz7X+pEi59
           "]]}, Annotation[#, "Charting`Private`Tag$976865#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfcjmUYxvGH7B2SKCu7kkQoWYWyUykKUdGksjKzRTbZe5URUlb2zt6K
UGRHaBiF+p5//D7ncRzndb/P8173eV3vm7dZq3otkyQSiY1JE4k2aRKJrukS
iZNpE4m3kBZbZTMxVZ4KA2QP43dZW3wiO8W/jXTYJvsC7dBN77TsHaTHdtmX
mCZPjYGy4rgka4/usjP8u8iAHbLVsgKYxdfELNl0Pg0G8Y/gsmwXXwrL+Ffx
sawHf5Z+DxnxE18JG+md+mvogpjN18Js2Qw+LQbzJXCSro6d9BX93fRj+I5P
kd7PphtFT30JP9FZ5R3pDtb3VM/JssveV//hX0Mm+ohaGfn0NvFp1A/44uou
z66lCyEXP0c/qfoW/5Bam79A14s1/EE+k9qOLxnr473R6ZCDH6J/m34Dj9Kn
1BrYRf9h7R66NJbzjSOjX8YRuqN+L/o83RJ34ij/FDbTu/XX0YUxl6+DuTEH
fHoM5UviT1kn9Jb9xrdCZuyRfYXO6KN3QfYBsmCvbB66xGzGvMVcxazE+0Vf
6y9a92HsO/bJ5secyTNgmKwU/op3gU9lv/Mf4S7sl62XFcFXfF0skM3iM2I4
/xhO0zWxm/5bfy9dBiv4JvG70Q1wlO6l34++RLdGNhzjn8b39AH9DXRRzOPv
8H7epp+jL6rPx17Kfoi9VtvHbKtfe252zA5y8iP0/6PfxAN8af4MXSvODL8n
zpHaJt65etXz++iyyMuv1E8ZcxkzGXukNsSx2Bt5J7q3Z/qrl2Vt8C/dFHfT
P6tVsIU+aN3G+B6Yz9eLO4J+AT/SC/Xn0Hfic74Mrsn2849jFd8UfWSf8Vfo
tnFu8IPsG8yVZ8ZIWVlcj/ePAbI/+Ha4Bz/Kvo13He8hvj8GWvOnXnvkwCHZ
opg7eRaMkj2OG/H5GCT7K+4R5MRh2eKYRXlWjJY9Eec5Ph+DZX/zHXBv3DWy
TbIHsYB/HktiNvm7MIYvh7N0beyNvdU/QD+B1Xwq76Al3SxmTn0FP8c8yTvH
/Wn9EPVq/N5x56g3Yz3uo39Rq+J+va18WvVD/hH1iGc3x12C3DFb+snUd/hi
6gtxL9MvxtngD8VZVT+O+09d6vkFdDbcy4/VT6jN+Sfpc2od7IvvZO1BuhzW
8K/jKv0qfqEH6Q+lr9GdkCvuF9n38V2wkH8Ry2Rfx+xhHF8et2LvMUx2ne+M
3HHeZN/F/sTPjj6GY0RUa29Y0wV5Yo5ly7FQnh3jZRXivpR9Hs/I/uG7Im/s
q2xFzKT8HkyQVYyzKBsZz8j+5T9BPhyXbZE9jG/4+lgZMxp3MybylXCerov9
sZcx97GXWEu/EeeFboTj9Kj4LPom3S32gX493nV8nloN+b2PbXw69SP+hGe2
qsWRR/atXnL13fhu6kv8Zbp+3E384biD1Q58aXVVnJm4e2K++En6SdQWMedq
Zf63uMdQkD/AZ1Tb8kniXKrlsY5OLW8Vd1ecY7VxfD96tM8YRd+iuyM/TvDP
YDv9q/62mGEs4l/G6jibMYeYzD+FpHHG+QpYTzfHGOtG87fpHiiAk7LtshJY
zDfAGtmS+B0xhX867miMlY+R/Uf3REGcir/TWCrPhamyKnGWME4+VpZAL75Q
fH/6Weyg09uD1vHZ6mlrd9CPYoleQ6yTLYvziWl81XhfGC8fF3uK3nxhnIm/
YzHz8W4xXVYNKTBBPl6WFH34InHvxN+gmHtZXsyQPYOUmCifILsDffmicZ7j
fo+5l+XDTNmzcUdhknyiLBk+5R+IWY77D5MxSZ4c/eQPxozE3YMpmBr/D8Y6
/RTor/8QLsT5x8qYaXwhqx5zg+nxrCwlPuOL4aJsJ18SS/lXsEW2Ks4BvuRr
IA0O8xWxgW6BG3QT/Erf7V10ocuoMzz/P24bjJU=
           "]]}, Annotation[#, "Charting`Private`Tag$976865#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864743162931684*^9, 3.8647431674292445`*^9}, {
   3.864743230555041*^9, 3.8647432344318*^9}, 3.8647489869306817`*^9, 
   3.864751685723919*^9, 3.8649282764404893`*^9, {3.864928335373318*^9, 
   3.86492834735642*^9}, {3.8649285287824025`*^9, 3.864928584096409*^9}},
 CellLabel->
  "Out[915]=",ExpressionUUID->"1e643ee1-38f8-43d8-bec3-8e60da0b64bb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
D+14uNeIK6QPIB/Ku4ayX6aCBpEPnfX993DjTxpEPvT5yYsOqSlD0LOxzShk
YBxcu8E8a7NxHiIvGiB8gylF7r/Ii36y3Sp1yIwFkRdd/TZSOjFxHqK+SO0v
Ihlzo7W4L3IF7/r7Vdt/477I/WZ/RIZ4O0DRl2U//xbzEENX2Rk6j1sB8qG6
YpcX9icOQuRD29s4mXT2CEQ+1O9zY8pBBzpEPjTV7EvKHRE6RP2Tdh2/W2W/
5ALkRZt+3qKO+FGwFxVLYTNDyec98qJ1HZci9j0ehDya3CsluxmAP2wu17Z4
Hiq915dRmp4EkiJZ359asSDypEILAdv5ZFkQ9VEGPdw3ZazWhPsor99iTRxw
acd9lGObisv1RdoB8qOprQeGQ+ijEPnRUyUjuUIP6ZDPf5Tfb7coYSftKTyx
YxSivsq/lU1rE2+UAtRXaW1evGVZcDlA3vTOLrvkeOl+4Eb5tHEmLgxUrQg7
eecPDfvT8oDQomfkeT4sMPx8WMIEcP15WMdPnAUDMgkjrcIpoBd0LliBnGdQ
XyW1N9P/ytlW3Ff5TfChtrJgB0D+tKhSsv2EJR1yhenuLWwQIfQkGl5z7qBD
1F9ZdNaCtniEApBPtXVj5d2LokHkU2vTfJetMRiE8S2KFpoZk8BnaO+eH+T8
iLzqjXLOu13kfIn6KltfNkqpi7eDHq9TmoqreIi9b7Tyj9m3A+RVP7eu3JFT
MAqRV5Vdd6LM2ZcOUb9lnvTgtNi1EqDUzEi54Z0CqrNsI2Y+0yDyrLus0t4/
Z9BglHpHp82mSZAbuG+ImzxflAnHWAvsZYLw/ovJs8dYEPVdWnJVHGke+437
LqW2nd7UNdoOkG8NbGFJr/Qk56H/fOsV/f6oFvL3T3K91rxMcwocUl/450w+
/1C/pdi2800+Fe3gy23vXT0WPMTVncKyTi/aAPKtPP9mBz1l6DD4NseRL89E
iNk01u/Y63SI+jCFNa1UZ4gygPzrs4HIQZ0z/QD51+qfJqppqTRYbLlR0D96
CkQLftyre54FUf/lxMO7x3+Q8zfyr56Hp2/XHKND1If5eKrxYehKCsh91xv9
+W0GON6xeEclhgatx8Qe6IVMgrz35057nmDB63yCBQ5CPERVdficSmQ7oJbp
WAzuI+evyhSbDeT5R8D8g9LtF2+BxdaEFZYFNDiV47Py9EomSKOsfBJszIIR
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
qaPY3+s77tIU7GnH/j4tbI7RxpU5OM/saM3ToXXtP3GeWdq5bPWqPX+wv1eT
S1tXvbgO+/tAF3FR7ngD9veu2sO+6wabsL+XAEs97qszsL8XTHrtdaqWgf39
gpcPb1NkW7C/z6x4Ue8/yMD+3swsavOXByXY3391dD9V39SB89E01sp/K148
gv29l2je9zdlY9jfx1Hn5Zf0srC/zxT3fjsVOfZffhq/Dp+A8gj299WZVUSe
RhfOOzMavin1JG0GID/vuzJtVs2QHyI/f2+qWUM2nwqRn1dO0c60dqFC5OfP
j94SO19HgcjPz0kZijr2fhJ7ee9hJYGddT0E8vJN8bXh2VsnCOTlXR6mSB+5
xyGQlzd13iJ8vJ5LIC/P+Sv/fq0iB+ehGbl+6PYbnMB5aO0mlW+bPo/gfLN7
cz2cfMW7sX/fOrnBlrOVif37hVAd7ab0//z7KeUlMvFtbOzfXz50TZijx8b+
Pd/i6h4l9zHs339N9X/l5fRg/57suzByLDYN5521max4PfL2B847Cw1e9/CO
6m/s39c3nJ/WsajF/t03/uCyEPMG7N+PvlAsSPFtwv6d3bDk09rOZuzfp/ra
1xp+ZWD/Xm2ktUpybgv2793Mla0nKC3Yv+eNhNA1hfuxf1dS1gkcMBjF/l1B
D+7VSmZh//5woYVlnR8L+/eguPeT/oqjRMWXl60PBWcAXf3A4e1DFIi8uud7
s3M9ulSIvPpM6Mt5F+uoEHl1xkoVsdsO/BB59dSOp36FyTzs07+bx88Y/GUS
yKcTXxMvpXpPEcinT7Ge5AiGcwnk03nFD/qY+7lEyk5j+6GtonDhzmMXM/ZO
4fwz6R+z9nvHB7A3368Wtupn0Rj25hZ9C87vkmdjb953lfE3dIyNvbmWuKFh
S+o49uanPTWe9Zwcwd7c4bj6+4p1zdibL9A21Ln6Mx/npQnKz4TqelRgb059
75N62qkae/P5xWEzor112Jtv93jzMdyvEXvzaJ0LNZomzdibg9UySo8OMbA3
fxTR2vuEycDe3C6yf3SnTAv25lr1Wq9EqhnYm384WJOiFPsTe3Mdn7jjNL12
nMdGtH8LtpAbxt5cTj/M9uCFMezNz9donDnTz8Le/IzMj44NvWPYmzOpyhda
Xo1gbx5UylSiXu3G+WrVyRMuReS8j7y4/ql7lv1MPoi8+J09b341vqNC5MWt
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
+GfmlS/l1CQZ/LODrZ+X9cx/P/8fY/hIYg==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{566, 549, 563, 564, 565, 1042, 904, 792, 705, 643, 
            606, 1075, 937, 825, 3742, 3743}}], 
           
           PolygonBox[{{576, 595, 593, 575, 1051, 913, 801, 714, 653, 616, 
            1077, 939, 827, 739, 678, 1103, 965, 853, 765, 1127, 989, 877, 
            1153, 1015, 1180}}], 
           
           PolygonBox[{{548, 547, 544, 1030, 892, 780, 693, 631, 591, 1065, 
            927, 815, 728, 667, 545, 1031, 893, 781, 694, 632, 592, 1066, 928,
             816, 729, 668, 3740, 3741, 550, 1032, 894, 782, 695, 633, 1087, 
            949, 837, 749, 596, 1067, 929, 817, 730, 669, 551, 552}}], 
           PolygonBox[CompressedData["
1:eJwVzksrhGEchvFnsHdcogyfAQuUQ2woZjGzMZuZzQzTDCmlLKUkh8YsfAOH
8AnYsmBWNmwshFJKiXIo/N7F1XVfz7+33o5MKVGsCSHEUERcJFCPz1pv+LX3
kEd3XQhH3vrwoAfR6q2s47jUSX1lT2NTj+pTexzvOqNv7Bwa9BeX8Gfn3O7s
fXvSPrfXOMmL/MIzbj32sb3K/dH3/MiVyO5pvtYbnOVlfuNdHnJv4x29wp1c
4HsuR//unuKqXuc0L/Erb7mN2Wf2BBbsZ/7wnrVv7Twa9TfPIeBAT7lf2CnM
6l59Yg/gSQ+j3VtFd6Gqt9GEHz2PGA51ASNoRgv+AXpIOv0=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{566, 593, 615, 652, 713, 800, 912, 1050, 574, 614, 
            651, 712, 799, 911, 1049, 573, 613, 650, 711, 798, 910, 1048, 572,
             612, 649, 710, 797, 909, 1047, 571, 611, 648, 709, 796, 908, 
            1046, 570, 610, 647, 708, 795, 907, 1045, 569, 609, 646, 707, 794,
             906, 1044, 568, 608, 645, 706, 793, 905, 1043, 567, 677, 738, 
            826, 938, 1076, 607, 755, 843, 955, 1093, 644}}], 
           PolygonBox[CompressedData["
1:eJwV0jlI13EcxvFf2pJmamnNgg2V91GNlaIV2uCReUE66KAoCIFk3pbgpIuL
0PFXs9Ulj0wjm3TKoQavhAZB0JRwMIde/+HN87yfz/T98Uuqby1piQiC4Aym
kUyuIgu16MMXXIkMgkHEnw2CTF6DXizhsv0V4twy+AR2cNv2AVn2at6DRSTa
XiLWns7H8Qu3bFPItFfxIzzk88i3dfPPSOADuGBL46co49/wyBbi9foaavg2
v6m/Rwav5H/1Lr1R/kSdfmjf1dv0B+H3yjmZJ7vcRuU+bw+/Rw7JVVkuF9xH
5A5vkpdkv+yXMTLVfUwe8x7ZLIflhmyQ/9z39Gd6qVxGsf7Ofqh36HXyO6r1
LftvvUXPlZNI15/YG/QfeMr/8Pv6LO7xTl6lr6CMf+IX9T6c5yn8BCX8K4ps
b/kmcvgE0mwV/ACFfAZ3bS/4POJ5L6JtN/gbbCDbNo5U+2O+jwL+EXdsHXwO
ceFvhCjbdf4a6+F/0hZCir2cP8csYm3dOGe/xv8DlZRYHg==
            "]], 
           PolygonBox[CompressedData["
1:eJwV08lLlVEAhvHPe6+N6+bB1BzKat9ss0Na2UZbqIQuMszZJkIIghZRNFyv
2vAPVM7rhl1t1AYLiigImoMgmqDpdxYP7/u854ML53Az9zdVHIpFUZSGF8gi
2chAH55iVTyKriE/EUXlvBOjmGk7jnT7Yt6LJ1hpu4o8exn/hK18FBtsHXwE
M/gxJGyL+C/s4XdRauvhk1jBryDXtpN/xBY+gvW2dj6M6fwo4raF/Cd28zso
saV4rT6BffwxL9AvI4eX8np9EjX8A3+rt+ib5TDW6W32z/phvUrex159yP5K
b9CnyZPyiIzJBeE+5TfeJQ/Kc/K5rJc/nCfDb/J2uUuelrdlsex2npJfwp3J
GnlGjssq+cj5RfmaN8rl8pTsk0tlSXgf+ZWfkHXybLgDWS3fO3+jN+ub5BDW
6q32Sv0eKvggf6kf0KeGO0CaPt/eoD9DHf/Oy/VbKOJJXq2PoZI/5Mv0XmTz
Yv4OhXwQa2wtfABTeCci2zx+CQ+Qb+tBlr0ovBU28gGstjXzfqTzDvzD3HBP
mEAeTyHTtzt4E24iEd4AfzGHX8A4cnk3lvh+Ow9/nBuI29rwB7P5eYwhhyeR
4fttvBHXEbO14jdm8f9KQ2w1
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1mWYVVUUgOEZYBhiaJCOoZXulG6ku7ulG8SiJBSVFkVFEUWku7u7uxss
wMJ89+OPl/Wtc+bOXC77ALGd+zfuFxkREZE0TkREmK/5JZplehB1KMZ017Kw
V0+iE14SMca1BCzXg6nLl/ZCnNMfUZwZ9qzs05PZoV/hme7MUl2GG+H1HNEt
wxsirvG6mZAV+rTZgSF6g1mNx/q22T98X73QLMwvnLdfMXsS5U3Ps+/XTfib
P+0PzaEkdr+EfabOxhP22y+YXYnj/hT7Tl2P5+Fn2O+aA+mil5lluamvm31Y
qI+arYgknv0NMxEr9VA26up8r+vxlS7CBf0xJZllj+WAnkpXongzvHdW6WHU
pxTxecv1GFbr4TSgNNEkICGJSEwMScJ54G2vScIaPYKGlCEZY11Pylo9kkaU
JTkpSEkqxvmaZKzTo2hMOWa7lp2D+l26kZrxriVnvR5NExbZi3JRf0J55thz
cEi/xy5dn191d5brctwKnyNpmGBPwYZwztmka/CDbsrXuhiX9FWzF/P1AbMp
f+lH5jBe1nPNnDzlsP2i2S2cV2dkmn23bhDOF7/Z75mDwjl2v4d9hS4f3jO3
7TfMV4nv/iL7Md2af8O5C+eCEbzg3kQzJRv1GbMjY/RmsyY/6mZ8o4tzWX/K
Qd0snHtdITyfOhdH9Pv0ZGX4/XEnfCak5R17KjaFZ5HmVGSea7k5qj+gF+mY
5FpqNodzTgsqkZ4MZCQTmclCVrIRS3ZykJNcTPZ90rAlnHNaUjk8E67l4Zj+
kN7kZkr4jNgazj6tqBLOjmt5Oa6n04dV9grcDZ8VeZhqT8u28AywRdfiJ92a
xboEV/RnHNLN+UdXZb5+kRP6ktmdGXqP2ZDf9X1zcPjz1qvNiuGMcM9+0+zL
Yn3cbEP4yzZuOKuMDM+lPW94dnQ6fma7/azZiUj3x9q36tr8Eb7GfsccQAL3
29i/1SW5qj+nWjgn9pc4qWeyVzcK30P3ZY2uxP3wek7otsQLv+/wPJrp2aHP
mZ0Zp7eZdXii27JEl+Kavmb2ZoE+bLYIn2c4+/bH5nBivOfq4TPX+XjGKftl
s0f4+e7Psu/TjcPzynP7A3MIidzvZ1+rK4c/Bx7Yb5nhH8Fo95fYT+p2RIXn
iFHh83B9mpmBnfq82YXxertZl6e6Hd/p0lzXX1AjfLb2/JzWs+nPOnsVHobX
kC88g/aM7NITaE9NFrhWgDN6DgPIH5451zKxW0+kA7UoQEEKUZgi4RnxdZnZ
E55nOlI7vEfXCnJWz2Ug6+1VeaSXckq3J354Dhgd+f//GYq69x85nAJa
           "]]}, Annotation[#, "Charting`Private`Tag$976977#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Gdwz3cAx/FfhlGjalRRaktE0UeoPWJv7iRchQvuzMSIBOXcOXp1dhIk
oa1n9kiCR0b7ROtqtTUS7nBam+PsUeP1ffDO5/P+fP9J/v/8fr80Tc8clRET
RVG6LzVio+hVXBRl4L2+HdPQIT6K9ti64j/eCw1tubwZ/uRj+Cn9O6zl/fgR
fQie8XRepk/FZ/y1zMQHfaqzq/oOfYR+Ql8px8hs+UBOd9ZR36v/ILuF75c3
ZX5I5+PlP3yNnCQXyyeyQPZ23kjm8eWyuZwpb8jc8N6dp8jTfJUcLxfKR3Kd
s/76UX0o5ul35XP7JL1cn4aa/I2cjQg7+Ujnv+spmME78X16d9ziffCVLZ+3
wGm+HrXwls9BDHbxmUhGbdRBM3yO/53PRSx281noi8Z+7kZbS5zhG1AX78Jn
QBz28IxwvdDE6zfZWuEsz8UXeM+zEI+9PDP8PdDU6zfbEnCO56EePvD5qIB9
fDa+9dr9vAdu8wHh/dsKeCL+4vmoj8iebauI/XwOOtsO8J64wweiua2Qt8bf
PJWf0dOwMfwOfkwfhhd8Mr8c7iU04DE8R68Urp9+TR6wj9L/0FPD35V34cV6
r3Bt9Vvyrj1NPx/udzlZLpFPZaEc5LyFLOIrZJKcJf+VeeE+dT5WnuWr5QS5
SD6Wm8N1CJ9RHuc/yuHhGsh74bPJl86nyCvh/pQz5FL5XBbJL53HygV8mawc
Pre8LoudjdZP6mORoz8M94S9q16i9w73nn5b3rNP0C/oUzCYt+Rb9DY4z8fx
c/rE8P75IP6rPgKvwv8LxNkW8k9QwrPQzVbK++A+H4JWtq38a1zgBRhs+42P
xOvwLCPetohXQSmfj+62gzwZD/hQJNh+4m1xkReGZw4V7N/bquIgz8YwJNp/
trXDJV4UnqVwv4VnBBWdL3ZWDYd4Doajtf0XW3uU8S3hGUEl+xJbdRzmC8L/
OSTZt9m+QTnfGvg0ij4CZsquNg==
           "]], 
          LineBox[CompressedData["
1:eJwV08lvjVEAhvFjWBhvB+NWYipaOhlWZi3BolqlRbSLWpBKJBJtaW97UbFi
YyOtTqY/gA5mtWJVC02ooYmFpFEq0gUWfmfx5H2f93y5Ofe7uUuqT5fUTgkh
DKEtEcLyqSHMmB5C47QQEujlddhse8B34jsvxWpbJ8/Fe96GFViJpcjCTM80
OU9DH69HGdbYu2x5+MDbsQqz7ElbOvp5A7bYHvJdGOcHkW3r5vkY4bfifTDb
3mzLwAA/j622Xl6EH7wcObYeXoCPvAN7bS95Cf7EO2KOrYVn4lH83vy1XoEL
fBvv04vxkx/n7/QaHOJr+W29ELX6V/nJXqkP6VVo0Cdkp32fPqgfwFl9TP61
1+gj+jV5SiblpLwps53PlSmekvPkSTkqr8vH8Z3LN/yqrJTn5Li8EX9r59tl
P2+Vu+UZ+U1OOKvSh/UTaNR/y8P2dfodfT0+8yP8rV6NLr6fv9JL8S++cyRs
F/l8POFN2GEb4Hvwi1cg13aXb8AX3h3fJdLsl2wL8JQn47tEnv2ebSNGeU+8
H9Ltl20L8Yw3x3vGz0eGs1b7IjznLTgaPwvLkI8CFCLTs1c8txgveArH4jP2
+7ZNaPf/+Q/aeGUP
           "]], 
          LineBox[CompressedData["
1:eJwVzLkyA2AUBeBrqTXWJLa8gzUh0qRSGGaUBiFo8AxmYslm6c2oKHiEdIjt
HTTyCAqVGZ/im/ufc2b+dPFw5aAjIta46YmY6owoU+iOaHZFLPItrzOhu5cz
fMm3TNOrr+gSPMrHbDBDn62qT/Ikn7DJLP22mj7Fs3xKkQwDtrp+mJZ8xhZZ
Bm0N/QgvcoVt5hiynetHeZWrlJgnYbvQj/Em19ghR9J2qR/nXa6zyzILpOxX
tjQfcoM9JvUPuixt+Y4lXUte5ff/H/nTe58j7x/32s3b/gAUBisw
           "]]}, Annotation[#, "Charting`Private`Tag$976977#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HccTlUcx/GHjOyyK0KF7DKztyhEmRUiezeUoiJC0dJEIit7S7asIrtI
Gdl7y6Z6//74vL7jnHuf+9x7zsnTpsfT3ZMkEoltSROJ0ckSiZkpEokM+CR5
IlEcaVMmEt3ks/wl42f4+tgilzb2Ff8Sfz//Dp9ALf77mGP+dloCT+nmxz3p
Z3Ib2kTOQl+Tm9OrcnU6Qe5Es8n/8q3wjLxfLkdHye3ou3JeOkhuQVPSOnQq
/dZvz6J34VPziug/imfh0/Hd+XP8P+adjefDVvll5DLeT04SnfHfaEksMNYU
WY2/Ll/js+M//gUc4AdgjGtmy3djuFwSl3Xn5AbYJr+Cbbrf5VL4QW6GezBW
P0eXEZ/JpXAl3iW+wziMx1zjmfB5fAtcjWfFDl1pLNQ1x72YoJ+ny4wv5DK4
Fr+Pnboy+FH3LO7DRP18XRZ8KT+G67rzckNsl1/FDt0f8mNYJD+HHEh4R611
B/mBmGTeAjkrvpLLIr05PeTz/A3jF/in8ZvcC7mN95eTYqfxXbQsFhsrYexz
/nk+G9+bv87X4CfyOfkkfBu+ET0kl6ffyO3pe3I+OlhuSe+kT9BptGusX7/3
A58N9eSvzS9KP45vTcvJGWhPuQm9IFemY+Wbrr0Yaxa/x7uO6/nX+Dyxbvk7
8Id5f9JyWGKsRawn42/IN2JPIan8onyYH4TJrlkoZ8eI+E+4pbsU/xM75Nex
S/eXXB5L5ZaxrjFF/6PuHoyUK+B2PAd26ypgma5VvH9M1S/S3YtRcsXYk3Fv
TMNi/X34Rl8p9kLcB9MxI84TLDGeA6PjHcXawJ7Yn1ga3yr2q65KfDPs1e/R
VcRy+YV4b5itX6a7H2PkqvF+Yg/LjWON8L2xz7y9ciWskFvjAdzhXbbVHeEH
Y455y+VcGCtXw13mvCRfjPmxb+P7xrfi34j7GB8gJ8Pfrt9HK2OlsTaxf42/
GWuAfxDJ5Hby0XjX/Gh+CJ+fHxJnG01Fn6TT6Vz3XEFzxzmr+87cYvQTuTWt
Lt9NX5ab0kvx3mKe3IEmi7MixmKfyrti79IRctt4tnguOlB+jianj9PJdL/f
/ptWwU9xbum/4F+MM4Tvw9/iH0Jyub18jH8fD8vvy6kxz31W0jwYF3sy5sf5
JDfDn3wfHDBvv1wVq+S2cZ5jvv4n3QMYL9dEChyMMyT2ZewBrDL+ICYYq4WU
OBTrG6v1D2Gi7nHcicP6A7pqWC23izMAi/RrdHkxSa6NVHE+ys3xF98XR8w7
KFfHGrl9fEcs1q/V5cP3ch2kjvNSfha7+bdw1LxDcg2slTvEWeu99ZVvxzuM
/yl3kI/zH6CA/IGcJs4I16+j+THZ2CPGPo1zi8/Iv8L/E/uCHxfXxLka3znO
Vd2eOHfpSPnt+I5xDsYZSlPQ2nQK7UKP+a3DfE00kNeZX4p+GeuBdpRz0Lfi
P9J/4zvRSXJnWiC+R8yLvUlPxNlBv5WH8gX5oXzaOJ/81s/0YUwx9iQyGX9V
vsynxc14Tuzl38Fx1xyRa+FnuVPcM76z6zrpTvLDsMy8X+QCmCrXRTqc0B+N
tY9f5M4ohOX69bqCmCbXQ3qcjH2JDfpCmK6rjww4Fes91ix+NVYYM/RPxXmC
0/pj8X6xXu6Cwlil36grgplyg9jbOKM/rquDDXJXFMFq/SZdUcySG8Z3xy25
Bfbx/XDWvBOxLvCr3A05vZe35f/4orG+5c7yKb4SP4b/MN4BP4xPF2vcfTbT
Ypht7FFjw2Mt8Zn5XrGf6ZU4O+l4uSPNJN/mW8YZyffHOfc6GeccNsrd41yL
fWJ+F91p/iOsNW+L/AjmyM/Eb+G8/pSuLjbJPWL9Y51+q+7RODvlRsiCC7Gm
4tvH94zvFt8m3ne8Q2wzv3icVeY2RlZc1J/W1cNmuWf8Z6TxjF11Z/iP49vJ
H8rp43n4GbQb3ez6/wG5pXg5
           "]]}, Annotation[#, "Charting`Private`Tag$976977#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$976977#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
ujq6PXyjeLbkvnLyeH1+XrxGnDeu/x/ItMAR
           "]]}, Annotation[#, "Charting`Private`Tag$976977#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.864743162931684*^9, 3.8647431674292445`*^9}, {
   3.864743230555041*^9, 3.8647432344318*^9}, 3.8647489869306817`*^9, 
   3.864751685723919*^9, 3.8649282764404893`*^9, {3.864928335373318*^9, 
   3.86492834735642*^9}, {3.8649285287824025`*^9, 3.86492858446229*^9}},
 CellLabel->
  "Out[916]=",ExpressionUUID->"19090bf7-dc80-48b0-8e68-29b737f0fef7"]
}, Open  ]],

Cell["However if we put Weight = 0", "Text",
 CellChangeTimes->{{3.864743278634653*^9, 3.864743294513571*^9}, {
  3.864928368831436*^9, 3.8649283768008432`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"30e7c68b-9250-4d9e-bf25-90bff9f1744c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", 
    RowBox[{"5", "*", 
     RowBox[{"(", 
      RowBox[{"1", "-", "k"}], ")"}]}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";", 
  RowBox[{"Weight", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", "ICs2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess", ",", "Weight"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"p1c", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
       RowBox[{"u1c", "[", "t", "]"}], ",", 
       RowBox[{"x1c", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
       RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
        "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.864741199114215*^9, 3.8647412309450274`*^9}, {
   3.8647412638285017`*^9, 3.8647412753688107`*^9}, {3.864741323608369*^9, 
   3.86474133960525*^9}, {3.864742124890915*^9, 3.8647421532108536`*^9}, {
   3.864742303924614*^9, 3.8647423252527876`*^9}, {3.864742422178767*^9, 
   3.86474251208799*^9}, {3.8647427673552923`*^9, 3.864742767707179*^9}, {
   3.864742898915184*^9, 3.864742916706489*^9}, {3.86474298969613*^9, 
   3.8647431190277376`*^9}, {3.864743174202079*^9, 3.864743221917805*^9}, 
   3.8647432521211405`*^9, {3.864928362116619*^9, 3.8649283650156775`*^9}, {
   3.8649283980639267`*^9, 3.8649283981968837`*^9}, 3.864928450503869*^9, {
   3.864929023333527*^9, 3.864929025293889*^9}},
 CellLabel->
  "In[1135]:=",ExpressionUUID->"8ee1208d-b3ac-419a-ab3d-c515866b0670"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
/rpZZTVNlukPRZhsc1f73qiI8v8Ev5k1zsX8OMr/KV1kM3raFhzl//3cfy5u
rOrO/6ffg3gAO/1K3itp/TjiAchSK6X2xmThiAeIOSQx+4aUhiMeYLGz+/B0
SSKOeICNWnKeq57E4ogHULsftPd2dASOeIAN3s+UvZaG4IgHWLaT7S55cyCO
eIAfEV1Pcy744ch/6vzsrXHm1VMc+U+7T9dWv33iwfSfHnxVyTm5343pH31Y
Y7d0t/J1pn8UU933Z8c1DaZ/5OmVNBK+WJ7pH/3e4HQgIbNc8d/8I8QLLEnQ
HKAxonDEC2xSefx4581wHPECa0V4r+/6GowjXiAplNuR5BOAI15AZrOtlpWV
L9MvUo4zzJH3usz0i1KuFglNzJ1k+kXgblgZ2Cvyr34R4glkp7bl7ePa9V/8
H+TnrBA/ua82ixP/p5+DeIOZbYsPPVLcx/Rr8rJsnv7KalVEvMFNTUsvnder
cMQbxD1yuRRXJ4Ej3mDTRGvrq3Nf8//pvyC/5drni0PTK9sUEX+wo26g83CT
EI74g5wWXZ5ox+l85KcsPSlWtXiuRBHxB6O96rnBVuX5//RPEI+gueOorlpm
P454BNkLGb/0P2bhiEfIl9dRGV2dhiMeweqaUm4eNRFHPMLidIONjPBYHPEI
zewTjueyI3DEI1gY844aSYTgiEcgreteqn8oEEc8AmeuBZ103Q9Hfs7s1oNy
UilPceTnRHOkreYJ82D6OXtE38X8OOrG9GMUOdcW3be4zvRj3h0W190fo8H0
Y26U/lzFVSvP9GN8C2Ij8RP5iv/mxyBe4ZuajZoVTzSOeIXVSmH6CQ/CccQr
iHBtcvnM9gpHvEKfYeRj7G0AjniF2uXqC573fJn+i1hE5/FLrZeZ/su1GeGP
y26qMv2XcFcX1c5K0X/1XxDPcKiPZLA4atd/8VOQP2JqZ/mp7/ci/J/+COId
zsxm+e0a2cf0P8L3+yj1jrcpIt5BqHTpOuk1AjjiHQ4/WvPsbP82HPEO7cH2
PAyRX/n/9DOY/kVLlcE35RZFxD+kZhVF+twTxhH/8H21x4D9jvl85E+Uvq95
lJBaq4j4h90WZ3daB33J/6cfgXiIAfkbp+2N6xWR32B402lGLKNZEfEQjAXs
JQzS8xEPYVZqEo+Ltisi/2Aqv6697UqWIuIhsKdas8fepeb/d35CaseJOc6W
GUB+wrh4Tsop9SlAfkLS8A4LnwsTgPyEC352X1KAAchPOE83C9+7MA7IT/DW
aCoWDGEA8hMkto9b5k1PAPITRj8YXjosPQ3IT5gzOHO+tHsWkJ8QGtC862zY
AiA/of4XZ+R4BRuTtxd7tex70iIOJm//nFdgOGOag8nbn3XM8Rd8Q2LyFsnj
VjWWhSQmb//Lw+aArRGJydubXvjgEOXDweTtNe7g3PRr7Eze3n7Trh03gv8A
8hMSOJL6hRTmAPkJkqo5My3GU4D8hLcpdab+MeOA/IRhocK7T8+OAvITfhyJ
CumZ/A7IT5iZEhL6YEvo4P/4CbSdlx+mllIB+Qk63c3nz/B3AvITcteIX7JK
/ALITxClHN/2NqQWkJ8Qvk4kSnKwFJCfoNP/sDO6vxCQn/D5VGnRrd5cQH6C
2yEj7vUncgD5CdsLPWWvxWQB8hN2bapoalucxeRHBmoXu9x4lwnIT3gg+bZQ
0ywDkJ9QN31t6tTdVEB+gmbmGfmmuXhAfkLA0OjSMA0P+D/FTzCAL7X6D6dB
ZD7rzfy+IBiQCg4MlJsEj9q8Pg3NKPi942BwbRIDFk0KD3PuTYB9abx+ClwM
0E5I+iMumQp9veqGzjIMYLt/c88IZIIgv510tOwE2P2+sGJQ5yMM/N5qqv5n
Etw4JRhbg/LhchR7WoXDDEzwFR4NvFECMTqUtvNW7JifcaVO7ZUysPA4bv7H
kwO74119S9K4AoLbD34u0CZhKhz61NfWVeAyefX0xTwSxlbxIErsXg1camlQ
jY0iYZyXQ0xrg+tg5YeOXz95SFjAptzV2XX1MDPIUPvDwYG9Krr5duWXBkgj
WxQIvWVj9gs8qhqsM1rUB8gPEXEzGioT6AVmv0C2ZW1+SisgPyT2q0PT0uoG
QH7INa5eap9lJSA/pF3Ga+1WiWJAfsg2r5NONRQckB9i56Jzu7b8IyAe52uI
mMLqE9mAeJwDSeE9LoezAPE4Jr8GOK/SMwHxOJqthrXkA5mA/JSes/Mh5IPp
gPyUmcvCzuc2JAPyU/b0C+hn7n8L/7t+iv3+RslAiRmg/ey+6sDwB+GINyax
BZMgOTw9kaAdAbTNjRu1Zxmw6ciui5pK76DIK/AzrzADen9+efRuXQpwt+p8
GV7OgC3qZn4Pj2SAtmh1xTyNAav6ho5oncwBfnfzW7/sJuHKkm1qL5/kwfyI
zgNq3TQUZBjsrfxeDJ5Bvr6bNrBjjoLi1Pt9pWAWWZYYe5IDW19pQztJKQer
wv2bVXaQsFzPX5+KxiqhimfhnlIyCZPp0TfJHq8G28HDxUeySJia867PtJV1
MBI0IsUmT8KitO86HH1OrA9zRQtPVQ7scX6rg5ZvAzzf4z9rysnO7JcQFZcS
KNnfD8gPUk3OoK+NoADygxbESa6/NdoB+UHi7OwWczubAPlBuoFNpRHW1YD8
oCETL1dN+xJAfpDjcg2+B50FgPwgjjoZa1f8EyC+6YGfQkHzp2xAfNNttYcj
POZZgPimeruIa08mM5l8U2jAj7kDjpmA/CT7pfd+3qKlA/KT1IJKFNUNUgD5
Sce410uuo0bD/9RPWvPZ8cjPp4/hjovYNb7BKdDj9Wt1dXgDT/ffuZuFT0D/
hweNC2oxcPyWkYXMTQYMvSO7p239ACX7J8+fmh2HphteDiEH0qCiKtomRp8B
7fH2X3Tls+CStFZS1PMJkDLfoHn9awko9BTdnc9lx95l3WwR7i6D35OvtXWK
ObDmM1u4Fg9XAP/NLJEKZxL2xbF20e3hKliuZvX5wGcSVp8WSfHmqoWPEUXO
iZ4krCOUk9y9vB6yg1vyZOs5mP0i1dlmZ3U3tQDyu4wUaxwcHtQD8rsqvt05
/e1lOSiNuvMf0OsBzafhBTunigDxXa6P6Jv7lfMB8V36126uapvMAcR3+b/E
rrz/mQWI7/IYhxxPsSxAfNcD/71qbZWZgPguhv3Q9WO9GYD8tRYP/OIRyzRA
/tpgjUPflvOJgPy1/eKeD/mHA+H/rb/moivfr+Y8A8oD1sUZX56DaX9H/ih5
CubmBV20dN7CCn1nAfrmCdhj+mnJH5V4CBjse3FUigERPsaVFgHJIO69TlGW
2P8/Kg4dPl2SDtWy77288xlgoJvW5VuYDUKRq2to+yah1ife5TRXHhR37zNb
6zwNm8l7Ew0SioHWNZN2fZwNs7Sqi9SKKQXz6ctVcts4sF9DJWs735TDRIbF
Od1VJMyuZv+2lrRKuBnX9mJpLAkrHzpz8mFyNaxe0qdpQuz/jj6zv37U10K4
kMTaXWokTGq8YxuvTT30S7W2VlhwYM65Xn2Olg0wesN8pYosO7Pf5vq857nK
L/2A/EFJy86t73ZTAfmDlj6ekCXTAcgfFL/0cu2D702A/EFJj2L3iAc1gPxB
hQ3Xz4huLwXkD/J/UhAN0C0E5A9yOi73234yFxAv572+8zNjIRsQL/dZxW90
9hFx/vgPLyeUJti2mj2LycuN+qtEqwRkAvIX27UqHwdLZgDyF8cvmp3KGk8B
5C+60U8Fr2SLA+QvNuI2HbRBB/g3f3HhqGz+SPhDaFue8YRPdhryOTcfLLj4
CmoCFyVMzUxAZn6Yzjv1aDjjdcayx4cBk/V+crrSieD68OL+eOJ8/HLJ+twr
KamgeZ46eOQYA8wDxh9uyc+ExBYRUuHVCXie/6tmPr4ErvL6uIW9ZMdCl28I
ZoSWgfhOMY3GWA4s1uKO/Kt3FaD6M5i234KE+eQL2HokVYEbN6l/J3G+Ncn3
K7pYWAMH3iaYywaRsK7TTfLFXXXg0WzkJTTMwew3mnO+3XNgqAWQ/xlcEtmZ
I94AyP+8oh5mXXavAnypaXojCj2wRvF7tZH3Z0C84PrvH+url+CAeEGt2ydz
W4hzDOIF/ThkMuPWZAPiBdk3Owe0yWQB4gU/GHoUUVozAfGCr59fvP55WSYg
v9XqyJhnbVsaIL+V76KwrUfTB0B+q6d+yXSJRgj8m9+q3dNpwa4VCduuH1s1
08SA1etjIxIPvYe4J9KhPMTzVvi00pHBiBRweSZ3XH8DA/xNh2k5hRkg/cbu
hf7iCVB9v/H9R/EKuKpZrG+hTMI4jsWeSdpVBXvEydkpxPMyqMn60c8DNWCl
Uf2BI4mEbbc0ftmmWQdsnYK+g+IkzHp1jOET9l5QvrM2S+ZaAayhaMis5KLA
vWbjeQn4BIhnvKrF5n7xfjYgnvHgk3tDPBpZgHjGGz6+ZRU/M5k8o6LnrbJ4
nUywKss81uZNA5Wm8ZPmfumgKnOPvG0JHRxlMLcPpcmA/OZXzd6lWaGR8E+/
eVWYwYkL52NhuDnGq1KTeL64OdcvFk0C3eKXDZuJ5w9f5aRsB54GbC/n/F87
MYAk01RzZ1cl/HqAJZv5kDCh/Y+Cr+6ohrmMnc1HiOfJgfj0hcITtXDsnvsT
gTskLHPl5Z/GyhTIPdR1yeRNDiDektIxdTqzLAsQb7k83MiLVyALEG/pM+qd
1PKJWA9blXUFT9Hg3uRn2YW4DBhbn2DgUE2D4NVUxvfpVPjv/PEtIbuih+Nn
wPbax9vqxb5AL7vwQFF6Cvq4YpWlu8IhZsZlv4b8BBx0YjO6UB0HU0HTt17s
ZQBnr4x53blkcPqgslaBnajTY9bufpQORvkctJuJDPAKWrNtx71s4FJVfzEq
SJzX678KbivKBd93Jl4/NaZBK2W9abJ3MeyQk4s63MuGmbzezHX0cSlcm8kN
EFzDgWk5WO0Vv1sO/DsXxwE3CVP/1dmrH1AJlzJDTSrfkrBVlsc+mfhUQ7Gz
hGkSTvy+X15ZZJNUC2SVR/m+usR6KvRytbpWD1TvUpfrzsT5/9B1IW+9BrDI
JFXmq7Iz++8YXlYJVzYNAPL3aadv6oETFZC/L6U9UH48vAOQvz9cfPlXvOoX
QP7+hsM2a2BZLSB/f6rWzmOdRykgfz9JeqXl2vBCQP7+keNPr9/2zwXEs0bG
128TE88BxLMeOcgut+YlcV7/D88amlB++itXFpNnzcIW760NywSUDzyJqw/u
Vs0AlA+s0NpxT10uFVA+4BbXfiOWIx5QPqDRLvfzjb0r/Fs+YMP9/K7NuweQ
FXPN30pnGn65WH6/fDwYsOB7d7vXTkJYqbSIS3MUUKLxmOFQBizQW/2TUxJg
yO+UhTexHqZ0BvSKLFJh78zZrz8OMiCTJ01nyf1M2L8/fnf7yQkoNm7zPOlV
Au2fDmWsfsiOBR2ynaHeL4PK9ic2/MEcGN+8mBbNowI6FjY4ZhuQMDPKR8kV
vlWwIlLN5B4x3+lHvPYohNUAh+PLoORQEjaiceDCiU91YHn+0JziHAez/9Cj
T2Ds6KlWQPlFrmuhgIh9A6D8Ys2wIN8SRgVktlc+PCXdA1vj/oyotX8GxPP+
kDyt52qLA+J5zSOs26SefwTE885kaMdJymQD4nmVHs2ubD+QBYjnLbZ+2lXZ
nQmI5+Xgn20R35QJKC/J65Za7LM4HVBeovvuNu/OJ0mA8pLzGS/NZH+Ewb/l
JUoDN3a3tkWAR/2vhCODxH4t82OOHX8HR+mP9DetZoBzyJJ+Ff0U2GRfnZ8s
wICunoSPoa4ZkJ+1yvD8BAPSD1aUcnBUQPdZmzOr5EhYr7Eql9yKKlAWoq7c
k07C+rRMJhsFasDsm+w7ozQSpmhXnaC3tw5uHpS0kJEhYWfwAZMXIz0gndd8
ti+kAFTSTHedn+kFEclIBx7nT4B4Y94jqcXlb7IB8cbKvEadK64Q55P/8Ma1
s4P22WOZTN54i/VNWy+zTAgVXnOkz40GD8eVZ299SgepAblhXRIdMLvVy28K
pADKi0Z0LThuFEfBP/OiuZixpdsaY0AgbUo0wIABlMDPkvpRH8A92+5y48w4
2AgVthxySoNqF6trSRbEeQN3+lq4vBJiT3N9bntEwia1JM99X1oN9W+e9bsQ
+7ebdIJV7FbivNi/AY98QMKUluZp3JOngPsddrbVFTmAeOiDC+KHBTqyAPHQ
lKO95muFiefVf3jolzfqPoZ8zgTltoFRvyM0mMs+PspZkgFit5ZecSumwTdD
I6rW3jT4Z74lpWmX8q4kHsoVd78sEmcAphgqwduWDE3KJoZCixkQ/N7f5lRT
Jegx1jtS3pMwJ4OL7SGN1bC0Y9un4I/E/vgfvrogLTJ3ziGLyVNfPj4XWfY4
E1BelmP6ve22hCnUZvIFfmmKhjUnGZ9D7zNgJO90L/f7RNgXQab5z42D7KcL
Qn/GU0Fer0XKVY0Bij11ImrVFVAl5F6nYEfCUt7Y5C3UVkEYecTasoiECcu9
Pm9DrwHM+O3BPc9J2DiEBr+Kp4DC19znrhzZgPjtYy4uNpbbCH36H35btOFy
aEBDJpjISa332k0Dtw/7lzVPZsCyxddUtLPfQ92YQ0wuD6En5hzeug+kgE5B
lfP0FgZs3kQK2ny+CvqGvEfyiOs/debOarJODWhr+q1f846ENd6Us8sMSYLi
LeImx4jrUVhNo7Weqgae+8dF/Inx/nf5X9iO4A/f8BnwFtGvFZf3heFVhkE7
Dk9Bm+fwluA34ZATWMDZfnwC8rnE/eefxsH8mZ1CXsR+KPt4tQLbzmTg2npT
7/WfcYgbdnePMkoHgQjqe6loBoTuUz07eykbfqwLSMDJk3Bl1JP+MjwXZi92
H+ZWmoZRrhVlLU7FoNPyDsK/sGFGKfV7P9mXQsd+EQ3z5RwYL6Z85PiNctgl
YXXBg41Yn2zSn6LcKoHf9t3QArFffpQpuqVzrxokSsdWhBcQ5zMh/+fpobWQ
pPBrid9VErYijib99lI9JLilDTx7xIFNzJzLWKXRAMIpfWo6F9mZ/cyS42+8
rE8NAMov20jnZPXeUgHll5d1sUNv2joA5Zf5Xyp/aTl9AZRf7p68vjpQoxZQ
fhkRE7LlSlYpoPxyGS3hRGhRIaD88sB+uX3rc3IB8fMDP5z/9O3NAcTPdybf
sRMIJdbLf/h5p7MbknXJWUx+Xsk8/MqB6ExA+aeQinVQo04GoPyzsDvAOOpS
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

      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{231, 237, 230, 2024, 233}}], 
           PolygonBox[CompressedData["
1:eJwNzC0wwwEYB+D/BEP1VY04szoWCQQb4kbZHYE7C04ZU33ECYQF59akmVUs
EiwsOKdJjnPGrHvCc7/3vfd3bySXX9nuCYIgRJZP3vnmI2ynbf6hqlRgkSiD
9PLrdi33SDHJEGFuOSRDgjE6+jW5T5oYw/RxxxFZponwp38jiywxxQgPlFhn
ln7uOWaVGcZ54oxN5un6V5cHLBOnRZk8ozxyygZzvHDJLgM0OGGNJM9csMME
Tc7Z4o0rFnilwhf/jlgvhA==
            "]], 
           PolygonBox[CompressedData["
1:eJwNzCswwwEcwPE/dUP2Cu7mUb2asSRM81rbWBLMjhNEr+axJBA4wZ0FqpnG
SMIETnBHIE2RmJV9wue+v/D7/brS2cmlxiAIGkjRafjWL70kxC07JPkgzwiv
nLJKhDKHLBLnjTPW+PXzSteZop9njlmmlUcOWGCcMHfskiJKN39+FXSDaQZo
o4kSe8wxSg9V+9e6yQyDtNPMPfvMM0Yv//aLusUsQ3TQwgM50sTo44kjMkxQ
c3+j2yR455xhXjihwgqfXPBDHSVNMkk=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{231, 232, 238, 2028, 2025, 234}}], 
           
           PolygonBox[{{235, 236, 374, 492, 419, 474, 325, 495, 426, 481, 359,
             489, 404, 459, 280, 496, 428, 483, 368, 490, 413, 468, 304, 494, 
            423, 478, 338, 488, 383, 438, 246, 431, 486, 
            375}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 188, 152, 121, 94, 69, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 189, 153, 122, 95, 
           70, 52, 23, 190, 154, 123, 96, 71, 53, 24, 191, 155, 124, 97, 72, 
           54, 25, 192, 156, 125, 98, 73, 55, 204, 168, 137, 110, 85, 26, 193,
            157, 126, 99, 74, 56, 205, 169, 138, 111, 86, 27, 194, 158, 127, 
           100, 75, 57, 206, 170, 139, 112, 87, 28, 195, 159, 128, 101, 76, 
           58, 207, 171, 140, 113, 88, 29, 196, 160, 129, 102, 77, 59, 208, 
           172, 141, 114, 89, 30, 197, 161, 130, 103, 78, 60, 31, 198, 162, 
           131, 104, 79, 61, 32, 199, 163, 132, 105, 80, 62, 33, 34, 35, 36, 
           37, 200, 164, 133, 106, 81, 63, 209, 173, 142, 115, 90, 38, 201, 
           165, 134, 107, 82, 64, 210, 174, 143, 116, 91, 39, 202, 166, 135, 
           108, 214, 178, 147, 83, 212, 176, 145, 118, 217, 181, 150, 65, 211,
            175, 144, 220, 184, 117, 216, 180, 149, 92, 213, 177, 146, 221, 
           185, 120, 218, 182, 226, 151, 223, 187, 229, 40, 203, 167, 224, 
           136, 219, 183, 227, 109, 215, 179, 225, 148, 222, 186, 228, 84, 
           119, 66, 93, 41, 67, 42, 43, 44, 45, 46, 47, 48, 49, 68, 50}]}, 
         Annotation[#, "Charting`Private`Tag$1107106#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[{2024, 233, 231, 234, 2025}], 
          LineBox[{2028, 238, 232, 239, 2026}], 
          LineBox[CompressedData["
1:eJwl02WUVVUYgOE71NBItzJ0d4OCdMfQDUMLMkipIBJKh4DSjdKdSnd3SUlL
KDUzSCjlM4sfz33vXuc7e991zzohYeGhPYICgUAcHw+CA4EI3yNZa92f2uQh
edD7mSjX1ukA6pCXFASzgxE0pySZeGp+vX5DXfKRkrjsZCQtKEUI/5jfoAOp
R35ScZhJdKQi8djFKFpSmsycYCqfUY1n9tuo31KfApxlFuGk5gg/0olKXGIB
fYnPbkbTijJcYB69ycJJptGNWyynOlf4hUfR/63f8aXeZTXPrTfpIO4TyjUW
85iCnGM2f9OT26wggjQc5Sf+ojM3WcYTKnOZn3lIv+g6846uIgF7GENrbrCU
slxkPn3Iyimm050a/MFCvuKFPX/VwTSgEOeZwxek5RiT6UIVErKXsbThY7Lx
0l6/6RAaUph0JGIf42jLJ2TnX/ObdSiNKEJ6ErOf8bSjHDn4z/wW/Y7GFCUD
STjAD4RRnpycZgafU5NX7t+q39OE6yyhGL8zN/o504s/WUkkGTnOFLpSlQ84
yATa8ym5eO2MbTqMphTnQ5LyxrW3vCNgHUQMYhKL7QynGSX4iGQcYiIdqEBu
zjCT6Je/FldZxNfcYw1RxOZ/IumHyg==
           "]]}, Annotation[#, "Charting`Private`Tag$1107106#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVzGecDwQABuD/4SI7sufZm2xRRDbhyJ5HtjuzEFmZ2Ssze2fvvWfZeyt7
yw0S6unD8355f+8bEhYRGh4UCASCRSQHYwUC0+lBXUqQnShdNDG84jV/84Z/
eMs73vPv/4c2QcQiNnEI5gPiEo9DzKAn9ShJDj7kMDPpxdeUIifxOcIsvqU+
n5KLBBxlNt/RgNLk5iIrGMo3VCUhx/iF3jSkDHm4xK8Moy3VSMRvzKEPjfiM
vFxmJcNpR3US8ztz6UtjPicfV1jFCNpTgyQcZx7f04Sy5OcqqxlJB2qSlBPM
px9NKUcBPuIkC+hPM76gIMk4xUJ+oDnlKURyPiYFKUnFaRYxgBZU4BOusYZR
dOQrUnOGxQykJV9SmOus5Sc6UYs0nGUJg2jFXbYyiYr8wUbGEcEDdjCVItxg
HaN5wh46c5/tTKE2t9nMBJ6yl248ZCeR/Mxz9hNDWs6xlL8YzGN2E0UY99jG
SybzjH1EU4k/2cR4ulKUm6xnDF2oQzrOs4whtKYyxUhPBjKSicyEkIWsXGA5
P9KGKhTnFhsYSzih3GELE+nOI3YxjRcc4BXZ+A+PKogA
           "]]}, Annotation[#, "Charting`Private`Tag$1107106#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1HccjWUYh/FjZoTI3qthK7vskJFsJZSQSEiUJHuU2bALLWUTDaMkZJZN
NOxNhVC2vvcf1+f+Xfd7n3Pe87zP8xZo36Np9ySJRKJf0kTiCvYnTyRa4Xiy
RGIkHkNR3Nbrhzswj3fHVfMH+FM4wUehIYohkSKReEM/FebzHrhm/iBvjZN8
NB5HTrOT9ApiPS+OJHr9eWos4NX5d3JdvBQzfLZcFvv4dd99SG6DU3wMKpn5
mtdAI56LT5YLoYW8Q92gX19eLzeNz8v71BL6SeUBcgc1jdpM3aYudK2GvFJ+
Xq0Xa6D+onZXe7peQp3Dn1PLqU+ou9Su6q/xv9XNvIvaUn1a/S3+m3rDfzks
t8Wz/LT5JuoWPlZ+SP5GronGPDefIhfGRt6Ab4j7RUmejA+U02IRr8m/l+vj
ZV6Sz5XL4zd+0+8fiXvCGT4ufh95zE3VuwebeCkk1xvE78QXvBdu+fxR/gzO
8rfRFKVjH7l2TL8d/uTvoBkeiD0Tzz3WHcfjv+Mv+V00x4NI4fcG66fDYt47
/h9O8Pb4W34PLVAGKc0P0U+PJfyVuGecjOeKc/J4tERes+/r3YvNvCzu0BvK
M+BL/ghfJTfAq7EGfJ5cAb/H/eGU3BHn5Ql42MxS/kjsA56PfyDfh5byTvWn
OGvyRrl5PPvYJ2o5/VTysPhO9a64rm5Xv3KtlvyD3Fl9LM6WulftofaJNVfn
805qRfVJdbf6ovqH643Un/gL6hPxzNTf1Z5qStdPxx6OteUX4jmqW/lEubK8
TK4V38vz82ny/fg53gV8U5y12Fs8NR8uZ8TXvDZfLTfEa7EH+AK5EvbH2uNM
3Dv+kSehFQqYm65XBFt4BaTRG8Ez4RveN9YNZ+OM4qI8GU+hYtwL/ox1wyV5
ClrHOyO+C2lxJ9IhPTLgLvwVZxaX5aloE+cRGfF3rCP+ld9H23j2yIRzcfbx
n/wBno71i99x32/q342l/HXcjfPxjHBFnoZnUCXuyfxb+pmxjPdDZlzg3XBV
no52qBr3b36kfhYs528gC/6JdxWuyTPwLKrFfzU/Sj8rVvD+yIqLsadwXf4Q
7VHQ7Ay9otjKq8c66Y3m2fAtH4BsuBTvNtyQP0IHFDL7oV4xbOM1Yo31xvDs
+I4PjHOvt5A/hAM8Oy7HHsVN+WN0RGFzH+kVx3ZeM56L3lieAyt5Hb5GfhyD
4h3BF8kP4yDPgX/jvYhb8iex7maW89pxFvg9/GO5BHbEOyGesd44nhPf80f5
WrkRBse7hH8hV8YhnhP/yb1wW/4UnXCvuU/0SmJnnO/YD3pv81xYxevyH+XG
GMLL8cVyFRzmuXBF7o0EZsZeMLNCrhPngd/HP5VLYVecxdhHeu/w3PiB1+Pr
5CYYysvzJXJVHOG5cVV+BUnwGe+M+83N5KWxO9Y89pzeuzwPVvNhcW71vuTV
cJTnwTX5VSTF57wLipj7jD+APbG2sSf13uN5sYYPR15c532QDLP4Cyhq9nP+
IH6J9Ys9qTee58NaPgL5cCPeRUiO2XEmzH0rP4pW8p44Z2pX14qps3gZ7I31
ir2pN4Hnx4/8TeTHTd4XKTCHv4j6KBDnKM5C7N/YW7EH4vnEOuKW+deREnN5
NzSIfep3JuoVwDr+FirqfcWr4xhvzH+Wn0S7eN/HvlaLuPY/TqMsBg==
           "]]}, Annotation[#, "Charting`Private`Tag$1107106#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nfcTXUcB/BrRyQZ2aPIVijKXpUGishWimgYCWWvMhv2XsmKIpuyMsvK
zkhZLQrJHvX+/vF+/b6fz7nnPveec8/v9eRr2b5uuySJRKJz0kSiU4pEon6q
RGJPykTiJZKzRTeTrvp/5X48wB+6d2ig3yu/TAq26kbo0jNZrsos3bvyJXN/
CvKnrjMv6vfJLUnJd7qRuruZIldjtu49+bJ5AIVYIT/CBvMZxz8z52OBXI8N
5irsNHdxvKF5v/mV+E7mGqQyf2UtwTfm771ulDkDU+Xt1qeobl5nrcgxtsn7
rM9zmjnO62a9oj9kfT/ey/okv1BYXmktw1E2ynusdTjJ2bjG1vs4zELHd1qf
4QXzRmtVdpn3W+vS1TmNrAd0r8Z1Nz/OHeZF1gdZbd7mdaPN9zBNrsFcXXf5
qvkDivCXbpbufr6S6/OurrF80NyK1HFNdJ/TQ39NHkhR/o57RBP9j3Jr0rBD
Ny+uD00dO6R7jTvjO+rmx2eJ96MnzeIaONaGtOzSfRHH9NflQRTjnK4XzfVH
5Lak4wfdl3FMf0MeTHHO63rTIu6B/Dp3sVs3RpeR6fLjLIjXyjfNQyjBBd1s
XX4WyQ3oo3tJ/sn8BulZLD/EmrjHjo81Z+JT+QnWmyux3bzQ8T7mW+ahca/M
NePemVdZy8Z7s0nea32OU/zjvDnWAvHdWRzXyfosx3lR3mStxs/8IB+w1uNX
+jr/5fgt63+0vhnPnfWJeO7MS6wlWRvX01ornnHnjLNmZkbcV+vT8Rs3f2ut
zI54nryur/m2eRgP8bX8KJvNFx2fa36AJXLD2FN0LeOzmt8iQzxfuvG6LHwm
14zfta6f/J/5Q0ryr64/r8SzJrfjnnhOdIsZwKtxXXTtyRjXQreE9/mAgQxi
MEMYSivnnPDaDmTioG4pw2gdz62uI5njGuqW8SGvxT3SvU2W2A90y+Mz6hN8
pCvFJd1HtIk9RO7EvRzWrYjPrU/Cx7rSXNZ9TNu4h/I7ZOWIbmV8F31SPtE9
zBXdJ7yu+03uTDaO6lbF99YnY7juEa7qhvOG7vfYM8nOT7oJunuZKT8V9zOu
mZycEXIZrsW+z5u6P+Su5OCYbqIuK7Pkp/kmrrecgpFyWa7HviIXZKnciJG6
t+Q/Yy8iJz/rJumyMVt+htVx7+SUjJIfjb9hfowt5huxB5kLsUxuzChdO/mM
+T1ysVQuxTrzL45PNmdnjvwsa+L3IaditPxY/G1zObaab8Z+Zi7McrkJo3Xt
5bPmbuTmuG6KLgdz5Vqsjd9d7N+MkcvF3zOX5zvzrdgHzUVYITdljK6D/Je5
O3lYJpdmvfmE41PNOflcrs26+A3LqRkrl4+/ba7A9+bbsX+ai7JSbsZYXUf5
b3MP8nJSN02Xi3lyndjb4hmQ0zBOrsB/ugVyMVbJzRmne1s+Z+5JPk7pputy
M19+LvaVeEbkOxkvVyTBeH0n3XlzL+7jtO5TXR6+kJ9nQzwzclomyJVIwoT4
30V3wdyb+1kuP8y35t3W2vH8x7PmtTOsefnSsbpsjGdLTsdEuTJJmRj/0+j+
MfchP7/pNsVvNn5Pcd/jnsS1i+8bnzneny7Ou+j1fSnA77rN8Uzq72KSrgrJ
WCgX52tzCzabq7M79inrC/HMx77p/P8BFAZfZA==
           "]]}, Annotation[#, "Charting`Private`Tag$1107106#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 0.7812499840561224}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8647431796843224`*^9, 3.8647432624128447`*^9}, {
  3.864751691955924*^9, 3.864751721573445*^9}, {3.8649283805046372`*^9, 
  3.864928401330862*^9}, {3.8649286042048674`*^9, 3.864928608417497*^9}, {
  3.864928913009414*^9, 3.8649289744894147`*^9}, {3.8649290307051277`*^9, 
  3.8649290729283924`*^9}},
 CellLabel->
  "Out[1140]=",ExpressionUUID->"ad38dfe2-91fb-48b5-b182-f160c085130f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
VPVuC14p8Lrv4iQVnkdrK9BPpuOGbOd4HZ8Q9d0uJXPjd5awPbPWYO8cDfYf
HTXO2ZiLI35j7afZ3JEnMon3qW/wvlPl5ficvVBP4hFi/6Y9kpN0csEzTnV+
u0Uh9s9gt30vJEJxxHv1NpJx/q5shYj30O8t2MnefTxAhUd/TKxjzSl4e7K2
eoUh8f2jYjfkDa1BUWDtqx0/ifWZ48J32DcDR3x4QUSPr9GEVLivP0fzmxgN
xKIDGb+FXuPbx5jbYxNooB9MP36Y3xt/lTJ1Z8cyGrySPpP1t+AjPn9lb8FB
T6L+4lojxTt+C8oFHW47nyfa6lMOy4Zu4YqBBa58lTTwlFxUYw+OwxFfov76
upuz/75P9O/qkfTeF5aAeHNFwCon2QmOwvZKUmV5NA3UomaihASd8QyxYzrq
zsT47qUGH5k3Btr52rcCp4jxOsj/nbHFChdpV02PNSc+f5EN5RbW8Pvxxafr
5xnw5VzsKM9vUqGi7VZB/gDieXuUVFThcB3/3C8lNHKNuP78uMFE+k1AfIv6
h3gSv3Oi+BsPqRDxZHqNvygQ9dUs84+fUDJRXwxIZNr3/sJXecpU7FWlgsry
E1WLdl34ZPLgqHMTFZzmheeMPhfisi2nmzbdokGUlPrWgR8G4Cda9G62lQa3
Wk9YmJp9whGfWt3Q3eJJ7JeIT+Uva6u9ih/CEZ+2nZk4mnxvEkd8uv2kZuG4
BkfhdEqIT//d/60vxKuoLR+s0puxuw9kktMlOHzH8bdSTlwMAWI/UDl4OTCm
H9+Sfefo6SAqkLli8h6+acDFBI1HqOtpYMn7R8XmQyxuJ9jyhhlM7BfG9j5j
no/w+YiP08Kb6XB7sudjUGsJXlLepZwfQYfK6rqPa/OpOOLZv5JZilLTozji
2cHo8FKNTQs4hzMuErT9f/1FfIvaAtuVnh1+TIWfvC3col9acD9Gwh+ZCSr8
0JKLbJhPx9WseOU8bGiwrURU5Ur4Y1C8J3eZd4YGdzYfXnwkn4MjHka/t+vy
4/FL6VR4tyLymdX5Crz4vPRv30PE/HtnOnMIu+Mx2eEL97/QoHsqX4zdIQRH
/Jygabkwp8tWiPgZ/V7JOSVTdQbxe6NPpfjP5uBlO8VcGvWJ8XnpPXt8kqjf
i58+IQ3RoNVCUPhCbTqOePvm08fnv14hFU6m1Bln76KBkEIpV0BTML5Kn3Lh
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
GcX/ruZfQPwztZM5/mbZL0D8c+zg8ZROh0FA/FMwsqGlv54GiH9271Z/NC/W
BYh/bhxu3JxZ1wyIf667PFr1cr4OEP9sKJY5xNAtB8Q/98gXeZfcigHxj/hq
Xfpy0wJA/LPv/OU1n3fmAuIf50kvC+4GCiD+ObWxMi3ak8Lin+GvX0i6dhQW
/3yV2shdEJLN4p8IuW0u5mxZLP7x23mSe6grhcU/rbpnTE5KhLP4h8e4z+yC
iT+LfzjeDbrlevmz+Gfs5j2pvQn+LP5Za31Sm1Tmz+IfSPQQqxz0Z/GP8bOt
q+u4A1j8E/dVN+rF7gAW/zCu44N+FwNY/GO56b70S9MAFv8oCnhH3QkNYPFP
h1GVpfHTGdi28OXtglwIFKuExHPtmgKPuvz+G6px8H0F/Y/KKyZwTwmNcB78
BC92O+VNf5+AW5+Sl0Ql0mDFrr+jr9cxgc3R7MAoZEHZvcsV17dNgtX49TXf
NXLg3DHdPfcnp8CFU4y5O6QA6Kaa0dLOszDJV6QQbFgKkS9PXAgJYscC9Ko0
6u6Wg51FnGU5hQOz9a6xkNCrBNKCa993fxKmxKFFCzOthvaQoZk/MySMrfJZ
nIh9LbzMlXoaRidhnHfCDere1EPwtrsxu0+TsKAdeeuz6xvg4fGoUCE5Diy0
2Cx6bXMjaMhp7ThfxcbKDz8ZvC2mTtSJiN/Op1vEnpLsA8RvuxJIp/Vq2wDx
m9Xysv2xE42A+E3S7WnCrZ4qQPwGcQ8Si7JLAPGbsHVtXk1cIaD8ALzO7b9K
7BMoP9D4ucO+9kIOoPzAVIA6LHtNAZQfeFFu4MbpTQGUH7h0sz3d4BAFUH5A
e0vNWo7AL4D48GreK+679eksPlxYfBVjppLA4sNkT7W5tPv+gPIDX4dOOV21
92fxorL18bUnXANYvPijbPnheztmgf67554NMxA2HHYveJU8BRIjM5OfbsXA
yTS+NHE6E3aclrmpeioRNq89LLNlaQL6fje7JW5OBTfbtPAd4xOwS+VhwPPT
mVDQKaGmVMOEdf1Dp9XOU+D1m3b+PMMpuLtC/Nprr3wQ2MLeQm6egcLMBwer
hktgE6+R2C+MHXsiKEpz7C8DzWiHA/XWHJhwlTn9PLUCTDeJ78t4QMLyXvzJ
LR6rgl3Z85+2/iJh0r1a+tkTNRBezb9CnUnCrjnIfKWvrQfPCP2to1YkLO7W
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{221, 227, 220, 2111, 223}}], 
           PolygonBox[CompressedData["
1:eJwl0DsvA2AYBeCvJte1GEutLiODhmq7ao01IDGIpK6ry1iDDgYRWyfU6jIy
MBhEupkkIhT9C0WfxPDkvDk50xtbWMkVWkIIEfK88sI7E60hTPLhrnFitEqS
GG009J+cuteYoo92fvQXcotpBonypT+T66Top4Nf/aXcJssQ3XzrK3KDNHE6
uaFInlH+7K7kDjmG6eGOfeYYp253LjfJMMADByzSxS17zDLGE0csR/6fdc0u
M4zwyCFL9HJPiXmeKZOgyjFvNAFIRi62
            "]], 
           PolygonBox[CompressedData["
1:eJwNzK0zwwEYwPHfNvKwhrlb8rLmLQlELyvONom7CXML0zDNW1ogcII7wlYx
bV6SQOAW3BFIFInxH/iEz32f8DxPIrcyWwwHQRBikZjhU9+1Sog6m8zxyimD
NDiiQCf37JFjnGeOKfLt55muMkkvjxyQJ8odZRYYI8wVW6QZoosfv851jSn6
aCPCNdtkGKabpv0LXWeaftpp4YYdsowQ59d+TUvMMEAHrdyyyzyj9PDAPktM
8Of+UjdI8cIJSZ445INl3qjwxT9coC6T
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{221, 222, 228, 2115, 2112, 224}}], 
           
           PolygonBox[{{225, 226, 364, 482, 409, 464, 315, 485, 416, 471, 349,
             479, 394, 449, 270, 486, 418, 473, 358, 480, 403, 458, 294, 484, 
            413, 468, 328, 478, 373, 428, 236, 421, 476, 
            365}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 185, 151, 119, 91, 67, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 186, 152, 120, 92, 
           68, 52, 23, 187, 153, 121, 93, 69, 53, 24, 188, 154, 122, 94, 70, 
           54, 25, 189, 155, 123, 95, 71, 55, 201, 167, 135, 107, 83, 26, 190,
            156, 124, 96, 72, 56, 202, 168, 136, 108, 84, 27, 191, 157, 125, 
           97, 73, 57, 203, 169, 137, 109, 85, 28, 192, 158, 126, 98, 74, 58, 
           204, 170, 138, 110, 86, 29, 193, 159, 127, 99, 75, 59, 205, 171, 
           139, 111, 87, 30, 194, 160, 128, 100, 76, 60, 31, 195, 161, 129, 
           101, 77, 61, 32, 33, 34, 35, 36, 37, 196, 162, 130, 102, 78, 62, 
           38, 197, 163, 131, 103, 79, 63, 206, 172, 140, 112, 88, 39, 198, 
           164, 132, 104, 80, 209, 175, 143, 115, 64, 207, 173, 141, 113, 214,
            180, 148, 89, 211, 177, 145, 117, 215, 181, 149, 40, 199, 165, 
           133, 217, 183, 105, 213, 179, 147, 81, 210, 176, 144, 116, 65, 41, 
           42, 43, 44, 45, 46, 47, 48, 49, 200, 166, 134, 106, 82, 66, 208, 
           174, 142, 114, 90, 212, 178, 146, 118, 216, 182, 150, 218, 184, 
           219, 50}]}, Annotation[#, "Charting`Private`Tag$1107217#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[{2111, 223, 221, 224, 2112}], 
          LineBox[{2115, 228, 222, 229, 2113}], 
          LineBox[CompressedData["
1:eJwl02WUF2UUB+D/ErKUIN2wSEh3SAkrDRJLSy8dsjTSKiUdAlLSSIcCKo3S
KN0gDbuApHTz7OHDM7937ty57zkTIeERYV2CAoHABw6hwYFApHUUi5135XNC
iMsr9Rssse5GeTITj9fq6+RAapGXFNxUXyq7U4GPic8b9fVyELXJR0puqS+T
PahIFhKwje9pzKe81febHEwY+UnFTsbSgjL8p2+57EklsrKPSbQhIdsZSRNK
cIhpdIp+MPzON9ShAAeYSgdSs4txtOQ08/iMI8zgKpeN+kr+yyJuO18he3GB
yhznJ66Rjf38wCXacob5RPIhfzKKizTlFHO5TkkOM50rdI5Oe56TCwniD76l
LieZQ0EO8iMdScNuxhNOWY4yk+gP546ZK2VvqpCdv5lMOxLxF6NpRilisIHv
qEch0nLXrFWyD1X5hMTEZCNDqE9h0nFP/2r5NdXIwUfEYhNDaUAR0nNf/xrZ
l+rkJAmx2cwwGlKUDOxhAq0oxwP3/yL78QUnmE0u/mFK9HumPWdZQBRJ2cEY
mlM66P3/toXhNKIYGfnfHr/K/tQgN8mIw0PXHvGYJzzlGc95wVo9A6hJHpIT
zFZG8CXFycReJtKaUI4xiwjO8zM3eGnuO2eNhuY=
           "]]}, Annotation[#, "Charting`Private`Tag$1107217#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNzHdXzgEABeDfm5EtKzMadvZeGRllE7KTbNEre2WTkU1C9t7ZPoavkb2J
wvPHc+49555z47LCaTmhIAheU6qcjQiCzcxhGB1pzhvbW97xng985BOf+cJX
vvGdH/zkF2X85g/lVPCXc363MJdkEmnBP9t5uZUMhtOJGAKKyWMeI+hMS0Jc
YBuZjKQLrbjNAbKZRH8iuMh25jOKrsRyh4OsYDIDqMQldpBFCt2I4y6HWEka
A6nMZXaygFS6E889CshhCoOowhV2sZDR9CCB+xwmzFSSqMpVdrOIMfSkNZFc
Yw+LGUsv2lCN6tSgJrWoTR2us5cljKM3bXnAEVYxjcHU5Qb7WMp4+lDCcdYw
g3Y85Ci5pPOcQjYyhCecZB2ziOIm+SxjAs84zQb68pgTrGUm7alHfRrQkEZE
05gmNOUW+1nORPrRgUccYzXTGcpTTrGe2bzgDJt4SRGvaMZ/H/9cdQ==
           "]]}, Annotation[#, "Charting`Private`Tag$1107217#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1nfcllMcx/G7JUWbkoqS9lRRFGlpR8OKpNLee8uI9qRFKtGShhUNLU2K
9t4L7USUhvfv5Y/P6zvOua77ua/rnPPcuZp2rNchSSKRWJs0kViMVckTidyY
mSyRqIE0OKM/rquCDXI7FMMS/Wrdg5gl10RanNWf0D2FjXJ7FMdS/Q+6PJgt
10I63JRfxXF+EM6Zd1Kuih/lDsiXIpEYIt+Jh+T0chf+L34SlrlmjZwXc+Ta
yGHOADkp0su3aBOc4Ksam8MP5h/i3+Mz4zn+O3re/U7Ramiq+8m8SnSG3JHP
zw/lW9E0tB79mvagJYxnoF3l5vRKPBs6T+5CP5DLhMrtaQ7akC6jfej3Pnst
nw+N5c/Mf4JOk+vw9/Fv8MnwNP8FzaBP8E35k/wQlJDfl7Pggnv+Sqtjk7FO
KGB8mJwWJeWMcjf+b/5DLHfNOjk/5spPxxwkMa+Z7hQ/FBfN+02ugc1yZ5TC
Cv16XQF8Lj+DTLikX4kN+oKYp6uLu/BHrMFYV7FWsNF4Icw3Vg9347L+d11N
/Cx3wcNYo/9RVxgL5PrIjD/1p3W18IvcFY8k+3/N/6QrgoVyA2RBUt/vNd2v
/DD8Zd4ZuTa2yN1Q0JzhcjqUju8ld+f/4SdjnWs2yUXxhfws7jfnTTk57pGT
yc353/hq8Z754XxJflzMwfP8YnrF/c7G+8dWcyrrZ/Ld+UL8CL41TU/r029o
T1omnivtIbegV2Pf0flyV/qR/Cj9UO5A76MvxRqkfel6n7uZLxZ7VP7S/PL0
49grfE7+LT4FnolxmlWfnG/B/86PiPUgj4+xWF/ueS7WLrYZ64HCxkfGOsaj
8Z7lnvw1fgo2uOZnuTi+kp/HvUhhXkvdaX4k/jHvfPwt2C73xGPYqP8lzg58
Lb+AbLgaawZb9CXwje5FZMe1WB/xHuMZxOfHPWIutgaxb7DI3IZx3uBf/bZA
Xwrf6l6KPYvr+u2B/mF8p3s51gVu6C/o6mKH3AtlsUO/Q/cIFsuN4pnHmam/
GOcOdsq9UQ479TtjTWKJ/ApyxdmnvxRrA7vkPngcu/S7dGWwVG6MB+Isib2o
a4DdfN84g7Db/N3xjrBMfhW5cZv30Ep3hh8VZ0TsU/lZ7OH7xbrBHtfv0T2G
7+UmeBApXd9ad5YfHXsw9m2sMezl++PJ2M/m9dL9y0/FXvfbK5fFcrlpfF9z
3pZvQx75drkNf44fE/su9nTsLezjX0cRc0bJGVEhzgG5N3+dnxZrSJ4s3x/X
+Mx9tBxWxN9lbDrfLJ4dP5BPibxyKrktf56vzs/lx8Z5xU/g78UL/JI4F/RX
ImM/X0U/ix/AF+VH821opngvdBHtRSsav4f2kVvSG3JtukDuFns11lLsdbkj
zUlfpstpP7rf99nPP44m8krzK9BP5Nfi/fLv8Lcjn5xabhdj9IJcg34ud47/
o3G20olyO5qNvkiX0t40hfG/o4vnJR+Qn6Kz5U7xf00uRsfIbeldsYbot7SS
sax8X/4mX4dfyE+Ptc9P4XOhEb+CHvC9DtAnsMqcivpP+eax5vh3+VTIL98h
t+cv8u+jtDxJzh7rKM4V2hAH+TdR3PhY+W5UjrNI7sff4j/BQZ99UC6P1XIL
5DFnkJwaBeQ75Q78JX5c7IE4j+L8xSH+rVgDcU6Z11+XwKfyIfc+xD+JH+SW
KIg05nXU/cGPj3UfZ1i8axzm345njcOuPxzrHGvkViiEtK7vpLvMT4i1G+dZ
PE8c4QeiKo64/oiuItbKrZHXtYPlO+IM47+i3WlhY+loZ/lPfmKsnzgL5Vdw
lH8H1XDUfY/Ge8Y6uU3sy3g3OBa/QeN3Zfw2jN9m8XsmfnfEbwEci/eA9ea2
jf0Szxc3dI1xjH839iCy+3te1yXBjDgH5an8A/E3xfqn/elp9/0PLTxnVQ==

           "]]}, Annotation[#, "Charting`Private`Tag$1107217#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1ncc1VMcxvFbNKQhKpFSQkYiGkaSyMjODkUhszKytWU07Ghr22kQLQrt
pUULZY+olFDh/fzxeX2f5znn3Psb53zvrdGmQ4v2RQqFwsyihULnYoVC9xKF
wvfFC4XbUQ7LZO9glLwk+srqYpusC3rIfuDvwD5YLvtQVhOv8udjvGw0vxf6
8cdju6wresp+5O9EeayQfSQ7FK/xF2CCbAxfCk/zJ+BH+nx8Rv9p/DO6Pqbw
rZLRLfEV3c34Y/RPdHvspm/AvvSXalPMoVeaN5M+DK/zJUp6DvSF9Gb1MtSW
reYrqQ/xJ6sTrRtL743q/DPG91Db8XXVevxP9AU4gl/G76vexzdUd1i/jG6Q
++anGi+tduRb0zvUa/A1fYD8Ubq7Nb3Un2Ud8C/dBvvRX6lnYC69yrxZ9OF4
g78Ik2Sv8qXxLF8ff8mW53owjb8ePWSP87/QHVEBn8vexWvyMnhO1gB/513i
Cdmv/F2oiC9k7+X540ljm2R35/lhtWxy7iPfk7V4ypzfjN2D/bFG9j5el5fF
87KG+Cefh96y3/l7URlrZR/gDXk5vCA7ETvz2egj28x3yrPEOtnHslp4k78Y
U2Rv8vvgRf4k7JKt4E/EdP4G9Jb15bfQ9+FAfM2fiXn0euOf5J3jLb6kd3cH
fQm9Rb0ca+ip5r1Fl0d/fk/zbsneon/O/sORsuX8fur9uQ51t3Ur6ZOyZ/kZ
xsuod/H11DZ5r/S1qMNvyDWqnflGah/r+9Fb5dXyuep/fFscx1fhN9DNMD/n
W3Yv/aV1n+aa8LZ8L/mddAt6q3oF1tLTzHs75wwv8afgF/oirMieNb4q94kP
+bboK3ua/4N+AAdlP8tmy47COP5STJeNy37Hy3yjXHvuB8/ItvEPomreiWxG
PhfPGtsueyj3nPtLv8qajOE5PI8X8CL6J7PmT3MfxsHYmB6FlzLX2A7ZI6iO
b9JD8HI+w9hfskdRA9/mLKafyitggOxUFDAg3yf7m+6MQ/Bd9ibGyytioKwx
imBgrk32D90FNfF99hsmyCthkOw0FMWgXK9sJ90Vh+KHvEdMlO+PwbIm6V0Y
nHuQ7Ur/xGHpubI5sqPxDn8ZZssm8ZUxhD89+xdD5ANku+nuODw9UDY3PRTj
+csxJ/2EPwBD+aYolj7Dn4KP6Bsx1LyB/L/pS6iV98CfhQU5J8bn0cdgAn8F
5qb38AdiGH8GfqUvxkq6ePpTzgJm0jelj9HXYSM9zPpB9H90z7wn+/zGnOe8
Z/VsLMyeNm9+zhgm8qXMa09fSf+RinXpZ/KH0xvS99QqqCF7Jfes3preQW9K
j8h+l63iK6gP5JyrJfjV9Knp6fwsvqx6N19fvTm9kW6FY/lv+Cpql6zJd/nu
wXQBB/OPZT+pN+U8Z4+q52BRnpW5C/I5qGnOJNneagf+BPUqfht9VZ47v56v
rD6Sd6fOT++mD8Ih/PA8c/U2/ni1Gf9b+kb2FP85X1F9kC9Jr1Ebo5bsY76c
eg/fjt6ptsa36RHyrvRw3zdELYJe2fd5HnmOOUvquVic52vewvQ4vMtfje30
1elt9IL8htBVMYI/C7/Tl+KL9DuspU/DJ/QtGGHNUL4oHuePznmkm2NJ7tP4
Irou3uNbYqFsCl8NI/mzs3ewjm+CT+lbMdK8YfweeIKvneuRLc5zxGT+GiyS
Tc17xSj+nLwvjJK/ItsTT/LHYLNsSd4j3uevxWLZNL46RvPnojRGy4fLiuEp
vk56B30eltLlPedOdAN1i7lL6Xr4wNh1WCKbnr2OMXxzlMEY+QhZcfTmj8XW
rM//qfxHyf+M/Pbn9zy/yfmdzG8KRlpTAn2sOS7nLP8B0+ez1zBWdl7OBtbz
p2M2fRt20dfjO7qqa+6WfaaOs/5//Rt7Zg==
           "]]}, Annotation[#, "Charting`Private`Tag$1107217#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 0.7812499840561224}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8647431796843224`*^9, 3.8647432624128447`*^9}, {
  3.864751691955924*^9, 3.864751721573445*^9}, {3.8649283805046372`*^9, 
  3.864928401330862*^9}, {3.8649286042048674`*^9, 3.864928608417497*^9}, {
  3.864928913009414*^9, 3.8649289744894147`*^9}, {3.8649290307051277`*^9, 
  3.8649290730513525`*^9}},
 CellLabel->
  "Out[1141]=",ExpressionUUID->"c26e64bc-7152-461c-8f6e-2b6ac6b31293"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
XAFFo/ku+pVM2OYVAY0B3yrIVozdIxhOwh5S8oW2BtbA8fbnyazEfGdd9Dtx
LqoO9um81jvRQcL+3jx943LBD2DcvvF+yDESvb8K3i1d3Le/HZB+ffXmD4b3
dxoB6dcrTBftX3ZUQU5n9RMl0T5gXW+ZHthbAijPeLtik+/67zigPONMJako
9XABoDxj/c895Tqb8wDlGccmBfmfGJIB5RlPzkgKP9QiA8oz6hxzWDw+mwso
z3g99ojYjeM5gPTzxvWGt2RkMuj6+XLRt/HPcXGA8oxZi6v+tw186Xq6y0tJ
VVKHK/FeMDne3vEB9DXPqGoTPMQr9muZEU8EfndNHomFaXB7v35I4V46cLyX
iElZmoaevuT8SM9suL+l84MEwVtZUlXlTExVUGqnMsJrRsL6Da+wnNlaAxNS
8kxqv0nYoIbRXBNPHdyOIxdZE+PzdrXJ2hI/gKaMFQbokzBlfNjo9d8+cEhZ
KjIoKAKFTGNxlcV+CFCSOPOBVAgob1nDyGr9xSQPUN5S5Z7GOjknoj75L2/J
cFVFtJxY7yhv2W336GO5IBkieXdcHHw6AEkZHJzH6nNAePjMHy0SDYoGTr5o
d82k+wkvTk/KY7KJdD+B+538TokMX1j+NLXhSNMnUNFuWv9FYQYob0qE7sV+
gbjno31NfdNgtau47axLJoh7X3S5f5OoN3CX0eJN1RAatXzW8hsJm9MQuj6+
oRY8T99nkife309Fk83jBevh/hdj88P5JExmw9ebrtIUmNrsPJRolQ8oD7o+
VYOxppYMKA9aYua76dY94v7+y4Oq+/fdnLxJBtmO4cngiwPQQBIX2JaSCwLW
G+4/LR2Am58DYzSssun+B3UtYeKOtisIq9ulJ5Z9hh7zKetVthnAzkce5uxI
A/mBddGZf6bhbdIrK6XmapAyCLXMHSRhLrq3Ot831cKO9VyH8WliPrdYCno9
pAC23yvkTkweoLzp7Vs3L035kgHlTc9hMpPRxHygvKnoaMwjoTNkWC3vOrts
MwAyl/Gl4k25dD9GbdxzeMOAP9TnbH7T0hwHe15Pt+/Tn4G/X6/2syWlgM3h
M6HulGk4WXBj19p0BnSxTO7RPDMD5/t+8KvWVkHt6e0Sl1NIWPo7q6+r9TXw
Z5eyJA/BX7xnIlSsaHUQQ4pik6smYdMQ+Tb8MwX6fXOE/o2TAeVdFY/u+KP9
gODZ//KuPiVpuuvukMHojPAev+MDsI6fc3tfSy5sXPdA4TY5CfzbP06l/yb4
Y9khxms4HUoi4ovsOWfg4AFS2EGVGsjRchHbRfxeSsqO3OyadcC98eryHxoJ
Q/lZyX23I66akwHlZ3tyG2T/977OWMqxdtg8AA+8OHtit5ChyfKMXc77VIjv
uqPykLj/c9wDA+1KtXAp+6dJEHF/y21ZqnGVFNgryCLjmUEGev42scp1mPj3
UP72RuHMxJdrZLqf5d09rmDL70r3swRVRHAtfBFe8N+r3y8dCKHXcK3c4/PQ
8ezPobfvosFKm8TsJjYL31j2v1p5mQAK4lNsW/bOwEkf7nMMx9JA+2DJApU2
DQl/vLxiDbKAK3n3odf+MxApeeXaEvE71gqOtxkvz8L9yWe00OhCuLo1wU9C
dgEmWbZWtLmUwsUeVlvdGQbMIL1BosC+HFZTz4ZHnmHCODHZi5dMKuFeoahf
zgnieWEQLYh9Wg01jdmv9dtJWL7Yd2tN11qQm5zKziPq87Bdr4KyIuuhYtRi
PTWMhG1NGBCNudMAxgll/K05TNjs4vVsrpuNkF5PDRZ4zEjvD51QWdEXPTkM
yI+7P3Be6JgvFZAf91HLfVomqQuQH+d4rvSamUYLID8uYVSZgftIPSA/bqGt
/rVjYjkgP4771k6OhdZiQHnmr+vy1aSEvgLKMyfZ5qx/OJEHKM9cM9VSdy2G
WI//5ZmvNZt7Pv/ffP6XZ5a2erh712UyoDyzS1/gGZ5buYD8voLOlyJKiVl0
vy+FIl1zq+YL3e+7qTuyp6oyFFCe+ZaiZBVjpw/d/3N4/1nAm+IGwkZw50Sq
O5goVaSuGCwAO2yTFcXD4KLZuMIWnjkIUbRjGn8dC8+mR5/ffzkDno8Wi+5Y
J8MrFtOdkj+n4TBzjei/KxmgzBF84vnuGdCUDa5wvZcDXoF+PiUis6BdWPvT
wqkMSu/F7A2MZMReq+w9qmFRARZ8M2nhRUxYaemcPqtDFSgV3MnY/JqE3Znk
ZL3lXgOPccED8wR/32Fl/XXMvw6MBEfP3OomYYudJn3PE39A/aKzIS5JovfH
blQRVdG92Q7In5T8uMTv/rQRkD8Z8nF/nyBXNVTfbAt1OtQHP+7Y3S0hlQLK
c0d7CfIbzuCA8tyb5TTd5i4UAMpzqx/I89DalQcoz/2nWJRR3JjYv//Lc7Mm
XC2rIfZzlOdul8laDl3JBZTnzr/yljfrUg4gf9R4VeymumkG3R9lrG6RSLnw
CVCe29l695Vac1+6X1rjbyT+6KcrSJpkcMm8/QD7L/1JsOuYgei8jULJ7okg
+aZ8LGx5Gr7I/c12PJcOmPIljW3z0+Cx88WhLbrZcN583v4wcbwRU2TLoclK
eLspg5/LiITVO7ynuDLVQGSoYaPGOAnz2z2YWsZSB7q/725xmSBhCourp6IP
/AA12UhSyUNif+fyMdk10gciVdFbmzuKoCW58q3BVD/4C5+rK9lXCChvfknw
ICXPPg9Q3ny3cPNaEFH3o7x5zbKq8HdivaO8+Zjl68znwmSQrFC4MOZO1K9s
ov+u9+fAngs7qHZrAyC7dcvD1ZhMul8cL8OgX1aXSPeLz4g3lxQU+MJfIam/
r4I/QU30QqXTtRnQ2zd8i8PgC0gNBMVNEPv5h+9x8aZ3MkFPxZLKqjwD/D4q
c0OrVXBV0vbULWK/HjZ2OSq2WgMLU/kSgsR+LjQpeDicpx6iKelxusR+z+73
i8P3NAWyOjZ8eOKTDygP3yRhvo23heDx//LwOx/V3/tN7OcoDy/SyLVe8BYZ
XoqRC6/DAMhnia8l5OZC/p7zd/2KBuD+/VPO1i+y6f723Q2fW6NMXSGtP6xP
zeczyDSedz1B7D+Ww54L0jlp8GLbVtuNv6bBt3DoalBJNfgYt9y8NEDCBA41
BwUW18JYJF/V6VkSRgLlho+GFEg4KL7AlZYHKG9f4GfcfOElUW/8l7df927h
fQgxHyhvLy+0Vt4mTYZQy/VSTJYDUFHxvnySL5futx87ymHyeCoQvktpOEJI
HFBK/cVKTWfA5pIFZ4ZpCvROnxY1p06Dvu7p8WPNGUTdIOH2+/gMTMXFitoV
VIHhDtvC1AQSFp1SGnYRrwHTTKFjj5dI2PclnnX6TXWw0uQsMFNHPN+PnGXy
4ijA/zRA7MU0GVDe/0XtKR5zXWL9/Jf3Hzm43a6C2IcyglZ+XhIdgEdpfh8q
e3Mh+NVTW5JTEnxgbNgh+3caxmO1rXJK04ElrmzXGFEfcUnctDa5UAODJ1t/
hUyRsKnNM3WLl+ugdkXC3GuYhKH+Acb9VUN5lkS981//wMTEft/Y/9U/N3zP
S3IOQMIsz/b47WRQX9L8eP9eKiSqxRfkEPwvfOjkN95ztTC7zu7kL2I/380c
vFRSSoEzrLcF4shkQP0H5m8erOwn+B31HyxuNY10VCHT8wo6TvMN8cdcoVlS
KSLSKg0qyheaXIj3r1lSNZNdVC1EVgtUFM2TsO1pT6I5eglelBZKyQol6uf/
+hXObpR+/r/6o6M8WyiaSgWoOqNscZEMTneyDVj/JkOd/emvo8T+7vLD6Fpd
VA3wjarozxE8dXn7ukhDfir8Ex0MWdMnzv+vv8HKed+OWU0yhH2q+nFrJRHG
f6QlscxOw1/1hSPT+2rgqVxEpTjx/kilyUeRVymw8Ui8wwl74nn4rx8i2fvH
1xLierQ2xqxkDXwBQe1LTmPE88mu0GHzaU8tmHBtd/tfPY36JV5d9DzQRfw+
Kya1whLFVDA6ob3+rRoZ2qK7+ZNotbBefKBu3z9i/f/XT6Gmb16fQvz7qJ9C
/CzfT/vW52B68miG9mgKFCu9tikn5uf7c/6BvL4acGhPkwkg5oc7/eEeEKdC
zA7xVDMd4n21a8TJLZ0KTC+N6sRvk8HPHXanzibBsfokKbXxaZDcll5IuV8D
grsZOz1miHraNYEvcBMVMhsc93I9Iubzv/6NDeU6AerE9SiP8Fzm7EmFR1Z7
jqoRz4cycyDbK61aWO55ILaD+H7U3xG6v7P3f3oVyqO0dwrdvLTFlZ5Hsfz6
uCO5ehHE1x7M8PwNgGW5mynm0vPQdGVrWL1LNKy5n6sxkZwFd8Wsz01mCfAu
5NzleIK3lbp94nbwpUGK+oOf+4j5XnxuW9CrngV1++xf6/nNQIKX3oMBou4g
qbZdKpiehXrGO1V1AYVgc2j+A7PUApwX45wdtSmFLVaateMTDJie9CHlWfNy
kOS+nLJbggkb/iiq2KlTCVn7RMRPihH1G3v74QqXaqjDFVZHWknYhq0MDS02
xPtp6u3rfcTz/k5LuP1maD3EXZ64YhZBwh5EbGTJV2+Are3MrYv5TFj2nQqm
zuuNgKftOcPjxUj//xoqat58vKUwDChP09DzQKUmnAooT9NenGHjUNEFKE/T
nHVBNdeiBVCeZtd6u9uvlOoB5WlM5T8u1RaXA8rTrKtkFe4bLgbULxPy/VmA
qPRXQP0yp+rNHDvm8gD1y8zzrGs9FEsG1C+jfdrKOZiYP9Qv8/LGujM6imRA
/TKVaht5wrVzAeV1NBQFR/Xysuh5nU1LSz9SWFPpeZ1TXfoOCm5vAPXLJHx4
TVvf50PP73z+YnvlwYgb+IaFVr0Sd4fP/ZIGEpYLwBWp/5fbOQx+eKqsHOGb
A3/OcGt+u1iQW22LTA2aAdmM5+3H1JJB/X7I3JGRacA0zr1ZfzYDnLs0lQd2
zMAXqsdKzrUcMBw4T95yeBYSh8t5nlqVwf0pdRv7t4xYSI/NxVdGFWDyTCkq
pZAJizw8YBpmXgUx/PyjjsEkrHEh29rRoQYydp7M0SfquZSfFxU+e9VBpqP6
n+4eEra2m/mAyIcfsLEn4MllKRL9/6tIuLq8M96sHVC+iI2jhBb6llgH/+WL
quzM2E8er4aWbVrRQQJ98Az3X1y3vRRQv5DYKe2tOWxFgPqFGvRMLjUrFwDq
F/o9I2zpsjcPUL9Q3/t5hx0mZED9Qr0nHv6dJuo51C8UPxSke4iRDKhfiLTx
H9Mx1RxA+SaNstkMHo8Mer7JJbX3erX/J0D9Qm6vn77xtvGl552UeEv69k+4
gphwm5e94wdwcPD7Hto7Aw9WozAPnURYzCx3vLs6DeVvH/AFC6fD8JTqHm3i
/dqS46yleCMbJFK/jp9ongEZA99u8kglfI6lfGDWJ2FyHvLK0YvVcP2XusT1
MRLWu7yPE1ZqgeFfUZ/VXxJ2VTrM9QLvD/g3sfijwYyE5Zy/Nd5D64Pd+xhz
c38WQfiR+auWf/pB4S+T6xbxQkD9TDgtf9nALQ9QP5OrsZrxtcdkQP1MZ8pP
KH37X/3wXz/TR8Y11yZRMnjy6mC/3QZgo3wNKeNnDoSa+XQ9WRkAW66i7LrM
THreq6boYl/6liR63ov7AsbhXuQLY7+0daqsPkHkvvGzM6ozcMjA3qxP/gsY
V8l/2EK8v/N5dmz2upwJwV28PBaKM7A4dnbVfrYKYq83HjlPJmHaVgffqs7W
QL1clAcnsZ+4Nuk/3baxHjbsNJG1KSJhDxWY9V5KEjy21v5XIDgfUL+VQE7R
7YF2MqB+q8ij7bky98mA+q3ON4Q4ZxP1XEYP/4dj5wagy6/WtLowF1it1bVf
fhsAgX89XnJvs+n5tICJ10yyNq5gdUBo5ojRZ2B/bxWis3EG/KRmdG7GpUFa
ldtU09g0rJX6F2QWVIMbvqTHTCVhtmxb/nDk1cJ5SyvxEaKeC24tPJCpT4FD
HelTEbl5gPq5+Co3pzwJIAPq5/rjIX8i4H9+/X/9XDmL1OiQ82QYKN9/hsV8
ACTqHn3UOpRLz8uJmW8QM08PgsJl5zEbmziI2Ln3+meLGZB8wbjf52oKSFRc
PrRI7FduuYk3FL5nwIgh/1ztsRmo5QiQYM+sgg2P5MVufSLqj5xHrAa5NSDt
kmN5mHi/c/eqGfRV1YGPfRRX0Q8S9oE0Flr5kQKUM1Nd8/NkQP1kqzsOrGfR
IwPqJ3ul5yPFS9QXbecM6g4JD8Bms7bu7QO5oNbB/aLjThI0cI20RE9OA/PC
j676zHSwvbaBJZ9lBp6fW6W8OFMDX3T+nKyYJJ6HqeNCNhfqiHpw4U7JTxKG
+tNYbw6VkKzJgPrT7tCyjqb9L//CMLmfe90AsA6urX+2iww7sN95ElgqbB7x
4LQg1ttH0d6jIFELXFZPj20k1lNiOMP15u8UeHzq7VBjAZne3/Z/mrrvuB7+
PwDgDb4VZURKISOkUCoNo6skIVKkRCEhGWl+SqI0aGhJQzKjvdfnPg3tPYn2
Utq4T3sov+vxcK/378973N373vte9+n5eoSr5GUeJeMVKr9tjcTj75radPCG
3hqsVSpyDtiwRw57xuVEbPeG8tEHvWNYnhfnxd+BlZhe1s9bGmT81X4/KPFX
cydWk1PFgYWQ+9O/fDin450BzmR95yw2rHjYQcZj8Y9dCVU6duC1mkNLbSx2
nlN/R1TPGDbWsDL7d1AFdtonteARWd6KnvXxGhu6sJZrlnuyrpHz5V/+3LWw
hBPS5H6nP6Tfu7M9GtOsS/oSODmGmVx8F7RGsALr8+V/pvaLXckmUT8h7E8n
+T58NZlqS66Hf/l2TXVnO4vI+mw4LbXaoyAek5JK39hIxnOOp5y+l/JVYrvF
ti87RvYXlY/3MvOcDx/5fTTY6XNW8VMXdtM24vVRHTq249FaB5GWSqwyzp85
RsZzVL6e10Yb0wiyfCpfb+fs0SdTF55iu+2ySqXK47CeW54T6zrHsH0BZZqt
3yowgS3598+S8VSrw8NdIhJd2Dn6hPR3Mp7T840Jf5xAzrc7Oz+8JeM5jaLa
PS4NMZjo39on98nvqXghfTH2cxWY1+QYvW6MXUnlWNZua54uzM2/84PYHXI8
/+UHXlZxlDEj67NiV+TFrqwEbItC494m8vnF3ArWaWcqsaCv30P1yOdT+YM0
MRaZavJ6ypNe1QnMahNwwNZJv6/vwxIxOWsl5yRyvK5ruvB/d63EPiV49ajP
sCtR+YWi58oa3cj7c0VvRLv6x2IP7gToapLz5Xv/lWCZJxXYmzD7Tc5k/P9G
/KRad2gXdiR0fiiMHE8qH9E1P6ajkLz/XesZZRnXeOzwzbC0ZnJ87lz+ks3z
XyWmc9fi8j5yfGSSOKuK9ndhqWs4Bl4tjM+//MUi2pMXLxZ+v2TrGG/1jMOk
Oh1OM8n2in4QEt9UUoHxKK81rybXuwl/xIlfYl1YwrvJzd+NyP66LzUVEtOF
cbw/oHyL/D6j8h37FV9MPSfLC0gv9/J8kICxC4Y5LCHLS13veWpGtRIzI+LC
8sn+o/IhM1Ud/rKR64nKh9zcKzuy0B9UPuSqt9Xen8jjF2XL+zpYE7BW77JB
LnK9+mESHC5bKzEFqaHT+8n2CT7AvfaodmFzGlye4Qvr81/+5FpJnR8p5P1U
/mT/xNZFHsc9sOjfIaFPOOMxjeu0FQ5kecedaVZBvRUYhj12yyXrp8d+4SdH
wML47l6/j7zf672rlNxsAjZjuF6ildwvG2Z7Q+4aV2Kfj6iJ1pL9088vxM2l
04VFT3DLRZHXU55Y2MuRN5nLATzxk7K5s4UfJsETk/UU/f5wDDzxer64fg+B
EfDEN4LbBxv6CPDEJ43i34QXEOCJLwwz/dQzmeCJU6abuWeej4InVvmweMT1
7gR44l1+7uxqX6bBE8tEibkfl5sDTzymsk5+/hryxB0PIkfLOlnBE284QE4J
NuSJN4iJXdIuRJ5YYrtf6aJp5IljxNcvL3uLPPHTtB+RCoXIEyc9FI544IM8
cbBL4ZR6M/LEosTaLgtT5InNsD0eZY+QJ67yM68MS0OeWGpPi4qmLvLEr3+6
8OmyDIMnltNb6jhmjzzxZKfJpoJa5IlXPy3vsdjTAp5YqC8nSKQVeWLdcLWB
cOEa8MSqy1elD/mUgCeu/m1aMJ+SD55YoPZ932xNDnhiduMNdSvcM8ETh/93
6f7KvQzwxIJOAe05v3HwxEzya2xVJw6eOFeX/Z3BNB08cd2tV48WG6SDJz5g
80jGWzoJPLHk4Put/uavwBMfYWGj623xB09cc2xucaa1H3hihe52qf4aX/DE
bStbxw8q+IInfog5PFaX8QFP7MkyeZh1lTd4Yps5rznXeS/wxFWdr9hPNnuC
J+5wL55MrfUAT7yT64AUb6I7eOLl6qszXafGwRPvZo1I1xAdBU/sx387JMiQ
CZ7YS0pzTCONAE8cUBBprifEBE8scjw259XTEfDEWQFqvJzk9z3liY9K90dY
rJ4CT5wr7cZpshN54qK8Ev4jDsgTB+4MkTprhTxx12pbnYhfyBPbWX+X7exA
nrj0a2BZnAryxJY2jwQ+ySBPHCOw0Ui+BHniQZPmyzeW9YAnPuO2otxrTwd4
YrFgJyOnRuSJZXYVFx1Z9Bk8sX/VVrYI9grwxPIsTUJT3cgT9xXWmZp/QZ74
ZmpsmGxXFnji639azRUSGeCJY0xXN2jP4uCJZU5nRgcSOHhi5sXB2k8hOHhi
l2sbD+DMDPDElzbleLvvSAVP3Ol7J5BnPgo88fbpDdoC1v7giZsjx0x/V/iB
J35h1S9hiHmAJ1Zyfi3WUzoBnpjmjO25WDEKnviRzrILWAoTPHHkfF2kaTEB
nvg4J1f8vl4CPHFed9X7i+tHwBNH5t470qEwBp74xu0bPjTFSfDEw6rHCN8K
FvDEt6tu2hTtQZ54qqT3sCmGPLFlaIa5ZRvyxLZ3An9u/T9PzNI/JKptgzyx
xo+e6SsPkSc+a3DyfPMu5Imfb8uS3o8hTxwowLeCHoc8ccdmz2I5O+SJH231
r791BXniTxsXrW+aRZ74uVvnTcaOYvDEUfYNdOHUPPDEyx4VbVpfmA2euMPu
KueZ5Zngibs9SspPrGCAJ67Znir+nJwflCcesrep7SrCwROft7o/cNiVDp64
9UqbU8G5NPDEiqo9XRp28eCJVx1nnjF45Q+eOJU1aKfDpB944gRCKrvksQd4
4kWD0zFae8fBE1/3GDSSCRoBT7xSRbMiV5AJnvio7dZB01QCPHHXh7IdnkZM
8MSJ3freRktHwRNr8ltEzT5BntiPizOqLx95YsvCPg38DfLEHuNp9NZJ5Im1
IwaO6BchTyxup2UmyYE8cf8YrWjk5DfwxCnxNw/OZSNPfOvhkQsee8vAE/+a
veYinY08sQ7zvt/SFbngiRXflU5PbckCT3zn3MghTxMGeOIrdheGupg4eGKT
wxXFKsM4eGJtC9bN63Rx8MQdra3sP/dlgCdeLzepn1iaDJ743ImM9tyhcPDE
0WeW/V6j4Q+eeNZITIc26Q6emN2rbFvN3knwxJxm/jz3t4yBJ7YwOSRd380E
T9ywdGBmzVcCPPEdgZe3gj8TyBMPj9q4DjLBE5fiW6ukekfBE++RT15349sE
eGLn3Aqt9BAW8MQcws+OE1zIExsEizQ0bEKe+Fb98s/tdcgTTwrrCalOIE+8
JvCXpMBT5Ik/qd7V8X6HPLG+/2KHMxeRJ27dXB6yrhV5YueZYXm7g8gTn7o2
e+iiNvLEbYxFfZ7r6sETix8zT5bmrAZP3DhmWxXfiDxxz6qTzCWS+eCJDbpm
FuOqOeCJ0/l+6MWoZ4InNlh26ozlRgZ4Yrm7f6u4yfVMeWIZ3PvP73ocPLGC
U9kb9gI6eOJogQ9LyzrTwBMnyedeDldKBE+s/3QN7+PYYPDEP3ZxSV7m8Uee
uHr7112xHuCJw7/JmB14Pg6emD/+kKVd2wh4YuN52xKffUzwxMbScbLfkgnw
xOyfKw5kHGCCJxb/c7W+uXwEPHFi0x4PlfPIE8sNsYU1vUGeeIuz3MYwT+SJ
7QsMQ1XGkCdWP2yvkP8FeWI2/YP+PVuRJ2bXcuJpWdEAnpjDqYxzlSHyxMuM
X/6+w18OnrhVlmV5lUYheOKYFQ2nZO7kgie+8LRPWuBBFnhiJfWpE5HuDPDE
F+12Fd0ax8ET37wtHC5BxpOUJ+58L/j6sT0Onnhd0kPHqRcZ4ImF5Ou1bj5M
AU98ayAk3+hJBHhiWZl2aZ9L/uCJP0Z12+sLeWBO48f+7lsTiJ248vTXK9oo
+OIDDY+Hv7gxwRfXlDq9/pxJgC/OOvV4+8N5AjzxFS3asp/6yBML0WKucPch
TzwrqtURN4A8cYGRc6yjAfLEAyKhtSxKeeCJY8e3XPl0Ihs88e7tAwkfWhng
idmHtMcEFzHAE0ce0zLpJ+c75YnFNNJSdZNx8MRBuvYd0RgdPHHqxgezD0tS
wRNr10stHz8RC55YxeCEXrK7P3jir98I3V1/CfDES+4uXcHBIMATF29bw57v
xQRPvDLF8Oa7FOSJj6ot+2Y5jTzxpQOBuxJSkSeWfMzcZvY5Ezxx5INHp+01
GOCJE0xMY8TI9lGeeIte/JmLfTh44h+4usigOA6emFtzNlWwLh08seqSqy9T
v7iDJz78MvjnjduT4Im137VJbNcaA08seI3tW8wcEzxxQqRj81gbAZ64uNzm
vyflBHjioKcT8hafmeCJkx6vbf+QPQqemNXd85XE+wnwxBvG+JqsHFnAE8e8
br7mNs4KnvgaRj+kwYs8MU3J+bRuBfLEh9u/axCTyBPPxma1pwQhT7ypz843
IAV54s4l4cEBNOSJU9IP/IkSR5540dHpX7FuyBNz7UyeEctDnpgnJ6nxsT3y
xNtqqm3c/KvBE0u93HFKWboEPPGeSFEuFvN88MT700tX/X2SA574nmES68T1
TPDEwe76y8TFGOCJvzde9m8g1z/lie07adsnmnHwxF0T8058HXTwxMRsu6DC
xnTwxHy9+/ZIZSWCJ74Y+eWWeXAoeGJ6oPYjfQF/8MS8tJ2Hbud4gCcuTvpp
bVM8Dp5YaDVzlzbbKHhi3iGbCm4NJnhiNddnv31SCPDER0Rct9mKM8ETv8Ud
putiRsATV60euDt1CHniR6pbxJV8kCe2N++wVXREnlhO/CRXGhN54ljDhDbB
ZuSJBwS2qT6WQZ5YwvRiyrgl8sQJKhc2mSQiT3ztwAuNg17l4IktOfn9bwcV
Ik8s53N3+HUueGIZzoI6x/gs8MQBitHD+18ywBMXvRCcWzqFgyfWPHGtaeH9
S3liw0Fz5iVPHDwxq9sF63slGeCJ2/8M0v/7lgKeOHGz7Bf20kjwxNVJ/R/r
TP3BE0tvPaKit8sDSzYPSGxa/Bwr8b1iOPJmFHyxVslpfpeXTPDF3mprtr7M
JcAX8657bVXGJMATK1yUPX3nBPLEcV0azx5+R56YMcdoT/0/T/xY2+ugmCny
xJa9qo8E7fLAE9/Q8OGJe5wNntgqt1509zgDPLHV4mLrHC4GeGIa55KblWR/
UZ5YdrmsQVoWDp64leNilP0VOnjiCbW2yhW8aeCJQ3nmk4RN4sATV+v2pS8O
8AdPHJP3lGbGzQRPLKYebUNPJ8AT1996YCxEY4Injs54lWQVjTzxf5e8mP1T
yBMPtIS908hGnjjHWGBi+0wmeOJXMl4C/ecY4Il3MLr16hfa988Ts9zbPLZm
EAdP/NnaQPKqCg6e+Ft6CU2VIwM8sXry/LDfD3fwxI3LylQUqwjwxOLirDb1
LQR4Yu/f3Bf6G5Andp1d58Lyf5446Eb4bhHxTPDEha4hX5r4GeCJrxy3+HCK
rC/lidliK4/8rsLBE3e1DtcLfKCDJ+6peZvjF/ccPHFW4CHWTWJM8MRuFjz6
wuT+QHlhLe7OFs0J5IWnfQ4INFQiL6zMnpNmbssALzzGcfKy8SgOXvirsPg0
8RMHLzzMyrTbZIqDFw5ZbJbKQyfAB+c+ikxfO4R88JCZMG3lD+SDnwcNbtT+
i4MPruFt3tFCtp/ywcI+tLD0jzgmHlTv4lAbgbH53MiZGSHAC/PfW7z4bA4B
XtjohD6vwzTywpc3Va6WV2KAF/787XXbF3J/p7xwRbUvnacHBy8samtxsSPP
HbzwB8tWo4fuk+CF1zMEm4xMxsALX23+6jSzZAS88N9B1qyi7wR44Yhv98KI
YgK8sGphw/LcYiZ4YfnVNN+UqFHwwnm44oNS9wnwwqrNvVy5lsgLu0w2GUkN
sYIXpl/oczm7BHlhyTVWjj0lyAubxKu4PZ1CXnjo6hG9mpfIC/P63Dw7mom8
8NI3HI8CnJEXLg2LfZdxGnnhlxysqaExyAv/4W3XEZ5GXphFx2H6bQzywtn7
LzRnNiIvvOjcA7nTl0vAC6ub3cMP+ueDF/55vOnb1tgc8MKGinIv1G0zwQs7
baqzpUkwwAvL9HwtLV4Yz39e2MkjaeJNGw5eeOJEaKP5MB28sO7d5qYRxXTw
wvKrE+WvTiWCFza6Xc2qyxEGXphrZQhL03p/8MIcIiarfUs8wAuPDWcGX+kY
By/MErhcT5xvFLxwV9ldZ0kdJnjhbwUOrCdTCfDCvxJnMdUtTPDCLiEt98Ne
joAXzjo990NeHnlhhZ4GB0035IU1lVxtz99DXjh6uYSkIoG8cO3dJywr2pAX
lomZ3By9H3lhgyE9bZ6PyAt7iiVab2tGXvi3Va3uqxLkhV1DPipYZyMvLMaz
6ZsVngteuGLZ1f1+JVnghcVHLcK5PzLAC0fM3zUNmcbBC6tpW544T653yguH
FXu45/jj4IWDhS6qdbVmgBcuv7tDQ4wlFbzwVMNqOQXjKPDC+69cth4z8wcv
rHiFKa0v64GVSyhwRTkEYOvDb2YvTh8FP/zp7+HLuRFM8MOmcgcLjQoI8MPp
3B/Xtg0R4IUH6C3f76shLxwryHqDqxN54YDB9J2O/+eF0ztM7E/eRV7YQWVQ
+mJgHnhhVlPa1LMP2eCFC/pKwrjZMsELs83yBPZxM8ALD1n/PJ1C9hflhXN/
9YfczcPBCweNnIl4Y0UHLywfzsd6WDYNvLBMdbfvF2YceOGYTV1zkiH+4IWV
l3Ip2axighdO9t/3xDyNAC/cFiGjk3iLCV7YRSQ9KvID8sLa1fI/LaaQF640
2uZ4NQ95Yef3915WLssCL1y63XIV72UGeOF3kqHPTzBx8MIWN3itDg7h4IVP
XeVdNKWBgxduo7sNX9+Ugbzwi+4w51/u4IWfLno4w1VHgBfu1d3Ku7KBAC/8
wPGlwWg98sIFxp/l9o4jLyxrv3hDokImeOGvE+mN7OsY4IX3z7IW7SLHg/LC
578OrvGtw8ELP191//ixVDp4YfvXxz+bSwSBFz6sah0kK8UEL3zvdpVlczKB
UR54cUyS8rlx5IFTG8KGDGuRB57K5Zb47sgAD5xa0ld0dgwHD+wfZ2MY9gsH
D/znbIcGhyUOHth93duwGpwA/zs9pMKyZQD5X7auek2LPuR/U4u2HXnJygD/
a5IuXNu3EK/8878K3/0YibE4tlFo3fV+3wis98NxvpEpAjyw8h9nz2VZBHjg
mFGFiCfTyANr2Rho7VVjgAeWdfKeHif3d8oD095KRZX/wMEDRzxNmy0td8fS
R9rko5ZEYfyzkoevNhHgg/8IFieYVhPggy08qrbumkQ+eEdNlqHYVgb4YFHZ
EYff5PMoH5wv2I2tbMTBB3uHvUrkJeMpygcr9c02LR1FPpgryMYucgIHH9xY
d8EriiyP8sEZ3Wyla8h4hfLBt8Mz+772kPtD4LBi5/YqrIMWurpwCHlhXusZ
jdr/GOCFr46+S2on+5vywoU33GMwMt4CL+ylHqo4jbyw4VVzPivyesoLE6l/
Hav6cfDCd/FLKz6OIC8ssaQoyZK8nvLCuQfx7vZtAeCFFW7Yt4ST7ae88J42
0/PbJpEXZj08bPdsBAcv/ElrcbIoGS9SXjg1evqrFxn/Uz54zSivwb45HHyw
T751Si75fMoHRyQRxm3k9xPlg48KlwppTSMfTJu9tDef7F/fzMT2odoubH59
Vda27zh4YcubG0om6e7ghRvNd06HBk2CF+bfsWWloNUYeGFtc+IhY+UIeOEh
2eQotR8EeOHQVxKSykUEeOEby7ZN/sllghdOVkiOqXk9Cl445m946GaHCfDC
Y+NdWZduIy+8pW9jGksvK3jhoPcC2Zr/IS9sNTKhJ1yMvHCSZ0Nv1RTywsO5
XHdOvUZeuI8j13dtLvLCLXbrtbzckReWyg8Wr72OvPBosJKOaA7ywg7KVjIH
ye94ygt7Pzwh860AeeEj+5o61/5BXtiGrh3ibVsCXliVV6+Q530+eOGfb0pb
ZrJzwAvzaQT0hzlmghcubLnA2CfFAC8cr7X4Zd7CeP7zwrkd/Ue72nHwwlun
yhPHR+jghY8OlY6uOJkOXnjZ38A6wTVJ4IUvNZYZc2WHgRfeFS2SFrzRH7zw
yI6KQ5srPcALexYLLP81NA5eePPjpYtTNoyCF3ac5QxvOccELxxMGzQoIuM5
ygvrRFdpHRZmghfWKva+xP98BLywL/1BmLYU8sKTJb8Uq52QF97YuGGdAQ15
4R0Twfk2v5EXfqvcxbjfjrxw/5cNnRIY8sI/7M6V7f+EvLB4cTpd7Dfyws6e
HHFPfyAvfFvlq1xELfLCR0t5PI2LkRf24H4npVWfBV6YKzPlDn8MA7xw7nzz
w7szOHjhNfcrVewX3gf/vLB3vZ//sUAcvPCB0Pdzhn0Z4IUlfE7qj6xOBS8c
vPrqPrOkKPDCjiOjym4W/uCFQ+1DiZZ9Htg3b880X4UA7JXVLD0qdxT8cMin
AXdaHBP88Ntro0/bCwnww5O+Ee/YBgjwwh4za9MnVZAXFvP6czW/HXnh8OKm
T7r/54XtboRfO2OJvPAz1+5hiQ954IWfPuIVL0zNBi+sofVW8D1nJnhh2vUz
w/7LGOCFvSfnisIX4od/Xvh2ipNWcgEOXnjtSdtN7A508MJ3tsY1C6qngRde
ZSmt2LA3HrxwYIERR0moP3hhl9gJnlX8TPDCS635NveS85XywllDZ+YDrjPB
C99U4jTe+x55Ya0R20bxKeSFJXnbTYwLkBf+sCga11qbBV74zUcsptCYAV44
UdNwfwAZz1FemDGXtq2QjOcoL3z0UFohvzYOXtg2qFlEcXcGeOH04WT5uRF3
8MIh/R5anF8I8MLZrPPGFfUEeGHRnfc4b39BXnh1yQXjvHHkhcvv/6ILK2eC
Fw75IV4stYEBXljX5R6xbuHv8f+8cOEVOzb1Lzh4Yc66zpa0TDp44azMJyee
/woCL6xa0JmlL8sEL3xfYR9WS8ZzlAeOmGgZXvCUlAf2nWgU4fuMPDDWtOzu
PlcGeOCYaB/JNjKeozzwKkIoaoCM5ygPfIl2mvUMDQcPfOvRy5lSBgH+V/2r
ZrxQP/K/mzPK8gL6kf99uTlwsJ6NAf73wPl+p4EFr/LP//ZNeNC8E3BMsA1r
XG8egYlElilw/CHAA8fl0CrZMgnwwA/13x1f8LWUB+4xnxPWPMoAD2w28aKN
hyyf8sDiLnuHQnpx8MC7BmieijXumK2cmeaDoUgs+cDV3vAWAnzwseTbE2aV
BPjgCYE7Ns8mkQ/mM3G99HY7A3ywxGjep+/k+4TywYsj2wU9m3DwwSIuIbJH
yXiG8sF7qjZaGo8gH+xcmCGsM4mDD/Ygo/w2sjzKB/vuFtLU+kSAD/7rs40e
382u5EcTCz0nXIX93LhRNG8YeeENvJxblTgZ4IXfXzZw+Ub2B+WF5cTjuawy
CPDCPAM6X/mnkRcOkp1XeEteT3nhk7t102wGcPDCgaKSrHr/54VTlKeVjcjr
KS88+VVnx5fBAPDCWNVBTn2y/ZQXvtztIvxpAnlh3lVmnZNkPEd54bnJidu+
ZDxHeeF97Zkih8n6Uj54ZnBmtdI8Dj74plxNYQ35fMoHq+pguB/ZX5QPpmHz
m29OIx8sorZ7fRnZvw/2WHGOV3dhx35ZBAt34+CFQ6591r6Z7Q4+uKenL+LQ
FPLBmY2PdlWT91M+eEPrsbZesn2UB7bsM/GXJetDeWDjoudhC/Em5YEnTiqP
c5PxKeWBY21FJpKmkAfe5iaYzkPuZ5T/lQ2I/DxGrm/K/67DnPwax5H/le8a
VG4axcH/BmX0ex4j12/tyVHD3SEx2Oz5OrdeMn6nPDDXoTbBbrI+lP99g6sP
uE0j/6tyfo6xMJ+Fyr0+/omoxAyPn7iQTY4X5YHPJCo/nyPP0/lETu1ZHodd
COw5P0zWb/C00uuc911Y36rSx2bkecoLH+z8yeghn0f5YM/65WoG08gHmyaq
RmiQ5ykPXG8o/Dvl8jPwwMeWcn7+S/Yv5YE7+nO9Xcn1eLJHl0dfugurPOQ9
IEvOn9L98Yua+WKxNgnT4p40AqO88HCRW3bcwu8//3zwxuvX5nZPIx/MdZTo
WvCdlA/ub1bLckl1x7yNzx/T/xuOUf+fts33tXSDegp1rDQxS1S2O1TDea7w
YusQjlY4FtNL/pz2sQyu/x/Szy19
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{228, 234, 227, 2125, 230}}], 
           PolygonBox[CompressedData["
1:eJwNzLkvA2Acx+GXOLq6VnR0rY6xBgatNp0ciaE1MKiISFArNerA0EHEZhDK
6hgZGDqI2DqQSIQ6/gHP8OTzJr9v3mhmOZ2rDyHUMcc7b3ySjISQ4su7xpnR
OhP00EID327nukGcXlpp5Iptphikkx/7sm6SoI82mrhmh2mG6OLX/kLzTNJP
O3fskSVGMzcUmGGYbh7YZ4Ex/vx3qVskGaBCiSU6uKfIPKM8c8QqEW7ZZZYR
njhkhSiPHLBIlRPGeeGYD9Z45ZR/oDsvqA==
            "]], 
           PolygonBox[CompressedData["
1:eJwl0TlIF1AcwPG/NpmlbZbZ4JG5lamLRzooZJtnS2k6JKikiOjmvXiDBioY
IooNRluWtpRHQ0IJioOig+FgDbWU5v0Bhw/fB+/33htedHlN/ovgQCAQxACX
LH7pHuPWP6nnB28I4ROdPGGb16Syzhh1xPCNISp5yAYTNPDX/e+0iTzussoo
NUTwlUGek81lPtPFU9KI5Z+7ZrSZfO5xnVDm6aaEdOLYN/9eWyggkRtcYYEe
SsngNgfmP2grhdwnkqss0sszHhDPd4apIpf/zs9qG0VsMUUSa7xij1p2mOY3
N1nmJRXkEMYSfZSRyR0OvTGn7RSTTBThHNk75oRTzgIXHx5EMB/p4DEp3OIa
X+innCwSWGGEah6xySSN7PKWP5wDGdJLmA==
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{228, 229, 236, 2129, 2126, 231}}], 
           
           PolygonBox[{{232, 233, 472, 323, 493, 424, 479, 357, 487, 402, 457,
             278, 494, 426, 481, 366, 488, 411, 466, 302, 492, 421, 476, 336, 
            486, 381, 436, 
            244}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 190, 154, 121, 92, 67, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 191, 155, 122, 93, 
           68, 52, 23, 192, 156, 123, 94, 69, 53, 24, 193, 157, 124, 95, 70, 
           54, 25, 194, 158, 125, 96, 71, 55, 206, 170, 137, 108, 83, 26, 195,
            159, 126, 97, 72, 56, 207, 171, 138, 109, 84, 27, 196, 160, 127, 
           98, 73, 57, 208, 172, 139, 110, 85, 28, 197, 161, 128, 99, 74, 58, 
           209, 173, 140, 111, 86, 29, 198, 162, 129, 100, 75, 59, 210, 174, 
           141, 112, 87, 30, 199, 163, 130, 101, 76, 60, 31, 200, 164, 131, 
           102, 77, 61, 32, 33, 34, 35, 36, 37, 201, 165, 132, 103, 78, 62, 
           38, 202, 166, 133, 104, 79, 63, 211, 175, 142, 113, 88, 39, 203, 
           167, 134, 105, 80, 215, 179, 146, 117, 64, 212, 176, 143, 114, 220,
            184, 151, 89, 217, 181, 148, 119, 221, 185, 152, 40, 204, 168, 
           135, 223, 187, 106, 219, 183, 150, 224, 188, 81, 216, 180, 147, 
           118, 65, 213, 177, 144, 115, 90, 41, 42, 43, 44, 45, 46, 47, 48, 
           49, 205, 169, 136, 107, 82, 66, 214, 178, 145, 116, 91, 218, 182, 
           149, 120, 222, 186, 153, 225, 189, 226, 50}]}, 
         Annotation[#, "Charting`Private`Tag$1107329#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[{2125, 230, 228, 231, 2126}], 
          LineBox[{2129, 236, 229, 237, 2127}], 
          LineBox[CompressedData["
1:eJwl0WWYF1UUB+D/kkt3SC+lpIRBd6cuIA26NIpLg3SD0t2N0tLdIV1KqrQo
vbuAdL778OGd3525Z86Z505IWHjo90GBQCCOyxfBgUCEdSSr3PekOrlIRiyi
7K2WP1CD3CQnNtsZSgM+IxMP1K+RvahJHlIEvZ+3g2E05HMy81D9WtmbWuQl
JQcZRwvKEpedDKcRRcjCMSbTlko80m+d7ENt8vE7M+hAKg4xnpaU4zzz6EIw
uxhBY4pyljl0IoTjTKEdV1lKZf5kAXfpxg1Wcss3/c966778F332XORn7pGf
P5gZXU/0T7rGMiJIzWEmcJNWXGEJ9ynPBW6bM1/eoSv/sIJ47OZHmnCZxRTj
HHPpTFZOMJX2VOEvFtKdx/pvkP34ko85zSzCScMRJtKaCsRnDz/RlOJk44le
G2V/QilAWhKwl5E0owTZeap+kxxAHQryAQnZxyiaU5IcPFO/WQ6kLoVIRyL2
M5qvKUVOTjKNb6nKc+9vkYOoxyV+oTBnmB193nTkOsuJJD1HmUQbKpKY3xjD
N5TmQ16YsVUO5is+IQNJeGnvFa95w1sCngcRg20MoT6fkpGkHGAsYZThI04x
ne+oxt8sogf/8itRxOQdTgiHIg==
           "]]}, Annotation[#, "Charting`Private`Tag$1107329#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVzNVSUAEABNALdiHYASgIit3dLWWggh3YBbYodmGgYnd3d3d9gh8iigHW
8eHM7MzObkxmdlpWSBAEn/gsXAgNgk1MJ5F2NKJQ94WvFPGN7/zgJ8WU8Ivf
/OHv/2PbEEIpRWnKUJaLbGYGSbQnjnJcYgszSaYD8ZTnMluZRQodaUwFrpDH
bFLpRBPus48ljKEvFbnKNuYwlM4k8ID9LGUs/ajENbYzl2F0oSkPOcAyxtGf
ylxnB/MYTlea8YiDLGc8A6jCDXYynxF0ozmPOcQKJjCQMG6SzwLS6E4LqnKL
XWQxkh60JJwIqlGdGtSkFrfZTTaj6EkrnnCYHCYyiNrcYQ8LGU0vnnOMXKbQ
mqccYSWTeMNp1jOYl5xgDZm85QwbqMNdCljEe86RzmtOsY7evOA4q5lKG+pS
j/pEEkU0DWhIDPfYy2Iy6ENbnnGUVUxmCK84yVqm8Y6zbOQD5/lILP8A1zVe
2w==
           "]]}, Annotation[#, "Charting`Private`Tag$1107329#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1mW4VVUUheFDC0orjYSkokiDojSIIG0hICKd0t2NkooKWKRgEyJKiNKh
dJg00qiUSvnOH98zxphr7nPu3nuteU++Vt0adU2SSCQ2JE0kNuKH5InEw1ia
LJF4Fjnwj/pFtUbYJ/dHRWxS/1GtBJbJzyEn/lX/U60x9ssD8Bg2q+9QK4kv
5eeRC2lSJBJd1P7k38B/+v6Sm+CAPBCl9LwpZ8fjcZ08lE+KBfIW1+zkS2G5
3BRF9bwmp0du+U65K/8X35hfzk+Pv43/gL8PrfgN9LrP+5s+jS5qB/XVp0vk
QXxp/i2+N81BW9Dv6ChayXpuOkzuTpPRZ+k3dCj90Hr1UHkAvZ+2pVvoWLrV
d+/iS6Oj/JX+J+mn8gv8/fxEPgPule+Su/F/82/icXm2XAA3fNYl+gx+sjYY
Zay/LedEZfleeTifHAvlba7ZzZfBCrkZ8iCtvlfULvFv4aa+y3Fv+FkegirY
rr5HrSy+lpsjL27F/sJe9XL4Rq0F8uF27KXYH/Eesc96eay09iLyI4Eras/h
F34oqmKX/v1qFbBKbon7kARX1Z7Hr/wwVMNu/QfUHsFq+SUUQDr3113tMv82
kuKa3BS/8cNRVs8MOReqx3ORR/ApsEje47MP8o9ijdwKD+iZJGdEQTm93IO/
wjeJ98vP4Cvxc6IHL/MbabI4f/He0VXtd7kBXSqP4MvxM/k+NDd9kX5PR9Ma
8dzpSLkHTRnPjq6kw+hH1mvQhfJA+gBtF/uPjqN73ctPfEV0kr/VX4d+Fn8f
X4yfzGeKv49fQwupZ+B78lf5magsz4212GMxH2gzHOJHorz1WbGXUTP2gzyK
T4WP5X3+jp/5x7BWbo3CyKivl9o1fhZSxOyQm+MwPwq1sN/1v8TcwHdyGxRB
Shyw9qt6JXwvt425gVQ4GPcf3x3XRx9+w++hcXawTl+7OJO4A4diXb0K1svt
4/0jNQ5bO6ReFRvkDvEMY/7heswQHOFH4wkc0X9YrRo2yh3xYMwx3Ih3jaP8
GNTGUf1HYl9ik9wJD8V8iLOq1hLH+LExT3BM/1G1Gtgsd0bxOOdxVtVewnF+
XLx3HNd/LN4Rtshd8DAyeQ+91f7h34lzFOc5ZilO8ONRFydcf1ytFrbKXVEC
mV3fR+1f/t04H3HW1V5WO8lPwFMxA9RGq92BT+STPu8E/wS2yd3i+eiZImdG
SfluuS//H/9e7M2YC2qt1f7gX0UF+R05D+rF7JDH8KnxqVxTXsQXi2t850la
G9vjvqx9zr8Sz5qfyt+NUvI9cj/+Ov80v4J/n6/Cz+MLozW/KWZDzBu+DX+K
b8gv41/jH+Hf5fvSvPEe6TpaP+YWP5bvSdPErKOr6PA4p7H/45zLg+iDtD3d
RsfTU+7lD/5JdJZ/iOdMv5AHxyyM/UCnyb3oPXFuYw7E7KGlrWeh/eP+6Q35
Gfq1PCT+p8pV6Xy5Py1C29DNdAzNZD0ZbSt3o6flRvRLeSL/KP8e34/mi/1I
19MG1gry4/g70ZRfTT+Pc8N/zD+E0+7vFK2DH63Vs7Y4ZmHsW/51PgvKyFnl
AfxNfjaqyQvkorGX5ORyO/4MPwkV5ffl/GgoF5LH83fhC/mM7z7N18UOuWfs
dT1vyFlRVs4mD+Rv8XNir8YMU2uvdpafHM8jZp3aBLW0WCyf9dln+KewU+6F
csiub5DabX5u7L+YcWod1M7xU9AY51x/NvY6dsm9UR459A5WS2BevNuYg2od
5fP8VDTBedefi/2H3XIflNQ3Xc4W85dfS0fSCtZy0iFyEsyPZx2zUq2TfIGf
FucDF3zu+Xi/2CP3jb0fzwkX4zdl/C6M32XxmyZ+e+AKruJCvAfs1dsv9k48
D6T2PZ3VL/Kvx/5EEbVX1dJhScxO+RO+ODrw2+kEes3n/g9oFmR9
           "]]}, Annotation[#, "Charting`Private`Tag$1107329#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1nf8V2MYxvFvO9mUaEiEJCpbIZSRkYQKWSGzZCWKMouGIk1CaO/MpIkG
KirtIbNspYXyvv74vO7rus5zfud8n3H/TtVW9zRtW6RQKMwqWih0L1Eo9C5V
KGwuWSh0QCWsk32ESfJyGCQ7C0XQQ95HtoV+GJWxXvaFrDbe4a/GNNlk/iAM
5uujKHrKX5D9TT+CQ/GNbIGsDt7lr8F02dt8ebzMn42t9NVYSxfLe9LnYg59
F4qXLhRu43+he7n/RXor3RF7utaWr0L/ol6GJfQG4xbSJ+A9vpxxHehr6V3q
TThd9gN/pNqNv1Cd4b536INRi3/F9f3VB/j66jn8NvoanMyv46uqT/HnqcUz
b3SDPJufy1dQH+XvpkvQt9O/0tXp7vTzntlX3SbrhL3k9/CH0b+qTbCU/ta4
RfSJeJ9viZmyd/lDMIQ/N8/I3PMNMY9ug97GvcRvpx/NO+M72Sy8J6+AV2UN
UBJ95P1kO+jHcDi+l83OOqO/aztlnXEEfpB9nLXJb8mzMMCYf1zrgmr4UfYJ
3pdXxGuyhiiFfvKBsn/px7Mm+En2KT6QV8LrsvNQGv3lg2T/0U/gKGyUfSk7
CR/w12GObApfGUP587FH9kfWC/Ppthhg3GB+F/0kjsZv/OX4mt7k+ldZc0zh
D7JGD9PX07vVVviRnmvch/SheIM/wLgH6Qvo7dl/OEW2PnOqPs2fr5bJ+kZn
ffnP+IrqYzkL2Q9ZF/UOvp76G3+M2oO/SB3ouS/Tu+XHZT+qe6vtZGeq1fnf
6aZYlvMpe5z+2X2L8074UF5e/gh9A12gb6Z/oucZNzXnDG/yF2IH3RLf5Bxm
P+V34nO6HQa55xW+gKfzvjmjsiX8qZjK34j56UvZ73iLb5QzgMHyIbIieIav
kfMg+yy/Fa/Ki6Kr/Nisl+zzPDP35Tpew+sYijfijS+GbsbXzJykx+HNjJMX
x7OZQ/yR/oW3cr+8BJ6TH48/018wTVYVw2QXZc4xLM+SlUR3vhb+ytnFdNnh
GC67GPtgeJ4vK4UefG1szl7GDNkRGCG7BPtiRN5JVho9+TrYkv2JmbJqGCm7
FPthpHyYbA/04k/A37Kl/Gn4iL8Ji9MP+CMxim+c3odR8uGyMulV/InYKvs6
PRTT+FZYkv7AH4XR/GXZ/+kb6a34gr4Xo40bwe+J3vxJmWv6Ciynt7m+jK6L
6fzNWJr+wh+NMXwT7KSvwwb6wPQguhEW0Pelr9i/d/K/02PcP5LeC30y767d
m/OctVSvxIqcUeOW54xhBn+wcR3pW+gi9C30xvQb+tn0hvQ0tTrG5j3k7dM3
6H/SH7LXZd+mT6rP5IyoZdMPc3bTr/iFfCW1M99AvT99Tr2LP0P9I/tf7clf
rI713FH03jiefyF7Q72PP0s9JXuOvgor6SqyJ+gd7luRv4k6spmuHaJ24s9R
b+WLpmb+1U3phepzmVt1WXoyfQxq8+NcL6s+xJ+tNuX/Tf/I3uK/46upXfly
6el5fyyiK8u70A+kJ9N303/mLNO96HGeNVrdBy9mL2deMp85H2ozrMo+MG5l
+hxm8a1RzNjW6W/0ctfn0DUwnr8C/9E34vv0cmykL8GX9IMY754x/L7oy5+W
M0Y3x+qsreurMteYzd+GFbK5/LGYwF+ZfopN/KX4im6PCcaN5ffDS/zpmTPZ
ar4+PuZvx0rZPL4mJvJXZT9ionycbH/04+vm98jWZA3wCX8HVsnm88dhEt8s
a41J8vGyA9Cfr5d+QLfAGvowc/ck3VDdZeza7A186tqdWJ0enH2HyXxzVMBk
+QTZgRjAn4Hdea988+W7Kt8q+d7IN0D+r+d/c/5fYqJ7ymKge85EAWvTz2W1
8DbfAhXxM98Yi+mHUMZ7tuH/omvSz2ct1anu/x93l3iv
           "]]}, Annotation[#, "Charting`Private`Tag$1107329#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 0.7812499840561224}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8647431796843224`*^9, 3.8647432624128447`*^9}, {
  3.864751691955924*^9, 3.864751721573445*^9}, {3.8649283805046372`*^9, 
  3.864928401330862*^9}, {3.8649286042048674`*^9, 3.864928608417497*^9}, {
  3.864928913009414*^9, 3.8649289744894147`*^9}, {3.8649290307051277`*^9, 
  3.8649290733622513`*^9}},
 CellLabel->
  "Out[1142]=",ExpressionUUID->"e8ab4aa6-93de-40fa-93d4-7eef32bf3ef8"]
}, Open  ]]
},
WindowSize->{718.5, 351.},
WindowMargins->{{-5.25, Automatic}, {-5.25, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"be5d2567-85ed-447a-9628-cb1a0b7113d6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 254, 5, 51, "Text",ExpressionUUID->"224a2fd0-5a16-4642-88fc-61a70e68600f"],
Cell[CellGroupData[{
Cell[837, 29, 6446, 164, 501, "Input",ExpressionUUID->"a7c4ca20-0320-4220-83d7-a5fc3437d70b"],
Cell[7286, 195, 7555, 203, 176, "Output",ExpressionUUID->"c33e2f72-e4c3-43aa-9e20-1d77ae8deb92"],
Cell[14844, 400, 369, 7, 32, "Output",ExpressionUUID->"2aba5140-1801-4a6e-8946-d53f4b6ff6fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15250, 412, 178, 3, 28, "Input",ExpressionUUID->"0398a52c-b289-4835-ba74-41daec77e452"],
Cell[15431, 417, 207, 4, 32, "Output",ExpressionUUID->"749c82e3-64d6-4420-9efa-591d27603942"]
}, Open  ]],
Cell[15653, 424, 62230, 1534, 1813, "Code",ExpressionUUID->"c1f14a8d-6b3b-4fdb-865b-b5be5637e987"],
Cell[77886, 1960, 522, 9, 74, "Text",ExpressionUUID->"dc5bfc69-ba71-4c0a-a899-a16da01c8349"],
Cell[CellGroupData[{
Cell[78433, 1973, 10099, 290, 466, "Input",ExpressionUUID->"5e2d0932-2b2f-4ace-be1a-80112973358e"],
Cell[88535, 2265, 627, 12, 46, "Message",ExpressionUUID->"cd2185ee-fd12-4705-8511-17d3522a4b1e"],
Cell[89165, 2279, 80908, 1428, 206, "Output",ExpressionUUID->"270e8dc4-69e2-4cc0-a4c4-13ff7e619858"],
Cell[170076, 3709, 86141, 1515, 208, "Output",ExpressionUUID->"54c2384c-c479-44e1-b89b-b31a191f55e9"],
Cell[256220, 5226, 92848, 1624, 206, "Output",ExpressionUUID->"dced69a4-a021-44b8-82fa-7389e1d1f18b"]
}, Open  ]],
Cell[349083, 6853, 258, 5, 51, "Text",ExpressionUUID->"73fb2c33-247d-455d-a7d4-e35923108b5c"],
Cell[CellGroupData[{
Cell[349366, 6862, 7824, 220, 238, "Input",ExpressionUUID->"0bdf49aa-3cb3-4522-a441-0032566f22ad"],
Cell[357193, 7084, 625, 12, 46, "Message",ExpressionUUID->"d80f7c3a-cc7f-41a8-99ab-743e6b54b727"],
Cell[357821, 7098, 79910, 1412, 206, "Output",ExpressionUUID->"fb4d993e-04b2-453f-8f6c-221604221235"],
Cell[437734, 8512, 83362, 1466, 208, "Output",ExpressionUUID->"1e643ee1-38f8-43d8-bec3-8e60da0b64bb"],
Cell[521099, 9980, 90834, 1590, 206, "Output",ExpressionUUID->"19090bf7-dc80-48b0-8e68-29b737f0fef7"]
}, Open  ]],
Cell[611948, 11573, 257, 4, 51, "Text",ExpressionUUID->"30e7c68b-9250-4d9e-bf25-90bff9f1744c"],
Cell[CellGroupData[{
Cell[612230, 11581, 7812, 222, 238, "Input",ExpressionUUID->"8ee1208d-b3ac-419a-ab3d-c515866b0670"],
Cell[620045, 11805, 50966, 928, 206, "Output",ExpressionUUID->"ad38dfe2-91fb-48b5-b182-f160c085130f"],
Cell[671014, 12735, 54659, 989, 208, "Output",ExpressionUUID->"c26e64bc-7152-461c-8f6e-2b6ac6b31293"],
Cell[725676, 13726, 55334, 1001, 206, "Output",ExpressionUUID->"e8ab4aa6-93de-40fa-93d4-7eef32bf3ef8"]
}, Open  ]]
}
]
*)

