(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    956004,      19104]
NotebookOptionsPosition[    951512,      19019]
NotebookOutlinePosition[    951945,      19036]
CellTagsIndexPosition[    951902,      19033]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Speed test of simple LQR gains for random 8x8 linear system", \
"Subsection",
 CellChangeTimes->{{3.698811497715045*^9, 3.698811509022469*^9}, {
  3.69885144307857*^9, 3.698851462312389*^9}, {3.709636905485622*^9, 
  3.709636910921179*^9}, {3.715342867107555*^9, 3.715342872342836*^9}, {
  3.7153432690028687`*^9, 3.715343287448956*^9}, {3.716532618830523*^9, 
  3.7165326217793283`*^9}, {3.716570684194786*^9, 3.716570736464383*^9}, {
  3.716613642404841*^9, 3.716613649251136*^9}, {3.7166173099843607`*^9, 
  3.716617315405965*^9}, {3.7167170388199997`*^9, 3.7167170401560717`*^9}, {
  3.716725771532446*^9, 3.716725778338876*^9}, {3.717221319267695*^9, 
  3.717221332903965*^9}, {3.793502782741811*^9, 3.793502806661611*^9}, {
  3.866766574973732*^9, 
  3.8667665937327623`*^9}},ExpressionUUID->"a483e4f2-5e1f-420a-be37-\
4977d4659bc0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.867170074505018*^9},
 CellLabel->
  "In[1662]:=",ExpressionUUID->"544f5a79-f357-412e-a327-d0b03cb0e99c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"MatrixForm", "[", "a", "]"}]}]], "Input",
 CellChangeTimes->{{3.866756083468438*^9, 3.866756106137657*^9}, {
  3.866762068277253*^9, 3.866762106053295*^9}},
 CellLabel->
  "In[1664]:=",ExpressionUUID->"66e720fb-3235-46aa-8734-1d94c2c0ddeb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1.163941382109757`"}], 
      RowBox[{"-", "0.08067635703960224`"}], "1.2991064333266038`", 
      RowBox[{"-", "0.32560659067180664`"}], 
      RowBox[{"-", "1.5272072428318026`"}], 
      RowBox[{"-", "0.2992813827489657`"}], 
      RowBox[{"-", "1.2363231142314364`"}], "0.6803444457626028`"},
     {"0.2861961561270906`", "1.6268201918867504`", 
      RowBox[{"-", "0.3234875142965911`"}], "0.9665935188394178`", 
      "0.6739336587304923`", "1.6734502447826098`", 
      RowBox[{"-", "0.620883948681848`"}], 
      RowBox[{"-", "0.47120731501116003`"}]},
     {
      RowBox[{"-", "0.19113266636789625`"}], "0.22157431709888536`", 
      "0.13528622628299508`", 
      RowBox[{"-", "0.6337237349163044`"}], 
      RowBox[{"-", "0.5394057212796587`"}], 
      RowBox[{"-", "0.7667095227423486`"}], 
      RowBox[{"-", "1.4719794706676923`"}], "0.014410991229842442`"},
     {"0.177832175670268`", 
      RowBox[{"-", "1.6185514735652968`"}], "0.11306418172837493`", 
      "0.6917426775681434`", "0.3094312618006384`", "0.815495730017578`", 
      RowBox[{"-", "0.0711158472672363`"}], "1.3565971245078132`"},
     {"0.5795797121440487`", 
      RowBox[{"-", "0.5963365784161674`"}], 
      RowBox[{"-", "0.3390177806486635`"}], "0.6548341801382962`", 
      RowBox[{"-", "0.6088026839452131`"}], 
      RowBox[{"-", "0.8710715159031689`"}], "2.631146090889755`", 
      RowBox[{"-", "0.8207020929800073`"}]},
     {"0.15482748576976219`", "0.05396449917929935`", 
      RowBox[{"-", "0.4084797923064359`"}], 
      RowBox[{"-", "1.2907797000854795`"}], "1.5355178449562517`", 
      "1.266359753002499`", "1.7303540848377106`", 
      RowBox[{"-", "0.8040604039474025`"}]},
     {
      RowBox[{"-", "0.42752184071422966`"}], 
      RowBox[{"-", "0.2504503393845028`"}], 
      RowBox[{"-", "0.5059005467438347`"}], 
      RowBox[{"-", "0.32399601768947006`"}], "0.7204929720231171`", 
      "0.20763593142376055`", "0.6213997646325768`", 
      RowBox[{"-", "0.5005987693753123`"}]},
     {"1.1061743452613277`", "0.062420283012523115`", "0.2744927879297926`", 
      "1.5675680626205375`", "0.2836350347917278`", 
      RowBox[{"-", "0.6154097919819828`"}], "0.6122349114528519`", 
      "0.6028883337405354`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.866756096925725*^9, 3.8667561105611773`*^9}, {
   3.866762069612146*^9, 3.866762107144816*^9}, 3.8667622611572313`*^9, 
   3.866766605473816*^9, 3.8671700766423335`*^9},
 CellLabel->
  "Out[1664]//MatrixForm=",ExpressionUUID->"a9873fb1-121a-4ffc-ae48-\
d4dc2f1d3d3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "1"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"MatrixForm", "[", "b", "]"}]}]], "Input",
 CellChangeTimes->{{3.866762120419703*^9, 3.866762142037966*^9}, {
  3.8667661780079947`*^9, 3.866766179698882*^9}},
 CellLabel->
  "In[1665]:=",ExpressionUUID->"a8268c46-1d61-4d33-b79b-e951b5e06c1e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.7526076873850104`"},
     {"0.009373465403999066`"},
     {
      RowBox[{"-", "0.06741779327890915`"}]},
     {"0.81732762486567`"},
     {"0.7372706059509493`"},
     {
      RowBox[{"-", "1.067512362606947`"}]},
     {
      RowBox[{"-", "0.6103147675848485`"}]},
     {"0.9896764618935449`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.866762143036242*^9, 3.86676226127066*^9, 
  3.866766180719762*^9, 3.866766605495408*^9, 3.8671700782328253`*^9},
 CellLabel->
  "Out[1665]//MatrixForm=",ExpressionUUID->"fc21fb9b-157f-4226-8d28-\
704efd4c8023"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ssm", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866762168064604*^9, 3.8667621721187153`*^9}, {
  3.866766195168311*^9, 3.866766195920608*^9}, {3.866766235377571*^9, 
  3.866766235649294*^9}},
 CellLabel->
  "In[1666]:=",ExpressionUUID->"0ec750ec-45be-4566-afb9-fd81f9b3c91a"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", "1.163941382109757`"}], 
   RowBox[{"-", "0.08067635703960224`"}], "1.2991064333266038`", 
   RowBox[{"-", "0.32560659067180664`"}], 
   RowBox[{"-", "1.5272072428318026`"}], 
   RowBox[{"-", "0.2992813827489657`"}], 
   RowBox[{"-", "1.2363231142314364`"}], "0.6803444457626028`", 
   "0.7526076873850104`", "0.2861961561270906`", "1.6268201918867504`", 
   RowBox[{"-", "0.3234875142965911`"}], "0.9665935188394178`", 
   "0.6739336587304923`", "1.6734502447826098`", 
   RowBox[{"-", "0.620883948681848`"}], 
   RowBox[{"-", "0.47120731501116003`"}], "0.009373465403999066`", 
   RowBox[{"-", "0.19113266636789625`"}], "0.22157431709888536`", 
   "0.13528622628299508`", 
   RowBox[{"-", "0.6337237349163044`"}], 
   RowBox[{"-", "0.5394057212796587`"}], 
   RowBox[{"-", "0.7667095227423486`"}], 
   RowBox[{"-", "1.4719794706676923`"}], "0.014410991229842442`", 
   RowBox[{"-", "0.06741779327890915`"}], "0.177832175670268`", 
   RowBox[{"-", "1.6185514735652968`"}], "0.11306418172837493`", 
   "0.6917426775681434`", "0.3094312618006384`", "0.815495730017578`", 
   RowBox[{"-", "0.0711158472672363`"}], "1.3565971245078132`", 
   "0.81732762486567`", "0.5795797121440487`", 
   RowBox[{"-", "0.5963365784161674`"}], 
   RowBox[{"-", "0.3390177806486635`"}], "0.6548341801382962`", 
   RowBox[{"-", "0.6088026839452131`"}], 
   RowBox[{"-", "0.8710715159031689`"}], "2.631146090889755`", 
   RowBox[{"-", "0.8207020929800073`"}], "0.7372706059509493`", 
   "0.15482748576976219`", "0.05396449917929935`", 
   RowBox[{"-", "0.4084797923064359`"}], 
   RowBox[{"-", "1.2907797000854795`"}], "1.5355178449562517`", 
   "1.266359753002499`", "1.7303540848377106`", 
   RowBox[{"-", "0.8040604039474025`"}], 
   RowBox[{"-", "1.067512362606947`"}], 
   RowBox[{"-", "0.42752184071422966`"}], 
   RowBox[{"-", "0.2504503393845028`"}], 
   RowBox[{"-", "0.5059005467438347`"}], 
   RowBox[{"-", "0.32399601768947006`"}], "0.7204929720231171`", 
   "0.20763593142376055`", "0.6213997646325768`", 
   RowBox[{"-", "0.5005987693753123`"}], 
   RowBox[{"-", "0.6103147675848485`"}], "1.1061743452613277`", 
   "0.062420283012523115`", "0.2744927879297926`", "1.5675680626205375`", 
   "0.2836350347917278`", 
   RowBox[{"-", "0.6154097919819828`"}], "0.6122349114528519`", 
   "0.6028883337405354`", "0.9896764618935449`", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4, $CellContext`stname5, \
$CellContext`stname6, $CellContext`stname7, $CellContext`stname8}, {{
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, -8, 8, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5, #6, #7, #8, #9}, {#10, #11, #12, #13, \
#14, #15, #16, #17, #18}, {#19, #20, #21, #22, #23, #24, #25, #26, #27}, \
{#28, #29, #30, #31, #32, #33, #34, #35, #36}, {#37, #38, #39, #40, #41, #42, \
#43, #44, #45}, {#46, #47, #48, #49, #50, #51, #52, #53, #54}, {#55, #56, \
#57, #58, #59, #60, #61, #62, #63}, {#64, #65, #66, #67, #68, #69, #70, #71, \
#72}}, AllowedDimensions -> {9, 8}, 
        GridBoxDividers -> {
         "Rows" -> {False, False, False, False, False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {
           False, False, False, False, False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, DefaultBaseStyle -> 
        "SystemsModelGrid00"], ")"}], #73, 
     ButtonBox[
      GraphicsBox[{
        RectangleBox[{0, 0}, DefaultBaseStyle -> "SystemsModelSuperscript"], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", DefaultBaseStyle -> 
          "SystemsModelSuperscript"], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 17}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{19, 26}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{28, 35}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{37, 44}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{46, 53}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{55, 62}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{64, 71}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{18, 18}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{27, 27}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{36, 36}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{45, 45}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{54, 54}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{63, 63}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{72, 72}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#73}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{
  3.8667621729854937`*^9, 3.866762261308498*^9, {3.866766185442401*^9, 
   3.866766196535516*^9}, 3.866766236203589*^9, 3.866766605617592*^9, 
   3.8671700834481564`*^9},
 CellLabel->
  "Out[1666]=",ExpressionUUID->"6cdc8821-bcde-41db-9e16-4406da3e1ddd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"q", ",", "r"}], "}"}], "=", 
   RowBox[{"IdentityMatrix", "/@", 
    RowBox[{"{", 
     RowBox[{"8", ",", "1"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{"q", ",", "r"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.8667662608848963`*^9, 3.866766287992321*^9}},
 CellLabel->
  "In[1667]:=",ExpressionUUID->"919edb66-acca-487d-8a22-a289ccec74e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "1", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "1", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "1", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "1", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "1", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "1", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.8667662774321327`*^9, 3.866766288554679*^9}, 
   3.866766605651887*^9, 3.867170093395975*^9},
 CellLabel->
  "Out[1668]=",ExpressionUUID->"7bd011a2-c7e4-41ba-8d86-efbf2bc13bac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"q", ",", "r"}], "}"}], "=", 
   RowBox[{"IdentityMatrix", "/@", 
    RowBox[{"{", 
     RowBox[{"8", ",", "1"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{"LQRegulatorGains", "[", 
   RowBox[{
    RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"q", ",", "r"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.866766314791888*^9, 3.866766326326397*^9}, {
  3.8671702271142063`*^9, 3.8671702623169475`*^9}},
 CellLabel->
  "In[1685]:=",ExpressionUUID->"1e6b9c29-01cb-4bc1-9fbd-c6956be848b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00223512578125`", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "266.0613113620002`"}], ",", 
      RowBox[{"-", "273.88277343727714`"}], ",", 
      RowBox[{"-", "221.9709203253242`"}], ",", 
      RowBox[{"-", "319.8872977942847`"}], ",", "2.3126984558984987`", ",", 
      RowBox[{"-", "378.2607301214448`"}], ",", 
      RowBox[{"-", "284.7543577914057`"}], ",", 
      RowBox[{"-", "141.77474920089116`"}]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.866766299389471*^9, 3.8667663285170717`*^9}, 
   3.866766607381733*^9, 3.8671701058379955`*^9, 3.8671702306930604`*^9, {
   3.8671702650190816`*^9, 3.86717027130807*^9}},
 CellLabel->
  "Out[1688]=",ExpressionUUID->"3b53e33a-f751-4996-84f1-25bb1b576240"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptC]\[ScriptD]", "=", 
  RowBox[{"LQRegulatorGains", "[", 
   RowBox[{"ssm", ",", 
    RowBox[{"{", 
     RowBox[{"q", ",", "r"}], "}"}], ",", "\"\<Data\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866766418774474*^9, 3.8667664511971416`*^9}},
 CellLabel->
  "In[1670]:=",ExpressionUUID->"93c09c36-dcf5-4d23-9260-2bf6c64be14e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SystemsModelControllerData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                9.782113703694193, {0., 9.782113703694193}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             GraphicsBox[{
               GrayLevel[0.55], 
               LineBox[{{-0.2, -0.5}, {-0.6, -0.5}, {-0.6, 0.5}}], 
               LineBox[{{-1, 0.5}, {1., 0.5}}], {
                GrayLevel[1], 
                EdgeForm[
                 GrayLevel[0.55]], 
                StyleBox[
                 DiskBox[{-0.6, 0.5}, 0.15], StripOnInput -> False, 
                 Antialiasing -> True], 
                
                PolygonBox[{{-0.2, 0.7}, {0.6, 0.7}, {0.6, 0.3}, {-0.2, 
                 0.3}}]}, 
               LineBox[{{0.2, 0.5}, {0.2, -0.3}}], {
                RGBColor[0.97, 0.606, 0.081], 
                
                PolygonBox[{{-0.2, -0.3}, {0.6, -0.3}, {
                 0.6, -0.7}, {-0.2, -0.7}}]}, 
               StyleBox[
                LineBox[{{0., 0.05}, {0.2, -0.25}, {0.4, 0.05}}], 
                StripOnInput -> False, Antialiasing -> True]}, AspectRatio -> 
              1, Background -> GrayLevel[0.93], ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, PlotRange -> {{-1, 1}, {-1, 1}}], 
             StripOnInput -> False, Antialiasing -> True], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Design: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"linear quadratic regulator \"", "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"\[RightGuillemet]\"", "paclet:ref/LQRegulatorGains"}, 
                   "HyperlinkPaclet"], "SummaryItemAnnotation"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Feedback inputs count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             GraphicsBox[{
               GrayLevel[0.55], 
               LineBox[{{-0.2, -0.5}, {-0.6, -0.5}, {-0.6, 0.5}}], 
               LineBox[{{-1, 0.5}, {1., 0.5}}], {
                GrayLevel[1], 
                EdgeForm[
                 GrayLevel[0.55]], 
                StyleBox[
                 DiskBox[{-0.6, 0.5}, 0.15], StripOnInput -> False, 
                 Antialiasing -> True], 
                
                PolygonBox[{{-0.2, 0.7}, {0.6, 0.7}, {0.6, 0.3}, {-0.2, 
                 0.3}}]}, 
               LineBox[{{0.2, 0.5}, {0.2, -0.3}}], {
                RGBColor[0.97, 0.606, 0.081], 
                
                PolygonBox[{{-0.2, -0.3}, {0.6, -0.3}, {
                 0.6, -0.7}, {-0.2, -0.7}}]}, 
               StyleBox[
                LineBox[{{0., 0.05}, {0.2, -0.25}, {0.4, 0.05}}], 
                StripOnInput -> False, Antialiasing -> True]}, AspectRatio -> 
              1, Background -> GrayLevel[0.93], ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, PlotRange -> {{-1, 1}, {-1, 1}}], 
             StripOnInput -> False, Antialiasing -> True], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Design: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"linear quadratic regulator \"", "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"\[RightGuillemet]\"", "paclet:ref/LQRegulatorGains"}, 
                   "HyperlinkPaclet"], "SummaryItemAnnotation"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Feedback inputs count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"States count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["8", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Inputs count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SystemsModelControllerData[<|
   "Design" -> "linear quadratic regulator", "InputModel" -> 
    StateSpaceModel[{CompressedData["
1:eJwBEQLu/SFib1JlAgAAAAgAAAAIAAAAivWp/4Cf8r+cpgurNKe0v1OT0tMj
yfQ/uAmTBr3W1L+t1KLccG/4v4NXzRltJ9O/NJvuvvrH87+ZGRK3YcXlPwai
s64JUdI/QAQKnHQH+j8/XaT5BLTUv4Ub/odV7u4/kHn9Ud2Q5T8rMY3Dc8b6
P2plxgNI3uO/QfjmuUIo3r+Xqp8DCXfIvyJgyRaMXMw/Sgu+Hg9RwT+XQ4X/
dkfkv1F8hcnPQuG/mLm2aOKI6L8Ha25YOo33v/TqR4CCg40//BRXaTTDxj9e
sN06luX5v7ZT3zLG8bw/gOIsisEi5j/mzHLHuM3TPyaAToCKGOo/6Hc97qU0
sr86vbkvn7T1P1quosDqi+I/YJe2cjAV4782gSmid7LVvw7nf89m9OQ/918o
xE97478JAClf0d/rvzv1WlKWDAVAxnMjCTFD6r+elvMVY9HDPwB/PR48oas/
6RxCbYgk2r8+U2OdCKf0vxov6Ch7kfg/qNzBcQJD9D8xDM7Dh6/7P/nNXuLc
uum/pV8MkYRc2780bTvcYAfQv6Bi6VdWMOC/OKwAy1m81L/HyfpGRw7nPy9D
eG/Qk8o/NtlawoHi4z9jUNy15wTgv1Ylyd7jsvE/AK1KJI31rz9aXckySpHR
Pz9Zsz/CFPk/7ImbjxMn0j/IbEbgb7Hjv0EaRattl+M/7caRedxK4z9xrRRF

       "], {{0.7526076873850104}, {
       0.009373465403999066}, {-0.06741779327890915}, {0.81732762486567}, {
       0.7372706059509493}, {-1.067512362606947}, {-0.6103147675848485}, {
       0.9896764618935449}}}], "InputLabels" -> {None}, 
    "OutputLabels" -> {None, None, None, None, None, None, None, None}, 
    "StateLabels" -> {None, None, None, None, None, None, None, None}, 
    "FeedbackInputs" -> {1}, "TrackedOutputs" -> {}, "LinearizedModel" -> 
    StateSpaceModel[{CompressedData["
1:eJwBEQLu/SFib1JlAgAAAAgAAAAIAAAAivWp/4Cf8r+cpgurNKe0v1OT0tMj
yfQ/uAmTBr3W1L+t1KLccG/4v4NXzRltJ9O/NJvuvvrH87+ZGRK3YcXlPwai
s64JUdI/QAQKnHQH+j8/XaT5BLTUv4Ub/odV7u4/kHn9Ud2Q5T8rMY3Dc8b6
P2plxgNI3uO/QfjmuUIo3r+Xqp8DCXfIvyJgyRaMXMw/Sgu+Hg9RwT+XQ4X/
dkfkv1F8hcnPQuG/mLm2aOKI6L8Ha25YOo33v/TqR4CCg40//BRXaTTDxj9e
sN06luX5v7ZT3zLG8bw/gOIsisEi5j/mzHLHuM3TPyaAToCKGOo/6Hc97qU0
sr86vbkvn7T1P1quosDqi+I/YJe2cjAV4782gSmid7LVvw7nf89m9OQ/918o
xE97478JAClf0d/rvzv1WlKWDAVAxnMjCTFD6r+elvMVY9HDPwB/PR48oas/
6RxCbYgk2r8+U2OdCKf0vxov6Ch7kfg/qNzBcQJD9D8xDM7Dh6/7P/nNXuLc
uum/pV8MkYRc2780bTvcYAfQv6Bi6VdWMOC/OKwAy1m81L/HyfpGRw7nPy9D
eG/Qk8o/NtlawoHi4z9jUNy15wTgv1Ylyd7jsvE/AK1KJI31rz9aXckySpHR
Pz9Zsz/CFPk/7ImbjxMn0j/IbEbgb7Hjv0EaRattl+M/7caRedxK4z9xrRRF

       "], {{0.7526076873850104}, {
       0.009373465403999066}, {-0.06741779327890915}, {0.81732762486567}, {
       0.7372706059509493}, {-1.067512362606947}, {-0.6103147675848485}, {
       0.9896764618935449}}, {{1, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 
       0}, {0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 1,
        0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 
       0, 0, 0, 0, 0, 1}}, {{0}, {0}, {0}, {0}, {0}, {0}, {0}, {0}}}, {{
        Subscript[\[FormalX], 1], 0}, {
        Subscript[\[FormalX], 2], 0}, {
        Subscript[\[FormalX], 3], 0}, {
        Subscript[\[FormalX], 4], 0}, {
        Subscript[\[FormalX], 5], 0}, {
        Subscript[\[FormalX], 6], 0}, {
        Subscript[\[FormalX], 7], 0}, {
        Subscript[\[FormalX], 8], 0}}, {
       Subscript[\[FormalU], 1]}, {
       Subscript[\[FormalY], 1], 
       Subscript[\[FormalY], 2], 
       Subscript[\[FormalY], 3], 
       Subscript[\[FormalY], 4], 
       Subscript[\[FormalY], 5], 
       Subscript[\[FormalY], 6], 
       Subscript[\[FormalY], 7], 
       Subscript[\[FormalY], 8]}], "DesignModel" -> 
    StateSpaceModel[{CompressedData["
1:eJwBEQLu/SFib1JlAgAAAAgAAAAIAAAAivWp/4Cf8r+cpgurNKe0v1OT0tMj
yfQ/uAmTBr3W1L+t1KLccG/4v4NXzRltJ9O/NJvuvvrH87+ZGRK3YcXlPwai
s64JUdI/QAQKnHQH+j8/XaT5BLTUv4Ub/odV7u4/kHn9Ud2Q5T8rMY3Dc8b6
P2plxgNI3uO/QfjmuUIo3r+Xqp8DCXfIvyJgyRaMXMw/Sgu+Hg9RwT+XQ4X/
dkfkv1F8hcnPQuG/mLm2aOKI6L8Ha25YOo33v/TqR4CCg40//BRXaTTDxj9e
sN06luX5v7ZT3zLG8bw/gOIsisEi5j/mzHLHuM3TPyaAToCKGOo/6Hc97qU0
sr86vbkvn7T1P1quosDqi+I/YJe2cjAV4782gSmid7LVvw7nf89m9OQ/918o
xE97478JAClf0d/rvzv1WlKWDAVAxnMjCTFD6r+elvMVY9HDPwB/PR48oas/
6RxCbYgk2r8+U2OdCKf0vxov6Ch7kfg/qNzBcQJD9D8xDM7Dh6/7P/nNXuLc
uum/pV8MkYRc2780bTvcYAfQv6Bi6VdWMOC/OKwAy1m81L/HyfpGRw7nPy9D
eG/Qk8o/NtlawoHi4z9jUNy15wTgv1Ylyd7jsvE/AK1KJI31rz9aXckySpHR
Pz9Zsz/CFPk/7ImbjxMn0j/IbEbgb7Hjv0EaRattl+M/7caRedxK4z9xrRRF

       "], {{0.7526076873850104}, {
       0.009373465403999066}, {-0.06741779327890915}, {0.81732762486567}, {
       0.7372706059509493}, {-1.067512362606947}, {-0.6103147675848485}, {
       0.9896764618935449}}}, 
      SystemsModelLabels -> {{None}, {
        None, None, None, None, None, None, None, None}, {
        None, None, None, None, None, None, None, None}}], 
    "FeedbackGains" -> {{-7.325872832164196, -39.20502521374002, \
-7.063456732230147, 
     0.5129405698020504, -3.6310681622997683`, -31.279506187039523`, 
     28.07801722008309, 5.503806294056444}}, "FeedbackGainsModel" -> 
    StateSpaceModel[{{}, {}, {}, {{-7.325872832164196, -39.20502521374002, \
-7.063456732230147, 
       0.5129405698020504, -3.6310681622997683`, -31.279506187039523`, 
       28.07801722008309, 5.503806294056444}}}, SamplingPeriod -> None], 
    "SamplingPeriod" -> None, "StatesCount" -> 8, "InputsCount" -> 1, 
    "OutputsCount" -> 8, 
    "Gains" -> {{-7.325872832164196, -39.20502521374002, -7.063456732230147, 
     0.5129405698020504, -3.6310681622997683`, -31.279506187039523`, 
     28.07801722008309, 5.503806294056444}}, "PropertyFunction" -> 
    Control`SMCD`sfGainsProperty, "SummaryItemsFunction" -> 
    Control`SMCD`sfGainsSummaryItems, "Symbol" -> LQRegulatorGains, "Horizon" -> 
    DirectedInfinity[1]|>, {
   "FeedbackGains", "ClosedLoopSystem", "ClosedLoopPoles", "OpenLoopPoles", 
    "FeedbackGainsModel", "FeedbackInputs", "InputsCount", "OutputsCount", 
    "SamplingPeriod", "StatesCount", "ControllerModel", "Design", 
    "InputModel", "DesignModel", "TrackedOutputs", "OutputsCount"}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.86676642475305*^9, 3.866766452047947*^9}, 
   3.8667666075956297`*^9, 3.8671701354795165`*^9},
 CellLabel->
  "Out[1670]=",ExpressionUUID->"eef6edab-a4a6-48ca-aca5-8ce6f12e55ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Design LQR feedback by Linearizing the system", "Subsection",
 CellChangeTimes->{{3.8671701990301886`*^9, 
  3.8671702092299275`*^9}},ExpressionUUID->"496b2a6d-cbed-4778-b7d6-\
6e26e43a4e4f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"xState", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", 
     RowBox[{"x2dot", "=", 
      FractionBox[
       RowBox[{"u", "+", 
        RowBox[{"A", " ", 
         SuperscriptBox["\[Theta]dot", "2"], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"A", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"\[Theta]2dot", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"u", "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["\[Theta]dot", "2"], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{"A", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}]]}], ";", 
     RowBox[{"fx", "=", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", 
     RowBox[{"L", "=", 
      FractionBox[
       SuperscriptBox["u", "2"], "2"]}], ";", 
     RowBox[{"Af", "=", 
      TemplateBox[{"fx", "xState"},
       "Grad"]}], ";", 
     RowBox[{"Bf", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", "u"], "fx"}]}], ";", 
     RowBox[{"Q", "=", 
      TemplateBox[{
        TemplateBox[{"L", "xState"}, "Grad", SyntaxForm -> Del], "xState"},
       "Grad"]}], ";", 
     RowBox[{"Mf", "=", 
      TemplateBox[{
        RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"u"}]], "L"}], "xState"},
       "Grad"]}], ";", 
     RowBox[{"R", "=", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]], "L"}]}], ";", 
     RowBox[{"S0", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "4", "]"}], "+", 
        RowBox[{
         RowBox[{"Transpose", "[", "Af", "]"}], ".", 
         RowBox[{"S", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"S", "[", "t", "]"}], ".", "Af"}], "-", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", "Bf", "]"}], ".", 
           RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "\[Rule]", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"xdot", "\[Rule]", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"\[Theta]dot", "\[Rule]", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}], ",", 
         RowBox[{"u", "\[Rule]", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", "-", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     RowBox[{"sol2", "=", 
      RowBox[{"S", "/.", "\[VeryThinSpace]", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["S", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "\[Equal]", "S0"}]}], "}"}], ",", 
         "S", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}]}], ";", 
     RowBox[{"S", "=", 
      RowBox[{
      "sol2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateGains", "[", 
    RowBox[{
    "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
     "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",",
        "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
       "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xState", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2dot", " ", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"u", "+", 
          RowBox[{"A", " ", 
           RowBox[{"\[Theta]dot", "^", "2"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"A", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2dot", "=", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"A", " ", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"A", " ", 
              RowBox[{"\[Theta]dot", "^", "2"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"fx", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Bf", " ", "=", " ", 
       RowBox[{"D", "[", 
        RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
      RowBox[{"(*", 
       RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"K", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bf", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
        " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "->", " ", 
           RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"xdot", " ", "->", " ", 
           RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]", " ", "->", 
           RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"\[Theta]dot", " ", "->", " ", 
           RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
          RowBox[{"u", " ", "->", " ", 
           RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{"ICs_", ",", "systemData_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "time1", ",", 
       "time2", ",", "order", ",", "maxIter", ",", "maxError", ",", "uMax", 
       ",", "maxCount", ",", "initGuess", ",", "maxJ", ",", "frootNew", ",", 
       "errorNew", ",", "InitGuess", ",", "J", ",", "S", ",", "K", ",", 
       "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", ",", "f", 
       ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
       "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
       "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
       ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
       "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
       ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
       ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
         "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
         "initGuess", ",", "maxJ"}], "}"}], " ", "=", " ", "systemData"}], 
      ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", "\n", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\n", "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";", 
      "\n", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errorNew", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
            RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                " ", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
            "\n", 
            RowBox[{"J", " ", "=", " ", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
            ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";", "\n", "\n", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}]}], "\n", 
       "\n", "]"}], ";", "\n", "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "time_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], 
      ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulumTimed", "[", 
    RowBox[{"ICs_", ",", "systemData_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "time1", ",", 
       "time2", ",", "order", ",", "maxIter", ",", "maxError", ",", "uMax", 
       ",", "maxCount", ",", "initGuess", ",", "maxJ", ",", "frootNew", ",", 
       "errorNew", ",", "InitGuess", ",", "J", ",", "S", ",", "K", ",", 
       "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", ",", "f", 
       ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
       "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
       "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
       ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", 
       "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
       ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
       ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
         "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
         "initGuess", ",", "maxJ"}], "}"}], " ", "=", " ", "systemData"}], 
      ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", "\n", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\n", "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time1", ",", "froot"}], "}"}], "=", 
       RowBox[{"Timing", "[", 
        RowBox[{"FindRoot", "[", 
         RowBox[{"eqns", ",", "sv", ",", 
          RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";", 
      "\n", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errorNew", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
            RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                " ", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
            "\n", 
            RowBox[{"J", " ", "=", " ", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
            ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";", "\n", "\n", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}]}], "\n", 
       "\n", "]"}], ";", "\n", "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time2", ",", "S"}], "}"}], " ", "=", " ", 
       RowBox[{"Timing", "[", 
        RowBox[{"CalculateSMatrix", "[", 
         RowBox[{
         "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
          "uff", ",", "\[Tau]", ",", "A"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "time_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "time", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], 
      ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K", ",", 
        "time1", ",", "time2"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", 
     ",", "K_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"testWithFBClipped", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Kappa]1", ",", "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4"}], 
       "}"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.999999999999936`"}], ",", 
        RowBox[{"-", "3.7234851629978962`"}], ",", "7.432170879533125`", ",", 
        "7.229404929229439`"}], "}"}]}], ";", "\[IndentingNewLine]", "\n", 
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", "\n", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", "t", "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"K", "[", "t", "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", "\[IndentingNewLine]", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J"}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Energy", "[", 
     RowBox[{"{", 
      RowBox[{
      "x1_", ",", "x2_", ",", "\[Theta]1_", ",", "\[Theta]2_", ",", "A_"}], 
      "}"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"x2", "^", "2"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", "A", "*", 
      RowBox[{"\[Theta]2", "^", "2"}]}], " ", "+", " ", 
     RowBox[{"A", "*", 
      RowBox[{"Cos", "[", "\[Theta]1", "]"}], "*", "x2", "*", "\[Theta]2"}], 
     " ", "-", " ", 
     RowBox[{"A", "*", 
      RowBox[{"Cos", "[", "\[Theta]1", "]"}]}]}]}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulumLQR", "[", 
    RowBox[{"ICs_", ",", "systemData_", ",", "nFeedback_"}], "]"}], ":=", 
   "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "time1", ",", 
       "time2", ",", "order", ",", "maxIter", ",", "maxError", ",", "uMax", 
       ",", "maxCount", ",", "initGuess", ",", "maxJ", ",", "frootNew", ",", 
       "errorNew", ",", "InitGuess", ",", "J", ",", "S", ",", "K", ",", 
       "count", ",", "error", ",", "x", ",", "dist", ",", "xdot", ",", "f", 
       ",", "\[Theta]", ",", "\[Theta]dot", ",", "\[Lambda]1", ",", 
       "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", ",", 
       "\[CapitalDelta]t", ",", "bcs", ",", "eqns", ",", "sv", ",", "froot", 
       ",", "xff", ",", "xdotff", ",", "xff0", ",", "xdotff0", ",", "\n", 
       "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", "\[Theta]ff", 
       ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", ",", 
       "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "i", 
       ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     "\n", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
         "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
         "initGuess", ",", "maxJ"}], "}"}], " ", "=", " ", "systemData"}], 
      ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", "\n", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{"InitGuess", " ", "=", " ", "initGuess"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\n", "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "n"], ",", 
                SubscriptBox["xdot", "n"], ",", 
                SubscriptBox["\[Theta]", "n"], ",", 
                SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SubscriptBox["x", "0"], ",", 
                SubscriptBox["xdot", "0"], ",", 
                SubscriptBox["\[Theta]", "0"], ",", 
                SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
              "ICs"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "i"], ",", 
                   SubscriptBox["xdot", "i"], ",", 
                   SubscriptBox["\[Theta]", "i"], ",", 
                   SubscriptBox["\[Theta]dot", "i"], ",", 
                   SubscriptBox["\[Lambda]1", "i"], ",", 
                   SubscriptBox["\[Lambda]2", "i"], ",", 
                   SubscriptBox["\[Lambda]3", "i"], ",", 
                   SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
           "]"}], "/.", "froot"}], ",", "\"\<Frobenius\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"count", " ", "=", " ", "0"}], ";", "\n", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Error First Guess = \>\"", ",", "error"}], "]"}], ";", 
      "\n", "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"error", " ", ">", " ", "maxError"}], ")"}], " ", "||", 
           " ", 
           RowBox[{"(", 
            RowBox[{"J", " ", ">", " ", "maxJ"}], ")"}]}], ")"}], " ", "&&", 
         " ", 
         RowBox[{"count", " ", "<=", " ", "maxCount"}]}], " ", ",", "\n", 
        RowBox[{
         RowBox[{"InitGuess", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          StyleBox["xGuess",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox["=",
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox["Table",
            FontWeight->"Plain"], 
           StyleBox["[",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{
             StyleBox["If",
              FontWeight->"Plain"], 
             StyleBox["[",
              FontWeight->"Plain"], 
             RowBox[{
              StyleBox[
               RowBox[{"i", " ", "!=", " ", 
                RowBox[{"-", "1"}]}],
               FontWeight->"Plain"], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               StyleBox[
                SubscriptBox["xGuess", 
                 RowBox[{"i", "+", "1"}]],
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["=",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               RowBox[{
                SubscriptBox[
                 StyleBox["xGuess",
                  FontWeight->"Plain"], "i"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["+",
                 FontWeight->"Plain"], 
                StyleBox[
                 RowBox[{"\[CapitalDelta]t", "*", 
                  RowBox[{"f", "[", 
                   SubscriptBox["xGuess", "i"], "]"}]}],
                 FontWeight->"Plain"]}]}], 
              StyleBox[",",
               FontWeight->"Plain"], 
              RowBox[{
               SubscriptBox[
                StyleBox["xGuess",
                 FontWeight->"Plain"], "0"], " ", "=", " ", 
               RowBox[{"{", 
                StyleBox[
                 RowBox[{
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"ICs", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"InitGuess", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}],
                 FontWeight->"Plain"], 
                StyleBox["}",
                 FontWeight->"Plain"]}]}]}], 
             StyleBox["]",
              FontWeight->"Plain"]}], 
            StyleBox[",",
             FontWeight->"Plain"], 
            StyleBox[
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"n", "-", "1"}]}], "}"}],
             FontWeight->"Plain"]}], 
           StyleBox["]",
            FontWeight->"Plain"]}]}], 
         StyleBox[";",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sv", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"xGuess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"frootNew", "=", 
          RowBox[{"FindRoot", "[", 
           RowBox[{"eqns", ",", "sv", ",", 
            RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"errorNew", " ", "=", " ", 
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], "/.", "frootNew"}], ",", "\"\<Frobenius\>\""}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"errorNew", " ", "<=", " ", "error"}], ",", 
           RowBox[{
            RowBox[{"froot", " ", "=", " ", "frootNew"}], ";", 
            RowBox[{"error", " ", "=", " ", "errorNew"}], ";", "\n", 
            RowBox[{"uff0", "=", 
             RowBox[{"ListInterpolation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"A", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                    "2"}]}]}], ")"}]}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                    RowBox[{"Cos", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", 
                " ", "froot"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
               RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
            "\n", 
            RowBox[{"J", " ", "=", " ", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], 
            ";"}], "\n", ",", "_"}], "]"}], ";", "\n", 
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"count", "+", "1"}]}], ";", "\n", "\n", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Count Shooting= \>\"", ",", "count", ",", 
           "\"\<    Error New = \>\"", ",", "errorNew", ",", 
           "\"\<    Error Min = \>\"", ",", "error"}], "]"}], ";"}]}], "\n", 
       "\n", "]"}], ";", "\n", "\n", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n",
       "\[IndentingNewLine]", 
      RowBox[{"xffTable", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"xff", "[", 
          RowBox[{
           RowBox[{"\[Tau]", "/", "nFeedback"}], "*", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "nFeedback"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xdotffTable", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"xdotff", "[", 
          RowBox[{
           RowBox[{"\[Tau]", "/", "nFeedback"}], "*", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "nFeedback"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]ffTable", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[Theta]ff", "[", 
          RowBox[{
           RowBox[{"\[Tau]", "/", "nFeedback"}], "*", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "nFeedback"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]dotffTable", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[Theta]dotff", "[", 
          RowBox[{
           RowBox[{"\[Tau]", "/", "nFeedback"}], "*", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "nFeedback"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"KTable", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"linearisedLQRFeedback", "[", 
            RowBox[{
             RowBox[{"xffTable", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"xdotffTable", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"\[Theta]ffTable", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"\[Theta]dotffTable", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "A"}], "]"}], 
           ",", "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"nFeedback", "+", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Indexed", "[", 
        RowBox[{"KTable", ",", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"t", "/", "\[Tau]"}], "*", "nFeedback"}]}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "J", ",", "K"}], 
       "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testWithFBClippedLQR", "[", 
   RowBox[{
   "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
    ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_", ",",
     "uBound_", ",", "KTable_", ",", "nFeedback_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
      ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", "\[Kappa]2",
       ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", ",", 
      "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", "us", 
      ",", "J"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Kappa]1", "=", 
      RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
       RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]3", " ", "=", " ", 
      RowBox[{"-", "0.1"}]}], ";", 
     RowBox[{"\[Kappa]4", " ", "=", " ", 
      RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"KTable", "[", 
             RowBox[{"[", 
              RowBox[{"IntegerPart", "[", 
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{"t", "/", "\[Tau]"}], "*", "nFeedback"}]}], "]"}], 
              "]"}], "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"x", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdot", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xff", "[", "t", "]"}], "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Kappa]4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xdotff", "[", "t", "]"}], "-", 
            RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"u", "[", "t_", "]"}], ":=", " ", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"ufb", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\n", "\n", 
     RowBox[{"eq", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"xdot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], "+", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"u", "[", "t", "]"}], "+", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{"init", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"xdot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
       "}"}], "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq", ",", "init"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
          "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"us", "[", "t_", "]"}], ":=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"uff", "[", "t", "]"}], "+", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"KTable", "[", 
                RowBox[{"[", 
                 RowBox[{"IntegerPart", "[", 
                  RowBox[{"1", "+", 
                   RowBox[{
                    RowBox[{"t", "/", "\[Tau]"}], "*", "nFeedback"}]}], "]"}],
                  "]"}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xff", "[", "t", "]"}], "-", 
                  RowBox[{"xs", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"xdotff", "[", "t", "]"}], "-", 
                  RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
              RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{"\[Kappa]1", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xff", "[", "t", "]"}], "-", 
               RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"\[Kappa]4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xdotff", "[", "t", "]"}], "-", 
               RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "uBound"}], ",", "uBound"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", "\n", 
     RowBox[{"J", " ", "=", " ", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
       ",", "J"}], "}"}]}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}, 3.8648372672245474`*^9, {3.8648373045645533`*^9, 
   3.864837353847723*^9}, {3.8648373920424533`*^9, 3.8648375909655547`*^9}, 
   3.864837839079855*^9, {3.865356690975731*^9, 3.865356718635888*^9}, {
   3.8653568425522747`*^9, 3.86535688554853*^9}, 3.865356998743344*^9, {
   3.865357063056785*^9, 3.865357082860453*^9}, {3.865357192303467*^9, 
   3.865357202547192*^9}, {3.865357324369248*^9, 3.865357327732173*^9}, 
   3.8653573727697754`*^9, {3.8653584117496357`*^9, 3.865358421880398*^9}, {
   3.865359119417409*^9, 3.865359146498752*^9}, {3.865359181803466*^9, 
   3.865359209189711*^9}, {3.8654491379879255`*^9, 3.8654492290188136`*^9}, {
   3.8659657476182566`*^9, 3.86596576077604*^9}, {3.8659665703366394`*^9, 
   3.865966589562479*^9}, {3.865967298267394*^9, 3.8659673001198*^9}, {
   3.866571893798601*^9, 3.866571940716648*^9}, {3.8665719967138014`*^9, 
   3.86657200493918*^9}, 3.8665721461421776`*^9, {3.8665731331726017`*^9, 
   3.8665731928485823`*^9}, {3.866573291140256*^9, 3.8665733048578844`*^9}, {
   3.866573636752106*^9, 3.866573657335546*^9}, {3.86657481838451*^9, 
   3.8665748273656473`*^9}, {3.866574870351947*^9, 3.8665748910333557`*^9}, {
   3.8665788373566265`*^9, 3.8665788400997524`*^9}, {3.866579031902623*^9, 
   3.8665790413156233`*^9}, {3.8665801062232275`*^9, 3.866580141002143*^9}, {
   3.866664127693946*^9, 3.8666641298202667`*^9}, {3.8667356182927976`*^9, 
   3.86673568611979*^9}, {3.866735735976613*^9, 3.866735746106326*^9}, {
   3.8667357917795067`*^9, 3.8667357922973385`*^9}, {3.8667369179510965`*^9, 
   3.8667371366351404`*^9}, {3.866737410171386*^9, 3.8667375163569317`*^9}, {
   3.866737646330759*^9, 3.8667376465136995`*^9}, {3.8667376988837075`*^9, 
   3.8667377777961025`*^9}, {3.8667386986753044`*^9, 
   3.8667387105614476`*^9}, {3.8667389141044035`*^9, 
   3.8667389332601886`*^9}, {3.8667389783395615`*^9, 
   3.8667389806728044`*^9}, {3.866739043478426*^9, 3.8667390512579017`*^9}, {
   3.8667390870272956`*^9, 3.8667391318757434`*^9}, {3.86674040926027*^9, 
   3.8667404968818393`*^9}, 3.866740531578581*^9, {3.8667406439541187`*^9, 
   3.866740650558975*^9}, {3.8667406893863773`*^9, 3.866740713276625*^9}, {
   3.8671631374388256`*^9, 3.8671631512244163`*^9}, {3.867163285886346*^9, 
   3.8671632877337537`*^9}, {3.8671640717729807`*^9, 
   3.8671641125009537`*^9}, {3.8671641506677456`*^9, 
   3.8671641597128525`*^9}, {3.8671647138006287`*^9, 3.867164760283761*^9}, {
   3.8671650233196297`*^9, 3.8671650773373528`*^9}, {3.8671739612548475`*^9, 
   3.8671739788202286`*^9}, {3.867174164356886*^9, 3.8671741910503473`*^9}, 
   3.86717423343779*^9, {3.8671763037106166`*^9, 3.8671763239431453`*^9}, {
   3.867176393820795*^9, 3.8671763968838153`*^9}, {3.8671766034747376`*^9, 
   3.867176626356419*^9}, {3.867176754084565*^9, 3.867176762833767*^9}, 
   3.8671768222227716`*^9, {3.8671769888754683`*^9, 3.867177004530461*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[205]:=",ExpressionUUID->"c292ff9e-5d7a-46a9-b47c-eaf783ebd2d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"linearisedLQRFeedback", "[", 
   RowBox[{
   "xff_", ",", "xdotff_", ",", "\[Theta]ff_", ",", "\[Theta]dotff_", ",", 
    "uff_", ",", "A_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fx", ",", "nDim", ",", "xState", " ", ",", "x", ",", "xdot", ",", 
      "\[Theta]", ",", "\[Theta]dot", ",", "x2dot", ",", "\[Theta]2dot", ",", 
      "u", ",", "L", ",", "Af", ",", "Bf", ",", "Cf", ",", "ssm", ",", "K", 
      ",", "uStar", ",", "uFinal", ",", "i", ",", "j"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nDim", " ", "=", " ", "4"}], ";", "\[IndentingNewLine]", 
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Bf", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "j", ",", "j"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "nDim"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", " ", "=", " ", "xff"}], ";", 
     RowBox[{"xdot", " ", "=", "   ", "xdotff"}], ";", 
     RowBox[{"\[Theta]", " ", "=", "  ", "\[Theta]ff"}], ";", 
     RowBox[{"\[Theta]dot", " ", "=", "  ", "\[Theta]dotff"}], ";", 
     RowBox[{"u", " ", "=", " ", "uff"}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"ssm", "=", 
      RowBox[{"StateSpaceModel", "[", 
       RowBox[{"{", 
        RowBox[{"Af", ",", "Bf"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", "r"}], "}"}], "=", 
      RowBox[{"IdentityMatrix", "/@", 
       RowBox[{"{", 
        RowBox[{"nDim", ",", "1"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"q", " ", "=", " ", 
      TagBox[
       RowBox[{"1", "*", 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"1", "0", "0", "0"},
           {"0", "1", "0", "0"},
           {"0", "0", "1", "0"},
           {"0", "0", "0", "1"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}], "\[NoBreak]", ")"}]}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"{", "1", "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{"LQRegulatorGains", "[", 
       RowBox[{"ssm", ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", "r"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.867170485075697*^9, 3.867170518435027*^9}, {
   3.8671706118451514`*^9, 3.8671706130397696`*^9}, {3.8671706554172144`*^9, 
   3.8671706627718625`*^9}, {3.867170703806738*^9, 3.867170708888113*^9}, {
   3.8671708208762927`*^9, 3.867170837870858*^9}, {3.867171074196268*^9, 
   3.8671710872311*^9}, {3.8671713672065506`*^9, 3.867171398414569*^9}, {
   3.8671716686831217`*^9, 3.8671717460223875`*^9}, {3.867171824861171*^9, 
   3.867171849315349*^9}, {3.867171888266892*^9, 3.867171917440559*^9}, {
   3.867171980295455*^9, 3.867172006120195*^9}, {3.8671720981317654`*^9, 
   3.867172106273162*^9}, 3.8671739127863517`*^9, {3.8671762608543262`*^9, 
   3.8671762848316565`*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"7f2c2e0f-d6cb-4525-b282-4d032a356b51"],

Cell[BoxData[
 RowBox[{
  RowBox[{"linearisedLQRFeedback2", "[", 
   RowBox[{"\[Theta]ff_", ",", "\[Theta]dotff_", ",", "uff_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "q", ",", "r", ",", "fx", ",", "nDim", ",", "xState", " ", ",", "x", ",",
       "xdot", ",", "\[Theta]", ",", "\[Theta]dot", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "u", ",", "L", ",", "Af", ",", "Bf", ",", "Cf", 
      ",", "ssm", ",", "K", ",", "uStar", ",", "uFinal", ",", "i", ",", "j"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nDim", " ", "=", " ", "2"}], ";", "\[IndentingNewLine]", 
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "\[Theta]dot"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], " ", "+", " ", "u"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"\[Theta]dot", ",", "\[Theta]2dot"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Bf", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "j", ",", "j"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "nDim"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]", " ", "=", "  ", "\[Theta]ff"}], ";", 
     RowBox[{"\[Theta]dot", " ", "=", "  ", "\[Theta]dotff"}], ";", 
     RowBox[{"u", " ", "=", " ", "uff"}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"ssm", "=", 
      RowBox[{"StateSpaceModel", "[", 
       RowBox[{"{", 
        RowBox[{"Af", ",", "Bf"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", "r"}], "}"}], "=", 
      RowBox[{"IdentityMatrix", "/@", 
       RowBox[{"{", 
        RowBox[{"nDim", ",", "1"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{"LQRegulatorGains", "[", 
       RowBox[{"ssm", ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", "r"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.867176439281256*^9, 3.8671765032378006`*^9}, {
  3.8671765346357574`*^9, 3.86717653594134*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"5478669e-f7ce-4041-b9f3-31e572b34ddf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"K", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"linearisedLQRFeedback2", "[", 
     RowBox[{"Pi", ",", "0", ",", "0"}], "]"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.867170621100191*^9, 3.867170632280615*^9}, {
  3.867170711264351*^9, 3.867170723923304*^9}, {3.867170841259774*^9, 
  3.8671708418195972`*^9}, {3.867170932092721*^9, 3.867170932779501*^9}, {
  3.8671714690599732`*^9, 3.867171476501591*^9}, {3.8671765124348583`*^9, 
  3.8671765219148264`*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"706e2679-8d91-409a-a123-5d4182e03072"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SqrtBox["2"]}]], ",", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SqrtBox["2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8671738557086067`*^9, {3.867176264707093*^9, 3.8671762868780007`*^9}, {
   3.8671765230154724`*^9, 3.8671765378157387`*^9}, 3.8673430200208664`*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"3cb7b508-73a8-41db-aeec-70d95aeba627"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Add new feedforward function that computes feedback gains by linearising\
\>", "Subsection",
 CellChangeTimes->{{3.8671732431095476`*^9, 
  3.8671732610328116`*^9}},ExpressionUUID->"e83f5813-6713-4664-ba0a-\
d959dcc976de"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "15"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxError", " ", "=", " ", "0.01"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"uMax", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxCount", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"nFeedback", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"xdotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";", 
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";", 
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";", 
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Initial Energy = \>\"", ",", " ", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["systemData",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
     "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
      "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
      "InitGuess", ",", "maxJ"}], "}"}],
    FontWeight->"Plain"]}], 
  StyleBox[" ",
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K1"}], "}"}], 
     "=", 
     RowBox[{"ffCartPendulumLQR", "[", 
      RowBox[{"ICs", ",", "systemData", ",", "nFeedback"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K1"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<feedback solution \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.867173888420143*^9, 3.8671738971293592`*^9}, {
  3.8671741982060604`*^9, 3.8671742459627852`*^9}, {3.8671766373329105`*^9, 
  3.867176640444914*^9}, {3.8671768521152124`*^9, 3.867176852257167*^9}, {
  3.8671770236933317`*^9, 3.8671770386035643`*^9}, {3.8671771661087804`*^9, 
  3.867177178861701*^9}, {3.8673430318410735`*^9, 3.867343050186184*^9}, {
  3.8673430828726892`*^9, 3.8673431400693264`*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"c23b719b-02b4-4282-8a87-d0d9b0bf1a3b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial Energy = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2`"}]}],
  SequenceForm["Initial Energy = ", -0.2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8671738814983573`*^9, 3.867173920523875*^9}, 
   3.867176657339509*^9, 3.867176777125196*^9, {3.8671768335781403`*^9, 
   3.8671768537186975`*^9}, {3.8671770114812384`*^9, 3.867177039690215*^9}, {
   3.8671771668785343`*^9, 3.8671771799603496`*^9}, {3.867343021386428*^9, 
   3.867343050945938*^9}, {3.8673430870143595`*^9, 3.867343140625148*^9}},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"552610b0-295f-45bc-bb59-02f38b7b8428"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error First Guess = \"\>", "\[InvisibleSpace]", 
   "1.8144098446116385`*^-15"}],
  SequenceForm["Error First Guess = ", 1.8144098446116385`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8671738814983573`*^9, 3.867173920523875*^9}, 
   3.867176657339509*^9, 3.867176777125196*^9, {3.8671768335781403`*^9, 
   3.8671768537186975`*^9}, {3.8671770114812384`*^9, 3.867177039690215*^9}, {
   3.8671771668785343`*^9, 3.8671771799603496`*^9}, {3.867343021386428*^9, 
   3.867343050945938*^9}, {3.8673430870143595`*^9, 3.8673431407451096`*^9}},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"ff6b1d6a-3674-4aea-ae7a-2c8aab44c989"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 340, 32, 
   17550245024740879615, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8673431411599765`*^9},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"973092a3-d936-4f87-b191-c29bf0baf28c"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$55176\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$55176\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"3.173750416797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.7627662906557013`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.04417842420151854`\\\"}]\\) for the integral and error \
estimates.\"", 2, 340, 33, 17550245024740879615, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8673431411729717`*^9},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"2589cdf0-2819-42ff-b8cb-398d65ec6891"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
l27dECmUjnCesTsrXp4yPolwnhHdmVt1X60T4TzDxb7t08rzNWyeIRyn6sUd
MsjmGfBk06cx5Wk2z2Ade1dh++Efz9ivzSEXSGGwecZYo0XsLX4mm2esa7+w
+nkBg80zYrlsH1QeowOcZ9Q2t5jHcM0DnGc4jf8yWtw1A3CeEfQ9JeS2xQTA
eYay44p7S0I0gPOMayjrT1NOB8B5hslOs/dD13MAzjMauT8/ydNvRDjPEMpY
/6iNNoBwniFHvPTy05EphPMMi/JqD0NLOsJ5RqrrOjPFEkIJzjMI//0H5xl4
G+cZeBvnGXgb5xl4G+cZeBvnGXgb5xl4G+cZeBvnGXgb5xkbNJo1ea2WAPe8
9NgKtQ4wk+18VJqvG5xNf78st5UK7pWrzhb1VACCr+vOCTAA0oG7Ys7mPDbf
2ORKkDrn94PNNwQTrURsKL/ZfONhytfSPr5uNs8ILh9/mWw9wOYZkk83Fx7R
HWbzDGn9fCPv7nE2z7jBR4gQLppm8wzlZa+b60fm2TzjRPr5+fsyTDbPoJ5Y
p2o8wkIxZa6JlCYivO4/faw4g4lEg8db6b84IDN8T/oZoznE4aH22aGHE77c
ap1X6z6E9n6X9B6Z4YLdJ1V3FD/pAs0LdwOvMbhhZHsHzcV/HFCPfNIKJpJg
zqPM2bDmWUDQ05sSXyTB08o83pdW0YFuesvmzwQydDa7UbejhAFYuxVJ/Vx8
0I/BiOHkZoItY0cjnvPzw68frGqvbGSAm+SL8TarBSB136SnFFwAnT963qSu
FYQv30t7ED/NguzSDRY35FZCg26zCl67KbA88tSCJioENeUiH6lEjQCcv2ho
o8q9FxYRzl/w8cX5C97G+QvexvnLWf0DnBZqBLhBZ/uZ0/t/A2rioGImsRf8
GW0KSFvdA1rJ6fvWK3wHm4wcw+/q9AMDEdEDbSYpbB6zEOu+xFFcx+Yx3NZT
UpuV29g85jvt14nQ8i42f5HLdbu8z6efzV/aY1zFc7cNsfnLi67QNdv3j7H5
i4T1UvjZd1Ns/vIixqZNZ2COzV8yrOkend4MNn+ZyfzUP/CRhQKLWz1MHhOh
6pmdBU7nWGj4zZH+0hgOWOOR8Sh45wL6ZLFLcziWE26e3m8vhcaQXc/fW0qf
uKB01eHmPbXNoOsHa+nKJ26oVN7gu/DmL/ipt+EvVxkPXOx+YvwA28f4HQ0b
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
FP++iAmPkh9Iwz//r/m0/9fro5//Dw8vWHo=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{927, 2833, 2831, 433, 434, 435, 436, 831, 723, 
                634, 562, 508, 476, 855, 747, 658, 586, 531, 873, 765, 676, 
                604, 437, 832, 724, 635, 894, 786, 563, 880, 772, 917, 683, 
                904, 796}}], 
               PolygonBox[CompressedData["
1:eJwV00lsjHEYB+BvWkVtaSIhRau11L5f7MvB3lbigOBU+x4JiYPEvsaBYIoq
rQMOEhJHu252rmrf97Y3nHjew5P39/7+38zk+2amsGzD3PUZSZKkaKRT+yTp
SK7yg7KGqZlJ8ty+ndGkOKbvp78ml9GNj7papukb7TsYQwbH9f311+UldOeT
ro40A5zd0C2lB5919ZRzgoHOb+qXkccXXQPT9S/sOxlLJif1g/S35OXk81V3
jxn6l/ZdjKMVp/SD9bflFfTkm+4+M/Wv7LsZTxYV+iH6O/JKCviue8Bphjq7
q1tFIT90D5mlf23fwwRaU6kfpq+RV9OLn7pHzNa/se9lIm3i2el+m2eYF9N1
w3W18hp6x7T/M8/zy/lCe1N8B/Gc5C6UyJvMtpRz2X7QzKeax15XbL7VHzb3
mdvMzlQwyb7RzCLNJfsBM4+qeN/4Ls0/5lHzbNy3mUsl8+1bzA5clQ+ZBXGd
zx1h1unWslXOoU/sZsIFucl1i+RmOU0pm+3ZXJGfOC+R38n7mUx2/H50f80q
FsR03UhdvbyOvjHtKS7Kzc4Xyy3ykXhW8dsxuzJHfuq8VH4f988U2lGtH6Vv
kOMPVkSL7hnn+A+Dr2xz
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{398, 2832, 2829, 609, 698, 806, 403, 512, 567, 
                639, 728, 836, 450, 482, 536, 608, 697, 805, 402, 511, 566, 
                638, 727, 835, 449, 481, 535, 607, 696, 804, 401, 400, 399, 
                448, 480, 534, 606, 695, 803}}], 
               PolygonBox[CompressedData["
1:eJwV0MlLlAEcBuAvhYImxwyFqIN4al+E1PZDtp7S0YIM0zqUJ8fUNIMgIQoy
s6JDiwSpaVbaQv0PZVlpex7TtpujtqiHnu/w8L6/95sZZibrUDxWmRQEwQz6
iEaCIJWHhgf0MsQU2V7YwCCbk4Ogx/aFSVbbjjPAJs/u2z7zj1W2et6w0bN7
tnn6Li7xi732T/a/rHTX8ZoN9ru2NH0nF/nJHvtHe7HeygQHbX9sK/RjvGK9
rdv2VI/qJ9ivtzNNhXuu7GWWXsMOPUM20qL/oFj/4HMyZROPbVdlhHqKwu8h
53OaG+7LclyWy9/ee1Mu5Gz4m+xXZDJxlruvyzROUutukf1ynbzj/VmymSe2
azKFBkrcC+QZ2vQpjuipsoeZejXb9XR5igv6d4r09z77kT5bryMWfhfGKHNP
eN6tJ+mVLNNreMlad5fn+/RbTHLYFpXbaOYbMds7rysMvzsJDoT/j22pXs0L
8mydthR9K+cZodD+1l4Q/u+MUmobsy3Rj9JHru22bY6eTxPDFNgH7QkWu6t4
To69wxbRt3COr+y2D9hHWeSO84w19nbbf2PPabc=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt03ecz3UcwPHLvpN9xznznJVo2KuMVJeV6GTk1JUV3UnK3itEj4oUbYSi
SCjRMNrKrBTtQkTKanu+H4/+eN7r/fn87vH7fX+f7/eXnpPXNfeChISEMf5E
a/nzqY7UBdpfU5jEQOssLcA4tlvfpVWZTqb1tXrm//fboHdqRaZyn3VfLc4n
5uGaQQNzcz2iz3OHuTxjzL00kQ9i5nrzv/omD5KP2vY+00cZxHVk2jurrzKT
hrSw97O+wFh6k5+L7H+uj8Vn055GFKAghShMHf+3XxcymA40pggXe+0LXcQQ
OtKElvaP6krGcTOJ1LX/pT4eZ0QnmnKF/WO6ivH0IYl69g/oE+TSOb6nvXP6
GrNoxpX2ftEXmRDf0TqJD83ZdDH/p2/xELdZl2aPuSiXmA/qkwwwlyXP3F0L
8k7cgzgj8x+6Ma7HXInZ5lu0BDvN92h1ZtLcupUe19H6UpyhpjGFiXE2WpQJ
fGR9t1aL54a+1jfEA8pY3jbmaWWm8bD17VqGveZ7tQYXmi/Vr/QpBprLMdR8
kxbi3TiXuJ/mP/V17udW65LsimeH1uYTuppJcW/i/dkR35uu8Rtii3kexbjM
+mt9On4r8R3i2bD3l25iTjwjtLH3q65hcnw2xbnc/jf6DMPiM+IZoa39k/oy
U8ihBPXtf6vPxvnRLZ4JrrL/m65latx3StLA/ne6mOHcGPeJUjT02ve6JO4l
WXEGlKYMyaRQlnKkUp40KlCRSlSmClVJpxoZVKeRz/hBl8Y9i+cszoIaNPba
j/ocI+J+xfemnf3f9RWmxX2nJk3s/6TLGEkPOtn7WzczN86Bq+2d0nVMp1+c
k718bDXPpxZNrQ/pckbF+1kX5j1zTzqb/9E3eCDugXUpdsc1co35tK5niLkC
M8zZWoyPzf3jzM352WYeqlV4JK5Lk+O3wb44A63JLGpbN9PDcW26QgdpKpMZ
HdeoRRjP+/H8aHpcA+cB7eukIg==
               "]], 
              
              LineBox[{144, 69, 103, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$55322#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1GW0VVUUBtDLo6RL6ZTuUrqURmkEBaQsMMDAVkJRsCjpklCR7mEr3dJK
qnQqjaQD5xr+mKxvf/vc994952wK9ejTpneyRCJxyj9DKZw8kfg6KZHoQnYO
6pYzjOGMoIhrvrHXlRwc0q2gvn63dT+qcFs3kqL6b627kZPDupU00O+x7k9V
EnyqL6b/Tu5OhnSJRC7ziH4VDe3ttR5ANZIxSl9c/73cg9wc1a2mkX6f9UCq
k8RofQn9D/Jj5OGYbg1jKGnvR93j5OW4bi1jGUcp+z/pnyAfJ3TraKzfb/0O
NUjOeH1p/c/yk+TnpG49TfQHrN+lJimYoC+jXy4/RYGk/5/NBprqf7ceRC1S
MlFfVr9C7klBTus2Moly9lbqelGIM7pNNNP/Yf0etUnFZH15/Sr5ae7mL91m
HtD/af0+dUgd90531ZxC+5iuq6BbLT9D4ZjWt80v+dt+R+uz8QziPsnZaS73
Ne9gLAusPzTzM41ffO5B86B+uDk43hkzGxOpa/2CmZIxzLX+wMzH1Pi58SzN
a/F+mZ/F9zZzMZkO1q+Z6Vkif2wWjOv83ormGt2zvCVnpkiszQQz5bOu6ySf
k8fQgpet07BQ3mK/uXxIHkI90sT7o7tuTuXhmK6rpFsrP0fRmNbJ+Eo+Z7+z
fF4eEfcq3h0zBy3lrfZbyIfj+3MfaZmmr6xfJ/emGOd125hORmdshnmPa9bb
60NxLui201J/JJ4J95OOz/X36jfIz1OCi7odtNIftf6I+qTnC30V/cZ4VpTk
ku5R3QV5HK3YqWutOxbPgQZkiPdHX1W/SX6RUlzWddFdjHNGa3bp2uiOy5/Q
kIxx9nQ34l7wCDNdV023WX6J0nFvrJOYJV+x31W+FGeSNrxinZZF8q/228on
5KEMkO+kUfx9ZirmyZniHMs3zelxfuTcdJRfNzMwnqXx95qF4ln72dXjvdcN
M/uab5tZmECZeEZmckYx23qwmYcp/OPz3czL+pFxRsxBZk4m0db6VTMd41gc
z8oswG8+2848Gb+bgfJdNI77ZKZmvpyZnvItcwadeMM6I8vkWX5ODXlLnAXK
clXXXXdFnkQ7duse0p2Ks00TsjBbX1O/Ne475bim20N7/ek4AzQlK3P0tfTb
4rtRnuu6vcyltr3tcc6pwA3dPuZRx96OeB5U5KZuP/NZwEIyOSOLzMUsYSl1
fW5nfG8qcUt3gA76M3HvaUY2eun+jXNDZ5a5rp5ul/wm/eSsVI7zZKZgNHOs
h5h54/8j/gNeYPc9
               "]], 
              
              LineBox[{866, 758, 669, 597, 477, 856, 748, 659, 587, 532, 438, 
               833, 725, 636, 564, 509, 478, 439, 440, 441, 442, 443, 444, 
               445, 446, 834, 726, 637, 565, 510, 479, 857, 749, 660, 588, 
               533, 874, 766, 677, 605, 891, 783, 694, 910, 802, 930, 447}]}, 
             Annotation[#, "Charting`Private`Tag$55322#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HfcjQUYBuBjk1lWCBGF7GyZDRHZVGQTysjeympqoimj7L139h4tDTu7
hKJhq+v54/o993Of95zzfe84+dr1aNQ9SSKRuCtpIjE9WSJRP0Ui8X3yRGKX
2ctcYJbhIIXsH5m5+Y619nVmTY7yr/ePMFPyNdO8vtysTAt5mlmEnfJm8wl+
9p5u5iXduyyWy/O4PMkswGY5M2/LmVksd2aG9zaw75d7U5grupG6VEy3t+SA
rrv9svwetcjCTH1D/Q9yH4pwVXeQWTTy2o+6vjzINd0hZjOHucxjPo0d+5Nj
+lGU67rDLKBJ/J+6/hTjhu4IPfR/2d/nCbKyUN9Uf0AeQHFu6o7SU/+3/QNq
k41F+mZxfeSBlOCWbpQuNTPsz3FM95L9H3kcdcjOO7osLJG7xPl3XHP7IXkQ
JfnYnod18m2vj5bTMNO+wnyYVvJ080F2yVvM2vzi+F5xb+j2muPNJWYFnpQn
mwXjGrDFvjGufbyPu+OeMLPyDUvtq81qHKarfY5ZMs593HP2bfG5nIj/yXc/
HcfqB1OKT+x54x7nK/tX5iP859gx5h3M0q80q9A67jOzKLvl447rLV+RJ1CX
Kfb72SrniHtMzsYy+QWWes8z9iPyEEqT4FVdWmbLbTjhuD72q/KH1CMny/TP
xjMmD+UhknBS31d/LZ5LniJXPHP6Fvpj8jDKkJRT+hW0jPNrH05ZknFav5JV
rGYNa3nOsce9/jLlSM4Z/TpaxXm2v0J5UnBW309/Pe4b6nNPnGd9a/1JeQQV
SMmv+v76G3FtaEBu1uvb6E/JI6lIKn7TD9DflD+lIXnYoG+rPy2PohKpeU2X
jjlyW845bqD9lvwZjcgbz6AuO8vlF+M+dFw7+xl5NJXj++z3sl5Ow+tyeubK
q8yqtJNnmsXYI2816/C7zxtk3tbtMyfGfWFWpLE81Xwgfm/YZt9k1opzH98Z
z3w8D3zLCvsas3rcU3SzzzVLxe9MPCv27WbdON9s8t3tzbP63eYYc6FZNp7d
OA9mPjbEeTcfjedAfsPMwDy5PbPk4uyVz/vMwfHcyJ/ThC/shdgu52OcnIOV
cnc2e08H+69x71OFtLypy8h8uQMXHDfEnmCSvSn54zdF31H3W1xXqpKOi/qt
dPLaubguVCM9f+i3sZ0d7GQXz8c1if+R6mTgT/1QfRIm25txX5wzfWfd+fhb
qUFG3tJlYoHckUuOG2ZPyhR7cwow3p6TVXIP9jiui/1CfAY1mWjPz0Y5E2Pl
O1kod2K2XIJ98mXvHy4nY6p9mVmJp+UvzcLskAsyQc7FanmtWYOe8jyzNAfi
nrLvMOvF8xbX1+d3NS/G32qONReZ5TgUv5dxzc372B/3Vzx/5mPxm8P/Rrch
bQ==
               "]], 
              
              LineBox[{1298, 1201, 1127, 1011, 1408, 1284, 1187, 1113, 1062, 
               974, 1387, 1263, 1166, 1092, 1041, 1012, 975, 976, 977, 978, 
               979, 980, 981, 982, 1388, 1264, 1167, 1093, 1042, 1013, 1409, 
               1285, 1188, 1114, 1063, 1431, 1308, 1211, 1137, 1454, 1331, 
               1234, 1481, 1358, 1509, 983}]}, 
             Annotation[#, "Charting`Private`Tag$55322#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfcjlUcx/GLzIZRQho2lVCSUsqOlPBY2RmpyN6y996yN5WMBtmkhRQq
shpUyqaiiErv3x+f13eccz/3fa5znfPkbdEhpX2qJEmmpU6Sk2mT5Fz6JKmB
r9IlSQ+Uwe3InCFJOur/4KejMU6Zf15XE1/LPfE47kAW8zvpL/Az0ASnzf9N
Vwt75V54AveaO1p3E1bJdyKrrrN8kZ+JpnhUN1t3Fz6Rz/h7v/Mp2Cf3RhVz
lspFUFYuIo/hM2G1fBdu1nWR/+RnIUVeLZdCM/kxeQ6fGz35w/RTfQv+E/5J
nPXdf9Da+MZYW2O7+Ff5qvxb/Gv0PtqPHqWLaTnj99Gx8gSamXal++l8+n48
W7pFnhnz6XB6ki6luY3fQrvKY+lfckf6tTybrx1/g38Yg/lf6POxj/xcPg96
8d/SbfqW/Kd8FZyzpgu0DvYb64OnjC+Ti6K8XFQex2fBGjkPsum6yZf4OWiO
8/7WRV1dHJD7ogLy4jdjf+rr4aDcDxWRD7/Hc43fEZ+PefgLl3AZf0f2ufo4
ZH5/VEJ+3Op3dNdf5ufGfuFKfFb3HA7LA1AZBZDd/B76v/l58SxwNb5H1wDf
ygNRzbzlcrHYe7mYPJ7PirVyQeTQ9ZSv8PNRR14jP4JWcS7keXxebJdbydv4
qvgn1kUb4jtjrxjbzQ/in+ZX8MXRn/8x9kpfnJ/AT6Q30270AF0XZ43/gJ9F
y9MR9BR9ixYynpP2ksfRq3InuleeSxfIdelaeRotTYfQX+nr9IU4s3S+PJnm
o73pd3SHsRf47fxT+Ne6rtBG+N7YYDxjfKV8f6xdvl+eyN+C9XJh3KbrHc+F
X4h68jr5UbSWy8bv5PPHeeO/pwvpZ8Za0x1yNfzn+6/SxvjB2JB4n3E3rhlL
6D/GmuAIPzT2GvcgFf7VN8VRfljsRdxVyOU7Xo318YvwIlLjv7g/8CM/PNYa
90/cn+b3id/DL8ZLuC5+Q5xN/MSPQHU8YO4kXTZsiLsi7lNdX/kavwQvIw0S
fXP9z/xIPIsSusm6W7Exzmvcp7p+chJ7KNeX1/OPoY1cTl7IF8BOOW2sX9dC
PsaPit8mvy0/gBryg/IUPju68wfpprin+a18hTgvcd/K/flU6Mzvo2/on+M3
8NNpGTqUHo8x2tZ4ebpInkIL0j70B7qIfh7PPPZbnkOfpqPoGbqcpov9oC3l
MXEHyu3oHnl0PCf+Hb4EBvA/0Zr6kvxUPgc2y83kD/mKcf7k3PIAPjXejHMa
d5pusVwIX8jpY291reRf+TGoFe85MsS+xRkydpwfixQ8pHtNlxNb4h2Ie1U3
UL4OS+UG8kb+cbSL+1JewhfGrnin5J38M8gYeyi35k/w7fkv47zzNfh3+Qcx
kP+Z1taX4qfxk+httAc9RBfEXWL8efqRPJtWoiPpabqMloh7nQ6Sx9M0tAv9
hs6L/4XGG9JN8gz6BB1GT8RzpO3jDqevy1Pp3bQvPUJ3x/see85Xx/VyOvlF
/iTfgf8qvpevyb/Hl0Qd+WF5Op8LW+Xm8sd85Vi/nE8ezKeNdciN5M18WXSI
/xPyG/w92CPfEPure0k+xU+IuxKP6GbobseH8R4hv26InC7eSbkjbox3QP+y
7jQ/Me42lNbN1N2Bj+J9QAHdUDk9VsQdjZuQUd9Gd4afFGc59g4F9cP0GbBS
7oxMuD7Ok+4sPznOXTwXFNIPj3cFb8tdkDnWqH9Fd46fEu9drA+F9SPi+eMd
uSuyxJr07XTn+anxrsur5IcwiD9Gl9D/AQj9UrA=
               "]], 
              
              LineBox[{1947, 1821, 1731, 1593, 2088, 1929, 1803, 1713, 1653, 
               1553, 2061, 1902, 1776, 1686, 1626, 1594, 1554, 1555, 1556, 
               1557, 1558, 1559, 1560, 1561, 2062, 1903, 1777, 1687, 1627, 
               1595, 2089, 1930, 1804, 1714, 1654, 2118, 1960, 1834, 1744, 
               2154, 1996, 1870, 2187, 2029, 2221, 1562}]}, 
             Annotation[#, "Charting`Private`Tag$55322#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GXUFGUYBuClu7sURGmQUkAEaQmROhISSiihdEoj0kp345Hu7g7pkO5u
SUkJvd4f13nu+9mZ3e+b2dlMjVpXbxUlEonkjBqJLI0dibSOG4ncixOJ9KMQ
UblqP9Q+Pn/oNcnIMvs2dvfl/hQmGtfsh9knYKZei0wst29r90AeQBGiM9Mu
M+vlllx33HA9IbP02rzHCvt2dg/lgXxCDGbZvc8GuRU3HDdCT8RsvQ6ZWarn
ZbfclZWOa68/kgdRlA16UY7KMZktf8BGuTV75Qpclm86f6ScmDn6abM2X8s7
zNKclW+bzcLfGK6ZmY9n7NEvm98SiReJdNMPy1X4l5v63+YPxPT6Kp/XQX5s
/9AcbJ4wv+INn+obw+Q5x8K1NJsQ1fmx9DlyFv5hk37BrE8beZ9ZkSvyLZ81
Sk7CXL0uO+UynJM/CPdTzs9euTurndMxvLc8hGLEZq5dVjbLbcP1cNxoPSnz
9HpkYY19J7sn8q8UJw537NfS2WtP9d/4jLjctV/HejbQJVxb+6GUIF64hvYb
+SlcF30YJYnPPftNdPXaC304pUjAffvNbGEr3Rzz0n4EpUnIA/ttdA/3TB9J
GRKFe2Q/xj4Z8/X6ZGW7fQ+7V/IoypKYeXbZ2CK345HjxurJWaA3IFt4DvQC
7JN7hO+a43rqr+XRlGOTXozjchLmy9nZKrdnv1yJq/Jj54+TU7BQP2PW4Rt5
l1mW83L28MzIBdkvXzEb0lM+YlYN/xO3wnU1fySW791O798rfEfD/2SOMU+a
NXnL5/pms3i4B5wIz7D5HdGcn1RfIOcI3w226RfNBnSQD5hfcC18V8zm4Tvo
M8ebKVlkfzY8l+FZk/80y3FBzsEq+SMOyFfNRkTxub30v+Rq3A7Xwnv2Dn+z
PJbyJOOJ/QT7VCzWG5IzfI59H7v/5HFUIDlP7Xezh73sYz8HOMghfg6/CYx3
fEVS8Mx+ol1qluiNyBV+M+z7hr+ZCXolUvLcfpJdGpbqjckd7pX9L+E3gYn6
F6RioZ6T7XJHXjhusp6WZXoT8oTnXP+Yg3LvcI0c1y/cKybpldkif8ZJOTWL
5FzskDtxUK7Mdfml86fI6ViunzPrhvsv7w7fDy7KH4bfCLkQh+RrZmP6yEfN
6uEZ4E54ds2WxHYfj3r//nJ0HjPZ66fMWuHe8KW+1SwRnm9O6TfN78M5zk+j
L5Zzh98fduqXwvNBZ/lQeA9uhN8js0X4LfCZU830rLA/b9YL7ynvMctzSc7L
Wrkwh+WfOSbX4G7I3meAHIMpehW2ySU5LadliZyHXXIXXjlnmp6BlXpT8rFO
L8IRuS/HHTdQj8lUvSrpeG0/3e4dVunNyM8J+0HhmWaaXo30vLGfYfcuq/Xm
FAjPuP3gcA+YrlcnA2/tf7fLyBq9BQXDPbEfYheHGXoNtsulOCPfMpuGa+Ge
/A9OPz+T
               "]], 
              
              LineBox[{2607, 2503, 2425, 2303, 2723, 2593, 2489, 2411, 2357, 
               2265, 2700, 2570, 2466, 2388, 2334, 2304, 2266, 2267, 2268, 
               2269, 2270, 2271, 2272, 2273, 2701, 2571, 2467, 2389, 2335, 
               2305, 2724, 2594, 2490, 2412, 2358, 2747, 2618, 2514, 2436, 
               2773, 2644, 2540, 2799, 2670, 2825, 2274}]}, 
             Annotation[#, "Charting`Private`Tag$55322#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{396, 397, 395}], 
             LineBox[{932, 933, 931}], 
             LineBox[{1511, 1512, 1510}], 
             LineBox[{2223, 2224, 2222}], 
             LineBox[{2827, 2828, 2826}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
oCorjvhhpofdOf6yUXDED+tVkJ7juk/BET9svxpziQ3RnogflqAJVcqI9kb8
MLXONMGcsxQc8cMOSt5//XiEFZ8zKpBRZl0Fi73mfksos+LI370BDGqEWLPg
iCe2db95g2rDXYB4YtRJexc1kwSA+GDwtI9S9qFegPzcFKfZC+9/9QHk55Yv
KNI7M94PEB9MnCvP9+TDAYD83Y2OOUfMLwwA5O/O8b/6cdOFfoD83V8Sg7oO
6vQC5O8ulI2KrJXqBsiffJqbYf16jAVHfC+XFRdmTiaz4ojvZd235LzuKLH+
LPO97CTDZJVjKTjiezXXxPVUEuOZ5HuZPd025UvB15pQ2DvBSlgpodd3SZ6C
I/9z5qzjNr8WZhzxvr4XX2ZamWALUH5efKt5ztc7MQDxvByU+tSEs/sB4nk1
KRSEZ18dAEwH3x55v2Me1JcVsL/3GCD91EpiZfe/FPQDxOe68X46u3MbBUd8
rkdSecf8g4nrWeZzXeaT2JZLzP8d2lwGta9EYNISZ2ZEJAVHvC5PS97IS8+f
kvX1mFd6zwuxAcAsX1N+c8ccEJPHeXcR9Zio0sPnp7ctAOdVmt9XHRgAiK+1
otdx6fNFCo74WrsiK7cJEet54A0p2n5rEfjyYvzV98R6P1Hl0qzZJQIN5hu3
9t6i4Miv26dwYiNfEDOO/Lp20tw+TrFCAPG3OFo3736cEgyQf/fX2KWdz9rS
APLbLlpodpWydwPkt5Wa+BCiLU3sK5b9tjnX35St5OkDyG/rEKtommDbD5Df
1rhmM9ZK/B7kt91bqU1TIX4v8ts+H9tbYkq0B/Lbbrmd8aopsg8gv21QbZWn
FCOVPH8V//Usr/luJ0B+UcGoglvakiw48ouKr9t1NUiWFUd8qx8RNvOfF1lx
xLfKOZDxouIOBUd8q4reD+qdnyg44lvRqtbwHk6h4IhvdevU9hlPov0R34pl
D/dpyWlWXKrAU+nE4kr4h21NGfdBVhz5Ux2YxQ+/c2TBEe/qo0PeIkXsJkC8
K+MXt5VbXd8CxK86dFTZ6ZZML0B+VJEIt0hQ3AeQH9XkYfaV8p5+gPhVrw9Q
WYrvDQDkT+3n9ytosx8AyJ/KVCG2+/a9foD8qZyVQ579Tr0A+VPvRp6w1TnZ
DZC/8mY9vuj9jgWXeKjw6muSEFwVcNDhWhSxPi7zph51vxlXO0TBEW8qysau
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
uL7m9ygLlH7I/buibgEgnsu+F5F8M9JzJM/Fd1O6m9HFaZKnstHjiraiRwtA
PJUH51f2xryvJ3kqTAJxntF4FclTCZyq2jFsUEryU6Ql9/qL7Igj+Sk+X35s
Nl2XSvJTRt70vx+hlfzLT+mo/h7PUIshPZPO7J2ywMbvGNIbvbr06kZDdj1A
eqNLTHlXCrOaSJ7K0Ra+yFMPPmFIb1QkzRTqn1OPIb1R/9LvtLWBnRjiqxTt
VVqRkduDIb4KphI97hRFxRBfZeuSTEKrfw/JVzH88cXtwuYukq9irK+/f1j+
F8k3qbtaeO+E7BSpHxJNUgpdfDkHEN/k25uBPaUliwDxTa75V5u4JdGAWY5h
f3IKC/yqmS7Ta7MIEO9k41vPGAtiH4p4J7RpKwHxpWmAeCMplU93fRhrJXkj
4acYGKy9G0jeiN9tq1Vjw9Ukb4RvwJ87a7SM5ItkmOm/OiSVSvJFIl+e6+Rs
iSH5ImsDwh9dKS7EkN6pvU9U/Nj3HxjSI9GYXIdj/tQBpEf6fiKtirLYCJAe
iZ35j8eHjjIM6ZGystSEfSp+Yc3Lesvwtfvsg0cXSR7J4RmBlUL2VAzxSH6w
vktK1aNiiEeSvmGDZeHDbpIXcsv5bIi24wxAvBD2DsMj228tAMQL2R8ioXTR
kwaO+u1SGtrIAmtNjBPy99NAbceLI9sVWOHqyLDCMcUFgHgiYZc+fpC+Nkvy
O/S+tllwjzSR/I4nD0USNlYS+8Blfkfcewu9B98qSX7H67d7rTdPfSd5HVpO
uZMv5vwB4nU04NwPDpVlkryOSzWnbQfTf5K8jgLZe4YvRqowpF+q93ufF3Kh
meR1HBcTLz5UG4sh/ZJ7SnHQkcxaDOmXGv38KpiWOjDE7+isPZDrfbsHQ/yO
vVP2jnlE/0b8jszM0CiO4h4M8TtWO7IXyj3qIvkdKl1u8k82t5H8DEk+6ZyR
kElSj+RuWQE7VswBxM/41Wv1pO3BIkD8jISeAseS9zQwt6PgCPcTFii1rT+j
K3YRIJ5GsnK0pefOeZKnscX7QAq/2QxAPItZhhLj3yd+kTwLvoP3de5xNJI8
iw24dFxdaA3Js+jlit3PbF5B8iuyEk2K/ds+kvwK3wHPne1jwSS/ovWNyDkp
s3ySXxG7W4Rlz9Nakl9x+qb7ukc/yzGkd6oNylF/51UHkN5pn/s9DpmXjQDp
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
yZHqd2NMUHy++KaYOY3Mvz3SXqDZfrEe6E1uElp1rxNMPfdn+PycilXHu9i9
yGCGhTv37uV4RSPzad0Mkldl8s2Ak7wxi5+62sDkQ/VEDw8q9lsloKhXnhkq
dAfPVYfQAH9ItknLbAdwX6fdY0Dc7+Tw61vNg5ihycONfTdT/vv3UN6rDGvt
qbDCOvL5i+uIyRRH1U/gYxhUacjeBfrrmbBFH6Le/OSc0NzIDNPPP8twfUoD
R/pFtLlb28GzC2pX5YKomGdST66HPjPk27m+79xbGpmXelwl4WcAXyWph1tt
YhAhNt/8bx6q5oxE0ipnDOnhqtk2txa2VWNID/eIMzDtuVMH5q7zKaH6SiMw
zjybsF6lB0P5qDza+QcHw6gYykd9OiScOzveg6F8VObMyNgtLV1kPqrozI7r
VXNtZP7QDaVDXVu8Jkh9W0lh0OOTIbMA5ZNa6n8oCDqwCFA+6UWpPcl2STRQ
3HSmOOoKC1yRIK0p17i47Pdnhaq79h13b5gn80o95Qtns97PAPT8bNw/qryM
qYvMC/1yx2js9MNGMi9039tjyZf21gL6+0F/no/yQTfwTY0kWXqS+aDXp4sO
DOrhZD7oaGPy0ha5GjIf1KeL68296J8Y0s8VmE2k79haB5B+7ifjPW/rA40A
6eduTtmbwpuFGNLPyY8drwapzZgv94trEi614E1LHOvbxC4M5YsW7rV537uN
iqF80RVSV09fuU/F3nXeW8w42guGJgrLzXh6yPzPtds/NeacnQYo//PVk4FT
oQnzAOV/qsY7Sl8CNOBlJpz3kcoMedbcHHpwn6hnlxLkpCZZ4MYfP89olC0A
lA9acPK327u1c2Qe5yuhxo7fti2AzONU8OJpfF1P5nG6qVSahr6vIvM4pwKV
Bg1kS8n8Tb0foaVX7sSS+ZvyvpNLusGpZP4mxzGjTy7GpWT+pljy6ubcthoM
6e3mNYt0NxQ2AXnZ+gfXb1YDA8qeXx2xnZg1LQreO90M3pgaZZt968G+Pbde
FyDbCbKjshRriPkG5SNcTPC+J+/fQ+ZxJu9fW/MxeQ6gPE4FNgOG90T9pbJ/
5YGdMcyQ8ucHn3YiMT6X8zm5ZPjzRianAcrLPLC6OsST2krmZaa59W/dd7OB
zMuUnjvtHEzso34uPw8d9nq/J2xdN7bJ9vqVtoNtINha8r3LNaJ+FlnF/0C7
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
fmqtdXuGOLgo+834Hbofk696f/oL6CBhSfjd62HkWD/LBF8XLe9cj+rR4vc6
k69qs0GZLCtoJ5pnsd+I3pL0lwGQP9ZfSIGdp5sce6V7YNjD/CObpRmguntV
TbgaCTsi9qfBKSyQHOQnr4++X7O7r1FPVRbUWHbOmoDymZ3Ydp5UNAc8Dmer
ZdFQv3Tq81atpW3E6yM3N5eEcgnHh5c0pfzpgL7cNl2IrudagydGvyMZwMHH
0G4/Oh9m8i62PmVssC1d3aUDrR/R64H9lNT1ZV0Y5SS1X6LcRaeppuxWiP2O
tq1d6fCx8y/lr3R2gvit3Q9/Uf5JS2s9z7w910b5D3U2rKc9eNBA7T8Y/0VS
VWrKELV/oXaqdIzCjFpqP8He9UpFUgOfKP+gttBdq3OqPoz5FfUTF87rbLmh
vInye3q0e7Ngw66PlL/TCaPTgotdjZS/UNemYg2jyC7Kf4hsXN750quX2s8w
P0dSa8Sgn9o/UfJ+as7fgB4C+y+dNN3lWKVCUvsjHrFWCW9U+Untn2h/JcU+
d2sHgf2XXI/W5IjJthDYT0lnS3GwHy2P8pN64PedPzq5GWI/qdTRZh0vtzpq
/0rN44/dbIY/j+03KQHuLb5xm90yTGD/pZ+Gv5ZfFoPUfpWuKXkapw6MEHg/
zPLb/JwinUTK36rO+OM2idh2iP1tZOfuNjFa1/iPn41zyKyXr2spf5k13Xbl
QTPa4c4xvyK7nAvnzOfVU35Fjg4Be0rXpsEnY35F7REOwU+isH+WIgCBalFd
5k0E9g8SLqJf8ZjdSWA/l8BDtA+n0H2G9wtMv540Wnq4iMD+RXN7d1/uCemk
/F0OZq6ufN34mRga2z+tb2UxUfm+ivIzCrHc7pZTxaf8h+If/ZmXNNRB+b08
f767371bAM3G/Hfg8qyJ1n2x/9E7Yv+XVFPVArkVg//hzUTvX9H3CaL6L9H+
RlSfIDo/iPL7onokUb5SNP+I9seiz19F672o/lZ0XhDNX6J8s+jzEdH3w6Lr
TfT9z/+1/kT9aETXj6jfjOh6EvUHEV1Pov4coutL1E9HdH2J+qmIrjdRPbbo
+hPV54rqkUTXoyhfJlq/sJ/QQsm43wF7e/7xExr7z2ns+HGcK+W7Koxso2J8
vDjG6wfH+PfhmPLnGvsPXx8c4+PDMd4/Ecf4+uIY77eIY9qY3w2O8fXFMd6v
Ecf4/P77+4eoGO+/iGN8ff79/aNUjPdvxDG+/3CM/YpwjPcTxTG+f3FcPXY9
cfxlTJ+H48neG8xVmRJUrD2Wn3CM9xvFMd6PFMf4/qW+X3vLjcBZUlQ8z1v9
Q+qFf2LMG+AY57d/H580FeN+EscbS/2qBVX/xPj53r/PhwwVL+5LNnznQxc5
/n8+x/M0jjNfrrcyfcWgYvz+/t+/h0nFt/v7V7N4/8Q4P/7797Co+IjrM7W5
U2VFfs8/n+PnQTjeVxvL7ZzFpmLcH+MY50ccB+g6uTjm/BPjfIpj3H/h+IPu
pScv9v4T4/e7OMb1Ace00vhm8UlyIr/nnxjn43//PXkqxvn739//z+c4v/37
+ydSMfZnwrHRWL7FMd5fFcd4/1Uc43yK4/8H3a6gJg==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{4167, 4168, 733}}], 
               PolygonBox[{{1716, 4144, 4142, 806}}], 
               PolygonBox[{{4199, 4200, 1411, 1181, 1018}}], 
               
               PolygonBox[{{4196, 4197, 1364, 1666, 865, 1483, 1253, 1090, 
                978}, {4202, 4203, 1571, 1341, 1654, 963, 1527, 1297, 1134}}], 
               
               PolygonBox[{{1717, 4151, 4152, 810, 770, 723, 1388, 1158, 995, 
                883, 811}}], 
               
               PolygonBox[{{4193, 4194, 1653, 959, 1526, 1296, 1133, 791, 
                1441, 1211, 1048, 936}}], 
               
               PolygonBox[{{1721, 4149, 4150, 1386, 1156, 993, 881, 809, 769, 
                722, 1387, 1157, 994, 882}, {4190, 4191, 1014, 1549, 1319, 
                902, 1500, 1270, 1107, 830, 1463, 1233, 1070, 958}, {1724, 
                4155, 4156, 725, 1390, 1160, 997, 885, 813, 773, 726, 1391, 
                1161, 998}}], 
               
               PolygonBox[{{4187, 4188, 1363, 1665, 861, 1481, 1251, 1088, 
                976, 742, 1406, 1176, 1013, 901, 829}, {1713, 4147, 4148, 
                1553, 1323, 1648, 917, 845, 720, 1385, 1155, 992, 880, 808, 
                768}, {4184, 4185, 1369, 1669, 787, 1437, 1207, 1044, 932, 
                860, 741, 1405, 1175, 1012, 900}}], 
               
               PolygonBox[{{1029, 4145, 4146, 1421, 1191, 1028, 916, 844, 719,
                 1384, 1154, 991, 879, 807, 767, 1422, 1192}}], 
               
               PolygonBox[{{4181, 4182, 1268, 1628, 1105, 1585, 1355, 826, 
                1460, 1230, 1067, 955, 786, 1436, 1206, 1043, 931, 859}}], 
               
               PolygonBox[{{1720, 4153, 4154, 1423, 1193, 1030, 918, 846, 724,
                 1389, 1159, 996, 884, 812, 772, 1424, 1194, 1031, 919, 
                847}}], 
               
               PolygonBox[{{1723, 4157, 4158, 886, 814, 774, 1425, 1195, 1032,
                 920, 848, 727, 1392, 1162, 999, 887, 815, 1451, 1221, 1058, 
                946}, {4178, 4179, 974, 1533, 1303, 1140, 738, 1402, 1172, 
                1009, 1547, 1317, 897, 1497, 1267, 1104, 825, 1459, 1229, 
                1066, 1568}, {4172, 4174, 1352, 1659, 822, 1456, 1226, 1063, 
                951, 1521, 1291, 1128, 782, 1432, 1202, 1039, 1556, 1326, 927,
                 1507, 1277}}], 
               
               PolygonBox[{{1714, 4165, 4166, 1335, 1652, 950, 1520, 1290, 
                1127, 779, 1430, 1200, 1037, 925, 853, 732, 1397, 1167, 1004, 
                892, 820, 780}}], 
               
               PolygonBox[{{1668, 4175, 4173, 1610, 1007, 1545, 1315, 895, 
                1495, 1265, 1102, 1583, 1353, 823, 1457, 1227, 1064, 1566, 
                1336, 952, 1522, 1292, 1639, 1129, 1597, 1367}}], 
               
               PolygonBox[{{1618, 4163, 4164, 1609, 1002, 1543, 1313, 890, 
                1493, 1263, 1100, 818, 1454, 1224, 1061, 949, 778, 1429, 1199,
                 1036, 924, 852, 731, 1396, 1166, 1003, 891, 819, 1455, 
                1225}}], 
               
               PolygonBox[{{1661, 4207, 4208, 750, 1415, 1185, 1022, 910, 838,
                 1471, 1241, 1078, 966, 798, 1448, 1218, 1055, 943, 871, 1489,
                 1259, 1096, 984, 751, 1416, 1186, 1023, 1552, 1322, 911, 
                1504, 1274, 1630, 1111, 1587, 1357}}], 
               
               PolygonBox[{{1112, 4159, 4160, 775, 1426, 1196, 1033, 921, 849,
                 1473, 1243, 1080, 968, 728, 1393, 1163, 1000, 888, 1491, 
                1261, 1098, 816, 1452, 1222, 1059, 947, 1518, 1288, 1125, 776,
                 1427, 1197, 1034, 1554, 1324, 922, 1505, 1275, 1631}}], 
               
               PolygonBox[{{1377, 4205, 4206, 1516, 1286, 1123, 869, 1487, 
                1257, 1094, 982, 1539, 1309, 1146, 749, 1414, 1184, 1021, 909,
                 837, 1470, 1240, 1077, 965, 797, 1447, 1217, 1054, 942, 1517,
                 1287, 1124, 870, 1488, 1258, 1095, 1580, 1350, 983, 1540, 
                1310, 1645, 1147, 1607}}], 
               
               PolygonBox[{{1165, 4161, 4162, 1588, 1358, 1662, 850, 1474, 
                1244, 1081, 969, 1529, 1299, 1136, 729, 1394, 1164, 1001, 
                1542, 1312, 889, 1492, 1262, 1625, 1099, 1581, 1351, 817, 
                1453, 1223, 1617, 1060, 1564, 1334, 1651, 948, 1519, 1289, 
                1638, 1126, 1596, 1366, 1667, 777, 1428, 1198, 1614, 1035, 
                1555, 1325, 1649, 923, 1506, 1276, 1632, 1113, 1589, 1359, 
                851, 1475, 1245, 1082, 1573, 1343, 970, 1530, 1300, 1137, 
                1600, 1370, 730, 1395}}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{4167, 4169, 1706}}], 
               
               PolygonBox[{{1380, 4211, 4212, 1712, 763, 803, 875, 987, 
                1150}}], 
               
               PolygonBox[{{713, 4140, 4141, 1705, 714, 762, 802, 874, 986, 
                1149, 1379}}], 
               
               PolygonBox[{{1381, 4213, 4214, 1719, 842, 914, 1026, 1189, 
                1419, 764, 804, 876, 988, 1151}}], 
               
               PolygonBox[{{717, 4143, 4142, 878, 990, 1153, 1383, 718, 843, 
                915, 1027, 1190, 1420, 765, 805, 877, 989, 1152, 1382}, {4184,
                 4186, 1593, 1118, 1636, 1281, 1511, 933, 1330, 1560, 1045, 
                1208, 1438, 788, 957, 1069, 1232, 1462, 828}}], 
               
               PolygonBox[{{4187, 4189, 1612, 1177, 1407, 743, 1374, 1604, 
                1142, 1305, 1535, 977, 1089, 1252, 1482, 862, 934, 1046, 1209,
                 1439, 789}}], 
               
               PolygonBox[{{4181, 4183, 1599, 1132, 1640, 1295, 1525, 956, 
                1339, 1569, 1068, 1231, 1461, 827, 1106, 1269, 1499, 899, 
                1011, 1174, 1404, 740}, {4190, 4192, 1570, 1071, 1619, 1234, 
                1464, 831, 1108, 1271, 1501, 903, 1015, 1178, 1408, 744, 863, 
                935, 1047, 1210, 1440, 790}}], 
               
               PolygonBox[{{4193, 4195, 1119, 1637, 1282, 1512, 937, 1331, 
                1561, 1049, 1212, 1442, 792, 960, 1072, 1235, 1465, 832, 904, 
                1016, 1179, 1409, 745, 864}}], 
               
               PolygonBox[{{4172, 4173, 1170, 1400, 736, 1670, 1371, 1601, 
                1138, 1641, 1301, 1531, 972, 1655, 1344, 1574, 1084, 1621, 
                1247, 1477, 855, 1663, 1360, 1590, 1114, 1633}}], 
               
               PolygonBox[{{1398, 4170, 4171, 1582, 1101, 1626, 1264, 1494, 
                894, 1314, 1544, 1006, 1169, 1399, 735, 971, 1083, 1246, 1476,
                 854, 926, 1038, 1201, 1431, 781, 821, 893, 1005, 1168}}], 
               
               PolygonBox[{{4196, 4198, 1672, 1375, 1605, 1143, 1643, 1306, 
                1536, 979, 1348, 1578, 1091, 1254, 1484, 866, 1120, 1283, 
                1513, 938, 1050, 1213, 1443, 793, 961, 1073, 1236, 1466, 833, 
                905, 1017, 1180, 1410, 746}}], 
               
               PolygonBox[{{4199, 4201, 1075, 1620, 1238, 1468, 835, 1109, 
                1272, 1502, 907, 1320, 1550, 1019, 1182, 1412, 747, 1144, 
                1307, 1537, 980, 1092, 1255, 1485, 867, 1121, 1284, 1514, 939,
                 1051, 1214, 1444, 794, 962, 1074, 1237, 1467, 834, 906}}], 
               
               PolygonBox[{{4178, 4180, 898, 1646, 1318, 1548, 1010, 1173, 
                1403, 739, 1373, 1603, 1141, 1304, 1534, 975, 1347, 1577, 
                1087, 1250, 1480, 858, 1362, 1592, 1117, 1635, 1280, 1510, 
                930, 1329, 1559, 1042, 1615, 1205, 1435, 785, 1368, 1598, 
                1131, 1294, 1524, 954, 1338}}], 
               
               PolygonBox[{{1472, 4209, 4210, 761, 1675, 1378, 1608, 1148, 
                1311, 1541, 985, 1097, 1260, 1490, 873, 945, 1057, 1220, 1450,
                 801, 1718, 841, 913, 1025, 1188, 1418, 760, 1711, 759, 758, 
                1710, 757, 1709, 756, 1708, 755, 754, 1707, 753, 1715, 800, 
                840, 912, 1024, 1187, 1417, 752, 872, 944, 1056, 1219, 1449, 
                799, 967, 1079, 1242}}], 
               
               PolygonBox[{{4202, 4204, 1333, 1563, 1053, 1616, 1216, 1446, 
                796, 1135, 1298, 1528, 964, 1342, 1572, 1076, 1239, 1469, 836,
                 1660, 1356, 1586, 1110, 1629, 1273, 1503, 908, 1647, 1321, 
                1551, 1020, 1613, 1183, 1413, 748, 1673, 1376, 1606, 1145, 
                1644, 1308, 1538, 981, 1658, 1349, 1579, 1093, 1624, 1256, 
                1486, 868, 1365, 1595, 1122, 1285, 1515, 940, 1332, 1562, 
                1052, 1215, 1445, 795}}], 
               
               PolygonBox[{{1433, 4176, 4177, 1346, 1576, 1086, 1623, 1249, 
                1479, 857, 1116, 1279, 1509, 929, 1328, 1558, 1041, 1204, 
                1434, 784, 1130, 1293, 1523, 953, 1337, 1567, 1065, 1228, 
                1458, 824, 1354, 1584, 1103, 1627, 1266, 1496, 896, 1316, 
                1546, 1008, 1611, 1171, 1401, 737, 1671, 1372, 1602, 1139, 
                1642, 1302, 1532, 973, 1656, 1345, 1575, 1085, 1622, 1248, 
                1478, 856, 1664, 1361, 1591, 1115, 1634, 1278, 1508, 928, 
                1327, 1557, 1040, 
                1203}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1, 466, 331, 601, 221, 576, 441, 617, 139, 549, 414, 
               609, 304, 590, 455, 82, 523, 388, 278, 583, 448, 195, 565, 430,
                320, 51, 498, 363, 253, 171, 558, 423, 313, 114, 537, 402, 
               292, 209, 2, 467, 332, 222, 140, 83, 524, 389, 279, 656}], 
              
              LineBox[{196, 52, 499, 364, 254, 172, 115, 3, 468, 333, 223, 
               141, 84, 53, 642}], 
              LineBox[{4, 629}], 
              LineBox[{5, 6, 630}], 
              LineBox[{7, 469, 334, 224, 142, 85, 54, 500, 365, 255}], 
              
              LineBox[{173, 116, 8, 470, 335, 225, 143, 86, 55, 501, 366, 256,
                174, 117, 649}], 
              
              LineBox[{471, 336, 226, 144, 87, 56, 502, 367, 257, 175, 118, 
               10, 472, 337, 227, 145, 651}], 
              
              LineBox[{88, 525, 390, 280, 197, 57, 503, 368, 258, 176, 559, 
               424, 314, 119, 538, 403, 293, 210, 570, 435, 325, 11, 473, 338,
                228, 577, 442, 146, 550, 415, 610, 305, 591, 456, 89, 526, 
               391, 606, 281, 584, 449, 620, 198, 566, 431, 614, 321, 596}], 
              
              LineBox[{625, 58, 504, 369, 604, 259, 580, 445, 619, 177, 560, 
               425, 612, 315, 594, 459, 120, 539, 404, 294, 587, 452, 211, 
               571, 436, 326, 12, 474, 339, 229, 147, 551, 416, 306, 90, 527, 
               392, 282, 199, 59, 505, 370, 260, 178, 121, 540, 405, 295}], 
              
              LineBox[{212, 13, 475, 340, 230, 148, 91, 528, 393, 283, 200, 
               60, 506, 371, 261, 179, 122, 14, 476, 341, 231, 654}], 
              
              LineBox[{149, 92, 61, 507, 372, 262, 180, 123, 15, 477, 342, 
               232, 150, 93, 645}], 
              
              LineBox[{62, 508, 373, 263, 181, 124, 16, 478, 343, 233, 151, 
               94, 63, 643}], 
              LineBox[{479, 344, 234, 152, 95, 64, 18, 631}], 
              LineBox[{19, 632}], 
              LineBox[{20, 633}], 
              LineBox[{21, 634}], 
              LineBox[{22, 23, 635}], 
              LineBox[{24, 636}], 
              LineBox[{25, 637}], 
              LineBox[{26, 27, 638}], 
              LineBox[{28, 639}], 
              LineBox[{29, 640}], 
              LineBox[{30, 31, 480, 345, 235}], 
              LineBox[{153, 96, 65, 32, 481, 346, 236, 154, 97, 646}], 
              
              LineBox[{66, 33, 482, 347, 237, 155, 98, 67, 509, 374, 264, 182,
                652}], 
              
              LineBox[{125, 34, 483, 348, 238, 156, 99, 68, 510, 375, 265, 
               183, 126, 650}], 
              
              LineBox[{484, 349, 239, 157, 100, 69, 511, 376, 266, 184, 127, 
               36, 485, 350, 240, 158, 101, 529, 394, 284}], 
              
              LineBox[{201, 70, 512, 377, 267, 185, 128, 541, 406, 296, 213, 
               37, 486, 351, 241, 159, 552, 417, 307, 102, 530, 395, 285, 202,
                567, 432, 322, 71, 513, 378, 268, 581, 446}], 
              
              LineBox[{561, 426, 613, 316, 595, 460, 624, 129, 542, 407, 608, 
               297, 588, 453, 622, 214, 572, 437, 616, 327, 598, 463, 627, 38,
                487, 352, 602, 242, 578, 443, 618, 160, 553, 418, 308, 592, 
               457, 103, 531, 396, 286, 585, 450, 203, 568, 433, 323, 72, 514,
                379, 269, 186, 562, 427, 317, 130, 543, 408, 298, 215, 653}], 
              
              LineBox[{39, 488, 353, 243, 161, 554, 419, 309, 104, 532, 397, 
               287, 204, 73, 515, 380, 270, 187, 131, 544, 409, 299, 216, 40, 
               489, 354, 244, 162, 105}], 
              LineBox[CompressedData["
1:eJwV0jlPVGEARuErUVAaRAUtGaBhRySIhVBgCIuImBhNiCEBVERl0NCqgCJq
Idi6VLIHGxOVAmVLLExAKFl+Aa4UbkDhc4uT857vu5NcmIk0Rs+07QiC4A12
xgTBLZGASX0PGVjXTfhlv0Qrkjz72FkK5nUVdjm7rffive5BxNlTnY1lnYkv
djN+2wPI8syALsJVnaz77AgWdDVind3Rifigj+hxuwT3dap+Zuegxv7IK86P
22/tCpyzFznL+Ve+iHpnf3QZT+pBO9seDP9mPsp1/ImjfM39Qe7XDZzKVTzH
1/mz+2P8Wl/mE3yWF/gmn3Qfx536Au/jcp7iKXeF9iu7FL06TT+3c7GqS/Q7
uzL8n+pvfAl/7SHkuB/SxeH76EP6iZ2GRV2D3c669H5M6wfh5/A9fGf8s4fR
hl7PnuI93O3uAGb0Q+Tih27Bpj2CKGrD347n8/inuyvYskfRjtPIR5dnDvOG
+1Zs22O4Eb6TuzqO57vukjCrHyHd2QudhzVdqifC7wHn7SXu4AJ3/wF+5VVy

               "]]}, Annotation[#, "Charting`Private`Tag$55411#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[{713, 1379, 1149, 986, 874, 802, 762, 714, 1705}], 
              
              LineBox[{717, 1382, 1152, 989, 877, 805, 765, 1420, 1190, 1027, 
               915, 843, 718, 1383, 1153, 990, 878, 4142, 806, 1716}], 
              
              LineBox[{1421, 1191, 1028, 916, 844, 719, 1384, 1154, 991, 879, 
               807, 767, 1422, 1192, 1029}], 
              
              LineBox[{1553, 1323, 1648, 917, 845, 720, 1385, 1155, 992, 880, 
               808, 768, 1713}], 
              
              LineBox[{1386, 1156, 993, 881, 809, 769, 722, 1387, 1157, 994, 
               882, 1721}], 
              LineBox[{810, 770, 723, 1388, 1158, 995, 883, 811, 1717}], 
              LineBox[{1423, 1193, 1030, 918, 846, 724, 1389, 1159, 996, 884, 
               812, 772, 1424, 1194, 1031, 919, 847, 1720}], 
              
              LineBox[{725, 1390, 1160, 997, 885, 813, 773, 726, 1391, 1161, 
               998, 1724}], 
              
              LineBox[{886, 814, 774, 1425, 1195, 1032, 920, 848, 727, 1392, 
               1162, 999, 887, 815, 1451, 1221, 1058, 946, 1723}], 
              
              LineBox[{775, 1426, 1196, 1033, 921, 849, 1473, 1243, 1080, 968,
                728, 1393, 1163, 1000, 888, 1491, 1261, 1098, 816, 1452, 1222,
                1059, 947, 1518, 1288, 1125, 776, 1427, 1197, 1034, 1554, 
               1324, 922, 1505, 1275, 1631, 1112}], 
              
              LineBox[{1588, 1358, 1662, 850, 1474, 1244, 1081, 969, 1529, 
               1299, 1136, 729, 1394, 1164, 1001, 1542, 1312, 889, 1492, 1262,
                1625, 1099, 1581, 1351, 817, 1453, 1223, 1617, 1060, 1564, 
               1334, 1651, 948, 1519, 1289, 1638, 1126, 1596, 1366, 1667, 777,
                1428, 1198, 1614, 1035, 1555, 1325, 1649, 923, 1506, 1276, 
               1632, 1113, 1589, 1359, 851, 1475, 1245, 1082, 1573, 1343, 970,
                1530, 1300, 1137, 1600, 1370, 730, 1395, 1165}], 
              
              LineBox[{1609, 1002, 1543, 1313, 890, 1493, 1263, 1100, 818, 
               1454, 1224, 1061, 949, 778, 1429, 1199, 1036, 924, 852, 731, 
               1396, 1166, 1003, 891, 819, 1455, 1225, 1618}], 
              
              LineBox[{1335, 1652, 950, 1520, 1290, 1127, 779, 1430, 1200, 
               1037, 925, 853, 732, 1397, 1167, 1004, 892, 820, 780, 1714}], 
              LineBox[{733, 4167, 1706}], 
              
              LineBox[{1398, 1168, 1005, 893, 821, 781, 1431, 1201, 1038, 926,
                854, 1476, 1246, 1083, 971, 735, 1399, 1169, 1006, 1544, 1314,
                894, 1494, 1264, 1626, 1101, 1582}], 
              
              LineBox[{1352, 1659, 822, 1456, 1226, 1063, 951, 1521, 1291, 
               1128, 782, 1432, 1202, 1039, 1556, 1326, 927, 1507, 1277, 4172,
                1633, 1114, 1590, 1360, 1663, 855, 1477, 1247, 1621, 1084, 
               1574, 1344, 1655, 972, 1531, 1301, 1641, 1138, 1601, 1371, 
               1670, 736, 1400, 1170, 4173, 1610, 1007, 1545, 1315, 895, 1495,
                1265, 1102, 1583, 1353, 823, 1457, 1227, 1064, 1566, 1336, 
               952, 1522, 1292, 1639, 1129, 1597, 1367, 1668}], 
              
              LineBox[{1433, 1203, 1040, 1557, 1327, 928, 1508, 1278, 1634, 
               1115, 1591, 1361, 1664, 856, 1478, 1248, 1622, 1085, 1575, 
               1345, 1656, 973, 1532, 1302, 1642, 1139, 1602, 1372, 1671, 737,
                1401, 1171, 1611, 1008, 1546, 1316, 896, 1496, 1266, 1627, 
               1103, 1584, 1354, 824, 1458, 1228, 1065, 1567, 1337, 953, 1523,
                1293, 1130, 784, 1434, 1204, 1041, 1558, 1328, 929, 1509, 
               1279, 1116, 857, 1479, 1249, 1623, 1086, 1576, 1346}], 
              
              LineBox[{974, 1533, 1303, 1140, 738, 1402, 1172, 1009, 1547, 
               1317, 897, 1497, 1267, 1104, 825, 1459, 1229, 1066, 1568, 4178,
                1338, 954, 1524, 1294, 1131, 1598, 1368, 785, 1435, 1205, 
               1615, 1042, 1559, 1329, 930, 1510, 1280, 1635, 1117, 1592, 
               1362, 858, 1480, 1250, 1087, 1577, 1347, 975, 1534, 1304, 1141,
                1603, 1373, 739, 1403, 1173, 1010, 1548, 1318, 1646, 898}], 
              
              LineBox[{1268, 1628, 1105, 1585, 1355, 826, 1460, 1230, 1067, 
               955, 786, 1436, 1206, 1043, 931, 859, 4181, 740, 1404, 1174, 
               1011, 899, 1499, 1269, 1106, 827, 1461, 1231, 1068, 1569, 1339,
                956, 1525, 1295, 1640, 1132, 1599}], 
              
              LineBox[{1369, 1669, 787, 1437, 1207, 1044, 932, 860, 741, 1405,
                1175, 1012, 900, 4184, 828, 1462, 1232, 1069, 957, 788, 1438, 
               1208, 1045, 1560, 1330, 933, 1511, 1281, 1636, 1118, 1593}], 
              
              LineBox[{1363, 1665, 861, 1481, 1251, 1088, 976, 742, 1406, 
               1176, 1013, 901, 829, 4187, 789, 1439, 1209, 1046, 934, 862, 
               1482, 1252, 1089, 977, 1535, 1305, 1142, 1604, 1374, 743, 1407,
                1177, 1612}], 
              
              LineBox[{1014, 1549, 1319, 902, 1500, 1270, 1107, 830, 1463, 
               1233, 1070, 958, 4190, 790, 1440, 1210, 1047, 935, 863, 744, 
               1408, 1178, 1015, 903, 1501, 1271, 1108, 831, 1464, 1234, 1619,
                1071, 1570}], 
              
              LineBox[{1653, 959, 1526, 1296, 1133, 791, 1441, 1211, 1048, 
               936, 4193, 864, 745, 1409, 1179, 1016, 904, 832, 1465, 1235, 
               1072, 960, 792, 1442, 1212, 1049, 1561, 1331, 937, 1512, 1282, 
               1637, 1119}], 
              
              LineBox[{1364, 1666, 865, 1483, 1253, 1090, 978, 4196, 746, 
               1410, 1180, 1017, 905, 833, 1466, 1236, 1073, 961, 793, 1443, 
               1213, 1050, 938, 1513, 1283, 1120, 866, 1484, 1254, 1091, 1578,
                1348, 979, 1536, 1306, 1643, 1143, 1605, 1375, 1672}], 
              
              LineBox[{1411, 1181, 1018, 4199, 906, 834, 1467, 1237, 1074, 
               962, 794, 1444, 1214, 1051, 939, 1514, 1284, 1121, 867, 1485, 
               1255, 1092, 980, 1537, 1307, 1144, 747, 1412, 1182, 1019, 1550,
                1320, 907, 1502, 1272, 1109, 835, 1468, 1238, 1620, 1075}], 
              
              LineBox[{1571, 1341, 1654, 963, 1527, 1297, 1134, 4202, 795, 
               1445, 1215, 1052, 1562, 1332, 940, 1515, 1285, 1122, 1595, 
               1365, 868, 1486, 1256, 1624, 1093, 1579, 1349, 1658, 981, 1538,
                1308, 1644, 1145, 1606, 1376, 1673, 748, 1413, 1183, 1613, 
               1020, 1551, 1321, 1647, 908, 1503, 1273, 1629, 1110, 1586, 
               1356, 1660, 836, 1469, 1239, 1076, 1572, 1342, 964, 1528, 1298,
                1135, 796, 1446, 1216, 1616, 1053, 1563, 1333}], 
              
              LineBox[{1516, 1286, 1123, 869, 1487, 1257, 1094, 982, 1539, 
               1309, 1146, 749, 1414, 1184, 1021, 909, 837, 1470, 1240, 1077, 
               965, 797, 1447, 1217, 1054, 942, 1517, 1287, 1124, 870, 1488, 
               1258, 1095, 1580, 1350, 983, 1540, 1310, 1645, 1147, 1607, 
               1377}], 
              
              LineBox[{750, 1415, 1185, 1022, 910, 838, 1471, 1241, 1078, 966,
                798, 1448, 1218, 1055, 943, 871, 1489, 1259, 1096, 984, 751, 
               1416, 1186, 1023, 1552, 1322, 911, 1504, 1274, 1630, 1111, 
               1587, 1357, 1661}], 
              
              LineBox[{1472, 1242, 1079, 967, 799, 1449, 1219, 1056, 944, 872,
                752, 1417, 1187, 1024, 912, 840, 800, 1715, 753, 1707, 754, 
               755, 1708, 756, 1709, 757, 1710, 758, 759, 1711, 760, 1418, 
               1188, 1025, 913, 841, 1718, 801, 1450, 1220, 1057, 945, 873, 
               1490, 1260, 1097, 985, 1541, 1311, 1148, 1608, 1378, 1675, 
               761}], 
              LineBox[{1380, 1150, 987, 875, 803, 763, 1712}], 
              
              LineBox[{1381, 1151, 988, 876, 804, 764, 1419, 1189, 1026, 914, 
               842, 1719}]}, Annotation[#, "Charting`Private`Tag$55411#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{1768, 2115, 2019, 2211, 1941, 2193, 2097, 2222, 1881, 
               2175, 2079, 2216, 2001, 2203, 2107, 1840, 2156, 2060, 1982, 
               2198, 2102, 1922, 2185, 2089, 2011, 1818, 2138, 2042, 1964, 
               1904, 2180, 2084, 2006, 1863, 2166, 2070, 1992, 1932, 1769, 
               2116, 2020, 1942, 1882, 1841, 2157, 2061, 1983, 2288}], 
              
              LineBox[{1923, 1819, 2139, 2043, 1965, 1905, 1864, 1770, 2117, 
               2021, 1943, 1883, 1842, 1820, 2279}], 
              LineBox[{1771, 2259}], 
              LineBox[{1772, 1773, 2260}], 
              LineBox[{1774, 2261}], 
              LineBox[{1775, 2262}], 
              
              LineBox[{2118, 2022, 1944, 1884, 1843, 1821, 1777, 2119, 2023, 
               1945, 1885, 2283}], 
              
              LineBox[{1844, 1822, 2140, 2044, 1966, 1906, 1865, 1778, 2120, 
               2024, 1946, 1886, 1845, 2280}], 
              
              LineBox[{2141, 2045, 1967, 1907, 1866, 1779, 2121, 2025, 1947, 
               1887, 1846, 2158, 2062, 1984, 1924, 1824, 2142, 2046, 1968, 
               1908, 1867, 2167, 2071, 1993}], 
              
              LineBox[{1933, 1780, 2122, 2026, 1948, 1888, 2176, 2080, 2002, 
               1847, 2159, 2063, 1985, 1925, 2186, 2090, 2012, 1825, 2143, 
               2047, 1969, 2196, 2100, 1909, 2181, 2085, 2007, 2206, 2110, 
               1868, 2168, 2072, 2215, 1994, 2201, 2105, 2226, 1934, 2189, 
               2093, 2221, 2015, 2209, 2113, 2228, 1781, 2123, 2027, 2212, 
               1949, 2194, 2098}], 
              
              LineBox[{2177, 2081, 2217, 2003, 2204, 2108, 1848, 2160, 2064, 
               1986, 2199, 2103, 1926, 2187, 2091, 2013, 1826, 2144, 2048, 
               1970, 1910, 2182, 2086, 2008, 1869, 2169, 2073, 1995, 1935, 
               1782, 2124, 2028, 1950, 1890, 1849, 2161, 2065, 1987, 1927, 
               2285}], 
              
              LineBox[{1827, 2145, 2049, 1971, 1911, 1870, 1783, 2125, 2029, 
               1951, 1891, 1850, 1828, 2146, 2050, 1972, 1912, 2284}], 
              LineBox[{1871, 1784, 2126, 2030, 1952, 1892, 1851, 1829, 2147, 
               2051, 1973, 1913, 1872, 1785, 2127, 2031}], 
              LineBox[{1953, 1893, 1852, 1830, 1786, 2263}], 
              LineBox[{1787, 2264}], 
              LineBox[{1788, 2265}], 
              LineBox[{1789, 1790, 2266}], 
              LineBox[{1791, 2267}], 
              LineBox[{1792, 2268}], 
              LineBox[{1793, 1794, 2269}], 
              LineBox[{1795, 2270}], 
              LineBox[{1796, 2271}], 
              LineBox[{1797, 1798, 2272}], 
              LineBox[{1799, 2273}], 
              LineBox[{1800, 2274}], 
              LineBox[{1801, 2275}], 
              LineBox[{1802, 1803, 2276}], 
              LineBox[{1804, 2277}], 
              LineBox[{1805, 2278}], 
              LineBox[{1806, 1807, 2128, 2032, 1954, 1894, 1853}], 
              LineBox[CompressedData["
1:eJwV0ltMznEcBvC/DSU36SQVGy4KFZvZzJYODvdecri1kFCbcuOQ0wVildNm
NmMoVBe1RoQbQzdOF1xwYbjTRVYOcefzvfjseZ7f++59/+9v7/ztTanGKUmS
PKMuPUmm8iAtSQ6ygcxIZ+PyFrtYTTE7nE+L1xiyD5FiVqSzCXmbeirZ7yyL
5/ppSthpT+ehfpiN8d12Aa/0TrLi3P4pu9hNFc3Osnmhn2FRPJ+dxiP9CKf0
Yj7qm+IZ9UJe6+dp18v5omfHe/RfspuL+nIa9BNyAT28t6/JCqr1FplDNy/t
K3IlA7TZ52QpfXy2b8gqBlkc9yPT6WLYvixX0E9r3JUsoZdP9nVZSW3cmSzi
jX5VruKC3iGX8lXPoVb/Le+wh5P2Qj7oNRzQcxnRzzKmL4m7ljN4rB9lc9yr
PZe3cUfkxrn9R95lL2sopcF5Bk/0Y2xh1M6LLiflPfaxljJms9Vrf2UPP/RG
uY5y8tnm7J/spYn1fI/fHL9PzuSpfjw+i1Z7Hu/0S/G/0pfxTb8pa7jPHPs/
8I5g3A==
               "]]}, Annotation[#, "Charting`Private`Tag$55411#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{2347, 2740, 2628, 2538, 2469, 2423, 2397, 2766, 2654, 
               2564, 2495, 2448, 2348, 2741, 2629, 2539, 2470, 2424, 2924}], 
              
              LineBox[{2398, 2767, 2655, 2565, 2496, 2449, 2349, 2742, 2630, 
               2540, 2471, 2425, 2787, 2675, 2585, 2516, 2399, 2768, 2656, 
               2566, 2497}], 
              
              LineBox[{2798, 2687, 2597, 2528, 2350, 2743, 2631, 2541, 2472, 
               2808, 2697, 2607, 2426, 2788, 2676, 2586, 2517, 2820, 2709, 
               2619, 2400, 2769, 2657, 2567, 2831, 2720, 2498, 2815, 2704, 
               2614, 2451, 2799, 2688, 2598, 2838, 2727, 2529, 2825, 2714, 
               2860, 2624, 2847, 2736, 2931}], 
              
              LineBox[{2351, 2744, 2632, 2851, 2542, 2829, 2718, 2863, 2473, 
               2809, 2698, 2856, 2608, 2840, 2729, 2867, 2427, 2789, 2677, 
               2853, 2587, 2835, 2724, 2865, 2518, 2821, 2710, 2620, 2845, 
               2734, 2401, 2770, 2658, 2568, 2832, 2721, 2499, 2816, 2705, 
               2615, 2452, 2800, 2689, 2599, 2530, 2352, 2745, 2633, 2543, 
               2474, 2428, 2790}], 
              
              LineBox[{2678, 2588, 2519, 2402, 2771, 2659, 2569, 2500, 2453, 
               2353, 2746, 2634, 2544, 2475, 2429, 2403, 2921}], 
              LineBox[{2354, 2747, 2635, 2545, 2476, 2430, 2404, 2922}], 
              LineBox[{2355, 2356, 2904}], 
              LineBox[{2357, 2905}], 
              LineBox[{2358, 2906}], 
              LineBox[{2359, 2360, 2907}], 
              LineBox[{2361, 2908}], 
              LineBox[{2362, 2909}], 
              
              LineBox[{2748, 2636, 2546, 2477, 2431, 2405, 2772, 2660, 2570, 
               2501, 2454, 2364, 2749, 2637}], 
              
              LineBox[{2547, 2478, 2432, 2791, 2679, 2589, 2520, 2406, 2773, 
               2661, 2571, 2502, 2455, 2801, 2690, 2600, 2531, 2365, 2750, 
               2638, 2548, 2479, 2810, 2699, 2609, 2433, 2792, 2680, 2590}], 
              
              LineBox[{2822, 2711, 2621, 2407, 2774, 2662, 2572, 2833, 2722, 
               2503, 2817, 2706, 2616, 2456, 2802, 2691, 2601, 2839, 2728, 
               2532, 2826, 2715, 2861, 2625, 2848, 2737, 2872, 2366, 2751, 
               2639, 2852, 2549, 2830, 2719, 2864, 2480, 2811, 2700, 2857, 
               2610, 2841, 2730, 2868, 2434, 2793, 2681, 2854, 2591, 2836, 
               2725, 2522, 2823, 2712, 2622, 2846, 2735, 2408, 2775, 2663, 
               2573, 2929}], 
              
              LineBox[{2504, 2818, 2707, 2617, 2457, 2803, 2692, 2602, 2533, 
               2367, 2752, 2640, 2550, 2481, 2435, 2409, 2776, 2664, 2574, 
               2505, 2458, 2926}], 
              
              LineBox[{2753, 2641, 2551, 2482, 2436, 2410, 2777, 2665, 2575, 
               2506, 2459, 2369, 2754, 2642, 2552, 2483, 2812, 2701, 2858, 
               2611, 2842}], 
              
              LineBox[{2731, 2869, 2437, 2794, 2682, 2592, 2523, 2411, 2370, 
               2910}], 
              LineBox[{2371, 2911}], 
              LineBox[{2372, 2373, 2912}], 
              LineBox[{2374, 2913}], 
              LineBox[{2375, 2914}], 
              LineBox[{2376, 2377, 2915}], 
              
              LineBox[{2866, 2524, 2824, 2713, 2623, 2412, 2778, 2666, 2576, 
               2507, 2460, 2804, 2693, 2603, 2534, 2379, 2756, 2644, 2554, 
               2485, 2439, 2796, 2684, 2594, 2525, 2413, 2779, 2667, 2577, 
               2834, 2723, 2508, 2819, 2708, 2859, 2618}], 
              
              LineBox[{2871, 2461, 2805, 2694, 2604, 2535, 2380, 2757, 2645, 
               2555, 2486, 2440, 2797, 2685, 2595, 2526, 2414, 2780, 2668, 
               2578, 2509, 2462, 2806, 2695, 2605, 2536, 2827, 2716, 2862, 
               2626, 2849, 2738, 2873}], 
              
              LineBox[{2758, 2646, 2556, 2487, 2441, 2415, 2781, 2669, 2579, 
               2510, 2463, 2382, 2916}], 
              
              LineBox[{2511, 2464, 2384, 2760, 2648, 2558, 2489, 2443, 2417, 
               2783, 2671, 2581, 2512, 2465, 2927}], 
              
              LineBox[{2385, 2761, 2649, 2559, 2490, 2444, 2418, 2784, 2672, 
               2582, 2513, 2466, 2386, 2762, 2650, 2560, 2491, 2814, 2703, 
               2613, 2843, 2732, 2870}], 
              
              LineBox[{2686, 2596, 2527, 2419, 2785, 2673, 2583, 2514, 2467, 
               2387, 2763, 2651, 2561, 2492, 2445, 2420, 2923, 2388, 2917, 
               2389, 2390, 2918, 2391, 2919, 2392, 2920, 2393, 2394, 2764, 
               2652, 2562, 2928, 2493, 2446, 2421, 2395, 2765, 2653, 2563, 
               2494, 2447, 2925, 2422, 2786, 2674, 2584, 2515, 2468, 2807, 
               2696, 2606, 2537, 2828, 2717, 2627, 2850, 2739, 2874, 2396}], 
              
              LineBox[{2759, 2647, 2557, 2488, 2442, 2416, 2782, 2670, 2580, 
               2930}], 
              
              LineBox[{2755, 2643, 2553, 2484, 2813, 2702, 2612, 2438, 2795, 
               2683, 2855, 2593, 2837}]}, 
             Annotation[#, "Charting`Private`Tag$55411#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              
              LineBox[{2983, 3693, 3431, 3251, 3137, 3070, 3033, 3730, 3468, 
               3288, 3174, 3106, 2984, 3694, 3432, 3252, 3138, 3071, 4088}], 
              
              LineBox[{3034, 3731, 3469, 3289, 3175, 3107, 2985, 3695, 3433, 
               3253, 3139, 3072, 3761, 3499, 3319, 3205, 3035, 3732, 3470, 
               3290, 3176}], 
              
              LineBox[{3108, 2986, 3696, 3434, 3254, 3140, 3073, 3762, 3500, 
               3320, 3206, 3036, 3733, 3471, 3291, 3177, 3824, 3563, 3383, 
               3109, 3785, 3524, 3344, 3230, 4091}], 
              
              LineBox[{2987, 3697, 3435, 3255, 3141, 3806, 3545, 3365, 3074, 
               3763, 3501, 3321, 3895, 3634, 3207, 3841, 3580, 3400, 3934, 
               3673, 3037, 3734, 3472, 3960, 3292, 3884, 3623, 3178, 3825, 
               3564, 3987, 3384, 3926, 3665, 4031, 3110, 3786, 3525, 3974, 
               3345, 3907, 3646, 4019, 3231, 3858, 3597, 3999, 3417, 3944, 
               3683, 4042, 2988, 3698, 3436, 3256, 3872, 3611, 3142, 3807, 
               3546, 3366, 3075, 3764}], 
              
              LineBox[{3502, 3322, 3208, 3842, 3581, 3401, 3038, 3735, 3473, 
               3293, 3179, 3111, 3787, 3526, 3346, 3232, 2989, 3699, 3437, 
               3257, 3143, 3076, 3039, 3736, 3474, 3294}], 
              
              LineBox[{3180, 3112, 2990, 3700, 3438, 3258, 3144, 3077, 3040, 
               4085}], 
              LineBox[{2991, 2992, 4077}], 
              LineBox[{2993, 4078}], 
              
              LineBox[{2995, 3702, 3440, 3260, 3146, 3079, 3042, 2996, 3703, 
               3441, 3261, 4093}], 
              
              LineBox[{3147, 3080, 3043, 2997, 3704, 3442, 3262, 3148, 3081, 
               4089}], 
              LineBox[{3044, 2998, 4079}], 
              LineBox[{2999, 3000, 3705, 3443}], 
              
              LineBox[{3263, 3149, 3082, 3045, 3737, 3475, 3295, 3181, 3113, 
               3001, 3706, 3444, 3264, 3150, 3083, 3765, 3503, 3323}], 
              LineBox[{3209, 3046, 3738, 3476, 3296, 3182, 3826, 3565, 3385, 
               3114, 3788, 3527, 3347, 3233, 3859, 3598, 3418, 3002, 3707, 
               3445, 3265, 3151, 3808, 3547, 3367, 3084, 3766, 3504, 3324, 
               3896, 3635, 3210, 3843, 3582, 3402, 3935, 3674, 3047, 3739, 
               3477, 3961, 3297, 3885, 3624, 4095}], 
              
              LineBox[{3183, 3827, 3566, 3988, 3386, 3927, 3666, 4032, 3115, 
               3789, 3528, 3975, 3348, 3908, 3647, 4020, 3234, 3860, 3599, 
               4000, 3419, 3945, 3684, 3003, 3708, 3446, 3266, 3873, 3612, 
               3152, 3809, 3548, 3368, 3085, 3767, 3505, 3325, 3211, 3844, 
               3583, 3403, 3048, 3740, 3478, 3298, 3184, 3116, 3790, 3529, 
               3349, 3235}], 
              
              LineBox[{3709, 3447, 3267, 3153, 3086, 3049, 3741, 3479, 3299, 
               3185, 3117, 3005, 3710, 3448, 3268, 3874, 3613, 3154, 3810, 
               3549, 3980, 3369, 3916}], 
              
              LineBox[{3655, 4025, 3087, 3768, 3506, 3326, 3212, 3050, 3742, 
               3480, 3300, 3186, 3118, 3006, 3711, 3449, 3269, 3155, 3811, 
               3550, 3370, 3088, 3769, 3507, 3327, 3213, 3845, 3584, 3404, 
               3936, 3675, 4037}], 
              
              LineBox[{3481, 3301, 3187, 3119, 3007, 3712, 3450, 3270, 3156, 
               3089, 3770, 3508, 3328, 3214, 3052, 3744, 3482, 3302, 3188, 
               3828, 3567, 3387, 3120, 3791, 3530, 3976, 3350, 3909, 3648}], 
              
              LineBox[{3861, 3600, 3420, 3946, 3685, 3008, 3713, 3451, 3954, 
               3271, 3875, 3614, 4006, 3157, 3812, 3551, 3981, 3371, 3917, 
               3656, 4026, 3090, 3771, 3509, 3967, 3329, 3897, 3636, 4013, 
               3215, 3846, 3585, 3994, 3405, 3937, 3676, 3053, 3745, 3483, 
               3303, 3189, 3829, 3568, 3388, 3121, 3792, 3531, 3351, 3237, 
               3009, 3714, 3452, 3272, 3876, 3615, 4007, 3158}], 
              
              LineBox[{3982, 3372, 3918, 3657, 3091, 3772, 3510, 3330, 3898, 
               3637, 3216, 3847, 3586, 3406, 3054, 3746, 3484, 3304, 3886, 
               3625, 3190, 3830, 3569, 3989, 3389, 3928, 3667, 4033, 3122, 
               3793, 3532, 3977, 3352, 3910, 3649, 4022, 3238, 3862, 3601, 
               4001, 3421, 3947, 3686, 4043, 3010, 3715, 3453, 3955, 3273, 
               3877, 3616, 3159, 3814, 3553, 3373, 3919, 3658, 3092, 3773, 
               3511, 3331, 3899, 3638, 3217, 3848, 3587, 3995, 3407, 3938}], 
              
              LineBox[{3677, 4038, 3055, 3747, 3485, 3305, 3887, 3626, 3191, 
               3831, 3570, 3390, 3123, 3794, 3533, 3353, 3911, 3650, 3239, 
               3863, 3602, 4002, 3422, 3948, 3687, 4044, 3011, 3716, 3454, 
               3956, 3274, 3878, 3617, 4008, 3160, 3815, 3554, 3983, 3374, 
               3920, 3659, 4027, 3093, 3774, 3512, 3968, 3332, 3900, 3639, 
               3218, 3849, 3588, 3408, 3939, 3678, 3056, 3748, 3486, 3306, 
               3888, 3627, 3192, 3832, 3571, 3990, 3391, 3929}], 
              
              LineBox[{4034, 3124, 3795, 3534, 3354, 3912, 3651, 3240, 3864, 
               3603, 3423, 3949, 3688, 3012, 3717, 3455, 3957, 3275, 3879, 
               3618, 3161, 3816, 3555, 3984, 3375, 3921, 3660, 4028, 3094, 
               3775, 3513, 3969, 3333, 3901, 3640, 4014, 3219, 3850, 3589, 
               3996, 3409, 3940, 3679, 4039, 3057, 3749, 3487, 3962, 3307, 
               3889, 3628, 3193, 3833, 3572, 3392, 3125, 3796, 3535, 3355, 
               3241, 3865, 3604, 3424, 3013, 3718, 3456, 3958}], 
              
              LineBox[{3880, 3619, 3162, 3817, 3556, 3376, 3922, 3661, 3095, 
               3776, 3514, 3970, 3334, 3902, 3641, 4015, 3220, 3851, 3590, 
               3997, 3410, 3941, 3680, 4040, 3058, 3750, 3488, 3963, 3308, 
               3890, 3629, 4010, 3194, 3834, 3573, 3991, 3393, 3930, 3669, 
               3126, 3797, 3536, 3356, 3913, 3652, 3242, 3866, 3605, 3425, 
               3014, 3719, 3457, 3277, 3163, 3818, 3557, 3377, 3096, 3777, 
               3515, 3971, 3335, 3903}], 
              
              LineBox[{4016, 3221, 3852, 3591, 3411, 3942, 3681, 3059, 3751, 
               3489, 3964, 3309, 3891, 3630, 4011, 3195, 3835, 3574, 3992, 
               3394, 3931, 3670, 4035, 3127, 3798, 3537, 3978, 3357, 3914, 
               3653, 4023, 3243, 3867, 3606, 4003, 3426, 3950, 3689, 3015, 
               3720, 3458, 3278, 3881, 3620, 3164, 3819, 3558, 3378, 3097, 
               3778, 3516, 3336, 3222, 3853, 3592, 3412, 3060, 3752, 3490, 
               3310, 3892, 3631, 3196, 3836, 3575, 3993, 3395}], 
              
              LineBox[{4036, 3128, 3799, 3538, 3979, 3358, 3915, 3654, 4024, 
               3244, 3868, 3607, 4004, 3427, 3951, 3690, 4045, 3016, 3721, 
               3459, 3959, 3279, 3882, 3621, 4009, 3165, 3820, 3559, 3985, 
               3379, 3923, 3662, 3098, 3779, 3517, 3337, 3904, 3643, 3223, 
               3854, 3593, 3413, 3061, 3753, 3491, 3311, 3197, 3837, 3576, 
               3396, 3129, 3800, 3539, 3359, 3245, 3869, 3608, 4005, 3428, 
               3952, 3691, 4046}], 
              
              LineBox[{3722, 3460, 3280, 3883, 3622, 3166, 3821, 3560, 3986, 
               3380, 3924, 3663, 4029, 3099, 3780, 3518, 3972, 3338, 3905, 
               3644, 4017, 3224, 3855, 3594, 3998, 3414, 3943, 3682, 4041, 
               3062, 3754, 3492, 3965, 3312, 3893, 3632, 3198, 3838, 3577, 
               3397, 3933, 3672, 3130, 3801, 3540, 3360, 3246, 3870, 3609, 
               3429, 3018, 3723, 3461, 3281, 3167, 3822, 3561, 3381, 3100, 
               3781, 3519, 3973, 3339}], 
              
              LineBox[{3906, 3645, 4018, 3225, 3856, 3595, 3415, 3063, 3755, 
               3493, 3313, 3199, 3839, 3578, 3398, 3131, 3802, 3541, 3361, 
               3247, 3019, 3724, 3462, 3282, 3168, 3101, 3782, 3520, 3340, 
               3226, 3857, 3596, 3416, 3064, 3756, 3494, 3966, 3314, 3894, 
               3633}], 
              
              LineBox[{3840, 3579, 3399, 3132, 3803, 3542, 3362, 3248, 3020, 
               3725, 3463, 3283, 3169, 3102, 3783, 3521, 3341, 3227, 3065, 
               3757, 3495, 3315, 3201, 3133, 3804, 3543, 3363, 3249, 4092}], 
              
              LineBox[{3021, 3726, 3464, 3284, 3170, 3103, 3784, 3522, 3342, 
               3228, 3066, 3758, 3496, 3316, 3202, 3134, 3022, 3727, 3465, 
               3285, 3171, 3823, 3562, 3382, 3925, 3664, 4030}], 
              
              LineBox[{3523, 3343, 3229, 3067, 3759, 3497, 3317, 3203, 3135, 
               3023, 3728, 3466, 3286, 3172, 3104, 3068, 4087, 3024, 4080, 
               3025, 3026, 4081, 3027, 4082, 3028, 4083, 3029, 3030, 4084, 
               3031, 3729, 3467, 3287, 3173, 3105, 4090, 3069, 3760, 3498, 
               3318, 3204, 3136, 3805, 3544, 3364, 3250, 3871, 3610, 3430, 
               3953, 3692, 4047, 3032}], 
              LineBox[{3701, 3439, 3259, 3145, 3078, 3041, 4086}]}, 
             Annotation[#, "Charting`Private`Tag$55411#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{658, 1676, 657}], 
             LineBox[{660, 1677, 659}], 
             LineBox[{662, 1678, 661}], 
             LineBox[{664, 1679, 663}], 
             LineBox[{665, 1680, 461}], 
             LineBox[{667, 1681, 666}], 
             LineBox[{669, 1682, 668}], 
             LineBox[{671, 1683, 670}], 
             LineBox[{673, 1684, 672}], 
             LineBox[{675, 1685, 674}], 
             LineBox[{677, 1686, 676}], 
             LineBox[{679, 1687, 678}], 
             LineBox[{681, 1688, 680}], 
             LineBox[{683, 1689, 682}], 
             LineBox[{685, 1690, 684}], 
             LineBox[{687, 1691, 686}], 
             LineBox[{689, 1692, 688}], 
             LineBox[{691, 1693, 690}], 
             LineBox[{692, 1694, 17}], 
             LineBox[{694, 1695, 693}], 
             LineBox[{696, 1696, 695}], 
             LineBox[{697, 1697, 9}], 
             LineBox[{698, 1698, 35}], 
             LineBox[{700, 1699, 699}], 
             LineBox[{702, 1700, 701}], 
             LineBox[{704, 1701, 703}], 
             LineBox[{706, 1702, 705}], 
             LineBox[{707, 1703, 655}], 
             LineBox[{709, 1704, 708}], 
             LineBox[{711, 712, 710}], 
             LineBox[{1737, 2230, 1736}], 
             LineBox[{1565, 2231, 1062}], 
             LineBox[{1739, 2232, 1738}], 
             LineBox[{1741, 2233, 1740}], 
             LineBox[{1742, 2234, 1674}], 
             LineBox[{1650, 2235, 941}], 
             LineBox[{1743, 2236, 715}], 
             LineBox[{1744, 2237, 734}], 
             LineBox[{1745, 2238, 716}], 
             LineBox[{1746, 2239, 721}], 
             LineBox[{1748, 2240, 1747}], 
             LineBox[{1749, 2241, 766}], 
             LineBox[{1750, 2242, 771}], 
             LineBox[{1752, 2243, 1751}], 
             LineBox[{1754, 2244, 1753}], 
             LineBox[{1756, 2245, 1755}], 
             LineBox[{1722, 2246, 1498}], 
             LineBox[{1758, 2247, 1757}], 
             LineBox[{1760, 2248, 1759}], 
             LineBox[{1761, 2249, 1725}], 
             LineBox[{1762, 2250, 1726}], 
             LineBox[{1727, 2251, 1594}], 
             LineBox[{1728, 2252, 1657}], 
             LineBox[{1729, 2253, 1340}], 
             LineBox[{1763, 2254, 1730}], 
             LineBox[{1764, 2255, 1731}], 
             LineBox[{1765, 2256, 1732}], 
             LineBox[{1766, 1767, 1733}], 
             LineBox[{1734, 2257, 839}], 
             LineBox[{1735, 2258, 783}], 
             LineBox[{2291, 2875, 2290}], 
             LineBox[{2293, 2876, 2292}], 
             LineBox[{2295, 2877, 2294}], 
             LineBox[{2223, 2878, 1889}], 
             LineBox[{2297, 2879, 2296}], 
             LineBox[{2299, 2880, 2298}], 
             LineBox[{2301, 2881, 2300}], 
             LineBox[{2302, 2882, 1776}], 
             LineBox[{2304, 2883, 2303}], 
             LineBox[{2306, 2884, 2305}], 
             LineBox[{2308, 2885, 2307}], 
             LineBox[{2310, 2886, 2309}], 
             LineBox[{2312, 2887, 2311}], 
             LineBox[{2314, 2888, 2313}], 
             LineBox[{2316, 2889, 2315}], 
             LineBox[{2318, 2890, 2317}], 
             LineBox[{2320, 2891, 2319}], 
             LineBox[{2322, 2892, 2321}], 
             LineBox[{2324, 2893, 2323}], 
             LineBox[{2326, 2894, 2325}], 
             LineBox[{2328, 2895, 2327}], 
             LineBox[{2330, 2896, 2329}], 
             LineBox[{2332, 2897, 2331}], 
             LineBox[{2334, 2898, 2333}], 
             LineBox[{2336, 2899, 2335}], 
             LineBox[{2337, 2900, 1823}], 
             LineBox[{2339, 2901, 2338}], 
             LineBox[{2341, 2902, 2340}], 
             LineBox[{2343, 2903, 2342}], 
             LineBox[{2345, 2346, 2344}], 
             LineBox[{2933, 4048, 2932}], 
             LineBox[{2934, 4049, 2450}], 
             LineBox[{2935, 4050, 2521}], 
             LineBox[{2937, 4051, 2936}], 
             LineBox[{2939, 4052, 2938}], 
             LineBox[{2940, 4053, 2726}], 
             LineBox[{2942, 4054, 2941}], 
             LineBox[{2844, 4055, 2733}], 
             LineBox[{2943, 4056, 2381}], 
             LineBox[{2945, 4057, 2944}], 
             LineBox[{2947, 4058, 2946}], 
             LineBox[{2949, 4059, 2948}], 
             LineBox[{2951, 4060, 2950}], 
             LineBox[{2953, 4061, 2952}], 
             LineBox[{2954, 4062, 2363}], 
             LineBox[{2956, 4063, 2955}], 
             LineBox[{2958, 4064, 2957}], 
             LineBox[{2960, 4065, 2959}], 
             LineBox[{2962, 4066, 2961}], 
             LineBox[{2964, 4067, 2963}], 
             LineBox[{2965, 4068, 2378}], 
             LineBox[{2966, 4069, 2383}], 
             LineBox[{2968, 4070, 2967}], 
             LineBox[{2970, 4071, 2969}], 
             LineBox[{2972, 4072, 2971}], 
             LineBox[{2973, 4073, 2368}], 
             LineBox[{2975, 4074, 2974}], 
             LineBox[{2977, 4075, 2976}], 
             LineBox[{2979, 4076, 2978}], 
             LineBox[{2981, 2982, 2980}], 
             LineBox[{4097, 4096}], 
             LineBox[{3743, 3051}], 
             LineBox[{4099, 4098}], 
             LineBox[{4100, 3004}], 
             LineBox[{4101, 3276}], 
             LineBox[{4103, 4102}], 
             LineBox[{4105, 4104}], 
             LineBox[{4107, 4106}], 
             LineBox[{4108, 3668}], 
             LineBox[{4110, 4109}], 
             LineBox[{3813, 3552}], 
             LineBox[{4111, 3642}], 
             LineBox[{4113, 4112}], 
             LineBox[{3932, 3671}], 
             LineBox[{4115, 4114}], 
             LineBox[{4012, 3200}], 
             LineBox[{4021, 3236}], 
             LineBox[{4116, 3017}], 
             LineBox[{4118, 4117}], 
             LineBox[{4119, 2994}], 
             LineBox[{4121, 4120}], 
             LineBox[{4123, 4122}], 
             LineBox[{4125, 4124}], 
             LineBox[{4127, 4126}], 
             LineBox[{4129, 4128}], 
             LineBox[{4131, 4130}], 
             LineBox[{4133, 4132}], 
             LineBox[{4135, 4134}], 
             LineBox[{4136, 4094}], 
             LineBox[{4138, 4139, 4137}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.867177043025148*^9, {3.86717716801517*^9, 3.867177181112981*^9}, {
   3.8673430228039722`*^9, 3.8673430526913776`*^9}, {3.8673430927615147`*^9, 
   3.8673431417747793`*^9}},
 CellLabel->
  "Out[343]=",ExpressionUUID->"5bc36ae3-41aa-430d-859e-d84ff13f0d7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"n", "=", "15"}], ";", 
   RowBox[{"\[Tau]", "=", "5"}], ";", 
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}], ";", 
   RowBox[{"A", "=", "0.2"}], ";", 
   RowBox[{"order", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxIter", " ", "=", " ", "100"}], ";", 
   RowBox[{"maxError", " ", "=", " ", "0.01"}], ";", 
   RowBox[{"uMax", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxCount", " ", "=", " ", "5"}], ";", 
   RowBox[{"maxJ", " ", "=", " ", 
    RowBox[{
     RowBox[{"uMax", "^", "2"}], "*", "\[Tau]"}]}], ";", 
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"xdotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";", 
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";", 
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";", 
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
     "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"EInitial", " ", "=", " ", 
    RowBox[{"Energy", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ICs", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", "A", "}"}]}], "]"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Initial Energy = \>\"", ",", " ", "EInitial"}], "]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["systemData",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], " ", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
     "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", ",", 
      "maxIter", ",", "maxError", ",", "uMax", ",", "maxCount", ",", 
      "InitGuess", ",", "maxJ"}], "}"}],
    FontWeight->"Plain"]}], 
  StyleBox[" ",
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "Jff", ",", "K2"}], "}"}], 
     "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{"ICs", ",", "systemData"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
      "u1b", ",", "J"}], "}"}], " ", "=", " ", 
    RowBox[{"testSwingUp", "[", 
     RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFBClipped", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A", ",", "uMax", 
      ",", "K2"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1b", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<True Dynamics \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<feedback solution \>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"p1a", ",", "p1b", ",", "p1c"}], "}"}], "}"}], "]"}],
  FontWeight->"Plain"]}], "Input",
 CellChangeTimes->{{3.867171521979046*^9, 3.8671715446657887`*^9}, {
   3.867171772922782*^9, 3.8671717730837297`*^9}, {3.86717180822849*^9, 
   3.8671718083164606`*^9}, {3.8671719445658827`*^9, 3.867171944670848*^9}, {
   3.8671731740686274`*^9, 3.867173174216581*^9}, {3.867173210913842*^9, 
   3.8671732284672284`*^9}, {3.8671742094814525`*^9, 3.8671742099652987`*^9}, 
   3.8671763640293236`*^9, {3.8673430805164456`*^9, 3.867343093579253*^9}, 
   3.8673431351509056`*^9},
 CellLabel->
  "In[344]:=",ExpressionUUID->"6a40f937-40a8-421c-802f-0d353f74d96b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial Energy = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2`"}]}],
  SequenceForm["Initial Energy = ", -0.2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.86717322029984*^9, 3.8671732289730663`*^9}, {
   3.8671763357093825`*^9, 3.8671763645601544`*^9}, 3.8671764041434937`*^9, {
   3.8673430674346447`*^9, 3.867343094338008*^9}, 3.8673431453636265`*^9},
 CellLabel->
  "During evaluation of \
In[344]:=",ExpressionUUID->"5e7a8198-0cee-4e5e-b33b-f6a2e62287b5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Error First Guess = \"\>", "\[InvisibleSpace]", 
   "1.8144098446116385`*^-15"}],
  SequenceForm["Error First Guess = ", 1.8144098446116385`*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{{3.86717322029984*^9, 3.8671732289730663`*^9}, {
   3.8671763357093825`*^9, 3.8671763645601544`*^9}, 3.8671764041434937`*^9, {
   3.8673430674346447`*^9, 3.867343094338008*^9}, 3.86734314547759*^9},
 CellLabel->
  "During evaluation of \
In[344]:=",ExpressionUUID->"461aef15-b822-4e44-b36c-eeeb9735fb37"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
yt2poOM+jna72Zhgdzvu2eyPT/Jc6jICUM/mtHdZsY7EBEA9G0/ul52Junyw
LXrdRvZyClR7V+hsU8wHtW0JlqoaQvDIq/PyRwsmcb9GyEODnUcfwP2aGO9l
HfQV/bhfU6Hf5Cs1ycX9mpT7Em+OkZ9X7Jcc5ZYHLOUA5JeMFw9PO0C+v1oL
Fay3HZgDXxaLJm4t4YAvMxaXxGhQ4bKJ6MyGDVxQwOjcsvcpFd4WE66ZvodL
rm9GfN/1NPjb6sDBi+UccFXFRdEznwY5mTcuSK78BeouXgoX15aAixyaf9by
ugHyUaozd7vfXsgAyEd1FD5Ujp7RjHs6dYngrPyR9+Df+ijn0uLaQF4G9lGl
evou9SW1eH5Er+H7W8cl2wnko2yuXMvWr6QTqK/jnnZgst6cSaC+TuCBdRmn
mxi4r1Mco/o9v7MT93WuvTk9rym8Dfdu2qlp6t6fh7BvsveU5cfVjwLUu5G9
dCQtXW4SoN5Nqsv65RW3+WB87TtL0UgKlB4+tvToOT5A/ZstnptMDwpM4t5N
fCVlWnAmD/duXmzt5EasHsK9m+Dbpx5vUB/AvZu5dkZHWu/24d7NhzIV8G4v
F/du2GGRWW07Obh3k7dxVZa/Agf3bnwu60xzOczBvZtzL7bzy/o4QMFT+cRb
VyrU81FLf2/NBRFSDiGgnQoL/PvmUPS5IO82+3GjOw2OVtPPfzQnr4e/51/M
/njd7+zaXoA8lWJQ9XWLbSyAPJVSq4f+UF0H7ulYmn3qCeupA8hTFae2iAee
vPvvPdW2MY0jl8rxfIxnN01n6IMmoqAkZU+mzXfgNfWBxtbtJFB/J+Bh1TGZ
zwwC9Xfu07V/PLRiEqi/4+FcU9MjysD9nceuRnmBuztwL6e899a1hHYeQL2c
1HChxGOZ4wD1cmyEBg34EnywMkxjNFOQAhe1FbeMv+UDv90i+VESQrAmTrX7
Ufck7uM4jpZtiVYYxH2cTd7mCtG7+3EfJyY1q/fuoj7cx9Hnxbmsf8HBfZxZ
lyUapq0k37+/vdWJlNamw9ocMOJ1x9Z18xwotaOExsziAObYj6hXy6jwsFFh
ZaoSF6gn2LLr06jwnNzld3Tyeik+3XE6aRkNzhMVdNjQzQGTzaf88u/SYE7A
I8PPnr/ARPeXXCElCXjbyyz5Q0APQJ5LrHXbjaeVDIA8l0nV7bcTbS2413Nn
bLe4buIn8L95LruWn17TbGvAlSSJNxU6HcS8JffTH2v/BKVdWemb9zKIxRYG
hl3p7YA67folIScmcf0gp6PoDQPshiarys8wcL9n/Y8jw5xHk6Dp8IaTSoQg
XJ7Rr/OGvL8WGjFDLb5S4OaNpxau0edj32Xa+/7mR4c+3OtZM5yz7JEgFyDf
5Ve+bX6XJgcg3zUuvd3uqTIHSLftVJsrRIVHrMR+ccW5QEnQQL3yLBUOfIzI
CXfgAgUz2TOc6TT4xlOF2ELulxp08mgmF2jw8LcjnPvMX2Bzlp3I0EwJuLNZ
k7HIlf2PPpBkiqvpju31QNzoyZdOaTrxIyy4apZ8K9j48+wmiUVMgvppRKOR
6AQLNdf+iFnKJGrrme8qNQUhnM1km+/jA/9EdX9lEwpsMGot30XuJ9QPrWZ9
3SkE6Z8Tjx0LngTIh50X9n18JoQDkA/LmbXUuop8HhkSsH1/5pQ4jBExPpJs
xQEFcx1/HTCiwsH5yx4R5Odfa+3RjI7XVPjsYnNu+E7yfD29e8rcmAY3eOt3
Lb/DAf/Nj6VKyBhKyt/Afox3efMaxWc1eB5KjewNQqa0jUB+7OngaqFfd+gE
6g+xjfTzpxkyCdQfWpTz00q4j4HnpyQsv/Uscw4d94d+uIR6byN/HvJf+wLW
VJWED2H/BRPpSrNujQLUA6r1+7FXdWwCoB6Q8UO3kq1X+WCr1/g0nSAKFDGc
/HQ2mg9QHyhZV3eLPnm/R17MaGvKLW4dD/eA/C7Nbn2/bQj3gKRuvfPSshrA
PaAUKdV8kaI+3AMqz2xwGvfn4h7Q8Iw5Y0udOLgHtOq1EMdUnoN7QJ4l79tm
uHFwDyg5aiqewyL3Zx8Yn37voUKbuzoGa7ZxQYbpo9c1DVQ47d5bvVtbyP35
8TGb34406CnhJ+7qSt7v/57nwiy+sf2Ncy9A3oz94KGX9U0WQN6M1/zVS1K7
E/eGzPe9exQn3ACQN1ty8bRlrFDOv/ZmjW7uLts3f8DzXrRMSlaFuP0kUj6o
yIV8rwXvxAYH9ad1EqhPNCdK5pHPMwaB+kR68i4nNXYzCdQngpEtmmnKDNwn
OpOnunLelQ7cExqzX3z7ZyoPoJ5QFDN4c5DvOEA9oZfzJi4fn5gE86byGiIG
BKHYsad9HeTz2YcY6FEyTQhKhsr+8p3Gx/0g/ZO9lPUGg7gfNDrsPljh3Y/7
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
D2V3LvN3/IZ7hwdnmOuHWbzGvUO1jEDnzPosPB9zRguL5d/Uh+djNiZeGPfc
M4TnY175skt5x34egTyy2/iI1GfhETwv83GYBF1Yhkeg/mHsloX0b78GcY/Q
drSNflyxFXvhtOMOhhM36dgLa+w80/lxEwt7YeXvzN0uUT3YC5t9OsxMtmFj
L1z5UEFdTa8He+GXWkfbn44ysRdeamDCOl/Ujr3wCyPX+EMB/94La/ZVNy1Q
r8Q9w+JLPZ7PnFoA8sIKzzWU6i3pAHnhRxKJtKq1XXieZqjUq11cVxaep3km
SzAhZT4LIC9c2dGRKJjGxD5YYrVAZFXpAJ53qZe2f/nHC8ME8sH1L2TPGvbw
COSDpa9J7dxfysPzMOsO7WDFrxkmkOe9rPLIadiwA3tev3HvE77XmNjz3mj8
msW73I09r1fX5DuzNWzsedfse77eWYSNPW9ZeuXE0mYW9rzVS9LbiAQ69rxl
2ZwdY1lN2POWTkY+Urf99563SudJwPsldwHyvE9UjuU5jdTi3qHIWLoOn3wO
QJ53qiCufG0KA8/LvFismARqu/C8zJvqDXaNniyAPO8r36Nn3z7uAsjzbksN
NV9ax8C9xI7wepcZOztxDzFOVqV9yqUa9xCjipXTXw+/xT1EtWnB+1sDUvG8
S97CrC2v7frwvMvVCadpswSG8LzLA0EJmlCDRyD/K+Lt3pI6awTPv2y9nr6+
zJJHoD5iFcMleOmWIdwrzDE8//DQi2bsc2dfXn65RJyOfa5h/oUdOg1d2OdG
vcyOrbTpwT73Use5k5U72djnViee7Es704N97pHtVpu+nezCPldnwYBC+6k/
Pnf9E/P1Ss//+NykyO1Ndsf+vc9dKXryOHhVjnuHuwSXcWwfNQHkczPbxVJO
V3YC5HO/WzwMP89l4vmYlPqnL/JsWHg+ZsjZObb317IA8rnPdN48cGxhYo/L
FdPiBVsN4PmVO2RtnwoZDRPI455KnyxOrOYRyOPmFV7tu9rCw/Mtb8kw52t5
DxPIz6qAg5e9ktuxny3qdz35ewET+9kVx5tp3qAb+9n7KSW94VQ29rNH1W2j
BlewsZ8t+PVglplhN/azBxpshJXBHz/rduNnkmngHz9rb+7Glwn69352Yopv
NprTAZCfNTWaJd+zkwmQn41wMEz1UGAB5Gdt786pumrLAu8PyzySrekGxGVG
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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{944, 2849, 2847, 432, 433, 434, 435, 843, 730, 
                638, 564, 509, 476, 867, 754, 662, 588, 532, 886, 773, 681, 
                607, 436, 844, 731, 639, 909, 796, 565, 893, 780, 934, 688, 
                919, 806}}], 
               PolygonBox[CompressedData["
1:eJwV0klvTXEYBvDTFi0NCQmJ4VavosTS3NHwAeilaO0sOpiKFRYkZqpNzENr
aC4hKQuSSljqPCgfwdDbwWxh2NXvv/jlfd7nf0/OPefe+K66xP70KIrSSJGT
HUUx5iqHlO2UZUTRe/spCkjnin65/rVcxTxSug4S+g/20xSSwVX9Cn27XE2M
YV0n17jOSucd+hpyGNF1cYNVzjp1tcxnVNfNFv1H+xmKmMBN/Wp9l7ybXMZ0
PWzVf7KfpZiJ3NKv0XfLe4jzWddLuX7Ifo4SJnFbv1bfI+9lAV90fTRR4KxX
t488vur62aZP2c9TSibN+kJ9nxx+iIV801XpfofvxiYGdNt1w/IF1pHFAd24
maQivAf7TF7Kd1xTJPfLdeE6eTaL5MNmJq3yd5+rlv+EZ+OSnMtm+YQ5nce0
hXNzKc9547od5oj+vllvNpoxnrDefsycyiOehd/GzA+ZyfaDZkSSB+F/YuZR
GX4jcxavwnsyl3HXPYvNgfDs1MtzWCwfMbPCveUfPlcj/5WbKOOkfQYv5EHn
FfKofJENHLdPC88mT+GQnMZDeSf3XFMSnjt8b/I5Gp6Dp/JP57XyP7nFbDYv
m3ES8lvnlfKY3MBGssO705fqB8M9WcIv3Tta+A+SmHOk
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{397, 2848, 2845, 613, 705, 818, 402, 513, 569, 
                643, 735, 848, 450, 483, 538, 612, 704, 817, 401, 512, 568, 
                642, 734, 847, 449, 482, 537, 611, 703, 816, 400, 448, 481, 
                536, 610, 702, 815, 399, 398, 447, 480, 535, 609, 701, 814}}], 
               PolygonBox[CompressedData["
1:eJwV0klLVXEcBuCTtspKU6FFoCQFlVamX6DRoXYNtnAql5m2cCwNCgpahENp
EGGDqTmkd2GQ4FcISs2pvoGNaoNT0PNfPPze33vOn3PvPXd3xbWz1XFRFG3i
HWkJUZROTDHCMJ/ZINeNN5nndHwUvdZ9Yp0cXTNzFLo2pJtnjSO6JmYpcG1Q
lyKfoZNFKvRz+lWy7TeYIV8/oEsOz6SDn1zWz+ovyi/4R7VuRXdYvs40ebp+
XZncz2Z7HTvkNyTJtymU0802Hso/uCTPOHvAfMKYbsBM5S5F9mEzI5zhub3b
3DCrzL/Oxsy9PCKm7zUTaOaQfcjcxX0a7c/Mj+Yp85Xzo2YWXYzrB82d3KPU
PmLuoTPcb+8x46klyb7PfMyonGjeokBOM1t5IH+nXJ72vLdyinyHC+HzsM5V
+5/wn5C3yE0clBuY4qS9z/USuY84ew2J4R3SzjfKwvdz33n5KWtU6n7rsuR6
Jjmh69VtD++QNr5Sqp/Sn5O7WOWK7pcuU65jguO6Ht228FvSyhdK9JP65fBe
7bV84Jj+pW5r+C60sECxfkK/xH57De85qu/W/Qcv/W1O
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt1Hecz3UcwPHrbJe913HcOVGKOzOpbEVXsmfJuCQnlLhD9tYjo0mTBqHM
VCraNu00jVC0h4ryfD8e/nje6/35/H53v/t+P9+7lIE5XUZckJCQMN6XaG1f
PtKx+oAO0jJMJtu6q+Yjj7etczSZ6XSwbqd/nP95m/U2rcw0Zln30wuZxB7r
0VqTDHMzPa4ryTZXINfcSwuzw9yb68xn9XXuI5F0ex/rg9xKR9rb+1NfYjaZ
NLd3QleRRx/yUcf+J/oQw7iGRuSnAAUpxEXe96k+HNfGtTSmMHW99pk+wnA6
0YTL7X+vzzOBvhShnv3PdSm305mmtLD/g65mYtwzinKx/YO6jBFxH+hg7y/d
wpy4h1xh76SuYVLcM+si7DT3J8v8n77BQm62LskBcxKXmL/QRxlsLkuOuZvm
5x3zSK1OVtxrPa0vx3WbqzA3PkuLsdc8RmvFM0Bz65Z6Ssfp2jgzrchU7olz
0aJMZJf1KE1hJgOsr9f/NVe3xf3TqiwyD9RSfGC+U1PjmTPX1y/1MYaYyzHS
3F0L8G783Dh789/6CvMYYF2cfXGWXGn+UV9gMjdxQ/zxsF0WU4xLrb/Sx7kj
3hPPi71/9FXmx1lzlb2f9EWmxHlQnMvsf61PxPXTJc6Wq+3/rOuYGtdLCRrY
/0afZDQ3xn2mlf1fdD3TuIWSNLT/rT4V50PXuDZKkeG1Q7o87mGcffyelKYM
ZSlHeSpQkUpUpgpVqUYy1alBCjWpRSqZPuOwruCuOIe4NtJo5LUj+jRj6RHX
QWv7v+oGpjOI2jS2f1Sf4W560snev7qVBfG9tLH3m25kBoPjvsb/Pt40LyGd
Jtbf6bOMi8+3Lsh75l50Np/R17g3ngHrEuyPz6Ct+XfdxDBzpXh2zX01id3m
IXFG5kTeMsc/4mrcH2ekpeNvgQ/j/mgas6lj3VSPxbXqczpUyzOF8XH9WogJ
vB/Pn9ZgBucAGF6jlg==
               "]], 
              
              LineBox[{144, 69, 103, 41, 70, 42, 43, 44, 45, 46, 47, 48, 49, 
               71, 50}]}, Annotation[#, "Charting`Private`Tag$59349#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WXQFWUYBuDDBwiSEorkRykpjdLdMEODtIDSYYstChYSioAKIi3d9ijd
SCPlKN2tIDl6PeOPy+d+7z3rObv77keBHoNbDUqRSCTu+M9ISqVMJH5OSiS6
k4PDuhWMYjSlHf9F34MHOaJbyRjKOLZC15OcHNWtorn+D+u3qUSCj/Vl9Svl
J8nFMd1qWuj/tH6HyqTgE305/Sr5KfKmTyRym8f1a2jp2GHrYVQhibH68vrV
ci/ycEK3llb6I9bDqUpKPtVX0K+Re8d3cFK3jnGMp6Lja/V9yMcp3Xom8Khj
63R9Sea0bgOt9Uet36UaqfhM/5h+vdyP/JzRbaSN/pj1e1QnNZ/rK+k3yP0p
wFndJtrqj1u/Tw3u4Qt9Zf1GeQAFOafbzESqOLZJN5BCnNdtoZ3+hPUH1CQN
k/RV9ZvlQRTmgq6X7lr8NpqzVdded1L+kFqk5Wndv+Z0OsR9sL6fH+QvnVNN
3iIPjvPknDwkDzHTME++6HO95etxbbF/5Py0iH1lZmE238RxsxhL+dV5j5un
9FPMEeYoMy/zqW39hpmRr1kSz8YsEpl7rZ8xE0xnRuwTsxAd4xmZD/Bj3Cez
BJN9Z3Vza1w7I+RcPCy/bKaN75Yv+Vwf+R95Ii1jz1tn5Vt5m+Md5NPyR9Th
TetMcW1yOp6VUzBT7sRXzqkR1x2/myK8EtfBAvmy433lG/JUc1K8W2YBWsnb
He8on5FHUpf0ce/0NfXb4jspyhXdDqaSz/s4zazlM9sde45iXNXtpJP+bNx7
6pEh9oO+tn6H/DzF+Uu3i876c9ajqU9GZujr6HfKL1CCv3X9dDdjL9Ga3bou
uvPyGBqQiZn6uvpd8ouU5Jquv+6WPJk27NF11V2IfUZDMsc16ZKYJXdmls/V
s94tv8QjvGqdjoXydccHyLfjudCWYdbZ+E7e63g3+WI8g7hWOR+N5LfMzCyL
98ssyn1xn8yUsQ9jv1qPMwvH99El/gaYOZjLT3FPzJLx/4nP+7765p74PeaQ
2Fdm7njHKGX9mpk+9hOLrMfHuxg59qnzB5p39NPMKeZYs2DsLdpZDzezM4fv
Y1+bxfnNuU+Yl+KceC5yMo3loXFtLJezxLOVU8X7LHdltnMbWO+N94fS3NAN
0t2NfUx79um66y7HO0oTsjJH3zB+Q7wLlOGmbj899FfiPtKUbMzVN9Lvi+dJ
WW7pDjCPxo7tj3tFOW7rDjKfJo4d0L1O+aT//109xAIWsohk78picwlLWUZT
5x2Mv0VU4K7ud3rqr8ZzoBnZY+/qUsc9lrux3OeaWR+Kvw/x3sp5qBi/w8wQ
e5bF1hPi71Bk/gMO0gR/
               "]], 
              
              LineBox[{879, 766, 674, 600, 477, 868, 755, 663, 589, 533, 437, 
               845, 732, 640, 566, 510, 478, 438, 439, 440, 441, 442, 443, 
               444, 445, 846, 733, 641, 567, 511, 479, 869, 756, 664, 590, 
               534, 887, 774, 682, 608, 905, 792, 700, 926, 813, 948, 446}]}, 
             Annotation[#, "Charting`Private`Tag$59349#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GUYFGUUBtClDFpC6fJBQEBASmkQaSlBBRGkQ+kUUATpshUTpURSQqVL
ursETCxaOgTP/XGe+947s7O7M983edt0b9wtSSKRyJg0kViSLJFonSKROJk8
kTimDlfXqjU4TTn9LLUYv7NTv1ttygXu0b+nZuEXvtdvUetzlq7679UK/MWP
+gNqc/7x3UPUZEwx36DW4Tl5gVqGA3J+vpDzs14eyFKfbaP/Qx5Bee7lfbOs
LJG7ccp5r+uTM1XfjIdYZt7W7E95JBVIyWnz5bSL36sfRUVSccZ8BStZxWrW
0N65fzs+mkqk5qz5WjrE/9SPoTJpOGc+1DwF0/TNKcA6845mp+SxVCEt582H
md/FdP3zFOQH807xnORxVCUdH5hlY6ncnQvOe0N/NzP0LSjEl/qH2CAPYr3z
OuvPyOOpxmx9cXbJ6flQzs4yeavagB7yErUix+SD6vP863rDY43wE185tlGt
ywvyQrVsPEMO6vfFs+ciD+unqAX4lY36HWpjzjFYv1KtFvc+1p7+cFyXy/Gf
fHeXWIPmE+LeyjV5Qp6jlmC3vEd9hvvkSWoOlsvb1Ib0jLWmVuK4fNF1R8j3
MlPfkkXyYxySCzNVLsgm+dX4zz7zUvxueSLVycBHZjlZIffikvNG6lPytb4V
Rdhk/rLZeflNniQjl81Hmadilv5FirLZvGvsT/ktapCJK+Zb6BbPRv82NcnM
VfOtbGM7O9hJ93gejr9DLe7nmvkuejh2Sf8utXmA6+ajzVMzW9+aR+KdYd4z
nk28L6hDFm6YjzFPwxx9G4rFczHvZXYl9jR1ycpN87HmaZmrb0tx9pr3Nrsa
6596ZONjs1yslHtzy3nj9OmYp29HCabpC7FZfi3WovP66K/Fmucp5uofZY+c
nU/k3KySt6uN6CMvUytzQj6ktuA/1xuvpudn5sdzVevRXl6sPh7vIw7r96vN
4v7Gd+qnx57gN7bod6pPx5pgiH5VrO1418R+0R9RW8b9Y7/v7qteNz+uTop3
h1qL+vI8tSR75Rx8KudhtdyX5XKV2MPybdeaEPuFb/Qd+FYuxxG5JDPkwmyV
X+eAz/TT34g1TwNy8plZXtbI/bjjvIn6DCzQd6RUvE/M+5vdjOdJQ3KRiPvr
2ADHbsXzoBG5SRLvA8eOcJQfOcYr8SziP9KYPCSNfWWekYVyJ0rHvXL+QLPb
8Vt5mrx8bpaPtXJ/ksU+02dikdyZMnylL8I2eSgnXG+Q/k5cgybM15din5yP
yfKDrJMHsEKuGmtGTh57Vs7M4tjn6lN0kb9Ty3NULstMuSjb5V1qE4bJq9Xq
nIq1pD+qtop9E8/X7xusJmLtMtnx9WptztBU/41ampOxrmLfqc/G+4T/Abq9
KM0=
               "]], 
              
              LineBox[{1316, 1219, 1145, 1029, 1426, 1302, 1205, 1131, 1080, 
               992, 1405, 1281, 1184, 1110, 1059, 1030, 993, 994, 995, 996, 
               997, 998, 999, 1000, 1406, 1282, 1185, 1111, 1060, 1031, 1427, 
               1303, 1206, 1132, 1081, 1449, 1326, 1229, 1155, 1472, 1349, 
               1252, 1499, 1376, 1528, 1001}]}, 
             Annotation[#, "Charting`Private`Tag$59349#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xe4j3UcxvEfMqNhZEQZ12U3rMxIWSFbaCLZm4zKlpG99ypbViVEJSNF
NBCyCyl7ljJ6ff54X/f9vp9zjuP5Pc/35GreqV7HJIlEYmrSROJW8kQieapE
omXKROJMikRiJGrjceS1D7WnxnLeCbd9fQp7K9uffBTq4Anksw+zp8EK3hl3
fH1Ke2vbX3w06uI523xbXuzgTyK/bTi/Fyt5F9S3reElcYjf9fNS2drws3wM
mvLNvBLq8Up8gZ4PO3kRFLC9z9NiFW/Hd+m10ZU34J/ppTBOvyoP29/WD+uv
IcFT87b6OX2gflIfqzfTt+gfycpykvxbrpf1Xa8sF/JFMr8cIc/Lz+T3rneX
v8T/WzaWs2UCX6Co6wXlCPt8mU4OlX/K1a6113frdTBdvyW72Rvqa/XSOMLf
4Uf015GEp+Ht9PP6ODTnW3kVNOBV+CK9AHbxYihkG8nvw8fxeyMp7rW3t13Q
x8e/jeIobB9lvx+f8LeQDGntHWwX9Ql4ESVwD5IjBVIiVdzz+F3j34jvQzrf
29H3XtInohGewmP20fYH8CnvEV+L++ydbJf1SWiMkvGM28fYH8Qa3jO+Fvfb
O9uu6JPxBt/Gq6IJr8oX6wUxUr8gd9tLxXvAx/L08dnyDvwHvS56xf+Tr9PL
4Ch/lx/Vm8Y94g/wLvpVfZB+Sp+it9C/0athsv6PfMleTV+iL5aF5Ch5Uf4Q
91rfH8+7bCLnyCT4EqXjnZPj7AtkBjlM/hX3Lp4b1zvKH+Pdl/XkDHlbbpC9
477L9bwsxuvX5DF7H/2Y3iw+C/4g76pf06fiTb6dP4+X+fN8qV4YP/Iy8c7a
xvOMWBfvYXxuts95ORyPn4v0tm78uj4Nr6Bs7MgQuN7d9Rv6dLyKcsgYuPaW
a3/rM/AankZR+wR7pnh/471BpsDew/aPPhOvo3y8F/aJ9ofweXymeCiw97Td
1GfFOYXqtmW2x/ATrxDviW0Szxz3Nu4fMgf2XrZ/9dlxxqCG7SPb4/iZPxPv
jW0yz4KNvBP/Sa+PvrwJ36A/jRM8SxCfIf9Pn4OW/FteHc15Tb5cfwKj9Uty
T7xT+oF49lAx3js+Rc+K4fpZ+YW9s/5znCOYqd+R/ewv6Rv1pbK8nCCvx2cs
f3O9rzweZ4tsLufJZNiErK5nlW/bP4xzjg+Wp+NskXN5K/kdrxHvjX5TvmF/
QV+hP4kx+mW5N955/WA8h3g2zgU+Vc+GL3l/vBznMK+A33m2wPYOv63Pi/cT
z8UZYJ9mfxhf8QF4OLC/a7ujfxDvAGrZVtqKYB+vhNK26Tw7NvEufI/eEAPj
+Y73V38GJ3k/fiL+j/E9PDvvo9/V39P/iHult9Z36DUxVf9XtrTX1lfpS+Lv
jBwrr8i18ffI9V7yV75aviLnyqT4CpXjXZUz7AtlDvm+PBfnqfza9a5yL18h
X5Sz5N14TuWgeB/jZ/FlsqKcKG/IU3Hv45nQWyAHz8H76gkM0c/I+fY2+k79
BbTidfhqvRj28978kP4qqsT5wGfqj2Az78b36Y0wOM6BeN7iecBp/khg68eT
xHkZ9xN1bR/z4jgQfxfibLHN4o9iS3wGeDSw97cljXsVvzPq2T7hJXAwzvI4
f2yzeU5s5UOQM7APsCXDIt42zs04f+xzbLmwjQ9FrsA+0HYPFvN2cfbEeRPv
iS03vuHDkDuIz8OWPJ4F3j7Omjhf7PNsebCdD0eewD7YliLe5fh9+Pd6LUzT
/4uzUP4PcTtOXg==
               "]], 
              
              LineBox[{1972, 1846, 1754, 1612, 2113, 1954, 1828, 1736, 1674, 
               1572, 2084, 1925, 1799, 1707, 1645, 1613, 1573, 1574, 1575, 
               1576, 1577, 1578, 1579, 1580, 2085, 1926, 1800, 1708, 1646, 
               1614, 2114, 1955, 1829, 1737, 1675, 2143, 1985, 1859, 1767, 
               2177, 2019, 1893, 2210, 2052, 2241, 1581}]}, 
             Annotation[#, "Charting`Private`Tag$59349#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GUUVFUYBdChJCVUUmnpMkA6pBSQ7k4XIaGEEgrSIR1KKd2NS7q7uzuk
u1vc98de3zn3vZl58yptk3ZV2kaJRCKZokYiW2NFIj3jRCJvY0cif1CGxDyz
Psl6Sv7Rm/MZ26z3shZhrF6WJDy3PtlaKpbpLfic7dZ7W4vCOL0cSVmm52aP
3J0X9puip2a53pLc7LDex1pUxuvfkIzleh72yj14ab+pehpW6K3Iw2a9OKfk
wey0X189GhP08uyTy3NFTs4K+Qv2yb9yRq7LI/mVz0+T07JSv2W24jv5mFmd
O2E/s2v4HnmLWYKYcSOR0/ojuT3v6UP0S3Jj4uov9P/kX0ii7/J7/eTo4Rzo
E22/Ljcnvl5B3y9XIJZ+NVw7+UdSyCvNvOyX75vt6CmfNevxWH7tN6bL6Vil
t+a4XIO7cl62yiU5Iw9lt8/012Pwp16RD1ml5+OA3Is39puhp2e13oZ87LE+
wNo7/KVX4qPw363vZWA4X0yyVpmUvLW+j/0cYFD4z0y2rQqpiHDQtt+sx2aK
XpXUROGQbYOtx2GqXo00ROWwbUc4yjGGhGvCNNuqk5ZozLT2MWvktuQP58v+
Q63FY7peg3Ss1vNzUO5NdGbpGVgrt6NAeK70UpyVh3HC9w3T32WGXpMDckWu
yelZIxfgkNyHc3J9nsgxmC1nZJ18O9yjfB++26zJPblgeEbl0pyTH5sdGC5f
NpuE/+S+ehnOv9ydpPpJxzc83IPhWdJn2n5DbkECvVa4DnKlcB306+EdIf/E
+/rH+lq5YLiH9MP6g3B89JXPmw14Gu5Ps1u4V+Q5ZibWy3fM1vwgnzRrcV8u
FN4b8lecl5+YHRkh/2s25ZV8yn8YEY6XWXptMrBOL8QRuR8xmatnZoPcnsKc
9vmR1hIyW69DRmKFd4ZtZznHeS5wkUtcZpTPJGKOfeuSidjMs5aFjXIHioRj
tv/o8L5grl6PzMRhvrWsbJI7UpQr9h8TzjPz9PpkYb1emKNyf+KyQM/GZrkT
xdipf80FeSRXfd/v+gfM1xuE50iuzA05KxvkIhyTB3BBbsgzOR4L5exske+a
bcI7KlwDszYP5C/ZJZfhovzU7MSo8J/MZuF5cK+8Ds+52UNPZl5zfH/IiYmu
L7D9ptwyXBu9YXi25Srhuddv6i/kzuE/6dn0jXLRcI/px/WH4b4K10gfqF+U
G/FcfmP+HI5FXmTmYKt8z2wb7vFwb5h1eCgXZ7dclkvy6HBO5W95I193/GPl
JCzUG3FErsotOTub5GKckAcRn8V6TrbJnSnBHr0cl+Ux4Zn03ePCM8sivTE5
SMASa7nYLnehZDhv9h8fziuL9SbkJCFLrX3CDrkrpbhl/wnWkrNEb0ouEvG3
tU/ZKXejdHgP2X+itRQs1ZtxVK7Gbfml2SVcS+f9f82rMOI=
               "]], 
              
              LineBox[{2625, 2521, 2443, 2322, 2740, 2610, 2506, 2428, 2375, 
               2285, 2717, 2587, 2483, 2405, 2352, 2323, 2286, 2287, 2288, 
               2289, 2290, 2291, 2292, 2293, 2718, 2588, 2484, 2406, 2353, 
               2324, 2741, 2611, 2507, 2429, 2376, 2765, 2636, 2532, 2454, 
               2791, 2662, 2558, 2817, 2688, 2841, 2294}]}, 
             Annotation[#, "Charting`Private`Tag$59349#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{395, 396, 394}], 
             LineBox[{950, 951, 949}], 
             LineBox[{1530, 1531, 1529}], 
             LineBox[{2243, 2244, 2242}], 
             LineBox[{2843, 2844, 2842}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
qIHhXX3aK5Zk4MQ7lueo+3th6e7rL48Ac/9CNq389ngQ3Gy+/Lxe24pDDAdL
3CxGIWH7e68XCe24CKVcWm8yDsfbVw8eKejA2ir8033Ok9AsXL7BlFnvLTUV
DKcdpmHv/LHhKiUq7o7bqP/77Cxo03pO7z/bgfN4GhTLPWhwTMNZrebyHywg
Qqqpc2bAVTpnrFJgE440W99wLHQBkhWCzzwTr8Xnngty5pmQUKlmZPa8UzG+
Hx5aGbyZuR6vhr0mb3XBYlEXRsVvVEDyUQEZIdlX2C5efXHRrh9klTsdBl83
Y4nJ40JjicPQpadhtj7jD16aKfF4wXQMhtnHet11OvBXPw3L2gsT8KBl3dcC
Keb+sbtMwtdpCtgPCp//xFyPIS3Ou4NtZsC/YFnLI+Z8jFKk2oU7zIHJ52aB
vMR2/GMu66qbKx0ou+2bOdRb8due3XpJd+ZBqzPWw2F1A36jKXpTLTUGuCKy
zAwmTHB9wMOswJ2lwN9k4UCficImt24pfWwdheMGCpzas+24rGuiZ7F1HBj5
tlc7Rzuw80NbruyJSUjJIU9FMZ+/h/+3Ct1BZv346r5xgZuKdazuN+f0zoJH
H+PQIl8Hzn8iV+fPlwPO8uVPk7ru4rpNPu2vhpj1tVIo7vV2Km7fJb/28NgU
fD4yU+vH3M+krJcu7OicgU+/Vr5Ti+/Ao778Pa7JQXBklcS9VbSdWEe0Rkki
Yhw8b8uEOzDzUWOr+k2jzEkYlR8P1mKuR8dOt4cr3k3D0RfHxlSXUXGseKth
4MpMuDa34O6wxRsbnT4jW5A0AUvX3d0hpsxcryFTUf3vp6DPSLDAeT8Vt22L
ub/xQSIIFYeu8wq2wYI7wwNWbGWun4dn6q4z79eE7XVU4OZJMDkoU+jI3N97
jBinZqtMwyS3wmkGc//vIb6YsxjjAwbDi8vcpWUw3z059RchkzD5OjR3OXM9
XtdqM93+ZAqiHrPvs2fuj0pzT7JviYyHA2i1Of/ls3gX1Vv/ougUeJ2S6/hP
fReTeoqfC01Cz4OIkQvM+izn9Wzsiu8zaKiWMvaZ1cevVI2L2esmQV5JubuQ
uf5aHqf+rDGeAudrhhP2zHH4QI7nnSOT0Ku6S6acWV+Dt3WaCQRcB9szzzdH
Im4c3ywZXuI7Cd2HDFurmflhyZOfOadvTwFpQ1tICvN6m7a5JAayT8Hm+iLN
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
ReR6AnnRZfvXKv6yewl8rs/5uyyIQMOcl/vuHM8HK7uC14jdFYUVz/M2CZDP
63RTM/MXFDEI9BTSY6XzAeptqVy9rhur4A2quR8pcmX9s74a4xYj11diOU5L
bXNnwQrvdk7F3j7sSwkH4/ynFoPE+xN8L7l388JPbWpbq8n1CA3yrVyvwQcV
d/Q49yYOEvbrWvl/vBWCOtqt9h/ORgHPLeYH7DRFYdd3NZWAhXwg7TAXf++j
KLxhFvh6cCQfoJ7Xh87sotyw88BZRzFxq8w0OJKjqGYj1g8eqC10PNw3C1T0
mz48WdYPmvkiinJHeKCgi0JY4OggETHnep13gRf6vakRuvtjkFj4ltZ7QUIU
bo4Ypo3l5gOJl9p/6hJFYbjbc019iQKwtbqvkr5vBjxjv3R0mHzeB8fdDjrl
wQv5ZK9vPUuuF926Q4uSvwvB1k6RdGO2BDBzky/R0kYUXnsgGaK0tQAoyGba
avSIwhMPlQc2ROdj/7o0vLr3XPY93Bd7yVe34464BPjdK++iFvXPek7K5yK5
f91n56ao+JoXKqg25ayZGiRELicMbL0pCr21vlzaQX5feyKUjho+ngYypTvG
SyT7geqB0e3MDbxQhpJoy0+uH9qpGW/69olCSf5p3bt/88HWaX6X54WiMHOO
j7wy8gHqlQV8vnEjxckStDa2E87Lp0GoyiqWLLkfOzt7QyuhjQdyB1UWRfeT
55PiyfTOKFE4MT3M+3VLAQg5FdK1c+UMEKC0ckaT19fKRzbCOra8UP+N69kq
cj10+rwlb/cpUdgsFa30gjyeqHdGXfOBr2NKF6w2vqXHGSgK+WiDFpvI55vN
ddqqkoZp8L3f3uYtebylHaQl1u3nhZpnU/Z6kb+PK+/BvQ79afAkN30Pjdxf
GEjk7K1e5IHB7kXNl8j150YxBYHiNFG473tREE20AJSogtTYUzPALWdX4xXy
fOV6H8PlfI8Xhh64dH+UPD7PQ/NVOi6IwmgNnegO8n6DPG1N4j1L0/JHuK9G
SWo4HweXgbA8mfpd18jjV2mw9zG5Hxk4y2fh5j0Nkti23D2yoR8sKewccVjF
C5dsHdM5PD9IxHh2PRl4JgrH1Na7NUgXAO2NdqPGy2bARsXzFf/8+2075/Gm
QnNeqCxOcVlF3m9Qj+32nCnflVNaIOL5MgX++6Lwz+HCLhPy9VZqFmzpKZ8G
Aed2ic6Sn2e0Y013qAovnCq3m6n853zkEM4v150B54I0cnTJ41ctHfyV5sUL
84oPKh0ir78v97r/vjhPvv/1YPvh7QUA9dw+jBvelLq9E4RvW02RuC0KH/Ox
LTclz6+rtQvnvaR5oUGE/6sgtiGiPbSogWcbef/pos+Yk+/fZKXr0e8XyfW/
Fl1dkfx+oniYNnPBojAtrjLfeye5ns4U4I2iTQPf0ylJu8mftx1XMk/RI8/n
yvypCfLnea84RN+4MANckqlnLpLrX4eYR/7rL4tCkdi3DZPkf4/8LadAZsLR
V4+J/9+v/783Qv72K+E6keaRDLC/Vdj7aMXyp8XI3zazeb4xSK3H8wy6zb0Z
2rc68DyD6kAHxzaLHjzPIHNMUv/yJxqeZxDFzzs2JELD8ww2MhQpdl1duBcH
KHcNarLbcS/uXJfgh7OHG3EvLiLdTPnxyq+4F1dVX8K+gvM17sW5/QjcGllc
iP1teyDn5sP29djf+oo+WJnK34H97XCqjnDBBTr2t0VGpRHbjEexv12cP/ws
Xo+J/a3m63vA6cc09remyjZLuuLmsb8N7Lzm/U19EfvbDTW9iReeL+B5BnHe
01wdhnO4F7dNQ67DKWoa9+JuSrG/fFT23zyDQ40hf0T8J3Av7kpU+sJY9xju
xRUah1s5lTNwL65UmJ+7SpeBe3Hr3FeJXj/FwL24rmYF8weDDNyLC976edr/
6xjuxfVVuLG9nRnHvbjjfhte9okzcS+OrqIXE8PBwr24/jgHthYfFu7F2S8V
Xn3TlAWQvw1nf6Rh5cYEyN9G/yxjUakTAPnb92unXqiZjQHkb7WM4o6u1RnF
/vbaTGHvyoZR7G/l3gdt6nQdw/6W6XHg1/XtE9jffh/lTJvoZmJ/q/17zMKm
bxL72/oy004hcl2D/O3flTO3vLbMYX9b+uHi/pjcBexvNyyYnb0VxgaRv6W2
ZZwurmTH8w9UfdULKCPleP5BAPfG4pToVjz/YGmBrbNWeReB+nHW7xes+c1o
BOrH7Sm8uMP0LY1A/bjKhp2nWjf24H6c7ZJbN9nUOnE/Li7X+lBuUivuuaVc
4DqQGDuJPa2e2c5CA8YsQD231aEP3IzJz4N6btKwwLd09yIQrfVYMzLKAS06
Nl48HDEPUN9Nmlv2m/zcDPa4VhsOs9g3TeG+m2KBl4Jo2H99t3EBkc41CeO4
70Yt3yRrrT6G+256KT9ffb3CwH03WJSqtkODgftukw3Sc4eeMHDf7XXdo0Yv
ozHcd/PcJvxB7cw47rtNVhaXZQVNgHSDmiCjEAHY/2lqbkUkE/zt9l6oEKLC
h4nga+EJFnAIfFa+8IQKJTyXK54kz0+Jw8LtcysF4T71i9l/5pgAeV7H29bO
u79PAOR5D0uMX5NWH8f9uD2LVa6HjzGw53W/kvJVYv0oQP041WjPicVYBva2
z3JfS29WYofI2w4qTlrJB7zH8yNcU0vdihob8fyITfbqgQdyOgnUk2OdiZ4z
/9tDoJ7cKvcUte/VNAL15Op9dkd/TO7BPblUnh1zCiu7cE/uhrvzquV5v3Hf
bbjbYtvxqyzsZ/ctdssWDc8A1HebDpDWM1BbAKjvlrK/JbVWbxGc/GDSl/aG
A2q4ynnQpRYA6r0JNJZqiL2axf52acSxxZH2Kdx7S19pFHB5Cwv33lLbZj49
FJjAvbfZjLc65Q/GcO9tPaj+I/eMgXtvuh82DxmS5wfytx88PSVj3Bi493ZK
J5nqJz6Ge2/O3+5aqwr913trdwio7d8/AV7m5vzUcRWAruYZdqvOMMHxd0WL
omMCMGtvXneJPAtoD9VZPHanwuWOomZZ/uT5wherMMgi72cdFUpBciyA/G5d
5lPej5uZAPldFzelHwKvx3FP7t6FdRv2tZDv99+e3JOV7jM8+xjY03qPdSTI
9bFB5GlHBH0bNJnVeN7Gq/3n7QMW2wha+u36BaNG8G3gR8Gql90E6s/VVO88
7RNHI1B/LvRLzsK9yzQC9edOSOeuWvuwG/fh4tsiS/cQUwD14T6dOuZ8sWUO
oD6c4ahU3C6+RXAkePfewU0cMOBq2rIp1gJo6HhusFOBE+ob3lL5MzuHfe2N
8rCwjdxM3Ie7w7VzVw95fSBfm8atHJY2y8B9uOOcBUECpxm4D3ez4/U4B/k8
Qr72rgDnY2oRA9QuFS8OURCAdn6+ukubJkAOrVvHPEMAqmRLFbXXM8nn2/55
N0UqPKDUXJ7uwgKPZC23XMimwokQ7xsx5J8b793351cRhK5sAsajRUzcmzPR
KqML1o0C1Jv7ubN5qvDqKPax2o9GFDp92CHyse9kawZzGhPxPJHrlkvF/Gsa
8DwRBiftRcb6TgL154y+fPE8ktZDoP6c15q5ZYm1NAL15/Lesfe96+zB/bme
rusfA726cH9uw20nz/j8NtyDq6Gobm7qYmLvOtrhtbjOegagHtyhmn0rQ8fn
AerBVX9LPtSmuwhmdpUb8D7kgC+XB6zItFoAqA/HddnoTNX8LPay9Zxd206p
TeM+nCXTRUTYjYX7cF+5FOUzdCdwH07Z8vcZr5wx3IeTa+xWyEpj4D7c3JaJ
j7/3M3AfTogp+FrYjoH7cFddbpZYUsZwH645J7lhcGQM9+FYJzn1v66fAJIX
tl8rsxaAf7JVDKfVmCBA9LQ36BSACk+OcFWIk+uJyME3rbZU6BjgbHHPj/z+
L/ZYdNGo8HTq8kWKNgsgb/vhjOrFKAMmQN725FvVNKX2cdyfa8t/Jbhx9Rj2
tqlfGz7vWTYKUH+u6lrLUqOlDOxhi/6UsvKK2SDysG81CyI2+lXheSxzsReU
VE/9JnKKY0+9NvkJwvNEsrr3dROoV/fpa/0JER8agXp1M5YPPxuF0QjUq3ts
O/jnRGs37skpijX4R8tNAdSTmynvXi9sPwdQT058/xuzb70LYKuvwtRrCgeM
UWX79XTVIrhygjs7SJATNm8ahg/15rGPdRRdMemnz8Q9uUqTDzFNl8ZxT67E
QScme80Y7smlVcso/ia/P+Rj7+zQs/Miv1/kYz0TTh45msIAvdMtQUVS5PVp
8fTKmqwJIP/cdLApTgAeviXOmZrLBIU3u25GS1GhWWV/+x1bFphr87ySnUR+
f5+nNn6+wQKz/bWZnNKCkCt6uKKynYn7dHea/ihcEiSP/799uvMRaldzDo9i
39rI3+i5/ww7PNn+y4nd9AdYHbM8fKVmFyGyNjn+jcovMMe4waW0jUaI62tq
0eM7wSliYUSnjEaE2o905ZfSwIENGpvOn+/B/booha6Z1y6zAPXrqFN/0spv
LYDfjnuuSxMU+Lon5cL0/kXsXd+qGp3+YD2Ge3Wm2uMFtLsM3Ks72ryTYzVk
AORdq6FYJrcvA0jqrvcaWUKFORfsY13I87VZ9T31oB8V0n5+cTIkz+cDaSe5
J5YJwtFrkpNbVrKwf/WX6+qcpv0FwrHWh4yPNoFrrp5Oy7l6iBbfW9+Wb/gD
TqyaawrMoxECXyYVWoluIBi1f7meDg3379YMalW0asyDhqbe8holCpw/EiDh
Jb0I3KPk3bcf5IDOw1wSttULuIf3pS86WKOdgX3ro9qrsZZGDIB86zPGb2bG
UfLzZSR56mlToe3Ft6JbPFlA0utAi2QFFfpaxPm3kN838qnlFkcqKpPYIfKp
wU9VBYPnwvC8Hceolvh7xA88b+cZ50EN028dBOrnHaw+XHTAv4dA/bzQo14K
cuT6B/Xz+i+7s+7N9eD5PAd2CboHZXThfp7ow/J6B6V23LNjH5BLqHnKxN7U
t7g2q33NDEA9u0LuOPbsr/MA9ewkb5b9Xae9CA47zbCr3uCAvtXH5056LQDU
t+M5GPD5IblfQF51MCaj5seFady3W7AyP7oykoX7dq+zGX8jz0/gvp1XNDdv
V/UY7tvx98+d/JzLwH07J071xrs6DNy3e22j9oHLkoH7drv0j00dnmTgvh2P
Ftun1W1juG/37FSxhArfBDhbSfuyeEoAfmcY7AjcwQSJh1JLfjQLwLquvZJM
AXK94zptsniGCjNnGwLZ7pLf53p/pnkbFWo6RH94cYQFkHcde9e6pNySCZB3
HS/86fltchz3836NN0UeVh4DyLs63frMJr9lFKB+XvjK74abhkexR3U1BS4Z
r9gg8qihtg6bt4NKPK+Ix6zwVKTXLyK2UlbC+2cDKN78ZaZrsYtAvb0CixrP
rZdoBOrtJcYcF/8RT57///b2yp/uGs5a7MY9vL1prmnnyP0f6uF9zVmtIio7
B1APT/FOnJLitwUgsvC+OWCMAk+e2WhTvmURVIbA88XsnLDRc2/TZdd57FM7
t8fyBTgzcQ/vm9Pvgp33x3EPT2HLrYu5MmO4hxfplLPs0UUG7uERH3tkHmky
cA9vqP1x8pMYBnAZV5qsFyfvp5veHGa+mADOE4JqIs/J9WrPkYh7r5ig8d2u
4l3iVKirGHnExYIFsrIDxFujqZAix2Nv48UCQc8vH7y9QRCGpRfukhlh4r6e
yLiz58huBkB9PbfS3VfNFUexL00As3usDrNDzV4H+abmepCyV6Pg7nwnIS43
NMdOtIIF+Z0RF/loxK1oHtpBi05w8/oSu5gqGvG7Pa0gxocGxDz22Jbc68H9
PeM/dY3jcrMA9ffOXU0VErdYAJ9pOWbL0ylwc0LFiCi5fkHeVGalI4+9xxju
7U2l9Fd8DGLg3t5KXh8/R/L+irwpb5eE50pPBlC9eZHwmRGAAkrq/T2q5PpA
uCzvwi1yv+fymc+EXM83n56LubRIhV9zA3TzpFjYn/K23OSXKfgL5l6O8W2r
bwSbwz5bmzZ3Ex1Py6UtEtvBnI9djkA6jXBZXdqo4tkNlHMtWozNaf/1++Sv
rX3NPw+4X6h9WtxKgZOzTUXT4ovASjTrOM9eDsg5HF+W2LWAe35FfOLFCUMM
7Et7q5ZOMI8zAPKlviorDj/VZ4CLPROFHWpUqDGS41XmQb7/48beOkVUOGMi
LrnCiYV96O5M34NBYexQ5rh7xuuKFvC1fFyTra6HgOoxW3mbO4CbtqVLI7ke
Rb0/v9+jT1xXLYCEltw1Xx5QYM6XuivC+ovYi3Y0jwd9Jc9H5EVHN0sbRTkx
wHx529Kci1R4VSNY7BJ5POeKNL7YjlDhG33m0hQVFu4DysjK7TSr/QtGi/T/
LEttA5MqTbG/QmiEwgfj1YsTXaDZK/VU5x0a4SY3WGPNTYG1WxJMpGYXgOry
92JfhTkgZcOJWAPuRexFl1m6nsgk73fIi6p0bb0xp80A8bqhatw7qPCbB8V8
5AK5f1t6qTb4DRUuM8rc408eL/7lVgdP5v0Cemf2Xy7RJNfjc1fj7vZ2AkGN
fY1N+TTiLyM7QvcbBTpKqrPfUVvEHvSYjBnPKfL82nDupcPGICoUmmnPT/Zl
gfrL+9xzov+A2xldg2ylNCJmRXBJ5EEKFB8zhBWKi0AzXNxR0Y0HvlO+Gm9k
wMAe1Dv4+Xlj8vtVvnVcNc+ACk8EfudvJa9Px+S98gvVVNgyGca9QF6/yH9O
5ldV3Mlhh8h/evbp1VxacZdA/pPuH1Aqv+cHntdlE52W8zK5g0C9wlJF14I2
1x4C9Qp5E5lFq7/QCNQrbF1WxbLnpuH5XutMg/QlvnThXmHruNiVQx7tuB9Y
y1odoeLCxJ6zaeOFri+T0wD1A5WTMwK4c+cB6gem6eWpf9FcBBPLw3/9cOGA
ghspPGKBCwD1BA3Kw8AB1TnsQXWYdxWjfadxT/CyYER1RToL9wTXnpYW/OQx
gXuCoWY6eSbNY7gnuOUDR/h9cv+IPKijt1Cu0CHGfz3BfRdf7jrDwD1BhWd5
A2cZDNwTVE1Yb3eoYQz3BP/YyZ2YoEwAr/Ey13WmAnBP8pYCjU1MINdd3xHd
IACThMucW5eT55uFdwr1FLn+aSpOYSPPD0cP05I1LVRoFZ7EtcWEBZAnDZ/t
z97oyATIk2rtBHKeHBO4V2jlUfz8sO4YQJ6U0+hl4ba9owD1CuvDnwlEdoxi
75kZ8Jx/bSwbRN7z+5Ni2d9iFXje2f1PkroXVvwiwnTdlww+aQDxG3fo0zu7
CNQ3fGfaebvThkagvmF/is/bY69oBOobrlgyYDhC7cH9wS+VjtoiHycB6g96
fkp/MrBiDqD+YJUsmwjfxwXAq8KsmumnwFnCT5RbdhFclPutcXyaA645E7D9
tt889p+C4ifXA5//+oO7Xq0yEgofx/1BjrUPKFcVx3B/cC/nVqq4CwP3B326
K02qNRi4P5jem5HdGcEASs7nU9tWCsAqw585TU8nwKMNo7Td4QJQkNuw8Xg8
E1jpnmyfFSPvF7dMWlNPkc/HOKrzUAQVzm1TiRz3ZoGmMU0hsFYQKpszTKKY
TNwzbHOPtosj9z+oZ9grF/BERXoU+82L37spdRrscI9DprBmRD3w2WLtqdLa
SbzI55dO824FF6pCHr1d6CHSD4xmX1PrBFObA3rnyOvx9qqHm6nWNKCf1uPj
9KwH9w5XOtDV/FfMAtQ7nOMyUfUwWAAlkpO615MoML6lTbfk8CL2nE9NTgR5
3x7DfcMZnzIp+1AG7hsKZ+slfyXvZ8hzHrAYMNW7ygCfRcP/6LEEYITGhDtt
L7n+YzvE63WdClXsreSfkff3Ddk19jtmyf1ay+yrAmkW9p12lzuMUyPI+7u0
8mhoSCMwv9MzEkB0EzYbek9w27aDh/RJSd4UGhFflpR8wawb7E/eYf3KjoZ7
idZyCXl6E3NAiqO/auUGCtTbd03+jMgiMDUe174hywGbeah03uEF3E9ML3Y/
IDTBwH7zOFXMweUkAyC/6XlYaa7wMAPM3hRve72PCg+eqDhjcIUF3mu2/jiZ
T4XKsZ+jBi+xsL9MKfnYVfGAHb7786zdxL8FHE4792KsqIe43OszrZrTAYSu
PK7jqKPhvuIb/cGQ8qXk+xGd4lG+Q4EJpnekDuktYo9JsxrULNViAOQxW0/O
rz/kwADNb23MqhyoMCMjYGIFeTy1RYWeSA1QoYNXUtMwZOEeY6hOj5HdyF/g
puPMm3mhDcicoP8pDKAR56yVBnf+6AKLfE9CTzykEUFh4XWe7BTYwTGqpsVY
API6E8tUeDkgh9LoSDZ1EXvMQ9fsFHNsGAB5zJxLW5zSDjDAzp4C8x9bqfDd
+WXytfbk9zvG3JDwigr3rjfgLLrGAiGhvlco13+BeKoNU2sPjRhMNHfJ+dgJ
Eh68dDcqphG9sqz7BZ8ocFT/8NV7GovYW37+Jq+3lTy/5gx3FCsGUGHWoeNl
weT+4fjsqYSzFn/ApI+3HFcRjch3VSl7Dynw55mBFnu5RSCtcA2YXOCBQwyt
u4cMGdhbipxijjCMGeCT2K3TPrpU+EFPeUT0Fnn8QovvCnymwjhORS9vaxb2
lXV7cjYqprPDH3v0ImNcOsDvVdTezBoa4Rd8dWiVCwVGs62LrDu4CCRZQdfC
o3lgvn612jpy/fDI34V92Io8P5wm7zST7/e6Wbbt0tHfYExUZ2vPVRrxKYs9
8PGjLvCMtzjveySNWFfq1rd6lgKvr5A/MSaxiP2lgXrt0yvk99/8mfL5Uxx5
vVwKf5Z6kwX0mZuFV97uBBvObFzMqaAR9SnuDs9zKPCQPGVDg84i9pYs9odn
5Mjj936ryjkzHyrcJbi/odeP3G/xx82/72oHHsfTZ4OzaMSISkhFrxwF3uEc
COWQWgRzl+T7Hp/mgXfNnq+INGGATt2aKFFNKvw4ebFp+XUWEAjPP/FrugM4
Xj8ss5pc/6VFeWw3C6PAntIt9yG53hNY89mJIHjgqjZd71nyfirZfDwrwYUK
dzz7GpVEnq+oR2m6xcJHO/0v9pnftjZaXTrIAAEmYd9MuLqAib3O0Zb35P7r
/ZVXrc0UaPfRq2JAaRF7zQS3LyKZ5OfTvrZejBpChUoHzFWf3GEBgz7RQ7y/
/4CHWczpqx9phG9qT7GPIQUWLZkefqy8CNJ7ZMVHjKhwbYistPNtFvaa7qvc
ajKK2SHymo4jb6KnV14hkNd8pPDKeWy0Hs9PtJk1jOUN7SBQv5Ie0/Jy1L6H
QP3K8pvSz5rJ/QvqV/qsoh7IXUHD8xZbcneu02/swv3K2vsrvoWHt+OepG2h
SeclCyb2lz9fDWxMok0D1JM8WeGkcDdtHqCepP5kLrULLoKqFuuq2IscMPNS
VV9t6AJAfcmXl5c7h2vPYb85F2773jd4Gvclt9R/UEjOY+G+5JzrbU4Hrwnc
l6yc6LNb1z6G+5LD8+lcHiUM3Jd81Gi1op9cHyG/+eh16MD30wzclwTbXjq7
jjBwX9IEzqX21o3hvuRC0k33o4vjgD9gV9WO4wJQ/nTRb9EN5Prwbe+oT70A
VNrBn1CyjAUUfmrVrz5Jhe+lNL5cJr/v4I2lSTONVLh+F3WN6XEWQP7zklbm
gU+XmAD5T/6Njxs/L5/A/Uq555+ttI3GAPKfejk/+aXAKED9yh/mKVOmraPY
Z950OjRZG8EGkc985gsW4J2PeP5k5FFCqKixlQjife4q4d4AapWOXXhd30Wg
3iX3en/f+xY0AvUurfqcOO3SaATqXXIePCY3sroH9ygX0l4XdmRMAtSj7Jjl
f/CabQ6gHuV3pWznsqIF4H9SpDSTRoF3I0uEJ8n7n+biK1lJJgfMOnNY4O+j
eew1pdUinTY/+K9HecnOYzYkahz3KG3ehezv2zeGe5RLBjvv/3Vl4B5lk5+i
wVXyekZe847iEYOQpwwQJevN2S0qAG//6b+tHUquP/POKGuFCcC6JEHOnBgm
2CrmNNIhQoU2vtUW+SdZwFPsZwTzKRWKv/z2PJW8/uZiUqfWrhGEN34uj9ea
ZuK+5dhdzaBJPQZAfcvT29X030iNYm/pWZkC5lXZoZxM412Pa/Vg988qtuNV
nYTVQiy8bdkKCpdIblw12UNURlitC5HpBDwRWxynvtKIhpwbp3WNaeCThXnH
xhc9uH8p2GRc/GZhBqD+5YzZj33jBxaAioaYlnwcBSYdPT5uRj6fkb/kfK92
J8pvDPcu7ZPVn1Q9YeDeZbyEbzw3ebyQv2wVIzwvuzNAcPerv7smBCA3r9SX
E4osYOrOu+feVSoMfWza8/qf57nlniO801RYdHPQ4PUOFhgYMrf87NIIqF1b
Gnszu4nNth4X27XJ9RDt6ERTIrn/FF0pcPdQN5BbMbUk5QIN9zLdEw8/Hu6d
A7tyig9tWkuBZ4uPrjAjn+cNl4XAbmkOWMn+QllwbAH3M5s9D2W2TjKwt5Q4
+Gl/kRm5H/7XW3q4UNN+65J/rys3/GgvFbqYPp+luLFAfF70vFUu+eeRM1D3
Mgt7yWhJyWUn/Nmhi5Q0c9v5FlCd8OzL7uweIkCZaXksqQNYORZa95LPD9TX
bBZ1MVaZnwciiis5xm5R4LoN7ObJ5HoU+cnLnvE6uuR6GfnJCzNnlqeeJ8/P
TVt9v5+nwp5GX8Xv5PPNoezGdUofFdqvo3Tf0mLhHudqccNjjgt/wZ6H7Bv9
9duAR/Q+ret+NOJW7mvjg2VdQHGPeIJNMI2I0r5geH9+CXQ+9XCp+NACeHNO
mG18GQekvtuVmUuuJ7GfvG/6d78t+Xz910/ahR/1o5LrIda7Wqe8zVSo/0xR
R/Y8C/Cfzz+clkw+P49r6VaRz0+TZpGHzWa/wFKNQzN1O2kEx3Rda21WJ9Ce
bho0L6ERlvqiPi7lFMgz9jbGWGsR+8id4hHh4uTzbqBylK5+jwrZL8uVMcn1
xUo4nK8I/4DWmzbavwpoROUmqlapKgXOnFNz9tuxCNbdSX5lfZ4Hji25b3/0
KAP7yIkISNQYMUBQz+MLdgepkOFsESZFri8UuH3ervpEhc+zqnfJn2NhDznj
t7Wd/TU7HAoopuRadgB3iZB6CrkeYn/7rOe7EwUmfniT/YBcf/hmLDt1NIIH
ApO7WjXkeshzXnE76ywV9nF4379Mvl/VWO2bv779BtchfCvmRiM6lrkxX93q
AglvdeWsYmnE8z9hHfUs8nl2zEr6ArkeQV4y2bt7bF6T/L7Bp7FvsVTo8XpS
IZBcv9keivCUc+4Erh/EC1U+0QiDT+FWRpkUOHbPJ5rr0CL2kYLrJY4fIo9f
fMxCkLU3Fd6olHoiSV5v64zlhQPK24Hm8psmne9oxNywnfa4DAVq+zjve0yu
x0aLzxrFmfJAeTbHox+PMUCKWGfaLKBCbs70bUNXWWDrwPaS8b4OYLjZfuo+
eT5v/fB0o2AwuV9N9TZSJ9dDLo0aR65/4IHNQpE/z5DvX8BgdVuaMxXyB8U7
PyJfH/VI1+59InW0+C/2lOm15eEZOuT7TVm6z2myE/ywHZg9n0sj3H48iQtp
oMDQ3SISh1QWsa88WMy23If8fAp/u+DqYCpsnwCpG33J9dqOFIvOwj9g+86L
09VlNOKxeQF4pEeB7W4nbNTI9ZRbhqbMD0MqrOLIK31N7leRr3yX/XUgpoAd
iu9OaKCDDmB5X5a2l7x/Tg42N2ico0DLUMet9/eT+6v+wltc5lT4ldMp/C75
eshXDo08O7yN/LzhjJv6lgadIMi8vqn9M43Yz9FkVPaKAktlY7oXdBfBZhen
pat+8sAGiVXMcPL9ewbc7briSYWPKLs1bpDHxzRE4LHUpw5ge3qTyyJ5fNdN
NQn5+FNg7pe4z2Xk/VhJf7fgaCYPlH2SnaFBrpcH9sXJEReoMNqW5+n+f7yF
QOPjJdXk/vaj8q5nYBEIP02e0ZjkgUYxT9arka/H/8s+TOYhFd6/rOK4gTw/
w3K+PHxw6w+Yz+DKEibI+2tXi7zfnQ4QYfnyiRr5+jwuphOW7hRYNk8pHSDP
r3jq26ZuG/J89P7ooUjef04EHHfpKqBA35Pur69pL4Io3wDvHb08cOb0mecS
5OtVZnqoHPWlwjrbzVUvyJ+f0tD5W7a8E7h5L9/jT15Pu26d2B3/jALvn1XS
WkOeP+kWhg85PvLAlt+R9+PI54mCVej9525UKNATFZ5Bfj7kK++Oib1aGvsX
BLz66HacixcKOo5uHSRf72HCXfm9s3+AwqdyHs5KGoG8ppYou1FhGTv8//33
//8+5DVZuzwXTKP+/uc1g5X+8ZrqyGuK26hs1cyrx73UdaX1yuLkvhd5zfTN
3ozVvDTcS81i57y7oEDHvVS/xBtSCyl03Ev9pSNr/7GiF/dSry1/EiPT0oN7
qWn197c/Nv6vl+qU1mx6dOMf3Ett2tKYGGjcjHupGe+lr7NTvmOvyRN9lZ1b
sxR7zRLhrpyQpHg837djxb1H5mU1eL6vyWSj9R3LP3i+r+NHWTkTRh+e76vW
/qLqCG0Uz/f11uqrlVnBxPN9R7OrHKlhk3i+b6DTE8XYI1O4l5q3dbfyxN5J
3EtVVlR595CXiXupiio34nZ1MnAv9eXnan6HX0O4l7qms9qcl9xPIq9p+Diz
dfW6X7iX6jRnSt3pVIV7qUvebXdk/52KvebEz7HzG/nrsddkaN031Hncjr1m
TB3duwHQsNf0yQ1JSivvx14zq2qHAPufIew1C3vmRi3Oj2CveV78IkvizzD2
mpbAhOcv1yD2micOxtRtM+zFXvNpUfTtpNQ/2GueuiPnKqD8FXtNKnvBO4E/
Jdhrth2Lbsz4XoS9purxIe4Jy1zsNR+JvWrm2foGe813m1sLFShXsdc8G/6N
a/5NGoG8psn9A/cHU0oI5DUZQ2XvmBHVBPKanFk7agb3NBDIa1532/fxrkgr
7qVus7OsNGKU415qbO4De4HqVtxL3WleRL21vRvP+02eTi3lNe/F83435Poq
ZiTR8bzfBZ3FwRJTOkBe8/jszrkV/TSAvGbX0RXw5stu3FMdZSxxaJn/jHuq
uQv7jB85pOKe6lQIo//m4xI8z/fe8xvjjh8b8bzez9He4zfWjuN5vecPCjfk
+/83rzd/5ndS5+4pAvnO2Sj1JQvMSTy/lx5u+M1CnUUg3/npzwe96ofjuH/a
2Gu2Y9q6C3tLim9g3Y9kOvaWv4oOihh7D2JvGR+w/+6y3mHsLe8rjlmttx7B
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
IyuZvg==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{846, 46, 44, 334, 335, 336, 337, 745, 632, 540, 
                466, 411, 378, 769, 656, 564, 490, 434, 788, 675, 583, 509, 
                338, 746, 633, 541, 811, 698, 467, 795, 682, 836, 590, 821, 
                708}}], 
               PolygonBox[CompressedData["
1:eJwVz8lTz3Ecx/EvWqzVCQdmRKFlJkLLDzUYZnDIYIZj/dqL/AeWVruD5WZX
GGaYYcYSJYpxzNZuOThS1nLz+B4e83o/P9+MSo7u2143OQiCSXwlg3Qeeain
hFE/sJ+F9OtLLKdXFxPDY91AlDF9gEUM6Mtk80aXEEu7bqSUFazkrfcocTzR
TZSxinfeSonnqW6mnB/6ICkM6ivk8F6XMZUO3UIFP/UhUhnSV8nlgy5nGp36
MJX80vUsZlhfI48+XcF0nukjVJFPv7dKZtClj1LNb93AEkZ0KxEGdBUzea6P
ETMlCE7rXL7pGv64G1nKR91Ggp87r9cxrlP0PfcuVutBW82s8N/59sC+8D7b
3erezHEdq8+488hyd9jv3he477g32R3hd/vKbrO1vv91N1Gg02ymbbdb7Cff
59lbeqMtsjm2xxbZ674n2gvh72/X22zbZSd8S3Xfd+8m4n5t13gfsjUkkOb9
oe32PsfdFv7fnNBx+qw7n1GdrO+6d7JHj9tm0vms5/t+O/zbuKGT9EX3Bv7p
tQy7a0mkR88N/w73Vk7qeH3OXWgjdpnttGO+7WXC3UIGX/RNChgJfyeSeKlP
UUch/wHfvnBu
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{299, 45, 42, 515, 607, 720, 304, 415, 471, 545, 
                637, 750, 352, 385, 440, 514, 606, 719, 303, 414, 470, 544, 
                636, 749, 351, 384, 439, 513, 605, 718, 302, 350, 383, 438, 
                512, 604, 717, 301, 300, 349, 382, 437, 511, 603, 716}}], 
               PolygonBox[CompressedData["
1:eJwV08lLVWEYgPFbbbLaOJRpkFTQwtQ0hQiz0SGru1AoaOu+LCut/6B50HJq
U62svJaBC6EgFBrMpn+gzNll0yK14fcuHp73+b5zzj18h7uhobH+xNJEIrEE
o9iCAiQtHMYhnEc3PmGdi1swi4P6HLrwEbnWmjGDWt2CTnxAjrWzmMYB3Y85
lOrr8QLL3Ks78B5rrZ3BFGr0E8xim76Gf/E8/Qu7zXewyjPa9Ttk69OYRLVe
RLX5PjJd91jXm/uQp2f0c3ORuYSv4m+8g/XXvMP60XgXfsqb+GecD7/QJbyL
93A3r+Tb9pM8rMs4yfv5AefyqP1aHtT5vIYruIknUGW/To+Yy/lYnB0P8GZe
iG/EQ7qUq3gf3+MM7rP/0rzdXMcprDdPW39mLjQX8xX8ifOyfoT7sdHeD11h
7sIKfSt+z9yDHP1Wrzafwjgq9TwqzXeR7pqUnsJWfRmLaNLfsdPciTTXtekR
ZOmT+BpnpXsxiSJ9CQvxe/obys0dWO7+Vv0GmboRY3EW+hEmUKgvYj6er2/G
d0WGjj/AF+zVDzGOAn0Bv+N5+gZeIV0fx+f41vo/ECVntg==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt0mWU1FUYwOFlpQQkpZdc6qN0g9KK1IIg0iUhnSoqIK2IinSXUgIiSmMC
Ki3dnTYmKKjPew4fnv3dO/OfPTP3vUU690vpmyohIaGwP9HLrCTJZrhm15Oa
rK00ne6///wCzaPntQZ3+ZKp5PT6Ge1PZuuj+h6PcItNTKQbGb1/SJfwJA/Y
79Y5DCORK6ziJZ6mJvfYwTQGUJpf2cxrPEuj+H9c5X1epjWPUobUpCFt/Dau
sZpXeIbHKMtvbOF1utOY9FxnDSNoQy3K8TtbmUQPmvAgN1jLSNpSm3/ZyXQG
Up4/2MYb9KQpGbjJB4yiXXwHZ3VAF1KH/9jFDAZRgT/ZzmR6kclnDutSmsUZ
2O/RueS2PqfPk9X6uC4nv/WlmBXfsY4CXntVc+gpbR+/0fqgFtFFmlcvaHGt
q3HJvpJCOlNz6VktpoM1ix7TorpM8+lFLaEV9S8+oaD9m/qwntbneMj6iL5L
SszVfq/O4wWy2Z/QFXEGfM+HjKZDnK/3v9XF1Iuvav+1zmIIlbjNp7xFb5rH
3fHcPp3Pi/E9+IH1jKEj9Un03Dc6m6FU5g6f8TZ9aEFmfuQjxtKJBlThbz5n
Cn15Ks6Mn/iYcXTmcaryD1/wDv1oGXPlZzYwni48QbU4I35hIxPoSkOqkz1m
HWdOzphd3BfyxJxjVnFPSIq7ETOKOVM47kPMlOSYddyHmCklKRV1Nv8Dlf+D
VQ==
               "]], 
              LineBox[{41, 2844}]}, 
             Annotation[#, "Charting`Private`Tag$59438#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1XWQlVUcBuDL0iEtjTSKLN0oCyzdYY/SDcICSjlKNyooSI6kIF2KdDfS
KN0NMzRIi88Z/3h4f+8539377b3nW3K1jGvcJV4kEnnhn4LsjYpEPuWVeQV9
aUI0hdhn7zMi/KH3oymF2W+tCfFYqfenGbf0r8nJUX0qRTigNyWKVfoAmnNb
/4ZcHNOnUZSDejPi87ZbWG1tIC24Y60vuTmuT6cYh/TmJGCNPoiW3NX7kYcT
+gyKc1hvQULW6oNpRQlKcsR6SxKxTh9Ca0rxl7VWJGa9PpQ23NP7k5eT+kxK
87femiRs0IfRlvv6APJxSp9FGY7qbUjKRn047XigDyQ/p/VfKMsxvS3J2KSP
oD3lOG6tHcnZrI+kAw/1QbzJGX025TmhtycFW/RRJIgfiYzVy3BL78gj82De
4qw+h5Su+1mvzGM9r/6b+SPe0U/KDrwWXmdvpdxqPYN5trkW3+oJ9XHmshQx
b5C3rec0LzFXl++FfblTNpSd7P9jHkKMXkBGy7WytjxnP5tcoFeTDWRpuV02
kL/aTyWnhvuXsbK43Cyf2Mtn/t38MeXNu+W71k/JjqSkgPVVcpv1jOY54b35
Tk+k/2Quxx09l77U/D6f64/l0HDeOa9nt78w/G7M1VPr08xVeKpX4LS5E6nY
rmcKv4e5Dt/rifXx5oqyvCwqN8q79jrzxDyMglzQ5xHDmXBPpGaHPprwx6Ni
+Nvheawkz9rrTBp26mOI46k+PHz2XNTnU5lzehfSskv/ga4800dQiEv6AmI5
r8eRjt36jyRx/xPCWeKe3o3n5pEU5rK+kCpc0LuSnj36WJJ6/cTwvXFf784L
86hwzriiLyKN66brVXmmV+WiuRuv86ee2TVzzXUZpyfTJ5kr8EDPrS8zf8AX
+stwtsN3EH5Xe+vkVetvmBeZG4Xny7xDLrae1jzDHCuryRJyS3g/+dx+frlC
ryk/CZ+J3BN+Trje/iVz93A/eoZwruTq8IzJvfazyHnhPMl6sqTcKuuFc2o/
uZysV5IxspjcFM6WfGg/j1yu15AfhnMtd8kv7f0bznx4TfherK+X16znMC82
N2aJnk6fGZ7nqP//X6rO5fB5kZF9+nhSuG5KOMc80nvwKpzx8IxyXV9KDa6E
eyAT+/UJ9CTiZ4wOnyM39GXU5Kreg8wc0CfSi1pcs9aTLBzUJ9Gb2ly31ous
HNIn04c61KUe0d62vmxAQxpxw/W9ycZhfQpfEc/9jQnfAzf15aS3Nit8xrzU
G3PT3Ifs4bm1v0YesZ7VPD+cWVlflpLbZH35H+o++W0=
               "]], 
              
              LineBox[{781, 668, 576, 502, 379, 770, 657, 565, 491, 435, 339, 
               747, 634, 542, 468, 412, 380, 340, 341, 342, 343, 344, 345, 
               346, 347, 748, 635, 543, 469, 413, 381, 771, 658, 566, 492, 
               436, 789, 676, 584, 510, 807, 694, 602, 828, 715, 850, 348}]}, 
             Annotation[#, "Charting`Private`Tag$59438#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HV0lmUYx/EHGJiASWMcOwixj4CKHgMQpOZGMzCBDUaHhUGniRtlYKAC
GygpoYTS3aFHjzK6U/Rz/fHdL6773fs+cd/XZ2Q1zCyUJMlBf1KLJEnzokmy
KCVJjtCn6GZaC0mxJCkwn8nfgNOYaP43bYBJZjk0Bf31u2lt3MYvo/diBj/A
utf5f/j2KI6F8p2YzK80/5YvhdHyQ3hO10JezD+NvbEGubqiGKC7HQN1b8h7
+A4ogVW6NLTUL5FrY5/8HQYhHU3RLK49vifWopX1S62tg/3y9xgcPVqb/aqv
iwPyZAzBm/oCXUeUxOpYizb63+RncFCegqHop9+ry8RlWBNrkaFfJtfDIXkq
xuiKYaDuDgzTvSXv47NwOdbGdelK4xO5OjJ0beXlfH0clmfJN+JLOU8ey1+A
QfLvtE48D345vQ8z457TJhhu/dt0v+4Y7US30ydwBf8zrYSzmCLvoY3it3t/
1sV95MvgJHLM/6T1UMS8RlwDXx3/Yl7cX5qGC83b+nw7foX+WWzhH8MR/Wx6
E77S58vj4jMYLFfCCv5+zOJHmL/DH+A740r8IlfGVH59PFO+LHLlmmine15e
yTfAUXkaxusuwhBdZYzUvSsf5LNxFTbEZ/GCfpXcMO6dPB2j0F9/SNcFV2Nj
rMWL+tVyIxyXf8B7GKA/rOuKUtgUa/GSfo3cGCfkH/F+9HgZr6A9OkS2dq11
TXBSnoEP0DHWma3Tp+JU7Hl8iIFxr3XdUDrOBl1m/E/9+tinOB3vFz6K/aU/
quuOMvG8dFnx/foNchrOxLPDBN3FGKqrgo9jv8nH+B4oi626TvEb9RvldJyV
5+BT3SUYpquK0bEn5eN8T5TDIrkK8vhtsQ/5chgjPxzvQlyPvIlvinPxv+Wb
8bU8V/6MvzT2gfwHrYu74tyiD2B2nC80NfZg7HN6Ip4f7UV30CdR2PtcXl7M
V8U55MsFtHHsR/Ptsff58jiFseZ/0fpxzpo/Iq/ja+A85sf5QtORHfeabtY1
i3vHPx77Sj+X3oJv9D/Jn/PFMUKuFmcm/yDm8Dnmw2K/8r1RAUvimjEtrsc8
j6+AcfKj8R7Hc5K38M1xXp6HL3QlMFJ3N3J1w+Pa+D6oiJ26ruis3yq3wH/y
/DgD0Q3ZZtv0LZFgQZxh6I4e6Ile6I0u1m63phUKYWGcDRihPy33xTXYpesT
363fIbdG4TjPYo9jpP6M/CquxW5d3/g9+p1yGxSJc0Q3UVcSo+R7MCH2eZyJ
/Gu4DkvlapgeZ655Pl8R4+VacQbxNbEgvjOujd/FZyAlnpt8KybFe23+PyG8
FPE=
               "]], 
              LineBox[CompressedData["
1:eJwV0stTjWEABvA3OVFaELZ0cistySULDCkLM6aNGXYuhQVLKpRu/oDudrqH
rKg27iZymWFBCzMuXVmYYcxYGKrfu/jN+zzPe74zZ75KHj9fei4lhDDK8kQI
TYtDKKAzNYQrVHPB/sV2ggSjti6a7P/0apJM2Gq4aP+qnySN57Y+2wqa9W10
25r1/3INOUza7trWcEPfx1VbhT4hn2IJD/U8bssv3PfLWbTo23krF3Jf7nHf
Is/F7+KTXMI6ecy5hSF5yufuyWvp1Gech9kvv3fuZp4n+k/nUdLTQqj1XKU8
af/tLHN+dBaR4n6p/kjezF8G9W/OUhLuxzw/IK/kD63xPTgPsUN+59zFA/mH
8wi9nmmNv8dWy2f5IOvll86tDMvTPjckZ9OlF/FB3sNTuc59lTwll5POYz2f
O/G73N+UV9Gm76TP1qYH6vQN8V3ZhvUk3foB6m2X9Gn5NBm8st2yraZdL6Tf
1h7fFfX6RmZtDVy2zehnWMbr+K7osC+iwbYpvk9bY/x/tc3qZ8nkTfz9XLen
0mjL5bttRM+hRy9mXN7LM/mX8xgZ/j7XfHYBimRr7A==
               "]]}, Annotation[#, "Charting`Private`Tag$59438#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hf8lXMchvFTNCQNmiTtFCkNlNXWnpraadPeae+9956a2spsL4UWGvam
KJRUkvfnj+t139f9Pb865znPc3K26lKnc5JEItExaSKRJnkicS1FItEGf+oL
0AqlkTVlIjHangHv8+FIi394W/ylL0RrlMH9Xj/GnhG7+Aikw3XeDlf0RXgZ
Rb12ia0QPuNl8YBtLM+E3XxkvA/bRv4MfuTpcUNvj6v6YlTzmnd4pfgcvBhf
qj+GM7wpP6Y3QjmejY/TM+NV/XO5x15P36/Xxqj4THyT/ix66z/In+L66Cf0
2bKZHCH/kivkvc5v6h0whv/NO8gzfE58Zl5dvsunyMqyv/xFLpJtnReXy/gE
WVh2l9/Is86a6R/qjTFEvyTL2x/Ux+tZ0Fn/Qu6119cP6HUwOq4z36w/h5/5
ffhX74hr+lK0QwmvW24rgnO8ArLbJvCs2MfHIANu8U74R1+G9qiIjPjP/gqu
68vjWuAFZEJmZIn7LO6d+P7ju4nPEv8Xbsf3gxv6CnREJTzkfUy034/9fGxs
SNg7227qK9EJT9hW2B7HeV4ZOWyT+AM4wMehnG0Lfx6/xGuQxNaF/6uvQg3+
Hq8Sn4k/yVfqRfE5r4Kctsk8Gw7yBvygXhfjeXm+VS+NPvqP8td4hvSTenOM
1K/InPakeld9rLwV10Ce5XPl67ymfJ9PlVXlAPmrXCxfdf6UXMUnymKyh/xW
zo97xHlz+RGfIV+SQ+VlWdVZLn2K/iC66F/KQ/aG+iH9xbhH497g2/QyuBB/
hzts3fh/+mp0jucUue1T7dlxmE+MDXfau9tu62vQJZ4T5EEyZz2cJbCWd43v
AnmR3FlPexKs493imsTf2afZHsIRPgn5kMLey5YU63l31Ip/yz7dlgMf8MnI
j5T23rY7sIH3QMm49rw4vuS149+2zYjvDEf5lHgGbNt5WVzkD+MuWx9+J97g
PVHKtpqXwFe8Tvzftpk8F47xRvywXi++63iG+Jvxe4a++k/yt/ht1U/pLVCA
p+J99WTxjOrn5Mb4zPoufZqsJl+TF+SSuD7On5Zr+CT5hOwpv5ML5NfOW8iP
+UzZRA6Tf8jlsm58Vjkr7nmZW3aVX8kPnTXWj+j1MVj/Pd5HPNv6jvg9w++8
DT+tt0RBfjfvpyfHprjufLdeHb35M3yt/iS+4S+igG02z4OP+HQ8gtT2/rYU
2Mz7oB4exT3OBthTYgvvG7+jKIQ0zl6z34WtvF884yhon2PLi4/5DDyGtPaB
tlTYxvvH8xPvwT7Xlg/H+UwURjr7INvd2M4H4FnbOv4Uvo17Id6nbR7PjxP8
Jf6B3gCz4neO79QroJ/+s7xkb6t/orfCKP2qLGJPrw/Wx8nU8fsmz8t5cZ/F
PSn38OmyhhwoL8qlcT2cPyfX88mypOwlv5cL475x3lIej/cmm8rh8k/ZOK6r
Pl9/GN3i/pIn7U30o3pDzI7fV/6WXhGXeTv+qd4aj/N7+RD9HuzgdflevWa8
X/4836CXwvdxzeI7si2IZwWn+BwUxX32obY02MkHxftBMWRwNsyeFm/xwWiK
4sjobLg9Hd7mQ9Asvlv7wriPcZrPRQlkso+wpcc7cc/yfXotDNJ/k8vk/2wU
MxM=
               "]], 
              
              LineBox[{1966, 1851, 1765, 1631, 2096, 1950, 1835, 1749, 1690, 
               1590, 2071, 1925, 1810, 1724, 1665, 1632, 1591, 1592, 1593, 
               1594, 1595, 1596, 1597, 1598, 2072, 1926, 1811, 1725, 1666, 
               1633, 2097, 1951, 1836, 1750, 1691, 2123, 1978, 1863, 1777, 
               2152, 2007, 1892, 2183, 2038, 2213, 1599}]}, 
             Annotation[#, "Charting`Private`Tag$59438#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1FW4FWUUBuBNH0I6vFK6U2+UElBCQkmbBikJEwQRUBqUTptukO4GUVIJ
pUEB6U4p33XxPv/3rT1n9tkz80+eFp3rd0qWSCSSkicSM5MSiV7pEon7aROJ
YZTlkdlhJpk/xUKzxuRmlnlvswfycMrx2OwIk82fZpFZE/Iw27yP2UN5BOVJ
sNrsOXbIXTnquCl6bhbrTcnLHPMvzB7JI6lAMtaYPc9OuRvHHDdVz8MSvRmH
5Te4KOdjm1yVg3Jf5vqbL/XH8igqslevyyk5OWvlsuySr1o78ql8wtqYa/J9
azeOO980a15Spk8klvrsktyeTHpz/Yj8Jmn1S/o9+RNy6Pn1X+VqpNYP6Tfk
LmTR++mn5RZk0G/HvZJ7MM9397UmGG1+3tqGF+R91nqcllOwTi7Hbrk7J+Um
XI/f5TzT5Xws01tQgN/06hyW+zPfcf30ZIzRK5EyzmU+wyw/y/WWFGSBeX+z
5IzVK5OKv81/ZiGLWMwAx6RgnM+rkJp/zJcwMK4t481eJA2nzJcyyDwVE8xe
Iimul/kyBsc1ZaJZVdJyxnw5K1jJEJ+n4RufVSMd/5rPNCvACr0VhVhlPtQs
iW/16qRnvV6ePXIPzjpull6QlXprCrNdr8EReUDsB8d9Fc8F3+k12C/X54yc
gQ1yBX6Xr1k78VlcQ2tTbsgP4vnknPPNthZilfllawfejb1mfYt0nqHL+n9y
V3LqRfQd8stxLfSj+k35fbLqA+O6yS15Qr8T+z/+D3Lpa3zv13HuuNf69z6/
ILeNc8oHrA34V75t/TDOI2+0VuQPuWfcb7kZN+NZds45cmFW620oyk69Jsfk
QbFXHTdMT88Pek0yxvebzzUrwhq9LcViH5gPj73Ej3otMnHRfD0b2MgmNrOF
rfzCiPi/+cnxtckce918GyPNMzLJrA5Z4vqbzzMrylq9HcVjv5uPivcDk/VX
yMqm2LvslT/niuPm68VYp7enBLv0WvHukQfHPnXcaD0zU/RX+VNuyFk5G5vl
SuyTe8V7zd8s0IuzXu/AMfltrsgl2S3X5oR8y/oBQ2J/WFtxV0643z3l7c43
Jt5ZsY/NpsY1ldvFddHr6n/JjWL/6Of0O/JHZNOz61vkyrGf9f36dblz/C69
d+x5uXnca/2W/lDuzrV4n1hLsCGum/W9IB+3vsNVuRR75DqclIfGXpVbcy/2
gPOMjWeeaXo9DsqvcV7OwVa5CgfkPvE/xntML8lGvSOl4zk1Hxe/jel6fXJy
I955ZqXYpHeiTNxT8/Fm2ZmhNyBX7MN4P5qVZrPemWfi3phPMMvBTL0hT8Z9
inemWRm26F14Nn63+cTY78zSG3FIfp0L8l3rx/H9ru3/MdQlsw==
               "]], 
              LineBox[CompressedData["
1:eJwV0LkyQ2Ech+EvneUCZGXcQmShpmZGQSyVwqgYa6mg5gbstb2x9mKprAkl
lRuwBDOeUzyT/+89J0XSOjLROx4LIYzR2RBCpT6EBT7qQjiys1zYk+S4tbt5
dS9F23srdhPbdh8JynYXVfcin947ttso21PkudNXtTg7dj9JvvQTLcelPU2B
e31NS7Brl0jxrZ9qea7sGYo86Otakj17gDQ1/UwrcG3P0s6jvqGl2LcHyfCj
P7GppznQhmjmV69Q5ZktzzMcejZMC3/6uVbkxp6jI/r9dg9v7mXe3aPU3LHG
EOaj/8bni+//A+P0PTk=
               "]]}, Annotation[#, "Charting`Private`Tag$59438#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{297, 298, 296}], 
             LineBox[{852, 853, 851}], 
             LineBox[{1548, 1549, 1547}], 
             LineBox[{2215, 2216, 2214}], 
             LineBox[{2842, 2843, 2841}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"True Dynamics \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
dldLADOslCvPsQuoCA6cn0iiERzvHvX99uCC0eMnb3BMsEFf23yq5AdBCN6u
ujtE1hMdVx++H26hwLJzn3eXSLPAQb13fSKXqXC7l0ut0isC6CYY+bf+agMZ
hyg/1xvRiK6lXpNvAnqA9av7nzf604jfQp8PFbE4YX18hbPPezaoHXnlabtF
EO6p8Fy9hDxvuuyT6TxPKDBBy+W5Jbme0zOP3oYXk+/LySETfrL+dtkbd3WL
ZzdYPDWj35pAI8y+xp6wyOKC5pHhWZXdbGA8nyj6alwQNuhp1vUxh0Dzl7uq
c1cpsDJtPPWDIgusW5VsXPOYCt8/WvomkOwPZA6pi4d97gBhinaZuddpxDzr
lNH4Zi4Ys33fRsteNpDdCoU8LgrCb0PflvOR9Td9ojCJUkSBnKGdpTbken5v
uksx6aBCjp/qItJvCLBxcNPHcXoX2K02oCP/kkZsLHq4VjSKC97+XROpP8IG
sczqY8fqBaEjczJmnuwPUN5mTJIqLLU2m9ie/iZ29Da5X/7utuMm63GXAAlT
K0EueOVK+TuzajaYuXeR6D0oCH9NqysVkvux0xvV3XfSKDBor0tbEnked7nG
HDvzk7xfU5arzpL9wPMUXh2P6W5ge1Jl0COaRhwVXREeFE6BFunP/iWS+5fg
nWez6Wnk85EZH/yfep6inHK8u7gT3G1dFAmIpRH37AtB5H4uOFqwVOQ7ef1G
jQL2U/cFIXujDLWOfB7cyU75wXcKlJbTOWa6noX9sFOXNhYPOZSAVRov6gdA
F0gxjYv/Sa7X9FBzvb4zF2waqFeqIPvFKetlpbvSBaHpWOqKHPLrLblz7d66
RxToBc8EyJLrv/PYyiWH86kwOp/b7g+5/rF//U0dzbrBlvDNaePk87qLu8mi
7A0X3CH/3OYv2X+5Ba1/8jCWCmFjs8yeXAJIWogZC6zngp2s67K9HWzwgP9u
4fIzglDbYjj6H7mey+QfmajmUaDOkWkrd7Lfto6m3Fv3tQsYdP/4so5cP5l/
TWLBoVxQ8M0dSeO/bJDi2nI+vEoQNtYJSOwj1y9IZNNg/g0qPBIzkJxP7uch
jQLDb15T4Of3+vnLyetX+CmepVFJhbnzGcJbyPPuKpjamnCLAqvV+G//Ib/f
oRFZM5/XVOj5uc01jrz/93O/h98J6ATzn45tDSXX6+0nZ/2UXVxw37XKem8W
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
wZ+Pt4NKsprfbGOQbXw8eBu/z4y3/w8fBL1x
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{559, 3265, 3263, 558, 997, 877, 777, 697, 636, 
                598, 1019, 899, 799, 719, 658, 1038, 918, 818, 738, 1058, 938,
                 838, 1078, 958, 1098}}], 
               
               PolygonBox[{{1095, 3262, 3260, 545, 546, 547, 548, 987, 867, 
                767, 687, 627, 588, 1017, 897, 797, 717, 656, 1037, 917, 817, 
                737, 549, 988, 868, 768, 1061, 941, 688, 1045, 925, 1085, 825,
                 1070, 950}}], 
               PolygonBox[CompressedData["
1:eJwV0kdszmEABvA/an/VQUhIUE3EjIivql9pq8LJqBptUrPmyV43u73hpjVa
WuEgESIiqNnaq7jh4tbdGkfr9x5+eZ7nfb/8862M8u3F23pHUdSLb9yLRdFd
yhzGaekTRTuI0WAfJIkmeyEtehWryKLV2U6SuW8foi9P7UW06tWsZib96M8A
nrlfTJt+hjVk0+ZsF0N4YB9mIM/tJbTrZ1nLLNqd7SaFh/YRBvHCLqJDP8c6
chjMS+dL6dTPs54EMV45L6ZLr6GcXDqc7SGVR/bR8HmSouiEPYnPdjKv9WV0
67WkeM1pewYb7N/yGGNptke6r9PzmG13yr2k8dge7r4m3MuEnCZvh2eE71I/
qU8O9Jvyi/PR+mW9UBbKuGwI36m7N3I52c567Ex51Z4nL9ipsiq8FxmXU+Ut
uUBudP9HP06OnSEnyOtyvvzgfpSstwtkvpwu78g57rrkPtIZ7/yafOJ8hF6r
54Znh/+HfUqfwld7jH0lvMfwO9tv5Qq+6xfZxF+7gnF8tPPo1vczlEa7Inw+
3tkr+aHXkeb51XYWm+1/spKE80w5Ud6Qn9zl06MfYBhNdmV4Bu/tEn7q9Wyh
gHSanZfyS7/EVubyH95la+8=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{510, 3261, 3258, 663, 743, 843, 963, 515, 638, 
                699, 779, 879, 999, 563, 602, 662, 742, 842, 962, 514, 637, 
                698, 778, 878, 998, 562, 601, 661, 741, 841, 961, 513, 561, 
                600, 660, 740, 840, 960, 512, 511, 560, 599, 659, 739, 839, 
                959}}], 
               
               PolygonBox[{{1029, 3264, 3263, 597, 635, 696, 776, 876, 996, 
                557, 596, 634, 695, 775, 875, 995, 556, 595, 633, 694, 774, 
                874, 994, 555, 594, 632, 693, 773, 873, 993, 554, 593, 631, 
                692, 772, 872, 992, 553, 592, 630, 691, 771, 871, 991, 552, 
                591, 629, 690, 770, 870, 990, 551, 590, 628, 689, 769, 869, 
                989, 550, 657, 718, 798, 898, 1018, 589, 729, 809, 909}}], 
               PolygonBox[CompressedData["
1:eJwV0slTj3EcB/BvywWdpD2pmZQxUsOgGZqUonTrpkS6lSXcrHVsk0EnHJiR
ytZM42CKoxAXtDFT/AuWFsR4PYfXvN/vz/O0zi+nqbX2VGwIIYYJxhJCeE62
4wayqOEsT/hHU1wIn1mvH+QMj/nLMfdPZOpXeUem3c4y1fZpHrFCo9ssGXov
b8mw21iiym7lIX846jZDuv6VIr2PhPgQrtgTpNuXWeSAPcsmvYd470V/cLF+
m3X2g+j30XP13/oRfZo0/YXc4V4ph8jRv7g/1bfohXK3vCHXyB7PquQzu0iW
yFJ5N/p+8o3nFXLYzpdpslhekgvs97zaHtO3yzJZJvuj/7ec8XxE36zny27i
9JPuu/RbJNpD9i8a7ClSo58rB8n2fN7eql9ntd1t79HvRO/ar+1U/SI/qbSn
ydO7iPXOCXunfpO19qC9zGF7khR9jgL9Gqu802W/IsW+wA8q7Ck26p3EeO+4
PcAS9W4fSdY7GSfZPs939tmjcpuv2yvvRZ8/fdI9V+8g2C32fRapc/tAkt7B
S5Lsc3yj3G6mnwUOub2PPi96Iv8BbBph1A==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt1EWMlWcYBeDBirs7g1Ngg7sHKO4MtEBwZyAEd18BLdIWNniTognuzqK4
Q9rgEDy4J8DzJl0895zzjdx75/7/JPZJ7jAiRUJCwlgPkWM8pOMO2+x/ZA9e
MsbeKpvyiFf2VTmElvoKWYkb+nnZjxX6IdmRr3pl5uvFOBWdPXprPup9+Vuv
G8+hryfl/68vPduj04qVdmVuRqcKC+xETkenH6kY5ywDO6LTmqqkJg0/kJbx
vicjO6PThmosdFacM9HpTzomOMvErui0pTq/OivB2egMID0TnWVmd3TaUYPf
nJXkXHQGkoFJzrKwJzrtWWVX4VZ0arLILsX56OzV2/BJHxR/R70ej/UNHNO7
kjLerz1ZZmWvflL2ZLK+TTaLn+O1fU0OpYO+WlblAbftC7I/b1ltH5adeM43
+4YcxQdq2Ytlae5xwT4je8fzsNjeJ9vylM/2vzIu1sHxHmR9nuiX5EA26sdl
Eqnic7GnyGzsi852vTlv9I6s0avF9R6d2iyxy3AxOkPYaDeI16JvIjNT7ezs
j04n1trVuRudOiy1y3IpOkPJwjRnOTgQnc7U5Xdn5bgcnWFkZbqznByMThfq
8YezH7kSneFkY4azXByKTlfqk52ZznNzODpJNCAHOclFbvKQl3zkpwAFKURh
ilCUYiRSnBKUZJbfn4cj0elGQ0ox23lejkanO43401l5rkZnBKWZ4ywfx6Lz
M+vsGnH9RKcxy+wKXItOcnxedkOe6Zspw1w7P8ejs0P/Ka5d/Rf+0mtyPzpH
9M7EP8kmYrmsyHX9rOzDcn2/bMcX/T+ZzMh4XtmIh3E/2JflIN6zxT4hu/GC
1HFvMzru37h2fH2eLBDXFSfsU7IXr5hn75Qt4n7gnX1dDqOH/h1w9rZc
               "]], 
              LineBox[CompressedData["
1:eJwVzjkvw3Ecx/Ea8CBcMbraMmKj7kUHA+KoRGJwewgG1zNQVjVRCwuDwRWJ
RGJwRAyORZCII0Li9Rte+by//zb9tzQ1nhzLiUQis9SKB7tGgmV3lMvQ7OpO
fvUkG7qBF73Jge4mlzL3nC3gQJ/aAeb0tm3nU1/aUfrCe20dj4H73A7zQca9
b7vC+8jhlim+afJ52sa458p9Zod4J+3es0me+XPf2InwG+H/20Ze9YUdIasP
bQ95lLvnbSGHodnRHXzpfjK6nie9TjMr7jjXoZmmggXPijgKzQAtVLLoeTHH
oRmklSqixIhTzZLvlXASmhRtrHpWzU1oZsi6E7zpLY50L/ncMcMPNT77B5a7
SRE=
               "]]}, Annotation[#, "Charting`Private`Tag$59528#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1GW4VGUUBtBDWIR0g3IJW+mWlAYLg25sJW2lDFIBBaRBGiRtJaQblAYB
61HpbpRa+8fi3e/+Zoa5M+dMSrtOjTqmSpLkgn+usiRNktTh79RJMpTGFOda
PEgudVaXf8zDaEIJUrHMvh7/mofTlJLst+tIOhbo3UnNcr0++82f0YxSHLDr
RHoW6j1Iwwq9AQfMI1iQIUmay9IctO9MBhbpPUnLSr0hB80jaUEZDtl1ISOL
9V7cwCr9YQ6ZR9GSstzITdzMauePcNg8mlaU47BdV27lJ703t7BGf5Qj5jG0
pjxH7LqRiSX6e6Rjrf4YR81jaUMF0rPO/nGOmcfRlopkYL19I46bx9OOShy1
e5XMLNXfj78nbZIM0u9hj56RDeYnOGGeQCaPGaGXor1+WX5AQTbreZ1PMlfh
Qf2YfI0sLNNzOh8f57KiLCa/j9eIz9I82HxvMH8t99rfZp5mriFryNJyUXym
zjbKJylnd1IvLGfpD8nP9cxyZLwXWVreL7+VtWUH51fMH1JBT5F3yfmyltzi
PJ+crFeTVWUJ+aOs7Oy4fJ2s3GE/Vy63z2WeYK4Urx3Xhz7EfB/79Nv16fEe
43vWN8mnOGWeyDNc1ftQiK16FU6Y3yAbK/Q+8ffxs/40p82TyOL1R+lleDbu
U9mXivaF5d3yS7nNWVVOmt8kOyv1vvEa/KI35ox5Ms9Rjaxstm/CWfMUnqc6
C91/2WR2tjhvyjnzVF6gBqfs3iIHq/R+5GCr3ozz5mm8SOK99rMrwnY9vz4l
vg9KmhfE52h/Wr5NTlbr/eNaY5venAvm6bxEKs/rb1eUHXpNzpjfIRdr9AFx
n3rcJ3HN8Ft8r2w3t+CieUZ8Fh4zWi/Ly3pqfUBcD+zUa3HW/C65Wavnjmsz
rkkGxv2tf2p+gN/1gvoMc814jr5DtuSSeSbZnI+Ja55X9DT6QPOdce+av5K7
7AuYp5qry+pxz8qFsp6s7fycuTvl9TzxfDkv/l+5znkeOVGvKivL4vIHWVd+
FL89cmhc57JYXN/yG/mHsxTzzLiP4jo0L5Z57HfKVvxnLmI/2/xFXC/msfFe
6Kinjf8j7kd263U4b+5BXtbrH8dvnMcNi/fGn/H7wy5za/43z6ITdblg15N8
bNAHxf3Nbr0Nl82z6Uw9Ltr1Ij8b9cFx/fGr3pYr5jl0oX583uyxb8dV81y6
0iB+w+K+j++WRe6RFFkofq/ic2Cv57Tnmnke3WjIJbveFGCTPoSM/ubh8VvE
X3pR9pk7kMR17XyOnB/3lXmcubKsENeY/E7WkdcBUH/vWA==
               "]], 
              LineBox[CompressedData["
1:eJwN0Lkyg2EYhuE3mzBjHEIMRYh1RuEQFGYsiaVQmhFLLI2diloRhYPQIYKG
M6BWCIKToHEV17zf/fzd37W4VdpMRMQCmXTEWSqiwGsyYoJf7xNyPOsqed70
Egmu9DaT9NCwlUlyrXeYopd32zIpbvQu0xT4sK2Qpqb3KNLHp22VDLd6nxL9
NG1rtFDXB8wwwJetQpY7fcgsg3zb1mnlXh8xx1N7xJD7Y9+gjQd9zDx/+pRO
XvQ5Hf7dhR6hqbv1pfcYo96P7rg77Ns/ntIqhA==
               "]]}, Annotation[#, "Charting`Private`Tag$59528#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HV41WUYBuAzlS5pRAVGNwgqaaGIiTBqSKzYGDg20ssOQpRGJQw6Vbou
JaWlDEBAuoeodKf398e9533e37ezs3N+50QnZsSkR0UikUw/mt4XiZzOEom8
RbuskUhx2UTukinyD9drydV6vEySMfKIHOdaCfMsc1NeNe+XWXjSvE1m8JFz
2fRR5jqc0evqG81dWKpX0n80v05+XrP7R77Ng2zXx1PSudnhOln52C673Whz
Xc7qy2jGv/o7PMQOfQJ9aU4MLWhJK1rzn3Pv8jA79Yn0ow1n7N6jBH/qk+hP
Dn97jF09zunLieWs/j4l2aVPZgA5nR9rV5/z+grack7/gFLs1qdQytk5ejOy
8YldLruvzA24oK+kst1P4f2jQHgN7c7LD4lmj17bmTXmTkzVo/W55uZk5yn9
V9mdga7n1r82N+Rl81550b6e+RdzouwqW8njcpVrVcxLzR1l+/C85SGZKgvK
Z+X28BxkbxkrM+Ubsp3fvxDuFdrrpeULcrfsLP9y/VG5Vk+QybKFPCqnuVba
PC/cm+FeNB+QOXja/JvswafO5dG/MT/BJb2+vik8B37Wq+rLzB0oFJ6L3cVw
n1GGvfp0yjg3PzwHcvKZXV67b8O9z2V9NR24pPelLPv0GQwin/PjwmvPFX0N
Hbms96Mc+/WZDOZ+58eH/4mr+lriuKL3pzwH9O8YQjwJJJJEJ5K56twAKnBQ
/56h5Pf4E+ye4Zq+jhSuhXuPihzSf2AYBZyfaNeI6/p6OnM93ENU4rA+i+EU
dH5SuA+4oW8glRvhvaEyR/TZlHV2gd6SXIywK2Q32fwcN/WNVLNbHu45CtPF
7mZ4P6jCUf0xZ9aZU5ijl9MXhns3fI+YD8rc4f82/y570sZ8Uo50vrB5Srgn
ZGP5itwnb7nWwLzZnCTTZGt5QnYNnxPXq8sVepyMC583eTg8T1kk/C9yh0yW
fWRbeUqmhc+X379lHkRVXrTbI4/ZP25eHz4bzNXL64vC3ydPeE/Cd7fsxeeu
F9Gnmp/ntt5Q32Luxia9hr7SHE/R8Hmwuy0HU43j+jwqOLc4vD7k5Qu7onbT
zE24o28mjTv6EKpzQp/Pl3Tjrt1QanBSX8Ao0smgOz3oScTjD3OuJpn6QkZT
zH56+J7grr6FXkTZD7d7hFP6IsbwgP2M8DoSYatdb+6xH6HX4m99MRXtluix
5GOsXXG7meaXiArfIfpWmc4212vqq8wJFKOxvlO+SR/X79VHmmuHxwjfafK0
fR3zBnNquN/Nx+QS+/8BjFr8mA==
               "]], 
              
              LineBox[{1463, 1369, 1296, 1177, 1563, 1449, 1355, 1282, 1230, 
               1142, 1540, 1426, 1332, 1259, 1207, 1178, 1564, 1450, 1356, 
               1283, 1231, 1143, 1541, 1427, 1333, 1260, 1208, 1179, 1144, 
               1145, 1146, 1147, 1148, 1149, 1150, 1542, 1428, 1334, 1261, 
               1209, 1180, 1565, 1451, 1357, 1284, 1232, 1585, 1472, 1378, 
               1305, 1606, 1493, 1399, 1626, 1513, 1645, 1151}]}, 
             Annotation[#, "Charting`Private`Tag$59528#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xe8T3Ucx/GfbJoiM6Js2drSosjIKrutjMjKzr2NyyUrq2whO3tmtntQ
2ZtU9srIDPX8/PF6fN7v1/d7fr9zz++ccwu+1r5euzSJRCL5pkSiQ4ZEYm+m
RCI/UjImEjmwnpuMdJkTiWr8V1xlnOM6Yh9XAH25u7CBm4L09j/Lz+Uex3mu
E/Zz96AflxO/cEXtbcVt0l/BVC4D9xw3T6+Cf7jHuD7cEf09dOZ+1wsiVc+F
mvYM1i/Jv1ovprfWN+uv4nX9S/1WfGk9o15dnm+tm/y1/ITcSB4jp8UF+yrr
SfJRax/KP8hd5bbyXHm2mdMcbu4wuzjmgFkIn3P97e1kLolrYubWa5lD9Cnm
Zb2fuV5fav7m+OJmG328ucX6++Y6fZH5mv6GOU2/DUPlreY0x2WSa8gL7Oku
r5SflBvLY+V0uGjf43qyfCz+9rim3B/6vRig58FGroR9bbmtcf0wncvMPc8t
1J/CJa4r/uTuwydcXmziZqAb/uILYyCfD5u5meiOHuiJXuiN99EHSUjGQccV
wSDH3Y0t3CxkcR4145pwT+My9wEOcUUxmMuPrVxJe9/htsW1w2wuK1eLW6w/
gytcFe4D7nhcv/i9ucN6MQzRC6C2PUP1K/I266X0dvp2/c1An67fjjnWb9Zr
y0us9ZBXyVXlJvI4OX1cF3mjedX+J+QP5UnmCfs+Mn/Ue8jvyPPic81c5ghz
p7nK/MixR+TiGB3nGM+JuTSeJfMevY75qT7VvKqnmhv0ZeZ2x99vttcnxL1s
vY/5jd5SbinPkO+Id4G9t+h14p61Vg1N9fF6Bvxr/ck4J/mktZ74mDuql8Cn
ekHs4ObiVntfiPPgnsU1LgXHuJIYxhXCTm4e+qIfjlsrFc+etXuxi5uPVJzg
749rxN+H3dwC3Oa76vLLuedwneuPk1xpjOQKYw+3ELfbX49fwVXHDW4ATnFl
MIorgr1caXvf5Xbqb2ERdwdXn/tar4H/uE9wmiuLz7ii2MeVsbcDt0t/G4u5
bFwDbqX+PJrpE/SMSMQzqH8sn5J7YaBj/tbLxftHL4YX7BkWv4u833pZvaO+
W28V56rP1LPFfWr9Tr1h3Ffx28mr5Zpyc3minCmeR3mTmSaePzlF/sI8Hb+1
+VN8ltlbb2fOj/sm3n9xjc1d5mpzkO87I5fHGH20/V3MZfFuNovrdc3h8d42
r+n9zV/03x1bTu4k7+GT5G/l1nH95FnynXGP2pddfzG+M96/aKFP0jPjpngH
6H3lv+N9i8GOOatXiPPSS+AAtwxDcI6viLF8SfzBlfcZnbm9ehss53JwL3Fr
4t2BtKjK9ePOxDOGofad1ythnF4K9ewZoV+X/7ReQe+i79OT5e/ktvH7ybPl
mWb2eLbMbXG/mSscd5fZKM7TXBv3iLkm/kfE86u/bH6hTzezxHvT3Bz3u5ku
nm0zVZ9sntVTzJ/1JLm9vEDOE8+BvDu+33f+Yz6A8fG/hV8ez6JcXx4p35D/
sq+i/p6+P95taK3P0XPE+VvPqTeW18U9jFf0yXrWeG/GuyL+v8rn4ppgmGMu
6A/GO0wvjYNcJfu6xv0S9yJWcrm4Jtw3cX8hA4bzF7mHMFEvg0PcA/Z24w7E
34xVXG6uKfdt/FbIiBH8Je7heH/rZXGYW4089jfjv4vrgEwYyV/mHolnRy+H
I9wa5LW/Of891wCZMYq/wj0av4deHke5tchnfwv+B64hsuAz/ir3GKboFeKz
7Bul/ycPkH+Nd6H5PwvTXCA=
               "]], 
              LineBox[CompressedData["
1:eJwV0slLlVEAhvFzDRpIGyzalJVW/gWZU3MGDbvAZqdbVhA0RzTYooEWaQRt
1LKJbM6NuYmgSVNvqUHQplUjNBcNm2z4ncXD+77POZ9e7nezk5uXbEqEEHqx
e3AILwaFsAX3BoaQNSSECq7TXoqhaOB/czPQbE/FO+4+xrtfyXdxy5CORr6f
m4mLdh7ecw8wwf0qvptbjgyc5P9ws3DJnoYPXDsmup/kU9wKDMMp/i83G5ft
fHzk8t3dw720t6KDy+bWcI/slRiOJv4fNwdX7AJ84grc3cu9srfhIZfDreUe
26swAgu4o9x3/QBOuxe4udxVuxCldr0d8Nl5ob1Pf+1sOzq5SVw112OvRpV9
wU7HSHuhXav/0A/Gd2S32mNxxvMJe55+zdku/ZZeFN+b3hC/S5mQtbJPfvFM
kV6jn5Vv4ueXHXab3GFvlC3xb8ox8oR8Jm/LLs9PluvsJtnrfo28a7fKMjsp
m+P3KjPkcflUZjpbpNfpP/Ujeko/FN+VflMfFz+X/5Fml+jXnRXH35XdaKfh
q/Nie7/+1tlOdHNTuPVcn12OUTjHD+Dn8zfs6fjGpZDLb+CfcBUYjcXcMe6X
fjj+Buw2Owv1+nN5R573/H+CD28q
               "]]}, Annotation[#, "Charting`Private`Tag$59528#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1HWwlUUcxvFzL3lpGFtaupRQMQilJKWUDunGlk4BQUoB6R5HQdJAbJBQ
urtDatQxKEk/vz++88TuOe/ZPftuvna9G/ZKSiQSJZMTiXUpicTljIlEfWzJ
kEh0RC5c0efMlEj00f8rj0NVrNdf0TXAVrkTcuOqPpf5ffWX5fGohg36q7qG
2CZ3Rh5UMHe67h4sk6+Zl1vXT74iT0B1bNRf0zXCdrkL8qKiuTN092K5fN28
PLr+8lV5ItrLa+RnUEOuIy/iC+BH+Refuc43xg65K5qZs0oujXxyJXkmfx+G
8sfpCn13/le+Cibwv9P/fF9efgA/nV4zbyA9LH/Ad+DX8gvos3QsvUhX0heM
16WL5Tm0IB1BT9Ol9Cfjr9Jt8icxn06if9Gv4rd49n/8S5gq7zS/D90nd+Ob
81/zZZBfrizP4u+P58s95E18VdzwXfnkgfx1Yx+iJurpPtMVwhp5k3k3+Jex
K/YEj+CmPr+5g2JP5Emohc36m7om2B3PRAHc0m/BLX1T7NH1REHc1m/FNmzH
bePNsNdYLxTCHf0O3NE3xz5dbxTGXf1O3NW3wP7YRxRBAruMJfzWlsYOyK+h
KJKw29geJBlvZfyg7nUUQ3KsVT849oufjNrYa36yvrX+kPwGiiNVrFU/RH+T
nxLnEfvMT6Vvoz8sv4kSeE43W/cAPpdTx37ohsq3+I/iXZV/liugrvyivIQv
jLWxFnk7XzPW7Tmp5bb8EWN9+f38W3wLfjVfFiXl5+U5/IMYxp+gX8R/wm/m
q2Ei/wdNE/8BP4yfQW/Lg+gReTGdGncEXScvpBXpOHop1kXrGa9Pl8pzaRE6
kp6JeyHWF3tOd8if0lp0Mv07/i9rSsO/wh81rx9/gH+bb8l/w5dDKbmKPJd/
CF/KaeN86IbLd/hpsX9ooFumK4p18kHPSKtrJx+T38GjSBdnSP+u/i4/PdaB
Q+an07fXH493EI8hfZwr/Qh9IvYqnoXD5qfXd9CdiP8FpZGCI8aO4hiO4wRO
4hRSfKajz5yMdaMMMsTZ1I/UJ2Gm3BCnzc+g76Q7JfdHWWSMs6kfpU/GLLkR
zpifUd9Zd1oegHKoqpunezjuHDlTnFXde3IqzJYb46zPZ9J30Z2JOxCt5G/l
xwO5mjyfz4lVcmaU1I2WU8cdKHeW1/OV4l6LtcjL+WIYxZ+l6+Mdi/uOr40p
/D/0N78hM9+VnxZzY930oLwo7ia5Nf1Onk+foKPpObo8svHqdEHsC81Fh9OT
dEncpXH/0C3yx7R63PH0T5rFWCl+TLwfGMwfjfOt78Jv4CvHvRn7La/gi2ND
vP/yLr4OzllDFrlbrMfYYLSRv5efDOQa8kI+N1bLWeN86t6X02Ke3CT+F91K
uQQ2yud9d1Zd93iOPATlkS3Oq36sPl3sjdwUF8zPpu+hOy8PxVPIHudVP06f
HgvkZrhofnZ9T90FeRieRo44q/rx+pS4E+TmuGR+Dn0v3UV5ONrKP8jlMYY/
T1fQ/wE2qS+p
               "]], 
              LineBox[CompressedData["
1:eJwV0rlPVFEAhfFrKaCi7GCiYO2SuLAoKli4RU1MRBNFZaSBgkEUaCwoEFGI
CyqaGBMKNrcG0MS9c9RYKY0FBQWJcYAB8Q/g94ov53zn3sybybziWPxk04oQ
QgKD6SFswNu0ELKwPSOEOzwNg/wskiud2eO2v7wTu5GNHfa79nQM8XOYdT/b
3mxL8uvYgxzstN+zZ2CY12LO/Rz7Zdss70IlcrHL3mdfhRF+HvPu59pbbHP8
BvYiD6X2+/bVGOUXkHI/z37FNs+7sQ/5KLM/sK/BM34RC+7n26/aUvwm9uOQ
bci2Ee94AcptD3kmnvM6nLKN8c1I8EWfV2Br5Qv8Fqpw2DZsK8Z7XogKWz9f
ixe8gX/RqxDjNXxc34KvvJX/1I/hn+cU8jZ90dk1/bfeE30v/ZNeHrn+R1bb
j+gj+lNZIjvltPzgLK7/iP4neVD2yZSckEXROyAf8SdyneyQU9H3li+dN8pE
9B7JanlbJuW4vOT8tJzgA3Kr7JYz8puzNv2XfhxLflcRb49+o7NexPhnXoED
/Cgf1TfhI18fvXO2xzwLr3g9zthe8234ztv5pH4C/fqSfCP/e+YymPpqJw==

               "]]}, Annotation[#, "Charting`Private`Tag$59528#5"]& ], {
             Directive[{
               Opacity[0.2], 
               Hue[0.67, 0.6, 0.6]}], 
             LineBox[{508, 509, 507}], 
             LineBox[{1100, 1101, 1099}], 
             LineBox[{1647, 1648, 1646}], 
             LineBox[{2497, 2498, 2496}], 
             LineBox[{3256, 3257, 3255}]}}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"feedback solution \"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.867171012091132*^9, {3.8671715227008142`*^9, 3.8671715732006636`*^9}, 
   3.867171729146783*^9, {3.8671717623881507`*^9, 3.867171773576572*^9}, {
   3.8671718090262337`*^9, 3.8671718627840395`*^9}, 3.86717190139369*^9, {
   3.867171932068879*^9, 3.8671719602208743`*^9}, 3.867172023405665*^9, 
   3.867172119942788*^9, 3.867173054728798*^9, {3.8671731567881546`*^9, 
   3.867173174770403*^9}, {3.867173221798361*^9, 3.8671732304485946`*^9}, 
   3.8671763371569185`*^9, 3.8671763707631707`*^9, 3.8671764101615686`*^9, {
   3.8673430733987303`*^9, 3.867343100328085*^9}, 3.867343151309718*^9},
 CellLabel->
  "Out[357]=",ExpressionUUID->"6cca58d4-0341-49d1-95b3-04ee4c92cec1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"K1", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"K1", "[", "t", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"K1", "[", "t", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"K1", "[", "t", "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Gain1\>\"", ",", "\"\<Gain2\>\"", ",", "\"\<Gain3\>\"", ",", 
      "\"\<Gain4\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867343165186265*^9, 3.8673432613713846`*^9}, 
   3.867343348284484*^9},
 CellLabel->
  "In[364]:=",ExpressionUUID->"940c3c89-6645-46fa-8b5e-f69c66cd0e99"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0n8w22ccB/BvBN2S0ASndX4UdYimVne1m9uP71d/XOvHrFNpN6aSULkj
UtrlLhOmhxY30dRslK05Mysbela9LfMjRC1EEik9p6MTP6Kb+h2ZhKoVX8/z
uXvuudcfn+d9z+d5vDhXoi9bIQjCe7229++/5NgGJYk+6N3arkV03+ik3/yh
enTP1SppxotDMuAcFSM8KKEbuOl+0SgvUIWu4JaS+/Nop3XAXPTxnbmrQ8Ap
pdkdOskwasbNN9CnWpqeAnc5utwJoT4DJnnl+42/o0d/xa2u8KN3qieAS6j9
AdWsKWCzab8g2tkAzBmNkRPVM6hqL183J5F98Q9wRk8+54rfLDCtqvevk7+/
QJtwN6dTzh8Mmwdef7Ds2L6xAFwtSp09dnEJdUK2awkttTt+18F7GThX+vLj
1TnoUBk/bOTBCqrG+5EhPdaWaQT+uqbms8LoVWDfz5OFMQEmYJvgnOf3jSbU
FT9v2lR+gdz+H3B5GmE2qnwNONyQkl2aYUZn9uY3nR0zcsYCHDUtOeLhsQ7s
9sTCNBrW0cN4/2w353pv4wZwcYrbwI2bL4EDacPuJxM20R/3+usM8lv0V8Ak
1MQeM0Kri5n+tIEt4DPzsWveTARbxU0dScjq6IQeUSQRYhkE4D9rnY61SwjY
GO6HhY8ueZqg7ZXfSdfYVsDJNgK9VmuF6XFPv2tWpR0nAideFT2kVEL38Ya6
Gjah3+Ie0UayrTFf/L5bbb/MsTTQAw4MsiDEBriHdXHo3F0b7D28v7Upt4pB
tAVOzWsofBIC7frJsCArHfraiVSe7ivofgaS6HMP2lk1OFHyMzSbW8uyNNpi
13c+2JK8wVo4ntgMvVYdfknbAi0eW4yraYU+fOCbT4UK6I+Kx2O8ddAiQsA5
9TNoBT860j1sHzBpLPMsvwVaGBq1cPPgGxiVtGvDT15l0izoNq57JONf6DJ/
F2sZ801Mf42449IJ+WW7VmhJZbKS7UkCFhyYDP8tDzq2LF5LeU7C6nbnL6/n
EZKGo8nA5lO1FmkH9JThhFBRQAFW0P7oU65C//B+kKuGbYchuOvY550rldCN
NwQ07lF74Mo0XmDwbegCZmIE0WSPeeL+uyI38zR7P3DwWHV9gQb6KfntrrMu
VMzz1c57yivoVY2aCGiKwKmmOBc6p1NcESGjYpLNXc+kLXuQF6E/dGXWqnxo
wMpTJcjChdfG80L5yjhaEXR6j1MnXw4tdeP4qE3Qk4v58WJ/BwzB8326730b
FQcda25hUcXQkqOKgMEOB2wEzxdJpjY1q9DJRuvHfQGOwEmDG0J6vCOYP6d5
xbPoFrRkkCJ+pITuMPpatrag/weZV4tr
          "]]}, Annotation[#, "Charting`Private`Tag$60484#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$60484#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
KTtgL9szxDGcJKn84ZB5tECr9b8581nZ
          "]], 
         LineBox[CompressedData["
1:eJxFzX84FHYAx/F7nMcjzo8rSX7e/MrPZE8N67QvOcWN6TjJjzhD98zI/NgS
yrjIk7Nj/cAlD538CJlZEwvD3DIeD6nUZGuOJTP51bDj1v7x+ePzvJ/XX593
Ik9zopUoFErK2/3fAvfHXomb6qTIeZdpAHU/6dvYxy6n0Ah/m/GYyqwt8Uq2
fdRDhQdeWYS/VIH9eIwZmhocflCNXq4Lx+9cdnY0g2syxGOpXHhyyv1Mdy48
krbJYHXA3fS2B9JluG18l/E2bY0tN1enJHrbwnuFEsNZZ7gu8WHfJU+YP/XK
INQHtgxS+swuAL5ALxBfPq5BWh2zymLaLYisf3efPBg+LKh6HXUSrnR1NBjk
wTU8f91SKdxwIYV+yl5zy5K11ya+4XBp3Kd7DxTCxd7qi41l8JU9dd9Z1cGj
E4WWRxo0iZ2pqbFvpSnRuZp6LboJ9vfhqQq+hYuUvVIr78L0JL2Q336ARS/+
ZBr2wPlii16tcTiX+zGbugJPFGedZfG0tnxgvKI2dxCWmLXLrJ7BOrGjJv3T
8IAm777+HCxonguOXYIjlFtqv34DMwPPrravwXo15IhMDq+nU9kqFG3SEqtI
KPqZQT7pNcyppsFP1d/78ehuuLWU73TpXbjYWtwwyIY5Q8et7E/BtBSdm/lZ
8Iw0MYIpgvv0h43+KoMz7lhpBFXA+z0y5T0SWKRpt5x6C54dezLrUAN73sye
nKqFK+McfhXf1iZ8z8BjDGcTon1t4l5SM3y+S1jMvgdPxy0Yq8/DPgbcqn5z
+pbro83S/R1htaYFzrgr7PIoqIPhAfPXO62jvWGKMCk81wcuNtlzpdYPlr2k
NL3Pgfc1P+v/xR9OT2uZCuXSiYyIc78cMSJSjwLK34Gw4KlNo+I07BYvDaHn
wQk/6XTFd8LlhpHmAyvwqNey0+oqrPpFDttcDlcKP+K2bcBMiV64nwJ+3PaC
P03ZTuzkdyuIy9u/4brEdCV4zHaoZFQVJjlLXXZaMP0gU+u5AfzHvCBMaAVn
n9Bdn3ODzXuqr/qGwJ1hjWkOyXDwakuEthCuYTk/zCyBV4raWQtV8A25esD5
avhoTGikRi28OFSfIK6Dr7tsnLOu305k1FuuHKYRmafdELPuwO6/H2rlNcMz
OZkLJa2wyL7bZqQDThNNbgwuwzFLysMPbHZs2fK2UjvPCZ6KpFStHYZ7DylK
WN6wRH+zoNAPvj7smm/OgS9fzMj73h/O/+B+jjcXFryRZz8P3EECsp90n8wz
IslR6eeowXDUyL9nrMPgSbd/PjzxORz5zSIj7ytYNEIT9krhjiXLNYUC/g8O
rumR
          "]], 
         LineBox[{{3.165272607025174, -13.975473578161944`}, {
          3.1655748932693855`, 20.013002520245728`}}]}, 
        Annotation[#, "Charting`Private`Tag$60484#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Y8a/9o0v1KDfu9ttHz5FEf8LDSvxJA==
          "]], 
         LineBox[CompressedData["
1:eJxFx31Q03UAx/HfAddx8TidhDAEYsFAEek0fBj2JZkPWxi3MVQeYptMuAzl
BEtkIidjyLnRwKfBwBKHsAlIExVFHgxyF7rjIEolpOQpPSPkyYBGq/7h88f7
3vfylRzmS20oipL+1/+/55tyuzbGiZRsfOfdGNv1JJ9WpD23x4k0VfR7sBqD
yUjXygeWOHibvOp18qdwZXiop1kM14gFbmUmuC7/KC0l2HnJuvnX3ruT4LK0
z9duKIY1XIep+gr4fIDhJssA9w0W+++ocyYiHwa3LSeA0C9kXZQ2wIIosb38
Blxityur8hZMy3CP//UerH7+O5vRASu173W6DMAFwv0821l4UHPqOEfssuQN
A5f1BWZY59c8wuqH6Qf7vLvG4EfO4haPcVhuHI87OA2L7Br1Z9/A7Njjc83z
sHsN2TFigRdktry3KFdizxtyM9/3I591MhTVjvBThw/u71wJN5Wlhp15H9YE
auvMPJjfvYcVnAI7HqVfUZ6CX5qOiNhq+IFHj9cfFfCJ6yynvZfh9ZG5lg4d
rHZeM5N1FX715PGrkBp4+5W84VE9XJkW8ov2mitpyG8/tjrBl7heHLyTYYRP
tqs0vDvwWNrkKocJOMpTWNXFpC25VuonE4TCbzdM8gfC4U0/7W31iYRTF9oC
pVyYUmUkFUTBGu+A8/poeOQF1bCZD68z9nc9FMCy7MbRBCGNKB+uCKUbvIkp
soj6MxaWPw2qtx6GIw6Z4mmFcPr39PZDbfDXDAnz0Szct2smbG4Otv9SwWNa
4ErVJ8K7izBb554UbYV/vvs8dYxaRnJ7h8tjhrxIeo/hiMwGfrK6u7TPHiaK
6fY1LjBtC9vlmSc8NCFPVLHgvH1uC+MRMLOj+sLueLgtsT47JBOOm2sUuarg
Gs7GH3NL4dmSZs5kFXzJ4hBzshreeSBB4qSHp7pr07UGuHzTYk5g7TKSefax
qIXmRSYcL2k51+GPftvaJDbCLxW5k6VNsDr4u6DeVjhbPbxonoEPTNv1/BC0
fMn+12yaxWHwqISqmt8Gd261lnK4sM7jn6LiaLi8J1zJ5MPnTp8ovC2AlR+2
KLhCWP7GkvcsdjlZp9j/jXGIQTKTZTm2cXBy79/HAhPh4Yi/Pt73BSz5dsqn
8CtY3euo6jTBrdP+81Yr/C8Nhqce
          "]], 
         LineBox[{{3.1653587665279876`, -13.975473578161944`}, {
          3.1655196409438595`, 20.013002520245728`}}]}, 
        Annotation[#, "Charting`Private`Tag$60484#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 5}, {-13.975473578161944`, 20.013002520245728`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Gain1\"", "\"Gain2\"", "\"Gain3\"", "\"Gain4\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8673431738564796`*^9, 3.867343191946672*^9}, 
   3.8673432322007494`*^9, 3.867343262995863*^9},
 CellLabel->
  "Out[364]=",ExpressionUUID->"d7795956-24e3-445b-8805-ce03b92f0544"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"K2", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"K2", "[", "t", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"K2", "[", "t", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"K2", "[", "t", "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Gain1\>\"", ",", "\"\<Gain2\>\"", ",", "\"\<Gain3\>\"", ",", 
      "\"\<Gain4\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8673432756458035`*^9, 3.867343280971093*^9}, {
  3.8673433367491875`*^9, 3.8673433404150085`*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"30edd6bf-2414-489a-ac0a-8fbd3ab21465"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
6V3H/geHM+jk
          "]]}, Annotation[#, "Charting`Private`Tag$63722#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
xbtzFT1rSCj8OfOAnHMLXL5OGpdvwvL/aMtHFDRDBX/K+bRf+Pyf1bnViCZw
P92jGjpLQijZrNeBsw7aK2zIZtJk5GuQEPZFvAQmj3Zsvb2XjEiJ9AnJlU9A
LT+jmKyAWfNVwK62IlAiDtoNKGNWH40gPfgIUZ/46FfVcR9/cuJvAC0fzuQX
xz2wwPIKHyiKv34JtvsU8rIvYu5yDX35IBV88l41tNjg8wHVD164PYfM3MiV
TQ6Yn0U9PhWeANxZ9japHphdOfi/+gRBddoGuZLw/9sz9jKN+pjoFAvR7HqM
edr6r9eXGIL5YtWKLRbzZi6ezkfxhNjzkWjNZ1jfjMjp7axk4l5i2dL313h9
S/23YwfTCdVYx5qJCszKqwXnVvIIo409Xeur8f41fo6VLe8Ip2jjRUXc9yOF
HmmlF/lEwuNjMre+YJ58f1EWvScWH21+TMV1oexvcsdxq0KiIKjSQoSJ11+I
haSpE0S6VsPmQNz3i2iGl/9jKyPieb9+HV8io+S0UpU26zLCN/zviU8U/G6u
+du8JFxOaMctyhrx4b7MXHjDw+AKAszIw8W4bpU9mGv+1VVBKAjSXohuoqDk
auNzo0qfiU3J/22a2o771A795VN/PxM9r+RWH0jh/f66UfMiVcT3ywcKp2Ux
2yqxH3SuImqlVK+ZKmD52tSc/UVVRFbOqcHdKng90GvKWKea8Pxg+6X8BAV1
UTRtZO1qCAcvp2AJLczRb1+JZ9QQFofc1R7hOu379tHnb6M1hBpx94M5niMs
jecakUMtsbYmIWkOvwPJciGOBmZ1BDn4hanFJcx5aa/qI+sIhlaGQJU93s+X
fmmsro742fQhMBK/M6T+m72yivVEY3jp0YWrWH7abO1pu3qiVL9q6cINfL7p
Y9iGJ/VEattXFxk8FyTrJ0nHzNcTsXE/90ThucDSpEPtzO4GIsSsq3cRv4vh
5J/JmfoNhEvnuHEtfkddqzZF6L5qIA4O0JA1frfL7rWIiqFGQiZ93WIdfueT
p6zlB6waCZErG/PlcN9A2vLUWN2/keCYEJVYwX2LXEuIyo+KRmI+R7LHBvdZ
ySl2UrSuRmLETT6hIRPrL/hh7bjUSDQzVfmevMP6Pzzl9pShE58/qNevvsf+
e3L0gNlxOvHeS9vftoiC+AJWRJtM6UT6obOq9BJsX6Tqlm9OdOIpy3R+XznW
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
5ovj4Zrr0+chLJi2Srlg74f9uS++ucgfz+3CO6TkQ2jo0RyH2TWcb1tjRSoq
YmloW5fqjo0WLNANFJ7sz6OhzCXtqOydLDC+9NdQ6z0NXehduyNrKwss1JI+
ZRfSEPl9+stQfhY4rAoFepTRkN6UJXmKzIIADyEhriYcX+mfVS78XYZiu+3a
0sM0NJv/i346ehk+q/95Gz5GQ6ZDh/8lPViGetFnm5j/aEh0R/fAr7vL8OOv
YG/JLA3dl3hmIeC8DNPGgjfPsHMhSpS78kP1ZZDQ2JZ+VZgLye8yjBSZWoIo
iS3shYZcyClKRuf7kSUwt9j9qteEC6kF30G8+5ZALGqf1lpzLqSsq7t4SGIJ
8ldPh1tbcaEL+8k9AfxL0Np2T3CtCxcqlt9/5OvAIgjcH1O0DuJCzxnkzJsP
FyGym7i05hMXsvUe+1f4awHC421rLopwIy+vEs4bnvPgcePeNW9RbpSStepV
7TQPFvqJwrG7uRHtRYbkNut5kOZu82iU5kY7G6nJLafnoc5LXeKACjeKq209
cF10HiimYsG8+tzoRkG/ZPqXObi+qUfrgx83urcnL3ev9ByYRZ1v4h3kRs6c
f4Y055gg+I57m8MINwp+rLBHfZwJf1s+2NWNc6ObLkXPNHqZYLOOnxzA4EYH
jPsl7b8wwTmket8qmQdZRM+SuNOZcM9375MpQR4U83ct8dOMCa8dyTZt+jzo
zr3utNRqBswfT1tIKuVBO1NI7xTfz4D3pyS/ynIeVL/r7/rC7BkgKcSvGa7k
QY99BXrUXs0AVfjRDoUGHpTzj7/MMW4GNi54alb+4EESBjHN3LdmYF+W9pOh
ScwpOqrXjs6A838MZXlRXmTe8amh4es09PYf86wI5EVaZT9Kj3JOw7GkpueS
D3jR9RvnmLmrU5BsYkaPfMiL3tlOTe1amAKLBred1tG8SDs8YvuOsSnoyE1u
ZHvBizZ7atic+zoFX2+tiKiX8qKAIbXp9qQpqFhfVFfD4EWa0qyJCtUpeH5E
fhv94hoUc6jo2vuQSajQ4fZbslmD7pa+jC24Pwk9F3pH9tivQfX+Jeij7ySI
3osuCnBeg1wu+K2tvTEJqdULpujWGpQ4e33teutJSDtTEfcuag1SuPrS+vjh
SUi/eHZjfM0aZLJ/VFm45x9k3b++3k5mLcq+izr8qycg0ND6FBtzLSoungyW
aR6D/b9TXgfS1yEtaWmHqcERiNvzNIt+ig8FSOz2c1UdhjtlYXGnCvlQXMn+
I/Oeg3B6m2Favdh6RPG5WXT6ZT8cda45tz54PRpBqkedK3ohSdBKrJG5HuW7
7NpRbNkNYp9fxeic40fN1xd6Z33/QLhMheTXUn504dKliOOBP8B2hr2lTlIA
KdSQj4XvbQart9MiwY8EkIqoVG+Sczk43ju7rBUhgOxbzSuW95TD9bP5P3gf
C6AiR48A7f4yCGJefxgeI4ACl01Cq86VQbbKwlLsMwH06scm2xPhpbBQvtr2
8o0AitufrO1+pAjCv/KGVdYIoACf1z9Cg99C/Asn+4A6AXTgiyJnPSsXXrg3
qWk0CKDDNx7tXHTLhfcbwxcbmgSQ6YGApMv52fDbTMD+23cB9LS7/hIYZIB4
7xa1nl4BlDPe6HQ2PAXk8m8KpfYLoDn9INFwj2Q4eP/XwqVBAcTxpE3btyQR
tMWf5Q6PCCDfsg99i6bxcNVBRGhqSgDZ0JKfc0VGgPfhuwt5MwKIjZZs0UQ8
hPtrelrdmQLIT7KtyO1cCMTlvHgwPy+A/tSF1/pE3oXnvux2RYsCaEv7Fb/O
czfhjd6lY97LAuj+WPXmN5FukL+zervqigDStkxd0xp5EUpndi+sruL7nlpJ
TRS6q/o/jRkZPw==
          "]]}, Annotation[#, "Charting`Private`Tag$63722#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$63722#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+g==
          "]]}, Annotation[#, "Charting`Private`Tag$63722#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Gain1\"", "\"Gain2\"", "\"Gain3\"", "\"Gain4\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8673432839161468`*^9, 3.867343342422364*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"255c21bf-0f2c-47ab-a4cc-2a4e90159bf1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"K1", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"K2", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Linearized Gains\>\"", ",", 
        "\"\<Gains from backward integration\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<x Gain\>\""}], ",", 
     RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"K1", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"K2", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Linearized Gains\>\"", ",", 
        "\"\<Gains from backward integration\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<xdot Gain\>\""}], ",", 
     RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"K1", "[", "t", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"K2", "[", "t", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Linearized Gains\>\"", ",", 
        "\"\<Gains from backward integration\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<\[Theta] Gain\>\""}], ",", 
     RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"K1", "[", "t", "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"K2", "[", "t", "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Linearized Gains\>\"", ",", 
        "\"\<Gains from backward integration\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<\[Theta]dot Gain\>\""}], ",", 
     RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p1", ",", "p2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p3", ",", "p4"}], "}"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8673434687238197`*^9, 3.8673436384863195`*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"1d57e522-6fbd-4bac-b58f-f0fc460acbff"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxF0n8w22ccB/BvBN2S0ASndX4UdYimVne1m9uP71d/XOvHrFNpN6aSULkj
UtrlLhOmhxY30dRslK05Mysbela9LfMjRC1EEik9p6MTP6Kb+h2ZhKoVX8/z
uXvuudcfn+d9z+d5vDhXoi9bIQjCe7229++/5NgGJYk+6N3arkV03+ik3/yh
enTP1SppxotDMuAcFSM8KKEbuOl+0SgvUIWu4JaS+/Nop3XAXPTxnbmrQ8Ap
pdkdOskwasbNN9CnWpqeAnc5utwJoT4DJnnl+42/o0d/xa2u8KN3qieAS6j9
AdWsKWCzab8g2tkAzBmNkRPVM6hqL183J5F98Q9wRk8+54rfLDCtqvevk7+/
QJtwN6dTzh8Mmwdef7Ds2L6xAFwtSp09dnEJdUK2awkttTt+18F7GThX+vLj
1TnoUBk/bOTBCqrG+5EhPdaWaQT+uqbms8LoVWDfz5OFMQEmYJvgnOf3jSbU
FT9v2lR+gdz+H3B5GmE2qnwNONyQkl2aYUZn9uY3nR0zcsYCHDUtOeLhsQ7s
9sTCNBrW0cN4/2w353pv4wZwcYrbwI2bL4EDacPuJxM20R/3+usM8lv0V8Ak
1MQeM0Kri5n+tIEt4DPzsWveTARbxU0dScjq6IQeUSQRYhkE4D9rnY61SwjY
GO6HhY8ueZqg7ZXfSdfYVsDJNgK9VmuF6XFPv2tWpR0nAideFT2kVEL38Ya6
Gjah3+Ie0UayrTFf/L5bbb/MsTTQAw4MsiDEBriHdXHo3F0b7D28v7Upt4pB
tAVOzWsofBIC7frJsCArHfraiVSe7ivofgaS6HMP2lk1OFHyMzSbW8uyNNpi
13c+2JK8wVo4ntgMvVYdfknbAi0eW4yraYU+fOCbT4UK6I+Kx2O8ddAiQsA5
9TNoBT860j1sHzBpLPMsvwVaGBq1cPPgGxiVtGvDT15l0izoNq57JONf6DJ/
F2sZ801Mf42449IJ+WW7VmhJZbKS7UkCFhyYDP8tDzq2LF5LeU7C6nbnL6/n
EZKGo8nA5lO1FmkH9JThhFBRQAFW0P7oU65C//B+kKuGbYchuOvY550rldCN
NwQ07lF74Mo0XmDwbegCZmIE0WSPeeL+uyI38zR7P3DwWHV9gQb6KfntrrMu
VMzz1c57yivoVY2aCGiKwKmmOBc6p1NcESGjYpLNXc+kLXuQF6E/dGXWqnxo
wMpTJcjChdfG80L5yjhaEXR6j1MnXw4tdeP4qE3Qk4v58WJ/BwzB8326730b
FQcda25hUcXQkqOKgMEOB2wEzxdJpjY1q9DJRuvHfQGOwEmDG0J6vCOYP6d5
xbPoFrRkkCJ+pITuMPpatrag/weZV4tr
              "]]}, Annotation[#, "Charting`Private`Tag$71242#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
6V3H/geHM+jk
              "]]}, Annotation[#, "Charting`Private`Tag$71242#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"x Gain\"", TraditionalForm], PlotRange -> {All, All}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Linearized Gains\"", "\"Gains from backward integration\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             
             LineBox[{{1.0204081632653061`*^-7, 2.3358500828927644`}, {
              0.04907170402423416, 2.3358500828927644`}, {0.09814330600765199,
               2.3358500828927644`}, {0.1247429258625623, 
              2.3358500828927644`}, {0.1513425457174726, 
              2.3358500828927644`}, {0.15799245068120016`, 
              2.3358500828927644`}, {0.16464235564492774`, 
              2.3358500828927644`}, {0.16507227891156465`, 
              2.3358500828927644`}}], 
             
             LineBox[{{0.16826105442176872`, 2.3378190467017044`}, {
              0.1696297843677234, 2.3378190467017044`}, {0.17129226060865532`,
               2.3378190467017044`}, {0.1746172130905191, 
              2.3378190467017044`}, {0.1779421655723829, 
              2.3378190467017044`}, {0.19124197549983807`, 
              2.3378190467017044`}, {0.20454178542729323`, 
              2.3378190467017044`}, {0.25421560163902684`, 
              2.3378190467017044`}, {0.30388941785076046`, 
              2.3378190467017044`}, {0.31606427113121294`, 
              2.3378190467017044`}, {0.32823912441166536`, 
              2.3378190467017044`}, {0.3297609810717219, 
              2.3378190467017044`}, {0.33128283773177847`, 
              2.3378190467017044`}, {0.33173894557823136`, 
              2.3378190467017044`}}], 
             
             LineBox[{{0.3349277210884355, 2.3423491553155644`}, {
              0.3373702643720047, 2.3423491553155644`}, {0.34041397769211784`,
               2.3423491553155644`}, {0.3465014043323441, 
              2.3423491553155644`}, {0.3525888309725703, 
              2.3423491553155644`}, {0.3769385375334753, 
              2.3423491553155644`}, {0.40128824409438024`, 
              2.3423491553155644`}, {0.4277017695184866, 
              2.3423491553155644`}, {0.4541152949425929, 
              2.3423491553155644`}, {0.4673220576546461, 
              2.3423491553155644`}, {0.4805288203666992, 
              2.3423491553155644`}, {0.48713220172272576`, 
              2.3423491553155644`}, {0.49373558307875237`, 
              2.3423491553155644`}, {0.49538642841775904`, 
              2.3423491553155644`}, {0.49703727375676565`, 
              2.3423491553155644`}, {0.49840561224489793`, 
              2.3423491553155644`}}], 
             
             LineBox[{{0.501594387755102, 2.3488527790677187`}, {
              0.5036406551127923, 2.3488527790677187`}, {0.5069423457908055, 
              2.3488527790677187`}, {0.5562439731409312, 
              2.3488527790677187`}, {0.6055456004910569, 
              2.3488527790677187`}, {0.6322602330293211, 
              2.3488527790677187`}, {0.6589748655675853, 
              2.3488527790677187`}, {0.6623141946348683, 
              2.3488527790677187`}, {0.6650722789115648, 
              2.3488527790677187`}}], 
             
             LineBox[{{0.6682610544217689, 2.356293133518}, {
              0.6689928527694344, 2.356293133518}, {0.6706625173030759, 
              2.356293133518}, {0.6723321818367174, 2.356293133518}, {
              0.6790108399712835, 2.356293133518}, {0.6856894981058496, 
              2.356293133518}, {0.6990468143749817, 2.356293133518}, {
              0.7124041306441138, 2.356293133518}, {0.7648589926307185, 
              2.356293133518}, {0.8173138546173232, 2.356293133518}, {
              0.8234300344283879, 2.356293133518}, {0.8295462142394526, 
              2.356293133518}, {0.8310752591922188, 2.356293133518}, {
              0.8317389455782312, 2.356293133518}}], 
             
             LineBox[{{0.8349277210884353, 2.361974784374259}, {
              0.8387204839560497, 2.361974784374259}, {0.8417785738615821, 
              2.361974784374259}, {0.8540109334837115, 2.361974784374259}, {
              0.8662432931058409, 2.361974784374259}, {0.8907080123500998, 
              2.361974784374259}, {0.9151727315943586, 2.361974784374259}, {
              0.941701269701819, 2.361974784374259}, {0.9682298078092793, 
              2.361974784374259}, {0.9814940768630094, 2.361974784374259}, {
              0.9947583459167395, 2.361974784374259}, {0.9964163795484557, 
              2.361974784374259}, {0.9980744131801721, 2.361974784374259}, {
              0.998405612244898, 2.361974784374259}}], 
             
             LineBox[{{1.0015943877551021`, 2.364444288910036}, {
              1.0047065477070372`, 2.364444288910036}, {1.0080226149704696`, 
              2.364444288910036}, {1.0146547494973346`, 2.364444288910036}, {
              1.0212868840241998`, 2.364444288910036}, {1.0708185367410334`, 
              2.364444288910036}, {1.120350189457867, 2.364444288910036}, {
              1.1324895018645944`, 2.364444288910036}, {1.144628814271322, 
              2.364444288910036}, {1.1506984704746857`, 2.364444288910036}, {
              1.1567681266780494`, 2.364444288910036}, {1.1598029547797313`, 
              2.364444288910036}, {1.1628377828814132`, 2.364444288910036}, {
              1.164355196932254, 2.364444288910036}, {1.1650722789115646`, 
              2.364444288910036}}], 
             
             LineBox[{{1.1682610544217689`, 2.3639813158127314`}, {
              1.1931860638982315`, 2.3639813158127314`}, {1.2174646887116864`,
               2.3639813158127314`}, {1.270149576064999, 
              2.3639813158127314`}, {1.3228344634183116`, 
              2.3639813158127314`}, {1.3259069299092632`, 
              2.3639813158127314`}, {1.3289793964002148`, 
              2.3639813158127314`}, {1.3305156296456906`, 
              2.3639813158127314`}, {1.3317389455782316`, 
              2.3639813158127314`}}], 
             
             LineBox[{{1.3349277210884358`, 2.3629602947450428`}, {
              1.3412692623640212`, 2.3629602947450428`}, {1.3474141953459244`,
               2.3629602947450428`}, {1.3597040613097309`, 
              2.3629602947450428`}, {1.371993927273537, 
              2.3629602947450428`}, {1.3965736592011497`, 
              2.3629602947450428`}, {1.4211533911287626`, 
              2.3629602947450428`}, {1.4477969419195769`, 
              2.3629602947450428`}, {1.474440492710391, 
              2.3629602947450428`}, {1.4811013804080946`, 
              2.3629602947450428`}, {1.487762268105798, 
              2.3629602947450428`}, {1.4910927119546498`, 
              2.3629602947450428`}, {1.4944231558035015`, 
              2.3629602947450428`}, {1.4960883777279275`, 
              2.3629602947450428`}, {1.4977535996523532`, 
              2.3629602947450428`}, {1.4984056122448979`, 
              2.3629602947450428`}}], 
             
             LineBox[{{1.5015943877551021`, 2.3636429903745855`}, {
              1.514405818896612, 2.3636429903745855`}, {1.5277275942920192`, 
              2.3636429903745855`}, {1.5800402927837238`, 
              2.3636429903745855`}, {1.6323529912754284`, 
              2.3636429903745855`}, {1.644549810023833, 
              2.3636429903745855`}, {1.6567466287722372`, 
              2.3636429903745855`}, {1.6597958334593383`, 
              2.3636429903745855`}, {1.6628450381464392`, 
              2.3636429903745855`}, {1.6643696404899897`, 
              2.3636429903745855`}, {1.6650722789115648`, 
              2.3636429903745855`}}], 
             
             LineBox[{{1.668261054421769, 2.366630534923428}, {
              1.6750418568948438`, 2.366630534923428}, {1.681140266269046, 
              2.366630534923428}, {1.7055339037658548`, 2.366630534923428}, {
              1.7299275412626636`, 2.366630534923428}, {1.7563849976226737`, 
              2.366630534923428}, {1.782842453982684, 2.366630534923428}, {
              1.796071182162689, 2.366630534923428}, {1.809299910342694, 
              2.366630534923428}, {1.8159142744326968`, 2.366630534923428}, {
              1.8225286385226993`, 2.366630534923428}, {1.8258358205677006`, 
              2.366630534923428}, {1.8291430026127018`, 2.366630534923428}, {
              1.8307965936352024`, 2.366630534923428}, {1.8317389455782314`, 
              2.366630534923428}}], 
             
             LineBox[{{1.8349277210884356`, 2.3705961960155246`}, {
              1.8357573667027043`, 2.3705961960155246`}, {1.8851468559246376`,
               2.3705961960155246`}, {1.934536345146571, 
              2.3705961960155246`}, {1.961294908620739, 
              2.3705961960155246`}, {1.988053472094907, 
              2.3705961960155246`}, {1.991398292529178, 
              2.3705961960155246`}, {1.994743112963449, 
              2.3705961960155246`}, {1.9964155231805845`, 
              2.3705961960155246`}, {1.99808793339772, 2.3705961960155246`}, {
              1.9984056122448979`, 2.3705961960155246`}}], 
             
             LineBox[{{2.001594387755102, 2.373677017150853}, {
              2.008122394700533, 2.373677017150853}, {2.014812035569075, 
              2.373677017150853}, {2.0281913173061588`, 2.373677017150853}, {
              2.041570599043243, 2.373677017150853}, {2.0941133229016557`, 
              2.373677017150853}, {2.146656046760068, 2.373677017150853}, {
              2.1527832093051087`, 2.373677017150853}, {2.1589103718501494`, 
              2.373677017150853}, {2.16197395312267, 2.373677017150853}, {
              2.16503753439519, 2.373677017150853}, {2.165072278911565, 
              2.373677017150853}}], 
             
             LineBox[{{2.168261054421769, 2.391481145396299}, {
              2.1711646969402305`, 2.391481145396299}, {2.1834190220303116`, 
              2.391481145396299}, {2.195673347120393, 2.391481145396299}, {
              2.220181997300556, 2.391481145396299}, {2.2446906474807187`, 
              2.391481145396299}, {2.271263116524083, 2.391481145396299}, {
              2.297835585567447, 2.391481145396299}, {2.311121820089129, 
              2.391481145396299}, {2.324408054610811, 2.391481145396299}, {
              2.3277296132412317`, 2.391481145396299}, {2.331051171871652, 
              2.391481145396299}, {2.3317389455782314`, 2.391481145396299}}], 
             
             LineBox[{{2.3349277210884356`, 2.4506226800348507`}, {
              2.3360335098172826`, 2.4506226800348507`}, {2.337694289132493, 
              2.4506226800348507`}, {2.344337406393334, 
              2.4506226800348507`}, {2.350980523654175, 
              2.4506226800348507`}, {2.400600038242816, 
              2.4506226800348507`}, {2.450219552831457, 
              2.4506226800348507`}, {2.474542108580816, 
              2.4506226800348507`}, {2.498405612244898, 
              2.4506226800348507`}}], 
             
             LineBox[{{2.501594387755102, 2.6091446342565465`}, {
              2.5034251435331796`, 2.6091446342565465`}, {2.5049453032675144`,
               2.6091446342565465`}, {2.507985622736184, 
              2.6091446342565465`}, {2.5110259422048538`, 
              2.6091446342565465`}, {2.5171065811421935`, 
              2.6091446342565465`}, {2.5231872200795333`, 
              2.6091446342565465`}, {2.535348497954213, 
              2.6091446342565465`}, {2.547509775828892, 
              2.6091446342565465`}, {2.6002825250540123`, 
              2.6091446342565465`}, {2.6530552742791325`, 
              2.6091446342565465`}, {2.6592111899950117`, 
              2.6091446342565465`}, {2.665072278911565, 
              2.6091446342565465`}}], 
             
             LineBox[{{2.668261054421769, 3.133579948062007}, {
              2.6699840424978003`, 3.133579948062007}, {2.67152302142677, 
              3.133579948062007}, {2.674600979284709, 3.133579948062007}, {
              2.677678937142649, 3.133579948062007}, {2.6899907685744076`, 
              3.133579948062007}, {2.7023026000061656`, 3.133579948062007}, {
              2.726926262869682, 3.133579948062007}, {2.751549925733199, 
              3.133579948062007}, {2.7782374074599168`, 3.133579948062007}, {
              2.8049248891866347`, 3.133579948062007}, {2.8182686300499937`, 
              3.133579948062007}, {2.8316123709133527`, 3.133579948062007}, {
              2.8317389455782314`, 3.133579948062007}}], 
             
             LineBox[{{2.8349277210884356`, -8.935949634607056}, {
              2.8366162737371123`, -8.935949634607056}, {
              2.838284241345032, -8.935949634607056}, {
              2.841620176560872, -8.935949634607056}, {
              2.8449561117767117`, -8.935949634607056}, {
              2.851627982208391, -8.935949634607056}, {
              2.8582998526400707`, -8.935949634607056}, {
              2.9107004130035827`, -8.935949634607056}, {
              2.963100973367095, -8.935949634607056}, {
              2.975319757583452, -8.935949634607056}, {
              2.987538541799808, -8.935949634607056}, {
              2.993647933907986, -8.935949634607056}, {
              2.998405612244898, -8.935949634607056}}], 
             LineBox[{{3.001594387755102, -6.122218956345222}, {
              3.0043393700972976`, -6.122218956345222}, {
              3.0058667181243424`, -6.122218956345222}, {
              3.0089214141784315`, -6.122218956345222}, {
              3.0119761102325207`, -6.122218956345222}, {
              3.036413678665233, -6.122218956345222}, {
              3.0608512470979456`, -6.122218956345222}, {
              3.0873526343938593`, -6.122218956345222}, {
              3.1138540216897734`, -6.122218956345222}, {
              3.1271047153377305`, -6.122218956345222}, {
              3.1403554089856875`, -6.122218956345222}, {
              3.146980755809666, -6.122218956345222}, {
              3.1536061026336446`, -6.122218956345222}, {
              3.156918776045634, -6.122218956345222}, {
              3.160231449457623, -6.122218956345222}, {
              3.161887786163618, -6.122218956345222}, {
              3.163544122869612, -6.122218956345222}, {
              3.165072278911565, -6.122218956345222}}], 
             
             LineBox[{{3.168261054421769, -5.406415961055409}, {
              3.216334147375343, -5.406415961055409}, {
              3.265811498469084, -5.406415961055409}, {
              3.2900629724709924`, -5.406415961055409}, {
              3.3143144464729013`, -5.406415961055409}, {
              3.3203773149733786`, -5.406415961055409}, {
              3.3264401834738555`, -5.406415961055409}, {
              3.329471617724094, -5.406415961055409}, {
              3.3317389455782314`, -5.406415961055409}}], 
             
             LineBox[{{3.3349277210884356`, -4.969407941736215}, {
              3.337050203349691, -4.969407941736215}, {
              3.33856592047481, -4.969407941736215}, {
              3.3506916574757644`, -4.969407941736215}, {
              3.3628173944767186`, -4.969407941736215}, {
              3.4154479802069386`, -4.969407941736215}, {
              3.4680785659371587`, -4.969407941736215}, {
              3.4803548564951923`, -4.969407941736215}, {
              3.4926311470532254`, -4.969407941736215}, {
              3.4957002196927336`, -4.969407941736215}, {
              3.498405612244898, -4.969407941736215}}], 
             
             LineBox[{{3.501594387755102, -4.629523301355551}, {
              3.5033729012915042`, -4.629523301355551}, {
              3.5049074376112586`, -4.629523301355551}, {
              3.5110455828902754`, -4.629523301355551}, {
              3.517183728169292, -4.629523301355551}, {
              3.5417363092853584`, -4.629523301355551}, {
              3.566288890401425, -4.629523301355551}, {
              3.592905290380693, -4.629523301355551}, {
              3.619521690359961, -4.629523301355551}, {
              3.632829890349595, -4.629523301355551}, {
              3.646138090339229, -4.629523301355551}, {
              3.652792190334046, -4.629523301355551}, {
              3.659446290328863, -4.629523301355551}, {
              3.6627733403262717`, -4.629523301355551}, {
              3.6650722789115657`, -4.629523301355551}}], 
             
             LineBox[{{3.66826105442177, -4.358433444537521}, {
              3.6694274403210887`, -4.358433444537521}, {
              3.671090965319793, -4.358433444537521}, {
              3.672754490318497, -4.358433444537521}, {
              3.7224618667789464`, -4.358433444537521}, {
              3.772169243239395, -4.358433444537521}, {
              3.796535729924658, -4.358433444537521}, {
              3.8209022166099205`, -4.358433444537521}, {
              3.8269938382812363`, -4.358433444537521}, {
              3.8317389455782314`, -4.358433444537521}}], 
             
             LineBox[{{3.8349277210884356`, -4.144676568026302}, {
              3.8376541762060383`, -4.144676568026302}, {
              3.839177081623867, -4.144676568026302}, {
              3.842222892459525, -4.144676568026302}, {
              3.845268703295183, -4.144676568026302}, {
              3.8574519466378145`, -4.144676568026302}, {
              3.8696351899804458`, -4.144676568026302}, {
              3.922495801077374, -4.144676568026302}, {
              3.975356412174302, -4.144676568026302}, {
              3.9815233106241568`, -4.144676568026302}, {
              3.987690209074012, -4.144676568026302}, {
              3.9907736582989397`, -4.144676568026302}, {
              3.9938571075238674`, -4.144676568026302}, {
              3.995398832136331, -4.144676568026302}, {
              3.996940556748795, -4.144676568026302}, {
              3.998405612244898, -4.144676568026302}}], 
             
             LineBox[{{4.001594387755102, -3.981284986047889}, {
              4.012357802873433, -3.981284986047889}, {
              4.024691599773143, -3.981284986047889}, {
              4.049359193572563, -3.981284986047889}, {
              4.074026787371984, -3.981284986047889}, {
              4.100758200034607, -3.981284986047889}, {
              4.127489612697229, -3.981284986047889}, {
              4.14085531902854, -3.981284986047889}, {
              4.154221025359851, -3.981284986047889}, {
              4.157562451942678, -3.981284986047889}, {
              4.160903878525506, -3.981284986047889}, {
              4.16257459181692, -3.981284986047889}, {
              4.1642453051083335`, -3.981284986047889}, {
              4.165072278911564, -3.981284986047889}}], 
             
             LineBox[{{4.168261054421768, -3.862353755383541}, {
              4.174269584856816, -3.862353755383541}, {
              4.180952438022472, -3.862353755383541}, {
              4.233440860257792, -3.862353755383541}, {
              4.285929282493112, -3.862353755383541}, {
              4.2981700321774206`, -3.862353755383541}, {
              4.310410781861728, -3.862353755383541}, {
              4.316531156703882, -3.862353755383541}, {
              4.322651531546036, -3.862353755383541}, {
              4.3257117189671135`, -3.862353755383541}, {
              4.328771906388191, -3.862353755383541}, {
              4.33030200009873, -3.862353755383541}, {
              4.331738945578232, -3.862353755383541}}], 
             
             LineBox[{{4.334927721088436, -3.783513948327503}, {
              4.359373780598961, -3.783513948327503}, {
              4.383855279967578, -3.783513948327503}, {
              4.436945916431213, -3.783513948327503}, {
              4.490036552894849, -3.783513948327503}, {
              4.4931343787051965`, -3.783513948327503}, {
              4.496232204515543, -3.783513948327503}, {
              4.4977811174207165`, -3.783513948327503}, {
              4.498405612244898, -3.783513948327503}}], 
             
             LineBox[{{4.501594387755102, -3.737995810895086}, {
              4.50862350775693, -3.737995810895086}, {
              4.514819159377623, -3.737995810895086}, {
              4.527210462619011, -3.737995810895086}, {
              4.539601765860398, -3.737995810895086}, {
              4.564384372343173, -3.737995810895086}, {
              4.589166978825947, -3.737995810895086}, {
              4.61346238376376, -3.737995810895086}, {
              4.637757788701572, -3.737995810895086}, {
              4.649905491170479, -3.737995810895086}, {
              4.662053193639385, -3.737995810895086}, {
              4.663571656447997, -3.737995810895086}, {
              4.665072278911565, -3.737995810895086}}], 
             
             LineBox[{{4.668261054421769, -3.7195319702418637`}, {
              4.671163970491064, -3.7195319702418637`}, {
              4.674200896108291, -3.7195319702418637`}, {
              4.680274747342744, -3.7195319702418637`}, {
              4.686348598577197, -3.7195319702418637`}, {
              4.739067046179225, -3.7195319702418637`}, {
              4.791785493781253, -3.7195319702418637`}, {
              4.804083749807239, -3.7195319702418637`}, {
              4.816382005833224, -3.7195319702418637`}, {
              4.822531133846216, -3.7195319702418637`}, {
              4.828680261859208, -3.7195319702418637`}, {
              4.830217543862457, -3.7195319702418637`}, {
              4.831738945578232, -3.7195319702418637`}}], 
             
             LineBox[{{4.834927721088436, -3.7196560558697485`}, {
              4.837903953878698, -3.7196560558697485`}, {
              4.840978517885194, -3.7196560558697485`}, {
              4.8655750299371645`, -3.7196560558697485`}, {
              4.890171541989135, -3.7196560558697485`}, {
              4.945085719974159, -3.7196560558697485`}, {
              4.999999897959183, -3.7196560558697485`}}]}, 
            Annotation[#, "Charting`Private`Tag$72068#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAnX5iBjFkez4sHnZIjrQJQMTTIExX
IFk/nC5UiR6yCUD/xr6DICBpP/SfrnilrwlAncCNHwUgeT9uPj5Pl6oJQGw9
dW33H4k/zBM8WAqgCUDT+2iU8B+ZP/pMzBcqiQlAdsceMO+xmj/Sz2gyI4YJ
QBqT1MvtQ5w/chODvhKDCUBiKkAD62efP2Ir1CPVfAlAeKwLufLXoj/Wa7z0
5m8JQAfb4iftH6k/WlJZpD1UCUDYwL117OipP4qHL0WdUAlAqqaYw+uxqj8s
HY1Q80wJQE5yTl/qQ6w/oOmzrYJFCUCWCbqW52evPzqSfbYuNglAEpzIAvHX
sj9AAvTxvRUJQKHKn3HrH7k/zrRKV9XNCED0mLUq34y5PyK4cAehyAhARmfL
49L5uT/WKrUcYsMIQOwD91W607o/FEz0mcS4CEA4PU46iYe8PywwEwsMowhA
0K/8Aifvvz+KfSnXr3UIQH/KLEoxX8M/bs0lNqoTCEDXX7OjFiHFP3iYb2uF
3QdAcg6tLA==
              "]], 
             
             LineBox[{{0.1682610544217691, 2.976866893917207}, {
              0.20764639894052658`, 2.894703104124943}, {0.21075101245375993`,
               2.8879176227187555`}, {0.21696023948022664`, 
              2.874229033228538}, {0.22937869353316004`, 
              2.8464145258938505`}, {0.25421560163902684`, 
              2.7893071499095026`}, {0.30388941785076046`, 
              2.6714557562524472`}, {0.33173894557823125`, 
              2.604853383099762}}], 
             
             LineBox[{{0.3349277210884354, 2.597260343553774}, {
              0.40293908943338685`, 2.440173817596193}, {0.4045899347723935, 
              2.436529457602706}, {0.4078916254504068, 2.4292717970090667`}, {
              0.4144950068064334, 2.414884845781808}, {0.4277017695184866, 
              2.386656821491325}, {0.4541152949425929, 2.3326263410291777`}, {
              0.45576614028159956`, 2.3293657034058874`}, {0.4574169856206062,
               2.326119462175706}, {0.4607186762986195, 2.319670625571696}, {
              0.4673220576546461, 2.3069504871301625`}, {0.4805288203666992, 
              2.2822430116755097`}, {0.49840561224489793`, 
              2.2504296531294496`}}], 
             LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAY31orA8N4D9UEXRerfUBQIZYnjcd
UuA/sFWq/bDYAUACkLhHW2vgP5zoZmJTzgFA+v7sZ9ed4D8Yv9Yt+LkBQOvc
VajPAuE/PGwB7seSAUCq+GKwbg/hP0R+x+8GjgFAaBRwuA0c4T+cpKU+TokB
QORLishLNeE/IJ1y2PV/AUDcur7ox2fhPxQsEYqpbQFAzJgnKcDM4T+E0SYc
p0oBQIq0NDFf2eE/tNnzOW1GAUBI0EE5/uXhPyhdT+07QgFAxAdcSTz/4T+8
5ecf8zkBQLx2kGm4MeI/ZOPO/8gpAUCtVPmpsJbiP1y10dMUCwFAbHAGsk+j
4j+0f058ZQcBQCqME7rur+I/DG+V4L4DAUCmwy3KLMniP0DJEOSL/ABAnjJi
6qj74j9Y1BXwju4AQI4QyyqhYOM/sA8FajnUAEC5Nx21Tm7jPzCqRUvT0ABA
5F5vP/x74z8YGaF2d80AQDutE1RXl+M/0GEJq97GAEDoSVx9Dc7jP0g7L3ko
ugBAFHGuB7vb4z807bSYFLcAQD+YAJJo6eM/QJkY+Qq0AECW5qSmwwTkP1z6
MXQWrgBAQ4Ptz3k75D+I/+UWqKIAQG6qP1onSeQ/+ATzAOafAECa0ZHk1Fbk
P1x3BhounQBA8B82+S9y5D+AKnDP3JcAQJ68fiLmqOQ/xIsC97ONAED49Q91
UhblP0iIG7tFewBAIx1i//8j5T8QBvvyJHkAQE5EtImtMeU/UCIDHA53AED0
1+yoRUjlP8BzCVmwcwBAtO0L2g==
              "]], 
             LineBox[CompressedData["
1:eJwV1HtM01cUB/ALyEOo6JDNgMQn0m7qZCKsGtdzBxQqLWgrDyHIoPGBWKQs
ZFLHlm7jOQeCtiiMaXHN4hCjw+mgghjdUB5uqFhxjOfo79EBAzUyX7jDHze/
fJLz++V37/meu1ydpdrtSAiR45p9Wu62OOxW26C58WDdeBahn8c/VmoqbLCm
c7/HV/sI/fEz6V8+p2xApa/cruwllHTxkzkWG+TFpUlkuwg9l77ed/UUOnxs
1LqT0N4j+ebeGRukH42vVSUTOucX67uFAgZoauyjB0mEJjl/GjYsZCDQs0f8
OoHQwjW3b5cFM+DddX55bTyhP21fumNzGANjV/cXKOIIdTt9Q3M8hYGMlwMn
W1WEBrW/OR2uYaBZ/oa0SEloyuTeLx7pGNDnhkTu2EboJYmgMtrIQH1pIH0r
hlB1X2yrUxcDBv+IdxyiCHX/djgz+yED5rPbfBZtIbQh6YDfIMOAuM9wJ1hG
qNOfRTqLAwuB3/voSyMIra/yFonms+Ar0O9tkxIam1hrNfqxkH9o7XNXtLnX
EpT9PgtfLl7x2hxGqOJE5MhAOAuXb7mmEvSThJ5yhYqFAK9TW3aFElqzKA0s
H7Fgchdf7P6QUOmD8XFhJgsj+1YapOiJykM1xkNY39jw93VKaGW8q9ypmAWr
TlwlQzP3l50ZOM3CnsSDCzOB0DLjuXjFBRbWT/W1eaBD4jY5W1pYqJeWtTRI
CB3wvnlR2MlCnoKbSEMX9WxXG3vx/6elKh90oGFogROD9SnOg70fYP+2Z7Zq
H7Mwo/vkGxNav/B55gDhwHAvRKlFi+4V+ik8OajZnLtShu4+urCzaTEHMj7z
mRCdqzLphG9z4CaIaZ+PXua1VmQM4WDolbLk9WZC2+80WR3DOdiw5/K6afTH
FREFWiUHOeorDU/Rvsp7QQMpHJjOmd1m0NcXpI7INRxIbjYJ5+H3MrrHypt0
HAT4Rrj4o73KdSAs4kC0sqo6FG3Z6jJhMHAgPu7Sl45Wzz9W43iaA00J01KJ
9vhjqVx7HvdTbtzYhf65rP5ZfzMH9WM54XPxPJJjNp6Rd3BwtG60Jxo9x7Mt
vukBByeby4aq0PW3Vc5CG75va00eR8eWDl40POLgycSwRIbn/1KhUTsSHorn
7MqrQ5sFzxZo5/FAei3u3ti/6K6C1n5fHsS/pg7mo58e9jogF/GwYvL+vy/R
J+Wn/JqCecjINr2XN5uHjkadYRsPS0I1S8sxP5VfS0WOKTyMVJ247I/5kkTd
tWbt52G0Wht3DX2k/Z8geSEPTNoxvQDzKS7JHWk8xsMP4qjpZvSQzLkioJaH
QGKIysF8B95aMuHQzEOsNTFpOhL7X3S2JqudhwvXzOQGzoM+Uizvt/KwqWJZ
ghHnpbtNeaZxioerL6q5aDmh2b/lq7OEdpDEDGXM20roktEIl6dBdqhb9/t/
L9CdjnPr8qgdtOlVgkmcz1W0dKok0Q6mnZ4mDuf5ocWoNx+2Q4q+I8t39j54
mOC/+oQdihd3r9qwg1DZ2tCZ6u/skHwpwPMC+n9E0RIN
              "]], 
             LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAADigTV7q36j+MdjAJEVsAQEGwpp7Z
7+o/WBoFk3hgAEDuzmhCYPzqPwjOXB+7YQBAm+0q5uYI6z9exQKcAmMAQPUq
ry30Ies/RuiaP6BlAECppbe8DlTrP7zjTSMVawBAEZvI2kO46z/QOl0M3XYA
QL65in7KxOs/CHH+IWp4AEBr2EwiUdHrP2B1LY77eQBAxRXRaV7q6z+emhJD
K30AQHmQ2fh4HOw/JlDeDr2DAEDhheoWroDsPyiVB7uhkQBAsXAMUxhJ7T8a
BOOEKrAAQMyaE3mtVu0/dD60PFuyAEDmxBqfQmTtPyyeO5yPtABAGhkp62x/
7T8E4IsfA7kAQITBRYPBte0/fjG80xPCAEBWEn+zaiLuP6bI2ufQ1ABA+rPx
E7377j8gBVVEYfwAQJ2Cl1Pw8u8/1texX+wrAUDT/JPQ
              "]], 
             
             LineBox[{{1.0015943877551021`, 2.148949090357781}, {
              1.0243826123190019`, 2.1669799967247814`}, {1.0274783406138042`,
               2.1694480059812165`}, {1.0336697972034083`, 
              2.174391263616209}, {1.0460527103826167`, 2.184290134990799}, {
              1.0708185367410334`, 2.204005458736246}, {1.0723664008884346`, 
              2.2052288722670355`}, {1.0739142650358355`, 
              2.206450810470959}, {1.0770099933306376`, 
              2.2088899677922065`}, {1.0832014499202418`, 
              2.2137473674602237`}, {1.0955843630994502`, 
              2.2233623924481236`}, {1.120350189457867, 
              2.2420643826301188`}, {1.1218676035087078`, 
              2.243182351667528}, {1.1233850175595488`, 
              2.2442966869561376`}, {1.1264198456612307`, 
              2.2465141909398803`}, {1.1324895018645944`, 
              2.250902661961076}, {1.144628814271322, 2.259478101584329}, {
              1.1650722789115648`, 2.2732293040691998`}}], 
             LineBox[CompressedData["
1:eJwV0n1Q1GUQB/BjUYKLghgFLQiUkXiPIAyEZheQo0PFBCQwDNIogwClayIk
XpSXs9F4ERANfAFRuJwOHDCO6EIHCA4sXrIEDGmEI1Bg4vf8RCuwpz92dj4z
Ozu7M98N+1LDE0Aikfjz+r+/MzOe49m0iONp4kyvF9Cd0SmlrGMRU3rvuJ/y
AUr/N7anuX8Rj6/tN8z2B2rEbSElU4s4qu+66LgVyK77peBQKwEnWit+HwsH
mo+6916ujYAbox6X1EQCtU+fzWu1F7BCNqtKiAKKNrHsdPAQUCfbrJ+IASre
virIUC7g5CpNvioeSDI8Qe0ZAnbsW/7sSDJQ3oz2QkaugN35SQdcU4FMJNXg
qxSwyv5I0uBBIAu3mM6WcgFBsjPXVAG0qXAwRN0ooLvP+vrgDCBVtbo++VsB
Pxr/Zan7MJB78wkTV62ArUuyJ4GfA/n8Ie+r7xNQaRRi5JIDFOp3I6xGL6Bp
2Q9XNPlAP+06r46f4/OdZmlmhUARB7LMbRn/d+uZkjglUGz5lqGvDBjePiZt
mv8CKGXh6u5ya4Y9FlddfiwCWlxdci3CnmFr80DmfDHQp9apVhbODCexSGdW
CpQjdxn58jWGCtljVyoDOllbG6sMZzhaZ9QdVQm0ri33e1kMw4ddec3bTwNV
DcS9uDqe4dCYLND/DNCl5RcmcpMZPtA894xxFZDzmr+JFAwbNUc9J7nVzrcv
rGQw/LPQt0dTDdT6Vtn+w0qG0sKAtbvOAfmnpHX6FjGEJ8YtFueBrue9uelR
Ob93cKX8JreuyXRaUcuwf0flA/caoLCe2RAvFcNAm9HQW9zD4z31fzUydC4t
+E5Ry/PzdH5iipZh1s8n685eBIrfuL/PtYvhnqSvn3KqA5ryCXC938cw2i5u
xxXuxJ22JxqGGMZqFxIdL/H8JCzPfTDC0NHtcmQ198eZY2EOEwyNWoZXpJeB
HpVq1JN6hmGj2r2HuDMbTpnXzjF89qE6YYDboOOTQ+8yhgeDBaljPVDBrxFD
tv8w1L49EpDOLZ17xWvcQMT0mG9WOriLDM3LqoxFtJhs94YGoDXPz7M9ZiLq
iyPH/LgrPfp3r7cUMdKu914yt02I6tpv1iK+4Z0YVMlds1dpVWEvotKpcL6N
20Hxfnqks4hZMYqRW9xuW+5GnPMQsV1XsDDN/aok+uXZzXw/pHkK3H7dA1Lv
10XUtbRVLnEHHpfrs4NETPlwZp3ILQ+/cV0nFzFv5VjDfe46yw3ZN8NEJJXo
dJf7PxEvx+4=
              "]], 
             LineBox[CompressedData["
1:eJwV0X9M1HUYB3DumWB5hA1qJTaUgVjyQ0ATHMjzMCONASUHdAoWEpAVyu/4
0SUTLgcCwRpwisdx/NAO4sfCK3Zp7AD5IcI1RphABPLDa9jc6Px8vqgD+/bH
s2evvf94P9vjnJAamQRWVlYHxfl/v1hV4j4by3DBd1uLsQUoxdtJGvwZw8ZT
G8rLojN5zYPSVIa3zEY7hej8m1v77mYzrNxo+PJD0ecLi+ucFaKjYrvcRRcf
leSlFDLcsLR2r+mAKuzyo7qLGY6EyRQ9omt+/3cvVDA0Bm3nCtF1tV9Iw6sZ
6l1MjvtFN8cvPVBdYVg7FTC/+D3QD24n+xYaGA6P+geWie76Z7LOU8fQFzSu
nqINXRF5uR0MVzwjKgavARlzh6L69QzvSbwy5KJNmwzS470Mg5p25CRdBZoc
8TE3DTH02KxUzjcD/VnZ2vdojGFH1a15meiVN9R5ymmG7y7q41yagFYXXon+
bZ5hTPJfnxY0Aq3pyr0dzQxbO/64NNEAZP12gbnTwlDTmHg4UQtk+0zoe/qE
ofdPtTptPZB9b5omxIpjT8bylkkN0M7whOgZW46P5X6aXXVAux1mvN0cOJqk
0hvBaiCvKZlt+jaOvjVlbdFXgAKTQvpt3DjWsDPLiZeBDrv3aI55cPR6NvB6
/CWg0NUD+WpfjieqDGuRKiD512/6+CLHjSpz9Y5qoKxqaf1JOceEu/s9ZZVA
X8Uq83UfcUyx+aRtSwVQofN6tCWRY1raB8WGcqDK9ke2JekcX1DD3vWLQG0D
4/n6i2K+L2rX9m+ArpeGxjyv5Cjvup9TVgT0y7F+n1AVR+3L1lOPzwMNz+r/
nmviaL+YoW09B7TEVDHSXznGeLzm15ID1Bi8L3O2n6P65yFLSzbQx+Wmis4R
jk6lNRP1mUDTrta3Zfc4hkpujH6eCjQuywhQWzgmd5+TK5KBvq1/SX72qZiX
HLrvmggU9lCXRRIBT8fnePWdEvsL59qX7AS8aRw1T8cB9fwYttNzj4BO2uvV
RZFAinVz4HNvAWsPjVmNvw908L2i4+N+Ag4WHJm0DwfSzxu+yw4RkL86WJ55
BKh1627rnngB30lv2qwLAFKdkaxEqATccyHIOOEMFGVQ2zhrxH7/zvYEJ/Hf
1v4ulmYBD9QdPbHsKN6rPhun6hLwwulrtwccgJR3ZkxzYwJm6a6urm4Ciui9
81buEwHjhkOE+ocS+g/eXbOC
              "]], 
             LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAsj401ocG+D9cajb+pOMBQC51UdBC
C/g/spIRhLXgAUDrwOzsFBL4Pz4G1xZv3AFAZlgjJrkf+D9AKNiau9MBQF2H
kJgBO/g/zn/8MrnBAUBK5Wp9knH4P66sbcY/mwFARn0jrER4+D9YLP7STJYB
QEIV3Nr2fvg/uPXyCk2RAUA6RU04W4z4P/5LsOImhwFAKqUv8yOn+D+aOKCM
P3IBQAtl9Gi13Pg/8kzeCABGAUAI/ayXZ+P4P75q0B49QAFABJVlxhnq+D+S
BaUJbToBQPzE1iN+9/g/0OOLTqUuAUDsJLneRhL5P2g7YC13FgFAzOR9VNhH
+T80W0E6neMAQMh8NoOKTvk/upLk+AXdAEDEFO+xPFX5P5quKVph1gBAvERg
D6Fi+T8Glx3978gAQKykQsppffk/iFdPlWytAECNZAdA+7L5P9BXvTnicwBA
TuSQKx4e+j+YaES7gu3/P8wr5NRcJPo/vMdXtBne/z9Lczd+myr6P4icoJKZ
zv8/SALe0Bg3+j/oxTIWVK//P0IgK3YTUPo/DJyH5rRv/z81XMXACIL6P2D7
Q0ks7P4/+mt21CKk+j9IOeSiIY/+P8vk1zQ=
              "]], 
             
             LineBox[{{1.668261054421769, 1.9010991847833782`}, {
              1.7299275412626636`, 1.7127022415689455`}, {1.7315811322851642`,
               1.7072042295342102`}, {1.7332347233076648`, 
              1.7016841684863921`}, {1.736541905352666, 
              1.6905783702957944`}, {1.7431562694426685`, 
              1.6681074018481477`}, {1.7563849976226737`, 
              1.6221552360237057`}, {1.782842453982684, 
              1.5264505621305844`}, {1.8317389455782314`, 
              1.3381196765641024`}}], 
             
             LineBox[{{1.8349277210884356`, 1.3254056742014626`}, {
              1.934536345146571, 0.9133864119644066}, {1.9984056122448965`, 
              0.6486149819877793}}], 
             
             LineBox[{{2.001594387755101, 0.6356585161933319}, {
              2.043212559163819, 0.47060697958971076`}, {2.044854519284394, 
              0.4642932320956401}, {2.0481384395255446`, 
              0.4517170003806825}, {2.0547062800078466`, 
              0.4267754357023561}, {2.0678419609724497`, 
              0.3777820295090022}, {2.0941133229016557`, 0.283711947688003}, {
              2.095755283022231, 0.2780195959324985}, {2.0973972431428063`, 
              0.27235036339565344`}, {2.1006811633839573`, 
              0.26108197988965287`}, {2.107249003866259, 
              0.23883056268071723`}, {2.120384684830862, 
              0.19550846673269184`}, {2.146656046760068, 
              0.11388871390620814`}, {2.1481878373963283`, 
              0.1093470414176565}, {2.1497196280325883`, 
              0.1048301175826829}, {2.1527832093051087`, 
              0.09587100565410722}, {2.1589103718501494`, 
              0.07825510947284808}, {2.1650722789115644`, 
              0.06095230930514628}}], 
             LineBox[CompressedData["
1:eJwVj3tMklEYh/k+c3azmxa65aJJVlMYObO0TU6ZbXgpx1zkZVbipVKji6us
5eiyVFhB4j0vLCLIVaZplpUvatyZCE6b1oTZqpVaWZkGpZ3+ODt79vud533P
+gwBN4ukUCgMfP7fDwsEqOYAgSj9nUkb2pvYRa0qsy0T8zWdWHHyNvv+o7I5
ai7m+nJZnLSOvfjBkcw7ZzGf8FxlLyph65S+rJdSzA0Td5VeMhilizhOGebv
fEehtRKmFfMZHlWY/RYtGZXUAv325wpOPYGEP2gJAX/lcLlB4x68h3N/08Cu
SDVEVeXpv/Rg3j7fnjrXCvvXjDlX6nDf+0reK9tjyK/gucKMBEKhYyHhijao
k+1iXLBi/vbkMBM9AZfET+b1lkAah3xkd8YzaC95lU6bxrmCLlLGAKhjzX7F
swSicaTdXz00ULvUbp90E0iu7IoY4mtAKHXseU6SSOPt6Hev64b4ahdz/woS
HUpb53ujtAfYKcSnFz44F8/0v3H2QOjahYpAKonkOl7qeHgvUOWrqVMBJBKO
cP/EOXphTMWaFwfj/tXE8lmaFgaPbnv2nYk5O3xB5HEtGIKjTieHYn+8V/PW
Ti08aI77GBSB8+LCKd5eHZzryLZ27yGRk+RkMnP0kFuYX7opFnNFi2pjkx7S
dxRESxLwvBZJ78C4HqLhUkdaEvbxZiwo1wDL9HWNM4fxfixRXlKKEYhSRXJ6
FuZWpcpUZoSfsU0+2iO4v0KdNWE0wnBfR3GZgESU9+ffMcNMYJF27fx9CvuV
vwwJOSbo4mrdB8/g931Pr/vWmODOkF3AuIiZ2xhSOWuCqurhzeVC7DswEr0v
yAyiFOc71xUSSYlh+X2uGQSjkzyDiEQntNSbiSozRH5YiPjV+L+XbYF0ZAGG
ernLeAv7pvhbPmRYgHZsTRurEe/jf4sXc9UCnl8CN80pScSyiSJe91iAK5ZC
tgr7jnfm+Fst8A8m2V6y
              "]], 
             LineBox[CompressedData["
1:eJwVkn8w22ccx+P7NWnTntlmdbZ1rdlKGbUyFM0ek9Izeppyqe6OjPOrl0So
rnrVCVNG2WFUUUSrY6iY+TEkPn5Eg+TJWKtyba7TUkUbVdNdVr/27I/nnvvc
+3m/3p/P5x6bqERuDMVgMPzI+f82HVOWLt2ikDQlMMXZFMP4K7ZF+W8UKuyq
ZKU6YRjqOjK21Umh6XJfj1McDJ3ng7Jieyhkkb1pqw3H0OB9go0VFBIXs63v
CDFUboQbXQcoxHDiu8VLMPwI/LYKJdGNx+rzizBIMuIEJiMUkjjOnf2iFsMZ
P9G+eDXJu5rfnC7DEPvG2WmtlvDt2PwgOYb39oxOrU1QiC9DxS9uY9B67v7D
fpLwOw1JweMYMrlJt8N0hP9NQmiMDoO7YFiR+YDw178tdf8Lw+Il6w7ZQwq5
lH5X1j+LobpG2Kx/RKG90cVD1AIGbvfAje1PiK5LyV1/hsHszruV7vNEr+sL
vWXA0PM8oTj6GYXGIx9FWi5hEJn15RYukXyx4YEL0T/a+3aG4iXJD9hvQhH/
vUOxqYurZF+/WL2Z8xRD3omeRCsj2W/rxSB4jIEtNI/jrBHeT/HMRj2Gleyo
iKRNUnu4lvpPYrgp7QyrNqHR+MXL3BINhpM9rGC1KY328s7dKB7EsPNuBMfI
pBGqCv8bdWHoN7R5f7KDRpKmf9qrGzGkMJmuXHMauaiS+U3XMNjbfO2Q/haN
lnlTAbEFGPReMptmS8L3rK7RpmHgiHgWZu8TfaOxvI6HwZjTxHT9kEYWzpka
Cz8MzbVbm5E2JC9+vtCO/AfLyXpDtx3JSz8fwN3QwMjS2uycA41CznFYMTMa
SNsWon/HmUZi5dzWnhENzHobx4RuNJIic15+gQauhgUNVniQ+rpPqI9IA0GJ
0m6VF8kXJ+uLgjXQfv1og40vjfrzZHKHbRqIl1+rOcYhvJiOAcGMGj64t3zl
QgDpL0XVdFyhhqzt5Zcmg2nEKMuZNxGqwdPWkEYdJ/PfbXfSfKmG5z6+KQdC
ybxP7b09rNQQKl6Iyj1F+h1w22XoHYOPpw6hw3Ekf3BibWh1FHTLBR6nT9Oo
VcJoyIBRyGc9di4Tkvx9r17f/2EUVg/n7X55hvhLiqojrEZBWXf/dZ2E8JUm
4ZW2I5Da57wy8T2N+H7+XnYzKvhUl7mwmU14gss2gbUqKNnhqDtZQPzmC1qu
tQqiky907Kwg790+S4gyDoP7wYcd+6uILszwtG4ZBtYK6vSXEr4gnZ0UNQyt
SWZdkp9JP2nSm5RKCeviot9X24jf9StmVfoQXEms79Wrib/c6XNeSz8kHGDJ
/9WS/9O91bIY3A8+LwTyXX+S/TuGj7roAGZEBxUhOrLvrMWGzKN94CJS9Cln
yftfi2VZzF6on35iKV8ndSCnse1IO/wHXKcSHA==
              "]], 
             LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAAWR8a60MDBEDgzM0CVFGyvxZsXsMg
CgRAQPmBFRo2sL9ia+nElBYEQABez2XogKi//Gn/x3wvBEAAI/gPQ2iOvy9n
K85MYQRAQNF+wHJzrj/eaR9vrWQEQEDN8VYenrA/jGwTEA5oBEDAkKdk0AWy
P+lx+1HPbgRAAAwN2BbftD+jfMvVUXwEQOBtOXAKubo/F5Jr3VaXBECQdIMy
koTDP/+8q+xgzQRASDqqd5WC0D+uv5+NwdAEQBjdsmEj9dA/XMKTLiLUBEDA
nsOtcGjRP7nHe3Dj2gRAyILoK0VR0j9z0kv0ZegEQCC9ksq2K9Q/5+fr+2oD
BUDMk9RCqQLYP88SLAt1OQVANInQBToX4D8+bW3pmzwFQFYatcyYVuA/rseu
x8I/BUCIq3pQNZbgP458MYQQRgVAoAw2ECQW4T/9NTtqEVIFQNAf589HDOI/
89SX+A==
              "]], 
             
             LineBox[{{2.668261054421769, 0.5804586189643701}, {
              2.7023026000061656`, 0.761665268139508}, {2.751549925733199, 
              1.0341877841792597`}, {2.7532178933411187`, 
              1.0434177989141118`}, {2.7548858609490385`, 
              1.0526380739741603`}, {2.7582217961648783`, 
              1.071045476599856}, {2.7648936665965578`, 
              1.1077009702870457`}, {2.7782374074599168`, 
              1.1801541152255917`}, {2.8049248891866347`, 
              1.3198476447345575`}, {2.8065928567945546`, 
              1.3282778227327245`}, {2.8082608244024745`, 
              1.3366668031843583`}, {2.8115967596183142`, 
              1.3533172911820954`}, {2.8182686300499937`, 
              1.386082390317094}, {2.8316123709133527`, 
              1.4492671949284786`}, {2.8317389455782314`, 
              1.4498504900623654`}}], 
             LineBox[CompressedData["
1:eJwVkmtQjHEUxht29kiZsi1yW9lRs40mVkK5nONassQajUspUovGZkeklbsw
JbHZjTImZtwW5S7sRmlFbTTl8mrSaIpQyjW2ff/D68OZM7+Z58w5zzxn5Opk
dUIvFxcXpVD/u6iqwth5RUzH1pRIlml/44dZbpxfs5heLYkNGTrKgQsPdsTu
bhVTxo9AzZ1pDhzlUZw8oV1M3PXTSvkmB9qHjc8p/COm2NMLrl7jHCibNO1Z
iheQLdU8dI6pBw9uGxH1fCDQqSJjs/lyD34vdWnyHwK0fKX76IryHqyc/ehL
kw/Q8cn32ySdPbhxcXi/uYFAF5LdorynO7Fcq1YNnws00ulnyuKcGHA96EWq
CsgzLULp/dmJpl/S6LpIoJVDLjxY4nRiUvrrpANRQLVN+dqWYTxKM6OzvsUD
SSqDu8KiedxRM9VLpQFyvVTdtjyJx4+eIwrOrQe6v++MWabn0ZrXbF6hA7oU
4CgvMfGYeDaxyrYDqDRGfTnEzmPtxzC1zx6BPd2nvOR4DA3wb9BnCPoKS5L8
PY8eN9o/jTkEZO0s19TxPOq77brMHKDshCN5wX0YtoYUOVoNgj9VWuA8L4Yl
Dze65p8Aqtc3ZBxWMJSL1Ed/ngRqT55cZRnH8FBY0ODIQsHv3ntpp6YwXPXs
l0J0Hmjdk9Gh2yMZ9m3Uh2tvAgVkW3yv6RhOSL3YL+cOUE1ekNvfrYJewtUV
3wOy9J5kdN8l7AsPjvn2ECg0/1W9Jlu4pyVeLqkAUvwID7ydy9Bjp6FtXCWQ
qihqi+0Ew8RbXbqUGiDNWC+l4ixDw0LZRGMtUNYA0bJ0M0Nru4q/VQ9UWKp/
YyhmKJWb9/9+I+TZOya+z12GaOXmeb8Fmn1FOXatleH6pdA/5B1Qt2hQU1YZ
w7LDawr0H4C2yUwpPk8ZdvjnxhV8EuYXGccY7Ay9bWW+lg6gOC53w9PnDGfG
ff3c2CX8z3ZHweM6hlqn7Cr7DjQzwlOR+ZJhvmn+Zlk3kK6hereUY2hTpoei
A6jsTPHgxAaGX+3mv7E8UMsMbtXORobn372XWgSe03kg967A/wCu63fi
              "]], 
             LineBox[CompressedData["
1:eJwVknlQzHEYxsti3sqIRZkte3SYWiZSJEfv26RBEtvMzpJUrA5njTS7zFaO
DkUHRdS0TUky2mZCmSRHMWNEGBFbtKuDRtSGjNovfv54553PP8/7vM/7SnbG
h0ZPsrCwWMzV/75VJPgSwAP6vsxGtt/AUOsbPbsXgGq/to1++8jwSUfBO940
oJCTjiPQx3AsvkXrYgtE1gHGrxxLbEzKQD6Qd51utbafYXCVyD1mDlB4nIdG
MMBQ7R/yLWMuEL9xnK/kuLJbc+OKA9CSu9dUao6fq66pHwuB4kbEwm0cj/P1
qwclQGt1w6k2HM+vBZ61K1DF6xxRNqcvW+/zWOoGBB33Ujq5+Zq+6JwNC4Dq
5iuEP3oZVqcWhu7zADp/a0mKgfP/StBqn+MJpFmG80qNDP/Um7p13kAuSarD
Um5fqUxc0e7D+X/UZ5v1gaF8KCR2eAWQ/5ay8MZuhkczkxfO8AO6UN6ub9Iz
rHGqMS32B/rUeHXymbcMO5v1DbI1QLme7nLfNww9fvj4FwQBTbOTpkx5yTAs
L2bqzY2cnva4UtrOMF16rq1jM1Bl4sp0lzaG3VGjcjsFUMKZh1nFDxmCWezg
EwZ0xTsp3v4BQ6+iTQbFdiChcl3R3maG2c9q9lxUAm2xTblcUs+wIa5r0e0Y
IHcvY5q6jqGRZ/1TvxvImJBU7KFjuHxFbKpjAnff8l3JbpUM+6skhWUaoDXP
T2l35DMcSjP+5h0FaktMKKnIZji6szwy7gSXp1fxi9tpDC1EkgWe2UB5v6aE
JaoZCorELS1FQA4GP4ldBMPNmaKR/utANRPBhbVODBXRPfKgBqDI3ukSnYBh
REBZU20jkGVDddVpPsO9f4WZqvtAMlOUpcmSYYZKKLRq5/6rutU3sseMd2Ln
BS8cBBq72fVs4zkztga+r8sfAtr6edVw2SkzPnEutf85DOQsMQ50HTNjZ49j
b/MYULpbacSsA2YcVTge2TTZiiYVHlqeG2hGt3UO1QdFVuTpKj8rNk0gW7py
z8xQK3p6wXDJL2gC/wGMpmKR
              "]], 
             
             LineBox[{{3.168261054421769, 1.7002048206210194`}, {
              3.1730414651683194`, 1.6920231655415916`}, {3.179226134055037, 
              1.681352843373232}, {3.1915954718284723`, 
              1.6597849577949906`}, {3.216334147375343, 
              1.6161441204092397`}, {3.265811498469084, 
              1.5294094336782946`}, {3.2673272155942032`, 
              1.5268006101203826`}, {3.2688429327193225`, 
              1.5241958300268283`}, {3.271874366969561, 
              1.5189987422170437`}, {3.2779372354700382`, 
              1.5086567097573944`}, {3.2900629724709924`, 
              1.4881974864650522`}, {3.3143144464729013`, 
              1.448287668436564}, {3.3317389455782305`, 
              1.4205302467673493`}}], 
             
             LineBox[{{3.3349277210884347`, 1.415526455993591}, {
              3.3644621002807877`, 1.3704272851257164`}, {3.3661068060848574`,
               1.367989174009351}, {3.369396217692996, 1.363136451303445}, {
              3.3759750409092737`, 1.3535251653314258`}, {3.389132687341829, 
              1.3346803153235434`}, {3.4154479802069386`, 
              1.2984968642923886`}, {3.4680785659371587`, 
              1.231983851650576}, {3.469613102256913, 1.2301569650756954`}, {
              3.4711476385766673`, 1.2283362227536017`}, {3.4742167112161755`,
               1.224713087357468}, {3.4803548564951923`, 
              1.2175396106661172`}, {3.4926311470532254`, 
              1.2034790452835953`}, {3.498405612244898, 
              1.1969948246894209`}}], 
             
             LineBox[{{3.501594387755102, 1.1934489920491411`}, {
              3.566288890401425, 1.1265275435253153`}, {3.5679524154001294`, 
              1.1249246200817684`}, {3.5696159403988332`, 
              1.1233272028825183`}, {3.5729429903962417`, 1.12014876890409}, {
              3.5795970903910588`, 1.1138566891963873`}, {3.592905290380693, 
              1.1015252555357917`}, {3.619521690359961, 
              1.0778226218706257`}, {3.665072278911565, 1.039954427849459}}], 
             
             LineBox[{{3.668261054421769, 1.037418003907406}, {
              3.675861201347275, 1.031425717250658}, {3.6789679123760535`, 
              1.028999382679071}, {3.6851813344336097`, 
              1.0241861882090357`}, {3.697608178548722, 
              1.0147136585793644`}, {3.7224618667789464`, 
              0.9963527785963988}, {3.772169243239395, 0.9617332709058724}, {
              3.831738945578232, 0.9233656229264632}}], 
             
             LineBox[{{3.834927721088436, 0.9213943694064907}, {
              3.975356412174302, 0.8408133595670588}, {3.998405612244898, 
              0.8284604947947699}}], 
             
             LineBox[{{4.001594387755102, 0.8267645190181304}, {
              4.165072278911565, 0.7418118173256234}}], 
             
             LineBox[{{4.168261054421769, 0.7401502576178209}, {
              4.285929282493112, 0.6765507356794276}, {4.331738945578231, 
              0.6498492184345293}}], 
             
             LineBox[{{4.334927721088435, 0.6479342796569614}, {
              4.490036552894849, 0.5430584571254173}, {4.498405612244898, 
              0.5366297458195747}}], 
             
             LineBox[{{4.501594387755102, 0.5341568986765642}, {
              4.665072278911565, 0.3891523142978528}}], 
             
             LineBox[{{4.668261054421769, 0.3859644639496099}, {
              4.791785493781253, 0.25290304609289926`}, {4.831738945578231, 
              0.2064110166034574}}], 
             LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAAWXiSvdWE0BONCPwKPDJP2yCU/xK
kRNAaNRcwvwpwT91U7TXDJMTQLpsd4ZM5cA/iPV1jpCWE0CH/FiMxVvAP645
+fuXnRNAp9cXZkaQvj/5wf/WpqsTQJg1oEx0Pbo/kNIMjcTHE0CGfqnXjImx
P5qjbWiGyRNAN880Bsr9sD+jdM5DSMsTQDx2jyL6cbA/thaQ+svOE0BZN4af
abSuP9xaE2jT1RNAm+HKZT9Uqj8n4xlD4uMTQK/tzG1TkKE/MLR6HqTlE0D3
UogjkHegPzqF2/ll5xNABZnWTIC9nj9MJ52w6eoTQIDAt+T6WZo/cmsgHvHx
E0BkCKCiCZKRP3w8gfmy8xNAAwigXs6/jj+FDeLUdPUTQIMq1rpxW4o/mK+j
i/j4E0DdyZDIfpKBP6KABGe6+hNAGdhqg95bej+rUWVCfPwTQIXsxhirknE/
tCLGHT7+E0BMYKQN1JJhP77zJvn//xNAN0v+pJ4egT4zHLaq
              "]]}, 
            Annotation[#, "Charting`Private`Tag$72068#2"]& ], {}}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"xdot Gain\"", TraditionalForm], PlotRange -> {All, All}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Linearized Gains\"", "\"Gains from backward integration\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, Annotation[#, "Charting`Private`Tag$72889#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwV13k8VF8bAPAxGOsIo6Ts/CxlS5K0nGNPKVGkkmxFyFa2qITsJGvZFSVl
SYmQc0nWSEiI7MYM2Xfive9fPt/POec5z3nuc665YtYuxteJBAKBwkgg/P9v
2n1r0gFb3xPtF4/LxB/fQLUdogYXRS+BIIOBKwLKG2i7ripQVPQm8DPQ4YqT
2kBpWJQIs6gP+BCWeNx2xwZyOu5xa0UkDHhT42ceDK6jjg37+FmRZyC00ku3
wH8dsfwelv4r8hqk2nwPePBpDWU1ZbhNinwCW+yDL27xrqKCwrDfTgpNYLH7
S9jo6UVE56VHnrJqAuJjWc2TxxeRtOepEzLxTWDrSPDFFcVFlHmMI2tkrQns
0Tzwey/fIoptjLxx+WszgPKxLul9C8hz5PGcnnkLIOjteZTrvIAyOJoDeXTa
QGqMjA+WNI9OHPc197doA7p8OvS48HnU57z/0IxXG4hZM+x3uTePdrdHjH/L
awPGC6Bew2YePXlqoB/K/QOYly7yGynOo8D/Wrm2f/8Alzeyyw83ziE78OPZ
lHsHYD+b1zzONIcIz5fLf0d0AFEH8Y3ja7PoKZNgX1N2B/Dku5yV+XcWNTTe
EH7d1QH6nK7lhHbNIpkLm8+vq3eC7oT7LWO5s2jCXvrtH4afgLUqznTccBY5
xN6raovpAnLE4iPbZ2cQcen5AHrdBcwchi50qs+g5IsNhMKaLsB9gbugVmoG
NQlStKIWu8CEq3rIytY02v8qt17f7BeIL6soyS2aRlMVHW01It1AMIpb8pTA
NHIekx35UNADZg92NC9vT6FBix7W6sYekM227jv7dwqd7w5VaBntAaxMXC6c
fVNIrZnqM7anF2j/6ZV/UzaFGN/lcO8K6QUX7k25B92eQk/9xE54XfsNGvZb
5ufOTCL25TabwLu/QdFZgdX6gUl0z8U/7HHCb1DpqpnA1jaJrK0HOl81/wbx
P+4nLxRNIrmTaY7dh/tAW+dqrNWdSVRNEXh2hLsfBM2aziUzTCKVqIYqnf39
QPBU7XzPAh29JHmPGun2A+6jjqHq43QUudal6ODXD1bVZA5YNtOR6UB8XfJE
P+gj+P9ST6Ijeh734gb2B3TfMQrkP0RH5pKYAGvfH3BOju+PrSwdfU9zAXwr
f8CxwjP67UJ09CGmNVxOfgCYJyxMcrLQ0QPPSLGrzwaAaHJY4FYvDbGLBUkP
qA0C7YsaF0pCaajh2BPF+zqDgO+97VjyAxoKNks/LGQ8CL41uSQle9IQMaZM
74rjIJAx4KVRbWlofWvK7lfaIMAYA3hKNWloss8k9ztxCLQJnanjZKShvFXr
IucdQ8A/pZA9eGMC2fO5lpEFh0CmY/AN/sUJNHo6vOH0oSGgdFy74+HYBOor
r5qotxsCyV4BUW6NE+jbU2lZ7NsQGBX2hWkJEyj8g8qBaz14vB/pwiGPJ9DJ
No0jW2NDwLWupDE4bALVspjrH9seAruulw/W3ZtAlZ4xN8sODIPOmZrHOnYT
6G5smtvFE8MAKztq3GM1gdQK8nyWTw2DqrTTzx6aT6APY7VhKrbDINToB2WH
8QTKv7D2uihxGNiGv78kcGICObmSig1fDINg8V0DBkcm0L5ISvl04TBoO+ef
F6cygV5+kW+SaxwGfQ5fPS/vn0Dpytb03I1h4Koxr9QgMIGiuZv3ZVmOALnE
X6Jba1T06bBQyVnnERBg/lSaaZmKRi1cwKbvCCA5ZuQLzVPR0XzKhYtJI6BJ
Mdk2nE5FE/rm98itIyB3951M7T4q4nMrYKn4PQK4l8erBrupCDwlxNrTRsD4
wecvo39SUeJ49ssvTKNA0oiwKPydirQC/373OToKjrEuB3F8oSLnPHBZWn8U
sNefoStiVJT848lop+kocP6cbWv7mYpmRVTXFN1HQfxKz5fNUipKr7wvPp47
CjptdhmO5VNR40jb27iPo0CwM+Zu0BsqWmSXOKxROwq+xTKzKr+motOX6k+n
DoyC5zyYc2k2Fa0u7fAw3jUGlE8yBF9PpSIJIevtbYkxIHespMctmYrOan8I
yz8wBjj3ao+EP6WinFizdNYzY4Bpk6o3HE9FxopZ9VWBY+DsRe/notFUdN90
wcjpyRhoG9s3FRlJRa/v6fQJZIyB1aRlXaYIKiJ8o83eKR8DxvoLFpRQKsq3
V96zf24M0MOJd/IDqKj7cVB299YY4GL4luH0kIqYSrsUgjnHAalQQeuQPxVd
ZvbVGpIeBydPi+wbvkdFwXItLdGHxkGmsQxHnR8VvTsvYnZMaxxk9wSnFftS
EevzL05JFuPAXVeOnONDRQcbd65oO40DBQVySJ43FVnM2j2c9xkHXAlqk6Ve
VFRygjPxTMI4uODKW0jzoCLr3xcQ47dx0Bk//OeFOxWxpwzdcusZB+ULtV3j
blRUfNlZcGB8HNgSf2wr4mbsDfEpZ6CC2HKyaqcLFb19xicjs4MKjJUMpxRw
X7iU1ZUgSAUSjBL/PXamouzu8oNuh6nAIiPA5dotKjJ4qjf8R5sKek5P7fvu
hD+/i50xBsZUILN+oFILt86vv3+lb1HBi1qhUnVHKhr/KZr75zkVdMW8vXfl
JhVFJ+SbGhThPqZm8teeilRN1JnLP1NBSrRPaQDukM7z1gndVHBrocu31I6K
ZDqCBQ24JsD7weAC7RtU1BZLaf60dwIk9kUFTV+nIm/jTB9p2QkQnTKTl4y7
8cenLqL2BHALIxmt2VKRQ9tUzCefCUBUbqM321ARb4wPkA6ZAFfP7NsXhLvc
kDQdHz8BFI/seXIcN8d3kdOuhROgTVpd9701Xp8WY2bpsQlwgFHa9aUVXp+o
gffx8xOAsEuIyxb3poGTNZFAA9bu65ViuM98e4T699DA5jX2hlRLKppuKvOJ
P0cDDL1/16Ou4fcrXEeGaEEDhe/HH53EfeJUe5eLIw14k3mFiLgfN04ePB1M
A3v1BOfdLKhIqUF4mqGSBmKmbIfhVbz/Qt6kujTSwLVtNo9Zcyry11M73d9F
A1cOzIqn426rM8otm6MBKcR4deEKFbl9DbJ2kaYDDqab8gGXqUh4VJe0fJAO
Tm92HZTC3Uxky/ODdLBS49Ref4mK/oNRc2GX6OC+vksgI+6e8gT/7Ag6WM69
6HT5It7PPRcl9z+lg9qfQfQJU7xfVwUa3mXTweJh9St3cEcdSt+BPtPB0xFS
7UMTKtIoepneM0MHyUU/wu6cx+vRaq9puUkHF3Sw2xPGVJTyd9/4OOskqHut
9tEM99K+QvlFsUnAcN/5n7wRfj9zSiu5LkyCAmue3Ndnqci01scywXISRO5O
sd86g/fzyFEmwVuTIGIncfks7qui2GnZ4EkgcbP84MhpKuJJaejVKpsErd2h
Ll0nqajqU/j9ptpJ4G4Z840Ft2O3gbjRj0mQfbfGS0WPir7u/HHTgj4J1hU/
3HugQ0U+MT2r3oJTgOmyW1GvBhVJFaakbstMgY+1X8ZHIRV1tFyFwYemwEB2
3QoNUJE8x3BI3Nkp8HbHCffR41Q09Ii+q8B/CmxkvrB9dgTv/+y35SpRU2BU
l5fJRw1/X39xtqh4NgW4dxoKnD9MRQmEhZyG4ilgdzXEY1mFivR9N1RGRqdA
HdfhN6uK+PvDlfP8bv2/YDf1gfmQJBV9S6b45Jv+BSfO5oZrSuD3rXZPhqbt
X7Aof84hVYyK9gjITjo9+Au+aX7gVhemoqBqncDqkr+gnEGjdi8/Xk/eB+8d
xKfBmp9GqgsLFbkeC+7ZVpwGtz3sxk2ZqSj8RtR2/PFpkGX1F6oyUhEqTzmN
zKbBO/8pUv/WOJKxKRuhPJ4GyiHqK41L42j9/Rzl88Y0uKffybV3eBzx/Vk9
Ysw2A85/JQ4+GBhHCqwES+quGfDF5LlxX984sjHnesujPAMO7+Bn8fs1jr4x
7de+YT8DarcZhUy/jaN0E9s7O37OAHEXn31uH8ZRlq8jXeniLGgt0DZWvz+O
lDC21ZCrs+DdJEHj291xhDHlMg/YzAJtMleaqdc4GowaFY1ynQV6mxNJF1zH
kXDm1Yu0sFkgdQxzX7IaR8m1hrVZlbPATK0wv0lrHMWSVdJ5xedA7Z+Zsq8M
40jcuP3NTZk5kINOCl//N4beJbp+whTmgPr21sbm6hhqE8nvdD46Bx7HOEnv
mh1DXMpSHM0X5oAp51XH6f4xFG662zswZA4c3n26/3DZGArI2DRanJoDDU7/
nTlqN4bOKZW57V+YA8Eje1ZYrMeQcPXtJ9Zrc4DYbpjVYj6GyofpbW3M82D6
zbV/WsZjaP6/HsN84Xnw1/M1uf/YGLJ+W3Lmxrl5oKmdrPeFewxpfHLW734/
DxTr6H9uvx9FhI5BWHl3AYTLPjJnGRtBQbSqrLsPFwDG9Cgpvn8EsRHSiEdC
F0BAnKHbnq4RxCt/qbYkYQGcSiZyc9ePoP9CfugVFi0Aq0TrKy9yR9CpozVn
n48vgLqKU/G3HEZQ3IsX5qHGi0C49T+3NxPDSOrODe8L+5aAxotly6S2ISSv
PnA+Q2kJmPTLlJIahpAKwUyRrroE/pQmXHdFQ0gzUn/8gdYSsDWX+6lcMIQs
suUuvDFfAmd+u0zdiBhCiZ3zisTHS2C6BLU91B5CzIceUAsXlkC5SMTPpOJB
NLqUZMrxeRlYNkp9zf73B50ac7gX67YKZpHO3bXjPejsaMx+YeF1oPkzVENz
vh3Rv1j7N+RvgOCGIBWOI41I5Em3Q/SHDfAzgMe7i9CILlicNblQsQEYpTTz
0hoaUNXqkX2DDRvATexZiZhZA4qV5+lcGdkAHYd/ppC96tHRJCQtvWcT8NG3
6UMfvqJIB8Hvj4I3ARSS3nigUoOqD8d+Oh21CfylTOJ/blajZSbWbJ74TfC8
/Pp99a/VyDJjwTstaxMY1Nf5HjKtRiqdTeIllZvAD9OfJ/lgqP+4j+foPG6x
XfTaR5+RAk+XkNa1f8C1y/Hszf6PaDxqPCDh+j/glNP2IcbvI0pjX6FSHf8B
pgN27FyCHxEn0+7iSO9/oLLJd5ZiXoLoy5d0u578AyqlV7uiB9+jnL5+55u1
/8Bi3tceq39FyPzSdEdF0z9gUPr3IseLIsTXtaXG9eMf4Kt9QDqoX4QCvosw
vu//B3Y7s/3boVCILGuskjaX/wHvvZwTiu5vkWDuGHosuwUGb7VfXld+hTol
lyWHFbdAzKWwqd8xL1FEFilcRXULKL2abRaczUHrydIXejS3wLlv0k7dxdmo
O+rmhLj5FlCrfHl9U/85irv9l/tj9BaYde5NawpPQadm/3mwJmyBzEfCsad8
khHxFtfvyylbAOveKvZxfIZcbyjmbL/aApa1Nw9KX0lCZy+5HdGv3gJFWiEV
L2/GIVLXw/SUenw94yv/B16x6LNxLON0C+4jO2xjw54gOYP3LbG9W0D0Q5L6
FY/HiB0sWfUtbAF/YbvZkJxQ5K0hw/pxHY9/96xH93gwGte6UvCYYRv4mxzQ
9D34CNWcrF7X3LENMFVV7OHMQ6R0ejFTcNc2GDzdqHDmmj9KPyOttyyIz/fd
euP28R66axwV93rfNoALyvmBs15o4gJ2JPAA7pvRnnEHPZDpxYUBczV8/jTx
+eMYd6RsfkmOW3cbELIM/+5QcUSZFpHtNAPcaWfXvkTfQFxWyPvLeXy+wXp5
s6g1mrz+31dPK3zcxvnjat95dNnezPGcPW71nHdDhSdRg0MEzz4X3G2EUC+J
Q0j1VlUpoydupZWM/HE+kO0yd7XfDzd3mA970XHA6y7JVBqI29kienbvKeB/
52JeTDjunebGV5SNwbRn+DmHJ7j9DFvUf5kCc5/Py1pPcfelXstZvwzwNkwV
ysB9JkE5N9kCqN2X0FrJwfOtvtyW0WsJXvqb0tre4i6oGZGXtAZ8gWGP897j
/rJjY1nGBgQ8qjwUVI6vn/h2ZY1qA2ZDZn5frcb9rc9H2tIWWISLBxxuwH28
tcw1xhZ8izSR4fmOu1jItsnLFqg/Dm2l/8TtuzwovtMW5D6puFPbh9uyl93K
zgbsip/ekz6Ce2RPivMtaxCUKFbtRf9/PVT0VaWswPzTC3ZGc7htz4Uoil0D
likh5P2ruF1vs46ZXgGtaeXvmbb/n49qsMmkKRBuW5abIRIgQX11paLVCJgY
cRPMSbjPBX+Q5z4JIttlOxrYcGe6/6d1VRV8Oa/18hAZN6bCp2K1G613mvs8
58Zdmf1bIkcTHTD1NNjBh9vzpMerNiNk/+uxiB8/7k7VmO/EK6irp+ariTDu
Iq7KrDo7RL7S97RGDLeparOGxy2k3bfkqPgfAfof+vTOpdoNFf+R4WWTw8e/
6IcxWHoj2jXNMQ9F3ASZpe1VXyQ6dKVsWBk3Y0n40pcHKHok2qLyCL5e4LfE
8bVA9NU294DscdxSN3JK9gejzbFqpkRIgFguQ1WodyhymFjMc9HD19/f25tu
HYX0/l5eETchwEx/2idujXiUzhfY8cAMN+vBRxrVCWjx6JvCviv4/O30vZ6G
SSgzfMMu0ZoARc2LTWISk9HyOwnthesEOHjsSGGrYSo603Na9NxNfL9vU6YY
fzpal07tZnMlwCKr2SPq9Ex0zrD2w43bBDjLhBgaR7PQS8+pmC+e+H7Xo8I4
qc/R+a/H9O/dw8fHOCQ5GXPQW+v+T7Ph+HlsSolWKa8RMZw58Uw07qL4Nbau
PGT2Tt497wkBtlXvBoICbxEz4f4+26cEGMOZyjxYVoAs0oRTfuUQ4EkCN0+z
UjH6UKvrpfKaALltAkeE5ooR+5Tz+SdvCdAyU9iY5eN7VKqOOE6/J8CnHYwT
LWdKEHf3Nb8qDJ9/889vn49l6MZ2iNneWgJ0Td+o60z9hCqlilS86wmwO3wq
UTa0HN30IPw90IqPx7TKLd6qRDW8WVdzfhNgLunlROlRDO1WbzxCHMDdM1l6
/wuGnK3mdl4bxvcr/xC0dKYa7S3SaN1NI8DUmMlJsmMNunNm+ETkMr7/hQrl
F3W1qOkO+17aGgEeS3rv98L2KxJNVV7R+UeAkamch0OZ61ALPaBwm5EBYlES
XwXO1SOpUAnR2zwMUNSyOFOIrQl119gyXJZjgPazCY1arG1oVqN3zz1FBjh/
84/Mun0bYqk2VMlUZoDC7F5fxJrbkCpStxtXY4Cr+8div8f9QPEV3C3uOgzw
bd/WjjnVDmT4ofJphAUDlNS9211Z14VuHFQuLrBigGbyu3rbwC90v/hV8w9b
PB8NKimg/Bd6WxS7xe+I56MVfqH+Qzdiz7e3zfZigOaMrUxyn3tRXQ6f0ucY
Brg768XGJ5EB9EcyXH8wjgGes/rBPPl+AC292LZmTGKAixiz17zkIJJ8Tk/Q
T2OAqYoPB9I/D6KAdGzj52sG+DHSPXtsbQidSHKqn65hgOJcClmGGaPIdNfw
IE8dA1x+edXu1OooupVwcV2lkQFO6RfInsB/z6XGacr7fmeAUvGvvXay4b+f
H++OY+ljgLP5PH+zA/Dv/dBaC9ElBkjMmbxr9JKOck817w5ZZYAy+YKx53ZP
omTO9va/GwzwxnE1y/CISeQfM6BbQSRCldJd9997TOHf6+sKptxEuO77WYJ4
aRoNv1LajthPhB6cTwXNFObQz5uHP80rEGFTGVuOr9scath/4vYlZSI8+fpB
nG7JHMovPE2VOkKEwRU3ejpPzCPv0hvfq3WJ8GJncdbQpQXEVZ+asWJFhML5
BwplipYQQ9iLSxbXidAVY3He+reEFk/lUb7aE6F51gpLoMEy6mktDYl1IcJ/
T8eVkyeXUXZXu4v8PSI8fj+um015FamPs0Kbp0QoeODUSfnBdXSD2WOwtZUI
O7UyJc9aErA9Io2/Nn4Q4cZi5+vBaALWqib0XeYnEWq5MLtUfSZgqk5fPwf8
JsLFg60aVwQZMFLHzhTVCSJU+uJnsKufAcvJ/GiSzsAINyw3p5ydGLHRo6tN
t1QYoUmIQaFcNQmzcfct4UxmhA7Dllm7lbgwVeU/JbJpjHBT2FSLz5kLY5+H
H3UzGWHioZEvGm+5sCI3Uqn/S0b4gte8Q1F2B7bp+qRssZgRhkp187zg5cYS
XV5V9DUzwrhXlXdGeHmwRqeO6rf/GKHIo2R1dzEKpmi3v9XAiglGOxhzUq/y
Y39uirjk2zLBLlH5T60B/FikE4Wby54JEizX/xW94sdobhtG352ZoKeXpKr1
HD/2wq/5p5EfE5R87DF5LWg3xh/r2G+axATFg3dXc+YKYNuVb6YsW5ggRqwz
nB/YixWgjKjqNiY4Gll57gFREDOviVMQ72SCbQGKO+mSgtinel/XkV4m6Gv2
of3CTUHsdvvpxesTTFBXN0PeZlYQo1InNxwYmaHjPVfKvWUh7DuvHIfHEWa4
9u1OvPZvEezErVu0lGPMUJHYK5uzJIIV1BfU1wBmmPpe9swYiygW7XcgiFuX
GX7KVNQuEhPFDMZV/70xZoY/u0OY2s6LYk2fNGaGHZnhHX7DksfvRTF1vsAW
NhdmCBsiJNarRLE859o3Su7MULQ8xkezSRQLk9Czv++NxzfkEnYcFMVORhkM
CTxihl93SyVyc4hhXy0vdpxLx/c73qJofEkMU6l4+s4rixnyiEf637QWw7J3
9j5Oz2aG52efKps5imFBTeYGU3nM0LlpVrvcTwzTVLH+GlLKDMMz314IThPD
iqNfvCgoZ4YW/oUcZ3PEMHHa6MOfn5kh7ajPbvpbMYwh3e6ERC0zPMe/2ZRW
IYZhLLdKq9qYoYtV3R9alximZF2QMNbBDFUzSt1P9YthmZUztzl/McOl/rFo
vxEx7IGbu9Llfvz84CTlwowYNt38nuvhIDOcPl/1e3VRDLOQWpp6NcIMe46A
qVvrYtiJ316vl2jMcE4yOaOeSRwrOPQpRPAvMwz6Zpf5hk0cE4pZv641ywwX
LJhfW3CJY5va98SfLDPDB+NVeUr84phTRhWhbI0Z3n+wvMtwrzjWt7b9588m
M7TRU3I7KiKOVRQEpMgxkqCbQdmEn5Q4RjIw2ZNEIsH2SZ3nu/aJY0Y06WcM
7CTI/nDM4I68OJYavM7vRCbBCfbcZwlK4hhVoiWxi5sEmW1kj989KI4pV2fs
1OAjwXt6kTNiquLYPQv3+Df8JGhs6ekUqSaONWxoU3btJUFwpcP9k7o4RnnG
H+svTILqGQVY7jFxzEKVzj0pRoJ5EdN8l0+IY687Kh+b/EeCPje5lFuAOLbo
+pgLkyHBwqyJfgYNcQxwWUftkyPBslfFQyu4w9+ocCYokiDH0CpboaY49vMk
S8S2MgnGhydLSWuJY6LjPWwOqiQo7FHJbonbMfBtaOcR/Lw/w8Mv4f4o+oAF
HCdBy4ynfhTcDFVGwa8hCZIa9Cqi8HgGVySZ+bRJ0FuHItmA75e0uhx4X48E
NWfDk2qgODac0EiknSLBphuGa354vvIHUx+eP4vnN0NWWjkujnm3OROqjEiQ
z9zvvwP4eb/c0nggY0KCx9Mdvu7D68HFwbcVa0aC0Ql/tkcOi2OXcsf9/l0h
wfVnTxrND4lj2TqfNuyukWBb2bpAgrI4NjMccbfdmgQjZ/UnIxXFMXV/i7Vj
N0hQScFWXVtOHHskdMD71U0SZDUYIFXIiGN7zbo8/Fzxety+KEEVFcduLOUu
jt8mwbBW2YBUQXHsXazvbSMvvB4Lqv48u8UxvRZRN6n7JBj1dSVXHe+vWIeF
mZiHeH2auwkzrOJYP0ud80YQCa5gesY2jOLYbU1Hp7YIvP57LEwiV8SwqoHj
k+qPSXCverqBxpwYxnaP2yEnlgThjGbzR7oYllFaYnf3GQkmCfDsHu0Tw5rl
CDaSr0iw3h7dO1Mlhu1qah+KziPBK+9IOpwfxTAruxzLtXwS/Fh58mJUvhi2
knXKovUDCXYFPr/zK0UMk+BPuORdQ4KGTUWy8R5imPMHu+7hrySYaPcY3cLv
/ycj9YtnGklw0U5FmdNKDDOMHLgg3kaCvlwPDz07LYb5Muw7962fBFleNVhs
C4lh49oc3VJDJPhyz2KaFq8Ydi506trDURIM2ckvakwSwyR3FLqoTpKg/R6n
+u9/RbFvgiqPM1fx+sqkv79cLooJq51ovUNhgdTF88uip0SxUF8R0++7WOC1
k31D2kdFsfkqwh/ZPSwwQX+X3VE5Uaxe58vfP6IsUGLrWNRzsijmev4kWV+B
BU7pyN35mSqC1TgbGwjps8DWfRYvB2OEMbnig51eBizwzv2INB5nYSxxic+8
3ZAFDkY5qm+eEsYc/X45hpiywNPEN0xMTMIYX7h5xJwNCyz1OVjCdFsIu5Fz
o+nrfRbIzl/BzaQriLH33T3p/AEfbwshjDUKYKper8mPS1mg3JeBg19fCGBW
vN3theUs8EkF69HH9wSwspOHrs5hLLD5ms3+MSUB7EbJjNudFhYo9E/pcGni
bqw62jbl7jgLrGQwcR+5xo95a5ydDt7NCjOlRtKK5/iw7D6/96/2skJ2d9l/
u5v5sO9eb7wbhFnh0t3d30Kz+TCpAlZG9v9YYffNopWQi3xYx54v/FEHWCHH
lS+EvVUUTGHxsEbcKVZ4X+7mW/VoXmzspVh8hh8rzLPx/MkIuLGpoKE1Rn9W
6NbBKDjJz43NW2ddsw9khaMXrL0nh3ZgBBGx/QfCWaHOrZPvpnV3YHuSRGtq
klhhVMTUuCcfF3YuRGR2rJgVBro2C7tXcWCVdkIGcjR8/dHRxIrzLNgXnf53
MVOssP9YJU2UmwVrkkjjX5phhXqub+3GvpGwXwOCI5+XWeEzUYNLUXokbP6i
4F1DJjZ43FOG31qDGZM5uTfXXYQNPpkpPnpRjxGLlxFg+mTCBuc/3oaR6tvI
3ELq1YgZGwxTd7iv2LGFJOMPnuIyZ4N9+Yyz95y20IftMzE21mzwIOs3/71Z
/1BnV4AglwsbDPboajHi3USUR1MqNqFs0Hf5e7Ql3xrqLV/7FRXBBjubn0jF
lq6i57Mk37JoNjjdev3SzSurSNlcrJqcwAa7qKOvSTkryPig6ZmyLDZoFpIj
NwOWUewQuk6uYINyyanqDPEL6DJ/C6taFRuM3fbzPKuxgMTP9L6xrmaD7I3F
iWoz86i4bHGutJ4Nyric3TFkMI/aH8vet+5kgw4lSlJuO+YQz4m4xNK/bBA+
c1uZt/qLYpJv1FuJskNRq4C4Z9WjyMsz4LafBDv0/rkUZ6I1iiyM00WSpNjh
8E6BE3x1I0iOvcvrmxw77Hxe2BfXOowafXRkDh9hh0z112PvTA4i4iXJME5j
dqhy+UT21steRFOBh6RN2KH2f+UFXo09qI3bfEjDDHfaUlnD326U0RB3xMuC
HVZG74ihHv2Fjqkx0occ2OFo8mROw98O5ME/fKo0kB26Ms2d1jvdjMwX/i3/
CGaHmQr9EwkNjUj7u8CLqTB2qPZPa1RdvwHxhhhtiMXg88vCxN0vfEUFy9ib
yFR2OIg+Mq1LIDTxM4PTuoQdwpL4/RWuz9Hl+KutnFR2OPvulV3JuSog+J59
ryOdHe5mzJwyvY6BgR+ldo1/8fkmY5FiGdXAdgcvQ/AiO7RsjaWos9UC5/C6
g9sMHNDfyLdDpKwBBPgrPpsTxB31SGOrpg1oZ/SNGYpywM6dI9Em+j8AS1WY
coEEB8y0iCdqtf4AkRsjzQ77cL/bGzPZ0Q4SPZ9ujRzmgJwxx67XtHaC104M
tl3GHHBzQY6HFtQNnCIKilRMOaCgGrPf1FI3UMi78i/2EgeslA+Wene9BxRT
SxINLTnw71/PpFCNXlBp7dDYcIsDsqb2DX+k/wZtZh0KFaH4+jM63AeZB0Cs
l7+vQCQHPPn8AMcdmwFgkijf4PUYn/8u9VgaNgB6O0KsVBI5YFW7TEX30UEw
evZYfP4LDjh9IWhnzNQgWNXOWcuo4oBvdamHHhwaBn4VGYG11RywbtljsvXS
MCAoJ5NptRyQy2Rr7v29YcAi8lhMuZkD7tbyPqZROwx2rXnr1/7igLv8lPQf
GIyAg/kGzyZmOeA+WRWeY6dGwUcJPQnyIgfk7n6yDe1HgXqyRv6BFbwefr2/
qI9GgWaIavXdfxzw21KNnDA2Cs5ZidI42TnhpqAGk6bSGHDeuah2QIITqv2u
tmMhjIP5iOkaEyl83D5e5+HuceBBpBncleWEfCUvjHOVxoHfTL/lF0VO2MSv
k0+wHAcRjfWhJsc44fxtju9T5eMg915Kt48JJyQ6i1cBayqQW0ywTjfjhIvV
vJk9HlRQ5BAzVXOFE+rKpNbsC6OC0ouPCJzWnPC+i4T4UgEV1B1wkUl3xuMR
y3TVV6hgZEzTuyaEE5bJBrxh9J0Amhmtz/dFcMKz4iuaqRETINPscktsNCfk
5L/bQ0uZABbNbuI2CZwwMmVf0suKCdBblPmN8QUn/HNVNLVsZQIccZBbcXzJ
CSVtJq9xkGjgqUSZWOdrThgwMHluNx8NmCZ+98wu4oTqWtbKNoo00O67JapT
xQkdbpt8arGmgQOHwk/nV3PCbPnHP4guNBAzvdNz51dOmH4rY2z5Lg2ctZJv
HmvmhMK95heFY2mgSdfcI7gHr9/0u2N3P9OALGEiY7qPE37rd9pXWk8DoZ9u
N5kOcsL1nalJpT9oQFcuQkSayglVfTJEmMdooIanvLF+kRMqSJiXDbHSgViz
zqLiKh6vLjhan4cO/IN+CD/d4IR5RxsEfQTo4MTKxG17Ihn6Szk4HZClg7Si
O+ltzGS4a3xWvkKJDjZvEhrV2MiwLqP/FZcaHZT38QuzcZOhYMODYj5dOhBI
fHHSjUKG05myJxoM6MDbUPF2zy4yvBuYdkfvPB2o1ug2vBYiQ4X+jMa8a3RQ
/MrD/dR+MrTNu7bF40kHPFYMacUKZJjaPDCq6EsHrnui6vcok+HN7Z1SQv50
oBCVLTipRoYENP3QLowOonSV9M4fI8NYG3e/r1F0MLVd4VYByDD9keuTxSd0
kOfeURehi+/HYPS5/hkdsMldm1vQJ0Pa1H+FTml0YD9G32t+hgxL/7t3azST
DqTMiG5yF8iw0Z9l9cwrOnjEE50Sf5EMz3+2+m2cRwejTQJ1m5fJ0L7lttKh
fDp4fvzA3hYrMmRpeVjuVUwHNWfZAzdsyXA18GrKuw90MHxthC5rT4ZZ7HeD
6j7SAdGt0tjMEc8/36jpYxkdSAQklAc7k+GyniAWUE4H2nHO4iVuZIhNfS/d
V0kHttl64SN38PMFiBELP9NBUInoPI83GWraPZregeggu27tEvQlw9NcSs1n
MDqo/dVe7XyfDO+k7xqzr8bznXgjm/aQDInRMyFWNXTAtB70pDkIP+/xg1uH
v9CBJIfF2loIHi9W8MkUbm3Bw1YyEWR4KfJ16INafH957kbTaDJ8OZCyfw53
0Ama0qMnZHgo1AdpfKWDHMOap+/jyTDcIirUDXedZQphOIkM3+dRG/1xj7vd
sedOIUOXEouvLrhJgWfaTqSTYes8y+cTuKXipdRuZZGhLHPR+l88vm7OdkZK
NhnKtdQ23sN942M3S9MrMqw3jLwzjecXXP/OZTWPDLX+KWpD3C+7w39JFZBh
yJHP/rfx89XRbIDJOzKMHP7PLRQ///j6sVeBH8jwbBe88gCvD4lz147iUjJk
8moKNMPrJy004zlYTobBCtcV+Kro4KRCwx+uKjI0mn2WVozX3x5k6R6vJkOf
8m5elQo6yLU6vyu5Hq9vXPmOoVI6aHCXu9/QRIbXDb7ykfHnOxHIPL7cQoZC
5nl7hPDnL/OytOR8Jxk6D/3ipxfi8UtjhAJ+keGxmY7AV3j/2DfcfFTUS4Zv
PXh79d/QwWv6XhPyEH7f1sSlT7ykg6aNxcqjo2SoqFb3LOYFHdA5WyUdqGT4
ce4tvQHv132K/ot1f8mwN+q25FQy3u+3R+P818mw2eFpPmM0vj7o80bBPzL0
3hhrjQjH1yck2vQTuKC+enjhRjAd7C87eVCdhQsOvFuPjHtAB28337YvULjg
+49pCa9d6CD/kQePnTwXZJeutkk5jd+vY1cDHilxwaqkvu42/L7LLWovvDjI
BU/8JErNa+D7W/P9HDzCBc2fBXGsHcbrBd4/vazLBc0Y/sgJSeD9ujYrcvYa
F3wgKRg4tkQDo0XdMU7WXFAiyufj3xkakLDHGCKuc8E6jYG7ozQaeN71eKTe
kQt+Xmi6ld5PAxnvFV5peHPB4TqHnydraSD5lpPCoSdc0HAxVjE1mgZ6JS9k
nI/ngulfpG5nhdCAQN9RbvckLtg9xtqR5I+/r09xzBekccELZzzdzdxpIEE6
r0QmjwvqDV9lkjfB38dD1GOCX7igdshGuvZuGggxsTnNuMQFe5kXJoUTJsBz
wz7z66tcUP320v0f+P+PSn0T5/oNLvim6VCMV8AEmD+u9ySCuAPq7t+uSneZ
AOZS+39RuHfAPYlR1lf1J4Dyyry15P4d8Jxi4sPP61Tw52nAXR2rHVDcKIq4
bUIFh/qyXoe07IAzQ+u895fGwFPZlPyW09xw1POlvob6CHiART09/YkbSvKO
PZjWHARn9prkNEnywISbwsnmm71Aw7n+Ck8YD8xZjje6L9IFMgStJb8t8UCV
NuzSFM8PIPnlVeLZK7yQYu3NVz/ZAGLka/a1V/FC3bd5wdQjGMhVu8IWgPFC
+TPhM293YgBpLVIP1PDCKA4FO9YRBKYvSeU8+coLg1Td6O3GCJwODhcx+sYL
xzROdcirVAHSgDFfWw8vfJoU9cZvqwL4xoz8a1nkhY25LIJ/S0pBbIpf371l
XmhWzSwrdLsU5L3cWSG/ygtNrelHHimVgu5KPe+oDV742Zf1EOHtR6BKezNv
QKTA+5k+/CU5JWBW4w61eQcFXtwvUf0x+z24scD0o3EfBXZMdGnceFsILPK0
W83lKJB/jtvCDBQCU6ug5hl5Cjxu8MKxs70A6H5nrNt5gALfPlI76rKRD6Te
ECusDlPg0xmhQqPzb8GYNSFnTYsCC5hP1XULvwZ9AvB5pA4FhgqoRW6U54LO
tgcZInoUqMwwmF9xMRfUnth+pnOKAg++de/eHfcKZO/Zin5yjgLTOdR87Xle
Atv2DW/ZqxToxh+1ZS//ApiHHfWstKDA7J8ndec6noML0Pe2oSUFektbLsv6
PgfaBeu3PGwo0OyFwPF3zVlAMnzNuvomBfK06zCreWSCEY0Vg0ueFDjVcuyb
flcK6F1VPTXlRYEtOtizu+opoL3QU++BDwVy7JAOUcpMBjVCyxo5fhTYmSEe
puL6DDxfW1SdC6BAEsfAxi/xJGD9bl407DEFjgz+HLzWGQucAs5vnnqCj++5
tb9FMxZ4nP/wizOOAkVC9dpPvn8CQpc8omMSKXD48v0cj+QYUHBkbSMpjQLl
OwQy+hijQBn75V+XMigw4rPdHwViJKj+XV68N4sCWXU4veuZIkDnPb+bGdkU
mHT5462BXWFgrXq76+UbPF7pc7jP5REgxlkW2+dT4NdKBQflmCDAaVsdta+Q
ArkyFLpySgKBMClQu6CYAg+QWBMHyQFA+xSpuOQTBU4PWRkenbgHzu61i/Kq
oEC76ya5M25+4OJUvf2RzxSobxEkUMnkCxyiw0Q+YxS4vbJBrNTxBjHtnFG1
9RTIrbF/r6jqbZD84pZ9cCMFgvt73luwuYMXd1q1Tjbj9eOxspgacwUfd8Ws
N7dSIOU5O0HI8xbAqLM/o9oocOt7kdFVO0fQWGb0zrCdAt8libM7ON4EfZcp
9h0/KTBOJ6SV++11ML7/jlbCL3y9D3GiasIGzGx2Cl/swZ9/06NAKzVrQMxI
/NnbR4G6TG4JF8QsAIfrSlHqHwpki5mVRMpXAJ+GWaTFIAUKzggzn3cwA9Ij
AlrDIxT4SmfFTNHgPFD6cFc4e4wC5/llBOOXzwH1R7/XrlMp8FJNXHpJ9Bmg
ZXrspzSNAsNi//SK3NMHBtJpRTQ6Be76PJHvUaYDTFf/RbyZosA9suNmtVAT
XGu0sLs1TYGLo6xHleVOAPtkpKk4S4FrlK27RDc14O4oKjw3R4HuDbZLlHMH
gd+xh2vFC/h5Sl6aE+PkwSPycOedJQpkZA0Jqin/D0T/0SxSXaHAqijSl1EF
YfC08EXE6ioFnmK4aAiMKeC5P5Nd+TreD79Wb2ggZvDG6Lqm3ybej2cEXIXM
F058EK8TOrFFgUaG11MIwR0nqhak1ra3KZBAaNgTZKh8/H8VBiDK
              "]]}, Annotation[#, "Charting`Private`Tag$72889#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\[Theta] Gain\"", TraditionalForm], 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Linearized Gains\"", "\"Gains from backward integration\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, Annotation[#, "Charting`Private`Tag$73752#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
+g==
              "]]}, Annotation[#, "Charting`Private`Tag$73752#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"\[Theta]dot Gain\"", TraditionalForm], 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Linearized Gains\"", "\"Gains from backward integration\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.867343615362741*^9, 3.867343640279742*^9}},
 CellLabel->
  "Out[379]=",ExpressionUUID->"04b25f57-a97b-4cd8-9a8e-d0a7811df8ee"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
Magnification:>0.9 Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6041006e-2e5f-46d2-96e9-d7372e2c6927"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 845, 13, 48, "Subsection",ExpressionUUID->"a483e4f2-5e1f-420a-be37-4977d4659bc0"],
Cell[1428, 37, 298, 7, 43, "Input",ExpressionUUID->"544f5a79-f357-412e-a327-d0b03cb0e99c"],
Cell[CellGroupData[{
Cell[1751, 48, 470, 12, 25, "Input",ExpressionUUID->"66e720fb-3235-46aa-8734-1d94c2c0ddeb"],
Cell[2224, 62, 2985, 64, 150, "Output",ExpressionUUID->"a9873fb1-121a-4ffc-ae48-d4dc2f1d3d3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5246, 131, 472, 12, 25, "Input",ExpressionUUID->"a8268c46-1d61-4d33-b79b-e951b5e06c1e"],
Cell[5721, 145, 986, 29, 150, "Output",ExpressionUUID->"fc21fb9b-157f-4226-8d28-704efd4c8023"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6744, 179, 392, 9, 26, "Input",ExpressionUUID->"0ec750ec-45be-4566-afb9-fd81f9b3c91a"],
Cell[7139, 190, 6878, 143, 142, "Output",ExpressionUUID->"6cdc8821-bcde-41db-9e16-4406da3e1ddd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14054, 338, 466, 13, 43, "Input",ExpressionUUID->"919edb66-acca-487d-8a22-a289ccec74e9"],
Cell[14523, 353, 1571, 41, 138, "Output",ExpressionUUID->"7bd011a2-c7e4-41ba-8d86-efbf2bc13bac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16131, 399, 1153, 33, 77, "Input",ExpressionUUID->"1e6b9c29-01cb-4bc1-9fbd-c6956be848b1"],
Cell[17287, 434, 794, 17, 28, "Output",ExpressionUUID->"3b53e33a-f751-4996-84f1-25bb1b576240"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18118, 456, 361, 8, 26, "Input",ExpressionUUID->"93c09c36-dcf5-4d23-9260-2bf6c64be14e"],
Cell[18482, 466, 13195, 266, 61, "Output",ExpressionUUID->"eef6edab-a4a6-48ca-aca5-8ce6f12e55ff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31726, 738, 197, 3, 48, "Subsection",ExpressionUUID->"496b2a6d-cbed-4778-b7d6-6e26e43a4e4f"],
Cell[31926, 743, 219222, 5355, 5586, "Code",ExpressionUUID->"c292ff9e-5d7a-46a9-b47c-eaf783ebd2d4"],
Cell[251151, 6100, 6115, 149, 422, "Input",ExpressionUUID->"7f2c2e0f-d6cb-4525-b282-4d032a356b51"],
Cell[257269, 6251, 3329, 81, 301, "Input",ExpressionUUID->"5478669e-f7ce-4041-b9f3-31e572b34ddf"],
Cell[CellGroupData[{
Cell[260623, 6336, 604, 12, 26, "Input",ExpressionUUID->"706e2679-8d91-409a-a123-5d4182e03072"],
Cell[261230, 6350, 495, 15, 48, "Output",ExpressionUUID->"3cb7b508-73a8-41db-aeec-70d95aeba627"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[261774, 6371, 232, 5, 48, "Subsection",ExpressionUUID->"e83f5813-6713-4664-ba0a-d959dcc976de"],
Cell[CellGroupData[{
Cell[262031, 6380, 8947, 278, 249, "Input",ExpressionUUID->"c23b719b-02b4-4282-8a87-d0d9b0bf1a3b"],
Cell[CellGroupData[{
Cell[271003, 6662, 671, 13, 21, "Print",ExpressionUUID->"552610b0-295f-45bc-bb59-02f38b7b8428"],
Cell[271677, 6677, 704, 13, 21, "Print",ExpressionUUID->"ff6b1d6a-3674-4aea-ae7a-2c8aab44c989"]
}, Open  ]],
Cell[272396, 6693, 488, 11, 26, "Message",ExpressionUUID->"973092a3-d936-4f87-b191-c29bf0baf28c"],
Cell[272887, 6706, 767, 15, 26, "Message",ExpressionUUID->"2589cdf0-2819-42ff-b8cb-398d65ec6891"],
Cell[273657, 6723, 201276, 3573, 186, "Output",ExpressionUUID->"5bc36ae3-41aa-430d-859e-d84ff13f0d7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474970, 10301, 9815, 283, 301, "Input",ExpressionUUID->"6a40f937-40a8-421c-802f-0d353f74d96b"],
Cell[CellGroupData[{
Cell[484810, 10588, 522, 11, 21, "Print",ExpressionUUID->"5e7a8198-0cee-4e5e-b33b-f6a2e62287b5"],
Cell[485335, 10601, 550, 11, 21, "Print",ExpressionUUID->"461aef15-b822-4e44-b36c-eeeb9735fb37"]
}, Open  ]],
Cell[485900, 10615, 228312, 4037, 187, "Output",ExpressionUUID->"6cca58d4-0341-49d1-95b3-04ee4c92cec1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[714249, 14657, 931, 27, 26, "Input",ExpressionUUID->"940c3c89-6645-46fa-8b5e-f69c66cd0e99"],
Cell[715183, 14686, 24697, 487, 211, "Output",ExpressionUUID->"d7795956-24e3-445b-8805-ce03b92f0544"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739917, 15178, 1003, 28, 26, "Input",ExpressionUUID->"30edd6bf-2414-489a-ac0a-8fbd3ab21465"],
Cell[740923, 15208, 73026, 1272, 214, "Output",ExpressionUUID->"255c21bf-0f2c-47ab-a4cc-2a4e90159bf1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[813986, 16485, 3529, 102, 95, "Input",ExpressionUUID->"1d57e522-6fbd-4bac-b58f-f0fc460acbff"],
Cell[817518, 16589, 133966, 2426, 482, "Output",ExpressionUUID->"04b25f57-a97b-4cd8-9a8e-d0a7811df8ee"]
}, Open  ]]
}, Open  ]]
}
]
*)

