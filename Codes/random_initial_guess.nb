(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    764202,      14588]
NotebookOptionsPosition[    761726,      14547]
NotebookOutlinePosition[    762160,      14564]
CellTagsIndexPosition[    762117,      14561]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"ICs", " ", "-", " ", 
    RowBox[{"Initial", " ", "Conditions"}]}], " ", "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Error", " ", "while", " ", "cosntraining", " ", "u"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ffCartPendulum", "[", 
    RowBox[{
    "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
     "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "dist", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3",
        ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
       ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
       "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",",
        "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
       ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
       "i", ",", 
       RowBox[{"xGuess", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["xGuess", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "=", 
       RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{
         "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
          "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
          "\[Lambda]4_"}], "}"}], "]"}], ":=", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{"xdot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
               ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
              ")"}]}], "+", 
            RowBox[{"A", " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "\[Theta]dot", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"A", " ", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                 ")"}]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
         "\t", "0", ",", "\n", "\t", 
         RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
            RowBox[{
             SuperscriptBox["A", "3"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             SuperscriptBox["A", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
              ")"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", "A", "+", 
               RowBox[{"A", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
               RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
               "\[Lambda]4", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "A", " ", 
                   SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                  SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["A", "2"], " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{"A", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "A", " ", 
                SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
               RowBox[{"2", " ", "\[Lambda]4"}], "+", 
               RowBox[{
                SuperscriptBox["\[Lambda]4", "2"], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"2", " ", "A", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"A", " ", 
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                  "-", "\[Lambda]4"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
               RowBox[{"A", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Lambda]2", "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                 ")"}], " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
               RowBox[{"A", " ", "\[Lambda]4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"4", " ", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}],
              ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"A", " ", "\[Theta]dot", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Lambda]2", "-", 
               RowBox[{"\[Lambda]4", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
          "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["xGuess",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       StyleBox["=",
        FontWeight->"Plain"], 
       StyleBox[" ",
        FontWeight->"Plain"], 
       RowBox[{
        StyleBox["Table",
         FontWeight->"Plain"], 
        StyleBox["[",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["If",
           FontWeight->"Plain"], 
          StyleBox["[",
           FontWeight->"Plain"], 
          RowBox[{
           StyleBox[
            RowBox[{"i", " ", "!=", " ", 
             RowBox[{"-", "1"}]}],
            FontWeight->"Plain"], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            StyleBox[
             SubscriptBox["xGuess", 
              RowBox[{"i", "+", "1"}]],
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            StyleBox["=",
             FontWeight->"Plain"], 
            StyleBox[" ",
             FontWeight->"Plain"], 
            RowBox[{
             SubscriptBox[
              StyleBox["xGuess",
               FontWeight->"Plain"], "i"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["+",
              FontWeight->"Plain"], 
             StyleBox[
              RowBox[{"\[CapitalDelta]t", "*", 
               RowBox[{"f", "[", 
                SubscriptBox["xGuess", "i"], "]"}]}],
              FontWeight->"Plain"]}]}], 
           StyleBox[",",
            FontWeight->"Plain"], 
           RowBox[{
            SubscriptBox[
             StyleBox["xGuess",
              FontWeight->"Plain"], "0"], " ", "=", " ", 
            RowBox[{"{", 
             StyleBox[
              RowBox[{
               RowBox[{"ICs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"ICs", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"InitGuess", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}],
              FontWeight->"Plain"], 
             StyleBox["}",
              FontWeight->"Plain"]}]}]}], 
          StyleBox["]",
           FontWeight->"Plain"]}], 
         StyleBox[",",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"n", "-", "1"}]}], "}"}],
          FontWeight->"Plain"]}], 
        StyleBox["]",
         FontWeight->"Plain"]}]}], 
      StyleBox[";",
       FontWeight->"Plain"], "\[IndentingNewLine]", 
      RowBox[{"bcs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
          RowBox[{"Subscript", "[", 
           RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
        "}"}]}], ";", "\n", 
      RowBox[{"eqns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"bcs", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                  "\n", 
                  RowBox[{"f", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                   "]"}]}], ")"}]}], "+", "\n", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"x", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"xdot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]dot", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]1", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]2", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]3", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Lambda]4", ",", " ", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"sv", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
               RowBox[{
                RowBox[{"xGuess", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"froot", "=", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"xdotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]ff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Theta]dotff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"uff0", "=", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                  "2"}]}]}], ")"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
                RowBox[{"Cos", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
          "froot"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
        "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
        "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testSwingUp", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "uff0_", ",", "A_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "x", ",", "xdot", ",", "\[Theta]", ",", 
       "\[Theta]dot", ",", "xs", ",", "xdots", ",", "\[Theta]s", ",", 
       "\[Theta]dots", ",", "t", ",", "J"}], "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"uff0", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"uff0", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"uff0", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "uff0",
         ",", "J"}], "}"}]}]}], "]"}]}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"CalculateSMatrix", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "\[Tau]_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "S", ",", "soltn", ",", "Af", 
      ",", "Bf", ",", "Q", ",", "fx", ",", "xState", ",", "R", ",", "Mf", ",",
       "x2dot", ",", "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], 
     "}"}], ",", "\n", "\n", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\n", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\n", 
     RowBox[{"L", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", 
       RowBox[{"u", "^", "2"}]}]}], ";", "\n", 
     RowBox[{"Af", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{"fx", ",", "xState"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"For", " ", "nD", " ", "stuff", " ", "use", " ", "Grad"}], 
      "*)"}], "\n", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\n", 
     RowBox[{"Q", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"Grad", "[", 
         RowBox[{"L", ",", "xState"}], "]"}], ",", "xState"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Fix", " ", "this"}], " ", "*)"}], "\n", 
     RowBox[{"Mf", " ", "=", " ", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "u"}], "]"}], ",", "xState"}], "]"}]}], ";", "\n", 
     RowBox[{"R", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S0", " ", "=", " ", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"},
          {"0", "0", "0", "0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}], ";", "\n", 
     RowBox[{
      RowBox[{"RHS", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "4", "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"Af", "\[Transpose]"}], ".", 
          RowBox[{"S", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "Af"}], " ", "-", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"S", "[", "t", "]"}], ".", "Bf"}], ",", 
           RowBox[{
            RowBox[{"Bf", "\[Transpose]"}], ".", 
            RowBox[{"S", "[", "t", "]"}]}]}], "]"}]}], ")"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", 
           RowBox[{"\[Tau]", " ", "-", " ", "t"}], "]"}]}]}], "}"}]}]}], ";", 
     "\n", 
     RowBox[{"sol2", " ", "=", " ", 
      RowBox[{"S", " ", "/.", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"S", "'"}], "[", "t", "]"}], "==", " ", 
            RowBox[{"RHS", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"S", "[", "0", "]"}], "==", "S0"}]}], "}"}], ",", "S", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], " ", "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\n", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateGains", "[", 
   RowBox[{
   "x1a_", ",", "xdot1a_", ",", "\[Theta]1a_", ",", "\[Theta]dot1a_", ",", 
    "u1a_", ",", "time_", ",", "A_", ",", "\[Tau]_", ",", "S_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "L", ",", "RHS", ",", "xdot", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "u", ",", "K", ",", "Af", ",", "Bf", ",", "Q", ",", 
      "fx", ",", "xState", ",", "R", ",", "Mf", ",", "x2dot", ",", 
      "\[Theta]2dot", ",", "S0", ",", "sol2", ",", "t"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xState", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2dot", " ", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"u", "+", 
         RowBox[{"A", " ", 
          RowBox[{"\[Theta]dot", "^", "2"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2dot", "=", " ", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"A", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"u", "+", 
            RowBox[{"A", " ", 
             RowBox[{"\[Theta]dot", "^", "2"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fx", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "xdot", ",", "x2dot", ",", "\[Theta]dot", ",", "\[Theta]2dot"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Bf", " ", "=", " ", 
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "u"}], "]"}]}], " ", ";", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "1", "D", " ", "stuff", " ", "use", " ", "D"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"K", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Bf", "\[Transpose]"}], ".", 
         RowBox[{"S", "[", 
          RowBox[{"\[Tau]", " ", "-", " ", "time"}], "]"}]}], ")"}], "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "->", " ", 
          RowBox[{"x1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"xdot", " ", "->", " ", 
          RowBox[{"xdot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]", " ", "->", 
          RowBox[{"\[Theta]1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"\[Theta]dot", " ", "->", " ", 
          RowBox[{"\[Theta]dot1a", "[", "time", "]"}]}], ",", " ", 
         RowBox[{"u", " ", "->", " ", 
          RowBox[{"u1a", "[", "time", "]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "K"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testWithFB", "[", 
    RowBox[{
    "ICs_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "xff0_", ",", "xdotff0_", 
     ",", "\[Theta]ff0_", ",", "\[Theta]dotff0_", ",", "uff0_", ",", "A_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq", ",", "init", ",", "\[Theta]", ",", "\[Theta]dot", ",", 
       "\[Theta]ff", ",", "\[Theta]dotff", ",", "x", ",", "xdot", ",", "xff", 
       ",", "xdotff", ",", "uff", ",", "t", ",", "\[Kappa]1", ",", 
       "\[Kappa]2", ",", "\[Kappa]3", ",", "\[Kappa]4", ",", "ufb", ",", "u", 
       ",", "\[Theta]s", ",", "\[Theta]dots", ",", "xs", ",", "xdots", ",", 
       "us", ",", "J", ",", "S", ",", "K"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]1", "=", 
       RowBox[{"\[Kappa]2", "=", "3"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"lqr", " ", "for", " ", "q"}], "=", 
        RowBox[{"r", " ", "for", " ", "balancing", " ", "pendulum"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]3", " ", "=", " ", 
       RowBox[{"-", "0.1"}]}], ";", 
      RowBox[{"\[Kappa]4", " ", "=", " ", 
       RowBox[{"-", "0.65"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xdotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "\[Pi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"uff", "[", "t_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"uff0", "[", "t", "]"}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"S", " ", "=", " ", 
       RowBox[{"CalculateSMatrix", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "\[Tau]", ",", "A"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"CalculateGains", "[", 
        RowBox[{
        "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
         "uff", ",", "t", ",", "A", ",", "\[Tau]", ",", "S"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ufb", "[", "t_", "]"}], " ", ":=", " ", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"K", "[", "t", "]"}], ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"xff", "[", "t", "]"}], "-", 
                RowBox[{"x", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"xdotff", "[", "t", "]"}], "-", 
                RowBox[{"xdot", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
               RowBox[{
                RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]dot", "[", "t", "]"}]}]}], "}"}]}], ",", 
            RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"\[Kappa]1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]3", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xff", "[", "t", "]"}], "-", 
             RowBox[{"x", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"\[Kappa]4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xdotff", "[", "t", "]"}], "-", 
             RowBox[{"xdot", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"u", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"ufb", "[", "t", "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"eq", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"xdot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"xdot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], "+", 
             RowBox[{"A", " ", 
              RowBox[{
               RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "==", 
          RowBox[{"\[Theta]dot", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]dot", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"A", " ", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "^", "2"}]}]}], 
             ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"u", "[", "t", "]"}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]dot", "[", "t", "]"}], "^", "2"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{"init", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"xdot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Theta]dot", "[", "0", "]"}], "==", 
          RowBox[{"ICs", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", "\n", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots"}], 
        "}"}], "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eq", ",", "init"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xdot", ",", "\[Theta]", ",", "\[Theta]dot"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<DiscontinuityProcessing\>\"", "->", "None"}], 
           "}"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"us", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"uff", "[", "t", "]"}], "+", 
        RowBox[{"Piecewise", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", "t", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"xff", "[", "t", "]"}], "-", 
                 RowBox[{"xs", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"xdotff", "[", "t", "]"}], "-", 
                 RowBox[{"xdots", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]s", "[", "t", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]dots", "[", "t", "]"}]}]}], "}"}]}], ",", 
             RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"\[Kappa]1", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]ff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]s", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]dotff", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]dots", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]3", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xff", "[", "t", "]"}], "-", 
              RowBox[{"xs", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"\[Kappa]4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xdotff", "[", "t", "]"}], "-", 
              RowBox[{"xdots", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"J", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"us", "[", "t", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"{", 
       RowBox[{
       "xs", ",", "xdots", ",", "\[Theta]s", ",", "\[Theta]dots", ",", "us", 
        ",", "J"}], "}"}]}]}], "]"}]}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.862753343189165*^9, 3.862753411389415*^9}, {
   3.8627553611496043`*^9, 3.8627553647834463`*^9}, {3.862755542386807*^9, 
   3.862755582254092*^9}, {3.862756179429644*^9, 3.8627562078485813`*^9}, 
   3.8627563320549693`*^9, {3.8627564690202875`*^9, 3.8627565488258357`*^9}, {
   3.8627568793814173`*^9, 3.8627568873778677`*^9}, 3.8627585165043135`*^9, {
   3.8627585965107956`*^9, 3.862758689290209*^9}, {3.862758834699833*^9, 
   3.8627588555911727`*^9}, {3.8627590963373947`*^9, 
   3.8627590998392787`*^9}, {3.8627594410134716`*^9, 
   3.8627594626865597`*^9}, {3.862759635094576*^9, 3.8627596377257366`*^9}, {
   3.862759669455618*^9, 3.8627597448635693`*^9}, 3.862759795914287*^9, {
   3.8627603319473376`*^9, 3.862760490473783*^9}, {3.8627605307139487`*^9, 
   3.862760536806006*^9}, {3.8627610047197795`*^9, 3.8627610478400292`*^9}, {
   3.8627611285982723`*^9, 3.862761147921111*^9}, {3.8631982964294224`*^9, 
   3.8631982970332265`*^9}, 3.8631983363504767`*^9, {3.863208693665881*^9, 
   3.8632086943846474`*^9}, 3.863210007245922*^9, 3.863271804426487*^9, {
   3.8632718412836447`*^9, 3.8632718583741503`*^9}, {3.8632719591337743`*^9, 
   3.863271959351703*^9}, {3.863272049174841*^9, 3.863272070205083*^9}, {
   3.863272113471178*^9, 3.863272123024109*^9}, 3.8632747752128673`*^9, {
   3.863274857845314*^9, 3.863274901443305*^9}, 3.863274985905165*^9, {
   3.86327502591031*^9, 3.8632751590365314`*^9}, {3.8632751952308993`*^9, 
   3.863275233662552*^9}, {3.8632753992893295`*^9, 3.863275415841012*^9}, 
   3.8632757933676972`*^9, 3.863276112914017*^9, {3.8632763683199444`*^9, 
   3.8632763983313017`*^9}, {3.8632764721665745`*^9, 3.863276525061578*^9}, {
   3.863278235705888*^9, 3.8632782777863655`*^9}, {3.863278324944213*^9, 
   3.8632783286160316`*^9}, {3.863552728717914*^9, 3.8635527298355513`*^9}, {
   3.863613419658352*^9, 3.863613423534114*^9}, {3.8636150904008484`*^9, 
   3.86361513154671*^9}, {3.8636152078133564`*^9, 3.8636152525520706`*^9}, {
   3.8636152893383236`*^9, 3.863615479516596*^9}, 3.8636157247782784`*^9, {
   3.863615879717803*^9, 3.8636159617646036`*^9}, {3.8636160220243616`*^9, 
   3.8636160299278383`*^9}, {3.863616069486206*^9, 3.86361607601912*^9}, {
   3.863699007217822*^9, 3.8636991515617003`*^9}, {3.8636996033223495`*^9, 
   3.8636996129842625`*^9}, {3.8636997844214835`*^9, 3.863699805489752*^9}, {
   3.863699907217247*^9, 3.863699944316393*^9}, {3.863700788168758*^9, 
   3.8637008845809517`*^9}, {3.863702046275758*^9, 3.8637020830100203`*^9}, {
   3.863702595245346*^9, 3.863702645292355*^9}, {3.863884194660141*^9, 
   3.8638842031804175`*^9}, {3.8638909914788537`*^9, 3.863891009810995*^9}, {
   3.863891113237941*^9, 3.8638911537729845`*^9}, {3.863891279619763*^9, 
   3.8638912855948534`*^9}, {3.863891344230113*^9, 3.863891351574766*^9}, {
   3.8638925953132634`*^9, 3.8638925989880886`*^9}, 3.8641412354391413`*^9, {
   3.864141550931038*^9, 3.8641416655529428`*^9}, {3.8642361939817247`*^9, 
   3.864236202546955*^9}, {3.864236595072028*^9, 3.8642366322340117`*^9}, 
   3.864236674617306*^9, {3.8643997929515553`*^9, 3.864399794341104*^9}, 
   3.8647401548354416`*^9, {3.864740367280447*^9, 3.864740382577551*^9}, {
   3.8647404140084915`*^9, 3.8647404181541643`*^9}, {3.864740488606616*^9, 
   3.864740495693348*^9}, {3.8647405289317093`*^9, 3.864740542820265*^9}, {
   3.864741074561078*^9, 3.864741079667444*^9}, {3.864741140307036*^9, 
   3.864741143520008*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[341]:=",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],

Cell["\<\
Check the performance of the new initial guess mechanism for the case where n \
= 40 and greater was required.
We see that n = 6 is only required here which is excellent!\
\>", "Text",
 CellChangeTimes->{{3.863702780704089*^9, 3.8637028585982*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "6"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "2.5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "100"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.048555026816794494`"}], ",", 
      RowBox[{"-", "1.560065966757075`"}], ",", "0.7613152376955525`", ",", 
      "1.9382391342292873`"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}]}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{"p1b", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
       RowBox[{"u1a", "[", "t", "]"}], ",", 
       RowBox[{"x1b", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
       RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", 
      RowBox[{"{", 
       RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
        "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "->", "400"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], "]"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<LQR feedback solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], "\[IndentingNewLine]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863699832878002*^9, 3.8636998879424076`*^9}, {
   3.8636999587037973`*^9, 3.863699966845196*^9}, {3.86370068689312*^9, 
   3.863700742439372*^9}, {3.863700775571786*^9, 3.8637007771342835`*^9}, 
   3.863700945211579*^9, {3.863700998427576*^9, 3.8637010107976217`*^9}, {
   3.8637016473912125`*^9, 3.863701669091281*^9}, 3.863702035899074*^9, {
   3.863702126179226*^9, 3.863702160529252*^9}, 3.86370251869481*^9, {
   3.8637025705572357`*^9, 3.8637025888983755`*^9}, {3.8637026681560507`*^9, 
   3.8637026692896886`*^9}, {3.8637027081322765`*^9, 3.863702762285972*^9}, 
   3.8637029838601737`*^9, 3.8637033230088053`*^9, {3.863884225388322*^9, 
   3.8638842448491*^9}, {3.8638842916161537`*^9, 3.863884295082047*^9}, {
   3.863891061309538*^9, 3.863891063069975*^9}, {3.863891163269951*^9, 
   3.863891163428899*^9}, {3.8638912925906177`*^9, 3.8638912940581484`*^9}, {
   3.8638913677266035`*^9, 3.8638913686183195`*^9}, {3.8638926039804945`*^9, 
   3.8638926063767295`*^9}},
 CellLabel->
  "In[954]:=",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
UCpw+veyuQTNQJGnrq+1DRVCFaovmATMQvbOdOFT9GHIOCAYzuc7B5cP8ehs
vzoMMe5R7ukP6SB8sbOJnDUEST1XF28HM+CyXVA+f+cg4X+tf3726ZWEb4Dz
Ug/9D+O790f8Ky/F+ee2uR88/vdpgPNP20PP1sVvwtr/5Z+xLyvm+VJGAeef
Z441FHhpjYKjUuse47lJOCLkECYiOALTwajmd+YU7Ja5YZzSSYWMtnCTabYZ
MDSp8C54SgXJ+1xx7tyzcOnQDf+zqlTC7yq0e1Y6Fk2Hf+Off+WT/8QTaYlz
PwP20Ag/qQQLz+l8ht/f+BzOx2b1E6w1gy/9I89SHs3dW8BcIPyNv6XDKvqt
xwh/o4ZojmVXDZZP/+VRRgE7bUuP0ADnUWaNInIn5kYB51HVgwqXG5xHAedR
dWs+2nnzjgLOo17cJzO7fo1AadOF0hjHSeASYbtQh+WXY03ouTM3p4BFpnXt
Jkw/GIsstMddnwaOd6nGE9+o0GedU+5xbwZKpHeb9NhSoTT/5OZrd2ah8LaS
vCZzGE7vo/xq9JqDibjFdaUuwxBeWtpTeJ8OaYvqj0e+DsGqmMFOrQAGjI6a
XVrRO0j4NZcxhN8OdHwDnF9xanG8LaBG/iu/wnnU24b4tMcPaIDzqMjIo51U
CRrgPGoyp0dTJm0UcB71bbmPBMfuUdBZjFeQmJqEub7yFAqWXxuSh80aZ6cg
5VeBxpsuKuyz56FlLkxDoktLy6ZIKpDsO5xvc8zCRbP7Znw7qYQ/k3X9zWM9
8hnwbzzqr7zon/hO+QnXZKoOjfA/SqoKnlI76v83XoLzCvW+EnOvSZe/8QVc
r6/ljFUNNT39j/p7geXWh2XTs4Q/r2VHkuCarzOEP++8kuQluvQ04c97J7Wp
6bn/JOHPyx+/P/y4fJzw5036U1LI1TTCnxc3wbHp6i8q4c9rJOmV7L07QPjz
PMd3jGse7CP8edPMAbYXJl2EP8938Pvks73NhD+PXVg99cWTGsKfN567Yc+O
Z8WEP2+eduY+S/tHwp8nPs6+UQh9T+hvD7GXTwr4iwj97aitbXHrcCWhv6Pa
y24VDNUt6W9+Uv65zc2E/h72f89Re6ed0N+09Hu6WmZdhP7OFMBEoHgPob/r
weWlg28vob/bTz+/uZDZR+jvNQd0ry0LJhP6W7I4Od1YkELob7poCsfkOQqh
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{251, 1417, 197, 198, 199, 200, 201, 202, 203, 204, 
            205, 206, 207, 208, 426, 367, 318, 279, 250, 233, 439, 380, 331, 
            292, 263, 450, 391, 342, 303, 209, 427, 368, 319, 463, 404, 280, 
            455, 396, 476, 347, 468, 409, 480}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl0kdsjnEcB/CnpQ72vpjlYASJvS82B1UjQazUXnWwORhB0ooVMULU3nvT
oS0lVsQIsapqX+zWuNDPPz188v39v8/7/N4n7/vEJ80anBwbRVEMbzhCalwU
pZBnvsZVcskhmytkkUkG6VzmEhf5xF9qW9qdZA5zQfeRP9Ry7sZMDnFeV042
ZgCLw+f5oP9NTXNXZnCQc7o42Yj+LAo7eK9vLhNZTha/dCPlam5Qgy5M5wBn
XR8nN3CXVgxjFbmUZTRruUU8m7hPP56xMDwT7+wqlNt4zBjyWcdtmvGKzTxg
EM9ZRibF7i+QW3nECF6QynWqs5F7dOYp09jPGfdul08Yy3ru0JItPGQoK8mh
DKNYw00a0pcF4TfhrX1NZQJLyaBIN1ymkEc1OjGVfZx2vYUcwgqyiaUBfZgf
njOm9F1rIgeyhHR+6qrKjkxhL6fCuynr05t54Tso1P+girkDk9nDyaj0Za5H
L+aGHbxWf6eyuT2T2M0J3X/qmnsyJ+ygQPeNSuZ2TGQXx3X/qGPuweywI/yn
uq9UNLdlAjs5psvnCxWc2zCeNI7qXvKZ8s6tSWIHJW8jeyU=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 135, 108, 88, 72, 60, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 32, 33, 34, 35, 136, 109, 89, 73, 61, 52, 36, 137,
            110, 90, 74, 62, 53, 142, 115, 95, 79, 67, 37, 138, 111, 91, 75, 
           63, 54, 143, 116, 96, 80, 68, 38, 139, 112, 92, 76, 64, 146, 119, 
           99, 83, 55, 144, 117, 97, 81, 69, 148, 121, 101, 86, 39, 140, 113, 
           93, 77, 150, 123, 103, 65, 147, 120, 100, 157, 130, 84, 153, 126, 
           106, 56, 145, 118, 98, 156, 129, 82, 152, 125, 164, 105, 160, 133, 
           168, 70, 149, 122, 163, 102, 158, 131, 166, 87, 154, 127, 165, 107,
            161, 134, 169, 40, 141, 114, 162, 94, 155, 128, 78, 151, 124, 104,
            159, 132, 167, 66, 85, 57, 71, 41, 58, 42, 43, 44, 45, 46, 47, 48,
            49, 59, 50}]}, Annotation[#, "Charting`Private`Tag$384646#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hecz3UcB/A7ulAq0jBKXSokkVFKqZTQUF1WRUZLIUVLhSau7BkVSvOK
223d4vaqu3M47o7KaFE0bM/Pwx/P3+v9ff2+3+/v+/19R/TIcTGPR0ZERFzt
I06+K0dyOSfxh24zn7HM8gN04mT+1G3hc5ZbfpDONGS3rprV5gn0pAVHdKtY
YX6ILpzCHl0N8eanuJFzOBr2wXvmh+nKqfylqyXB/DQ3cW44EeLF+/IRruA0
/tZtJdH8DL1oSSQJ+pVyFFfSiL26b+QU+tGabbok+Sw3cx51SOM17uZSEq33
gXyUbjRmLbEMZp/vv5UvcQdt+EmXLJ+jN+eTy0yGUJd0Xqc/P7KY9hQwh2Gs
522S7O9D+RgbuIpi5nM663iDKu6hjLeo4R/bfidfZhN38gOLqKYt+cxmC/dT
wVK28rPtU+RENtKHUhYSTR6zGMoJZDCVAVxGIXMZTrJ9fSRHRx6/R5uQzZvc
y7++XyNf4S4u4RddqnyevlxAFCn6j+UYunMG/+m284X5BW6hFSeSqv9EjuUa
zuR/3Y6wPp9aDg/PtZzFft1OvuQrvg73ULjW4f8Mx8n3pJFOBplksZbYKNdF
ZpNDLnnkU0AhRRRTQilxfnccPTibA7pd4RjML3IrF1KPTKYxkA7hmobnWj7B
dZSwgKbkMIPN3Ec5S6jlYDgP+SoxtOPXcM5yErdxEfXDfRreD/JJrqcZh3S/
UUY5Faynkg1sZFN4T1h3PDfQnMO638P/ap7M7VxMA7KYziA6UsQ8RlDJO2yj
yvbHAItirvY=
           "]]}, Annotation[#, "Charting`Private`Tag$384646#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAVVUUgNE3M3R3o4KChHQpHRLS0gY1pIqAiZQKYgehIA0GoJQCNmHQ
jYmJQTfSDWv/WHzn7Hvfe3ODYqmD2g1MSiQSo/2zmwwpicTy5ERiJK0oQ172
OLaXfeznAAc5REafWeGcp2lNWfJx2LFMjq20foY23EZ+jjiW2bFV1s/SlnIU
oKj5Dp1AKvU46vws5l9bj+JuylOQG8y/1zfpRX2OOT+r+TfWo2lHBQpxo/kP
+ha9acBx52cz/9b6OdpTMa7FbJfOZjCFucnsR51IH2rbH9clNKSy/V6dxxBO
+O7sZt9Zj6GJ9QXtwO3Wh3URleL+2P+t79DC+qo+EtdkfUo/jWu3TkMR62L6
k3bSSXqXXtau2lfr6Am9R5fGM9BketLIvoru0876gbbUa9pNn9JGelbv0y/i
Pmpa/ndNOXS12fM0tb6oHbnD+ogujnsRz9X+H32XR+N+25/Wz+JZU9z+Z32b
ftSN79dl3ElV+/36IUM56bdzmq2xfiGuPa4j3gezf/U9Hov3gpvNftHJ9Kcx
p3w+l/la6xfj2uM34r3gFvOdOoUH4llx2vm5zddZv0QXqsV7wBnH8ji23vrl
uM9Uj+fCWcfOcZ4LXOQSl7nCVa7Ffz7nJpFMCmlIS17fu0Ff4V5qxL0iHfkc
26ivxrOJ9yiulRLmv+pUHoznQnrym2/S17g/nlFcKyXNf9NpPEQzMlDAfLO+
Hu8SNalg9p++z+PxW9xq9rtOZ0C8f3FvzA7ofIaRkYJmW/SNeLfi++yP6kfU
oqL9bp3DEzS0P6Ofx99IKfs/dAbNra/ow9SzPhn3Rz/RtppCKs3jWejBeGa6
QFtpgu4Mj/dLz8U90S+1vaajF5nsC+nWeK91bNwfvaTd4++2PqYf09o6iR7U
tq+ke3QuT8Z9orTZnzqTgbQgM4XNt+k4elAnrpcsZCUb2clBTnKRmyI+t13H
05O68RuUMf9LZzGIlvHumB3ShYygsf15/YoO1unpTR7760/KtAo=
           "]]}, Annotation[#, "Charting`Private`Tag$384646#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNy1OQXVEURdHXSce20bFt27a+UhXbtm3btm3btm1zfIy6c+1TN6Rxuxpt
gwKBwHeahA4EcgcHAtF4pU+yimk0pRnNaUFLWtGaNrSlHe3J4//ovNanWM10
OpDXPQZv9GnWMIPybin5p++yj47kc4vJW32GOjobkVlrz6SCTkWAe/Z+OpHf
jsU7fZZ1zKKiW2qCuG8foDMF7Ni81+dYz2wquaUhFA/sg3ShoB2HD/o8G5hD
Vwq5x+WjvsBG5tKN7vSgsPd4fNIX2cQ8KrulJTQP7UP0pIgdn8/6EpuZTxW3
dATzyD5ML4raCfiiL7OFBVR1S08YHttH6E0xOyFf9RW2spBqbhkIyxP7KH0o
bifim77KNhbRlxLuifmur7GdxfSjpHsSfujr7GAJ/SnlnpSf+gY7WcoABjKI
wQxhKMMYzghGMorS/k/GL32TXSyjultGwvHUPsZoytjJ+a1vUVdnJwr1yUlD
dnur5ZuFiLywl1NDZyI8z+zjjKGsHcIffZs9rGAs4xjPBCYyiclMoZx/UvBX
32EvK6nplpkIPLdPUFtnJRIv7Xq+OYhKA3LRiKne/gPNBoJt
           "]]}, Annotation[#, "Charting`Private`Tag$384646#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02W4lFUUBtABCUnpFJDuDgNQMQAJRbqFi7SAiHRd4l4waElFEKQ7lFKQ
BukGaaWV7hLW+bFmv3vPzDPzncge1almxziRSKSQlybxIpFK8SORlzgr/8ZU
RtCUT2hGc6Jowae0pBWtaUNb2tGez+hARzrxOZ2p7DdS8Lf8Oz8xki/4wDwl
/8hrmcYoulDFPBXn5HVMZzT1zV7hlryLJXxJVbPUnJf/4GfG0MAsO7fl3Syl
K9XM0nBBXs+M8Jz6gjyVj/IdDfU5uCPvYRndqG6WlovyBmaGNdIX4n/5GGNp
pM/JXXlvWBv5VRKxPKyjWoy49OBtTob1Ud8gKd31H6rpuBT+v1qejWHd1VIM
IAG9eIcYZoU9UwsTzTN9d/UtBvNX2CP1dQaShL68zxDGeb+xmov+3AvPrr7J
IPaFfVZfIzF9eI9fwtlQi/MCPanAqbC3almShefVf6Sm57K8KZwhuTQJmR3O
m1qECMf142ki5+a+vJ9fwznUlyAep/U9qSFn4Iq8mTlMCGfcLA8P5AOsoBcf
m2XkX3kLc5kY7oNZXh7KB1lJb2qaZeI/eSvzmEQfapln5qq8jfl8T1/60Z9o
BjCQQdT2+Ze5Jm9nAT+Eu2iWj0fyIVYxmDpmWbgu/xnunlyGF+nNu8SyMNxZ
tShxOKGfTHM5P4/lw6wmhrpmWbkh72ARPxLLEIbyFV/zDd8yjHq+k42b8k4W
M4UoswI8kY+whvb6ksTnTLjDajmS04+KDGW4954Di6qaSA==
           "]]}, Annotation[#, "Charting`Private`Tag$384646#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Feedforward solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
       "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.864143125130576*^9, {
   3.8642366677575245`*^9, 3.864236679721656*^9}, 3.8643991189557676`*^9, 
   3.8643998035201178`*^9, {3.86440821572911*^9, 3.8644082391544905`*^9}, {
   3.864412158578727*^9, 3.8644121612098713`*^9}, 3.864740161270382*^9, 
   3.864740548133564*^9, 3.8647411134926176`*^9, 3.8647411481275325`*^9, 
   3.864833837652205*^9, 3.8648362858747797`*^9},
 CellLabel->
  "Out[959]=",ExpressionUUID->"0a2e301a-2c13-46ae-bc1e-ab7827d66d7a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxEXHk4lc8Xd7kXlYqSNhEqS7JFGzpTqURpU1lCUpYSskURkRYJ0YJsSVL2
JUnxCpcWUahkvZZ77Wt2F7/peX7v/fZPzzxz33ln5j1zPud8zmdInLU/dp6b
i4tLn5eL69//kkEzz6PFLu/M1THgzzzdCTr5fHosqzTYBch4gVAvfFu4ZR7V
pBA8fxwWYP0egN1BewtfHv4EAuJRk+8eDMF5xamFygu/g59r3Tsh4b9wSPb8
kMj+Glh5VvzMxYgRyKzxdPm8rRbEb2iv+tk3CupL5NKoXg1w0/TCbsW942A1
HRL1woABPWjYfL/3BNiXdmxOO9QK3QfqlKceToK/Ee/6Gdt20KMJtH1InwKL
smuWytYs0J7Xs+Va8jR85Ft59KJhJ3SJy/DmhbFBWcj7cZdzN3i8UCzhCpqB
M3815fVse2F4wRbfMttZeBZNFx2/3w/XxD+IFZ2Yg6zAHfVVxwahzPirCnUV
F3LO0zwSdXAIXu21+iblxYWILy+G7xoPg6DFW4uj3VzIZv/2fBuDv2Bf+fCb
+EEKikxUfnPxwgisKFibk5JFQQ/+5t9wuDIKpdtLnD6JcCPWaxdXa8cxuHt4
xvmjAzcq2RcS5uMzDh9qavP2VXIjyuG61iC87gaXqOID63gQ164cSqz7JOzd
ZBIp5cyD7iwfP1R1ewouhLEf7irlQQ5GFkXjvtMwJgJlPIuoqOWG6jl4xAZ5
J2GLlBNUJBwaXnf32QzYPR1dPPmQihIE5dzLns6C/q4jSoxPVPTRUXyvdNIc
OIw9dreboKLotbGimvpcSOnOcOm71TSU7zHFZf2dC+WXMp4PqtKQhC4fW+oU
BfUNq6VUa9FQdqXsvT81FDT/5nrhmf00FFA6q7TWhBudyMyJzdWkoVCnrgtn
GriRtd/ph9YbaMhjmdhiSUMe5HjKeqafQkOvZGlfnBk8KPHLRQWzL1TEO0JZ
+dGUijbPz3PtuUtFL5Uyrkd3UBGRfbrYZicVyZ59rTdziYZadM8qZ/fzoPoD
7zJP9NDQihf9PfIxPKjq+dVN4MSL1MUs3Vbs4UETWUc1JId5Udl35pxTBzea
y3V8c8uODyUwHX+J3eFGukr79nqM8iE9q+QMo1XcqMxE0eaiEz/atpLWV5lC
QanpDuNzc/woT14w1X0TBX15UH+50yoGFp/lfnVesxuyP64zuyI1B2V7J8v+
tFDRXO8Ts05hLrS9QfGj+gIaStX7FngshAs9elTdeE+WhgbavGfpSymIe6ZS
2mEnDV24H1Y8+4iCLIWOhjfh/VurK9zEXsGNCllvjmbi/RVcM3KoMJIbHfma
1U3fTEN3Sng0P67iQWvj4lRYy2goJOaB7ddIHhTR6ye6v5OKagN9hyLE8X7t
nlje9pqKdvAdSX/zjh/FLv25KsKOgj7v8H3XaxUE22X95sfpdcEmG2nbmOZZ
eL3xmNfLn1R0JkGa26N7DrKD12iv4aahhLc5P/c7cSFTLvnf/ZI0dDI9f05k
GJ+DmskKoR00tK+30uyBKwUNaujyv9mH17MwRrVnjIKWfvl67ytuV1x2h0EP
bmSzTkxk43YaWhQ5Vh08zY2+PXqf/VCMhm7X/c4fu8qDuooH456NUhE6XdLI
x0VFh5eMLRnMoyLvTCIg+DE/epIW3HU5kIJ2rJI8dthqDjw/Lfnj2EdFFbyi
BSGqXMiX74dN6VIaymG27TfJ4EJGiw4G31fE+7Vca8ZZjYKYq8968+2moSAF
c2nbNxREVXs9/5A2Df26c/f2InVudO9dqn7KLho69snudPAHbiTcTRe+tYmG
uPsEE4a286CFzwyuGQnQ0Igxo7qugR+dKHR+sV+Pgj4FVGmPWnnBaOm1hoW/
OqH7Q6JjVv4s3OnU3XKykoqCA54///FlDu7ZMbJOzVCRpO1G9yILLrTnyJPV
VuI05C9y2htauFB73s8j4VvxeXrak1JnSUFziZFi9XvxfO3azVqZFDSmoUC9
ge1jk6jGNv5L3GjJN/moAHUa+s7nEDPRw40klupUhuPvwz1x1VLgAg8qKR8p
65qmopGi9uM7B3lQfrfHKL2IitbdGZ+aucmP4kJnRZSiKWj80nMDi71z4JLB
+/4dPmesyT+B+eu4UMB1KAtdTEMqEQY9v59xoSBXOBkrT0MfPFs9o9ZR0NpD
3OP6iIbYjR4ub15QkLLGwoub8H5Od1Vk0uS40YQL9d6hPTSU4ah8IjGZG138
KuD3UYmG6Ab+lw3leJDpgvcbNIRo6Inyit3aX/mRi3vabm9TCpLUEffq56ag
jWr3www1aKhWI1tI+xYFef11mTuD17832XDeCB83WnpxZEMD3h/7spx9tQHc
SL7r3YvQLTSkn/HC4+A+ClpRZ7PzNn6/pNfeP5J0CjIM2imoieeXIa11evlB
bhRdGqn0A2jo6K3E85f6+ZHkeK70oCYFlSpdtuK1tof0iFcv3cI74ZNll0t+
8ixoTb8sEi+nokQvc2d23hxsN3x0s2MKn5dS5pc5Yy5UsP/HmkdraCj+QFJh
dS0XkjH9M66D53PBaVJ/Dq/L7/FmQRM8X0nx26MmjRQ0+mpMqRSv5/TlKFXh
89zIIW1c+xVeb2a+vJ98OzfyTOAfv72Ohohb5TuemPOgNw1deSOzVKQ3NhJo
2MmDmIrfJCNKqWjMcWmmqgc/Cinc9pUngYJ+LW83vqQ6B3KslNCKdipy/Ltt
vEqUC7kfz7CxXUhDDiNLNJdFcCGRrWh61UZs/+nKBcqiFDSlXFZpjfcj642/
aF0UBT0SbWlZgPcrMOKy9g0JbiS53UGfD/sjRlnI0ex4bvTolGqojgr2D4v2
n7ovyYM2aV9bHYbPn7Wo6uT1In50amMq7QG2Yw1PO8Jnigsti8ioUsf2GiRc
lGt7nYLCKhs/CeL1155mR9vPUZCovqK4MfYX0aIr9rTf5EYyx5EEC58Hu/aR
Dwz8XRRiln38hs9v7cnj3vvzKehykSKfLp6fVi1rKGQPNwql7/xUiu1R8nKJ
aDyTH/34YFIiju1gpriRNwf7vcHM5V8P4fHZ+bu+WPZTEA9N13MTfn+cTqjm
POzXg459DlDF538fr31FMPb7E15x0nvw+Nbb5df4q3Cj9pg05k38fonzCRek
sB9SV86LfoGfz5zOcXIT5EYbPcJC9PD3vfhyq8psOQXVcreukMLPez8NSN0y
zo82DK0oz8V+6KNbaryMtRmYys1cXX2tE96+v3tld/wsiM4dEL2B8U/VvbBB
KGsO1HPSVyZPUrHdFzmJGXChq50ZkYmiNKTUVsWIquFC81cpH4xRw/M1804U
Msb4QVz+tPLf+68YFK7+Q0ENau8utOH5jayuUFllzo1mDO5Fq2A8jluxwG0f
gxuZ/dIZc19PQ2J6o/GnTXiQsPCNIScuvD+LPeWt2nnQ370nAq7j+MDU+tnC
71f4Ed8LtYruVxREt71pMrxxDp5+OmJ+oo2KtjlYJzWu4EIfNAc1T2D/GCQx
yNz8mAuF9lDj9eVo6KyOYdP0cmxfEb/n92O8C3wm5NAbjvHhblr2GJ7f7+Hd
S2ENxoO4p0mm2L7cHIsP58VyIx+ReaPzMN49sVmv81KMB53NXtNaKExDP4SK
9FcV8KPyQrrf4wsYz0QeNx8c40IjH/xOJWI8usB1QMDrKgUlaMwatOPvLfHm
m82maQqaPNC1/hFubynT3tXtzY1ajpTo+m/D/spTtPH1dgq6Vb52my3+vtm7
66oN31GQpn/ArX/4cF8p98MR4EYrfzD61bF93LM85gYt/GhMbF2yqg7+zmnn
jD7heXjd6mtZhsffJ7L00bpuvP8L+Rca4vUptueZVMtQ0KEq8RP/7FNieFTi
Od5H0315xdvx+JkPZjr2K2D/bVIt3IPfzz6yqUDNn4LCN9QW3cTPs4/f2blF
gBsxZY8rP8Hfd19ogZ/gZwqqmbF9pIyf7wxeNb9qmB8Jqs5d/onXUVv6Ri62
hYKOv/t27p991n7m+Vz2DNv3yHZxMfz7bBn180Y+FFRXuvPkDtw/c6FcXu0j
BfnqjPrvxf0XVnVevZ5BQe0npB8dwO197uLLhUIoyL3d4UEx/n3w+/Smnu8U
dGDBXJgQ7l+eMHvs6TSOL66HqUUoU9BbflnxS9aHIb/XbF/nxU5QYBlOUGNn
4bhfc3/6ZyqaGh0IFk2bg1uzCsELsX0v8lf+tOkkFxq/ouuhjO17LI016FPF
hY76eJzSxvat+nNP1SpDCmKdk1k2ju0jWOrji6lfOA6QNMwYxPNBl1nKa8y4
kdr5kXmu2L5X7bt6+XgTN/Jda5ExhO37W8Y8IzDmQYp/stjKON6sEt01famV
B3XPh5P2eD5LLKzfR7nwo3UiohGNSdhfPdFvypaegz/+Z1uetFJRpII3rU2E
C82tefj5E47nxHJNd+x5yIV4UtIDB3E8J7P8Uj9jGY4vTo96pGH79lj+M3z0
CQVVb0mi9vz7ftFJE2tW4/lYJI3cwfMvKavXy4/mRpcydU2ssX0LPnm4J1uU
B9keXjx5HMdztwTucne+50f3n7y8H2ZLQcFtrwaUR7jQXqMvzibYvg1cBbbc
caMglyvxAt/+2Zv5lsMCkxSk51pTno7bPqLmqO869kfeTaL12L6LdJT6grZS
UNb3yV07sH3F5UbNnH1LQYuNul7+s+/MhrVxiprcKK+4aKULtm9kvnLDwmZ+
VHTwoeVOnM+Urpe5+cOagoZ32NdPYPu7UHTtKk8nBSnNBly7hNc3ll5xKXcD
BZ1eWzA/ENv3Iut3uskvKUjGsXV087/4StPy2wZ5brxv3aWiGI+7Swc7dt6h
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
zua8MDd0Pm1UdEYJ+/f/nf8g+Pw/OwiDrg==
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{332, 1619, 278, 279, 280, 281, 282, 283, 284, 285, 
            286, 287, 288, 289, 507, 448, 399, 360, 331, 314, 520, 461, 412, 
            373, 344, 531, 472, 423, 384, 290, 508, 449, 400, 544, 485, 361, 
            536, 477, 557, 428, 549, 490, 561}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl0ldsTlEAwPH7FbVVUWI0UhXSoqr2iz3KC9rSh9aq9UJrPRhBYu8Xmwcj
SBAr9n6xeTCCBDEaMUJstcfvxMMv/3POPd/57vfdm1JUklMcF0VRjFJ+khcf
RbkkWaxDbWqRSE0SqEF1qlGVKlSmEp3pzzhWco4fVKQT/RjLCs7ynXjymcom
rof9bqyjZjOG5ZzhGxUYwhQ2ci2cYX8Hnck2bof7tNZX9/CQeuajdRmn+Up5
DlJKsutzdCf3wu82H6z7eEwD88n6nBTjDZquV8M9aXvN0tfaTPdrhj7RhjpD
W+sLbaJbtYXeCv+n9tFMfaVNdbe21AdaV0fpMxobL9U0PaVllOMNza0d0Kc0
Mp6tL0k13qF3w7M0ztO9PKK++SRdz5Xwn5i30+ls4WZ41tZ66y7uk2RepEs4
yRfimMV27oT3xZ5cncg6Lof7tNZWp7GZG+EdstZLR7KYE3wmRg4lrOVS+A57
s7QnI1jEcT7F/r/IgyhmDRfDGfa30R4MZyHH+MhfHxmoE1jNhXCG/ZnanWEs
4Cgf+OPyAB3PKs6HM8IzpRtDmc8R3vPb/gztSiHzOMw7frnWSrtQwFwO8ZZ/
BG1p8w==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 197, 151, 113, 84, 63, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
           11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
            28, 29, 30, 31, 198, 152, 114, 85, 64, 52, 209, 163, 125, 96, 75, 
           32, 199, 153, 115, 86, 65, 53, 210, 164, 126, 97, 76, 33, 200, 154,
            116, 87, 66, 54, 211, 165, 127, 98, 77, 34, 201, 155, 117, 88, 67,
            218, 172, 134, 105, 55, 212, 166, 128, 99, 228, 182, 144, 78, 222,
            176, 138, 109, 35, 202, 156, 118, 89, 226, 180, 142, 68, 219, 173,
            135, 237, 191, 106, 231, 185, 147, 240, 194, 56, 213, 167, 243, 
           129, 236, 190, 247, 100, 229, 183, 245, 145, 239, 193, 249, 79, 
           223, 177, 244, 139, 238, 192, 248, 110, 233, 187, 246, 149, 241, 
           195, 36, 203, 157, 119, 235, 189, 90, 227, 181, 143, 69, 220, 174, 
           136, 107, 232, 186, 148, 57, 214, 168, 130, 101, 230, 184, 146, 80,
            224, 178, 140, 111, 37, 204, 158, 120, 91, 70, 221, 175, 137, 108,
            58, 215, 169, 131, 102, 81, 38, 205, 159, 121, 92, 71, 59, 216, 
           170, 132, 103, 82, 39, 206, 160, 122, 93, 72, 60, 40, 207, 161, 
           123, 94, 73, 61, 41, 42, 43, 44, 45, 46, 47, 48, 49, 208, 162, 124,
            95, 74, 62, 217, 171, 133, 104, 83, 225, 179, 141, 112, 234, 188, 
           150, 242, 196, 250, 50}]}, 
         Annotation[#, "Charting`Private`Tag$384757#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl03e4j2UcwOHfUXE0SMrMijpkZO8ZKoTspIGkrGwZ2WQnslcqFGVUClEk
LaRlj2jYilC23N/LH/f5PO/ze693PM978rTu3PDFpEQiUd6fS/q3fsQQWlCZ
wlz220ldzlCepApFuOK3U/oxw3iKqjzA/2zgdTpSn6vO/0c/YThPU42i8SCp
EomvdBKdeCyuYfq0ruAVnuFBipHk/K91MvEiDeIanGElI2hJdYqTyvnf6BQ6
0zCuwVlWMZJW1OAW5/6ob9CbEtxg7ludShcacbu5bTqP/nEP/uVTRtGau5yz
WxdSk1sd/6Rz6UNJbjT3nU6jK1kd/6qLaUwGx9t1PnmNj+gA7jb+TZeRYnwi
npP/WE0Bc6M1l/6pz5LJeI8W0kWaT4/GHuhDepv+rAX1Tb1HD8eeal/Nrgdi
/3Wp3qfHY421lN6kG/V+na559JB2I5vxfl1CE+5wvEMXMJAcjn/XD2JNOMca
xtCGzH7fq+/xMOkc/6Jv0Y/SpDa3SWfQnabxTJznM8byHI9QhjTO36wz6UGz
uAYX+JxxtKUWZeN8LrKWV3me2pQjmbTcHN9Q7HWsZzwn6eN7ib2M9yYjd8b3
Ed9SavsS70eW2P9Yq1jr2ONYF3LGPpI71pRLrGM8L1An6fr/crL3+V5n0ZPH
417mduo7DIo95TJf8Fpc0+8HtV3c33ifFtb39V49psX00XgP3apv8zIV4p3N
bdHZ9KI5ebnCeibQnrpUjG8urhvfDinkp0B8MxTkKl8ykQ7Uo1Ksq/v8oHN4
iSdiDc3t0ncZHOvk+A/9MK5r/JeW0EJ6DdjZjU8=
           "]]}, Annotation[#, "Charting`Private`Tag$384757#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAFWUYBtDZXUREEFCxQBC7k27pjqURlG7p7kbpEmmkG1tMuru7u2vp
9Hw/Ds/7vDPM3jt3JkOtZvFNY6IoSvBPxtgoWhAXRYW4av6RHtQjE5nJQlay
kT2c49zCXDP/RE/qkyN0+yIkmH+mFw3IGbp9Ua6bf6E3DVlrV5NkrNPHkyuc
oxfjhvlX+tCIdXa1SM56fQK5wzl6cW6af6MvjVlvV5un2KBPJE84Ry/BLfPv
9OOA3pr0HNSbsMFchxRs1Cdxxtyd9zir5w3XMJfktvkPrpi/4bOQ+kHZhldI
kiiKfpCH7O/JEeTmafs58mv7jbIuz9mllInlRLnJsZtyMGntssmUcpZ8LVzX
8bPmHryovy+Tyinhb8tzjj80jyKd/rl8Vs6Tb4QePr+5FHfMcXbjzAvNV+W3
ZAypH5JtycBh/b4cSR6a6ptkPVKxWb8lh5Cdyfo52ZMPOK/nY6G5NHfNf9Kf
w3o7XuWI3ozN5vrhnrFFn0L+8H/0Mtwz/8UAmrPFrgHPsFWfSoFwjl6W++a/
GUgLCoZuH88D8z8MoiWFKEwRilKM4pSgJKUoTRnKEk85ylOBiuF6rluOh+Z/
GUwrKoVuX55H5v8YQmu22jUMvxfb9GlUDufoFYhYpA+lDdv0RqRmuz6dKizS
KxLDYn0YR8ztwzPEUb0t282NwzPIDn0GVVmsVyKWJfpwjpo78DrH9HbsMDfh
eXbqt+VQcjBTPy978SFPes6mygv2j+T35OMLfYmsTByJnDdeLrW/Jvvzkl2m
8I7LGeF5lCMcP2buGJ5rjuvt2RneL15glz6LaizVq4Trs0wfyXFzJ97khN6B
XeHZDu8Wu/XZXDD35iMu6tVZZq7KYyzXE+QAMvOdfkJ25i1O6h3ZbW4Wvg97
9DtyGDmZo1+UffiYZL7jNHnJPjKPNufnS315uG8kDn/fsQlyhf11OZA0dllk
CjkzvFdylOMnzV3CvdHflk/IyTK9POX4g/DZeVnPG94lOTf85rKT43vMzcPv
raeRj8tJcq9jd+VwcpHKfraca39J9uUTkttPl5ftY8xjzAX4Sl8hq4VrslK/
IQeRNTwr+inZlXc4rXdmr7kFadmnz6MGK/XqJGGVPpou1GRVuIfhu7NaH0NX
alGb1eHzkJQ1+li6sU9vGe4N+/X51GGNXiM836zVx3Ha3I13OaN3Z7+5Fek4
oC/gsrkfn3JFj3VPxpoLkto8Pzybsq5j/wNksgSi
           "]]}, Annotation[#, "Charting`Private`Tag$384757#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwNw+NShAEAAMCvmV6kX9m27cuuy7qrLtu2e9t2ZzYhHA1F4oIgiJkYHwT3
HrrmnOMOmWSyKaaaZroZZppltjnmmme+BRZaZLElllpmuRVWWmW1NdZaZ70N
Ntpksy222ma7Dx657rwTDvvimVsuO22Hjx674YKfXrvvt7f+Oum7l+4accRX
z912xRk7ffLEmItOOWqX3Ybssdc++x3w2VM3XTLsmG9euOOqs3545Z5Rv7zx
wB/v/HPQf8ISLxM=
           "]]}, Annotation[#, "Charting`Private`Tag$384757#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV02WAVGUUBuC7sLt0N6hI2kVZqCiCoIC6disKBgh2g4odoIKK0i2dEkt3
dzdId3f6nB/Pvue8883szJ07ZRo2z2iWkiRJpj8dUpNkd1qS/EJt8rBNN5+O
7LH/yn3kZbtuAZ3oTBe60o3u9KAnvehNH/6hL/3ozwAGMojB7PW6v1GHfOzQ
LWQI++xtqUt+duoWkZLude3PU4FzuqHsN7fjfgqwS7eYLM73tb9ARc7rhnHA
/DsPUJDduiVkdb6f/UWu4IJuOAfNf1CPQuzRFXR2jLk51ViqS9X1N7/ElVzU
ldJNMX/EXYzQHZJ/Up/ClHVmtvycvR4vZM80v8XNXGNfIr9nmcfT7APMDali
XiuvivdsXiC/JuES+1T5MbeaN8kaXG9eHtdL/iTvljvlw/Jfr3/Y3J6a9gay
klwd10sWkeXknLg/5BfydvmfbCD3eX5hOdZeS74dn0FukLdwrXmp/CGuh3m7
XO456eaB5pepal4nr47raF4ovyGFS+3T5CfxvhnpuUfkXzxIUfbrijg3zvxO
fHZW6LLpBplfiWtKFkbpj8q/eYhiHNCtJLvzg+2N4n2TldH6Y7JDXC+Kc1C3
ihzOD7E35jpSGaM/LjuSQQkO6VaTyQl7Jx6hJId1axjLOMYzgYlMYjInnevM
o5TiiG4tOf3/ofZX4zsmjSn6U7ILj8U9QXnn5sovqW7eEtdOHnW2qBxvf5fb
WKfLpRtmfo0bSGeq/rTsyuPxvXBMt55pTOeMrhtPcBnHdRuYwVl7d56kNCd0
G8ntfw23v86NZGOm/pzswVNczkndJvI4P8L+BjeRnVn687InT1OGU7pizk4w
vxf3LJt1eeOeNzeJ+zx+R/ZF8ltyxPu2T5efck98fvsK+TOzPf+C7MUzVPbY
GlmWCuZ5shV3mLfK084XN08015bvx29CbpT1ZfW4b+QyWVf+KGvIHXFvxm/M
8/PJkfZ7ZVNZTa6X9WTl+M3IxbKO/E7eKbfJnHGdzTPkZ/HdmjfLmnGdzStl
a+b4Hxdlb56lHBU9Pl9+xRmPl7BPMn8Qn40tuvy6UeY3qUKu+J50M2WLeL/M
dS7R9TE/F/chZ3UldZPNH8b7ZauugG60uRlVyR3fo26WbEmt+L7tq2Sb+G7M
u2RGXHfP/x/9kek+
           "]]}, Annotation[#, "Charting`Private`Tag$384757#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"Test on dynamics\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
       "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.864143125130576*^9, {
   3.8642366677575245`*^9, 3.864236679721656*^9}, 3.8643991189557676`*^9, 
   3.8643998035201178`*^9, {3.86440821572911*^9, 3.8644082391544905`*^9}, {
   3.864412158578727*^9, 3.8644121612098713`*^9}, 3.864740161270382*^9, 
   3.864740548133564*^9, 3.8647411134926176`*^9, 3.8647411481275325`*^9, 
   3.864833837652205*^9, 3.8648362860677176`*^9},
 CellLabel->
  "Out[960]=",ExpressionUUID->"d1422a96-2a32-4a20-91b2-ea51205fa35c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
jg7dGW+ywNc/6z0qXVNFR+kBA0cP4/crc6l4WWynIDL37/+xvo2B+o3eZxX/
40PSE6KtRni+2XNW7v41Jxp6n62rXoOfb6D73d6fPHQUdeDgj534/CcbL7Re
vUFHNQEGy9z/a+8vftxeu5mG3jJamzVx+Sz+Pe2Xz6ShpcJej2/i9Uz6hR6D
+lx+9EvZdkEjfr4Uv6S3s1p0pDG36dANfL7zcxcx+WI8nt9JWPYd1885zwKZ
kYU09Nzt0DNFfP+Diu3oaDgN5QTu3roJ17+hWvKErQweH/uufZXDxwcwHSer
YumoLDOPbxxf78S3huEjRjS0NmjvOi9cHpGKN6ceWuPnvyVeq4/3+z4JTlYb
E0RWXroqtp0MVHg5OVbWzhKMdt28InWFBUrtlS1R1TzoXmjqtBqeB/dZ+r4W
teBFc96HXGfoMJC9u2mBVD0vOlQxeGPZJTzeS5VvljzFh16t26uggvvjiyXz
Lu9r4UMnRDUlCvHzrzAYiT12nIbGC74/tcDl4S64qmDbQUMhl28Y7sDjL/vC
Jn5BK34kah/dU4r7o8qkkusvNj/6rPh203rc32zqv4qyLtFR2KtiPWNc/jeH
Q2bC++ko8376JVe8/9Cxwb1q7gLonM/IuCzujytzJU/SR3H7Xq4h5Iv74wm7
5/N/ugsif+VYjaBy3P+eizpyHvGiBQF71CqP4/llaLcYLOdD7hXWFr9x+7ns
9Olg9jM+FLPWjgjG89fDs2t141fQkOHGBU+T8PtQ+W3HJ/Cchlo3Hb5pgNvL
BtepQ3dW8yN7Ga2nBO6P6kKMD27x/GgLyyXHFvev4fsbm3k24fXXAVnFv7j8
6EClVngKHY3XBExq4vcXxzuQc2uLAHK+vd17Ez7+l2jRYcl8QXT2xe+5w3h9
pVaqs6vHlw9dbzbqK8LPs3zXkla3WT505WL3jWW4PciKvTuk7ENDmw/84jmC
yxe2WwNN0vD4wP63ygfPJ2KaT47DDX5kJKssb4TXR+H7NsmdnU9H33jlHL7g
+x8OK5ffeY+O0iQmr0Th8skmwvEQUQGUbnZ/ZD1ur9nLd54IKuBDOvpTg3dw
fxS9v/l9nSYNdSxU7byA3yeKkkltKKKhX1buP7Xwesaq0Ukk+Qs/qlxT1UPH
5x/+u+FepCF+/pNx2Vb4+gqM2mM9FXRkUah0UQn3p9s2xpehVRBd7wwWM2vF
/TfpXtKffj60a9s8PkFcvy+VjLn7LtKQdUU8/zh+vjMrlQ5GcflR7d0PYWfx
+Scy9VeEXaOjZeML+f9bH1VPJ3qDIl4vX/AwWo/Ll5392WwglYYyDB+Od+P2
WPEv1+r+R360kE96+zo8f6/JUvjwHehIZjajPQyfryZ/2BAK6OjFqyi5t7h+
zGuixRcsoCHO6JktM7i+k0fmJUqF0tCJ1dvpTni7+LwiTXUFHTUccpHfh4/X
dTTc2v2Mjip13LXb8fUM1mUxHQ7Q0B2PKpYPLo8/fYP9mVO4vA0iaw3wflao
5NzKIUFUscg9JaKDgU4SL3/+sqah+nzLDGV8fFvpvMg8Dzoqv7Wt+xg+PvO9
3RnndTRkpybmMoDrQ2jdxq82W+lIPKZdKhPv17htMbWbQcPrHPP8MFw+e//j
PnEBNHRMOjOIjbeT6hUlKsTpyN5Pd4c/Lm/5tQWpYo/oqH6JQH4ePl+pyfXH
y700ZPq7z+cqvv95pw3eM6Z0NFKoG3cE7+96ziOb60ZD0qLcy8n4/r9j78Ta
3cLrn0dVd/3w/n/a/ZHz1PB4Ne28zgifr6GvELtZB69f/VucL+P9Fxy5vBpH
aGhqlfhCV7z/aaS86dezdMSoV197AO9fHDdj/GRKEOVV/lm/rYuBPgjKSV+w
Owg6/n77WPYsGH3XNeBXyYMspn9E7RXB/bFGq1LSjBddZiWWGWgzUOjqwleT
tbzoakG9yTVH3D4vdSkvt+RD+eYvvlXj9bXkPs9Lh/7wIePmsbRw3B5+pM4x
Bws8n1TseW6Fy1O5bNfUhTYaCm/7ctobj0/jKZF3O07yowWtLDl+/H1wUXxw
4kM3P7ols2Ma4fGnLGpHypADHT1vD79miMu/+2CsqWsvHf3rO7f5ON6/kCcz
a4erACJM8k1m8feB0Da1crFhAbRj7bEkHdyfF1rZ5US54vVRVtUaOTw+eS2u
eTTykBe9VrT6shGPT9zoxPHlUnxoTc0ZBRM8PhWXNhrkReP58bHaxF48Pok8
DNdKX0ZDK55ff/YIv4929asfWNF4/ca3xs8N9x8+P0ImfBU/EixQvMfA34c6
Bx13HXrFj2K2qOrex+ONYnLvKaYCHT3a0n2zB5f/uejutuhkOlr/Q+G6Mm4f
O7n8EueUBdA6NPBICB9/U+gWHytHENWfEyLu4vHJb9kp1OvNhx7pX8lzwM8T
cTGg4fo0HzLRac/m/vd96vZJcNFV/L0jyW0+j8t37iDPAl4+fiRmcSSjAo9P
K335WVLX+dFKVwkrfzw+lZ/qf3twHp5fa081NeL7Z5js/KITQkc3+regCFy+
gleHPzgsEEABdRV75+LxRcD56PE7+Xyo4b72r0N4fAoinid1qNPQZyeLAVv8
Pvt5ttrkFdBQ5I9UJS88PjmuaHocVMqP2k/Hysni8+9OssV9DPD8mFSuY4ev
f+fbXryeoKOV9L/9K/D4gk4tXTf/ryBKf7++bRB/T5k28MSxe/nQwHVueyte
jxmH26TKnachUddEDuO/7zv1garrk3h9/OBevA8+n/DMzY3yoSOzYhPP/66v
v0Hqsr4CDY1xLCsl8fFnVzQIV72jIVZu+3JJfL0mtXV9FzP50a4C/gf6eHw6
Uc1Rf69JR16ftMuf/Ld+7/vUtz+fjsLv+MhG4/qp5BNesGw+DXltUf3Sgfv3
cbOVJ2fu0NDGwmnWPbw9E9AXILWMjoRWTNKO4OMTVQpq/kXTkd6Ndbb1+Hol
h2RbvfRoaO9dRvB/6/38lex+XUu8fvIOtvvPT57ebv0QMyCIuDJfIhXx+CSy
+uONdCsaGqo/m/Dfekcr+IpamTsd2QzczzPDxyu21h33XUNDgSMCGS34fe/b
1WtwQJWOdHoNcwi8P/3j1+GDdBo6+oku447LJ8m6pHLrBg2pv561Y/y3nhzu
e5whRkfy8/Ubw3F5lfb5HFzxEK+/InUVM/D5r+d0lqRo0ZCY6ekaT3z/uDts
vs6jdGS0sjPYFO9/QBdvjnahIYMrZ8yK8PV2nJ3e7RxAR4taT7/xwvvPu564
v0QFz19pBT3a+Hw3W47s0n10pPyPnuz93/gWZT+lc4iGKtFVAQ+8v/Z9T1OK
LR0JjDG+/rd++v7sM8/ZCUGksm3jswq8frrY09LvYUlDMu31T43x8XRxC+dm
Zzrq5b64eBgfH3nmU9ZXoCHGznKGM94vWWwvlGZMR+rcbxGWeD93sMkn8Dod
LQj53nEJbx/7qXFjsxIN2W4R4tmCj++JOr+5axeen/ISrIPx/trx/X2nD+Lv
bdVXl7zxft2ec11XrfDz+yfu/2/8vEZ7OpF2hY5qb6efP4m3PyYLVEdo4/Fc
4ITJf/PPZhP7icUWdMTr0yZ76L/vG0nfmJmtNPQ35VOo2X/f77vvCG4yweud
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
d3Nqts6TMSr/yPfD9+Lc4REq/1gaf0b5wJFhKv/4zl8qPPn9EJV/5Mk+6XWo
dYDKPzZf3V67RbOPyj+mK2182KjdQ+UfVX5bHonEK07S06LMehPynNqo/KOO
aJ12d3ATlX80Lry9qvZHNZV/9JjPt0ck5SuVf/wuuU/GaCSDyj/uUl25Uygr
kvI0MHXY1hxeSHlaj9iBvu6+csrTUs9+PEvTqqE8zX14QfemuY2UpwnKn1dw
6v1LedryZOWuPuM2ytPOzwt/UWzaQXna9r0KtSKj//t/X9NLGtfptkzK037N
684mnFiUpyV1rec7t+l/npYqJtHYE/8/T7P9I9rkXNZNeVqdQk6Fcng35Wkn
jl1qvyPYTXmarr+wh/Q2FuVptbnJ3+fxMSlPM255SSiFdVKeZtSmr5Da0U55
mlFwapFecSvlaZNR7UumaX8pTxN1leutvVVPeZqXyPK/+7qqKE+rH0vTNvz+
jco/RhtWH2UG5VD5x6JFKy5+5xZS+ccSdY51y59vVP7x3732fRPKlZSnFa5h
Vr5LraE87Wmj3Nvd9HrK01J07JvOZzdSnnblg7Xp1nn/+3/fd/4f3k5KtlCe
9l5W7xzveAvlaQ8ub06PLm39X/7RyOKvnuE4QfrUvPdG0jSlTsqnUne3RtGy
uiif+tEZlKkzyqR8Smty3OZgA4vyKbWY8uWpbv/zKUGF5/ubC7spn8qZI6mQ
ntVN+ZTYfuP+fWbd0PyrNeH1ihnYLpO8IzPh/4q083io9j4O4EJJDwlFkq5k
Dd0iaeH5jspDkq0iuwr3Xjw3UYlECymVSHailC0xClO2sUUmtIhSyBTjHIko
Ys4Mz+95ve78zH/ndbbfOfNbvuf9+hBQWqfqHrRuDtRyVf/+mjsEcyNJ7sRy
IdqgRc2nD/s5UGTVFmN3U4gWYy3FS2kcwL7FC57m5ZGNOM/Yf1W7LP7nU5xn
9Bp6aTsp14w9qmXJXnqFJxt7VHKd4UDA/WmmwHdYAQNdEU0D2Hdo4Zw0FScO
9h2Xa+mvefQh7DuxLSZnOvII7DtKax6Ith2c9x2P/hXPrBjzvvNFJ/fFSAOJ
fWfmrtfDoGASTj8y3qnQz4fFdV9EQj8SoPuXhl/mp1kISX3pVDMxBB45GsKh
w3NQcs1/1PQhB3IY5Z1mgUI0ReboJtkNg9iHnqtbyVgefY7zh11mVWvfM0px
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
      "], {{{}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1614, 1613, 382, 383, 384, 385, 386, 387, 388, 389, 
            390, 391, 392, 601, 544, 497, 459, 432, 416, 613, 556, 509, 471, 
            444, 625, 568, 521, 483, 393, 602, 545, 498, 637, 580, 460, 629, 
            572, 648, 525, 642, 585, 653}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1614, 1616, 403, 656, 588, 645, 531, 578, 635, 484, 
            522, 569, 626, 446, 473, 511, 558, 615, 419, 435, 462, 500, 547, 
            604, 402, 401, 400, 399, 398, 397, 396, 395, 418, 434, 461, 499, 
            546, 603, 394, 445, 472, 510, 557, 614, 417, 479, 517, 564, 621, 
            433}}], 
           PolygonBox[CompressedData["
1:eJwV01dsTXEcB/DTkmpCrLT2iMSoerCChFgRI5oq1eKlxkWL0qLVpVYIMaIv
9uoLanuxPdjzxZaYQWLPF9uDz//hk9/3+zs3/3PuzbntYoWZBfFRFMXxiJiQ
kRBF6SySK1lIBeWUUUoJCyimiPnMo5qj3OQbbR0+gbnyLo5wg6+0sR9PoXyW
h/yji900dsqHuc4XWtuNo0B+RaLcJ5zNGf0Bf0nVp7JDfk5tuSezOaTXM/tR
zDX9M63kbObIjc3BVPBSH24upQ69w/Ny2n69OZLlNGA1AyjlvutrzaEs5o++
0uxMjO16lZnGChqyhoGU8cz1deYwllCLVfQgn4OujzCXUZe+FHHVfohZySe5
pZkVvrvcyBxEOS/0BLNX+D05pdc3+1PCPf03KfIUtslPiZe7M4sD+hU+0kIf
G55NPsldftHJbjJb5SfEyd2YyX79Mh9ormeGc+UT3OEnHe0msUXexyXe08xu
TDhH3kwNF3lHU/vRzJDzyGU6m9jLBd7SxGcywrsmH+c2P+hgN5GN8h7O84Zk
u1Hh3ZKPcYvvtLfLYYP8OPyR5K7h/uzWz/GaJD2d/zn0bIg=
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl1Hl813McwPEdbaXEWisKO5KGITvklq1iXaa1WLpmioo2V45ypZAjOaJS
6XBUSKGiHJGzGx2uUCiKhBKheL4f/nju9fl8dvy+38/nUznVteU1iQkJCRf7
Eq3nyxt6B70poZAkkqlDCqnUjZ/nAOrTgANpyEEcTBqNSKcxGTShKYdwKM1o
zmEczhFkkkU2ObSIz/FsS/RO+tCOIo6Mz/e9N/Uu+tKek+IzrK/ScVxON1rG
s1p/S0fTjw60ieexvlof4QrKOSrey/pSvZsqzolnsvapTuU6To53sbZGH2UI
3TnW2iadyS20ij2y9rbeE3tPvvn3+jznxjuZf6bT4tmM/9brOc34F32ZU2Lf
zD/U8bEfxnu1Jt7d+Ee9UF/UrppMXyrM83SzVugs7aj/xpnrrXqW7tae+qqW
aQr9yI3z1Xdif/ReLdY/tJoC4x90Lp3jXlEa+66f6/TYP+N/9AZON/5VX+HU
uAfmH+kEauNczH/Sl+jBcebf6Gxu4+i4a9be1fu4JN4nzs3aFzqDG2Pv4n5Z
+1gnciUXcAxp1t/TMfSnU5yTtY36BMPiOeNuWlurj3FVnLn5Dp0fe83x5t/q
M4yIs6eRtff1fgZQaL5N58X+kGv+pT4ZZ2+8T4dzhvFvuijGZJqv00m0N/5L
r457YPyzVuoCPU/rUGl8gn4X+6bPxnvFP3L6cLthW/1dL9LX9HxNpYo883T9
IO6xjtUS/VN76aVapNtjH/UF7aJJdIlz0a/0KUqN9+tNnGm8SxfHmCzz9TqZ
a+IOmO/UhXH/aG2+RZ9jZJw/ja0t0we4LO53nKO1r/Vpbo47TLa1DTqFa+M9
44zIsL5cH2Rg7FnsRewXTXxvhT7EIMo4O56DE8mnqZ9ZqQ8zOPaNYnKsf6KP
MzT2KX7H2ladw6j4W+Z79HW6GddN/P//3wLz/wDLBpSJ
           "]]}, Annotation[#, "Charting`Private`Tag$384869#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV03eAz2UcB/Cfs0syE0rOjOwto5JNRxcatmR1Z0W24848485WhKJkR8Ms
yqpkFhWKMkPDzOb1/PG6z/vz+f5+3+9zz/P7RnfqFdszTSQSKe9PJ16IikRy
cUrezCK66csS4bB+Om3lIlyV9/IZrxNjlpvT8hY+ZAbtzIpyTd7H53Smmdkj
nJG/5iNm8gZd6BqeT3OfycNZ+RsWM4vuvGj+KH/JW/mY2bQ3K8b/8n6+oAex
Znk5J29jSbiPvhxpOKJ/hw5yca7LB1jLm7xklo/z8naWhvvqyxPFUf27dJSf
5Ib8I2/LtcjKOn1PtTIZOK4fpD5LduL0LdT8XJCHqs+zQ35LfZoHGUlDloW1
qRUYS1oSqM9EfnN9oPoMyWRjFE1IYU44f7UEY7ipH67WYwI/6QeotRnPwyTR
mMmsd72XWoWMjKABf5gPVp8jB/H6lupj/C3vpJ9cgyws18epFUnH7/q54bcl
l+SWfJAN9NZXJRN/hv2klfw4/8jfsoL3wm/N7Cluy4fYGNbLy2YF+Ff+jpXM
C/fmFfMn+E/+nlXMpw99wzmEtdM/nG3Yn7DH4RzD/8yQcG4MC+9VBvupJjCC
kSSSxChGM4axjONVzy3IRXkXn7AgvBdmpbgj/8ymsB59NTJzQj+e1+RoLoXn
q3X5IaxVrck4HiKRRkwixhpX+0y8XIn0HNO/H95FuTR35V/4kmRamxXisryb
NXzABCYyicmkkMoUptLGdwpzRd7Dpyykq1kZ7sm/8lXYa311HuBk2Fe1DjkZ
TVNSmebafU0HmgQ=
           "]]}, Annotation[#, "Charting`Private`Tag$384869#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1Hlgj3UYAPCfLSJSSOmQJpIcHUhRqZQKHYbQitIlaUNIJ9Kh0zG2sS22
ER2ikEmHdLhGRdvYusuRFFHJ0fF5/vj8nuf7vN/3/X3f7/u8b8rAjNT0KolE
Is3P5KREYnZyInEHLfnHeAsfMYVMpjKNLLLJYY65d9KKf40r+JjpvKx2F635
z7iST5jBXLW7OZsEX6l9yjvyh7iceuxWy2WefBDnUIWv1VaxXP4wnTmOPWp5
vCK/h3NJ4hu11bwrf4QrqM/vavm8Kh/MeSTzbcwXJ3ADKaxRe098lCs5nlKm
cQt7Hd8gvsiNNOMltdfEe2nDEWwikzS+c3yN+Aw9Yp1xDo3ZTA638j0FrDX/
ffExfqJL7AX57OAEyshiG/3jP5jFTvY5/zNxIlvpE/fKTH7mTCqYwXYG8gOF
Mce5r4tDaBvPjDyq8iVTuTnWat5a8VlSOZ0tTOc21jn+gTiGq2hAOdkM4A/H
Pxcn0ZfmsX61+eJ9tKNarEttnfgcPWlCidoKcSxXcyJ/qhXwhjyd8zmSH9XW
86F8HNdwEn+pFbJAnkF7qsd+x/OliIXGQ7mAGrGXsa/xDsU7Eb0fPR59G70Y
/RV9EPsX9xFrievHdXiTt1jE4hi73jAu5Kh4jrEfLIl5xsPpQM14RmpfsFL+
OF05mf1qb8c15ffTkVrRI2ob472Wj6cbp/C32tL4f/kILuLo6Am1EvF5etE0
+jfecfEJutOQA7EOcTL9OIviWLM4koupHT0Yey6+QG/OiN6J74L4JNdyKgfV
lsU9yEdxCcfwi1ppfCvkT3EdjTgU3464B/kDdOJYdqmVxXeCYuPRXEodflUr
j29CvNfxXkVfRv9ET8T/m/Mgl1GX39Q2x3dH/jTXcxqHY0/FKdxECyrJ5fbo
M4pi7aw093/tBsi8
           "]]}, Annotation[#, "Charting`Private`Tag$384869#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0nfAjVUcwPFHyMwmZJctklGIUEhUZlkhUSKUzEhlRiilKEr2TmZRFCpC
i4zKJpUVyhY+vz8+7/fec85z33POvYU79GjSPUWSJJX8OZ4ySf5JlSRfMo5O
VKMAJ8ydjHlOcZoz/Mt/nI1x677iLZ7iHgpyLtbrWt7maapTiPPxObqO8XSm
BoW5EJ+v63mHZ7iXImRMnSS79WMG04KLsRf9mnfpQk1u5Sbr9+gihtCSS7Fv
/YYJdKUWt5HJ+r36CUNpxWXrz+m3TORZalOUzNbv08UMozVXrD+vG3iPbtxH
MbJYv1+XMJw2/G/9Bd3I+3Tnfopz1dxF/Y5J9KAOJbhmLonzsInJPEddSpIi
9s5mPuB56lGKrPZxQJcygse5IfbOFj6kJw9QmmzWH9RlvEZbUsbe+Z4pvEB9
ypDd+kO6nJG0I1Wchx/4iF48yO3ksP6wrmAU7UkdZ+RHptKbBpTlRhLP/KTT
6ENDypEmzm7uZ51OXx7iDtLGOc1t1Rn042HKk470ZCBj/Hbi9xDfcXxvcWdx
D3Fuz2/TmfTnEe4kp/E/9FNe54m4hzi38V90Fi9yi/fHdDX5vT6hBbWR5tG/
9XPeoAK5jB3RzxhNh7ivuB/j23U2A2hMxdhHPMPNcU/W7NA5DKQJlcgd92Ru
p87lJZpSOfYQ92Rul85jEM24i7xxT+Z+1fm8THPujnPF/Zn7TRfwCo9SJfZi
/E9dyRieJF/ctfHfdSGv8hhVY3/G/9JVjKVj/G9jR/UL3oznvT+uayjg9Ukt
pPn1OhQQm4k=
           "]]}, Annotation[#, "Charting`Private`Tag$384869#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV0ne8jmUcwOGXjMie2Y6VTSR7l2OTFdmElB3ZeytbmWUUZRQZ2bPsndWS
TVb2ntf9x/V+n/v3vOdznvd+7qhWnet0ihGJRPL6iIodibwWJxI5ovMZxIfU
JQtZyUZ2cvAGOclFbvKQl3zkpwAFeZNCFOYtivA2Cfyvo7qAwbShHkVJ6N4x
/Z4htKU+6c3P6y9MpAfFSGR+XH9gKO1oQAbzC7qaSXxGcRKbn9CFDOMj3iej
+UVdw2R6UoIk5n/oIobTPvx+sxu6lVk0JJPZJV3LFHqFPTG7qzuYS0mSmv2p
ixkR9sn6oe7h47Cv1jd1W/i+61f4OuydPtODNCKz9X+6Ljyn65h8GfZan+i7
ul/L6atUpXd4R3pP39GdWlpjU5l54R3oC62kh7W8xqMapayT6V9aUZeEPdUY
RDMyvHN9pHsp4zoOn4Szorf0V0q5jsU34Tzocz3EB0RZX9b1fBXOjfVTPUCf
cL6s7+suvg3PT3Kzv/VHRtEhnEuz2/obs2kczrLZFd3AVPqGZySF+T/6E6Pp
SBOyml/VjUyjH2VJaX5SlzKGTjQNe00q9/7VZXxOZ5qFfSS1e6f0Z76gC82p
EPYzvJPw3sLeE83rvn9alzOWrrQgm/k13cR0+lOZNOZndAXjKGT9WPeF53Yd
lyp0s86jd3Q7c2hJdrPrupkZDKAKac3P6krG8ymtqEo1qlODmtSiNu+Rzt+d
01VMoDutyWH+v25hJgMpYPZAd/Mdxawj/B72R+NTnTrWLwFvf5Do
           "]]}, Annotation[#, "Charting`Private`Tag$384869#5"]& ]}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> 
     NCache[{None, {-Pi, Pi}}, {
       None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
     FormBox["\"LQR feedback solution\"", TraditionalForm], 
     PlotRange -> {{0., 3.12499993622449}, {-4., 4.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
       "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.863702134579542*^9, 3.8637021627135525`*^9}, 
   3.8637025210160646`*^9, 3.863702578124817*^9, 3.8637026714539957`*^9, {
   3.8637027226726294`*^9, 3.8637027640764*^9}, 3.8637029884806967`*^9, {
   3.8637033266226506`*^9, 3.8637033354478307`*^9}, 3.863879327529692*^9, {
   3.863884217207935*^9, 3.8638842652235885`*^9}, 3.8638842967265196`*^9, 
   3.8638860360506268`*^9, 3.8638906095889077`*^9, 3.863890848019706*^9, 
   3.8638910663699183`*^9, 3.863891132659732*^9, 3.8638911691100826`*^9, {
   3.8638913595922036`*^9, 3.863891384033392*^9}, 3.8638926082491283`*^9, 
   3.864131525163704*^9, 3.8641416796563787`*^9, 3.864143125130576*^9, {
   3.8642366677575245`*^9, 3.864236679721656*^9}, 3.8643991189557676`*^9, 
   3.8643998035201178`*^9, {3.86440821572911*^9, 3.8644082391544905`*^9}, {
   3.864412158578727*^9, 3.8644121612098713`*^9}, 3.864740161270382*^9, 
   3.864740548133564*^9, 3.8647411134926176`*^9, 3.8647411481275325`*^9, 
   3.864833837652205*^9, 3.8648362862656536`*^9},
 CellLabel->
  "Out[961]=",ExpressionUUID->"03f4b302-9cb5-4d8e-8007-4a77d652049e"]
}, Open  ]],

Cell["\<\
Understand the performance of the functions wrt random initial conditions\
\>", "Text",
 CellChangeTimes->{{3.863702871824973*^9, 3.86370289295422*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ffCartPendulum", "[", 
   RowBox[{
   "ICs_", ",", "n_", ",", "\[Tau]_", ",", "\[Tau]1_", ",", "A_", ",", 
    "order_", ",", "maxIter_", ",", "InitGuess_"}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "data", ",", "xdot", ",", "f", ",", "\[Theta]", ",", 
      "\[Theta]dot", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", 
      ",", "\[Lambda]4", ",", "\[CapitalDelta]t", ",", "bcs", ",", "eqns", 
      ",", "sv", ",", "froot", ",", "xff", ",", "xdotff", ",", "xff0", ",", 
      "xdotff0", ",", "\[Theta]ff0", ",", "\[Theta]dotff0", ",", "uff0", ",", 
      "\[Theta]ff", ",", "\[Theta]dotff", ",", "uff", ",", "\[Lambda]1ff0", 
      ",", "\[Lambda]2ff0", ",", "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", 
      RowBox[{"xGuess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["xGuess", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalDelta]t", "=", 
      RowBox[{"\[Tau]", "/", "n"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{
        "x_", ",", "xdot_", ",", "\[Theta]_", ",", "\[Theta]dot_", ",", 
         "\[Lambda]1_", ",", "\[Lambda]2_", ",", "\[Lambda]3_", ",", 
         "\[Lambda]4_"}], "}"}], "]"}], ":=", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{"xdot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
              ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", "\[Lambda]2"}], 
             ")"}]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "\[Theta]dot", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"A", " ", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"A", " ", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
                ")"}]}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], 
             ")"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "-", 
           RowBox[{"A", " ", 
            RowBox[{"\[Theta]dot", "^", "2"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], ",", "\n", 
        "\t", "0", ",", "\n", "\t", 
        RowBox[{"-", "\[Lambda]1"}], ",", "\n", "\t", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"A", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "3"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "5"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
             ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", "A", "+", 
              RowBox[{"A", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Lambda]2"}], "+", 
              RowBox[{
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}], "+", 
              RowBox[{"3", " ", "\[Lambda]2", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "-", 
              "\[Lambda]4", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "A", " ", 
                  SuperscriptBox["\[Lambda]2", "2"]}], "+", 
                 SuperscriptBox["\[Lambda]4", "2"]}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["A", "2"], " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{"A", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "A", " ", 
               SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], "+", 
              RowBox[{"2", " ", "\[Lambda]4"}], "+", 
              RowBox[{
               SuperscriptBox["\[Lambda]4", "2"], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"2", " ", "A", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", " ", 
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]2"}], 
                 "-", "\[Lambda]4"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Lambda]2"}], " ", "\[Lambda]4"}], "-", 
              RowBox[{"A", " ", 
               RowBox[{"(", 
                RowBox[{"\[Lambda]2", "-", 
                 RowBox[{
                  SuperscriptBox["\[Theta]dot", "2"], " ", "\[Lambda]4"}]}], 
                ")"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
              RowBox[{"A", " ", "\[Lambda]4", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}],
         ",", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"4", " ", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", "A", "-", "2"}], 
            ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"A", " ", "\[Theta]dot", " ", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Lambda]2", "-", 
              RowBox[{"\[Lambda]4", " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}], ")"}]}], 
         "-", "\[Lambda]3"}]}], "\n", "}"}]}], ";", 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Plain"], 
     RowBox[{
      StyleBox["xGuess",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      StyleBox["=",
       FontWeight->"Plain"], 
      StyleBox[" ",
       FontWeight->"Plain"], 
      RowBox[{
       StyleBox["Table",
        FontWeight->"Plain"], 
       StyleBox["[",
        FontWeight->"Plain"], 
       RowBox[{
        RowBox[{
         StyleBox["If",
          FontWeight->"Plain"], 
         StyleBox["[",
          FontWeight->"Plain"], 
         RowBox[{
          StyleBox[
           RowBox[{"i", " ", "!=", " ", 
            RowBox[{"-", "1"}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{
            SubscriptBox["xGuess", 
             RowBox[{"i", "+", "1"}]], " ", "=", " ", 
            RowBox[{
             SubscriptBox[
              StyleBox[
               RowBox[{"x", 
                StyleBox["Guess",
                 FontWeight->"Plain"]}]], "i"], " ", "+", 
             RowBox[{"\[CapitalDelta]t", "*", 
              RowBox[{"f", "[", 
               SubscriptBox["xGuess", "i"], "]"}]}]}]}],
           FontWeight->"Plain"], 
          StyleBox[",",
           FontWeight->"Plain"], 
          RowBox[{
           SubscriptBox[
            StyleBox["xGuess",
             FontWeight->"Plain"], "0"], " ", "=", " ", 
           RowBox[{"{", 
            StyleBox[
             RowBox[{
              RowBox[{"ICs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"ICs", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"InitGuess", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}],
             FontWeight->"Plain"], 
            StyleBox["}",
             FontWeight->"Plain"]}]}]}], 
         StyleBox["]",
          FontWeight->"Plain"]}], 
        StyleBox[",",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"n", "-", "1"}]}], "}"}],
         FontWeight->"Plain"]}], 
       StyleBox["]",
        FontWeight->"Plain"]}]}], 
     StyleBox[";",
      FontWeight->"Plain"], "\n", 
     RowBox[{"bcs", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"x", ",", " ", "n"}], "]"}], "==", 
         RowBox[{"Subscript", "[", 
          RowBox[{"xdot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "0"}], "]"}], "==", 
         RowBox[{"ICs", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]dot", ",", " ", "n"}], "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Theta]", ",", " ", "n"}], "]"}], "==", "\[Pi]"}]}], 
       "}"}]}], ";", "\n", 
     RowBox[{"eqns", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"bcs", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], "==", 
             "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], " ", "\[CapitalDelta]t", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], "]"}], "+", 
                 "\n", 
                 RowBox[{"f", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}]}], "}"}], 
                  "]"}]}], ")"}]}], "+", "\n", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"x", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"xdot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]dot", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]1", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]2", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]3", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}], ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Lambda]4", ",", " ", 
                  RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"sv", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], ",", 
              RowBox[{
               RowBox[{"xGuess", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"froot", ",", "data"}], "}"}], "=", 
      RowBox[{"Reap", "[", 
       RowBox[{"FindRoot", "[", 
        RowBox[{"eqns", ",", "sv", ",", 
         RowBox[{"MaxIterations", "->", "maxIter"}], ",", 
         RowBox[{"EvaluationMonitor", ":>", 
          RowBox[{"Sow", "[", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "n"], ",", 
                   SubscriptBox["xdot", "n"], ",", 
                   SubscriptBox["\[Theta]", "n"], ",", 
                   SubscriptBox["\[Theta]dot", "n"]}], "}"}], " ", "-", " ", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "\[Pi]", ",", "0"}], "}"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SubscriptBox["x", "0"], ",", 
                   SubscriptBox["xdot", "0"], ",", 
                   SubscriptBox["\[Theta]", "0"], ",", 
                   SubscriptBox["\[Theta]dot", "0"]}], "}"}], " ", "-", " ", 
                 "ICs"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}], "]"}], "+", 
                    RowBox[{"f", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", "i"], ",", 
                    SubscriptBox["xdot", "i"], ",", 
                    SubscriptBox["\[Theta]", "i"], ",", 
                    SubscriptBox["\[Theta]dot", "i"], ",", 
                    SubscriptBox["\[Lambda]1", "i"], ",", 
                    SubscriptBox["\[Lambda]2", "i"], ",", 
                    SubscriptBox["\[Lambda]3", "i"], ",", 
                    SubscriptBox["\[Lambda]4", "i"]}], "}"}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["x", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["xdot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Theta]dot", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]1", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]2", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]3", 
                    RowBox[{"i", "-", "1"}]], ",", 
                    SubscriptBox["\[Lambda]4", 
                    RowBox[{"i", "-", "1"}]]}], "}"}]}], ")"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}],
               "]"}], ",", "\"\<Frobenius\>\""}], "]"}], "]"}]}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"xff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"x", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"xdotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"xdot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]ff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Theta]dotff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Theta]dot", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]1ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]1", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]2ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]3ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", 
     RowBox[{"\[Lambda]4ff0", " ", "=", " ", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Lambda]3", ",", " ", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     RowBox[{"uff0", "=", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"A", " ", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}], "^", 
                 "2"}]}]}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\[Lambda]4", ",", " ", "i"}], "]"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"\[Theta]", ",", " ", "i"}], "]"}], "]"}]}], "-", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\[Lambda]2", ",", " ", "i"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "/.", " ", 
         "froot"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
        RowBox[{"InterpolationOrder", "->", "order"}]}], "]"}]}], ";", "\n", 
     "\n", 
     RowBox[{
      RowBox[{"xff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"xdotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xdotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]ff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]ff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "\[Pi]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"\[Theta]dotff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]dotff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"uff", "[", "t_", "]"}], ":=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"uff0", "[", "t", "]"}], ",", 
           RowBox[{"0", "<=", "t", "<=", "\[Tau]"}]}], "}"}], "}"}], ",", 
        "0"}], "]"}]}], ";", "\n", "\n", 
     RowBox[{"{", 
      RowBox[{
      "xff", ",", "xdotff", ",", "\[Theta]ff", ",", "\[Theta]dotff", ",", 
       "uff", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.863893336562357*^9, 3.8638935104547806`*^9}, {
   3.863893544100028*^9, 3.863893549383339*^9}, 3.864135408269006*^9, {
   3.864142771556004*^9, 3.8641427819726334`*^9}, 3.8642366861025925`*^9, {
   3.864739935175744*^9, 3.8647399858885136`*^9}, {3.8647400853146915`*^9, 
   3.8647401070617313`*^9}, {3.8647401401521406`*^9, 3.86474014471668*^9}, {
   3.8647405605585876`*^9, 3.8647405780110025`*^9}, {3.864836261999449*^9, 
   3.864836292577626*^9}, 3.864836774400854*^9, {3.8648369006912866`*^9, 
   3.8648369199401035`*^9}, {3.8648369783853292`*^9, 3.864836986117846*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"af3ea33d-8e3a-4566-b4c0-08bbf9c4fe8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["\[Tau]",
    FontWeight->"Plain"], 
   StyleBox["=",
    FontWeight->"Plain"], "5"}], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "4"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotMax", " ", "=", " ", "2"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Min", " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Max", " ", "=", " ", "\[Pi]"}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotMin", " ", "=", " ", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"\[Theta]dotMax", " ", "=", " ", "2"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"xdotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"xdotMin", ",", "xdotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]Init", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]Min", ",", "\[Theta]Max"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"\[Theta]dotInit", " ", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]dotMin", ",", "\[Theta]dotMax"}], "}"}], "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"ICs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "xdotInit", ",", "\[Theta]Init", ",", "\[Theta]dotInit"}], 
    "}"}]}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}], " "}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}], 
   "\[IndentingNewLine]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   StyleBox[
    RowBox[{
     RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
     RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
     RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
     RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
    FontWeight->"Plain"], 
   StyleBox["}",
    FontWeight->"Plain"]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.863702943662017*^9, 3.863703035828568*^9}, {
   3.8637035036430883`*^9, 3.8637035037600527`*^9}, {3.863703942891737*^9, 
   3.8637039537012815`*^9}, {3.8638793561155577`*^9, 
   3.8638793562315187`*^9}, {3.863890389284317*^9, 3.8638904368171277`*^9}, {
   3.863890551127593*^9, 3.863890597328827*^9}, 3.863890716823636*^9, 
   3.8638909523833485`*^9, {3.8638911861186466`*^9, 3.863891231675086*^9}, 
   3.8638912749332604`*^9, {3.863891409492258*^9, 3.8638914236697264`*^9}, {
   3.8638935298715763`*^9, 3.863893532749655*^9}, {3.8638935699717607`*^9, 
   3.8638935749001856`*^9}, {3.8638936191810327`*^9, 3.863893634085269*^9}, {
   3.863893921803315*^9, 3.86389396796556*^9}, {3.8638940391558075`*^9, 
   3.863894080084726*^9}, {3.8638941355729923`*^9, 3.8638941356839547`*^9}, {
   3.86389427077378*^9, 3.863894270855754*^9}, 3.864132937101755*^9, {
   3.8641329740867853`*^9, 3.864132993387539*^9}, {3.86413303407837*^9, 
   3.864133049119502*^9}, {3.8641330991942964`*^9, 3.8641331354165735`*^9}, {
   3.864133240558546*^9, 3.8641332475682774`*^9}, {3.8641337526108294`*^9, 
   3.8641337885471992`*^9}, {3.8641338280264225`*^9, 
   3.8641338296229057`*^9}, {3.8641417184758177`*^9, 
   3.8641417253026075`*^9}, {3.864141818165553*^9, 3.864141824729431*^9}, {
   3.8641420479491887`*^9, 3.864142073292987*^9}, {3.864142809081861*^9, 
   3.8641428223905535`*^9}, {3.8641428662393637`*^9, 3.864142907413038*^9}, {
   3.8641429688551536`*^9, 3.8641430039408007`*^9}, 3.8641430624478636`*^9, {
   3.8648339813450484`*^9, 3.8648339857546296`*^9}, {3.8648340453384914`*^9, 
   3.864834073060585*^9}, {3.8648369253483677`*^9, 3.8648369307806225`*^9}, {
   3.8648369722822905`*^9, 3.864836975137374*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"3024c605-13d1-4af1-8ddb-6b0488dd66d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "1.5467965879126844`"}], ",", 
   RowBox[{"-", "2.267374441510656`"}], ",", 
   RowBox[{"-", "1.1691462257419376`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}, 
   3.8642366895364823`*^9, {3.864399127566967*^9, 3.8643991927177773`*^9}, 
   3.864408290535779*^9, {3.8644084656048393`*^9, 3.864408535203203*^9}, {
   3.8644121372506638`*^9, 3.8644121664991503`*^9}, 3.8647400020413437`*^9, {
   3.864740112446008*^9, 3.8647401315408964`*^9}, 3.8647405821656713`*^9, {
   3.8647411204603877`*^9, 3.8647411572666073`*^9}, {3.864833847774952*^9, 
   3.864833885588805*^9}, {3.864833956755945*^9, 3.8648339894734354`*^9}, {
   3.864834046285186*^9, 3.8648340736853848`*^9}, {3.864834135424553*^9, 
   3.864834160853384*^9}, {3.864834242975005*^9, 3.8648342537785344`*^9}, {
   3.864834347334482*^9, 3.8648343648978415`*^9}, {3.864834756360094*^9, 
   3.864834773550572*^9}, 3.864836297439065*^9, {3.8648363491054688`*^9, 
   3.8648363583734913`*^9}, {3.8648364042357593`*^9, 3.864836411292493*^9}, 
   3.8648367773808966`*^9, {3.8648369316793327`*^9, 3.8648369593094573`*^9}, 
   3.864920880960232*^9},
 CellLabel->
  "Out[359]=",ExpressionUUID->"20d08a47-13e7-49d1-aba9-f2247d737285"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"30\\\"}]\\) iterations.\"", 2, 362, 30, 17534376668544537073, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.864920881623017*^9},
 CellLabel->
  "During evaluation of \
In[349]:=",ExpressionUUID->"829e472f-c07a-47d0-bf5a-30bff648d661"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"t$354485\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"t$354485\\\", \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"3.251875416797338`\\\", \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.071670242580928`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.000010886398106514907`\\\"}]\\) for the integral and \
error estimates.\"", 2, 364, 31, 17534376668544537073, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8649208824557457`*^9},
 CellLabel->
  "During evaluation of \
In[349]:=",ExpressionUUID->"edfd5e57-3090-4af9-a3e6-1c486f1b4bb9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{449, 2864, 375, 376, 377, 378, 379, 380, 381, 382,
                 861, 705, 585, 501, 448, 419, 886, 730, 610, 526, 473, 918, 
                762, 642, 558, 383, 862, 706, 586, 960, 804, 502, 928, 772, 
                1003, 652, 979, 823, 1016}}], 
               PolygonBox[CompressedData["
1:eJwVzz0sg1EAheFLw2IpJpsSm/gfjBZMfmIrWzW6MSFhZaBqbseaqBq7WSS0
HQwGI2oSC2IwoBLPN7x5zzn3u8n9EqmNpfXWEEILMhjuCGEIc8Zv4zUOYiG8
6ZtIIGmbtp3Jo3jU83pT3sOpvqM/yWvoQlmPIy9nnafkqjyPK3kAP/YityFn
v+dJ3NgP+d32wlt8yyP4Qp9e4R58oKg/8FT0Jiy7P8Ml+zOP8SX34jN6p/MC
/9lfeZ/veCL6R2e73LBlUJcH0S1fcCcK8pHvVuWavIBf/URvx7Fe1bPR++Rt
9GPFNms7l8fR0EvIIW2v2xbR1Gv4B60QO74=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{344, 2865, 2862, 709, 865, 394, 529, 613, 733, 
                889, 423, 476, 560, 680, 836}}], 
               PolygonBox[CompressedData["
1:eJwl1XdQ13Ucx/EfUGmidVeuXJ0NZ2bTppZN24lluUe5B86unWVpU0WgAZVl
akMFRdyDrg2oaI6wrs6FW1O0zLq0x/v648lrfD7f7+87Pp8vjfumpw1PTiQS
SdjuT+vUROIyPMGPxRiMxnQU4Rg6OOBLdE9JJEbJ5agh98EWjNV/rLuJ/oKP
dHVpIc7nR2M/JsqrzDuKO+UidNONlFvxL+IEsnU/6d7hz+ZnozrfG+UYE79h
fBpfh1+ARvwo7MMEeaXxN/gUfhoq5TvkVegqj5Bn8Y34ZbiEv5KWYRz/F7L4
zebdENeDt3Vn0S+Qyrek36MXvzPmxL3G7znmH9oOP+NDfW1agIb8SOzFK/IK
c4/gdnkluujS5U2oJvfE5ri3OI9uOQ7jNt0KPKofLrfkX8BxZOo26rL5Gvzn
OJNvQb9DD34H3RTXQj8w92/aFlsi6w/RWpiPBnJrWhrPjd+Dl+O5Oe51Pjmu
Db/LF9Ii3Kpfjkf4YfqZfEN+KVrwz+NPTJU3GM/iq/OfoWqsNWzECPl94/X5
dOzG+DiP7hBukZehs26o3Jx/Dn8gQ/ejLpNP5T9FFf4obY5v0U3eEOfmc82t
x8cG2YWXdEt0r/FJ8VxwUG4vL8XD8hB5Bt8g5qIZ/yyOYYq83vj1sY4wVVeN
zsIZfDP6Dbry2+Na47dpjmNO0BtRHvevP0hrYh7Oi/PTS1ESz1euoBWxh+hi
xx+nbeKceDX2BU3EuXDA+AWxF3GzsSV4iB8cz5P+hk909eNcaMpfQdfimXh+
mMyvMz+DPxDrCzNxutyUfo0u/HoM498zty4/NPYKxukW6fbHd0NejE66QXIZ
Tou1jXVxjP5d3ULsQzvdIqTpB8Z3AoXYi7b6hehobIDchH8alZgU96BLiXWJ
MgyJfa3L5c/l81GHb0WL4/3GXom9Fd8Z866Od4qJsYfpKZpL9xirpI3j2xPv
Tr+NFtIHaX/j/9L2+BXT9YdpvXgOuDj2A70ca/BUrHV6hL4VneOviz2LKbqq
dAaS+Sb0K3Tm12Iwn21+Dn8On4fa0cc6i70nFxifwJ9Ejrw7vnP8Ajwg95Mv
4p+M68SbutW6yXyVWB9Iij2ANRgkZxmvFT7uPfZhfD90u2IPyAW4X/e4XBr/
gGLdYTUG6jN1NcNja+yjWO+6irh3eT7u0z0ml+AUOulKMSD2l5yPnbhWNw/3
6vvKxTiJNF0J+usz5DzswDW6fNyj7yP/EO8LHXXF6BfPXZ6b9P//zTa6PNyt
7x3PBXOwLdaIfi7uMtZL7okemITZ2IqrjM9BB3O6y/8BMlEHTg==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl0nl8z3UcwPFdbNPKUXRtaa52ZLNWMR3YqBUm0zZCoRIdo1ylRIcUnTrp
VCpE5SgKHUp06aCTCl2KSpFylJ7vR3889/p+3r9j3+/n88seNKyyNjEhIaHG
n2g9f1bpXQzmdIpJIpkU6lCXVA7w/tU6lYso53jSyPDa23o3QziDE8g0/0Kf
4Er6kM6B5u/oPQzlTE4ky/xLnclVnBP3yUHm7+q9XExXcsy+1+e4kbYcZbZe
n2QsfSkw26ovMCWeg/pm7+l9XBLPYf27LqUbudY/6PNM5GTr3foG7WhqvUGf
otT1fr2aEte79LXYA9d16ee6ULfpi3RxncStrk/VvVqpK+O5NC3x/zPKsG6g
72t3vV876j/aSy+NPdY/9CxdFmeoKVTR3TpPf9QeOl87x9lzk+tTdI++Gfvv
OpUS10frV/o0ZfFD4Rppr3/p6/SnjfUvupjb4kxpaLZGH+CyOFPrHbqcCvKt
t+gCJsV3km32tc5iHOdSZParLuH2OH8amX2g06iNZ+Ikmpl/o7O5lvPifDnY
/EOdzrDYozhHmptv1DmMZ0DsM4eYf6QPMpyesUfxTDT22sf6EJfHecXZxT3F
/4nPxntowqEcxuEcwZFkkhW/z/jtxB7Hc8e9x/3E53z/Wn2YK+J86UCL+D6v
rdNHGMHZ8TuI18w36TNMYCAt43+bf6KPMpIqOsVr5pt1LtcxiFZxn+af6mOM
oppjzX7ShdxMabzX7Fudx/Wcz3Fmv+lL3MEx8cxmn+kMRtPWeqe+Qg2trX/W
RdxCWXzO7Dt9lhviXK3/1hVcQLH1dn2Z01wnc2fske7Tt+jmOp2c2HP9XCv0
8Xh+/Tf2TsdoO/0zzlhf1XKtQzW9rSfTmQvJpQt55MfexDNQQCFtKIr7iv3g
P37vkNg=
               "]]}, Annotation[#, "Charting`Private`Tag$359626#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nccjVUcx/GLpp1SokJbdgkRoVRESmRnq+wtEdllpLJDyN57772JlJG9
KSsJDfX+vfrj8/qO8zz3PuOcc2/WOs3KN02SSCSmJE0kKjOvJEskJvF5cFCe
iPa6Q3J93IPeutq69XyuFIlEWXpTtw6f6y/IbZAVVXQldZP5vDgkD5X/5rtj
kvyxfJhvgHSYJqfFUL6P8Tr8Bv5NrOafwJ/6MfR29NPvoQXjmvS96UXdadqW
bqN5cA2PyvPpg7iEMXGftFhcE6o6/9Vk/z+Po/RZuoxmwZW4TuPD6D/6s7QH
/Z7mi3s01oEe0b2PTXwO3MtPp/dgGN/XcXX5jXw5/CV/J9+BL+QNcp+4Pr4d
HkM13Wu6qfxzOCJPQT/U02/SvYW/5Y3I7b1Up68bm6bPF/cjT8UXqIH3UBOl
HDPd+PM4Jk9Df9RCaWMz9PlxXJ6OL1Ffv1n3Nv6RN8WcwBv6mboCOCHPwFdo
oN+iK49b8uZ4ryijn6UriJPyTHyN9/Vbde/gX3lLPDOU1c/WvYBT8ix01B2V
P8B9GKD7QLeNr4AEtsZzwpv6OXKhmB/ybHyiOyZ/iPQYqPtQt52viCQYK9+J
/jGfjPflL/Mf4fFYG7pyurl8YZyRv5Fv8T0xR+4kH+cb4n7MkNPhG36Q8Yb8
Dv5drOGfRFJ+HL0LX/I/0hfi2uLdx5yM76Lt6XaaF3/EGpEX0Ixxnfgu1h4t
HnMXDZz/Fp0X75y+SJfTrPgNZ40Pp//qz9FedBd9Pu7RWGd6QtcIm/mceICf
GfMdw/nBjmvE7+QrIRl2xPyL7+A/xpOxVnRv6+bzReL75HkYEu8R5Y0t0BfF
eXl+7CForP8+9i3chp3x3vCOfqH8En6RF+BT3Um5MTJgmK6JblfsUVjLPxX7
CT+e3o1f8VWs71gP/FW+Q9xD7AtxPL+QZsJY/jAtgYaOr0AX6YphRew78Xn6
ETSB8/jM2G6aH9fjmo13oadibtMmdAvNhd9jz5Jn0ftwASPkffHucDPmkfOb
0t2xVmMvo+vo07G38BNocnzN/0QLxf3Heo7P13XE01gkP4Rx8X6NV+QX88Vx
QR4pJ8HncazclT/NN0VGDNc10/0Q+xbW89ni+cUakifSFBgQ9x/7A3+N/wTZ
4h3p3tUt4UvgorwY3XRn5GbIhBG65ro9fHXchUlySgzkf4i9JNYD3wnPYLH8
MMbzTYxX4pfyL2Ml/xgu6b+NtYfe+iVy91gTfPPYS/jc8Yz42TQ9LmKkvJ8W
wZ+RndeC/hh7Ia1BN9BnYn7xk2kqDOL3OHZAzAO+M7LH89RV1i3jX8FleWlc
G1rqf9K9h+SxL8QzRxX9crkkrsjL0EN3Tm6Bh2Mvku/Ht/wBWhR/YZRjW9G9
+pO0Jt1Is8f74qfQ1BjM76WF4xqcM5De0H0aa5B/DjniudFHMCGem+Oq8iv4
V/GbPEpOhj6x98g9Y13wLfEI5saeEtfFjzbemt/H10JKTJXTYEhcj/FBsQ74
LsgZ96urplvJv4ar8gr00v0it0JmzJMzYDT/M30JYxzXhu7X1UaqWGvx3FFd
v0p+Hb/LK+P3O55dXGOch7bI4ze4Hf0I7eN/Tvw/iN+r+M2J34P4HfZZq31O
KVyTV2FsnK8/oKuD1DGvdINjXvFdkSvmSfyG69bwpbGKfzzmu340vS3uE31j
LdAC8Z7i+4x/FvuRvjWyYJyune5nvi7SxNyIfTP+I+jXym/gurwG42OvirUf
6zLWR8yzeIfxfOPzUct565xTBjfktZgQz0N/UFcPaeOZx14fc5DvhtxYKmfG
RP4IfRm3Ys9x7H+9lHdP
               "]]}, Annotation[#, "Charting`Private`Tag$359626#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XfcTnUYB+DntfesyKbssvdICaUkIVFWdoiyyypEoSgjo5QtTe1QZlbZ
e2/KTKIy0nX/cX2+3/s+PO/jnPN7FWzXs3GPpEQiUSVZInEreSIxI2UiUYgV
KRKJl3mUsiRIIhnJSUFKUpGaNKTlA3/3LlbqA2lAOdLxof3drNIH8Rjl+d6u
Bvv1iXQkPTPtCrNaH0xDKvCDXU0O6JPoRAZm2RXhZ30Ij7PR/AR/6B9RkcXm
+zioT6Yz+81t+E//jozMNhdljT6Uk/pzpKGReZNszKW4D6kSidH6Qv2y7M8d
ZLOfLCvZL5G1yGN3KO6jHGUuKd81n9NfiPtnziyzyImyrOzi+gG9LQXMt+J+
yzfNpeT35n/0QXEPzLnj58tpsoLM5PocvRhr9VtyOK/op2RX0sa9Mm+WTfhT
/5i/9AHkoLJ5qbyfw/oUzusvxveN+2M+KJ8lwQ/mzMzVi7NOf5XGVOFHuwc4
ok+lK1mYZ1eC9fowmlCVrGRjftw3NujDaUo1frKrzVF9Gt3IzgK7e/hFH8GT
bDE35bL+CdVZZn6QY/p0unNbvDt29/Kr/hrN2Gp+kr/0T6nBcnMdjuvvcUHv
RVaeNx+S7UhisflfOTjeCW43L4znycY4c57bCH2kflp2Ix0Z7d+WT9lvk83I
Z3clzqIcE99Vfma+or8U58icU2aPd02WkzVdX6HXJa/5RJxr+XrcK/m++aLe
O86tOVv8O+Qk2cO1w7I9yeJ72b8ll9hfk0PiM+MdjHdIlmaTPormbI/vz1X9
c67qL3Mnt/msKbK8vM+1lXo9Tuoz6EmOeGZ2Zdisv04Ldpib87f+BbVYZX6I
U/H7iT/0PnEv4ryZj8gOJCe9nzlOLrW/LodS1C5fvP9yuqwY9zKeeZxNcpm3
mJPka/GeyzfMv+ndKWhOLzPJd+JeyKdd36m3IL/5H3MaOda8SP9bDozPjvfC
fmqcOfvV8mFO6ynj5+gf6pdk37h3cRbNR2VHUvCj+Uac9fhZcY/Nn8U7wFZ9
NL/H+0kGnjHvkk/zr/4lD/CzuT6/6TPpRa54fvGs2KaPoSW743O4pn9FbdaY
H+F3fRa9yR3Pya4C2/WxtOJB8pCXfOSnAAUpxKJ4DuzQ36Q1dVhr9yhn9Nn0
4a74N9hVYqf+Fm2oyzq7BpzV59CXu+M721Vmlz6Otuwxt+S6/jX1WG9+jHP6
XPpxzNyJlPxkLhx/Xq/Cbn08Z+IMxVnmWfNe2Yob+jc8xAZzQ87r8/hT7xfv
A/3Nx2VnUsVz8y6Ml8vsb8pXKWZXQOaU78ki8dmyKrnt9piTyZHmEvE7xXxW
70mh+D9DZpYT4pzJdq7v01tzU/+Wh/nF/DgX9PkMoGhct6vGXv0d2lOfYhSn
BCW5h3spRWm+83eqs0+fQAce4Ve7RlzUF/ASJ8xdSM1y839yWJy5eM/jd1g8
d1nGtf8BjKYSFg==
               "]]}, Annotation[#, "Charting`Private`Tag$359626#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02OgXFcUgNGJzdpJmza129hmY9t246ax2SRtjMa2bdu2bWOdH+vt/d3z
3rzBneRVGhZpECUSiTz1I1XMSGR5rEikJBGW6m7U5qj+k485rCeQmhW6FFFY
prtThzSsdK00UVmue1CXtKxyrQzRWKF7Uo90rHatLNFZqXtRn/Ssca0cMVil
e9OADKx1rTwxWa370JCMZCIzWchKNrKTg5zkYp2/q0As1ui+NOKYbs4nHNET
yc16XZHYrNX9uGXvyS/c0I05bm9BMo7qSeRhg65EHNbp/jThhG5Jco7pyeRl
o65MXNbrAdy29+JXbuqmnLS34lPejB2JzDK/NI87i22O0/mZop+Z/5KJJzof
m+xViMcGHdXfjLTn5B99x+zNb9zSzThlb81nnNBTeW7/j8w81fnZbK9KfDbq
gdy19+F3but4/t9E+x/hntOnzTbh/XA9hfmWOds86WwaBdiiq5GATXoQzTmj
2/I5p/R0CrJVVychm/Vg7tn7koo7ugVn7X/xBad1HP97vL0AM/QLcwhZeKYT
O59mLxaev95m1iARbzibaW5xPZp9VHheZi7zA3Nh+Cyc3Tf7hffStdTmO+Zc
82vzrvP45iSd0iwUvpPmEvN7s6Xzc/Z24fPXKc23zTnmV+YZ53HNCeE1mQXN
j8zF5kxnL82hZOV91xeYz11PYp9uL04hvd2sSWK26ujOR9tzh89cPzD7k4Z7
OoHzyfbC4XtkX2r+YLZydt7+d7hHOatnUZgduhZJ2KaH0JoLun14PZzTsynC
Tl2bpGzXQ3loH0Ba7us2XLR3CO8n5/UcirJL1wmfEzv0MB6Fe550PNBtuWTv
yDdc0HN5ZR9GNl7oYuy21w3fQXbqGF7vGHsehuvH5kDS866zeeExzYfOEppT
dJFw/+nLZie+5aKeR8TvDNfZeamLs8deL3xH2KVH0I4rujPfcUnPpwR7df1w
j7Bbx/SYY+15GamfmINI4XoG8z1zfnge5iPnicypumj4DPVVs0u4F7msF1CS
fbpBuJfZo0fRnmu6a7gXuKIXUor9umF4X9irR9OB0hxwrVF4LuzTY+hIGcpS
jvIcdN443Mfs12PpxHXdjR+5qhdRgUO6SfguckDH8tr+t+fjQ/ui8P6Fa86e
2geTkce6Mzfs3fmJa3oxFTmsm4bH4KAeRxcqUZkqVKUa1alBTY74/Wbh+8kh
PZ6u3NQ9+JnreglRPK8ROgevdFI9w16CZPZl4fWatZy9Biu1Dcc=
               "]]}, Annotation[#, "Charting`Private`Tag$359626#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Xf8T2UYxvEvIaOlvUtLu0TZu0hGsvcsbZrKLqNoGRUNtJMWGio07NkW
WihKS4uiMnpff3xe93Vd9znf3/md53nuU65Hnxa9ixQKhZ1FC4UKJQuFtqUL
hedKFQrlsJY+C/PkM9U9cZt8i3o+RsgfUL+TlSlTKHRRf+Cr4lh+t/4K+igc
zI/X30E3xcl8T/1+9DL5nnx9dQNfKffwG/Xn0vujLH+3/jb6QkzRe079R3YD
fqVr4wB6lVoej9PnuK4dPZU+DvP5O/Cg7Hu+Kwq4VNZftpw+H9/l91ER7eXP
y47HAv5OjJdt4ruhCC6TDZCtoC/A9/y8PA/u4afyU+l/6RtxIFbnPeAJupJ+
B/oF+gSso8/GQvkbakncLt+qXoCR8gnqD7K9vJvu6o98NZTji/Lv00fjEH4C
v5NuhlP4Xu4fSL8vL8k3UDfy5+YefpP+fPrAvH/+Xv3tdKO8C73n1f9kN+E3
ug4Ootfk9/Fk3ov7WuQ3Xd9RfVF2Ihbxb/KlMJQfxT9E/0j3wB64XDZI9gHd
MPuKfyHIdvA342CcJ+ske4k+CYv5u/Cw7Ce+J4rhCtlg2Yf0hXlX/IuojM7y
l2XlsYS/G1diiPwjWSP8xL+EKuginyY7GUv5e3AVqqKr3nT5KVjG34urUQ3V
UQM1UQu1UQfd3DPD9adiOX8frkFddNd7RX4aVvCjcS1uk38suwg/8y+jHnrI
X5WdnvXnx+AR2c/Z4yiO3rLbZZ/QjfELvyDrh/v4aXk39E66Lw7B5/ypeIqu
r9+Tfo0+Ax/wb/GlMYwfyz9K/5JzkXdHV0eJXKseg0PtjYf4XfTF6OOeoeqn
slJ6TXIG+fNyPb9Zf2HmSM4UP1r/H/oinMRPz/rQu+R787eov/N1cRx/KP8F
fRoO45/mi6otM8vce6n6uuxMrKcrZK/IZ6llMFw+jp9Ib6Z7ZWbhw8w6PExf
pz+MXkk3zUziF+X8YQw/I+tE76ZvxWGZFbLLZDPps/ARfz8myX7NOcj5xPWy
4bLP6GY5c/wraIBe8jdkZ+PjzGRMlv2WfZ/3mRkpGyFbRV+cd8O/ioa4XP6m
rAI+yWzEY7Lf+StROjMrc1O2mm6OP/jXME1WQD/Z4Tlbsiv4tzJ78Sk/m98L
I/jx/OP0H/RVKJP/OTMLj2SeZL7Sa+hLMkfpyvhTvjj7JjPJuo3V+5dunHXT
m64WwT56/fN8dD0czx/Bf0mfjsP5ZzJj1FbZD2qjnHd6lrwEX1H9hj8HR/Ir
9efQe2M//g79v+gGmKD3RJ5PdnXOIl0j/2/WInsPj2ZeuW4k/TndAlv4JdmL
GMfP5GfQRTGAPzJnO3OFn01XwmeZk3hStoW/Jns9a5b/ExPp3WrznFXP2de1
o+gv5C2xNd8SNM5Mks+RnYtVmZe4BU0ye/TezmzF6swP3Jq5Kv9S1ir/f2Y4
mmYeyd+RVcaanH08JdvKX4t90C9zVfYV3Rp/Z2agGXrL35VVyZzh38464k5+
Iv80/VfmVmYVXRP7Zm+pJ2AS3T9zmP6aboNt/NKsN+7nZ+W80HtgIH9UzoGs
D/8eXTXzgX8nv42R/CT+Gfpvug8207WyB+iV6omYTBe860uybpn36tqcGVlb
dRNfBdv1lqlHZM7qPaD3H90E5fnZOY90sfx9fpD+n3T9/I/80fxX9Bn5Df5Z
vpjaOvtabe7+6+i58mr4lq6Y9ZK/m2fGKPlk/ll6W+YVymZfZYbiMXpgvj/0
OrpdZiy/POcAD/Jzcu7p4hjMH5NzKruen0dXz3NmfmBQvlfy9bL2Oa9ZW7TA
DfL5shr4OjMBg/O9kn8j65D3k/VAS9woXyCribU5cxiCVrhJb6G8FtblfOT7
iNZog7a42TWL9GtjffZnvoEYK/9W1hE78q7QDn3li2V1Mgv49/iyuCt7V22Y
9c93RG9K1jczGvtjqGycbAPdCTtzP9rnjMmXyOpmjbK/8s1AB3REJ3RGF3RF
N3TP+XPfUvfUw4asYb4H+VbIN8o6Yxc/F6/LSmCI7Ni8X/pMTKGLe+Y22Udq
D9f+D7/5nCc=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$359626#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJxknHk4lN///8cwzAzJMmMplSKpFEoq0jllV6QoIoWEVMhORCVJkpCkokLR
RiGVct/ZyZ5QliRb2bcxw+B73tf1uV3X7/r5p+tk5r7P8jqv1/N4PK+z2t7t
0CkyiUTaTyOR/vt3za25lKSVl3YXhTKM7siRcaPPAia9ThjY+OHog627efHq
Jeo0Pps6oBmr0F1tw4fvvaWLPzvQAvZ5/xKJO07BTynPLFFd0gnqVwYavzHl
x43XnxqT0O8GdznaHdWGAvjbxiDvih39oPvns0JpWSquKbYhky94ENx42rQ9
Z5CKO83GPEyzHAVNerHPPt6m4W6lfVszjcfBB+kbx2IpdDzCin/t3NlJUHjs
zyNnczp+suyCo6ozC7QdkFFXcKXjXwSkD545ygZeIbU5RhZ0XFU0JP6v1wxI
1+LNFkLft53QUjI5ywWDY8dmOy7S8MdJJTLTN+fBVjmuYcNzKp4dpdHacIgE
vT9tcvobK4B7fdQyfbifB9atyXM/dIAfxyrTxq9bk+HZlmdaJc/58NP6Oz+f
tuSFd+dufVjXR8YfpKvmnnHhgyaqv9bxlJLw2xOfL7n7UuCjiYc7dee5WO9z
bx9nD374Nnc+9bIPGyvWi0m4fFkA1pXePaNoOIHxHPjZdSuEChNC9xteCBrE
SHve8Tzyp8HuTXffbDvRhYVLThs3XKNDjx39XP+maszd6mTh9BVBaJu74Etd
8xb8vqTmAO4IwU7dyB6JgWbAiL338/rjJTBVYWdkeUg3eCqywb/svjBMJXX5
arwcAF88Vumue7EUYoeo5qnWYyBJ9pGMlrkI9Ff5lR5tPQk+B86QnOtEoOfD
nQ3Hl06D1fsEuHIWovAIFhs8ls8BObXrb/xoFIUFt9/IiXJmQWTpvIqsjRjk
qGr8ucicB7Gef11s28RgbE3Yu4e5CyCQuXLpmqPiMFfrvIacDwlmrKdUenWK
w2marL/3LxLkn+SR/nKcAc+1uCqN0HjgM5U3F5P6GPD56Zr+ZZI8cL39c5O5
c0x48tvtXnk+Hthq+OHt4QEmtAzNetv/nQQbUgI2AU8JqP/ik5dPKAmysw/u
WjMuAXm/b0krWUaCC+89csNcJWE+9vGM3OYFsE9FTzdwShLG8UV8S6+bA2U2
yqfPeErB5zZWL/4Yc8HrLPfphQUp6Kz9duCtxQyovN16vt8pE4yC6+IXssm4
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
8xHf97eT59vZ3fD5hrxKUYgTx/5Y/wNO2J3F
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{557, 1176, 483, 484, 485, 486, 487, 488, 489, 490,
                 969, 813, 693, 609, 556, 527, 994, 838, 718, 634, 581, 1026, 
                870, 750, 666, 491, 970, 814, 694, 1068, 912, 610, 1036, 880, 
                1111, 760, 1087, 931, 1124}}], 
               PolygonBox[CompressedData["
1:eJwVz7svg2EYhvFXfR1rohi7WSR6GAwGI62psSAGEvpZCLPDZHOIBQNl6GjB
5LBiQ/gLkLAyUDX5dbhyX/fzvG/e78tML5TnEyGEFlSwF4WwiwvDGfThuzWE
MbzwTdw4fKp34FAfRuROrH/ydrzzIp74Krrsl/UIdffvZQ6Xdr12O3yWp/gi
b/BBXuNZ/iPHUTZ71fvlgT4lt/SMXNcnZEoOyRMZy1vvnfE0RvSq8z1yQ5+U
RT0p5/RR+aUPyOPmP/IPWcIzL5jv8zXezVd4Er/eeJB5XNlV0Ga/pP/xHOrN
78Mb38adO+d6J470EtJomD+aFXCtx8jjH4AkNE8=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{452, 1177, 1174, 817, 973, 502, 637, 721, 841, 
                997, 531, 584, 668, 788, 944}}], 
               PolygonBox[CompressedData["
1:eJwl1HWQV1UchvG7IS1lALvEkhKOvbvAUrssOjIWoQICKtYgpYICOqN0OdIh
OBYmKFjY0rWUSdeCY5AGmCzh5zv+8ez7vOfcvb9777n31O0zqPPA1CRJUvC9
P3PSk+TZ9P/9IA6gGBUd1Ax3YQkuTUuSIuw3V6gPxxZ0MHYQ5/O35HXOVUGO
QRZ/2ngxbtdPoim/Ex/E+fX12Oecc/XjuE9P8X/teRp/AtX0YfpmFOoHUIGX
l6NRx/wkfT9u00+gCf8bg3h58735+2iqr8Nev1lVTkKjeAbmXuR5/Bi/lye8
gL/B2/NU+Tgu5kONz+FX8038lrhmvTh+T39AX8ivleXkKNTmE83tw63672jM
e+E9NNHXYo9ry9cfw0YUxHNHOX4JeuJdNDa2BrtjHfWjuEc/h3Y8RQ7HRX73
UX02v4pv4DfL/Hj2KKvfry/gHWRZ2UOOlLXkBPPP8Vy+l3flv8Vz439hYFyb
uTv4FN6MvxPXyldjl+urIieiobnZ5o6gj34WbeOFlMNwofkhehHaxTqhDB+P
Peii/xrn4T2wGI30Vdjpd2bph3G3fgZt+DkM5Rc49+B4/+Qs/Uq5Xm8bzxyl
+TjsRmf9FzTgf2JAPCfHd+eL0FBfiR1+s7KcEMean2nuUHw3+mm05q/LAnNn
Y015Vf4In8mv4Ov4TbJNrCVKxXegv8kLZRnZXY6QNeXYOL+cp+fIXXon2Uk/
jvrxHujz4/7lH/FdyP7xLGU3fXJ8i/xt3oCvwHb3slh2NF5Jjo9z8RmOeYG3
5D/H8+MlaMXPoFu8X3oV+bA+g1/O1/LWsf44j4/BzvhW9GOoF/tC7Buory/H
NteQpz+ENWgV64p0XjfuAwtRz9gybHV8mp4V3xQWxHHGl+I7c9P1n9BbPxX3
EHsCViMv1g+pvLR8Cpmue7Q+l2fzHfGt8KOxz/CXY02Nn4zfk/3ivZFd4zfk
M7H3xNrpN8os/Qt861r66ov49bKi7CnHxXOQ0+J7kM/rLeSP8a7LXvq/Maa/
JvONneZDeGUem/l0fhlfxVvGOiKFl5JPIsPcKH17vGf6kdiL+Ak8GO+b+S6x
z6GO/jm+cb1T9R9iv9H/QXNegsG8kv8ZwFeiRawbEj4S2+Le9cOxf8S3FN8A
auuf4WvnztX7YwWaxzrGvmV8hL4VN+iH4n2PdzvuHbX0T/GV43L0fliO3Fjr
2EuMZ8b7hVdR09gn+NJ4dtwrliEn1iP2B+MZsb54BZnGPsYW49fofbEU2fE8
4ns2XiOeIeYjw9hH2Gy8BNXjvuMdQQ3jH2KT8Y3YgFOoFveGl1Dd/BIUGf8P
GdjsaA==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWUVWUUBuChS7qbobu7u3Okm6EEpRsUCzBICUFBUEIFRQWRMEBFMEGR
MlABBQVbUiyevfzx3P3uPevee+759lmTmDwuaWyKhISE/V6i9vXyn7qD6XSi
BilJRWrSkJZ09Is38Yoyg87UJD394zPZKc+kC7WYbJafw/JSRpKBAWYp2SXP
oiu1mWJWgI/lZdxGRgaapWK3fCfdmKsvzzfyBuowVV+QT+TljGKRvgY/yM+T
iUH61OyR7+JRuQG/yUnMkytwWt7IWrkF1+W6TJMLcUR+Ru3ICvlxtQmX5ZfU
HoyWF6s14/dyIa5D7cZeturXq214jb/129VevMUt+sFqmrj3vKrfpLbnDWbr
V6oN4/fwu/4F9dYgP6BW5Iy8We3MJnmd2pI/5XqxA3JhPo37wWq5KVfk21ki
1+JifD6ZGaJPG9ct3013HtRX4qz8NPVjX/RFOBrXyh1kIdksHa/L99CDBrFD
ZkU5Jq9iDFkZapY+frd8Lz1pGDtkVozj8mOMJRvDzDLEfZbvoxeNyM5w84zs
k++nN43JwQjzTLwpz6EPTchJLnKTh7zkIz8FKEghClOEohQjkeKUoGQ8B3Gu
cb6xx/SlKaVi580z83bsIf1oFntvlsiJ2DPGUTp23CwL++Os6U/z2Guz4pyM
s2Q8ZRhtlpV34qwYwEP6ynwb+0wLZutL8Jm8hgk8oq/Nj/KLlI3d0GfjQHwO
A3lYX4Xv5GdpGfuhL8nn8hNMZKm+Dj/F80K52A19dg7G58T5y434Qx7EfLkq
5+Qtahc2y0+qrbght4p9kkvxRVyD2om18VvUZvEccVW/Te0ZZ80k/TK1Lrv5
Wb9VTYo9YZt+g9o2dpZ/9C+rveO8KB+7quZgJ+/GM6B2YH7sptqYS3H/1O4M
lheo1TgvP6d2ZYv8lNqav+TWsfNyab6U18V9lJtzTZ7Mcrkev8jbqRDPgj4n
78X3MISF+up8H99Hm3g+9GU4FfeSKVSMPTPLxfvxPpJpG8+MWVm+iutkKpVi
z8xy84G8iKG0o3LskHkePpQXM4z2VIl9MM/LR/IShtOBqlRjkr/l41DsISPo
yByzcnwtr2caK/T1+TXOh41yO/6Vd6h9Uvz/f7C6/ibCos1i
               "]]}, Annotation[#, "Charting`Private`Tag$359710#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nfclmMYh/Gn3jS1l4gWDe2yRSEpab2VlEqlnQYqCmlpW9GgQoNENCkt
tLUXFe2996KU7/nxx/E5j9953c99X/e4rvct0KJzcqcUiUTim5SJxFIyPSmR
yIGxclVkx0G5Gjbyt3DJcWvlshiZKpH4Sa8VyuCiXkPs5e9imWNnyDkxTq6G
VH7TVj7Dc+AQfxqbeC/cYvxNORUu+/06tRzmGStp7EPemmfkL/O/eSU+KeYU
81MbIVlvn/yAOlZurr4nF1DfkZ9XM6pV1alqW3W5683kufCM/Jnji6rD5Cbq
0/JNaju5nnpWrqB+EffID6vVsZnfoz+av83z8Lf4TbjiGuvV8phvrA0yGX9F
/oeXw+WYH/bz97HCb2bJufG5XB258Lf+Br17sEBui/IY5Xwrjc3WvwVf6D2D
3PhH/zeswmr8YDwPxhurEc8fV/XX4Ef9WzFBr2bcB67pb9S7FwvldnGvWKs/
R+82TJRr4Vb8q79J7z4sktvjXqzTn6uXF5Pk2rgN1/U3692Pn+UOuA/r9X/S
ux1fynWQF0fiXWEL740bjtsiP4Bf5JdwPzboz9O7A1/JybgdR+Ua+J33QQK/
yw/iV94RmT3PV+Wr8T3hCm+MA/wDbHTu+XI+TJbrIrXftJfP8TtwjNfEH7xv
PBvjveTUSCH/oT6ExbyUseG8E8/Cu/Jr/DH+Zcwt3n18k6ird1B+UB0nt4g1
IhdUB8Q81UyxhtXv1HbqJvNdwPPHvctfO76Y+q7cVK0np1E7yPXV8/Ij6vi4
R35crYWt8S71P+H94v3xt3kapJS3qg9jCe+Mh+L7i2vgEB+OzeayUC6AKXJ9
5EcSthhbpF8w6f896tlYv7GHYJteBSzlXfBwvDfH/6xXCN/KDeI54IRcG9t4
/1jD2C4/gmW8tHl/xF/mWXk3/pz6b6zvWA/yCzgc9xD7Av+IF+IDeebYw/j3
8X7N4Rf1Tkx1zN2x78T5eFr+En9WvSA/qk6QX1QLySd5nUDeHt+9+qncLPas
+N7V3nJDNa1aOd6d2kpNbfxP/mh8Z7GXyWXUj+VXeDbenV/nj/Ov4v5jPcf5
cYR/jDuNDZKzxPt1L7+qd+E7Yw2RznhH+WIci1M8GX/yAfHd4C+5Ilbwso4f
Ec8v1pCcXX1NvhH3H/sDb46jfES8V9dcLBfG93Ij3IXT8a3jLz4wniV2yJWw
kndFDud+XU7E9WMvifWAY3xknMf4YDkrtrvOErUIphkrbux9/jxPzzvxS7ww
zvB62BF7ibExfFDsH7wPb6SmU59Up6itIxvfyR+LtSL/JpdTR8rdeE7eI9Z+
3EPsW/Ed4DgfFe/S/JbKRTFdbowiMTfs0nscq3j32BfimTt+mV4xzJCboCjO
xhrGTj449iLX7SunRxX+jdpGzWBsN38i1oq8Wi6vjpJf47l4z1jXcQyfHHOI
/ZK35CdiDfLP+eh4bnwIzxbPzdyWq3djprGmyGC8s3w59h6ci3WBXXwI8hnv
J2fAzfKe+N6xhr+O3MbfkJNiPnIKuRU/yT+JZ++aK+TimCW/EGsR5+UG2M2H
xl7jd/3jGniKf6tm1N8b7xNreQ9UjufunCv1SmC23Cy+G2SKZ2dsD/ZiH0Y7
1371AA7iEA7jCI7iWPwddp6S+MHvm6MEMmNfvBus4z3xJFI6X2u9U/xTHI+/
4XIp/Bi/Nf5BfO/8Zt4l7lO9IldUJ8ot1ZLyhdiPsIcPQxbsj/vHev4GqsS+
Gf8j6JXGHPlFlIo9MvYqY6dwGmdwFudwHhfi/we/KYO5jm0Ze2zsQTigVxUb
+Jt4Cknm1UbvNB8T37k8VM6O6nya2l696Lz/AfF1VSk=
               "]]}, Annotation[#, "Charting`Private`Tag$359710#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwNy9V7iGEcx+FnbJjurjHd3YbJceRPcIpNd3e3I8ymme7u7u7p7u7hPriv
z/f3vNcb0y2pa2JECCGd7pEhlIwK4YteYRcrWEAPepJIEr3oTR/60o9S/v2q
V9nNShZSyfs/vcdRNtGf0t6/6TX2sIpFVPYeuG8fYzMDKOPtu15nL6tJpor3
CB7Yx9nCQMp6+6E32McaannLyjP7LIup6s7EQ/sEW6nnzsEr+yKDiHH/1Jvs
p6E7N2/tNGrb2Xhun6OpnZ+PdgrV7Mw8sltqYU7ajTUvHXjvbqPF2WbX15y0
47W7lRYlgUvu5lqQjnx2x2sJOjPYXU5/aVu9pS20EJ044G6keWjPO3drLcZa
u45G88KO0yKct5tpAT7ZqVS3I3lsn6KJnY8P9nYa2Ll4Y19mCOXdv/U2B1lH
XW/ZeWlfYAk13FE8sU+zg6HEevujdzjEepZS03sWntpn2MkwKnjL0LscZgPL
GE5F3/5qOkfYyHJGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3y6
RIfwH+EweCU=
               "]]}, Annotation[#, "Charting`Private`Tag$359710#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV03egjlUcB/DnForISFkp1ypRyWpQ3JKsyC0ZlXG5ZUsLZdzL5eZeadoy
StMoo0mKlNG09yqlbTe0fH5/fN7f9/ye932e85xz3tSMgekDUpIkSfPRumCS
tCiUJOeyW17CM4zgHr3KHJHX8DK30lKvOHvkpTzLSLroVeGovJZXaEMrvRLs
ld/iObJoS2v9kuyT32Yi2XTVq8oxeR2vcls8X68U++V3mMQouulV47i8ntdo
F8/XO48D8rtMZjTd9apzQv6M10mPOemV5hv5PaaQw+3xfP3z+VZ+n6mM4Q7a
cycd6EgnOnMXd8daxvrEe8Vc4/lkxBzd7wIOysuYxti4pncJJ+XPmUePmKNe
Gb6TlzOdPsZX8q+8mdz4rvGl/C5/wXwGGNclhe3GPeO95LJ8L3/AA/LVFGSG
cV+1Nv/JWxgsN6IIj8c91Br8IQ9T0/hSfli9jrGcTTbNyGOB6wPVeozhDEZw
U9yTHa4PVW8gl6KM4hbyyYw1V8uRwyHjx9QmrJAfVK+hECNpyvP6/dSr+F8e
rt7IVnmIej3nMM44U72MP+WveERuSGEWGt+v1udMdhrfG/svl+cH+UNmkhfX
9Gryl/w1b3BfnBW9Cvwof8Qs8ulF7zhHrl3IT/JKZjM+9jrOl35FfpZXMYcn
Yq/iHekfex1rHHNlUOxrnEm/uYhf5I95gQkxH71anJI38GasYZxfvYv5VV7N
Q/K1nEUWN8d68WI8U61DwjbjJ+Nd5Mv5W97IorhH/Cf0KvGb/AlzeSrOTKx1
nLHYkzgDPBp7G2cr/kd+k8ph+VNe4ulYL70r+EfexOJ4Z+MGFGBX3EdtTDFG
05zxDHftNNQKo7Q=
               "]]}, Annotation[#, "Charting`Private`Tag$359710#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1XccjmUYxfHXJjsqKkKFjGyFyIqmWdlZRWRECVlFJWSTjGTvvbI3aSmz
siurQtmj0Pf64/e5zjn3cz/jXk/uFh3rdEiSSCQ2JE0kBqdMJD5NnUjcSpVI
PJomkfhAzaR2k1VQ8/KX6MYozf/G51YH8FXU4/r/TFdEcX679uzq+5Gpr/PJ
1XZ8WfUCn18dxm/Qd436IGbLs8p70s/RN9XX8BedBqfpWthPd8MQfcfwt+kP
kQ8nZBsxFJ9pS+CjeB5Oyn7hK+Ervg02ydbyD2EO/zzuwB98bfxEd8cw143l
k6A//wgu003wO31K+wG6Mnbw9/qOvnRbOgXdnr5Ib3bdOvphzOXv0taLfoG+
pbZCGdkZPq86hK+upuX/pOugFP8zn1P9KJ6pvhvvrXbmn1Cv8QXVkfwz6nDP
HUcnRRH+Y+2Z1e58AfqK+gqO03nkA+nT+hyMOcbX8vvk/eg36JR0B/oSvcV1
6+m8mMfXwG26Nc7S6fAXXRe/0D0wQp/xfDIMiHeNMZcd4qviG74dtso28Pkw
n6+J9BgpnyBLjoF8oRgf2baYf1l+LJDVQgaMkn8uS4FBfOF4J9l2jMZEeUp8
EnsAZ2Rfxb6INRZrKeY/xjDeO54d94t++CLQNxUG61sEZ2U7sEn2CBbKaiMj
JsknyVJjCF8U52RfY3PMBxbJ6sQ+xGT5ZFkaDOWL4W/ZN9giK4jFsroxp5gi
nyK7A8P44vhH9i22ygphiexF3Imp8qmytBjOl8B52XeYFsjTYYS8JC7Ivo+x
lhXGUtlLyILp8umy9BjJl8JF2WH+KXzLt8fOGHv+USzjX469jxnyGbIMGMWX
jrNH9kPMR6xdLJfVi72DmfKZsowYzT8W+1L2I2ZhdlRtmfCptsdjrct2xfzI
imKFrD7uxpzoI8uMMXwZXJXtjvmRFcOXsga4B3Plc2R34jO+LK7JjvDV8B3f
AXtivuJ8xEq+IbLFOuNfxAG6J+a5bi6fBWP5cvF8uilO0Ne1H40zAd/zHbE3
5pYvgVV8IyTi3OXP0dljPdIv4SD9gLb+dC86Lf0WfZ2e7z7z6KwYF2sjzpU4
T+Kb1GZ4THaSf1AdFHtVvaHfMfrpeAd+p/b74z8SZ636Jp9K7ciXUy/H+Rln
UvRR98Vao0vG+PKrYy7U3nxjOgndhv6bzkcPpe+NPaO+jEN07zhntL3N36AX
uOd8+i6M58vH2NHNcYr+V/uvcTbiB74T9se6jvMVa/gmcebFXuPr4TDdBwtd
t4C/GxP4CvhP9hN2ykpjreyVGAcski+U3YPP+SdxM/6Zsa5jTLFO1hQ5sFi+
SJYNE/mKuBX/LizBYnl2fCGvhNvx78HSaI+xwSR55VgHOBj7QfY41vPNkBPL
oo/sPkzmq+AG3QKn6YeM5yexb9Uk/G/0s/iR7oxDsY/4MtjAN4+1heXyZbL7
MYWviqQ4LF+BL7ESy7XnwFRtTyEZjsRek5XFRr4FcmFV9JXlxDS+GpLjd/45
7KLfwlHX7Yl1hk18S+SO84+vjyP0e1gd78E/gOl89VgTdEv8QafAcfp57Kbf
RupYy/wV+pj+e2NvYHOcBdr60K/Gt9Jt6X/oPDhPN8DR+Jb499Lv0+npLnR5
9V++kDoqxlhdE2NE54ozip+hPYvag39SfTrWXDwv5pX/k39YHRznjpqSP0G/
EPuK3xNrS/2Q70KnoTvRV+kC9Aj6V8/cF++DLXE+yd+jX4u5od+gz8fexwW6
IY7RfZFB+zv8f/Ra91lF58ZM/pnY/zjJ18Be+p1YT67bz1fAVr5VrDmsk6+W
5cEs/tkYe5zia2If3TXmPvZcjAe28a1jDHCRbxTfQ/dDRu/Wlb9JF6ZHx5pR
1+v/PwXlefY=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$359710#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
17eBLy1tixUbRP4qIMkl/MMDdoj81ZKZ6x4RKidE/qrssbrOI1NuiPzVrQap
JBk9KkT+auUVbpuvDVSI/FXOymPz6+7wQOSv3GcfWP8O54R7GJ4immcF4YV3
bmk+gexw58q1Jsa2QvCfbYeOpAwbuV/uW7i9XQRW7C45pnmZBV4qW26wTyU/
/+hI8Z4hJvZY4rJv3C31O7DHunNnpUJmbQ32WLQmOB2bXApQPx/t4S1jTeF8
gPr57OSt00s2ZADUz1c9fWqy7UkSQP185R+7BtbGRAPUz5csWmej/zoYoH6+
qWX1rDuKjwHq53u+Y8PvgAIj7L+s97np21EcCeS/Uo6XEFoPxwmUNwgbgxav
aDNw3uCi3Iu5s6Z0nDeYbXKQJbB7DOcNrjWlDdj4jRCZu/t1Dxf1AL+2VXxc
4kMEyh/UP/0jVJLxj0C+a4fA5yP6/6ZxPuDOu37t3/7M4XzAvgBK/NqfCzgf
0KNucDpyZAnnA7qPTF9eaKBA5MHYlJ2b9+eR98t/HiwqsCQvgYsDIg9WYNz6
dqCUEyIPZj/nmt95jQciD8broH/etJ8KkQfzCZzjeLyNCpEHmym6OtZD3l/I
g2mdTDlfk8MBkQer77J93jDPBv2ef/hQUyYEzXoHqRsTKdBH4swD0CkMdzFu
vtLIWQApYUNf/tqIwNUsnyZJ73mA/Fg9k159rnQWID+2lm795CPHFPZiahPb
fm73/oe9mOPE1sZVAU3Yi1ls8Luh8JOGvdjArIb6O79f2Isd9/epbfYmAMof
TF9cemCTmQpQ/qBGsIIgqyYeoPzB9WU+ymJzkQDlD8bVqFXbrvMHKH9w27Fs
lYbwu9ifCZgbTWquMydQ/uAlbubd0zQGzh+8ttnYMf4nHecNFgRa9kncGyVe
88v8tPjWBU7dOtr55fIwgfIE29l4+HoX/pcnWPv5fbjVBRbOEwyfZPSWjizi
/MB7Hqvnh/axQeTRcja3K+47SZ6r//NojKIFcJ1G3g//eTSdNaPf5xe4IM4P
tM/zdJvihcijeZ+4rB5KPtcij3b6X+S5feT+gjxag5FK3UbyXOTXmXyWriMI
RbS3EV1l7HDm6odT1vuF4PVjGx993c8Gf7p2uYbLi0BZfdFdJt9ZgNXqcif1
owjsNs4amd47h33a7LsQqWVFndintThtoJ9xr8U+7XCLX9FsXRlAfYbKPj73
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
7s+badEqrrGqxvP2hs5Jjyztajxv/xOQ+fxx9iyet7Of/bZwazkTz9uXCUkq
B3oy8by9hxH5/WIaE8/bN/o6s/25wsTz9kEVeEXccxbP2//sSNzUyjlDoD49
nUQZzgH6JJ6/D+b79O1pH8Dz91QtA8X+uDE8f9/Jdv6JmSMDz98/lmi9HY5j
4P67pr1+lMAcOu6/s356Kkd22ShA83cZdlVerX39AM3fB+tsDyw0tQE0f1e7
EFjDxsgGaP7uJlv7KrLtA87/ULv44ami7i/cf9eulOdbWteB++/CPxlKBegP
AjR/332FEBWMoAM0f6+8c/MCtX0cfDWq9DXxF4Zno8aFSgYnAJrH39H55uzY
MoHn8UqtxmGB0eN4Hr/9atmKYn06nsc/jVcMdcsYwPkhvhZ3A/Q8O/F8XuO4
go6vzf/yQ3bXpA/lHonF/Xs3ZPQ/t45k4f49r8/XjgYZFuL+PfkDH5vSiktw
/x7fTefCbp4K3L/3eZX2aq0DVbh/L/C3qFNMPA3373W0baveoFON+/cMPLr4
I62rCTSfb5by2bD9eDWez0f8dDX/mTGL5/MrP1KclKdm8Xy+ha9dL9aeiefz
e+mBtE/JTDyfP8t2/tOXF0w8n9+8V/rC1vJZPJ/v+RniYOs4Q6A+vsPVO1t7
3KfwvL7zlYJ8lWA/ntdbGISNS94bxfN6vanfIXqbGXheX6SjL3cjh4H78wy0
tNz3UBm4P+8ue9Or+7JjuD+PZ03HzYyxAYDm9ccefbSjznQCNK+/PSnfnvOj
DKB5vfWZe67fcj7gvBKDxqkvI9t/4P68oGX8s0YyLbg/T6oi/vK3Hf0Azevf
TrOn7E8YA2heL9dy7Of7a+MgJj2tQf+WMBTM2WS9P38CoPl9VY0iSGJN4Pm9
66tU7x6+CTy/z0i9NjO+RMfz+8d8dwtqnw/hvJMe1xhTuaRuPM8vFnpg+zWy
Hs/zz4f3uPQdfYv7+37INxQ8XfUD9/fp33X+VNeXj/v7dumtDy6q/V9/n/iT
1JSvBuW4v49RLPGArbYS9/el7np9EFrTcH+fY9SnElnFatzf19ek8DbgfDWB
5vnph3mJ4LPVeJ5PV9uaZVU6i+f5Wu7f/WJUmLi/z8RnbMEplInn++diR1hp
35h4vj9XdyHkPGASfz451Z/Z9Q94RCdsWqcxi+f9rnFV3QcDhvC8f+fo6/dS
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
+L/3500z
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0LsvQ2Ech/Ff3SYj7SwEA1uPuISFmkwsEpogESya0EmCxSbU4DIwsrWT
TVwWgwSJyYQBe/0JPmd48jzf9z0nPWnHUml6vSEiMljAQGtEghOHo00Rl40R
fZizu+0D3Y5b+9tLH3ocz/YG8p45tzsxaGftbd2Mon7kqvOCruo82tIPsFd0
Xc/qB32qx/SV3uV+XuM3PuJ59z18aG9xlhf5iff5zv0UX9t7PMIlfudj/vH9
n3oCZfvF8zN8Y2/qRF/oLiyn9zzkPKd3dAtq9qRd00n639gZe1X/6TMU0eus
4iyHe/vXb3/pAl7tMobxD9fOLj8=
                "]], 
               PolygonBox[CompressedData["
1:eJwVzzsvg2EchvG/sqnyCdDEaRMTXQw2h0QiyiipoUgQx8RgotXJIGF2WowG
tVgZDCaDweETOIy0JH4drlz3fT/Pm/d907nliaVERNQhh4FkRD86jI0NEav1
ERX5BHl8u/hum8SzvoNhtLlbtKVwpXciaVvTq/Ip5vDj+Q9bFi/6LkbQ7u6e
rRllvQtNtnX9Vz7DkH6h92Fe79WP5FbMyvd8ax+Xy3KBB3mFn/iQK97/KU9h
U391P8s3eokLeoaP9W3u4Tw/8D6POk9zSd/iFp7hO76u/Yt8KWewKD/yAXc7
S/GG/iefYwFV3/Nlm8abXsQY/gHBDzPZ
                "]], 
               PolygonBox[CompressedData["
1:eJwVz7kuRGEYBuD/nBnGMpjgBqZQ2ZmGuAjGmtiHiMrUFC6AYdCpNVyDRK1z
EfaltC+J5xRPvvd9T3KSP18qFzfiEELEGsPZEIaIjDEp0tRQS4bXVAizXMs7
jNJFazqETXvEqZ78eMB2rOe51Ot4k+e4kad9v5B35RH5RN52O91198qtumO+
d7gVvZ1zvZs225Yec6aXqeddn+dWrlCkhwY+7AvcyXuM00sjn/ZF7uV9Jugj
y5d9iQe5yiT9NPFtX+ZRPmAqeTvN/NhLPMmHyZsZpIVf+wrP8hEzFMjxZ1/l
Rf4HTLsvJg==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{481, 3131, 3125, 750, 870, 1023, 531, 683, 772, 
                892, 1045, 567, 625, 714, 834, 987}}], 
               
               PolygonBox[{{3130, 3132, 530, 1174, 986, 1139, 833, 953, 1106, 
                713, 802, 922, 1075, 624, 682, 771, 891, 1044, 566, 602, 660, 
                749, 869, 1022, 529, 565, 601, 659}}], 
               PolygonBox[CompressedData["
1:eJwVzzsvA2AcRvFXGSVVPoBLDVqLy0INJGyN6yCIQcQipRKDSkwiQbGIgZUE
CZtFSUwSHWwSgw3fACutX4eT85z/2zZp8/zKRDYSQqjCInpqQ+hFcCw7tvMo
8vjETHUIPyh5W9aXlS/rdcRqQkjqezTofbS6jeikfYY+vasf7En7w562v/Hn
N9941X2At7nA41z0uQN+1gvcxBt8wp285P2QX3SGu3mTr3mILyr/gR/1LJd1
jnO6jhP6iF91llO8xTec5jvvRXvOruc9xO1h94R9ipTe0e+Y0l/49Z/6+RZj
3p+8NdrH6NAZ3WVfYVCf6xLWdFS32QXEdB4tbv82zjUh
                "]], 
               PolygonBox[CompressedData["
1:eJwV0klQj3Ecx/FHoiRX2onB2J2qGVJZWlDWC2ZClhmkckCIso0ZM2asM7bK
CadkOzmocHCw7xzsa1nauXk9h3efz/v7/f3/T796UkvKF5ZFBEHQB1F+pMUG
QTquGQ7qGwT7kRIZBPl8D95gkVkbep2/zZP1E5jo3Fp+Di18Gf+nb9Jj9BF6
ht6IAn6Vx+r7kMzz+G68xkKzVvR4xi2epB/HBOfW8Hr8RYXZALPh+hUM5HuR
ZJbLa/AKC8x+oNv3reZ16EW5WbSzqfosVOMl5pt/R5fzq3gtelBmFuX8MH0m
duEF5pl/Q6fzLTxRP4bxzpbwyfpF5PCzvBsbeX8+VL+MGL4HiWYz+Gi9Hhl8
J3+OIv4VHZ6TKa+jyL7ZLkE/inF8JZ+kX0A2P8Ob9aV6l16q99NT9Cd6qZ4e
Pl9ekvmy0e6gvMOL5QBZKXfLBDnd/pC8x9fKUbJK1sl0WWV/QN7gi+UzvlkW
8i9od4cXssJsqryGQr3Jubt6iR4vj2CsvsL8kb5enyhr5HmZJU/bNelL9E59
gx6pJ+tpegPywrvx6PCziOc5fKReizS+gz/FXP4Zf/yON3mcfhhjnFnOT6ED
6836miXpDYji1Ygzy+bbw78v5ph9wm/f9ws/0YZWJNpnYRseY7ZzH8P31S6B
T0NleHcUmH8I3027eJ6JrXiIfPP34XtoF8enYgseIM/8Xfju2H3BELMp4f8D
95Fr9za8s10xP4l2rDOLcJfB+n+Xw4No
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWcVWUQB+BdOqS7WbpBUunuXKV7CQll6cZABKUUDLoVVEBAEASRThts
kLC7CxOf+fnh2fnP3I2757xzblJKavKYxISEhKu+RB3nSy6OyHfSmVqkIS3p
SE8GMjLe9+bmqHwXXahNJiaY5+GYfDddqcNCsypclFcwksxMNMvLcfkeulGX
RWZV+UBeySiyMMksHyfk2SSzQd+MH+RnqMdifTUuyasYzVZ9B/6Unycrk/X5
OSnfy275FtJE1W9Um/OjvIMX5L5k4Sb9g2p1Lssn1KGslvepPcnAK9wezLep
HXmTv/Rn1BFcYL/+sDqQd8nOa8TNuswNXp+iFuAcp/TH1BTeZ45+j3orb5OW
lxgV1zHmXt+ktuAn+ZQ6nJ3yQbUfWblZ/5Bagyvymrheci8ycod+u9qJv+UD
ZGOqviCn5fvozuP6lvws76I+S/Q3clVeyxiyM82sEGfkufSgAUvNavKhvI5U
cjDdrDBn5Xn0pCEPm9XiI3k9Y8nJDLMicU3k++lFI3Ix07woL8sP0JvG5GaW
ebG4j/J8+tCEPOQlH/kpQEEKUZgiFKUYxSlBSZIoRWnKxM753cV5VV5AX5pS
NvbLvEScg9gh+tGMR8xq83Gcf8ZRLnbOrCSvxw7Rn+Y8alaHT+JMM57ysXNm
SbwRO8MAntC34hf5WVrwmL4un8YZYkLsmr4z/8ReUIHZ+lJxPmM3GEhLlpnV
47M4E0ykYuycWWnOx5ljEK1YHvvF5/F+mEQl5piVif2Jc8RgWrMizi1fyJuZ
TOU4h2ZleSvOESm0YaVZfb6UtzCFKnHuzMrF/sQ5YghtWWXWgK/kJ5lK1Th3
ZuV5J+4JQ+Pv61vzq7ybdqzWN+Rr+SmmUS3OoVmF2Pe4RwyL96Nvw2/yHtqz
Rt+Ib+Snmc4OfRf+lQ9SPc6uviLvxT1jeLxffVt+l5+jA2v1jflW3sp+uTeZ
mKHfqXbluvwiNZivrxTPmrif8bvk7qTjtvi/1HZck0/HjL3x82r/eH7RUb9O
bcJ38kl1GNvkA2qfuJZkjn2IZw2XmOn1XWq3uJfEB9dZRnKRQ0ZH1EHxv5Mj
doBUrsTzJnZLrRxnjQv64+oQlst71R6kj2cAoxkR11ptzx/yPg7JA8hGJ/16
tSnfy9uZFTujTyaRw/qj6mByxp4xNvH/z96aXvsPq5DlZg==
               "]]}, Annotation[#, "Charting`Private`Tag$359795#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1nf4jmUYxvHXiiIJISF7JKtQRsPeZJRNlKzsvffeM5uKMkLaIdkllYpC
ZY+MkjKKhj7X0R/f4zzP675/7/M897jI1bZbg65JEonE5qSJxAnmh2SJREV8
JvfAI7gneSIxWC051sgZcIt/AZf4UmkSiTn0MfOWqz2I5nJ+eQp/T7L/f/+k
3/+Rr4S9ck+UNGehnAePypnkIXwKtOR30jfUq/Bv8CWRUU7I7flf+Sb8x/xc
/nF+BT+MFqEd6Vd0Om1hvACdKg+kmWgb+imdRD8yXpu+LY+m5Wg3+h2dTU95
/yN8ZfSWPze/Id0o94p14BfxedEuxmkZ9cz8UP42rJWrymv5UrE2chK5A3+Z
fwktUVBtmlpmbJFPe/ZRvgq+kHujLEpb+0w0qfkdjf3Gz0MrnPE3x9Sq4ku5
D8rF++CssZ9w3Fg17FPri/LIgnPGTqhXx1dyv9hf3Ivzxk6q18DXcv9Yd2TF
BWOn1GviG3kAnsB9uGjsZ/yCS/gVp82rhf3GB+LJeL5vGaaWEuvkbEim1kn+
nZ+P1iikNl0tCz6WL/u9M3xtHJAHxfqYs1jOhwrx/vJwPhXWy9XkdXxpZJeT
y535K3xTfiu/IL6Bf40fTovSTvRr+qyxB/gZ/L1oy++hW9Xr8O/w5dGdPxj7
4x3P0jroo/ateY3oJnlc3LO4c3SJPJjmj3tGv6BTaMVYZzpC7k9vp63oLjqR
vmm8Ol0vj6SP0BfpfprDWAr+Rf4q34zfxi+Mdedf54vFnZALyzP5rNgm15Xf
5R+LPYizQ+viO2ND8KjxpXKBuN+x3/JI/g5skO/HbWpd5Gv8IlSQV8rFY93k
B+VZ/H3YLl/xnHN8PRyUh6IyciKluV3Vr/OL8Ryumn9e7SkckodF30AupDK/
m/of/BI8j2vmX1Crj8Py8Libcd7MHaWWGm/JuXG7Wnf5T34p2qGI2my1bNgh
X/d7F/kG+F4eEecL2c0brZYGb8s1Yp+i30Xfk++Qe/A3+Ob8dn4Z/wKKynPi
bGKn/EfcIb4hfpBHxn4jh3lj1O7EO3GG9IW8NLV6T7Wb/Mtojz/jDqo1wo/y
qHin2CNzx6qlxbtyPqRR6yX/xb+CDrgR91ftaRyRR6Nm7Iu549Tuwntyftyp
1lv+m38VFeVVcgl0lIvJc+Ns4jn+M7pLvR7/Hj+GPk570EN0Dr0ZvYN/Bn3l
o+Y/TTfL42Md5DJ0mTyEFqTt6Zd0Kq0VZ4KOlwfQdLQ13U3fj2/hN/Bl0IU/
QGfSAsbS0j7yP/xydMJf3ueyWmMck8eidtwJe5Db/Anqd+MDtYK4S62v/C+/
ApXk1fJD6CwXl1/i78du+Sn5ff6JWEfP+o02wXFj41DW+Mtyoegrch55Ip8+
+hP/Cf1QvRb/Fj+KlqVdo//QWbSQ8XS0n9yP3pJb0B3yhOh9cffoGnkEfTje
lX5DZ0RPMV6CzpMH0Zz0ebqXTo53MF6ffiCPpU/SnvRwrKVv+p02xQnznol/
i2Mv+XL8K/wD0W/kvPIkPgM2Ru/F3Wr95QRel7vgX795RW6Gk/KEOFPR13Ar
/sMTZ8T+JKFJ49+X6P3RH6NPRX+JfuJvm+MUPzH2IXoU0nveAPUkWCl3xUNq
8+Vc+DT6TfQXvgVO842Nb+En8eX5V/mhtDDtQPfRabR+3Ds6Wc6ITdFnkEFt
oJwUq+Ru0ZOi58gtcYafjAbRM6KnRK9Qb4Wz/BQ0jPsWPSF6QJx5/MRPRaM4
d3Hf437HucE5flrcrdjbuMu4qd4G5/npsVfx7XEv4h6ot8UFfkZ8Mx6O846/
437jIj8TTVAyzhz+ibOCn+Ms25NZtClKxd7GXhprh1/42WiG0shoTQapJ8Nq
uXs8T22BnBt7Yj3kD/kK6MV/T+fS9Mb+A1nuU94=
               "]]}, Annotation[#, "Charting`Private`Tag$359795#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1Hf8TQUYB+BLtpZd9i47o6hQMkPZs2QVRXZkldFeqJS9996bbDISKpVd
RiISCSE97x/P5/2+33Pu/f3uPefcPG261O+cJJFIVE+aSIxIlkhUSZFIbEue
SLThPk7rdjCSUYxmDGMZx3gmMJGqXrvda9pyP7/pdjKJao59rXuRrJzR7aK1
/oR9AA9zB5P11fU75JfIxu+63bTRn7QP5BGSMUVfQ79Tbkd2zup66a7Jw6nJ
N7q2ulPyIMqSnLd0yZkkN2Gq856275Lbk4Mh9nuZK59z/HX5uvwFtdije1F3
Wh5MOb6038dSOQVvyymYLC82y9A0Pq+Znw3yOvMJpnm/muZu3SbzZXOmWZh9
5LQPNdPF98Q8+3KzHAf4w+t7m//qt5lfmgvMknxHbfs4MxffsMa+xqzAt177
kvlbfDfMlYvzqDzCvJ9lckrekVMyRW4W10IuwEZ5uvepFe8vv0IuhtnTM18+
73gf+Ua8L8+wV9dOdya+Lx4jFTP0tfV75A7k5oJuH+31v8f/wuOkju9K/0x8
FrkjefhTt59ZPOvYXt2r5OWi7jtmM4e5zKNOfN+OdyIff+m+52X9Wfu7lCcN
8/V19fvlzuTnku4HXtGfs79HBdLG9dDXi+shd6EAl3V9dTflkTzLAV2HuKby
+1TkzvjbulRMlZuz0Hn17d/LXSnIp/YMLJD/dryffEseFefLpagjjzdzs1Ze
a1bkR+d3NM/rPmCeXCLuz/jfzKzxjLDcvsp8nJ+4Kz6nmTp+D+Jeti8xH47/
jefiGTMLxvVkk/0r80kOssjfbWD+oN9sdjNnmUV4QP7MzMhC+Ypz+8v/yaOp
y0+6V3UX5A/jusgPxfvH5zazxXPFCvtqszw/c3d8v2aa+K1iun2p+Uj8Lzxv
nxb/Q9xXbLavNytxiMX+bsN4/vRbzO7mbLMoD8qfm5ni88kr4nniH695w7yt
G8MiuTT15AlmHtbJPzuvk/yn/BGV4vPas7NSvieukZyWGXKL+M69plFcR7kH
hbiqe1OXYKy9Pgd1ne0X5Y95invjs+sbxzWVX6Mw13SHWEaT+N50PSnCdd1h
lrOClaxiNU3j2jqnF0X5V3eELvq/7J9QmXTxO6RvFt+p/DrFuKE7Slf9JfsQ
qpA+7ld9c/1huTfFuakboEvCOHsDjum62S/LQ6lKhrhHdHcyU36Bdc57zn5E
7kMJhtszxzWWbzk+UE7KeHtDJsp5+Uo+7nh3+W95GNXi2tpzsErOGNcwnhNm
ycvMsrSUp8e9Er9NbLFvMJ+Kzxbv7X2fN4/qt5p9zTlmsfjNiXvc/oWZhZ0s
sa80H4t7IJ4Rrx9k3sEExxoxSc7HevkXx3vIV+J3g+qMtedktZwp7o94Tpgt
t4r732ta2I/J/SjJbd1gXTIm2hvzq+61uN/j+aUGmePz6V/QH5f7U4oEJ/Qb
aenYL/Y3KE0STuo3sZktbGUb22nl/F+d8yZlSMopfU/91XgGeZoscc/p7mGO
3JoZciG2yhvNynEPxG+B1/8Pn2xAeg==
               "]]}, Annotation[#, "Charting`Private`Tag$359795#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV02WgFUQQBtBLN9Id0t2dAiod0t0o3d3S2E3biV10l6LYnYB0dyjpmR+H
nfl237uX2X2F+o1sNyJJIpG46p+9KROJ0akTiRzsSJVITKIamVgkq8Mx9fN0
Y5/zY2Q52amfTHUys1hWl+PqF+jOfufHynKxSz+FGmThH3vj5Ln5TD+VmmRl
iaweJ9Qv0oMDzo+X5eFz/TRqkY2lsvqcVL9ETw46P0GWl9366dQmO4fsTZTn
4wv9DOqQg8P2jnCUYxznBCc5xWnOcJZJfj4/X/q5mdQlJ8tkd3FK/TK9OOf8
ZFkB9ugfpB65WC5rwGn1K/TmvPNTZAX5Sj+L+uRmhawhZ9Sv0ocLzk+V3cnX
+tncRR4u2psmL8Q3+jk0IG/crawRZ9Wv0ZdLzk+XFeZb/Vwaki/uVnY359Sv
04/Lzs+QFeE7/TwakT/uT3YP59Vv0J8rzs+UFeV7/XzupkDcn+xeLqjfZABX
nX9QVowf9Au4h0/1XUnJBn3BmLe6MRfVb7FZ3Z9M3K9fZ+1FOrbqt1kfICv/
+pxZ1uL8aG+ndTAL1RutfWN+ZIw3yLD4/vF97a+ydovZkyreNENjHmy0vzU+
P+ZJlngzjIzPiTuLe7c2ibvmkn6XdQgr1VusA8gc75UR8Z3l6629Sc82/Xbr
QLLxn//LbGsJfrL3EI1Zre9OajbpC8UbUjflsvptBnLNz8+RleRn/cM0oXC8
E1kzrqjfYRDXnZ8rK8Uv+kdoSpF4J7LmXFW/y2BuOD9PVppf9Y/SjKLxTmQt
4j7U7zGEm87Pl5XhN/1jNKcYt+zdZoG9svwue5wWFI93JGsZM1G/z1ASLJSV
4w/1E7SkRLwbWSuuqT9gGElihrLy/Kl+klaUJGnMR16Bv9RP0ZpSJCN5zMNe
Rf5WP00bSrNS1prr6g8ZToqYh6wSe9XPsEndjzvYzfD4W+A+e2usPUjDZn2Z
uEd1G26oP2IEKWNussrsUz9LW8rGPcbv4qb6Y0aSKuYoq8J+9XO0o1zco6wt
t9SfMIrUMUdZVf5RL6I95eMeZe24HX+3jCZNzFFWjQPqxXSgQtyTrD0JVunH
kDZmq6/OQfUSOlIx7knWgSSs1o8lXcxaX4ND6qV0olLMWtaRpKzRjyN9zFpf
k8PqZXSmcsxQ1olkrNWPJ0PMUF+LI+rldKFKzFDWmeSs008gY8xQX5uj6hV0
Za2+J2nZoq8aM1V3IQXr9RPZoO5DBrbrd1gHkZ09jIq/9Xgj9v4H7kAIjg==

               "]]}, Annotation[#, "Charting`Private`Tag$359795#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
/vgOeDP2l89QU19WTW72f1ynzyo=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$359795#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 14.683687490792616`}, {1.3901092856232244`, 
          33.67575905675988}}], 
         LineBox[{{2.5940631950850506`, 33.67575905675988}, {3., 
          13.38660900710161}, {4., 9.939314094989271}, {5., 
          10.334039354364887`}, {6., 6.09495979218085}, {7., 
          3.473933612017539}, {7.157497435926588, 33.67575905675988}}], 
         LineBox[{{8.841202113667984, 33.67575905675988}, {9., 
          3.1774824585517876`}, {10., 10.164290406687403`}, {11., 
          2.882370719748806}, {12., 27.27147861106733}, {13., 
          2.593374129045225}, {13.021495653704848`, 33.67575905675988}}], 
         LineBox[{{14.986052547598696`, 33.67575905675988}, {15., 
          13.662341108812514`}, {16., 4.33227829326725}, {17., 
          2.609733284579421}, {18., 2.543520103563511}, {19., 
          27.797925959057164`}, {20., 2.3422239534862586`}, {
          20.251548362993788`, 33.67575905675988}}], 
         LineBox[{{21.75224713854241, 33.67575905675988}, {22., 
          2.970711283883745}, {23., 2.2752702652301684`}, {24., 
          8.56831735301132}, {25., 2.1096121021348413`}, {25.032356353118626`,
           33.67575905675988}}], 
         LineBox[{{26.97818225513379, 33.67575905675988}, {27., 
          12.62016321166344}, {28., 4.985896037289416}, {29., 
          2.609814283103131}, {30., 2.1942946710058777`}, {31., 
          2.126052763100539}, {32., 2.1119395353323895`}, {33., 
          2.1092996007578404`}, {33.080205027793085`, 33.67575905675988}}], 
         LineBox[{{34.93079432446564, 33.67575905675988}, {35., 
          6.760206693255172}, {36., 2.858298049921682}, {37., 
          2.208976077058934}, {38., 2.116305613443944}, {39., 
          2.1040340703639924`}, {39.56544214705772, 33.67575905675988}}], 
         LineBox[{{40.437559970467674`, 33.67575905675988}, {41., 
          2.4871235623952375`}, {42., 2.1200628227424856`}, {43., 
          2.0808180802491587`}, {43.99057620479656, 33.67575905675988}}], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQHdYvUmvK6OZgnnjFtf6agwMDCDS4Ofw8y7xHxJwR
wmdwdxBItvBf7sQAlXd3UJwseIlfWRcq7+GwxWmPZ4H6f3uIvIeD4LXIcOtw
Dai8p8P1DUfPHpr8Fyrv6dCo+s1lT7QlVN7L4fodq/nFLkxQ870c/Av13JZY
/YOoZ/B2yFtf5pobBNPv7eAYnfqIwwSm38fhmO7v71GmMP0+DnN3pxpI6sD0
+zpsvDDnwS5NmH5fh618F7bOOWQF1e/n8H6nME/Fd5h+PwdGqQ2LWZ1h+v0d
fOVfPnzNDNPv73CMvzblSooZVH+Aw3U1TRaus9DwcghwYF70/T3ndZj6AAeG
h0mTT97+Y8+ysGxa8qoAeHgDANr6bmA=
          "]], 
         LineBox[{{67.34512850563574, 33.67575905675988}, {68., 
          2.8433695929617824`}, {69., 1.9893355897264025`}, {70., 
          1.8217513756121022`}, {71., 1.796107996665513}, {71.18158493154887, 
          33.67575905675988}}], 
         LineBox[{{72.83386578915518, 33.67575905675988}, {73., 
          5.049125035586584}, {74., 2.5121430189132203`}, {75., 
          1.9474653992235471`}, {76., 1.8231717028113628`}, {77., 
          1.7974444969143926`}, {78., 1.7936655328283617`}, {
          78.01925955806996, 33.67575905675988}}], 
         LineBox[{{79.98830636854156, 33.67575905675988}, {80., 
          14.46642069284042}, {81., 5.67632099124379}, {82., 
          2.7608194654627813`}, {83., 2.011496581728856}, {84., 
          1.842446674046649}, {85., 1.804080688669177}, {86., 
          1.7955366502529657`}, {87., 1.7937867038572943`}, {88., 
          1.79352491578052}, {88.02155465362029, 33.67575905675988}}], 
         LineBox[{{89.9861554986691, 33.67575905675988}, {90., 
          13.35798214627523}, {91., 5.274135771466072}, {92., 
          2.5850628542660385`}, {93., 1.9842855910071602`}, {94., 
          1.841097502420346}, {95., 1.8052297551904575`}, {96., 
          1.7962747671994448`}, {97., 1.7941099902707691`}, {98., 
          1.793618014188915}, {99., 1.7935213477430159`}, {99.01900522162188, 
          33.67575905675988}}], 
         LineBox[{{100.98851055092895`, 33.67575905675988}, {101., 
          14.548160510403363`}, {102., 5.705129403320173}, {103., 
          2.7763820599171787`}, {104., 2.0190027876844807`}, {105., 
          1.8461193906716087`}, {106., 1.8058013032334286`}, {107., 
          1.79630797794076}, {108., 1.7940953841759584`}, {109., 
          1.7936058642736867`}, {110., 1.7935132638974947`}, {
          110.02155504841136`, 33.67575905675988}}], 
         LineBox[{{111.98615508207932`, 33.67575905675988}, {112., 
          13.35773510200014}, {113., 5.274104182169333}, {114., 
          2.585081313283827}, {115., 1.9842870485965753`}, {116., 
          1.8410889074596049`}, {117., 1.805218504359503}, {118., 
          1.7962630234526888`}, {119., 1.7940982194992372`}, {120., 
          1.7936062847291072`}, {121., 1.7935096525572123`}, {
          121.01900590829365`, 33.67575905675988}}], 
         LineBox[{{122.98851008614739`, 33.67575905675988}, {123., 
          14.548075218707853`}, {124., 5.7050968989997655`}, {125., 
          2.7763957424540093`}, {126., 2.019007454738487}, {127., 
          1.8461134584372512`}, {128., 1.8057915378969285`}, {129., 
          1.796296979316304}, {130., 1.7940839674549212`}, {131., 
          1.7935942906018787`}, {132., 1.793501625011049}, {
          132.02155544309062`, 33.67575905675988}}], 
         LineBox[{{133.98615466566991`, 33.67575905675988}, {134., 
          13.357488235302714`}, {135., 5.274072643633066}, {136., 
          2.5850997892183183`}, {137., 1.9842885200888776`}, {138., 
          1.8410803262923894`}, {139., 1.8052072670532977`}, {140., 
          1.7962512930015568`}, {141., 1.7940864618827197`}, {142., 
          1.793594568347338}, {143., 1.7934979704092786`}, {143.0190065951149,
           33.67575905675988}}], 
         LineBox[{{144.98850962127426`, 33.67575905675988}, {145., 
          14.547989939953474`}, {146., 5.705064409357401}, {147., 
          2.7764094305464107`}, {148., 2.0190121301262094`}, {149., 
          1.8461075372743618`}, {150., 1.80578178474863}, {151., 
          1.796285993339837}, {152., 1.7940725635856065`}, {153., 
          1.7935827298770644`}, {154., 1.7934899991175857`}}]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 154}, {0, 33.67575905675988}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}, 
   3.8642366895364823`*^9, {3.864399127566967*^9, 3.8643991927177773`*^9}, 
   3.864408290535779*^9, {3.8644084656048393`*^9, 3.864408535203203*^9}, {
   3.8644121372506638`*^9, 3.8644121664991503`*^9}, 3.8647400020413437`*^9, {
   3.864740112446008*^9, 3.8647401315408964`*^9}, 3.8647405821656713`*^9, {
   3.8647411204603877`*^9, 3.8647411572666073`*^9}, {3.864833847774952*^9, 
   3.864833885588805*^9}, {3.864833956755945*^9, 3.8648339894734354`*^9}, {
   3.864834046285186*^9, 3.8648340736853848`*^9}, {3.864834135424553*^9, 
   3.864834160853384*^9}, {3.864834242975005*^9, 3.8648342537785344`*^9}, {
   3.864834347334482*^9, 3.8648343648978415`*^9}, {3.864834756360094*^9, 
   3.864834773550572*^9}, 3.864836297439065*^9, {3.8648363491054688`*^9, 
   3.8648363583734913`*^9}, {3.8648364042357593`*^9, 3.864836411292493*^9}, 
   3.8648367773808966`*^9, {3.8648369316793327`*^9, 3.8648369593094573`*^9}, 
   3.8649208829425874`*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"21841473-7184-4869-8878-0909c2868a09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9825089812770936`"}], ",", 
   RowBox[{"-", "4.162116283573787`"}], ",", "5.4106138707660385`", ",", 
   "5.4106138707660385`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8641430640893307`*^9, {3.864143094166597*^9, 3.864143104412281*^9}, 
   3.8642366895364823`*^9, {3.864399127566967*^9, 3.8643991927177773`*^9}, 
   3.864408290535779*^9, {3.8644084656048393`*^9, 3.864408535203203*^9}, {
   3.8644121372506638`*^9, 3.8644121664991503`*^9}, 3.8647400020413437`*^9, {
   3.864740112446008*^9, 3.8647401315408964`*^9}, 3.8647405821656713`*^9, {
   3.8647411204603877`*^9, 3.8647411572666073`*^9}, {3.864833847774952*^9, 
   3.864833885588805*^9}, {3.864833956755945*^9, 3.8648339894734354`*^9}, {
   3.864834046285186*^9, 3.8648340736853848`*^9}, {3.864834135424553*^9, 
   3.864834160853384*^9}, {3.864834242975005*^9, 3.8648342537785344`*^9}, {
   3.864834347334482*^9, 3.8648343648978415`*^9}, {3.864834756360094*^9, 
   3.864834773550572*^9}, 3.864836297439065*^9, {3.8648363491054688`*^9, 
   3.8648363583734913`*^9}, {3.8648364042357593`*^9, 3.864836411292493*^9}, 
   3.8648367773808966`*^9, {3.8648369316793327`*^9, 3.8648369593094573`*^9}, 
   3.8649208830155635`*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"230b3cdf-7d4d-46d9-9af2-204d4e0a6dea"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8638909789768496`*^9, 3.8638909843991165`*^9}, 
   3.863891412317354*^9},ExpressionUUID->"e3b56381-3091-428c-953b-\
8049828b4235"],

Cell["Individual Test Benches", "Text",
 CellChangeTimes->{{3.8637030744782195`*^9, 3.863703080794203*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"n", "=", "20"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]", "=", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"\[Tau]1", "=", 
    RowBox[{"\[Tau]", "*", "1.25"}]}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"A", "=", "0.2"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"order", " ", "=", " ", "5"}],
   FontWeight->"Plain"], 
  StyleBox[";",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"maxIter", " ", "=", " ", "30"}],
   FontWeight->"Plain"], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ICs", " ", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.8345361209284734`"}], ",", "0.9821594008159469`", ",", 
      RowBox[{"-", "1.3929560809587587`"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"InitGuess", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1a", ",", "xdot1a", ",", "\[Theta]1a", ",", "\[Theta]dot1a", ",", 
       "u1a", ",", "\[Lambda]1ff0", ",", "\[Lambda]2ff0", ",", 
       "\[Lambda]3ff0", ",", "\[Lambda]4ff0", ",", "data"}], "}"}], "=", 
     RowBox[{"ffCartPendulum", "[", 
      RowBox[{
      "ICs", ",", "n", ",", "\[Tau]", ",", "\[Tau]1", ",", "A", ",", "order", 
       ",", "maxIter", ",", "InitGuess"}], "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x1b", ",", "xdot1b", ",", "\[Theta]1b", ",", "\[Theta]dot1b", ",", 
       "u1b", ",", "J1"}], "}"}], "=", 
     RowBox[{"testSwingUp", "[", 
      RowBox[{"ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "u1a", ",", "A"}], 
      "]"}]}], ";"}],
   FontWeight->"Plain"], 
  StyleBox[" ",
   FontWeight->"Plain"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1c", ",", "xdot1c", ",", "\[Theta]1c", ",", "\[Theta]dot1c", ",", 
      "u1c", ",", "J"}], "}"}], "=", 
    RowBox[{"testWithFB", "[", 
     RowBox[{
     "ICs", ",", "\[Tau]", ",", "\[Tau]1", ",", "x1a", ",", "xdot1a", ",", 
      "\[Theta]1a", ",", "\[Theta]dot1a", ",", "u1a", ",", "A"}], "]"}]}], 
   ";", 
   RowBox[{"p1a", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1a", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1a", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1a", "[", "t", "]"}], ",", 
        RowBox[{"xdot1a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1a\>\"", ",", "\"\<u1a\>\"", ",", "\"\<x1a\>\"", ",", 
         "\"\<\[Theta]dot1a\>\"", ",", "\"\<xdot1a\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Feedforward solution\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"p1b", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1b", "[", "t", "]"}], ",", 
        RowBox[{"u1a", "[", "t", "]"}], ",", 
        RowBox[{"x1b", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1b", "[", "t", "]"}], ",", 
        RowBox[{"xdot1b", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1b\>\"", ",", "\"\<u1b\>\"", ",", "\"\<x1b\>\"", ",", 
         "\"\<\[Theta]dot1b\>\"", ",", "\"\<xdot1b\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Test on dynamics\>\""}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"p1c", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1c", "[", "t", "]"}], ",", 
        RowBox[{"u1c", "[", "t", "]"}], ",", 
        RowBox[{"x1c", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]dot1c", "[", "t", "]"}], ",", 
        RowBox[{"xdot1c", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]1"}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"Filling", "->", 
       RowBox[{"{", 
        RowBox[{"2", "->", "Axis"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Theta]1c\>\"", ",", "\"\<u1c\>\"", ",", "\"\<x1c\>\"", ",", 
         "\"\<\[Theta]dot1c\>\"", ",", "\"\<xdot1c\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Backward Integrate feedback solution\>\""}], 
      ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "3"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}], ",", 
      RowBox[{"GridLines", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"1", "/", "3"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}],
   FontWeight->"Plain"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1a", ",", "p1b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p1c", ",", "p1d"}], "}"}]}], "}"}], "]"}],
  FontWeight->"Plain"], "\[IndentingNewLine]", 
 RowBox[{"{", 
  StyleBox[
   RowBox[{
    RowBox[{"\[Lambda]1ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]2ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]3ff0", "[", "0", "]"}], ",", 
    RowBox[{"\[Lambda]4ff0", "[", "0", "]"}]}],
   FontWeight->"Plain"], 
  StyleBox["}",
   FontWeight->"Plain"]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8637030916107454`*^9, 3.8637031163048553`*^9}, {
   3.863703146634164*^9, 3.8637031467241335`*^9}, {3.8637032271314416`*^9, 
   3.8637032981877384`*^9}, {3.863703344313999*^9, 3.8637033675275803`*^9}, {
   3.8637034246933155`*^9, 3.863703488801831*^9}, {3.8637035225560446`*^9, 
   3.8637036066221848`*^9}, 3.8637039678437643`*^9, {3.863704003356416*^9, 
   3.863704015206629*^9}, 3.8637041910564413`*^9, {3.86387938554615*^9, 
   3.8638794077180634`*^9}, {3.8638794473054113`*^9, 3.863879456186574*^9}, 
   3.863879487594535*^9, {3.8638795768290167`*^9, 3.863879601771044*^9}, {
   3.8638860815410876`*^9, 3.863886103615032*^9}, {3.8638861483497353`*^9, 
   3.863886172621978*^9}, {3.8638914447629833`*^9, 3.8638914562922993`*^9}, 
   3.863891796977415*^9, {3.8638918475872407`*^9, 3.86389184764522*^9}, {
   3.8638937946529503`*^9, 3.8638938135878987`*^9}, {3.863893847458075*^9, 
   3.8638938597471466`*^9}, 3.8638940187133408`*^9, 3.863894098689779*^9, {
   3.8638941539631133`*^9, 3.8638941576359406`*^9}, {3.863894255027814*^9, 
   3.863894255155772*^9}, 3.8638944064184275`*^9, {3.864132884995618*^9, 
   3.8641329073813734`*^9}, 3.8641331504876966`*^9, 3.864133195282199*^9, {
   3.86413327929601*^9, 3.864133287553337*^9}, {3.864133332576766*^9, 
   3.864133353182098*^9}, {3.8641334403238955`*^9, 3.8641334566426144`*^9}, 
   3.864133562247438*^9, 3.8641336317199535`*^9, 3.8641336640694847`*^9, 
   3.8641338838003726`*^9, 3.864133916131909*^9, 3.8641339918014193`*^9, {
   3.8641352038731537`*^9, 3.8641352725329356`*^9}, {3.8641417727182617`*^9, 
   3.8641418023916583`*^9}, 3.8641418403363776`*^9, {3.864143075053784*^9, 
   3.8641430827452946`*^9}, 3.8643991519070525`*^9, {3.8648340857095227`*^9, 
   3.8648342635533967`*^9}, 3.8648343410794935`*^9, 3.8648363787789373`*^9, 
   3.86483642145223*^9},
 CellLabel->
  "In[1145]:=",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"30\\\"}]\\) iterations.\"", 2, 1148, 49, 17533747568530898616, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8648363812901297`*^9, {3.8648364232176623`*^9, 3.8648364374171004`*^9}},
 CellLabel->
  "During evaluation of \
In[1145]:=",ExpressionUUID->"76a81809-20f4-4ac1-8b9c-1a5bd61e40b8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1:eJzUvHk0ldH7938Gh3OMh4MkSRIZGpRKVHtXSEQDCYUGhcqYChEhJEQoSaZU
KkVEJdw3Csk8TwmZM8+Hg+f+rPW5j2f91vqt7+/3/Pf0T+tanc65731d+9rX
fu/XvtZfsD95iUQgEDp4CYT//C39cPFFrOTd/fsHhDc2244CnVwu/V4rBGQk
yco33h4A5Xy7aBxmVWApT3m0w6ILHHyoib4+1gT8TkyaflKtB5e2zvMp83WA
4/e8EjeFpgI9+Uvjooe7wQxHYMG3g1VIep3HjZ+q/WC+9qKn8LtORF1IIZXD
cwjIm/O8G7/6D7FaePT8pfEYOGHD+/cz5wRiX9S3I1VvAjgrXRIavj+NBJpy
bly8NgV2DXwaKeqdQy4W376sbD0DLvNfQFvyFpB8rtUnrprMgcTxtamqJkuI
sqDX4wHneTAZazsi70NAz03uU9K/xgI33L4ZrXtDRBNif0jMBi+BpSvvv1zM
JqEZIWqtNScJ8KQj9UTZLTLqnL3v+POjRCi33dPdvIiMIqUvJ+6fIUGjGCMb
8ygyanN4T66NMRkGW5VJVw+Q0Jhk5cyrVzhgvpB14uw7Iho2mXvX4RYFnrD2
iQU0Atr79sZNaydO+EQn3u6RFwv5rvUoytubCx7o3mk8tmMOIR5r6XroRYX2
pzddnCudRAgHsojxrjToeceCnLl6BAlYNatX488Ngf1M7psXXYiD6cWCWR8e
yGUnpuzd8gvpvKtiCSJ5oVc7L5+W8E8gHP605X4CH/Rr2sTbovwXvKIruBY/
44cfAr3ldO6OgHyndZpy7wTgy/wNZRa/p0CsVLzEPkM6PHAu4s/qd0yQ6z5P
sK6iw0O/pNbaiS2B9bpcrA2nBaF46aeNWeeJ8FOl/IPmOkEYNh6XZuxBhkFF
S9ukzITgo3PKpzfGUGD49YEr59qEoMf1DTs26XNBdxFJAWkTBnSuNTXhCKDC
N/KUUucOBkSvCmcRpGmQc4q4Ot9cGIpt1jBcWE+Dr7d9vBPbt2LLX3irv2gr
wrZbj3xNP/Vvxa554bYZXBdl23MZJ/ZKT6zYy1+cMv3sVrFt3W1amu7TK3ax
2Vabq9fF2PaHNIfZ5eUVuzSs1bHfKhWoRRZwersOAcLPu0nSHovAg6fhLbqH
hHKYP7epeLoMtmd6vGXJkNEImRyRL5UE2KJTF2uQQkajCxwTGHVEuPa9qOma
AjIqfH+0kdlMgh8VQz/vPk5GSS47v17pJEMD3W/IS1MSKlpxa83IGAcszf2a
WN1DQOlrp/TQGCE4SDSM8vfihAHfyfvyxRmQ1KRky1zggo/iwq79imHAXup+
8exxKmwK8RmPXrcyfkaPmn9tfbFiq3EdT8v8uvJ+P9V8vg5ZxQHvwg2khxPD
YFu7hfWXKRY463k8ZPMkET15R7mwi7EMdri97bwwQUKTTG67aIYR4BaRs4Td
kWTUP6/RxTiUCAUM/6o9KyGjg290evKjSdCUVzlbzoWMZlnsVh+MIcMC5sIP
jVck1OSbYX/Kew74Ptzv9IguEa1wdAVj7kIwWO9bQiOdE/LHzNSGLghBOc2F
mc5kLujf0pg748aA7imD9+wKqRCe/f6bi7DyPlUZLzqCKEvgHvdXi1PuJLQl
loP6W4AALz4Kzn15goz6jrLSFfiJMKKsSKcyh4ymFPGUVqwiwVuJZcrb0sno
fuuIUuXVZNiwsXd/phQZPRa6Y/e/jRyQT4XozMdFQk+W2J0NzRGCBkFx6wIH
OSFpmP5qfA8DBl5/05mgRYWxlrpr4vMYUL7MQfm9IA3a5x+kbAErz1cSVKM9
bfUQvLJ+s/Fp6ggo6dfX8UljAZEw0/bgCiLqFrIwOlS1BMzijL9zNZJQpakW
eV4nAlztMjSv6U9G7+QEdrvZEaFfpdLuUGx8DdXm/m28TYJl7b5g730yGmqg
ynrjRoaZU3HFQj9J6LxyoT5vEAcM+qM8n+NORDdL7FWl2grBwKTcYOFGCqzi
coib+ycE96Q/WLjmzgVJc26Xea8wIHPvRgWd11Q4VdBtsH+MAddOBe/u20CD
1nmPCk7nLwKZtb/Vw8+Q0Da92r3f25YB1eF4ufheMsobeNZyfIQA/fQ5b1/J
JKMvvuftHJ8mwh+Dv6fufiOjb+YOVEcySbA86cn0pT1kdJOvytxbMgeskHjv
1aNMQj86KZ9KThGCQRVHM45kccIfxoGOJgpYvhDYkW0tTYVi3iOFme8ZkOhx
p+kRmQYV7aweNxktg6ydxARLXjIqgawpvpNGgN9IT60jErDxQGX4dqUTYfiO
va03sfztufp5u1k2CR4qU/4kcwl73lwVkc4HDKgWdctRt40Kg6ZfWFULrPir
6HHc+GllAvyaNcYTjH2eZficaLmZCF/3y7S4YPM3q8TYPGUPCTLO7A63fkVG
wd0nLfePMOAD3hPp962pUOZwslNgJQPe5LZt/rMG+75tjlac1p4g25jP2J9/
FAjbaX2zDmGBgvtD7qPfiGjI43OcTqlLoC68uu53CQl1yA/0tr9AgPEpBv5f
Pcmoq7qleJAZEUqksGK+FZPRQNKx0dNXSbCp63YDTxgZdS//0nbfhgz13qwP
+9RMQnVt54l7b3PAZp+ovOAIInrW8bmK8CUh+JimpZb/lQLTc5XuKXULwf5V
KJ/PJS6I+JWpPTnPgMYisqtpUVSoPzMVYtLPgHHbKjWvYf7/dChwx764RVBv
IDxeqkNCx06pGhz5tgz8ghuZ37aR0eOneXMN/xDg033KWcIfyWjsoairpB4i
RGKnf4giZLQdjaorHiDBKY5mER5NMiqy9KkpcIIMF7jHm+9pkdCO4kcnPiUJ
QW1+HvsnzzjhK/7Dp4OlGfBT2mvFmwJUWE+HUfAlA5b9sv+6ZoEK998sSzHb
uQwuJB2bfLhMQs8F/VrXFU+AqtN/aqOekdEgsHTwcAIRJjHFXSux8frUOdn5
8C0Jvn39puCvHRkt1fUbuOrDgBfsWk9oV1FhlXiNe7QUAT6v4nQvP0NGobSe
afFaIvROfERtw57/4+HtEbmbSJDJONkUgeVzqd2GaO4BBlw3v/9D52kq7Kxn
aokUM+DjX+fFtFbRYL+sYnXyXQIklS0ccggho977Pn6w8SRC3i1rpFqx+ath
I//orhMDntlxpLMgkwqjH9aJbZhjQO+RQFFbbLxLclJ4QpYI0EXqR7bBVzKa
rNmz/IeTBI/eyruq9pmMnpmMGVXIYkAuGY/z4jw0GHlAt1GmkAhPJwk4hn7H
8teWv9AoggFvDWSRr/dR4Rf/4WTCPiI0i9n5IQn79+wjnpue6ZCg5sTm1+/i
yOjlL0axy40MSNWpV7ixjgbzXT4kbbK2B+FNGubS+0dB9raC62c8WCCiptQn
OJ2IRomHh32KXQLH7lq8e5tPQoWSu7YkmBKg0nDlcMVtMjozfzxT+BQRRkfr
c0ti4590eX7M4SIJvg+MLfoeQUaduJllzHNYvjI7FFnbSUKnuB+31jpxQGZV
5Ntj8UR0ak3FdvHzQpCoXLqD9ZYCE8V4XLQ6hOBl/j0hf024oKT+dNJZMwbU
cBzvlgylQpaAh5JVNwMG6X3XqcPqCVNOzqGtIYtA6FPMP72DWD5svtL+4O0y
qEZfHehXIKMT+yxt/BoJ8BBidjf/A5Y/yPc4H7QRoWAcL+87lIwyZTQaOjpJ
MOiaiHeaDpYv1KdL5gfI0NWrZN3L4yTUxanwWHa8EKS+oNPWhGB1nc1GndeS
DJjeZvG7hEKFKk3WJM4EBqy7u9zvP0OF2vNLu+NllsHOOxpGHEwSSrq+oYzx
lACHivJinLF6knt58HdlFBGabunu0cLio1Iz7m9yIgnKVOkqRF7H8iUj1UDZ
kwGP1XVNTv/E5sPZqwXqYgR41IX/XpERGe2ivuRkihDhJCiOvJhHRrdwrduq
JUWCve/kXjmnklHBR9szGvcxIFLtdN/wGLZ+Ppf+2FLAgJl3A3c+FabBQD4f
jxZXbD1/zX27L5CMEhafH5m4SYSMtWOTRdjzvNh2kqVlx4BvMhXb4j5Q4eE3
Z7O2TWG2Ml3wJxavV15wfEFmCLBmy8W8a1h8ylJqoq2XiFAW2bj/Lha/2dk/
TMY+Yvn7fEKnMxcNChFVnd5nY98vvcou8gcZ/TDN825NKAPm1zTNz3dSoamd
5qntO7H8nRY1FVNIRlVp1wo3HMTidXndZokXZPSHpyf1Ry0DJl9RvvRrLQ2y
bt/yJF8mwvqqDr7d2PMmtF0b1x3C8ofW3dUl2PNJ+b6rch3G8tEqMwfzXDJ6
88iqLbffMOClCp5B52Uq5PcSTM57Q4Tlo/z1Kli8xqpPv4/cSIQH05W8VPOx
+ctf3XbsFwOO8k0qZ6ymQY473xmd/kS4q8Q7qgz7veEbR2+LsBhQyGngcw0W
f2Le5ntjfhHhb6+IEivs+UUTIlkVGkRY8Uy99yH2vtTxzSpqbQx4Cl3v2SZF
g5+p8utsrS2AsJPemvlTo4BPiFBV58wCf/mnRhvfE9GYs0qNpx4vgSZB+mta
Hgm98Iyfkm1EgKNXmDFVrmQ007SY1HycCO+sMvYqwNa7dLEqRw8LElSsv+gd
+ZiMjmxa/ePjWay+KToT3NBDQkuaL5bE2XHAKMeCftlXRBQ69iqvtRCCMZ72
C49eUKC4lpujQbsQVF7eYkQz5ILlH2mm4AwDtmg3x68KosIaiQMLtl0MeDT7
16Aj9r7v+w5pv7m3CNaK2unT9pPQ5TUcMpsTl0EEc9h2Wo6MHlIOBXG1WH1w
2fRv8Hsy2nphweBYExHm3wpLs8LGl7Nx9enh3yQ4d0m455YeVk+aiOSn95Ah
qzni8JtTJPR7cat+bqwQ5NS9pWTozwnpTyIOfZJgwC0p/y70EKjwr7rH5/5Y
LB+OG+/eNEWFenujPA5ILAOHlqqTWdMk1ODysUSlSALs7gmYa8LGo8T8vGJE
BBYvrDOONzD/tc06W2bGkmDM+6P6XTfIaNPNQqqwBwPuEj5Q/6UIq6cXd1/i
FSbA8ODk03sMyegOVlWboBARXrojNhCDxdPw5Uh3bgkSNCO+mmpIw9ZnJCGl
W50BD5hx/FnWocJRwu7LuSgDFhdt5lNkYPsXQqrB5A0C/LhGonI1Vr8hZ4Wf
ZDkRoXj9pZ5U7HlORlz+KH+NAQ/OnTq28JYKJbOk7u2eYMDGxLr6P1g8f3u8
LaRpggDbc/eR7bPIaLeldr/SPBEaH94h7ZeN7U8lW/hrUxlQ3G3q4gMKDVaf
+4A4ZmH72d6uCG4sPsxMpM4tBWPraYCZhMIfKnx33lFRVxkbj34rR34sXmet
u+j9+7D8c7yyuygJ2w//Dc99Xc2A72qsyn9L0GB263BZMbYPLOLijlnE5ovL
wDb05CADmjxwzk3Anu/P3/WS+weIMEfDTxJg+Uj2veJfs9dYvslpSj22SIXl
f/ynvV8S4TPDfw/9sP8/umW974f1RKioMPYjGMu/2516wrb/ZEBrx9ZkXzEa
LPytdv6lDxGqrhlXacLG57s3XUdingF/D33PkcN+r6Gz7v65YiKkPRwNJ2Dr
m1VEfk0fJEKfDMe2tdh8+2x4cECihQF31HduVsbmm+qzFqvjJth8vOoq4oj9
/kbyV7NzvQzYSjH6/p/v041zDuV5jsWnyM0IAez3DjyXY22+TYSJ34+b12O2
Q0xUn/wMAw7tP9qYiH3eMCFfZiCPCN2K9S+uwn6Pdnu15+o9RFhzK8xCBnse
UYmrBl31DHhH6OaDZEka3CdB3A6uEOHb1RXDVtj3lVYmS2uOMGAYTU77P/49
JvXMdP49Np8XczRaMH9pSeoXSQQRYSXlodYX7POiNgEp/EsM2K/RPm2LzT/j
4NWep9sZ8LYlP+0WVr/ieo5lmKt5wWIrgus5Ks0zV3f+aWLrOWEF+s7L0rNs
Paew5s59dc8ltp5T2tMe5/hgnq3nfB+//vG3bR/A9Zwh+qf1fHptbD3nosBM
nUsuk63nXHvUiOZZkFFcz0l46b1rYwcFxfWc8j9SXRX6FBTXc3jolftYFiQU
13PWn0nOjA6cZ+s5ZkPrvzqI9yK4nhMaOyJ7424rwPWc79t29pH9WQDXc6RP
7LQvOkuFuJ5jq//jp2iRADSKVnYOP5YBCP/9E7AtfX7hey/bxvWc61X8jcdU
+CCu59xroTmbpZAhrue0oLOfVIImAa7noEYlHlVzzmw9x6U/dV/9sWG2npPJ
/Od7zGqWrefc/6lhDX7OsfWcZAHdXjfmOFvPsXY2yjkbWIDges7WyQbpXSFj
bD1HkxR7gtW7yNZzXGbEO3P0SBDXc7Y9Jn3bs0CEuJ5DSptNHnjHYus5QYW3
mufvDgJcz1l6GbMvPK0JwfWcRXWL6kDbRQTXcyp+vbRp2EtD790aKBbKWGCP
l250htvRu1wQt3E9B7dxPQe3cT0Ht3E9B7dxPQe3cT0Ht3E9h/37/9VzcBvX
c3Ab13NwG9dz6LRR+4ScbERq8XPM4q4SoHPpbJ5G3AgIqMjtPmVUB+SdFQKH
lFmAc1ZihGNnG4iJsjA493cRmKSkLm9Q6AJ1NZeFDXdPAYKn444x0AsOckz9
kTnwHdycNBDqOzMI7tRKW6Q2jCG+HJum5aJGQKQNj/DBcAL671yutYLBOHDa
JuFvy0lB3em3lIzMJkGdZ0S09RQFnaHnaz65Mg18wtdsVpDhQB9ZlZ6pODcL
sqTrKjxFCKhrUNl1BSsmqH6hHOV3ahLRJll0PnNYAG/u5iLKuYUIrkd5ZxzS
E3QjQ1yPao06N99pwwv1y18fssniZY/HKd6RwbAPgmwbzx+4jetRZ082Ktfm
YfXnnI//jXlOSDgeIfTiUxfo0snad59IhcISya79CX8Qgrb2xCosz1s9dtA1
bJpENFIa5L4SuOGs+kSPuBoTYalupvZQeCCVp5hqbziDbBrRDX/Gywv7T405
83n1Im7cVnGWa/hgVEr6h8LiNvC7uvNNsiQ/PCLt8VVr5xz4lC9jcWuDAJQM
3pn8WooIl4eeWPQL06Ev5J08fp8EP+iXh5x8RIcfpF+e2R2B1Ul/vZZ+MARh
d0dTnVbfNLgSHFW4FIm9r5ItMM2oBLhehr8vrpfhNq6X4Taulzk3JCTW765F
uoZ/n3eZLgSBXW/qDZJ6gMIIcybFpAaobch0p7GYQOaQ8mmjgy1gdQGJTgxa
An+G6/zerukE0FUwISB9FsgaXn3kc6gHeHK/4BYbaAPC3f2HjHUGQKlfeVoH
fz9yjkf+5OMHw6CUc0rgT+IiIr9lE7m/fgzI0kIjD+hxoDevbk3zrp8A8tZ3
hikUThTNvLiz9N8UeCeWpMtVzoG6rdrQ6dk9Az5nvDIRPEpE15Y6del0zIH8
21XdG4VnkZz7o98KJuZBctjHDTxXWxFc73txX1DzcS8B4npfPHJNOvQmN8T1
uwW/zp9EIR7YXs1assvihNEuVgfv5Q+BWm2Zf5QCLmhs9+1LgW8V4qUbNvif
uFH3cLYRcxxHEm8WRSjl0mBI2aNV/E/mkIObhN61FnHDrzslP5uXzyJHkxrf
HinhgUPiMYox+cPIlqJy4skmXmhc7FYftLsQuKTvO7i6gw8WFaS5JcVNgc02
ctfi/vDD9S/bt4TIE+C5V3Ik90EBqD5ukNd/lwRffc6qP3ydDhMyf8n3XyBC
o7TcZdEJOkw5c2NpTQgTaA1VWoTdFITG+Yaim10wv/xXX8T9vaXQ1mnOa8X2
SkeCQh+vxINYoduh4eDPoEM1IoiMosCM91Gjt0sZONwsbHLBdRL0fLhbs3Sy
AbzgvNYykrkI+t9S72XItQOHpwYhVYEsUHsl0OW56l+Q8XM279q2MdBEQjpu
2P4Desbp6y3tppE3i7JRX5NGQUOPtPdbSRL6PvxkxbWqcXCp42P+niAK6pOZ
lyzfMwnaBc/Ue3ykoErXJI0sB6ZBWWnKk36sXn372bFB4vcsSGOF2hu6LSK4
Ppp168a6g3MUiOujjzcwcvu28UNc/9QRWpBV2igAy9bx0N33c8EAnq9ClUI1
YOKodijvASq05iomaPb2Il4ay8wz6ljdR/Z/TWycRno7e7M1NbhhVfAuN18d
JpJ1RPvSiAYP3MJSfx12fgrhUEVvDx/nhXVbNGh9ua1IsT5h3y1zPihdvGNE
tbcPHBy/J6hqxg9r9KxL9MACUBOXPnnMSgC6R6Y7BTRidRunRN4jFTpMdms+
ctucBLN6/h42+0iHxfRZH/V1yyBglcai805BeLpz8J/Oj3GA67G4v6bOdNS2
tK34D9dnp55eO2q/qQnR6HX4nlmXDxzKFJtu0zoBa3GVl/GZamArAM8hiXNg
h803nmXtZrC9f3WLW8wSSAyxKrWN6AAkFQ6jRypMkL2//4Dej25AUDd6fJP4
F1w8m9EWmt8P8vJUJT3X/0UqQt546VGGwXfvEZP4bwtISYRZldaTMbB6QtRF
+DcZnYjimYgKmwACLanFN5gUdCN15/uLKVPA8Pepl01CFNTOvvKF8asZ8KAj
vdu6hYiO9v9Y3RozB34eS+gJb5pDbpbvlm/ImAe+V+9npE91Iri+XFG3/GD9
5mWA68toTnOauB0N4nqx34eMiSZ5Xnhh/9fsqxGc8NnskZG4iTFQdrj1gEYi
F8y+rrIsKp6PwPLM3o9xVHh2a+JrfbExpPrMft3Lz2hQv/HohDt9DumJ82UZ
veaGB89JNjLOzCHmns+zpF7xwI/vr9Jr3ccQqgwxo+Q/609U+t5NpaagKPFq
SDXKB2OULBXM4ybAYE6yU0YuP4z0cK98qLQMQoNevKguFYC3naSOVNmRoPQ1
RdeCi5j/q1ODOjKJMFD0rBfopMPsMyN7yEoL4NOzf+9bLgvCrNBCz0j+XhDd
+vlHm/2K/2UCZucXfVf8v6SpkjcWnwG8NoPSnXt9QB7HRjX0dCmwPGbiwXIc
B1l5cWfeGtYD2oD7UhP3IpiterTn7JbfYJf7gamoo4vgMc/anHMfu0DGl1mR
mkMTQO72fdcP3YNA4tmr+UiFSUT07usiB8lRwLjcECt0jogenfd/9itsHNxK
uRb89hgFJfyNHgQJkyBqwLmLq5mChuWNli++mQaR+blROtj+OFZA8ul07CwI
DnIqZrUsIbj+7n2b48PPbxwQ199ZsGFZ24APHg8q/uUiwQU/1b/rKklsBYO6
y70666lQ7QTNZcH+LwKLNszswfZxHMnKvZI9U4hIsbmjpzQ3vPwibPstQyZi
kp+dZbORBxpf+uHKsplGRBl+/t+38MJtfB7PLbW6kPiUHSPDe/mg6IbTG4UU
/4LQzgyzsX38UGOD5kWVIiaYtX1hfFFTAMqnRdUq+BJhL7M5JFeGDpcr6dP/
3Ehwe7Txv8YEOlzV2egcI0aAOR5dHs9lBGHEkJG47t9JILPp4m3LrSv+eqIs
dlD714q/njzRtxoNfg2iCt06DT+UIibtrbZE41pAHxc0cMD8L7L2deJ79Vaw
zqVGb63+EpDQO3ioL7ET7D7ffPIP1wyY8E/e8EdwBEzcj1F75biMBBZP7Lwv
PA6+y81fN0rjQJn7DOyurZ4E7+yJpjvJnOiZi49ytylOA+VgtbsOHhwo+vPa
yPRvKlyrktRx4eMEcj1Mv32iHdtXvvENt5ufQ+LS4kzO9XJDC6e6dgupWUTt
p2Cc0yAPzChNTYvSG0QUCgRmzi3zQV6fhQTXoBngIPLq0gOiAPxqrL2K8Z4A
xTpObWNQ6DDRblAFxeoZBfLB7eXedGiU4OJjRCKyzyvw8WAxlp01n1aAMOOA
yKhz00A47uIRgxONwHW364cD25dAs++dKu71f8CRJlWvw3ELQHJfrcpdkTHQ
4vG4ObeUhPJvXkvkF5gA4R0JvMdyKChnQNdlhvwUaHPS0iT5UlC0oGXRw5QG
T330Y2m/n0E+s+w4eC9zw6QaszXrJJgIo6aecd2SBzI4An5Xq08id4riddXv
C8CGhOSDX8Sx/MwwH7bSoMOKXFetkR0kqKZsn9SF0uFBq1NKGROL4IRf8iXb
kRX/4uclLnftNunvaUGcL2TfMPyOAqg9qvH95m/QTXmtsaWtCoRePq7i0zcL
1NwJlw3KmgCP1aXYiPAlwPFn27XK4x1g6HxzbXAPE3B8erV6u183OPg8hi66
twcERonJb/boB/pid89cetmB+FYNrJIvGAIuz2+9PYbMI2Lac7tmbo2BHZo5
OgLxZDQtlSmUZD8BvF/E6T8YoaDGH9fapAVNAaputxd9OwW1fraRouk/A259
FP1wFFufjV3sd264PQfsK0UjBjKYiOFo6x+LiHnw86oArOLuRvDznqTqJ3Ff
WxYBft4zsCZfz6uXCvHzmxjDRfuaNF6Y5PxE7IoPJ3zeASKC9k8A7eJdthcf
cUHftrnkyM6PiBR/SbdUKBX2CPWdIxWNINb6brI+gTRoF6z4ZCs6i2S17nsZ
8YQbrvaM7l77eA7pu+a1lzeSB/YfJIrLgXFkqiaah+MVL/S6wEuss05HhqO9
P23+yAebe97b5kSNg5LLAzdyU/ihv3/z3HNsn53sed6ZlS0AHQvqFLnOkeC5
op7S5TN0aCOZtO1ACxEmHXmH1jbRoYiIuBQyugCuXGcaLpsLwnbS2r/VR/tB
Vd/ZUX2rlfidcWKkq7iv+N+JK+y209uPAJVlvv76NxkZ9bL7Z374J6i3FOCs
uzgG4oq2SHnV14Hb+tKGPEkssPS3MTztYxs4aiafavd8Ecyd6TUrsO0Co5KM
qPwDk0D/88gPnfhBMDqXaehDmkDKC/rMjraOgObgl/LWCwQ05r006bbTOLgw
n/YlSYmC5jEDeHQ9J0Gi8gVJjX4K+t2q6b5O4DT4oGi/fmiSjEapO893es4C
B9s7ZaL3lhH8POyD5ePG1DUcED8PkzvadZ7cwQsfFbyUv8XDBaOkXRRLQAe4
/MtU6IogFWZfHnW9+rITkeLaNZXMS4Ovf85Xc1+YQlK+Rh+NEeSGlklpCZW6
TERh8brFaxEemJcgM7/YNY3EEWz40tbywqPBvTLmNt1I8JlyLXklPrifuKrg
fkkHyGou9Tm6hR+S+sKd3hKYoGFV9xlbFWz9HLo0e82QCJ0mVWdrJOjQsOft
m3YfEnSYEtonEk2H5r/iOcWMCbAhTTlPWUIQOnw+kRzXPwXunLme5Sm34i9r
CRXmnYIVf90Rp3ZNxL8AOfS5330XqpCDvVe2NzbVAL7E7evcn84DiW1DLCLS
Am4akDs/OS2BO895erQtOoFySvKOtV0z4M3P/uzsimHAWrXrok3wEtLiFhyj
Oj0GuIoj42y9ONAvhgce3pqdAGbSTx4UYvubEN7brh4804B/cXj39VccaDy3
55BlBRXaIXsdzghPINy+gV8FKmjwy6ql70rlc4jDkDEptoEbRvQkPSl0m0UK
s6ZkzJt5IHH5i9Mg/xByIltWIneUD7qKkDa8jJoG+kivdeQYP+yFRJGjtgSo
nWGjfGJeAMbSOLr2+ZGgtRnLh/s2Hd7Rv9R7QgVb3zZ9ShziWhkfpVBt2e6A
ciD16yTruOMUYL2a4JOvaQBXF5DlBeYi6HhSqGCR1A6cNCRoW8RZYOJbL6G9
bxQEXdG6dMOFhJp3fLbKHR0HRKtEyaqXWPzFVvlLck2BsWCFT0ejKWg8eXhh
SIcG2w/PX3uhOYPoj779s+kUtn+KHdbo3M1Euvke5qQZ8sCF8ocbT9RMImcd
OvU1XQRgwuexTbILRHiQL/eUx146Fg/v5Zg6JOjyQH5m3Vc6lJT+Y6OB7U+l
Hb9LJPWs+PcxnPkwGfwEqFaMjJRU1SOMmYBv3i3V4GeNusNZQyZQMrr58e2P
ZjA47pc9/nQJuHQW2DzJGgMd+hcMKkU5UBXvtdXBGRMg7O1LvjECJzphfnRc
tGwKrJuGJIVxDlTNhuRwJIUGxd9t7pA2nkOELX8ZrP7MDV21p6lyYnOIy9Oe
mlctAvBnfGaYOFY/dAs6yt27SodzmxkUsRBsP5BFf1JXWw/mtss+3Xp5EYzl
6v3hevcbFDxIXEMaZwGW1rCKxMdxcLh8uMLXnoIeLEv5qVI4CR4jZ4/mF1HQ
c/cE50oVaRAgOypczk8jd+qkH1/YwQ3vCgo+5sbqIbHvF06ZGAnAjY/k1/5J
JUJTwm3ZZCU6nJnjhzexetSh4egbxcZaYO57xCj50wLg576gbfKlFeybOuCs
L7kE1OQu6Z1XnwQSqk381osUtC1WiNwwSoNBnC8zv0sykaDemeJFXjpcnSb1
VfMBCSo+qfP1qGoEwQce16WaL4E8V+9o8y0TwPWXmHheJQXVdpzSpOpOgfLC
tt2NVyioFPcO+VFsX/6l4+DAvtk5JF7inLZytAD0MH1gDXZh9YP4su/Jo3Q4
Fep1zWQ1CXo9C/qwa3bFv/h5L+/7ixcdN7YiQVIWFRv2osDvm9CWDQqtoOn+
iOzTmCpgg+58YOk3C/IoG8IXg5vA1fw5t4bAJaDiL7KPsLUDpLepHevbMw+S
R+7dS7rcDaRKPu+WMuoFsbt0jy2Y9oO5JoXKgLJ25Nz4/b+P44eAxHWTd4Jg
HkETNAf1rMfAfj7K7eNeZJT+zeHFG/MJ8KZ4g01JHwUdpwgVN7hPAaHtMzwI
pKCXP1bt/HZrBpyjTm25CkgoL9Q4dPjKHKjosT/buG4eOUjY8i3Jdx6Uue7Z
4MToQfDzanfrKiGK8iLAz6s3DW0p6UmgQvy82k40J7lnTgDi59FnBTN+kyZ5
4Y+HfocH3DihbjvzklLPBOD07yZdD+SCTR37a3LhCyR0S/VF4wAqpPd0G5ry
jiCfDotFCHrT4HcQ+KAqYhaJc412zXjIDQNoLZSUtDkk5a/j8t0gHph1uNPZ
4Pk4cuVt3+eE57ww9N3fXWrfvyGEVSHFZ97wwU2Z9IAxxjj4/O3+rYNJ/HAw
80D3AXVsvF3RNsEMAbj8sETv5GkS9JwsuC5pTIf78wddFP4R4ba/NR3P6+jw
9ZMXYcX6LKBl4ZUseEYQKqhtGwi2HgD/bLdyUC+u5Ctz6wS+qlsr8aBkDUx3
pKZh42vyfsfbDIQKGBpbkBIAdyWJdX4aBRE6N0n/IuvAzwN5bhevsYC37Txq
er0NyP70oRflL4JNHL+2TOp2AdMLe6NjcifBhVPrh8TuDALn1GEpPttxJPmv
v3z21xFwKdTobGExAdXgcsisuTAOJn6sfzG6moKupRBijttNgv2ShfLZWL1l
llPW5+A2DS6lOnw/zcuBRp5Yp2jsMAvuXMqtD2taRvDzfRWuPhuBX2SIn+9r
RxjnHX3JCz/9jjCeIXFBrRPj5665dgKZB9RkVxoVymre3m6d04GEyoHrHRw0
mL1hvQlJcgqZS1fNVqBxQ86Kk9aiGlh9+6xqRxEfD3xkdyjujcQMYnnLtGqj
CC9Mq9A2PnqzB+HYIT5ZtIEPir8UW25Q+gNKTzU8dpPlh4ZJe4npz+bAj2u+
ZhOKArBj8YEwjzoRqjpYv/stRoedl7emcvmT4MP1Yz07HtNhV0e5VfhNAryg
Y9K+sEoQ1iz/i/tlPQ0UbywYBG9Y8Ve1YIGheN6Kv8ZbLeOc3yaAphd1NwLr
qpFdV9KFDz6tAdtrrtzlPzoP4r/yK6R4tYC2fgPPH15L4IPmWKbrvk6Q9Qik
PtKdBb6DAX6b3g8DURpK/Ce2hHjXtRwL7RkDAYEbd0IrDnTVuS/rPHonQHWP
0XIFtv7KnbdvfLEwBa6qdR/gyeZA6YoBV2OKqFCK1/etZ+E4YuSxSS72Bw2u
O9HPp5oxh5gEZjbkVHDDj7sberlfziIBm3v7aqt4oBPJ3Hrt4BBiuWv71n99
fLDx32OrHxLTYL+w/xXxfn5oS+uJ/adLgHUpJU8vTwhAlafZe719SdA/sFlJ
/hYd8j7/UUA7SoThB/fCefLK+GjoD9/JIJSDjU6hapdmJsGYgtpY+KMGoO94
XNa2eRFYru89TbvcDvr5bT6UGrBARZtfmW7RKMh23irMdZSEcqpR1oh0jAON
wZmT1k8pqMzbw2Iy2Pco2VnfycfWY7rMjJvMIRoczjzwfZvADBLdr633+Sg3
NGtdemt0kImUv/sXWnmUBz5X1PrcIj6F6P64e7zUXgCqRwT+aBogQmrgEC1A
lQ6/pPntUTxFgk++cMbtz6RD6V+y5eENS+DB5ZMuoHPFvx6FqfKz8eHAWDfZ
SYLSiFDdqp4PR1cDzdCnxGLWHEj7E9Vu6N8M1KL1al7ELAEpdfra0VdjwKXD
SezMPBkND444H544AQZdrXbFY+tPUAY8ti9nCsir+ROPkyio34X4340vaLBh
VEr48s45hEXctEk1lRtqqIqaPVWbQzjCNdRzagRgXk2SZI8zCZKBftULKzpE
g2/tt0kkwgI1Y1cQUQ+srv4zmN6zCJwPO/CmX/sNFNoummyQWgRJ8Wr91xPG
AfJEHGFZUNCExg2maumTYA5e59GsoqBVL8VvkWRokHtp6ZGMzDRSWo6SxxW4
YfJ5o58XTzER6mry6XY9Acjs2KTpF02EUh5vW9I30WFfR3L8+hskaGka8eDx
k1owR5Fx7XNcAI/CfW+Q3VpBRU3juWe7l0D09rbflxUmgWZf089MrP7YFJXm
YNmH1U85jrOf+ZjIyYuy7lQaHa6xi6NNBJKg1BoJq/7QRlDvg3hOHVkCl2sr
9bIkJwCr5I2QNVYvvHa/2sCnNgVyjvTElNyioNfI1Y897LihW1XayRpuJvLQ
kaCTFSYAXVYd3rC4iQTHHm/ZY6ZNh/6JyZtE5EiwP1Scu2bif6uvHmnuZwX7
g2ubVvfT1ZqRrInfqm+4m8GPN6XMG1g9dSLJ2zvWC/Of83sd+ykKKnGq7cvU
Ixr0ptwYtRmYRSr2dVbdiOOGLp2KzyJd5xAJPxJvX4EATDwxktNqRYJvD/bt
ExGpBw2BARXtTSzgZpp5mXOsDYTIju8xv7kILEYEb2uGToIE4efS1E6sHkJZ
7Xzi3LDyRPp9zRNMJOUm7VCJFBafB/kC6j1JMOrVz8rTiy1gzaE0k+rzS8D4
SOmSI3US2MS2SvdwcKJ5gUO6dxto8BD3vv2D3XNI+9l73WuJdDi+JeBDGpbv
qBveKeYJNoKGPZd7o1YtgSy/K58uLY+DuwGTvE4fKeilcJNZMbEpoDUgXuTz
kIKSZnidos24oYppmriMIhOxXXNAD/USgI+fPU904CFB99DgBCdIhydfv+/u
BiSYXGbgS+BoARruiqmXIpZA/c1XMOD7BAhatfzzMpkTHYrzuxLWJQBPhVuw
HO6Q4PZW30116txQJ1OEdeU4E4nw0XV6vo0OIbEqeOAyCQZ6gTWpM61g3Z/C
V3tIS6B1zUjOmaOTQGFtRYkek4KGvnSOPDxHg7PjtB3hm5lIkU0xY5JOhw/v
VddlY/G0ixGcKERvAksqsy5ODktAVGpnHye2jy+itWw42URB6+iR3855ckOW
SLHMhc45JK0Y0UpJFICnlzdAz4MkuOrV0slnCyvxgvNC1pXHi9ZFtCLKyxem
RccQEOUVLWqLvXeNrlBUhXsV4K9fTZ83nAVeOp/e1Ng1AV27R08t7y2Bo63+
L8UkO4C5X8Aw58V5MP/gxrffRt3gyhOtqSNdvSD5nuWFriP9WLxXxY8G/UYq
iKY/yx8Ogahm2y0OS9j46A8Vup4bA9axNQvrHcgoClOuKhlNgBYfu1Ghbgq6
fxvvzIDzFDg8yFfbcpiCWu6V1Z+xnwG/In9d+XGMhPa+2KLTfH4OJHcdv2p+
ah7JpjZuKnafBwOixqtkn/QgOO/k87TtBV8bC+C8U9bi4XuXPakQ5520s7vL
Yv8IQJxnWog9KFDE4INGa5fak29ywvzlh90vVCdBz+Vv5W5+XDC+95d4ZF8k
UpJ3aoOzLxUWFtwcd/owjJhq9JU2edCggZPqGsM7s0hEScnfggdY/jF2WLUz
dw7hjxvs2BvAA8fBEdHkX+OIrCh/iMNTXkht9Daf2IUi3PWMaqeXfDD8Jst1
W/UY2NJrMscRzw+3BHuuPyu4BOanR0MlUgWg7NK69y9OkiB/oHLJZiM6VBm9
aqo3SYQzqb1j3jV0KAfS/SM9WECl/lCNuIkgLPpT2xsyPQDm0qJCus+trG9C
F62/Pb+xEg8BUY9/hiungVBvbZ2jqp8R4dhLYyK3S8Anc53wKwqjIIQ3+rrU
zTpwU0w9+O4xFtBIf9C41bANpL/ZLPyvZhFA431PeNS7wKz0i8Dc+UlwLUlt
efnaILjjz580v34cEZ06LTCePAKu9HSui31PQMU+iT5cMh0H61XtoTadgpYF
qlvWXpoEtUs8Dm/HKejb3iJRX6dpsGHk60ZDMQ40os35ULj1LFg956o6TSCw
+bBcs8fNzxLJEOfDsEIw470/Vs1f5R3LXOKEAc7WUg2iXYB89Y/TXQoVio3d
yV7Q6kBKPhduZxFoEFZ+rLVYmERiU7nGxzm4YbxUZvs5gK0Xg0vP62k8ED3O
tfen6gxStL32YwedFwZ86NkcsdCDILHwZ+Q6Pth0RC7Ocv43qGOcjQ+T5ofP
Fmrc31rPgb1PDNs/yQnA1bUp95mbiTBmixflryi2Xz7tckg7gAQlv5irHYqg
w1+9I4Ze97B9xCrbkQ4RQcgbeD4ZJE8DkjciHbF+xV9+vPdJ/d9W/PVuL+PO
ztR4sNeXbkgJqEG2KTXcu+VaA9wI6y+ay8yDC0tx8O75FuDdKkPL81sCRU8v
SD5S6gQ8Cz6a5p6zYGLe+JpFzDCgJ5ifFW1fRIzu3pXP+T0G/q2dEDxjyoEW
9Uz2Lf+eAH9r59fdw+o15wc2nJ8np8B18/1lMYUcqPY3XsUvBVTYFb7+oEf0
OMJynTW7lE+Dihd+PrV5OYfoN/+FZaXc8OBXfoPrX2eRwX7znyFlPFDpfjO/
odEwYjf1WZXUzQffeCm7nG2fAln7T/9r+8sPU59fcG1TI8Bo+Tk9xxEB2L3W
EZzwIUHR9dp3VW/Q4WFhV7mI00R45RhBgEhaGZ/j74His5wyQHLdfXvjl0kw
OGR2/qdTA5A2MCjkKVkEspdv2bVrtQPfNRFV8fYssHfYKN07E6vX5jOu39xJ
Qlt6303BpnGwzfbI+MAjLJ9u9el4NTwJUK9C2ud32H75k5saBNh66UeKPj45
jcCeVb53tLlh2l6/u1laTKRgfvVCuzYPHHOnfHTYP4UUjJ6oDroqAE90LDGr
OojwqjaHZfAuOmQcSr0zakKCssduTOpl0CFn3fNUiYUlAM+vluX7s+LfMV/e
Ppe3YUAs+s/IWFQjQto7xb/hdjWINnlTR6+aA04yCtPy1s2g89yJ4kGsXpvq
y5oRjxsDEubHxWr+kdGDjCp50egJcNLmgc2rBQra9FvtzvFPU8B1UYMjmZuC
KlnYC8fF0eBbsLlv14Y5ZOy40aPD77hhtuPrFyK6c0ipgPNoUQU2/tuiXs44
kuCj+hyZjEt0mOLFJwNTiDCHdXvQ2bke+KktyBdKL4JdQcQN/nq/gZTMs76M
XYvARa8zP+7pODhpPT8zdJqCHjezkM59MwnW3Bj4kFdHQam74nZJStGgyu+B
nEaOacSh9KHaF1lueELZRGkXVq95HaptjD8iAJ2uZbe5PCRCH/UClS+ydBjp
3tAn7UKC5hJfWL9u1YKUEAC8jy0AwyaRoCbTVrDqZk3vzkNLQOfLqlcD6ydB
ToiMowCJE62I8Hyt+JcGdS19EFMOJpK5fn8DHxcd3jxR1eaMra/iv0HTWsdG
oPFt75jr/iWg5nVTrkt0Arg81lu+nk9BjUivY0OVp4CL8Wl7lgcFFSLEl2tc
4YZjY0Yf8hlMhDOmqtQlWACmfWqnLqwnQYNTWuEXtOhw/ssjWuxmEox50Pk5
bmzFv+4iy1+W433AtqBZc66cZsRlt/2xO/+aQFjOWGcHtm4RFPJ01rtg8w+c
YjzF8mHBiXej30JoMFL9oq9g/SxSECSgfu8ZN9TiiZ4XC5hDukjb0fE8Adj5
K8mVz5IEkzh4UnWm68CPSMZIZR4W73FaHq1VbaDloYzhvsBFwO+sd6jEfxK8
VW4ozMPWW87cXyL1ItyQy99EoFafiQjsXP+8XJION+XXrJ+5S4Km/0x7ldpb
gCd36qnnV5YAtZJSPLU8Ae4nvoixw/KDpf83b+0aGmQI6AecbJ5DvHepeWgt
CUBur76XJX4kSOqpiJkcbwDGKusbNtGWQOAOwZCw2XHgQ/xY8BWbX8KrI5Fn
AlPA9sZ2o+UICpo80Zp83oQbzqnyv/2lzES6NQUrvN0F4N0TagVXyST4R//l
wq39dCgrI3LsgSYJXhHsia7vbgaLrI52vydLwJfVSeXJmQADCltuaWH+T5fI
koxpF4CB6fsSz7uTYFOjgcWz3dww4lVirM9JJjJ74GJZ4hY63JyuKVJ2hQSP
/qhS9m1sBZLk0/UxdOx5E+TvtR+aBKHCYhedsfm0K/FQGf8UDVZ+3lB/XZaJ
yG/6YzvHT4fdzopSEg9IcFt9GkN7rBE8ejh0dMxqCQyWtaLbd02Ag9ut9KWw
+Hfjs5yQu80N6f96h6KG5pBNEw+L7WIF4IG/tbGee0mwLP4HwYa5Ei8sNMx9
0/sm8C8wRy7s4RI4t3Nnq6zVBFhouF6p+Y+Cnsyy8bnIxw2jr2hZqGszkfqP
x080idNhr6C1wsN7JNju7MFojGsBn56t+rjKbQlYt7ifnh+ZADmparl/Mf/x
b3vac2ZGAJLOJhfexj4/9c9VdOw4th8wOz5iuY+JjERzlXi+agZhimpir54t
gW4uk6f0dxPAYr2+2cVlrF4TFfH/2CAABzQX857dIkGZ6vEy+a3c0IFgObls
yERy8x55vVegQ3tXE9F+LJ8MpsSLdG+fBIu1P59swv6/97POPc//0aCOSxDF
T5SJjCbxS5N5sPib4nu/GxtPWZO56fS0RrBr5s+Wj4ZYvnt/VLpOvhncHS8a
N8CeJ1HycPaa+xMg10hemn+WgmYXbk7WkuSGn/QaJ2UNmMiRL+P9BdJ0aKnY
Wu3ugdX3hSG7RumT4I0067gctt+4HWsbKEamwxM/70nVYetzr3+BreKGFjDz
zsUkJHQJyI5fcaGUT4CHLb67TmCfl91wOsuvVwBGqexP0fYiwaD2zHFeyA23
DUvFoXpMROlx+lST4SRo0rN1npqhoIPJL829WDSodHkqTlqFiVx4l/p1WAhb
/5copeux/LP3hI3y761NgNxVtn+XyxK48G73y/LFFf+v8HRe+8eqbuXhPC4U
XX3dwPQzgvO4/BEDP9HGIgTncU8WfPnzzrocwXnc99RfPc2TlQjO47pXtbP+
ZFay71e/j5wPof6tYPO49uVdxONyVWwel6rbsTy7o5Z9v9rFd881c2YT+341
7yn5Q3t1Otn3q/eO3nBvO9THvl898kLvlZ7eCJvHjcqfzfpnO8nmcbXre/1D
ns4iOI8rqNSlLriwgOA8rk6g0vzJvGUE53Gp73ZZ16kR2fervc73vOGWIbHv
VzsTY00MbFbuVx/i2aIVK0li368eGTx/bu4MkX2/evyt9ccYSwKK87jqqebC
pveW2Dxu4pMaa4knLDaPe6Tx2KsSiQU2j9uzJ6H4q9Q8m8cd6+oan81hsnlc
te8T8bQEJpvHrXJ/9mXhBhPBedwoI8eK3a1zCM7jihotbzBxnEVwHvdyh5gj
QW8awXncAPXQoz9uTSA4j5v1WvPXLZ9hBOdxp3QjTshN9LB5XPNrP34rfmxl
87hKFqd+TXaWIfj96lizOhch+wwEv1+t/36EbL3rFPJ/C4+bdnz1gj3nazaP
u33QPoY/LR/BedzoVCSe9LoUwXlc5tUmRuPaSgTncSs8xNppPFUIzuNq3BFy
zt1ZieA87iTy69yJjZVsHjeBeo247Xg1gvO46YpFUuVf6hGcx/2mxMG52vg3
gvO4PDWfR0rXdCM4j9vdEFba+nqQzduKmiSbTEwuIjhv2z/xvf3gMwL7/ndN
1cZHIt+J7Pvff576bZYzJrHvf1dUap29YLRy/9uxQAy1+UlE91audh+aosDT
W9M33+4hoDhve2rqr4eOzyKbt5X4Qh05UrrA5m2PNwer2fvPs3nbcjnxS7Od
TDZva1rE/X3LGyabt0Wjt156HMFEcN7WfWpntOVeJoLztqOhp9K7DswhOG9b
06afYuE6g+C87d2iFNWw2UkE522rSOQjne/HEPz+uuA/gfv7vtUh+P11JvSh
5x4oQPD76/VUnyAxvmjk/5THVTX+8fle8GM2j/vhoY34qoBcBOdxfZ07eX06
ShCcx/2uYKd75XwFgvO47gbV99T5qhCcx/3lxcdjdqMSwXncxKNbpeKHKtg8
bjc8Ldz2qorN4869HNE/bVGH4Dyub/EhmTe8rQjO4w4iF/YVvO5CcB53umE1
KjDcz+ZtnXs3P3vIYiE4b2sFVqWGQAL7fn11QJDmMV8i+3592NqThv4HSez7
9Sl7dvWFWa7cr4+WLuy3mSWilzv/3dmSRYG8RcePnZUmojifW3LVTQWQlth8
rkt+eRvPZhabzx3yJ74cKJtn87nTd8SZGYtMNp+71dqzaTmNyeZzlTYlqqvH
MBGcz9UO37Wl2IyJ4HyucEL5rHzkHILzueHaPeLyrBkE53PtF4hnO15PITif
e2Dqk1/xk3EE7w9QtevVdQmZJgTvD2C7Q6PL8FQxgvcHuPtv/2Glc8nI/19+
F+d1O7133/G2/I7gvG6zmUVVinwZwuZ1WSWGOxIrEZzX9ZPfmdU5Vok0v7lV
d3ZvH+ivVe2eI1QiOL+7qoNP8++TSja/G7vsWKAkV4Pg/K7mH0kV7QONCM7v
WjSSy9a1/mHzucF/j8R/+rOE4HzuzlX152tGCOz+Bc3y2Z3uTCK7f4FdgZg4
1yUSu3+BlEvKpdb9JLSuI1p/qwoFflnNEjSOJKI4vxtWNKiwkXuRze+uGzOL
uWi/wOZ3d2lxEGSOzbP5XZK87670Miab3y2S20H8lcRk87sHj/vcuhTARHB+
99SkSQRKZyI4v0v+ei7ie8csgvO7OZN3dB0GphG8v8KPwR1c2h7VCN5f4Uai
aMY5q28I3l8hcr27hus2X+T/K8+LPi9I71TzY/O8+vU3bFa5ZSM4z7tk9ytn
f3cxgvO80bE6buVD5QjO86rfI8uFcVYhOM9bZnNCSOpxJYLzvGq5PSkJXRVs
ntfv+juedReq2DxvSMgevdnCWgTnefPTNkfMLzQjOM87riZYKT3TieA8b8JJ
x8NbRfvZvO5QjNTggjsLwXnd9P7+x2/pBHY/iIuqx+8XnCOy+0FkjjwtvaRC
YveDoHJb58har/SDSLksU9rPQ0LdBw29Kh9T4PuusIjngIjifG9A/qC56aEl
Nt97gaizW+U8i833aq+mKYZOzrP5XqqHXPYB/nk23+s3HhBvlcVk873Xm1S/
dMYyEZzv/SY9OVh5hYngfC9ZvSO37OscgvO9r8pMt59RnUVwvvfgSQOz9oUp
BOd7pw5e+iRAm0DwfhYb1aU17vc2I3g/C+lK2YWjfKUI3s8iOsPvvNn+VATv
Z/FoA2pwuFruf+SBcf5XrGejV69gIYLzv4myL743O/xCcP6XeEm65vPlSgTn
fxNORNo7k6uQaxFTPrJ5vUDke/Rpi9WVCM4DN5U0m2YZVbJ5YB4j0dNIZjWC
88Aqze6PJW81IDgP3LdR6XPWo3Y271tTfunVxatLCM77jr/T5Zr5QWD325Cw
evhDrYPI7rcx7Sv2JcWCxO63kWGBKLbqktAbp2mZIUIUKHciTWhVGrae/JcP
5mz02kbSWmTzwfobKuJrny2w+eDbdeXz5CvzbD5Yd52HYEQDk80HB2QqgLJX
TDYfLDz+xU/hIRPB+eDqCOG+Ajlsv/5fPvjQX+daUcYcgvPBkaURI6ztMwje
D4Sgw//DVbQWwfuB7MvKEfGoQRC8H8hmJdXyNzvCkP+JF8b54Ayp/q1by34i
OB88sC6/bLioAsH5YAXfA60+/FVIuM1I19f8HiArFbeqxrAS+XFV8t262gGg
3xLjfZlUieD88Ncwice8M1Vsfjjx1W/z/Zz1CLv/iDsaYveSyO4/0rHm3BVH
fRLadnWXmwJChqNfnECCOQnF+WHfrEXe1uR5Nj/8Wekda26EyeaHrYbDWh6l
MBFD6+jjrUxeKO8hJ/4nisnmiTlbqGbZ+kwE54lJCsZA1XYOwfudfDzMqSum
m4j8P/lhnBfWoQW+D6kuQ3Be2Ggi3HexqhKhl86qtCB/QZfTB0XL+kpEC5mX
Cc/uA+r0C6K/hiuQwMCpw/tm/oGBPC/ttYOVCM4X//H7dZH2qgbB+6UoKwWZ
8dCx9aixt7BclQy3Dpqc2ovlp5sx228qanPALOUaWXQrCcX54gOxDoTcXfNs
vjhJHNzY8Z2JTJydtxe9zgs/Gd0MnkhkIiNjZQ8IXnzw2bM904JeTGSKYPzD
050fjhZ8eqcxO4fg/VhcZ/crhGy4jvy/8cYdcmddsnlusnljJ5NMv81DXxCc
N878I9W6bFGM4Lzxhd9p2zNSyhGcN94mNWrPRaxCcN64Tv3k3I5XlQjOGxN7
tGtjOyvYvDH1r6yx96EqNm9MHD6yNcStFsF54yE+dY5Bl2YE543nO4K4b8V1
IjhvrCaQUumY0sfmiRXtv9no72UhOE/8e+3UmT1jywjeP+Zdt1+TqD6R3T/m
R+XJe55KJHb/mKsyoIzbZqV/zHnJaME7IiSU055GlPKnwEDuF+IDekQU54/d
jSTngeUSmz9el9n8Zvw2i80fF0Ce1y1cC2z+uCa6XxCsmmfzx7ZRDkP+X5ls
/vjNr/9F3Z1HU/XFj/+/g+maQioaVTSgojKUam+NiCIlCUmRJmWIDKVBEiWa
UBJJRZKxIjkHZarMmed5nqfLxe981mrv1nr/1nt93uvz3/d/6d4zvnY9zvMs
F2aEsLE/dspP7w++yCaQP974LjO2LXecQP74Zszt8/DQGIH8sbHT7oIf0iME
8seK5REzqXCQQP0bz5UbFRtyKwnUvwng+lm83P4Hgfo3OYR9yw6XWAL1b+Jt
4rkOs1SI/80rI5/sOtx3Js88nUA+OVzBt1pY+AeBfDL3tc7E6R35BPLJGUW3
mz/xFhAfWfFHBdxaQWrK8lvLV+YTyCvPMX/vvWRLPvbK12nCjTeuFxLIKyur
Fgi6zi0lkFfu2OR4J2qoBntkKcuLl/kVpgnkkVPMrziVxtBwn2eLq9bA5SI6
7vPY2AZErzNm4D6PzbwSmTN6DDLzAbRKpXPDonnbnftSqPXEH7/8+rFSuvPJ
KeyXuSZGG/LiJrFfHl3mJnfq8gT2y3NFsxNnV7OxX75QoFfZ84aN/bLsyoeA
7wGbQH5ZzcVByXQ9m0B+WfxFalC37DiB/HLcmInAI4NRAvWDWoe8mxzaignU
D5oKr7umKppGoH6QvO+xTvfTj4n/zTMjv/xyzcqai4Y5BPLL66qOfeJ9kkcg
v/wg1XP5Dep+UV0blRx8owWYF65N5pzMJ7rf3Bz74tMB4jNzTwyP5BHIN8dd
CctZ9KsA++alxZXZh2NLCNQrcuoGOmuo+Rz1irg3v1maocEgc1o+GvFHM2Gp
so5a83EGiXzzevcbkveTJ7BvvvPN7f2iUTb2zSs28XVHRbMJ9XkbI+Z2CEJy
tGr/m6ds7J2/3Djy/qYBm0DeOf0JNAi6Pk6gPtL3n5WavFvCiX/6ZuSZ+9dV
xCW5/SSQZ5aceyZp2Zd8wnZ+WqmaaxMwb04dS27KJ3w3JnEcXaj1UWBqw+vR
PCI288ijitguILuw4n1uKnU//eOfJXeZOFw+WUSg3pKctiN7DjeDZIVszZpZ
xYS24ouGWiwZpPnceAMBFS5Yt5nTc1+FQSL/bLlu8uXL7RPYP9/lIk5pZLMJ
F62aEbq5IDydoLmtJoxNVL6wbFa7IAR9xpLyL7qziQVs666qc8LQoVbvgD4X
m0A9p0LfXQu/lrsS//TQyDt/d5TYyrM6j4DbglcJlteDlE3zdgfxFxBbpPb5
DnN3gDl2fv1bW/OIeTqnO2w0ekCFy+VDKjcLiCW2oe1DXgzYH7fw9Vc1BhlW
8WlBrjcTdhXHB76lvh/yzzcttkylck8Qv/2SFZQ+CcCQqjdX/OKpz3vplNG9
LEHIDAv/GvqcOp8iD1pdKhCCJ0/denXnJJtAfamx2eaTAR/fEagvdf9krd72
NxuwjzaZYJjM88gnNn7Rnz8z3AhSL00mRHLyiWVLlKPUp1pB99ke8UDBfIIG
pNeIre4C42dTNMClfMJeoevXCRYT7u6JGgo2Z5Bb+BPm/RDnghLx4xMvdjFI
z1t0YXklATgrPqLQvpBNJEwFPo7TEYJtus+ujnqzCdSvuh7x0jCk0otI5lwO
vdXaAAxEIxsOChUQweuSTG/O6wTLtotWLxXLJ7T0dlfJ5TJgXPXlpw/0GWTf
QGKgVgF1fdIRjsk1YpCxVWslb08KQKV7xdHvItnEqSTa+At+Ich9WDG16gm1
Xs0dz+eaJQzf88TZVuxiE0U2mxw+Pq8DFTrvQqup45OjuUUnmt0GyuxkLtyj
9pf5vvuTIZu7wXJZ80X0//k8s3zJZxpMuAasWyFA3R+3P1l4VsleAL5IKTx8
gWQT9O0bNnz3FYKqcsdObXdhE6indWgd0+6aryXxb9762oH48o+DFthbayXw
zfu4/DOBvHX2yzNHji3MIpC3vru2//ca718E8tbvTrfmGU3mE8hbN9/yPykZ
nU8gbz3zOb+Xj1qfIm+9zN5kfKFSAfbW52rTxToMignkrQO6XgTGq1YQyFvr
OnCZvLNvIJC3Fnnxqox+uQ176tmr8y3TFnAI5KkvKdO3HiubIZCn7p37wcRz
Jx33v/Ya3Oo2WMXA/a9nB+wCt5/+2/+SKVnJXjifQWrHnlDXcOOGRolXL4wf
pJPIW8fGhKRn2k9jbx1Qle/tdIeDvfWOpRc1topNYm+tNEv4SfeCCeytQ64w
Q5S+sLG3hoq91z2peQN567n8XnuP2rEJ5K35W4LaVhWPE8hbu0fq7rc8MUYg
bx0s0WowpTpCIG8d1p1657DxIIH6ZedellTkbK0iUL/s20DO73WyPwnUL1PY
uS5czTaOQP2ypGIrWw8dTeJ/89nIY19L0K2pZ6UTyGNfKTQtFanKJZDHjgvZ
O3FEMZ9AHluD8+XMNVYBcXTng6wrx1qBd3jDbsO1+QTy2XGij6bVFfKxz767
+ar0FatCAvls1WXv9u1u+00gn/34lOoXu/Aa7K+9x+S654hNE8hfk6c+iS14
TcN9taJeV/OjP+i4r5Yjw9W2hTp/UV+tdcxn8Th1flsrVKsbsLlgtMRXP9UM
Oom8dvyu16NldlPYa3NUk++6pk5ir21uJulU6jaBvfb6K2+LxmvZ2Gsnil0Z
vfOWjb32jHtgueFDNoG89ip6Tr6dCptAXvuY0MMrN5XHCeS1Re6TR2ZbjRKo
/+YuMpTA0CshUP/NOfTL/XNv0wjUf/M7Un0y4b0/8b/5beS1jXw2mc0szCGQ
187MUG1XcM0jkNf+KT07ho+aN65L3l0heqIFFHipRKw6T12fd39c5HWuA2S0
foAd/dT64o/nJm+W7n2bVIA9915XI/7J2yUE6s1tbzn6s/AuHffmbiyNH/hI
Xb/JZWNazuFMqBimWapzgkEiz51g9Onxm4wJ7LlVLp0+X8lmY89t3uHYnveB
TXzuvXYooV4Qei4UPO74jI1994tzvVVKRmwC+W55ZsiPK97jBOrbqUT7NaZl
vSb+6bmR3/5U8fnR5kM/CeS3ywLCl8z6kE+8TA9/c86oCVTGHFFxpNafGy8E
WHUebQN1jhJBYZN5xLeTd5Pf3O8CI6otAj8j8wnkvSdpfTcu7CoiUC9vtebh
BpMZ6njj6siWWMqEqz8rh/FS92ND/aHdLmu54ODaQya7qfs18t5mugti8jUm
sPdee4/f3jaXTcC0vM+ORwRhYeqUlv4rNqHrGO9bYSkE9SxU6Zc92MTaS87T
LAthqKIx2v+cn/r5Pz2+O8mlH20VrxP/9N/Id6/Wa99tIZBH2LTeYG/5WA/M
5RSPf+crIHRTr31Mb2oHXqcPlUk25xGD51mJdSt6QOj+xPdGtgXE5lLtTsGb
DGh8T/7GclXq888dF9h8kwlvvYj67XyKQSLvrRREKg2wJoinfFFDkdEC0KlD
+NVQApt4oJ3AI0cIws920Yt2B7OJuBVmLmHZQlBDZsvMl1NsAvUBZ08Zax6z
f0+gPuAXGd6hVxs2YA8OV3AuFDrkExYnVLvWFTcCXqXUsWlaAZF1ZI5EQk0r
0FTaP1pB3e/Fawz063m6gMjbsEkni3zC59GTfFc6ExboWEurUPPv+j3DvGqC
XPDFoHlbHjUfX1xu2qi1RgBKVpwNGS9mE7K/W9V1dwnBTx3Vn57dYxOoP0gW
dxXWu/sQXa9MbD9+awArDLLlRanzKe5Xl7veSAfwbdMyKGflEycTB6p3pjPg
q1PSwbOp9U/r2tE7yVlMyNr5QSebWh85HJCq5gwKwJ1FGzUC37GJWl+dV1sZ
QlDA+/a2Fn82MW83V9N6XmH4edV2U1MtNmEweTTM7FgdUHEf7M+tzCdC3Rck
SVW2gc7pNNpoRx7h0J229IJEN1izwuzWV2p7JNmppSdAJvSp5QtNsGKQshud
wMFzApClpHZvTzqbuCx5rc7ck5qnlvNFfb5CXa/+9BCVOjSOug6fJ/7py4uV
tZ8F29aDhPbInVPMAsJhooVx7EU7uLtlV21+Qx7h4Xu5W9KWCXfuXbw4ivr7
UD+R3Tzjk+lEJ7Li6ff87jeClMTxqThu6niSTHnhmt4Jduxs39GnkU98M+4p
ih5gwFATgYAZEwapM7JCXOJ6A7DiDjoaSW3fcpZeYU9MB5i5fmAmkzofi946
nHn6kQlVEvm0D5kxyGnANG9vEIDzpD+tCHxPXY9BG+fygCBUrZWSzw1kE8bC
oVMJjbUgqY212iYzn+hiV/hyP2sDRlHPEnkH84hetQffWxWo9ZHfXJmX1PGM
eo2St858NMhwJESeJB2uYtcDoWXiihKCBcSqGwvOrFjVAWJPKnrMprZ/VJCj
nNEjJtzk4bIpxoKBe46Lv4iJ8NnKgiM/wU8tUSYUvmixtZm6HnodfFRwkK8R
PIwxeqBH/T4vPw/VxE2dgL7mmrXGAmr9d3KrgSiXIDyfs31JTQS1vmqfqylY
XQdcjV6UK3XnE4dnmTSoSbaDZ8n9CvbU+er+rjn1hi4TmgylMSE1D6E+5ClH
Ef6KhWbEv/lv2rpZU6Mth7D/nnVXVmIp8YlA/tvN41vsuolMAvnvY+M7bgg6
/yKQ/x6q/KCWMJZPIP+tKBNXTouj7v9//De/W5CVw//8/8Yf/11WvvTh8rUF
2H/XPvGZbbSrmED+W8fkU1W3RAWB/PcWe1dVq2MNBPLf3DcP/GoxacO+e6H3
/MjzAhwC+e48QYZhXe4MgXx3d36jcDyg456lLfdrqLSCgXuW3w/W1ew//bdn
qXFSx/D4Qmp+KPI9buzCDR/djjzibEgnkf8eSipoEr4yjf13yN7bIXt8Odh/
d6zd1nhl3iT2337fWzfsXzyB/bfV8x2y4ils7L+vi2hH51DzI/LfE/rPR6Lt
qev7H/9dbG8UrFw2TiD//cmyV9LyzBiB/PfV50MJXDtGCOS/dYasf84+M0ig
HmflzaCWs45VBOpxkkI2KlW3fhKox5l40Gppd18cgXqcDXt3ZR5J0iX+Ny+O
fPjO6lHO7Jo0AvlwT73wr3JpuQTy4aOrRe0TVuYTyIcLaH5Q1KHWt9EN16c+
7m8FYZUHpLjX5xPIi18MLraIks3HXjx+MCYIGBcSyIsbXb8oN5j/m0BefI3T
0JPIqzUE8uCL2naMs5jTBPLgNmvZPnEhNNwLNU00vvY1i457oQecEk8rH2Hg
XmjI5tjPioeo9dlMxNplI1xQR0ZM/mAmnUR+XKnYxd/HZQr78aymc1rHvk1i
P84uJ948vzmB/biJkGSrfT0b+/ETtXs3VVHzI/LjZ780DbKp+RH58di927L7
N7EJ5MeFA3ezNm8ZJ5Af9zXf2ExcHCVQzzRyc4A9v0cJgXqmOxR0wwuH0wjU
M624PXSFWRlA/G+eHPlxToe8W+N0NoH8+OSTidgu6zwC+XGN10pJUdR6tuSj
i7GWfgvYpqawYLtNPsH/OF/B5mgHIIs/Z0X1UvPDH1/e8vLZyjUxBdiXwxcF
4g/sSgjUT63jabV87EnH/dTRIku/5TsZpJr6vB3rQ6n7l8eBh8PU9RL58hd1
vWd3ZE9gX36L5fcwY5KNffnHuboOFjFsws7ojdzNakGYvv90ViU1PyJvHrZt
lj/DmE0gbz7P1+mWke84gXqtAyLK4+YP3hD/9OXIkz+a9cn3MfhJIE++NF7h
YvLbfCJ5roTILc0mMLptA/+nnnzCQ9AzeLl2GzA873F1xzR1/YsP/+VztQvw
/UzcohSaTyB/flMo8ZKSchGB+q9HgfBVWw6dVPyYqimziAmPL3J+403dT0ps
ZoMNslwwv8d99pytDBL5861aQZ3DeyewP/+96tWT+z/YxEvXPU/XHxKEsbIv
G32o+VGwqcLyrbkQzMx/3mpzm02obqDxLT0uDPXdFmxJEGITqC87P4IVkhpx
g/inR0fefKq8/qAq5xfhtXnk+KHwetA6JC3+P//+bCT0NCeiqB2clzr4XKMp
jzC7WvF07twesHAsvWbVmQJij+eys5JuDLjz+j5JTWUGOUdJgmvwKhPqZCY+
+U3db5E/r9vz6e0cwQmCkyH92yJSALKnlYzfJbIJnc+V1exkQbjKr2bkETU/
pjS3uCd/E4L2+nOTNE+zCdS71UtOAxWHownUu10R7hRuZaWAffp3Gd4dddb5
xNVPkfoa6Y1g28znk5BRQMwf49rX86sVSEVrnBKfm08slr9omTXSCdoD3+wZ
N8kngnaf070zxYCl7EM7HKh5472FOG2IlwvKHLE9cUSLQZ60vatttFoAdo2v
Mdnxm020QCGJJepCcGiNcp2FD5tAPd2M+F63eyq+BBc7vzIvvgHQAqrq9an5
JmUhd4BqcwfQ7l36k4snn7A9lWWil8qA51xlujP3M8jjOnNv2GYw4e3Yt8eS
qPmoXCjw66deAaictdZDPIpNBHLsnAWnBaHjPTD7ZACbkOLy6tZkCkOruNnh
D7XZhATsSVKCdeDehqyWyd/5xPBSgb4juW3gx7cIreKuPOKaWtVGA95uIMw1
pfFmJJ/IlBHdkbaF2j/v2xNdqXlu8c03ESesBKDo3liGWgab2HDrdaKiuxDc
8Fuxqf0qm0B931sLR5xZNBvin9692yuV+el4PZDsaU7xobb3Nc2ZObt92sEC
N96nYdT8SP8Q0Fx4ngk1NlzdV0/9fagH/O3b82b9OyuJel77kYirjcCxqbUw
haeA2Gn1O+5EbCcw3DGZZ7U9nygUztD/0sOAI0IFUwuo7WOpGeiqcLEB6M3m
bAuhtm+j4ZnmkhcdwEji5Nlv43nEvqwn5gfimDAn7MeZpdR6wGzSZUdYjQA8
vOfAvqXRbMLjnVDxnh5BWO8vaL35KZtYrL9e3CujFrzycrRoJPOJbf45mdu8
qfO7tk9z73Aewek5tXtIngkdPSX3aVDHM+oPv+8iW04AZ2JVpxw51E6tt87n
2FsIFBDrCzdeEZpHrRdG1m940JZHrPriv1zMlwnDophyitR6EfWJRUqTbbl1
FIHl1Tk6h4WYsNDtU9su6nr48i3PpvNjDeD8r5T+Kmp+fFT/Ym/Qqk7g8VB/
bSB1/O6T+qjyc0YA1rIalm2KZBMia94ea0ipAwQrbp5Uez4RGaU97xKrHXRt
+3jPoCWP8DNJBve1mRBGDWatpuYh1DsecVukflv1BPFPj75wQ1hJG6gHVzfn
yuVN5xOP2hS3iJ9rB6bC20pJan+OdZWXqFsw4Tw66SdH/T7UR17+vXXpyJQ6
IRJjmFlp3Aj217Brw6j155OBKzrH9zWAK5GLk/ZT+2t0NIg/7EoHWP/CcrPB
UB4x98BsDUEZJvz0OVTE5X/W0w9E/KSz6kGwb45hCquA2H3hVFjVcDvwM1si
NJf6PovHy2bfuM2ECzX2u82l9gfqLetrLGDwaW4ERbpdrODfDYCn5YJoCnU/
E/d/M6E+JgBLDrjxLaXWY/va5G62dVDrqx0tZRvaqfk+zUL97U4mvLn75vxm
6vhEPWZ3sYE8H+kzxLl3P/scY9rB+mo3fWlq3hWwNRw+7sCE2jIl0Jr6edRn
3iuy0zm4dC7YGJrwbsavAaguYOb+z/HZcCdlZ+VGav1h8dJliPq84+p7+tL5
G8DxK9FZCdT+XbyBcRhs6gBxr02fpndS2+NPvzm1dmRF1ptFwJa2zGqLZCPQ
dwid/5E6vrhsz79jrG4HPe5rDn+grscObOFtDgeZ0HD4RY0OtT9Q7/mV4oou
Axcj4t+8+WvH+L13NUdx//nyrHDPw0Lj2JtXfsrQ/1TJwd48Jdc1Zd4IjUTe
/LZaquW3Hmo998ebDzPsR2Z3Mknkzcubc7Z/u8okkTc/yKc7Tgugk8ibf0gT
IdXPTGNvXn3klslT/wnszV8b0W8wvcewN2+GvW99KkawN7f7CSYqa4axNw+1
HNGZrPnrzZuJ54aa8oPYmzcGrP362qwHe/NoqWnlnxKN2Ju/qtdQa77/lUDe
3HYoqdhnZzVA3lxp0QZ/n/BegLx5xvmLq6cyRwHy5vJ6fWMbOycB8uZd70m4
V3wG95/P+cilD5XSIPLmsRLR3y6bMSDy5kFt3Dx+p7gg8ubPZxuluvbxQOTN
x1V7lrQN8kHkzb++t6m9fo8FkTfXvT5icdmMD+L3eY3dE3qgxQORNy/2ZYo4
VDJx/9mB7q+Xd5KB+8/N/gVV5b/oEHlznZW3r595/Pd9XmPOSjzKS+j4fV4B
uzT0cxfNAOTNf3z+PnNAgg2QN9cdUg4xqu0DyJsbPzvjduRgDvh/xZs/chjd
cDNhFHvzlgcXxNy2TGBvPismdhuf9Qz25qe3qb3YKsAgkTfnlxY2yglgksib
O/II152uY5LImz81djQcfscgkTevtXvSv8Tyb/9ZUPeZn6EVB3vzhsjjki6t
49ibT67NMtZ4NIq9+WvH++uO7BshUP/Zc7vm4RNnhnH/uWn0mbLb6iECvZ8s
Rsmm7PCHfuzTdYTd3FVN2rFPb+KKjLK+Xkogj67Q8O3euG8rQB69otVb9uGR
IYA9+u9Sl8f+bIA8OtdWi+SymCmAetC/FenboxRpEPn0u68OewXfoEPk02ci
TB1SDjMh8ugvrwfV/xbkg8ijb3q1qy73Lgsij87kz1P8n/eLII/uf0SroOIM
L0QevTDXQ5zg5cb95/Z5wYO143/7z48XXMoP4mbg/vPt8mMXY9/TIeo/r7oQ
XvLpPB1K7RWv5UhQ6+tZLp/GbtEg8uqvjPaLqXtwAPLqWxMSmiTbhgHy6mB9
hk9dUNP/uR+dAhTj/Y1HsVePOd4exhZlY69uPblh2yzpaezVY8NEvj28RSeR
V5eosnxQpcMkkVeflaTrodvHJJFX7/qtUKq6hEkir+4XoD3gR6eTyKsHZ/hb
bT45hb16Jdunfxk1ryOvHmr9WsaCdwx79UOexs8f3h8hUD+aRzpf+ED4MO5H
HzN9Fb/Pe4hA74/b8zTuZLvrAPbt4TK/7kczurBvLxuY0NO6V0Mgz35uVdrX
I2aNAHl2j9mts2VPDgDk2Q/K3N4cDsYB8uyh3/pNb5RzAOpP64w8Kd9NzOD+
tF3b+Uif1XSIfPtrq5buF+UMiDw7x2t1tOlNXog8+9OtidUn97Mg8uzgQd8A
zYIFkWcXCDGVz+zmhcizO69bxXZ8y41701OlyaMeJkzcm070CbPxWsfAvenj
b71XynyhQ9SbPjlt9ln4FnU8Cr3Y2DVKXY8Pmrv3V9Mg8u47u66uG+maAsi7
S8WY/4yWHAPIu/OpaZ5Wae/4P/eqnQ381Ar3jBHIv6f25em8vjGJ/Xv+2p8b
BI/QSOTfPwmkp/XdZJDIv2eNqmSs+8UkkX8/XLw82iuZSSL/bjGXZ8nhVX97
1cLPvR0rL09i7256pJC0kx8nUK/6gNmiCqAwSqBedfXBvT+8Zo8Qv/et4Obv
ZQOB66XzNq8eJkqc83gu9U6CZxqVL18mDhLo/X/8ErO7tG/0YT9faprHGbJq
IZCHdz2U/lVdZgQgD//O83NmQ/4EEP26xylyAw98ZrlA5MTZaYB617fpfX1y
N2kQefl502qnHvbQIfLwerW8JjaefBB5+JayjNt3nrEg8vAjVifWif3kg8i/
W+eq73Y+x4X71UmlX3nH3vztV6/zNqEHtdAh6lc302991ntJh/fXHl95LlEU
2rZuiI6g5phSzzu3hdXEoOOK1yP282gQ+XnZxUdNv3ROAOTlJT6CLcWLKv9z
/7r0ndpUJTUvIi+f07usZrvXOPby/G1+TQ1Xp7CXr4iw3OK9jU4iL7/w888r
R6WYJPLyhTelFhhQ1yPk5Xn2Tt56q8ckkZdvNTsaGaZDJ5GXN9q0eP3S1ins
5XX7j0uOLZ/AXn7PGHwpQh2vyMvXmFS8PxQ/QqD+9bHZH4Jepw3j/vV9ZZrd
kY9DBHrfYoFO3tcN5QPY12//aRpwc3M39vUx86OD7zjUE8jT+6Zkap3eXg+Q
p1fVXP/4g2k/QJ7+mMAZZbvbYwB5+qre4xxwkgNQP9vTf8lzrrMzuJ+9eUqb
GTBDg8jXn/I1MXz1jAGRpw/p0lpwczMvRJ6ex+pBj4E0CyJPPzVw+aijKwsi
Tz8Zwry6bxUfRJ7+QfUGVhCbGyJP31i19qj9UybuZXO5v+G812DgXnbH7Y3c
XzKo+e9PL9tIoZfWf4863qybjzW2iEL1TttLTjQ6RN5+/sNUnY3e0wB5+w07
50Y+XDIOkLc3sjkoNdDbDZC3fxm5Rfe8btJ/7m/Hcx55HRgbJZC/71RTV/9a
PYH9/b4jWlEBfDQS+fuOE2s8D2kySOTvN8Wr3qxLZJLI3y9/BC4+zGeSyN8H
XtPjGT/LwP3t/Dndoj29k9jbf3q5JazKY5xA/W3h+FVBLmajBOpv636+fn+v
wgjx5rzTlqeRbLDVfU1asdYw4ZM6197zwyToU7tAzgwMEuh9mSpC6QsctvRj
v/90vZjAmb5WAnn84Pkxg3f2DAPk8dV8TasCVCbAiswY573iPPBebjfzoug0
QD3v7y/49+w3okHk9UNii0rnf6JD5PHb++RbHmnzQeTxzTKDqwr9WRB5fLvF
/DOPJ/gg8vdNAmlW65K4cJ+b6+P01si8v33uw0JnN10epuM+dw9vOW36DR1y
alwvJYaLQpWLCYyHpnQ42ZEXxy0rBnnEVXoL9WgQ+f3wpCHB/cQkQF4/7iCv
YKtx/X/uezfw5Ch6XxvFPl+UL+XnLAcmiXz+g00BNTRqPYp8/rcFP65UtDFw
r1u9Ap6v+jFKMHa/2fdBcRKMzrR8dzYeIgKKL3r0qE4BkcXeQbPmDxB65Teu
3PvNDWt1Cgx27ZkClZrnH2U18EJh3kqz2YfoEHn8+c6JB17kUOfxH49v16Qv
8caOBZHHtxg4TDu6h4X73YtMvPYGr2Difrf00buxWyUZcJnWErdehihsEV5r
XxRPh+VbEkQ1PESheM6OYGtnOtwVdYQ1zCsG+TYrJm5KoMELWR93l9+l1l/Z
xXJfwBT4p99XhGnZHc5fgFabWGj1qzHs9x+1GDwuTGaQyO8/4o+peV7LJJHf
h5uFp46HMEnk6wmH4vNMkg8iX5/S/HSxUAALIl//40fRkUcBfLjnvfIrc2ei
+9+e99clPCsKyunwYGy4q/ZuUXjORouzI4gOl7ntqlj2nbp/Xet/9FqFDmNX
7jSepy0GwdbrB1a8n/nX/rdw4wlwYM8o9vhyGoWrTLXGscevvs2/MVh+Cnv8
iWdegvPn00nk8WnD1zU/8DJJ5PFN7tx+Y9LDJJHHnyW4tLPVikkij++o0bBY
xI5OIo9/5c3CB30rp7HHz1zrEqRoMoE9vkXGFS43qzHs8b1/LRRZkjlCoP53
XNor/a/5w7j/rfj6pJVf7hCB3v+6nD/23hLmIPb7RTH6AVn53djv24/sdj2t
2UAgry+u/H3PPItagLx+iN08pZm4PoC8/oNc+Rvqq8YA8voD23vaxlZyAOqH
K9xupKbsGdwPb7tUfnlJFw0iv68v9Sm0+Ao1j/zx+kG6QmDbHOrn/nj9zzLu
OicFWRB5/QvPVR/+usWCyOv3dE5dKNnJB5HX51vkriezjAcir380LctjXjIT
98IXeakdNzZg4F54F/fVWw+zqXn4Ty98atr4aYkfdfwsuT1iUiMKP9CaBc6K
0CHy/EuXtNUIl04D5Pkl3n+OCXw+DpDnV+MqToo63QuQ5/9seemZ2Uz6f+6P
N0UPP1xWMor74/61e/b+9p7Avj/aZkl1OTGDfX/w3ieXEmUZJO6PD7avEnjL
JJHvX6Nq3CRTziSR75eP76TZ3mXg/rgR4HVQk+Ngzz9RMCzE/XGcQP3xxTae
Z7qdRgnUH89evSBrORghRKaWGTZ6soFxyOw5v42GibP1ybJivpNgy7q7rw4J
DxHo/b2rmpeG9Tv04+cDLFs97zx820Yg729sqrprVtEQQN6/84Io6dfOBrFa
FpPPuHjgly8soYrGKYB65lmyW7dwdtEgeh7g2CZb6+fU+Y68f8d14Tlya/gg
8v58BsoPNz1kQeT9OS/Lq2tnsSDy/U/pC/131HPhPrlxaN47/aa/fXLPK9el
Ujl03CdXO3vQtCCSDuMTvRZWPheFm3uCn162pEOfpzYa15eKwePqF8Nen6NB
9HyAaSk54yTNAeh5gKuiLeIF0w3/uW9+PLCu6sq5Uez/T42e2vLSnEki/28t
pNOmR11fkP+3Jg6HSHExca/cS9nj5eKOUaLu1F7uTWKT4Cut6PcJ+yGi2dBq
rGgutV3nuPfYag8Q1cYq0zXfuWF8WsGkj8gUMMjJJloLeaHHiFX8AkCHyPsf
eVtsWPGaFyLvL3xvfZyFOQsi7991Nr2iz4CF++Wb2iUW74dM3C8P0tHNFZBm
wC1XrIkbEyLwrIyXqx41T9wXT/987qoonP37EjfHjbo/GXOCL8yIwjdXlLNh
Dg0GL5TY0ewuBrV/qcu5+k+Bfz4f8Iq+2OOsexLofTyxt8x+DD8fYM1Xtbnq
BYNEzwfcO+kQ+KqUSaLnAzhZ7DGJaCaJ/P4iqT0Cua/4IPL7uSOWKR+esiDy
+0UWu1q64/hwzzy7RFyt4/HfnvkTtYHosVo6tG4eTqnfKgrPru95ZfKC+j4G
+tf2fBWFNorvXvhup8Od5a0DD3aIwSd3VvvE9c38a//c7HLBqhndUez9d6iS
FWkqTPJizuozVlwtoGw1x5tDrXeQ1w86rjQcs5kFkdfvSWvl97BhQdQzn/EX
Nn3iwsQ986OfT9elqlHHe5MgfNchAuMP6TzcSdDhVEYNz0drUbjdddPH2DvU
/PVVPdeyVxSKHtD9fLCPht8ffc6+4DSpHgG83ctoF/wTwe8Sl+29i8aw71eg
L9Dans4kke+3kF2vn/CdSd6TCaNXAEHIeErIPKG27zAIDnwaIQLP+0s5f+um
w908F/J834vCNZ27dnGoeShG/HF3l/M78HIbfBQYMIr9/nSvWeBiTyapNbxO
4DetFdCXFHaYtDCxz99mN6S/6CYLIp+/xN5ZfK8yC6L++VVvoxntWUzIN69g
m5GAKIxcum7wfQwdLrV4fWa5D7X/RhbeOWpPh9FOax9eZjaDU4UWvJLU70d+
f1vPhzorPyZ55sK8Tll3QRiyaG34a+p682/+vn7tNbsSar5A/j6ISDnqKjeO
/X0OV8/x58wp7O97so+cjeSlk8jfZ64MVWmYYJDI3wtFt7U2djFJ5O+jUkXt
GPZMEvn7dflVrQG36CTy9zvusur4NKexv5/u3/8YOk9gf39+xzcY7DSG/X3G
MppfWv4IgXrnt9+PGeWWDuPe+eO9BkeOlQwR6H3dJ5o3jXfNG8Re/xphtzVD
ogd7fUai6Vfv2AYC+fzXrx6MtB2sAcjnA2chz9fyfQD5/N7Hu780jI0C5PO9
5I/r7WZxAOqjVzxLFAGyM7iPPpL8/gatgQaR1zfcfsh03gUGRD5/0TLd9ecY
vBD5fPnokGWlM3wQ+fyIja9Nq++wIPL5I6YDOhkH+CDy+fZf+fTNlHkg8vk+
8AtNIZeJe+g5rpOvXU0YuIeeFcjqXvmDOp7/9NB5vzknvH1Ih2cdDckFFaJw
eG2K3/A8OkR+P8+ZTuyfmAbI75cs3DfXrGocIL9/kn9NTrZ0H0B+/8i2561q
spn/ua/+JePKtdqMUdxXD3im6jZyYgJ7foML0VzTT2aw5w/cV8ElvoBBIs+f
vFc50p+a35HnPz4dkzNQxSSR578ezOHWD2Lgvjo9+VJkjCYH+/19tZrP5uaN
E6ivrq8s/pjjMUqgvnp6cqlK3O4R4tu3MQuey2zwntwUGmE+TBgNCPIcvjYJ
7J517Zi1cIhA71t3k8xYbPmwHz8P0COuEurAbCeQ73/kQr8g9mQIIN+vcT0r
7ADJBqN3CbVvHG74NXjbFYfcKYB67Y1VLo9K1GgQ+f/Fi7Zv8rlPh8j3fxMt
E1m0iA8i37/Q9seKrb4siHw/U/CwE20+CyLPHzjsYzEyxIX763YfnzKmev72
12meT8ck6QzcXy+TlNq5LYqaJ0JFL3YHisL9qkoG8mfosGxw+2ywiJo3l/FO
XHWiQfQ8QJRf0IecQxyA/H9ZwsFbhnmN/7nffufQB1fmyVHs/c8/Vog6bcgk
kfe/nsP2dOllksj7v/eWPFcsysQ9dr8XhPTS8VEi7/Lz+iuMSeBGfNMZdxsi
vBY0f/jOPQUK/A+SnScHiKUv/LbxpHJDfcU3YgnDHCB+x+HQKLWuXcoJ1tTY
SIfI93/bPZSs+JgXIt//YGK33cIjLIh8/zNuv5OrTVm4z75+weV7+fuYuM++
8VTZx4TVDJgz90md9qgIlMx/5Ls+iZrvaZqCbs6i8NH3QO5HN6jre+Kv02sm
RWG9fdXv7cU0qJylod55TQwqBAZJLU2fAv98HsDU/OdJ+TufQcDEbKlBkzH8
PMBCbfME5gMGiZ4H6FIQsJcsYpLoeYC4GutI5wQmiby+D890CfmEDyKvX/Aq
k9vgGQsir3+6LCviNcGHe+3xXeuSS4L/9trHqr9lbWqkw8krC2siN4nCXt+y
u1UhdJiwvbL4SJIoXM/KCf64hw7vKXxO0QVisD8poLqKlwb/re++eLeoRLX2
KPb9G/em/FaRZ5JzuFillc3N4NIgz/Niar5APv97SWjdp3UsiHy+SMbyV4qO
1PH/p9du86RoUbcXE/faG7ijfy7ezoBTrhvNLrWIQEFlt032adQ89OGkUfYZ
UXj0bWFatTd1fZw7+7F0J3U9zJXeLjxOg8jzv9UcU306Hgd2ttyqWxeUACz9
T6gq8Y9hz+9qPv8wSGGSyPP3qZUY/MplkgeCHn3bpyIIfzRNHbAOZMHZ5122
J4WLwE9bza7f7af2/+DI0rAIUSgveN7e1IgOpUsHIs67R4Dx8QMh4ndHsdcP
OHbIfIcbk+xdO8txT0MLyK5KfFzRxsQe3/PKc90gFxZEHv+J+9UaOmBB1Hcv
2e22uWI+Ez6OGTOV5hWFHdYdZzfHUfOU7ppUJS9R+JmbuOzgSId1S2efjGho
AqqtR40EGpkk8voh9quvCAUyybWtfO9DXARhiucQr9gT1r/23LvPvUihaYwS
x5yy3hPhzYBdpTHPnTp/r07qHLOMFoSsp6+1DK6zoGh+cV9AcCvIbqo24Slh
kpV3HLU2rxCE2yT4zcnHLMh/5J20jX84MBZaxM1wGCVUX/3aJ/+yBYitiooo
puYN5OdzD6SLgbPU/G9bzS0Q3ASe53wvL6hkksjLW7lxBi3eUOvR4q71d88I
wnY+jpo/tT9ivm7Z2O/8DFTU8ukCg1Hih4/W9MjyFiCYJFBdQB1vyMNvPqMc
F7YiEGRHx247oSEIhTravmhS50t4ku4Lc6lW8NWjYfQetb2Qf5+1ScKr0ZMF
rxZqpu+RaQZVAS1hmdT+Qv790LYONzNqXnw9LrMy8S51/slkR/2grt//5t2Z
Vl+O3qG2J/Lu++gbJvUWjmPvrv1hKHtFHwd79/CR78ctpmkk8u4He4b8jYcZ
JPLu/ZlzBrmp7Ye8u5fe/AhrJyaJvPvaIOPlhT50Enl3poihXeiRaezddQ3H
5Zo9J7B332G8UVLjxhj27iGasUkvS0YI1DtvUp2QPFA5jHvnEzNhzhsqhggh
MVpBiT0HrJ87ZLNq2SD28QbZ031lW3qwj/8Wtt9Io6WBQB5+i+0PHvJnNUAe
nmaVs2p9Ry9AHv5WLxS6VjcKkIf3Hrr4Poc9CVAf/eBtQ7O9S2ZwH/2lVG3X
WBUNIh8fcfrgkW+nGBB5+LY3UqzxcR6IPHwX34IXZ9h8EHl4rownB1O8qeP1
j4dX0xleEX6EDyIPrxvh4uIMeSDy8CWT8md0ipi4h776Q+WeJccZuIe+wjjz
q+tPOkQ9dKXEmDzvR3TouzwtfKJUFBZ4P9sYvIAOkZfvybqeLCM4A5CXr232
nR5ijwPk5b0UlC0yrvcB5OV/nIqzsyCy/nNf/cCaaYfZKaO4rz6y0vaXvO4E
9vOb1Vx0PG7MYD+/WOe92brZDBL5+Q9124q/BDFJ5Oc391nqfa5hksjPe/4a
TZN7xcB99Ui3L4enDTnYy9O3y13bVjlOoL56gZzW+NN7owTqq9uM7L1/Q2uE
CF7VeC7gAhu4jSz9fMdymChkJ9o5XZ4EF4+qGBcsGyLet+3QiLg1BTaXjR6/
ENqP/f0pLq8kF4V2Ann6OUoLphodhwDy9C0nyquZUWwgGd19tHycG6qWBRAx
X6cA6rUrnA32J5VpEHn7cwsmbcWo9Sry9By5HTdpc/gg8vTeraVpD3xYEHn6
F+WV3P2LWRD5+cGjF83Kprhwf/28UUSL5dDf/vr726kOBkwG7q9Pac7MG6Pm
Ndd5vwNH/EVhSYsp79hZ6voe/G580QIxWCnwRjnLjTqP/vj7B2eWH5Oy5gDk
7cWeX6xLUWr6z/12rSidy3Jmo9jXP/50dOcafSaJfL346I2gfup6j3z9waDL
bfclmLjHPm0z0pk8M0rsur57X8jEBJivvFHu3a0hooazVBBMcUD7O6eM8YsD
xE4y1XR+MjfUs7eRed3KAcNWOlLT33nhLqeqfe1r6RB5+ve2tzx07vJC5OnZ
UdJG+w6yIPL0RhnGLqHHWbjPPtMxZidtwMR99lJN4f5AeQb0bYroUxwWgeaJ
yY9WJ9OhoYOgsudlUdh2IWKw5CY1HxxX3i/IFoUb2o8ulS6nwRsLj8Oeq2JQ
dXnYepmyKfBPf//lwfKSuwKfgUW8Uk32gTHs70WOhW+mezNI5O8XHF5+Kiaf
SSJ/f3rbh7a7n5gk8vFPTnZmhd7ng8jHq746uOoqdf9BPv5Ozuy9rd/5cK89
Yusg/VjY3177eNn3wtYmOkzXUui5r0LNZ97Jbv6hdPjy8/Mp80+iUMP+1AVl
LTqMq5Z6uW4rdXzMM/VInEWD/9Z3f2WdNqW8dxR7+ouTL1r1VzBJq9BxAfHf
zeDmgmvnX1D3T+ThvUvk94jLsiDy8Cc+PtdqcGJB1Guv7oyciXjAxL12Pbm1
dma7GPCbpsZFoyYRqDw75NWjdDrMlFnlXmglCk+odO3suEvN0+kuzsx2Ufhh
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
vD329+//D3JxMwk=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{402, 353, 321, 322, 323, 3293, 3296}}], 
               
               PolygonBox[{{304, 354, 286, 796, 641, 522, 916, 761, 433, 886, 
                731, 611, 372, 856, 701, 581, 492, 336, 829, 674, 554}}], 
               PolygonBox[CompressedData["
1:eJwV0DcvRQEchvGjLiaDQaJ+Ar1bTWrMyHVFHbTJwIarLAZ1MEi0waDcxWLA
RWyirNrEZFAWEr87PHnf9/nnnJyc/PBQ62BiEAQJiCCk1KEMBUlBsOiYhTN7
Gt2o5/e5SjzamyhHIb/EZePcjiDExexGfNo9aOAO7Co82ZP2mz6CLXvIvtPb
kIQKrohb1nOwov/KGD+uP+v9mLE77Qu9CRt6Kr74efkRf0aOyX2ZgVv0ujfK
Q/5YVst1mYjr+Pvdp+Q7fypH5Z5Mxw223YflPX8i2+W2TEOyvhD/BjmBqJ6J
Ss8UyxUuF6v6n7zgJ/QXfQCzdti+1JvxbfehiTuya/Bi72CEe7A7kBL/v1wJ
t6rn4dKeQxd3Zbfgx+5HMxe1a/Fq76Iapfwal49/BeFHrw==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0rtPk2EAhfEPCIMsIlZwVbSADlrkL9CqQZkcgIJg4iAM0LoZBC/goCLg
xoB4GUq4mTg4gIDGCwsJiQESUEnADTe5uLH4e4cn5zznbZr3+9pjNzPX0rlR
FOUgi6SSwAkcz4uixw4LMcXvohbn7aO2M1jlQziJUvsT2yFM805ct33h1djm
dbhgG+NnscZfoM22xFPhMoiHO9ie6kX4wDv4hn4LXbyJf9WvYIfXI2kb5wn8
4D18S89gmLfzZb0BWf0AcvQBuSc78V4/irLwXLI3PI88LAflvlyQM+GdyE3+
WbbICXkQ33HPebP8Zp+TV+UbmY9F7DrvlX/t8/KOfCdj4Y5IOb8oJ+yV4f7h
rvhpfyT/2G7jJU/zFb0RI3oBcvXn8l94Xyj3uTh/pscwG34j/ltvxX1+g8/r
NdjjDbhkm+Tn8Iu/QgXK7H22I+H5+AM04rL9ra0K6/w1TqHc3m8rxkf+MPw/
cDp8n7MBewk+8e7w++I/I+xROA==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{324, 325, 419, 478, 567, 687, 842, 356, 389, 450, 
                539, 659, 814, 308, 307, 355, 388, 449, 538, 658, 813, 306, 
                418, 3294, 3295, 657, 812, 303, 417, 477, 566, 686, 841, 351, 
                387, 448, 537, 656, 811, 302, 416, 476, 565, 685, 840, 350, 
                386, 447, 536, 655, 810, 301, 300}}], 
               PolygonBox[CompressedData["
1:eJwVz7cvRWEAhvGjDBJtMJi4LqMS/gFlwerqbMKAYFIXXRiM+mC4SCwGdZBg
Y9JtjGxIjBLld4Yn7/u830nO90U7BmL9iUEQJGAcpUoZGjGKY2T6YA7RpCAo
4Gt4QoltB1X2Bv6JWn6BdtsIP0IGn0WeLZ//oYXfote2ysNLvGGSP4aXkRso
tm2jUq+3Z8k9DNk+sKB/2JPlJmpsp/JctslhZ9cyA7vosp/LFzkiD51fyW++
JNPliZyRERkN3yqzsY8x+6X8kovy13mKjKPZdoMefcXep79igj+E79bX9SK5
hQo9Zh/U3zHP33m1fobW8J28U3/GMD/gafo0cnke/0ETv0a3bZnfo5DHUW6r
C/+DfaTappBjj/Al3OEflgdCqQ==
                "]], 
               PolygonBox[CompressedData["
1:eJwVzz1Pk2EAheFXmgCDJobBgU0E/QWCiG2VX0BLmW2NYCK1NbaLS7vJYBXK
VhVMXAC/EocqmDgYE2M/NAwkwmzxI7q4qGBivN7hzjn3eZ707XP0Qj6Z6wqC
4ABqSCsZXEUVH3DChfs4HQmCs/wpvmHc9hJT9jxfwHscty1j1B7nvXoGOyja
nti+4hzfQMqW43+R4m1css3zrN5Bmbf5kL6EUzzGy/pvLPIeeUiuIq1vo6A/
dq8v/C6Ktjfyh5yTX5y1ZATL4fvCN8l1OSmvON+SR/AM1+1v5U9Zkfvhm8Nv
4wEm7a9kS87I28435WE8wqz9tfwkS+E95//0mj4o72FEj9r7ZR0l2y9U9W55
UK7gvP4R18Lfdr+gf8cN/pnH9RdI8izfQ5I3MW27xZs4xu9i2HaGP8QuYrbn
SIT/m/9Bgjdw0VbhDQzwOzhpG+Nr6CBqq2PCfpnfxDv8B566U+E=
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl03ecz3UcwPE75xzXcS6jFHFGNkmZFZKZeUay4iip3GWvbDJSNtl7lJWR
XYSyomRVRsMIZRahlOfn4Y/n7/X9fH/fx+/x+7w/j29icmpSSmREREQuH6E/
MI+evEQVSpOGKNISTTpiSE8GYnmAODKSiXh+ZD69aMbzPMVZVjCEdtQlM8dZ
QG9epiqXWc9o3uJpzrGSobSnHn+yhXF0IYETLKQPzbnFF0zmBa6wgffpRBl+
4xOG8Sr/8iXTqM9ffMb4sHdD+067Eul6r2bX2WEGekwf5CSLwh7d6xvmqPv1
YW2ht9lOFuspYZZ6WB/VanqVjeG3rD8Ic9eD+oim6P/sJpv1zHAGelTLcp5V
vBvOzf1v9DXu8hXTacANPmcC3cKZe3afzgn/i1Ms5h1aUp1rbGIMqZTjAqsZ
TgcakpWfWEI/WlGD8lxkDSN4naSwD37mI/rTmppUCPPloTA7coQZhDmRk1w8
Rm7ykEhe8pGfAvzCxwzgFWpRkd9Zy0g60ojH+ZWlDKQNtXmGP/iUUbxBY26y
lYl0pyCnWcYg2nKHHXzIi1xnM2N5m/Ai7pFZPMsl1vEeMb77Vt/kP3Yxgyb8
zTYmEeu5Q9qDKNdfh5npXI3X7yPuv/OF9AzLSbAerNF6IMxWk/UfdoYztJ6q
cXokzFvraGeeoymFqUQRilKM4pSgJE9Qiso8yT08gYMj
               "]]}, Annotation[#, "Charting`Private`Tag$464076#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl00WsVVcYhuHNBRJciifYpbj7DC/OACh2oUCC64UB7l5cEqA4tLgHK+4k
QEJwa9FJCwMcJkCQ5w+D93z/+62Tffbae53UXsPap2dIkqS9j+IomjFJpqYk
STYsNX+U+/SjzA/MvTGCd+EnzU3xgrdFPd1fvCKq8xtYhhIoZm2aPjv285Fo
h/r6jbpKuMmXY6DuKu+EL7xk3JtuOs+BA3w0f2jug1E8jZ8yN8NLPpu/NI9M
+bG3BnyTuTJWmb/JW/op5v/MQ/EHH8SvmTtjozkLvuoXyHe6i3Jc7EEWwh2k
xh7lDP1hmVMuk5/kJXnQ+hj5iJ+WfeV2mSv2idHWu8rT+uOyuVwvM+GVtTmR
sU/sMefDr/qGcrOuClabE9zWT5X/69Kxgg/m181d8I2Ximeqm8lz4VDcH7rp
zvAWeM07oJFuC6+KO3wlfkaqfpYuN/7mY9ERNVA6fsP679byxDPh49AJjfVb
ddVwl69CmbimfrYuL47w8fhNd5a3xBveGU102+J84R5fjSG6GzwNCcrGPejm
mH/C0bg//tjcDxN4d37O3Apv4zzjF912XgP3+TT+zDwMa/hQftPcFZvMWZHB
vFC+l+PjbJoLo1zsS86N/cQ7k8vlZ3lZHotnIp/wM7K/3CFzx/nDROs95Hn9
CdlabpCZcSXOovW58rX+QpwhuVfmj3tEmvWmcoe+Ztx/3Cv+0U+Xz3XDsZan
81vmbthszoYU8yL5IZ4XyvteWT7PnD/Oabwj/tQ8AJN4T37B3Abv40yjmW4n
r4V/+TpUQDn9fF2B2B+fHOcPzfW7dLXxgK9HRZTXL9AVxMn438b5QKW4nrWF
+kI4Fec/3m+8T1RGlbiG7yyyXjj+g/Fu4/mihX63rg4e8g2oGtfVL9YVifcT
zyz2h5b6Pbq6eMT/RLX4Hf0S3ZMcSfIdvSGm2w==
               "]], 
              LineBox[CompressedData["
1:eJwl1EVsFVEYhuGhxRIgARJIcIcVbi0uYYNTyg539wUkyAZ3dwnF3aUkkOBO
IPgCd1lAglt4/rB4+/3vd26n05lzbrneIzKG50iSJN2PR/mTJEvWQtXUJFmU
kiTFcYpPQR/URh1Us77YWgmc5lPRF631e3X18YhvRCvURXVrS/QlcYZPQz+0
0e/TpeEx34R6qKFfqiuFs3w6eurO8Xb4zPujrW4/T8eTuFf+1jwKm/kIftvc
Falxb7qaumXm0lhu/i3P6SeYn5oHYQbvxc+b22ODOTe+6GfLj/E7cpzcJ4vg
FgZYbycP6LNlA7lWpuByXD+el3wXz06OlrtkIdzEFusj5R39SdlNbpH5kNO8
IO5BTsQhczGkxXuTy3VlsML8R57XTzQ/Mw/GTN6bXzB3wFc+EO11B3lDPONb
MUp3l3dHrpT/e6S2boW5LC7wWbEvdBd5R3zjg9BBd4g3wnO+DQ1i7+hX6sqh
J78YzxKD0dHaYX1jvODb0TD2jn6Vrjwu8Tmx13SXeCd850PQSXeEN8FLvgON
Yi/pV+sq4DKfG/su3gXPwA8+FBm6o7wpXsX+5O/NY7CTj+b3zD2w1Zw/9oN5
ofwqJ+GwuTga+3x9uUZXESvNf+UV/STz8zhXckhcWxbEDcyLPS2v6E/IzjJL
5sE1/Iz/X36KdyvHy/2yaOxxDLPeWR7TH5fN5DqZGtfE6zhH8kOcQTlW7paF
scvaGHk/3g22mQvE3zYvkt/k5Hi+PpfG15or4SqfzF+Yh2I+H8CvmjPxi8eX
TKYumzfHG74bY3UPeC/kjWevS9etM1fGNb4gzjC66I/rWuAt34Nmsa/063VV
cJ0vjPMTZxfN0QIt8dD32z+xYKRC
               "]], 
              
              LineBox[{3296, 402, 872, 717, 597, 508, 369, 854, 699, 579, 490,
                431, 326, 827, 672, 552, 463, 403, 370, 327, 328, 329, 330, 
               331, 332, 333, 334, 828, 673, 553, 464, 404, 371, 855, 700, 
               580, 491, 432, 885, 730, 610, 521, 915, 760, 640, 950, 795, 
               982, 335}]}, Annotation[#, "Charting`Private`Tag$464076#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1nfczlUYx/Hb3ntmlT0LaVlJw8iMKBkZ2ZsQZTRkb9mjpSjJSEUbJRkp
ElL2yiZ79b7++Ly+45znuX9+9znXo2Dbno16JEkkEkeTJhJ/JkskbqRIJJ7F
b8kTiR64G2mw09pNfTP8LvfEPUiLu1ImEq/oL/KT8RR22X9L9xy2yb1QFlXt
nanLik/ldCioGyxf4qegERroPtYVwQ/ybr/vNt8c2+XeeN6er+T7UE5+WJ7F
Z8NSOT0K6YbIl/mp6Cqvlx9BY7mhvJgvign8CbpG/zL/J98Qs/nL9C/PkOBb
8G/TP+x7ne6V+/Ct+a/5hfR+OoWeoZ/T8tar0dnyApqdjqZH6Gd0mfUX6VZ5
Ma1NZ9D/6CqawXphOlR+n16RR9CD8lt8N/5nvjqeju9A/oQvhrXyHs+eRNdS
3iH3xb14RDdHlwPL5YwoohsmX+Wnobu8QX4UTeL7kZfwxTGRP0nX6V/hd/JL
6FN0TjwnXU3/9vlJaSv5nXi39r9B98nL6ItyG/qNvIg+QKfSs/QLWsF6dTpX
/oDmpGPoUbrCWj/+N/5JzOQv0kz6ovyr/DV+JH+Inx5nm/+FfwxN5cbyp3wJ
/CgPlnfxjfCPZ08mP8/vjM9CW/lb+cE4f/Kj8jw+V3yfcmYU070mX+dn4Bk8
rVuqK4mf5L1+d3Jda3mX3B/34zHdfF1urJSzoLjudfkGPxPPYp+fT6Fvo98t
D8ADyIoS+jf0N/lZaIb99qfUt43zLL+EB5ENB6ylstbO2h55IB5Cdhy0dgiH
cQSp7XvBvr+tDUJF5EBJ/XD9LX42nsNR+9Po28e7jLuFSsiJUvo39bf5OWiO
Y/an1XfQ741zhcp4XPe27o64U3IulNaNkBOYK7dAk7hPcimsl4/7fel0HeV9
8d2infyd/BCqyE/I7/B54rzF9yD/zteJ70AuI4/kk2AUf5jOiznIb+Qfj3PF
X6At9U355fyHtDSdRE/Fdxn31PoQujtmIG0cz06v0q/ov543Pe0kv0v32z88
NO5ozDP5Bfq9/BGtGDOAnqNVrdXg3+XzYix/jH4ZZ4PfxteNdxizXR7FJ8X8
mNHyJv4JtIrzKq/gy2CDfMJzZdB1lg/IQ2PmIk/8LdCP1ieL2RizGSftz6jv
ojsoD4sZiLw4Ze00Mlnvav2Q7tWYR8gXfyv0Y/TJY17EbMUZ+zPru+kOy6/F
TEB+lNOP1aeIdxazBGftz6LvrjsSszruKWrq3tPli9kqF0B53Tg5Jd6L+x33
S/eZfDd+kc/5fVl1PeSjMb/QXv5BrhSzRK4lv8/nj7kn3xlzVjdeThWzW+4t
b+ZroF3cS3klfw82xnuV/4o5jvM+M5vckz8W5wAd5DVy5Th3cm15AV8A4/jj
cY7ibvPb+U9oPTqLXqJ3WavAT+BTY0Gcp7irus/lstgkX/DZ2XW95OPym+go
r407E+dEflL+gL8T4+Ps0q9jdsTfR74+Csr3yRP5NDG/5T7yFr4m2se9l7/g
y2FznBV5D98E/3mOHHJv/l9rI9BJXhfnPd6jXEf+MP5t+CZmkryDb4BCMVPl
SXzauJPxDmNW6L6Uy2OLfNHn5NT1kU/II+OsoK5uYfw78K1cOGasbrKcDgvj
veCSn8+l76s7KY+K84AiMWP1U/TpsSieH5ftzx1/+3Sn5NHxXaIorli7w1o/
a6flMfGuUQxXrV3DdeSxp789Z/Rj4z2geMxt/VR9hpgRcmfcsD+vfoDurDwu
/m0ogYr6t/QZ8bHcBTftz6d/SXdOHh+/R/5Rfhj15HryonjH+E4uiUq6aXIm
LJb7yr/ytdBVbimv4u/FZP40/TXuf/w/gV9Km8Z8pdfiPNFbniU/HRj3k56P
80gPyCviLMcz05/i+Wk1Oi32xeyj9a3Xpx/JhfG9XAqVddPlzHFP5G647bMK
6AfpLsgT0QClkUASJEUyJEcKpESquO9+7uU4s/wkNEQZVNHP0GfBErk7WulW
yxWwNeaZ/A//TMxj/nqcZZra2v+3nHth
               "]]}, Annotation[#, "Charting`Private`Tag$464076#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$464076#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WUYVEUYhuGlpUNSWgmlOyxQSkEQMAiVsgMQRUoFFExKBQSVRlpa6e5G
QkopQZRQusv7+/Fcb8ycs3tmz8wWbNO+cbskiUSiWrJEYkTqROJ02kSiHH5K
l0iMTpNI9KQr5ap8E/57fj5NTYfS3+lWetG15WkneTb9y/y+dKu8nn4ot6Uz
5KU0Px1Nj9Lf6K+uz0qbyGvM/ZRfz7fg2/Dj+Ky4S35M7sNf479BJ3m+fC9G
us8ZWh5jjN2PS7oK5nTWHZO7Y5sum66pbq3cErkxSn9WVwFj5QdwWbcdo3FO
XxE/6h/EFd0OZHevZvp1ulbIgzH687pKGCc/hKu6iuZ20f0t98BOXQ5d81gr
uTVelMfL2ZBXflzuy1+PZ+Z/4wfynfkF/H0Yzx+P7+1+F2hlTI37mPcRXSU/
zDflf+AX0DT0O/oH/ZVec20l2lX+mf5jfr/4feQNtKfcjs6Ul9ECsc7xe9Nd
8b1cn5M+J0+nG8z/LFRuw7/ET+CzI59cV+7H3+AH8rv4QXwXfiG/ihajE+iJ
WHf3v0irRGdeNVzXVTbeTXc8nhW7dLl0z+s2xnoiP8bpL8X7jIlyddzQ7cZ4
TMBEXDZ+PyYZfwQ3dXtwl3u+oN8Uz4ICmKS/onsAk+VHcUu3F7nNb6HfrHsZ
BTFZf1X3IKbINXBbV8Xc93Un5I+xT5dH11K3RX4l7iFPlHPgbrme3J+/yQ9G
V3mRXDzu7fpr9KHYz8ZqopnxYXJaJOSq8gf8Sb4/v43vxbfnZ/HLacF4p+gx
ujv2vPvmpa3kGbHHzf+cboz3n74a35VOkhfTnHQ4PUR30HuMP0EHyHPoLXkQ
3R3rSr+Vu9HFcon4nfiT8Qw+93q8w/FexxrpV/O1+Ob8cD4dksS+jzOHP8X3
xtvy7Fgz/OE++eTW8c4bew2vypPlXCgk15e/4m/zQzDVNTfkapgm10bSOB/M
6677l/8E+83Lr2uj2ya/jsKYpr+pqx77Qq6DZDign44ZmIlbxh+JdY1zDslx
UF/APV/Ub5ffQBHM0t/WPYqZcUYgRZxL5vbQ/RfnKA6ZV1D3Uqy//CaKYrY+
oa+hnxV7ESnjnIp9rjsdexeHzbtb97Jup/xWrJk8Jc7jOHflBvLX8U7F/4L8
vryELxnniOuTyDXjv8FYL34NX49/jh/BL6Tp6fd0f6wdTWX8YfqR/As9Iw+g
22NP08/lDvRneUW8V3E+0L/pHvqnz72HvhLrE2eT+V/QTXLb+G34n/jcGMEf
jnNU/yT/TbxHGMzviTNS/wG/lC8V38e9k8q14vnifcbz8kg5A+6Is0n+mD8b
n4sjrikU+yPOyjhHUQxz9Mn0teO+8e4hNY7q5yK5sTqxV2KdkQZ/6QvrX4s9
GfsVxTFPn0L/mH5uPAvSxjmn66U7x3+JY+YV0b0eaxX7AyXQUDdQlzR+C3m+
eSl1j8vzYhwvyKPkjLHf4nyUe/Pn+a/4HXwf/h3+F34lLUTHxf8J3Ru/kfsW
pW/Eu0f3xveim+UO8Y7zU/klNA8dGb9nvH+0pPFGdFA8I01Gv417xDkb/23G
P6TL5NW0dJzj9BTdF/+XPjsVrSvPj/OBX8s34lvwo/lMSB9nufwJf4Hvi3fl
OXJh/OM+98pvxn3jeVEKjXWDdckxTF5o3h26evKCGEcGHNffp39L/3vcG6Wx
SJ9a/0TsC/kpZMQJ/WIsQRrj9Y0v0j+NTDipL6ZvG2ec3BFlsFSfVt8gzmP5
GWRGDd2nuot8P5wyr7iunW6//B7KxufHmaxLEee4vMy8dLon4/eRn0VLeYyc
GVnkmvJn/CW+f3wXea5cJM5K15eQ2/MHjPXht/Cd4mzip/F5MYo/QsvFM/JD
4h2kKekQuo9uifPDeHe6XF5Dy9DJ9N9Y1+h9XnraMM7u2MNxVtN18lraRG5F
x8Z60iz0B3qA3mmsVpw1/GX+a34nPyDWh5/HF42z1meUlN/mDxrrHOekPF3O
h/Kx7vJQPlW8z/IK12TQNZKXyU2RFbV1X+iuxH7CafNK6TroDsldUAEr9Rn1
jfXL5WbIhjP60vp39IflrqiIVfpM+qfivJSbIzvO6svo39X/KXdDJazWZ9Y/
HXs4zmq0ln+MdYl3mz8Y/0k0h7E69Ev5aqwTzrm+rK6j7kj8J6Ay1uiz6J/R
r4pzEzlxXr8W67AeG7ARm7AZW3Cn656NfR3nEHLhgr6c/j390TinUSXeS913
cRbHuyT3kFfwZTGF/y/2Cd3q+v8BdZvR1g==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$464076#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Feedforward solution\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1a\"", "\"u1a\"", "\"x1a\"", "\"\[Theta]dot1a\"", 
           "\"xdot1a\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
rYJoYEYrUePVfwQ0KMKU2TFzAyx3chzncWRC7YsDvO1u4ODuz6WzpReIqOtR
c9HAq3j4rIGsM/SdiAYQzkxftCFA9nt6CR6BRNSj5kvXU2sm+P6lFchEmFBt
21X8MXciPD72IIL1NAG94hB7iP8mL0zraPE2JLPCnMI9j/cM8MLg4BjJdHk2
iPhVK0de54MRSPL96SZ2qLe0EGQ8wgfzfioznaFywE8nAw6qxK+DsVZkY3c3
AZ25oHT+9PdNcHdfeNjmDBOqf5Gj0OAPDg7cS6n0jyKicSejbAiDePjY8fKR
MXp+60GjmspHCVCdnds+7j8iKrDxqS1gjgnKe6uhnwSY0N7ykLOfknlhnf50
F5csGb7l0rj4XJIPHn66/uwDDztspsAomMIHB4b9w28+4ICmgb+29Sfg4A6F
3QutbkQ0EGyoaiTi4TIzUU2THi8+9c33vUgnQKGYTVKvJRGt0vYbtfHhg9zL
r74kytOfd0ndS+Vb8VD8w5qI/kcimq1xIKxwFwGGv6wK8E4lon3NK+oC5XyQ
TEu7sIZyQG+V7I/Wnni4t9PGzpruH9scE0fmAwjwsYew7k13IlpRkMEetIGD
TfvUfBySiWiq2uDmH2YC1Lkn2RFN94/wE9qt0qV4eGdNN/Z+ERH98mQyFaeC
h96tJzcF6P797bTnrtdaBGhOc0NiXxPRYpePybus7IBGhrsOp+o0+La/5O7l
BzQQeuWFAXEfAY0SDX35KW4DFKz4PrK1ZkJ5U/vlEy/h4MmvpjFJ+kR0aVU/
j/8CHmqmFDjEfiOiyRarM/ZmBFj0Z9+MaTARdWRbqV4xZYIC8by38ZVM6AJb
RGejIxEqHi4U8jEkoAtbag+IXueFr6xYL6QtscA3wuwu6r28sOf4rLj9NjYo
rreYfOUqHyw+HDK7XMEOadwP9lgO8MGDMgHaBnMc8BIz88S+oHUwfMWCR7+R
gK623+p5lr4JGv0u6iOjTOicirm1XysO/rl2rOF4OBEVY3rM/KwLD9/KmOud
ofv3ivSplt4+Ajya2cE+AejP39HFitVRJujTMTF8ezsT6uJYeuZbAi9cXxz+
VCxEhpHWO7TeifPBx89VdByI7PBQmxWBOZEPrnOome5y4oCEu1LVfK9w8Dg1
eP3VfSLKtjnWXReFhxVz2Wn6dH+pU4v/m/qGAG2uvru7dpseX/gyzyt48sG3
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
H5xPdGA=
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{349, 49, 273, 274, 275, 3535, 3538}}], 
               
               PolygonBox[{{44, 63, 240, 743, 588, 469, 863, 708, 380, 833, 
                678, 558, 319, 803, 648, 528, 439, 286, 776, 621, 501}}], 
               PolygonBox[CompressedData["
1:eJwVzCkzhXEcR/HHvrwAa5Iw9q1YkkCzKwIuQTDWIFxLMWME3MtoxlJtiSRY
CsVWJEEwY30F9o9w5nvO7//cmxMabh2KDYIgBnMoRQkSHD48dOOJL6IFpUiL
C4Kwexy29TAS8al78MyX0IoC30bcMnCsy5DuNqnjsaOb9AGvxYiu1hs8F1c6
CV+8Fy885P2cR3gD3+WVaNOFOsozMchv7Yl7Jz/6/42tt2H7YNdtufcMO6Vn
bYIdsJd29f//vTfbQ71g6+yEvbdrdtR7jd3U8zbPjto7e+2ti5/wRszwR5vs
/m1DeOV97hc8yhv5Hq9Cuy7SyzwLp7oCmW7TOhF7egy1bls6Hzc6BT+8D298
GR0o9t2KWzbOdCWy3GZ0Evb1OFLxq/vxzv8AHfxA5w==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0U8s13Ecx/FvORPNn3PbD5WxxUHl1goVDj8kbtpC2jAlWwcHFK3iYrOZ
Xxthq27cFN269LN14EKSOpf8GQrV43t47vV6vt+ffX+/7+d76lZrtOV4EATH
MIE85GIXPyyiWLHsxhVEkJgQBO3mf/Qx3Mae8z/NKvGZ96AY2c4+M0vFW56J
JLN7/EAfRwMKzUbNIvjI9z1vQ6/CKu/FZWde8XMo4af5cz0N73gWTpjd54f6
S5TzaX4Rjfw8j+mZaNUXZdy8Vp/Xi9Glf5e//Ydfsho9Zl+cq5cf+JB8FN6J
fM2fynzZIZfliCy1PyMHeJ9Ml3flJzks5+yr5SwflJfkQ7kmYzLbPll28CO9
UY/rE3qFPqMXoYlf4C/0LLTpS3LBvE5/H95X+L28z6a8gTW7x+E3sn/DC3CV
n+WDegbmwztGitkD/lefxB0ceNaWWQ2+8j5cC98XJ53vNP+nT6EZh85vm93E
Ou/H9fD3cGS3Y16Lb/wJypCD/zN/V7o=
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               
               PolygonBox[{{46, 47, 366, 425, 514, 634, 789, 303, 336, 397, 
                486, 606, 761, 260, 259, 302, 335, 396, 485, 605, 760, 258, 
                365, 3536, 3537, 604, 759, 257, 364, 424, 513, 633, 788, 301, 
                334, 395, 484, 603, 758, 256, 363, 423, 512, 632, 787, 300, 
                333, 394, 483, 602, 757, 255, 254}}], 
               PolygonBox[CompressedData["
1:eJwV0bkvRFEYhvGLytLgD2BsFaFA6KyVfSmUYyyFwpJoFGNQSNBR2aejpBsS
pcRSKCS2QqGyNXY6vymevM/7nXNyz703FBnrHk0NgiAFMZSiDIUGTZjFHbps
esWXtUE9jj9MmGWlBUEBP0SuvoQSs0Z9BrfoNHvBp/NneiFfR7V9A3ot30er
vq2f82H+y8d5Jg/xez7F6+UBevmB+QUf4TlyXi7KYtlgbVXe6pOyQi7KXdko
Y9ZX5LEeljf6nOzQn/HhvnH9gUdls1yWR7JPntp/yUeT30CuoYpHzGv4Hlr0
Lf2MD/EfPsYzeD6v4wn06Ak9my+gKPmeejnfQYM+rV+jXX/Cu/ud6CG+ikp7
+vVNfCP5c9PN8pLPQRRXaDN/xJvzYX0D/5HuQdc=
                "]], 
               PolygonBox[CompressedData["
1:eJwV0jdLXnEAhfFrA3vcrVlVsIAddXHRTYfYF1ETAyqY2MDBCg4iiK8NB0Gd
7ejiYqKCi6AZEggOGTJaP4G/Ozw855z/hVu4H7sGmwaigyCIwgYKUYQqQwc2
8IavLoqLCYI0eRwnSLHNIcdeqbdjHa/os8faP8i/kK/votY2ph8jWZ9Ftq1C
v0a2voZiW5teJu+jQV/TX/BFj9FT5Qb5Bzr1e/2P/E3O4x3UyKP2B3lMruVF
PuMmPnK2yrd6HyeF78QznMXlzrf4nz7BdbzE59zMV+E7h/fW+zmL53mVi7jV
+Sb/1Ue4lBd4j+vD65zfyN3ys/xZjpZT5P/ypFzPF+iQ7+y/5SE5l7dRLY/Y
a+RTNOqHeqI8jUy9TL9Epr6CQluLvoIn9NqibMnyMA6QYJtCRvjc+k9k6BEU
2Jr1CB7RE/5E4feTv2Mf8eHzI91eon/CMt4BlB1FSQ==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt01N3FwAAxuF/Npe9tFqXmSd7rRaWsawt21pYdmu1tGzbtm37K/TsnC6e
897/znmDo2IiolMEAoFvJO8ZljGUttSmPClJRWrSkJZ0pCcDGclEZrKQlWyc
ZTnDaEcdKnCDRCbSg+Zk5xwrGE4kdanITTYwiSjCyMF5VjKC9tTjIduZxQAq
cYuNTKYnrzjAQlrwlN3M5RMniOYth1nCV06Tkwus+t9tJO85yi868IJ9/GA+
nznJH+rziB18J5aPHOc3A3nDIX6ymC+c4i+Vuc0mpvCBY/TiNQdZRDjP2MM8
YnjHEZYSxEVWM4qOvGQ/C2jAY3Yym0FU4Q6bmUpvWpKLS6xhNJ1oSFXusoVp
9KEVublMPGPoTCOqkYe85CM/BShIIQpThKIUI5jilKAkpbjCWsbShcZU5x5J
TKcvEZTmKgmMoytNqMF9tjKDfrQmhGusYzzdaMoTdjGHwdTkAduYSX/a8Jy9
xDGEMlxnPRPoTjNqUZZQyiU3d6p/5Vpx9w==
               "]]}, Annotation[#, "Charting`Private`Tag$464160#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1EVsVVEYReFbmOBSbIZDcXcGuHuheII7tLgFd1okARKCFJcCE2SAwwQI
GiC4a4I7LS7fGazuvf5z3n3X+or1T4pPjImiKN6fj/JFpihqixu8T+YoOqVP
0xvpO/RKaMBL8EV6HhzkhZHFbBRP1ys41nrZF5/0l+btcJNPR0MUQVafSTTP
0FPRDzXM1pgVw1n+2edf6e1xi89AY3t28spoxEvyxXpeHOKd+SG9IYrybDxJ
/6YP0s/rG/Q2+l69DvrzmnytXhyJ+jV5zry7flxfIZvJ6fKp3CS/OL/XegfM
4bfDdcvTfKWcyZvINJ4sq8jx8o5cIxtbLyWT+QIZK4fLy/KwtS764XCdmKI/
DPfGPLs+Wv+uD9Yv6Bv1tvo+vS4G8Fp8nV4C5/lX5/tG74g7fFY4P5S2L8Us
H47w4shhNob/0DdhINJ9/q1ZJ9zls9E0vBOoaC0D76zF457ZHDQLzwg5HW+s
+U99c3gW+Gb/e7POuM/nojni7F1ilh9Hwz1CLrNx/Je+JVw3aputNyuJC/y7
433Qu+ABnxfOz55dvCpa8DJ8qV4Ax8K1I7fZeP5b34p2fD+vhyG8Dk/VSyFJ
vy4vmvfQT+jNMUN/Fu6Xc/goEzA3PLPwbsszfJWcH+6J3M1TZDU5Qd6Va2VL
62XlMr5QFpQj5BW5OryL1hPkEb48vENyqnwkU2Wc9TxyAv+jD9Ev6tv09voB
vT6G8rp8g14ao/Ub8pJ5T/1kuF/hebmeT7IrHllbEJ6R9T28Olrxcny5Xggn
wj1GXrOJ/K++HcPwy7E+m3XDY74QrcP1Itb+Seb/9B0Yjt/2fzHrjid8Ufi/
Dd+HP9a+mvfAU744vP8oj0rW/uIf0q33xDPz5PBsw28U8vm+yeYRdvIR4ccQ
GbwXnusp4Z6Fdxv57Z9iHoM0PhIx4R3mvXE1ZxT9B4ZDrek=
               "]], 
              LineBox[CompressedData["
1:eJwl1EVsVFEAheFXxT14sRVupTilC0ig3eDupUgJ7q4lgQSvAIHgG9xhAQlu
CzwBEiCBhOK+wuG7YfH3P+e8kc7MnamTOannxJgoitr6c6dUFE3gWHyLjaIh
KJRXoRuaIA7x+O7aULyUV6M7mqJiXBTNtcdirx4evKnHT+AftmF4Ja9BDzRD
JfeZZ4/DPn0SEvFTH47X8lr0REO3XWergnN6c1S2zdfjsT/8r/oJuQMm6+30
7XJd3NKL4Jc8Am/kTNevyevkLvIBOQW99Eb6erkqxst3+by9r3wm3Ic78Tx+
xts42fUqvEDP4QQeyzc5Pzx+eL/4pL6aU3kWP+GtPMX19rxDX8n1eAo/4Nuu
DZLPy12xSH7BRe2/ORNv5ZH26/J6uat8UG6J3npjfYNcDRf0FqhqW6gn4qA+
FR1sO/X6uKMXwx95JN7JG9AnnAu3y7VVx0U9BdVsi/QiOKRPQ3H81bPwPnz2
zkVueC/REtXdZ3F4LTisT0eJcDjto2wf5Dz0C2fKlmdLwiW9FZJsS/RiOKLP
QEnE2EfbPsr56B+e25Zvq4HLemvUsC3Vi+NoOJ/6KbkjZuqp+i65AabKD/mu
fbB8QU7HYrmQS4XvkTxG/iRnyTfkAjldPiSv4lbhsfkxb+EB4Uxzgb6Ca/IE
vseb+Ep4/Xw2fLbcmefzc97ObVyvycv05VyCs/lWeG4+Fr5HfFpfw2k8m5+G
M+haR3m33BDT5Ed8zz5EvihnoHT4HdDHyp/ljcjQD+utMVBP1jfKtXA15v/v
Sy1bjl4Sx/XZSLPt0Rvhvl4m/L7YsvUv8qZw3sN3GLXty8N7ixP6HJRFgn2c
7au8OXwe4fsT3kdHpxyXRwXc9vv2D0Y4jhs=
               "]], 
              
              LineBox[{3538, 349, 819, 664, 544, 455, 316, 801, 646, 526, 437,
                378, 276, 774, 619, 499, 410, 350, 317, 277, 278, 279, 280, 
               281, 282, 283, 284, 775, 620, 500, 411, 351, 318, 802, 647, 
               527, 438, 379, 832, 677, 557, 468, 862, 707, 587, 897, 742, 
               929, 285}]}, Annotation[#, "Charting`Private`Tag$464160#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
WplOpxfivRFnre//H87vvZc=
               "]]}, Annotation[#, "Charting`Private`Tag$464160#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1WXYFWUURuGDdKfS3R1Kd0u3opiACgbYhYqCgEl3h4AgDdJdBraEYNDd
IChIeO8f63r2s96Zc2beb858Bbv2bt8rSSKRKJY0kdifIpGoljqR+ChVIvFf
ykTiA9TEAG4Pdy926ZnRlVumF8US/QkccH51/mPuhv4hamEg9xvXDLv1LOjG
fakXw1L9SRx0fg3+E+6m/hFqIysOWatp7VNrt/SPUQfZ0J1fzhfHMv0pHHZ8
LX4wd1v/BF/oN/VeqKsP0veam2OPvkZPj3f0O+OezCvMJbDDnDeumV8mU+A1
/ndZFj34SfI8d1o+JnfKYvgPZ61vkllxGe9bPyTvQdI0icQR11vbPIQ/JhPy
K5kTV+O+nT9P3uLPyd7yN1kqHOrF30vu41vgR3PB2Hd+rcyAvvxdsdfmleaS
WK5/qafE63pPfbL5gvnx+C79qGurww3Vk2AwVx/ZccxaXWvD+DswhGuAHPF3
4FdxpbBCfxrHHV+PH84lxVCuIXKiB7+aK42V+jM44fj6/AguGYZxjeLZ4n7X
W2Kvngs9uTV6GazSn8VJ5zfgR3LJMZxrHM8W94feCvv03HF93Fq9LFbrz2EK
d1HvivP6KZ/XkBulp8AIrkk8j9yfeut4JvQ8cf3cOr0c1ui9cNr5jfjRXEqM
5JrG88n9pbfBH3reuH5uvV4ea/XemMpd0rvhgn7G5zXmxuipMIqbr982Px+/
Wf1Tfb+5Lf7U88W9cRv0ClinP49p8Wzq3XFRP+uzm3Bj9dQYzTXDYO6A3g5/
6fnj3riNekWs11/AdO5v/Qlc0s/5vKbcOD0NxnDNMYQ7qLfHfr1A3Cu3Sa+E
DfqLOO/8e/nxXFqM5VqgIC5Ya2ZtAp8O47iWKISL1ppbm8inx3iuFQrHffOb
ubuxUX8Jlxzfgp/EZcAErjWKxH3xW7h7sEl/GZcd35KfzGXERK4NhnKH9A44
oBeN++C26pWxWX8Ffzu/FT+Fy4RJXFsM4w7rHXFQLxbXx23Tq2CL/iquOL81
P5XLjMlcOxSP6+O3c1WxVX8NVx3fhp/GZcEUrj2Gc0f0TvFu0kvE9XFf6dWw
TX8d/zi/LT+dy4qpXAeUjOvhv+aqY7v+Bv51fDt+BpcN07iOKIVr1tpb+yze
uZjOdULpuFb+G65GvAv1NzGDu6I/icv6ded34GbGuw0zuAXx/sQL+n36CPPR
mPGTuVDsK79OZsS78dzJiigT9yi/5Y7LmvI7mQ//xL1ZXy5Txbseb8TvVZaL
7/Qe72P9s3hn82fkU3KXLI4b8XuwvllmixkDrB+WleP/hHvpKGdx2fG1OVfs
jXMWyiR4kb9fH2k+FjOO6GVjr7kdei18o7+FGz6zEz+by4GZXGeUi/3kv+Nq
41v9bdx0/H3851xOzOIewCjuuN4ZR/Xy6MN9r9fBDv0dzIx90nvgin7L593P
zdFzYTb3IEZzJ/QHcEyvENfL/aDXjT3XV+ip8abeV59l/tfcE1f1LfqdGKjf
9j2dzXPNueP+zbnjPhy3SN6Bl/i9sjS68GPkSe6UfFD+LAvjetyr9fUyU7xv
8V78hmWl+Cx/54qxX+Yf+ROynvxe5o9rjH2xvlKmwQX0iXevLB/Pm7XZ8hr3
NHabS8S+8VvlXRjEJ2LvzV+Y82CO/hDGcqf0LvHdeqXYe+4nvT5+0N9Dkthr
fh6XF3P1xXpSvKw/rI8znzY/hF/MRWJP+A0yM/rFu0feHfB95c/cSdkgvksW
iHuJvbC+SqbFRbwV/x9khXh27Vk/65/H/vJn5TNyjyyJm7Fv1rfJ7PEbxwfx
bMsqsefWusj5XL54Xs15Ym/4JTIZXuEf0cebz8T94Vdz0dgvfqPMgv7x/tbf
Nf9ibhjvBX21ng5v6/31OfGbND+La3rS2H9ugZ4f8/RHMYE7G9+N03rl2H/u
V71RPFf6+0iGh/mFXAHM1x9DFSTHI9YW8QWxQH8cVdGP38k1jr+RPgAp4rv5
xVwhLNSX6snxqr5PlsFtdLU2UZ7jH433kl4N/bldepPYJ30gUsY18Uu4wlik
d0N1pEJqpEFapEN6ZEDGuF7nLXVOESzWu6NG3Du/m2uKnfogzI33of4cruvb
9Rz4MN4vsmr8TT0zmaz9D7zouD0=
               "]]}, Annotation[#, "Charting`Private`Tag$464160#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
7Cf8KLWPZwj/JM+WP46zJN671v4PQ7H+xA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$464160#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Test on dynamics\"", TraditionalForm], 
         PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1b\"", "\"u1b\"", "\"x1b\"", "\"\[Theta]dot1b\"", 
           "\"xdot1b\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{
         GraphicsComplexBox[CompressedData["
1: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
j/xJIfNiqN27c8fZaGRejI6U1yg1+F9ezOy6qyf6PWlkXsyCDU3iYQOVqVwl
4TEwzgbdvrMPv2inMDF/+6eOV+j9oXmSv5XbUpP4w3uW5G+HqhQizNX+8bcG
i4/6vzJZJH/b4Ka59HYri+RvByS4RsPWzyDM377RNRfwJeYpzN8yl+57eUaM
hTB/a6F20wbqTyHM3yrveRowVTaOMH/rvOf1heVXRhDOuxlc92JvldMPhPNu
aHkpOVVj+Qjn3ait3eY5etoPYR43zbGkf1HoKcnjvvbIvnCa9yXJ404gsWEL
lTckj6se96rU8Ugqyc/etdh0TsW2EmB+9mdl5IYmxXCSn+3a/D73tgITYX72
sfTtvPVDXxHmZ+OuWWacW16NMD9rkMfhxa1UjWSOXQjy2d8J9B7LObSlVSDh
jp79hjq94PaBlPhjeWUI87WTlueYg54VJF9rXNWTIHL5O8J8bcW3o/J/t9Uj
zNd+WTUe+La6DWG+1qXi43s+pR6Snz1z5Krf+n3zCPOzrl8/MXe4UMj8nfg1
xPGiiErm79TNy76VvEkj83dyzt+cFnv8L3+HV1mSU5mPxrRu6/fc/IENRtvd
X3y8lsrEPK14/IpX0d/mSZ7W0l08crRnluRp2Y+to7B8Zkiedmn1t6j7lSyS
p+WJKM9WIv7GPO3hE9taSoh5CvO0z1RecaWIzSDM02pNz16UsmEhzNP+KsrK
pNZMIczTxt7lqIq5PoEwT6vgqdokf3YU4fygu66v/gxI1COcH1R3M0j0vl0x
wvlB5ajrRtiPVwjztr9HBreqrA4heVs0X9i1lvMFydsedRj0dx2MJXnb2/ue
mZz9m0zysVfc7DOsTSpIHvb3vuU11lu/IMzDlq8xaxJVq0SYh7Vyur2KcrEa
1dj6u7xQagco/f1q9S1VqD7eufaUcjcIaLc8fvJKOaqjodar9v0ga7MJq262
DGF+Vk3Gb2G3cjXC/GzB5qV31hr/QJifZf/82eWT0G+Sj/0TWDuTuHcRYT52
7dIvZtLyVDKvyFnhOuPnHhqZV/Q2ISr+0It/eUU7thg/sThDY9a2hutt2c4G
0w7QNQWjqEzM0/6uXnttV9UcydMG3xFSKFg3S/K0dhWydvx8/3jaVe55JW05
LJKnNTATdQqfIOZlPYqK82leaFu9Pih30wzJ10r8EDDf1MBCmK/9FiDJ8TBz
GmG+9qx5h8tp5iTCeUpmB1SLLk1/QzhP6e0zdxd/3myE85Qkf6ie6F3mRvK2
WZdf3Eu5HQpwnpKDjoMQ17cokr+Nzu7IzXWpApi/fXzYJZ57pz/J37L8q2D0
2lyE+dtnNgkR1Z2lCPO3icnRka0NVQjzt+qGbQoaR6tRtmrPvkNFHYD1SPG4
LF8lOnsqvelhfg/YfjP/ycqGMoT53HPblWxM5stJPndRxeJlwq9vCPO5n4Lm
JW0k6xDmc6+erCz5sLwNYT5368B6DtlT3SR/u0K075flpzmE+VvTe8df7dCg
kHlOPO2HNgwT9xfnOXGlReXSr9DIPCffafWzzmH/8pzSf6Z/i1xHY3r0HfOq
CmGDVz6P/VzcT2VifvfrppBWXZEFkt91ktw4Kr1yjuR3T9HOPYuNnyH53WvH
QiYc61kkvxsrZxdOKWaR/C5Nwl7+tdAMwvxu+djpVj3pGYT53W8nnmT2E+cv
zO9ejLPhtl06jTC/+2f/2axl3ycQ5nc9og/vTPg5inAelayTLqNttgHhPKol
Z+NLnI2+IpxHFRp8qmOl7VuE86iYjwwHhceCSd53zRKlZ7sSn5G8r4PECxvb
nzEk7/t+PWP925dJJJ+7pOIlz0BNOcA87tD9E/d/FH9GmMdNKl9IWXm/AmEe
d7lKgcS8TTUK4ZbMMU/9A2RP9mYUBFQhu+BxH5m8LrC8ZcdRoexytN79rmtS
Rx9oX37ku3R1GcL8rnn7nUG54CqE+V3ni9yRjMBahPld+ZZjn3qLmkg+V8Iw
0ZiZv4Awn1tTq9/ZQaOS+VcSR65ll62ikflXFi+f7foV9i//6s6eie2al2jM
qye53gcKssFtbfSu63nE++k/nlcr2DHvA+88yfPu/VnQLmkwS/K8dueva92T
+cfzOg0JcCblskieV83+Tmd3Hwu9fKc4NKjMC08XFLUi2RmS720Uv6xRPMhC
mO+dPFvUc7p3GmG+199rwGOYawrhfK47NoEBD5JrEM7n2pIv8mXjzzyE87nE
KwSXBhmbIcz7FjX3dmTmPgU4n8v+9cs163tekvyvXObjiICRSoB535ZkPrWX
f8oQ5n1ro4rXrADVaMUhtf3dr9rAFSt3361i1ejx+aE/H/M7gfnrSKcC4wpU
dEEqYWVNLzhUPy93P60MYT74K8/pm2LilSQffDcGCQcuq0E4zytUQzX5ZDeV
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
LWHZ7mJiveO8+OyUQrHmVxQofVD495y4IHy68LPw6PAiwD5Ls5dZal/kLMA+
i+iUCzWaMg6wz9JuZiF2oq0NYJ/lj6TNmVvVKQj7LHxlca7rCh8i7LNU5qul
jFkFkz6L5snP05xBr8l8+co2gfsKQ0lkvjzbrVeRauJpZL68bMCh4HmPdDJf
vmhuIkmMP4PMl6+WrtvVNptO+jF+95jZy8+nk36MeYxBkEL6JOnHrNz/a3C9
AIv0Y/JiqZNXQuZJP+Y3I18cxFGZ2I/RP1GmljZCZ2I/ZpFfZ4O/HoOJ/ZjF
D6bjig00JvZhGtl2cOUqzJE+jK7dqxmb+9OkD+P6+OKw79QE6cNMV0vXu9wa
RzhvXv1s0PnNsWNk3nxmyETC85RRhPurHdtn5kdah0l/ZrmrzKWs5X2kP7Nn
MebhpeJGhH0Zm4iXVsmqHQD7Mh7NO+/xKI0C7MugIdbPtLBpgH2ZAttbIn8c
58Dvb3MLDh/YoUy/THl20QLA/kxTVMtXXXcKxP7MmavKS6uHqRD7Mw41No4l
igyI/ZkW+2MCbIADYn/mQZ3YUb1ALoj9meKmN0W5VlwQ+zOj1LKOWl4OiP2Z
dKEbBQXWDIj9mfaFhW3Fqv/y6CcHJ7QeiP7Lo2dEvVU4lkaBOI9+L0vnnlAC
sf55I7f3TwrABx1yx3bvo0Ds19Bp+aafKfMA+zXjcaYXeBQnAfZrWH3Nuxrl
e8g8++LVUmt+eWQg7NccOOC1WGn6HGG/pqMsPyesxI/0a6wtFUqOLUaTefaN
ktcU3cQSyTx73TueRsJPUsk8+yvXOETy9vzLsz+7qbhnjljfOM/+h4Pl39u8
GaSv80LPOaErLJ3Ms3fYu4yh9W4KYX8nW7o8YJnwLOnrXAQS0s/HaEzs64iZ
c2duvsBgYl9H/mCh+fp8Oplnr8l4K8KuMUP6OHHLx2wTRKYQzrO33SwM3qyZ
QDjPPsNnt+Jt3nH0Q0+GbckQCxhs1b9zdNcYqnWrZL86NAuQPRtj5/QIwn3k
+3iS6sJvDpF+z2fryda1NzoQ9ne60qMCu+8PAOzvjJj68/PmTwDs75S+zVOs
K58BArmarm8V2aGjwarjlUnzoHwlN7+HKgcUXe54UPDXIsB+j/WND3NrV1Mh
9nukLUQXDYZpEPs8GsglTfIJJ8Q+T++wJjL8zQWxz1OymDufYMwJsb9z62Dg
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
2Ev42592YP+3alEko0C1H/s/ptlua9tKDvZ/QbIWdpE6HID8Xzb148mdDX0A
+b+86LqkzybtAPk/07oCZUrxR4D836FXW2DYmwycD/d4cnvg1cginA8XIOeb
v4A/FyDfl7dj8SvHuWGAfF/3vxPcosQkQL5vq2fs4mXqcwD5Psb7McP9NvO+
j20tbiVcN4t9X5yu1L1PU+PY9znIvjB3Du3Hvu+WsL6wqnQF9n3ntmzMVzmf
hvPh1POoPxbXMbHv27vFUEW3uRT7vtLEc+HvTlVi3/ee2jX9Vuwj9n2JQv7V
L79XY9+3bed3mezJGuz7HLmLW83esLDvO7lFJ4WXPN+R7zt3RetalBkb+z7t
qqpj39Z3Yd/XYdcU1PcoBefNbdvG3pZgWAqQ79OtTT/6NqQEoLw5t/AOtZX2
0djzZUm9PiZHmcCeL6ria7WmwCz2fJXCcxtXdVEI5PmksuLGC3OoBPJ8GReM
wn9sohLI81l8LIgx+jPDRH4vY8lrT27X79jv2dww7nHPZmO/d/zbkoc7aBzs
9/zOWEeFtXKw34tl1JocXzUAkN9zezU64ne/B6D8uXKCwlY//QMgz/c0/8b4
XfVYgDxfI58Pv65TCc6fC4bK5ZMS75jI68lBn4sJs2MAeT0jhRLdJ/tnAPJ6
PzdfK/quNO/1mBMVbG0FCkRez+jS0dCVZtPY6zXfn+3cUzOMvd7BZdoB6qbt
2OvJjTstcnV/i/PoJG12Hzn5LBcgr7fFadOLuGfF2Oupi70z7Csox15PsHTl
HaMfH7DXK/opoKS/uBp7vUsj95w7HGuw16uUvBx52pyFvZ5mc/iCW+R5jrxe
yOFDfOnkeY+8nu1gVtmnSDb2ets+vteOqejGXs9FtX17+DomQF6vzbf4X+WJ
coDy72K7diWmSQWCjB0fyhcsmAC1z5a2m7hRCOT3BleHTwVEUgnk9xIVC/8o
OlAJDfvqhFPKcyDFVHDyqvEc9nw0wSsJzY3d4OdJldlfZTyw+OYe5yqLARAW
KhlxrYIGtyzqGZDq44CjHyqZXZ95YY2T/n6u8gHs/+5+4F3x4AUBkP+7nL7Z
hbGZwPl4AkVTHzQqc5nI9xXKR2/7JzINkO/Toe+uM+uZA8j3dQ4kJw2dnvd9
53hfWM5mz2Dfd4cP3vlmE4L9nuvrYrdq+Rrs94bMdw2zFVnY70l/aTb577xK
qoiqN31F9qdVa0Mp9Szwhip539ozF3g4pQf3N/XifL03xhTdYycdAfJ9DAnz
WzfGywHyfdY7RD419haCy0zn3qIlk4BY87ayTo2KvZ8Mw0MrNI9KeMonXI3Z
QPZBX+Vby8opxN2350LntHkg2JIau0PhL7iv+nTcdDcNmn4S/njNiQMe9m5K
u2PAC6OMRaf54zgAecHWklPa6n3PmcgL5rWG5VZzSpjIA07ph94cM5kFyAM+
WFe+puTUvAdcueGGwmjuHPZ/C3dfP+11n4X9X4X9UD4fWe8g/8fmNEXbk/VQ
IBxNGnoUBPIEpA4NpbCZS602LBXvLAZRWea1rdd7cD4fjbVqScivHIB84D2X
CF0T2QrwIv6pnV7dJKDZ680q+lMJ53PHvod/mQZ55ucOrAqgEqv5mk7avKVB
O68LzdItZP9R6SomlcYLDRvzNLoEOAD5wukgisbksnycz6eQ8Ev+9DImE/nB
rXNTYZSgOYD84OoncVcUreb9YONe2u3VO+a9oLCAws3pZBY4HN60u+IRA7rY
vgn58o0FfDwbKFeDMoHo5Zb2GGk2E3lCwWOmio49ZQDl+bk/f7MyO7UIaPyu
XX24egJcjd/nfViYSqSG2b2fZU0BIM2ntK+ASqxQCzW0a58BPu6fnh+coRBh
mtMTk+toMNVlZ5vQXg5YfLTXxnEzL3zyQP7gmY8cgLzin5GUqivCpUzkEd2F
g+hn9eY94i6PPRyPhRTo7zqaKKTHgBm33faOs8h6bO/0Q/pXBgx3eO95sJwF
UkSe9/1xjAfmZamjVt5sJvKJbSrapiuUigHyiQpqbN6bG8uA1HquYCnDKWDz
gvNybQqV0NO/Lcp3YgboCigN2RtTCYbC2c7rvTSY+Kz2zXNyP0CecYIhvKx/
YzET+cVa4mmfuTgFpk1lXb8lJAxLirgUTh+gQOQXL22IKHYpZgHBQeuLfSkM
GBG5YybsMwsUupwXsLR9D4K3+aaru/QykW/c5xJQbXy3AuwSbWtr0JsGV6ua
Ff3SqYStwsaxnLM0WK+5X+B2NAfQ7lwbdbPlhZdWCRu+v8MByEM6PTGQnV5Z
wkTekUv5hEilJQUOVA3Y+1ozoOvRCP80cj9A3lE5pihENZOFveNOxzZJEbK+
Rd7Rd6z3vqVML/aO/FsGer+ubMPece0u7fcqh1k4/0/8Yfjhn6eSAfKO2nRe
mauBFQB5xwip7wM6dzIByv877D86obiyEvtG5lKtivtdI9g3rt5wX9TAawr7
RmOVlD+Lhuewb/yX7nQrxo5KIN/oaXxiy8k4st/7n29cNdF8pO4ohUC+0eTQ
wsB7zEnsGxnl+9l0sxYm8o2CxTeTJ+5nY99Y91tSRnZ9B/aN5xTKrCiUfuwb
f/eIDMURHOwbTb9anDM7ygHINwrOZVMuifwFyDfWfAzetD67HSDfyKk5GTWo
WAOQb+Q7dfWk8vc0nAdYkHoiOWdJMc4DzGck7C30ywLIL8ZqqK0oJ+sD5Bef
bl4+bfd0EiC/mFYVEu+1dg4gv6jwVfJT7eV5vzh2VVNRdHDeL+aZZx0jVCaw
X5xew8M8IjuA/eLg4eYnjc5V2C9y71rjH9+TivMAyQ5wmbgDE/tF5QZlxhpm
KfaL+T9sTGJ2V2K/uFTMhRrG8xH7ReeP1hUGrGrsF7O9ODqbh2qwX+ReYbZC
NYKF/WL9TX3JOnI/Q37xTSqXyX5rNvaLA/ZMK9/TXdgvHrRVGOVMpOF8QffL
52DztxKA/OJdYc+XsrylAOULOmn2v1OgRWKveHokJVygbhx7xcTtR//2d89g
r6i/peT7iR8UAnlFBdcpVyGy/0VeUVd/JitGhUogr9j20rfMZvksE/nEo9Gd
NZ+sGrFP/PXxo5zBGTb2ie2QLByGB7BPfPtELdSqk4N94qofN4Ultw8A5BP7
I4qlN33pAShvUEpk/4L7Mk0AecUDZ+9USa5LAsgr5l7oPeGtWoLzBhMzLjUq
DMczkUf81K2/wuXTGEAecfWIl+G/9TMAecRr+rt7eOXnPaLBJdfEZSoUiDzi
+je5+wMeTWOPmPlLx1VSbAR7RJmMvidnZDqwR4w1m7NRcX2D8wf7X3ExQ2Ry
AfKIl6NvHSq9XIw9ov+MoevCiHLsEV2eLRC3Lv2APaKmuISzDKUae0Thl+EF
P21rsEe03kF7QzvBwh5xUQ2/xa8KFvaIxOZ/7nTy/EEecY3v3C/LGDb2iFft
4lYIjHRjj1hLVT33LfY9QB7xqqpWTV5wOUB5h8W7uGW/NocDywUvv0pzxkGH
oe8SGzsKgXzi29p33DYvqQTyiXVSL2Mfu1AJnclZldfr50BT/fdKLtc57BW1
F2pFfb7ZDda8eqJBK+SBE1feyTYZDID3WYs+9ReS+9XMzTW72Bwg8sDeePQD
L3SMtEs3bhzAvjE36DTbZrgIIN+4qmpziaAME+chTtbe2Nq8PZ+J/OKCw1WB
k3+mAPKLld8+qAnUzwHkFzkePO4Pzs77xRi5yxvLf89gv+icHH2tWCcY+0SJ
jgMn3q2vwT5x/75BS3c5FvaJ27oDRGKyWUD8vaLiSAgD+jvWbg0lz7PTZ6vP
b3qQA7wPeuw8PtCL8xSFtnZWTi0xZyK/+GqtZwx/UTlAfvF5Zj4jQ4AAq70M
xzpnJwBcWvbOYgsVe8YBeumme/lUYiNng0yI2CwopyZmLKmnEJt2z90I2skD
/RRLjFo6+0C1419VD3Ua1Bsy0BC+ygHx3Ctap/fywrvUvCOW6RyAPORPqarL
c/w+TOQhV95OyZxaWMpE3lF21dIv6mqzAHnHWkLXnnp83jt+ZjwdOfNlDvvG
9k0Nz7d6sLBv3N1k+0L6Cwv7xkq3s9f8CBa4U5IsO/b6KfjBTlrdmMZmbpKp
tu46WQwerO2hLQntwXmMK1ZyNStLZQPkHzWrH7b46lUA74LOg09KJoGz6SXx
Xw+pxFrpuif+RdOAd9u63TVBVEJzXZVPXxjZf4/0rTvSRNZ73psTlOJ44Ym3
lfqDyzkA+ckG9y4JdnAuzmOMnL0UrreaYCIfue7tv55ZtzmAfGRjKq0+x3re
R2r9ZiimCeZhD5kn4VysnsgC+QGXXp19wIBDjX20/37fod15r1khLANU638I
8djOZiIv+VTd6Lzd4zKA8huzDtHaF5D14eDbN/L2+RNgmeDG0AxeKvE6sTR4
N3MK2C3irmgh5794SmzhhS8zwNOKKdDITyVa7x7dsW4FDZr/eRAkrsIBCraN
YRPreeHtQnGt6c8cgDym5s6RlpmZEibylpHZ75/R9817y5rY47OeIhS4fnuD
0hodBmwcjBPMr2EB+Z0PuxJqGfDYpS9/+CtZYP03TqyNZyzIv1+XsN+fzUT+
8ryMvklTUBFA/tL36XXY5FoGRJSNr1tpToFa4p2KUiKVGBQaqZncPwMERq9L
PTxNJdR0DUWGWmiwc/MU/6O/HIC8Zp6M93eu/CIm8pnH9jIzly+hwGkjb43t
gsJw9aVHposNKRD5zKbedgdPcn3d6J4o9kpgQPkim78h5Pq71SzMlrEvAF95
vPldg3qZyG8uL1Rq+3e5AmySVipcsWsaiA/Ti79mUoksW0+V1uPk9Th9d0sM
44ANwWZSlEu8cCjztWn9Aw5A3jN7YTDt7LkSJvKchESLVqQFBXq6f54Ju8iA
hjT+HbLkfoA8Z5VphnosuV8EBuzRmH7kBYLUYCEng81EvjPYf0kCj2sFuBJf
tcD+1TS44LO8rieCStw1fdfL9qHB96XRvI61HID8515L+XBjuSJmY3nmxtet
dDhwuLd7tw35fN65d/SFGwNOP+8r/O/ztJzotrDUt2mgVUZz+eRhNhP5zyub
jVYuLC0FzrWWBjWvpoDhUpnNK8j+2TYma3JsKS9MeXLivsQvDkA+tJDoHbdN
K2EiD3pNz/6JnjoF6kUFa2lBBnxlcG3JVBULLDSNX28b9BYsSW+UvBHOZqq+
qdHfFNkJ5BR2+YUwysHA0QnZ4TVTwIz18ad1NJVwclOw49TSILu2t8qYnH/k
Rw1ZCZNcBQTTj1vuayqXMNw5HGHWSO4/e7+IOhZGMWBD2uNeva8s7EXVT9os
8dlQAfh0Gm9Er5wGfh9YDcdzyf1gVDVH8QANLt8Efsl6ccAl1q67s8d4IZ+o
wMHpVxyAfOnrujqVizUlTORHS5//5l51hgIT/gUIFJox4E3C8sZXsl9Peb9T
acAxFJhVAYdrSWwm8qR+6RI9gXPlYK7vz+Z/iTQYqyaurNHBAekXrs29G6TD
19lHIzZYznvSJcNraQ4F70BvzMEeuQAGfChXaOZJ1o/Il/ZFR+sIq5WDYp/V
bbm/p8Btv38Wx8n+9u+OSY0pZV6YlDwaJFLKAcifygV4nzVbXsq0kuhxdEml
w57uE8sOkc/HLiNVBSvbRBBAc6l668pmbl+aWtBiPgVoKhm1RWlUYnTp9axh
Dg2qf16T2U2ex8in2kvd2qflX8y8FNX5Lk9EGB4R4ORL7aHAqOlfAoaZDGgR
0Bhz/xMLe9R0/i6vsCcVQJ/bn/fpyWngc93Jop/sZ5FPVQ6wLaqrKWb656f8
/vOJDo2/+VLvWVHgSRGhAaer5HxO8wpJk/ePfGpCeYJsWhoL+9QzZ+VTG8nn
BflUSUkh6mnVXuxT11YGlDtrtWGfSh+Jze6eY+E8ysnRvA/dZokA+dTHvScf
zgVVAORTfzb6aX/fmwVQHuUTjdtnim5UYI+6tuDIhyusEexR1Wsl4ujXp7BH
vVAUUDTRPoc96hv3Z+36V6kE8qi9hq4KKglUAnnUvdH5TufNKATyqKoPWBPX
myaxR1VPGvZiJbUwkUc9WKPj6CSciT0ql9DyW1l/2rFHrbFYOCDZ/g971IQh
SSO3Ag72qKZ1AlM8p8j18j+PmpmeRovc+hcgj7ricz3/oq52gDzqZgOhHS/Z
NQB51AHTp2L1fak4n3KhkqRilFYxzqd8ZF2rkX8kEyBvKq3D5GvKGAbIm96l
WO+aIMcFeVOzK/mruMTmAPKm+ttHCs5dnvemBTHDSmrUOexNjwivjLIwnsDe
dNSMdafu6AD2pi5Tfb8tpauxNy1bVc/tHpeK8ykPmpoN1ugwsTfd6bPKiZNU
ir2p92e3dN/tldiburU8yueeqcLeNKmTp+NFZTX2pon739gd76/B3tTt3D+r
kFcs7E0Dtwh9SyLXM/KmUbntYu+vsbE3TQjfYvrNsQt706zvvNtSt2bgvEvn
jkpwKLAEIG/64oH/eX31UoDyLqfs5DNux77CvtS4darLomAc+1IefQk16W8z
2JfqBFUZmH2lEMiXBpatHZLIohLIl1Yetk7u2EklkC89VlOUvHnbLBN50i9h
z9a+b27AnpRWuUQ7VJmNPWnHWE/Nkz8D2JPqG6z/vqibgz3pBo9vRw5oDgDk
SeXOT/rGj/UAlH+5boFti+ejJoB86bduqdylBikA+dJum+oDLOESnH/58K8z
dag+kYn8KLtucdbB3DGA/OjFSzVxF4RnAPKj4kY3XjptnPejIpsPaH/aQYHI
j+aZrTtj+2Ya+9Fnu6ZPaO4YwX7Ua9Bw/eXHHdiPdqm93Gk8E4XzMKtk/XTM
B3MA8qNB/sPeSSbF2I8u3bloNfVpOfajSS7bfMxyP2A/eq0rT4xn4iP2oxJO
vV8P2NRgP7pgq9M6fRMW9qNrhU9v5yX7QeRHA940V2eT/SDyo4G1GqJXYtnY
j4a+K/HbINCD/ejgUOav4S6yLvqfH3Ueeh7xLaMcoPzNMO5A82UNr4GWhXdT
Ts84+GnOZXnamkIgT3oAUPR2hVEJ5El3Hrr9WdSDShzcGXxHc8UcyOgcUXV5
Ood9abKM0LLU3d1Amyg8LZHHA82cpNrXag8Afe17F5PzaLBZQX8zVy8HDFse
XD1bxguv7Q2I02kdwB71yc57j1ZGFQPkUZeoTj+38SrE+ZyiyjWjGd35TORN
34HpeMOGKYC8qdFFe79VH8l6/n/eVPuoQeDa8/PedMW/TxtqODPYm+7rb/gY
rRSEPWnGmZ7n3qtqsCf1pcVeAzIs7EkbHKwjr2axQHX2+O/iYAZUFPtMa67/
rx9Y99VXIAekfrCol5zsxfmesK144PjN20zkTaWKKzcqRpYD5E25grvnVI0J
MMlWn3UYnQBacoIiT+Wo2J9mhzaL/yD7gTtfLnguXTwLnolnhi/8SSEowjVn
zqnyQJ5DJuEviD7wL1TCNFCFBrvvq5a8seSAnQFPbxVo8cL99IP+9dkcgPxq
wCLvT4J3PJjIr/YEBH0+trSUiXzq5OUC3tWyswD51MHEzuzJY/M+9Sg9IXrz
7znsUfOVrhlNu7KwR00xHRJJ/MzCHlXNxPTXkyIWGPAU7L4V9wQY78u4G5BO
1otekgwWoxjs8HytR0/qwfmg356HPTPanQWQV81Q3RaUcKICzJX65afnT4K+
PXU5Yt5U4iYv/R9/7jR4+c9B0jmESnxJ0VyXEEyDRyliBm8aOeDvRW6HndG8
kGuFHCxaxwHIu7orq3Vu/5yD80Fbaqx6wywIJvKsrZe/XGXenAPIs4JDyt0H
Ls97VonlbdlOdu+xX904wfr+OZ4Frj3acnCLFwPO3XVwFyfr8QjRX/r+khmg
45XsOl4NNhP51tw4Ja0SszKA8kTPu1sekLteDKr5HyvzpU8Ag9r2lP0LqIR4
lg3NInsKPNIxdfcj51/01xGL3x9mgORh9tWhJVSC++3d4yoMGiS+qPGcVOAA
YtZAKXc1L7z54EkHrZ4DkJ+N3b/zpW1/CRP5WO2IvgRt7Xkfa9bR72a4jAKv
PNl3S3YvA4Y4XytbSvaDbdsNnznWMODXf15WzWQ/+Hv7a2/5B+/Ax4w9op1P
2UzkZef6rP6+3lsEkJdlhXoVHnpXBnx2zbb4qk0Byr5ft17FU4k9g1s33tCc
Ade1fL3YZ6lEVUNlfNpPGnTIsGWUkv0A8rVhKtPxUq5FTORpV3pYLGlYSIGr
KZx1oguF4fHPIx7pRhSIPO3uEPoOFyYLyLQR14zjGPCpuUOqEFm/f11iZfpg
PB84bqr+ERvVy0TetjknSjT+dAWIkv8lB5SnwS3jzaIN5Pn4PSD12MhRsj5+
o6z5MIgDcqQaCpjneeGJZM6x1485APlc46+X+qgeJUzkb48c/aNp+d/fs//U
1Hx7gQGtZJ8c/kn2K8jfOpZfMvyewwLOonM5c6/vgrjELzzSmWwm8rhmKaHj
V7wqQJEvn1l/4DQYeWigu/kNlRDpXuUe50WDow1i1ouqOQB53TVBF/dLWBYx
Z+wkhVyb6TAz1dT7KNkPat3S477owoD9Clt5GOT6E21QExSWSQOyjqzwq6Zs
JvK6w7wX1vf6lILhBvr7/qApsPhedIkD2T8tUJYPyF7CC+9t/7fErpncP/7n
ea+JflAyDC5hIr97oTWSsUqVAgNn+e7rajCgQGv6rZ1kP1iaa8q1NewNUKo0
DlJ/zWY+1HzveSGgE6z8YEgb31EOLM0ig8QkpgCDfU/8AXl/gotj+FM/0uCG
O72DX/s4AHnfFwXPYr7eJJjpKU9z/anCUGqXV/HoSQqcrP65wTeCAYc3l7TF
kuOLfO+r7LUu/PQK4HbIva1SdBqUC/h38JD97Xlxi8Y9+2gw50DB1Bl3Dpg8
kSlRaMQLwa1UnmVvOQB54MkhbvW5lhIm8r47xt5+v2NGgaP7uQzKTzGgqvr6
c7bkelrn+oJj6/kCJAs3apcns5nI/24b4hXQEa0A/o7nyhJjafDFefm/+9vI
9Uz/3uE1QIfP6NVtOy/N+98ulg8zJSQZvIwUCZx4TK6PTVsz/qsfkQeWs4n+
UUcvBzuefTD4+W0KPJW6vfME2Q+6VNp+y1PkhXa3+dZ8ruAA5IU1eq+qH2WU
Mk384994JdNhr8cl20598vrTuxbJ2ScA9QXX4qQ82cyk5cc3cplOgbnTx6Wd
U6mEVwT7YMZfGhTflnGj/g8He+IUjtn7sdPFTD8Dfb8XwsLQV6+c10iHAk3G
3uRKpjNgc8jJnyLk/o78cKthioyzTwUoF1S7mXlkGkymbPuxn+w3kSemm5yU
0xgrZroo3uAbYdGh0u3S9HRyPKKvum3ztGHAPTf6+frJ8xN5YmWHlGXj6Szw
dHvHyUV+DkBNV6VSmXxekC8+kxMdI/W0Auz92P9jZxMd5gyFmq8g13+czQ+z
BY4M+LjJO2+AHM+2nnPBSt5TYEVQ5E9ONpVYd2hl0XZeXngq+sXmkHYO9scD
PvvOnTxRwlR1yiLS30YCZqf5J6W3bOYm2UDVLSU0uPThw1Qdcnym+S546s/Q
4cyDOPVacwo8W2x1d0M4A3rW8C0yJK8f+ePX+9XPVf0qB1fO1L1fRJsGIeeH
5yTI/Rt5ZG+TNvvquRLmwgVGl28GPQe6swoN46lsZrHFstcRwx3gQdzSY2Xq
FSDl+eHhTRE0GFkqO/71FwessYpL3tNHhwv2fTTnsaZAWnAk55kPA7ZpXF30
3/3KvF0ut6ZiCpTnLTklSa4X5Je9fHx2xvCXMt8VfHfe1kmDmlsPbpUh91vk
kf37WuCG2xUgY6XPoUntaRCwq8ixIINKVG/0/9jpKggPphjY8WuVME1WTp3g
/UiHgQHN6sUXKXCH9Jm8Z5cYUIt1P/Iaef/JS3xLxh19QJxvzEQ42b8L/mxw
uJ/ZAX7u+aD35wb5/hIH9xS106H8WtYROjlfjR6F7z56MKCK5Mr29eR+xVPB
bI2LmQLb1oytTyCfX+SdW/J3Byd8IJ/Pwewfil9p0GZqt+878vqRdx7W3Fgx
SY7XE6DA6ylF7p8Db4VCcqjYP3Nf2SLMl13C3DndbH/FNhycW3shdiCBzbxi
diNQPo0GFTrSqri6OMAvl1eiapgOl9n3+nEsKBB56I7hH7+efo8ASon3d5x+
xoBnNv6LNCLH+8BdhxtBXVMgZvtwlDY53shHH1uZv9R3eSnT4v6UpPIoDdZt
BberyXoX+WdPxq7Duc8rQOSevxltX8j9oUSqU52cT+HcVwnXbRnwepl73DHy
/ZF/9nldXWuRygLnLFe+WHWQCin//08I8u/9Y6KtthT9nwhtcNHyLefCrxct
/Lb16ez86/8HvZ5Qqg==
          "], {{{}, {}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{499, 484, 454, 455, 456, 3807, 3809}}], 
               
               PolygonBox[{{468, 526, 524, 509, 991, 840, 721, 633, 573, 1019,
                 868, 749, 661, 1050, 899, 780, 1082, 931, 1113}}], 
               
               PolygonBox[{{437, 525, 419, 932, 781, 662, 1051, 900, 574, 
                1020, 869, 750, 510, 992, 841, 722, 634, 469, 968, 817, 698, 
                610}}], 
               PolygonBox[CompressedData["
1:eJwV0DcshVEchvHPZcCkhUUfDAaDFou6SCTKvRIrMZKok0G0wWBADAaJxKDt
yqCM2qwbDdpIGBj8zvDkfd7/Oec7OV9J/3BiKBZFURIm8UyukJ8cRZsW2pGB
F7Nrs3qc6eFQJY7M98wKsKV3IDPs17vwwGfwat+N3oBzfRhpKVE0pv/yKnzz
XrzyJeRan9JTcez8vizEtrVCa/O8kyfxAf7JK/gqzwp3yjiazB71Mrmoz4Y3
8QneJmOyRq7LHvnmrlveGN6rX9hfKhfCfXJET5fjeqv8C/9Crundslr/4X1o
Cd/Ty+WKvszz+DRPQx3fkCfuPJBF2LGnCzFrg/oXz8YbT+CJz+HdmbvwPlzq
o6jBqfmhWTF29Thy8GF+b9aMK30MtfgHkV0+4Q==
                "]], 
               PolygonBox[CompressedData["
1:eJwV0TtMU2EYxvGDYKuTiW2FhYHBQVASE68JCYNcJAGJJCwKCwMWB6ubg61O
DooMDAxIUUcFWiZGL2wkeFkQgnhJ2rK3MqAL/L7hn+f5v+93zunpaRnLDN07
EkVRHeaxpqzgLd6FrI+ik3jp0DXUo8T7saFnse3cOr+I93wcsYYoyvB9vRVV
/RZK+nMk7B/xo1gIz5IJzNl1oQFlPoDveg4/nPvML+EDv4O4+9zn//Q21PTb
KOuTSNpneQyLrl+QSeTtmu2e6t36gUyjy6zKz8mZ8Pv0iryBTrNNflpO8Zvy
MT8hH/I+WScvyLwcljue+UW/jA7+0fkW+SzcU6b5MfmA98j//Lyc5Wf1v3IE
Ff2M+bT+Qk/pOT2OJc9YlCnM2/WED2o/wWvhW2BXH8SW/gQ/XfOVX8EnPhHe
GXt8FLv6FArOLfFTeMV7w3+OX+bfzK5ild9FO4rmBbNGvObXw/vht/kyiuZN
eGPWh+P4Y34IUzFPBw==
                "]]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Opacity[0.2]], 
             GraphicsGroupBox[{
               PolygonBox[{{457, 458, 947, 442, 441, 440, 486, 527, 588, 676, 
                795, 946, 439, 561, 621, 709, 828, 979, 485, 3808, 3806, 436, 
                655, 743, 862, 1013, 560, 620, 708, 827, 978, 482, 523, 587, 
                675, 794, 945, 435, 559, 619, 707, 826, 977, 481, 522, 586, 
                674, 793, 944, 434, 433}}], 
               
               PolygonBox[{{499, 524, 549, 609, 697, 816, 967, 467, 508, 548, 
                608, 696, 815, 966, 466, 507, 547, 607, 695, 814, 965, 465, 
                506, 546, 606, 694, 813, 964, 464, 505, 545, 605, 693, 812, 
                963, 463, 504, 544, 604, 692, 811, 962, 462, 503, 543, 603, 
                691, 810, 961, 461, 502, 542, 602, 690, 809, 960, 460, 501, 
                541, 601, 689, 808, 959, 459, 572, 632, 720, 839, 990, 500, 
                647, 735, 854, 1005, 540}}], 
               PolygonBox[CompressedData["
1:eJwVzjsvg1EAxvHTi1FdZgOJFIlBkBgMVGJBly5qdU0MtTGwSlRiMAg1Gery
BVjwATASl037AbSbyeV3hn+e//O873nP27O4USglQwgJrOOa3OAKH0h6OIVT
dKTsuLTv63Us6E0M8BXcY1R/wnv8qNxCJh3CjmcHvJe/8FleR4IfyUF7k6/x
X+R43rbLu2RFH5ft8R9w4ftF/YyPybSck9uyU5a9X5CHer+s6TlZ1Btx0yty
yPbNp2VJb5HLepl38zs+wh/x5s4/fZO3xrv4M2b0GgJvYJX/YJKfoC3+L86d
39M/Ma9/oY8v4RbD+gNe4z2YsB0jE8+iasvq/46qNjo=
                "]], 
               PolygonBox[CompressedData["
1:eJwVzzssnWEAxvGPY8JioMogx+0MHQwSWhKDViOxiNuxYlUd0CbdKtoYDCec
oUMTiVHdRve7yW1268LEKW2Tijap+H3DP8//ed73zXdOtPttS196EARpSOCC
XOI3Ch10Yh6xSBCsYddeq7/HEV7bzvHLXqDHMYdy2yp27Ek9hR79H2r4Oxyi
QT/DT/c+69/RrqfwlN/hDc/ICIIOPosyfQXb3kzKF86y5FD4ho+7k+TP+DV/
Kbv1v+FdvU3/yivlg94oB/XsMPVmOaqXyAO9Tr7ST3Hrm3F9glfJiGySH2SO
/OR+gsf4efgtfo18/kVW2P/wXh7h7XyEF/EZXsqXseU7mfJj+NbZmLMrdOn3
eM7/Y4BnOR/g++F/1U9w4/2wfoZW/QpPwt+DaZToS9h0r1rvxx7qbcf4Yc8L
3+Ibim2L2LCnkGtrwRSi9gWs2x8Bm9lMUw==
                
                "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1WWYllUUBdAZukO6GVKkQ7ETERMJsUUBRUBpRBRxVJQGaUkRuzDBVrBb
UAm7Fbs71378sWafc56P+733vXeGokGj+o4sLCgoWOtHspsfb8pFDKYHXSlB
SUpRmjKUpRzlqUBFKlGZKlRld+u9JRczhEPzHUnzL+X1jOc4qrGH+dtyCWfS
k35mv8t7uDRrZm72lbyBCQzgFLMSPKyeRXW669+RSzkra+or8pT6MPqr/5D3
chlj9HXYkmfJZ9Rfyxs5jxH66rygPp5T1SV5JM8md2V2PisbsoRt+pmyE1ez
i35P+a6cK6+SF8imLGNonlVWYiFP6y+XbVlJr7wv+aecL9fLYtmKqeqxsi6v
qmfIjnRX95LfyJu4SN2ciepz8ky8qD6B09SleFQ9hxrspX9PLuNsDs87N/tL
bsjzZU+Zm30rb+Z8TqQme5u/L5czjCOyZtL8O3kLkziJWuxj/oFcwXCOzBrU
pg51qUd9GtCQRjSmCU0pohnNaUFL9rXuh3JlzpKj8l1Z3/x7eWvOgpNpxX7m
H8lVeU8cnXM3+1vexxVZM+uY/SBv48LcRQaaleaxnDOt2V//sVzNuQzVV+YZ
9TF5/+p/5P1MY5y+Hq/lWfL96h/l7UxRt2By1pI1eCl3ktPVZdiYey3bME89
UTZiKdv1s2Rn1uTu6g+Qn8h5uavZiyxiOSNz9rIKi3g2+5ftWEXvnLf8Vz7A
9Ow3+zL7Sa7LvSN/cGrycu4aZ6jLskl9JW04UP+pXMOo3Bl9VZ5TH5t7kj9W
PCguka2ZoR4v6/N69kJv9c/yDi5Wt2RK1pS1WMwreVbZgdUM1A+S5VjA4/qp
cjdWMD93WzbO7y479LNlF67J5/QHyc+yn8zkZNmM0bnPshrP54xle/rkzslC
HlLPZIK6AVvzPrJv9S/yzuyF0frabM55M1hdnifUC2jLwfqdci1j6Jtno4/5
r/IuinMGtOMQ88/ltYylX9agPR3oSCc608Nnv5DX5Z7SP/8+32H+m7w7Z5N3
yRCzCjypXsgkdRPeUM+RXQv//z+oi/4/ev62DQ==
               "]]}, Annotation[#, "Charting`Private`Tag$464245#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV00VsFVEYhuEpFA/FHRKaIMXdCVq0SCAhOAvcgmyA4AsgWCGQ4K5Fi7PA
bYG7a6EUdrRYkADlOYv3fvKfM3Zn4odO7D0hJoqi5n52YGfOKCqI1TmiqFxs
FM3jW/F/6Ah84v9Zl8Z3wX15Oh7prsr1cEoeihO6KnQn3aWPwxq5NbJ1j3FN
Vx+ndcNQFZ/kvkjjF2KXdbvlQlgrt8FffiQy+Qhv+a54wM9AQdc+Rc7mn9h/
nW+AM3JFs0X8cD4XP4HvQH/Idek6OYHPpP3QVvdWTqAr5N5hv1yUzpC70Vja
hG4Ne+hu50zhC6NFOKb15el8uTttG54jPwpZfE3dKj6Gf0eT8JCvpE/mZ/Jx
/FQ+wlPHv0Eb4qzZCFRDltwf7/jFSLFuj1wE6+V2yIFnocdJ7MW+oNYUxQbz
9siJ9HB/eMTPwnPrbsqNcE4eidyua6L8k6+Oz/wApPNLUMx8ppwL+8O5aDFs
NEtELN6H54LH/Gy8sO6W3Bjn5VHI4ziT5F98DXzhB+I9vxTFzWfJuXHA/v20
ODaZVTBbEP7n8O7R0UjUfZZr0dXh+vgM2gOtdU/kynSZ3IvOkQvRaeHdpzHh
+dNNtA996Zy3w3uAlvIF6+Pp4nBMOlrOSyfLHelvuR5dL9fkv9JByAj/pX4l
n8yX4GfzeXDQOQ7QEths1jG8/+Zj5C/hv8AHvmd4R/i5eGXPHbkpLspjwj3j
mzwYH/hlSLXuoFwSW+RO4Znjtf6urhkuyWNRG4f0qbpS2Cp3DveHN/rDOKQv
jW26LsiHtPDN4wiOhnXmZbDdrCvyh29Zf0/XHJflcaiDY2Gfrix2yEkoEL4X
/f3wneGKPD58x/guD8FHfjmOW/c6Lor+A0IbnoI=
               "]], 
              LineBox[CompressedData["
1:eJwV1FdsSFEcx/Gr9WDFHqW0tEZCQoxW7T1iq/mGerNqCy/2SEjMhIQQYu/Y
e4/aD7ZaiVVtbWqLz3n49jf+5/b03HvSGhmZ6WMKRVGU5MfzklH0it6OjaKW
uBgTRaPREIf1+3Tx2Cj3QCm81h/BURzDfvOrtCrdZN4TpfFGd0fXCpfkMWiE
4/oDumrYLPdCmbBe7oOH/EzkWHdXbo3LciaKFo6i8fJvvjEK+CHI4Zegovl0
uQhOeP4gTcAWswSz+XxvvhA/gv/C1+dX8mXDnrQv2uoeybXpYnlWOBM/le9G
Y2gKXUsH0rf2use3CeeVs6xPogvDfnSsXIxOkLvQP+Fd0NVyP9pE/s4PRfvw
++S6dLm8lK/Ez+CLIo1fT0/a8xBNxFZr+iDGbKT8lS+Ht3w6svnZyPXM/XA+
XJHHIQWn9Id11bFN7ovyyNM/0LUL31gej1S80J8O90BfA9t16aiAfP2ZcD/0
Sdih6xe+Dd7pH4Yz4po8AU1xNtwlXTJ2yv3DmcPfG94PHvNz8N66R3IHXJcn
orgzT5T/8mn4wQ9DLr8MceYz5WI45/njtCZ2mSWaLeAH8LH8KP4b34BfxceF
d0D74wlfR7+EnxvuLD+N705jaSpdRwfRD/bJ5juG+yvfsD6ZLgp3nE6SSwSV
u9J/4T7TNWEv2kz+yWeEs8p5cj26Ql7OV+Zn8cXRjN9Az9vzBK2F3dYMRGGz
0XJBeCZ8m3BWPOXn4aNnHsudcFOejOb4JQ9HPr8CF6w7KdfGHnkQquCT/omu
M27JU9ACF/WndHWwVx6MeHzWv8QlXEYWnvkf9B8k15Wg
               "]], 
              LineBox[CompressedData["
1:eJwVzLkyg1EcxuG/pcy4AGOLZcZObailVpgJYhs1LbXCFbiCXAFBqOwUtgR1
Mi4gVWyxzHgUz5zz/r75TnJ5bWq1LiIyvDRFVI2W+ohKQ8Q0ZfctXvWSPUnB
XmecG/1Y62XHTtPKm37Lid7HrjZDG+/6Had6PzltlnY+9HvO9AH2tDk6+NQf
ONcH2dcyJKnpBS70IQ60eTr50otc6sPktQW6+NYfudJHONQW6eZHf+JaH+VI
W6KHBL++lfUURXuDif837RUq7ts0N0Zs2gnG3LPOtPPZ/3/4Tzaj
               "]]}, Annotation[#, "Charting`Private`Tag$464245#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwV1mW4FWUUhuFNp00qaWMgggGCYAEiqIhJd8ehRBoEQUBSRLokLMAEQUnp
7ka6u0MEvNeP53pjzZx99sx83+y8tZIqNEuWSCTypUgkKqVMJCakTiROpEok
quCy/Cv6ojImmp3UV8UV+Tf0w3L9Xeimz4FtuiqYpDslV8NV+Xcc0T2FcboX
0F+3Qr4b3eWcyJTG+fJqfrv5v/wr+E1+Mz5fN1k+zVfHNTmdc97R/S1Pl4/y
BTBeftGsB1+Uz8s35Hfw7/DD+QGOX0nvQVXdZ2aFaVe5Jc0lZ6ZV5QZ0jVyO
fiV3pDucf51/FbXk381fpV/Ibehbcj7aQm5K98vv09FyNed+S8/oaqCgvr38
rz49X4FfqJ8hH+OfxjdyMQzUrZIzoYecGzt11fGd7qxcE9flP3BcVxAT4ppg
kG61nBk95TzI4jOryWv5Xeb/8a9huvw2HjNvKR+I/9f8e/4cXwuFzDrI/+kz
8O/y9egiszJ0kNyezjQ/wRdCTXmieXHaU/6YFpfvp43kJnSnXIGOkLvSL52/
hs8S10/+3LwI/VTOy2flq/Pr4nnhh/D/OOcGLYkZ+tf0ffny/ON8K/5gXC/H
/cCf52vjhpzR/D3dYnmWfJJ/BpPkEhisWytnRa/437Fbd1MuhT/iWYtrpPtR
vsDXwU35T5zSPYvJupfwlW6dnA295QewR1cbU3QX5bq4Jf+FIVivz44++gex
V1cHU3WX5HpIYLbua9TFNLPLuvpIhjm6oaiH+miAhvjJcVfMGyA55uqGYYP+
Xnyhewj7dI3ws+6q3BApME83HBv196Gv7mHs1zXGL7prciOkxHzdad1z+FZ+
GSN0m+Qc6Cc/gmzuSw15PX/A/BZfGjPjeUGT2L9iLfGNkQq3Oed93RJ+gfkZ
/nl8F/cynqXYa+Ka8435XfxIx23mc6J/7Ftm3fhH+ex8Tb4h3SC/Rb+WO9GD
zkvQ1+XadJZ5SdpP/iTWh/wEbS03o4fkD+gY+VPaNPZY/rq+styEPkM76lLz
t/Mf8Ev5N2JdxP7nnLO0ML6PfSiehzg31gA/ynwLnyv2vdiXcK95LXkjf8g8
mVxG/lN+D81i7451zTdFGizUjcZWfW4MjL0Bh3VJmK67EeciLRbpxqA5WmCG
+U19EtJhsW4stunzYFCsSxzRtYz9S3dLbo70WKIbh+2x5vFlXEsc1bXCTF0C
LXQZsFR3Ti6CH2L9Y7xuh3w/BstP4j7fvba8iT9mnlx+Q/4r9uw4Rv5YPsy3
Np/FJ4v3hJwRd5h/KC/jl5mf51/Aj7G2zXrFHhTrJe4vv5t/lx8Z+7rjd9IH
UD3eL2ZFaXe5Fc0v56B15EZ0c+zJdKjcmR53fgpaVq5DZ5uXov3ltvGsyPlp
GzmJHpE/pGNj3429iCaPz9I/q+/E38bfyX/EL+eXO+4CXxRT4u9jgm6X/CCG
yE/hhK5N7E+6FGgdzyvu8rcqyiv4FeYX+WKYGuvcrHes4dgf+Gb8nngG+VH8
RMf/Qx9CjVhnZsXifR1/nxaQc9K6cmO6RS5Ph8ld6Ennp6Tl5Lp0jnlpOkBu
F/ct/nf6idycHpU/ouNivTp3Nk0Z10r/nL4zfwd/N1+JX8mvdNwl/kVMk1+P
vco8Sd7LTzLfzT+MofLTyGVeT97KnzJPJb8pz43PR1vdHDkV2sT9wCrdZbk4
fpLLYLJuj/wIhskFcVrXDnNjz4jvEfcAq+N3B/bGPobhukI4o2uPebo08dzE
98Oa+E2BDpivTxvXTH8P1sbvAHREJ3TGAvN0aG+eCevivYp9unwYEXsZzuq6
4G9denTQZcb6eFdiv+4xjIxnEud0XbFQlwEddVmwQXdFLoGfYz/EFN0B+XGM
inuG3K5tfXkbf948dfw+k+fFveIH8hX5Anxb/hhfkR8fe7LjF9GMqBLrw+x5
2iX2GZo1rgetLNenq+SydHB8L7rR+Vf5l/CL2Su6PnxZ/lG+Ob+Pn+q4g/wT
GB2fgTzmDeTt/AXzNPLb8ny5ErrpFsd6jb1AzoZNumvyy/hVLodpukPykxgj
F8ZFXXcs0d0ea0WXHZvj3Y/PsDSedXSN9wW2xHsePdATn6MXeqMPljn2zrhm
sadia7zncViXH2N1RXBJl9Z3Ka9bIFeONSG3k4/Hd+O/4bvF72nH/g99s6M6

               "]]}, Annotation[#, "Charting`Private`Tag$464245#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$464245#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$464245#5"]& ]}}], {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], DisplayFunction -> 
         Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
         All, DisplayFunction -> Identity, AspectRatio -> NCache[
           Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> 
         NCache[{None, {-Pi, Pi}}, {
           None, {-3.141592653589793, 3.141592653589793}}], GridLinesStyle -> 
         Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}, "AxesInFront" -> True}, PlotLabel -> 
         FormBox["\"Backward Integrate feedback solution\"", TraditionalForm],
          PlotRange -> {{0., 6.24999987244898}, {-4., 4.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Theta]1c\"", "\"u1c\"", "\"x1c\"", "\"\[Theta]dot1c\"", 
           "\"xdot1c\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 5.024993653200595}, {1.6835964329282076`, 
          38.08771481146853}}], 
         LineBox[{{2.3129098620234356`, 38.08771481146853}, {3., 
          4.484978691123463}, {4., 11.225834351124615`}, {5., 
          3.8916048484669927`}, {6., 12.02673560528023}, {7., 
          3.51205157318102}, {8., 32.21570027270748}, {9., 
          3.1750275504544603`}, {9.623089512626287, 38.08771481146853}}], 
         LineBox[{{10.375080759206115`, 38.08771481146853}, {11., 
          2.9016929418084154`}, {11.424186750130533`, 38.08771481146853}}], 
         LineBox[{{12.5748123674714, 38.08771481146853}, {13., 
          2.7572587494058793`}, {13.306357365409376`, 38.08771481146853}}], 
         LineBox[{{14.693982642629337`, 38.08771481146853}, {15., 
          2.8137604467158415`}, {16., 2.6815364145754117`}, {
          16.302868291996777`, 38.08771481146853}}], 
         LineBox[{{17.697821300953056`, 38.08771481146853}, {18., 
          2.7970608448736716`}, {19., 2.6211592174515297`}, {
          19.364834355919452`, 38.08771481146853}}], 
         LineBox[{{20.63591518528316, 38.08771481146853}, {21., 
          2.7357420621459014`}, {22., 2.5659789283609618`}, {
          22.566533750937616`, 38.08771481146853}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQHdqc0cCTb+7wKkDb1orb2YEBDCwcSo7JOoQ9ZYHy
LR1Mtki3bGaB8a0cqoW+nQ075gDlWztUvCmwetDDDOXbOMRq2dzYZWQA5ds6
LLSV/Py0kxHKt3MQn36s4IKlPpRv7/B5k+sGw/R/9hC+g4Nhf2iOSa8mRL7B
weH5uyuX91j8gso7OhitqrsmbKYClXd0uObzeLHU0W9QeSeHpRHTZXu3ykPl
nRy+l57axfbzM1Te2eEM17FAhVMSUHlnh4aL0VHt6z5C5V0c7m4s/PE+Thgq
7+KQVMT7SbvtPVTe1eHQyu/CfxL5oPKuDjvUucNtrd9A5d0cYlI5j7mzcUDl
3RwKWW8WuEe/hMq7O2jE8D7MMIeGV4O7w+XHHkJMF59B5T0c9JUUUzPl/kP4
DR4OJxyULNaoPYHKezqs/6lRcrjzB1Te08Fpvvw51aiHUHkvh0jjC8+bp3+C
yns5GBc4ry39dAcq7+2QlGCxS7b3FVTe22HFuTD9TrXrUHkfh9XenjNOaUDN
a/BxaNv0w6409yJU3tehtvb/nT/Wl6Dyvg4Gp+3vF+49DpX3c6jmKjy+6cJ2
qLyfg6L8gwsP1f7aQeT9HTidFfVfLGawAwCtAbQs
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 3], 0.3333333333333333],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 62}, {0, 38.08771481146853}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.864135238134066*^9, 3.8641352749121633`*^9}, {
   3.864141785675068*^9, 3.864141806351376*^9}, {3.8641418573518705`*^9, 
   3.864141877509347*^9}, {3.8641430855573835`*^9, 3.864143092071275*^9}, {
   3.8642366967041645`*^9, 3.8642367176523905`*^9}, {3.864399155322939*^9, 
   3.864399158330961*^9}, {3.86440857096957*^9, 3.864408661724055*^9}, {
   3.8648341044365063`*^9, 3.8648342718877172`*^9}, 3.8648343438895884`*^9, 
   3.864836382489744*^9, {3.86483642449925*^9, 3.864836438654703*^9}},
 CellLabel->
  "Out[1154]=",ExpressionUUID->"c1b3ee17-715c-4dbc-aa61-029e3bf5e59e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.7632024466059455`", ",", "4.909828194358805`", ",", "4.829469291927946`",
    ",", "4.829469291927946`"}], "}"}]], "Output",
 CellChangeTimes->{{3.864135238134066*^9, 3.8641352749121633`*^9}, {
   3.864141785675068*^9, 3.864141806351376*^9}, {3.8641418573518705`*^9, 
   3.864141877509347*^9}, {3.8641430855573835`*^9, 3.864143092071275*^9}, {
   3.8642366967041645`*^9, 3.8642367176523905`*^9}, {3.864399155322939*^9, 
   3.864399158330961*^9}, {3.86440857096957*^9, 3.864408661724055*^9}, {
   3.8648341044365063`*^9, 3.8648342718877172`*^9}, 3.8648343438895884`*^9, 
   3.864836382489744*^9, {3.86483642449925*^9, 3.864836438729679*^9}},
 CellLabel->
  "Out[1155]=",ExpressionUUID->"1111cdea-9364-411a-9d7a-48c656ad0aaf"]
}, Open  ]],

Cell["\<\
Observations:
The choice of n is critical and would determine the speed of the algorithm. \
Smaller n has higher speed but may not converge and hence would require a lot \
of re initializations of the initial guess, while a larger n would not \
require a lot of re initializations but would take longer to converge. A way \
to choose the best value of n for a specific system would be extremely useful.
Furthermore we have been outputting the distance of the initial guess \
propogated to the other boundary and the desired value. We are doing this to \
design a stopping criterion. 
Another useful quantity to observe would be plot of this distance as the Find \
root algorithm progresses. (We want to see if it is monotonic)
\
\>", "Text",
 CellChangeTimes->{{3.863704362873541*^9, 3.8637045081791234`*^9}, {
  3.8638919339126487`*^9, 3.86389212755976*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"]
},
WindowSize->{1428., 735.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f891f112-c914-4bf5-b27c-d7c0d8607b34"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 60917, 1511, 1740, "Code",ExpressionUUID->"b098c715-9c30-421d-bfce-eae26b7e4e91"],
Cell[61478, 1533, 354, 7, 66, "Text",ExpressionUUID->"9be2365f-c4bb-4396-8de9-0c9df9f460d6"],
Cell[CellGroupData[{
Cell[61857, 1544, 8155, 225, 249, "Input",ExpressionUUID->"53d64360-9130-4d93-aa11-669324ba78f7"],
Cell[70015, 1771, 41984, 777, 185, "Output",ExpressionUUID->"0a2e301a-2c13-46ae-bc1e-ab7827d66d7a"],
Cell[112002, 2550, 49618, 903, 186, "Output",ExpressionUUID->"d1422a96-2a32-4a20-91b2-ea51205fa35c"],
Cell[161623, 3455, 48351, 886, 185, "Output",ExpressionUUID->"03f4b302-9cb5-4d8e-8007-4a77d652049e"]
}, Open  ]],
Cell[209989, 4344, 258, 5, 45, "Text",ExpressionUUID->"b6d5a503-f5ca-471f-9280-ef8cf6caad0d"],
Cell[210250, 4351, 34862, 856, 950, "Input",ExpressionUUID->"af3ea33d-8e3a-4566-b4c0-08bbf9c4fe8b"],
Cell[CellGroupData[{
Cell[245137, 5211, 11725, 328, 506, "Input",ExpressionUUID->"3024c605-13d1-4af1-8ddb-6b0488dd66d7"],
Cell[256865, 5541, 1315, 22, 28, "Output",ExpressionUUID->"20d08a47-13e7-49d1-aba9-f2247d737285"],
Cell[258183, 5565, 411, 10, 26, "Message",ExpressionUUID->"829e472f-c07a-47d0-bf5a-30bff648d661"],
Cell[258597, 5577, 772, 15, 26, "Message",ExpressionUUID->"edfd5e57-3090-4af9-a3e6-1c486f1b4bb9"],
Cell[259372, 5594, 223397, 3951, 361, "Output",ExpressionUUID->"21841473-7184-4869-8878-0909c2868a09"],
Cell[482772, 9547, 1320, 22, 28, "Output",ExpressionUUID->"230b3cdf-7d4d-46d9-9af2-204d4e0a6dea"]
}, Open  ]],
Cell[484107, 9572, 179, 3, 25, "Input",ExpressionUUID->"e3b56381-3091-428c-953b-8049828b4235"],
Cell[484289, 9577, 203, 3, 45, "Text",ExpressionUUID->"78f72274-21f2-4a3e-a828-5906a5fe2643"],
Cell[CellGroupData[{
Cell[484517, 9584, 10133, 274, 301, "Input",ExpressionUUID->"b5dee5c3-2101-40ff-b338-91333f517d06"],
Cell[494653, 9860, 468, 11, 26, "Message",ExpressionUUID->"76a81809-20f4-4ac1-8b9c-1a5bd61e40b8"],
Cell[495124, 9873, 264846, 4637, 361, "Output",ExpressionUUID->"c1b3ee17-715c-4dbc-aa61-029e3bf5e59e"],
Cell[759973, 14512, 769, 13, 28, "Output",ExpressionUUID->"1111cdea-9364-411a-9d7a-48c656ad0aaf"]
}, Open  ]],
Cell[760757, 14528, 965, 17, 149, "Text",ExpressionUUID->"4eb81403-a99c-42b7-b4a4-36ec4bd675dd"]
}
]
*)

